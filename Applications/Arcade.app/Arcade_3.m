uint64_t sub_1001A0B28(void *a1, uint64_t a2)
{
  void *v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  char v11;
  v3 = (void *)*a1;
  ObjectType = swift_getObjectType(*a1);
  v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ReusableFlowViewController);
  if (v5) {
    v6 = v5;
  }
  else {
    v6 = 0LL;
  }
  if (v5) {
    v7 = v3;
  }
  else {
    v7 = 0LL;
  }
  if (!v7) {
    return 0LL;
  }
  v8 = swift_getObjectType(v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  v10 = v3;
  v11 = v9(a2, v8, v6);

  return v11 & 1;
}

void *sub_1001A0BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  uint64_t v73 = a3;
  uint64_t v69 = sub_1000031E8(&qword_1002EAAE8);
  __chkstk_darwin(v69);
  v71 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000031E8(&qword_1002EAAF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v17 = __chkstk_darwin(v16);
  v19 = (char *)&v65 - v18;
  v20 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 16);
  uint64_t v72 = a2;
  v68 = v20;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v20)(v15, a2, v12, v17);
  uint64_t v70 = v5;
  uint64_t v21 = v5 + qword_1002E1B90;
  result = (void *)swift_unknownObjectWeakLoadStrong(v5 + qword_1002E1B90);
  if (!result)
  {
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }

  v23 = result;
  id v24 = [result traitCollection];

  sub_100166440((uint64_t)v19);
  v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v15, v12);
  v26 = (uint64_t (*)(char *, uint64_t))a1;
  sub_10000611C(a1, (uint64_t)v11);
  uint64_t v27 = type metadata accessor for FlowDestination(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56LL))(v11, 0LL, 1LL, v27);
  char v28 = sub_1001A31F4((uint64_t)v19, (uint64_t)v11);
  sub_100006060((uint64_t)v11, &qword_1002EAAF0);
  uint64_t v29 = v12;
  if ((v28 & 1) != 0)
  {
    v65 = (uint64_t (*)(char *, uint64_t))v25;
    uint64_t v66 = v12;
    v67 = v19;
    uint64_t v30 = v21;
    result = (void *)swift_unknownObjectWeakLoadStrong(v21);
    if (result)
    {
      v31 = result;
      id v32 = [result viewControllers];

      uint64_t v33 = (uint64_t)v71;
      if (v32)
      {
        uint64_t v34 = sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
        uint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v34);

        __chkstk_darwin(v36);
        *(&v65 - 2) = v26;
        v37 = sub_1001A0A08((uint64_t (*)(id *))sub_1001A3958, (uint64_t)(&v65 - 4), v35);
        swift_bridgeObjectRelease(v35);
        if (v37)
        {
          result = (void *)swift_unknownObjectWeakLoadStrong(v21);
          if (!result)
          {
LABEL_47:
            __break(1u);
            goto LABEL_48;
          }

          v38 = result;
          id v39 = [result delegate];

          if (v39)
          {
            result = (void *)swift_unknownObjectWeakLoadStrong(v21);
            if (result)
            {
              v40 = result;
              id v41 = [result presentedViewController];

              v42 = v67;
              if (v41)
              {
                result = (void *)swift_unknownObjectWeakLoadStrong(v30);
                if (!result)
                {
LABEL_51:
                  __break(1u);
                  goto LABEL_52;
                }

                v43 = result;
                [result dismissViewControllerAnimated:0 completion:0];
              }

              result = (void *)swift_unknownObjectWeakLoadStrong(v30);
              if (result)
              {
                v44 = result;
                [result setTransientViewController:0 animated:0];

                result = (void *)swift_unknownObjectWeakLoadStrong(v30);
                if (result)
                {
                  v45 = result;
                  [result setSelectedViewController:v37];

                  if (([v39 respondsToSelector:"tabBarController:didSelectViewController:"] & 1) == 0)
                  {
                    swift_unknownObjectRelease(v39);
                    v47 = v37;
                    uint64_t v46 = v66;
                    goto LABEL_39;
                  }

                  result = (void *)swift_unknownObjectWeakLoadStrong(v30);
                  uint64_t v46 = v66;
                  if (result)
                  {
                    v47 = result;
                    [(id)swift_unknownObjectRetain(v39) tabBarController:result didSelectViewController:v37];

                    swift_unknownObjectRelease_n(v39, 2LL);
LABEL_39:

                    return (void *)v65(v42, v46);
                  }

LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
        }
      }

      uint64_t v52 = v72 + *(int *)(type metadata accessor for FlowPresentationHints(0LL) + 20);
      uint64_t v53 = v33 + *(int *)(v69 + 48);
      uint64_t v54 = type metadata accessor for FlowAnimationBehavior(0LL);
      uint64_t v55 = *(void *)(v54 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v33, v52, v54);
      uint64_t v46 = v66;
      v68(v53, v67, v66);
      int v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 88))(v33, v54);
      if (v56 == enum case for FlowAnimationBehavior.infer(_:))
      {
      }

      else
      {
        if (v56 != enum case for FlowAnimationBehavior.always(_:))
        {
LABEL_30:
          sub_100006060(v33, &qword_1002EAAE8);
          uint64_t v57 = 0LL;
          goto LABEL_31;
        }

        v65((char *)v53, v46);
      }

      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v33, v54);
      uint64_t v57 = 1LL;
LABEL_31:
      v42 = v67;
      v58 = sub_1001DBB88(v26, v73, v74, v75);
      uint64_t ObjectType = swift_getObjectType(v58);
      if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ResetsSelectedTab)) {
        v60 = v58;
      }
      else {
        v60 = 0LL;
      }
      if (v60)
      {
        result = (void *)swift_unknownObjectWeakLoadStrong(v21);
        if (!result)
        {
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }

        v61 = result;
        v62 = v58;
        id v63 = [v61 selectedIndex];

        v64 = &v60[OBJC_IVAR____TtC6Arcade19ErrorViewController_previouslySelectedTab];
        *(void *)v64 = v63;
        v64[8] = 0;

        uint64_t v46 = v66;
      }

      result = (void *)swift_unknownObjectWeakLoadStrong(v30);
      if (result)
      {
        v47 = result;
        [result setTransientViewController:v58 animated:v57];

        goto LABEL_39;
      }

        __break(1u);
        return;
      }
    }
  }

  id v41 = swift_getObjectType(a3);
  v42 = swift_conformsToProtocol2(v41, &protocol descriptor for AnyComponentView);
  if (!v42) {
    goto LABEL_46;
  }
  v43 = a3;
  v44 = v42;
  v45 = v43;
  static ComponentLayoutOptions.fixedHeightContainer.getter();
  if (__OFADD__(v96, 1LL))
  {
    __break(1u);
    goto LABEL_44;
  }

  v47 = *(void *)((char *)v4
                  + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout
                  + 72);
  if (!v47)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }

  if (v96 == 0x7FFFFFFFFFFFFFFFLL && v47 == -1) {
    goto LABEL_45;
  }
  if (!((v96 + 1) % v47))
  {
    static ComponentLayoutOptions.separatorHidden.getter(v46);
    sub_1001A6C80(v21, (uint64_t)v18);
    v48 = v95;
    id v49 = *(void (**)(char *, uint64_t))(v94 + 8);
    v49(v18, v95);
    v49(v21, v48);
  }

  uint64_t v50 = v4[5];
  if (!v50) {
    goto LABEL_47;
  }
  uint64_t v51 = a1;
  uint64_t v52 = v4[6];
  uint64_t v53 = swift_getObjectType(v45);
  uint64_t v54 = swift_getObjectType(v50);
  swift_unknownObjectRetain(v50);
  dispatch thunk of ComponentContainerDelegate.mutableState(ofItem:)(v96, v54, v52);
  swift_unknownObjectRelease(v50);
  a1 = v51;
  uint64_t v55 = v51;
  v40 = v90;
  (*(void (**)(uint64_t, char *, uint64_t, char *, uint64_t, void, uint64_t, uint64_t))(v44 + 88))( v55,  v15,  v90,  v24,  (uint64_t)v4 + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_presentationHints,  *(void *)((char *)v4 + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_pageTraits),  v53,  v44);

  (*(void (**)(char *, uint64_t))(v92 + 8))(v15, v93);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v24, v95);
  a3 = v91;
LABEL_17:
  sub_10001F010(a1, (uint64_t)v98);
  v97[3] = sub_100006028(0LL, (unint64_t *)&qword_1002EDEC0, &OBJC_CLASS___UICollectionViewCell_ptr);
  v97[0] = a3;
  int v56 = v4[3];
  uint64_t v57 = a3;
  tryToFetch(artworkFor:into:on:asPartOf:)(v98, v97, v56, v40, v58);
  sub_100006060((uint64_t)v98, &qword_1002E77A0);
  _s6Arcade17PillOverlayLayoutVwxx_0(v97);
  v59 = v4[5];
  if (v59)
  {
    v60 = v4[6];
    v61 = swift_getObjectType(v4[5]);
    swift_unknownObjectRetain(v59);
    v62 = dispatch thunk of ComponentContainerDelegate.impressionsCalculator.getter(v61, v60);
    swift_unknownObjectRelease(v59);
    if (v62)
    {
      sub_10001F010(a1, (uint64_t)v98);
      v64 = v99;
      id v63 = v100;
      sub_100005F8C(v98, v99);
      v65 = (uint64_t)v89;
      dispatch thunk of ViewModel.impressionMetrics.getter(v64, *(void *)(v63 + 8));
      v67 = v86;
      uint64_t v66 = v87;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v65, 1LL, v87) == 1)
      {
        swift_release(v62);
        sub_100006060(v65, (uint64_t *)&unk_1002E5350);
      }

      else
      {
        v68 = v88;
        (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v88, v65, v66);
        [v57 frame];
        ImpressionsCalculator.addElement(_:at:)(v68);
        uint64_t v69 = swift_release(v62);
        (*(void (**)(char *, uint64_t, __n128))(v67 + 8))(v68, v66, v69);
      }

      _s6Arcade17PillOverlayLayoutVwxx_0(v98);
    }
  }

  uint64_t v70 = swift_getObjectType(v57);
  v71 = swift_conformsToProtocol2(v70, &protocol descriptor for AnyAvatarShowcaseDisplaying);
  if (v71) {
    uint64_t v72 = v71;
  }
  else {
    uint64_t v72 = 0LL;
  }
  if (v71) {
    uint64_t v73 = v57;
  }
  else {
    uint64_t v73 = 0LL;
  }
  if (v73)
  {
    uint64_t v74 = swift_getObjectType(v73);
    uint64_t v75 = v57;
    dispatch thunk of AnyAvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(a1, v40, v74, v72);
  }

  __int128 v76 = swift_getObjectType(v57);
  __int128 v77 = swift_conformsToProtocol2(v76, &protocol descriptor for PlayableView);
  if (v77) {
    uint64_t v78 = v77;
  }
  else {
    uint64_t v78 = 0LL;
  }
  if (v77) {
    v79 = v57;
  }
  else {
    v79 = 0LL;
  }
  if (v79)
  {
    v80 = type metadata accessor for PlaybackCoordinator(0LL);
    v81 = v57;
    BaseObjectGraph.optional<A>(_:)(v98, v80, v80);
    v82 = (void *)v98[0];
    if (v98[0])
    {
      v83 = v81;
      v84 = v82;
      dispatch thunk of PlaybackCoordinator.register(playableView:)(v79, v78);
      swift_release(v40);
    }

    else
    {
      swift_release(v40);
    }
  }

  else
  {
    swift_release(v40);
  }

    v101 = (v71 - 1) & v71;
    v102 = v72;
    uint64_t v55 = __clz(__rbit64(v71)) + (v72 << 6);
LABEL_33:
    uint64_t v57 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    v58 = v96;
    v57(v96, *(void *)(v56 + 48) + *(void *)(v13 + 72) * v55, v12);
    v59 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
    v59(v53, v58, v12);
    v60 = v103;
    uint64_t ObjectType = swift_getObjectType(v103);
    v62 = v13;
    id v63 = v12;
    v64 = v100;
    v57(v100, v53, v63);
    v65 = *(unsigned __int8 *)(v62 + 80);
    uint64_t v66 = (v65 + 32) & ~v65;
    v67 = swift_allocObject(&unk_10028DC70, v66 + v97, v65 | 7);
    *(void *)(v67 + 16) = v60;
    *(void *)(v67 + 24) = v54;
    v68 = v64;
    uint64_t v12 = v63;
    uint64_t v13 = v62;
    v59(v67 + v66, v68, v12);
    swift_unknownObjectRetain(v60);
    dispatch thunk of AppStateController.refreshDataSources(for:completion:)(v53, sub_1001D3E30, v67, ObjectType, v54);
    uint64_t v69 = swift_release(v67);
    (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v53, v12, v69);
    uint64_t v51 = v101;
    uint64_t v52 = v102;
  }

  uint64_t v73 = v52 + 4;
  if (v52 + 4 < (uint64_t)v94)
  {
    v71 = *(void *)&v93[8 * v73];
    if (!v71)
    {
      while (1)
      {
        uint64_t v72 = v73 + 1;
        if (__OFADD__(v73, 1LL)) {
          break;
        }
        v71 = *(void *)&v93[8 * v72];
        ++v73;
        if (v71) {
          goto LABEL_48;
        }
      }

        swift_release(v68);
        swift_bridgeObjectRelease(v66);
        swift_release(v96);
        swift_bridgeObjectRelease(v66);
        v11 = v92;
        uint64_t v12 = v97;
      }
    }

    else
    {
      _s6Arcade17PillOverlayLayoutVwxx_0(v101);
    }
  }

  if ((v12 & 0x8000000000000000LL) == 0)
  {
    if (v12 >= *(void *)(v95 + 16)) {
      goto LABEL_51;
    }
    sub_10001F010(v94 + 40 * v12++, (uint64_t)&v104);
    goto LABEL_8;
  }

  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
}

void sub_1001A1270(char *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v119 = a3;
  int v118 = a2;
  v122 = a1;
  uint64_t v6 = sub_1000031E8(&qword_1002EAAB0);
  __chkstk_darwin(v6);
  v120 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v129 = (void *)type metadata accessor for NavigationTab(0LL);
  uint64_t v8 = *(v129 - 1);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v129);
  v117 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  v124 = (char *)&v111 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v111 - v13;
  __chkstk_darwin(v15);
  v121 = (char *)&v111 - v16;
  __chkstk_darwin(v17);
  v123 = (char *)&v111 - v18;
  __chkstk_darwin(v19);
  v126 = (char *)&v111 - v20;
  uint64_t v21 = sub_1000031E8(&qword_1002EAAB8);
  __chkstk_darwin(v21);
  v116 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  v25 = (char *)&v111 - v24;
  __chkstk_darwin(v26);
  char v28 = (char *)&v111 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v111 - v30;
  __chkstk_darwin(v32);
  v127 = (char *)&v111 - v33;
  v128 = (void *)(v4 + qword_1002E1B90);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4 + qword_1002E1B90);
  if (!Strong)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }

  uint64_t v35 = Strong;
  id v36 = [Strong tabBar];

  id v37 = [v36 items];
  if (!v37) {
    return;
  }
  uint64_t v38 = sub_100006028(0LL, (unint64_t *)&unk_1002EAAC0, &OBJC_CLASS___UITabBarItem_ptr);
  unint64_t v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v38);

  uint64_t v40 = v39;
  unint64_t v41 = v39 >> 62;
  uint64_t v125 = v39;
  if (!(v39 >> 62))
  {
    uint64_t v42 = *(void *)((v39 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v42 >= 1) {
      goto LABEL_5;
    }
LABEL_52:
    swift_bridgeObjectRelease(v40);
    return;
  }

  if ((v39 & 0x8000000000000000LL) != 0LL) {
    uint64_t v110 = v39;
  }
  else {
    uint64_t v110 = v39 & 0xFFFFFFFFFFFFFF8LL;
  }
  unint64_t v111 = v39 >> 62;
  swift_bridgeObjectRetain(v39);
  uint64_t v42 = _CocoaArrayWrapper.endIndex.getter(v110);
  swift_bridgeObjectRelease(v125);
  unint64_t v41 = v111;
  uint64_t v40 = v125;
  if (v42 < 1) {
    goto LABEL_52;
  }
LABEL_5:
  unint64_t v111 = v41;
  v112 = v14;
  uint64_t v113 = a4;
  v114 = (void *)v4;
  uint64_t v115 = v8;
  uint64_t v43 = (uint64_t)v127;
  (*(void (**)(char *, uint64_t, uint64_t, void *))(v8 + 56))(v127, 1LL, 1LL, v129);
  v44 = v128;
  v45 = (void *)swift_unknownObjectWeakLoadStrong(v128);
  if (!v45)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }

  uint64_t v46 = v45;
  id v47 = [v45 selectedIndex];

  v48 = (void *)swift_unknownObjectWeakLoadStrong(v44);
  id v49 = v48;
  if ((uint64_t)v47 < v42)
  {
    if (!v48)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }

    unint64_t v50 = (unint64_t)[v48 selectedIndex];

    uint64_t v51 = v129;
    if ((v125 & 0xC000000000000001LL) == 0)
    {
      uint64_t v52 = v115;
      if ((v50 & 0x8000000000000000LL) != 0)
      {
        __break(1u);
      }

      else if (v50 < *(void *)((v125 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        id v53 = *(id *)(v125 + 8 * v50 + 32);
LABEL_12:
        id v54 = [v53 tag];

        NavigationTab.init(intValue:)(v54);
        goto LABEL_15;
      }

      __break(1u);
      goto LABEL_56;
    }

    id v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v125);
    uint64_t v52 = v115;
    goto LABEL_12;
  }

  if (!v48)
  {
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    swift_bridgeObjectRelease(v125);
    __break(1u);
    goto LABEL_64;
  }

  id v55 = [v48 selectedIndex];

  NavigationTab.init(intValue:)(v55);
  v31 = v28;
  uint64_t v52 = v115;
  uint64_t v51 = v129;
LABEL_15:
  sub_100006060(v43, &qword_1002EAAB8);
  sub_1001A3798((uint64_t)v31, v43);
  sub_10001027C(v43, (uint64_t)v25, &qword_1002EAAB8);
  id v49 = *(void **)(v52 + 48);
  if (((unsigned int (*)(char *, uint64_t, void *))v49)(v25, 1LL, v51) != 1)
  {
    uint64_t v57 = *(void **)(v52 + 32);
    v58 = v126;
    ((void (*)(char *, char *, void *))v57)(v126, v25, v51);
    v59 = *(char **)(v52 + 16);
    v61 = v121;
    v60 = v122;
    ((void (*)(char *, char *, void *))v59)(v121, v122, v51);
    int v62 = (*(uint64_t (**)(char *, void *))(v52 + 88))(v61, v51);
    v129 = v57;
    if (v62 != enum case for NavigationTab.infer(_:))
    {
      v25 = v123;
      if (v62 == enum case for NavigationTab.selected(_:))
      {
        ((void (*)(char *, char *, void *))v59)(v123, v126, v51);
      }

      else
      {
        ((void (*)(char *, char *, void *))v59)(v123, v60, v51);
        (*(void (**)(char *, void *))(v52 + 8))(v61, v51);
      }

      v71 = v59;
      id v47 = v128;
LABEL_39:
      uint64_t v78 = type metadata accessor for MetricsActivity(0LL);
      uint64_t v80 = static MetricsActivity.current.getter(v78, v79);
      uint64_t v81 = NavigationTab.pageContext.getter();
      uint64_t v83 = v82;
      dispatch thunk of MetricsActivity.changeContext(_:)(v81, v82);
      swift_release(v80);
      swift_bridgeObjectRelease(v83);
      id v84 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
      v85 = v124;
      ((void (*)(char *, char *, void *))v71)(v124, v25, v51);
      uint64_t v86 = (uint64_t)v120;
      StoreTab.Identifier.init(navigationTab:)(v85);
      sub_10007D2C0(v86);

      v87 = (void *)swift_unknownObjectWeakLoadStrong(v47);
      if (v87)
      {
        v88 = v87;
        id v89 = [v87 presentedViewController];

        if (v89)
        {
          if (([v89 isBeingDismissed] & 1) == 0)
          {
            ((void (*)(char *, char *, void *))v71)(v85, v25, v51);
            uint64_t v93 = *(unsigned __int8 *)(v52 + 80);
            v94 = v85;
            uint64_t v95 = (v93 + 16) & ~v93;
            unint64_t v96 = (v9 + v95 + 7) & 0xFFFFFFFFFFFFFFF8LL;
            unint64_t v97 = (v96 + 15) & 0xFFFFFFFFFFFFFFF8LL;
            unint64_t v98 = (v96 + 31) & 0xFFFFFFFFFFFFFFF8LL;
            unint64_t v99 = (v98 + 15) & 0xFFFFFFFFFFFFFFF8LL;
            uint64_t v100 = swift_allocObject(&unk_10028C830, v99 + 8, v93 | 7);
            ((void (*)(uint64_t, char *, void *))v129)(v100 + v95, v94, v51);
            v101 = v114;
            *(void *)(v100 + v96) = v114;
            uint64_t v52 = v115;
            unint64_t v102 = v100 + v97;
            *(void *)unint64_t v102 = v125;
            *(_BYTE *)(v102 + 8) = v118 & 1;
            uint64_t v103 = v119;
            *(void *)(v100 + v98) = v119;
            uint64_t v104 = v113;
            *(void *)(v100 + v99) = v113;
            aBlock[4] = sub_1001A3894;
            uint64_t v131 = v100;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256LL;
            aBlock[2] = sub_100135408;
            aBlock[3] = &unk_10028C848;
            v105 = _Block_copy(aBlock);
            uint64_t v106 = v131;
            swift_bridgeObjectRetain(v103);
            uint64_t v107 = v104;
            v25 = v123;
            swift_retain(v107);
            id v108 = v101;
            v92 = v126;
            objc_msgSend(v89, "dismissViewControllerAnimated:completion:", 1, v105, swift_release(v106).n128_f64[0]);
            _Block_release(v105);

            goto LABEL_45;
          }
        }

        uint64_t v90 = v125;
        sub_1001A1C78((uint64_t)v25, (uint64_t)v114, v125, v118 & 1, v119, v113);
        __n128 v91 = swift_bridgeObjectRelease(v90);
        v92 = v126;
LABEL_45:
        v109 = *(void (**)(char *, void *, __n128))(v52 + 8);
        v109(v25, v51, v91);
        ((void (*)(char *, void *))v109)(v92, v51);
        uint64_t v56 = (uint64_t)v127;
        goto LABEL_46;
      }

      goto LABEL_62;
    }

    id v63 = v59;
    v64 = v124;
    v121 = *(char **)(v52 + 104);
    ((void (*)(char *, void, void *))v121)(v124, enum case for NavigationTab.search(_:), v51);
    char v65 = static NavigationTab.== infix(_:_:)(v58, v64);
    uint64_t v66 = *(void (**)(char *, void *))(v52 + 8);
    v66(v64, v51);
    v67 = v117;
    v122 = v63;
    ((void (*)(char *, char *, void *))v63)(v117, v58, v51);
    if ((v65 & 1) != 0)
    {
      v66(v67, v51);
      id v47 = v128;
    }

    else
    {
      v68 = (void (*)(char *, void, void *))v121;
      ((void (*)(char *, void, void *))v121)(v64, enum case for NavigationTab.loading(_:), v51);
      char v69 = static NavigationTab.== infix(_:_:)(v67, v64);
      v66(v64, v51);
      v66(v67, v51);
      id v47 = v128;
      if ((v69 & 1) == 0)
      {
        __int128 v77 = v112;
        v68(v112, enum case for NavigationTab.selected(_:), v51);
        v25 = v123;
        v31 = (char *)v129;
LABEL_38:
        ((void (*)(char *, char *, void *))v31)(v25, v77, v51);
        v71 = v122;
        goto LABEL_39;
      }
    }

    v25 = v123;
    v31 = (char *)v129;
    if (v111)
    {
      if (v125 < 0) {
        uint64_t v72 = v125;
      }
      else {
        uint64_t v72 = v125 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v125);
      uint64_t v70 = _CocoaArrayWrapper.endIndex.getter(v72);
    }

    else
    {
      uint64_t v70 = *(void *)((v125 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(v125);
    }

    if (!v70) {
      goto LABEL_63;
    }
    unint64_t v50 = v125;
    if ((v125 & 0xC000000000000001LL) == 0)
    {
      if (*(void *)((v125 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        id v73 = *(id *)(v125 + 32);
LABEL_35:
        uint64_t v74 = v73;
        id v75 = objc_msgSend(v73, "tag", swift_bridgeObjectRelease(v50).n128_f64[0]);
        __int128 v76 = v116;
        NavigationTab.init(intValue:)(v75);

        if (((unsigned int (*)(char *, uint64_t, void *))v49)(v76, 1LL, v51) == 1)
        {
LABEL_64:
          __break(1u);
          return;
        }

        __int128 v77 = v112;
        ((void (*)(char *, char *, void *))v31)(v112, v76, v51);
        goto LABEL_38;
      }

      __break(1u);
      goto LABEL_58;
    }

void sub_1001A1C78(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v76 = a6;
  uint64_t v75 = a5;
  int v81 = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v83 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v80 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v79 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v78 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  __int128 v77 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = sub_1000031E8(&qword_1002EAAD0);
  __chkstk_darwin(v92);
  uint64_t v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8(&qword_1002EAAB8);
  __chkstk_darwin(v14);
  uint64_t v86 = (uint64_t)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v72 - v17;
  __chkstk_darwin(v19);
  v88 = (uint64_t *)((char *)&v72 - v20);
  uint64_t v21 = type metadata accessor for NavigationTab(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __n128 v23 = __chkstk_darwin(v21);
  v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t, __n128))(v22 + 104))( v25,  enum case for NavigationTab.loading(_:),  v21,  v23);
  uint64_t v93 = a1;
  char v26 = static NavigationTab.== infix(_:_:)(a1, v25);
  uint64_t v94 = v22;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  id v84 = v25;
  v87 = v27;
  v27((uint64_t)v25, v21);
  uint64_t v82 = a2;
  char v28 = (unsigned int (*)(void, void, void))(a2 + qword_1002E1B90);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v28);
  uint64_t v30 = Strong;
  if ((v26 & 1) != 0)
  {
    if (Strong)
    {
      uint64_t v31 = v82;
      uint64_t v32 = *(void **)(v82 + qword_1002EA880);
      [Strong setTransientViewController:v32 animated:0];

      sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v32 setViewControllers:isa];

      uint64_t v34 = v83;
      goto LABEL_30;
    }

    goto LABEL_41;
  }

  if (!Strong)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    return;
  }

  [Strong setTransientViewController:0 animated:0];

  uint64_t v34 = v83;
  if ((unint64_t)a3 >> 62)
  {
LABEL_25:
    if (a3 < 0) {
      uint64_t v48 = a3;
    }
    else {
      uint64_t v48 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter(v48);
    uint64_t v36 = (uint64_t)v88;
    if (v35) {
      goto LABEL_7;
    }
LABEL_29:
    swift_bridgeObjectRelease(a3);
    uint64_t v31 = v82;
    goto LABEL_30;
  }

  uint64_t v35 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a3);
  uint64_t v36 = (uint64_t)v88;
  if (!v35) {
    goto LABEL_29;
  }
LABEL_7:
  id v73 = v28;
  uint64_t v74 = v9;
  uint64_t v9 = 0LL;
  uint64_t v90 = a3;
  unint64_t v91 = a3 & 0xC000000000000001LL;
  uint64_t v89 = v35;
  while (1)
  {
    if (v91) {
      id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a3);
    }
    else {
      id v38 = *(id *)(a3 + 8 * v9 + 32);
    }
    unint64_t v39 = v38;
    a3 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_25;
    }

    NavigationTab.init(intValue:)([v38 tag]);
    uint64_t v40 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v18, v93, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v18, 0LL, 1LL, v21);
    uint64_t v34 = (uint64_t)&v13[*(int *)(v92 + 48)];
    sub_10001027C(v36, (uint64_t)v13, &qword_1002EAAB8);
    sub_10001027C((uint64_t)v18, v34, &qword_1002EAAB8);
    char v28 = *(unsigned int (**)(void, void, void))(v40 + 48);
    if (v28(v13, 1LL, v21) == 1) {
      break;
    }
    uint64_t v41 = v86;
    sub_10001027C((uint64_t)v13, v86, &qword_1002EAAB8);
    if (v28(v34, 1LL, v21) == 1)
    {
      sub_100006060((uint64_t)v18, &qword_1002EAAB8);
      char v28 = (unsigned int (*)(void, void, void))v88;
      sub_100006060((uint64_t)v88, &qword_1002EAAB8);
      uint64_t v42 = v41;
      uint64_t v36 = (uint64_t)v28;
      v87(v42, v21);
      goto LABEL_9;
    }

    uint64_t v43 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v84, v34, v21);
    uint64_t v44 = sub_100003B6C( (unint64_t *)&unk_1002EAAD8,  (uint64_t (*)(uint64_t))&type metadata accessor for NavigationTab,  (uint64_t)&protocol conformance descriptor for NavigationTab);
    int v85 = dispatch thunk of static Equatable.== infix(_:_:)(v41, v43, v21, v44);
    uint64_t v34 = (uint64_t)v87;
    v87((uint64_t)v43, v21);
    sub_100006060((uint64_t)v18, &qword_1002EAAB8);
    char v28 = (unsigned int (*)(void, void, void))v88;
    sub_100006060((uint64_t)v88, &qword_1002EAAB8);
    uint64_t v45 = v41;
    uint64_t v36 = (uint64_t)v28;
    ((void (*)(uint64_t, uint64_t))v34)(v45, v21);
    sub_100006060((uint64_t)v13, &qword_1002EAAB8);
    if ((v85 & 1) != 0) {
      goto LABEL_22;
    }
LABEL_10:

    ++v9;
    BOOL v37 = a3 == v89;
    a3 = v90;
    if (v37)
    {
      swift_bridgeObjectRelease(v90);
      uint64_t v9 = v74;
      uint64_t v31 = v82;
      uint64_t v34 = v83;
      goto LABEL_30;
    }
  }

  sub_100006060((uint64_t)v18, &qword_1002EAAB8);
  sub_100006060(v36, &qword_1002EAAB8);
  if (v28(v34, 1LL, v21) != 1)
  {
LABEL_9:
    sub_100006060((uint64_t)v13, &qword_1002EAAD0);
    goto LABEL_10;
  }

  sub_100006060((uint64_t)v13, &qword_1002EAAB8);
LABEL_22:
  uint64_t v46 = (void *)swift_unknownObjectWeakLoadStrong(v73);
  uint64_t v31 = v82;
  if (!v46) {
    goto LABEL_44;
  }
  id v47 = v46;
  objc_msgSend(v46, "setSelectedIndex:", v9, swift_bridgeObjectRelease(v90).n128_f64[0]);

  uint64_t v9 = v74;
  uint64_t v34 = v83;
LABEL_30:
  uint64_t v49 = v31 + qword_1002E1B90;
  unint64_t v50 = (void *)swift_unknownObjectWeakLoadStrong(v31 + qword_1002E1B90);
  if (!v50)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }

  uint64_t v51 = v50;
  id v52 = [v50 selectedViewController];

  if (!v52) {
    return;
  }
  if ((v81 & 1) == 0) {
    goto LABEL_38;
  }
  id v53 = (void *)swift_unknownObjectWeakLoadStrong(v49);
  if (!v53) {
    goto LABEL_43;
  }
  id v54 = v53;
  id v55 = [v53 selectedViewController];

  if (v55)
  {
    uint64_t v56 = objc_opt_self(&OBJC_CLASS___UINavigationController);
    uint64_t v57 = (void *)swift_dynamicCastObjCClass(v55, v56);
    if (v57) {
  }
    }

void sub_1001A24E0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v24 = a3;
  uint64_t v5 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    id v25 = objc_msgSend(a2, "presentedViewController", swift_bridgeObjectRetain(a1).n128_f64[0]);
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0) {
        uint64_t v21 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v21 = a1;
      }
      swift_bridgeObjectRetain(a1);
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(a1);
      if (v9) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
        {
          __break(1u);
          return;
        }

        uint64_t v10 = 0LL;
        unint64_t v23 = a1 & 0xC000000000000001LL;
        HIDWORD(v22) = enum case for ActionRunner.Origin.action(_:);
        uint64_t v11 = a1;
        while (1)
        {
          if (v23)
          {
            uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a1);
            if (!v25) {
              goto LABEL_12;
            }
          }

          else
          {
            uint64_t v19 = *(void *)(a1 + 8 * v10 + 32);
            swift_retain(v19);
            if (!v25)
            {
LABEL_12:
              id v20 = [a2 presentedViewController];

              if (v20)
              {
                id v12 = [a2 presentedViewController];
                if (v12) {
                  goto LABEL_7;
                }
              }
            }
          }

          id v12 = a2;
LABEL_7:
          ++v10;
          uint64_t v13 = type metadata accessor for FlowActionRunner(0LL);
          uint64_t v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
          swift_unknownObjectWeakInit(v14 + qword_1002E0738, 0LL);
          swift_unknownObjectWeakAssign(v15, v12);
          uint64_t v17 = ActionRunner.init()(v16);
          memset(v26, 0, sizeof(v26));
          (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, HIDWORD(v22), v5);
          dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v19, v26, v8, v24);

          swift_release(v17);
          __n128 v18 = swift_release(v19);
          (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v18);
          sub_100006060((uint64_t)v26, (uint64_t *)&unk_1002DF680);
          a1 = v11;
          if (v9 == v10)
          {

            swift_bridgeObjectRelease(v11);
            return;
          }
        }
      }
    }

    swift_bridgeObjectRelease(a1);
  }

void sub_1001A2774()
{
}

id sub_1001A27A0()
{
  return sub_100089D90(0LL, (uint64_t (*)(void))type metadata accessor for TabBarFlowController);
}

void sub_1001A27B0(uint64_t a1)
{
}

uint64_t type metadata accessor for TabBarFlowController(uint64_t a1)
{
  return sub_1000382AC(a1, qword_1002EA8B8, (uint64_t)&nominal type descriptor for TabBarFlowController);
}

uint64_t sub_1001A27FC(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256LL, 2LL, v2, a1 + 168);
}

uint64_t sub_1001A2840()
{
  return type metadata accessor for TabBarFlowController(0LL);
}

void sub_1001A2848(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for MetricsData(0LL);
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  __chkstk_darwin(v6);
  id v53 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8(&qword_1002EAAB8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for NavigationTab(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  __n128 v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for PageRenderMetricsEvent(0LL);
  uint64_t v20 = Date.init()(v19);
  double v21 = Date.timeIntervalSince1970.getter(v20);
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v23 = static PageRenderMetricsEvent.lastInteractionTime.setter(v22, v21);
  static PageRenderEvent.willPerformAction()(v23);
  id v24 = [a1 viewControllers];
  if (v24)
  {
    char v26 = v24;
    uint64_t v27 = sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
    uint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

    sub_10015C920(a2, v28);
    unint64_t v30 = v29;
    LOBYTE(v26) = v31;
    *(void *)&double v25 = swift_bridgeObjectRelease(v28).n128_u64[0];
    int v32 = v26 & 1;
  }

  else
  {
    unint64_t v30 = 0LL;
    int v32 = 1;
  }

  id v33 = objc_msgSend(a1, "tabBar", v25);
  id v34 = [v33 items];

  if (v34)
  {
    uint64_t v35 = sub_100006028(0LL, (unint64_t *)&unk_1002EAAC0, &OBJC_CLASS___UITabBarItem_ptr);
    uint64_t v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v35);

    if ((unint64_t)v36 >> 62)
    {
      if (v36 < 0) {
        uint64_t v50 = v36;
      }
      else {
        uint64_t v50 = v36 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v36);
      uint64_t v51 = _CocoaArrayWrapper.endIndex.getter(v50);
      swift_bridgeObjectRelease(v36);
      if (v51 < 1) {
        goto LABEL_8;
      }
    }

    else if (*(uint64_t *)((v36 & 0xFFFFFFFFFFFFF8LL) + 0x10) < 1)
    {
LABEL_8:
      swift_bridgeObjectRelease(v36);
      return;
    }

    if (v32) {
      goto LABEL_8;
    }
    if ((v36 & 0xC000000000000001LL) == 0)
    {
      if ((v30 & 0x8000000000000000LL) != 0)
      {
        __break(1u);
      }

      else if (v30 < *(void *)((v36 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        id v37 = *(id *)(v36 + 8 * v30 + 32);
        goto LABEL_14;
      }

      __break(1u);
      return;
    }

    id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v36);
LABEL_14:
    id v38 = v37;
    id v39 = objc_msgSend(v37, "tag", swift_bridgeObjectRelease(v36).n128_f64[0]);

    NavigationTab.init(intValue:)(v39);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11) == 1)
    {
      sub_100006060((uint64_t)v10, &qword_1002EAAB8);
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      type metadata accessor for ClickMetricsEvent(0LL);
      uint64_t v40 = NavigationTab.pageContext.getter();
      uint64_t v42 = v41;
      uint64_t v43 = static ClickMetricsEvent.tabClickEvent(named:at:)(v40, v41, [a1 selectedIndex]);
      swift_bridgeObjectRelease(v42);
      uint64_t v44 = v53;
      uint64_t v46 = dispatch thunk of MetricsEvent.metricsData.getter(v45);
      id v47 = v56;
      static MetricsFieldsContext.emptyContext.getter(v46);
      uint64_t v48 = MetricsPipeline.process(_:using:)(v44, v47);
      swift_release(v43);
      __n128 v49 = swift_release(v48);
      (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v47, v58, v49);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v55);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }

uint64_t sub_1001A2DD4()
{
  return type metadata accessor for TabChangeDelegate(0LL);
}

uint64_t type metadata accessor for TabChangeDelegate(uint64_t a1)
{
  return sub_1000382AC(a1, (uint64_t *)&unk_1002EAA58, (uint64_t)&nominal type descriptor for TabChangeDelegate);
}

uint64_t sub_1001A2DF0(uint64_t a1)
{
  uint64_t result = type metadata accessor for MetricsPipeline(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 1LL, &v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1001A2E5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  inject(_:from:)(a1);
  id v9 = objc_allocWithZone(v2);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))( (uint64_t)v9 + OBJC_IVAR____TtC6Arcade17TabChangeDelegate_metricsPipeline,  v8,  v5);
  v12.receiver = v9;
  v12.super_class = v2;
  id v10 = objc_msgSendSuper2(&v12, "init");
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = swift_release(a1);
  *a2 = v10;
  return result;
}

id sub_1001A3144(uint64_t a1)
{
  return sub_100089D90(a1, type metadata accessor for FlowTabBarController);
}

uint64_t type metadata accessor for FlowTabBarController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade20FlowTabBarController);
}

uint64_t sub_1001A31B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10001027C( *v1 + OBJC_IVAR____TtC6Arcade20FlowTabBarController_flowController,  a1,  (uint64_t *)&unk_1002E1800);
}

uint64_t sub_1001A31E0()
{
  return swift_retain(*(void *)(*v0 + OBJC_IVAR____TtC6Arcade20FlowTabBarController_actionRunner));
}

uint64_t sub_1001A31F4(uint64_t a1, uint64_t a2)
{
  v23[1] = a1;
  uint64_t v3 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000031E8(&qword_1002EAAF0);
  __chkstk_darwin(v7);
  id v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for FlowDestination(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v23 - v15;
  sub_10001027C(a2, (uint64_t)v9, &qword_1002EAAF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10) == 1)
  {
    sub_100006060((uint64_t)v9, &qword_1002EAAF0);
  }

  else
  {
    sub_1000060D8((uint64_t)v9, (uint64_t)v16);
    sub_1000060D8((uint64_t)v16, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload(v13, v10) == 4)
    {
      swift_release(*v13);
      char v17 = 1;
      return v17 & 1;
    }

    sub_10000609C((uint64_t)v13);
  }

  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for FlowPresentationContext.select(_:), v3);
  uint64_t v18 = sub_100003B6C( &qword_1002E1830,  (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext,  (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
  dispatch thunk of RawRepresentable.rawValue.getter(&v26, v3, v18);
  dispatch thunk of RawRepresentable.rawValue.getter(&v24, v3, v18);
  uint64_t v19 = v27;
  uint64_t v20 = v25;
  if (v26 == v24 && v27 == v25)
  {
    char v17 = 1;
    uint64_t v20 = v27;
  }

  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v24, v25, 0LL);
  }

  swift_bridgeObjectRelease(v19);
  __n128 v21 = swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v21);
  return v17 & 1;
}

void sub_1001A3448(void *a1)
{
  uint64_t v2 = sub_1000031E8(&qword_1002EAAB0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000031E8(&qword_1002EAAB8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for NavigationTab(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&double v13 = __chkstk_darwin(v12).n128_u64[0];
  uint64_t v15 = (char *)&v34 - v14;
  id v16 = objc_msgSend(a1, "tabBar", v13);
  id v17 = [v16 items];

  if (v17)
  {
    uint64_t v18 = sub_100006028(0LL, (unint64_t *)&unk_1002EAAC0, &OBJC_CLASS___UITabBarItem_ptr);
    uint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0) {
        uint64_t v32 = v19;
      }
      else {
        uint64_t v32 = v19 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v19);
      uint64_t v33 = _CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease(v19);
      if (v33 < 1) {
        goto LABEL_5;
      }
    }

    else if (*(uint64_t *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10) < 1)
    {
LABEL_5:
      swift_bridgeObjectRelease(v19);
      return;
    }

    id v20 = [a1 selectedIndex];
    if (v20 == (id)NSNotFound.getter()) {
      goto LABEL_5;
    }
    unint64_t v21 = (unint64_t)[a1 selectedIndex];
    if ((v19 & 0xC000000000000001LL) == 0)
    {
      if ((v21 & 0x8000000000000000LL) != 0)
      {
        __break(1u);
      }

      else if (v21 < *(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        id v22 = *(id *)(v19 + 8 * v21 + 32);
        goto LABEL_10;
      }

      __break(1u);
      return;
    }

    id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v19);
LABEL_10:
    uint64_t v23 = v22;
    id v24 = objc_msgSend(v22, "tag", swift_bridgeObjectRelease(v19).n128_f64[0]);

    NavigationTab.init(intValue:)(v24);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1LL, v8) == 1)
    {
      sub_100006060((uint64_t)v7, &qword_1002EAAB8);
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v7, v8);
      uint64_t v25 = type metadata accessor for MetricsActivity(0LL);
      uint64_t v27 = static MetricsActivity.current.getter(v25, v26);
      uint64_t v28 = NavigationTab.pageContext.getter();
      uint64_t v30 = v29;
      dispatch thunk of MetricsActivity.changeContext(_:)(v28, v29);
      swift_release(v27);
      swift_bridgeObjectRelease(v30);
      id v31 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v15, v8);
      StoreTab.Identifier.init(navigationTab:)(v11);
      sub_10007D2C0((uint64_t)v4);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    }
  }

uint64_t sub_1001A3798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002EAAB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A37E0()
{
  uint64_t v1 = type metadata accessor for NavigationTab(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease(*(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFF8LL)));
  swift_bridgeObjectRelease(*(void *)(v0 + v7));
  swift_release(*(void *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

void sub_1001A3894()
{
  uint64_t v1 = *(void *)(type metadata accessor for NavigationTab(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  sub_1001A1C78( v0 + v2,  *(void *)(v0 + v3),  *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(unsigned __int8 *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void *)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((((v3 + 31) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1001A3900(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001A3910(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001A3918()
{
  swift_release(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1001A394C()
{
}

uint64_t sub_1001A3958(void *a1)
{
  return sub_1001A0B28(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1001A397C()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DCD18 != -1) {
    swift_once(&qword_1002DCD18, sub_10013C894);
  }
  __int128 v5 = xmmword_1002F0AB0;
  if (qword_1002DC5C8 != -1) {
    swift_once(&qword_1002DC5C8, sub_100071430);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v7 = sub_1000061F4(v6, (uint64_t)qword_1002EEDA8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v4, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for FontSource.useCase(_:), v0);
  uint64_t v12 = type metadata accessor for StaticDimension(0LL);
  double v13 = &protocol witness table for StaticDimension;
  sub_100009D54(&v11);
  v10[3] = v0;
  v10[4] = &protocol witness table for FontSource;
  unint64_t v8 = sub_100009D54(v10);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v4, v0);
  StaticDimension.init(_:scaledLike:)(v10, 40.0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  xmmword_1002F13C0 = v5;
  return sub_100009D90(&v11, (uint64_t)&unk_1002F13D0);
}

void sub_1001A3B30()
{
  uint64_t v1 = v0;
  v30.receiver = v0;
  v30.super_class = (Class)type metadata accessor for RateProductViewController();
  id v2 = objc_msgSendSuper2(&v30, "viewDidLoad");
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6Arcade25RateProductViewController_titleLabel];
  Action.title.getter(v2);
  if (v4)
  {
    uint64_t v6 = v4;
    NSString v7 = String._bridgeToObjectiveC()();
    *(void *)&double v5 = swift_bridgeObjectRelease(v6).n128_u64[0];
  }

  else
  {
    NSString v7 = 0LL;
  }

  objc_msgSend(v3, "setText:", v7, v5);

  [v3 setTextAlignment:1];
  id v8 = [(id)objc_opt_self(UIColor) systemWhiteColor];
  [v3 setTextColor:v8];

  id v9 = [v1 view];
  if (!v9)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }

  uint64_t v10 = v9;
  [v9 addSubview:v3];

  uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC6Arcade25RateProductViewController_starViews];
  if ((unint64_t)v11 >> 62)
  {
LABEL_17:
    if (v11 < 0) {
      uint64_t v29 = v11;
    }
    else {
      uint64_t v29 = v11 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v11);
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v29);
    if (v12)
    {
LABEL_7:
      uint64_t v13 = 4LL;
      while (1)
      {
        if ((v11 & 0xC000000000000001LL) != 0) {
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v11);
        }
        else {
          id v14 = *(id *)(v11 + 8 * v13);
        }
        uint64_t v15 = v14;
        uint64_t v16 = v13 - 3;
        if (__OFADD__(v13 - 4, 1LL))
        {
          __break(1u);
          goto LABEL_17;
        }

        id v17 = [v1 view];
        if (!v17) {
          break;
        }
        uint64_t v18 = v17;
        [v17 addSubview:v15];

        ++v13;
        if (v16 == v12) {
          goto LABEL_14;
        }
      }

      __break(1u);
      goto LABEL_23;
    }
  }

  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade25RateProductViewController_starViews]);
    if (v12) {
      goto LABEL_7;
    }
  }

void sub_1001A3E70(uint64_t a1, void *a2)
{
  id v3 = [objc_allocWithZone(UITapGestureRecognizer) initWithTarget:a2 action:"handleDirectionalButtonWithGestureRecognizer:"];
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v5 = swift_allocObject(v4, 40LL, 7LL);
  *(_OWORD *)(v5 + 16) = xmmword_100233570;
  id v6 = v3;
  v7.super.super.Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  *(NSNumber *)(v5 + 32) = v7;
  specialized Array._endMutation()(v7.super.super.isa);
  uint64_t v8 = v5;
  sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "setAllowedPressTypes:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  id v10 = [a2 view];
  if (v10)
  {
    id v11 = v10;
    [v10 addGestureRecognizer:v6];
  }

  else
  {
    __break(1u);
  }

void *sub_1001A3FD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v6 = (objc_class *)type metadata accessor for RateProductViewController();
  v58.id receiver = v0;
  v58.super_class = v6;
  objc_msgSendSuper2(&v58, "viewWillLayoutSubviews");
  if (qword_1002DD020 != -1) {
    swift_once(&qword_1002DD020, sub_1001A397C);
  }
  sub_10013C1F4(&xmmword_1002F13C0, v57);
  NSNumber v7 = *(void **)&v0[OBJC_IVAR____TtC6Arcade25RateProductViewController_titleLabel];
  uint64_t v54 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v55 = &protocol witness table for UILabel;
  v53[0] = v7;
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC6Arcade25RateProductViewController_starViews];
  id v9 = v7;
  uint64_t v56 = sub_10005A490(v8);
  uint64_t result = [v1 view];
  if (result)
  {
    id v11 = result;
    uint64_t v12 = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
    *(void *)&double v13 = LayoutMarginsAware<>.layoutFrame.getter(v12).n128_u64[0];
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;

    uint64_t v20 = v54;
    uint64_t v21 = v55;
    sub_100005F8C(v53, v54);
    double v22 = dispatch thunk of Measurable.measurements(fitting:in:)(v1, v20, *(void *)(v21[1] + 8LL), v17, v19);
    double v24 = v23;
    double v26 = v25;
    double v28 = v27;
    sub_10013C1F4(v57, &v47);
    uint64_t v29 = v51;
    uint64_t v30 = v52;
    sub_100005F8C(&v48, v51);
    double v31 = AnyDimension.bottomMargin(from:in:)(v1, v29, v30, v22, v24, v26, v28);
    _s6Arcade17PillOverlayLayoutVwxx_0(&v48);
    *(double *)&v46[1] = v31;
    *(double *)&v46[2] = v24 + v31 + *(double *)&v57[0].super_class;
    uint64_t v32 = v54;
    uint64_t v33 = v55;
    sub_100005F8C(v53, v54);
    v59.origin.x = v13;
    v59.origin.y = v15;
    v59.size.width = v17;
    v59.size.height = v19;
    CGRectGetMidX(v59);
    v60.origin.x = v13;
    v60.origin.y = v15;
    v60.size.width = v17;
    v60.size.height = v19;
    CGRectGetMidY(v60);
    dispatch thunk of LayoutView.frame.setter(v32, v33[1]);
    uint64_t v35 = v54;
    uint64_t v34 = v55;
    sub_100005F8C(v53, v54);
    v61.origin.x = dispatch thunk of LayoutView.frame.getter(v35, v34[1]);
    CGRectGetMaxY(v61);
    id receiver = v57[0].receiver;
    uint64_t v37 = v56;
    uint64_t v38 = *(void *)(v56 + 16);
    v62.origin.x = v13;
    v62.origin.y = v15;
    v62.size.width = v17;
    v62.size.height = v19;
    double MidX = CGRectGetMidX(v62);
    uint64_t v40 = *(void *)(v37 + 16);
    if (v40)
    {
      double v41 = MidX + *(double *)&receiver * (double)v38 * -0.5;
      uint64_t v42 = v37 + 32;
      swift_bridgeObjectRetain(v37);
      do
      {
        sub_10001F010(v42, (uint64_t)&v47);
        id v43 = v57[0].receiver;
        uint64_t v44 = v49;
        uint64_t v45 = v50;
        sub_100005F8C(&v47, v49);
        CGRect.withLayoutDirection(in:relativeTo:)(v1);
        dispatch thunk of LayoutView.frame.setter(v44, v45);
        double v41 = v41 + *(double *)&v43;
        _s6Arcade17PillOverlayLayoutVwxx_0(&v47);
        v42 += 40LL;
        --v40;
      }

      while (v40);
      swift_bridgeObjectRelease(v37);
    }

    LayoutRect.init(representing:)(v13, v15, v17, v19);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return sub_1001A52F8(v53);
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_1001A4488(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_100006028(0LL, (unint64_t *)&qword_1002DD600, &OBJC_CLASS___UIPress_ptr);
  sub_10006B6B4();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v15.id receiver = v3;
  v15.super_class = (Class)type metadata accessor for RateProductViewController();
  objc_msgSendSuper2(&v15, "pressesEnded:withEvent:", isa, a2);

  sub_100067068(a1);
  if ((v7 & 1) != 0)
  {
    uint64_t v8 = UIResponder.nearestActionRunner.getter();
    if ((*(void *)&v3[OBJC_IVAR____TtC6Arcade25RateProductViewController_rating] & 0x8000000000000000LL) != 0)
    {
      __break(1u);
    }

    else
    {
      uint64_t v9 = *(void *)&v3[OBJC_IVAR____TtC6Arcade25RateProductViewController_rateAction];
      dispatch thunk of RateAction.rating.setter();
      id v10 = (void *)swift_allocObject(&unk_10028C918, 40LL, 7LL);
      v10[2] = v8;
      v10[3] = v9;
      v10[4] = v3;
      aBlock[4] = sub_1001A52D4;
      double v14 = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_100135408;
      aBlock[3] = &unk_10028C930;
      id v11 = _Block_copy(aBlock);
      uint64_t v12 = v14;
      swift_retain(v8);
      swift_retain(v9);
      objc_msgSend( v3,  "dismissViewControllerAnimated:completion:",  1,  v11,  swift_release(v12).n128_f64[0]);
      _Block_release(v11);
      swift_release(v8);
    }
  }

void sub_1001A469C()
{
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade25RateProductViewController_rating);
  BOOL v6 = __OFSUB__(v5, 1LL);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
LABEL_41:
    double v17 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v0, v2);
    goto LABEL_20;
  }

  uint64_t v8 = v7 & ~(v7 >> 63);
  if (v8 >= 5) {
    unint64_t v0 = 5LL;
  }
  else {
    unint64_t v0 = v8;
  }
  uint64_t v4 = &OBJC_IVAR____TtC6Arcade8StarView_state;
  if (v0)
  {
    uint64_t v9 = *(void *)(v29 + OBJC_IVAR____TtC6Arcade25RateProductViewController_starViews);
    if ((v9 & 0xC000000000000001LL) == 0 && v0 > *(void *)((v9 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_44;
    }
    for (uint64_t i = 0LL; i != v0; ++i)
    {
      if ((v9 & 0xC000000000000001LL) != 0) {
        objc_super v15 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      }
      else {
        objc_super v15 = (unsigned __int8 *)*(id *)(v9 + 8 * i + 32);
      }
      double v14 = v15;
      int v16 = v15[OBJC_IVAR____TtC6Arcade8StarView_state];
      v15[OBJC_IVAR____TtC6Arcade8StarView_state] = 1;
      if (v16 != 1)
      {
        if (qword_1002DCD20 != -1) {
          swift_once(&qword_1002DCD20, sub_10013C8AC);
        }
        [v14 setImage:qword_1002E7AB8];
        id v11 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
        id v12 = [v11 whiteColor];
        [v14 setTintColor:v12];

        id v13 = [v11 clearColor];
        [v14 setBackgroundColor:v13];

        double v14 = v13;
      }
    }
  }

  uint64_t v2 = *(void *)(v29 + OBJC_IVAR____TtC6Arcade25RateProductViewController_starViews);
  unint64_t v3 = v2 & 0xC000000000000001LL;
  if ((v2 & 0xC000000000000001LL) != 0) {
    goto LABEL_41;
  }
  if (v0 >= *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }

  double v17 = (unsigned __int8 *)*(id *)(v2 + 8 * v0 + 32);
LABEL_20:
  double v18 = v17;
  int v19 = v17[*v4];
  v17[*v4] = 2;
  if (v19 != 2) {
    sub_10013CB68();
  }

  if (v0 > 4) {
    goto LABEL_43;
  }
  if (v0 == 4) {
    return;
  }
  if (!v3)
  {
    unint64_t v20 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v0 + 1 >= v20 || v20 < 5)
    {
LABEL_45:
      __break(1u);
      return;
    }
  }

  unint64_t v22 = v0 + 5;
  do
  {
    if (v3) {
      double v27 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v22 - 4, v2);
    }
    else {
      double v27 = (unsigned __int8 *)*(id *)(v2 + 8 * v22);
    }
    double v26 = v27;
    int v28 = v27[*v4];
    v27[*v4] = 0;
    if (v28)
    {
      if (qword_1002DCD28 != -1) {
        swift_once(&qword_1002DCD28, sub_10013C8D0);
      }
      [v26 setImage:qword_1002E7AC0];
      double v23 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
      id v24 = [v23 whiteColor];
      [v26 setTintColor:v24];

      id v25 = [v23 clearColor];
      [v26 setBackgroundColor:v25];

      double v26 = v25;
    }

    ++v22;
  }

  while (v22 != 9);
}

void sub_1001A49F0(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 view];
  [a1 translationInView:v4];
  double v6 = v5;
  uint64_t v8 = v7;

  if ([a1 state] == (id)1)
  {
    uint64_t v9 = &v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_gestureStartingPoint];
    *(double *)uint64_t v9 = v6;
    *((void *)v9 + 1) = v8;
    v9[16] = 0;
    id v10 = &v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_gestureStartingRating];
    *(void *)id v10 = *(void *)&v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_rating];
    v10[8] = 0;
  }

  if ((v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_gestureStartingPoint + 16] & 1) == 0
    && (v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_gestureStartingRating + 8] & 1) == 0)
  {
    uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_gestureStartingRating];
    double v12 = v6 - *(double *)&v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_gestureStartingPoint];
    if (qword_1002DCD18 != -1) {
      swift_once(&qword_1002DCD18, sub_10013C894);
    }
    double v13 = v12 / (*(double *)&xmmword_1002F0AB0 + *(double *)&xmmword_1002F0AB0);
    if ((~*(void *)&v13 & 0x7FF0000000000000LL) != 0)
    {
      if (v13 > -9.22337204e18)
      {
        if (v13 < 9.22337204e18)
        {
          uint64_t v14 = (uint64_t)v13;
          id v15 = [v2 traitCollection];
          char v16 = UITraitCollection.prefersRightToLeftLayouts.getter();

          if ((v16 & 1) != 0)
          {
            if (v14 == 0x8000000000000000LL)
            {
LABEL_25:
              __break(1u);
              return;
            }

            uint64_t v14 = -v14;
          }

          uint64_t v17 = v11 + v14;
          if (!__OFADD__(v11, v14))
          {
            if (v17 <= 1) {
              uint64_t v17 = 1LL;
            }
            if (v17 >= 5) {
              uint64_t v17 = 5LL;
            }
            uint64_t v18 = *(void *)&v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_rating];
            *(void *)&v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_rating] = v17;
            if (v17 != v18) {
              sub_1001A469C();
            }
            return;
          }

void sub_1001A4C38(void *a1)
{
  uint64_t v2 = v1;
  id v3 = [a1 allowedPressTypes];
  uint64_t v4 = sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  char v7 = sub_1000DCE18((uint64_t)isa, v5);
  swift_bridgeObjectRelease(v5);

  id v8 = [v2 traitCollection];
  LOBYTE(v5) = UITraitCollection.prefersRightToLeftLayouts.getter();

  uint64_t v9 = -1LL;
  if ((v5 & 1) == 0) {
    uint64_t v9 = 1LL;
  }
  if ((v7 & 1) != 0) {
    uint64_t v10 = -v9;
  }
  else {
    uint64_t v10 = v9;
  }
  uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_rating];
  BOOL v12 = __OFADD__(v11, v10);
  uint64_t v13 = v11 + v10;
  if (v12)
  {
    __break(1u);
  }

  else
  {
    if (v13 <= 1) {
      uint64_t v13 = 1LL;
    }
    if (v13 >= 5) {
      uint64_t v13 = 5LL;
    }
    *(void *)&v2[OBJC_IVAR____TtC6Arcade25RateProductViewController_rating] = v13;
    if (v13 != v11) {
      sub_1001A469C();
    }
  }

void sub_1001A4D9C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    v12[3] = type metadata accessor for RateProductViewController();
    v12[0] = a3;
    uint64_t v10 = *(void *)&a3[OBJC_IVAR____TtC6Arcade25RateProductViewController_objectGraph];
    (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v6);
    uint64_t v11 = a3;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, v12, v9, v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_100029100((uint64_t)v12);
  }

id sub_1001A4EB0()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for RateProductViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RateProductViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade25RateProductViewController);
}

id sub_1001A4F58(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = OBJC_IVAR____TtC6Arcade25RateProductViewController_titleLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v11 = qword_1002DC5C8;
  BOOL v12 = v3;
  if (v11 != -1) {
    swift_once(&qword_1002DC5C8, sub_100071430);
  }
  uint64_t v13 = sub_1000061F4(v6, (uint64_t)qword_1002EEDA8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
  *(void *)&v3[v10] = sub_1000137B8((uint64_t)v9, 0LL, 0LL, 1, 0);
  uint64_t v14 = OBJC_IVAR____TtC6Arcade25RateProductViewController_starViews;
  uint64_t v40 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(5LL);
  id v15 = (objc_class *)type metadata accessor for StarView();
  id v16 = objc_msgSend(objc_allocWithZone(v15), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  uint64_t v17 = v40[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
  uint64_t v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v16);
  specialized ContiguousArray._endMutation()(v18);
  id v19 = objc_msgSend(objc_allocWithZone(v15), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  uint64_t v20 = v40[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
  uint64_t v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v19);
  specialized ContiguousArray._endMutation()(v21);
  id v22 = objc_msgSend(objc_allocWithZone(v15), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
  uint64_t v23 = v40[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
  uint64_t v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v22);
  specialized ContiguousArray._endMutation()(v24);
  id v25 = objc_msgSend(objc_allocWithZone(v15), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v25);
  uint64_t v26 = v40[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
  uint64_t v27 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v25);
  specialized ContiguousArray._endMutation()(v27);
  id v28 = objc_msgSend(objc_allocWithZone(v15), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  uint64_t v29 = v40[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
  uint64_t v30 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v28);
  specialized ContiguousArray._endMutation()(v30);
  *(void *)&v12[v14] = v40;
  double v31 = &v12[OBJC_IVAR____TtC6Arcade25RateProductViewController_gestureStartingPoint];
  *(void *)double v31 = 0LL;
  *((void *)v31 + 1) = 0LL;
  v31[16] = 1;
  uint64_t v32 = &v12[OBJC_IVAR____TtC6Arcade25RateProductViewController_gestureStartingRating];
  *(void *)uint64_t v32 = 0LL;
  v32[8] = 1;
  *(void *)&v12[OBJC_IVAR____TtC6Arcade25RateProductViewController_objectGraph] = a2;
  *(void *)&v12[OBJC_IVAR____TtC6Arcade25RateProductViewController_rateAction] = a1;
  swift_retain(a2);
  __n128 v33 = swift_retain(a1);
  id result = (id)dispatch thunk of RateAction.rating.getter(v33);
  uint64_t v36 = 5LL;
  if ((v35 & 1) == 0) {
    uint64_t v36 = (uint64_t)result;
  }
  if (v36 < 0)
  {
    __break(1u);
  }

  else
  {
    *(void *)&v12[OBJC_IVAR____TtC6Arcade25RateProductViewController_rating] = v36;

    uint64_t v37 = (objc_class *)type metadata accessor for RateProductViewController();
    v39.id receiver = v12;
    v39.super_class = v37;
    return objc_msgSendSuper2(&v39, "initWithNibName:bundle:", 0, 0);
  }

  return result;
}

uint64_t sub_1001A52A0()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1001A52D4()
{
}

uint64_t sub_1001A52E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001A52F0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void *sub_1001A52F8(void *a1)
{
  return a1;
}

void sub_1001A532C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = OBJC_IVAR____TtC6Arcade25RateProductViewController_titleLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002DC5C8 != -1) {
    swift_once(&qword_1002DC5C8, sub_100071430);
  }
  uint64_t v9 = sub_1000061F4(v4, (uint64_t)qword_1002EEDA8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  *(void *)&v3[v8] = sub_1000137B8((uint64_t)v7, 0LL, 0LL, 1, 0);
  uint64_t v10 = OBJC_IVAR____TtC6Arcade25RateProductViewController_starViews;
  uint64_t v30 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(5LL);
  uint64_t v11 = (objc_class *)type metadata accessor for StarView();
  id v12 = objc_msgSend(objc_allocWithZone(v11), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  uint64_t v13 = v30[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
  uint64_t v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
  specialized ContiguousArray._endMutation()(v14);
  id v15 = objc_msgSend(objc_allocWithZone(v11), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
  uint64_t v16 = v30[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
  uint64_t v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
  specialized ContiguousArray._endMutation()(v17);
  id v18 = objc_msgSend(objc_allocWithZone(v11), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
  uint64_t v19 = v30[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
  uint64_t v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v18);
  specialized ContiguousArray._endMutation()(v20);
  id v21 = objc_msgSend(objc_allocWithZone(v11), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
  uint64_t v22 = v30[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
  uint64_t v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v21);
  specialized ContiguousArray._endMutation()(v23);
  id v24 = objc_msgSend(objc_allocWithZone(v11), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
  uint64_t v25 = v30[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
  uint64_t v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v24);
  specialized ContiguousArray._endMutation()(v26);
  *(void *)&v3[v10] = v30;
  uint64_t v27 = &v3[OBJC_IVAR____TtC6Arcade25RateProductViewController_gestureStartingPoint];
  *(void *)uint64_t v27 = 0LL;
  *((void *)v27 + 1) = 0LL;
  v27[16] = 1;
  id v28 = &v3[OBJC_IVAR____TtC6Arcade25RateProductViewController_gestureStartingRating];
  *(void *)id v28 = 0LL;
  v28[8] = 1;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/RateProductViewController.swift",  38LL,  2LL,  48LL,  0);
  __break(1u);
}

void sub_1001A5620(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5 + 16;
  if (a1) {
    uint64_t v6 = (objc_class *)[a1 imageWithRenderingMode:2];
  }
  else {
    uint64_t v6 = 0LL;
  }
  swift_beginAccess(v5, v11, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    id v9 = *(id *)(Strong + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_iconView);

    v12.value.super.Class isa = v6;
    v12.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v12, v10);
  }
}

uint64_t sub_1001A56CC( uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1001A5958(*a1, a2, a3, a5, a7, a8);
}

id sub_1001A56E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_1001A630C(*a1, a2, a4, a5, a6);
}

void sub_1001A56F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1001A5700(uint64_t a1)
{
  return sub_1001A5744(a1);
}

uint64_t sub_1001A5718()
{
  return sub_100003B6C( &qword_1002E38C8,  (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyType,  (uint64_t)&protocol conformance descriptor for PrivacyType);
}

uint64_t sub_1001A5744(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8(&qword_1002EA1B0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - v10;
  sub_10009F204(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for Shelf.ContentType.privacyFooter(_:),  v5);
    uint64_t v12 = sub_100003B6C( (unint64_t *)&unk_1002E2950,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType,  (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v22, v5, v12);
    dispatch thunk of RawRepresentable.rawValue.getter(&v20, v5, v12);
    uint64_t v13 = v23;
    uint64_t v14 = v21;
    if (v22 == v20 && v23 == v21)
    {
      swift_bridgeObjectRelease_n(v23, 2LL);
      id v15 = *(void (**)(char *, uint64_t))(v6 + 8);
      v15(v8, v5);
      v15(v11, v5);
    }

    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v20, v21, 0LL);
      swift_bridgeObjectRelease(v13);
      __n128 v17 = swift_bridgeObjectRelease(v14);
      id v18 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
      v18(v8, v5, v17);
      ((void (*)(char *, uint64_t))v18)(v11, v5);
      if ((v16 & 1) == 0) {
        return 0LL;
      }
    }

    return 0x4044000000000000LL;
  }

  sub_100006060((uint64_t)v4, &qword_1002EA1B0);
  return 0LL;
}

uint64_t sub_1001A5958(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = type metadata accessor for PrivacyTypeLayout(0LL);
  uint64_t v116 = *(void *)(v10 - 8);
  uint64_t v117 = v10;
  __chkstk_darwin(v10);
  uint64_t v115 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v129 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v122 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  v123 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v124 = *(void *)(v14 - 8);
  uint64_t v125 = v14;
  __chkstk_darwin(v14);
  v128 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  v127 = (char *)&v107 - v17;
  uint64_t v18 = type metadata accessor for PrivacyTypeStyle(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  id v24 = (char *)&v107 - v23;
  uint64_t v25 = type metadata accessor for PrivacyTypeLayout.Metrics(0LL);
  uint64_t v113 = *(void *)(v25 - 8);
  uint64_t v114 = v25;
  __chkstk_darwin(v25);
  uint64_t v110 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v107 - v29;
  uint64_t v31 = PrivacyType.artwork.getter(v28);
  ((void (*)(void))PrivacyType.style.getter)();
  swift_getObjectType(a6);
  double v32 = (PageTraitEnvironment.pageContentSize.getter() + -160.0) / 5.0 * 4.0 + 120.0;
  id v131 = a6;
  id v33 = [a6 traitCollection];
  sub_10002210C(v31, (uint64_t)v24, (uint64_t)v33, (uint64_t)v30, v32);

  __n128 v34 = swift_release(v31);
  char v35 = *(double (**)(char *, uint64_t, __n128))(v19 + 8);
  unint64_t v111 = v24;
  v36.n128_f64[0] = v35(v24, v18, v34);
  uint64_t v37 = type metadata accessor for LayoutViewPlaceholder(0LL, v36);
  swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
  uint64_t v38 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v112 = v30;
  double v39 = PrivacyTypeLayout.Metrics.iconSize.getter();
  double v41 = v40;
  uint64_t v42 = *(unsigned int *)(v37 + 48);
  uint64_t v43 = *(unsigned __int16 *)(v37 + 52);
  uint64_t v130 = v37;
  swift_allocObject(v37, v42, v43);
  uint64_t v44 = LayoutViewPlaceholder.init(representing:)(v39, v41);
  uint64_t v126 = a1;
  ((void (*)(void))PrivacyType.style.getter)();
  int v45 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  uint64_t v108 = v44;
  uint64_t v109 = v38;
  if (v45 == enum case for PrivacyTypeStyle.productPage(_:))
  {
    if (qword_1002DC6D8 != -1) {
      goto LABEL_32;
    }
    while (1)
    {
      uint64_t v46 = v125;
      uint64_t v47 = sub_1000061F4(v125, (uint64_t)qword_1002EF0D8);
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 16);
      v48(v127, v47, v46);
      if (qword_1002DC6E8 != -1) {
        swift_once(&qword_1002DC6E8, sub_1000717A0);
      }
      uint64_t v49 = qword_1002EF108;
      uint64_t v50 = 1LL;
LABEL_13:
      uint64_t v121 = v50;
      uint64_t v53 = sub_1000061F4(v46, (uint64_t)v49);
      v48(v128, v53, v46);
      id v120 = (id)sub_100028C20();
      id v54 = v131;
      id v55 = [v131 traitCollection];
      uint64_t v56 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v127, v55);

      uint64_t v57 = PrivacyType.title.getter();
      uint64_t v59 = v58;
      uint64_t v60 = type metadata accessor for Feature(0LL);
      v142[3] = v60;
      uint64_t v119 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
      v142[4] = v119;
      CGRect v61 = sub_100009D54(v142);
      uint64_t v62 = enum case for Feature.measurement_with_labelplaceholder(_:);
      int v118 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 104LL);
      v118(v61, enum case for Feature.measurement_with_labelplaceholder(_:), v60);
      id v63 = (id)v56;
      LOBYTE(v56) = isFeatureEnabled(_:)(v142);
      _s6Arcade17PillOverlayLayoutVwxx_0(v142);
      LOBYTE(v105) = v56 & 1;
      v64 = v123;
      id v107 = v63;
      uint64_t v65 = v121;
      uint64_t v66 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v57,  v59,  v63,  v121,  0LL,  0LL,  0LL,  0LL,  v105);
      LabelPlaceholderCompatibility.layoutTextView.getter(v142, v66);
      uint64_t v122 = *(void *)(v122 + 8);
      unint64_t v67 = v129;
      ((void (*)(char *, unint64_t))v122)(v64, v129);
      id v68 = [v54 traitCollection];
      uint64_t v69 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v128, v68);

      uint64_t v70 = PrivacyType.detail.getter();
      uint64_t v72 = v71;
      v141[3] = v60;
      v141[4] = v119;
      id v73 = sub_100009D54(v141);
      v118(v73, v62, v60);
      id v74 = (id)v69;
      LOBYTE(v69) = isFeatureEnabled(_:)(v141);
      _s6Arcade17PillOverlayLayoutVwxx_0(v141);
      LOBYTE(v106) = v69 & 1;
      uint64_t v75 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v70,  v72,  v74,  v65,  0LL,  0LL,  0LL,  0LL,  v106);
      LabelPlaceholderCompatibility.layoutTextView.getter(v141, v75);
      uint64_t v76 = ((uint64_t (*)(char *, unint64_t))v122)(v64, v67);
      uint64_t v77 = PrivacyType.categories.getter(v76);
      uint64_t v78 = v77;
      if ((unint64_t)v77 >> 62)
      {
        if (v77 >= 0) {
          v77 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        uint64_t v79 = _CocoaArrayWrapper.endIndex.getter(v77);
        id v120 = v74;
        if (!v79)
        {
LABEL_29:
          int v81 = _swiftEmptyArrayStorage;
          goto LABEL_30;
        }
      }

      else
      {
        uint64_t v79 = *(void *)((v77 & 0xFFFFFFFFFFFFF8LL) + 0x10);
        id v120 = v74;
        if (!v79) {
          goto LABEL_29;
        }
      }

      type metadata accessor for PrivacyCategoryView();
      if (v79 >= 1) {
        break;
      }
      __break(1u);
LABEL_32:
      swift_once(&qword_1002DC6D8, sub_100071770);
    }

    uint64_t v80 = 0LL;
    unint64_t v129 = v78 & 0xC000000000000001LL;
    int v81 = _swiftEmptyArrayStorage;
    uint64_t v82 = v78;
    do
    {
      if (v129)
      {
        uint64_t v83 = specialized _ArrayBuffer._getElementSlowPath(_:)(v80, v78);
      }

      else
      {
        uint64_t v83 = *(void *)(v78 + 8 * v80 + 32);
        *(void *)&double v84 = swift_retain(v83).n128_u64[0];
      }

      id v85 = objc_msgSend(v131, "traitCollection", v84);
      uint64_t v86 = sub_100024C68(v83, (uint64_t)v85);

      swift_retain(v86);
      if ((swift_isUniquelyReferenced_nonNull_native(v81) & 1) == 0) {
        int v81 = sub_10001A374(0LL, v81[2] + 1LL, 1, v81);
      }
      unint64_t v88 = v81[2];
      unint64_t v87 = v81[3];
      if (v88 >= v87 >> 1) {
        int v81 = sub_10001A374((void *)(v87 > 1), v88 + 1, 1, v81);
      }
      ++v80;
      *((void *)&v139 + 1) = v130;
      v140 = &protocol witness table for LayoutViewPlaceholder;
      *(void *)&__int128 v138 = v86;
      v81[2] = v88 + 1;
      sub_100009D90(&v138, (uint64_t)&v81[5 * v88 + 4]);
      swift_release(v83);
      swift_release(v86);
      uint64_t v78 = v82;
    }

    while (v79 != v80);
LABEL_30:
    __n128 v89 = swift_bridgeObjectRelease(v78);
    unint64_t v91 = v112;
    uint64_t v90 = v113;
    uint64_t v92 = v110;
    uint64_t v93 = v114;
    (*(void (**)(char *, char *, uint64_t, __n128))(v113 + 16))(v110, v112, v114, v89);
    v140 = 0LL;
    __int128 v138 = 0u;
    __int128 v139 = 0u;
    v137[3] = v130;
    v137[4] = &protocol witness table for LayoutViewPlaceholder;
    uint64_t v95 = v108;
    uint64_t v94 = v109;
    uint64_t v136 = 0LL;
    v137[0] = v109;
    memset(v135, 0, sizeof(v135));
    v134[3] = v130;
    v134[4] = &protocol witness table for LayoutViewPlaceholder;
    v134[0] = v108;
    sub_10001F010((uint64_t)v142, (uint64_t)v133);
    sub_10001F010((uint64_t)v141, (uint64_t)v132);
    swift_retain(v94);
    __n128 v96 = swift_retain(v95);
    unint64_t v97 = v111;
    PrivacyType.style.getter(v96);
    unint64_t v98 = v115;
    PrivacyTypeLayout.init(metrics:shadowView:backgroundView:separatorView:iconView:titleLabel:detailLabel:categoryViews:style:)( v92,  &v138,  v137,  v135,  v134,  v133,  v132,  v81,  v97);
    uint64_t v99 = sub_100003B6C( (unint64_t *)&unk_1002E38D0,  (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyTypeLayout,  (uint64_t)&protocol conformance descriptor for PrivacyTypeLayout);
    uint64_t v100 = v117;
    dispatch thunk of Measurable.measurements(fitting:in:)(v131, v117, v99, a2, a3);

    swift_release(v94);
    __n128 v101 = swift_release(v95);
    (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v98, v100, v101);
    _s6Arcade17PillOverlayLayoutVwxx_0(v141);
    _s6Arcade17PillOverlayLayoutVwxx_0(v142);
    uint64_t v102 = v125;
    uint64_t v103 = *(void (**)(char *, uint64_t))(v124 + 8);
    v103(v128, v125);
    v103(v127, v102);
    return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v91, v93);
  }

  else
  {
    if (v45 == enum case for PrivacyTypeStyle.intermediateDetailPage(_:)
      || v45 == enum case for PrivacyTypeStyle.detailPage(_:))
    {
      uint64_t v51 = v124;
      uint64_t v46 = v125;
      if (qword_1002DC6E0 != -1) {
        swift_once(&qword_1002DC6E0, sub_100071788);
      }
      uint64_t v52 = sub_1000061F4(v46, (uint64_t)qword_1002EF0F0);
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
      v48(v127, v52, v46);
      if (qword_1002DC6F0 != -1) {
        swift_once(&qword_1002DC6F0, sub_1000717B8);
      }
      uint64_t v49 = qword_1002EF120;
      uint64_t v50 = 4LL;
      goto LABEL_13;
    }

    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v18, v18);
    __break(1u);
  }

  return result;
}

id sub_1001A630C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = type metadata accessor for PrivacyTypeStyle(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v10 = __chkstk_darwin(v8).n128_u64[0];
  uint64_t v12 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  id v13 = objc_msgSend(a5, "snapshotPageTraitEnvironment", v10);
  uint64_t v14 = *(void *)&v6[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_pageTraits];
  *(void *)&v6[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_pageTraits] = v13;
  swift_unknownObjectRetain(v13);
  swift_unknownObjectRelease(v14);
  [v6 setNeedsLayout];
  swift_unknownObjectRelease(v13);
  PrivacyType.style.getter(v15);
  uint64_t v16 = &v6[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style];
  swift_beginAccess(&v6[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style], v49, 33LL, 0LL);
  (*(void (**)(char *, _BYTE *, uint64_t))(v9 + 24))(v16, v12, v8);
  swift_endAccess(v49);
  sub_100021520();
  uint64_t v17 = (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v18 = PrivacyType.title.getter(v17);
  uint64_t v20 = v19;
  uint64_t v21 = *(void **)&v6[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_titleLabel];
  id v22 = [v21 text];
  if (!v22) {
    goto LABEL_7;
  }
  uint64_t v23 = v22;
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  uint64_t v26 = v25;

  if (v24 == v18 && v26 == v20)
  {
    id v27 = (id)swift_bridgeObjectRelease_n(v20, 2LL);
    goto LABEL_8;
  }

  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v18, v20, 0LL);
  swift_bridgeObjectRelease(v26);
  if ((v28 & 1) != 0)
  {
    swift_bridgeObjectRelease(v20);
  }

  else
  {
LABEL_7:
    NSString v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v21, "setText:", v29, swift_bridgeObjectRelease(v20).n128_f64[0]);

    id v27 = [v6 setNeedsLayout];
  }

void sub_1001A664C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_artwork);
  if (v2)
  {
    uint64_t v3 = qword_1002DC3A8;
    swift_retain(*(void *)(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_artwork));
    if (v3 != -1) {
      uint64_t v4 = swift_once(&qword_1002DC3A8, sub_1000208DC);
    }
    uint64_t v5 = Artwork.config(using:)(v4, *(double *)&xmmword_1002EE5E0, *((double *)&xmmword_1002EE5E0 + 1));
    v31[0] = *(id *)(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_iconView);
    uint64_t v6 = type metadata accessor for ArtworkView(0LL);
    uint64_t v7 = sub_100003B6C( (unint64_t *)&qword_1002E2948,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for NSObject);
    id v8 = v31[0];
    AnyHashable.init<A>(_:)(v30, v31, v6, v7);
    uint64_t v9 = swift_allocObject(&unk_10028C9F8, 24LL, 7LL);
    swift_unknownObjectWeakInit(v9 + 16, v1);
    __n128 v10 = swift_retain(v9);
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v5,  2LL,  0LL,  v30,  sub_1001A6B68,  v9,  v10);
    swift_release(v2);
    swift_release(v5);
    swift_release(v9);
    sub_100006060((uint64_t)v30, (uint64_t *)&unk_1002DE600);
    swift_release(v9);
  }

  uint64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews);
  swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews, v31, 0LL, 0LL);
  uint64_t v12 = *v11;
  if (!((unint64_t)*v11 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*v11);
    if (v13) {
      goto LABEL_7;
    }
LABEL_22:
    swift_bridgeObjectRelease(v12);
    return;
  }

  if (v12 < 0) {
    uint64_t v28 = *v11;
  }
  else {
    uint64_t v28 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v12);
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v28);
  if (!v13) {
    goto LABEL_22;
  }
LABEL_7:
  if (v13 >= 1)
  {
    for (uint64_t i = 0LL; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001LL) != 0) {
        __n128 v15 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
      }
      else {
        __n128 v15 = (char *)*(id *)(v12 + 8 * i + 32);
      }
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)&v15[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category];
      if (v17)
      {
        swift_retain(*(void *)&v15[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category]);
        uint64_t v19 = PrivacyCategory.artwork.getter(v18);
        swift_release(v17);
        if (qword_1002DC3C0 != -1) {
          uint64_t v20 = swift_once(&qword_1002DC3C0, sub_100023E8C);
        }
        uint64_t v21 = Artwork.config(using:)(v20, *(double *)&xmmword_1002EE640, *((double *)&xmmword_1002EE640 + 1));
        NSString v29 = *(void **)&v16[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_iconView];
        id v22 = v29;
        uint64_t v23 = type metadata accessor for ArtworkView(0LL);
        uint64_t v24 = sub_100003B6C( (unint64_t *)&qword_1002E2948,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for NSObject);
        id v25 = v22;
        AnyHashable.init<A>(_:)(v30, &v29, v23, v24);
        uint64_t v26 = swift_allocObject(&unk_10028C9D0, 24LL, 7LL);
        swift_unknownObjectWeakInit(v26 + 16, v16);
        __n128 v27 = swift_retain(v26);
        ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v21,  2LL,  0LL,  v30,  sub_1000ABE70,  v26,  v27);
        swift_release(v19);
        swift_release(v21);
        swift_release(v26);
        sub_100006060((uint64_t)v30, (uint64_t *)&unk_1002DE600);

        swift_release(v26);
      }

      else
      {
      }
    }

    goto LABEL_22;
  }

  __break(1u);
}

void sub_1001A69CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_iconView);
  uint64_t v5 = type metadata accessor for ArtworkView(0LL);
  uint64_t v6 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v4, a2, v5, v6);
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews, v15, 0LL, 0LL);
  uint64_t v8 = *v7;
  if (!((unint64_t)v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease(v8);
    return;
  }

  if (v8 < 0) {
    uint64_t v14 = v8;
  }
  else {
    uint64_t v14 = v8 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v8);
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v9) {
    goto LABEL_13;
  }
LABEL_3:
  if (v9 >= 1)
  {
    uint64_t v10 = 0LL;
    uint64_t v11 = a2 & 1;
    do
    {
      if ((v8 & 0xC000000000000001LL) != 0) {
        uint64_t v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
      }
      else {
        uint64_t v12 = (char *)*(id *)(v8 + 8 * v10 + 32);
      }
      uint64_t v13 = v12;
      ++v10;
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)( *(void *)&v12[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_iconView],  v11,  v5,  v6);
    }

    while (v9 != v10);
    goto LABEL_13;
  }

  __break(1u);
}

uint64_t sub_1001A6B44()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1001A6B68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1001A6B74()
{
  return AvatarShowcaseLayoutConfiguration.init(width:visibleWidth:)(36.0, 22.0);
}

uint64_t sub_1001A6B84(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType(v2);
  uint64_t v6 = sub_100003B6C( &qword_1002EABA8,  type metadata accessor for MediumLockupCollectionViewCell,  (uint64_t)&unk_100240450);
  return AvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(a1, a2, ObjectType, v6);
}

uint64_t sub_1001A6BE4(uint64_t a1, uint64_t a2)
{
  return sub_1001A6BFC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.unapply());
}

uint64_t sub_1001A6BF0(uint64_t a1, uint64_t a2)
{
  return sub_1001A6BFC( a1,  a2,  (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.placeAvatarShowcase());
}

uint64_t sub_1001A6BFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v5 = sub_100003B6C( &qword_1002EABA8,  type metadata accessor for MediumLockupCollectionViewCell,  (uint64_t)&unk_100240450);
  return a3(ObjectType, v5);
}

uint64_t sub_1001A6C54()
{
  return sub_100003B6C( &qword_1002EABA0,  type metadata accessor for MediumLockupCollectionViewCell,  (uint64_t)&unk_100240418);
}

uint64_t sub_1001A6C80(char *a1, uint64_t a2)
{
  uint64_t v31 = a1;
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002EA050);
  __chkstk_darwin(v4);
  NSString v29 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  uint64_t v28 = v2;
  v17(v12, v2, v9, v14);
  uint64_t v18 = sub_100003B6C( (unint64_t *)&unk_1002EA060,  (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions,  (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  dispatch thunk of SetAlgebra.intersection(_:)(a2, v9, v18);
  uint64_t v19 = sub_100003B6C( &qword_1002E3D70,  (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions,  (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  uint64_t v27 = a2;
  char v20 = dispatch thunk of static Equatable.== infix(_:_:)(v16, a2, v9, v19) ^ 1;
  uint64_t v30 = v4;
  uint64_t v21 = &v8[*(int *)(v4 + 48)];
  *uint64_t v8 = v20 & 1;
  if ((v20 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    uint64_t v23 = v27;
    ((void (*)(char *, uint64_t, uint64_t))v17)(v21, v27, v9);
    ((void (*)(char *, uint64_t, uint64_t))v17)(v12, v23, v9);
    dispatch thunk of SetAlgebra.formUnion(_:)(v12, v9, v18);
    id v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }

  else
  {
    id v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22(v21, v16, v9);
  }

  uint64_t v24 = &v29[*(int *)(v30 + 48)];
  v22(v24, v21, v9);
  v22(v31, v24, v9);
  return v20 & 1;
}

void sub_1001A6EB4(char a1)
{
  int v2 = *((unsigned __int8 *)v1 + *(void *)((swift_isaMask & *v1) + 0x80LL));
  if (v2 == (a1 & 1)) {
    return;
  }
  uint64_t v3 = v1;
  if ((v2 & 1) == 0)
  {
    sub_1001A72E8();
    return;
  }

  [v1 contentOffset];
  sub_1001A75A0(0, v4);
  if (v5 == v6) {
    goto LABEL_4;
  }
  uint64_t v10 = v5;
  uint64_t v11 = v6;
  if (v6 >= v5)
  {
    uint64_t v12 = *(void *)((swift_isaMask & *v1) + 0x60LL);
    uint64_t v38 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0xB0LL));
    swift_beginAccess(v38, v40, 0LL, 0LL);
    while (2)
    {
      if (v10 < v11)
      {
        uint64_t v13 = *v38;
        uint64_t v14 = *v38 + 64LL;
        uint64_t v15 = 1LL << *(_BYTE *)(*v38 + 32LL);
        if (v15 < 64) {
          uint64_t v16 = ~(-1LL << v15);
        }
        else {
          uint64_t v16 = -1LL;
        }
        unint64_t v17 = v16 & *(void *)(*v38 + 64LL);
        int64_t v18 = (unint64_t)(v15 + 63) >> 6;
        swift_bridgeObjectRetain_n(*v38, 2LL);
        int64_t v19 = 0LL;
        do
        {
          if (v17)
          {
            unint64_t v20 = __clz(__rbit64(v17));
            v17 &= v17 - 1;
            unint64_t v21 = v20 | (v19 << 6);
          }

          else
          {
            int64_t v22 = v19 + 1;
            if (__OFADD__(v19, 1LL))
            {
              __break(1u);
              goto LABEL_46;
            }

            if (v22 >= v18) {
              goto LABEL_43;
            }
            unint64_t v23 = *(void *)(v14 + 8 * v22);
            ++v19;
            if (!v23)
            {
              int64_t v19 = v22 + 1;
              if (v22 + 1 >= v18) {
                goto LABEL_43;
              }
              unint64_t v23 = *(void *)(v14 + 8 * v19);
              if (!v23)
              {
                int64_t v19 = v22 + 2;
                if (v22 + 2 >= v18) {
                  goto LABEL_43;
                }
                unint64_t v23 = *(void *)(v14 + 8 * v19);
                if (!v23)
                {
                  int64_t v19 = v22 + 3;
                  if (v22 + 3 >= v18) {
                    goto LABEL_43;
                  }
                  unint64_t v23 = *(void *)(v14 + 8 * v19);
                  if (!v23)
                  {
                    int64_t v24 = v22 + 4;
                    if (v24 >= v18)
                    {
LABEL_43:
                      swift_release(v13);
                      swift_bridgeObjectRelease(v13);
                      return;
                    }

                    unint64_t v23 = *(void *)(v14 + 8 * v24);
                    if (!v23)
                    {
                      while (1)
                      {
                        int64_t v19 = v24 + 1;
                        if (__OFADD__(v24, 1LL)) {
                          goto LABEL_47;
                        }
                        if (v19 >= v18) {
                          goto LABEL_43;
                        }
                        unint64_t v23 = *(void *)(v14 + 8 * v19);
                        ++v24;
                        if (v23) {
                          goto LABEL_33;
                        }
                      }
                    }

                    int64_t v19 = v24;
                  }
                }
              }
            }

double sub_1001A72E8()
{
  uint64_t v1 = v0;
  [v0 contentOffset];
  sub_1001A75A0(0, v2);
  uint64_t v5 = sub_1001E05F8(v3, v4);
  uint64_t v6 = v5;
  int64_t v7 = v5[2];
  if (v7)
  {
    uint64_t v8 = 0LL;
    uint64_t v9 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0xB0LL);
    char v40 = v0;
    uint64_t v41 = *(void *)((swift_isaMask & *v0) + 0x60LL);
    int64_t v39 = v5[2];
    do
    {
      uint64_t v10 = v6[v8 + 4];
      swift_beginAccess(v9, v42, 32LL, 0LL);
      uint64_t v11 = *(void *)v9;
      if (*(void *)(*(void *)v9 + 16LL) && (unint64_t v12 = sub_1000E878C(v10), (v13 & 1) != 0))
      {
        uint64_t v14 = *(void **)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess(v42);
        uint64_t v15 = *(void *)((char *)v1 + v41);
        uint64_t Strong = swift_weakLoadStrong(v15 + 32);
        if (Strong)
        {
          uint64_t v17 = Strong;
          v42[3] = sub_100006028(0LL, (unint64_t *)&qword_1002EDEC0, &OBJC_CLASS___UICollectionViewCell_ptr);
          v42[0] = v14;
          uint64_t v18 = *(void *)(v15 + 24);
          id v19 = v14;
          swift_retain(v15);
          tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v42, v18, v17, 1LL);
          swift_release(v17);
          _s6Arcade17PillOverlayLayoutVwxx_0(v42);
        }

        else
        {
          id v20 = v14;
          swift_retain(v15);
        }

        uint64_t ObjectType = swift_getObjectType(v14);
        uint64_t v22 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyAvatarShowcaseDisplaying);
        if (v22) {
          uint64_t v23 = v22;
        }
        else {
          uint64_t v23 = 0LL;
        }
        if (v22) {
          int64_t v24 = v14;
        }
        else {
          int64_t v24 = 0LL;
        }
        if (v24)
        {
          uint64_t v25 = swift_getObjectType(v24);
          id v26 = v14;
          dispatch thunk of AnyAvatarShowcaseDisplaying.unapply()(v25, v23);
        }

        uint64_t v27 = swift_getObjectType(v14);
        uint64_t v28 = swift_conformsToProtocol2(v27, &protocol descriptor for PlayableView);
        if (v28) {
          uint64_t v29 = v28;
        }
        else {
          uint64_t v29 = 0LL;
        }
        if (v28) {
          uint64_t v30 = v14;
        }
        else {
          uint64_t v30 = 0LL;
        }
        if (v30 && (uint64_t v31 = swift_weakLoadStrong(v15 + 32)) != 0)
        {
          uint64_t v32 = v31;
          uint64_t v33 = type metadata accessor for PlaybackCoordinator(0LL);
          id v34 = v14;
          BaseObjectGraph.optional<A>(_:)(v42, v33, v33);
          swift_release(v32);
          uint64_t v35 = (void *)v42[0];
          if (v42[0])
          {
            id v36 = v34;
            id v37 = v35;
            dispatch thunk of PlaybackCoordinator.unregister(playableView:)(v30, v29);
            swift_release(v15);
          }

          else
          {
            swift_release(v15);
          }
        }

        else
        {
          swift_release(v15);
        }

        int64_t v7 = v39;
        uint64_t v1 = v40;
      }

      else
      {
        swift_endAccess(v42);
      }

      ++v8;
    }

    while (v7 != v8);
    *(void *)&double result = swift_release(v6).n128_u64[0];
  }

  else
  {
    *(void *)&double result = swift_release(v5).n128_u64[0];
  }

  return result;
}

void sub_1001A75A0(char a1, double a2)
{
  uint64_t v3 = v2;
  [v2 frame];
  uint64_t v10 = *(void *)((swift_isaMask & *v2) + 0x60LL);
  uint64_t v11 = *(void *)((char *)v2 + v10);
  uint64_t v12 = *(void *)(v11 + 40);
  if (!v12) {
    return;
  }
  CGFloat v13 = v6;
  CGFloat v14 = v7;
  CGFloat v15 = v8;
  CGFloat v16 = v9;
  uint64_t v17 = *(void *)(v11 + 48);
  uint64_t ObjectType = swift_getObjectType(*(void *)(v11 + 40));
  swift_retain(v11);
  swift_unknownObjectRetain(v12);
  uint64_t v19 = dispatch thunk of ComponentContainerDelegate.numberOfItems.getter(ObjectType, v17);
  swift_unknownObjectRelease(v12);
  uint64_t v20 = *(void *)(v11
                  + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction);
  swift_release(v11);
  BOOL v21 = v20 != 0;
  BOOL v22 = __OFADD__(v19, v21);
  uint64_t v23 = v19 + v21;
  if (v22)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }

  if (v23 < 1) {
    return;
  }
  v42.origin.x = v13;
  v42.origin.y = v14;
  v42.size.width = v15;
  v42.size.height = v16;
  if (CGRectIsEmpty(v42)) {
    return;
  }
  double v25 = *(double *)(v24 + 24);
  double v26 = *(double *)(v24 + 32) + *(double *)(v24 + 48);
  uint64_t v27 = *(void *)(v24 + 72);
  double v28 = 0.0;
  if (a2 >= 0.0) {
    double v28 = a2;
  }
  double v29 = v28 + *(double *)(v24 + 8);
  v43.origin.x = v13;
  v43.origin.y = v14;
  v43.size.width = v15;
  v43.size.height = v16;
  double Width = CGRectGetWidth(v43);
  double v31 = floor(v29 / v26);
  if ((~*(void *)&v31 & 0x7FF0000000000000LL) == 0) {
    goto LABEL_25;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }

  if (v31 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }

  double v32 = floor((v29 + Width - v25) / v26);
  if ((~*(void *)&v32 & 0x7FF0000000000000LL) == 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }

  if (v32 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (v32 >= 9.22337204e18)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }

  uint64_t v33 = (uint64_t)v31;
  uint64_t v34 = (uint64_t)v32;
  if ((a1 & 1) != 0)
  {
    uint64_t v35 = *(void *)((char *)v3 + *(void *)((swift_isaMask & *v3) + 0x70LL));
    BOOL v22 = __OFSUB__(v33, v35);
    v33 -= v35;
    if (v22)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }

    BOOL v22 = __OFADD__(v34, v35);
    v34 += v35;
    if (v22)
    {
LABEL_34:
      __break(1u);
      return;
    }
  }

  uint64_t v36 = *(void *)((char *)v3 + v10);
  uint64_t v37 = *(void *)(v36 + 40);
  if (v37)
  {
    uint64_t v38 = *(void *)(v36 + 48);
    uint64_t v39 = swift_getObjectType(*(void *)(v36 + 40));
    swift_retain(v36);
    swift_unknownObjectRetain(v37);
    uint64_t v40 = dispatch thunk of ComponentContainerDelegate.numberOfItems.getter(v39, v38);
    swift_unknownObjectRelease(v37);
    uint64_t v41 = *(void *)(v36
                    + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction);
    swift_release(v36);
    if (__OFADD__(v40, v41 != 0)) {
      __break(1u);
    }
  }

uint64_t sub_1001A7894(uint64_t a1, uint64_t a2)
{
  int64_t v4 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x90LL));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  *int64_t v4 = a1;
  v4[1] = a2;
  if (swift_unknownObjectRetain(a1))
  {
    if (v5) {
      BOOL v7 = a1 == v5;
    }
    else {
      BOOL v7 = 0;
    }
    if (!v7) {
      goto LABEL_9;
    }
  }

  else if (v5)
  {
LABEL_9:
    CompoundScrollObserver.removeChild(_:)(v5, v6);
    uint64_t v8 = *v4;
    uint64_t v9 = v4[1];
    uint64_t v10 = swift_unknownObjectRetain(v8);
    CompoundScrollObserver.addChild(_:)(v10, v9);
    swift_unknownObjectRelease(v5);
    swift_unknownObjectRelease(a1);
    return swift_unknownObjectRelease(v8);
  }

  swift_unknownObjectRelease(v5);
  uint64_t v8 = a1;
  return swift_unknownObjectRelease(v8);
}

uint64_t sub_1001A7954(uint64_t result)
{
  if (result < 0) {
    goto LABEL_9;
  }
  double v2 = v1;
  uint64_t v3 = result;
  uint64_t v4 = *(void *)((swift_isaMask & *v1) + 0x60LL);
  uint64_t v5 = *(void *)((char *)v1 + v4);
  uint64_t v6 = *(void *)(v5 + 40);
  if (!v6)
  {
    if (result < 0) {
      goto LABEL_5;
    }
    goto LABEL_8;
  }

  uint64_t v7 = *(void *)(v5 + 48);
  uint64_t ObjectType = swift_getObjectType(*(void *)(v5 + 40));
  swift_retain(v5);
  swift_unknownObjectRetain(v6);
  uint64_t v9 = dispatch thunk of ComponentContainerDelegate.numberOfItems.getter(ObjectType, v7);
  swift_unknownObjectRelease(v6);
  uint64_t v10 = *(void *)(v5
                  + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction);
  double result = swift_release(v5);
  BOOL v11 = v10 != 0;
  BOOL v12 = __OFADD__(v9, v11);
  uint64_t v13 = v9 + v11;
  if (v12)
  {
LABEL_11:
    __break(1u);
    return result;
  }

  if (v13 <= v3)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }

id sub_1001A7AC4(uint64_t a1)
{
  double v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v1);
  swift_beginAccess((char *)v1 + *(void *)((swift_isaMask & *v1) + 0xA8LL), &v26, 33LL, 0LL);
  uint64_t v5 = sub_1000031E8(&qword_1002EAD88);
  ReusePool.dequeue()(v25, v5);
  swift_endAccess(&v26);
  id v7 = *(id *)&v25[0];
  if (!*(void *)&v25[0])
  {
    id v7 = objc_msgSend( objc_allocWithZone((Class)swift_getObjCClassFromMetadata(*(void *)(*(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x60))
                                                                              + 16LL))),
           "initWithFrame:",
           0.0,
           0.0,
           *(double *)(v6
                     + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout
                     + 32),
           *(double *)(v6
                     + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout
                     + 40));
    [v2 addSubview:v7];
  }

  id v8 = v7;
  [v8 transform];
  v25[0] = v26;
  v25[1] = v27;
  v25[2] = v28;
  __int128 v26 = 0x3FF0000000000000uLL;
  *(void *)&__int128 v27 = 0LL;
  *((void *)&v27 + 1) = 0x3FF0000000000000LL;
  __int128 v28 = 0uLL;
  if ((static CGAffineTransform.== infix(_:_:)(v25, &v26) & 1) != 0)
  {
    uint64_t v9 = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
    uint64_t v10 = protocol witness table for UIView;
    uint64_t v23 = v9;
    uint64_t v24 = protocol witness table for UIView;
    v22[0] = v8;
  }

  else
  {
    UIView.withUntransformedFrame.getter(v22);

    uint64_t v9 = v23;
    uint64_t v10 = v24;
  }

  sub_100005F8C(v22, v9);
  sub_1001A7954(a1);
  dispatch thunk of LayoutView.frame.setter(v9, v10);
  _s6Arcade17PillOverlayLayoutVwxx_0(v22);
  [v8 setAutoresizingMask:0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:1];
  v21.id receiver = v2;
  v21.super_class = ObjectType;
  id v11 = v8;
  objc_msgSend(v11, "setSemanticContentAttribute:", objc_msgSendSuper2(&v21, "semanticContentAttribute"));

  id v12 = v11;
  BOOL v13 = [v12 effectiveUserInterfaceLayoutDirection] == (id)1;
  id v14 = [v12 layer];
  [v14 setFlipsHorizontalAxis:v13];

  CGFloat v15 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0xB0LL));
  swift_beginAccess(v15, v22, 33LL, 0LL);
  id v16 = v12;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v15);
  uint64_t v20 = *v15;
  void *v15 = 0x8000000000000000LL;
  sub_1000B10D4((uint64_t)v16, a1, isUniquelyReferenced_nonNull_native);
  uint64_t v18 = *v15;
  void *v15 = v20;
  swift_bridgeObjectRelease(v18);
  swift_endAccess(v22);
  return v16;
}

void sub_1001A7DC0(uint64_t a1, char a2)
{
  uint64_t v3 = &v2[*(void *)((swift_isaMask & *(void *)v2) + 0xC0LL)];
  *(void *)uint64_t v3 = a1;
  v3[8] = a2 & 1;
  uint64_t v4 = &v2[*(void *)((swift_isaMask & *(void *)v2) + 0xB8LL)];
  if ((v4[8] & 1) != 0) {
    return;
  }
  uint64_t v5 = v2;
  uint64_t v6 = *(void *)v4;
  uint64_t v7 = *(void *)((swift_isaMask & *(void *)v2) + 0x60LL);
  uint64_t v8 = *(void *)&v2[v7];
  uint64_t v9 = *(void *)(v8 + 40);
  if (!v9)
  {
    if ((v6 & 0x8000000000000000LL) == 0) {
      return;
    }
    goto LABEL_7;
  }

  uint64_t v10 = *(void *)(v8 + 48);
  uint64_t ObjectType = swift_getObjectType(*(void *)(v8 + 40));
  swift_retain(v8);
  swift_unknownObjectRetain(v9);
  uint64_t v12 = dispatch thunk of ComponentContainerDelegate.numberOfItems.getter(ObjectType, v10);
  swift_unknownObjectRelease(v9);
  uint64_t v13 = *(void *)(v8
                  + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction);
  swift_release(v8);
  BOOL v14 = v13 != 0;
  BOOL v15 = __OFADD__(v12, v14);
  uint64_t v16 = v12 + v14;
  if (v15)
  {
    __break(1u);
    return;
  }

  if (v6 < v16)
  {
LABEL_7:
    id v17 = [v5 layer];
    id v18 = [v17 animationKeys];

    if (v18
      && (uint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, &type metadata for String),
          v18,
          uint64_t v20 = *(void *)(v19 + 16),
          swift_bridgeObjectRelease(v19),
          v20))
    {
      uint64_t v21 = 131076LL;
    }

    else
    {
      uint64_t v21 = 4LL;
    }

    sub_1001A7954(v6);
    double v26 = CGRect.adding(outsets:)( *(double *)(*(void *)&v5[v7] + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout),  *(double *)(*(void *)&v5[v7] + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout + 8),  *(double *)(*(void *)&v5[v7] + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout + 16),  *(double *)(*(void *)&v5[v7] + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout + 24),  v22,  v23,  v24,  v25);
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    uint64_t v33 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v34 = (double *)swift_allocObject(&unk_10028CB80, 56LL, 7LL);
    *((void *)v34 + 2) = v5;
    v34[3] = v26;
    *((void *)v34 + 4) = v28;
    *((void *)v34 + 5) = v30;
    *((void *)v34 + 6) = v32;
    v38[4] = sub_10007CE1C;
    uint64_t v39 = v34;
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 1107296256LL;
    v38[2] = sub_100135408;
    v38[3] = &unk_10028CB98;
    uint64_t v35 = _Block_copy(v38);
    uint64_t v36 = v39;
    uint64_t v37 = v5;
    swift_release(v36);
    [v33 animateWithDuration:v21 delay:v35 options:0 animations:0.33 completion:0.0];
    _Block_release(v35);
  }

void sub_1001A8044()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = (char *)v0 + *(void *)(v2 + 0xB8);
  if (v3[8] == 1)
  {
    uint64_t v3 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0xC0LL);
    if ((v3[8] & 1) != 0) {
      return;
    }
  }

  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)((swift_isaMask & *v0) + 0x60LL);
  uint64_t v6 = *(void *)((char *)v0 + v5);
  uint64_t v7 = *(void *)(v6 + 40);
  if (!v7)
  {
    if ((v4 & 0x8000000000000000LL) == 0) {
      return;
    }
    goto LABEL_9;
  }

  uint64_t v8 = *(void *)(v6 + 48);
  uint64_t ObjectType = swift_getObjectType(*(void *)(v6 + 40));
  swift_retain(v6);
  swift_unknownObjectRetain(v7);
  uint64_t v10 = dispatch thunk of ComponentContainerDelegate.numberOfItems.getter(ObjectType, v8);
  swift_unknownObjectRelease(v7);
  uint64_t v11 = *(void *)(v6
                  + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction);
  swift_release(v6);
  BOOL v12 = v11 != 0;
  BOOL v13 = __OFADD__(v10, v12);
  uint64_t v14 = v10 + v12;
  if (v13)
  {
    __break(1u);
    return;
  }

  if (v4 < v14)
  {
    uint64_t v2 = swift_isaMask & *v1;
LABEL_9:
    BOOL v15 = (void *)((char *)v1 + *(void *)(v2 + 176));
    swift_beginAccess(v15, v28, 32LL, 0LL);
    uint64_t v16 = *v15;
    if (*(void *)(v16 + 16) && (unint64_t v17 = sub_1000E878C(v4), (v18 & 1) != 0))
    {
      uint64_t v19 = *(void **)(*(void *)(v16 + 56) + 8 * v17);
      swift_endAccess(v28);
      uint64_t v20 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
      uint64_t v21 = swift_allocObject(v20, 40LL, 7LL);
      *(_OWORD *)(v21 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233570;
      *(void *)(v21 + 32) = v19;
      v28[0] = v21;
      specialized Array._endMutation()(v21);
      id v22 = v19;
    }

    else
    {
      swift_endAccess(v28);
      id v23 = sub_1001A7AC4(v4);
      if ((*((_BYTE *)v1 + *(void *)((swift_isaMask & *v1) + 0x80LL)) & 1) != 0)
      {
        uint64_t v24 = *(void *)((char *)v1 + v5);
        swift_retain(v24);
        sub_1001A8434(v4, v28);
        swift_release(v24);
        uint64_t v25 = *(void *)((char *)v1 + v5);
        swift_retain(v25);
        sub_1001A8548((uint64_t)v28, v4, v23);
        swift_release(v25);
        _s6Arcade17PillOverlayLayoutVwxx_0(v28);
      }

      uint64_t v26 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
      uint64_t v27 = swift_allocObject(v26, 40LL, 7LL);
      *(_OWORD *)(v27 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233570;
      *(void *)(v27 + 32) = v23;
      v28[0] = v27;
      specialized Array._endMutation()(v27);
    }
  }

void *sub_1001A8290( uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v9 = v8;
  uint64_t v18 = swift_weakInit(v9 + 4, 0LL);
  v9[5] = 0LL;
  v9[6] = 0LL;
  uint64_t v31 = a1;
  v9[2] = a1;
  uint64_t v19 = (_OWORD *)((char *)v9
                 + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout);
  __int128 v20 = a2[3];
  v19[2] = a2[2];
  v19[3] = v20;
  v19[4] = a2[4];
  __int128 v21 = a2[1];
  _OWORD *v19 = *a2;
  v19[1] = v21;
  v9[3] = a3;
  swift_weakAssign(v18, a4);
  uint64_t v22 = v9[5];
  v9[5] = a5;
  v9[6] = a6;
  swift_retain(a3);
  swift_unknownObjectRetain(a5);
  swift_unknownObjectRelease(v22);
  id v23 = (char *)v9
      + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_presentationHints;
  uint64_t v24 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, a7, v24);
  id v26 = [a8 snapshotPageTraitEnvironment];
  *(void *)((char *)v9
            + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_pageTraits) = v26;
  uint64_t ObjectType = swift_getObjectType(a5);
  uint64_t v28 = dispatch thunk of ComponentContainerDelegate.seeAllAction.getter(ObjectType, a6);
  swift_unknownObjectRelease(a5);
  swift_release(a3);
  swift_release(a4);
  swift_unknownObjectRelease(a8);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a7, v24);
  if (v28)
  {
    if (swift_conformsToProtocol2(v31, &protocol descriptor for SeeAllCapableView)) {
      uint64_t v29 = v31;
    }
    else {
      uint64_t v29 = 0LL;
    }
    if (!v29)
    {
      swift_release(v28);
      uint64_t v28 = 0LL;
    }
  }

  *(void *)((char *)v9
            + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction) = v28;
  return v9;
}

void sub_1001A8434(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2
                 + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction);
  if (v6
    && (uint64_t v7 = *(void *)(v2 + 40)) != 0
    && (uint64_t v8 = *(void *)(v3 + 48),
        uint64_t v9 = swift_getObjectType(*(void *)(v3 + 40)),
        swift_unknownObjectRetain(v7),
        uint64_t v10 = dispatch thunk of ComponentContainerDelegate.numberOfItems.getter(v9, v8),
        swift_unknownObjectRelease(v7),
        v10 == a1))
  {
    a2[3] = type metadata accessor for Action(0LL);
    a2[4] = sub_100003B6C( (unint64_t *)&qword_1002DEA20,  (uint64_t (*)(uint64_t))&type metadata accessor for Action,  (uint64_t)&protocol conformance descriptor for Action);
    *a2 = v6;
    swift_retain(v6);
  }

  else
  {
    uint64_t v11 = *(void *)(v3 + 40);
    if (v11)
    {
      uint64_t v12 = *(void *)(v3 + 48);
      uint64_t ObjectType = swift_getObjectType(*(void *)(v3 + 40));
      swift_unknownObjectRetain(v11);
      dispatch thunk of ComponentContainerDelegate.model(ofItem:)(a1, ObjectType, v12);
      swift_unknownObjectRelease(v11);
    }

    else
    {
      __break(1u);
    }
  }

void sub_1001A8548(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v96 = a2;
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002E5350);
  __n128 v8 = __chkstk_darwin(v7);
  __n128 v89 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL, v8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v88 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v92 = *(void *)(v13 - 8);
  uint64_t v93 = v13;
  __chkstk_darwin(v13);
  BOOL v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v94 = *(void *)(v16 - 8);
  uint64_t v95 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  __int128 v21 = (char *)&v85 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v85 - v23;
  uint64_t Strong = swift_weakLoadStrong(v4 + 4);
  if (!Strong) {
    return;
  }
  uint64_t v86 = v11;
  uint64_t v87 = v10;
  uint64_t v26 = *(void *)((char *)v4
                  + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction);
  uint64_t v90 = Strong;
  unint64_t v91 = a3;
  if (v26)
  {
    uint64_t v27 = v4[5];
    if (v27)
    {
      uint64_t v28 = v4[6];
      uint64_t v29 = a1;
      uint64_t ObjectType = swift_getObjectType(v4[5]);
      swift_unknownObjectRetain(v27);
      uint64_t v31 = ObjectType;
      a1 = v29;
      uint64_t v32 = dispatch thunk of ComponentContainerDelegate.numberOfItems.getter(v31, v28);
      swift_unknownObjectRelease(v27);
      BOOL v33 = v32 == v96;
      a3 = v91;
      if (v33)
      {
        uint64_t v34 = swift_getObjectType(v91);
        uint64_t v35 = swift_conformsToProtocol2(v34, &protocol descriptor for SeeAllCapableView);
        if (v35)
        {
          uint64_t v36 = v35;
          uint64_t v37 = *(void *)((char *)v4
                          + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_pageTraits);
          uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 16);
          swift_retain(v26);
          id v39 = a3;
          v38(v26, v37, v34, v36);
          swift_release(v26);

          uint64_t v40 = v90;
          goto LABEL_17;
        }

void sub_1001A8B70(void *a1)
{
  uint64_t v3 = v1 + 32;
  uint64_t Strong = swift_weakLoadStrong(v1 + 32);
  if (Strong)
  {
    uint64_t v5 = Strong;
    _OWORD v25[3] = sub_100006028(0LL, (unint64_t *)&qword_1002EDEC0, &OBJC_CLASS___UICollectionViewCell_ptr);
    v25[0] = a1;
    uint64_t v6 = *(void *)(v1 + 24);
    id v7 = a1;
    tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v25, v6, v5, 1LL);
    swift_release(v5);
    _s6Arcade17PillOverlayLayoutVwxx_0(v25);
  }

  uint64_t ObjectType = swift_getObjectType(a1);
  uint64_t v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyAvatarShowcaseDisplaying);
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0LL;
  }
  if (v9) {
    uint64_t v11 = a1;
  }
  else {
    uint64_t v11 = 0LL;
  }
  if (v11)
  {
    uint64_t v12 = swift_getObjectType(v11);
    id v13 = a1;
    dispatch thunk of AnyAvatarShowcaseDisplaying.unapply()(v12, v10);
  }

  uint64_t v14 = swift_getObjectType(a1);
  uint64_t v15 = swift_conformsToProtocol2(v14, &protocol descriptor for PlayableView);
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0LL;
  }
  if (v15) {
    uint64_t v17 = a1;
  }
  else {
    uint64_t v17 = 0LL;
  }
  if (v17)
  {
    uint64_t v18 = swift_weakLoadStrong(v3);
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = type metadata accessor for PlaybackCoordinator(0LL);
      id v21 = a1;
      BaseObjectGraph.optional<A>(_:)(v25, v20, v20);
      swift_release(v19);
      uint64_t v22 = (void *)v25[0];
      if (v25[0])
      {
        id v23 = v21;
        id v24 = v22;
        dispatch thunk of PlaybackCoordinator.unregister(playableView:)(v17, v16);
      }

      else
      {
      }
    }
  }

uint64_t sub_1001A8CF4()
{
  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_presentationHints;
  uint64_t v2 = type metadata accessor for Shelf.PresentationHints(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_unknownObjectRelease(*(void *)((char *)v0
                                       + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_pageTraits));
  swift_release(*(void *)((char *)v0
                          + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48LL), *(unsigned __int16 *)(*v0 + 52LL));
}

__n128 sub_1001A8D7C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1
     + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout;
  char v3 = *(_BYTE *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 72);
  __int128 v5 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  __n128 result = *(__n128 *)(v2 + 32);
  __int128 v7 = *(_OWORD *)(v2 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = v3;
  *(void *)(a1 + 72) = v4;
  return result;
}

uint64_t sub_1001A8DB0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t ObjectType = swift_getObjectType(v2);
  swift_unknownObjectRetain(v2);
  uint64_t v5 = dispatch thunk of ComponentContainerDelegate.numberOfItems.getter(ObjectType, v3);
  swift_unknownObjectRelease(v2);
  BOOL v6 = *(void *)(v1
                 + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction) != 0LL;
  uint64_t result = v5 + v6;
  if (__OFADD__(v5, v6))
  {
    __break(1u);
    return 0LL;
  }

  return result;
}

void sub_1001A8E30(uint64_t a1@<X0>, void *a2@<X8>)
{
}

id sub_1001A8E50()
{
  uint64_t v1 = *(void *)v0
     + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout;
  return objc_msgSend( objc_allocWithZone((Class)swift_getObjCClassFromMetadata(*(void *)(*(void *)v0 + 16))),  "initWithFrame:",  0.0,  0.0,  *(double *)(v1 + 32),  *(double *)(v1 + 40));
}

void sub_1001A8EA0(uint64_t a1, uint64_t a2, void *a3)
{
}

void sub_1001A8EC0(void *a1)
{
}

void sub_1001A8EE0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(_BYTE *)(a1 + 2swift_weakDestroy(v0 + 4) = 1;
}

uint64_t sub_1001A8EF4(uint64_t a1, uint64_t a2)
{
  char v4 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 24)) {
      return 1LL;
    }
  }

  else
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      char v4 = 1;
    }
    if ((v4 & 1) == 0) {
      return 1LL;
    }
  }

  return 0LL;
}

id sub_1001A8FF4(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  *(void *)&v4[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView] = 0LL;
  uint64_t v10 = &v4[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_scrollObserver];
  *(void *)uint64_t v10 = 0LL;
  *((void *)v10 + 1) = 0LL;
  v20.id receiver = v4;
  v20.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v15 = v11;
  objc_msgSend(v15, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  id v16 = [v15 contentView];
  objc_msgSend(v16, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  id v17 = [v15 contentView];
  [v17 setInsetsLayoutMarginsFromSafeArea:0];

  id v18 = [v15 contentView];
  [v18 _setSafeAreaInsetsFrozen:1];

  [v15 setInsetsLayoutMarginsFromSafeArea:0];
  [v15 _setSafeAreaInsetsFrozen:1];

  return v15;
}

void sub_1001A9218()
{
  v13.id receiver = v0;
  v13.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v13, "layoutSubviews");
  uint64_t v1 = (id *)&v0[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView], v12, 0LL, 0LL);
  if (*v1)
  {
    id v2 = *v1;
    id v3 = [v0 contentView];
    uint64_t v4 = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
    *(void *)&double v5 = LayoutMarginsAware<>.layoutFrame.getter(v4).n128_u64[0];
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;

    objc_msgSend(v2, "setFrame:", v5, v7, v9, v11);
  }

void sub_1001A9338()
{
  v17.id receiver = v0;
  v17.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v17, "prepareForReuse");
  uint64_t v1 = &v0[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView], v16, 0LL, 0LL);
  id v2 = *(void **)v1;
  if (*(void *)v1)
  {
    id v3 = (char *)v2 + *(void *)((swift_isaMask & *v2) + 0xB8LL);
    uint64_t v4 = *(void *)v3;
    char v5 = v3[8];
    *(void *)id v3 = 0LL;
    v3[8] = 1;
    double v6 = v2;
    sub_1001A7DC0(v4, v5);
    double v7 = (char *)v6 + *(void *)((swift_isaMask & *v6) + 0xC0LL);
    *(void *)double v7 = 0LL;
    v7[8] = 1;
    uint64_t v8 = *(void *)((char *)v6 + *(void *)((swift_isaMask & *v6) + 0x60LL));
    uint64_t v9 = *(void *)(v8 + 40);
    *(void *)(v8 + 40) = 0LL;
    *(void *)(v8 + 48) = 0LL;
    swift_unknownObjectRelease(v9);
    objc_msgSend(v6, "setContentSize:", 0.0, 0.0);
    uint64_t v10 = *(void *)((swift_isaMask & *v6) + 0x98LL);
    *((_BYTE *)v6 + v10) = 0;
    [v6 invalidateIntrinsicContentSize];
    [v6 setNeedsLayout];
    if (*((_BYTE *)v6 + v10) == 1)
    {
      double v11 = (char *)v6 + *(void *)((swift_isaMask & *v6) + 0xA0LL);
      *(void *)double v11 = 0LL;
      *((void *)v11 + 1) = 0LL;
      v11[16] = 0;
    }

    else
    {
      objc_msgSend(v6, "setContentOffset:", 0.0, 0.0);
      uint64_t v12 = (void *)((char *)v6 + *(void *)((swift_isaMask & *v6) + 0x90LL));
      uint64_t v13 = *v12;
      if (*v12)
      {
        uint64_t v14 = v12[1];
        uint64_t ObjectType = swift_getObjectType(*v12);
        swift_unknownObjectRetain(v13);
        dispatch thunk of ScrollObserver.didScroll(in:)(v6, ObjectType, v14);

        swift_unknownObjectRelease(v13);
        return;
      }
    }
  }

void sub_1001A954C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a3 += 16LL;
  swift_beginAccess(a3, v53, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    uint64_t v14 = (id *)(Strong + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView);
    swift_beginAccess(Strong + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView, v52, 0LL, 0LL);
    id v15 = *v14;
    id v16 = *v14;

    if (v15)
    {
      uint64_t v17 = *(void *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x60LL));
      uint64_t v18 = *(void *)(v17 + 40);
      if (v18
        && (uint64_t v19 = a4 + 16,
            uint64_t v20 = *(void *)(v17 + 48),
            swift_beginAccess(v19, v51, 0LL, 0LL),
            (uint64_t v21 = swift_weakLoadStrong(v19)) != 0))
      {
        uint64_t v48 = a1;
        uint64_t v49 = v21;
        if (*(void *)(v17
                       + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_seeAllAction))
        {
          uint64_t ObjectType = swift_getObjectType(v18);
          swift_unknownObjectRetain(v18);
          swift_retain(v17);
          uint64_t v23 = dispatch thunk of ComponentContainerDelegate.numberOfItems.getter(ObjectType, v20);
          swift_release(v17);
          if (v23 == a2)
          {
            uint64_t v24 = swift_getObjectType(v18);
            dispatch thunk of ComponentContainerDelegate.didSelectSeeAll()(v24, v20);

            swift_unknownObjectRelease(v18);
            swift_release(v49);
            return;
          }
        }

        else
        {
          swift_unknownObjectRetain(v18);
        }

        uint64_t v47 = v20;
        uint64_t v25 = (void *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0xB0LL));
        swift_beginAccess(v25, v50, 0LL, 0LL);
        uint64_t v26 = *v25;
        uint64_t v27 = v26 + 64;
        uint64_t v28 = 1LL << *(_BYTE *)(v26 + 32);
        uint64_t v29 = -1LL;
        if (v28 < 64) {
          uint64_t v29 = ~(-1LL << v28);
        }
        unint64_t v30 = v29 & *(void *)(v26 + 64);
        int64_t v31 = (unint64_t)(v28 + 63) >> 6;
        swift_bridgeObjectRetain(v26);
        int64_t v32 = 0LL;
        do
        {
          if (v30)
          {
            unint64_t v33 = __clz(__rbit64(v30));
            v30 &= v30 - 1;
            unint64_t v34 = v33 | (v32 << 6);
          }

          else
          {
            int64_t v35 = v32 + 1;
            if (__OFADD__(v32, 1LL))
            {
              __break(1u);
              goto LABEL_41;
            }

            if (v35 >= v31) {
              goto LABEL_39;
            }
            unint64_t v36 = *(void *)(v27 + 8 * v35);
            ++v32;
            if (!v36)
            {
              int64_t v32 = v35 + 1;
              if (v35 + 1 >= v31) {
                goto LABEL_39;
              }
              unint64_t v36 = *(void *)(v27 + 8 * v32);
              if (!v36)
              {
                int64_t v32 = v35 + 2;
                if (v35 + 2 >= v31) {
                  goto LABEL_39;
                }
                unint64_t v36 = *(void *)(v27 + 8 * v32);
                if (!v36)
                {
                  int64_t v32 = v35 + 3;
                  if (v35 + 3 >= v31) {
                    goto LABEL_39;
                  }
                  unint64_t v36 = *(void *)(v27 + 8 * v32);
                  if (!v36)
                  {
                    int64_t v37 = v35 + 4;
                    if (v37 >= v31)
                    {
LABEL_39:
                      swift_release(v49);
                      swift_release(v26);

                      swift_unknownObjectRelease(v18);
                      return;
                    }

                    unint64_t v36 = *(void *)(v27 + 8 * v37);
                    if (!v36)
                    {
                      while (1)
                      {
                        int64_t v32 = v37 + 1;
                        if (__OFADD__(v37, 1LL)) {
                          break;
                        }
                        if (v32 >= v31) {
                          goto LABEL_39;
                        }
                        unint64_t v36 = *(void *)(v27 + 8 * v32);
                        ++v37;
                        if (v36) {
                          goto LABEL_32;
                        }
                      }

void sub_1001A99B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000031E8(&qword_1002EAD40);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000031E8(&qword_1002EAD48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = (void **)((char *)v0 + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView);
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView, v33, 0LL, 0LL);
  uint64_t v10 = *v9;
  if (*v9)
  {
    uint64_t v11 = swift_isaMask & *v10;
    uint64_t v12 = *(void *)((char *)v10 + *(void *)(v11 + 0x60));
    uint64_t v13 = *(void *)(v12 + 40);
    if (v13)
    {
      int64_t v32 = v1;
      uint64_t v14 = *(void *)(v12 + 48);
      uint64_t ObjectType = swift_getObjectType(v13);
      int64_t v31 = v10;
      swift_unknownObjectRetain(v13);
      uint64_t v16 = dispatch thunk of ComponentContainerDelegate.impressionsCalculator.getter(ObjectType, v14);
      if (v16)
      {
        uint64_t v18 = v16;
        ImpressionsCalculator.isVisible.setter(0LL);
        __n128 v17 = swift_release(v18);
      }

      dispatch thunk of ComponentContainerDelegate.containerState.getter(ObjectType, v14, v17);
      uint64_t v19 = WritableStateLens.init(_:)(v4, &type metadata for HorizontalShelfContainerCell.ShelfContainerState);
      __chkstk_darwin(v19);
      uint64_t v1 = v32;
      *(&v31 - 2) = v32;
      unint64_t v20 = sub_1001AA07C();
      WritableStateLens<A>.updateValue(_:)(sub_1001AA064, &v31 - 4, v5, v20);
      __n128 v21 = swift_unknownObjectRelease(v13);
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v21);
      uint64_t v11 = swift_isaMask & *v31;
    }

    else
    {
      uint64_t v22 = v10;
    }

    uint64_t v23 = *(void *)(v11 + 128);
    char v24 = *((_BYTE *)v10 + v23);
    *((_BYTE *)v10 + v23) = 0;
    sub_1001A6EB4(v24);
    uint64_t v25 = (void *)((char *)v1 + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_scrollObserver);
    uint64_t v26 = *(void *)((char *)v1 + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_scrollObserver);
    uint64_t *v25 = 0LL;
    v25[1] = 0LL;
    swift_unknownObjectRelease(v26);
    uint64_t v27 = *v9;
    if (*v9)
    {
      uint64_t v28 = *v25;
      uint64_t v29 = v25[1];
      swift_unknownObjectRetain(v28);
      unint64_t v30 = v27;
      sub_1001A7894(v28, v29);

      uint64_t v10 = v30;
    }
  }

void sub_1001A9C18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (id *)(a2 + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView);
  swift_beginAccess(a2 + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView, v10, 0LL, 0LL);
  if (*v3)
  {
    uint64_t v4 = *v3;
    [v4 contentOffset];
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = (char *)v4 + *(void *)((swift_isaMask & *v4) + 0xB8LL);
    if (v7[8] == 1)
    {
      uint64_t v7 = (char *)v4 + *(void *)((swift_isaMask & *v4) + 0xC0LL);
      char v8 = v7[8];
    }

    else
    {
      char v8 = 0;
    }

    uint64_t v9 = *(void *)v7;

    *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
    *(_BYTE *)(a1 + 2swift_weakDestroy(v0 + 4) = v8;
  }

uint64_t type metadata accessor for HorizontalShelfContainerCell()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade28HorizontalShelfContainerCell);
}

uint64_t sub_1001A9D38()
{
  return type metadata accessor for HorizontalShelfContainerCell.DataSource(0LL);
}

uint64_t type metadata accessor for HorizontalShelfContainerCell.DataSource(uint64_t a1)
{
  uint64_t result = qword_1002EAC30;
  if (!qword_1002EAC30) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HorizontalShelfContainerCell.DataSource);
  }
  return result;
}

uint64_t sub_1001A9D7C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject.Type + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = "\b";
  v4[3] = &unk_100240548;
  uint64_t result = type metadata accessor for Shelf.PresentationHints(319LL);
  if (v3 <= 0x3F)
  {
    v4[4] = *(void *)(result - 8) + 64LL;
    v4[5] = &unk_100240560;
    v4[6] = &unk_100240578;
    v4[7] = &unk_100240590;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 8LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1001A9E34(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Shelf.contentType.getter(v11);
  uint64_t v12 = sub_1001782D0();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v12) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v14 + 48))(a2, a3 & 1, a4, v12, v14);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1001A9F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Shelf.contentType.getter(v9);
  uint64_t v10 = sub_1001782D0();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v10) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, a3, v10, v12);
  }
  else {
    return 0LL;
  }
}

double sub_1001A9FD4( double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_100195554(a1, a2, a4, a5, a8);
}

void sub_1001AA038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
}

uint64_t sub_1001AA050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1001AAC14(a4, a5, a6);
}

void sub_1001AA064(uint64_t a1)
{
}

unint64_t sub_1001AA07C()
{
  unint64_t result = qword_1002EAD50;
  if (!qword_1002EAD50)
  {
    unint64_t result = swift_getWitnessTable(&unk_100240628, &type metadata for HorizontalShelfContainerCell.ShelfContainerState);
    atomic_store(result, (unint64_t *)&qword_1002EAD50);
  }

  return result;
}

void *sub_1001AA0C0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v5);
  uint64_t v12 = sub_1000031E8(&qword_1002EAD78);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v15 = (void *)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x68LL));
  void *v15 = 0LL;
  v15[1] = 0LL;
  *(void *)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x70LL)) = 3LL;
  *((_BYTE *)v5 + *(void *)((swift_isaMask & *v5) + 0x78LL)) = 0;
  *((_BYTE *)v5 + *(void *)((swift_isaMask & *v5) + 0x80LL)) = 0;
  uint64_t v16 = *(void *)((swift_isaMask & *v5) + 0x88LL);
  id v17 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0LL));
  uint64_t v18 = v5;
  *(void *)((char *)v5 + vswift_unknownObjectWeakDestroy(v0 + 16) = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  uint64_t v19 = (void *)((char *)v18 + *(void *)((swift_isaMask & *v18) + 0x90LL));
  void *v19 = 0LL;
  v19[1] = 0LL;
  *((_BYTE *)v18 + *(void *)((swift_isaMask & *v18) + 0x98LL)) = 0;
  unint64_t v20 = (char *)v18 + *(void *)((swift_isaMask & *v18) + 0xA0LL);
  *(void *)unint64_t v20 = 0LL;
  *((void *)v20 + 1) = 0LL;
  v20[16] = 1;
  uint64_t v21 = sub_100006028(0LL, (unint64_t *)&qword_1002EDEC0, &OBJC_CLASS___UICollectionViewCell_ptr);
  ViewRecycler.init()(v21);
  unint64_t v22 = sub_1001AAF9C();
  ReusePool.init(recycler:limit:)(v14, 5LL, v12, v22);
  uint64_t v23 = *(void *)((swift_isaMask & *v18) + 0xB0LL);
  *(void *)((char *)v18 + v23) = sub_1000E9094(_swiftEmptyArrayStorage);
  char v24 = (char *)v18 + *(void *)((swift_isaMask & *v18) + 0xB8LL);
  *(void *)char v24 = 0LL;
  v24[8] = 1;
  uint64_t v25 = (char *)v18 + *(void *)((swift_isaMask & *v18) + 0xC0LL);
  *(void *)uint64_t v25 = 0LL;
  v25[8] = 1;
  *(void *)((char *)v18 + *(void *)((swift_isaMask & *v18) + 0x60LL)) = a1;
  swift_retain(a1);

  v32.id receiver = v18;
  v32.super_class = ObjectType;
  uint64_t v26 = objc_msgSendSuper2(&v32, "initWithFrame:", a2, a3, a4, a5);
  [v26 setShowsHorizontalScrollIndicator:0];
  [v26 setShowsVerticalScrollIndicator:0];
  [v26 setScrollEnabled:0];
  [v26 setDelegate:*(void *)((char *)v26 + *(void *)((swift_isaMask & *v26) + 0x88))];
  [v26 setClipsToBounds:0];
  [v26 setInsetsLayoutMarginsFromSafeArea:0];
  [v26 _setSafeAreaInsetsFrozen:1];
  [v26 setContentInsetAdjustmentBehavior:2];
  uint64_t v27 = v26;
  BOOL v28 = [v27 effectiveUserInterfaceLayoutDirection] == (id)1;
  id v29 = [v27 layer];
  [v29 setFlipsHorizontalAxis:v28];

  id v30 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v30 addObserver:v27 selector:"lowMemoryWarning:" name:UIApplicationDidReceiveMemoryWarningNotification object:0];

  return v27;
}

id sub_1001AA49C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (id *)&v1[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView], v14, 1LL, 0LL);
  if (*v4 && (id v5 = *v4, sub_1001A7894(0LL, 0LL), v5, *v4))
  {
    [*v4 removeFromSuperview];
    id v6 = *v4;
  }

  else
  {
    id v6 = 0LL;
  }

  *uint64_t v4 = a1;
  id v7 = a1;

  id v8 = *v4;
  if (*v4)
  {
    uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_scrollObserver];
    uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_scrollObserver + 8];
    swift_unknownObjectRetain(v9);
    id v11 = v8;
    sub_1001A7894(v9, v10);
    id v12 = [v2 contentView];
    [v12 addSubview:v11];
  }

  return [v2 setNeedsLayout];
}

void sub_1001AA5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void (*v34)(void *__return_ptr, void, void, void, void, void, void, void, double, double);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;
  uint64_t v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  id v64;
  uint64_t v65;
  void *v66;
  id v67;
  NSString v68;
  uint64_t ObjectType;
  __n128 v70;
  unint64_t v71;
  double v72;
  double v73;
  void *v74;
  double *v75;
  __n128 v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void v94[4];
  char v95[24];
  _OWORD v96[5];
  unint64_t v88 = a6;
  uint64_t v93 = a5;
  uint64_t v92 = a4;
  uint64_t v90 = a2;
  uint64_t v7 = sub_1000031E8(&qword_1002EAD40);
  __chkstk_darwin(v7);
  id v84 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v87 = sub_1000031E8((uint64_t *)&unk_1002EAD60);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v89 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v10 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  id v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Shelf.contentType.getter(v17);
  uint64_t v18 = sub_1001782D0();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (v18)
  {
    id v83 = a3;
    id v21 = v88;
    id v22 = [v88 traitCollection];
    char v23 = UITraitCollection.prefersAccessibilityLayouts.getter(v22);

    if ((v23 & 1) != 0) {
      uint64_t v24 = 1LL;
    }
    else {
      uint64_t v24 = Shelf.rowsPerColumn.getter();
    }
    uint64_t v25 = v91;
    [v91 frame];
    double v27 = v26;
    double v29 = v28;
    uint64_t v31 = Shelf.items.getter(v30);
    uint64_t v32 = *(void *)(v31 + 16);
    __n128 v33 = swift_bridgeObjectRelease(v31);
    Shelf.presentationHints.getter(v33);
    unint64_t v34 = *(void (**)(void *__return_ptr, void, void, void, void, void, void, void, double, double))(v20 + 72);
    int64_t v35 = v32;
    unint64_t v36 = v24;
    int64_t v37 = v83;
    id v38 = v21;
    uint64_t v39 = v20;
    uint64_t v40 = v25;
    v34(v96, v35, v36, v12, v83, v21, v18, v39, v27, v29);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v89);
    uint64_t v41 = v90;
    swift_retain(v90);
    swift_retain(v37);
    uint64_t v42 = v92;
    swift_unknownObjectRetain(v92);
    Shelf.presentationHints.getter(v43);
    uint64_t v44 = type metadata accessor for HorizontalShelfContainerCell.DataSource(0LL);
    swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
    swift_unknownObjectRetain(v38);
    char v45 = v93;
    uint64_t v46 = sub_1001A8290(v18, v96, v41, v37, v42, v93, (uint64_t)v12, v38);
    uint64_t v47 = (id *)&v40[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView];
    swift_beginAccess(&v40[OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView], v95, 0LL, 0LL);
    uint64_t v48 = *v47;
    if (*v47)
    {
      uint64_t v49 = *(void *)((swift_isaMask & *v48) + 0x60LL);
      uint64_t v50 = *(void *)((char *)v48 + v49);
      *(void *)((char *)v48 + v49) = v46;
      swift_retain_n(v46, 2LL);
      uint64_t v51 = v48;
      swift_release(v50);
      objc_msgSend(v51, "setContentSize:", 0.0, 0.0);
      *((_BYTE *)v51 + *(void *)((swift_isaMask & *v51) + 0x98LL)) = 1;
      [v51 invalidateIntrinsicContentSize];
      [v51 setNeedsLayout];

      swift_release(v46);
      uint64_t v52 = v87;
      uint64_t v53 = v85;
      uint64_t v54 = v84;
    }

    else
    {
      uint64_t v55 = [v40 contentView];
      uint64_t v56 = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
      *(void *)&id v57 = LayoutMarginsAware<>.layoutFrame.getter(v56).n128_u64[0];
      uint64_t v59 = v58;
      uint64_t v61 = v60;
      uint64_t v63 = v62;

      uint64_t v64 = objc_allocWithZone((Class)sub_1000031E8(&qword_1002EAD70));
      swift_retain(v46);
      uint64_t v66 = sub_1001AA0C0(v65, v57, v59, v61, v63);
      swift_release(v46);
      sub_1001AA49C(v66);

      uint64_t v52 = v87;
      uint64_t v53 = v85;
      uint64_t v54 = v84;
      if (*v47)
      {
        uint64_t v67 = *v47;
        id v68 = String._bridgeToObjectiveC()();
        [v67 setAccessibilityIdentifier:v68];
      }
    }

    uint64_t ObjectType = swift_getObjectType(v42);
    dispatch thunk of ComponentContainerDelegate.containerState.getter(ObjectType, v45, v70);
    StateLens.init(_:)(v54, &type metadata for HorizontalShelfContainerCell.ShelfContainerState);
    uint64_t v71 = sub_1001AA07C();
    StateLens<A>.currentValue.getter(v94, v52, v71);
    id v73 = *(double *)v94;
    uint64_t v72 = *(double *)&v94[1];
    swift_beginAccess(v47, v94, 32LL, 0LL);
    uint64_t v74 = *v47;
    if (*v47)
    {
      swift_endAccess(v94);
      if (*((_BYTE *)v74 + *(void *)((swift_isaMask & *v74) + 0x98LL)) == 1)
      {
        id v75 = (double *)((char *)v74 + *(void *)((swift_isaMask & *v74) + 0xA0LL));
        *id v75 = v73;
        v75[1] = v72;
        *((_BYTE *)v75 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
        uint64_t v76 = swift_release(v46);
      }

      else
      {
        uint64_t v77 = v74;
        objc_msgSend(v77, "setContentOffset:", v73, v72);
        uint64_t v78 = (void *)((char *)v77 + *(void *)((swift_isaMask & *v77) + 0x90LL));
        id v79 = *v78;
        if (*v78)
        {
          uint64_t v80 = v78[1];
          id v81 = swift_getObjectType(*v78);
          swift_unknownObjectRetain(v79);
          dispatch thunk of ScrollObserver.didScroll(in:)(v77, v81, v80);
          swift_release(v46);

          uint64_t v76 = swift_unknownObjectRelease(v79);
        }

        else
        {
          swift_release(v46);
        }
      }

      (*(void (**)(char *, uint64_t, __n128))(v86 + 8))(v53, v52, v76);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v86 + 8))(v53, v52);
      swift_endAccess(v94);
      swift_release(v46);
    }
  }

uint64_t sub_1001AAC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v7 = sub_1000031E8(&qword_1002EAD40);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002EAD60);
  uint64_t v44 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t ObjectType = swift_getObjectType(a2);
  uint64_t v13 = a3;
  uint64_t v14 = dispatch thunk of ComponentContainerDelegate.scrollObserver.getter(ObjectType, a3);
  uint64_t v15 = (uint64_t *)(v3 + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_scrollObserver);
  uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_scrollObserver);
  uint64_t *v15 = v14;
  v15[1] = v17;
  swift_unknownObjectRetain(v14);
  swift_unknownObjectRelease(v16);
  uint64_t v41 = v4;
  uint64_t v18 = (void **)(v4 + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView);
  swift_beginAccess(v4 + OBJC_IVAR____TtC6Arcade28HorizontalShelfContainerCell_shelfView, v47, 0LL, 0LL);
  uint64_t v19 = *v18;
  if (*v18)
  {
    uint64_t v20 = *v15;
    uint64_t v21 = v15[1];
    swift_unknownObjectRetain(v20);
    id v22 = v19;
    sub_1001A7894(v20, v21);
    swift_unknownObjectRelease(v14);
  }

  else
  {
    __n128 v23 = swift_unknownObjectRelease(v14);
  }

  if (*v18)
  {
    uint64_t v24 = *(void *)((char *)*v18 + *(void *)((swift_isaMask & **v18) + 0x60LL));
    uint64_t v25 = *(void *)(v24 + 40);
    *(void *)(v24 + 40) = a2;
    *(void *)(v24 + 48) = v13;
    swift_retain(v24);
    swift_unknownObjectRelease(v25);
    swift_unknownObjectRetain(a2);
    __n128 v23 = swift_release(v24);
    double v26 = *v18;
    if (*v18)
    {
      uint64_t v27 = *(void *)((swift_isaMask & *v26) + 0x80LL);
      char v28 = *((_BYTE *)v26 + v27);
      *((_BYTE *)v26 + v27) = 1;
      double v29 = v26;
      sub_1001A6EB4(v28);
    }
  }

  dispatch thunk of ComponentContainerDelegate.containerState.getter(ObjectType, v13, v23);
  StateLens.init(_:)(v9, &type metadata for HorizontalShelfContainerCell.ShelfContainerState);
  unint64_t v30 = sub_1001AA07C();
  StateLens<A>.currentValue.getter(v45, v10, v30);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v12, v10);
  if ((v46 & 1) == 0)
  {
    if (!*v18) {
      return result;
    }
    uint64_t v32 = (char *)*v18 + *(void *)((swift_isaMask & **v18) + 0xC0LL);
    *(void *)uint64_t v32 = v45[2];
    v32[8] = 0;
  }

  __n128 v33 = *v18;
  if (*v18)
  {
    uint64_t v34 = swift_allocObject(&unk_10028CB08, 24LL, 7LL);
    swift_unknownObjectWeakInit(v34 + 16, v41);
    uint64_t v35 = swift_allocObject(&unk_10028CB30, 24LL, 7LL);
    swift_weakInit(v35 + 16, v42);
    uint64_t v36 = swift_allocObject(&unk_10028CB58, 32LL, 7LL);
    *(void *)(v36 + swift_unknownObjectWeakDestroy(v0 + 16) = v34;
    *(void *)(v36 + 2swift_weakDestroy(v0 + 4) = v35;
    int64_t v37 = (void *)((char *)v33 + *(void *)((swift_isaMask & *v33) + 0x68LL));
    uint64_t v39 = *v37;
    uint64_t v38 = v37[1];
    uint64_t *v37 = (uint64_t)sub_1001AAF94;
    v37[1] = v36;
    return sub_10000D3D8(v39, v38);
  }

  return result;
}

uint64_t sub_1001AAF20()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001AAF44()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001AAF68()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1001AAF94(uint64_t a1, uint64_t a2)
{
}

unint64_t sub_1001AAF9C()
{
  unint64_t result = qword_1002EAD80;
  if (!qword_1002EAD80)
  {
    uint64_t v1 = sub_100003274(&qword_1002EAD78);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002EAD80);
  }

  return result;
}

uint64_t sub_1001AAFE8()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1001AB00C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001AB01C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t getEnumTagSinglePayload for HorizontalShelfContainerCell.ShelfContainerState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for HorizontalShelfContainerCell.ShelfContainerState( uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
    *(_BYTE *)(result + 2swift_weakDestroy(v0 + 4) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalShelfContainerCell.ShelfContainerState()
{
  return &type metadata for HorizontalShelfContainerCell.ShelfContainerState;
}

unint64_t sub_1001AB088()
{
  unint64_t result = qword_1002EAD90;
  if (!qword_1002EAD90)
  {
    unint64_t result = swift_getWitnessTable(&unk_10024060C, &type metadata for HorizontalShelfContainerCell.ShelfContainerState);
    atomic_store(result, (unint64_t *)&qword_1002EAD90);
  }

  return result;
}

unint64_t sub_1001AB0D0()
{
  unint64_t result = qword_1002EAD98;
  if (!qword_1002EAD98)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002405E4, &type metadata for HorizontalShelfContainerCell.ShelfContainerState);
    atomic_store(result, (unint64_t *)&qword_1002EAD98);
  }

  return result;
}

uint64_t sub_1001AB114@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002E7020);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v29 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  if (!a1) {
    goto LABEL_7;
  }
  if (a1 == 1)
  {
    uint64_t v17 = v2 + *(int *)(sub_1000031E8((uint64_t *)&unk_1002DDB70) + 28);
    sub_10001027C(v17, (uint64_t)v16, (uint64_t *)&unk_1002E7020);
    uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002DE240);
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    int v21 = v20(v16, 1LL, v18);
    sub_100006060((uint64_t)v16, (uint64_t *)&unk_1002E7020);
    if (v21 != 1)
    {
      sub_10001027C(v17, (uint64_t)v11, (uint64_t *)&unk_1002E7020);
      uint64_t result = v20(v11, 1LL, v18);
      if ((_DWORD)result != 1) {
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a2, v11, v18);
      }
      __break(1u);
      goto LABEL_11;
    }

BOOL sub_1001AB370(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2;
  uint64_t v7 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v44[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(void *)&v2[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_explicitSummary + 8]) {
    return 1LL;
  }
  uint64_t v11 = OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems;
  uint64_t v12 = *(void *)&v2[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems];
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0) {
      uint64_t v40 = *(void *)&v6[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems];
    }
    else {
      uint64_t v40 = v12 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v6[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems]);
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v12);
    if (v41 != 1) {
      return 1LL;
    }
LABEL_4:
    uint64_t v13 = *(void *)&v6[v11];
    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0) {
        uint64_t v42 = *(void *)&v6[v11];
      }
      else {
        uint64_t v42 = v13 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(*(void *)&v6[v11]);
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v42);
      if (v14)
      {
LABEL_6:
        if ((v13 & 0xC000000000000001LL) != 0)
        {
          uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v13);
        }

        else
        {
          if (!*(void *)((v13 & 0xFFFFFFFFFFFFF8LL) + 0x10))
          {
            __break(1u);
            goto LABEL_29;
          }

          uint64_t v14 = *(void *)(v13 + 32);
          swift_retain(v14);
        }

        swift_bridgeObjectRelease(v13);
        AnnotationItem.subText.getter(v15);
        uint64_t v17 = v16;
        *(void *)&double v18 = swift_bridgeObjectRelease(v16).n128_u64[0];
        if (v17)
        {
          swift_release(v14);
          return 1LL;
        }

        uint64_t v19 = *(void **)&v6[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleLabel];
        id v20 = objc_msgSend(v6, "contentView", v18);
        [v20 frame];

        CGRect.subtracting(insets:)([v6 layoutMargins]);
        objc_msgSend(v19, "sizeThatFits:", v21, v22);
        double v24 = v23;
        id v25 = [v6 contentView];
        [v25 frame];

        *(void *)&v45.origin.x = CGRect.subtracting(insets:)([v6 layoutMargins]).n128_u64[0];
        double Width = CGRectGetWidth(v45);
        id v26 = [v6 contentView];
        [v26 frame];

        *(void *)&v46.origin.x = CGRect.subtracting(insets:)([v6 layoutMargins]).n128_u64[0];
        double Height = CGRectGetHeight(v46);
        uint64_t v13 = *(void *)&v6[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel];
        id v28 = [(id)v13 text];
        if (v28)
        {
          uint64_t v29 = v28;
          uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
          uint64_t v11 = v30;
        }

        else
        {
          uint64_t v3 = 0LL;
          uint64_t v11 = 0LL;
        }

        double v5 = Height - v24;
        if (qword_1002DC670 == -1)
        {
LABEL_15:
          uint64_t v31 = sub_1000061F4(v7, (uint64_t)qword_1002EEFA0);
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v31, v7);
          id v32 = [(id)v13 numberOfLines];
          uint64_t v33 = type metadata accessor for Feature(0LL);
          v44[3] = v33;
          v44[4] = sub_1000100C0();
          uint64_t v34 = sub_100009D54(v44);
          (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104LL))( v34,  enum case for Feature.measurement_with_labelplaceholder(_:),  v33);
          LOBYTE(v33) = isFeatureEnabled(_:)(v44);
          _s6Arcade17PillOverlayLayoutVwxx_0(v44);
          double v35 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)( v3,  v11,  v10,  4LL,  0LL,  0LL,  v32,  0LL,  Width,  1.79769313e308,  v6,  v33 & 1);
          __n128 v36 = swift_bridgeObjectRelease(v11);
          (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v36);
          objc_msgSend((id)v13, "sizeThatFits:", Width, v5);
          double v38 = v37;
          swift_release(v14);
          return floor(v38 - v35) > 0.0;
        }

void sub_1001AB7D4()
{
  v16.id receiver = v0;
  v16.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v16, "prepareForReuse");
  uint64_t v1 = &v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleText];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleText + 8];
  *(void *)uint64_t v1 = 0LL;
  *((void *)v1 + 1) = 0LL;
  *(void *)&double v3 = swift_bridgeObjectRelease(v2).n128_u64[0];
  sub_1001AD67C(v3);
  uint64_t v4 = &v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_explicitSummary];
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_explicitSummary + 8];
  *(void *)uint64_t v4 = 0LL;
  *((void *)v4 + 1) = 0LL;
  swift_bridgeObjectRelease(v5);
  sub_1001AD750();
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems];
  *(void *)&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = (uint64_t *)&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews], v15, 1LL, 0LL);
  uint64_t v8 = *v7;
  if (!((unint64_t)*v7 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*v7);
    if (v9) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease(v8);
    uint64_t v14 = *v7;
    *uint64_t v7 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v14);
    return;
  }

  if (v8 < 0) {
    uint64_t v13 = *v7;
  }
  else {
    uint64_t v13 = v8 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v7);
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v9) {
    goto LABEL_13;
  }
LABEL_3:
  if (v9 >= 1)
  {
    for (uint64_t i = 0LL; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001LL) != 0) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
      }
      else {
        id v11 = *(id *)(v8 + 8 * i + 32);
      }
      uint64_t v12 = v11;
      [v11 removeFromSuperview];
    }

    goto LABEL_13;
  }

  __break(1u);
}

uint64_t sub_1001AB94C()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC670 != -1) {
    swift_once(&qword_1002DC670, sub_100071638);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_1000061F4(v5, (uint64_t)qword_1002EEFA0);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL);
  uint64_t v19 = v6;
  v7(v4, v6, v5);
  uint64_t v8 = enum case for FontSource.useCase(_:);
  uint64_t v9 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v9(v4, enum case for FontSource.useCase(_:), v0);
  uint64_t v18 = type metadata accessor for StaticDimension(0LL);
  uint64_t v34 = v18;
  double v35 = &protocol witness table for StaticDimension;
  sub_100009D54(&v33);
  uint64_t v31 = v0;
  id v32 = &protocol witness table for FontSource;
  uint64_t v10 = sub_100009D54(&v30);
  uint64_t v17 = (void (*)(void *, char *, uint64_t))v1[2];
  v17(v10, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v30, 30.0);
  id v11 = (void (*)(char *, uint64_t))v1[1];
  v11(v4, v0);
  v7(v4, v6, v5);
  v9(v4, v8, v0);
  uint64_t v12 = v18;
  uint64_t v31 = v18;
  id v32 = &protocol witness table for StaticDimension;
  sub_100009D54(&v30);
  id v28 = (void *)v0;
  uint64_t v29 = &protocol witness table for FontSource;
  uint64_t v13 = sub_100009D54(&v27);
  uint64_t v14 = v17;
  v17(v13, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v27, 30.0);
  v11(v4, v0);
  id v28 = &type metadata for Double;
  uint64_t v29 = &protocol witness table for Double;
  id v26 = &protocol witness table for Double;
  *(void *)&__int128 v27 = 0x4028000000000000LL;
  id v25 = &type metadata for Double;
  *(void *)&__int128 v24 = 0xC000000000000000LL;
  v7(v4, v19, v5);
  v9(v4, v8, v0);
  uint64_t v22 = v12;
  double v23 = &protocol witness table for StaticDimension;
  sub_100009D54(&v21);
  v20[3] = v0;
  v20[4] = &protocol witness table for FontSource;
  uint64_t v15 = sub_100009D54(v20);
  v14(v15, v4, v0);
  StaticDimension.init(_:scaledLike:)(v20, 16.0);
  v11(v4, v0);
  sub_100009D90(&v33, (uint64_t)&unk_1002F13F8);
  sub_100009D90(&v30, (uint64_t)&unk_1002F1420);
  sub_100009D90(&v27, (uint64_t)&unk_1002F1448);
  sub_100009D90(&v24, (uint64_t)&unk_1002F1470);
  return sub_100009D90(&v21, (uint64_t)&unk_1002F1498);
}

uint64_t sub_1001ABC40()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002E7020);
  __chkstk_darwin(v3);
  uint64_t v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  id v28 = (char *)&v27 - v6;
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v30 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v29 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000FF90(v0, qword_1002EADA0);
  uint64_t v32 = sub_1000061F4(v0, (uint64_t)qword_1002EADA0);
  id v9 = [objc_allocWithZone(UIColor) initWithWhite:0.0 alpha:0.5];
  id v10 = [objc_allocWithZone(UIColor) initWithWhite:1.0 alpha:0.5];
  uint64_t v11 = sub_1000031E8(&qword_1002DE250);
  v35[0] = v11;
  uint64_t v12 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  v35[1] = v12;
  uint64_t KeyPath = swift_getKeyPath(&unk_100240718, v35);
  id v36 = v9;
  id v37 = v10;
  Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v37, &v36, v12);
  id v14 = [objc_allocWithZone(UIColor) initWithWhite:0.0 alpha:0.5];
  v34[0] = v11;
  v34[1] = v12;
  uint64_t v15 = swift_getKeyPath(&unk_100240718, v34);
  id v36 = v14;
  id v37 = v14;
  id v16 = v14;
  uint64_t v17 = (uint64_t)v28;
  Conditional<>.init(property:trueValue:falseValue:)(v15, &v37, &v36, v12);
  uint64_t v18 = v30;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
  v19(v17, 0LL, 1LL, v7);
  id v20 = [objc_allocWithZone(UIColor) initWithWhite:0.0 alpha:0.5];
  v33[0] = v11;
  v33[1] = v12;
  uint64_t v21 = swift_getKeyPath(&unk_100240718, v33);
  id v36 = v20;
  id v37 = v20;
  id v22 = v20;
  uint64_t v23 = (uint64_t)v31;
  Conditional<>.init(property:trueValue:falseValue:)(v21, &v37, &v36, v12);
  v19(v23, 0LL, 1LL, v7);
  uint64_t v24 = (uint64_t)&v2[*(int *)(v0 + 28)];
  v19(v24, 1LL, 1LL, v7);
  uint64_t v25 = (uint64_t)&v2[*(int *)(v0 + 32)];
  v19(v25, 1LL, 1LL, v7);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v2, v29, v7);
  sub_1000C978C(v17, v24);
  sub_1000C978C(v23, v25);
  return sub_10003FBFC((uint64_t)v2, v32, (uint64_t *)&unk_1002DDB70);
}

uint64_t sub_1001ABF80()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002E7020);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v31 = (char *)&v28 - v6;
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v30 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v29 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000FF90(v0, qword_1002EADB8);
  uint64_t v33 = sub_1000061F4(v0, (uint64_t)qword_1002EADB8);
  id v9 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v10 = [v9 blackColor];
  id v11 = [v9 whiteColor];
  uint64_t v12 = sub_1000031E8(&qword_1002DE250);
  v36[0] = v12;
  uint64_t v13 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  v36[1] = v13;
  uint64_t KeyPath = swift_getKeyPath(&unk_100240718, v36);
  id v37 = v10;
  id v38 = v11;
  Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v38, &v37, v13);
  id v15 = [v9 blackColor];
  v35[0] = v12;
  v35[1] = v13;
  uint64_t v16 = swift_getKeyPath(&unk_100240718, v35);
  id v37 = v15;
  id v38 = v15;
  id v17 = v15;
  uint64_t v18 = (uint64_t)v31;
  Conditional<>.init(property:trueValue:falseValue:)(v16, &v38, &v37, v13);
  uint64_t v19 = v30;
  id v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
  v20(v18, 0LL, 1LL, v7);
  id v21 = [v9 blackColor];
  v34[0] = v12;
  v34[1] = v13;
  uint64_t v22 = swift_getKeyPath(&unk_100240718, v34);
  id v37 = v21;
  id v38 = v21;
  id v23 = v21;
  uint64_t v24 = (uint64_t)v32;
  Conditional<>.init(property:trueValue:falseValue:)(v22, &v38, &v37, v13);
  v20(v24, 0LL, 1LL, v7);
  uint64_t v25 = (uint64_t)&v2[*(int *)(v0 + 28)];
  v20(v25, 1LL, 1LL, v7);
  uint64_t v26 = (uint64_t)&v2[*(int *)(v0 + 32)];
  v20(v26, 1LL, 1LL, v7);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v2, v29, v7);
  sub_1000C978C(v18, v25);
  sub_1000C978C(v24, v26);
  return sub_10003FBFC((uint64_t)v2, v33, (uint64_t *)&unk_1002DDB70);
}

id sub_1001AC2B8()
{
  id result = [objc_allocWithZone(UIColor) initWithWhite:0.0 alpha:0.5];
  qword_1002EADD0 = (uint64_t)result;
  return result;
}

UIColor sub_1001AC2F0()
{
  id v0 = [(id)objc_opt_self(UIColor) clearColor];
  sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 0.89621).super.isa;
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 0.89621).super.isa;
  qword_1002EADD8 = (uint64_t)v0;
  qword_1002EADE0 = (uint64_t)isa;
  qword_1002EADE8 = (uint64_t)result.super.isa;
  return result;
}

uint64_t sub_1001AC3A0()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002E8CC0);
  sub_10000FF90(v0, qword_1002EADF0);
  sub_1000061F4(v0, (uint64_t)qword_1002EADF0);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002406E0, v1);
  uint64_t v3 = (void *)objc_opt_self(&OBJC_CLASS___UIBlurEffect);
  id v7 = [v3 effectWithStyle:4000];
  id v6 = [v3 effectWithStyle:4005];
  uint64_t v4 = sub_100006028(0LL, (unint64_t *)&unk_1002EA870, &OBJC_CLASS___UIBlurEffect_ptr);
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v7, &v6, v4);
}

char *sub_1001AC52C(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v73 = sub_1000031E8(&qword_1002EAE80);
  __chkstk_darwin(v73);
  id v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for FontUseCase(0LL, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v17 = &v5[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_itemLayoutContext];
  uint64_t v18 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(v17, 1LL, 1LL, v18);
  uint64_t v19 = OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleLabel;
  uint64_t v20 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v21 = qword_1002DC670;
  uint64_t v22 = v5;
  if (v21 != -1) {
    swift_once(&qword_1002DC670, sub_100071638);
  }
  uint64_t v23 = sub_1000061F4(v13, (uint64_t)qword_1002EEFA0);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v24(v16, v23, v13);
  *(void *)&v5[v19] = sub_1000137B8((uint64_t)v16, 2LL, 0LL, 1, 0);
  uint64_t v25 = OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel;
  v24(v16, v23, v13);
  uint64_t v26 = (objc_class *)v20;
  *(void *)&v22[v25] = sub_1000137B8((uint64_t)v16, 2LL, 0LL, 1, 0);
  uint64_t v27 = _s8ItemViewCMa();
  ViewRecycler.init()(v27);
  uint64_t v28 = sub_100061B94(&qword_1002EAE88, &qword_1002EAE80, (uint64_t)&protocol conformance descriptor for ViewRecycler<A>);
  ReusePool.init(recycler:limit:)(v11, 5LL, v73, v28);
  *(void *)&v22[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews] = _swiftEmptyArrayStorage;
  *(void *)&v22[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkLabel] = 0LL;
  *(void *)&v22[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView] = 0LL;
  v22[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_isExpanded] = 0;
  uint64_t v29 = &v22[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleText];
  *(void *)uint64_t v29 = 0LL;
  *((void *)v29 + 1) = 0LL;
  uint64_t v30 = &v22[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_explicitSummary];
  *(void *)uint64_t v30 = 0LL;
  *((void *)v30 + 1) = 0LL;
  *(void *)&v22[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems] = _swiftEmptyArrayStorage;
  uint64_t v31 = &v22[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkAction];
  uint64_t v32 = sub_1000031E8(&qword_1002DEA18);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v31, 1LL, 1LL, v32);

  v79.id receiver = v22;
  v79.super_class = ObjectType;
  uint64_t v33 = (char *)objc_msgSendSuper2(&v79, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v34 = OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleLabel;
  double v35 = *(unsigned __int8 **)&v33[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleLabel];
  id v36 = v33;
  [v35 setNumberOfLines:1];
  int v37 = v35[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v35[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v37 != 1)
  {
    id v38 = v35;
    id v39 = [v38 traitCollection];
    char v40 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v40 & 1) != 0) {
      uint64_t v41 = 2LL;
    }
    else {
      uint64_t v41 = 0LL;
    }
    v78.id receiver = v38;
    v78.super_class = v26;
    objc_msgSendSuper2(&v78, "setTextAlignment:", v41, v73);
  }

  id v42 = objc_msgSend(v36, "contentView", v73);
  [v42 addSubview:*(void *)&v33[v34]];

  uint64_t v43 = OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel;
  uint64_t v44 = *(unsigned __int8 **)&v36[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel];
  [v44 setNumberOfLines:1];
  int v45 = v44[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v44[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v45 != 1)
  {
    CGRect v46 = v44;
    id v47 = [v46 traitCollection];
    char v48 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v48 & 1) != 0) {
      uint64_t v49 = 2LL;
    }
    else {
      uint64_t v49 = 0LL;
    }
    v77.id receiver = v46;
    v77.super_class = v26;
    objc_msgSendSuper2(&v77, "setTextAlignment:", v49);
  }

  id v50 = [v36 contentView];
  [v50 addSubview:*(void *)&v36[v43]];

  uint64_t v51 = &v36[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  __int128 v52 = *(_OWORD *)&v36[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
  v87[0] = *(_OWORD *)&v36[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  v87[1] = v52;
  char v88 = v36[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)uint64_t v51 = 0LL;
  *((void *)v51 + 1) = 0x4039000000000000LL;
  v51[16] = 0;
  *((void *)v51 + 3) = 0LL;
  v51[32] = 1;
  uint64_t v53 = v36;
  sub_1000690F4((uint64_t)v87, v54, v55);

  __int128 v80 = 0uLL;
  uint64_t v81 = 0LL;
  uint64_t v82 = 0x4024000000000000LL;
  char v83 = 0;
  uint64_t v84 = 0LL;
  uint64_t v85 = 0LL;
  char v86 = 1;
  uint64_t v56 = v53;
  sub_10006779C(&v80);

  id v57 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  __n128 v58 = v56;
  id v59 = [v57 blackColor];
  id v60 = [v59 CGColor];

  uint64_t v61 = &v58[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v62 = *(void **)&v58[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v63 = *(void **)&v58[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
  uint64_t v64 = *(void **)&v58[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
  *(void *)uint64_t v61 = v60;
  *(int64x2_t *)(v61 + 8) = vdupq_n_s64(1uLL);
  id v65 = v62;
  sub_10000AAF8(v63);
  sub_10000AAF8(v64);
  id v66 = v60;

  sub_10000AB08(v63);
  sub_10000AB08(v64);
  sub_100069248(v62, v63, (unint64_t)v64);

  sub_10000AB08(v63);
  sub_10000AB08(v64);

  uint64_t v67 = &v58[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v68 = *(_DWORD *)&v58[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v62) = *(_DWORD *)&v58[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v66) = v58[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v63) = v58[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)uint64_t v67 = 0;
  *((_DWORD *)v67 + 1) = 1051931443;
  v67[8] = 0;
  uint64_t v69 = *((unsigned int *)v67 + 3);
  *((_DWORD *)v67 + 3) = 0;
  v67[16] = 1;
  uint64_t v70 = v58;
  char v76 = (char)v66;
  char v75 = (char)v63;
  v71.n128_u32[0] = v68;
  sub_1000693B0((int)v62, v66 | (unint64_t)(v69 << 32), (char)v63, v71);

  return v70;
}

void sub_1001ACCD4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = Annotation.items.getter();
  uint64_t v7 = v6;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 >= 0) {
      v6 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v6);
  }

  else
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  swift_bridgeObjectRelease(v7);
  if (__OFSUB__(v8, 1LL))
  {
    __break(1u);
  }

  else
  {
    _s8ItemViewCMa();
    sub_10006FDE4(a2, v8 - 1 == a1, a3);
  }

double sub_1001ACD80(uint64_t a1, double a2, double a3)
{
  if (qword_1002DD028 != -1) {
    swift_once(&qword_1002DD028, sub_1001AB94C);
  }
  sub_10005322C(xmmword_1002F13F8, v31);
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleLabel);
  uint64_t v8 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v29 = v8;
  uint64_t v30 = &protocol witness table for UILabel;
  uint64_t v27 = &protocol witness table for UILabel;
  *(void *)&__int128 v28 = v7;
  id v9 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel);
  uint64_t v26 = v8;
  *(void *)&__int128 v25 = v9;
  uint64_t v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews);
  swift_beginAccess(v3 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews, v24, 0LL, 0LL);
  uint64_t v11 = *v10;
  id v12 = v7;
  id v13 = v9;
  swift_bridgeObjectRetain(v11);
  uint64_t v15 = sub_10005A4B4(v14);
  swift_bridgeObjectRelease(v11);
  uint64_t v16 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkLabel);
  if (v16)
  {
    *((void *)&v22 + 1) = v8;
    uint64_t v23 = &protocol witness table for UILabel;
    *(void *)&__int128 v21 = v16;
  }

  else
  {
    uint64_t v23 = 0LL;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
  }

  *(_OWORD *)&v35[40] = 0u;
  __int128 v36 = 0u;
  char v17 = *(_BYTE *)(v3 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_isExpanded);
  __int128 v49 = v31[10];
  __int128 v50 = v31[11];
  uint64_t v37 = 0LL;
  uint64_t v51 = v32;
  __int128 v45 = v31[6];
  __int128 v46 = v31[7];
  __int128 v47 = v31[8];
  __int128 v48 = v31[9];
  __int128 v41 = v31[2];
  __int128 v42 = v31[3];
  __int128 v43 = v31[4];
  __int128 v44 = v31[5];
  __int128 v39 = v31[0];
  __int128 v40 = v31[1];
  sub_100009D90(&v28, (uint64_t)v33);
  sub_100009D90(&v25, (uint64_t)v34);
  v34[5] = v15;
  sub_10003FBFC((uint64_t)&v21, (uint64_t)v35, (uint64_t *)&unk_1002EAEB0);
  char v38 = v17;
  swift_getObjectType(a1);
  id v18 = v16;
  double v19 = sub_1000562C8(a1, (uint64_t)v33, a2, a3);
  sub_1001B0090(v33);
  return v19;
}

void *sub_1001AD01C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v64.id receiver = v1;
  v64.super_class = ObjectType;
  objc_msgSendSuper2(&v64, "layoutSubviews", v4);
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel];
  uint64_t v8 = OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_isExpanded;
  [v7 setHidden:v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_isExpanded]];
  if (qword_1002DD028 != -1) {
    swift_once(&qword_1002DD028, sub_1001AB94C);
  }
  sub_10005322C(xmmword_1002F13F8, v44);
  id v9 = *(void **)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleLabel];
  uint64_t v10 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v42 = v10;
  __int128 v43 = &protocol witness table for UILabel;
  __int128 v40 = &protocol witness table for UILabel;
  *(void *)&__int128 v41 = v9;
  uint64_t v39 = v10;
  *(void *)&__int128 v38 = v7;
  uint64_t v11 = &v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews], &v37, 0LL, 0LL);
  uint64_t v12 = *(void *)v11;
  id v13 = v9;
  id v14 = v7;
  swift_bridgeObjectRetain(v12);
  uint64_t v16 = sub_10005A4B4(v15);
  swift_bridgeObjectRelease(v12);
  char v17 = *(void **)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkLabel];
  if (v17)
  {
    *((void *)&v35 + 1) = v10;
    __int128 v36 = &protocol witness table for UILabel;
    *(void *)&__int128 v34 = v17;
  }

  else
  {
    __int128 v36 = 0LL;
    __int128 v34 = 0u;
    __int128 v35 = 0u;
  }

  id v18 = *(void **)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView];
  if (v18)
  {
    id v19 = v17;
    id v20 = v18;
    [v20 transform];
    v65[0] = v46[0];
    v65[1] = v46[1];
    v65[2] = v47;
    v66[0] = 0x3FF0000000000000LL;
    v66[1] = 0LL;
    v66[2] = 0LL;
    v66[3] = 0x3FF0000000000000LL;
    v66[4] = 0LL;
    v66[5] = 0LL;
    if ((static CGAffineTransform.== infix(_:_:)(v65, v66) & 1) != 0)
    {
      *((void *)&v32 + 1) = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
      uint64_t v33 = protocol witness table for UIView;
      *(void *)&__int128 v31 = v20;
    }

    else
    {
      UIView.withUntransformedFrame.getter(&v31);
    }
  }

  else
  {
    uint64_t v33 = 0LL;
    __int128 v31 = 0u;
    __int128 v32 = 0u;
    id v21 = v17;
  }

  char v22 = v1[v8];
  __int128 v61 = v44[10];
  __int128 v62 = v44[11];
  uint64_t v63 = v45;
  __int128 v57 = v44[6];
  __int128 v58 = v44[7];
  __int128 v59 = v44[8];
  __int128 v60 = v44[9];
  __int128 v53 = v44[2];
  __int128 v54 = v44[3];
  __int128 v55 = v44[4];
  __int128 v56 = v44[5];
  __int128 v51 = v44[0];
  __int128 v52 = v44[1];
  sub_100009D90(&v41, (uint64_t)v46);
  sub_100009D90(&v38, (uint64_t)&v47 + 8);
  uint64_t v48 = v16;
  sub_10003FBFC((uint64_t)&v34, (uint64_t)&v49, (uint64_t *)&unk_1002EAEB0);
  sub_10003FBFC((uint64_t)&v31, (uint64_t)v50, &qword_1002E2020);
  v50[40] = v22;
  id v23 = [v1 contentView];
  [v23 frame];

  *(void *)&CGFloat v24 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  TVProductAnnotationLayout.placeChildren(relativeTo:in:)((uint64_t)v1, (uint64_t)v6, v24, v25, v26, v27);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
  return sub_1001B0090(v46);
}

id sub_1001AD3A8(double a1)
{
  uint64_t v2 = v1;
  if (v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_isExpanded] != 1) {
    return objc_msgSend(v2, "setNeedsLayout", a1, v23);
  }
  uint64_t v24 = OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems;
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems];
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  id result = (id)swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems]);
  if (!v4)
  {
LABEL_25:
    *(void *)&a1 = swift_bridgeObjectRelease(v3).n128_u64[0];
    return objc_msgSend(v2, "setNeedsLayout", a1, v23);
  }

  while (v4 >= 1)
  {
    uint64_t v6 = 0LL;
    uint64_t v7 = &v2[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViewPool];
    uint64_t v8 = &v2[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews];
    unint64_t v23 = v3 & 0xC000000000000001LL;
    while (1)
    {
      if (v23)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      }

      else
      {
        uint64_t v9 = *(void *)(v3 + 8 * v6 + 32);
        swift_retain(v9);
      }

      swift_beginAccess(v7, v25, 33LL, 0LL);
      uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002EAEA0);
      ReusePool.dequeue(or:)(&v26, sub_1001AD634, 0LL, v10);
      swift_endAccess(v25);
      uint64_t v11 = v26;
      uint64_t v12 = *(void *)&v2[v24];
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      uint64_t v14 = v13 - 1;
      if (__OFSUB__(v13, 1LL)) {
        goto LABEL_20;
      }
LABEL_11:
      sub_100070554(v9, v6 == v14);
      id v15 = [v2 contentView];
      [v15 addSubview:v11];

      swift_beginAccess(v8, v25, 33LL, 0LL);
      id v16 = v11;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      unint64_t v18 = *(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v17 = *(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v18 >= v17 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1LL);
      }
      ++v6;
      uint64_t v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
      specialized Array._endMutation()(v19);
      swift_endAccess(v25);

      swift_release(v9);
      if (v4 == v6) {
        goto LABEL_25;
      }
    }

    if (v12 < 0) {
      uint64_t v20 = *(void *)&v2[v24];
    }
    else {
      uint64_t v20 = v12 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v2[v24]);
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v12);
    uint64_t v14 = v21 - 1;
    if (!__OFSUB__(v21, 1LL)) {
      goto LABEL_11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    if (v3 < 0) {
      uint64_t v22 = v3;
    }
    else {
      uint64_t v22 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v3);
    id result = (id)_CocoaArrayWrapper.endIndex.getter(v22);
    uint64_t v4 = (uint64_t)result;
    if (!result) {
      goto LABEL_25;
    }
  }

  __break(1u);
  return result;
}

id sub_1001AD634@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone((Class)_s8ItemViewCMa()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *a1 = result;
  return result;
}

id sub_1001AD67C(double a1)
{
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleLabel];
  uint64_t v3 = &v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleText];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleText + 8];
  if (v4)
  {
    swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleText + 8]);
    NSString v5 = String._bridgeToObjectiveC()();
    *(void *)&a1 = swift_bridgeObjectRelease(v4).n128_u64[0];
  }

  else
  {
    NSString v5 = 0LL;
  }

  objc_msgSend(v2, "setText:", v5, a1);

  unint64_t v6 = *((void *)v3 + 1);
  if (v6)
  {
    if ((v6 & 0x2000000000000000LL) != 0) {
      uint64_t v7 = HIBYTE(v6) & 0xF;
    }
    else {
      uint64_t v7 = *(void *)v3 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v8 = v7 == 0;
  }

  else
  {
    BOOL v8 = 1LL;
  }

  [v2 setHidden:v8];
  return [v1 setNeedsLayout];
}

id sub_1001AD750()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_explicitSummary + 8];
  if (v2)
  {
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel];
    swift_bridgeObjectRetain(v2);
    NSString v4 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setText:", v4, swift_bridgeObjectRelease(v2).n128_f64[0]);
LABEL_17:

    return [v1 setNeedsLayout];
  }

  NSString v5 = *(void **)&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel];
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems];
  if (!((unint64_t)v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    id result = (id)swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems]);
    if (v7) {
      goto LABEL_5;
    }
LABEL_14:
    unint64_t v13 = swift_bridgeObjectRelease(v6).n128_u64[0];
    goto LABEL_15;
  }

  if (v6 < 0) {
    uint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems];
  }
  else {
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems]);
  id result = (id)_CocoaArrayWrapper.endIndex.getter(v14);
  if (!result) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v6 & 0xC000000000000001LL) != 0)
  {
    uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v6);
LABEL_8:
    __n128 v10 = swift_bridgeObjectRelease(v6);
    AnnotationItem.text.getter(v10);
    uint64_t v12 = v11;
    swift_release(v9);
    if (v12)
    {
      NSString v4 = String._bridgeToObjectiveC()();
      unint64_t v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
LABEL_16:
      objc_msgSend(v5, "setText:", v4, *(double *)&v13);
      goto LABEL_17;
    }

void sub_1001AD8D0()
{
  uint64_t v1 = v0;
  uint64_t v53 = type metadata accessor for CornerStyle(0LL);
  uint64_t v2 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  NSString v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000031E8(&qword_1002DEA18);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = &v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkAction];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkAction], v58, 0LL, 0LL);
  uint64_t v49 = v9;
  uint64_t v50 = v7;
  __int128 v51 = v4;
  uint64_t v52 = v2;
  uint64_t v18 = v53;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v14, v10);
  ObjectGraphPair.value.getter(&v57);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v20 = v57;
  uint64_t v21 = Action.title.getter(v19);
  uint64_t v23 = v22;
  swift_release(v20);
  if (!v23)
  {
LABEL_2:
    uint64_t v15 = OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkLabel;
    id v16 = *(void **)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkLabel];
    if (v16)
    {
      [v16 removeFromSuperview];
      unint64_t v17 = *(void **)&v1[v15];
    }

    else
    {
      unint64_t v17 = 0LL;
    }

    *(void *)&v1[v15] = 0LL;

    __int128 v46 = *(void **)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView];
    *(void *)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView] = 0LL;

    int v47 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
    v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 0;
    if (v47 == 1) {
      sub_1000678F0(v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state]);
    }
  }

  else
  {
    uint64_t v55 = v21;
    uint64_t v56 = v23;
    unint64_t v24 = sub_100008794();
    StringProtocol.localizedUppercase.getter(&type metadata for String, v24);
    uint64_t v26 = v25;
    swift_bridgeObjectRelease(v23);
    double v27 = (objc_class *)type metadata accessor for DynamicTypeLabel(0LL);
    if (qword_1002DC670 != -1) {
      swift_once(&qword_1002DC670, sub_100071638);
    }
    uint64_t v28 = sub_1000061F4(v6, (uint64_t)qword_1002EEFA0);
    uint64_t v29 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v28, v6);
    uint64_t v30 = sub_1000137B8(v29, 2LL, 0LL, 1, 0);
    NSString v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v30, "setText:", v31, swift_bridgeObjectRelease(v26).n128_f64[0]);

    [v30 setNumberOfLines:1];
    int v32 = v30[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
    v30[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 2;
    if (v32 != 2)
    {
      id v33 = [v30 traitCollection];
      char v34 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v34 & 1) != 0) {
        uint64_t v35 = 0LL;
      }
      else {
        uint64_t v35 = 2LL;
      }
      v54.id receiver = v30;
      v54.super_class = v27;
      objc_msgSendSuper2(&v54, "setTextAlignment:", v35);
    }

    __int128 v36 = *(void **)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkLabel];
    *(void *)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkLabel] = v30;
    uint64_t v37 = v30;

    id v38 = [v1 contentView];
    [v38 addSubview:v37];

    id v39 = [objc_allocWithZone(UIVisualEffectView) initWithEffect:0];
    __int128 v40 = v51;
    uint64_t v41 = v52;
    (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for CornerStyle.continuous(_:), v18);
    CornerStyle.apply(withRadius:to:)(v39, 12.0);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v18);
    id v42 = [v1 contentView];
    [v42 insertSubview:v39 atIndex:0];

    __int128 v43 = *(void **)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView];
    *(void *)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView] = v39;
    id v44 = v39;

    char v45 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
    v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 1;
    if ((v45 & 1) == 0) {
      sub_1000678F0(v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state]);
    }
    [v1 setNeedsLayout];
  }

id sub_1001ADD64()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView];
  if (!v1) {
    return [v0 layer];
  }
  id result = [v1 layer];
  if (!result) {
    return [v0 layer];
  }
  return result;
}

void sub_1001ADDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  uint64_t v7 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000031E8(&qword_1002E3B80);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8(&qword_1002DEA18);
  uint64_t v30 = *(void *)(v14 - 8);
  uint64_t v31 = v14;
  __chkstk_darwin(v14);
  id v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100006028(0LL, (unint64_t *)&qword_1002DD600, &OBJC_CLASS___UIPress_ptr);
  sub_10006B6B4();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v35.id receiver = v3;
  v35.super_class = ObjectType;
  objc_msgSendSuper2(&v35, "pressesEnded:withEvent:", isa, a2);

  sub_100067068(a1);
  if ((v18 & 1) != 0)
  {
    uint64_t v19 = (uint64_t)&v3[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkAction];
    swift_beginAccess(&v3[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkAction], v34, 0LL, 0LL);
    sub_10001027C(v19, (uint64_t)v13, &qword_1002E3B80);
    uint64_t v20 = v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v13, 1LL, v31) == 1)
    {
      sub_100006060((uint64_t)v13, &qword_1002E3B80);
    }

    else
    {
      uint64_t v21 = v16;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v16, v13, v31);
      uint64_t v22 = UIResponder.nearestActionRunner.getter();
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = v31;
        ObjectGraphPair.value.getter(&v33);
        uint64_t v29 = v21;
        uint64_t v25 = v33;
        v32[3] = ObjectType;
        v32[0] = v3;
        uint64_t v26 = v3;
        uint64_t v27 = ObjectGraphPair.objectGraph.getter(v24);
        (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for ActionRunner.Origin.userInitiated(_:),  v7);
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v25, v32, v10, v27);
        swift_release(v23);
        swift_release(v25);
        __n128 v28 = swift_release(v27);
        (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v28);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v29, v24);
        sub_100006060((uint64_t)v32, (uint64_t *)&unk_1002DF680);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v31);
      }
    }
  }

void sub_1001AE10C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType(v2);
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10006734C(a1, a2);
  [v2 bounds];
  double Width = CGRectGetWidth(v35);
  double v12 = 1.0;
  if (Width > COERCE_DOUBLE(1LL)) {
    double v12 = (Width + 30.0) / Width;
  }
  double v13 = (v12 + -1.0) * 0.5 + 1.0;
  CGAffineTransformMakeScale(&aBlock, v13, v13);
  CGFloat a = aBlock.a;
  CGFloat b = aBlock.b;
  CGFloat c = aBlock.c;
  CGFloat d = aBlock.d;
  CGFloat tx = aBlock.tx;
  CGFloat ty = aBlock.ty;
  if (a2)
  {
    CGFloat v20 = COERCE_DOUBLE(swift_allocObject(&unk_10028CC98, 96LL, 7LL));
    *(void *)(*(void *)&v20 + 16LL) = a2;
    *(void *)(*(void *)&v20 + 24LL) = v2;
    *(CGFloat *)(*(void *)&v20 + 32LL) = a;
    *(CGFloat *)(*(void *)&v20 + 40LL) = b;
    *(CGFloat *)(*(void *)&v20 + 48LL) = c;
    *(CGFloat *)(*(void *)&v20 + 56LL) = d;
    *(CGFloat *)(*(void *)&v20 + 64LL) = tx;
    *(CGFloat *)(*(void *)&v20 + 72LL) = ty;
    *(_BYTE *)(*(void *)&v20 + 80LL) = a1;
    *(void *)(*(void *)&v20 + 88LL) = ObjectType;
    *(void *)&aBlock.CGFloat tx = sub_1001B0198;
    aBlock.CGFloat ty = v20;
    *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
    *(void *)&aBlock.CGFloat b = 1107296256LL;
    *(void *)&aBlock.CGFloat c = sub_100135408;
    *(void *)&aBlock.CGFloat d = &unk_10028CCB0;
    uint64_t v21 = _Block_copy(&aBlock);
    CGFloat v22 = aBlock.ty;
    id v23 = a2;
    uint64_t v24 = v3;
    objc_msgSend(v23, "addCoordinatedAnimations:completion:", v21, 0, swift_release(*(void *)&v22).n128_f64[0]);
    _Block_release(v21);
  }

  else
  {
    uint64_t v25 = *(void **)&v2[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleLabel];
    if (qword_1002DD030 != -1) {
      swift_once(&qword_1002DD030, sub_1001ABC40);
    }
    uint64_t v26 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
    sub_1000061F4(v26, (uint64_t)qword_1002EADA0);
    sub_1001AB114(a1, (uint64_t)v10);
    uint64_t v33 = v2;
    Conditional.evaluate(with:)(&aBlock, &v33, v7);
    uint64_t v27 = *(void (**)(char *, uint64_t))(v8 + 8);
    v27(v10, v7);
    CGFloat v28 = aBlock.a;
    [v25 setTextColor:*(void *)&aBlock.a];

    uint64_t v29 = *(void **)&v3[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel];
    if (qword_1002DD038 != -1) {
      swift_once(&qword_1002DD038, sub_1001ABF80);
    }
    sub_1000061F4(v26, (uint64_t)qword_1002EADB8);
    sub_1001AB114(a1, (uint64_t)v10);
    uint64_t v33 = v3;
    Conditional.evaluate(with:)(&aBlock, &v33, v7);
    v27(v10, v7);
    CGFloat v30 = aBlock.a;
    [v29 setTextColor:*(void *)&aBlock.a];

    uint64_t v31 = *(void **)&v3[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView];
    if (v31)
    {
      aBlock.CGFloat a = a;
      aBlock.CGFloat b = b;
      aBlock.CGFloat c = c;
      aBlock.CGFloat d = d;
      aBlock.CGFloat tx = tx;
      aBlock.CGFloat ty = ty;
      [v31 setTransform:&aBlock];
    }
  }

void sub_1001AE44C(void *a1, void *a2, _OWORD *a3, char a4, uint64_t a5)
{
  uint64_t v10 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  [a1 _activeAnimationDuration];
  double v12 = v11;
  uint64_t v13 = swift_allocObject(&unk_10028CCE8, 72LL, 7LL);
  __int128 v14 = a3[1];
  *(_OWORD *)(v13 + 2swift_weakDestroy(v0 + 4) = *a3;
  *(void *)(v13 + swift_weakDestroy(v0 + 16) = a2;
  *(_OWORD *)(v13 + 40) = v14;
  *(_OWORD *)(v13 + 56) = a3[2];
  __int128 v36 = sub_1001B01E8;
  uint64_t v37 = v13;
  uint64_t v32 = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256LL;
  char v34 = sub_100135408;
  CGRect v35 = &unk_10028CD00;
  uint64_t v15 = _Block_copy(&v32);
  uint64_t v16 = v37;
  unint64_t v17 = a2;
  swift_release(v16);
  [v10 animateWithDuration:v15 animations:v12];
  _Block_release(v15);
  uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleLabel];
  [a1 _activeAnimationDuration];
  double v20 = v19;
  uint64_t v21 = swift_allocObject(&unk_10028CD38, 40LL, 7LL);
  *(void *)(v21 + swift_weakDestroy(v0 + 16) = v17;
  *(_BYTE *)(v21 + 2swift_weakDestroy(v0 + 4) = a4;
  *(void *)(v21 + 32) = a5;
  __int128 v36 = sub_1001B0218;
  uint64_t v37 = v21;
  uint64_t v32 = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256LL;
  char v34 = sub_100135408;
  CGRect v35 = &unk_10028CD50;
  CGFloat v22 = _Block_copy(&v32);
  uint64_t v23 = v37;
  uint64_t v24 = v17;
  swift_release(v23);
  [v10 transitionWithView:v18 duration:5242880 options:v22 animations:0 completion:v20];
  _Block_release(v22);
  uint64_t v25 = *(void *)&v24[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel];
  [a1 _activeAnimationDuration];
  double v27 = v26;
  uint64_t v28 = swift_allocObject(&unk_10028CD88, 40LL, 7LL);
  *(void *)(v28 + swift_weakDestroy(v0 + 16) = v24;
  *(_BYTE *)(v28 + 2swift_weakDestroy(v0 + 4) = a4;
  *(void *)(v28 + 32) = a5;
  __int128 v36 = sub_1001B0258;
  uint64_t v37 = v28;
  uint64_t v32 = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256LL;
  char v34 = sub_100135408;
  CGRect v35 = &unk_10028CDA0;
  uint64_t v29 = _Block_copy(&v32);
  uint64_t v30 = v37;
  uint64_t v31 = v24;
  swift_release(v30);
  [v10 transitionWithView:v25 duration:5242880 options:v29 animations:0 completion:v27];
  _Block_release(v29);
}

id sub_1001AE6C0(uint64_t a1, _OWORD *a2)
{
  id result = *(id *)(a1 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView);
  if (result)
  {
    __int128 v3 = a2[1];
    v4[0] = *a2;
    v4[1] = v3;
    v4[2] = a2[2];
    return [result setTransform:v4];
  }

  return result;
}

void sub_1001AE70C(uint64_t a1, char a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v17 = *(void **)(a1 + *a4);
  if (*a5 != -1LL) {
    swift_once(a5, a7);
  }
  uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  sub_1000061F4(v18, a6);
  sub_1001AB114(a2, (uint64_t)v16);
  uint64_t v20 = a1;
  Conditional.evaluate(with:)(&v21, &v20, v13);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  double v19 = v21;
  [v17 setTextColor:v21];
}

char *sub_1001AE87C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems);
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v1);
  while (v2)
  {
    unint64_t v3 = 0LL;
    unint64_t v49 = v1 & 0xC000000000000001LL;
    uint64_t v47 = v1 & 0xFFFFFFFFFFFFFF8LL;
    NSString v4 = (char *)_swiftEmptyArrayStorage;
    uint64_t v48 = v1;
    while (v49)
    {
      uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      uint64_t v6 = v5;
      unint64_t v7 = v3 + 1;
      if (__OFADD__(v3, 1LL)) {
        goto LABEL_40;
      }
LABEL_10:
      uint64_t v8 = v2;
      uint64_t v50 = AnnotationItem.heading.getter(v5);
      uint64_t v51 = v9;
      uint64_t v52 = AnnotationItem.text.getter(v10);
      uint64_t v53 = v11;
      uint64_t v54 = AnnotationItem.subText.getter(v52);
      uint64_t v55 = v12;
      uint64_t v56 = AnnotationItem.listText.getter(v54);
      uint64_t v57 = v13;
      uint64_t v14 = v51;
      if (v51)
      {
        uint64_t v15 = v50;
        swift_bridgeObjectRetain(v51);
        uint64_t v16 = sub_100019F48(0LL, 1LL, 1, (char *)_swiftEmptyArrayStorage);
        unint64_t v18 = *((void *)v16 + 2);
        unint64_t v17 = *((void *)v16 + 3);
        if (v18 >= v17 >> 1) {
          uint64_t v16 = sub_100019F48((char *)(v17 > 1), v18 + 1, 1, v16);
        }
        *((void *)v16 + 2) = v18 + 1;
        double v19 = &v16[16 * v18];
        *((void *)v19 + swift_weakDestroy(v0 + 4) = v15;
        *((void *)v19 + 5) = v14;
        uint64_t v20 = v53;
        if (!v53) {
          goto LABEL_21;
        }
LABEL_16:
        uint64_t v21 = v52;
        swift_bridgeObjectRetain(v20);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0) {
          uint64_t v16 = sub_100019F48(0LL, *((void *)v16 + 2) + 1LL, 1, v16);
        }
        unint64_t v23 = *((void *)v16 + 2);
        unint64_t v22 = *((void *)v16 + 3);
        if (v23 >= v22 >> 1) {
          uint64_t v16 = sub_100019F48((char *)(v22 > 1), v23 + 1, 1, v16);
        }
        *((void *)v16 + 2) = v23 + 1;
        uint64_t v24 = &v16[16 * v23];
        *((void *)v24 + swift_weakDestroy(v0 + 4) = v21;
        *((void *)v24 + 5) = v20;
        goto LABEL_21;
      }

      uint64_t v16 = (char *)_swiftEmptyArrayStorage;
      uint64_t v20 = v53;
      if (v53) {
        goto LABEL_16;
      }
LABEL_21:
      uint64_t v25 = v55;
      if (v55)
      {
        uint64_t v26 = v54;
        swift_bridgeObjectRetain(v55);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0) {
          uint64_t v16 = sub_100019F48(0LL, *((void *)v16 + 2) + 1LL, 1, v16);
        }
        unint64_t v28 = *((void *)v16 + 2);
        unint64_t v27 = *((void *)v16 + 3);
        if (v28 >= v27 >> 1) {
          uint64_t v16 = sub_100019F48((char *)(v27 > 1), v28 + 1, 1, v16);
        }
        *((void *)v16 + 2) = v28 + 1;
        uint64_t v29 = &v16[16 * v28];
        *((void *)v29 + swift_weakDestroy(v0 + 4) = v26;
        *((void *)v29 + 5) = v25;
      }

      uint64_t v30 = v57;
      if (v57)
      {
        uint64_t v31 = v56;
        swift_bridgeObjectRetain(v57);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0) {
          uint64_t v16 = sub_100019F48(0LL, *((void *)v16 + 2) + 1LL, 1, v16);
        }
        unint64_t v33 = *((void *)v16 + 2);
        unint64_t v32 = *((void *)v16 + 3);
        if (v33 >= v32 >> 1) {
          uint64_t v16 = sub_100019F48((char *)(v32 > 1), v33 + 1, 1, v16);
        }
        *((void *)v16 + 2) = v33 + 1;
        char v34 = &v16[16 * v33];
        *((void *)v34 + swift_weakDestroy(v0 + 4) = v31;
        *((void *)v34 + 5) = v30;
      }

      uint64_t v35 = sub_1000031E8((uint64_t *)&unk_1002E0000);
      swift_arrayDestroy(&v50, 4LL, v35);
      uint64_t v36 = sub_1000031E8(&qword_1002EAEC0);
      uint64_t v37 = sub_100061B94( (unint64_t *)&qword_1002E0010,  &qword_1002EAEC0,  (uint64_t)&protocol conformance descriptor for [A]);
      uint64_t v38 = BidirectionalCollection<>.joined(separator:)(44LL, 0xE100000000000000LL, v36, v37);
      uint64_t v40 = v39;
      swift_bridgeObjectRelease(v16);
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0) {
        NSString v4 = sub_100019F48(0LL, *((void *)v4 + 2) + 1LL, 1, v4);
      }
      unint64_t v42 = *((void *)v4 + 2);
      unint64_t v41 = *((void *)v4 + 3);
      if (v42 >= v41 >> 1) {
        NSString v4 = sub_100019F48((char *)(v41 > 1), v42 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v42 + 1;
      __int128 v43 = &v4[16 * v42];
      *((void *)v43 + swift_weakDestroy(v0 + 4) = v38;
      *((void *)v43 + 5) = v40;
      swift_release(v6);
      ++v3;
      uint64_t v2 = v8;
      BOOL v44 = v7 == v8;
      uint64_t v1 = v48;
      if (v44)
      {
        swift_bridgeObjectRelease(v48);
        return v4;
      }
    }

    if (v3 >= *(void *)(v47 + 16)) {
      goto LABEL_41;
    }
    uint64_t v6 = *(void *)(v1 + 8 * v3 + 32);
    swift_retain(v6);
    unint64_t v7 = v3 + 1;
    if (!__OFADD__(v3, 1LL)) {
      goto LABEL_10;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    if (v1 < 0) {
      uint64_t v45 = v1;
    }
    else {
      uint64_t v45 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v45);
  }

  swift_bridgeObjectRelease(v1);
  return (char *)_swiftEmptyArrayStorage;
}

uint64_t sub_1001AED2C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000031E8(&qword_1002E3B80);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000031E8(&qword_1002DEA18);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkAction];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkAction], v25, 0LL, 0LL);
  sub_10001027C(v13, (uint64_t)v8, &qword_1002E3B80);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v15 = UIResponder.nearestActionRunner.getter();
  if (!v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v16 = v15;
  ObjectGraphPair.value.getter(&v24);
  uint64_t v17 = v24;
  v23[3] = ObjectType;
  v23[0] = v1;
  unint64_t v18 = v1;
  uint64_t v19 = ObjectGraphPair.objectGraph.getter(v9);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for ActionRunner.Origin.userInitiated(_:),  v2);
  dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v17, v23, v5, v19);
  swift_release(v16);
  swift_release(v17);
  __n128 v20 = swift_release(v19);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v20);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return sub_100006060((uint64_t)v23, (uint64_t *)&unk_1002DF680);
}

uint64_t sub_1001AEFA4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViewPool;
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002EAEA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews));

  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleText + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_explicitSummary + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailItems));
  return sub_100006060(v0 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkAction, &qword_1002E3B80);
}

uint64_t sub_1001AF1A0()
{
  return type metadata accessor for AnnotationCollectionViewCell(0LL);
}

uint64_t type metadata accessor for AnnotationCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002EAE60;
  if (!qword_1002EAE60) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnotationCollectionViewCell);
  }
  return result;
}

void sub_1001AF1E4(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v8[0] = *(void *)(v2 - 8) + 64LL;
    v8[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_1001AF2C4(319LL);
    if (v5 <= 0x3F)
    {
      v8[3] = *(void *)(v4 - 8) + 64LL;
      v8[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v8[5] = "\b";
      v8[6] = "\b";
      v8[7] = &unk_1002406A8;
      v8[8] = &unk_1002406C0;
      v8[9] = &unk_1002406C0;
      v8[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_1001AF348(319LL);
      if (v7 <= 0x3F)
      {
        v8[11] = *(void *)(v6 - 8) + 64LL;
        swift_updateClassMetadata2(a1, 256LL, 12LL, v8, a1 + 472);
      }
    }
  }

void sub_1001AF2C4(uint64_t a1)
{
  if (!qword_1002EAE78)
  {
    uint64_t v2 = sub_100003274(&qword_1002EAE80);
    uint64_t v3 = sub_100061B94( &qword_1002EAE88,  &qword_1002EAE80,  (uint64_t)&protocol conformance descriptor for ViewRecycler<A>);
    unint64_t v4 = type metadata accessor for ReusePool(a1, v2, v3);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_1002EAE78);
    }
  }

void sub_1001AF348(uint64_t a1)
{
  if (!qword_1002EAE90)
  {
    uint64_t v2 = sub_100003274(&qword_1002DEA18);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1002EAE90);
    }
  }

uint64_t sub_1001AF3A0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_100009D54(&v12);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32LL))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + swift_weakDestroy(v0 + 16) = a1 + 1;
  return sub_100009D90(&v12, v10 + 40 * a1 + 32);
}

double sub_1001AF418(uint64_t a1, int a2, void *a3, double a4, double a5, uint64_t a6, uint64_t a7)
{
  uint64_t v81 = a7;
  int v79 = a2;
  uint64_t v86 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v11 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  objc_super v78 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100006028(0LL, (unint64_t *)&qword_1002E0470, &OBJC_CLASS___UIFont_ptr);
  if (qword_1002DC670 != -1) {
    swift_once(&qword_1002DC670, sub_100071638);
  }
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = sub_1000061F4(v14, (uint64_t)qword_1002EEFA0);
  id v16 = [a3 traitCollection];
  uint64_t v80 = (uint64_t)a3;
  id v17 = v16;
  unint64_t v18 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v15, v16);

  uint64_t v19 = Annotation.title.getter();
  uint64_t v21 = v20;
  uint64_t v22 = type metadata accessor for Feature(0LL);
  uint64_t v88 = v22;
  unint64_t v85 = sub_1000100C0();
  unint64_t v89 = v85;
  unint64_t v23 = sub_100009D54(v87);
  unsigned int v84 = enum case for Feature.measurement_with_labelplaceholder(_:);
  char v83 = *(void (**)(void *))(*(void *)(v22 - 8) + 104LL);
  v83(v23);
  uint64_t v24 = v18;
  objc_super v77 = v24;
  char v25 = isFeatureEnabled(_:)(v87);
  _s6Arcade17PillOverlayLayoutVwxx_0(v87);
  LOBYTE(v7swift_weakDestroy(v0 + 4) = v25 & 1;
  uint64_t v26 = v78;
  uint64_t v27 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v19,  v21,  v24,  4LL,  0LL,  0LL,  1LL,  0LL,  v74);
  LabelPlaceholderCompatibility.layoutTextView.getter(v101, v27);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v28 = v86;
  v82(v26, v86);
  uint64_t v29 = v102;
  uint64_t v30 = v103;
  sub_100005F8C(v101, v102);
  uint64_t v31 = a1;
  uint64_t v32 = Annotation.title.getter();
  unint64_t v34 = v33;
  __n128 v35 = swift_bridgeObjectRelease(v33);
  uint64_t v36 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000LL) == 0) {
    uint64_t v36 = v32 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v37 = dispatch thunk of LayoutView.isHidden.setter(v36 == 0, v29, *(void *)(v30 + 8), v35);
  uint64_t v38 = Annotation.summary.getter(v37);
  uint64_t v40 = v39;
  uint64_t v88 = v22;
  unint64_t v89 = v85;
  unint64_t v41 = sub_100009D54(v87);
  ((void (*)(void *, void, uint64_t))v83)(v41, v84, v22);
  unint64_t v42 = v77;
  char v43 = isFeatureEnabled(_:)(v87);
  _s6Arcade17PillOverlayLayoutVwxx_0(v87);
  LOBYTE(v7swift_weakDestroy(v0 + 4) = v43 & 1;
  uint64_t v44 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v38,  v40,  v42,  4LL,  0LL,  0LL,  1LL,  0LL,  v74);
  LabelPlaceholderCompatibility.layoutTextView.getter(v98, v44);
  v82(v26, v28);
  uint64_t v45 = v99;
  uint64_t v46 = v100;
  sub_100005F8C(v98, v99);
  uint64_t v47 = v31;
  uint64_t v48 = Annotation.title.getter();
  unint64_t v50 = v49;
  __n128 v51 = swift_bridgeObjectRelease(v49);
  uint64_t v52 = HIBYTE(v50) & 0xF;
  if ((v50 & 0x2000000000000000LL) == 0) {
    uint64_t v52 = v48 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v53 = *(void *)(v46 + 8);
  uint64_t v54 = v80;
  uint64_t v55 = dispatch thunk of LayoutView.isHidden.setter(v52 == 0, v45, v53, v51);
  uint64_t v56 = Annotation.items.getter(v55);
  __chkstk_darwin(v56);
  uint64_t v74 = v47;
  uint64_t v75 = v54;
  objc_super v77 = sub_1001AFE98( v57,  (void (*)(void *__return_ptr, unint64_t, uint64_t))sub_1001AFE90,  (uint64_t)(&v76 - 4));
  swift_bridgeObjectRelease(v56);
  uint64_t v97 = 0LL;
  memset(v96, 0, sizeof(v96));
  uint64_t v58 = Annotation.linkAction.getter();
  if (v58)
  {
    uint64_t v59 = v58;
    __int128 v60 = v26;
    uint64_t v61 = Action.title.getter(v58);
    uint64_t v63 = v62;
    swift_release(v59);
    if (v63)
    {
      v87[0] = v61;
      v87[1] = v63;
      unint64_t v64 = sub_100008794();
      uint64_t v65 = StringProtocol.localizedUppercase.getter(&type metadata for String, v64);
      uint64_t v67 = v66;
      swift_bridgeObjectRelease(v63);
      uint64_t v88 = v22;
      unint64_t v89 = v85;
      unsigned __int32 v68 = sub_100009D54(v87);
      ((void (*)(void *, void, uint64_t))v83)(v68, v84, v22);
      uint64_t v69 = v42;
      char v70 = isFeatureEnabled(_:)(v87);
      _s6Arcade17PillOverlayLayoutVwxx_0(v87);
      LOBYTE(v7swift_weakDestroy(v0 + 4) = v70 & 1;
      uint64_t v71 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v65,  v67,  v69,  4LL,  0LL,  0LL,  1LL,  0LL,  v74);
      LabelPlaceholderCompatibility.layoutTextView.getter(v87, v71);
      v82(v60, v86);
      sub_100006060((uint64_t)v96, (uint64_t *)&unk_1002EAEB0);
      sub_10003FBFC((uint64_t)v87, (uint64_t)v96, (uint64_t *)&unk_1002EAEB0);
    }
  }

  if (qword_1002DD028 != -1) {
    swift_once(&qword_1002DD028, sub_1001AB94C);
  }
  sub_10005322C(xmmword_1002F13F8, v95);
  sub_10001F010((uint64_t)v101, (uint64_t)v87);
  sub_10001F010((uint64_t)v98, (uint64_t)v90);
  sub_10001027C((uint64_t)v96, (uint64_t)v91, (uint64_t *)&unk_1002EAEB0);
  *(_OWORD *)&v91[40] = 0u;
  __int128 v92 = 0u;
  uint64_t v93 = 0LL;
  v90[5] = v77;
  char v94 = v79 & 1;
  double v72 = sub_1000562C8(v54, (uint64_t)v87, a4, a5);

  sub_1001B0090(v87);
  sub_100006060((uint64_t)v96, (uint64_t *)&unk_1002EAEB0);
  _s6Arcade17PillOverlayLayoutVwxx_0(v98);
  _s6Arcade17PillOverlayLayoutVwxx_0(v101);
  return v72;
}

void sub_1001AF9B8(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_titleLabel);
  if (qword_1002DD030 != -1) {
    swift_once(&qword_1002DD030, sub_1001ABC40);
  }
  uint64_t v9 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  sub_1000061F4(v9, (uint64_t)qword_1002EADA0);
  sub_1001AB114(a1, (uint64_t)v7);
  uint64_t v33 = v1;
  Conditional.evaluate(with:)(&v34, &v33, v4);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  uint64_t v11 = v34;
  [v8 setTextColor:v34];

  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_summaryLabel);
  if (qword_1002DD038 != -1) {
    swift_once(&qword_1002DD038, sub_1001ABF80);
  }
  sub_1000061F4(v9, (uint64_t)qword_1002EADB8);
  sub_1001AB114(a1, (uint64_t)v7);
  uint64_t v33 = v2;
  Conditional.evaluate(with:)(&v34, &v33, v4);
  v10(v7, v4);
  uint64_t v13 = v34;
  [v12 setTextColor:v34];

  uint64_t v14 = OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkLabel;
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_linkLabel);
  if (v15)
  {
    uint64_t v16 = qword_1002DD040;
    id v17 = v15;
    if (v16 != -1) {
      swift_once(&qword_1002DD040, sub_1001AC2B8);
    }
    [v17 setTextColor:qword_1002EADD0];

    unint64_t v18 = *(void **)(v2 + v14);
    if (v18)
    {
      double v19 = 1.0;
      if (!a1) {
        double v19 = 0.0;
      }
      [v18 setAlpha:v19];
    }
  }

  uint64_t v20 = OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView;
  uint64_t v21 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_backgroundEffectView);
  if (v21)
  {
    id v22 = [v21 contentView];
    if (qword_1002DD048 != -1) {
      swift_once(&qword_1002DD048, sub_1001AC2F0);
    }
    unint64_t v23 = (void *)qword_1002EADD8;
    if (a1)
    {
      uint64_t v24 = qword_1002EADE0;
      if (!qword_1002EADE0) {
        uint64_t v24 = qword_1002EADD8;
      }
      if (qword_1002EADE8) {
        unint64_t v23 = (void *)qword_1002EADE8;
      }
      if (a1 == 1) {
        unint64_t v23 = (void *)v24;
      }
    }

    id v25 = v23;
    [v22 setBackgroundColor:v25];

    uint64_t v26 = *(void **)(v2 + v20);
    if (v26)
    {
      double v27 = 1.0;
      if (!a1) {
        double v27 = 0.0;
      }
      [v26 setAlpha:v27];
      uint64_t v28 = *(void **)(v2 + v20);
      if (v28)
      {
        uint64_t v29 = qword_1002DD050;
        id v30 = v28;
        if (v29 != -1) {
          swift_once(&qword_1002DD050, sub_1001AC3A0);
        }
        uint64_t v31 = sub_1000031E8((uint64_t *)&unk_1002E8CC0);
        sub_1000061F4(v31, (uint64_t)qword_1002EADF0);
        uint64_t v33 = v2;
        Conditional.evaluate(with:)(&v34, &v33, v31);
        uint64_t v32 = v34;
        [v30 setEffect:v34];
      }
    }
  }

void sub_1001AFD44()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews);
  swift_beginAccess(v0 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViews, v13, 1LL, 0LL);
  uint64_t v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease(v2);
    uint64_t v10 = *v1;
    uint64_t *v1 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v10);
    return;
  }

  if (v2 < 0) {
    uint64_t v9 = *v1;
  }
  else {
    uint64_t v9 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v1);
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v4 = 0LL;
    uint64_t v5 = v0 + OBJC_IVAR____TtC6Arcade28AnnotationCollectionViewCell_detailViewPool;
    do
    {
      if ((v2 & 0xC000000000000001LL) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * v4 + 32);
      }
      unint64_t v7 = v6;
      ++v4;
      id v12 = v6;
      swift_beginAccess(v5, v11, 33LL, 0LL);
      uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002EAEA0);
      ReusePool.recycle(_:)(&v12, v8);
      swift_endAccess(v11);
    }

    while (v3 != v4);
    goto LABEL_13;
  }

  __break(1u);
}

void sub_1001AFE90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

void *sub_1001AFE98( uint64_t a1, void (*a2)(void *__return_ptr, unint64_t, uint64_t), uint64_t a3)
{
  void (*v23)(void *__return_ptr, unint64_t, uint64_t);
  uint64_t v24;
  void v25[3];
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v28 = _swiftEmptyArrayStorage;
  sub_100026EDC(0LL, 0LL, 0);
  uint64_t v4 = _swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0LL;
      uint64_t v21 = a1 & 0xFFFFFFFFFFFFFF8LL;
      unint64_t v22 = a1 & 0xC000000000000001LL;
      while (v22)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
        unint64_t v8 = v6 + 1;
        if (__OFADD__(v6, 1LL)) {
          goto LABEL_15;
        }
LABEL_7:
        v23(v25, v6, v7);
        swift_release(v7);
        uint64_t v28 = v4;
        unint64_t v10 = v4[2];
        unint64_t v9 = v4[3];
        if (v10 >= v9 >> 1) {
          sub_100026EDC((void *)(v9 > 1), v10 + 1, 1);
        }
        uint64_t v11 = v26;
        uint64_t v12 = v27;
        uint64_t v13 = sub_1000862E8((uint64_t)v25, v26);
        __n128 v14 = __chkstk_darwin(v13);
        uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
        (*(void (**)(char *, __n128))(v17 + 16))(v16, v14);
        sub_1001AF3A0(v10, (uint64_t)v16, (uint64_t *)&v28, v11, v12);
        _s6Arcade17PillOverlayLayoutVwxx_0(v25);
        uint64_t v4 = v28;
        ++v6;
        if (v8 == v5) {
          goto LABEL_20;
        }
      }

      if (v6 < *(void *)(v21 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0) {
        uint64_t v18 = a1;
      }
      else {
        uint64_t v18 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(a1);
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (!v5) {
        goto LABEL_20;
      }
    }

    uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
    swift_retain(v7);
    unint64_t v8 = v6 + 1;
    if (__OFADD__(v6, 1LL)) {
      goto LABEL_15;
    }
    goto LABEL_7;
  }

void *sub_1001B0090(void *a1)
{
  return a1;
}

id sub_1001B00C4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 traitCollection];
  *a2 = result;
  return result;
}

id sub_1001B00FC@<X0>(id *a1@<X0>, BOOL *a2@<X8>)
{
  id result = [*a1 userInterfaceStyle];
  *a2 = result == (id)2;
  return result;
}

uint64_t sub_1001B0138()
{
  return 16LL;
}

__n128 sub_1001B0144(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1001B0154()
{
  return 16LL;
}

__n128 sub_1001B0160(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1001B016C()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

void sub_1001B0198()
{
}

uint64_t sub_1001B01AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001B01BC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001B01C4()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

id sub_1001B01E8()
{
  return sub_1001AE6C0(*(void *)(v0 + 16), (_OWORD *)(v0 + 24));
}

uint64_t sub_1001B01F4()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1001B0218()
{
}

void sub_1001B0258()
{
}

void sub_1001B02B4()
{
  qword_1002EAEE0 = (uint64_t)&type metadata for Double;
  unk_1002EAEE8 = &protocol witness table for Double;
  qword_1002EAEC8 = 0x406EA00000000000LL;
  qword_1002EAF08 = (uint64_t)&type metadata for Double;
  unk_1002EAF10 = &protocol witness table for Double;
  qword_1002EAEF0 = 0x4060200000000000LL;
  qword_1002EAF30 = (uint64_t)&type metadata for Double;
  unk_1002EAF38 = &protocol witness table for Double;
  qword_1002EAF18 = 0x4063200000000000LL;
  qword_1002EAF58 = (uint64_t)&type metadata for Double;
  unk_1002EAF60 = &protocol witness table for Double;
  qword_1002EAF40 = 0x4075400000000000LL;
  qword_1002EAF80 = (uint64_t)&type metadata for Double;
  unk_1002EAF88 = &protocol witness table for Double;
  qword_1002EAF68 = 0x408E000000000000LL;
}

void sub_1001B031C()
{
  qword_1002EAFA8 = (uint64_t)&type metadata for Double;
  unk_1002EAFB0 = &protocol witness table for Double;
  qword_1002EAF90 = 0x407F400000000000LL;
  qword_1002EAFD0 = (uint64_t)&type metadata for Double;
  unk_1002EAFD8 = &protocol witness table for Double;
  qword_1002EAFB8 = 0x404E000000000000LL;
}

char *sub_1001B0354(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  *(void *)&v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_overlayViewController] = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_objectGraph] = a2;
  *(void *)&v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_presenter] = a1;
  unint64_t v6 = &v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_lifecycleObserver];
  *((void *)v6 + 3) = type metadata accessor for ArcadeWelcomePagePresenter(0LL);
  *((void *)v6 + swift_weakDestroy(v0 + 4) = &protocol witness table for BasePresenter;
  *(void *)unint64_t v6 = a1;
  uint64_t v7 = type metadata accessor for ArtworkLoader(0LL);
  swift_retain_n(a1, 2LL);
  unint64_t v8 = v2;
  swift_retain(a2);
  *(void *)&v8[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_artworkLoader] = inject(_:from:)(v7, a2);
  uint64_t v9 = type metadata accessor for ImpressionsCalculator(0LL);
  BaseObjectGraph.optional<A>(_:)(v20, v9, v9);
  *(void *)&v8[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_impressionsCalculator] = *(void *)&v20[0];
  if (qword_1002DD058 != -1) {
    swift_once(&qword_1002DD058, sub_1001B02B4);
  }
  sub_100015AA4(&qword_1002EAEC8, v20);
  if (qword_1002DD060 != -1) {
    swift_once(&qword_1002DD060, sub_1001B031C);
  }
  sub_100015A34((uint64_t)&qword_1002EAF90, (uint64_t)v19);
  id v10 = objc_allocWithZone((Class)type metadata accessor for ArcadeWelcomePageView());
  *(void *)&v8[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_pageView] = sub_100014F54(v20, v19);

  v18.id receiver = v8;
  v18.super_class = ObjectType;
  uint64_t v11 = (char *)objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
  uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_impressionsCalculator];
  uint64_t v13 = v11;
  if (v12)
  {
    swift_retain(v12);
    ImpressionsCalculator.isVisible.setter(1LL);
    swift_release(v12);
  }

  uint64_t v14 = sub_1001B1544(&qword_1002EB050, (uint64_t)&unk_10024080C);
  uint64_t v15 = v11;
  dispatch thunk of ArcadeWelcomePagePresenter.view.setter(v11, v14);

  swift_release(a1);
  swift_release(a2);
  uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_pageView]
      + OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_delegate;
  *(void *)(v16 + 8) = &off_10028CDF0;
  swift_unknownObjectWeakAssign(v16, v15);
  return v15;
}

void sub_1001B0624()
{
  v25.id receiver = v0;
  v25.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v25, "viewWillLayoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_pageView];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }

  uint64_t v3 = v2;
  [v2 bounds];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  objc_msgSend(v1, "setFrame:", v5, v7, v9, v11);
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_overlayViewController];
  if (!v12) {
    return;
  }
  id v13 = [v12 view];
  if (!v13) {
    goto LABEL_8;
  }
  uint64_t v14 = v13;
  id v15 = [v0 view];
  if (!v15)
  {
LABEL_9:
    __break(1u);
    return;
  }

  uint64_t v16 = v15;
  [v15 bounds];
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;

  objc_msgSend(v14, "setFrame:", v18, v20, v22, v24);
}

id sub_1001B07AC()
{
  uint64_t v1 = v0;
  v7.id receiver = v0;
  v7.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v7, "viewDidLoad");
  id result = [v0 view];
  if (result)
  {
    uint64_t v3 = result;
    id v4 = [(id)objc_opt_self(UIColor) clearColor];
    [v3 setBackgroundColor:v4];

    id result = [v1 view];
    if (result)
    {
      double v5 = result;
      [result addSubview:*(void *)&v1[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_pageView]];

      dispatch thunk of BasePresenter.didLoad()(v6);
      return [v1 setTitle:0];
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

void sub_1001B0A28(char a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  uint64_t v5 = type metadata accessor for StoreViewControllerLifecycleEvent(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = __chkstk_darwin(v5).n128_u64[0];
  double v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v15.id receiver = v2;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, "viewDidAppear:", a1 & 1, v7);
  uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_lifecycleObserver + 24];
  uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_lifecycleObserver + 32];
  sub_100005F8C(&v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_lifecycleObserver], v10);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))( v9,  enum case for StoreViewControllerLifecycleEvent.didAppear(_:),  v5);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v9, v10, v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  ArtworkLoader.isOccluded.setter(0LL);
  uint64_t v12 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v13 = [v12 defaultCenter];
  [v13 addObserver:v2 selector:"appEnteredWhileAppeared" name:UIApplicationDidBecomeActiveNotification object:0];

  id v14 = [v12 defaultCenter];
  [v14 addObserver:v2 selector:"appExitedWhileAppeared" name:UIApplicationDidEnterBackgroundNotification object:0];
}

void sub_1001B0C04(char a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  uint64_t v5 = type metadata accessor for StoreViewControllerLifecycleEvent(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = __chkstk_darwin(v5).n128_u64[0];
  double v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v15.id receiver = v2;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, "viewWillDisappear:", a1 & 1, v7);
  uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_lifecycleObserver + 24];
  uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_lifecycleObserver + 32];
  sub_100005F8C(&v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_lifecycleObserver], v10);
  static ViewWillDisappearReason.inferred(for:)(v2);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))( v9,  enum case for StoreViewControllerLifecycleEvent.willDisappear(_:),  v5);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v9, v10, v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if (*(void *)&v2[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_impressionsCalculator]) {
    ImpressionsCalculator.isVisible.setter(0LL);
  }
  ArtworkLoader.isOccluded.setter(1LL);
  uint64_t v12 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v13 = [v12 defaultCenter];
  [v13 removeObserver:v2 name:UIApplicationDidBecomeActiveNotification object:0];

  id v14 = [v12 defaultCenter];
  [v14 removeObserver:v2 name:UIApplicationDidEnterBackgroundNotification object:0];
}

void sub_1001B0F0C(char *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = type metadata accessor for StoreViewControllerLifecycleEvent(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_lifecycleObserver + 24];
  uint64_t v10 = *(void *)&a1[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_lifecycleObserver + 32];
  sub_100005F8C(&a1[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_lifecycleObserver], v9);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *a3, v5);
  uint64_t v11 = a1;
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v8, v9, v10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1001B0FE0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_presenter);
  id v4 = (char *)objc_msgSend( objc_allocWithZone((Class)type metadata accessor for ErrorShieldView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  sub_100135880(1);
  swift_errorRetain(a1);
  ErrorPresenter.error.setter(a1);
  uint64_t v5 = swift_allocObject(&unk_10028CE10, 24LL, 7LL);
  swift_weakInit(v5 + 16, v3);
  uint64_t v6 = (double (**)())&v4[OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler];
  uint64_t v7 = *(void *)&v4[OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler];
  uint64_t v8 = *(void *)&v4[OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler + 8];
  *uint64_t v6 = sub_1001B1438;
  v6[1] = (double (*)())v5;
  swift_retain_n(v5, 2LL);
  sub_10000D3D8(v7, v8);
  sub_100135DD4();
  swift_release_n(v5, 2LL);
  id v9 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
  uint64_t v10 = v4;
  id v11 = (id)OverlayViewController.init(overlayView:)(v10);
  sub_1001B1440(v11);
}

uint64_t sub_1001B1118(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType(v1);
  uint64_t v4 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    uint64_t v9 = result;
    v13[3] = ObjectType;
    v13[0] = v1;
    uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_objectGraph];
    (*(void (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for ActionRunner.Origin.userInitiated(_:),  v4);
    id v11 = v1;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, v13, v7, v10);
    __n128 v12 = swift_release(v9);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v12);
    return sub_100029100((uint64_t)v13);
  }

  return result;
}

uint64_t type metadata accessor for ArcadeWelcomeViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade27ArcadeWelcomeViewController);
}

id sub_1001B12E8(uint64_t a1)
{
  return sub_10001574C(a1, *(void *)(v1 + OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_artworkLoader));
}

void sub_1001B1320()
{
  uint64_t v0 = type metadata accessor for JULoadingViewController.PresentationContext(0LL);
  __chkstk_darwin(v0);
  id v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static JULoadingViewController.PresentationContext.placeholder.getter(v3);
  id v4 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
  uint64_t v5 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v2, 0LL);
  sub_1001B1440(v5);
}

id sub_1001B13BC()
{
  return sub_1001B1440(0LL);
}

uint64_t sub_1001B13CC()
{
  return sub_1001B1544(&qword_1002EB040, (uint64_t)&unk_10024079C);
}

uint64_t sub_1001B13F0()
{
  return sub_1001B1544(&qword_1002EB048, (uint64_t)&unk_1002407C4);
}

uint64_t sub_1001B1414()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

double sub_1001B1438()
{
  return sub_10000D380(v0);
}

id sub_1001B1440(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_overlayViewController;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_overlayViewController];
  id v5 = v4;
  static ViewControllerContainment.remove(_:)(v4);

  uint64_t v6 = *(void **)&v1[v3];
  *(void *)&v1[v3] = a1;
  id v7 = a1;

  uint64_t v8 = *(void **)&v1[v3];
  id v9 = v8;
  id result = [v1 view];
  if (result)
  {
    id v11 = result;
    [result bounds];
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    uint64_t v19 = v18;

    v20[0] = v13;
    v20[1] = v15;
    v20[2] = v17;
    v20[3] = v19;
    char v21 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v8, v1, v20);

    return [*(id *)&v1[OBJC_IVAR____TtC6Arcade27ArcadeWelcomeViewController_pageView] setHidden:*(void *)&v1[v3] != 0];
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1001B1544(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for ArcadeWelcomeViewController();
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_1001B1584()
{
  unint64_t result = qword_1002EB058;
  if (!qword_1002EB058)
  {
    uint64_t v1 = type metadata accessor for ProductPageLinkCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100240850, v1);
    atomic_store(result, (unint64_t *)&qword_1002EB058);
  }

  return result;
}

double sub_1001B15D0(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v40 = type metadata accessor for PageGrid(0LL);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v3 = (char **)((char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  __chkstk_darwin(v4);
  __n128 v35 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_1000031E8(&qword_1002EB230);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  id v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char **)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v44, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002408A0, v17);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  uint64_t v20 = swift_getKeyPath(&unk_1002408D0, v19);
  ReadOnlyLens.subscript.getter(v20, v8);
  __n128 v21 = swift_release(v20);
  (*(void (**)(void *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
  __n128 v22 = swift_bridgeObjectRelease(v43);
  ItemLayoutContext.state.getter(v22);
  uint64_t v23 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v24 = swift_dynamicCastClassUnconditional(v36, v23, 0LL, 0LL, 0LL);
  uint64_t v25 = (uint64_t)v35;
  ItemLayoutContext.componentLayoutOptions.getter(v24);
  uint64_t v27 = swift_getKeyPath(&unk_100240900, v26);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v27);
  double v29 = PageGrid.componentMeasuringSize(spanning:)(v28, 1.0);
  (*(void (**)(void *, uint64_t))(v38 + 8))(v3, v40);
  id v30 = sub_100147A04();
  sub_100034590((uint64_t)v44, (uint64_t)v7, v29, v25, (uint64_t)v30);
  double v32 = v31;
  __n128 v33 = swift_unknownObjectRelease(v30);
  (*(void (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v25, v42, v33);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v39);
  _s6Arcade17PillOverlayLayoutVwxx_0(v44);
  return v32;
}

void sub_1001B195C(void *a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    id v4 = a1;
    id v5 = [v4 superview];
    if (v5)
    {
      uint64_t v6 = v5;
      sub_100018D98();
      id v7 = v2;
      id v8 = v6;
      LOBYTE(v6) = static NSObject.== infix(_:_:)(v8, v7);

      char v9 = v6 ^ 1;
    }

    else
    {
      char v9 = 1;
    }

    char v15 = v9 & ~*((_BYTE *)v4 + qword_1002F0818);
    id v16 = v4;
    sub_1001B1AE8((uint64_t)a1, v15 & 1);
  }

  else
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);
    if (Strong)
    {
      id v11 = Strong;
      id v12 = [Strong superview];

      if (v12)
      {
        sub_100018D98();
        id v13 = v2;
        id v14 = v12;
        LOBYTE(v12) = static NSObject.== infix(_:_:)(v14, v13);
      }
    }

    else
    {
      LOBYTE(v12) = 0;
    }

    sub_1001B1AE8(0LL, v12 & 1);
  }

void sub_1001B1AE8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if ((a2 & 1) != 0)
  {
    uint64_t v6 = &v2[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view];
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);
    if (Strong)
    {
      id v8 = Strong;
      id v9 = [Strong superview];

      if (v9)
      {
        sub_100018D98();
        uint64_t v10 = v3;
        id v11 = v9;
        char v12 = static NSObject.== infix(_:_:)(v11, v10);

        if ((v12 & 1) != 0)
        {
          id v13 = (void *)swift_unknownObjectWeakLoadStrong(v6);
          if (v13)
          {
            id v14 = v13;
            [v13 removeFromSuperview];
          }
        }
      }
    }
  }

  char v15 = &v3[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view];
  uint64_t v16 = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    swift_unknownObjectWeakAssign(v16 + qword_1002F07F0, 0LL);
  }

  uint64_t v18 = swift_unknownObjectWeakAssign(v15, 0LL);
  uint64_t v19 = swift_unknownObjectWeakAssign(v18, a1);
  uint64_t v20 = swift_unknownObjectWeakLoadStrong(v19);
  if (v20)
  {
    __n128 v21 = (void *)v20;
    swift_unknownObjectWeakAssign(v20 + qword_1002F07F0, v3);
  }

  __n128 v22 = (char *)swift_unknownObjectWeakLoadStrong(v15);
  sub_1001B1E00(v22);

  if ((a2 & 1) != 0)
  {
    uint64_t v23 = (void *)swift_unknownObjectWeakLoadStrong(v15);
    if (v23)
    {
      id v24 = v23;
      [v3 bounds];
      objc_msgSend(v24, "setFrame:");

      [v3 addSubview:v24];
      [v3 setNeedsLayout];
    }
  }

void sub_1001B1CD8()
{
  v10.id receiver = v0;
  v10.super_class = (Class)type metadata accessor for VideoViewContainer();
  objc_msgSendSuper2(&v10, "layoutSubviews");
  uint64_t v1 = &v0[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);
  if (Strong)
  {
    uint64_t v3 = Strong;
    id v4 = [Strong superview];

    if (v4)
    {
      sub_100018D98();
      id v5 = v0;
      id v6 = v4;
      char v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) != 0)
      {
        uint64_t v8 = swift_unknownObjectWeakLoadStrong(v1);
        if (v8)
        {
          id v9 = (void *)v8;
          [v5 bounds];
          objc_msgSend(v9, "setFrame:");
        }
      }
    }
  }

char *sub_1001B1E00(char *result)
{
  if (result)
  {
    uint64_t v2 = v1;
    uint64_t v3 = result;
    uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners];
    uint64_t v5 = type metadata accessor for RoundedCornerView(0LL);
    id v6 = (void (*)(uint64_t))method lookup function for RoundedCornerView( v5,  &method descriptor for RoundedCornerView.roundedCorners.setter);
    v6(v4);
    char v7 = (uint64_t (*)(void))method lookup function for RoundedCornerView( v5,  &method descriptor for RoundedCornerView.roundedCorners.getter);
    uint64_t v8 = v7();
    uint64_t v9 = UIRectCorner.caCornerMask.getter(v8);
    unint64_t result = (char *)[*(id *)&v3[qword_1002E70E0] view];
    if (result)
    {
      objc_super v10 = result;
      id v11 = [result layer];

      [v11 setMaskedCorners:v9];
      id v12 = [*(id *)&v3[qword_1002E70D0] layer];
      [v12 setMaskedCorners:v9];

      [v2 _cornerRadius];
      double v14 = v13;
      char v15 = (objc_class *)type metadata accessor for VideoView(0LL);
      v25.id receiver = v3;
      v25.super_class = v15;
      objc_msgSendSuper2(&v25, "_setCornerRadius:", v14);
      uint64_t v16 = qword_1002E70E0;
      unint64_t result = (char *)[*(id *)&v3[qword_1002E70E0] view];
      if (result)
      {
        uint64_t v17 = result;
        v24.id receiver = v3;
        v24.super_class = v15;
        objc_msgSendSuper2(&v24, "_cornerRadius");
        objc_msgSend(v17, "_setCornerRadius:");

        uint64_t v18 = *(void **)&v3[qword_1002E70D0];
        v23.id receiver = v3;
        v23.super_class = v15;
        objc_msgSendSuper2(&v23, "_cornerRadius");
        objc_msgSend(v18, "_setCornerRadius:");
        [v2 _continuousCornerRadius];
        v22.id receiver = v3;
        v22.super_class = v15;
        objc_msgSendSuper2(&v22, "_setContinuousCornerRadius:");
        unint64_t result = (char *)[*(id *)&v3[v16] view];
        if (result)
        {
          uint64_t v19 = result;
          v21.id receiver = v3;
          v21.super_class = v15;
          objc_msgSendSuper2(&v21, "_continuousCornerRadius");
          objc_msgSend(v19, "_setContinuousCornerRadius:");

          v20.id receiver = v3;
          v20.super_class = v15;
          objc_msgSendSuper2(&v20, "_continuousCornerRadius");
          return (char *)objc_msgSend(v18, "_setContinuousCornerRadius:");
        }

id sub_1001B2078(void *a1, uint64_t a2, SEL *a3)
{
  v5.id receiver = a1;
  v5.super_class = (Class)type metadata accessor for VideoViewContainer();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_1001B20C0(void *a1, double a2, uint64_t a3, const char **a4)
{
  v9.id receiver = a1;
  v9.super_class = (Class)type metadata accessor for VideoViewContainer();
  id v6 = *a4;
  char v7 = (char *)v9.receiver;
  objc_msgSendSuper2(&v9, v6, a2);
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);
  sub_1001B1E00(Strong);
}

uint64_t sub_1001B2138()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);
  if (Strong)
  {
    uint64_t v3 = Strong;
    id v4 = [Strong superview];

    if (v4)
    {
      sub_100018D98();
      objc_super v5 = v0;
      id v6 = v4;
      char v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) != 0)
      {
        uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong(v1);
        if (v8)
        {
          objc_super v9 = v8;
          [v8 removeFromSuperview];
        }

        uint64_t v10 = swift_unknownObjectWeakLoadStrong(v1);
        if (v10)
        {
          id v11 = (void *)v10;
          swift_unknownObjectWeakAssign(v10 + qword_1002F07F0, 0LL);
        }
      }
    }
  }

  return swift_unknownObjectWeakAssign(v1, 0LL);
}

id sub_1001B2258()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoViewContainer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VideoViewContainer()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade18VideoViewContainer);
}

unint64_t sub_1001B22B8()
{
  uint64_t v0 = sub_1000031E8(&qword_1002EB138);
  initeCGFloat d = swift_initStackObject(v0, v3);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100234970;
  *(void *)(inited + 32) = 0x6E6F697469736F70LL;
  *(void *)(inited + 40) = 0xE800000000000000LL;
  *(void *)(inited + 48) = [objc_allocWithZone(NSNull) init];
  *(void *)(inited + 56) = 0x6E6564646968LL;
  *(void *)(inited + 6swift_weakDestroy(v0 + 4) = 0xE600000000000000LL;
  *(void *)(inited + 72) = [objc_allocWithZone(NSNull) init];
  *(void *)(inited + 80) = 0x49726564724F6E6FLL;
  *(void *)(inited + 88) = 0xE90000000000006ELL;
  *(void *)(inited + 96) = [objc_allocWithZone(NSNull) init];
  *(void *)(inited + 10swift_weakDestroy(v0 + 4) = 0x4F726564724F6E6FLL;
  *(void *)(inited + 112) = 0xEA00000000007475LL;
  *(void *)(inited + 120) = [objc_allocWithZone(NSNull) init];
  *(void *)(inited + 128) = 0x726579616C627573LL;
  *(void *)(inited + 136) = 0xE900000000000073LL;
  *(void *)(inited + 14swift_weakDestroy(v0 + 4) = [objc_allocWithZone(NSNull) init];
  *(void *)(inited + 152) = 0x73746E65746E6F63LL;
  *(void *)(inited + 160) = 0xE800000000000000LL;
  *(void *)(inited + 168) = [objc_allocWithZone(NSNull) init];
  *(void *)(inited + 176) = 0x73646E756F62LL;
  *(void *)(inited + 18swift_weakDestroy(v0 + 4) = 0xE600000000000000LL;
  *(void *)(inited + 192) = [objc_allocWithZone(NSNull) init];
  unint64_t result = sub_1000E7144(inited);
  qword_1002EB0A0 = result;
  return result;
}

uint64_t sub_1001B2458(uint64_t a1)
{
  return sub_1001B2490((__n128)xmmword_100240960, (__n128)xmmword_100240970, a1, qword_1002EB0A8);
}

uint64_t sub_1001B2474(uint64_t a1)
{
  return sub_1001B2490((__n128)xmmword_100240970, (__n128)xmmword_100240960, a1, qword_1002EB0C0);
}

uint64_t sub_1001B2490(__n128 a1, __n128 a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002EB120);
  sub_10000FF90(v5, a4);
  sub_1000061F4(v5, (uint64_t)a4);
  __n128 v12 = a1;
  __n128 v11 = a2;
  uint64_t v6 = sub_1000031E8(&qword_1002DE250);
  type metadata accessor for CGPoint(0LL);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v12, &v11, v6, v7);
}

char *sub_1001B2520(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for TitleEffect(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  double v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = enum case for TitleEffect.none(_:);
  char v15 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  ((void (*)(char *, void, uint64_t, __n128))v15)( &v4[OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_effect],  enum case for TitleEffect.none(_:),  v9,  v11);
  uint64_t v16 = OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_gradientLayer;
  id v17 = objc_allocWithZone(&OBJC_CLASS___CAGradientLayer);
  uint64_t v18 = v4;
  *(void *)&v4[v16] = [v17 init];

  uint64_t v19 = (objc_class *)type metadata accessor for ArcadeHeaderView(0LL);
  v31.id receiver = v18;
  v31.super_class = v19;
  id v20 = objc_msgSendSuper2(&v31, "initWithFrame:", a1, a2, a3, a4);
  objc_super v21 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  objc_super v22 = (char *)v20;
  id v23 = [v21 clearColor];
  [v22 setBackgroundColor:v23];

  uint64_t v24 = OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_gradientLayer;
  objc_super v25 = *(void **)&v22[OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_gradientLayer];
  objc_msgSend(v25, "setAnchorPoint:", 0.0, 0.0);
  uint64_t v26 = qword_1002DD068;
  id v27 = v25;
  if (v26 != -1) {
    swift_once(&qword_1002DD068, sub_1001B22B8);
  }
  sub_1000031E8(&qword_1002EB130);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  [v27 setActions:isa];

  id v29 = [v22 layer];
  [v29 addSublayer:*(void *)&v22[v24]];

  [*(id *)&v22[OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel] removeFromSuperview];
  v15(v13, v14, v9);
  sub_1001B2C38((uint64_t)v13, 0, 0LL, 1, 0LL);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v22;
}

uint64_t sub_1001B27EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_style;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_10000D57C(v3, a1);
}

uint64_t sub_1001B2840(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TitleEffect(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = type metadata accessor for TitleHeaderView.Style(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v10);
  uint64_t v12 = &v16[-v11];
  uint64_t v13 = v1 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_style;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_style, v17, 0LL, 0LL);
  sub_10000D57C(v13, (uint64_t)v12);
  sub_10000D57C(a1, (uint64_t)v9);
  sub_10016A8B4((uint64_t)v9);
  sub_10000D57C(v13, (uint64_t)v9);
  LOBYTE(v13) = sub_10017232C(v9, v12);
  sub_1000C0ED0((uint64_t)v9);
  if ((v13 & 1) == 0)
  {
    uint64_t v14 = v1 + OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_effect;
    swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_effect, v16, 0LL, 0LL);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v14, v3);
    sub_1001B2C38((uint64_t)v6, 0, 0LL, 1, 0LL);
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }

  sub_1000C0ED0(a1);
  return sub_1000C0ED0((uint64_t)v12);
}

void sub_1001B29DC()
{
  v10.id receiver = v0;
  v10.super_class = (Class)type metadata accessor for ArcadeHeaderView(0LL);
  objc_msgSendSuper2(&v10, "layoutSubviews");
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  uint64_t v2 = swift_allocObject(&unk_10028CED0, 24LL, 7LL);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v0;
  uint64_t v3 = swift_allocObject(&unk_10028CEF8, 32LL, 7LL);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = sub_1001B37A8;
  *(void *)(v3 + 2swift_weakDestroy(v0 + 4) = v2;
  v8[4] = sub_100061B54;
  uint64_t v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256LL;
  v8[2] = sub_100209610;
  v8[3] = &unk_10028CF10;
  uint64_t v4 = _Block_copy(v8);
  uint64_t v5 = v9;
  id v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 126LL, 85LL, 40LL, 1LL);
  swift_release(v2);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0) {
    __break(1u);
  }
}

void sub_1001B2B2C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_gradientLayer);
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
  [v2 frame];
  objc_msgSend(v1, "setFrame:");
  id v3 = [v2 layer];
  [v1 setMask:v3];

  id v4 = [v2 layer];
  [v4 frame];
  objc_msgSend(v4, "setFrame:", 0.0, 0.0);
}

void sub_1001B2C38(uint64_t a1, int a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for TitleEffect(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v94 - v18;
  int v95 = a2;
  if ((a2 & 1) != 0)
  {
    id v20 = (void *)objc_opt_self(&OBJC_CLASS___CATransaction);
    [v20 begin];
    double v21 = *(double *)&a3;
    if ((a4 & 1) != 0) {
      double v21 = 0.3;
    }
    [v20 setAnimationDuration:v21];
    if (a5) {
      id v22 = a5;
    }
    else {
      id v22 =  [(id)objc_opt_self(CAMediaTimingFunction) functionWithName:kCAMediaTimingFunctionLinear];
    }
    id v23 = a5;
    [v20 setAnimationTimingFunction:v22];
  }

  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v24(v19, a1, v12, v17);
  uint64_t v25 = v6 + OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_effect;
  swift_beginAccess(v6 + OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_effect, &v97, 33LL, 0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 40))(v25, v19, v12);
  __n128 v26 = swift_endAccess(&v97);
  v24(v15, a1, v12, v26);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v27 == enum case for TitleEffect.color(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    id v29 = *(void **)v15;
    uint64_t v28 = (void *)*((void *)v15 + 1);
    uint64_t v30 = *((void *)v15 + 3);
    objc_super v31 = *(void **)(v6 + OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_gradientLayer);
    uint64_t v32 = sub_1000031E8((uint64_t *)&unk_1002DE260);
    uint64_t v33 = swift_allocObject(v32, 96LL, 7LL);
    *(_OWORD *)(v33 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
    id v34 = [v29 CGColor];
    type metadata accessor for CGColor(0LL);
    uint64_t v36 = v35;
    *(void *)(v33 + 56) = v35;
    *(void *)(v33 + 32) = v34;
    id v37 = [v29 CGColor];
    *(void *)(v33 + 88) = v36;
    *(void *)(v33 + 6swift_weakDestroy(v0 + 4) = v37;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v31, "setColors:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

    uint64_t v39 = *(void **)(v6 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
    id v40 = [(id)objc_opt_self(UIColor) blackColor];
    [v39 setTextColor:v40];

    if (v30)
    {
      NSString v42 = String._bridgeToObjectiveC()();
      *(void *)&double v41 = swift_bridgeObjectRelease(v30).n128_u64[0];
    }

    else
    {
      NSString v42 = 0LL;
    }

    objc_msgSend(v31, "setCompositingFilter:", v42, v41);
    swift_unknownObjectRelease(v42);
    id v74 = *(id *)(v6 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_accessoryView);
    [v74 setTintColor:v28];

    goto LABEL_29;
  }

  if (v27 == enum case for TitleEffect.verticalGradient(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    uint64_t v43 = *(void **)v15;
    id v29 = (void *)*((void *)v15 + 1);
    uint64_t v28 = (void *)*((void *)v15 + 2);
    id v94 = (id)*((void *)v15 + 3);
    uint64_t v44 = *((void *)v15 + 4);
    uint64_t v45 = *(void **)(v6 + OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_gradientLayer);
    uint64_t v46 = sub_1000031E8((uint64_t *)&unk_1002DE260);
    uint64_t v47 = swift_allocObject(v46, 96LL, 7LL);
    *(_OWORD *)(v47 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
    id v48 = [v43 CGColor];
    type metadata accessor for CGColor(0LL);
    uint64_t v50 = v49;
    *(void *)(v47 + 56) = v49;
    *(void *)(v47 + 32) = v48;
    id v51 = [v29 CGColor];
    *(void *)(v47 + 88) = v50;
    *(void *)(v47 + 6swift_weakDestroy(v0 + 4) = v51;
    Class v52 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v45, "setColors:", v52, swift_bridgeObjectRelease(v47).n128_f64[0]);

    objc_msgSend(v45, "setStartPoint:", 0.5, 0.0);
    objc_msgSend(v45, "setEndPoint:", 0.5, 1.0);
    uint64_t v53 = *(void **)(v6 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
    id v54 = [(id)objc_opt_self(UIColor) blackColor];
    [v53 setTextColor:v54];

    if (v44)
    {
      NSString v56 = String._bridgeToObjectiveC()();
      *(void *)&double v55 = swift_bridgeObjectRelease(v44).n128_u64[0];
    }

    else
    {
      NSString v56 = 0LL;
    }

    objc_msgSend(v45, "setCompositingFilter:", v56, v55);
    swift_unknownObjectRelease(v56);
    id v92 = *(id *)(v6 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_accessoryView);
    [v92 setTintColor:v28];

LABEL_29:
    if ((v95 & 1) == 0) {
      return;
    }
    goto LABEL_30;
  }

  if (v27 == enum case for TitleEffect.horizontalGradient(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    uint64_t v58 = *(void **)v15;
    uint64_t v57 = (void *)*((void *)v15 + 1);
    uint64_t v59 = (void *)*((void *)v15 + 2);
    id v94 = (id)*((void *)v15 + 3);
    uint64_t v60 = *((void *)v15 + 4);
    uint64_t v61 = *(void **)(v6 + OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_gradientLayer);
    uint64_t v62 = sub_1000031E8((uint64_t *)&unk_1002DE260);
    uint64_t v63 = swift_allocObject(v62, 96LL, 7LL);
    *(_OWORD *)(v63 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
    id v64 = [v58 CGColor];
    type metadata accessor for CGColor(0LL);
    uint64_t v66 = v65;
    *(void *)(v63 + 56) = v65;
    *(void *)(v63 + 32) = v64;
    id v67 = [v57 CGColor];
    *(void *)(v63 + 88) = v66;
    *(void *)(v63 + 6swift_weakDestroy(v0 + 4) = v67;
    Class v68 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v61, "setColors:", v68, swift_bridgeObjectRelease(v63).n128_f64[0]);

    if (qword_1002DD070 != -1) {
      swift_once(&qword_1002DD070, sub_1001B2458);
    }
    uint64_t v69 = sub_1000031E8((uint64_t *)&unk_1002EB120);
    sub_1000061F4(v69, (uint64_t)qword_1002EB0A8);
    uint64_t v96 = v6;
    Conditional.evaluate(with:)(&v97, &v96, v69);
    objc_msgSend(v61, "setStartPoint:", v97, v98);
    if (qword_1002DD078 != -1) {
      swift_once(&qword_1002DD078, sub_1001B2474);
    }
    sub_1000061F4(v69, (uint64_t)qword_1002EB0C0);
    uint64_t v96 = v6;
    Conditional.evaluate(with:)(&v97, &v96, v69);
    objc_msgSend(v61, "setEndPoint:", v97, v98);
    char v70 = *(void **)(v6 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
    id v71 = [(id)objc_opt_self(UIColor) blackColor];
    [v70 setTextColor:v71];

    if (v60)
    {
      NSString v73 = String._bridgeToObjectiveC()();
      *(void *)&double v72 = swift_bridgeObjectRelease(v60).n128_u64[0];
    }

    else
    {
      NSString v73 = 0LL;
    }

    objc_msgSend(v61, "setCompositingFilter:", v73, v72);
    swift_unknownObjectRelease(v73);
    id v93 = *(id *)(v6 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_accessoryView);
    [v93 setTintColor:v59];

    if ((v95 & 1) == 0) {
      return;
    }
LABEL_30:
    [(id)objc_opt_self(CATransaction) commit];
    return;
  }

  id v94 = *(id *)(v6 + OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_gradientLayer);
  uint64_t v75 = sub_1000031E8((uint64_t *)&unk_1002DE260);
  uint64_t v76 = swift_allocObject(v75, 96LL, 7LL);
  *(_OWORD *)(v76 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
  objc_super v77 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v78 = [v77 blackColor];
  id v79 = [v78 CGColor];

  type metadata accessor for CGColor(0LL);
  uint64_t v81 = v80;
  *(void *)(v76 + 56) = v80;
  *(void *)(v76 + 32) = v79;
  id v82 = [v77 blackColor];
  id v83 = [v82 CGColor];

  *(void *)(v76 + 88) = v81;
  *(void *)(v76 + 6swift_weakDestroy(v0 + 4) = v83;
  Class v84 = Array._bridgeToObjectiveC()().super.isa;
  *(void *)&double v85 = swift_bridgeObjectRelease(v76).n128_u64[0];
  id v86 = v94;
  objc_msgSend(v94, "setColors:", v84, v85);

  uint64_t v87 = *(void **)(v6 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
  id v88 = [v77 blackColor];
  [v87 setTextColor:v88];

  [v86 setCompositingFilter:0];
  unint64_t v89 = *(void **)(v6 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_accessoryView);
  if (v89)
  {
    sub_100010F30();
    id v90 = v89;
    unint64_t v91 = (void *)static UIColor.appTint.getter();
    [v90 setTintColor:v91];
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if ((v95 & 1) != 0) {
    goto LABEL_30;
  }
}

void sub_1001B35F8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Arcade16ArcadeHeaderView_effect;
  uint64_t v2 = type metadata accessor for TitleEffect(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
}

id sub_1001B3644()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArcadeHeaderView(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001B36C8()
{
  return type metadata accessor for ArcadeHeaderView(0LL);
}

uint64_t type metadata accessor for ArcadeHeaderView(uint64_t a1)
{
  uint64_t result = qword_1002EB110;
  if (!qword_1002EB110) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadeHeaderView);
  }
  return result;
}

uint64_t sub_1001B370C(uint64_t a1)
{
  uint64_t result = type metadata accessor for TitleEffect(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 608);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1001B3784()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1001B37A8()
{
}

uint64_t sub_1001B37B0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1001B37C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001B37D0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

ValueMetadata *type metadata accessor for DebugEventListDataSource()
{
  return &type metadata for DebugEventListDataSource;
}

void sub_1001B37E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v74 = a3;
  uint64_t v6 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v62 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v71 = type metadata accessor for FlowOrigin(0LL);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  NSString v73 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v67 = type metadata accessor for FlowAnimationBehavior(0LL);
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  double v72 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v65 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  char v70 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v12);
  Class v68 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for FlowPage(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v25 = IndexPath.row.getter(v24);
  if ((v25 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }

  if (v25 >= *(void *)(a4 + 16))
  {
LABEL_10:
    __break(1u);
    swift_release(v76);
    __break(1u);
    return;
  }

  uint64_t v60 = v7;
  uint64_t v61 = v6;
  uint64_t v26 = *(void *)(a4 + 8 * v25 + 32);
  swift_bridgeObjectRetain_n(v26, 2LL);
  uint64_t v63 = a2;
  uint64_t v27 = sub_10015F498(a2, 0LL, 0LL, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000012LL, 0x800000010024B320LL);
  uint64_t v28 = (objc_class *)type metadata accessor for DebugMetricsInspectorViewController(0LL);
  id v29 = objc_allocWithZone(v28);
  swift_bridgeObjectRetain(v26);
  objc_super v31 = sub_1001E0064(v30);
  swift_bridgeObjectRelease(v26);
  *(void *)&__int128 v76 = v31;
  sub_100006B68(&v76);
  swift_bridgeObjectRelease(v26);
  *(void *)((char *)v29 + *(void *)((swift_isaMask & *v29) + 0x60LL)) = v76;
  *(void *)((char *)v29 + *(void *)((swift_isaMask & *v29) + 0x68LL)) = v27;
  uint64_t v32 = (objc_class *)sub_1000031E8(&qword_1002DDA60);
  v79.id receiver = v29;
  v79.super_class = v32;
  id v33 = objc_msgSendSuper2(&v79, "initWithStyle:", 0);
  id v34 = sub_1001B3FEC(v26);
  NSString v35 = objc_msgSend(v34, "string", swift_bridgeObjectRelease(v26).n128_f64[0]);

  if (!v35)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
    uint64_t v38 = v37;
    NSString v35 = String._bridgeToObjectiveC()();
    *(void *)&double v36 = swift_bridgeObjectRelease(v38).n128_u64[0];
  }

  objc_msgSend(v33, "setTitle:", v35, v36);

  uint64_t v78 = 0LL;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, enum case for FlowPage.viewController(_:), v20);
  uint64_t v39 = type metadata accessor for URL(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v19, 1LL, 1LL, v39);
  uint64_t v40 = type metadata accessor for ReferrerData(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56LL))(v16, 1LL, 1LL, v40);
  v75[3] = v28;
  v75[0] = v33;
  id v41 = v33;
  NSString v42 = v68;
  static ActionMetrics.notInstrumented.getter(v41);
  uint64_t v43 = v70;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))( v70,  enum case for FlowPresentationContext.infer(_:),  v65);
  uint64_t v44 = v72;
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v72, enum case for FlowAnimationBehavior.infer(_:), v67);
  uint64_t v45 = v73;
  uint64_t v46 = (*(uint64_t (**)(char *, void, uint64_t))(v69 + 104))(v73, enum case for FlowOrigin.inapp(_:), v71);
  uint64_t v47 = static FlowActionPresentation.stackPush.getter(v46);
  uint64_t v49 = v48;
  uint64_t v50 = type metadata accessor for FlowAction(0LL);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  uint64_t v51 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)( &v76,  0LL,  0LL,  0LL,  v23,  v19,  0LL,  0LL,  v16,  v75,  v42,  v43,  v44,  v45,  0LL,  v47,  v49);
  uint64_t v52 = UIResponder.nearestActionRunner.getter();
  uint64_t v53 = v63;
  if (v52)
  {
    uint64_t v54 = v52;
    __int128 v76 = 0u;
    __int128 v77 = 0u;
    uint64_t v55 = v60;
    NSString v56 = v62;
    uint64_t v57 = v61;
    (*(void (**)(char *, void, uint64_t))(v60 + 104))( v62,  enum case for ActionRunner.Origin.userInitiated(_:),  v61);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v51, &v76, v56, v53);

    swift_release(v51);
    __n128 v58 = swift_release(v54);
    (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v56, v57, v58);
    sub_100029100((uint64_t)&v76);
  }

  else
  {
    swift_release(v51);
  }

unint64_t sub_1001B3DDC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1001B4340(a1, a3, *v3);
}

void sub_1001B3DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

char *sub_1001B3DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain(a1);
  uint64_t v20 = v4;
  uint64_t v5 = (uint64_t *)(v4 + 40);
  uint64_t v6 = (char *)_swiftEmptyArrayStorage;
  uint64_t v7 = (char *)&type metadata for Any + 8;
  uint64_t v24 = (char *)&type metadata for Any + 8;
  do
  {
    uint64_t v8 = *v5;
    if (!*(void *)(a2 + 16))
    {
      __int128 v22 = 0u;
      __int128 v23 = 0u;
      swift_bridgeObjectRetain(v8);
LABEL_4:
      sub_100029100((uint64_t)&v22);
LABEL_5:
      swift_bridgeObjectRelease(v8);
      goto LABEL_6;
    }

    uint64_t v9 = *(v5 - 1);
    swift_bridgeObjectRetain_n(*v5, 2LL);
    unint64_t v10 = sub_1000E8690(v9, v8);
    if ((v11 & 1) != 0)
    {
      sub_100008364(*(void *)(a2 + 56) + 32 * v10, (uint64_t)&v22);
    }

    else
    {
      __int128 v22 = 0u;
      __int128 v23 = 0u;
    }

    swift_bridgeObjectRelease(v8);
    if (!*((void *)&v23 + 1)) {
      goto LABEL_4;
    }
    uint64_t v12 = v21[0];
    uint64_t v13 = (void *)v21[1];
    *(void *)&__int128 v22 = v9;
    *((void *)&v22 + 1) = v8;
    swift_bridgeObjectRetain(v8);
    v14._countAndFlagsBits = 8250LL;
    v14._object = (void *)0xE200000000000000LL;
    String.append(_:)(v14);
    v15._countAndFlagsBits = v12;
    v15._object = v13;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v13);
    __int128 v16 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0) {
      uint64_t v6 = sub_100019F48(0LL, *((void *)v6 + 2) + 1LL, 1, v6);
    }
    unint64_t v18 = *((void *)v6 + 2);
    unint64_t v17 = *((void *)v6 + 3);
    if (v18 >= v17 >> 1) {
      uint64_t v6 = sub_100019F48((char *)(v17 > 1), v18 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v18 + 1;
    *(_OWORD *)&v6[16 * v18 + 32] = v16;
    uint64_t v7 = v24;
LABEL_6:
    v5 += 2;
    --v2;
  }

  while (v2);
  swift_bridgeObjectRelease(v20);
  return v6;
}

id sub_1001B3FEC(uint64_t a1)
{
  if (!*(void *)(a1 + 16)
    || (unint64_t v2 = sub_1000E8690(0x707954746E657665LL, 0xE900000000000065LL), (v3 & 1) == 0)
    || (sub_100008364(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v33),
        (swift_dynamicCast(v32, &v33, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) == 0))
  {
    id v27 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
    NSString v21 = String._bridgeToObjectiveC()();
    id v28 = [v27 initWithString:v21];
LABEL_7:
    id v8 = v28;
    goto LABEL_8;
  }

  uint64_t v4 = v32[1];
  swift_bridgeObjectRetain(a1);
  uint64_t v5 = sub_1001B3DF0((uint64_t)&off_100280040, a1);
  swift_bridgeObjectRelease(a1);
  swift_arrayDestroy(&unk_100280060, 3LL, &type metadata for String);
  if (!*((void *)v5 + 2))
  {
    swift_bridgeObjectRelease(v5);
    id v30 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    id v28 = [v30 initWithString:v21];
    goto LABEL_7;
  }

  id v6 = objc_allocWithZone(&OBJC_CLASS___NSMutableAttributedString);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = objc_msgSend(v6, "initWithString:", v7, swift_bridgeObjectRelease(v4).n128_f64[0]);

  id v9 = [(id)objc_opt_self(UIFont) preferredFontForTextStyle:UIFontTextStyleCaption2];
  uint64_t v33 = 10272LL;
  unint64_t v34 = 0xE200000000000000LL;
  v32[0] = v5;
  uint64_t v10 = sub_1000031E8(&qword_1002EAEC0);
  unint64_t v11 = sub_100008748();
  uint64_t v12 = BidirectionalCollection<>.joined(separator:)(8236LL, 0xE200000000000000LL, v10, v11);
  Swift::String v14 = v13;
  swift_bridgeObjectRelease(v5);
  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 41LL;
  v16._object = (void *)0xE100000000000000LL;
  String.append(_:)(v16);
  unint64_t v17 = v34;
  uint64_t v18 = sub_1000031E8(&qword_1002DF830);
  initeCGFloat d = swift_initStackObject(v18, &v31);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100233580;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 6swift_weakDestroy(v0 + 4) = sub_100028C20();
  *(void *)(inited + 40) = v9;
  uint64_t v20 = NSFontAttributeName;
  NSString v21 = v9;
  unint64_t v22 = sub_1000E68C8(inited);
  id v23 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  type metadata accessor for Key(0LL);
  sub_1000495EC();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  id v26 = objc_msgSend(v23, "initWithString:attributes:", v24, isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

  [v8 appendAttributedString:v26];
LABEL_8:

  return v8;
}

unint64_t sub_1001B4340(uint64_t a1, void *a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [a2 dequeueReusableCellWithIdentifier:v5];

  if (v6)
  {
    uint64_t v7 = type metadata accessor for BasicTableViewCell();
    uint64_t v8 = swift_dynamicCastClass(v6, v7);
    id v9 = (id)v8;
    if (v8) {
      goto LABEL_5;
    }
  }

  id v10 = objc_allocWithZone((Class)type metadata accessor for BasicTableViewCell());
  NSString v11 = String._bridgeToObjectiveC()();
  id v9 = [v10 initWithStyle:0 reuseIdentifier:v11];

LABEL_5:
  unint64_t result = IndexPath.row.getter(v8);
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }

  if (result >= *(void *)(a3 + 16))
  {
LABEL_11:
    __break(1u);
    return result;
  }

  uint64_t v13 = *(void *)(a3 + 8 * result + 32);
  swift_bridgeObjectRetain(v13);
  id v15 = sub_1001B3FEC(v14);
  id v16 = objc_msgSend(v9, "textLabel", swift_bridgeObjectRelease(v13).n128_f64[0]);
  [v16 setAttributedText:v15];

  id v17 = [v9 detailTextLabel];
  if (v17)
  {
    uint64_t v18 = v17;
    [v17 setText:0];
  }

  id v19 = [v9 imageView];
  [v19 setImage:0];

  return (unint64_t)v9;
}

unint64_t sub_1001B4500()
{
  unint64_t result = qword_1002EB140;
  if (!qword_1002EB140)
  {
    uint64_t v1 = type metadata accessor for SmallGameCenterPlayerCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100240A00, v1);
    atomic_store(result, (unint64_t *)&qword_1002EB140);
  }

  return result;
}

double sub_1001B454C(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a2;
  uint64_t v2 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v62 = *(void *)(v2 - 8);
  uint64_t v63 = v2;
  __chkstk_darwin(v2);
  uint64_t v59 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v56 = type metadata accessor for PageGrid(0LL);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  NSString v5 = (uint64_t *)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  __chkstk_darwin(v6);
  uint64_t v52 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8(&qword_1002EB230);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  __chkstk_darwin(v8);
  uint64_t v54 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (uint64_t *)((char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = __chkstk_darwin(v17);
  NSString v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v19);
  ReadOnlyLens.value.getter(v66, v17);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  uint64_t KeyPath = swift_getKeyPath(&unk_100240A50, v22);
  ItemLayoutContext.subscript.getter(v16);
  swift_release(KeyPath);
  uint64_t v25 = swift_getKeyPath(&unk_100240A80, v24);
  ReadOnlyLens.subscript.getter(v25, v13);
  __n128 v26 = swift_release(v25);
  (*(void (**)(void *, uint64_t, __n128))(v14 + 8))(v16, v13, v26);
  __n128 v27 = swift_bridgeObjectRelease(v65[1]);
  ItemLayoutContext.state.getter(v27);
  uint64_t v28 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v29 = swift_dynamicCastClassUnconditional(v53, v28, 0LL, 0LL, 0LL);
  uint64_t v30 = (uint64_t)v52;
  ItemLayoutContext.componentLayoutOptions.getter(v29);
  uint64_t v32 = swift_getKeyPath(&unk_100240AB0, v31);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(v32);
  double v34 = PageGrid.componentMeasuringSize(spanning:)(v33, 1.0);
  double v36 = v35;
  (*(void (**)(void *, uint64_t))(v55 + 8))(v5, v56);
  id v37 = sub_100147A04();
  sub_10001F010((uint64_t)v66, (uint64_t)v64);
  uint64_t v38 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v39 = type metadata accessor for SmallGameCenterPlayer(0LL);
  swift_dynamicCast(v65, v64, v38, v39, 7LL);
  uint64_t v41 = v57;
  uint64_t v40 = v58;
  NSString v42 = v54;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v12, v58);
  uint64_t v43 = type metadata accessor for NilState(0LL);
  uint64_t v44 = (uint64_t)v59;
  StateLens.init(_:)(v42, v43);
  double v45 = sub_1001EC514(v65[0], v34, v36, v44, v30, v37);
  double v47 = v46;
  (*(void (**)(uint64_t, uint64_t, double))(v62 + 8))(v44, v63, v45);
  uint64_t v48 = v65[0];
  swift_unknownObjectRelease(v37);
  __n128 v49 = swift_release(v48);
  (*(void (**)(uint64_t, uint64_t, __n128))(v60 + 8))(v30, v61, v49);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v40);
  _s6Arcade17PillOverlayLayoutVwxx_0(v66);
  return v47;
}

void sub_1001B495C(void *a1, char a2)
{
  uint64_t v5 = type metadata accessor for LayoutRect(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v9 = 10.0;
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_pillView);
  if (v10)
  {
    id v35 = v10;
    if ([v35 isHidden])
    {
    }

    else
    {
      uint64_t v11 = type metadata accessor for PillView();
      uint64_t v37 = v11;
      uint64_t v38 = protocol witness table for UIView;
      v36[0] = v35;
      double v39 = v9;
      double v40 = v9;
      double v41 = v9;
      double v42 = v9;
      id v12 = v35;
      [a1 frame];
      *(double *)&v34[1] = v14;
      id v35 = v13;
      double v16 = v15;
      double v18 = v17;
      double v19 = sub_10000AA6C(*(double *)&v13, v14, v15, v17, v9, v9);
      CGFloat v21 = v20;
      CGFloat v23 = v22;
      CGFloat v25 = v24;
      sub_100005F8C(v36, v11);
      v34[0] = Measurable.measuredSize(fitting:in:)(a1, v11, protocol witness table for UIView[1], v16, v18);
      v43.origin.x = v19;
      v43.origin.y = v21;
      v43.size.width = v23;
      v43.size.height = v25;
      CGRectGetMaxY(v43);
      v44.origin.x = v19;
      v44.origin.y = v21;
      v44.size.width = v23;
      v44.size.height = v25;
      CGRectGetMinX(v44);
      uint64_t v26 = v37;
      __n128 v27 = v38;
      sub_100005F8C(v36, v37);
      CGRect.withLayoutDirection(in:relativeTo:)(a1);
      dispatch thunk of LayoutView.frame.setter(v26, v27);
      uint64_t v28 = v37;
      uint64_t v29 = v38;
      sub_100005F8C(v36, v37);
      double v30 = dispatch thunk of LayoutView.frame.getter(v28, v29);
      LayoutRect.init(representing:)(v30, v31, v32, v33);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_100163184(v36);
    }
  }

void sub_1001B4BD0(void *a1, char a2)
{
  uint64_t v5 = type metadata accessor for LayoutRect(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v9 = 10.0;
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade34MixedMediaLockupCollectionViewCell_pillView);
  if (v10)
  {
    id v35 = v10;
    if ([v35 isHidden])
    {
    }

    else
    {
      uint64_t v11 = type metadata accessor for PillView();
      uint64_t v37 = v11;
      uint64_t v38 = protocol witness table for UIView;
      v36[0] = v35;
      double v39 = v9;
      double v40 = v9;
      double v41 = v9;
      double v42 = v9;
      id v12 = v35;
      [a1 frame];
      *(double *)&v34[1] = v14;
      id v35 = v13;
      double v16 = v15;
      double v18 = v17;
      double v19 = sub_10000AA6C(*(double *)&v13, v14, v15, v17, v9, v9);
      CGFloat v21 = v20;
      CGFloat v23 = v22;
      CGFloat v25 = v24;
      sub_100005F8C(v36, v11);
      v34[0] = Measurable.measuredSize(fitting:in:)(a1, v11, protocol witness table for UIView[1], v16, v18);
      v43.origin.x = v19;
      v43.origin.y = v21;
      v43.size.width = v23;
      v43.size.height = v25;
      CGRectGetMaxY(v43);
      v44.origin.x = v19;
      v44.origin.y = v21;
      v44.size.width = v23;
      v44.size.height = v25;
      CGRectGetMinX(v44);
      uint64_t v26 = v37;
      __n128 v27 = v38;
      sub_100005F8C(v36, v37);
      CGRect.withLayoutDirection(in:relativeTo:)(a1);
      dispatch thunk of LayoutView.frame.setter(v26, v27);
      uint64_t v28 = v37;
      uint64_t v29 = v38;
      sub_100005F8C(v36, v37);
      double v30 = dispatch thunk of LayoutView.frame.getter(v28, v29);
      LayoutRect.init(representing:)(v30, v31, v32, v33);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_100163184(v36);
    }
  }

void sub_1001B4E44(void *a1, char a2)
{
  uint64_t v5 = type metadata accessor for LayoutRect(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v9 = 10.0;
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_pillView);
  if (v10)
  {
    id v35 = v10;
    if ([v35 isHidden])
    {
    }

    else
    {
      uint64_t v11 = type metadata accessor for PillView();
      uint64_t v37 = v11;
      uint64_t v38 = protocol witness table for UIView;
      v36[0] = v35;
      double v39 = v9;
      double v40 = v9;
      double v41 = v9;
      double v42 = v9;
      id v12 = v35;
      [a1 frame];
      *(double *)&v34[1] = v14;
      id v35 = v13;
      double v16 = v15;
      double v18 = v17;
      double v19 = sub_10000AA6C(*(double *)&v13, v14, v15, v17, v9, v9);
      CGFloat v21 = v20;
      CGFloat v23 = v22;
      CGFloat v25 = v24;
      sub_100005F8C(v36, v11);
      v34[0] = Measurable.measuredSize(fitting:in:)(a1, v11, protocol witness table for UIView[1], v16, v18);
      v43.origin.x = v19;
      v43.origin.y = v21;
      v43.size.width = v23;
      v43.size.height = v25;
      CGRectGetMaxY(v43);
      v44.origin.x = v19;
      v44.origin.y = v21;
      v44.size.width = v23;
      v44.size.height = v25;
      CGRectGetMinX(v44);
      uint64_t v26 = v37;
      __n128 v27 = v38;
      sub_100005F8C(v36, v37);
      CGRect.withLayoutDirection(in:relativeTo:)(a1);
      dispatch thunk of LayoutView.frame.setter(v26, v27);
      uint64_t v28 = v37;
      uint64_t v29 = v38;
      sub_100005F8C(v36, v37);
      double v30 = dispatch thunk of LayoutView.frame.getter(v28, v29);
      LayoutRect.init(representing:)(v30, v31, v32, v33);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_100163184(v36);
    }
  }

__n128 sub_1001B50B4()
{
  qword_1002F14F0 = 0x4034000000000000LL;
  *(void *)algn_1002F14F8 = 0LL;
  qword_1002F1500 = 0LL;
  unk_1002F1508 = 0LL;
  __asm { FMOV            V0.2D, #20.0 }

  xmmword_1002F1510 = (__int128)result;
  *(_OWORD *)&qword_1002F1520 = xmmword_100233FB0;
  byte_1002F1530 = 0;
  *(__n128 *)&qword_1002F1538 = result;
  *(_OWORD *)&qword_1002F1548 = xmmword_100233FB0;
  byte_1002F1558 = 0;
  return result;
}

uint64_t sub_1001B50EC()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002E7020);
  __chkstk_darwin(v3);
  uint64_t v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000FF90(v0, qword_1002F1560);
  uint64_t v25 = sub_1000061F4(v0, (uint64_t)qword_1002F1560);
  id v12 = [(id)objc_opt_self(UIColor) clearColor];
  v27[0] = sub_1000031E8(&qword_1002DE250);
  uint64_t v13 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  v27[1] = v13;
  uint64_t KeyPath = swift_getKeyPath(&unk_100240B30, v27);
  id v28 = v12;
  id v29 = v12;
  id v15 = v12;
  double v16 = v11;
  Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v29, &v28, v13);
  if (qword_1002DCF88 != -1) {
    swift_once(&qword_1002DCF88, sub_100175C20);
  }
  uint64_t v17 = sub_1000061F4(v8, (uint64_t)qword_1002F1280);
  double v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v7, v17, v8);
  double v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v19(v7, 0LL, 1LL, v8);
  if (qword_1002DCF80 != -1) {
    swift_once(&qword_1002DCF80, sub_100175B3C);
  }
  uint64_t v20 = sub_1000061F4(v8, (uint64_t)qword_1002F1268);
  uint64_t v21 = (uint64_t)v26;
  v18(v26, v20, v8);
  v19((char *)v21, 0LL, 1LL, v8);
  uint64_t v22 = (uint64_t)&v2[*(int *)(v0 + 28)];
  v19((char *)v22, 1LL, 1LL, v8);
  uint64_t v23 = (uint64_t)&v2[*(int *)(v0 + 32)];
  v19((char *)v23, 1LL, 1LL, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v2, v16, v8);
  sub_1000C978C((uint64_t)v7, v22);
  sub_1000C978C(v21, v23);
  return sub_1000C97D4((uint64_t)v2, v25);
}

uint64_t sub_1001B53E0()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002E7020);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000FF90(v0, qword_1002F1578);
  uint64_t v24 = sub_1000061F4(v0, (uint64_t)qword_1002F1578);
  id v12 = [(id)objc_opt_self(UIColor) clearColor];
  v26[0] = sub_1000031E8(&qword_1002DE250);
  uint64_t v13 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  v26[1] = v13;
  uint64_t KeyPath = swift_getKeyPath(&unk_100240B30, v26);
  id v27 = v12;
  id v28 = v12;
  id v15 = v12;
  double v16 = v11;
  Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v28, &v27, v13);
  if (qword_1002DCF90 != -1) {
    swift_once(&qword_1002DCF90, sub_100175D08);
  }
  uint64_t v17 = sub_1000061F4(v8, (uint64_t)qword_1002F1298);
  double v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v7, v17, v8);
  double v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v19(v7, 0LL, 1LL, v8);
  uint64_t v20 = (uint64_t)v25;
  v18(v25, v17, v8);
  v19((char *)v20, 0LL, 1LL, v8);
  uint64_t v21 = (uint64_t)&v2[*(int *)(v0 + 28)];
  v19((char *)v21, 1LL, 1LL, v8);
  uint64_t v22 = (uint64_t)&v2[*(int *)(v0 + 32)];
  v19((char *)v22, 1LL, 1LL, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v2, v16, v8);
  sub_1000C978C((uint64_t)v7, v21);
  sub_1000C978C(v20, v22);
  return sub_1000C97D4((uint64_t)v2, v24);
}

char *sub_1001B56A0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for CornerStyle(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_lockupView;
  id v14 = objc_allocWithZone((Class)type metadata accessor for SmallLockupView());
  id v15 = v4;
  *(void *)&v4[v13] = objc_msgSend(v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v16 = OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_mediaView;
  *(void *)&v15[v16] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for LockupMediaView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *(void *)&v15[OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_pillView] = 0LL;

  uint64_t v17 = (objc_class *)type metadata accessor for ContentSearchResultCollectionViewCell();
  v51.id receiver = v15;
  v51.super_class = v17;
  double v18 = (char *)objc_msgSendSuper2(&v51, "initWithFrame:", a1, a2, a3, a4);
  id v19 = [v18 contentView];
  id v20 = [v19 layer];

  if (qword_1002DCF68 != -1) {
    swift_once(&qword_1002DCF68, sub_100175A44);
  }
  [v20 setBorderWidth:*(double *)&qword_1002F1250];

  (*(void (**)(_BYTE *, void, uint64_t))(v10 + 104))(v12, enum case for CornerStyle.continuous(_:), v9);
  id v21 = [v18 contentView];
  CornerStyle.apply(withRadius:to:)(v21, 12.0);

  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v22 = &v18[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  __int128 v23 = *(_OWORD *)&v18[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
  v57[0] = *(_OWORD *)&v18[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  v57[1] = v23;
  char v58 = v18[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)uint64_t v22 = 0x4020000000000000LL;
  *((void *)v22 + 1) = 0x4034000000000000LL;
  v22[16] = 0;
  *((void *)v22 + 3) = 0LL;
  v22[32] = 1;
  uint64_t v24 = v18;
  sub_1000690F4((uint64_t)v57, v25, v26);

  v52[0] = xmmword_100233760;
  v52[1] = xmmword_100236ED0;
  char v53 = 0;
  uint64_t v54 = 0LL;
  uint64_t v55 = 0LL;
  char v56 = 1;
  id v27 = v24;
  sub_10006779C(v52);

  id v28 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v29 = v27;
  id v30 = [v28 blackColor];
  id v31 = [v30 CGColor];

  double v32 = &v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  double v33 = *(void **)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  double v34 = *(void **)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
  id v35 = *(void **)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
  *(void *)double v32 = v31;
  *(int64x2_t *)(v32 + 8) = vdupq_n_s64(1uLL);
  id v36 = v33;
  sub_10000AAF8(v34);
  sub_10000AAF8(v35);
  id v37 = v31;

  sub_10000AB08(v34);
  sub_10000AB08(v35);
  sub_100069248(v33, v34, (unint64_t)v35);

  sub_10000AB08(v34);
  sub_10000AB08(v35);

  uint64_t v38 = &v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v39 = *(_DWORD *)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v37) = *(_DWORD *)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v3swift_weakDestroy(v0 + 4) = v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v35) = v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)uint64_t v38 = 0;
  *((_DWORD *)v38 + 1) = 1051931443;
  v38[8] = 0;
  uint64_t v40 = *((unsigned int *)v38 + 3);
  *((_DWORD *)v38 + 3) = 0;
  v38[16] = 1;
  double v41 = v29;
  v50[8] = (_BYTE)v34;
  v50[0] = (_BYTE)v35;
  v42.n128_u32[0] = v39;
  sub_1000693B0((int)v37, v34 | (unint64_t)(v40 << 32), (char)v35, v42);

  char v43 = v41[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
  v41[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v43 & 1) == 0)
  {
    char v44 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v41) + 0x98LL))();
    double v45 = v41;
    sub_1000678F0(v44);
  }

  id v46 = [v41 contentView];
  [v46 addSubview:*(void *)&v41[OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_lockupView]];

  id v47 = [v41 contentView];
  id v48 = *(id *)&v41[OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_mediaView];
  [v47 addSubview:v48];

  return v41;
}

void sub_1001B5B64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AspectRatio(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v35 - v7;
  uint64_t v9 = (objc_class *)type metadata accessor for ContentSearchResultCollectionViewCell();
  v35.id receiver = v0;
  v35.super_class = v9;
  objc_msgSendSuper2(&v35, "layoutSubviews");
  id v10 = [v0 contentView];
  [v10 frame];

  CGRect.subtracting(insets:)([v1 layoutMargins]);
  if (qword_1002DD080 != -1) {
    uint64_t v11 = swift_once(&qword_1002DD080, sub_1001B50B4);
  }
  *(void *)&double v12 = CGRect.subtracting(insets:)(v11).n128_u64[0];
  double v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  id v19 = *(void **)&v1[OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_lockupView];
  sub_1000ABE78(v15);
  double v21 = v20;
  v36.origin.x = v12;
  v36.origin.y = v14;
  v36.size.width = v16;
  v36.size.height = v18;
  objc_msgSend(v19, "setFrame:", v12, v14, CGRectGetWidth(v36), v21);
  if (qword_1002DCA10 != -1) {
    swift_once(&qword_1002DCA10, sub_1000AE15C);
  }
  uint64_t v22 = sub_1000061F4(v2, (uint64_t)qword_1002EFF60);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v22, v2);
  id v23 = [v1 contentView];
  [v23 frame];

  CGRect.subtracting(insets:)([v1 layoutMargins]);
  double v25 = v24;
  double v27 = v26;
  __n128 v29 = AspectRatio.init(_:_:)(v28, v24);
  v30.n128_f64[0] = AspectRatio.horizontalFraction.getter(v29);
  if (AspectRatio.horizontalFraction.getter(v30) >= v30.n128_f64[0]) {
    double v27 = AspectRatio.height(fromWidth:)(v25);
  }
  else {
    double v25 = AspectRatio.width(fromHeight:)(v27);
  }
  id v31 = *(void (**)(char *, uint64_t))(v3 + 8);
  v31(v5, v2);
  v31(v8, v2);
  id v32 = [v1 contentView];
  [v32 frame];

  *(void *)&v37.origin.x = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  CGFloat MaxY = CGRectGetMaxY(v37);
  double v34 = *(void **)&v1[OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_mediaView];
  objc_msgSend(v34, "setFrame:", 0.0, MaxY - v27, v25, v27);
  sub_1001B4E44(v34, 2);
}

void sub_1001B5FE8(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = __chkstk_darwin(v6).n128_u64[0];
  id v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  id v11 = objc_msgSend(v2, "contentView", v8);
  if (qword_1002DD088 != -1) {
    swift_once(&qword_1002DD088, sub_1001B50EC);
  }
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  sub_1000061F4(v12, (uint64_t)qword_1002F1560);
  sub_1001AB114(a1, (uint64_t)v10);
  id v32 = v2;
  Conditional.evaluate(with:)(&v33, &v32, v6);
  double v13 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v13(v10, v6);
  id v14 = v33;
  [v11 setBackgroundColor:v33];

  id v15 = [v3 contentView];
  id v16 = [v15 layer];

  if (qword_1002DD090 != -1) {
    swift_once(&qword_1002DD090, sub_1001B53E0);
  }
  sub_1000061F4(v12, (uint64_t)qword_1002F1578);
  sub_1001AB114(a1, (uint64_t)v10);
  id v32 = v3;
  Conditional.evaluate(with:)(&v33, &v32, v6);
  v13(v10, v6);
  id v17 = v33;
  id v18 = [v33 CGColor];

  [v16 setBorderColor:v18];
  id v19 = *(char **)&v3[OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_mediaView];
  if (((a1 - 1) & 0xFE) != 0) {
    uint64_t v20 = -1LL;
  }
  else {
    uint64_t v20 = 12LL;
  }
  uint64_t v21 = OBJC_IVAR____TtC6Arcade15LockupMediaView_roundedCorners;
  *(void *)&v19[OBJC_IVAR____TtC6Arcade15LockupMediaView_roundedCorners] = v20;
  ArtworkView.roundedCorners.setter(v20);
  uint64_t v22 = *(void *)&v19[OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer];
  *(void *)(v22 + OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners) = *(void *)&v19[v21];
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong(v22 + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  sub_1001B1E00(Strong);

  uint64_t v24 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  initeCGFloat d = swift_initStackObject(v24, v31);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1002339A0;
  *(void *)(inited + 32) = v19;
  double v26 = *(void **)(*(void *)&v3[OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_lockupView]
                 + OBJC_IVAR____TtC6Arcade15SmallLockupView_artworkView);
  *(void *)(inited + 40) = v26;
  id v33 = (id)inited;
  specialized Array._endMutation()(inited);
  uint64_t v27 = (uint64_t)v33;
  uint64_t v28 = v19;
  id v29 = v26;
  sub_100176A74(a1, v27);
  *(void *)&double v30 = swift_bridgeObjectRelease(v27).n128_u64[0];
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v3, "setNeedsLayout", v30);
    [v3 layoutIfNeeded];
  }

void sub_1001B6320(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_10006734C(a1, a2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(*(void *)(v2 + OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_mediaView)
                       + OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer)
           + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_100128F18(v4, a2);
  }

  sub_1000AD708(v4, a2);
}

void sub_1001B63A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MediaClickMetricsEvent.ActionType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100006028(0LL, (unint64_t *)&qword_1002DD600, &OBJC_CLASS___UIPress_ptr);
  sub_10006B6B4();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  id v10 = (objc_class *)type metadata accessor for ContentSearchResultCollectionViewCell();
  v19.id receiver = v2;
  v19.super_class = v10;
  objc_msgSendSuper2(&v19, "pressesBegan:withEvent:", isa, a2);

  sub_10008AEB0(a1);
  if ((v11 & 1) != 0)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(*(void *)&v2[OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_mediaView] + OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer)
             + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (Strong)
    {
      double v13 = (_BYTE *)Strong;
      uint64_t v14 = qword_1002F0818;
      if ((*(_BYTE *)(Strong + qword_1002F0818) & 1) == 0)
      {
        id v15 = *(void **)(Strong + qword_1002E70D8);
        if (v15)
        {
          id v16 = v15;
          id v17 = (void *)dispatch thunk of VideoPlayer.playerItem.getter();

          if (v17)
          {

            v13[v14] = 1;
            sub_10012A748();
            (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for MediaClickMetricsEvent.ActionType.enterFullscreen(_:),  v5);
            sub_10012B584((uint64_t)v8);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            sub_10012C020();
          }
        }
      }
    }
  }

void sub_1001B65F0()
{
}

id sub_1001B662C()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContentSearchResultCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContentSearchResultCollectionViewCell()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade37ContentSearchResultCollectionViewCell);
}

uint64_t sub_1001B66C4()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*(void *)(*v0 + OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_mediaView)
                     + OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer)
         + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
}

id sub_1001B66F8()
{
  return objc_retain(*(id *)(*(void *)(*v0 + OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_mediaView)
                           + OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer));
}

uint64_t sub_1001B6720()
{
  return 16LL;
}

__n128 sub_1001B672C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1001B673C()
{
  return 16LL;
}

__n128 sub_1001B6748(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_1001B6754(uint64_t *a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_1000031E8(&qword_1002DEA70);
  __chkstk_darwin(v4);
  objc_super v19 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v18 = (char *)&v15 - v7;
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v8);
  id v17 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for VideoControls(0LL);
  __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __chkstk_darwin(v12);
  uint64_t v13 = type metadata accessor for VideoFillMode(0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = type metadata accessor for VideoConfiguration(0LL);
  uint64_t v15 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v21 = v2;
  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC6Arcade18StoryCardMediaView_config);
  swift_beginAccess(v2 + OBJC_IVAR____TtC6Arcade18StoryCardMediaView_config, v22, 33LL, 0LL);
  sub_1001B78E8(a1, v14);
  swift_endAccess(v22);
  sub_10009F830(v14, (uint64_t)v22);
  __asm { BR              X10 }

void sub_1001B697C()
{
}

double sub_1001B6C0C()
{
  uint64_t v0 = type metadata accessor for AspectRatio(0LL);
  sub_10000FF90(v0, qword_1002F1590);
  uint64_t v1 = sub_1000061F4(v0, (uint64_t)qword_1002F1590);
  *(void *)&double result = AspectRatio.init(_:_:)(v1, 16.0).n128_u64[0];
  return result;
}

char *sub_1001B6C5C(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = type metadata accessor for CornerStyle(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v4[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_state] = 0;
  uint64_t v14 = OBJC_IVAR____TtC6Arcade18StoryCardMediaView_artworkView;
  type metadata accessor for ArtworkView(0LL);
  uint64_t v15 = v4;
  *(void *)&v4[v14] = static ArtworkView.plainArtworkView.getter(v15);
  *(void *)&v15[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_gridView] = 0LL;
  uint64_t v16 = OBJC_IVAR____TtC6Arcade18StoryCardMediaView_videoContainer;
  id v17 = (objc_class *)type metadata accessor for VideoViewContainer();
  uint64_t v18 = (char *)objc_allocWithZone(v17);
  swift_unknownObjectWeakInit(&v18[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view], 0LL);
  *(void *)&v18[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v19, 0LL);
  v32.id receiver = v18;
  v32.super_class = v17;
  *(void *)&v15[v16] = objc_msgSendSuper2(&v32, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v15[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_roundedCorners] = 0LL;
  uint64_t v20 = &v15[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_config];
  *(_OWORD *)uint64_t v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((_OWORD *)v20 + 2) = 0u;
  *((_OWORD *)v20 + 3) = 0u;
  v20[64] = 3;

  v31.id receiver = v15;
  v31.super_class = ObjectType;
  id v21 = objc_msgSendSuper2(&v31, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  double v25 = (char *)v21;
  objc_msgSend(v25, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for CornerStyle.continuous(_:), v10);
  uint64_t v26 = OBJC_IVAR____TtC6Arcade18StoryCardMediaView_videoContainer;
  CornerStyle.apply(withRadius:to:)(*(void *)&v25[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_videoContainer], 12.0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v27 = *(char **)&v25[v26];
  *(void *)&v27[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = *(void *)&v25[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_roundedCorners];
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong(&v27[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);
  id v29 = v27;
  sub_1001B1E00(Strong);

  [v25 addSubview:*(void *)&v25[v26]];
  [v25 addSubview:*(void *)&v25[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_artworkView]];

  return v25;
}

void sub_1001B7000()
{
  uint64_t v1 = v0;
  v28.id receiver = v0;
  v28.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v28, "layoutSubviews");
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_artworkView];
  [v1 bounds];
  objc_msgSend(v2, "setFrame:");
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_videoContainer];
  [v1 bounds];
  objc_msgSend(v3, "setFrame:");
  uint64_t v4 = (id *)&v1[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_gridView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_gridView], v27, 0LL, 0LL);
  if (*v4)
  {
    id v5 = *v4;
    [v1 bounds];
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    uint64_t v14 = (objc_class *)type metadata accessor for GridView();
    v26.id receiver = v5;
    v26.super_class = v14;
    objc_msgSendSuper2(&v26, "frame");
    double v16 = v15;
    double v18 = v17;
    v25.id receiver = v5;
    v25.super_class = v14;
    objc_msgSendSuper2(&v25, "setFrame:", v7, v9, v11, v13);
    v24.id receiver = v5;
    v24.super_class = v14;
    objc_msgSendSuper2(&v24, "frame");
    if (v16 != v20 || v18 != v19)
    {
      sub_1001E40FC();
      v23.id receiver = v5;
      v23.super_class = v14;
      objc_msgSendSuper2(&v23, "frame");
      sub_1001E4294(v21, v22);
    }
  }

uint64_t type metadata accessor for StoryCardMediaView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade18StoryCardMediaView);
}

void *destroy for StoryCardMediaView.Config(void *result)
{
  uint64_t v1 = result;
  unsigned int v2 = *((unsigned __int8 *)result + 64);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)result + 3;
  }
  if (v2 == 2) {
    return (void *)swift_release(*result);
  }
  if (v2 != 1)
  {
    if (v2) {
      return result;
    }
    return (void *)swift_release(*result);
  }

  swift_bridgeObjectRelease(*result);
  swift_bridgeObjectRelease(v1[6]);
  return (void *)swift_weakDestroy(v1 + 7);
}

uint64_t initializeWithCopy for StoryCardMediaView.Config(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 64);
  if (v3 >= 3) {
    unsigned int v3 = *(_DWORD *)a2 + 3;
  }
  if (v3 == 2)
  {
    uint64_t v5 = *a2;
    *(void *)a1 = *a2;
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = 2;
    swift_retain(v5);
  }

  else if (v3 == 1)
  {
    uint64_t v6 = *a2;
    *(void *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 3);
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    double v8 = a2 + 7;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_weakCopyInit(a1 + 56, v8);
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = 1;
  }

  else if (v3)
  {
    __int128 v9 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = *((_BYTE *)a2 + 64);
    __int128 v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v10;
  }

  else
  {
    uint64_t v4 = *a2;
    *(void *)a1 = *a2;
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = 0;
    swift_retain(v4);
  }

  return a1;
}

uint64_t *assignWithCopy for StoryCardMediaView.Config(uint64_t *a1, uint64_t *a2)
{
  if (a1 == a2) {
    return a1;
  }
  unsigned int v4 = *((unsigned __int8 *)a1 + 64);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a1 + 3;
  }
  switch(v4)
  {
    case 2u:
      goto LABEL_7;
    case 1u:
      swift_bridgeObjectRelease(*a1);
      swift_bridgeObjectRelease(a1[6]);
      swift_weakDestroy(a1 + 7);
      break;
    case 0u:
LABEL_7:
      swift_release(*a1);
      break;
  }

  unsigned int v5 = *((unsigned __int8 *)a2 + 64);
  if (v5 >= 3) {
    unsigned int v5 = *(_DWORD *)a2 + 3;
  }
  if (v5 == 2)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    *((_BYTE *)a1 + 6swift_weakDestroy(v0 + 4) = 2;
    swift_retain(v7);
  }

  else if (v5 == 1)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    uint64_t v9 = a2[6];
    a1[6] = v9;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_weakCopyInit(a1 + 7, a2 + 7);
    *((_BYTE *)a1 + 6swift_weakDestroy(v0 + 4) = 1;
  }

  else if (v5)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    __int128 v10 = *((_OWORD *)a2 + 1);
    __int128 v11 = *((_OWORD *)a2 + 2);
    __int128 v12 = *((_OWORD *)a2 + 3);
    *((_BYTE *)a1 + 6swift_weakDestroy(v0 + 4) = *((_BYTE *)a2 + 64);
    *((_OWORD *)a1 + 2) = v11;
    *((_OWORD *)a1 + 3) = v12;
    *((_OWORD *)a1 + 1) = v10;
  }

  else
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    *((_BYTE *)a1 + 6swift_weakDestroy(v0 + 4) = 0;
    swift_retain(v6);
  }

  return a1;
}

uint64_t initializeWithTake for StoryCardMediaView.Config(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 64);
  if (v3 >= 3) {
    unsigned int v3 = *(_DWORD *)a2 + 3;
  }
  if (v3 == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = 2;
  }

  else if (v3 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 24);
    uint64_t v4 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v4;
    swift_weakTakeInit(a1 + 56, a2 + 56);
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = 1;
  }

  else if (v3)
  {
    __int128 v5 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v5;
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = *(_BYTE *)(a2 + 64);
    __int128 v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v6;
  }

  else
  {
    *(void *)a1 = *(void *)a2;
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = 0;
  }

  return a1;
}

uint64_t assignWithTake for StoryCardMediaView.Config(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a1 + 3;
  }
  switch(v4)
  {
    case 2u:
      goto LABEL_7;
    case 1u:
      swift_bridgeObjectRelease(*(void *)a1);
      swift_bridgeObjectRelease(*(void *)(a1 + 48));
      swift_weakDestroy(a1 + 56);
      break;
    case 0u:
LABEL_7:
      swift_release(*(void *)a1);
      break;
  }

  unsigned int v5 = *(unsigned __int8 *)(a2 + 64);
  if (v5 >= 3) {
    unsigned int v5 = *(_DWORD *)a2 + 3;
  }
  if (v5 == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = 2;
  }

  else if (v5 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 24);
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    swift_weakTakeInit(a1 + 56, a2 + 56);
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = 1;
  }

  else if (v5)
  {
    __int128 v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = *(_BYTE *)(a2 + 64);
    __int128 v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v8;
  }

  else
  {
    *(void *)a1 = *(void *)a2;
    *(_BYTE *)(a1 + 6swift_weakDestroy(v0 + 4) = 0;
  }

  return a1;
}

uint64_t getEnumTagSinglePayload for StoryCardMediaView.Config(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 >= 4) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for StoryCardMediaView.Config( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 6swift_weakDestroy(v0 + 4) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)double result = 0u;
    *(_OWORD *)(result + swift_weakDestroy(v0 + 16) = 0u;
    *(_DWORD *)double result = a2 - 253;
    if (a3 >= 0xFD) {
      *(_BYTE *)(result + 65) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFD) {
      *(_BYTE *)(result + 65) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 6swift_weakDestroy(v0 + 4) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_1001B785C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 64);
  return result;
}

uint64_t sub_1001B7878(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + swift_weakDestroy(v0 + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }

  *(_BYTE *)(result + 6swift_weakDestroy(v0 + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StoryCardMediaView.Config()
{
  return &type metadata for StoryCardMediaView.Config;
}

uint64_t sub_1001B78B0()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*v0 + OBJC_IVAR____TtC6Arcade18StoryCardMediaView_videoContainer)
         + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
}

id sub_1001B78D4()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC6Arcade18StoryCardMediaView_videoContainer);
}

uint64_t *sub_1001B78E8(uint64_t *a1, uint64_t *a2)
{
  return a2;
}

void sub_1001B791C(void *a1)
{
  unsigned int v2 = v1;
  unsigned int v4 = (id *)&v1[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_gridView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_gridView], v12, 1LL, 0LL);
  if (*v4)
  {
    id v5 = [*v4 superview];
    if (v5)
    {
      uint64_t v6 = v5;
      sub_100018D98();
      id v7 = v2;
      id v8 = v6;
      LOBYTE(v6) = static NSObject.== infix(_:_:)(v8, v7);

      if ((v6 & 1) != 0)
      {
        if (*v4) {
          [*v4 removeFromSuperview];
        }
      }
    }
  }

  id v9 = *v4;
  *unsigned int v4 = a1;
  id v10 = a1;

  if (*v4)
  {
    id v11 = *v4;
    [v2 addSubview:v11];
    [v2 setNeedsLayout];
  }

void sub_1001B7A38()
{
  uint64_t v1 = v0;
  v0[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_state] = 0;
  uint64_t v2 = OBJC_IVAR____TtC6Arcade18StoryCardMediaView_artworkView;
  uint64_t v3 = type metadata accessor for ArtworkView(0LL);
  *(void *)&v0[v2] = static ArtworkView.plainArtworkView.getter(v3);
  *(void *)&v0[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_gridView] = 0LL;
  uint64_t v4 = OBJC_IVAR____TtC6Arcade18StoryCardMediaView_videoContainer;
  id v5 = (objc_class *)type metadata accessor for VideoViewContainer();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  swift_unknownObjectWeakInit(&v6[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view], 0LL);
  *(void *)&v6[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v7, 0LL);
  v9.id receiver = v6;
  v9.super_class = v5;
  *(void *)&v1[v4] = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v1[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_roundedCorners] = 0LL;
  id v8 = &v1[OBJC_IVAR____TtC6Arcade18StoryCardMediaView_config];
  *(_OWORD *)id v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *((_OWORD *)v8 + 3) = 0u;
  v8[64] = 3;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/StoryCardMediaView.swift",  31LL,  2LL,  59LL,  0);
  __break(1u);
}

char *sub_1001B7B78(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  id v10 = objc_allocWithZone(&OBJC_CLASS___UIActivityIndicatorView);
  id v11 = v4;
  id v12 = [v10 initWithActivityIndicatorStyle:100];
  *(void *)&v11[OBJC_IVAR____TtC6Arcade24InfiniteScrollFooterView_activityIndicator] = v12;

  v22.id receiver = v11;
  v22.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v17 = v13;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  double v18 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  double v19 = (char *)v17;
  id v20 = [v18 clearColor];
  [v19 setBackgroundColor:v20];

  [v19 addSubview:*(void *)&v19[OBJC_IVAR____TtC6Arcade24InfiniteScrollFooterView_activityIndicator]];
  return v19;
}

void sub_1001B8100(void *a1, uint64_t a2, void *a3, const char **a4)
{
  v9.id receiver = a1;
  v9.super_class = (Class)swift_getObjectType(a1);
  uint64_t v6 = *a4;
  uint64_t v7 = (char *)v9.receiver;
  id v8 = a3;
  objc_msgSendSuper2(&v9, v6, v8);
  if (v8) {

  }
  else {
    objc_msgSend( *(id *)&v7[OBJC_IVAR____TtC6Arcade24InfiniteScrollFooterView_activityIndicator],  "stopAnimating",  v9.receiver,  v9.super_class);
  }
}

uint64_t type metadata accessor for InfiniteScrollFooterView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade24InfiniteScrollFooterView);
}

unint64_t sub_1001B81BC()
{
  unint64_t result = qword_1002EB220;
  if (!qword_1002EB220)
  {
    uint64_t v1 = type metadata accessor for EditorialCardCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100240C10, v1);
    atomic_store(result, (unint64_t *)&qword_1002EB220);
  }

  return result;
}

double sub_1001B820C()
{
  uint64_t v0 = type metadata accessor for PageGrid(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = ShelfLayoutContext.contentPageGrid.getter(v4);
  double v6 = PageGrid.componentMeasuringSize(spanning:)(v5, 1.0);
  double v8 = v7;
  objc_super v9 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t v10 = v9(v3, v0);
  uint64_t v11 = ShelfLayoutContext.contentPageGrid.getter(v10);
  double v12 = PageGrid.containerWidth.getter(v11);
  uint64_t v13 = v9(v3, v0);
  uint64_t v14 = ShelfLayoutContext.traitCollection.getter(v13);
  double v15 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  double v16 = (char *)objc_allocWithZone(v15);
  id v17 = (double *)&v16[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_pageContainerSize];
  *id v17 = v12;
  v17[1] = 1.79769313e308;
  *(void *)&v16[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_traitCollection] = v14;
  v24.id receiver = v16;
  v24.super_class = v15;
  id v18 = objc_msgSendSuper2(&v24, "init");
  if (qword_1002DCE58 != -1) {
    swift_once(&qword_1002DCE58, sub_100164740);
  }
  uint64_t v19 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v20 = sub_1000061F4(v19, (uint64_t)qword_1002F0F28);
  sub_100039674(v20, (uint64_t)v18, v6, v8);
  double v22 = v21;

  return v22;
}

double sub_1001B8394(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v2 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v69 = *(void *)(v2 - 8);
  uint64_t v70 = v2;
  __chkstk_darwin(v2);
  uint64_t v64 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for PageGrid(0LL);
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  __chkstk_darwin(v4);
  uint64_t v61 = (uint64_t *)((char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v68 = v6;
  __chkstk_darwin(v6);
  uint64_t v60 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = sub_1000031E8(&qword_1002EB230);
  uint64_t v8 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v63 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  double v12 = (char *)&v58 - v11;
  uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  double v16 = (uint64_t *)((char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = __chkstk_darwin(v17);
  double v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v19);
  ReadOnlyLens.value.getter(v73, v17);
  double v22 = v21;
  uint64_t v23 = v8;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
  uint64_t KeyPath = swift_getKeyPath(&unk_100240C90, v24);
  ItemLayoutContext.subscript.getter(v16);
  swift_release(KeyPath);
  uint64_t v27 = swift_getKeyPath(&unk_100240CC0, v26);
  ReadOnlyLens.subscript.getter(v27, v13);
  uint64_t v28 = v27;
  uint64_t v29 = v59;
  __n128 v30 = swift_release(v28);
  uint64_t v31 = v13;
  objc_super v32 = v60;
  (*(void (**)(void *, uint64_t, __n128))(v14 + 8))(v16, v31, v30);
  __n128 v33 = swift_bridgeObjectRelease(v72[1]);
  ItemLayoutContext.state.getter(v33);
  uint64_t v34 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v35 = swift_dynamicCastClassUnconditional(v62, v34, 0LL, 0LL, 0LL);
  ItemLayoutContext.componentLayoutOptions.getter(v35);
  uint64_t v37 = swift_getKeyPath(&unk_100240CF0, v36);
  uint64_t v38 = v61;
  ItemLayoutContext.subscript.getter(v61);
  uint64_t v39 = v37;
  uint64_t v40 = v64;
  swift_release(v39);
  double v42 = PageGrid.componentMeasuringSize(spanning:)(v41, 1.0);
  double v44 = v43;
  (*(void (**)(void *, uint64_t))(v65 + 8))(v38, v66);
  id v45 = sub_100147A04();
  sub_10001F010((uint64_t)v73, (uint64_t)v71);
  uint64_t v46 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v47 = type metadata accessor for EditorialCard(0LL);
  swift_dynamicCast(v72, v71, v46, v47, 7LL);
  id v48 = v63;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v63, v12, v29);
  uint64_t v49 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v48, v49);
  if (qword_1002DCE58 != -1) {
    swift_once(&qword_1002DCE58, sub_100164740);
  }
  uint64_t v50 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v51 = sub_1000061F4(v50, (uint64_t)qword_1002F0F28);
  swift_getObjectType(v45);
  double v52 = sub_100039674(v51, (uint64_t)v45, v42, v44);
  double v54 = v53;
  (*(void (**)(char *, uint64_t, double))(v69 + 8))(v40, v70, v52);
  uint64_t v55 = v72[0];
  swift_unknownObjectRelease(v45);
  __n128 v56 = swift_release(v55);
  (*(void (**)(char *, uint64_t, __n128))(v67 + 8))(v32, v68, v56);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v29);
  _s6Arcade17PillOverlayLayoutVwxx_0(v73);
  return v54;
}

uint64_t sub_1001B87F0()
{
  return sub_100003B6C( &qword_1002EB238,  type metadata accessor for SmallLockupCollectionViewCell,  (uint64_t)&unk_100240D20);
}

double sub_1001B881C()
{
  uint64_t v0 = type metadata accessor for PageGrid(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = ShelfLayoutContext.contentPageGrid.getter(v4);
  double v6 = PageGrid.componentMeasuringSize(spanning:)(v5, 1.0);
  double v8 = v7;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1002DCA30 != -1) {
    swift_once(&qword_1002DCA30, sub_1000B9E54);
  }
  uint64_t v9 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  uint64_t v10 = sub_1000061F4(v9, (uint64_t)qword_1002EFF78);
  uint64_t v11 = ShelfLayoutContext.traitEnvironment.getter(v10);
  uint64_t v12 = type metadata accessor for SmallLockupLayout(0LL);
  uint64_t v13 = sub_100003B6C( &qword_1002E3228,  (uint64_t (*)(uint64_t))&type metadata accessor for SmallLockupLayout,  (uint64_t)&protocol conformance descriptor for SmallLockupLayout);
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v10, v11, v12, v13, v6, v8);
  double v15 = v14;
  swift_unknownObjectRelease(v11);
  return v15;
}

uint64_t sub_1001B895C()
{
  return sub_100003B6C( &qword_1002EB240,  type metadata accessor for ParagraphCollectionViewCell,  (uint64_t)&unk_100240D70);
}

double sub_1001B898C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PageGrid.Direction(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v57 = type metadata accessor for PageGrid(0LL);
  uint64_t v6 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  double v8 = (uint64_t *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v53 - v10);
  uint64_t v12 = type metadata accessor for Paragraph(0LL);
  uint64_t v13 = sub_100003B6C( (unint64_t *)&qword_1002E97B0,  (uint64_t (*)(uint64_t))&type metadata accessor for Paragraph,  (uint64_t)&protocol conformance descriptor for Paragraph);
  ItemLayoutContext.typedModel<A>(as:)(&v58, v12, v12, v13);
  uint64_t v14 = v58;
  if (!v58) {
    return 0.0;
  }
  id v15 = sub_100147A04();
  sub_100173010(v14, v15);
  double v17 = v16;
  double v19 = v18;
  swift_unknownObjectRelease(v15);
  uint64_t KeyPath = swift_getKeyPath(&unk_100240DC0, v20);
  uint64_t v56 = v1;
  uint64_t v22 = KeyPath;
  ItemLayoutContext.subscript.getter(v11);
  swift_release(v22);
  double v24 = PageGrid.containerWidth.getter(v23);
  objc_super v25 = *(void (**)(void *))(v6 + 8);
  uint64_t v54 = v14;
  uint64_t v26 = v57;
  v25(v11);
  uint64_t v27 = v2;
  uint64_t v28 = (void (*)(void *, uint64_t))v25;
  uint64_t v55 = (void (*)(void *, uint64_t, __n128))v25;
  uint64_t v30 = swift_getKeyPath(&unk_100240DC0, v29);
  ItemLayoutContext.subscript.getter(v11);
  __n128 v31 = swift_release(v30);
  double v32 = PageGrid.containerHeight.getter(v31);
  v28(v11, v26);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for PageGrid.Direction.vertical(_:), v27);
  static PageGrid.designGridD(direction:containerSize:)(v5, v24, v32);
  uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v27);
  double v34 = PageGrid.componentMeasuringSize(spanning:)(v33, 4.0);
  uint64_t v35 = v54;
  uint64_t v37 = (void *)Paragraph.text.getter(v36);
  uint64_t v38 = *(void *)&v34;
  uint64_t v40 = swift_getKeyPath(&unk_100240DC0, v39);
  ItemLayoutContext.subscript.getter(v8);
  swift_release(v40);
  double v42 = PageGrid.componentMeasuringSize(spanning:)(v41, 1.0);
  double v43 = v8;
  uint64_t v44 = v57;
  id v45 = v55;
  ((void (*)(void *, uint64_t))v55)(v43, v57);
  uint64_t v47 = swift_getKeyPath(&unk_100240DF0, v46);
  ItemLayoutContext.subscript.getter(&v58);
  swift_release(v47);
  uint64_t v48 = v58;
  swift_getObjectType(v58);
  sub_1000369A0((uint64_t)v37, v38, 0, v48, v17, 0.0, v19, 0.0, v42);
  double v50 = v49;
  swift_release(v35);

  __n128 v51 = swift_unknownObjectRelease(v48);
  v45(v11, v44, v51);
  return v50;
}

double sub_1001B8CB4()
{
  if (qword_1002DCB50 != -1) {
    swift_once(&qword_1002DCB50, sub_1000EC64C);
  }
  return *(double *)&xmmword_1002F03B0;
}

void sub_1001B8CF8()
{
}

void sub_1001B8D08()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade31ProductRatingsHistogramCardView_titleLabel];
  v3._countAndFlagsBits = 0xD000000000000015LL;
  v3._object = (void *)0x8000000100243900LL;
  v4._countAndFlagsBits = 0LL;
  v4._object = (void *)0xE000000000000000LL;
  object = localizedString(_:comment:)(v3, v4)._object;
  NSString v6 = String._bridgeToObjectiveC()();
  uint64_t v7 = (uint64_t)&selRef_updateSearchResultsForSearchController_;
  objc_msgSend(v2, "setText:", v6, swift_bridgeObjectRelease(object).n128_f64[0]);

  double v8 = *(void **)&v0[OBJC_IVAR____TtC6Arcade31ProductRatingsHistogramCardView_subtitleLabel];
  Swift::Int v9 = Ratings.totalNumberOfRatings.getter();
  v10._object = (void *)0x8000000100243920LL;
  v10._countAndFlagsBits = 0xD000000000000013LL;
  v11._countAndFlagsBits = 0LL;
  v11._object = (void *)0xE000000000000000LL;
  uint64_t v12 = localizedStringWithCount(_:count:comment:)(v10, v9, v11)._object;
  NSString v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setText:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

  uint64_t v14 = (void *)Ratings.totalNumberOfRatings.getter();
  unint64_t v15 = Ratings.ratingCounts.getter();
  if (v15)
  {
    uint64_t v16 = v15;
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFF8LL;
    if (v15 >> 62) {
      goto LABEL_20;
    }
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8LL) + 0x10) == 5LL)
    {
      uint64_t v18 = 5LL;
      goto LABEL_5;
    }

uint64_t type metadata accessor for FocusableCollectionView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade23FocusableCollectionView);
}

unint64_t sub_1001B91B4()
{
  unint64_t result = qword_1002EB2C0;
  if (!qword_1002EB2C0)
  {
    uint64_t v1 = type metadata accessor for TextCardCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100240E78, v1);
    atomic_store(result, (unint64_t *)&qword_1002EB2C0);
  }

  return result;
}

double sub_1001B9200()
{
  uint64_t v0 = type metadata accessor for PageGrid(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC480 != -1) {
    swift_once(&qword_1002DC480, sub_10005D3B4);
  }
  uint64_t v4 = sub_10005E500((uint64_t)&unk_1002EE850, (uint64_t)v35);
  uint64_t v5 = (void *)ShelfLayoutContext.traitCollection.getter(v4);
  double v6 = sub_10005E37C(5LL, (uint64_t)v5);

  uint64_t v33 = &type metadata for CGFloat;
  uint64_t v34 = &protocol witness table for CGFloat;
  *(double *)&__int128 v32 = v6;
  _s6Arcade17PillOverlayLayoutVwxx_0(v37);
  uint64_t v7 = sub_100009D90(&v32, (uint64_t)v37);
  double v8 = (void *)ShelfLayoutContext.traitCollection.getter(v7);
  sub_100028C20();
  if (qword_1002DC7C8 != -1) {
    swift_once(&qword_1002DC7C8, sub_100071AF8);
  }
  uint64_t v10 = type metadata accessor for FontUseCase(0LL, v9);
  uint64_t v11 = sub_1000061F4(v10, (uint64_t)qword_1002EF3A8);
  uint64_t v12 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v11, v8);
  double v13 = UIFont.estimatedFirstBaseline.getter();

  uint64_t v33 = &type metadata for CGFloat;
  uint64_t v34 = &protocol witness table for CGFloat;
  *(double *)&__int128 v32 = v13;
  _s6Arcade17PillOverlayLayoutVwxx_0(v36);
  uint64_t v14 = sub_100009D90(&v32, (uint64_t)v36);
  uint64_t v15 = ShelfLayoutContext.contentPageGrid.getter(v14);
  double v16 = PageGrid.componentMeasuringSize(spanning:)(v15, 1.0);
  unint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t v18 = v17(v3, v0);
  uint64_t v19 = ShelfLayoutContext.contentPageGrid.getter(v18);
  double v20 = PageGrid.containerWidth.getter(v19);
  uint64_t v21 = v17(v3, v0);
  uint64_t v22 = ShelfLayoutContext.traitCollection.getter(v21);
  uint64_t v23 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  id v24 = (char *)objc_allocWithZone(v23);
  float v25 = (double *)&v24[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_pageContainerSize];
  double *v25 = v20;
  v25[1] = 1.79769313e308;
  *(void *)&v24[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_traitCollection] = v22;
  v31.id receiver = v24;
  v31.super_class = v23;
  id v26 = objc_msgSendSuper2(&v31, "init");
  sub_10014F30C(v35, (uint64_t)v26, v16);
  double v28 = v27;

  sub_10005E4CC(v35);
  return v28;
}

uint64_t type metadata accessor for UpsellGridViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade24UpsellGridViewController);
}

void sub_1001B9668(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC6Arcade24UpsellGridViewController_artworkLoader];
  id v6 = [v2 view];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 bounds];
    double v9 = v8;
    double v11 = v10;

    sub_1000FD144(a1, a2, v5, v9, v11);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1001B9710()
{
  return sub_1001B9758(&qword_1002EB310, (uint64_t)&unk_100240EFC);
}

uint64_t sub_1001B9734()
{
  return sub_1001B9758(&qword_1002EB318, (uint64_t)&unk_100240F24);
}

uint64_t sub_1001B9758(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for UpsellGridViewController();
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

char *sub_1001B9794(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002DF650);
  __chkstk_darwin(v6);
  double v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = type metadata accessor for IndexPath(0LL);
  uint64_t v9 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  id v26 = (char *)&v24 - v12;
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v14 = *(void *)(type metadata accessor for DiffablePageContentIdentifier(0LL) - 8);
  uint64_t v15 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v28 = *(void *)(v14 + 72);
  uint64_t v24 = a3;
  swift_bridgeObjectRetain(a3);
  double v16 = (char *)_swiftEmptyArrayStorage;
  float v25 = a1;
  uint64_t v17 = v27;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v24);
      return v16;
    }

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1LL, v17) == 1)
    {
      sub_100006060((uint64_t)v8, (uint64_t *)&unk_1002DF650);
    }

    else
    {
      uint64_t v18 = v9;
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      double v20 = v26;
      v19(v26, v8, v17);
      v19(v29, v20, v17);
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0) {
        double v16 = (char *)sub_10001A360(0LL, *((void *)v16 + 2) + 1LL, 1, v16);
      }
      unint64_t v22 = *((void *)v16 + 2);
      unint64_t v21 = *((void *)v16 + 3);
      if (v22 >= v21 >> 1) {
        double v16 = (char *)sub_10001A360(v21 > 1, v22 + 1, 1, v16);
      }
      *((void *)v16 + 2) = v22 + 1;
      uint64_t v17 = v27;
      v19( &v16[((*(unsigned __int8 *)(v18 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))
           + *(void *)(v18 + 72) * v22],
        v29,
        v27);
      uint64_t v9 = v18;
      a1 = v25;
    }

    v15 += v28;
    --v13;
  }

  while (v13);
  swift_bridgeObjectRelease(v24);
  return v16;
}

char *sub_1001B9A0C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v45 = a1;
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002DDB60);
  __chkstk_darwin(v7);
  unint64_t v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ItemLayoutContext(0LL);
  uint64_t v47 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  double v43 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v34 - v12;
  uint64_t v13 = type metadata accessor for IndexPath(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  double v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002DF650);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = *(void *)(a3 + 16);
  if (v20)
  {
    uint64_t v41 = v16;
    uint64_t v42 = a2;
    uint64_t v46 = v9;
    uint64_t v21 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v39 = *(void *)(v14 + 72);
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v34 = a3;
    swift_bridgeObjectRetain(a3);
    uint64_t v48 = (char *)_swiftEmptyArrayStorage;
    uint64_t v22 = (uint64_t)v36;
    uint64_t v40 = v13;
    do
    {
      v44(v19, v21, v13);
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v38(v19, 0LL, 1LL, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1LL, v13) == 1)
      {
        a3 = v34;
        goto LABEL_17;
      }

      uint64_t v23 = v41;
      uint64_t v24 = v19;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v41, v19, v13);
      v45(v23);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
        swift_bridgeObjectRelease(v48);
        swift_bridgeObjectRelease(v34);
        return v48;
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
      uint64_t v26 = v46;
      uint64_t v25 = v47;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v22, 1LL, v46) == 1)
      {
        sub_100006060(v22, (uint64_t *)&unk_1002DDB60);
        uint64_t v19 = v24;
        uint64_t v13 = v40;
      }

      else
      {
        uint64_t v37 = 0LL;
        uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
        uint64_t v28 = v35;
        v27(v35, v22, v26);
        v27(v43, (uint64_t)v28, v26);
        if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0) {
          uint64_t v48 = (char *)sub_10001A6C0(0LL, *((void *)v48 + 2) + 1LL, 1, v48);
        }
        uint64_t v19 = v24;
        unint64_t v30 = *((void *)v48 + 2);
        unint64_t v29 = *((void *)v48 + 3);
        if (v30 >= v29 >> 1) {
          uint64_t v48 = (char *)sub_10001A6C0(v29 > 1, v30 + 1, 1, v48);
        }
        uint64_t v13 = v40;
        objc_super v31 = v48;
        *((void *)v48 + 2) = v30 + 1;
        v27( &v31[((*(unsigned __int8 *)(v47 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))
             + *(void *)(v47 + 72) * v30],
          (uint64_t)v43,
          v46);
        uint64_t v22 = (uint64_t)v36;
        uint64_t v4 = v37;
      }

      v21 += v39;
      --v20;
    }

    while (v20);
    a3 = v34;
    v38(v19, 1LL, 1LL, v13);
  }

  else
  {
    __int128 v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    swift_bridgeObjectRetain(a3);
    uint64_t v48 = (char *)_swiftEmptyArrayStorage;
    v32(v19, 1LL, 1LL, v13);
  }

void sub_1001B9DE4(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v20 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a3);
  while (v6)
  {
    uint64_t v7 = 4LL;
    while (1)
    {
      uint64_t v9 = v7 - 4;
      if ((a3 & 0xC000000000000001LL) == 0) {
        break;
      }
      uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a3);
      uint64_t v11 = v7 - 3;
      if (__OFADD__(v9, 1LL)) {
        goto LABEL_17;
      }
LABEL_11:
      uint64_t v19 = v10;
      a1(&v18, &v19);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);
        swift_release(v10);
        swift_bridgeObjectRelease(v20);
        return;
      }

      uint64_t v12 = swift_release(v10);
      uint64_t v13 = v18;
      if (v18)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        unint64_t v15 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v14 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v15 >= v14 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1LL);
        }
        uint64_t v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v8);
      }

      ++v7;
      if (v11 == v6) {
        goto LABEL_22;
      }
    }

    uint64_t v10 = *(void *)(a3 + 8 * v7);
    swift_retain(v10);
    uint64_t v11 = v7 - 3;
    if (!__OFADD__(v9, 1LL)) {
      goto LABEL_11;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v16);
  }

id sub_1001B9F90(uint64_t a1)
{
  id v3 = [v1 string];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  unint64_t v6 = v5;

  *(void *)&double v7 = swift_bridgeObjectRelease(v6).n128_u64[0];
  uint64_t v8 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000LL) == 0) {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8) {
    return v18;
  }
  uint64_t v20 = 0LL;
  id v21 = objc_msgSend(v18, "length", v7);
  id v9 = [objc_allocWithZone(NSMutableParagraphStyle) init];
  id v10 = [v18 attribute:NSParagraphStyleAttributeName atIndex:0 effectiveRange:&v20];
  if (v10)
  {
    id v11 = v10;
    _bridgeAnyObjectToAny(_:)(v22, v10);
    swift_unknownObjectRelease(v11);
  }

  else
  {
    memset(v22, 0, sizeof(v22));
  }

  sub_100078E64((uint64_t)v22, (uint64_t)v23);
  if (v23[3])
  {
    uint64_t v13 = sub_100006028(0LL, &qword_1002EB340, &OBJC_CLASS___NSMutableParagraphStyle_ptr);
    if ((swift_dynamicCast(&v19, v23, (char *)&type metadata for Any + 8, v13, 6LL) & 1) != 0)
    {
      id v14 = v19;
      id v15 = [v19 mutableCopy];
      _bridgeAnyObjectToAny(_:)(v23, v15);

      swift_unknownObjectRelease(v15);
      if ((swift_dynamicCast(v22, v23, (char *)&type metadata for Any + 8, v13, 6LL) & 1) != 0)
      {

        id v9 = *(id *)&v22[0];
      }
    }
  }

  else
  {
    sub_100006060((uint64_t)v23, (uint64_t *)&unk_1002DF680);
  }

  id v16 = [objc_allocWithZone(NSMutableAttributedString) initWithAttributedString:v18];
  [v9 setLineBreakMode:a1];
  objc_msgSend(v16, "addAttribute:value:range:", NSParagraphStyleAttributeName, v9, v20, v21);
  id v17 = [objc_allocWithZone(NSAttributedString) initWithAttributedString:v16];

  return v17;
}

void sub_1001BA234(id a1@<X1>, uint64_t *a2@<X0>, char **a3@<X8>)
{
  uint64_t v4 = *a2;
  id v5 = [a1 traitCollection];
  unint64_t v6 = sub_1000FFAF4(v4, v5);

  *a3 = v6;
}

void sub_1001BA29C(uint64_t a1)
{
  if (a1)
  {
    if (a1 < 0)
    {
      __break(1u);
    }

    else
    {
      uint64_t v2 = *v1;
      if (!((unint64_t)*v1 >> 62))
      {
        uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
        uint64_t v5 = -v4;
        if (!__OFSUB__(0LL, v4)) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }

    if (v2 < 0) {
      uint64_t v9 = v2;
    }
    else {
      uint64_t v9 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v2);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v2);
    uint64_t v5 = -v4;
    if (!__OFSUB__(0LL, v4))
    {
LABEL_5:
      uint64_t v6 = -a1;
      if (v5 <= 0 && v5 > v6) {
        goto LABEL_23;
      }
      uint64_t v8 = v4 - a1;
      if (!__OFADD__(v4, v6))
      {
        if (v4 >= v8)
        {
          sub_1001BAA28(v8, v4);
          return;
        }

        goto LABEL_22;
      }

void sub_1001BA35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    uint64_t v7 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (v9 >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }

  if (v7 < 0) {
    uint64_t v23 = v7;
  }
  else {
    uint64_t v23 = v7 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v7);
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v7);
  if (v9 < v5) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }

  uint64_t v8 = 1 - v9;
  if (__OFSUB__(1LL, v9))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }

  uint64_t v7 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    if (v7 < 0) {
      uint64_t v25 = v7;
    }
    else {
      uint64_t v25 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v7);
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v7);
    goto LABEL_15;
  }

void sub_1001BA5E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a4;
  v46[1] = a3;
  uint64_t v54 = a2;
  uint64_t v5 = type metadata accessor for Artwork.Format(0LL);
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  __chkstk_darwin(v5);
  double v50 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v8 = __chkstk_darwin(v7);
  __n128 v51 = (char *)v46 - v9;
  uint64_t v10 = type metadata accessor for ProductPageIconDimension(0LL, v8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Artwork.Style(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002DE5F0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Artwork.style.getter(v21);
  uint64_t v47 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  v47(v20, 0LL, 1LL, v14);
  ArtworkView.style.setter(v20);
  id v22 = [v49 traitCollection];
  id v49 = a1;
  uint64_t v23 = Artwork.style.getter(v22);
  uint64_t v24 = ProductTopLockup.wantsInlineUberPresentationStyle.getter(v23);
  if ((v24 & 1) != 0)
  {
    (*(void (**)(char *, void, uint64_t))(v11 + 104))( v13,  enum case for ProductPageIconDimension.large(_:),  v10);
  }

  else
  {
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v24) & 1) != 0) {
      uint64_t v25 = (unsigned int *)&enum case for ProductPageIconDimension.extraLargeAccessibility(_:);
    }
    else {
      uint64_t v25 = (unsigned int *)&enum case for ProductPageIconDimension.extraExtraLarge(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *v25, v10);
  }

  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v17, v14);
  v47(v20, 0LL, 1LL, v14);
  double v26 = ProductPageIconDimension.iconSize(for:)(v20);
  double v28 = v27;
  sub_100006060((uint64_t)v20, (uint64_t *)&unk_1002DE5F0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v29 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v26, v28);
  unint64_t v30 = v51;
  ArtworkLoaderConfig.format.getter();
  uint64_t v32 = v52;
  uint64_t v31 = v53;
  uint64_t v33 = v50;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v50, enum case for Artwork.Format.png(_:), v53);
  uint64_t v34 = sub_100003B6C( (unint64_t *)&unk_1002EA0B0,  (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.Format,  (uint64_t)&protocol conformance descriptor for Artwork.Format);
  dispatch thunk of RawRepresentable.rawValue.getter(&v57, v31, v34);
  dispatch thunk of RawRepresentable.rawValue.getter(&v55, v31, v34);
  uint64_t v35 = v58;
  uint64_t v36 = v56;
  if (v57 == v55 && v58 == v56)
  {
    swift_bridgeObjectRelease_n(v58, 2LL);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v32 + 8);
    v37(v33, v31);
    v37(v30, v31);
  }

  else
  {
    char v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v58, v55, v56, 0LL);
    swift_bridgeObjectRelease(v35);
    __n128 v39 = swift_bridgeObjectRelease(v36);
    uint64_t v40 = *(void (**)(char *, uint64_t, __n128))(v32 + 8);
    v40(v33, v31, v39);
    ((void (*)(char *, uint64_t))v40)(v30, v31);
    if ((v38 & 1) == 0)
    {
      uint64_t v42 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
      id v41 = (id)static UIColor.placeholderBackground.getter(v42);
      goto LABEL_13;
    }
  }

  id v41 = [(id)objc_opt_self(UIColor) clearColor];
LABEL_13:
  uint64_t v43 = v54;
  ArtworkView.backgroundColor.setter(v41);
  uint64_t v44 = type metadata accessor for ArtworkView(0LL);
  uint64_t v45 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v29, 2LL, 1LL, v43, v44, v45);
  swift_release(v29);
}

void sub_1001BAA28(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    uint64_t v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (v7 >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }

  if (v5 < 0) {
    uint64_t v20 = v5;
  }
  else {
    uint64_t v20 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v5);
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }

  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0LL, v7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }

  uint64_t v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v9 = v8 - v7;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    if (v5 < 0) {
      uint64_t v22 = v5;
    }
    else {
      uint64_t v22 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v5);
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }

void sub_1001BACA0(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v378 = a6;
  unint64_t v403 = a4;
  v379 = a3;
  LODWORD(v400) = a2;
  uint64_t v377 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v376 = *(void *)(v377 - 8);
  __chkstk_darwin(v377);
  uint64_t v9 = (char *)&v358 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v369 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v368 = *(void *)(v369 - 8);
  __chkstk_darwin(v369);
  v366 = (char *)&v358 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v11);
  uint64_t v364 = (uint64_t)&v358 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v358 - v15;
  uint64_t v408 = type metadata accessor for BadgeStyle(0LL, v14);
  uint64_t v409 = *(void *)(v408 - 8);
  __chkstk_darwin(v408);
  v407 = (char *)&v358 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  v406 = (char *)&v358 - v19;
  __chkstk_darwin(v20);
  v405 = (char *)&v358 - v21;
  __chkstk_darwin(v22);
  v404 = (char *)&v358 - v23;
  uint64_t v24 = sub_1000031E8(&qword_1002E5E68);
  __n128 v25 = __chkstk_darwin(v24);
  v381 = (char *)&v358 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v395 = type metadata accessor for OfferButtonSubtitlePosition(0LL, v25);
  uint64_t v392 = *(void *)(v395 - 8);
  __chkstk_darwin(v395);
  v393 = (char *)&v358 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_1000031E8((uint64_t *)&unk_1002EA100);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  v394 = (char *)&v358 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_1000031E8(&qword_1002E5E70);
  __n128 v32 = __chkstk_darwin(v31);
  v390 = (char *)&v358 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v389 = type metadata accessor for OfferButtonPresenterViewAlignment(0LL, v32);
  uint64_t v380 = *(void *)(v389 - 8);
  __chkstk_darwin(v389);
  v388 = (char *)&v358 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = sub_1000031E8(&qword_1002EA110);
  __chkstk_darwin(v35);
  v391 = (char *)&v358 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_1000031E8(&qword_1002EA118);
  __chkstk_darwin(v37);
  v375 = (char *)&v358 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_1000031E8(&qword_1002EA120);
  __chkstk_darwin(v39);
  v374 = (char *)&v358 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = sub_1000031E8(&qword_1002EA128);
  __chkstk_darwin(v41);
  v373 = (char *)&v358 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = sub_1000031E8((uint64_t *)&unk_1002EA130);
  __n128 v44 = __chkstk_darwin(v43);
  v372 = (char *)&v358 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v387 = type metadata accessor for LegacyAppState(0LL, v44);
  uint64_t v386 = *(void *)(v387 - 8);
  __chkstk_darwin(v387);
  v385 = (char *)&v358 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v47 = type metadata accessor for OfferTitleType(0LL);
  uint64_t v398 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  v399 = (char *)&v358 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v384 = type metadata accessor for AdamId(0LL);
  uint64_t v383 = *(void *)(v384 - 8);
  __n128 v49 = __chkstk_darwin(v384);
  v382 = (char *)&v358 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v370 = type metadata accessor for Artwork.URLTemplate(0LL, v49);
  uint64_t v51 = *(void *)(v370 - 8);
  __chkstk_darwin(v370);
  v367 = (char *)&v358 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v54 = __chkstk_darwin(v53);
  uint64_t v56 = (char *)&v358 - v55;
  uint64_t v57 = *(void **)&a5[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_titleLabel];
  uint64_t v401 = a1;
  ProductTopLockup.title.getter(v54);
  uint64_t v397 = v28;
  uint64_t v396 = v29;
  uint64_t v371 = v47;
  if (v58)
  {
    uint64_t v60 = v58;
    NSString v61 = String._bridgeToObjectiveC()();
    *(void *)&double v59 = swift_bridgeObjectRelease(v60).n128_u64[0];
  }

  else
  {
    NSString v61 = 0LL;
  }

  objc_msgSend(v57, "setText:", v61, v59);

  uint64_t v62 = OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_iconView;
  uint64_t v63 = *(void **)&a5[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_iconView];
  v365 = v16;
  if ((v400 & 1) != 0)
  {
    if (v63)
    {
      [v63 removeFromSuperview];
      uint64_t v64 = *(void **)&a5[v62];
    }

    else
    {
      uint64_t v64 = 0LL;
    }

    *(void *)&a5[v62] = 0LL;

    if (*(void *)&a5[v62]) {
      objc_msgSend( *(id *)&a5[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_contentContainerView],  "addSubview:");
    }
  }

  else if (!v63)
  {
    uint64_t v65 = type metadata accessor for ArtworkView(0LL);
    uint64_t v66 = (void *)static ArtworkView.staticIconArtworkView.getter(v65);
    memset(v417, 0, sizeof(v417));
    char v418 = 4;
    id v67 = v66;
    sub_1000661C8((uint64_t)v417);

    uint64_t v68 = *(void **)&a5[v62];
    id v69 = v67;
    if (v68)
    {
      [v68 removeFromSuperview];
      uint64_t v70 = *(void **)&a5[v62];
    }

    else
    {
      uint64_t v70 = 0LL;
    }

    *(void *)&a5[v62] = v67;
    id v71 = v67;

    if (*(void *)&a5[v62]) {
      objc_msgSend( *(id *)&a5[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_contentContainerView],  "addSubview:");
    }
  }

  uint64_t v72 = ProductTopLockup.icon.getter();
  if (v72)
  {
    NSString v73 = (void *)v72;
    uint64_t v74 = *(void **)&a5[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_iconView];
    if (v74)
    {
      uint64_t v75 = type metadata accessor for ArtworkLoader(0LL);
      id v76 = v74;
      uint64_t v77 = inject(_:from:)(v75, v403);
      sub_1001BA5E4(v73, (uint64_t)v76, v77, v401);
      swift_release(v73);

      swift_release(v77);
    }

    else
    {
      swift_release(v72);
    }
  }

  v402 = a5;
  uint64_t v78 = ProductTopLockup.logoArtwork.getter();
  uint64_t v80 = &selRef_updateSearchResultsForSearchController_;
  if (v78)
  {
    unint64_t v81 = v78;
    if ((v400 & 1) != 0)
    {
      uint64_t v82 = ((uint64_t (*)(void))Artwork.template.getter)();
      uint64_t v83 = Artwork.URLTemplate.rawValue.getter(v82);
      uint64_t v85 = v84;
      id v86 = *(void (**)(char *, uint64_t))(v51 + 8);
      v86(v56, v370);
      uint64_t v87 = (uint64_t *)&v402[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_logoViewTemplateURLString];
      uint64_t v88 = *(void *)&v402[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_logoViewTemplateURLString + 8];
      if (v88)
      {
        uint64_t v89 = (uint64_t)v399;
        if (v83 == *v87 && v88 == v85)
        {
          swift_release(v81);
          __n128 v90 = swift_bridgeObjectRelease(v85);
LABEL_103:
          uint64_t v96 = v402;
          goto LABEL_46;
        }

        char v262 = _stringCompareWithSmolCheck(_:_:expecting:)(v83, v85, *v87, v88, 0LL);
        swift_bridgeObjectRelease(v85);
        if ((v262 & 1) != 0)
        {
          __n128 v90 = swift_release(v81);
          goto LABEL_103;
        }
      }

      else
      {
        swift_bridgeObjectRelease(v85);
      }

      uint64_t v263 = type metadata accessor for ArtworkLoader(0LL);
      uint64_t v400 = inject(_:from:)(v263, v403);
      [v57 setHidden:1];
      uint64_t v264 = OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_headerTitleLabel;
      uint64_t v178 = (uint64_t)v402;
      v265 = *(void **)&v402[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_headerTitleLabel];
      if (v265)
      {
        [v265 removeFromSuperview];
        v266 = *(void **)(v178 + v264);
      }

      else
      {
        v266 = 0LL;
      }

      v362 = v87;
      v363 = v86;
      *(void *)(v178 + v26swift_weakDestroy(v0 + 4) = 0LL;

      sub_10009C1C0();
      uint64_t v196 = type metadata accessor for ArtworkView(0LL);
      uint64_t v267 = ((uint64_t (*)(void))static ArtworkView.plainArtworkView.getter)();
      v268 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
      id v269 = [v268 clearColor];
      v360 = (void *)v267;
      uint64_t v270 = ArtworkView.backgroundColor.setter(v269);
      uint64_t v271 = static ArtworkView.plainArtworkView.getter(v270);
      id v272 = [v268 clearColor];
      v359 = (void *)v271;
      uint64_t v273 = ArtworkView.backgroundColor.setter(v272);
      if (qword_1002DC960 == -1) {
        goto LABEL_108;
      }
      goto LABEL_170;
    }

    *(void *)&double v79 = swift_release(v78).n128_u64[0];
  }

  objc_msgSend(v57, "setHidden:", 0, v79);
  uint64_t v91 = type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002DC5E8 != -1) {
    swift_once(&qword_1002DC5E8, sub_100071490);
  }
  uint64_t v92 = v377;
  uint64_t v93 = sub_1000061F4(v377, (uint64_t)qword_1002EEE08);
  (*(void (**)(char *, uint64_t, uint64_t))(v376 + 16))(v9, v93, v92);
  id v94 = sub_1000137B8((uint64_t)v9, 1LL, 0LL, 1, 0);
  uint64_t v95 = OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_headerTitleLabel;
  uint64_t v96 = v402;
  double v97 = *(void **)&v402[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_headerTitleLabel];
  uint64_t v89 = (uint64_t)v399;
  if (v97)
  {
    [v97 removeFromSuperview];
    double v98 = *(void **)&v96[v95];
  }

  else
  {
    double v98 = 0LL;
  }

  *(void *)&v96[v95] = v94;
  uint64_t v99 = v94;

  sub_10009C1C0();
  uint64_t v100 = *(void **)&v96[v95];
  if (v100)
  {
    [v100 setHidden:0];
    __n128 v101 = *(void **)&v96[v95];
    if (v101)
    {
      id v102 = v101;
      ProductTopLockup.title.getter(v103);
      if (v104)
      {
        uint64_t v106 = v104;
        NSString v107 = String._bridgeToObjectiveC()();
        *(void *)&double v105 = swift_bridgeObjectRelease(v106).n128_u64[0];
      }

      else
      {
        NSString v107 = 0LL;
      }

      objc_msgSend(v102, "setText:", v107, v105);
    }
  }

  uint64_t v108 = OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_logoView;
  uint64_t v109 = *(void **)&v96[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_logoView];
  if (v109)
  {
    [v109 removeFromSuperview];
    uint64_t v110 = *(void **)&v96[v108];
  }

  else
  {
    uint64_t v110 = 0LL;
  }

  *(void *)&v96[v108] = 0LL;

  if (*(void *)&v96[v108]) {
    objc_msgSend( *(id *)&v96[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_contentContainerView],  "addSubview:");
  }
  unint64_t v111 = &v96[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_logoViewTemplateURLString];
  uint64_t v112 = *(void *)&v96[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_logoViewTemplateURLString + 8];
  *(void *)unint64_t v111 = 0LL;
  *((void *)v111 + 1) = 0LL;
  swift_bridgeObjectRelease(v112);
  *((void *)&v414 + 1) = v91;
  v415 = &protocol witness table for UILabel;
  *(void *)&__int128 v413 = v57;
  char v416 = 1;
  uint64_t v113 = (uint64_t)&v96[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_titleStyle];
  swift_beginAccess(&v96[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_titleStyle], &v412, 33LL, 0LL);
  id v114 = v57;
  sub_10019B474((uint64_t)&v413, v113);
  __n128 v90 = swift_endAccess(&v412);
  while (1)
  {
LABEL_46:
    uint64_t v115 = *(void **)&v96[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_descriptionHeaderLabel];
    ProductTopLockup.descriptionHeader.getter(v90);
    if (v116)
    {
      uint64_t v118 = v116;
      NSString v119 = String._bridgeToObjectiveC()();
      *(void *)&double v117 = swift_bridgeObjectRelease(v118).n128_u64[0];
    }

    else
    {
      NSString v119 = 0LL;
    }

    objc_msgSend(v115, "setText:", v119, v117);

    uint64_t v120 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
    uint64_t v121 = (void *)static UIColor.primaryText.getter(v120);
    [v115 setTextColor:v121];

    uint64_t v122 = *(void **)&v96[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_descriptionTextLabel];
    id v123 = (id)ProductTopLockup.description.getter();
    if (v123)
    {
      uint64_t v124 = (void *)Paragraph.languageAwareCollapsedText.getter();
      __n128 v125 = swift_release(v123);
      uint64_t v126 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter(v125);

      id v123 = sub_1001B9F90((uint64_t)[v122 lineBreakMode]);
    }

    [v122 setAttributedText:v123];

    v128 = (void *)static UIColor.primaryText.getter(v127);
    [v122 setTextColor:v128];

    uint64_t v129 = ProductTopLockup.offerDisplayProperties.getter();
    uint64_t v130 = inject(_:from:)(v403);
    uint64_t v132 = v131;
    uint64_t ObjectType = swift_getObjectType(v130);
    v134 = v382;
    ProductTopLockup.adamId.getter();
    v399 = (char *)dispatch thunk of AppStateController.stateMachine(forApp:)(v134, ObjectType, v132);
    uint64_t v136 = v135;
    swift_unknownObjectRelease(v130);
    (*(void (**)(char *, uint64_t))(v383 + 8))(v134, v384);
    uint64_t v400 = v129;
    if (v129)
    {
      __n128 v137 = swift_retain(v129);
      uint64_t v138 = OfferDisplayProperties.subtitles.getter(v137);
      __n128 v139 = swift_release(v129);
      uint64_t v140 = v371;
      (*(void (**)(uint64_t, void, uint64_t, __n128))(v398 + 104))( v89,  enum case for OfferTitleType.standard(_:),  v371,  v139);
      if (*(void *)(v138 + 16) && (unint64_t v141 = sub_1000E86F4(v89), (v142 & 1) != 0))
      {
        uint64_t v143 = *(void *)(*(void *)(v138 + 56) + 16 * v141 + 8);
        swift_bridgeObjectRetain(v143);
      }

      else
      {
        uint64_t v143 = 0LL;
      }

      __n128 v144 = swift_bridgeObjectRelease(v138);
      (*(void (**)(uint64_t, uint64_t, __n128))(v398 + 8))(v89, v140, v144);
      uint64_t v145 = v400;
      swift_retain(v400);
      char v147 = OfferDisplayProperties.isArcadeOffer.getter(v146);
      swift_release(v145);
    }

    else
    {
      char v147 = 0;
      uint64_t v143 = 0LL;
    }

    uint64_t v148 = OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_offersArcade;
    v96[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_offersArcade] = v147 & 1;
    uint64_t v149 = swift_getObjectType(v399);
    v150 = v385;
    uint64_t v151 = dispatch thunk of AppStateMachine.currentState.getter(v149, v136);
    int v152 = v96[v148];
    char v153 = LegacyAppState.isBuyable.getter(v151);
    (*(void (**)(char *, uint64_t))(v386 + 8))(v150, v387);
    if ((v153 & 1) == 0) {
      goto LABEL_61;
    }
    if (v143 && !v152)
    {
      v155 = v402;
      v165 = *(void **)&v402[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_offerButtonSubtitleLabel];
      objc_msgSend(v165, v80[83], 0);
      NSString v166 = String._bridgeToObjectiveC()();
      objc_msgSend(v165, "setText:", v166, swift_bridgeObjectRelease(v143).n128_f64[0]);

      id v159 = *(id *)&v155[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_wordmarkView];
      v157 = v381;
      uint64_t v158 = v380;
      if (!v159) {
        goto LABEL_70;
      }
    }

    else
    {
LABEL_61:
      *(void *)&double v154 = swift_bridgeObjectRelease(v143).n128_u64[0];
      v155 = v402;
      int v156 = v402[v148];
      objc_msgSend( *(id *)&v402[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_offerButtonSubtitleLabel],  v80[83],  1,  v154);
      v157 = v381;
      uint64_t v158 = v380;
      if (v156 != 1)
      {
        id v159 = *(id *)&v155[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_wordmarkView];
        if (!v159) {
          goto LABEL_70;
        }
        uint64_t v164 = 1LL;
        goto LABEL_69;
      }

      sub_10009D044();
      uint64_t v160 = OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_wordmarkView;
      v161 = *(void **)&v155[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_wordmarkView];
      if (!v161) {
        goto LABEL_70;
      }
      id v162 = v161;
      v163 = (void *)static UIColor.primaryText.getter(v162);
      [v162 setTintColor:v163];

      id v159 = *(id *)&v155[v160];
      if (!v159) {
        goto LABEL_70;
      }
    }

    uint64_t v164 = 0LL;
LABEL_69:
    id v159 = objc_msgSend(v159, v80[83], v164);
LABEL_70:
    uint64_t v167 = v400;
    if (v400)
    {
      swift_retain(v400);
      unint64_t v168 = sub_1000E6E74((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v169 = type metadata accessor for OfferStyle(0LL);
      uint64_t v170 = (uint64_t)v372;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v169 - 8) + 56LL))(v372, 1LL, 1LL, v169);
      uint64_t v171 = type metadata accessor for OfferEnvironment(0LL);
      uint64_t v172 = (uint64_t)v373;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 56LL))(v373, 1LL, 1LL, v171);
      uint64_t v173 = type metadata accessor for OfferTint(0LL);
      uint64_t v174 = (uint64_t)v374;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v173 - 8) + 56LL))(v374, 1LL, 1LL, v173);
      uint64_t v175 = type metadata accessor for OfferLabelStyle(0LL);
      uint64_t v176 = (uint64_t)v375;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56LL))(v375, 1LL, 1LL, v175);
      __int128 v413 = 0u;
      __int128 v414 = 0u;
      LOBYTE(v356) = 2;
      LOBYTE(v35swift_weakDestroy(v0 + 4) = 0;
      LOBYTE(v353) = 1;
      LOBYTE(v352) = 0;
      LOBYTE(v351) = 2;
      uint64_t v177 = dispatch thunk of OfferDisplayProperties.newOfferDisplayPropertiesChanging(titles:titleSymbolNames:subtitles:style:environment:tint:isDeletableSystemApp:isFree:isPreorder:offerLabelStyle:hasDiscount:contentRating:offerToken:subscriptionFamilyId:overrideLocale:useAdsLocale:priceFormatted:isStreamlinedBuy:appCapabilities:)( 0LL,  0LL,  v168,  v170,  v172,  v174,  2LL,  2LL,  v351,  v176,  v352,  0LL,  v353,  &v413,  0LL,  0LL,  0LL,  0LL,  v354,  0LL,  0LL,  v356,  0LL);
      swift_release(v167);
      swift_bridgeObjectRelease(v168);
      sub_100006060((uint64_t)&v413, (uint64_t *)&unk_1002DF680);
      sub_100006060(v176, &qword_1002EA118);
      sub_100006060(v174, &qword_1002EA120);
      sub_100006060(v172, &qword_1002EA128);
      uint64_t v178 = v177;
      id v159 = (id)sub_100006060(v170, (uint64_t *)&unk_1002EA130);
    }

    else
    {
      uint64_t v178 = 0LL;
    }

    uint64_t v179 = ProductTopLockup.offerAction.getter(v159);
    v180 = v388;
    uint64_t v181 = v389;
    (*(void (**)(char *, void, uint64_t))(v158 + 104))( v388,  enum case for OfferButtonPresenterViewAlignment.center(_:),  v389);
    v182 = v390;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56))(v390, 1LL, 1LL, v181);
    uint64_t v183 = sub_100003B6C( (unint64_t *)&unk_1002EB320,  (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment,  (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
    uint64_t v184 = (uint64_t)v391;
    AccessibilityConditional.init(value:axValue:)(v180, v182, v181, v183);
    uint64_t v185 = sub_1000031E8((uint64_t *)&unk_1002EA140);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v185 - 8) + 56LL))(v184, 0LL, 1LL, v185);
    uint64_t v186 = v392;
    v187 = v393;
    uint64_t v188 = v395;
    (*(void (**)(char *, void, uint64_t))(v392 + 104))( v393,  enum case for OfferButtonSubtitlePosition.below(_:),  v395);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v186 + 56))(v157, 1LL, 1LL, v188);
    uint64_t v189 = sub_100003B6C( (unint64_t *)&unk_1002EB330,  (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition,  (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
    uint64_t v190 = (uint64_t)v394;
    AccessibilityConditional.init(value:axValue:)(v187, v157, v188, v189);
    uint64_t v398 = v178;
    unint64_t v191 = v403;
    sub_1001E78AC(v178, v179, 0LL, v184, v190, v403, 0);
    __n128 v192 = swift_release(v179);
    (*(void (**)(uint64_t, uint64_t, __n128))(v396 + 8))(v190, v397, v192);
    sub_100006060(v184, &qword_1002EA110);
    uint64_t v193 = *(void *)&v155[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_objectGraph];
    *(void *)&v155[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_objectGraph] = v191;
    swift_retain(v191);
    *(void *)&double v194 = swift_release(v193).n128_u64[0];
    v195 = *(char **)&v155[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_bannerView];
    uint64_t v196 = (uint64_t)&selRef_updateSearchResultsForSearchController_;
    objc_msgSend(v195, "setUserInteractionEnabled:", 0, v194);
    [v195 setHidden:1];
    v197 = v155;
    v198 = *(char **)&v155[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_offerButtonTopLabel];
    uint64_t v199 = ProductTopLockup.banner.getter([v198 setHidden:1]);
    if (v199)
    {
      uint64_t v200 = v199;
      uint64_t v201 = Banner.message.getter();
      uint64_t v203 = v202;
      uint64_t v178 = Banner.focusedMessage.getter();
      uint64_t v205 = v204;
      uint64_t v206 = Banner.focusedMessage.getter();
      v207 = (uint64_t *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText];
      uint64_t v208 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText];
      uint64_t v209 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText + 8];
      uint64_t v210 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText + 16];
      uint64_t v211 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText + 24];
      uint64_t v212 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText + 32];
      uint64_t v213 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText + 40];
      uint64_t *v207 = v201;
      v207[1] = v203;
      v207[2] = v178;
      v207[3] = v205;
      v207[4] = v206;
      v207[5] = v214;
      sub_1001545B0(v208, v209, v210, v211, v212, v213);
      id v215 = sub_10015368C();
      uint64_t v216 = Banner.leadingArtwork.getter(v215);
      uint64_t v217 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_artwork];
      *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_artwork] = v216;
      swift_retain(v216);
      swift_release(v217);
      sub_100153544();
      __n128 v218 = swift_release(v216);
      uint64_t v196 = Banner.action.getter(v218);
      sub_10009DA68(v196);
      objc_msgSend( v195,  "setUserInteractionEnabled:",  *(void *)&v197[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_bannerAction] != 0,  swift_release(v196).n128_f64[0]);
      [v195 setHidden:0];
LABEL_77:
      __n128 v229 = swift_release(v200);
      goto LABEL_78;
    }

    uint64_t v219 = ProductTopLockup.askToBuyLinkableText.getter();
    if (v219)
    {
      uint64_t v200 = v219;
      uint64_t v220 = LinkableText.plainText.getter();
      v221 = &v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText];
      uint64_t v222 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText];
      uint64_t v223 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText + 8];
      uint64_t v224 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText + 16];
      uint64_t v225 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText + 24];
      uint64_t v226 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText + 32];
      uint64_t v227 = *(void *)&v195[OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabelText + 40];
      *(void *)v221 = v220;
      *((void *)v221 + 1) = v228;
      *((_OWORD *)v221 + 1) = 0u;
      *((_OWORD *)v221 + 2) = 0u;
      sub_1001545B0(v222, v223, v224, v225, v226, v227);
      sub_10015368C();
      [v195 setUserInteractionEnabled:0];
      [v195 setHidden:0];
      goto LABEL_77;
    }

    ProductTopLockup.expandedOfferTitles.getter();
    if (v249 != 1)
    {
      uint64_t v196 = v250;
      unint64_t v252 = v251;
      __n128 v229 = swift_bridgeObjectRelease(v249);
      if (v252)
      {
        uint64_t v253 = HIBYTE(v252) & 0xF;
        if ((v252 & 0x2000000000000000LL) == 0) {
          uint64_t v253 = v196 & 0xFFFFFFFFFFFFLL;
        }
        if (v253 && (ProductTopLockup.hasExpandedOfferDetails.getter(v229) & 1) != 0)
        {
          [v198 setHidden:0];
          if (qword_1002DC610 != -1) {
            swift_once(&qword_1002DC610, sub_100071508);
          }
          uint64_t v254 = v377;
          uint64_t v255 = sub_1000061F4(v377, (uint64_t)qword_1002EEE80);
          uint64_t v256 = v376;
          uint64_t v257 = (uint64_t)v365;
          (*(void (**)(char *, uint64_t, uint64_t))(v376 + 16))(v365, v255, v254);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v256 + 56))(v257, 0LL, 1LL, v254);
          uint64_t v258 = (uint64_t)&v198[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase];
          swift_beginAccess(&v198[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase], v410, 0LL, 0LL);
          uint64_t v259 = v364;
          sub_100014CFC(v258, v364);
          swift_beginAccess(v258, &v413, 33LL, 0LL);
          sub_10000FF48(v257, v258);
          swift_endAccess(&v413);
          sub_100013DC8(v259);
          sub_100006060(v257, &qword_1002DE930);
          sub_100006060(v259, &qword_1002DE930);
          [v198 setNumberOfLines:2];
          *((void *)&v414 + 1) = &type metadata for Double;
          v415 = &protocol witness table for Double;
          *(void *)&__int128 v413 = 0x4036000000000000LL;
          v260 = &v402[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_layoutMetrics];
          swift_beginAccess( &v402[OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_layoutMetrics],  &v412,  33LL,  0LL);
          v260 += 624;
          _s6Arcade17PillOverlayLayoutVwxx_0(v260);
          sub_100009D90(&v413, (uint64_t)v260);
          swift_endAccess(&v412);
          NSString v261 = String._bridgeToObjectiveC()();
          objc_msgSend(v198, "setText:", v261, swift_bridgeObjectRelease(v252).n128_f64[0]);
        }

        else
        {
          __n128 v229 = swift_bridgeObjectRelease(v252);
        }
      }
    }

unint64_t sub_1001BCF38()
{
  unint64_t result = qword_1002EB348;
  if (!qword_1002EB348)
  {
    uint64_t v1 = type metadata accessor for ProductRatingsAndReviewsComponentCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100240F94, v1);
    atomic_store(result, (unint64_t *)&qword_1002EB348);
  }

  return result;
}

double sub_1001BCF80()
{
  return 300.0;
}

uint64_t sub_1001BCF90()
{
  uint64_t v0 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v0);
  uint64_t v2 = &v15[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, v3);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_1002DC6D0 != -1) {
    swift_once(&qword_1002DC6D0, sub_100071758);
  }
  uint64_t v8 = sub_1000061F4(v4, (uint64_t)qword_1002EF0C0);
  uint64_t v9 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, v8, v4);
  uint64_t v10 = (char *)objc_msgSend( objc_allocWithZone((Class)type metadata accessor for DynamicTypeButton(0)),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  v9(v2, (uint64_t)v7, v4);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v5 + 56))(v2, 0LL, 1LL, v4);
  uint64_t v11 = (uint64_t)&v10[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase];
  swift_beginAccess(&v10[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase], v15, 33LL, 0LL);
  uint64_t v12 = v10;
  sub_100014CB4((uint64_t)v2, v11);
  swift_endAccess(v15);
  sub_100100A48((uint64_t)v7);

  uint64_t result = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  qword_1002F15A8 = (uint64_t)v12;
  return result;
}

void sub_1001BD138(int a1, int a2, void *a3, int a4, int a5, id a6)
{
  uint64_t v7 = v6;
  id v9 = [a6 snapshotPageTraitEnvironment];
  uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyFooterCollectionViewCell_pageTraits];
  *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyFooterCollectionViewCell_pageTraits] = v9;
  swift_unknownObjectRetain(v9);
  swift_unknownObjectRelease(v10);
  [v7 setNeedsLayout];
  uint64_t v11 = swift_unknownObjectRelease(v9);
  uint64_t v12 = PrivacyFooter.bodyText.getter(v11);
  uint64_t v13 = *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyFooterCollectionViewCell_bodyText];
  *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyFooterCollectionViewCell_bodyText] = v12;
  swift_retain(v12);
  swift_release(v13);
  sub_100108E30();
  swift_release(v12);
  uint64_t v15 = PrivacyFooter.actions.getter(v14);
  swift_retain(a3);
  size_t v16 = sub_100027C1C(v15, a3);
  swift_bridgeObjectRelease(v15);
  swift_release(a3);
  uint64_t v17 = *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyFooterCollectionViewCell_actions];
  *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyFooterCollectionViewCell_actions] = v16;
  swift_bridgeObjectRelease(v17);
  id v18 = sub_100108FAC();
  if (PrivacyFooter.privacyTypesCount.getter(v18) < 1) {
    id v19 = 0LL;
  }
  else {
    id v19 = [objc_allocWithZone(UIFocusGuide) init];
  }
  uint64_t v20 = *(void **)&v7[OBJC_IVAR____TtC6Arcade31PrivacyFooterCollectionViewCell_focusGuide];
  *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyFooterCollectionViewCell_focusGuide] = v19;
  id v21 = v19;
  sub_100109AB0(v20);
}

id sub_1001BD2C0( uint64_t *a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001BD308(*a1, a2, a3, a5, a7, a8);
}

void sub_1001BD2D4(void *a1, int a2, void *a3, int a4, int a5, void *a6)
{
}

uint64_t sub_1001BD2DC()
{
  return sub_100003B6C( &qword_1002E6150,  (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyFooter,  (uint64_t)&protocol conformance descriptor for PrivacyFooter);
}

id sub_1001BD308(uint64_t a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double v8 = a2.n128_f64[0];
  uint64_t v118 = type metadata accessor for PrivacyFooterLayout.Metrics(0LL, a2);
  uint64_t v117 = *(void *)(v118 - 8);
  __n128 v10 = __chkstk_darwin(v118);
  NSString v119 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v122 = type metadata accessor for PrivacyFooterLayout(0LL, v10);
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v120 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v125 = sub_1000031E8(&qword_1002DE440);
  __chkstk_darwin(v125);
  uint64_t v128 = (uint64_t)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v14);
  uint64_t v124 = (uint64_t)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v127 = (uint64_t)&v113 - v17;
  __chkstk_darwin(v18);
  uint64_t v135 = (char *)&v113 - v19;
  __chkstk_darwin(v20);
  uint64_t v137 = (uint64_t)&v113 - v21;
  __chkstk_darwin(v22);
  uint64_t v140 = (uint64_t)&v113 - v23;
  uint64_t v24 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = (void *)type metadata accessor for FontUseCase(0LL, v28);
  uint64_t v30 = *(v29 - 1);
  __chkstk_darwin(v29);
  id v123 = (char *)&v113 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v32);
  uint64_t v132 = (char *)&v113 - v33;
  __chkstk_darwin(v34);
  uint64_t v36 = (void (**)(char *, void *))((char *)&v113 - v35);
  if (qword_1002DC6C8 != -1) {
LABEL_42:
  }
    swift_once(&qword_1002DC6C8, sub_100071740);
  uint64_t v37 = sub_1000061F4((uint64_t)v29, (uint64_t)qword_1002EF0A8);
  char v142 = (void (**)(char *, void *))v30;
  uint64_t v38 = *(void (**)(void, void, void))(v30 + 16);
  v134 = v29;
  v133 = v38;
  v38(v36, v37, v29);
  sub_100028C20();
  uint64_t ObjectType = swift_getObjectType(a6);
  id v126 = (id)a6;
  id v40 = objc_msgSend((id)a6, "traitCollection", ObjectType);
  uint64_t v116 = (char *)v36;
  uint64_t v41 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v36, v40);

  uint64_t v42 = PrivacyFooter.bodyText.getter();
  uint64_t v44 = LinkableText.styledText.getter(v43);
  __n128 v45 = swift_release(v42);
  uint64_t v46 = (void *)dispatch thunk of StyledText.asAttributedString(using:)(v41, v45);
  swift_release(v44);
  uint64_t v47 = type metadata accessor for Feature(0LL);
  uint64_t v148 = v47;
  uint64_t v149 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  uint64_t v48 = sub_100009D54(&v147);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v47 - 8) + 104LL))( v48,  enum case for Feature.measurement_with_labelplaceholder(_:),  v47);
  id v115 = v46;
  id v49 = (id)v41;
  LOBYTE(v41) = isFeatureEnabled(_:)(&v147);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v147);
  id v114 = v49;
  uint64_t v50 = LabelPlaceholderCompatibility.init(attributedText:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v46,  v49,  4LL,  0LL,  0LL,  0LL,  0LL,  v41 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v147, v50);
  uint64_t v51 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  uint64_t v30 = a1;
  uint64_t v52 = PrivacyFooter.actions.getter(v51);
  a6 = v52;
  if ((unint64_t)v52 >> 62)
  {
    if (v52 >= 0) {
      v52 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v27 = (char *)_CocoaArrayWrapper.endIndex.getter(v52);
  }

  else
  {
    uint64_t v27 = *(char **)((v52 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v36 = v142;
  uint64_t v53 = (uint64_t)v135;
  if (v27)
  {
    unint64_t v138 = a6 & 0xC000000000000001LL;
    __n128 v54 = _swiftEmptyArrayStorage;
    uint64_t v25 = 4LL;
    uint64_t v29 = &unk_1002F1000;
    uint64_t v131 = a6;
    uint64_t v130 = v27;
    while (1)
    {
      a1 = v25 - 4;
      if (v138)
      {
        uint64_t v55 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25 - 4, a6);
        uint64_t v56 = v25 - 3;
        if (__OFADD__(a1, 1LL)) {
          goto LABEL_41;
        }
      }

      else
      {
        swift_retain(*(void *)(a6 + 8 * v25));
        uint64_t v56 = v25 - 3;
        if (__OFADD__(a1, 1LL))
        {
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
      }

      unint64_t v141 = (char *)v56;
      uint64_t v30 = v55;
      Action.title.getter(v55);
      if (!v57)
      {
        swift_release(v30);
        uint64_t v36 = v142;
        goto LABEL_7;
      }

      uint64_t v58 = v57;
      uint64_t v139 = v30;
      if (qword_1002DD0A0 != -1) {
        swift_once(&qword_1002DD0A0, sub_1001BCF90);
      }
      double v59 = v54;
      uint64_t v60 = (void *)qword_1002F15A8;
      NSString v61 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "setTitle:forState:", v61, 0, swift_bridgeObjectRelease(v58).n128_f64[0]);

      uint64_t v62 = qword_1002F15A8;
      if (qword_1002DC6D0 != -1) {
        swift_once(&qword_1002DC6D0, sub_100071758);
      }
      uint64_t v63 = (uint64_t)v134;
      uint64_t v64 = sub_1000061F4((uint64_t)v134, (uint64_t)qword_1002EF0C0);
      uint64_t v65 = v140;
      uint64_t v66 = v133;
      v133(v140, v64, v63);
      uint64_t v24 = (uint64_t)v142;
      id v67 = v142[7];
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v67)(v65, 0LL, 1LL, v63);
      uint64_t v136 = v62;
      uint64_t v68 = v62 + OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase;
      swift_beginAccess(v68, v143, 0LL, 0LL);
      uint64_t v69 = v137;
      sub_100014CFC(v68, v137);
      swift_beginAccess(v68, &v144, 33LL, 0LL);
      sub_10000FF48(v65, v68);
      swift_endAccess(&v144);
      sub_100014CFC(v68, v53);
      uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
      if (v70(v53, 1LL, v63) == 1)
      {
        sub_100006060(v53, &qword_1002DE930);
        __n128 v54 = v59;
      }

      else
      {
        uint64_t v129 = v59;
        id v71 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 32);
        uint64_t v72 = (uint64_t)v132;
        v71(v132, v53, v63);
        uint64_t v73 = v127;
        v66(v127, v72, v63);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v67)(v73, 0LL, 1LL, v63);
        uint64_t v24 = v128;
        uint64_t v74 = v128 + *(int *)(v125 + 48);
        sub_100014CFC(v73, v128);
        sub_100014CFC(v69, v74);
        if (v70(v24, 1LL, v63) != 1)
        {
          uint64_t v78 = v124;
          sub_100014CFC(v24, v124);
          if (v70(v74, 1LL, v63) == 1)
          {
            sub_100006060(v127, &qword_1002DE930);
            uint64_t v77 = (void (**)(uint64_t, uint64_t))v142;
            v142[1]((char *)v78, (void *)v63);
            uint64_t v76 = v63;
            __n128 v54 = v129;
LABEL_25:
            sub_100006060(v128, &qword_1002DE440);
            uint64_t v69 = v137;
          }

          else
          {
            uint64_t v80 = v123;
            v71(v123, v74, v63);
            uint64_t v81 = sub_100003B6C( (unint64_t *)&qword_1002DE448,  (uint64_t (*)(uint64_t))&type metadata accessor for FontUseCase,  (uint64_t)&protocol conformance descriptor for FontUseCase);
            char v82 = dispatch thunk of static Equatable.== infix(_:_:)(v78, v80, v63, v81);
            uint64_t v77 = (void (**)(uint64_t, uint64_t))v142;
            uint64_t v83 = v142[1];
            v83(v80, (void *)v63);
            sub_100006060(v127, &qword_1002DE930);
            v83((char *)v78, (void *)v63);
            sub_100006060(v24, &qword_1002DE930);
            uint64_t v69 = v137;
            uint64_t v76 = v63;
            __n128 v54 = v129;
            if ((v82 & 1) != 0)
            {
              v83(v132, (void *)v63);
              goto LABEL_29;
            }
          }

          uint64_t v79 = (uint64_t)v132;
          sub_100100A48((uint64_t)v132);
          v77[1](v79, v76);
          goto LABEL_29;
        }

        sub_100006060(v73, &qword_1002DE930);
        unsigned int v75 = v70(v74, 1LL, v63);
        uint64_t v76 = v63;
        __n128 v54 = v129;
        uint64_t v77 = (void (**)(uint64_t, uint64_t))v142;
        if (v75 != 1) {
          goto LABEL_25;
        }
        sub_100006060(v128, &qword_1002DE930);
        uint64_t v69 = v137;
        v77[1]((uint64_t)v132, v63);
      }

unint64_t sub_1001BE01C()
{
  unint64_t result = qword_1002EB398;
  if (!qword_1002EB398)
  {
    uint64_t v1 = type metadata accessor for UberHeaderView();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1002EB398);
  }

  return result;
}

void (*sub_1001BE064(void *a1))(id *a1, char a2)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade14UberHeaderView_imageView);
  a1[1] = v3;
  *a1 = [v3 image];
  return sub_1001BE0B8;
}

void sub_1001BE0B8(id *a1, char a2)
{
  id v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    id v5 = *a1;
    id v3 = [v2 layer];
    [v3 removeAllAnimations];

    [v2 setAlpha:1.0];
    [v2 setImage:v5];
  }

  else
  {
    id v5 = *a1;
    id v4 = [a1[1] layer];
    [v4 removeAllAnimations];

    [v2 setAlpha:1.0];
    [v2 setImage:v5];
  }
}

void sub_1001BE1A4(void *a1, char a2)
{
  id v5 = *(void **)&v2[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageView];
  id v6 = [v5 image];

  if (!v6 || (a2 & 1) != 0)
  {
    [v5 setAlpha:0.0];
    [v5 setImage:a1];
    id v8 = [objc_allocWithZone(UICubicTimingParameters) init];
    id v9 = [objc_allocWithZone(UIViewPropertyAnimator) initWithDuration:v8 timingParameters:0.15];

    uint64_t v10 = swift_allocObject(&unk_10028D378, 24LL, 7LL);
    *(void *)(v10 + swift_weakDestroy(v0 + 16) = v2;
    aBlock[4] = sub_1001BE4C4;
    uint64_t v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100135408;
    aBlock[3] = &unk_10028D390;
    uint64_t v11 = _Block_copy(aBlock);
    uint64_t v12 = v16;
    uint64_t v13 = v2;
    objc_msgSend(v9, "addAnimations:", v11, swift_release(v12).n128_f64[0]);
    _Block_release(v11);
    [v9 startAnimation];
  }

  else
  {
    id v14 = a1;
    id v7 = [v5 layer];
    [v7 removeAllAnimations];

    [v5 setAlpha:1.0];
    [v5 setImage:v14];
  }

id sub_1001BE39C()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC6Arcade14UberHeaderView_imageView) image];
}

void sub_1001BE3CC(void *a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade14UberHeaderView_imageView);
  id v3 = [v2 layer];
  [v3 removeAllAnimations];

  [v2 setAlpha:1.0];
  [v2 setImage:a1];
}

void (*sub_1001BE458(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1001BE064(v2);
  return sub_10000FDC0;
}

uint64_t sub_1001BE4A0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_1001BE4C4()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6Arcade14UberHeaderView_imageView) setAlpha:1.0];
}

uint64_t sub_1001BE4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BE4F8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001BE500()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for FramedMediaCaptionViewLayout.Metrics(0LL);
  sub_10000FF90(v4, qword_1002F15B0);
  uint64_t v22 = sub_1000061F4(v4, (uint64_t)qword_1002F15B0);
  if (qword_1002DC810 != -1) {
    swift_once(&qword_1002DC810, sub_100071BD4);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_1000061F4(v6, (uint64_t)qword_1002EF480);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  uint64_t v20 = v7;
  v21(v3, v7, v6);
  uint64_t v8 = enum case for FontSource.useCase(_:);
  id v9 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v9(v3, enum case for FontSource.useCase(_:), v0);
  uint64_t v10 = type metadata accessor for StaticDimension(0LL);
  v33[3] = v10;
  v33[4] = &protocol witness table for StaticDimension;
  sub_100009D54(v33);
  uint64_t v31 = v0;
  uint64_t v32 = &protocol witness table for FontSource;
  uint64_t v11 = sub_100009D54(v30);
  uint64_t v12 = (void (*)(void *, char *, uint64_t))v1[2];
  v12(v11, v3, v0);
  StaticDimension.init(_:scaledLike:)(v30, 48.0);
  uint64_t v13 = (void (*)(char *, uint64_t))v1[1];
  v13(v3, v0);
  uint64_t v14 = v7;
  uint64_t v15 = v21;
  v21(v3, v14, v6);
  v9(v3, v8, v0);
  uint64_t v31 = v10;
  uint64_t v32 = &protocol witness table for StaticDimension;
  sub_100009D54(v30);
  uint64_t v28 = v0;
  uint64_t v29 = &protocol witness table for FontSource;
  uint64_t v16 = sub_100009D54(v27);
  v12(v16, v3, v0);
  StaticDimension.init(_:scaledLike:)(v27, 28.0);
  v13(v3, v0);
  v15(v3, v20, v6);
  v9(v3, v8, v0);
  uint64_t v28 = v10;
  uint64_t v29 = &protocol witness table for StaticDimension;
  sub_100009D54(v27);
  uint64_t v25 = (void *)v0;
  uint64_t v26 = &protocol witness table for FontSource;
  uint64_t v17 = sub_100009D54(v24);
  v12(v17, v3, v0);
  StaticDimension.init(_:scaledLike:)(v24, 9.0);
  v13(v3, v0);
  uint64_t v25 = &type metadata for Double;
  uint64_t v26 = &protocol witness table for Double;
  void v23[4] = &protocol witness table for Double;
  v24[0] = 0LL;
  v23[3] = &type metadata for Double;
  v23[0] = 0x403E000000000000LL;
  return FramedMediaCaptionViewLayout.Metrics.init(topSpace:bottomSpace:ordinalAdjustmentSpace:captionMargin:ordinalVerticalOffset:ordinalMargin:)( v33,  v30,  v27,  v24,  v23,  0.0,  40.0,  0.0,  40.0);
}

char *sub_1001BE804(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, v10);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v15 = qword_1002DC818;
  uint64_t v16 = v4;
  if (v15 != -1) {
    swift_once(&qword_1002DC818, sub_100071BEC);
  }
  uint64_t v17 = sub_1000061F4(v11, (uint64_t)qword_1002EF498);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18(v14, v17, v11);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_ordinalLabel] = sub_1000137B8( (uint64_t)v14,  2LL,  0LL,  1,  0);
  if (qword_1002DC810 != -1) {
    swift_once(&qword_1002DC810, sub_100071BD4);
  }
  uint64_t v19 = sub_1000061F4(v11, (uint64_t)qword_1002EF480);
  v18(v14, v19, v11);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_captionLabel] = sub_1000137B8( (uint64_t)v14,  2LL,  0LL,  0,  0);

  v38.id receiver = v16;
  v38.super_class = ObjectType;
  id v20 = objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  uint64_t v24 = (char *)v20;
  objc_msgSend(v24, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  [v24 setInsetsLayoutMarginsFromSafeArea:0];
  [v24 _setSafeAreaInsetsFrozen:1];
  id v25 = [v24 layer];
  [v25 setMaskedCorners:UIRectCorner.caCornerMask.getter(12)];

  uint64_t v26 = OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_ordinalLabel;
  uint64_t v27 = *(void **)&v24[OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_ordinalLabel];
  sub_100010F30();
  id v28 = v27;
  uint64_t v29 = (void *)static UIColor.secondaryText.getter(v28);
  [v28 setTextColor:v29];

  [v24 addSubview:*(void *)&v24[v26]];
  uint64_t v30 = OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_captionLabel;
  id v31 = *(id *)&v24[OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_captionLabel];
  uint64_t v32 = (void *)static UIColor.secondaryText.getter(v31);
  [v31 setTextColor:v32];

  id v33 = *(id *)&v24[v30];
  UILabel.alignment.setter(4LL);

  [v24 addSubview:*(void *)&v24[v30]];
  uint64_t v34 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v35 = v24;
  id v36 = [v34 secondarySystemBackgroundColor];
  [v35 setBackgroundColor:v36];

  return v35;
}

uint64_t sub_1001BEBD4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v22 = type metadata accessor for LayoutRect(0LL);
  uint64_t v2 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for FramedMediaCaptionViewLayout.Metrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for FramedMediaCaptionViewLayout(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)&double v11 = __chkstk_darwin(v9).n128_u64[0];
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v27.id receiver = v0;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "layoutSubviews", v11);
  if (qword_1002DD0A8 != -1) {
    swift_once(&qword_1002DD0A8, sub_1001BE500);
  }
  uint64_t v14 = sub_1000061F4(v5, (uint64_t)qword_1002F15B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_captionLabel];
  uint64_t v25 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v26 = &protocol witness table for UILabel;
  void v23[4] = &protocol witness table for UILabel;
  uint64_t v24 = v15;
  uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_ordinalLabel];
  v23[3] = v25;
  v23[0] = v16;
  id v17 = v15;
  id v18 = v16;
  FramedMediaCaptionViewLayout.init(metrics:captionTextView:ordinalTextView:)(v8, &v24, v23);
  __n128 v19 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  FramedMediaCaptionViewLayout.placeChildren(relativeTo:in:)(v0, v19);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

double sub_1001BEDE8(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = type metadata accessor for FramedMediaCaptionViewLayout.Metrics(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for FramedMediaCaptionViewLayout(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DD0A8 != -1) {
    swift_once(&qword_1002DD0A8, sub_1001BE500);
  }
  uint64_t v15 = sub_1000061F4(v7, (uint64_t)qword_1002F15B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
  uint64_t v16 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_captionLabel);
  uint64_t v24 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v25 = &protocol witness table for UILabel;
  v22[4] = &protocol witness table for UILabel;
  uint64_t v23 = v16;
  id v17 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_ordinalLabel);
  void v22[3] = v24;
  v22[0] = v17;
  id v18 = v16;
  id v19 = v17;
  FramedMediaCaptionViewLayout.init(metrics:captionTextView:ordinalTextView:)(v10, &v23, v22);
  double v20 = FramedMediaCaptionViewLayout.measurements(fitting:in:)(a1, a2, a3);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v20;
}

uint64_t type metadata accessor for FramedMediaCaptionView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade22FramedMediaCaptionView);
}

uint64_t TVArcadeWelcomeLayout.placeChildren(relativeTo:in:)( uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001BF204(a1, (uint64_t)v13);
  _VerticalFlowLayout.placeChildren(relativeTo:in:)(a1, a2, a3, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double TVArcadeWelcomeLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001BF204(a1, (uint64_t)v9);
  double v10 = _VerticalFlowLayout.measurements(fitting:in:)(a1, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

uint64_t sub_1001BF204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (void *)v2;
  uint64_t v91 = a1;
  uint64_t v70 = a2;
  uint64_t v88 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v75 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  id v87 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v84 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v66 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v71 = v6;
  uint64_t v74 = v7;
  __chkstk_darwin(v6);
  uint64_t v64 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v89 = v9;
  uint64_t v73 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v62 = v12;
  sub_1001BFECC(v2, (uint64_t)v102);
  uint64_t v13 = swift_allocObject(&unk_10028D510, 304LL, 7LL);
  memcpy((void *)(v13 + 16), v102, 0x120uLL);
  uint64_t v15 = type metadata accessor for LayoutViewPlaceholder(0LL, v14);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  uint64_t v16 = LayoutViewPlaceholder.init(measureWith:)(sub_1001BFF5C, v13);
  uint64_t v69 = v16;
  *(void *)&__int128 v96 = v3[35];
  unint64_t v100 = (void *)v15;
  id v101 = &protocol witness table for LayoutViewPlaceholder;
  v99[0] = v16;
  uint64_t v17 = type metadata accessor for DynamicTypeButton(0LL);
  swift_retain(v16);
  LayoutView.withMeasurements(providedBy:)(v102, v99, v17, &protocol witness table for UIView);
  _s6Arcade17PillOverlayLayoutVwxx_0(v99);
  uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002E4D00);
  uint64_t v19 = *(void *)(type metadata accessor for _VerticalFlowLayout.Child(0LL) - 8);
  uint64_t v65 = *(void *)(v19 + 72);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v67 = 2 * v65;
  uint64_t v22 = swift_allocObject(v18, v21 + 3 * v65, v20 | 7);
  uint64_t v68 = v22;
  *(_OWORD *)(v22 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
  uint64_t v72 = v22 + v21;
  uint64_t v23 = v3[28];
  uint64_t v24 = v3[29];
  uint64_t v25 = sub_100005F8C(v3 + 25, v23);
  unint64_t v100 = (void *)v23;
  id v101 = *(void **)(v24 + 8);
  uint64_t v26 = sub_100009D54(v99);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16LL))(v26, v25, v23);
  uint64_t v63 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  v63(v12, enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:), v9);
  unsigned int v85 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.center(_:);
  id v86 = *(void (**)(char *))(v7 + 104);
  objc_super v27 = v64;
  v86(v64);
  uint64_t v28 = v3[3];
  uint64_t v29 = v3[4];
  sub_100005F8C(v3, v28);
  uint64_t v30 = v66;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v28, v29);
  double v31 = AnyDimension.value(in:rounded:)(v91, v30, v28, v29);
  uint64_t v84 = *(void *)(v84 + 8);
  uint64_t v32 = v30;
  ((void (*)(char *, uint64_t))v84)(v30, v90);
  *((void *)&v97 + 1) = &type metadata for CGFloat;
  uint64_t v98 = &protocol witness table for CGFloat;
  *(double *)&__int128 v96 = v31;
  double v95 = 0LL;
  __int128 v93 = 0u;
  __int128 v94 = 0u;
  uint64_t v33 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
  uint64_t v34 = v75;
  uint64_t v35 = *(unsigned __int8 *)(v75 + 80);
  uint64_t v82 = ((v35 + 32) & ~v35) + *(void *)(v75 + 72);
  uint64_t v83 = v33;
  uint64_t v80 = (v35 + 32) & ~v35;
  uint64_t v81 = v35 | 7;
  uint64_t v36 = swift_allocObject(v33, v82, v35 | 7);
  __int128 v79 = xmmword_100233580;
  *(_OWORD *)(v36 + swift_weakDestroy(v0 + 16) = xmmword_100233580;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v36);
  uint64_t v92 = v36;
  unint64_t v37 = sub_10002E158();
  unint64_t v77 = v37;
  uint64_t v38 = sub_1000031E8(&qword_1002E45E0);
  uint64_t v76 = v38;
  unint64_t v78 = sub_100003228();
  id v40 = v87;
  uint64_t v39 = v88;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v92, v38, v78, v88, v37);
  uint64_t v41 = v72;
  uint64_t v42 = v62;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v99,  v62,  v27,  &v96,  &v93,  v40);
  uint64_t v75 = *(void *)(v34 + 8);
  ((void (*)(char *, uint64_t))v75)(v40, v39);
  sub_10002E1A0((uint64_t)&v93);
  uint64_t v74 = *(void *)(v74 + 8);
  uint64_t v43 = v71;
  ((void (*)(char *, uint64_t))v74)(v27, v71);
  uint64_t v73 = *(void *)(v73 + 8);
  uint64_t v44 = v42;
  ((void (*)(char *, uint64_t))v73)(v42, v89);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v96);
  _s6Arcade17PillOverlayLayoutVwxx_0(v99);
  uint64_t v61 = v41 + v65;
  sub_10001F010((uint64_t)(v3 + 30), (uint64_t)v99);
  LODWORD(v65) = enum case for _VerticalFlowLayout.Child.Placement.top(_:);
  __n128 v45 = v63;
  ((void (*)(char *))v63)(v42);
  ((void (*)(char *, void, uint64_t))v86)(v27, v85, v43);
  uint64_t v46 = v3[8];
  uint64_t v47 = v3[9];
  sub_100005F8C(v3 + 5, v46);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v46, v47);
  double v48 = AnyDimension.value(in:rounded:)(v91, v32, v46, v47);
  ((void (*)(char *, uint64_t))v84)(v32, v90);
  *((void *)&v97 + 1) = &type metadata for CGFloat;
  uint64_t v98 = &protocol witness table for CGFloat;
  *(double *)&__int128 v96 = v48;
  *((void *)&v94 + 1) = &type metadata for Double;
  double v95 = &protocol witness table for Double;
  *(void *)&__int128 v93 = 0LL;
  uint64_t v49 = swift_allocObject(v83, v82, v81);
  *(_OWORD *)(v49 + swift_weakDestroy(v0 + 16) = v79;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v49);
  uint64_t v92 = v49;
  uint64_t v50 = v87;
  uint64_t v51 = v88;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v92, v76, v78, v88, v77);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v99,  v44,  v27,  &v96,  &v93,  v50);
  ((void (*)(char *, uint64_t))v75)(v50, v51);
  uint64_t v52 = v71;
  ((void (*)(char *, uint64_t))v74)(v27, v71);
  uint64_t v53 = v89;
  ((void (*)(char *, uint64_t))v73)(v44, v89);
  _s6Arcade17PillOverlayLayoutVwxx_0(v99);
  sub_10002E1A0((uint64_t)&v93);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v96);
  v72 += v67;
  v45(v44, v65, v53);
  uint64_t v54 = v52;
  ((void (*)(char *, void, uint64_t))v86)(v27, v85, v52);
  uint64_t v55 = v3 + 10;
  uint64_t v56 = v3[13];
  uint64_t v57 = v3[14];
  sub_100005F8C(v55, v56);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v56, v57);
  double v58 = AnyDimension.value(in:rounded:)(v91, v32, v56, v57);
  ((void (*)(char *, uint64_t))v84)(v32, v90);
  unint64_t v100 = &type metadata for CGFloat;
  id v101 = &protocol witness table for CGFloat;
  *(double *)unint64_t v99 = v58;
  uint64_t v98 = 0LL;
  __int128 v96 = 0u;
  __int128 v97 = 0u;
  uint64_t v59 = swift_allocObject(v83, v82, v81);
  *(_OWORD *)(v59 + swift_weakDestroy(v0 + 16) = v79;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v59);
  *(void *)&__int128 v93 = v59;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v93, v76, v78, v51, v77);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v102,  v44,  v27,  v99,  &v96,  v50);
  ((void (*)(char *, uint64_t))v75)(v50, v51);
  sub_10002E1A0((uint64_t)&v96);
  ((void (*)(char *, uint64_t))v74)(v27, v54);
  ((void (*)(char *, uint64_t))v73)(v44, v89);
  _s6Arcade17PillOverlayLayoutVwxx_0(v99);
  _VerticalFlowLayout.init(expandChildrenToFit:children:)(0LL, v68);
  swift_release(v69);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v102);
}

id sub_1001BF9BC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void *)(a2 + 144);
  uint64_t v13 = *(void *)(a2 + 152);
  sub_100005F8C((void *)(a2 + 120), v12);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12, v13);
  AnyDimension.value(in:rounded:)(a1, v11, v12, v13);
  __n128 v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  uint64_t v15 = *(void *)(a2 + 184);
  uint64_t v16 = *(void *)(a2 + 192);
  sub_100005F8C((void *)(a2 + 160), v15);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v15, v16);
  double v17 = AnyDimension.value(in:rounded:)(a1, v11, v15, v16);
  v14(v11, v8);
  if (v17 >= a3) {
    double v18 = a3;
  }
  else {
    double v18 = v17;
  }
  return objc_msgSend(*(id *)(a2 + 280), "measurementsWithFitting:in:", a1, v18, a4);
}

void destroy for TVArcadeWelcomeLayout(uint64_t a1)
{
}

uint64_t initializeWithCopy for TVArcadeWelcomeLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 4) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 6swift_weakDestroy(v0 + 4) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  __int128 v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 10swift_weakDestroy(v0 + 4) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  __int128 v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 14swift_weakDestroy(v0 + 4) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  __int128 v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 18swift_weakDestroy(v0 + 4) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  __int128 v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 22swift_weakDestroy(v0 + 4) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  uint64_t v10 = *(void *)(a2 + 264);
  uint64_t v11 = *(void *)(a2 + 272);
  *(void *)(a1 + 26swift_weakDestroy(v0 + 4) = v10;
  *(void *)(a1 + 272) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 240, a2 + 240);
  uint64_t v12 = *(void **)(a2 + 280);
  *(void *)(a1 + 280) = v12;
  id v13 = v12;
  return a1;
}

void *assignWithCopy for TVArcadeWelcomeLayout(void *a1, void *a2)
{
  __int128 v4 = (void *)a2[35];
  __int128 v5 = (void *)a1[35];
  a1[35] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for TVArcadeWelcomeLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 160));
  __int128 v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 200));
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 240));
  __int128 v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  uint64_t v8 = *(void *)(a2 + 280);
  __int128 v9 = *(void **)(a1 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v8;

  return a1;
}

uint64_t getEnumTagSinglePayload for TVArcadeWelcomeLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 288)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVArcadeWelcomeLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0LL;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 18swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 10swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 26swift_weakDestroy(v0 + 4) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 288) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 2swift_weakDestroy(v0 + 4) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVArcadeWelcomeLayout()
{
  return &type metadata for TVArcadeWelcomeLayout;
}

ValueMetadata *type metadata accessor for TVArcadeWelcomeLayout.Metrics()
{
  return &type metadata for TVArcadeWelcomeLayout.Metrics;
}

uint64_t sub_1001BFECC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001BFF00()
{
  return swift_deallocObject(v0, 304LL, 7LL);
}

id sub_1001BFF5C(uint64_t a1, double a2, double a3)
{
  return sub_1001BF9BC(a1, v3 + 16, a2, a3);
}

uint64_t sub_1001BFF64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_100015FDC(v3, a1);
}

double sub_1001BFFB8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_100015F94(a1, v3);
  *(void *)&double result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1001C0014(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

id sub_1001C005C()
{
  v2.id receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  id result = objc_msgSendSuper2(&v2, "prepareForReuse");
  *((_BYTE *)v0 + OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_isShowingSeeAll) = 0;
  return result;
}

void sub_1001C00A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CornerStyle(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  __int128 v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Action(0LL);
  unint64_t v7 = sub_1001C0294();
  uint64_t v8 = ItemLayoutContext.typedModel<A>(as:)(&v25, v6, v6, v7);
  uint64_t v9 = v25;
  if (v25)
  {
    uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_textLabel];
    Action.title.getter(v8);
    if (v11)
    {
      uint64_t v13 = v11;
      NSString v14 = String._bridgeToObjectiveC()();
      *(void *)&double v12 = swift_bridgeObjectRelease(v13).n128_u64[0];
    }

    else
    {
      NSString v14 = 0LL;
    }

    objc_msgSend(v10, "setText:", v14, v12);

    uint64_t v16 = Action.artwork.getter(v15);
    uint64_t v17 = v16;
    if (v16) {
      swift_release(v16);
    }
    sub_1000A26F0(v17 == 0);
    double v18 = *(void **)&v1[OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_lazilyCreatedArtworkView];
    if (v18) {
      uint64_t v19 = (uint64_t)[v18 isHidden];
    }
    else {
      uint64_t v19 = 1LL;
    }
    uint64_t v20 = OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_configuration;
    int v21 = v1[OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_configuration];
    v1[OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_configuration] = v19;
    if ((_DWORD)v19 != v21)
    {
      sub_1000A2604((id)v19);
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for CornerStyle.continuous(_:), v2);
      if (v1[v20] == 1) {
        double v22 = 16.0;
      }
      else {
        double v22 = 12.0;
      }
      id v23 = [v1 contentView];
      CornerStyle.apply(withRadius:to:)(v23, v22);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }

    [v1 setNeedsLayout];
    swift_release(v9);
  }

unint64_t sub_1001C0294()
{
  unint64_t result = qword_1002DEA20;
  if (!qword_1002DEA20)
  {
    uint64_t v1 = type metadata accessor for Action(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1002DEA20);
  }

  return result;
}

double sub_1001C02DC()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t v2 = *(char **)&v1[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView];
  id v3 = [*(id *)&v2[OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel] text];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    uint64_t v7 = v6;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v7 = 0LL;
  }

  char v8 = static String.isNilOrEmpty(_:)(v5, v7);
  *(void *)&double v9 = swift_bridgeObjectRelease(v7).n128_u64[0];
  if ((v8 & 1) == 0)
  {
    objc_msgSend(v1, "frame", v9);
    objc_msgSend(v2, "sizeThatFits:", v10, v11);
  }

  return 0.0;
}

void sub_1001C0410(void *a1, uint64_t a2, double a3, double a4)
{
  double v8 = v7;
  [a1 frame];
  if (v9 <= v8)
  {
    [a1 contentInset];
    double v11 = v10;
    [a1 _systemContentInset];
    double v13 = v12;
    double v14 = v12 + v11 + *(double *)(a2 + 8);
    if (v14 > 0.0)
    {
      double v15 = 350.0 - v12;
      double v16 = sub_1001D42A8();
      if (v14 <= 350.0 - v13)
      {
        double v17 = 0.07;
        if (a4 < 0.0) {
          double v17 = 0.5;
        }
        if (v14 <= v17 * v15) {
          double v13 = v11 + v13;
        }
        else {
          double v13 = v13 + v16;
        }
      }

      else if (v14 > v15 + v16)
      {
        return;
      }

      *(double *)(a2 + 8) = -v13;
    }
  }

id sub_1001C051C(void *a1)
{
  double v4 = v3;
  [a1 contentOffset];
  double v6 = v5;
  [a1 contentInset];
  double v8 = v4 + v6 + v7;
  [a1 frame];
  double v9 = sub_1001C02DC();
  double v10 = *(char **)(v1 + 16);
  [v10 setFrame:v9];
  double v11 = v8 * 0.28;
  if (v8 * 0.28 < 0.0) {
    double v11 = 0.0;
  }
  uint64_t v12 = OBJC_IVAR____TtC6Arcade14UberHeaderView_imageParallaxY;
  *(double *)&v10[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageParallaxY] = v11;
  double v13 = *(void **)&v10[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageView];
  [v13 bounds];
  return objc_msgSend(v13, "_setContentRectInPixels:forContentSize:", 0.0, -*(double *)&v10[v12], v14, v15, v14, v15);
}

double sub_1001C0634()
{
  sub_100006060((uint64_t)v0 + OBJC_IVAR____TtC6Arcade18UberScrollObserver_tintColorInterpolator, &qword_1002EB4A8);
  *(void *)&double result = swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26)).n128_u64[0];
  return result;
}

uint64_t sub_1001C067C()
{
  return type metadata accessor for UberScrollObserver(0LL);
}

uint64_t type metadata accessor for UberScrollObserver(uint64_t a1)
{
  uint64_t result = qword_1002EB400;
  if (!qword_1002EB400) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UberScrollObserver);
  }
  return result;
}

void sub_1001C06C0(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1001C073C(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 80);
  }

void sub_1001C073C(uint64_t a1)
{
  if (!qword_1002EB410)
  {
    uint64_t v2 = sub_100003274((uint64_t *)&unk_1002EB418);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1002EB410);
    }
  }

uint64_t sub_1001C0794(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v26[1] = a3;
  uint64_t v7 = type metadata accessor for TimingCurve(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002EB4B0);
  __chkstk_darwin(v11);
  double v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  double v16 = (char *)v26 - v15;
  uint64_t v17 = sub_1000031E8(&qword_1002EB4A8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v4 + 2swift_weakDestroy(v0 + 4) = a2;
  uint64_t v20 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v21 = a1;
  id v22 = a2;
  id v23 = [v20 whiteColor];
  UIColor.rgbaComponents.getter();

  UIColor.rgbaComponents.getter();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for TimingCurve.linear(_:), v7);
  static UIColor.RGBAComponents.interpolator(fromValue:toValue:curve:)(v16, v13, v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_100006060((uint64_t)v13, (uint64_t *)&unk_1002EB4B0);
  sub_100006060((uint64_t)v16, (uint64_t *)&unk_1002EB4B0);
  uint64_t v24 = sub_1000031E8((uint64_t *)&unk_1002EB418);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v19, 0LL, 1LL, v24);
  sub_1001C0998((uint64_t)v19, v4 + OBJC_IVAR____TtC6Arcade18UberScrollObserver_tintColorInterpolator);
  return v4;
}

uint64_t sub_1001C0998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002EB4A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

id sub_1001C09E0()
{
  id v0 = objc_allocWithZone(&OBJC_CLASS___CAMediaTimingFunction);
  LODWORD(v1) = 1051260355;
  LODWORD(v2) = 1059816735;
  LODWORD(v3) = 0;
  LODWORD(vswift_weakDestroy(v0 + 4) = 1.0;
  id result = [v0 initWithControlPoints:v1 :v3 :v2 :v4];
  qword_1002EB4C0 = (uint64_t)result;
  return result;
}

void sub_1001C0A30()
{
  qword_1002EB4C8 = 0x4046800000000000LL;
}

void sub_1001C0A44()
{
  qword_1002EB4D0 = 0x402E000000000000LL;
}

char *sub_1001C0A54(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v13 = &v4[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_itemLayoutContext];
  uint64_t v14 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v13, 1LL, 1LL, v14);
  uint64_t v15 = OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_focusGuide;
  id v16 = objc_allocWithZone(&OBJC_CLASS___UIFocusGuide);
  uint64_t v17 = v4;
  *(void *)&v4[v15] = [v16 init];
  uint64_t v18 = OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_leadingArrow;
  uint64_t v19 = (objc_class *)type metadata accessor for PagingArrow();
  id v20 = objc_allocWithZone(v19);
  *(void *)&v17[v18] = sub_1001C3FA8();
  uint64_t v21 = OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_trailingArrow;
  id v22 = objc_allocWithZone(v19);
  *(void *)&v17[v21] = sub_1001C3FA8();
  uint64_t v23 = OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_carouselView;
  uint64_t v24 = type metadata accessor for CarouselView();
  *(void *)&v17[v23] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v24)) init];
  uint64_t v25 = &v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_heroCarousel];
  uint64_t v26 = sub_1000031E8(&qword_1002EB558);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v25, 1LL, 1LL, v26);
  objc_super v27 = &v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_stateLens];
  uint64_t v28 = sub_1000031E8(&qword_1002EB568);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56LL))(v27, 1LL, 1LL, v28);
  swift_weakInit(&v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsCalculator], 0LL);
  uint64_t v29 = &v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsUpdateBlock];
  *(void *)uint64_t v29 = 0LL;
  *((void *)v29 + 1) = 0LL;
  *(void *)&v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_previouslyFocusedCarouselItemView] = 0LL;
  *(void *)&v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_focusedCarouselItemView] = 0LL;
  AutoScrollConfiguration.init(isAutoScrollEnabled:autoScrollInterval:autoScrollRestartDelay:)(2LL, 0LL, 1LL, 0LL, 1LL);
  uint64_t v30 = &v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_currentTitleEffect];
  uint64_t v31 = type metadata accessor for TitleEffect(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v30, 1LL, 1LL, v31);
  uint64_t v32 = OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_onUpdatePageTitleEffect;
  uint64_t v33 = sub_1000031E8(&qword_1002EA750);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  *(void *)&v17[v32] = SyncEvent.init()();
  uint64_t v34 = &v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_playbackId];
  uint64_t v36 = UUID.init()(v35);
  uint64_t v37 = UUID.uuidString.getter(v36);
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v64[0] = v37;
  v64[1] = v39;
  AnyHashable.init<A>(_:)(v34, v64, &type metadata for String, &protocol witness table for String);
  v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_allowsAutoPlay] = 1;
  v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_isPlaying] = 0;
  swift_unknownObjectWeakInit(&v17[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_visibilityTrackingView], 0LL);

  id v40 = (objc_class *)type metadata accessor for HeroCarouselCollectionViewCell(0LL);
  v63.id receiver = v17;
  v63.super_class = v40;
  uint64_t v41 = (char *)objc_msgSendSuper2(&v63, "initWithFrame:", a1, a2, a3, a4);
  id v42 = [v41 contentView];
  objc_msgSend( v42,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  id v43 = [v41 contentView];
  uint64_t v44 = OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_carouselView;
  [v43 addSubview:*(void *)&v41[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_carouselView]];

  id v45 = [v41 contentView];
  uint64_t v46 = OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_leadingArrow;
  [v45 addSubview:*(void *)&v41[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_leadingArrow]];

  id v47 = [v41 contentView];
  uint64_t v48 = OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_trailingArrow;
  [v47 addSubview:*(void *)&v41[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_trailingArrow]];

  [*(id *)&v41[v46] setAlpha:0.0];
  [*(id *)&v41[v48] setAlpha:0.0];
  uint64_t v49 = *(void **)&v41[v44];
  uint64_t v50 = type metadata accessor for HeroCarouselItemView();
  ObjCClassFromMetadatCGFloat a = (objc_class *)swift_getObjCClassFromMetadata(v50);
  id v52 = v49;
  uint64_t v53 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
  uint64_t v55 = v54;

  NSString v56 = String._bridgeToObjectiveC()();
  objc_msgSend( v52,  "registerClass:forCellWithReuseIdentifier:",  ObjCClassFromMetadata,  v56,  swift_bridgeObjectRelease(v55).n128_f64[0]);

  uint64_t v57 = *(void **)&v41[v44];
  [v57 setInteritemSpacing:0.0];
  uint64_t v58 = qword_1002DD0C0;
  id v59 = v57;
  if (v58 != -1) {
    swift_once(&qword_1002DD0C0, sub_1001C0A44);
  }
  [v59 setPageControlMargin:*(double *)&qword_1002EB4D0];

  uint64_t v60 = *(void **)&v41[v44];
  [v60 setDelegate:v41];
  id v61 = v60;
  [v61 setDataSource:v41];

  return v41;
}

uint64_t sub_1001C0FBC(uint64_t a1)
{
  uint64_t v3 = sub_1000031E8(&qword_1002EB558);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_heroCarousel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_heroCarousel, v18, 33LL, 0LL);
  sub_10019B4C8(a1, v7, (uint64_t *)&unk_1002EB6C0);
  __n128 v8 = swift_endAccess(v18);
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_carouselView);
  uint64_t v11 = 0LL;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 48))(v7, 1LL, v3, v8))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
    ObjectGraphPair.value.getter(v18);
    uint64_t v12 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v13 = v18[0];
    uint64_t v14 = HeroCarousel.items.getter(v12);
    swift_release(v13);
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0) {
        uint64_t v16 = v14;
      }
      else {
        uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v14);
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v14);
    }

    else
    {
      uint64_t v11 = *(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    *(void *)&double v10 = swift_bridgeObjectRelease(v14).n128_u64[0];
  }

  objc_msgSend(v9, "setShowsPageControl:", v11 > 0, v10);
  [v9 reloadData];
  return sub_100006060(a1, (uint64_t *)&unk_1002EB6C0);
}

void sub_1001C1168(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002EA730);
  __chkstk_darwin(v4);
  double v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v7);
  uint64_t v9 = &v29[-v8];
  uint64_t v10 = OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_focusedCarouselItemView;
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_focusedCarouselItemView);
  if (!v11)
  {
    if (!a1) {
      return;
    }
LABEL_7:
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(*(void *)(a1 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_contentBackgroundView)
                         + OBJC_IVAR____TtC6Arcade30HeroCarouselItemBackgroundView_videoContainer)
             + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (Strong)
    {
      uint64_t v13 = (void *)Strong;
      *(_BYTE *)(Strong + qword_1002F0800) = 0;
      if ((*(_BYTE *)(Strong + qword_1002F0818) & 1) == 0) {
        sub_10012A580();
      }
    }

    goto LABEL_11;
  }

  if (a1 && v11 == a1) {
    return;
  }
  if (a1) {
    goto LABEL_7;
  }
LABEL_11:
  uint64_t v14 = *(void *)(v2 + v10);
  if (v14 && (uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem)) != 0)
  {
    __n128 v16 = swift_retain(*(void *)(v14 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem));
    dispatch thunk of HeroCarouselItem.titleEffect.getter(v16);
    swift_release(v15);
    uint64_t v17 = type metadata accessor for TitleEffect(0LL);
    (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  }

  else
  {
    uint64_t v18 = type metadata accessor for TitleEffect(0LL);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(v9, 1LL, 1LL, v18);
  }

  uint64_t v19 = v2 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_currentTitleEffect;
  swift_beginAccess(v2 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_currentTitleEffect, v30, 0LL, 0LL);
  sub_10001027C(v19, (uint64_t)v6, (uint64_t *)&unk_1002EA730);
  swift_beginAccess(v19, v29, 33LL, 0LL);
  sub_10019B4C8((uint64_t)v9, v19, (uint64_t *)&unk_1002EA730);
  swift_endAccess(v29);
  sub_1001C14B0((uint64_t)v6);
  sub_100006060((uint64_t)v9, (uint64_t *)&unk_1002EA730);
  sub_100006060((uint64_t)v6, (uint64_t *)&unk_1002EA730);
  uint64_t v20 = *(void *)(v2 + v10);
  if (v20)
  {
    uint64_t v21 = swift_unknownObjectWeakLoadStrong( *(void *)(*(void *)(v20 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_contentBackgroundView)
                      + OBJC_IVAR____TtC6Arcade30HeroCarouselItemBackgroundView_videoContainer)
          + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (v21)
    {
      id v22 = (void *)v21;
      *(_BYTE *)(v21 + qword_1002F0800) = 1;
      if ((*(_BYTE *)(v21 + qword_1002F0818) & 1) == 0)
      {
        uint64_t v23 = swift_beginAccess(v21 + qword_1002F0830, v29, 32LL, 0LL);
        char v24 = VideoConfiguration.allowsAutoPlay.getter(v23);
        swift_endAccess(v29);
        if ((v24 & 1) != 0)
        {
          if (qword_1002DCC10 != -1) {
            swift_once(&qword_1002DCC10, sub_10011449C);
          }
          if ((sub_1001144C8() & 1) != 0) {
            sub_10012B2E8();
          }
        }
      }
    }
  }

  uint64_t v25 = v2 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsUpdateBlock;
  swift_beginAccess(v25, v29, 0LL, 0LL);
  uint64_t v26 = *(void (**)(__n128))v25;
  if (*(void *)v25)
  {
    uint64_t v27 = *(void *)(v25 + 8);
    __n128 v28 = swift_retain(v27);
    v26(v28);
    sub_10000D3D8((uint64_t)v26, v27);
  }

uint64_t sub_1001C14B0(uint64_t a1)
{
  uint64_t v44 = (void (*)(_BYTE *, _BYTE *, uint64_t))a1;
  uint64_t v2 = type metadata accessor for TitleEffectUpdate(0LL);
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  __chkstk_darwin(v2);
  uint64_t v41 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v4 = sub_1000031E8(&qword_1002EB6B0);
  __chkstk_darwin(v4);
  double v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002EA730);
  __chkstk_darwin(v7);
  uint64_t v39 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v37[-v10];
  __chkstk_darwin(v12);
  uint64_t v14 = &v37[-v13];
  uint64_t v15 = type metadata accessor for TitleEffect(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v45 = &v37[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v18);
  uint64_t v20 = &v37[-v19];
  uint64_t v40 = v1;
  uint64_t v21 = v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_currentTitleEffect;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_currentTitleEffect, v46, 0LL, 0LL);
  sub_10001027C(v21, (uint64_t)v14, (uint64_t *)&unk_1002EA730);
  id v22 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48);
  if (v22(v14, 1LL, v15) == 1) {
    return sub_100006060((uint64_t)v14, (uint64_t *)&unk_1002EA730);
  }
  char v24 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 32);
  v24(v20, (uint64_t)v14, v15);
  uint64_t v25 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16);
  v25(v11, v20, v15);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0LL, 1LL, v15);
  uint64_t v26 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_10001027C((uint64_t)v11, (uint64_t)v6, (uint64_t *)&unk_1002EA730);
  sub_10001027C((uint64_t)v44, v26, (uint64_t *)&unk_1002EA730);
  if (v22(v6, 1LL, v15) == 1)
  {
    sub_100006060((uint64_t)v11, (uint64_t *)&unk_1002EA730);
    unsigned int v27 = v22((_BYTE *)v26, 1LL, v15);
    __n128 v28 = v45;
    if (v27 == 1)
    {
      sub_100006060((uint64_t)v6, (uint64_t *)&unk_1002EA730);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v20, v15);
    }

    goto LABEL_8;
  }

  uint64_t v44 = v25;
  uint64_t v29 = v24;
  uint64_t v30 = v39;
  sub_10001027C((uint64_t)v6, (uint64_t)v39, (uint64_t *)&unk_1002EA730);
  unsigned int v31 = v22((_BYTE *)v26, 1LL, v15);
  __n128 v28 = v45;
  if (v31 == 1)
  {
    sub_100006060((uint64_t)v11, (uint64_t *)&unk_1002EA730);
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v30, v15);
    uint64_t v25 = v44;
LABEL_8:
    sub_100006060((uint64_t)v6, &qword_1002EB6B0);
    goto LABEL_9;
  }

  v29(v45, v26, v15);
  uint64_t v35 = sub_100003B6C( &qword_1002EB6B8,  (uint64_t (*)(uint64_t))&type metadata accessor for TitleEffect,  (uint64_t)&protocol conformance descriptor for TitleEffect);
  int v38 = dispatch thunk of static Equatable.== infix(_:_:)(v30, v28, v15, v35);
  uint64_t v36 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
  v36(v28, v15);
  sub_100006060((uint64_t)v11, (uint64_t *)&unk_1002EA730);
  v36(v30, v15);
  sub_100006060((uint64_t)v6, (uint64_t *)&unk_1002EA730);
  uint64_t v25 = v44;
  if ((v38 & 1) != 0) {
    return ((uint64_t (*)(_BYTE *, uint64_t))v36)(v20, v15);
  }
LABEL_9:
  v25(v28, v20, v15);
  if (qword_1002DD0B0 != -1) {
    swift_once(&qword_1002DD0B0, sub_1001C09E0);
  }
  uint64_t v32 = qword_1002EB4C0;
  id v33 = (id)qword_1002EB4C0;
  uint64_t v34 = v41;
  TitleEffectUpdate.init(effect:isAnimated:animationDuration:timingFunction:)(v28, 1LL, 0x3FD0000000000000LL, 0LL, v32);
  SyncEvent.post(_:)(v34);
  (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v34, v43);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v20, v15);
}

id sub_1001C191C()
{
  v59.id receiver = v0;
  v59.super_class = (Class)type metadata accessor for HeroCarouselCollectionViewCell(0LL);
  objc_msgSendSuper2(&v59, "layoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_carouselView];
  id v2 = [v0 contentView];
  [v2 frame];

  objc_msgSend(v1, "setFrame:", CGRect.subtracting(insets:)(objc_msgSend(v0, "layoutMargins")).n128_f64[0]);
  id v3 = [v0 contentView];
  [v3 frame];

  CGRect.subtracting(insets:)([v0 layoutMargins]);
  objc_msgSend(v1, "setItemSize:", v4, v5);
  double v6 = *(void **)&v0[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_leadingArrow];
  id v7 = [v0 contentView];
  [v7 frame];

  CGRect.subtracting(insets:)([v0 layoutMargins]);
  objc_msgSend(v6, "sizeThatFits:", v8, v9);
  [v0 bounds];
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  id v14 = [v0 traitCollection];
  uint64_t v15 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  uint64_t v17 = &v16[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)uint64_t v17 = v11;
  *((void *)v17 + 1) = v13;
  *(void *)&v16[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_traitCollection] = v14;
  v58.id receiver = v16;
  v58.super_class = v15;

  id v18 = [v0 contentView];
  [v18 frame];

  *(void *)&v60.origin.x = CGRect.subtracting(insets:)([v0 layoutMargins]).n128_u64[0];
  CGRectGetMidY(v60);
  id v19 = [v0 traitCollection];
  id v20 = [v0 contentView];
  [v20 bounds];
  unint64_t v22 = v21;

  v23.n128_u64[0] = v22;
  double v24 = CGRect.withLayoutDirection(using:relativeTo:)(v19, v23);
  double v26 = v25;
  double v28 = v27;
  double v30 = v29;

  objc_msgSend(v6, "setFrame:", v24, v26, v28, v30);
  unsigned int v31 = *(void **)&v0[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_trailingArrow];
  id v32 = [v0 contentView];
  [v32 frame];

  CGRect.subtracting(insets:)([v0 layoutMargins]);
  objc_msgSend(v31, "sizeThatFits:", v33, v34);
  id v35 = [v0 contentView];
  [v35 frame];

  *(void *)&v61.origin.x = CGRect.subtracting(insets:)([v0 layoutMargins]).n128_u64[0];
  CGRectGetMaxX(v61);
  [v0 bounds];
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  id v40 = [v0 traitCollection];
  uint64_t v41 = (char *)objc_allocWithZone(v15);
  uint64_t v42 = &v41[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)uint64_t v42 = v37;
  *((void *)v42 + 1) = v39;
  *(void *)&v41[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_traitCollection] = v40;
  v57.id receiver = v41;
  v57.super_class = v15;

  id v43 = [v0 contentView];
  [v43 frame];

  *(void *)&v62.origin.x = CGRect.subtracting(insets:)([v0 layoutMargins]).n128_u64[0];
  CGRectGetMidY(v62);
  id v44 = [v0 traitCollection];
  id v45 = [v0 contentView];
  [v45 bounds];
  unint64_t v47 = v46;

  v48.n128_u64[0] = v47;
  double v49 = CGRect.withLayoutDirection(using:relativeTo:)(v44, v48);
  double v51 = v50;
  double v53 = v52;
  double v55 = v54;

  return objc_msgSend(v31, "setFrame:", v49, v51, v53, v55);
}

uint64_t sub_1001C1EE8()
{
  uint64_t v1 = sub_1000031E8(&qword_1002EB698);
  __chkstk_darwin(v1);
  id v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  double v4 = (objc_class *)type metadata accessor for HeroCarouselCollectionViewCell(0LL);
  v13.id receiver = v0;
  v13.super_class = v4;
  objc_msgSendSuper2(&v13, "prepareForReuse");
  uint64_t v5 = sub_1000031E8(&qword_1002EB568);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v3, 1LL, 1LL, v5);
  uint64_t v6 = (uint64_t)&v0[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_stateLens];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_stateLens], v12, 33LL, 0LL);
  sub_1001C55C8((uint64_t)v3, v6);
  swift_endAccess(v12);
  [*(id *)&v0[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_leadingArrow] setAlpha:0.0];
  [*(id *)&v0[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_trailingArrow] setAlpha:0.0];
  id v7 = &v0[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsCalculator];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsCalculator], v12, 1LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    uint64_t v9 = Strong;
    ImpressionsCalculator.removeAllElements()();
    swift_release(v9);
  }

  return swift_weakAssign(v7, 0LL);
}

id sub_1001C2070()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AutoScrollConfiguration(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v4);
  double v8 = &v19[-v7 - 8];
  uint64_t v9 = v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_autoScrollConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_autoScrollConfiguration, v19, 0LL, 0LL);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v11 = v10(v8, v9, v2);
  char v12 = AutoScrollConfiguration.isAutoScrollEnabled.getter(v11);
  objc_super v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v8, v2);
  if ((v12 & 1) == 0 || *(_BYTE *)(v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_isPlaying) != 1) {
    return [*(id *)(v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_carouselView) setScrollMode:2];
  }
  id v14 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_carouselView);
  [v14 setScrollMode:0];
  uint64_t v15 = v10(v6, v9, v2);
  double v16 = AutoScrollConfiguration.autoScrollInterval.getter(v15);
  v13(v6, v2);
  return [v14 setAutoscrollInterval:v16];
}

void sub_1001C21E8(void *a1, void *a2)
{
  v16.id receiver = v2;
  v16.super_class = (Class)type metadata accessor for HeroCarouselCollectionViewCell(0LL);
  objc_msgSendSuper2(&v16, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  id v5 = [a1 nextFocusedView];
  if (v5)
  {
    uint64_t v6 = v5;
    unsigned int v7 = [v5 isDescendantOfView:v2];
  }

  else
  {
    unsigned int v7 = 0;
  }

  id v8 = [a1 previouslyFocusedView];
  if (v8)
  {
    uint64_t v9 = v8;
    unsigned int v10 = [v8 isDescendantOfView:v2];

    if (v7 == v10) {
      return;
    }
  }

  else if ((v7 & 1) == 0)
  {
    return;
  }

  uint64_t v11 = swift_allocObject(&unk_10028D588, 24LL, 7LL);
  swift_unknownObjectWeakInit(v11 + 16, v2);
  uint64_t v12 = swift_allocObject(&unk_10028D678, 32LL, 7LL);
  *(_BYTE *)(v12 + swift_weakDestroy(v0 + 16) = v7;
  *(void *)(v12 + 2swift_weakDestroy(v0 + 4) = v11;
  v14[4] = sub_1001C55BC;
  uint64_t v15 = v12;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256LL;
  v14[2] = sub_100135408;
  v14[3] = &unk_10028D690;
  objc_super v13 = _Block_copy(v14);
  objc_msgSend(a2, "addCoordinatedAnimations:completion:", v13, 0, swift_release(v15).n128_f64[0]);
  _Block_release(v13);
}

void sub_1001C2374(char a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess(v2, v15, 0LL, 0LL);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2);
    if (Strong)
    {
      uint64_t v4 = (void *)Strong;
      id v5 = *(id *)(Strong + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_leadingArrow);

      [v5 setAlpha:1.0];
    }

    swift_beginAccess(v2, v14, 0LL, 0LL);
    uint64_t v6 = swift_unknownObjectWeakLoadStrong(v2);
    if (v6)
    {
      unsigned int v7 = (void *)v6;
      id v8 = *(id *)(v6 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_trailingArrow);

      [v8 setAlpha:1.0];
LABEL_10:
    }
  }

  else
  {
    swift_beginAccess(v2, v15, 0LL, 0LL);
    uint64_t v9 = swift_unknownObjectWeakLoadStrong(v2);
    if (v9)
    {
      unsigned int v10 = (void *)v9;
      id v11 = *(id *)(v9 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_leadingArrow);

      [v11 setAlpha:0.0];
    }

    swift_beginAccess(v2, v14, 0LL, 0LL);
    uint64_t v12 = swift_unknownObjectWeakLoadStrong(v2);
    if (v12)
    {
      objc_super v13 = (void *)v12;
      id v8 = *(id *)(v12 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_trailingArrow);

      [v8 setAlpha:0.0];
      goto LABEL_10;
    }
  }

void sub_1001C254C()
{
  *(_BYTE *)(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_isPlaying) = 1;
  sub_1001C2070();
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_carouselView), "focusedCell"));
  if (v1)
  {
    id v8 = v1;
    uint64_t v2 = type metadata accessor for HeroCarouselItemView();
    uint64_t v3 = swift_dynamicCastClass(v8, v2);
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong( *(void *)(*(void *)(v3 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_contentBackgroundView)
                                 + OBJC_IVAR____TtC6Arcade30HeroCarouselItemBackgroundView_videoContainer)
                     + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (!Strong) {
      goto LABEL_6;
    }
    id v5 = Strong;
    Strong[qword_1002F0800] = 1;
    if (Strong[qword_1002F0818] == 1)
    {

LABEL_6:
      return;
    }

    swift_beginAccess(&Strong[qword_1002F0830], v9, 32LL, 0LL);
    id v6 = v5;
    char v7 = VideoConfiguration.allowsAutoPlay.getter(v6);
    swift_endAccess(v9);
    if ((v7 & 1) != 0)
    {
      if (qword_1002DCC10 != -1) {
        swift_once(&qword_1002DCC10, sub_10011449C);
      }
      if ((sub_1001144C8() & 1) != 0) {
        sub_10012B2E8();
      }
    }
  }

void sub_1001C26D0()
{
  *(_BYTE *)(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_isPlaying) = 0;
  sub_1001C2070();
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_carouselView), "focusedCell"));
  if (v1)
  {
    id v7 = v1;
    uint64_t v2 = type metadata accessor for HeroCarouselItemView();
    uint64_t v3 = swift_dynamicCastClass(v7, v2);
    if (v3)
    {
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong( *(void *)(*(void *)(v3 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_contentBackgroundView)
                                   + OBJC_IVAR____TtC6Arcade30HeroCarouselItemBackgroundView_videoContainer)
                       + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
      if (Strong)
      {
        id v5 = Strong;
        *((_BYTE *)Strong + qword_1002F0800) = 0;
        if ((*((_BYTE *)Strong + qword_1002F0818) & 1) == 0)
        {
          id v6 = Strong;
          sub_10012A580();

          id v7 = v6;
        }
      }
    }
  }

uint64_t sub_1001C27D0()
{
  sub_100006060(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_heroCarousel, (uint64_t *)&unk_1002EB6C0);
  sub_100006060(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_stateLens, &qword_1002EB698);
  swift_weakDestroy(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsCalculator);
  sub_10000D3D8( *(void *)(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsUpdateBlock),  *(void *)(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsUpdateBlock + 8));

  uint64_t v1 = v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_autoScrollConfiguration;
  uint64_t v2 = type metadata accessor for AutoScrollConfiguration(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_100006060( v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_currentTitleEffect,  (uint64_t *)&unk_1002EA730);
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_onUpdatePageTitleEffect));
  sub_1000087D8(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_playbackId);
  return swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_visibilityTrackingView);
}

id sub_1001C2920()
{
  return sub_10000D18C(type metadata accessor for HeroCarouselCollectionViewCell);
}

uint64_t sub_1001C2A80()
{
  return type metadata accessor for HeroCarouselCollectionViewCell(0LL);
}

uint64_t type metadata accessor for HeroCarouselCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002EB538;
  if (!qword_1002EB538) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeroCarouselCollectionViewCell);
  }
  return result;
}

void sub_1001C2AC4(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v12[0] = *(void *)(v2 - 8) + 64LL;
    v12[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v12[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v12[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v12[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_1001C2C34(319LL, &qword_1002EB550, &qword_1002EB558);
    if (v5 <= 0x3F)
    {
      v12[5] = *(void *)(v4 - 8) + 64LL;
      sub_1001C2C34(319LL, &qword_1002EB560, &qword_1002EB568);
      if (v7 <= 0x3F)
      {
        v12[6] = *(void *)(v6 - 8) + 64LL;
        v12[7] = "\b";
        v12[8] = &unk_1002411E8;
        v12[9] = &unk_100241200;
        v12[10] = &unk_100241200;
        uint64_t v8 = type metadata accessor for AutoScrollConfiguration(319LL);
        if (v9 <= 0x3F)
        {
          v12[11] = *(void *)(v8 - 8) + 64LL;
          sub_100023098( 319LL,  &qword_1002EB570,  (uint64_t (*)(uint64_t))&type metadata accessor for TitleEffect);
          if (v11 <= 0x3F)
          {
            v12[12] = *(void *)(v10 - 8) + 64LL;
            v12[13] = (char *)&value witness table for Builtin.NativeObject + 64;
            v12[14] = &unk_100241218;
            v12[15] = &unk_100241230;
            v12[16] = &unk_100241230;
            v12[17] = "\b";
            swift_updateClassMetadata2(a1, 256LL, 18LL, v12, a1 + 472);
          }
        }
      }
    }
  }

void sub_1001C2C34(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    uint64_t v5 = sub_100003274(a3);
    unint64_t v6 = type metadata accessor for Optional(a1, v5);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }

uint64_t sub_1001C2C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_playbackId;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_10001F054(v3, a1);
}

uint64_t sub_1001C2CD0()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_isPlaying);
}

uint64_t sub_1001C2CE8()
{
  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_visibilityTrackingView);
}

uint64_t sub_1001C2CF8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsCalculator, v3, 0LL, 0LL);
  return swift_weakLoadStrong(v1);
}

uint64_t sub_1001C2D40(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v3, v5, 1LL, 0LL);
  swift_weakAssign(v3, a1);
  return swift_release(a1);
}

void (*sub_1001C2D98(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33LL, 0LL);
  v3[3] = swift_weakLoadStrong(v5);
  return sub_10012CF44;
}

uint64_t sub_1001C2E08()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsUpdateBlock, v4, 0LL, 0LL);
  uint64_t v2 = *v1;
  sub_100017A40(*v1, v1[1]);
  return v2;
}

uint64_t sub_1001C2E60(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1LL, 0LL);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_10000D3D8(v6, v7);
}

uint64_t (*sub_1001C2EBC(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

void (*sub_1001C2F00(uint64_t a1, uint64_t a2))()
{
  uint64_t v4 = swift_allocObject(&unk_10028D588, 24LL, 7LL);
  swift_unknownObjectWeakInit(v4 + 16, v2);
  uint64_t v5 = swift_allocObject(&unk_10028D5B0, 24LL, 7LL);
  swift_weakInit(v5 + 16, a2);
  uint64_t v6 = swift_allocObject(&unk_10028D5D8, 32LL, 7LL);
  *(void *)(v6 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)(v6 + 2swift_weakDestroy(v0 + 4) = v5;
  return sub_1001C483C;
}

uint64_t sub_1001C2F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_currentTitleEffect;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_10001027C(v3, a1, (uint64_t *)&unk_1002EA730);
}

uint64_t sub_1001C2FF4()
{
  return swift_retain(*(void *)(*v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_onUpdatePageTitleEffect));
}

void sub_1001C31D4(void *a1)
{
  uint64_t v3 = objc_opt_self(&OBJC_CLASS___UIView);
  uint64_t v4 = swift_allocObject(&unk_10028D600, 24LL, 7LL);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = a1;
  uint64_t v5 = swift_allocObject(&unk_10028D628, 32LL, 7LL);
  *(void *)(v5 + swift_weakDestroy(v0 + 16) = sub_1001C5558;
  *(void *)(v5 + 2swift_weakDestroy(v0 + 4) = v4;
  double v34 = sub_100061B54;
  uint64_t v35 = v5;
  *(void *)&__int128 aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256LL;
  *(void *)&__int128 v33 = sub_100209610;
  *((void *)&v33 + 1) = &unk_10028D640;
  uint64_t v6 = _Block_copy(&aBlock);
  uint64_t v7 = v35;
  id v8 = a1;
  swift_retain(v5);
  objc_msgSend((id)v3, "performWithoutAnimation:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v5, "", 139LL, 352LL, 40LL, 1LL);
  *(void *)&double v9 = swift_release(v5).n128_u64[0];
  if ((v3 & 1) == 0)
  {
    id v10 = objc_msgSend(v8, "visibleCells", v9);
    uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, (char *)&type metadata for Any + 8);

    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = v11 + 32;
      swift_bridgeObjectRetain(v11);
      while (1)
      {
        sub_100008364(v13, (uint64_t)v31);
        sub_100008364((uint64_t)v31, (uint64_t)&aBlock);
        uint64_t v14 = type metadata accessor for HeroCarouselItemView();
        if (swift_dynamicCast(&v30, &aBlock, (char *)&type metadata for Any + 8, v14, 6LL))
        {
          id v15 = v30;
          [v30 center];
          double v17 = v16;
          id v18 = [v8 _collectionView];
          [v18 contentOffset];
          double v20 = v19;

          [v8 frame];
          CGFloat Width = CGRectGetWidth(v36);
          uint64_t v22 = MeasurementRange.init(minimum:maximum:)(0LL, 0LL, *(void *)&Width, 0LL);
          LOBYTE(aBlock) = v23 & 1;
          LOBYTE(v30) = v24 & 1;
          LOBYTE(v18) = MeasurementRange.contains(_:)(v22, v17 - v20);
        }

        _s6Arcade17PillOverlayLayoutVwxx_0(v31);
        v13 += 32LL;
        if (!--v12)
        {
          swift_bridgeObjectRelease(v11);
          goto LABEL_10;
        }
      }

      swift_bridgeObjectRelease(v11);
      sub_1000086FC(v31, &aBlock);
      swift_bridgeObjectRelease(v11);
      if (*((void *)&v33 + 1)) {
        goto LABEL_11;
      }
    }

    else
    {
LABEL_10:
      __int128 aBlock = 0u;
      __int128 v33 = 0u;
      swift_bridgeObjectRelease(v11);
      if (*((void *)&v33 + 1))
      {
LABEL_11:
        uint64_t v26 = type metadata accessor for HeroCarouselItemView();
        int v27 = swift_dynamicCast(v31, &aBlock, (char *)&type metadata for Any + 8, v26, 6LL);
        double v25 = *(void **)&v31[0];
        if (!v27) {
          double v25 = 0LL;
        }
        goto LABEL_13;
      }
    }

    sub_100006060((uint64_t)&aBlock, (uint64_t *)&unk_1002DF680);
    double v25 = 0LL;
LABEL_13:
    double v28 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_focusedCarouselItemView);
    *(void *)(v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_focusedCarouselItemView) = v25;
    id v29 = v25;
    sub_1001C1168((uint64_t)v28);
    swift_release(v4);

    return;
  }

  __break(1u);
}

void sub_1001C3530(void *a1)
{
  id v1 = [a1 _collectionView];
  [v1 layoutIfNeeded];
}

void sub_1001C360C(uint64_t a1, uint64_t a2)
{
  uint64_t v105 = type metadata accessor for ImpressionMetrics.ID(0LL);
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v103 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002E5350);
  __chkstk_darwin(v5);
  double v102 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  double v9 = (char *)&v94 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v94 - v11;
  __n128 v14 = __chkstk_darwin(v13);
  double v16 = (char *)&v94 - v15;
  double v17 = (char *)type metadata accessor for ImpressionMetrics(0LL, v14);
  uint64_t v18 = *((void *)v17 - 1);
  __chkstk_darwin(v17);
  id v101 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v94 - v21;
  __chkstk_darwin(v23);
  double v25 = (char *)&v94 - v24;
  __chkstk_darwin(v26);
  double v28 = (char *)&v94 - v27;
  a1 += 16LL;
  swift_beginAccess(a1, v107, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong) {
    return;
  }
  id v30 = (char *)Strong;
  uint64_t v31 = a2 + 16;
  swift_beginAccess(v31, v106, 0LL, 0LL);
  uint64_t v32 = swift_weakLoadStrong(v31);
  if (!v32)
  {

    return;
  }

  uint64_t v100 = v32;
  uint64_t v98 = v22;
  __int128 v33 = *(void **)&v30[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_previouslyFocusedCarouselItemView];
  if (v33)
  {
    unint64_t v99 = v17;
    uint64_t v34 = *(void *)((char *)v33 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem);
    if (!v34)
    {
      double v17 = v99;
      (*(void (**)(char *, uint64_t, uint64_t, char *))(v18 + 56))(v16, 1LL, 1LL, v99);
      goto LABEL_9;
    }

    __int128 v97 = (void (*)(char *, char *, char *))OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem;
    uint64_t v35 = v33;
    __n128 v36 = swift_retain(v34);
    HeroCarouselItem.impressionMetrics.getter(v36);
    __n128 v37 = swift_release(v34);
    uint64_t v38 = v99;
    double v95 = *(unsigned int (**)(char *, uint64_t, char *, __n128))(v18 + 48);
    if (v95(v16, 1LL, v99, v37) == 1)
    {

      double v17 = v38;
LABEL_9:
      sub_100006060((uint64_t)v16, (uint64_t *)&unk_1002E5350);
      goto LABEL_18;
    }

    __int128 v94 = v35;
    uint64_t v96 = v18;
    uint64_t v39 = *(uint64_t (**)(char *, char *, char *))(v18 + 32);
    uint64_t v40 = v39(v28, v16, v38);
    uint64_t v41 = v103;
    ImpressionMetrics.id.getter(v40);
    memset(v110, 0, sizeof(v110));
    char v111 = 1;
    uint64_t v42 = ImpressionsCalculator.childCalculator(for:viewBounds:)(v41, v110);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v41, v105);
    if (!v42) {
      goto LABEL_17;
    }
    uint64_t v43 = *(void *)((char *)v97 + (void)v33);
    if (v43
      && (__n128 v44 = swift_retain(*(void *)((char *)v97 + (void)v33)),
          uint64_t v45 = HeroCarouselItem.overlay.getter(v44),
          __n128 v46 = swift_release(v43),
          v45))
    {
      uint64_t v47 = v42;
      HeroCarouselItemOverlay.impressionMetrics.getter(v46);
      __n128 v48 = swift_release(v45);
      double v49 = v99;
      if (v95(v12, 1LL, v99, v48) != 1)
      {
        v39(v25, v12, v49);
        ImpressionsCalculator.removeElement(_:)(v25);
        __n128 v50 = swift_release(v47);
        (*(void (**)(char *, char *, __n128))(v96 + 8))(v25, v49, v50);
LABEL_17:
        ImpressionsCalculator.removeElement(_:)(v28);

        uint64_t v18 = v96;
        double v17 = v99;
        (*(void (**)(char *, char *))(v96 + 8))(v28, v99);
        goto LABEL_18;
      }
    }

    else
    {
      uint64_t v47 = v42;
      (*(void (**)(char *, uint64_t, uint64_t, char *))(v96 + 56))(v12, 1LL, 1LL, v99);
    }

    swift_release(v47);
    sub_100006060((uint64_t)v12, (uint64_t *)&unk_1002E5350);
    goto LABEL_17;
  }

id sub_1001C3F64()
{
  return sub_10000D18C((uint64_t (*)(void))type metadata accessor for CarouselView);
}

uint64_t type metadata accessor for CarouselView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6ArcadeP33_BFB9D26CF834316426B97805E34A499012CarouselView);
}

int64x2_t sub_1001C3F90()
{
  int64x2_t result = vdupq_n_s64(0x4054000000000000uLL);
  xmmword_1002EB4D8 = (__int128)result;
  return result;
}

char *sub_1001C3FA8()
{
  uint64_t v1 = OBJC_IVAR____TtC6ArcadeP33_BFB9D26CF834316426B97805E34A499011PagingArrow_visualEffectBackground;
  id v2 = objc_allocWithZone(&OBJC_CLASS___UIVisualEffectView);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC6ArcadeP33_BFB9D26CF834316426B97805E34A499011PagingArrow_arrowImageView;
  *(void *)&v3[v4] = [objc_allocWithZone(UIImageView) init];

  v24.id receiver = v3;
  v24.super_class = (Class)type metadata accessor for PagingArrow();
  uint64_t v5 = (char *)objc_msgSendSuper2(&v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v5 setClipsToBounds:1];
  uint64_t v6 = OBJC_IVAR____TtC6ArcadeP33_BFB9D26CF834316426B97805E34A499011PagingArrow_visualEffectBackground;
  uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC6ArcadeP33_BFB9D26CF834316426B97805E34A499011PagingArrow_visualEffectBackground];
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v9 = swift_allocObject(v8, 40LL, 7LL);
  *(_OWORD *)(v9 + swift_weakDestroy(v0 + 16) = xmmword_100233570;
  uint64_t v10 = (void *)objc_opt_self(&OBJC_CLASS___PagingArrowBackgroundEffect);
  id v11 = v7;
  id v12 = [v10 effectWithStyle:4005];
  *(void *)(v9 + 32) = v12;
  specialized Array._endMutation()(v12);
  sub_100006028(0LL, &qword_1002E3320, &OBJC_CLASS___UIVisualEffect_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v11, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  uint64_t v14 = OBJC_IVAR____TtC6ArcadeP33_BFB9D26CF834316426B97805E34A499011PagingArrow_arrowImageView;
  uint64_t v15 = *(void **)&v5[OBJC_IVAR____TtC6ArcadeP33_BFB9D26CF834316426B97805E34A499011PagingArrow_arrowImageView];
  double v16 = (void *)objc_opt_self(&OBJC_CLASS___UIImageSymbolConfiguration);
  id v17 = v15;
  id v18 = [v16 configurationWithTextStyle:UIFontTextStyleHeadline scale:2];
  [v17 setPreferredSymbolConfiguration:v18];

  id v19 = *(id *)&v5[v14];
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [(id)objc_opt_self(UIImage) systemImageNamed:v20];

  [v19 setImage:v21];
  [v5 addSubview:*(void *)&v5[v6]];
  [v5 addSubview:*(void *)&v5[v14]];
  id v22 = [v5 layer];
  if (qword_1002DD0C8 != -1) {
    swift_once(&qword_1002DD0C8, sub_1001C3F90);
  }
  [v22 setCornerRadius:*(double *)&xmmword_1002EB4D8 * 0.5];

  return v5;
}

void sub_1001C4508()
{
  uint64_t v1 = v0;
  v5.id receiver = v0;
  v5.super_class = (Class)type metadata accessor for PagingArrow();
  objc_msgSendSuper2(&v5, "didMoveToSuperview");
  id v2 = [v0 traitCollection];
  char v3 = UITraitCollection.prefersRightToLeftLayouts.getter();

  id v4 = [v1 layer];
  [v4 setFlipsHorizontalAxis:v3 & 1];
}

void sub_1001C45DC(uint64_t a1)
{
  id v2 = v1;
  v11.id receiver = v2;
  v11.super_class = (Class)type metadata accessor for PagingArrow();
  id v4 = objc_msgSendSuper2(&v11, "traitCollectionDidChange:", a1);
  if (a1) {
    int v5 = UITraitCollection.prefersRightToLeftLayouts.getter(v4) & 1;
  }
  else {
    int v5 = 2;
  }
  id v6 = [v2 traitCollection];
  int v7 = UITraitCollection.prefersRightToLeftLayouts.getter(v6);

  if (v5 == 2 || ((v7 ^ (v5 != 0)) & 1) != 0)
  {
    id v8 = [v2 traitCollection];
    char v9 = UITraitCollection.prefersRightToLeftLayouts.getter(v8);

    id v10 = [v2 layer];
    [v10 setFlipsHorizontalAxis:v9 & 1];
  }

id sub_1001C4764()
{
  return sub_10000D18C((uint64_t (*)(void))type metadata accessor for PagingArrow);
}

uint64_t type metadata accessor for PagingArrow()
{
  return objc_opt_self(&OBJC_CLASS____TtC6ArcadeP33_BFB9D26CF834316426B97805E34A499011PagingArrow);
}

uint64_t sub_1001C47C8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001C47EC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001C4810()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1001C483C()
{
}

uint64_t sub_1001C4844()
{
  uint64_t v1 = sub_1000031E8(&qword_1002EB558);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002EB6C0);
  __chkstk_darwin(v5);
  int v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v8 = v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_heroCarousel;
  swift_beginAccess(v8, v16, 0LL, 0LL);
  sub_10001027C(v8, (uint64_t)v7, (uint64_t *)&unk_1002EB6C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1LL, v1))
  {
    sub_100006060((uint64_t)v7, (uint64_t *)&unk_1002EB6C0);
    return 0LL;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_100006060((uint64_t)v7, (uint64_t *)&unk_1002EB6C0);
    ObjectGraphPair.value.getter(&v15);
    uint64_t v10 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v11 = v15;
    uint64_t v12 = HeroCarousel.items.getter(v10);
    swift_release(v11);
    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0) {
        uint64_t v14 = v12;
      }
      else {
        uint64_t v14 = v12 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v12);
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease(v12);
    }

    else
    {
      uint64_t v9 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    swift_bridgeObjectRelease(v12);
  }

  return v9;
}

uint64_t sub_1001C49EC(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeroCarouselItemView();
  ObjCClassFromMetadatCGFloat a = (objc_class *)swift_getObjCClassFromMetadata(v4);
  uint64_t v6 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  uint64_t v8 = v7;

  NSString v9 = String._bridgeToObjectiveC()();
  id v10 =  objc_msgSend( a1,  "dequeueReusableCellWithReuseIdentifier:forIndex:",  v9,  a2,  swift_bridgeObjectRelease(v8).n128_f64[0]);

  _bridgeAnyObjectToAny(_:)(v14, v10);
  swift_unknownObjectRelease(v10);
  uint64_t v11 = sub_100006028(0LL, (unint64_t *)&qword_1002EDEC0, &OBJC_CLASS___UICollectionViewCell_ptr);
  swift_dynamicCast(&v13, v14, (char *)&type metadata for Any + 8, v11, 7LL);
  return v13;
}

void sub_1001C4AE0(uint64_t (*a1)(char *, uint64_t), unint64_t a2)
{
  unint64_t v39 = a2;
  uint64_t v4 = sub_1000031E8(&qword_1002EB558);
  uint64_t v5 = *(void **)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002EB6C0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = (uint64_t)v2 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_heroCarousel;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_heroCarousel, v41, 0LL, 0LL);
  sub_10001027C(v14, (uint64_t)v13, (uint64_t *)&unk_1002EB6C0);
  unint64_t v15 = v5[6];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v15)(v13, 1LL, v4))
  {
    uint64_t v16 = (uint64_t)v13;
LABEL_5:
    sub_100006060(v16, (uint64_t *)&unk_1002EB6C0);
    return;
  }

  __n128 v37 = v2;
  uint64_t v38 = a1;
  id v17 = (void (*)(char *, char *, uint64_t))v5[2];
  v17(v7, v13, v4);
  sub_100006060((uint64_t)v13, (uint64_t *)&unk_1002EB6C0);
  ObjectGraphPair.value.getter(&v40);
  id v18 = (uint64_t (*)(char *, uint64_t))v5[1];
  uint64_t v19 = v18(v7, v4);
  uint64_t v20 = v40;
  uint64_t v21 = HeroCarousel.items.getter(v19);
  swift_release(v20);
  sub_10001027C(v14, (uint64_t)v10, (uint64_t *)&unk_1002EB6C0);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v15)(v10, 1LL, v4))
  {
    swift_bridgeObjectRelease(v21);
    uint64_t v16 = (uint64_t)v10;
    goto LABEL_5;
  }

  v17(v7, v10, v4);
  sub_100006060((uint64_t)v10, (uint64_t *)&unk_1002EB6C0);
  uint64_t v22 = ObjectGraphPair.objectGraph.getter(v4);
  v18(v7, v4);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0) {
      uint64_t v34 = v21;
    }
    else {
      uint64_t v34 = v21 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v21);
    unint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v21);
    if ((v23 & 0x8000000000000000LL) != 0)
    {
      __break(1u);
LABEL_25:
      uint64_t v35 = v18;
      unint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v21);
      goto LABEL_14;
    }
  }

  else
  {
    unint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  id v17 = v37;
  id v18 = v38;
  unint64_t v15 = v39;
  if ((v39 & 0x8000000000000000LL) != 0
    || v23 <= v39
    || (uint64_t v24 = type metadata accessor for HeroCarouselItemView(), (v25 = swift_dynamicCastClass(v18, v24)) == 0))
  {
    swift_bridgeObjectRelease(v21);
    goto LABEL_18;
  }

  uint64_t v4 = v25;
  if ((v21 & 0xC000000000000001LL) != 0) {
    goto LABEL_25;
  }
  if (*(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10) <= v15)
  {
    __break(1u);
    goto LABEL_27;
  }

  unint64_t v15 = *(void *)(v21 + 8 * v15 + 32);
  uint64_t v26 = v18;
  swift_retain(v15);
LABEL_14:
  swift_bridgeObjectRelease(v21);
  if (qword_1002DD0B8 != -1) {
LABEL_27:
  }
    swift_once(&qword_1002DD0B8, sub_1001C0A30);
  *(void *)(v4 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayBottomInset) = qword_1002EB4C8;
  sub_10004F6F8(v15, v22);
  uint64_t v27 = ObjectGraph.artworkLoader.getter();
  if (v27)
  {
    uint64_t v28 = v27;
    id v29 = [v17 contentView];
    [v29 frame];

    CGRect.subtracting(insets:)([v17 layoutMargins]);
    sub_10012F11C(v30, v31, v15, v28);
    uint64_t v33 = HeroCarouselItem.overlay.getter(v32);
    swift_release(v28);

    swift_release(v15);
    swift_release(v22);
    swift_release(v33);
    return;
  }

  swift_release(v15);
LABEL_18:
  swift_release(v22);
}

uint64_t sub_1001C4EE0(uint64_t a1)
{
  uint64_t v3 = sub_1000031E8(&qword_1002EB568);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = sub_1000031E8(&qword_1002EB698);
  __chkstk_darwin(v7);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_stateLens;
  swift_beginAccess(v10, v15, 0LL, 0LL);
  sub_10001027C(v10, (uint64_t)v9, &qword_1002EB698);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  uint64_t v12 = sub_100006060((uint64_t)v9, &qword_1002EB698);
  __chkstk_darwin(v12);
  *(&v14 - 2) = a1;
  unint64_t v13 = sub_1001C54F0();
  WritableStateLens<A>.updateValue(_:)(sub_1001C5588, &v14 - 4, v3, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

double sub_1001C5070(void *a1)
{
  uint64_t v3 = sub_1000031E8(&qword_1002EB558);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002EB6C0);
  __chkstk_darwin(v7);
  uint64_t v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = v1 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_heroCarousel;
  swift_beginAccess(v10, v39, 0LL, 0LL);
  sub_10001027C(v10, (uint64_t)v9, (uint64_t *)&unk_1002EB6C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1LL, v3))
  {
    sub_100006060((uint64_t)v9, (uint64_t *)&unk_1002EB6C0);
    return result;
  }

  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_100006060((uint64_t)v9, (uint64_t *)&unk_1002EB6C0);
  uint64_t v12 = ObjectGraphPair.objectGraph.getter(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v13 = type metadata accessor for HeroCarouselItemView();
  uint64_t v14 = swift_dynamicCastClass(a1, v13);
  if (!v14) {
    goto LABEL_17;
  }
  uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_contentBackgroundView);
  uint64_t v16 = OBJC_IVAR____TtC6Arcade30HeroCarouselItemBackgroundView_videoContainer;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v15 + OBJC_IVAR____TtC6Arcade30HeroCarouselItemBackgroundView_videoContainer)
           + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (!Strong)
  {
    id v25 = a1;
    goto LABEL_11;
  }

  id v18 = (char *)Strong;
  uint64_t v19 = qword_1002E70D8;
  uint64_t v20 = *(void **)(Strong + qword_1002E70D8);
  if (!v20)
  {
    id v26 = a1;
    goto LABEL_10;
  }

  id v21 = a1;
  id v22 = v20;
  dispatch thunk of VideoPlayer.releaseAssets()();

  unint64_t v23 = *(void **)&v18[v19];
  if (!v23)
  {
LABEL_10:

    goto LABEL_11;
  }

  id v24 = v23;
  dispatch thunk of VideoPlayer.restart()();

LABEL_11:
  uint64_t v27 = ObjectGraph.artworkLoader.getter();
  if (v27)
  {
    uint64_t v28 = v27;
    id v29 = *(void **)(v15 + OBJC_IVAR____TtC6Arcade30HeroCarouselItemBackgroundView_artworkView);
    if (v29)
    {
      uint64_t v30 = type metadata accessor for ArtworkView(0LL);
      uint64_t v31 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
      id v32 = v29;
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v32, 1LL, v30, v31);
    }

    uint64_t v33 = swift_unknownObjectWeakLoadStrong(*(void *)(v15 + v16) + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (v33)
    {
      uint64_t v34 = (void *)v33;
      uint64_t v35 = type metadata accessor for VideoView(0LL);
      uint64_t v36 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v34, 0LL, v35, v36);

      swift_release(v12);
    }

    else
    {

      swift_release(v12);
    }

    uint64_t v37 = v28;
    goto LABEL_20;
  }

LABEL_17:
  uint64_t v37 = v12;
LABEL_20:
  *(void *)&double result = swift_release(v37).n128_u64[0];
  return result;
}

uint64_t sub_1001C536C()
{
  uint64_t v1 = sub_1000031E8(&qword_1002EB568);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000031E8(&qword_1002EB698);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = v0 + OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_stateLens;
  swift_beginAccess(v8, v17, 0LL, 0LL);
  sub_10001027C(v8, (uint64_t)v7, &qword_1002EB698);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1LL, v1))
  {
    sub_100006060((uint64_t)v7, &qword_1002EB698);
    return 0LL;
  }

  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  sub_100006060((uint64_t)v7, &qword_1002EB698);
  uint64_t KeyPath = swift_getKeyPath(&unk_100241360, v9);
  unint64_t v11 = sub_1001C54F0();
  WritableStateLens<A>.subscript.getter(&v15, KeyPath, v1, v11);
  __n128 v12 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v12);
  if (v16 == 1) {
    return 0LL;
  }
  return v15;
}

unint64_t sub_1001C54F0()
{
  unint64_t result = qword_1002EB6A0;
  if (!qword_1002EB6A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100242660, &_s14descr10028F251C5StateVN);
    atomic_store(result, (unint64_t *)&qword_1002EB6A0);
  }

  return result;
}

uint64_t sub_1001C5534()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1001C5558()
{
}

uint64_t sub_1001C5560()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1001C5570(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001C5580(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001C5588(uint64_t result)
{
  *(void *)unint64_t result = *(void *)(v1 + 16);
  *(_BYTE *)(result + 8) = 0;
  return result;
}

uint64_t sub_1001C5598()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1001C55BC()
{
}

uint64_t sub_1001C55C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002EB698);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

char *sub_1001C5618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000031E8(&qword_1002EB798);
  __chkstk_darwin(v9);
  __n128 v56 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002EB7A0);
  __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = sub_1000031E8((uint64_t *)&unk_1002EB788);
  __chkstk_darwin(v16);
  id v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = &v4[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetsPresenter];
  swift_weakInit(&v4[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetsPresenter], 0LL);
  uint64_t v20 = &v4[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_delegate];
  *((void *)v20 + 1) = 0LL;
  swift_unknownObjectWeakInit(v20, 0LL);
  *(void *)&v4[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_areButtonsEnabled] = 0;
  *(void *)&v4[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetAlertController] = 0LL;
  swift_weakAssign(v19, a1);
  *((void *)v20 + 1) = a3;
  uint64_t v55 = a2;
  swift_unknownObjectWeakAssign(v20, a2);
  *(void *)&v4[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_objectGraph] = a4;
  id v21 = (objc_class *)type metadata accessor for PageFacetsHeaderView();
  v61.id receiver = v4;
  v61.super_class = v21;
  uint64_t v57 = a4;
  swift_retain(a4);
  id v22 = (char *)objc_msgSendSuper2(&v61, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v54 = a1;
  PageFacetsPresenter.pageFacets.getter();
  sub_1001C6430((uint64_t)v18);
  sub_100006060((uint64_t)v18, (uint64_t *)&unk_1002EB788);
  unint64_t v23 = &v22[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetsPresenter];
  uint64_t Strong = swift_weakLoadStrong(&v22[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetsPresenter]);
  if (Strong)
  {
    uint64_t v25 = PageFacetsPresenter.onFacetStateDidChange.getter();
    swift_release(Strong);
    uint64_t v26 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v27 = static OS_dispatch_queue.main.getter(v26);
    uint64_t v59 = v26;
    CGRect v60 = &protocol witness table for OS_dispatch_queue;
    v58[0] = v27;
    uint64_t v28 = sub_1000031E8(&qword_1002EB7B0);
    uint64_t v29 = sub_100061B94(&qword_1002EB7B8, &qword_1002EB7B0, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
    EventEmitter.addObserver<A>(on:target:method:)(v58, v22, sub_1001C5BA8, 0LL, v28, v21, v29);
    swift_release(v25);
    _s6Arcade17PillOverlayLayoutVwxx_0(v58);
    uint64_t v30 = sub_1000031E8(&qword_1002EB7C0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v15, 0LL, 1LL, v30);
  }

  else
  {
    uint64_t v31 = sub_1000031E8(&qword_1002EB7C0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v15, 1LL, 1LL, v31);
  }

  sub_100006060((uint64_t)v15, (uint64_t *)&unk_1002EB7A0);
  uint64_t v32 = swift_weakLoadStrong(v23);
  uint64_t v33 = (uint64_t)v56;
  uint64_t v34 = (uint64_t)v53;
  if (v32)
  {
    uint64_t v35 = v32;
    uint64_t v36 = PageFacetsPresenter.onSelectedFacetOptionsChanged.getter();
    swift_release(v35);
    uint64_t v37 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v38 = static OS_dispatch_queue.main.getter(v37);
    uint64_t v59 = v37;
    CGRect v60 = &protocol witness table for OS_dispatch_queue;
    v58[0] = v38;
    uint64_t v39 = sub_1000031E8(&qword_1002EB7B0);
    uint64_t v40 = sub_100061B94(&qword_1002EB7B8, &qword_1002EB7B0, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
    EventEmitter.addObserver<A>(on:target:method:)(v58, v22, sub_1001C5BFC, 0LL, v39, v21, v40);
    swift_release(v36);
    _s6Arcade17PillOverlayLayoutVwxx_0(v58);
    uint64_t v41 = sub_1000031E8(&qword_1002EB7C0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v34, 0LL, 1LL, v41);
  }

  else
  {
    uint64_t v42 = sub_1000031E8(&qword_1002EB7C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56LL))(v34, 1LL, 1LL, v42);
  }

  sub_100006060(v34, (uint64_t *)&unk_1002EB7A0);
  uint64_t v43 = swift_weakLoadStrong(v23);
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = PageFacetsPresenter.onPerformPageFacetsChangeAction.getter();
    swift_release(v44);
    uint64_t v46 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v47 = static OS_dispatch_queue.main.getter(v46);
    uint64_t v59 = v46;
    CGRect v60 = &protocol witness table for OS_dispatch_queue;
    v58[0] = v47;
    uint64_t v48 = sub_1000031E8(&qword_1002EB7C8);
    uint64_t v49 = sub_100061B94(&qword_1002EB7D0, &qword_1002EB7C8, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
    EventEmitter.addObserver<A>(on:target:method:)(v58, v22, sub_1001C5E28, 0LL, v48, v21, v49);
    swift_release(v45);

    swift_release(v54);
    swift_unknownObjectRelease(v55);
    swift_release(v57);
    _s6Arcade17PillOverlayLayoutVwxx_0(v58);
    uint64_t v50 = sub_1000031E8(&qword_1002EB7D8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56LL))(v33, 0LL, 1LL, v50);
  }

  else
  {

    swift_release(v54);
    swift_unknownObjectRelease(v55);
    swift_release(v57);
    uint64_t v51 = sub_1000031E8(&qword_1002EB7D8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56LL))(v33, 1LL, 1LL, v51);
  }

  sub_100006060(v33, &qword_1002EB798);
  return v22;
}

uint64_t (*sub_1001C5BA8(void *a1))()
{
  *(void *)(swift_allocObject(&unk_10028D9A0, 24LL, 7LL) + swift_weakDestroy(v0 + 16) = a1;
  id v2 = a1;
  return sub_1001C8B68;
}

void (*sub_1001C5BFC(void *a1))(uint64_t a1)
{
  *(void *)(swift_allocObject(&unk_10028D978, 24LL, 7LL) + swift_weakDestroy(v0 + 16) = a1;
  id v2 = a1;
  return sub_1001C8B50;
}

void sub_1001C5C50(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002EB788);
  __n128 v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  PageFacetsPresenter.FacetsState.facets.getter(v4);
  sub_1001C6430((uint64_t)v6);
  sub_100006060((uint64_t)v6, (uint64_t *)&unk_1002EB788);
  id v7 = [a2 superview];
  [v7 setNeedsLayout];

  id v8 = [a2 superview];
  [v8 layoutIfNeeded];
}

uint64_t sub_1001C5D2C(uint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    uint64_t v9 = result;
    v13[3] = type metadata accessor for PageFacetsHeaderView();
    v13[0] = a2;
    uint64_t v10 = *(void *)&a2[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_objectGraph];
    (*(void (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for ActionRunner.Origin.userInitiated(_:),  v4);
    uint64_t v11 = a2;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, v13, v7, v10);
    __n128 v12 = swift_release(v9);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v12);
    return sub_100006060((uint64_t)v13, (uint64_t *)&unk_1002DF680);
  }

  return result;
}

uint64_t (*sub_1001C5E28(void *a1))(void *a1)
{
  uint64_t v2 = swift_allocObject(&unk_10028D928, 24LL, 7LL);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = a1;
  uint64_t v3 = swift_allocObject(&unk_10028D950, 32LL, 7LL);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = sub_1001C8B00;
  *(void *)(v3 + 2swift_weakDestroy(v0 + 4) = v2;
  id v4 = a1;
  return sub_1001C8B2C;
}

id sub_1001C5EF4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons);
  swift_beginAccess(v0 + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons, v11, 0LL, 0LL);
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v2);
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v9))
  {
    uint64_t v4 = 4LL;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v2)
         : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1LL)) {
        break;
      }
      id v8 = [v5 isFocused];

      if ((v8 & 1) == 0)
      {
        ++v4;
        if (v7 != v3) {
          continue;
        }
      }

      goto LABEL_17;
    }

    __break(1u);
LABEL_12:
    if (v2 < 0) {
      uint64_t v9 = v2;
    }
    else {
      uint64_t v9 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v2);
  }

  id v8 = 0LL;
LABEL_17:
  swift_bridgeObjectRelease(v2);
  return v8;
}

void sub_1001C6060()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons);
  swift_beginAccess(v0 + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons, v15, 0LL, 0LL);
  uint64_t v2 = *v1;
  uint64_t v14 = _swiftEmptyArrayStorage;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0) {
      uint64_t v11 = v2;
    }
    else {
      uint64_t v11 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v2);
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease(v2);
    unint64_t v10 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_18;
  }

  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v2);
  if (!v3) {
    goto LABEL_17;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return;
  }

  for (uint64_t i = 0LL; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001LL) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
    }
    else {
      id v7 = *(id *)(v2 + 8 * i + 32);
    }
    id v8 = v7;
    id v9 = objc_msgSend(v7, "isFocused", v14);
    if ((v9 & 1) != 0)
    {
    }

    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      uint64_t v5 = v14[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
      uint64_t v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v8);
      specialized ContiguousArray._endMutation()(v6);
    }
  }

  swift_bridgeObjectRelease(v2);
  unint64_t v10 = (unint64_t)v14;
LABEL_18:
  swift_bridgeObjectRetain(v10);
  if ((v10 & 0x8000000000000000LL) != 0 || (v10 & 0x4000000000000000LL) != 0)
  {
    uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002DF9C0);
    _bridgeCocoaArray<A>(_:)(v10, v13);
    swift_release(v10);
  }

  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v12);
  }

  swift_release(v10);
}

void sub_1001C6248()
{
  uint64_t v1 = (objc_class *)type metadata accessor for PageFacetsHeaderView();
  v19.id receiver = v0;
  v19.super_class = v1;
  objc_msgSendSuper2(&v19, "layoutSubviews");
  *(void *)&v20.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  double MinX = CGRectGetMinX(v20);
  uint64_t v3 = (uint64_t *)&v0[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons], v18, 0LL, 0LL);
  uint64_t v4 = *v3;
  if (!((unint64_t)v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease(v4);
    return;
  }

  if (v4 < 0) {
    uint64_t v17 = v4;
  }
  else {
    uint64_t v17 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v4);
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      if ((v4 & 0xC000000000000001LL) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      }
      else {
        id v7 = *(id *)(v4 + 8 * v6 + 32);
      }
      id v8 = v7;
      ++v6;
      LayoutMarginsAware<>.layoutFrame.getter(v1);
      objc_msgSend(v8, "sizeThatFits:", v9, v10);
      double v12 = v11;
      double v14 = v13;
      *(void *)&v21.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
      double MinY = CGRectGetMinY(v21);
      objc_msgSend(v8, "setFrame:", MinX, MinY, v12, v14);
      v22.origin.x = MinX;
      v22.origin.y = MinY;
      v22.size.width = v12;
      v22.size.height = v14;
      double MaxX = CGRectGetMaxX(v22);

      double MinX = MaxX + 30.0;
    }

    while (v5 != v6);
    goto LABEL_13;
  }

  __break(1u);
}

void sub_1001C6430(uint64_t a1)
{
  uint64_t v82 = a1;
  uint64_t v2 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v2);
  uint64_t v84 = (uint64_t)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v73 - v5;
  uint64_t v7 = type metadata accessor for PageFacets.FacetGroup(0LL);
  uint64_t v85 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v83 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = v8;
  __chkstk_darwin(v9);
  double v11 = (char *)&v73 - v10;
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002EB788);
  __n128 v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for PageFacets(0LL, v13);
  uint64_t v76 = *(void *)(v16 - 8);
  uint64_t v77 = v16;
  __chkstk_darwin(v16);
  __n128 v75 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v86 = v1;
  id v18 = (uint64_t *)&v1[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons], v89, 1LL, 0LL);
  uint64_t v19 = *v18;
  unint64_t v20 = (unint64_t)*v18 >> 62;
  uint64_t v81 = (uint64_t)v15;
  if (v20)
  {
    if (v19 < 0) {
      uint64_t v25 = v19;
    }
    else {
      uint64_t v25 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain_n(v19, 2LL);
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v25);
    if (!v21) {
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain_n(v19, 2LL);
    if (!v21) {
      goto LABEL_13;
    }
  }

  if (v21 < 1)
  {
    __break(1u);
    goto LABEL_42;
  }

  for (uint64_t i = 0LL; i != v21; ++i)
  {
    if ((v19 & 0xC000000000000001LL) != 0) {
      id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
    }
    else {
      id v23 = *(id *)(v19 + 8 * i + 32);
    }
    id v24 = v23;
    [v23 removeFromSuperview];
  }

void sub_1001C6BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1001C6BF8(a2);
  }

void sub_1001C6BF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v41[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v40);
  uint64_t v8 = (void *)((char *)&v41[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = sub_1000031E8((uint64_t *)&unk_1002EB768);
  __chkstk_darwin(v9);
  double v11 = (char *)&v41[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002EB778);
  __n128 v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v41[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  PageFacets.FacetGroup.title.getter(v13);
  if (v16)
  {
    uint64_t v17 = v16;
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }

  else
  {
    NSString v18 = 0LL;
  }

  uint64_t v19 = type metadata accessor for FacetAlertController();
  unint64_t v20 = (char *) [(id)swift_getObjCClassFromMetadata(v19) alertControllerWithTitle:v18 message:0 preferredStyle:0];

  uint64_t v21 = type metadata accessor for PageFacets.Facet(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v15, 1LL, 1LL, v21);
  uint64_t v22 = type metadata accessor for PageFacets.Facet.Option(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56LL))(v11, 1LL, 1LL, v22);
  uint64_t v23 = sub_1001C6FF4(a1);
  sub_100006060((uint64_t)v11, (uint64_t *)&unk_1002EB768);
  sub_100006060((uint64_t)v15, (uint64_t *)&unk_1002EB778);
  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0) {
      uint64_t v28 = v23;
    }
    else {
      uint64_t v28 = v23 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v23);
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v28);
    if (!v24) {
      goto LABEL_16;
    }
  }

  else
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v23);
    if (!v24) {
      goto LABEL_16;
    }
  }

  if (v24 < 1)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }

  for (uint64_t i = 0LL; i != v24; ++i)
  {
    if ((v23 & 0xC000000000000001LL) != 0) {
      id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v23);
    }
    else {
      id v26 = *(id *)(v23 + 8 * i + 32);
    }
    uint64_t v27 = v26;
    [v20 addAction:v26];
  }

uint64_t sub_1001C6FF4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PageFacets.Facet.Option(0LL);
  uint64_t v158 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v158 + 64);
  __chkstk_darwin(v3);
  uint64_t v160 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v123 - v6;
  uint64_t v8 = type metadata accessor for PageFacets.Facet(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v127 = v10;
  __chkstk_darwin(v12);
  v157 = (char *)&v123 - v13;
  uint64_t v142 = type metadata accessor for PageFacets.Facet.DisplayType(0LL);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v139 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  v161 = (char *)&v123 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v123 - v18;
  uint64_t v154 = v1;
  uint64_t Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetsPresenter);
  id v123 = v7;
  if (Strong)
  {
    uint64_t v21 = Strong;
    unint64_t v22 = PageFacetsPresenter.selectedFacetOptions.getter();
    __n128 v23 = swift_release(v21);
  }

  else
  {
    unint64_t v22 = sub_1000E7264((uint64_t)_swiftEmptyArrayStorage);
  }

  uint64_t v143 = v8;
  unint64_t v169 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v162 = a1;
  uint64_t v24 = PageFacets.FacetGroup.facets.getter(v23);
  uint64_t v25 = v24;
  int64_t v26 = *(void *)(v24 + 16);
  uint64_t v156 = v9;
  id v159 = v11;
  unint64_t v144 = v22;
  if (v26)
  {
    __int128 aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100027044(0LL, v26, 0);
    unint64_t v27 = (*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v28 = v9;
    v155 = (void (*)(char *, char *, uint64_t))v25;
    unint64_t v29 = v25 + v27;
    uint64_t v30 = *(void *)(v9 + 72);
    uint64_t v31 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v28 + 16);
    do
    {
      uint64_t v32 = v157;
      uint64_t v33 = v143;
      uint64_t v34 = v31(v157, v29, v143);
      PageFacets.Facet.displayType.getter(v34);
      (*(void (**)(char *, uint64_t))(v156 + 8))(v32, v33);
      uint64_t v35 = aBlock;
      if ((swift_isUniquelyReferenced_nonNull_native(aBlock) & 1) == 0)
      {
        sub_100027044(0LL, (int64_t)v35[2] + 1, 1);
        uint64_t v35 = aBlock;
      }

      unint64_t v37 = (unint64_t)v35[2];
      unint64_t v36 = (unint64_t)v35[3];
      if (v37 >= v36 >> 1)
      {
        sub_100027044(v36 > 1, v37 + 1, 1);
        uint64_t v35 = aBlock;
      }

      void v35[2] = (void *)(v37 + 1);
      (*(void (**)(unint64_t, char *, uint64_t))(v141 + 32))( (unint64_t)v35 + ((*(unsigned __int8 *)(v141 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80))
      + *(void *)(v141 + 72) * v37,
        v19,
        v142);
      __int128 aBlock = v35;
      v29 += v30;
      --v26;
      unint64_t v22 = v144;
    }

    while (v26);
    swift_bridgeObjectRelease(v155);
    uint64_t v38 = v158;
    double v11 = v159;
  }

  else
  {
    swift_bridgeObjectRelease(v24);
    uint64_t v35 = (void **)_swiftEmptyArrayStorage;
    uint64_t v38 = v158;
  }

  uint64_t v39 = sub_10020C1B4((uint64_t)v35);
  __n128 v40 = swift_bridgeObjectRelease(v35);
  if (*(void *)(v39 + 16) == 1LL)
  {
    uint64_t v41 = v141;
    uint64_t v42 = (uint64_t)v161;
    uint64_t v43 = v4;
    uint64_t v44 = v142;
    (*(void (**)(char *, void, uint64_t, __n128))(v141 + 104))( v161,  enum case for PageFacets.Facet.DisplayType.singleSelection(_:),  v142,  v40);
    char v45 = sub_100111C44(v42, v39);
    __n128 v46 = swift_bridgeObjectRelease(v39);
    uint64_t v47 = v44;
    uint64_t v4 = v43;
    (*(void (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v42, v47, v46);
  }

  else
  {
    __n128 v48 = swift_bridgeObjectRelease(v39);
    char v45 = 0;
  }

  uint64_t v49 = v156;
  uint64_t v50 = PageFacets.FacetGroup.facets.getter(v48);
  uint64_t v51 = v50;
  uint64_t v138 = *(void *)(v50 + 16);
  if (v138)
  {
    unint64_t v52 = 0LL;
    uint64_t v53 = *(unsigned __int8 *)(v49 + 80);
    uint64_t v125 = ~v53;
    uint64_t v136 = v50 + ((v53 + 32) & ~v53);
    uint64_t v124 = v4 + v53;
    int v135 = enum case for PageFacets.Facet.DisplayType.toggle(_:);
    int v153 = v45 & 1;
    int v133 = enum case for PageFacets.Facet.DisplayType.singleSelection(_:);
    uint64_t v132 = (v53 + 24) & ~v53;
    int v130 = enum case for PageFacets.Facet.DisplayType.multipleSelection(_:);
    uint64_t v126 = v53;
    uint64_t v129 = v53 | 7;
    uint64_t v131 = v132 + v127;
    uint64_t v128 = v132 + v127 + 1;
    uint64_t v54 = v123;
    uint64_t v55 = v143;
    uint64_t v137 = v50;
    while (v52 < *(void *)(v51 + 16))
    {
      uint64_t v57 = *(void *)(v49 + 72);
      unint64_t v140 = v52;
      double v58 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v49 + 16);
      uint64_t v59 = v58(v11, v136 + v57 * v52, v55);
      NSString v60 = v139;
      PageFacets.Facet.displayType.getter(v59);
      int v61 = (*(uint64_t (**)(char *, uint64_t))(v141 + 88))(v60, v142);
      if (v61 == v135)
      {
        uint64_t v162 = objc_opt_self(&OBJC_CLASS___UIAlertAction);
        PageFacets.Facet.title.getter();
        uint64_t v63 = v62;
        NSString v64 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v63);
        uint64_t v65 = swift_allocObject(&unk_10028D798, 24LL, 7LL);
        __n128 v66 = swift_unknownObjectWeakInit(v65 + 16, v154);
        uint64_t v67 = v157;
        ((void (*)(char *, char *, uint64_t, __n128))v58)(v157, v11, v55, v66);
        uint64_t v68 = swift_allocObject(&unk_10028D860, v128, v129);
        *(void *)(v68 + swift_weakDestroy(v0 + 16) = v65;
        (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v68 + v132, v67, v55);
        LOBYTE(v67) = v153;
        *(_BYTE *)(v68 + v131) = v153;
        uint64_t v167 = sub_1001C8774;
        uint64_t v168 = v68;
        __int128 aBlock = _NSConcreteStackBlock;
        uint64_t v164 = 1107296256LL;
        v165 = sub_1001C7E1C;
        NSString v166 = &unk_10028D878;
        id v69 = _Block_copy(&aBlock);
        swift_release(v168);
        uint64_t v70 = swift_allocObject(&unk_10028D8B0, 17LL, 7LL);
        *(_BYTE *)(v70 + swift_weakDestroy(v0 + 16) = (_BYTE)v67;
        uint64_t v167 = sub_1001C87D0;
        uint64_t v168 = v70;
        __int128 aBlock = _NSConcreteStackBlock;
        uint64_t v164 = 1107296256LL;
        v165 = sub_1001C7E70;
        NSString v166 = &unk_10028D8C8;
        uint64_t v71 = _Block_copy(&aBlock);
        *(void *)&double v72 = swift_release(v168).n128_u64[0];
        id v73 =  objc_msgSend( (id)v162,  "_actionWithTitle:image:style:handler:shouldDismissHandler:",  v64,  0,  0,  v69,  v71,  v72);
        uint64_t v74 = v71;
        double v11 = v159;
        _Block_release(v74);
        _Block_release(v69);

        unint64_t v22 = v144;
        if (v73)
        {
          BOOL v77 = *(void *)(v144 + 16)
          objc_msgSend(v73, "_setChecked:", v77, v123);
          id v118 = v73;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v118);
          unint64_t v120 = *(void *)((v169 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v119 = *(void *)((v169 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v120 >= v119 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v119 > 1, v120 + 1, 1LL);
          }
          uint64_t v121 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v120, v118);
          specialized Array._endMutation()(v121);

          double v11 = v159;
        }
      }

      else
      {
        v155 = (void (*)(char *, char *, uint64_t))v58;
        if (v61 != v133 && v61 != v130) {
          goto LABEL_56;
        }
        uint64_t v79 = PageFacets.Facet.options.getter();
        uint64_t v80 = v79;
        uint64_t v152 = *(void *)(v79 + 16);
        if (v152)
        {
          id v151 = (id)objc_opt_self(&OBJC_CLASS___UIAlertAction);
          uint64_t v81 = 0LL;
          uint64_t v82 = *(unsigned __int8 *)(v38 + 80);
          uint64_t v134 = v80;
          uint64_t v150 = v80 + ((v82 + 32) & ~v82);
          uint64_t v83 = *(void *)(v38 + 72);
          v161 = *(char **)(v38 + 16);
          uint64_t v162 = v83;
          uint64_t v149 = (v82 + 24) & ~v82;
          uint64_t v148 = (v124 + v149) & v125;
          uint64_t v146 = v126 | v82 | 7;
          uint64_t v147 = v148 + v127;
          uint64_t v145 = v148 + v127 + 1;
          uint64_t v84 = v155;
          do
          {
            id v90 = v161;
            uint64_t v91 = ((uint64_t (*)(char *, uint64_t, uint64_t))v161)(v54, v150 + v162 * v81, v3);
            PageFacets.Facet.Option.title.getter(v91);
            uint64_t v93 = v92;
            NSString v94 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v93);
            uint64_t v95 = swift_allocObject(&unk_10028D798, 24LL, 7LL);
            __n128 v96 = swift_unknownObjectWeakInit(v95 + 16, v154);
            __int128 v97 = v160;
            ((void (*)(char *, char *, uint64_t, __n128))v90)(v160, v54, v3, v96);
            uint64_t v98 = v157;
            v84(v157, v159, v55);
            uint64_t v99 = swift_allocObject(&unk_10028D7C0, v145, v146);
            *(void *)(v99 + swift_weakDestroy(v0 + 16) = v95;
            (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v99 + v149, v97, v3);
            (*(void (**)(uint64_t, char *, uint64_t))(v156 + 32))(v99 + v148, v98, v55);
            LOBYTE(v98) = v153;
            *(_BYTE *)(v99 + v147) = v153;
            uint64_t v167 = sub_1001C861C;
            uint64_t v168 = v99;
            __int128 aBlock = _NSConcreteStackBlock;
            uint64_t v164 = 1107296256LL;
            v165 = sub_1001C7E1C;
            NSString v166 = &unk_10028D7D8;
            uint64_t v100 = _Block_copy(&aBlock);
            swift_release(v168);
            uint64_t v101 = swift_allocObject(&unk_10028D810, 17LL, 7LL);
            *(_BYTE *)(v101 + swift_weakDestroy(v0 + 16) = (_BYTE)v98;
            uint64_t v167 = sub_1001C8B6C;
            uint64_t v168 = v101;
            __int128 aBlock = _NSConcreteStackBlock;
            uint64_t v164 = 1107296256LL;
            v165 = sub_1001C7E70;
            NSString v166 = &unk_10028D828;
            double v102 = _Block_copy(&aBlock);
            *(void *)&double v103 = swift_release(v168).n128_u64[0];
            id v104 =  objc_msgSend( v151,  "_actionWithTitle:image:style:handler:shouldDismissHandler:",  v94,  0,  0,  v100,  v102,  v103);
            _Block_release(v102);
            _Block_release(v100);

            if (v104)
            {
              unint64_t v105 = v144;
              if (*(void *)(v144 + 16)
                && (unint64_t v106 = sub_1000E8960((uint64_t)v159), (v107 & 1) != 0)
                && (uint64_t v108 = *(void *)(*(void *)(v105 + 56) + 8 * v106), *(void *)(v108 + 16)))
              {
                uint64_t v109 = *(void *)(v108 + 40);
                uint64_t v110 = sub_1001C86BC( &qword_1002EB758,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
                swift_bridgeObjectRetain(v108);
                char v111 = v54;
                uint64_t v112 = dispatch thunk of Hashable._rawHashValue(seed:)(v109, v3, v110);
                uint64_t v113 = -1LL << *(_BYTE *)(v108 + 32);
                unint64_t v114 = v112 & ~v113;
                if (((*(void *)(v108 + 56 + ((v114 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v114) & 1) != 0)
                {
                  uint64_t v115 = ~v113;
                  do
                  {
                    uint64_t v116 = v160;
                    ((void (*)(char *, unint64_t, uint64_t))v161)( v160,  *(void *)(v108 + 48) + v114 * v162,  v3);
                    uint64_t v117 = sub_1001C86BC( &qword_1002EB760,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
                    char v85 = dispatch thunk of static Equatable.== infix(_:_:)(v116, v111, v3, v117);
                    (*(void (**)(char *, uint64_t))(v158 + 8))(v116, v3);
                    if ((v85 & 1) != 0) {
                      break;
                    }
                    unint64_t v114 = (v114 + 1) & v115;
                  }

                  while (((*(void *)(v108 + 56 + ((v114 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v114) & 1) != 0);
                }

                else
                {
                  char v85 = 0;
                }

                swift_bridgeObjectRelease(v108);
                uint64_t v38 = v158;
                uint64_t v54 = v111;
                uint64_t v55 = v143;
              }

              else
              {
                char v85 = 0;
              }

              objc_msgSend(v104, "_setChecked:", v85 & 1, v123);
              id v86 = v104;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v86);
              unint64_t v88 = *(void *)((v169 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
              unint64_t v87 = *(void *)((v169 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
              if (v88 >= v87 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v87 > 1, v88 + 1, 1LL);
              }
              uint64_t v89 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v88, v86);
              specialized Array._endMutation()(v89);
            }

            ++v81;
            (*(void (**)(char *, uint64_t))(v38 + 8))(v54, v3);
            uint64_t v84 = v155;
          }

          while (v81 != v152);
          __n128 v56 = swift_bridgeObjectRelease(v134);
          uint64_t v49 = v156;
          double v11 = v159;
          unint64_t v22 = v144;
        }

        else
        {
          __n128 v56 = swift_bridgeObjectRelease(v79);
        }
      }

      unint64_t v52 = v140 + 1;
      (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v11, v55, v56);
      uint64_t v51 = v137;
      if (v52 == v138) {
        goto LABEL_54;
      }
    }

    __break(1u);
LABEL_56:
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v142, v142);
    __break(1u);
  }

  else
  {
LABEL_54:
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v51);
    return v169;
  }

  return result;
}

void sub_1001C7C94(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002EB768);
  __chkstk_darwin(v8);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a2 += 16LL;
  swift_beginAccess(a2, v20, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    uint64_t v13 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetsPresenter);

    if (v13)
    {
      uint64_t v14 = PageFacets.Facet.options.getter();
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = type metadata accessor for PageFacets.Facet.Option(0LL);
      uint64_t v17 = *(void *)(v16 - 8);
      if (v15)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))( v10,  v14 + ((*(unsigned __int8 *)(v17 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)),  v16);
        uint64_t v18 = 0LL;
      }

      else
      {
        uint64_t v18 = 1LL;
      }

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v10, v18, 1LL, v16);
      swift_bridgeObjectRelease(v14);
      PageFacetsPresenter.didSelect(option:in:)(v10, a3);
      swift_release(v13);
      sub_100006060((uint64_t)v10, (uint64_t *)&unk_1002EB768);
    }
  }

  if ((a4 & 1) == 0)
  {
    if (a1) {
      objc_msgSend(a1, "_setChecked:", objc_msgSend(a1, "_isChecked") ^ 1);
    }
  }

void sub_1001C7E1C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void *))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4(a2);
  swift_release(v3);
}

uint64_t sub_1001C7E70(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = swift_retain(v2);
  LOBYTE(v1) = v1(v3);
  swift_release(v2);
  return v1 & 1;
}

void sub_1001C7EA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002EB768);
  __chkstk_darwin(v10);
  uint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a2 += 16LL;
  swift_beginAccess(a2, v19, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    uint64_t v15 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetsPresenter);

    if (v15)
    {
      uint64_t v16 = type metadata accessor for PageFacets.Facet.Option(0LL);
      uint64_t v17 = *(void *)(v16 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v12, a3, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0LL, 1LL, v16);
      PageFacetsPresenter.didSelect(option:in:)(v12, a4);
      swift_release(v15);
      sub_100006060((uint64_t)v12, (uint64_t *)&unk_1002EB768);
    }
  }

  if ((a5 & 1) == 0)
  {
    if (a1) {
      objc_msgSend(a1, "_setChecked:", objc_msgSend(a1, "_isChecked") ^ 1);
    }
  }

id sub_1001C802C(uint64_t a1)
{
  return sub_100089D90(a1, type metadata accessor for PageFacetsHeaderView);
}

uint64_t type metadata accessor for PageFacetsHeaderView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade20PageFacetsHeaderView);
}

id sub_1001C80C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = &v3[OBJC_IVAR____TtC6ArcadeP33_0046C0E5A855D25477218388BCAF187920FacetAlertController_facetAlertDelegate];
  *((void *)v6 + 1) = 0LL;
  swift_unknownObjectWeakInit(v6, 0LL);
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v7 = 0LL;
  }

  v21.id receiver = v3;
  v21.super_class = (Class)type metadata accessor for FacetAlertController();
  id v8 = objc_msgSendSuper2(&v21, "initWithNibName:bundle:", v7, a3);

  id v9 = objc_allocWithZone(&OBJC_CLASS___UITapGestureRecognizer);
  id v10 = v8;
  id v11 = [v9 init];
  [v11 addTarget:v10 action:"menuButtonActionWithRecognizer:"];
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v13 = swift_allocObject(v12, 40LL, 7LL);
  *(_OWORD *)(v13 + swift_weakDestroy(v0 + 16) = xmmword_100233570;
  id v14 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
  id v15 = v11;
  id v16 = [v14 initWithInteger:5];
  *(void *)(v13 + 32) = v16;
  specialized Array._endMutation()(v16);
  uint64_t v17 = v13;
  sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v15, "setAllowedPressTypes:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  id result = [v10 view];
  if (result)
  {
    unint64_t v20 = result;
    [result addGestureRecognizer:v15];

    return v10;
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_1001C838C(char a1)
{
  v8.id receiver = v1;
  v8.super_class = (Class)type metadata accessor for FacetAlertController();
  objc_msgSendSuper2(&v8, "viewDidDisappear:", a1 & 1);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC6ArcadeP33_0046C0E5A855D25477218388BCAF187920FacetAlertController_facetAlertDelegate]);
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_delegate);
    if (v5)
    {
      uint64_t v6 = v5;
      ArcadeSeeAllGamesDiffablePagePresenter.commitBatchFacetUpdates()();
      swift_unknownObjectRelease(v6);
    }

    NSString v7 = *(void **)(v4 + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetAlertController);
    *(void *)(v4 + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetAlertController) = 0LL;
    swift_unknownObjectRelease(v4);
  }

id sub_1001C84F8()
{
  return sub_100089D90(0LL, type metadata accessor for FacetAlertController);
}

uint64_t type metadata accessor for FacetAlertController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6ArcadeP33_0046C0E5A855D25477218388BCAF187920FacetAlertController);
}

uint64_t sub_1001C8538()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001C855C()
{
  uint64_t v1 = type metadata accessor for PageFacets.Facet.Option(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for PageFacets.Facet(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  uint64_t v11 = *(void *)(v7 + 64) + v9 + 1;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v11, v10);
}

void sub_1001C861C(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PageFacets.Facet.Option(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for PageFacets.Facet(0LL) - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  sub_1001C7EA8(a1, *(void *)(v1 + 16), v1 + v4, v1 + v7, *(_BYTE *)(v1 + v7 + *(void *)(v6 + 64)));
}

uint64_t sub_1001C8694(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001C86A4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001C86AC()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1001C86BC(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for PageFacets.Facet.Option(255LL);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1001C86FC()
{
  uint64_t v1 = type metadata accessor for PageFacets.Facet(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

void sub_1001C8774(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PageFacets.Facet(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1001C7C94(a1, *(void *)(v1 + 16), v1 + v4, *(_BYTE *)(v1 + v4 + *(void *)(v3 + 64)));
}

uint64_t sub_1001C87C0()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1001C87D0()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1001C87D8()
{
  uint64_t v1 = type metadata accessor for PageFacets.FacetGroup(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001C884C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for PageFacets.FacetGroup(0LL) - 8) + 80LL);
  sub_1001C6BA0(*(void *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void sub_1001C887C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_delegate];
  *((void *)v1 + 1) = 0LL;
  swift_unknownObjectWeakInit(v1, 0LL);
  *(void *)&v0[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons] = &_swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_areButtonsEnabled] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetAlertController] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/PageFacetsHeaderView.swift",  33LL,  2LL,  64LL,  0);
  __break(1u);
}

void sub_1001C8930()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons);
  swift_beginAccess(v0 + OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_facetButtons, v20, 0LL, 0LL);
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v2 < 0) {
      uint64_t v16 = *v1;
    }
    else {
      uint64_t v16 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*v1);
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v3) {
      goto LABEL_15;
    }
  }

  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (!v3) {
      goto LABEL_15;
    }
  }

  if (v3 < 1)
  {
LABEL_24:
    __break(1u);
    return;
  }

  uint64_t v4 = 0LL;
  double v5 = 0.0;
  double v6 = 0.0;
  do
  {
    if ((v2 & 0xC000000000000001LL) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    }
    else {
      id v7 = *(id *)(v2 + 8 * v4 + 32);
    }
    uint64_t v8 = v7;
    ++v4;
    uint64_t v9 = type metadata accessor for PageFacetsHeaderView();
    LayoutMarginsAware<>.layoutFrame.getter(v9);
    objc_msgSend(v8, "sizeThatFits:", v10, v11);
    double v13 = v12;
    double v15 = v14;

    double v6 = v6 + v13;
    if (v5 <= v15) {
      double v5 = v15;
    }
  }

  while (v3 != v4);
LABEL_15:
  swift_bridgeObjectRelease(v2);
  uint64_t v17 = *v1;
  if (!((unint64_t)v17 >> 62))
  {
    if (!__OFSUB__(*(void *)((v17 & 0xFFFFFFFFFFFFF8LL) + 0x10), 1LL)) {
      return;
    }
    goto LABEL_23;
  }

  if (v17 < 0) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = v17 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v17);
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v17);
  if (__OFSUB__(v19, 1LL))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }

uint64_t sub_1001C8ADC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001C8B00(uint64_t a1)
{
  return sub_1001C5D2C(a1, *(char **)(v1 + 16));
}

uint64_t sub_1001C8B08()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1001C8B2C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_1001C8B50(uint64_t a1)
{
}

void sub_1001C8B90()
{
  uint64_t v1 = type metadata accessor for EditorialSearchResultCollectionViewCell();
  uint64_t v2 = sub_100003B6C( &qword_1002EB828,  (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultCollectionViewCell,  (uint64_t)&protocol conformance descriptor for NSObject);
  uint64_t v3 = v0;
  AnyHashable.init<A>(_:)(v22, &v21, v1, v2);
  dispatch thunk of ArtworkIconFetcher.forgetFetches(for:)(v22);
  sub_1000087D8((uint64_t)v22);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)&v3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_videoContainer] + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    double v5 = (void *)Strong;
    id v6 = *(id *)(Strong + qword_1002E70D0);
    ArtworkView.image.setter(0LL);

    uint64_t v7 = type metadata accessor for VideoView(0LL);
    uint64_t v8 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v5, 1LL, v7, v8);
  }

  uint64_t v9 = *(void **)&v3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_editorialArtworkView];
  if (v9)
  {
    id v10 = v9;
    ArtworkView.image.setter(0LL);
    uint64_t v11 = type metadata accessor for ArtworkView(0LL);
    uint64_t v12 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, 1LL, v11, v12);
  }

  double v13 = *(void **)&v3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_iconArtworkView];
  if (v13)
  {
    id v14 = v13;
    ArtworkView.image.setter(0LL);
    uint64_t v15 = type metadata accessor for ArtworkView(0LL);
    uint64_t v16 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v14, 1LL, v15, v16);
  }

  uint64_t v17 = *(void **)&v3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_iconRow];
  if (v17)
  {
    objc_super v21 = v17;
    uint64_t v18 = type metadata accessor for IconRowView(0LL);
    uint64_t v19 = sub_100003B6C( (unint64_t *)&unk_1002E7D70,  type metadata accessor for IconRowView,  (uint64_t)&protocol conformance descriptor for NSObject);
    id v20 = v17;
    AnyHashable.init<A>(_:)(v22, &v21, v18, v19);
    dispatch thunk of ArtworkIconFetcher.forgetFetches(for:)(v22);
    sub_1000087D8((uint64_t)v22);
  }

double sub_1001C8E10( double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001C8ED4(a8, a1, a2);
}

id sub_1001C8E58(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  swift_getObjectType(a6);
  sub_1001C8F20(v8, a3, v6);
  return [v6 setNeedsLayout];
}

uint64_t sub_1001C8EA8()
{
  return sub_100003B6C( (unint64_t *)&unk_1002E7D90,  (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult,  (uint64_t)&protocol conformance descriptor for SearchResult);
}

double sub_1001C8ED4(uint64_t a1, double a2, double a3)
{
  return sub_100113A14(a1, a2, a3);
}

void sub_1001C8F20(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v112 = a2;
  uint64_t v4 = sub_1000031E8(&qword_1002DEA70);
  __chkstk_darwin(v4);
  char v111 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v110 = (char *)&v101 - v7;
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v8);
  uint64_t v109 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for VideoControls(0LL);
  __chkstk_darwin(v10);
  unint64_t v105 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  id v104 = (char *)&v101 - v13;
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __chkstk_darwin(v14);
  double v103 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for VideoFillMode(0LL);
  uint64_t v101 = *(void *)(v16 - 8);
  uint64_t v102 = v16;
  __chkstk_darwin(v16);
  unint64_t v114 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for VideoConfiguration(0LL);
  uint64_t v107 = *(void *)(v18 - 8);
  uint64_t v108 = v18;
  __chkstk_darwin(v18);
  unint64_t v106 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for IconRowViewLayout.Metrics(0LL);
  uint64_t v113 = *(void *)(v20 - 8);
  __n128 v21 = __chkstk_darwin(v20);
  __n128 v23 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for EditorialSearchResultType(0LL, v21);
  uint64_t v25 = *(void *)(v24 - 8);
  __n128 v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v101 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  EditorialSearchResult.type.getter(v26);
  int v29 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v28, v24);
  if (v29 == enum case for EditorialSearchResultType.category(_:)
    || v29 == enum case for EditorialSearchResultType.collection(_:)
    || v29 == enum case for EditorialSearchResultType.story(_:))
  {
    a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_showEditorialIcon] = 1;
    [*(id *)&a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_editorialIcon] setHidden:0];
    id v30 = [a3 setNeedsLayout];
  }

  else
  {
    a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_showEditorialIcon] = 0;
    [*(id *)&a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_editorialIcon] setHidden:1];
    [a3 setNeedsLayout];
    id v30 = (id)(*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v28, v24);
  }

  uint64_t v31 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter(v30);
  id v33 = sub_10008B7C0(v31, v32);
  EditorialSearchResult.title.getter(v33);
  uint64_t v35 = v34;
  unint64_t v36 = *(void **)&a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_titleLabel];
  if (v34)
  {
    NSString v37 = String._bridgeToObjectiveC()();
    [v36 setText:v37];
    swift_bridgeObjectRelease(v35);
  }

  else
  {
    [*(id *)&a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_titleLabel] setText:0];
  }

  [v36 setHidden:v35 == 0];
  EditorialSearchResult.subtitle.getter([a3 setNeedsLayout]);
  uint64_t v39 = v38;
  __n128 v40 = *(void **)&a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_subtitleLabel];
  if (v38)
  {
    NSString v41 = String._bridgeToObjectiveC()();
    [v40 setText:v41];
    swift_bridgeObjectRelease(v39);
  }

  else
  {
    [*(id *)&a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_subtitleLabel] setText:0];
  }

  [v40 setHidden:v39 == 0];
  uint64_t v42 = EditorialSearchResult.collectionAdamIds.getter([a3 setNeedsLayout]);
  uint64_t v43 = v114;
  if (v42)
  {
    uint64_t v44 = v42;
    if (*(void *)(v42 + 16) >= 3uLL) {
      uint64_t v45 = 3LL;
    }
    else {
      uint64_t v45 = *(void *)(v42 + 16);
    }
    uint64_t v46 = type metadata accessor for __ContiguousArrayStorageBase(0LL);
    uint64_t v47 = swift_unknownObjectRetain_n(v44, 2LL);
    __n128 v48 = (void *)swift_dynamicCastClass(v47, v46);
    if (!v48)
    {
      swift_bridgeObjectRelease(v44);
      __n128 v48 = _swiftEmptyArrayStorage;
    }

    uint64_t v49 = v48[2];
    swift_release(v48);
    if (v49 == v45)
    {
      uint64_t v50 = (void *)swift_dynamicCastClass(v44, v46);
      uint64_t v51 = v113;
      if (!v50)
      {
        swift_bridgeObjectRelease(v44);
        uint64_t v50 = _swiftEmptyArrayStorage;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v44);
      uint64_t v99 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AdamId(0LL) - 8) + 80LL);
      sub_1001E0334(v44, v44 + ((v99 + 32) & ~v99), 0LL, (2 * v45) | 1);
      uint64_t v50 = v100;
      uint64_t v51 = v113;
    }

    swift_bridgeObjectRelease(v44);
    uint64_t v52 = v50[2];
    if (qword_1002DC950 != -1) {
      swift_once(&qword_1002DC950, sub_10008B6BC);
    }
    uint64_t v53 = sub_1000061F4(v20, (uint64_t)qword_1002EF7D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v23, v53, v20);
    id v54 = objc_allocWithZone((Class)type metadata accessor for IconRowView(0LL));
    uint64_t v55 = (void *)sub_1000DD2B8(v52, (uint64_t)v23);
    sub_10008D98C(v55);

    __n128 v56 = *(void **)&a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_iconRow];
    if (v56)
    {
      id v57 = v56;
      sub_1000DD550((uint64_t)v50);
    }

    swift_release(v50);
  }

  else
  {
    uint64_t v58 = EditorialSearchResult.editorialVideo.getter();
    if (v58)
    {
      uint64_t v59 = v58;
      (*(void (**)(char *, void, uint64_t))(v101 + 104))( v43,  enum case for VideoFillMode.scaleAspectFill(_:),  v102);
      if (qword_1002DC908 != -1) {
        swift_once(&qword_1002DC908, sub_10008B194);
      }
      uint64_t v60 = type metadata accessor for AspectRatio(0LL);
      uint64_t v61 = sub_1000061F4(v60, (uint64_t)qword_1002EF6E0);
      uint64_t v62 = *(void *)(v60 - 8);
      uint64_t v63 = v103;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v103, v61, v60);
      uint64_t v64 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v63, 0LL, 1LL, v60);
      uint64_t v65 = v104;
      uint64_t v66 = Video.playbackControls.getter(v64);
      uint64_t v67 = v105;
      uint64_t v68 = Video.autoPlayPlaybackControls.getter(v66);
      char v69 = Video.canPlayFullScreen.getter(v68);
      char v70 = Video.allowsAutoPlay.getter();
      char v71 = Video.looping.getter();
      double v72 = v106;
      VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)( v114,  v63,  v65,  v67,  v69 & 1,  v70 & 1,  v71 & 1,  1LL,  0LL,  1);
      uint64_t v73 = type metadata accessor for VideoViewManager(0LL);
      uint64_t v74 = v112;
      unint64_t v75 = BaseObjectGraph.inject<A>(_:)(v115, v73, v73);
      uint64_t v76 = v115[0];
      BOOL v77 = Video.playbackId.getter(v115, v75);
      uint64_t v78 = (uint64_t)v109;
      Video.videoUrl.getter(v77);
      uint64_t v79 = type metadata accessor for URL(0LL);
      uint64_t v80 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56LL))( v78,  0LL,  1LL,  v79);
      uint64_t v81 = (uint64_t)v110;
      uint64_t v82 = Video.templateMediaEvent.getter(v80);
      uint64_t v83 = (uint64_t)v111;
      Video.templateClickEvent.getter(v82);
      uint64_t v84 = type metadata accessor for VideoView(0LL);
      uint64_t v85 = sub_100003B6C( (unint64_t *)&qword_1002DEA78,  type metadata accessor for VideoView,  (uint64_t)&unk_10023D670);
      id v86 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)( v115,  v78,  v72,  v81,  v83,  v74,  v84,  v85);
      sub_100006060(v83, &qword_1002DEA70);
      sub_100006060(v81, &qword_1002DEA70);
      sub_100006060(v78, (uint64_t *)&unk_1002E1810);
      sub_100006060((uint64_t)v115, (uint64_t *)&unk_1002DE600);
      sub_1001B195C(v86);
      swift_release(v59);
      __n128 v87 = swift_release(v76);
      (*(void (**)(char *, uint64_t, __n128))(v107 + 8))(v72, v108, v87);
    }

    else
    {
      uint64_t v88 = EditorialSearchResult.editorialArtwork.getter();
      __n128 v89 = swift_release(v88);
      if (v88)
      {
        type metadata accessor for ArtworkView(0LL);
        id v90 = (void *)static ArtworkView.plainArtworkView.getter();
        sub_10008D998(v90);

        uint64_t v91 = *(void **)&a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_editorialArtworkView];
        if (v91)
        {
          id v92 = v91;
          ArtworkView.contentMode.setter(2LL);
        }
      }

      else
      {
        uint64_t v93 = EditorialSearchResult.iconArtwork.getter(v89);
        swift_release(v93);
        if (v93)
        {
          type metadata accessor for ArtworkView(0LL);
          NSString v94 = (void *)static ArtworkView.plainArtworkView.getter();
          uint64_t v95 = OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_iconArtworkView;
          __n128 v96 = *(void **)&a3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_iconArtworkView];
          if (v96)
          {
            [v96 removeFromSuperview];
            __int128 v97 = *(void **)&a3[v95];
          }

          else
          {
            __int128 v97 = 0LL;
          }

          *(void *)&a3[v95] = v94;
          id v98 = v94;

          sub_10008B894();
        }
      }
    }
  }

void sub_1001C981C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v73 = *(void *)(v5 - 8);
  uint64_t v74 = v5;
  __chkstk_darwin(v5);
  double v72 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for AspectRatio(0LL);
  uint64_t v71 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v70 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v69 - v10;
  sub_1001C8B90();
  [v2 bounds];
  double v13 = v12;
  if (qword_1002DC940 != -1) {
    swift_once(&qword_1002DC940, sub_10008B644);
  }
  sub_1000061F4(v7, (uint64_t)qword_1002E1860);
  double v14 = AspectRatio.height(fromWidth:)(v13);
  uint64_t v16 = EditorialSearchResult.collectionAdamIds.getter(v15);
  if (v16)
  {
    uint64_t v18 = v16;
    uint64_t v19 = *(void **)&v3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_iconRow];
    if (v19)
    {
      uint64_t v69 = a2;
      if (*(void *)(v16 + 16) >= 3uLL) {
        uint64_t v20 = 3LL;
      }
      else {
        uint64_t v20 = *(void *)(v16 + 16);
      }
      uint64_t v21 = type metadata accessor for __ContiguousArrayStorageBase(0LL);
      swift_bridgeObjectRetain_n(v18, 2LL);
      id v22 = v19;
      __n128 v23 = (void *)swift_dynamicCastClass(v18, v21);
      if (!v23)
      {
        swift_bridgeObjectRelease(v18);
        __n128 v23 = _swiftEmptyArrayStorage;
      }

      uint64_t v24 = v23[2];
      swift_release(v23);
      if (v24 == v20)
      {
        uint64_t v25 = (void *)swift_dynamicCastClass(v18, v21);
        uint64_t v26 = v69;
        if (!v25)
        {
          swift_bridgeObjectRelease(v18);
          uint64_t v25 = _swiftEmptyArrayStorage;
        }
      }

      else
      {
        swift_bridgeObjectRelease(v18);
        uint64_t v67 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AdamId(0LL) - 8) + 80LL);
        sub_1001E0334(v18, v18 + ((v67 + 32) & ~v67), 0LL, (2 * v20) | 1);
        uint64_t v25 = v68;
        uint64_t v26 = v69;
      }

      swift_bridgeObjectRelease(v18);
      sub_1000DD63C((uint64_t)v25, v26, v13, v14);

      __n128 v17 = swift_release(v25);
    }

    else
    {
      __n128 v17 = swift_bridgeObjectRelease(v16);
    }
  }

  uint64_t v27 = EditorialSearchResult.editorialVideo.getter(v17);
  if (v27)
  {
    uint64_t v29 = v27;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)&v3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_videoContainer] + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (Strong)
    {
      uint64_t v31 = (void *)Strong;
      uint64_t v32 = Video.preview.getter(Strong);
      uint64_t v33 = Artwork.config(_:mode:prefersLayeredImage:)(2LL, 0LL, v13, v14);
      swift_release(v32);
      uint64_t v34 = type metadata accessor for VideoView(0LL);
      uint64_t v35 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v33, 2LL, 1LL, v31, v34, v35);
      swift_release(v29);

      uint64_t v36 = v33;
    }

    else
    {
      uint64_t v36 = v29;
    }

    __n128 v28 = swift_release(v36);
  }

  uint64_t v37 = EditorialSearchResult.editorialArtwork.getter(v28);
  if (v37)
  {
    uint64_t v39 = v37;
    __n128 v40 = *(void **)&v3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_editorialArtworkView];
    if (v40)
    {
      id v41 = v40;
      uint64_t v42 = Artwork.config(using:)(v41, v13, v14);
      uint64_t v43 = type metadata accessor for ArtworkView(0LL);
      uint64_t v44 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v42, 2LL, 1LL, v41, v43, v44);
      swift_release(v39);

      uint64_t v37 = v42;
    }

    __n128 v38 = swift_release(v37);
  }

  uint64_t v45 = EditorialSearchResult.iconArtwork.getter(v38);
  if (v45)
  {
    uint64_t v46 = v45;
    uint64_t v47 = *(void **)&v3[OBJC_IVAR____TtC6Arcade39EditorialSearchResultCollectionViewCell_iconArtworkView];
    if (v47)
    {
      uint64_t v48 = qword_1002DC948;
      id v49 = v47;
      uint64_t v50 = v49;
      if (v48 != -1) {
        id v49 = (id)swift_once(&qword_1002DC948, sub_10008B6AC);
      }
      double v51 = v13 + 0.0;
      double v52 = v14 - (*(double *)&qword_1002EF7C8 + *(double *)&qword_1002EF7C8);
      double v53 = Artwork.size.getter(v49);
      AspectRatio.init(_:_:)(v54, v53);
      uint64_t v55 = v70;
      __n128 v57 = AspectRatio.init(_:_:)(v56, v51);
      v58.n128_f64[0] = AspectRatio.horizontalFraction.getter(v57);
      if (AspectRatio.horizontalFraction.getter(v58) >= v58.n128_f64[0]) {
        double v52 = AspectRatio.height(fromWidth:)(v51);
      }
      else {
        double v51 = AspectRatio.width(fromHeight:)(v52);
      }
      uint64_t v59 = *(void (**)(char *, uint64_t))(v71 + 8);
      v59(v55, v7);
      uint64_t v60 = ((uint64_t (*)(char *, uint64_t))v59)(v11, v7);
      uint64_t v61 = v72;
      uint64_t v62 = Artwork.crop.getter(v60);
      uint64_t v63 = Artwork.Crop.preferredContentMode.getter(v62);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v61, v74);
      uint64_t v64 = Artwork.config(_:mode:prefersLayeredImage:)(v63, 0LL, v51, v52);
      sub_1000FB124();
      uint64_t v65 = type metadata accessor for ArtworkView(0LL);
      uint64_t v66 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v64, 2LL, 1LL, v50, v65, v66);
      swift_release(v46);

      swift_release(v64);
    }

    else
    {
      swift_release(v45);
    }
  }

unint64_t sub_1001C9DF0(double a1)
{
  uint64_t v2 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v43 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for AspectRatio(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v41 - v10;
  if (qword_1002DC940 != -1) {
    swift_once(&qword_1002DC940, sub_10008B644);
  }
  sub_1000061F4(v5, (uint64_t)qword_1002E1860);
  v12.n128_f64[0] = AspectRatio.height(fromWidth:)(a1);
  double v13 = v12.n128_f64[0];
  unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v14 = EditorialSearchResult.editorialArtwork.getter(v12);
  if (v14)
  {
    uint64_t v16 = v14;
    uint64_t v41 = v6;
    uint64_t v42 = v3;
    uint64_t v17 = v2;
    uint64_t v18 = Artwork.config(using:)(v14, a1, v13);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
    unint64_t v20 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v19 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v20 >= v19 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1LL);
    }
    uint64_t v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
    specialized Array._endMutation()(v21);
    __n128 v15 = swift_release(v16);
    uint64_t v2 = v17;
    uint64_t v6 = v41;
    uint64_t v3 = v42;
  }

  uint64_t v22 = EditorialSearchResult.iconArtwork.getter(v15);
  if (v22)
  {
    uint64_t v23 = v22;
    double v24 = Artwork.size.getter(v22);
    AspectRatio.init(_:_:)(v25, v24);
    double v26 = AspectRatio.height(fromWidth:)(a1);
    __n128 v28 = AspectRatio.init(_:_:)(v27, a1);
    v29.n128_f64[0] = AspectRatio.horizontalFraction.getter(v28);
    if (AspectRatio.horizontalFraction.getter(v29) >= v29.n128_f64[0]) {
      double v26 = AspectRatio.height(fromWidth:)(a1);
    }
    else {
      a1 = AspectRatio.width(fromHeight:)(v26);
    }
    id v30 = *(void (**)(char *, uint64_t))(v6 + 8);
    v30(v8, v5);
    uint64_t v31 = ((uint64_t (*)(char *, uint64_t))v30)(v11, v5);
    uint64_t v32 = v43;
    uint64_t v33 = Artwork.crop.getter(v31);
    uint64_t v34 = Artwork.Crop.preferredContentMode.getter(v33);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v32, v2);
    uint64_t v35 = Artwork.config(_:mode:prefersLayeredImage:)(v34, 0LL, a1, v26);
    swift_retain(v35);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
    unint64_t v38 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v37 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v38 >= v37 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1LL);
    }
    uint64_t v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v35);
    specialized Array._endMutation()(v39);
    swift_release(v23);
    swift_release(v35);
  }

  return v44;
}

uint64_t type metadata accessor for RootActionRunner(uint64_t a1)
{
  uint64_t result = qword_1002EB840;
  if (!qword_1002EB840) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RootActionRunner);
  }
  return result;
}

uint64_t sub_1001CA12C(uint64_t a1)
{
  uint64_t v2 = qword_1002F1660;
  v5[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for MetricsPipeline(319LL);
  if (v4 <= 0x3F)
  {
    v5[1] = *(void *)(result - 8) + 64LL;
    v5[2] = &unk_100241478;
    v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t result = swift_initClassMetadata2(a1, 0LL, 7LL, v5, a1 + v2);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1001CA1D4()
{
  uint64_t result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = type metadata accessor for RootActionRunner(0LL);
    uint64_t result = swift_dynamicCastClass(v2, v3);
    if (!result)
    {
      id v4 = [v0 nextResponder];
      if (v4)
      {
        uint64_t v5 = v4;
        uint64_t v6 = sub_1001CA1D4();

        swift_release(v2);
        return v6;
      }

      else
      {
        swift_release(v2);
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_1001CA260(uint64_t a1)
{
  uint64_t v46 = a1;
  uint64_t v1 = sub_1000031E8(&qword_1002E5960);
  uint64_t v48 = *(void *)(v1 - 8);
  uint64_t v49 = v1;
  __chkstk_darwin(v1);
  uint64_t v47 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v50 = type metadata accessor for MetricsData(0LL);
  uint64_t v45 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  id v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = sub_1000031E8(&qword_1002E5968);
  BaseObjectGraph.optional<A>(_:)(v59, v12, v12);
  uint64_t v13 = v59[0];
  uint64_t v53 = v59[1];
  uint64_t v14 = type metadata accessor for MetricsActivity(0LL);
  uint64_t v16 = static MetricsActivity.current.getter(v14, v15);
  uint64_t v17 = dispatch thunk of MetricsActivity.currentPageFields.getter();
  swift_release(v16);
  uint64_t v20 = static MetricsActivity.current.getter(v18, v19);
  char v21 = dispatch thunk of MetricsActivity.preloaded.getter();
  swift_release(v20);
  uint64_t v58 = 0LL;
  memset(v57, 0, sizeof(v57));
  uint64_t v56 = 0LL;
  memset(v55, 0, sizeof(v55));
  uint64_t v24 = static MetricsActivity.current.getter(v22, v23);
  uint64_t v25 = dispatch thunk of MetricsActivity.contextualAction.getter();
  swift_release(v24);
  uint64_t v54 = v11;
  static MetricsFieldsContext.createFieldsContext(impressionsTracker:adamIdString:pageContextOverride:referrer:participatingInCrossfireReferral:pageFields:preloaded:advertRotationData:searchGhostHintData:contextualAction:deviceWindowData:impressionsAppendixData:)( v13,  v53,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0,  v17,  v21,  v57,  v55,  v25,  0LL,  0LL,  0LL,  0LL);
  swift_release(v25);
  swift_bridgeObjectRelease(v17);
  swift_unknownObjectRelease(v13);
  sub_100006060((uint64_t)v55, &qword_1002E11F0);
  sub_100006060((uint64_t)v57, &qword_1002E11F8);
  uint64_t v27 = *(void *)(v46 + 16);
  if (v27)
  {
    uint64_t v51 = v6;
    uint64_t v53 = v52 + qword_1002EB838;
    uint64_t v28 = v46 + ((*(unsigned __int8 *)(v45 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
    uint64_t v52 = *(void *)(v45 + 72);
    uint64_t v29 = v45;
    id v30 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v45 + 16);
    __n128 v31 = swift_bridgeObjectRetain(v46);
    uint64_t v32 = v50;
    do
    {
      uint64_t v37 = v30(v4, v28, v32, v31);
      uint64_t v38 = MetricsData.contextualAdamId.getter(v37);
      if (v39)
      {
        uint64_t v40 = v39;
        *(void *)&v57[0] = v38;
        *((void *)&v57[0] + 1) = v39;
        uint64_t v41 = v5;
        uint64_t v42 = v47;
        static MetricsFieldsContext.adamIdStringKey.getter();
        MetricsFieldsContext.addingValue<A>(_:forProperty:)(v57, v42, &type metadata for String);
        uint64_t v43 = v42;
        uint64_t v5 = v41;
        uint64_t v32 = v50;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v43, v49);
        swift_bridgeObjectRelease(v40);
        uint64_t v33 = v51;
      }

      else
      {
        uint64_t v33 = v51;
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v8, v54, v5);
      }

      uint64_t v34 = MetricsPipeline.process(_:using:)(v4, v8);
      __n128 v35 = swift_release(v34);
      uint64_t v36 = *(void (**)(char *, uint64_t, __n128))(v33 + 8);
      v36(v8, v5, v35);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v32);
      v28 += v52;
      --v27;
    }

    while (v27);
    __n128 v26 = swift_bridgeObjectRelease(v46);
  }

  else
  {
    uint64_t v36 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
  }

  return ((uint64_t (*)(char *, uint64_t, __n128))v36)(v54, v5, v26);
}

double sub_1001CA5F8(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ReferrerData(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ExternalUrlAction(0LL);
  if (swift_dynamicCastClass(a1, v12))
  {
    swift_retain(a1);
    sub_1001D36D0();
    goto LABEL_7;
  }

  uint64_t v13 = type metadata accessor for HttpAction(0LL);
  uint64_t v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    uint64_t v15 = v14;
    swift_retain(a1);
    sub_1001CABD4(v15, (uint64_t)a2, a3);
    goto LABEL_7;
  }

  uint64_t v16 = type metadata accessor for RateAction();
  uint64_t v17 = swift_dynamicCastClass(a1, v16);
  if (v17)
  {
    uint64_t v18 = v17;
    swift_retain(a1);
    sub_1001CAF18(v18, a2, a3);
    goto LABEL_7;
  }

  uint64_t v20 = type metadata accessor for HttpTemplateAction(0LL);
  uint64_t v21 = swift_dynamicCastClass(a1, v20);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3 + qword_1002E0738);
    if (Strong)
    {
      uint64_t v24 = (void *)Strong;
      swift_retain(a1);
      sub_100082D00((uint64_t)&v67);

      if (*((void *)&v68 + 1))
      {
        sub_100009D90(&v67, (uint64_t)v70);
        sub_10001027C((uint64_t)a2, (uint64_t)&v67, (uint64_t *)&unk_1002DF680);
        uint64_t v25 = type metadata accessor for ObjectGraph(0LL);
        uint64_t v26 = swift_dynamicCastClassUnconditional(a3, v25, 0LL, 0LL, 0LL);
        uint64_t v27 = (objc_class *)type metadata accessor for HttpTemplateController();
        uint64_t v28 = objc_allocWithZone(v27);
        *(void *)&v28[OBJC_IVAR____TtC6Arcade22HttpTemplateController_textFields] = _swiftEmptyArrayStorage;
        *(void *)&v28[OBJC_IVAR____TtC6Arcade22HttpTemplateController_okAction] = 0LL;
        v28[OBJC_IVAR____TtC6Arcade22HttpTemplateController_hasRequiredParameters] = 0;
        *(void *)&v28[OBJC_IVAR____TtC6Arcade22HttpTemplateController_objectGraph] = v26;
        *(void *)&v28[OBJC_IVAR____TtC6Arcade22HttpTemplateController_actionRunner] = v4;
        *(void *)&v28[OBJC_IVAR____TtC6Arcade22HttpTemplateController_templateAction] = v22;
        sub_10001027C( (uint64_t)&v67,  (uint64_t)&v28[OBJC_IVAR____TtC6Arcade22HttpTemplateController_actionSender],  (uint64_t *)&unk_1002DF680);
        v66.id receiver = v28;
        v66.super_class = v27;
        swift_retain(a1);
        swift_retain(a3);
        *(void *)&double v29 = swift_retain(v4).n128_u64[0];
        id v30 = objc_msgSendSuper2(&v66, "init", v29);
        sub_100006060((uint64_t)&v67, (uint64_t *)&unk_1002DF680);
        sub_100099438(v70);

        _s6Arcade17PillOverlayLayoutVwxx_0(v70);
LABEL_17:
        *(void *)&double result = swift_release(a1).n128_u64[0];
        return result;
      }
    }

    else
    {
      uint64_t v69 = 0LL;
      __int128 v67 = 0u;
      __int128 v68 = 0u;
      swift_retain(a1);
    }

    sub_100006060((uint64_t)&v67, (uint64_t *)&unk_1002E1800);
    goto LABEL_17;
  }

  uint64_t v31 = type metadata accessor for LocalAction();
  if (swift_dynamicCastClass(a1, v31))
  {
    swift_retain(a1);
    LocalAction.perform()();
    goto LABEL_7;
  }

  uint64_t v32 = type metadata accessor for OfferStateAction(0LL);
  uint64_t v33 = swift_dynamicCastClass(a1, v32);
  if (v33)
  {
    uint64_t v34 = v33;
    swift_retain(a1);
    sub_1001CC5B4(v34, (uint64_t)a2, a3);
    goto LABEL_7;
  }

  uint64_t v35 = type metadata accessor for OfferAction(0LL);
  uint64_t v36 = swift_dynamicCastClass(a1, v35);
  if (v36)
  {
    uint64_t v37 = v36;
    swift_retain(a1);
    sub_1001CC938(v37, (uint64_t)a2, a3);
    goto LABEL_7;
  }

  updateCGFloat d = type metadata accessor for UpdateAllAction(0LL);
  uint64_t v39 = swift_dynamicCastClass(a1, updated);
  if (v39)
  {
    uint64_t v40 = v39;
    __n128 v41 = swift_retain(a1);
    sub_1001CCFAC(v41, v40, (uint64_t)a2, a3);
    goto LABEL_7;
  }

  uint64_t v42 = type metadata accessor for OpenAppAction(0LL);
  uint64_t v43 = swift_dynamicCastClass(a1, v42);
  if (v43)
  {
    uint64_t v44 = v43;
    swift_retain(a1);
    sub_1001CD950(v44, (uint64_t)a2, a3);
    goto LABEL_7;
  }

  uint64_t v45 = type metadata accessor for ArcadeAction();
  uint64_t v46 = swift_dynamicCastClass(a1, v45);
  if (v46)
  {
    uint64_t v47 = v46;
    swift_retain(a1);
    sub_1001CDC34(v47, a2, a3);
    goto LABEL_7;
  }

  uint64_t v48 = type metadata accessor for CancelPreorderAction();
  if (swift_dynamicCastClass(a1, v48))
  {
    swift_retain(a1);
    sub_1001D3A48();
    goto LABEL_7;
  }

  uint64_t v49 = type metadata accessor for SearchAdAction();
  if (swift_dynamicCastClass(a1, v49))
  {
    __n128 v50 = swift_retain(a1);
    uint64_t v51 = SearchAdAction.action.getter(v50);
    sub_1001CA5F8(v51, a2, a3);
    swift_release(a1);
    *(void *)&double result = swift_release(v51).n128_u64[0];
    return result;
  }

  uint64_t v52 = type metadata accessor for RateLimitedAction(0LL);
  uint64_t v53 = swift_dynamicCastClass(a1, v52);
  if (v53)
  {
    uint64_t v54 = v53;
    swift_retain(a1);
    sub_1001CE0CC(v54, (uint64_t)a2, a3);
    goto LABEL_7;
  }

  uint64_t v55 = type metadata accessor for ArcadeSubscriptionStateAction();
  uint64_t v56 = swift_dynamicCastClass(a1, v55);
  if (v56)
  {
    uint64_t v57 = v56;
    swift_retain(a1);
    sub_1001CE4E4(v57, (uint64_t)a2, a3);
    goto LABEL_7;
  }

  uint64_t v58 = type metadata accessor for CrossfireReferralAction();
  if (swift_dynamicCastClass(a1, v58))
  {
    type metadata accessor for MetricsActivity(0LL);
    swift_retain(a1);
    uint64_t v61 = static MetricsActivity.current.getter(v59, v60);
    CrossfireReferralAction.referrerData.getter();
    dispatch thunk of MetricsActivity.setReferrerData(_:)(v11);
    __n128 v62 = swift_release(v61);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v62);
    goto LABEL_17;
  }

  uint64_t v63 = type metadata accessor for ShowRatingPromptAction(0LL);
  uint64_t v64 = swift_dynamicCastClass(a1, v63);
  if (!v64) {
    return sub_100075434(a1, (uint64_t)a2, a3);
  }
  uint64_t v65 = v64;
  swift_retain(a1);
  sub_1001CE6B8(v65, a3);
LABEL_7:
  *(void *)&double result = swift_release(a1).n128_u64[0];
  return result;
}

uint64_t sub_1001CABD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  uint64_t v47 = a3;
  uint64_t v39 = a1;
  uint64_t v4 = type metadata accessor for Bag(0LL);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64LL);
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v39 - v9);
  uint64_t v11 = sub_100006028(0LL, &qword_1002DDA08, &OBJC_CLASS___AMSURLSession_ptr);
  uint64_t v12 = *(void *)(v3 + qword_1002EB830);
  uint64_t v13 = type metadata accessor for ObjectGraph(0LL);
  inject<A, B>(_:from:)(v49, v11, v12, v11, v13);
  uint64_t v14 = v49[0];
  id v44 = (id)v49[0];
  uint64_t v15 = v4;
  inject<A, B>(_:from:)(v10, v4, v12, v4, v13);
  uint64_t v16 = sub_100006028(0LL, &qword_1002EB890, &OBJC_CLASS___AMSProcessInfo_ptr);
  inject<A, B>(_:from:)(v49, v16, v12, v16, v13);
  uint64_t v17 = v49[0];
  id v45 = (id)v49[0];
  uint64_t v18 = type metadata accessor for ASKBagContract(0LL);
  uint64_t v46 = inject(_:from:)(v18, v12);
  uint64_t v48 = v10;
  uint64_t v19 = v17;
  uint64_t v20 = v39;
  uint64_t v43 = HttpAction.start(urlSession:bag:process:bagContract:mediaTokenService:)(v14, v10, v19, v46, 0LL);
  (*(void (**)(char *, void *, uint64_t))(v6 + 16))(v7, v10, v4);
  uint64_t v21 = v41;
  sub_10001027C(v41, (uint64_t)v49, (uint64_t *)&unk_1002DF680);
  uint64_t v22 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = v6;
  uint64_t v42 = v6;
  uint64_t v24 = (v22 + 24) & ~v22;
  unint64_t v25 = (v5 + v24 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v27 = (v26 + 39) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v28 = swift_allocObject(&unk_10028DA40, v27 + 8, v22 | 7);
  *(void *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = v20;
  double v29 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
  uint64_t v30 = v15;
  v29(v28 + v24, v7, v15);
  uint64_t v31 = v40;
  *(void *)(v28 + v25) = v40;
  sub_10003FBFC((uint64_t)v49, v28 + v26, (uint64_t *)&unk_1002DF680);
  uint64_t v32 = v47;
  *(void *)(v28 + v27) = v47;
  sub_10001027C(v21, (uint64_t)v50, (uint64_t *)&unk_1002DF680);
  uint64_t v33 = (void *)swift_allocObject(&unk_10028DA68, 72LL, 7LL);
  void v33[2] = v20;
  v33[3] = v31;
  sub_10003FBFC((uint64_t)v50, (uint64_t)(v33 + 4), (uint64_t *)&unk_1002DF680);
  v33[8] = v32;
  uint64_t v34 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
  swift_retain_n(v20, 2LL);
  swift_retain_n(v31, 2LL);
  uint64_t v35 = swift_retain_n(v32, 2LL);
  uint64_t v36 = static OS_dispatch_queue.main.getter(v35);
  v49[3] = v34;
  v49[4] = &protocol witness table for OS_dispatch_queue;
  v49[0] = v36;
  uint64_t v37 = v43;
  Promise.then(perform:orCatchError:on:)(sub_1001D3C90, v28, sub_1001D3D40, v33, v49);

  swift_release(v46);
  swift_release(v37);
  swift_release(v28);
  swift_release(v33);
  _s6Arcade17PillOverlayLayoutVwxx_0(v49);
  return (*(uint64_t (**)(void *, uint64_t))(v42 + 8))(v48, v30);
}

unint64_t sub_1001CAF18( uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v212 = a3;
  uint64_t v214 = a2;
  uint64_t v243 = a1;
  uint64_t v217 = type metadata accessor for OSLogger(0LL);
  uint64_t v216 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  id v215 = (char *)&v198 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v208 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v206 = (char *)&v198 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v205 = type metadata accessor for NavigationTab(0LL);
  uint64_t v203 = *(void *)(v205 - 8);
  __chkstk_darwin(v205);
  uint64_t v202 = (char *)&v198 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v204 = type metadata accessor for FlowPage(0LL);
  uint64_t v201 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v199 = (char *)&v198 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v200 = (char *)&v198 - v8;
  uint64_t v211 = type metadata accessor for ReferrerData(0LL);
  uint64_t v210 = *(void *)(v211 - 8);
  __chkstk_darwin(v211);
  uint64_t v209 = (char *)&v198 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v220 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v219 = *(void *)(v220 - 8);
  __n128 v10 = __chkstk_darwin(v220);
  __n128 v218 = (char *)&v198 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for RateAction.Parameter(0LL, v10);
  uint64_t v239 = *(void *)(v12 - 8);
  uint64_t v240 = v12;
  __chkstk_darwin(v12);
  uint64_t v226 = (char *)&v198 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  __n128 v229 = (char *)&v198 - v15;
  uint64_t v16 = type metadata accessor for HttpTemplateParameter(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v198 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v235 = type metadata accessor for LegacyAppState(0LL, v18);
  uint64_t v234 = *(void *)(v235 - 8);
  __chkstk_darwin(v235);
  uint64_t v232 = (char *)&v198 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v198 - v23;
  uint64_t v25 = type metadata accessor for AdamId(0LL);
  uint64_t v241 = *(void *)(v25 - 8);
  uint64_t v242 = v25;
  __n128 v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v198 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v223 = type metadata accessor for HttpTemplateSubstitutions(0LL, v26);
  uint64_t v222 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  uint64_t v30 = (char *)&v198 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v31 = sub_1001D21D0((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v32 = sub_1001D21D0((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v33 = sub_1001D22F0((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v34 = sub_1001D21D0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v236 = v30;
  HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:formBody:)(v31, v32, v33, v34);
  uint64_t v35 = *(void *)(v224 + qword_1002F1638 + 8);
  uint64_t ObjectType = swift_getObjectType(*(void *)(v224 + qword_1002F1638));
  RateAction.adamId.getter();
  uint64_t v37 = dispatch thunk of AppStateController.stateMachine(forApp:)(v28, ObjectType, v35);
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v241 + 8))(v28, v242);
  uint64_t v40 = swift_getObjectType(v37);
  uint64_t v233 = v24;
  uint64_t v221 = v37;
  uint64_t v41 = dispatch thunk of AppStateMachine.currentState.getter(v40, v39);
  uint64_t v42 = HttpTemplateAction.parameters.getter(v41);
  uint64_t v43 = *(void *)(v42 + 16);
  if (v43)
  {
    unint64_t v44 = (*(unsigned __int8 *)(v17 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v213 = v42;
    unint64_t v45 = v42 + v44;
    uint64_t v46 = *(void *)(v17 + 72);
    uint64_t v241 = *(void *)(v17 + 16);
    uint64_t v242 = v46;
    unsigned int v227 = enum case for RateAction.Parameter.rating(_:);
    int v231 = enum case for LegacyAppState.openable(_:);
    unsigned int v225 = enum case for RateAction.Parameter.version(_:);
    uint64_t v237 = v20;
    uint64_t v238 = v17;
    uint64_t v228 = v16;
    while (1)
    {
      v47.n128_f64[0] = ((double (*)(char *, unint64_t, uint64_t))v241)(v20, v45, v16);
      uint64_t v48 = dispatch thunk of RateAction.rating.getter(v47);
      if ((v49 & 1) == 0)
      {
        uint64_t v50 = v48;
        uint64_t v51 = ((uint64_t (*)(void))HttpTemplateParameter.key.getter)();
        uint64_t v53 = v52;
        uint64_t v54 = v239;
        uint64_t v55 = v240;
        uint64_t v56 = v229;
        uint64_t v57 = (*(uint64_t (**)(char *, void, uint64_t))(v239 + 104))(v229, v227, v240);
        uint64_t v58 = RateAction.Parameter.rawValue.getter(v57);
        uint64_t v60 = v59;
        (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v55);
        if (v51 == v58 && v53 == v60)
        {
          swift_bridgeObjectRelease_n(v53, 2LL);
          uint64_t v16 = v228;
          uint64_t v20 = v237;
          uint64_t v17 = v238;
LABEL_8:
          *(void *)&__int128 v245 = v50;
          uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for UInt,  &protocol witness table for UInt);
          uint64_t v64 = v63;
          HttpTemplateSubstitutions.setParameter(value:for:)(v62, v63, v20);
          uint64_t v65 = v64;
LABEL_16:
          swift_bridgeObjectRelease(v65);
          (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
          goto LABEL_17;
        }

        char v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v53, v58, v60, 0LL);
        swift_bridgeObjectRelease(v60);
        swift_bridgeObjectRelease(v53);
        uint64_t v16 = v228;
        uint64_t v20 = v237;
        uint64_t v17 = v238;
        if ((v61 & 1) != 0) {
          goto LABEL_8;
        }
      }

      uint64_t v66 = v234;
      __int128 v67 = v232;
      uint64_t v68 = v235;
      (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v232, v233, v235);
      int v69 = (*(uint64_t (**)(char *, uint64_t))(v66 + 88))(v67, v68);
      if (v69 == v231)
      {
        (*(void (**)(char *, uint64_t))(v66 + 96))(v67, v68);
        id v230 = *(id *)&v67[*(int *)(sub_1000031E8(&qword_1002EB8A0) + 48)];
        uint64_t v71 = type metadata accessor for OpenableDestination(0LL, v70);
        uint64_t v72 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v71 - 8) + 8LL))(v67, v71);
        uint64_t v73 = HttpTemplateParameter.key.getter(v72);
        uint64_t v75 = v74;
        uint64_t v76 = v239;
        uint64_t v77 = v240;
        uint64_t v78 = v226;
        uint64_t v79 = (*(uint64_t (**)(char *, void, uint64_t))(v239 + 104))(v226, v225, v240);
        uint64_t v80 = RateAction.Parameter.rawValue.getter(v79);
        uint64_t v82 = v81;
        (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v77);
        if (v73 == v80 && v75 == v82)
        {
          swift_bridgeObjectRelease_n(v75, 2LL);
          uint64_t v17 = v238;
        }

        else
        {
          char v83 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v75, v80, v82, 0LL);
          swift_bridgeObjectRelease(v82);
          __n128 v84 = swift_bridgeObjectRelease(v75);
          uint64_t v17 = v238;
          if ((v83 & 1) == 0)
          {
            uint64_t v20 = v237;
            (*(void (**)(char *, uint64_t, __n128))(v238 + 8))(v237, v16, v84);

            goto LABEL_17;
          }
        }

        id v85 = v230;
        id v86 = [v230 stringValue];
        uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
        uint64_t v89 = v88;

        uint64_t v20 = v237;
        HttpTemplateSubstitutions.setParameter(value:for:)(v87, v89, v237);

        uint64_t v65 = v89;
        goto LABEL_16;
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
LABEL_17:
      v45 += v242;
      if (!--v43)
      {
        uint64_t v42 = v213;
        break;
      }
    }
  }

  swift_bridgeObjectRelease(v42);
  id v90 = v218;
  static ActionMetrics.notInstrumented.getter(v91);
  uint64_t v92 = dispatch thunk of HttpTemplateAction.makeAction(with:body:actionMetrics:)(v236, 0LL, 0LL, v90);
  (*(void (**)(char *, uint64_t))(v219 + 8))(v90, v220);
  uint64_t v93 = type metadata accessor for ExternalUrlAction(0LL);
  if (swift_dynamicCastClass(v92, v93))
  {
    swift_retain(v92);
    sub_1001D36D0();
    goto LABEL_42;
  }

  uint64_t v94 = type metadata accessor for HttpAction(0LL);
  uint64_t v95 = swift_dynamicCastClass(v92, v94);
  if (v95)
  {
    uint64_t v96 = v95;
    swift_retain(v92);
    sub_1001CABD4(v96, (uint64_t)v214, v212);
    goto LABEL_42;
  }

  uint64_t v97 = type metadata accessor for RateAction();
  uint64_t v98 = swift_dynamicCastClass(v92, v97);
  if (v98)
  {
    uint64_t v99 = v98;
    __n128 v100 = swift_retain(v92);
    sub_1001CAF18(v99, v214, v212, v100);
    goto LABEL_42;
  }

  uint64_t v101 = type metadata accessor for HttpTemplateAction(0LL);
  uint64_t v102 = swift_dynamicCastClass(v92, v101);
  if (v102)
  {
    uint64_t v103 = v102;
    swift_retain(v92);
    sub_1001CC400(v103, (uint64_t)v214, v212);
    goto LABEL_42;
  }

  uint64_t v104 = type metadata accessor for LocalAction();
  if (swift_dynamicCastClass(v92, v104))
  {
    swift_retain(v92);
    LocalAction.perform()();
    goto LABEL_42;
  }

  uint64_t v105 = type metadata accessor for OfferStateAction(0LL);
  uint64_t v106 = swift_dynamicCastClass(v92, v105);
  if (v106)
  {
    uint64_t v107 = v106;
    swift_retain(v92);
    sub_1001CC5B4(v107, (uint64_t)v214, v212);
    goto LABEL_42;
  }

  uint64_t v108 = type metadata accessor for OfferAction(0LL);
  uint64_t v109 = swift_dynamicCastClass(v92, v108);
  if (v109)
  {
    uint64_t v110 = v109;
    swift_retain(v92);
    sub_1001CC938(v110, (uint64_t)v214, v212);
    goto LABEL_42;
  }

  updateCGFloat d = type metadata accessor for UpdateAllAction(0LL);
  uint64_t v112 = swift_dynamicCastClass(v92, updated);
  if (v112)
  {
    uint64_t v113 = v112;
    __n128 v114 = swift_retain(v92);
    sub_1001CCFAC(v114, v113, (uint64_t)v214, v212);
    goto LABEL_42;
  }

  uint64_t v115 = type metadata accessor for OpenAppAction(0LL);
  uint64_t v116 = swift_dynamicCastClass(v92, v115);
  if (v116)
  {
    uint64_t v117 = v116;
    swift_retain(v92);
    sub_1001CD950(v117, (uint64_t)v214, v212);
    goto LABEL_42;
  }

  uint64_t v118 = type metadata accessor for ArcadeAction();
  uint64_t v119 = swift_dynamicCastClass(v92, v118);
  if (v119)
  {
    uint64_t v120 = v119;
    swift_retain(v92);
    sub_1001CDC34(v120, v214, v212);
    goto LABEL_42;
  }

  uint64_t v121 = type metadata accessor for CancelPreorderAction();
  if (swift_dynamicCastClass(v92, v121))
  {
    swift_retain(v92);
    sub_1001D3A48();
    goto LABEL_42;
  }

  uint64_t v123 = type metadata accessor for SearchAdAction();
  if (swift_dynamicCastClass(v92, v123))
  {
    __n128 v124 = swift_retain(v92);
    uint64_t v125 = SearchAdAction.action.getter(v124);
    sub_1001CA5F8(v125, v214, v212);
    swift_unknownObjectRelease(v221);
    swift_release_n(v92, 2LL);
    uint64_t v126 = v125;
LABEL_46:
    swift_release(v126);
    goto LABEL_43;
  }

  uint64_t v127 = type metadata accessor for RateLimitedAction(0LL);
  uint64_t v128 = swift_dynamicCastClass(v92, v127);
  if (v128)
  {
    uint64_t v129 = v128;
    swift_retain(v92);
    sub_1001CE0CC(v129, (uint64_t)v214, v212);
    goto LABEL_42;
  }

  uint64_t v130 = type metadata accessor for ArcadeSubscriptionStateAction();
  uint64_t v131 = swift_dynamicCastClass(v92, v130);
  if (v131)
  {
    uint64_t v132 = v131;
    swift_retain(v92);
    sub_1001CE4E4(v132, (uint64_t)v214, v212);
    goto LABEL_42;
  }

  uint64_t v133 = type metadata accessor for CrossfireReferralAction();
  if (swift_dynamicCastClass(v92, v133))
  {
    type metadata accessor for MetricsActivity(0LL);
    swift_retain(v92);
    uint64_t v136 = static MetricsActivity.current.getter(v134, v135);
    uint64_t v137 = v209;
    CrossfireReferralAction.referrerData.getter();
    dispatch thunk of MetricsActivity.setReferrerData(_:)(v137);
    __n128 v138 = swift_release(v136);
    (*(void (**)(char *, uint64_t, __n128))(v210 + 8))(v137, v211, v138);
    goto LABEL_42;
  }

  uint64_t v139 = type metadata accessor for ShowRatingPromptAction(0LL);
  uint64_t v140 = swift_dynamicCastClass(v92, v139);
  if (v140)
  {
    uint64_t v141 = v140;
    swift_retain(v92);
    sub_1001CE6B8(v141, v212);
    goto LABEL_42;
  }

  uint64_t v142 = type metadata accessor for FlowAction(0LL);
  uint64_t v143 = swift_dynamicCastClass(v92, v142);
  if (v143)
  {
    uint64_t v144 = v143;
    __n128 v145 = swift_retain(v92);
    FlowAction.page.getter(v145);
    uint64_t v146 = v204;
    (*(void (**)(char *, void, uint64_t))(v201 + 104))(v199, enum case for FlowPage.arcadeWelcome(_:), v204);
    uint64_t v147 = sub_100003B6C( qword_1002E0790,  (uint64_t (*)(uint64_t))&type metadata accessor for FlowPage,  (uint64_t)&protocol conformance descriptor for FlowPage);
    dispatch thunk of RawRepresentable.rawValue.getter(&v245, v146, v147);
    dispatch thunk of RawRepresentable.rawValue.getter(&v244, v146, v147);
    uint64_t v148 = *((void *)&v245 + 1);
    __int128 v149 = v244;
    if (v245 == v244)
    {
      swift_bridgeObjectRelease_n(*((void *)&v245 + 1), 2LL);
      uint64_t v150 = *(void (**)(char *, uint64_t))(v201 + 8);
      uint64_t v151 = v204;
      v150(v199, v204);
      v150(v200, v151);
    }

    else
    {
      char v162 = _stringCompareWithSmolCheck(_:_:expecting:)( v245,  *((void *)&v245 + 1),  v244,  *((void *)&v244 + 1),  0LL);
      swift_bridgeObjectRelease(v148);
      __n128 v163 = swift_bridgeObjectRelease(*((void *)&v149 + 1));
      uint64_t v164 = *(void (**)(char *, uint64_t, __n128))(v201 + 8);
      uint64_t v165 = v204;
      v164(v199, v204, v163);
      ((void (*)(char *, uint64_t))v164)(v200, v165);
      if ((v162 & 1) == 0)
      {
        sub_100078548(v144, (uint64_t)v214);
        goto LABEL_42;
      }
    }

    sub_100077250(v144, (uint64_t)v214);
LABEL_42:
    swift_unknownObjectRelease(v221);
    swift_release_n(v92, 2LL);
LABEL_43:
    (*(void (**)(char *, uint64_t))(v234 + 8))(v233, v235);
    return (*(uint64_t (**)(char *, uint64_t))(v222 + 8))(v236, v223);
  }

  uint64_t v152 = type metadata accessor for TabChangeAction(0LL);
  if (swift_dynamicCastClass(v92, v152))
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v224 + qword_1002E0738);
    if (Strong)
    {
      uint64_t v154 = (void *)Strong;
      swift_retain(v92);
      sub_100082D00((uint64_t)&v245);

      uint64_t v155 = *((void *)&v246 + 1);
      if (*((void *)&v246 + 1))
      {
        uint64_t v156 = v247;
        sub_100005F8C(&v245, *((uint64_t *)&v246 + 1));
        v157 = v202;
        uint64_t v158 = TabChangeAction.navigationTab.getter();
        char v159 = TabChangeAction.popToRoot.getter(v158);
        uint64_t v160 = TabChangeAction.actions.getter();
        v156[3](v157, v159 & 1, v160, v212, v155, v156);
        __n128 v161 = swift_bridgeObjectRelease(v160);
        (*(void (**)(char *, uint64_t, __n128))(v203 + 8))(v157, v205, v161);
        _s6Arcade17PillOverlayLayoutVwxx_0(&v245);
LABEL_69:
        swift_release_n(v92, 2LL);
        swift_unknownObjectRelease(v221);
        goto LABEL_43;
      }
    }

    else
    {
      uint64_t v247 = 0LL;
      __int128 v245 = 0u;
      __int128 v246 = 0u;
      swift_retain(v92);
    }

    sub_100006060((uint64_t)&v245, (uint64_t *)&unk_1002E1800);
    goto LABEL_69;
  }

  uint64_t v166 = type metadata accessor for OfferAlertAction(0LL);
  uint64_t v167 = swift_dynamicCastClass(v92, v166);
  if (v167)
  {
    uint64_t v168 = v167;
    swift_retain(v92);
    sub_100076B3C(v168, (uint64_t)v214, v212);
    goto LABEL_42;
  }

  uint64_t v169 = type metadata accessor for AlertAction(0LL);
  uint64_t v170 = swift_dynamicCastClass(v92, v169);
  if (v170)
  {
    uint64_t v171 = v170;
    swift_retain(v92);
    sub_100076424(v171, (uint64_t)v214, v212);
    goto LABEL_42;
  }

  uint64_t v172 = type metadata accessor for AdTransparencyAction(0LL);
  if (swift_dynamicCastClass(v92, v172))
  {
LABEL_73:
    swift_unknownObjectRelease(v221);
    uint64_t v126 = v92;
    goto LABEL_46;
  }

  uint64_t v173 = type metadata accessor for CompoundAction();
  if (!swift_dynamicCastClass(v92, v173))
  {
    uint64_t v184 = type metadata accessor for ScrollingAlertAction(0LL);
    if (swift_dynamicCastClass(v92, v184))
    {
      swift_retain(v92);
      sub_10007896C();
      goto LABEL_42;
    }

    uint64_t v185 = type metadata accessor for GameCenterPlayerProfileAction(0LL);
    if (swift_dynamicCastClass(v92, v185))
    {
      swift_retain(v92);
      sub_100078B94();
      goto LABEL_42;
    }

    uint64_t v186 = type metadata accessor for GameCenterAchievementsAction(0LL);
    uint64_t v187 = swift_dynamicCastClass(v92, v186);
    if (v187)
    {
      uint64_t v188 = v187;
      type metadata accessor for GameCenter(0LL);
      uint64_t v189 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
      swift_retain(v92);
      uint64_t v191 = static OS_dispatch_queue.main.getter(v190);
      *((void *)&v246 + 1) = v189;
      uint64_t v247 = (void (**)(char *, void, uint64_t, uint64_t, uint64_t, void *))&protocol witness table for OS_dispatch_queue;
      *(void *)&__int128 v245 = v191;
      uint64_t v192 = swift_allocObject(&unk_10028DA90, 32LL, 7LL);
      *(void *)(v192 + swift_unknownObjectWeakDestroy(v0 + 16) = v188;
      uint64_t v193 = v224;
      *(void *)(v192 + 2swift_weakDestroy(v0 + 4) = v224;
      swift_retain(v92);
      __n128 v194 = swift_retain(v193);
      static GameCenter.withLocalPlayer(on:_:)(&v245, sub_100078E14, v192, v194);
      swift_release(v192);
      _s6Arcade17PillOverlayLayoutVwxx_0(&v245);
      goto LABEL_42;
    }

    v195 = sub_10007527C();
    if (v195)
    {
      uint64_t v196 = (uint64_t)v195;
      dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(v92, v214, v212);
      swift_unknownObjectRelease(v221);
      swift_release(v92);
      uint64_t v126 = v196;
      goto LABEL_46;
    }

    goto LABEL_73;
  }

  __n128 v174 = swift_retain(v92);
  unint64_t result = CompoundAction.actions.getter(v174);
  uint64_t v243 = result;
  if (!(result >> 62))
  {
    uint64_t v175 = *(void *)((v243 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v175) {
      goto LABEL_77;
    }
LABEL_95:
    swift_bridgeObjectRelease(v243);
    goto LABEL_42;
  }

  if (v243 < 0) {
    uint64_t v197 = v243;
  }
  else {
    uint64_t v197 = v243 & 0xFFFFFFFFFFFFFF8LL;
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter(v197);
  uint64_t v175 = result;
  if (!result) {
    goto LABEL_95;
  }
LABEL_77:
  if (v175 >= 1)
  {
    uint64_t v176 = 0LL;
    unint64_t v177 = v243 & 0xC000000000000001LL;
    uint64_t v178 = enum case for ActionRunner.Origin.userInitiated(_:);
    uint64_t v179 = v207;
    v180 = v206;
    uint64_t v181 = v208;
    do
    {
      if (v177)
      {
        uint64_t v182 = specialized _ArrayBuffer._getElementSlowPath(_:)(v176, v243);
      }

      else
      {
        uint64_t v182 = *(void *)(v243 + 8 * v176 + 32);
        swift_retain(v182);
      }

      ++v176;
      (*(void (**)(char *, uint64_t, uint64_t))(v179 + 104))(v180, v178, v181);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v182, v214, v180, v212);
      __n128 v183 = swift_release(v182);
      (*(void (**)(char *, uint64_t, __n128))(v179 + 8))(v180, v181, v183);
    }

    while (v175 != v176);
    goto LABEL_95;
  }

  __break(1u);
  return result;
}

uint64_t sub_1001CC400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3 + qword_1002E0738);
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    sub_100082D00((uint64_t)&v18);

    if (*((void *)&v19 + 1))
    {
      sub_100009D90(&v18, (uint64_t)v21);
      sub_10001027C(a2, (uint64_t)&v18, (uint64_t *)&unk_1002DF680);
      uint64_t v10 = type metadata accessor for ObjectGraph(0LL);
      uint64_t v11 = swift_dynamicCastClassUnconditional(a3, v10, 0LL, 0LL, 0LL);
      uint64_t v12 = (objc_class *)type metadata accessor for HttpTemplateController();
      uint64_t v13 = objc_allocWithZone(v12);
      *(void *)&v13[OBJC_IVAR____TtC6Arcade22HttpTemplateController_textFields] = _swiftEmptyArrayStorage;
      *(void *)&v13[OBJC_IVAR____TtC6Arcade22HttpTemplateController_okAction] = 0LL;
      v13[OBJC_IVAR____TtC6Arcade22HttpTemplateController_hasRequiredParameters] = 0;
      *(void *)&v13[OBJC_IVAR____TtC6Arcade22HttpTemplateController_objectGraph] = v11;
      *(void *)&v13[OBJC_IVAR____TtC6Arcade22HttpTemplateController_actionRunner] = v4;
      *(void *)&v13[OBJC_IVAR____TtC6Arcade22HttpTemplateController_templateAction] = a1;
      sub_10001027C( (uint64_t)&v18,  (uint64_t)&v13[OBJC_IVAR____TtC6Arcade22HttpTemplateController_actionSender],  (uint64_t *)&unk_1002DF680);
      v17.id receiver = v13;
      v17.super_class = v12;
      swift_retain(a1);
      swift_retain(a3);
      *(void *)&double v14 = swift_retain(v4).n128_u64[0];
      id v15 = objc_msgSendSuper2(&v17, "init", v14);
      sub_100006060((uint64_t)&v18, (uint64_t *)&unk_1002DF680);
      sub_100099438(v21);

      return _s6Arcade17PillOverlayLayoutVwxx_0(v21);
    }
  }

  else
  {
    uint64_t v20 = 0LL;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
  }

  return sub_100006060((uint64_t)&v18, (uint64_t *)&unk_1002E1800);
}

uint64_t sub_1001CC5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for LegacyAppState(0LL, v7);
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for AdamId(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001027C(a2, (uint64_t)v50, (uint64_t *)&unk_1002DF680);
  uint64_t v42 = v3;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  if (v51)
  {
    uint64_t v17 = sub_1000031E8(&qword_1002EB8B0);
    uint64_t v18 = swift_dynamicCast(v49, v50, (char *)&type metadata for Any + 8, v17, 6LL);
    if ((_DWORD)v18)
    {
      uint64_t v20 = v49[0];
      uint64_t v19 = v49[1];
      goto LABEL_6;
    }
  }

  else
  {
    sub_100006060((uint64_t)v50, (uint64_t *)&unk_1002DF680);
  }

  uint64_t v21 = *(void *)(v3 + qword_1002F1638 + 8);
  uint64_t ObjectType = swift_getObjectType(*(void *)(v3 + qword_1002F1638));
  OfferStateAction.adamId.getter();
  uint64_t v20 = dispatch thunk of AppStateController.stateMachine(forApp:)(v16, ObjectType, v21);
  uint64_t v19 = v23;
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
LABEL_6:
  uint64_t v24 = OfferStateAction.defaultAction.getter(v18);
  uint64_t v25 = swift_getObjectType(v20);
  uint64_t v26 = dispatch thunk of AppStateMachine.currentState.getter(v25, v19);
  if ((LegacyAppState.isBuyable.getter(v26) & 1) == 0)
  {
    if ((LegacyAppState.isCancelable.getter() & 1) != 0)
    {
      uint64_t v29 = OfferStateAction.cancelAction.getter();
      if (!v29)
      {
        OfferStateAction.adamId.getter();
        sub_1001D3800();
        swift_release(v24);
        __n128 v39 = swift_unknownObjectRelease(v20);
        (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v39);
        goto LABEL_19;
      }

      uint64_t v30 = v29;
      uint64_t v32 = v43;
      uint64_t v31 = v44;
      (*(void (**)(char *, void, uint64_t))(v43 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v44);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v30, v45, v9, v46);
      swift_release(v24);
      swift_unknownObjectRelease(v20);
      __n128 v33 = swift_release(v30);
    }

    else
    {
      if ((LegacyAppState.isLocalApplication.getter() & 1) != 0)
      {
        uint64_t v27 = OfferStateAction.openAction.getter();
        if (v27) {
          goto LABEL_8;
        }
LABEL_14:
        swift_retain(v24);
        uint64_t v28 = v24;
        goto LABEL_15;
      }

      uint64_t v32 = v43;
      uint64_t v31 = v44;
      (*(void (**)(char *, void, uint64_t))(v43 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v44);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v24, v45, v9, v46);
      swift_release(v24);
      __n128 v33 = swift_unknownObjectRelease(v20);
    }

    (*(void (**)(char *, uint64_t, __n128))(v32 + 8))(v9, v31, v33);
LABEL_19:
    uint64_t v35 = v47;
    uint64_t v34 = v48;
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v12, v34);
  }

  uint64_t v27 = OfferStateAction.buyAction.getter();
  if (!v27) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v28 = v27;
LABEL_15:
  uint64_t v35 = v47;
  uint64_t v34 = v48;
  uint64_t v37 = v43;
  uint64_t v36 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v44);
  dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v28, v45, v9, v46);
  swift_release(v24);
  swift_release(v28);
  __n128 v38 = swift_unknownObjectRelease(v20);
  (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v9, v36, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v12, v34);
}

double sub_1001CC938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v69 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ActionMetrics(0LL);
  __n128 v11 = __chkstk_darwin(v10);
  __int128 v67 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v68 = type metadata accessor for OpenableDestination(0LL, v11);
  uint64_t v74 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v66 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v15 = __chkstk_darwin(v14);
  uint64_t v73 = (char *)&v65 - v16;
  uint64_t v17 = type metadata accessor for LegacyAppState(0LL, v15);
  uint64_t v78 = *(void *)(v17 - 8);
  uint64_t v79 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v65 - v21;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v65 - v24;
  uint64_t v26 = type metadata accessor for AdamId(0LL);
  uint64_t v80 = *(void *)(v26 - 8);
  uint64_t v81 = v26;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v70 = a2;
  sub_10001027C(a2, (uint64_t)v83, (uint64_t *)&unk_1002DF680);
  uint64_t v76 = v3;
  uint64_t v77 = a1;
  uint64_t v75 = a3;
  uint64_t v71 = v8;
  uint64_t v72 = v7;
  if (v84)
  {
    uint64_t v29 = sub_1000031E8(&qword_1002EB8B0);
    if (swift_dynamicCast(v82, v83, (char *)&type metadata for Any + 8, v29, 6LL))
    {
      uint64_t v31 = v82[0];
      uint64_t v30 = v82[1];
      goto LABEL_6;
    }
  }

  else
  {
    sub_100006060((uint64_t)v83, (uint64_t *)&unk_1002DF680);
  }

  uint64_t v32 = *(void *)(v3 + qword_1002F1638 + 8);
  uint64_t ObjectType = swift_getObjectType(*(void *)(v3 + qword_1002F1638));
  OfferAction.adamId.getter(ObjectType);
  uint64_t v31 = dispatch thunk of AppStateController.stateMachine(forApp:)(v28, ObjectType, v32);
  uint64_t v30 = v34;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v28, v81);
LABEL_6:
  uint64_t v36 = v78;
  uint64_t v35 = v79;
  uint64_t v37 = swift_getObjectType(v31);
  dispatch thunk of AppStateMachine.currentState.getter(v37, v30);
  int v38 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v25, v35);
  if (v38 == enum case for LegacyAppState.waiting(_:))
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v22, v25, v35);
    v40.n128_f64[0] = (*(double (**)(char *, uint64_t))(v36 + 96))(v22, v35);
    uint64_t v41 = type metadata accessor for InstallationType(0LL, v40);
LABEL_8:
    (*(void (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8LL))(v22, v41);
    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v25, v35);
    OfferAction.adamId.getter(v42);
    sub_1001D3800();
    __n128 v43 = swift_unknownObjectRelease(v31);
    (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v28, v81, v43);
    return result;
  }

  if (v38 == enum case for LegacyAppState.purchased(_:))
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v19, v25, v35);
    (*(void (**)(char *, uint64_t))(v36 + 96))(v19, v35);
    uint64_t v45 = type metadata accessor for PurchaseType(0LL);
    uint64_t v46 = *(void *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v46 + 88))(v19, v45) != enum case for PurchaseType.preorder(_:))
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v45);
      goto LABEL_12;
    }
  }

  else if (v38 == enum case for LegacyAppState.updatable(_:) || v38 == enum case for LegacyAppState.downloadable(_:))
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v22, v25, v35);
    (*(void (**)(char *, uint64_t))(v36 + 96))(v22, v35);
    __n128 v39 = swift_bridgeObjectRelease(*((void *)v22 + 1));
  }

  else
  {
    if (v38 == enum case for LegacyAppState.downloading(_:))
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v22, v25, v35);
      (*(void (**)(char *, uint64_t))(v36 + 96))(v22, v35);
      uint64_t v41 = type metadata accessor for LegacyAppState.AppInstallationDetails(0LL);
      goto LABEL_8;
    }

    if (v38 == enum case for LegacyAppState.openable(_:))
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v22, v25, v35);
      (*(void (**)(char *, uint64_t))(v36 + 96))(v22, v35);

      uint64_t v51 = v73;
      uint64_t v52 = v74;
      uint64_t v53 = v68;
      uint64_t v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 32))(v73, v22, v68);
      OfferAction.adamId.getter(v54);
      uint64_t v55 = v66;
      uint64_t v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v52 + 16))(v66, v51, v53);
      uint64_t v57 = v67;
      static ActionMetrics.notInstrumented.getter(v56);
      uint64_t v58 = type metadata accessor for OpenAppAction(0LL);
      swift_allocObject(v58, *(unsigned int *)(v58 + 48), *(unsigned __int16 *)(v58 + 52));
      uint64_t v59 = OpenAppAction.init(title:adamId:allowBetaApps:destination:presentationStyle:actionMetrics:)( 0LL,  0LL,  v28,  1LL,  v55,  0LL,  v57);
      uint64_t v61 = v71;
      uint64_t v60 = v72;
      uint64_t v62 = v69;
      (*(void (**)(char *, void, uint64_t))(v71 + 104))( v69,  enum case for ActionRunner.Origin.userInitiated(_:),  v72);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v59, v70, v62, v75);
      __n128 v63 = swift_release(v59);
      (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v62, v60, v63);
      __n128 v64 = swift_unknownObjectRelease(v31);
      (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v73, v53, v64);
      goto LABEL_13;
    }

    if (v38 != enum case for LegacyAppState.buyable(_:) && v38 != enum case for LegacyAppState.unknown(_:))
    {
LABEL_12:
      uint64_t v47 = *(void *)(v76 + qword_1002F1638 + 8);
      uint64_t v48 = swift_getObjectType(*(void *)(v76 + qword_1002F1638));
      OfferAction.adamId.getter(v48);
      dispatch thunk of AppStateController.refreshState(for:)(v28, v48, v47);
      __n128 v49 = swift_unknownObjectRelease(v31);
      (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v28, v81, v49);
LABEL_13:
      (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v25, v35, v50);
      return result;
    }
  }

  (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v25, v35, v39);
  sub_1001CEEF4(v77, v31, v30, v75);
  *(void *)&double result = swift_unknownObjectRelease(v31).n128_u64[0];
  return result;
}

void sub_1001CCFAC(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = type metadata accessor for InstallationType(0LL, a1);
  uint64_t v121 = *(void *)(v7 - 8);
  uint64_t v122 = v7;
  __chkstk_darwin(v7);
  uint64_t v120 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AdamId(0LL);
  *(void *)&__int128 v128 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v119 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v106 - v12;
  __chkstk_darwin(v14);
  uint64_t v126 = (uint64_t)&v106 - v15;
  uint64_t v16 = sub_1000031E8((uint64_t *)&unk_1002DFC80);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v113 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v118 = (char *)&v106 - v20;
  __chkstk_darwin(v21);
  uint64_t v112 = (char *)&v106 - v22;
  __chkstk_darwin(v23);
  uint64_t v123 = (char *)&v106 - v24;
  __chkstk_darwin(v25);
  __n128 v124 = (char *)&v106 - v26;
  __n128 v28 = __chkstk_darwin(v27);
  uint64_t v114 = (uint64_t)&v106 - v29;
  updateCGFloat d = UpdateAllAction.ordering.getter(v28);
  if (!updated)
  {
    uint64_t v73 = *(void **)(v4 + qword_1002F1658);
    uint64_t v74 = swift_allocObject(&unk_10028DBD0, 32LL, 7LL);
    *(void *)(v74 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
    *(void *)(v74 + 2swift_weakDestroy(v0 + 4) = a4;
    uint64_t v134 = sub_1001D3E38;
    uint64_t v135 = v74;
    __int128 aBlock = _NSConcreteStackBlock;
    uint64_t v131 = 1107296256LL;
    uint64_t v132 = sub_1001CFE2C;
    uint64_t v133 = &unk_10028DBE8;
    uint64_t v75 = _Block_copy(&aBlock);
    uint64_t v76 = v135;
    swift_retain(v5);
    swift_retain(a4);
    objc_msgSend(v73, "getUpdatesWithCompletionBlock:", v75, swift_release(v76).n128_f64[0]);
    _Block_release(v75);
    return;
  }

  uint64_t v31 = updated;
  uint64_t v129 = &_swiftEmptySetSingleton;
  unint64_t v117 = sub_1000E6CC8((uint64_t)_swiftEmptyArrayStorage);
  int64_t v32 = *(void *)(v31 + 16);
  uint64_t v108 = v5;
  if (v32)
  {
    uint64_t v110 = (uint64_t *)(v114 + *(int *)(v16 + 48));
    unint64_t v33 = (*(unsigned __int8 *)(v17 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v107 = v31;
    uint64_t v34 = v31 + v33;
    uint64_t v109 = *(void *)(v17 + 72);
    uint64_t v125 = (char *)_swiftEmptyArrayStorage;
    uint64_t v35 = (uint64_t)v124;
    char v111 = v13;
    do
    {
      int64_t v116 = v32;
      uint64_t v115 = (char *)v34;
      uint64_t v36 = v114;
      sub_10001027C(v34, v114, (uint64_t *)&unk_1002DFC80);
      uint64_t v37 = *v110;
      uint64_t v38 = v110[1];
      __n128 v39 = (uint64_t *)(v35 + *(int *)(v16 + 48));
      uint64_t v40 = v128;
      uint64_t v127 = *(void (**)(void))(v128 + 32);
      ((void (*)(uint64_t, uint64_t, uint64_t))v127)(v35, v36, v9);
      *__n128 v39 = v37;
      v39[1] = v38;
      uint64_t v41 = (uint64_t *)&v123[*(int *)(v16 + 48)];
      uint64_t v42 = *(void (**)(void))(v40 + 16);
      v42();
      *uint64_t v41 = v37;
      v41[1] = v38;
      swift_bridgeObjectRetain_n(v38, 2LL);
      __n128 v43 = v125;
      if ((swift_isUniquelyReferenced_nonNull_native(v125) & 1) == 0) {
        __n128 v43 = sub_100019F48(0LL, *((void *)v43 + 2) + 1LL, 1, v43);
      }
      unint64_t v45 = *((void *)v43 + 2);
      unint64_t v44 = *((void *)v43 + 3);
      if (v45 >= v44 >> 1) {
        __n128 v43 = sub_100019F48((char *)(v44 > 1), v45 + 1, 1, v43);
      }
      *((void *)v43 + 2) = v45 + 1;
      uint64_t v125 = v43;
      uint64_t v46 = &v43[16 * v45];
      *((void *)v46 + swift_weakDestroy(v0 + 4) = v37;
      *((void *)v46 + 5) = v38;
      uint64_t v47 = *(void (**)(char *, uint64_t))(v128 + 8);
      v47(v123, v9);
      uint64_t v48 = (uint64_t)v112;
      __n128 v49 = (uint64_t *)&v112[*(int *)(v16 + 48)];
      __n128 v50 = v124;
      ((void (*)(char *, char *, uint64_t))v42)(v112, v124, v9);
      *__n128 v49 = v37;
      v49[1] = v38;
      uint64_t v51 = v126;
      sub_10001B5E0(v126, v48);
      v47((char *)v51, v9);
      uint64_t v52 = (uint64_t *)&v118[*(int *)(v16 + 48)];
      v42();
      *uint64_t v52 = v37;
      v52[1] = v38;
      uint64_t v53 = v16;
      uint64_t v54 = (uint64_t *)&v113[*(int *)(v16 + 48)];
      ((void (*)(char *, char *, uint64_t))v42)(v113, v50, v9);
      *uint64_t v54 = v37;
      v54[1] = v38;
      uint64_t v55 = v111;
      v127();
      unint64_t v56 = v117;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v117);
      __int128 aBlock = (void **)v56;
      unint64_t v59 = sub_1000E8690(v37, v38);
      uint64_t v60 = *(void *)(v56 + 16);
      BOOL v61 = (v58 & 1) == 0;
      uint64_t v62 = v60 + v61;
      if (__OFADD__(v60, v61))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }

      char v63 = v58;
      if (*(void *)(v56 + 24) >= v62)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1000B180C();
        }
      }

      else
      {
        sub_1000B00C8(v62, isUniquelyReferenced_nonNull_native);
        unint64_t v64 = sub_1000E8690(v37, v38);
        if ((v63 & 1) != (v65 & 1)) {
          goto LABEL_47;
        }
        unint64_t v59 = v64;
      }

      uint64_t v66 = v55;
      __int128 v67 = aBlock;
      uint64_t v16 = v53;
      if ((v63 & 1) != 0)
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 40))( (char *)aBlock[7] + *(void *)(v128 + 72) * v59,  v66,  v9);
        uint64_t v35 = (uint64_t)v124;
      }

      else
      {
        aBlock[(v59 >> 6) + 8] = (void *)((unint64_t)aBlock[(v59 >> 6) + 8] | (1LL << v59));
        uint64_t v68 = (uint64_t *)((char *)v67[6] + 16 * v59);
        *uint64_t v68 = v37;
        v68[1] = v38;
        ((void (*)(char *, char *, uint64_t))v127)((char *)v67[7] + *(void *)(v128 + 72) * v59, v66, v9);
        int v69 = (char *)v67[2];
        BOOL v70 = __OFADD__(v69, 1LL);
        uint64_t v71 = v69 + 1;
        uint64_t v35 = (uint64_t)v124;
        if (v70) {
          goto LABEL_45;
        }
        v67[2] = v71;
        swift_bridgeObjectRetain(v38);
      }

      unint64_t v117 = (unint64_t)aBlock;
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(0x8000000000000000LL);
      sub_100006060(v35, (uint64_t *)&unk_1002DFC80);
      v47(v118, v9);
      uint64_t v34 = (uint64_t)&v115[v109];
      int64_t v32 = v116 - 1;
    }

    while (v116 != 1);
    swift_bridgeObjectRelease(v107);
    uint64_t v72 = v129;
    uint64_t v5 = v108;
  }

  else
  {
    swift_bridgeObjectRelease(v31);
    uint64_t v125 = (char *)_swiftEmptyArrayStorage;
    uint64_t v72 = &_swiftEmptySetSingleton;
  }

  uint64_t v77 = v72[7];
  uint64_t v115 = (char *)(v72 + 7);
  uint64_t v78 = 1LL << *((_BYTE *)v72 + 32);
  uint64_t v79 = -1LL;
  if (v78 < 64) {
    uint64_t v79 = ~(-1LL << v78);
  }
  unint64_t v80 = v79 & v77;
  uint64_t v123 = (char *)(v5 + qword_1002F1638);
  int64_t v116 = (unint64_t)(v78 + 63) >> 6;
  LODWORD(v118) = enum case for InstallationType.update(_:);
  __n128 v124 = (char *)v72;
  swift_bridgeObjectRetain(v72);
  uint64_t v81 = 0LL;
  uint64_t v82 = v128;
  char v83 = v120;
  while (1)
  {
    if (v80)
    {
      unint64_t v84 = __clz(__rbit64(v80));
      v80 &= v80 - 1;
      uint64_t v127 = v81;
      unint64_t v85 = v84 | ((void)v81 << 6);
      id v86 = v124;
      goto LABEL_26;
    }

    int64_t v95 = (int64_t)v81 + 1;
    id v86 = v124;
    uint64_t v96 = v125;
    if (__OFADD__(v81, 1LL)) {
      goto LABEL_44;
    }
    if (v95 >= v116)
    {
LABEL_42:
      swift_release(v124);
      __n128 v100 = *(void **)(v108 + qword_1002F1658);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v96);
      uint64_t v102 = v129;
      uint64_t v103 = swift_allocObject(&unk_10028DC20, 48LL, 7LL);
      *(void *)(v103 + swift_unknownObjectWeakDestroy(v0 + 16) = v117;
      *(void *)(v103 + 2swift_weakDestroy(v0 + 4) = v102;
      __int128 v128 = *(_OWORD *)v123;
      *(_OWORD *)(v103 + 32) = v128;
      uint64_t v134 = sub_1001D3EA8;
      uint64_t v135 = v103;
      __int128 aBlock = _NSConcreteStackBlock;
      uint64_t v131 = 1107296256LL;
      uint64_t v132 = sub_1001CF8D0;
      uint64_t v133 = &unk_10028DC38;
      uint64_t v104 = _Block_copy(&aBlock);
      uint64_t v105 = v135;
      swift_unknownObjectRetain(v128);
      objc_msgSend(v100, "updateAllWithOrder:completionBlock:", isa, v104, swift_release(v105).n128_f64[0]);
      _Block_release(v104);

      return;
    }

    unint64_t v97 = *(void *)&v115[8 * v95];
    int64_t v98 = (int64_t)v81 + 1;
    if (!v97)
    {
      int64_t v98 = (int64_t)v81 + 2;
      unint64_t v97 = *(void *)&v115[8 * v98];
      if (!v97)
      {
        int64_t v98 = (int64_t)v81 + 3;
        unint64_t v97 = *(void *)&v115[8 * v98];
        if (!v97) {
          break;
        }
      }
    }

double sub_1001CD950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for AdamId(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = OpenAppAction.adamId.getter(v9);
  uint64_t v13 = (void *)AdamId.numberValue.getter(v12);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (v13)
  {
    uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
    uint64_t v15 = swift_allocObject(v14, 40LL, 7LL);
    *(_OWORD *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233570;
    *(void *)(v15 + 32) = v13;
    aBlock[0] = v15;
    specialized Array._endMutation()(v15);
    uint64_t v16 = aBlock[0];
    sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
    id v17 = v13;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v16);
    id v19 = [(id)objc_opt_self(ASDAppQuery) queryForStoreItemIDs:isa];

    uint64_t v20 = swift_allocObject(&unk_10028DC98, 24LL, 7LL);
    swift_weakInit(v20 + 16, v4);
    uint64_t v21 = (void *)swift_allocObject(&unk_10028DCC0, 48LL, 7LL);
    void v21[2] = v17;
    v21[3] = v20;
    v21[4] = a3;
    void v21[5] = a1;
    aBlock[4] = sub_1001D3FE8;
    uint64_t v31 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1001D0A78;
    aBlock[3] = &unk_10028DCD8;
    uint64_t v22 = _Block_copy(aBlock);
    uint64_t v23 = v31;
    id v24 = v17;
    swift_retain(a3);
    swift_retain(a1);
    objc_msgSend(v19, "executeQueryWithResultHandler:", v22, swift_release(v23).n128_f64[0]);
    _Block_release(v22);
  }

  else
  {
    if (qword_1002DC380 != -1) {
      swift_once(&qword_1002DC380, sub_100018F98);
    }
    uint64_t v26 = type metadata accessor for OSLogger(0LL);
    sub_1000061F4(v26, (uint64_t)qword_1002EE558);
    uint64_t v27 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v28 = type metadata accessor for LogMessage(0LL);
    uint64_t v29 = swift_allocObject( v27,  ((*(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL))
          + *(void *)(*(void *)(v28 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v29 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    LogMessage.init(stringLiteral:)(0xD000000000000036LL, 0x800000010024DFC0LL);
    Logger.error(_:)(v29, v26, &protocol witness table for OSLogger);
    *(void *)&double result = swift_bridgeObjectRelease(v29).n128_u64[0];
  }

  return result;
}

uint64_t sub_1001CDC34(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v58 = a3;
  uint64_t v55 = a2;
  uint64_t v4 = sub_1000031E8(&qword_1002EB8D8);
  __chkstk_darwin(v4);
  unint64_t v56 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v51 - v7;
  uint64_t v9 = sub_1000031E8(&qword_1002EB8E0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v57 = (uint64_t)&v51 - v13;
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002E6FB0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for AdamId(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v22 = __chkstk_darwin(v21);
  id v24 = (char *)&v51 - v23;
  uint64_t result = ArcadeAction.productId.getter(v22);
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v54 = result;
    ArcadeAction.appAdamId.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1LL, v17) == 1)
    {
      swift_bridgeObjectRelease(v27);
      return sub_100006060((uint64_t)v16, (uint64_t *)&unk_1002E6FB0);
    }

    else
    {
      uint64_t v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v24, v16, v17);
      uint64_t v29 = ArcadeAction.postSubscribeAction.getter(v28);
      uint64_t v53 = v3;
      if (v29)
      {
        uint64_t v30 = v29;
        uint64_t v31 = swift_allocObject(&unk_10028DC98, 24LL, 7LL);
        uint64_t v52 = v8;
        uint64_t v32 = v31;
        swift_weakInit(v31 + 16, v3);
        sub_10001027C((uint64_t)v55, (uint64_t)v61, (uint64_t *)&unk_1002DF680);
        unint64_t v33 = (void *)swift_allocObject(&unk_10028DDD8, 72LL, 7LL);
        sub_10003FBFC((uint64_t)v61, (uint64_t)(v33 + 2), (uint64_t *)&unk_1002DF680);
        uint64_t v34 = v58;
        void v33[6] = v30;
        v33[7] = v34;
        v33[8] = v32;
        uint64_t v8 = v52;
        __n128 v35 = swift_retain(v34);
        ArcadeSubscriptionManager.PaymentCallbacks.init(success:failure:)(sub_1001D40B0, v33, 0LL, 0LL, v35);
        uint64_t v36 = type metadata accessor for ArcadeSubscriptionManager.PaymentCallbacks(0LL);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56LL))(v11, 0LL, 1LL, v36);
        uint64_t v37 = (uint64_t)v11;
        uint64_t v38 = v57;
        sub_10003FBFC(v37, v57, &qword_1002EB8E0);
      }

      else
      {
        uint64_t v39 = ((uint64_t (*)(void))type metadata accessor for ArcadeSubscriptionManager.PaymentCallbacks)();
        uint64_t v38 = v57;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v57, 1LL, 1LL, v39);
      }

      uint64_t v40 = type metadata accessor for ArcadeSubscriptionDecorator(0LL);
      uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56LL);
      uint64_t v42 = v41(v8, 1LL, 1LL, v40);
      ArcadeAction.subscriptionToken.getter(&v59, v42);
      if (v60)
      {
        sub_1000086FC(&v59, v61);
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v24, v17);
        sub_100008364((uint64_t)v61, (uint64_t)&v59);
        uint64_t v43 = v58;
        swift_retain(v58);
        __n128 v44 = swift_bridgeObjectRetain(v27);
        unint64_t v45 = v56;
        uint64_t v55 = v41;
        uint64_t v46 = v54;
        ArcadeSubscriptionDecorator.init(objectGraph:product:appAdamId:subscriptionToken:)( v43,  v54,  v27,  v20,  &v59,  v44);
        _s6Arcade17PillOverlayLayoutVwxx_0(v61);
        sub_100006060((uint64_t)v8, &qword_1002EB8D8);
        v55(v45, 0LL, 1LL, v40);
        uint64_t v47 = (uint64_t)v45;
        uint64_t v38 = v57;
        sub_10003FBFC(v47, (uint64_t)v8, &qword_1002EB8D8);
      }

      else
      {
        sub_100006060((uint64_t)&v59, (uint64_t *)&unk_1002DF680);
        uint64_t v43 = v58;
        uint64_t v46 = v54;
      }

      uint64_t v48 = type metadata accessor for CommerceDialogHandler(0LL);
      uint64_t v49 = type metadata accessor for BaseObjectGraph(0LL);
      inject<A, B>(_:from:)(v61, v48, v43, v48, v49);
      __n128 v50 = *(void **)&v61[0];
      ArcadeSubscriptionManager.purchaseSubscription(product:appAdamId:decorator:callbacks:dialogHandler:)( v46,  v27,  v24,  v8,  v38,  *(void *)&v61[0]);
      swift_bridgeObjectRelease(v27);

      sub_100006060((uint64_t)v8, &qword_1002EB8D8);
      sub_100006060(v38, &qword_1002EB8E0);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v24, v17);
    }
  }

  return result;
}

void sub_1001CE0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v68 = a3;
  uint64_t v67 = a2;
  uint64_t v69 = a1;
  uint64_t v3 = type metadata accessor for Date(0LL);
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  __chkstk_darwin(v3);
  unint64_t v64 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000031E8(&qword_1002EB8E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v64 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v64 - v13;
  uint64_t v15 = type metadata accessor for LocalPreferences(0LL);
  uint64_t v16 = static LocalPreferences.currentApplication.getter(v15);
  type metadata accessor for RateLimitedAction(0LL);
  static RateLimitedAction.preferencesKey.getter();
  uint64_t v17 = sub_1000031E8(&qword_1002EB8F0);
  Preferences.subscript.getter(v71, v14, v15, v17, &protocol witness table for LocalPreferences);
  __n128 v18 = swift_release(v16);
  uint64_t v19 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
  v19(v14, v5, v18);
  uint64_t v20 = v71[0];
  swift_bridgeObjectRelease(v71[0]);
  if (!v20)
  {
    uint64_t v22 = static LocalPreferences.currentApplication.getter(v21);
    static RateLimitedAction.preferencesKey.getter();
    v71[0] = &_swiftEmptyDictionarySingleton;
    Preferences.subscript.setter(v71, v14, v15, v17, &protocol witness table for LocalPreferences);
    swift_release(v22);
  }

  uint64_t v23 = static LocalPreferences.currentApplication.getter(v21);
  static RateLimitedAction.preferencesKey.getter();
  Preferences.subscript.getter(v71, v11, v15, v17, &protocol witness table for LocalPreferences);
  __n128 v24 = swift_release(v23);
  uint64_t v25 = ((uint64_t (*)(char *, uint64_t, __n128))v19)(v11, v5, v24);
  uint64_t v27 = v71[0];
  if (!v71[0]) {
    goto LABEL_11;
  }
  uint64_t v28 = RateLimitedAction.actionKey.getter(v25);
  uint64_t v30 = v29;
  if (!*(void *)(v27 + 16) || (unint64_t v31 = sub_1000E8690(v28, v29), (v32 & 1) == 0))
  {
    swift_bridgeObjectRelease(v27);
    __n128 v26 = swift_bridgeObjectRelease(v30);
LABEL_11:
    *(double *)&uint64_t v36 = COERCE_DOUBLE(RateLimitedAction.rateLimit.getter(v25, v26));
    goto LABEL_12;
  }

  double v33 = *(double *)(*(void *)(v27 + 56) + 8 * v31);
  swift_bridgeObjectRelease(v27);
  __n128 v34 = swift_bridgeObjectRelease(v30);
  *(double *)&uint64_t v36 = COERCE_DOUBLE(RateLimitedAction.rateLimit.getter(v35, v34));
  if ((v37 & 1) == 0)
  {
    double v38 = *(double *)&v36;
    uint64_t v39 = v64;
    uint64_t v40 = Date.init()(v36);
    double v41 = Date.timeIntervalSince1970.getter(v40);
    *(double *)&uint64_t v36 = COERCE_DOUBLE((*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v39, v66));
    if (v41 - v33 > v38)
    {
LABEL_12:
      uint64_t v46 = static LocalPreferences.currentApplication.getter(v36);
      static RateLimitedAction.preferencesKey.getter();
      uint64_t v47 = (void (*)(void, void))Preferences.subscript.modify( v71,  v8,  v15,  v17,  &protocol witness table for LocalPreferences);
      uint64_t v49 = (void (*)(void *, void, __n128))v47;
      if (*v48)
      {
        __n128 v50 = v48;
        uint64_t v51 = RateLimitedAction.actionKey.getter(v47);
        uint64_t v53 = v52;
        uint64_t v54 = v64;
        uint64_t v55 = Date.init()(v51);
        double v56 = Date.timeIntervalSince1970.getter(v55);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v54, v66);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v50);
        uint64_t v70 = *v50;
        *__n128 v50 = 0x8000000000000000LL;
        sub_1000B0E30(v51, v53, isUniquelyReferenced_nonNull_native, v56);
        uint64_t v58 = *v50;
        *__n128 v50 = v70;
        swift_bridgeObjectRelease(v53);
        __n128 v59 = swift_bridgeObjectRelease(v58);
        v49(v71, 0LL, v59);
      }

      else
      {
        v47(v71, 0LL);
      }

      uint64_t v61 = v67;
      uint64_t v60 = v68;
      __n128 v62 = swift_release(v46);
      uint64_t v63 = ((uint64_t (*)(char *, uint64_t, __n128))v19)(v8, v5, v62);
      uint64_t v42 = RateLimitedAction.primaryAction.getter(v63);
      uint64_t v43 = v42;
      uint64_t v44 = v61;
      uint64_t v45 = v60;
      goto LABEL_16;
    }
  }

  uint64_t v42 = RateLimitedAction.fallbackAction.getter(v36);
  if (!v42) {
    return;
  }
  uint64_t v43 = v42;
  uint64_t v44 = v67;
  uint64_t v45 = v68;
LABEL_16:
  sub_1001CA5F8(v42, v44, v45);
  swift_release(v43);
}

uint64_t sub_1001CE4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ArcadeState(0LL);
  uint64_t v6 = *(uint64_t (***)(void, void))(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (id *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  ArcadeSubscriptionManager.subscriptionState.getter(v9);
  int v10 = ((uint64_t (**)(id *, uint64_t))v6)[11](v8, v5);
  if (v10 == enum case for ArcadeState.notSubscribed(_:))
  {
    uint64_t v11 = ((uint64_t (**)(id *, uint64_t))v6)[12](v8, v5);
    uint64_t v12 = ArcadeSubscriptionStateAction.notSubscribedAction.getter(v11);
    uint64_t v13 = type metadata accessor for ArcadeIntroOfferState(0LL);
    goto LABEL_3;
  }

  if (v10 == enum case for ArcadeState.purchasing(_:))
  {
    uint64_t v16 = ((uint64_t (**)(id *, uint64_t))v6)[1](v8, v5);
    uint64_t result = ArcadeSubscriptionStateAction.purchasingAction.getter(v16);
  }

  else
  {
    if (v10 == enum case for ArcadeState.subscribed(_:))
    {
      ((uint64_t (**)(id *, uint64_t))v6)[12](v8, v5);

      uint64_t v8 = (id *)((char *)v8 + *(int *)(sub_1000031E8(&qword_1002EB8F8) + 48));
      uint64_t v12 = ArcadeSubscriptionStateAction.subscribedAction.getter();
      uint64_t v13 = type metadata accessor for ArcadeTrialEnrolledState(0LL);
LABEL_3:
      uint64_t result = (*(uint64_t (**)(id *, uint64_t))(*(void *)(v13 - 8) + 8LL))(v8, v13);
      if (!v12) {
        return result;
      }
      goto LABEL_4;
    }

    if (v10 != enum case for ArcadeState.unknown(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v5, v5);
      __break(1u);
      return result;
    }

    uint64_t result = ArcadeSubscriptionStateAction.unknownAction.getter();
  }

  uint64_t v12 = result;
  if (result)
  {
LABEL_4:
    swift_retain(v12);
    sub_1001CA5F8(v15, a2, a3);
    return swift_release_n(v12, 2LL);
  }

  return result;
}

uint64_t sub_1001CE6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (void *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2 + qword_1002E0738);
  if (!Strong)
  {
    uint64_t v29 = 0LL;
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    return sub_100006060((uint64_t)&v27, (uint64_t *)&unk_1002E1800);
  }

  uint64_t v11 = (void *)Strong;
  sub_100082D00((uint64_t)&v27);

  if (!*((void *)&v28 + 1)) {
    return sub_100006060((uint64_t)&v27, (uint64_t *)&unk_1002E1800);
  }
  uint64_t v12 = sub_100009D90(&v27, (uint64_t)v30);
  uint64_t v13 = ShowRatingPromptAction.rateAction.getter(v12);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = type metadata accessor for ObjectGraph(0LL);
    uint64_t v16 = swift_dynamicCastClassUnconditional(a2, v15, 0LL, 0LL, 0LL);
    id v17 = objc_allocWithZone((Class)type metadata accessor for RateProductViewController());
    swift_retain(a2);
    id v18 = sub_1001A4F58(v14, v16);
    swift_release(a2);
    uint64_t v19 = v31;
    uint64_t v20 = v32;
    sub_100005F8C(v30, v31);
    *uint64_t v9 = v18;
    swift_storeEnumTagMultiPayload(v9, v7, 11LL);
    uint64_t v21 = qword_1002DCE78;
    id v22 = v18;
    if (v21 != -1) {
      swift_once(&qword_1002DCE78, sub_1001665C8);
    }
    uint64_t v23 = type metadata accessor for FlowPresentationHints(0LL);
    uint64_t v24 = sub_1000061F4(v23, (uint64_t)qword_1002F0F70);
    uint64_t v25 = type metadata accessor for ReferrerData(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v6, 1LL, 1LL, v25);
    (*(void (**)(void *, uint64_t, void, void, char *, uint64_t, uint64_t))(v20 + 16))( v9,  v24,  0LL,  0LL,  v6,  v19,  v20);
    swift_release(v14);

    sub_100006060((uint64_t)v6, &qword_1002E1FB0);
    sub_10000609C((uint64_t)v9);
  }

  return _s6Arcade17PillOverlayLayoutVwxx_0(v30);
}

uint64_t sub_1001CE918(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a6;
  uint64_t v34 = a3;
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  uint64_t v32 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v29 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  __int128 v28 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OSLogger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v35 = *a1;
  if (qword_1002DC380 != -1) {
    swift_once(&qword_1002DC380, sub_100018F98);
  }
  uint64_t v13 = sub_1000061F4(v9, (uint64_t)qword_1002EE558);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v15 = type metadata accessor for LogMessage(0LL);
  uint64_t v16 = swift_allocObject( v14,  ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL))
        + 6LL * *(void *)(*(void *)(v15 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10023E510;
  LogMessage.init(stringLiteral:)(0x6574656C706D6F43LL, 0xE900000000000064LL);
  uint64_t v37 = type metadata accessor for HttpAction(0LL);
  v36[0] = a2;
  swift_retain(a2);
  static LogMessage.sensitive(_:)(v36);
  sub_100006060((uint64_t)v36, (uint64_t *)&unk_1002DF680);
  LogMessage.init(stringLiteral:)(0x676E697375LL, 0xE500000000000000LL);
  uint64_t v17 = type metadata accessor for Bag(0LL);
  uint64_t v37 = v17;
  id v18 = sub_100009D54(v36);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16LL))(v18, v34, v17);
  static LogMessage.sensitive(_:)(v36);
  sub_100006060((uint64_t)v36, (uint64_t *)&unk_1002DF680);
  LogMessage.init(stringLiteral:)(980709223LL, 0xE400000000000000LL);
  uint64_t v37 = sub_100006028(0LL, &qword_1002EB898, &OBJC_CLASS___AMSURLResult_ptr);
  v36[0] = v35;
  id v19 = v35;
  static LogMessage.sensitive(_:)(v36);
  sub_100006060((uint64_t)v36, (uint64_t *)&unk_1002DF680);
  Logger.debug(_:)(v16, v9, &protocol witness table for OSLogger);
  __n128 v20 = swift_bridgeObjectRelease(v16);
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v20);
  uint64_t result = HttpAction.successAction.getter(v21);
  if (result)
  {
    uint64_t v23 = result;
    uint64_t v25 = v28;
    uint64_t v24 = v29;
    uint64_t v26 = v32;
    (*(void (**)(char *, void, uint64_t))(v29 + 104))( v28,  enum case for ActionRunner.Origin.action(_:),  v32);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v23, v30, v25, v33);
    __n128 v27 = swift_release(v23);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v24 + 8))(v25, v26, v27);
  }

  return result;
}

uint64_t sub_1001CEC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a3;
  uint64_t v29 = a5;
  uint64_t v27 = a4;
  uint64_t v31 = a1;
  uint64_t v30 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v26 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for OSLogger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC380 != -1) {
    swift_once(&qword_1002DC380, sub_100018F98);
  }
  uint64_t v12 = sub_1000061F4(v8, (uint64_t)qword_1002EE558);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v14 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v15 = swift_allocObject( v13,  ((*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
        + 4LL * *(void *)(v14 + 72),
          *(unsigned __int8 *)(v14 + 80) | 7LL);
  *(_OWORD *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002394E0;
  LogMessage.init(stringLiteral:)(0xD000000000000012LL, 0x800000010024DE00LL);
  uint64_t v36 = type metadata accessor for HttpAction(0LL);
  v35[0] = a2;
  swift_retain(a2);
  static LogMessage.sensitive(_:)(v35);
  sub_100006060((uint64_t)v35, (uint64_t *)&unk_1002DF680);
  LogMessage.init(stringLiteral:)(0x3A6E6F73616572LL, 0xE700000000000000LL);
  swift_getErrorValue(v31, v34, &v32);
  uint64_t v17 = v32;
  uint64_t v16 = v33;
  uint64_t v36 = v33;
  id v18 = sub_100009D54(v35);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16LL))(v18, v17, v16);
  static LogMessage.sensitive(_:)(v35);
  sub_100006060((uint64_t)v35, (uint64_t *)&unk_1002DF680);
  Logger.error(_:)(v15, v8, &protocol witness table for OSLogger);
  __n128 v19 = swift_bridgeObjectRelease(v15);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v19);
  uint64_t result = HttpAction.failureAction.getter(v20);
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v23 = v26;
    uint64_t v24 = v30;
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v7, enum case for ActionRunner.Origin.action(_:), v30);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v22, v27, v7, v29);
    __n128 v25 = swift_release(v22);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v23 + 8))(v7, v24, v25);
  }

  return result;
}

uint64_t sub_1001CEEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1000031E8(&qword_1002EB8C0);
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for PurchaseIntent(0LL, v11);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v33[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_retain(a1);
  swift_unknownObjectRetain(a2);
  PurchaseIntent.init(from:stateMachine:additionalHeaders:presentingSceneIdentifier:)(a1, a2, a3, 0LL, 0LL, 0LL);
  v19.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  OfferAction.bundleId.getter(v19);
  if (!v20) {
    goto LABEL_6;
  }
  uint64_t v21 = v20;
  NSString v22 = String._bridgeToObjectiveC()();
  uint64_t v32 = v5;
  uint64_t v23 = a4;
  uint64_t v24 = v22;
  id v25 =  [(id)objc_opt_self(LSApplicationProxy) applicationProxyForSystemPlaceholder:v22];

  a4 = v23;
  uint64_t v5 = v32;
  __n128 v26 = swift_bridgeObjectRelease(v21);
  if (v25)
  {
    sub_1001D1054(a1, a2, a3, v26);
  }

  else
  {
LABEL_6:
    uint64_t v27 = dispatch thunk of Commerce.purchase(with:stateMachine:)(v17, a2, a3);
    uint64_t v28 = (void *)swift_allocObject(&unk_10028DB30, 40LL, 7LL);
    v28[2] = a1;
    v28[3] = v5;
    v28[4] = a4;
    uint64_t v29 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
    swift_retain(a1);
    swift_retain(v5);
    swift_retain(a4);
    uint64_t v31 = static OS_dispatch_queue.main.getter(v30);
    v33[3] = v29;
    v33[4] = &protocol witness table for OS_dispatch_queue;
    v33[0] = v31;
    Promise.then(perform:orCatchError:on:)(sub_1001D3DDC, v28, sub_1001D1914, 0LL, v33);
    swift_release(v27);
    swift_release(v28);
    _s6Arcade17PillOverlayLayoutVwxx_0(v33);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void sub_1001CF17C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v103 = a6;
  uint64_t v104 = a7;
  uint64_t v101 = a4;
  uint64_t v102 = a2;
  uint64_t v9 = sub_1000031E8((uint64_t *)&unk_1002E6FB0);
  __chkstk_darwin(v9);
  __n128 v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for AdamId(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  int64_t v95 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v96 = (char *)&v91 - v16;
  __chkstk_darwin(v17);
  __n128 v100 = (char *)&v91 - v18;
  __chkstk_darwin(v19);
  uint64_t v99 = (uint64_t)&v91 - v20;
  uint64_t v97 = v21;
  __chkstk_darwin(v22);
  uint64_t v94 = (char *)&v91 - v23;
  uint64_t v106 = &_swiftEmptySetSingleton;
  uint64_t v92 = (uint64_t)a5;
  if ((a1 & 1) != 0)
  {
    uint64_t v24 = *(void *)((v102 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v102);
    for (; v24; uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v47))
    {
      unint64_t v25 = v102 & 0xC000000000000001LL;
      uint64_t v26 = 4LL;
      uint64_t v93 = (char *)v24;
      unint64_t v98 = v102 & 0xC000000000000001LL;
      while (1)
      {
        id v27 = v25
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26 - 4, v102)
            : *(id *)(v102 + 8 * v26);
        uint64_t v28 = v27;
        uint64_t v29 = v26 - 3;
        if (__OFADD__(v26 - 4, 1LL)) {
          break;
        }
        if ([v27 status] == (id)1)
        {
          id v30 = [v28 bundleID];
          if (!v30) {
            goto LABEL_77;
          }
          uint64_t v31 = v30;
          uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
          uint64_t v34 = v33;

          if (*(void *)(v101 + 16) && (unint64_t v35 = sub_1000E8690(v32, v34), (v36 & 1) != 0))
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))( v11,  *(void *)(v101 + 56) + *(void *)(v13 + 72) * v35,  v12);
            uint64_t v37 = 0LL;
          }

          else
          {
            uint64_t v37 = 1LL;
          }

          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v37, 1LL, v12);
          __n128 v38 = swift_bridgeObjectRelease(v34);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1LL, v12, v38) == 1)
          {

            sub_100006060((uint64_t)v11, (uint64_t *)&unk_1002E6FB0);
          }

          else
          {
            uint64_t v39 = v94;
            (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v94, v11, v12);
            uint64_t v40 = v11;
            double v41 = v100;
            (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v100, v39, v12);
            uint64_t v42 = v99;
            uint64_t v43 = (uint64_t)v41;
            __n128 v11 = v40;
            sub_10001B5E0(v99, v43);

            uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
            v44(v42, v12);
            uint64_t v45 = v39;
            uint64_t v24 = (uint64_t)v93;
            v44((uint64_t)v45, v12);
          }

          unint64_t v25 = v98;
        }

        else
        {
        }

        ++v26;
        if (v29 == v24)
        {
          swift_bridgeObjectRelease(v102);
          uint64_t v46 = v106;
          goto LABEL_29;
        }
      }

      __break(1u);
LABEL_24:
      if (v102 < 0) {
        uint64_t v47 = v102;
      }
      else {
        uint64_t v47 = v102 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v102);
    }

    swift_bridgeObjectRelease(v102);
    uint64_t v46 = &_swiftEmptySetSingleton;
  }

  else
  {
    uint64_t v106 = a5;
    swift_bridgeObjectRetain(a5);
  }

LABEL_75:
      __break(1u);
      goto LABEL_76;
    }

    uint64_t v72 = v52 + 4;
    goto LABEL_48;
  }

LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
}

void sub_1001CF8D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v9 = sub_100006028(0LL, &qword_1002EB8C8, &OBJC_CLASS___ASDJobResult_ptr);
  uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v9);
  swift_retain(v7);
  id v11 = a4;
  v8(a2, v10, a4);
  swift_release(v7);
  swift_bridgeObjectRelease(v10);
}

void sub_1001CF970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v54 = a2;
  uint64_t v4 = sub_1000031E8(&qword_1002DE6C8);
  uint64_t v58 = *(void *)(v4 - 8);
  uint64_t v59 = v4;
  __chkstk_darwin(v4);
  uint64_t v61 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v6);
  uint64_t v52 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for AdamId(0LL);
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  __n128 v9 = __chkstk_darwin(v8);
  id v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for UpdatesSorter.Ordering(0LL, v9);
  unint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v62[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v26 = a1;
    }
    else {
      uint64_t v26 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter(v26);
    uint64_t v60 = v11;
    if (v16) {
      goto LABEL_3;
    }
LABEL_20:
    __n128 v24 = swift_bridgeObjectRelease(a1);
    unint64_t v25 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }

  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a1);
  uint64_t v60 = v11;
  if (!v16) {
    goto LABEL_20;
  }
LABEL_3:
  if (v16 < 1)
  {
    __break(1u);
LABEL_42:
    __break(1u);
    return;
  }

  unint64_t v51 = v15;
  unint64_t v55 = v13;
  for (uint64_t i = 0LL; i != v16; ++i)
  {
    if ((a1 & 0xC000000000000001LL) != 0) {
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    }
    else {
      id v20 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v21 = v20;
    unint64_t v22 = (unint64_t)[v20 updateState];
    if (v22 > 4 || ((1LL << v22) & 0x19) == 0)
    {
    }

    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
      uint64_t v18 = *(void *)(*(void *)&v62[0] + 16LL);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
      uint64_t v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v21);
      specialized ContiguousArray._endMutation()(v19);
    }
  }

  __n128 v24 = swift_bridgeObjectRelease(a1);
  unint64_t v25 = *(void **)&v62[0];
  unint64_t v13 = v55;
  uint64_t v15 = v51;
LABEL_21:
  (*(void (**)(char *, void, uint64_t, __n128))(v13 + 104))( v15,  enum case for UpdatesSorter.Ordering.pendingUpdates(_:),  v12,  v24);
  uint64_t v27 = static UpdatesSorter.sorted(updates:ordering:)(v25, v15);
  __n128 v28 = swift_release(v25);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v28);
  uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (1)
  {
    id v30 = _swiftEmptyArrayStorage;
    if (!v29) {
      break;
    }
    unint64_t v55 = v27 & 0xC000000000000001LL;
    uint64_t v31 = 4LL;
    while (1)
    {
      id v32 = v55
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31 - 4, v27)
          : *(id *)(v27 + 8 * v31);
      uint64_t v33 = v32;
      uint64_t v34 = v31 - 3;
      if (__OFADD__(v31 - 4, 1LL)) {
        break;
      }
      uint64_t v35 = v27;
      AdamId.init(value:)([v32 storeItemIdentifier]);
      id v36 = [v33 bundleIdentifier];
      if (!v36) {
        goto LABEL_42;
      }
      uint64_t v37 = v36;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      uint64_t v40 = v39;

      double v41 = (uint64_t *)(v61 + *(int *)(v59 + 48));
      (*(void (**)(void))(v56 + 32))();
      *double v41 = v38;
      v41[1] = v40;
      if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0) {
        id v30 = (void *)sub_10001AF24(0LL, v30[2] + 1LL, 1, v30);
      }
      unint64_t v43 = v30[2];
      unint64_t v42 = v30[3];
      uint64_t v27 = v35;
      if (v43 >= v42 >> 1) {
        id v30 = (void *)sub_10001AF24(v42 > 1, v43 + 1, 1, v30);
      }
      v30[2] = v43 + 1;
      sub_10003FBFC( v61,  (uint64_t)v30 + ((*(unsigned __int8 *)(v58 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))
      + *(void *)(v58 + 72) * v43,
        &qword_1002DE6C8);

      ++v31;
      if (v34 == v29) {
        goto LABEL_35;
      }
    }

    __break(1u);
LABEL_37:
    if (v27 < 0) {
      uint64_t v49 = v27;
    }
    else {
      uint64_t v49 = v27 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v27);
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease(v27);
  }

double sub_1001CFE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void (**)(uint64_t, __n128))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v5 = sub_100006028(0LL, &qword_1002EB8D0, &OBJC_CLASS___ASDSoftwareUpdate_ptr);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  __n128 v7 = swift_retain(v3);
  v4(v6, v7);
  swift_release(v3);
  *(void *)&double result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

void sub_1001CFE98(uint64_t a1, __n128 a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v47 = a5;
  uint64_t v11 = type metadata accessor for OpenableDestination(0LL, a2);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for OSLogger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v45 = a6;
    uint64_t v46 = a7;
    uint64_t v19 = a4;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0) {
        uint64_t v38 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v38 = a1;
      }
      swift_bridgeObjectRetain(a1);
      if (_CocoaArrayWrapper.endIndex.getter(v38))
      {
LABEL_4:
        if ((a1 & 0xC000000000000001LL) != 0)
        {
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
        }

        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8LL) + 0x10))
          {
            __break(1u);
LABEL_22:
            _diagnoseUnexpectedEnumCase<A>(type:)(v11, v11);
            __break(1u);
            return;
          }

          id v21 = *(id *)(a1 + 32);
        }

        unint64_t v22 = v21;
        uint64_t v23 = v47 + 16;
        swift_bridgeObjectRelease(a1);
        uint64_t v24 = swift_allocObject(&unk_10028DC98, 24LL, 7LL);
        swift_beginAccess(v23, v54, 0LL, 0LL);
        uint64_t Strong = swift_weakLoadStrong(v23);
        swift_weakInit(v24 + 16, Strong);
        swift_release(Strong);
        uint64_t v26 = (void *)swift_allocObject(&unk_10028DD10, 40LL, 7LL);
        void v26[2] = v19;
        v26[3] = v24;
        uint64_t v27 = v45;
        v26[4] = v45;
        id v28 = v19;
        __n128 v29 = swift_retain(v27);
        OpenAppAction.destination.getter(v29);
        int v30 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
        if (v30 == enum case for OpenableDestination.app(_:))
        {
          uint64_t v31 = (void *)objc_opt_self(&OBJC_CLASS___ASDAppLibrary);
          uint64_t v52 = sub_1001D4028;
          uint64_t v53 = v26;
          __int128 aBlock = _NSConcreteStackBlock;
          uint64_t v49 = 1107296256LL;
          uint64_t v50 = sub_100061A50;
          unint64_t v51 = &unk_10028DD50;
          id v32 = _Block_copy(&aBlock);
          uint64_t v33 = v53;
          swift_retain(v26);
          *(void *)&double v34 = swift_release(v33).n128_u64[0];
          objc_msgSend(v31, "launchApp:withResultHandler:", v22, v32, v34, v45, v46);
LABEL_11:

          swift_release(v26);
          _Block_release(v32);
          return;
        }

        if (v30 == enum case for OpenableDestination.messages(_:))
        {
          uint64_t v35 = (void *)objc_opt_self(&OBJC_CLASS___ASDAppLibrary);
          uint64_t v52 = sub_1001D4028;
          uint64_t v53 = v26;
          __int128 aBlock = _NSConcreteStackBlock;
          uint64_t v49 = 1107296256LL;
          uint64_t v50 = sub_100061A50;
          unint64_t v51 = &unk_10028DD28;
          id v32 = _Block_copy(&aBlock);
          id v36 = v53;
          swift_retain(v26);
          *(void *)&double v37 = swift_release(v36).n128_u64[0];
          objc_msgSend(v35, "launchMessagesExtensionForApp:withResultHandler:", v22, v32, v37, v45, v46);
          goto LABEL_11;
        }

        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v20) {
        goto LABEL_4;
      }
    }

    swift_bridgeObjectRelease(a1);
    a4 = v19;
  }

  if (qword_1002DC380 != -1) {
    swift_once(&qword_1002DC380, sub_100018F98);
  }
  uint64_t v39 = sub_1000061F4(v15, (uint64_t)qword_1002EE558);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v39, v15);
  uint64_t v40 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v41 = type metadata accessor for LogMessage(0LL);
  uint64_t v42 = swift_allocObject( v40,  ((*(unsigned __int8 *)(*(void *)(v41 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v41 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v41 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v41 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v42 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
  LogMessage.init(stringLiteral:)(0xD000000000000016LL, 0x800000010024E000LL);
  unint64_t v51 = (void *)sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
  __int128 aBlock = (void **)a4;
  id v43 = a4;
  static LogMessage.traceableSensitive(_:)(&aBlock);
  sub_100006060((uint64_t)&aBlock, (uint64_t *)&unk_1002DF680);
  LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x800000010024DEE0LL);
  Logger.error(_:)(v42, v15, &protocol witness table for OSLogger);
  __n128 v44 = swift_bridgeObjectRelease(v42);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v44);
}

void sub_1001D032C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  __n128 v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v44 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for OSLogger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1 == 2)
  {
    if (qword_1002DC380 != -1) {
      swift_once(&qword_1002DC380, sub_100018F98);
    }
    uint64_t v34 = sub_1000061F4(v13, (uint64_t)qword_1002EE558);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v34, v13);
    uint64_t v35 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v36 = type metadata accessor for LogMessage(0LL);
    uint64_t v37 = swift_allocObject( v35,  ((*(unsigned __int8 *)(*(void *)(v36 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v36 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v36 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v36 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v37 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
    LogMessage.init(stringLiteral:)(0xD000000000000013LL, 0x800000010024E020LL);
    uint64_t v46 = (void *)sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
    aBlock[0] = a2;
    id v38 = a2;
    static LogMessage.traceableSensitive(_:)(aBlock);
    sub_100006060((uint64_t)aBlock, (uint64_t *)&unk_1002DF680);
    Logger.error(_:)(v37, v13, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v37);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  else if (a1 == 1)
  {
    uint64_t v40 = v10;
    uint64_t v41 = v7;
    if (qword_1002DC380 != -1) {
      swift_once(&qword_1002DC380, sub_100018F98);
    }
    uint64_t v17 = sub_1000061F4(v13, (uint64_t)qword_1002EE558);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
    uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v19 = type metadata accessor for LogMessage(0LL);
    uint64_t v20 = swift_allocObject( v18,  ((*(unsigned __int8 *)(*(void *)(v19 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v19 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v19 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
    LogMessage.init(stringLiteral:)(0xD000000000000017LL, 0x800000010024E040LL);
    uint64_t v46 = (void *)sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
    aBlock[0] = a2;
    id v21 = a2;
    static LogMessage.traceableSensitive(_:)(aBlock);
    sub_100006060((uint64_t)aBlock, (uint64_t *)&unk_1002DF680);
    Logger.error(_:)(v20, v13, &protocol witness table for OSLogger);
    __n128 v22 = swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v22);
    uint64_t v23 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v24 = (void *)static OS_dispatch_queue.main.getter(v23);
    uint64_t v25 = swift_allocObject(&unk_10028DD88, 32LL, 7LL);
    uint64_t v27 = v42;
    uint64_t v26 = v43;
    *(void *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = v42;
    *(void *)(v25 + 2swift_weakDestroy(v0 + 4) = v26;
    uint64_t v47 = sub_1001D4064;
    uint64_t v48 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100135408;
    uint64_t v46 = &unk_10028DDA0;
    id v28 = _Block_copy(aBlock);
    uint64_t v29 = v48;
    swift_retain(v27);
    swift_retain(v26);
    __n128 v30 = swift_release(v29);
    static DispatchQoS.unspecified.getter(v30);
    aBlock[0] = _swiftEmptyArrayStorage;
    uint64_t v31 = sub_100003B6C( (unint64_t *)&qword_1002E42E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v32 = sub_1000031E8((uint64_t *)&unk_1002DF660);
    unint64_t v33 = sub_100048E40();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v6, v31);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v12, v9, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v40);
  }

uint64_t sub_1001D07E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for AlertActionStyle(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a1 += 16LL;
  swift_beginAccess(a1, v32, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(a1);
  if (result)
  {
    uint64_t v16 = result;
    v17._object = (void *)0x800000010024E060LL;
    uint64_t v29 = v4;
    v17._countAndFlagsBits = 0xD000000000000021LL;
    v18._countAndFlagsBits = 0LL;
    v18._object = (void *)0xE000000000000000LL;
    Swift::String v19 = localizedString(_:comment:)(v17, v18);
    uint64_t v28 = v5;
    uint64_t v30 = a2;
    v20._countAndFlagsBits = 0xD000000000000023LL;
    v20._object = (void *)0x800000010024E090LL;
    v21._countAndFlagsBits = 0LL;
    v21._object = (void *)0xE000000000000000LL;
    Swift::String v22 = localizedString(_:comment:)(v20, v21);
    static ActionMetrics.notInstrumented.getter(v22._countAndFlagsBits);
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for AlertActionStyle.normal(_:), v8);
    uint64_t v23 = type metadata accessor for AlertAction(0LL);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    uint64_t v24 = AlertAction.init(title:message:isCancelable:cancelTitle:cancelAction:buttonActions:destructiveActionIndex:style:artwork:toastDuration:presentationStyle:actionMetrics:)( v19._countAndFlagsBits,  v19._object,  v22._countAndFlagsBits,  v22._object,  1LL,  0LL,  0LL,  0LL,  _swiftEmptyArrayStorage,  0LL,  1,  v11,  0LL,  0LL,  1,  0LL,  v14);
    id v31[3] = type metadata accessor for RootActionRunner(0LL);
    v31[0] = v16;
    uint64_t v26 = v28;
    uint64_t v25 = v29;
    (*(void (**)(char *, void, uint64_t))(v28 + 104))( v7,  enum case for ActionRunner.Origin.userInitiated(_:),  v29);
    swift_retain(v16);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v24, v31, v7, v30);
    swift_release(v16);
    __n128 v27 = swift_release(v24);
    (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v7, v25, v27);
    return sub_100006060((uint64_t)v31, (uint64_t *)&unk_1002DF680);
  }

  return result;
}

double sub_1001D0A78(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  if (a2)
  {
    uint64_t v7 = sub_100006028(0LL, &qword_1002EB8B8, &OBJC_CLASS___ASDApp_ptr);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }

  swift_retain(v5);
  id v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  *(void *)&double result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double sub_1001D0B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (v16)
  {
    uint64_t v8 = sub_100006028(0LL, (unint64_t *)&qword_1002DEF30, &OBJC_CLASS___UIResponder_ptr);
    if ((swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, v8, 6LL) & 1) != 0)
    {
      uint64_t v9 = v14;
      uint64_t v10 = UIResponder.nearestActionRunner.getter();
      if (v10)
      {
        uint64_t v11 = v10;
        dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(a2, a1, a3);

        goto LABEL_9;
      }
    }
  }

  else
  {
    sub_100006060((uint64_t)v15, (uint64_t *)&unk_1002DF680);
  }

  swift_beginAccess(a4 + 16, v15, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a4 + 16);
  if (!Strong) {
    return result;
  }
  uint64_t v11 = Strong;
  sub_1001CA5F8(a2, a1, a3);
LABEL_9:
  *(void *)&double result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_1001D0C1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for OSLogger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC380 != -1) {
    swift_once(&qword_1002DC380, sub_100018F98);
  }
  uint64_t v9 = sub_1000061F4(v5, (uint64_t)qword_1002EE558);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v11 = type metadata accessor for LogMessage(0LL);
  uint64_t v12 = swift_allocObject( v10,  ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80LL))
        + *(void *)(*(void *)(v11 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v11 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(24LL, 1LL);
  v13._object = (void *)0x800000010024E0E0LL;
  v13._countAndFlagsBits = 0xD000000000000018LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  uint64_t v14 = type metadata accessor for PreorderStatus(0LL);
  v19[3] = v14;
  uint64_t v15 = sub_100009D54(v19);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16LL))(v15, a1, v14);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v19);
  sub_100006060((uint64_t)v19, (uint64_t *)&unk_1002DF680);
  v16._countAndFlagsBits = 0LL;
  v16._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  LogMessage.init(stringInterpolation:)(v4);
  Logger.info(_:)(v12, v5, &protocol witness table for OSLogger);
  __n128 v17 = swift_bridgeObjectRelease(v12);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v17);
}

uint64_t sub_1001D0E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OSLogger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC380 != -1) {
    swift_once(&qword_1002DC380, sub_100018F98);
  }
  uint64_t v13 = sub_1000061F4(v9, (uint64_t)qword_1002EE558);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v15 = type metadata accessor for LogMessage(0LL);
  uint64_t v16 = swift_allocObject( v14,  ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL))
        + *(void *)(*(void *)(v15 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(27LL, 1LL);
  v17._object = (void *)0x800000010024E0C0LL;
  v17._countAndFlagsBits = 0xD00000000000001BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  swift_getErrorValue(a1, v29, &v27);
  uint64_t v18 = v27;
  uint64_t v19 = v28;
  void v30[3] = v28;
  Swift::String v20 = sub_100009D54(v30);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16LL))(v20, v18, v19);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v30);
  sub_100006060((uint64_t)v30, (uint64_t *)&unk_1002DF680);
  v21._countAndFlagsBits = 0LL;
  v21._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  LogMessage.init(stringInterpolation:)(v8);
  Logger.error(_:)(v16, v9, &protocol witness table for OSLogger);
  __n128 v22 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v22);
  uint64_t v23 = *(void *)(a2 + qword_1002F1638);
  uint64_t v24 = *(void *)(a2 + qword_1002F1638 + 8);
  uint64_t ObjectType = swift_getObjectType(v23);
  return AppStateController.clearWaiting(for:)(a3, ObjectType, v24);
}

void sub_1001D1054(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v5 = v4;
  uint64_t v59 = a2;
  *(void *)&__int128 v60 = a3;
  uint64_t v7 = type metadata accessor for LegacyAppState(0LL, a4);
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = type metadata accessor for InstallationType(0LL, v9);
  uint64_t v62 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v63 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = type metadata accessor for AdamId(0LL);
  uint64_t v13 = *(void *)(v61 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v61);
  uint64_t v57 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v52 - v17;
  OfferAction.bundleId.getter(v16);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v55 = a1;
    uint64_t v56 = v5;
    swift_bridgeObjectRetain(v19);
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 =  [(id)objc_opt_self(LSApplicationProxy) applicationProxyForSystemPlaceholder:v21];

    swift_bridgeObjectRelease(v20);
    if (v22)
    {
      id v23 = objc_allocWithZone(&OBJC_CLASS___ASDSystemAppRequest);
      NSString v24 = String._bridgeToObjectiveC()();
      id v25 = objc_msgSend(v23, "initWithBundleID:", v24, swift_bridgeObjectRelease(v20).n128_f64[0]);

      uint64_t v26 = ((uint64_t (*)(void))OfferAction.adamId.getter)();
      uint64_t v27 = (void *)AdamId.numberValue.getter(v26);
      uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
      v53(v18, v61);
      [v25 setStoreItemID:v27];

      id v54 = v25;
      [v25 setUserInitiated:1];
      uint64_t ObjectType = swift_getObjectType(v59);
      dispatch thunk of AppStateMachine.currentState.getter(ObjectType, v60);
      int v29 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
      uint64_t v52 = v13;
      if (v29 == enum case for LegacyAppState.downloadable(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
        __n128 v30 = swift_bridgeObjectRelease(*((void *)v11 + 1));
        (*(void (**)(char *, void, uint64_t, __n128))(v62 + 104))( v63,  enum case for InstallationType.redownload(_:),  v58,  v30);
        uint64_t v31 = v56;
      }

      else
      {
        uint64_t v32 = *(void (**)(char *, void, uint64_t))(v62 + 104);
        uint64_t v31 = v56;
        if (v29 == enum case for LegacyAppState.buyable(_:) || v29 == enum case for LegacyAppState.unknown(_:))
        {
          v32(v63, enum case for InstallationType.purchase(_:), v58);
        }

        else
        {
          v32(v63, enum case for InstallationType.unknown(_:), v58);
          (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
        }
      }

      uint64_t v33 = dispatch thunk of AppStateMachine.appStateController.getter(ObjectType, v60);
      if (v33)
      {
        uint64_t v35 = v33;
        uint64_t v36 = v34;
      }

      else
      {
        uint64_t v35 = *(void *)(v31 + qword_1002F1638);
        uint64_t v36 = *(void *)(v31 + qword_1002F1638 + 8);
        swift_unknownObjectRetain(v35);
      }

      uint64_t v37 = v31;
      uint64_t v38 = swift_getObjectType(v35);
      ((void (*)(void))OfferAction.adamId.getter)();
      dispatch thunk of AppStateController.setWaiting(for:installationType:)(v18, v63, v38, v36);
      uint64_t v39 = v61;
      uint64_t v40 = v53;
      uint64_t v41 = ((uint64_t (*)(char *, uint64_t))v53)(v18, v61);
      OfferAction.adamId.getter(v41);
      uint64_t v42 = v52;
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
      __int128 v60 = *(_OWORD *)(v37 + qword_1002F1638);
      uint64_t v44 = v57;
      v43(v57, v18, v39);
      uint64_t v45 = *(unsigned __int8 *)(v42 + 80);
      uint64_t v46 = (v45 + 32) & ~v45;
      uint64_t v47 = swift_allocObject(&unk_10028DB58, v46 + v14, v45 | 7);
      *(_OWORD *)(v47 + swift_unknownObjectWeakDestroy(v0 + 16) = v60;
      (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v47 + v46, v44, v39);
      aBlock[4] = sub_1001D3DEC;
      uint64_t v65 = v47;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_1001C7E1C;
      void aBlock[3] = &unk_10028DB70;
      uint64_t v48 = _Block_copy(aBlock);
      uint64_t v49 = v65;
      swift_unknownObjectRetain(v60);
      *(void *)&double v50 = swift_release(v49).n128_u64[0];
      id v51 = v54;
      objc_msgSend(v54, "startWithErrorHandler:", v48, v50);
      _Block_release(v48);
      swift_unknownObjectRelease(v35);

      v40(v18, v39);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v58);
    }

    else
    {
      swift_bridgeObjectRelease(v20);
    }
  }

uint64_t sub_1001D1530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for OSLogger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v11 = type metadata accessor for PurchaseResult(0LL, v8);
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)&v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v12 + 16))(v15, a1, v11, v13);
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v15, v11);
  if ((_DWORD)result == enum case for PurchaseResult.askToBuy(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v15, v11);
    uint64_t v17 = *v15;
    uint64_t v18 = v15[1];
    id v19 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
    if (qword_1002DCFF8 != -1) {
      swift_once(&qword_1002DCFF8, sub_1001840C8);
    }
    uint64_t v20 = qword_1002F1388;
    uint64_t v21 = sub_1000031E8(&qword_1002E7198);
    initeCGFloat d = swift_initStackObject(v21, v34);
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    *(void *)&__int128 v35 = 0x64496D616461LL;
    *((void *)&v35 + 1) = 0xE600000000000000LL;
    AnyHashable.init<A>(_:)( (void *)(inited + 32),  &v35,  &type metadata for String,  &protocol witness table for String);
    *(void *)(inited + 96) = type metadata accessor for AdamId(0LL);
    sub_100009D54((void *)(inited + 72));
    __n128 v23 = swift_bridgeObjectRetain(v18);
    AdamId.init(value:)(v17, v18, v23);
    unint64_t v24 = sub_1000E69F4(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend( v19,  "postNotificationName:object:userInfo:",  v20,  0,  isa,  swift_bridgeObjectRelease(v24).n128_f64[0]);

    if (qword_1002DC380 != -1) {
      swift_once(&qword_1002DC380, sub_100018F98);
    }
    uint64_t v26 = sub_1000061F4(v6, (uint64_t)qword_1002EE558);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v26, v6);
    uint64_t v27 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v28 = type metadata accessor for LogMessage(0LL);
    uint64_t v29 = swift_allocObject( v27,  ((*(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v28 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v29 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
    LogMessage.init(stringLiteral:)(0xD00000000000001CLL, 0x800000010024DF50LL);
    *((void *)&v36 + 1) = &type metadata for String;
    *(void *)&__int128 v35 = v17;
    *((void *)&v35 + 1) = v18;
    static LogMessage.traceableSensitive(_:)(&v35);
    sub_100006060((uint64_t)&v35, (uint64_t *)&unk_1002DF680);
    Logger.info(_:)(v29, v6, &protocol witness table for OSLogger);
    __n128 v30 = swift_bridgeObjectRelease(v29);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v30);
  }

  else if ((_DWORD)result == enum case for PurchaseResult.completed(_:))
  {
    uint64_t result = OfferAction.buyCompletedAction.getter();
    if (result)
    {
      uint64_t v31 = result;
      __int128 v35 = 0u;
      __int128 v36 = 0u;
      sub_1001CA5F8(result, &v35, a4);
      swift_release(v31);
      return sub_100006060((uint64_t)&v35, (uint64_t *)&unk_1002DF680);
    }
  }

  else if ((_DWORD)result != enum case for PurchaseResult.canceled(_:) {
         && (_DWORD)result != enum case for PurchaseResult.unknown(_:))
  }
  {
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v11, v11);
    __break(1u);
  }

  return result;
}

uint64_t sub_1001D1914(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OSLogger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC380 != -1) {
    swift_once(&qword_1002DC380, sub_100018F98);
  }
  uint64_t v6 = sub_1000061F4(v2, (uint64_t)qword_1002EE558);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v8 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v9 = swift_allocObject( v7,  ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
       + 2LL * *(void *)(v8 + 72),
         *(unsigned __int8 *)(v8 + 80) | 7LL);
  *(_OWORD *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
  LogMessage.init(stringLiteral:)(0xD00000000000001BLL, 0x800000010024DF30LL);
  swift_getErrorValue(a1, v17, &v15);
  uint64_t v10 = v15;
  uint64_t v11 = v16;
  void v18[3] = v16;
  uint64_t v12 = sub_100009D54(v18);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v12, v10, v11);
  static LogMessage.sensitive(_:)(v18);
  sub_100006060((uint64_t)v18, (uint64_t *)&unk_1002DF680);
  Logger.error(_:)(v9, v2, &protocol witness table for OSLogger);
  __n128 v13 = swift_bridgeObjectRelease(v9);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v13);
}

uint64_t sub_1001D1AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for AdamId(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t ObjectType = swift_getObjectType(a2);
  if (!a1) {
    return AppStateController.clearWaiting(for:)(a4, ObjectType, a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))( (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a4,  v8);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = swift_allocObject(&unk_10028DBA8, v14 + v10, v13 | 7);
  *(void *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  *(void *)(v15 + 2swift_weakDestroy(v0 + 4) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, v11, v8);
  swift_unknownObjectRetain(a2);
  dispatch thunk of AppStateController.refreshDataSources(for:completion:)(a4, sub_1001D3E30, v15, ObjectType, a3);
  return swift_release(v15);
}

void sub_1001D1BE8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for OSLogger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a1) {
    goto LABEL_19;
  }
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v9) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }

  if (a1 >= 0) {
    uint64_t v24 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    uint64_t v24 = a1;
  }
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v24))
  {
LABEL_18:
    swift_bridgeObjectRelease(a1);
LABEL_19:
    if (qword_1002DC380 != -1) {
      swift_once(&qword_1002DC380, sub_100018F98);
    }
    uint64_t v25 = sub_1000061F4(v5, (uint64_t)qword_1002EE558);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v25, v5);
    uint64_t v26 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v27 = type metadata accessor for LogMessage(0LL);
    uint64_t v28 = swift_allocObject( v26,  ((*(unsigned __int8 *)(*(void *)(v27 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v27 - 8) + 80LL))
          + 3LL * *(void *)(*(void *)(v27 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v27 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
    LogMessage.init(stringLiteral:)(0xD00000000000001DLL, 0x800000010024DEC0LL);
    uint64_t v33 = sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
    v32[0] = a3;
    id v29 = a3;
    static LogMessage.traceableSensitive(_:)(v32);
    sub_100006060((uint64_t)v32, (uint64_t *)&unk_1002DF680);
    LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x800000010024DEE0LL);
    Logger.error(_:)(v28, v5, &protocol witness table for OSLogger);
    __n128 v23 = swift_bridgeObjectRelease(v28);
    goto LABEL_22;
  }

void sub_1001D204C()
{
  uint64_t v1 = v0 + qword_1002EB838;
  uint64_t v2 = type metadata accessor for MetricsPipeline(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_unknownObjectRelease(*(void *)(v0 + qword_1002F1638));

  swift_release(*(void *)(v0 + qword_1002F1648));
  swift_release(*(void *)(v0 + qword_1002F1650));
}

uint64_t sub_1001D20E8()
{
  uint64_t v0 = ActionRunner.deinit();
  swift_unknownObjectWeakDestroy(v0 + qword_1002E0738);
  swift_release(*(void *)(v0 + qword_1002EB830));
  uint64_t v1 = v0 + qword_1002EB838;
  uint64_t v2 = type metadata accessor for MetricsPipeline(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_unknownObjectRelease(*(void *)(v0 + qword_1002F1638));

  swift_release(*(void *)(v0 + qword_1002F1648));
  swift_release(*(void *)(v0 + qword_1002F1650));

  return v0;
}

double sub_1001D21A8()
{
  uint64_t v0 = sub_1001D20E8();
  *(void *)&double result = swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL)).n128_u64[0];
  return result;
}

uint64_t sub_1001D21C8()
{
  return type metadata accessor for RootActionRunner(0LL);
}

unint64_t sub_1001D21D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000031E8(&qword_1002EB8A8);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = *(v6 - 3);
    uint64_t v8 = *(v6 - 2);
    uint64_t v10 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    unint64_t result = sub_1001D2424(v7, v8);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v13 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    uint64_t v14 = (void *)(v4[7] + 16 * result);
    *uint64_t v14 = v10;
    v14[1] = v9;
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, 1LL);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v6 += 4;
    void v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001D22F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000031E8(&qword_1002E4800);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10001027C(v7, (uint64_t)&v16, &qword_1002E4808);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_1001D2424(v16, v17);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    char v12 = (uint64_t *)(v4[6] + 16 * result);
    *char v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_1000086FC(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    void v4[2] = v15;
    v7 += 48LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001D2424(uint64_t a1, uint64_t a2)
{
  Swift::Int v4 = Hasher._finalize()();
  return sub_1001D2488(a1, a2, v4);
}

unint64_t sub_1001D2488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8LL)) >> i) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * i);
    uint64_t v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0LL) & 1) == 0)
    {
      uint64_t v13 = ~v5;
      unint64_t i = (i + 1) & v13;
      if (((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8LL)) >> i) & 1) != 0)
      {
        BOOL v14 = (void *)(v9 + 16 * i);
        uint64_t v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0LL) & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v13; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8LL)) >> i) & 1) != 0; unint64_t i = (i + 1) & v13)
          {
            uint64_t v17 = (void *)(v9 + 16 * i);
            uint64_t v18 = v17[1];
            if (*v17 == a1 && v18 == a2) {
              break;
            }
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0LL) & 1) != 0) {
              break;
            }
          }
        }
      }
    }
  }

  return i;
}

void sub_1001D25CC(uint64_t a1)
{
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002E6FB0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for AdamId(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  char v12 = (char *)&v24 - v11;
  if (!*(void *)(*(void *)v1 + 16LL)) {
    return;
  }
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v14 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v15 = -1LL;
  if (v14 < 64) {
    uint64_t v15 = ~(-1LL << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  int64_t v18 = 0LL;
  while (1)
  {
    if (v16)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      goto LABEL_6;
    }

    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1LL))
    {
      __break(1u);
      goto LABEL_27;
    }

    if (v21 >= v17) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_24;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_24;
        }
        unint64_t v22 = *(void *)(v25 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v17) {
            goto LABEL_24;
          }
          unint64_t v22 = *(void *)(v25 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }

void *sub_1001D2830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E6FB0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for AdamId(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v63 = (char *)&v57 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }

  uint64_t v13 = -1LL << *(_BYTE *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = ~v13;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1LL << v16);
  }
  else {
    uint64_t v17 = -1LL;
  }
  uint64_t v64 = a1;
  uint64_t v65 = a1 + 56;
  uint64_t v18 = a1;
  uint64_t v19 = a1 + 56;
  unint64_t v20 = v17 & v14;
  uint64_t v21 = v15;
  uint64_t v66 = v15;
  int64_t v67 = 0LL;
  unint64_t v68 = v17 & v14;
  uint64_t v62 = (char *)(a2 + 56);
  uint64_t v22 = v18;
  __n128 v23 = swift_bridgeObjectRetain(v18);
  int64_t v24 = 0LL;
  uint64_t v58 = v6;
  uint64_t v61 = a2;
  unint64_t v59 = v20;
  int64_t v60 = 0LL;
  if (!v20) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v25 = (v20 - 1) & v20;
  unint64_t v26 = __clz(__rbit64(v20)) | (v24 << 6);
  int64_t v27 = v24;
  uint64_t v28 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))( v6,  *(void *)(v22 + 48) + *(void *)(v8 + 72) * v26,  v7,  v23);
  uint64_t v29 = 0LL;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v29, 1LL, v7);
    uint64_t v64 = v22;
    uint64_t v65 = v28;
    uint64_t v66 = v21;
    int64_t v67 = v27;
    unint64_t v68 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1LL, v7) == 1)
    {
      sub_100004624(v22);
      sub_100006060((uint64_t)v6, (uint64_t *)&unk_1002E6FB0);
      return (void *)v61;
    }

    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v63, v6, v7);
    uint64_t v33 = v61;
    uint64_t v34 = *(void *)(v61 + 40);
    uint64_t v35 = sub_100003B6C( &qword_1002DE6A8,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  (uint64_t)&protocol conformance descriptor for AdamId);
    uint64_t v36 = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v7, v35);
    uint64_t v37 = -1LL << *(_BYTE *)(v33 + 32);
    unint64_t v38 = v36 & ~v37;
    if (((*(void *)&v62[(v38 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v38) & 1) != 0) {
      break;
    }
    uint64_t v45 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v45(v63, v7);
    int64_t v24 = v67;
    unint64_t v20 = v68;
    uint64_t v22 = v64;
    uint64_t v19 = v65;
    uint64_t v21 = v66;
    uint64_t v6 = v58;
    unint64_t v59 = v68;
    int64_t v60 = v67;
    if (v68) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v27 = v24 + 1;
    if (__OFADD__(v24, 1LL)) {
      __break(1u);
    }
    uint64_t v28 = v19;
    int64_t v30 = (unint64_t)(v21 + 64) >> 6;
    if (v27 >= v30) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v19 + 8 * v27);
    if (v31) {
      goto LABEL_11;
    }
    v24 += 2LL;
    if (v27 + 1 >= v30) {
      goto LABEL_36;
    }
    unint64_t v31 = *(void *)(v19 + 8 * v24);
    if (v31) {
      goto LABEL_14;
    }
    if (v27 + 2 >= v30)
    {
LABEL_26:
      uint64_t v25 = 0LL;
      uint64_t v29 = 1LL;
      int64_t v27 = v24;
    }

    else
    {
      unint64_t v31 = *(void *)(v19 + 8 * (v27 + 2));
      if (v31)
      {
        v27 += 2LL;
        goto LABEL_11;
      }

      int64_t v24 = v27 + 3;
      if (v27 + 3 >= v30)
      {
        uint64_t v25 = 0LL;
        uint64_t v29 = 1LL;
        v27 += 2LL;
      }

      else
      {
        unint64_t v31 = *(void *)(v19 + 8 * v24);
        if (v31)
        {
LABEL_14:
          int64_t v27 = v24;
LABEL_11:
          uint64_t v25 = (v31 - 1) & v31;
          unint64_t v26 = __clz(__rbit64(v31)) + (v27 << 6);
          goto LABEL_7;
        }

        v27 += 4LL;
        if (v27 >= v30) {
          goto LABEL_26;
        }
        unint64_t v31 = *(void *)(v19 + 8 * v27);
        if (v31) {
          goto LABEL_11;
        }
        int64_t v27 = v30 - 1;
        uint64_t v32 = v60 + 6;
        while (v30 != v32)
        {
          unint64_t v31 = *(void *)(v19 + 8 * v32++);
          if (v31)
          {
            int64_t v27 = v32 - 1;
            goto LABEL_11;
          }
        }

void sub_1001D2DEC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v51 = a2;
  uint64_t v9 = sub_1000031E8((uint64_t *)&unk_1002E6FB0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for AdamId(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v17 = __chkstk_darwin(v16);
  unint64_t v59 = (char *)&v50 - v18;
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8LL;
  uint64_t v21 = *(unint64_t *)((char *)a1 + v20) & ((-1LL << a4) - 1);
  uint64_t v53 = a1;
  id v54 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  uint64_t v22 = v19 - 1;
  uint64_t v57 = a3 + 56;
  uint64_t v58 = a3;
  uint64_t v55 = a5;
  while (2)
  {
    uint64_t v52 = v22;
    do
    {
      while (1)
      {
        uint64_t v24 = *a5;
        uint64_t v25 = a5[1];
        uint64_t v27 = a5[2];
        int64_t v26 = a5[3];
        unint64_t v28 = a5[4];
        uint64_t v56 = v27;
        if (v28)
        {
          uint64_t v29 = (v28 - 1) & v28;
          unint64_t v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t, __n128))(v13 + 16))( v11,  *(void *)(v24 + 48) + *(void *)(v13 + 72) * v30,  v12,  v17);
          uint64_t v31 = 0LL;
          goto LABEL_8;
        }

        int64_t v43 = v26 + 1;
        if (__OFADD__(v26, 1LL))
        {
          __break(1u);
          goto LABEL_41;
        }

        int64_t v44 = (unint64_t)(v27 + 64) >> 6;
        if (v43 >= v44)
        {
          uint64_t v29 = 0LL;
          uint64_t v31 = 1LL;
          goto LABEL_8;
        }

        unint64_t v45 = *(void *)(v25 + 8 * v43);
        if (v45) {
          goto LABEL_17;
        }
        if (v26 + 2 >= v44) {
          goto LABEL_34;
        }
        unint64_t v45 = *(void *)(v25 + 8 * (v26 + 2));
        if (v45)
        {
          int64_t v43 = v26 + 2;
LABEL_17:
          uint64_t v29 = (v45 - 1) & v45;
          unint64_t v30 = __clz(__rbit64(v45)) + (v43 << 6);
          int64_t v26 = v43;
          goto LABEL_7;
        }

        if (v26 + 3 >= v44)
        {
          uint64_t v29 = 0LL;
          uint64_t v31 = 1LL;
          v26 += 2LL;
          goto LABEL_8;
        }

        unint64_t v45 = *(void *)(v25 + 8 * (v26 + 3));
        if (v45)
        {
          int64_t v43 = v26 + 3;
          goto LABEL_17;
        }

        int64_t v43 = v26 + 4;
        if (v26 + 4 < v44)
        {
          unint64_t v45 = *(void *)(v25 + 8 * v43);
          if (v45) {
            goto LABEL_17;
          }
          int64_t v43 = v44 - 1;
          int64_t v48 = v26 + 5;
          while (v44 != v48)
          {
            unint64_t v45 = *(void *)(v25 + 8 * v48++);
            if (v45)
            {
              int64_t v43 = v48 - 1;
              goto LABEL_17;
            }
          }

uint64_t sub_1001D3230(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for AdamId(0LL);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a3)
  {
    swift_release(a4);
    return (uint64_t)&_swiftEmptySetSingleton;
  }

  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  uint64_t v40 = v9;
  sub_1000031E8(&qword_1002DE6B8);
  uint64_t result = static _SetStorage.allocate(capacity:)(a3);
  uint64_t v12 = result;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0LL;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0LL;
  uint64_t v16 = result + 56;
  uint64_t v17 = v40;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v15 << 6);
    }

    else
    {
      uint64_t v20 = v15 + 1;
      if (__OFADD__(v15, 1LL)) {
        goto LABEL_40;
      }
      if (v20 >= v39)
      {
LABEL_37:
        swift_release(a4);
        return v12;
      }

      unint64_t v21 = v38[v20];
      ++v15;
      if (!v21)
      {
        uint64_t v15 = v20 + 1;
        if (v20 + 1 >= v39) {
          goto LABEL_37;
        }
        unint64_t v21 = v38[v15];
        if (!v21)
        {
          uint64_t v15 = v20 + 2;
          if (v20 + 2 >= v39) {
            goto LABEL_37;
          }
          unint64_t v21 = v38[v15];
          if (!v21)
          {
            uint64_t v22 = v20 + 3;
            if (v22 >= v39) {
              goto LABEL_37;
            }
            unint64_t v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                uint64_t v15 = v22 + 1;
                if (__OFADD__(v22, 1LL)) {
                  goto LABEL_41;
                }
                if (v15 >= v39) {
                  goto LABEL_37;
                }
                unint64_t v21 = v38[v15];
                ++v22;
                if (v21) {
                  goto LABEL_24;
                }
              }
            }

            uint64_t v15 = v22;
          }
        }
      }

uint64_t sub_1001D3530(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v2 + qword_1002EB830) = a2;
  swift_retain(v2);
  uint64_t v9 = swift_retain(a2);
  uint64_t v10 = inject(_:from:)(v9);
  uint64_t v11 = (uint64_t *)(v2 + qword_1002F1638);
  uint64_t *v11 = v10;
  v11[1] = v12;
  uint64_t v13 = type metadata accessor for ArcadeSubscriptionManager(0LL);
  *(void *)(v2 + qword_1002F1640) = inject(_:from:)(v13, a2);
  uint64_t v14 = type metadata accessor for ASKBagContract(0LL);
  *(void *)(v2 + qword_1002F1648) = inject(_:from:)(v14, a2);
  uint64_t v15 = type metadata accessor for Commerce(0LL);
  uint64_t v16 = type metadata accessor for ObjectGraph(0LL);
  inject<A, B>(_:from:)(&v22, v15, a2, v15, v16);
  *(void *)(v2 + qword_1002F1650) = v22;
  updateCGFloat d = type metadata accessor for UpdateStore(0LL);
  inject<A, B>(_:from:)(&v22, updated, a2, updated, v16);
  *(void *)(v2 + qword_1002F1658) = v22;
  inject(_:from:)(a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + qword_1002EB838, v8, v5);
  swift_release(v2);
  uint64_t v18 = swift_unknownObjectWeakInit(v2 + qword_1002E0738, 0LL);
  uint64_t v19 = swift_unknownObjectWeakAssign(v18, a1);
  return ActionRunner.init()(v19);
}

void sub_1001D36D0()
{
  uint64_t v0 = type metadata accessor for URL(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v5 = ExternalUrlAction.isSensitive.getter(v2);
  id v6 = [(id)objc_opt_self(LSApplicationWorkspace) defaultWorkspace];
  uint64_t v7 = v6;
  if ((v5 & 1) != 0)
  {
    if (v6)
    {
      ExternalUrlAction.url.getter();
      URL._bridgeToObjectiveC()(v8);
      uint64_t v10 = v9;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      [v7 openSensitiveURL:v10 withOptions:0];
LABEL_6:

      return;
    }

    __break(1u);
  }

  else if (v6)
  {
    ExternalUrlAction.url.getter();
    URL._bridgeToObjectiveC()(v11);
    uint64_t v10 = v12;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    [v7 openURL:v10 configuration:0 completionHandler:0];
    goto LABEL_6;
  }

  __break(1u);
}

double sub_1001D3800()
{
  uint64_t v0 = AdamId.numberValue.getter();
  if (v0)
  {
    uint64_t v1 = (void *)v0;
    uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
    uint64_t v3 = swift_allocObject(v2, 40LL, 7LL);
    *(_OWORD *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233570;
    *(void *)(v3 + 32) = v1;
    v16[0] = v3;
    specialized Array._endMutation()(v3);
    sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
    id v4 = v1;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v16[0]);
    id v6 = [(id)objc_opt_self(ASDAppQuery) queryForStoreItemIDs:isa];

    uint64_t v7 = swift_allocObject(&unk_10028DAB8, 24LL, 7LL);
    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
    v16[4] = sub_1001D3D78;
    uint64_t v17 = v7;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256LL;
    v16[2] = sub_1001D0A78;
    v16[3] = &unk_10028DAD0;
    uint64_t v8 = _Block_copy(v16);
    uint64_t v9 = v17;
    id v10 = v4;
    objc_msgSend(v6, "executeQueryWithResultHandler:", v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);
  }

  else
  {
    if (qword_1002DC380 != -1) {
      swift_once(&qword_1002DC380, sub_100018F98);
    }
    uint64_t v12 = type metadata accessor for OSLogger(0LL);
    sub_1000061F4(v12, (uint64_t)qword_1002EE558);
    uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v14 = type metadata accessor for LogMessage(0LL);
    uint64_t v15 = swift_allocObject( v13,  ((*(unsigned __int8 *)(*(void *)(v14 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80LL))
          + *(void *)(*(void *)(v14 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v14 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    LogMessage.init(stringLiteral:)(0xD00000000000003ELL, 0x800000010024DE60LL);
    Logger.error(_:)(v15, v12, &protocol witness table for OSLogger);
    *(void *)&double result = swift_bridgeObjectRelease(v15).n128_u64[0];
  }

  return result;
}

uint64_t sub_1001D3A48()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AdamId(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  char v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21[-1] - v8;
  uint64_t v10 = CancelPreorderAction.preorderAdamId.getter(v7);
  char v11 = CancelPreorderAction.isArcade.getter(v10);
  uint64_t v12 = dispatch thunk of Commerce.cancelPreorder(for:isArcade:)(v9, v11 & 1);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  uint64_t v13 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = (v13 + 24) & ~v13;
  uint64_t v15 = swift_allocObject(&unk_10028DE00, v14 + v4, v13 | 7);
  *(void *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, v5, v2);
  uint64_t v16 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
  swift_retain(v1);
  uint64_t v18 = static OS_dispatch_queue.main.getter(v17);
  v21[3] = v16;
  v21[4] = &protocol witness table for OS_dispatch_queue;
  v21[0] = v18;
  Promise.then(perform:orCatchError:on:)(sub_1001D0C1C, 0LL, sub_1001D4134, v15, v21);
  swift_release(v12);
  swift_release(v15);
  _s6Arcade17PillOverlayLayoutVwxx_0(v21);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1001D3BD8()
{
  uint64_t v1 = type metadata accessor for Bag(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  __n128 v7 = swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(void *)(v0 + v5));
  if (*(void *)(v0 + v6 + 24)) {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + v6));
  }
  unint64_t v8 = (v6 + 39) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = v8 + 8;
  swift_release(*(void *)(v0 + v8));
  return swift_deallocObject(v0, v9, v3 | 7);
}

uint64_t sub_1001D3C90(id *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Bag(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_1001CE918( a1,  *(void *)(v1 + 16),  v1 + v4,  *(void *)(v1 + v5),  v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL),  *(void *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 39) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1001D3CFC()
{
  if (v0[7]) {
    _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 4);
  }
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_1001D3D40(uint64_t a1)
{
  return sub_1001CEC38(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[8]);
}

uint64_t sub_1001D3D54()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1001D3D78(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1001D3D80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001D3D90(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001D3D98()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001D3DBC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16LL))();
}

uint64_t sub_1001D3DC8()
{
  return sub_1001D3E58((void (*)(void))&_swift_release, (void (*)(void))&_swift_release, 40LL);
}

uint64_t sub_1001D3DDC(uint64_t a1)
{
  return sub_1001D1530(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001D3DEC(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AdamId(0LL) - 8) + 80LL);
  return sub_1001D1AC4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

void sub_1001D3E38(uint64_t a1)
{
}

uint64_t sub_1001D3E40()
{
  return sub_1001D3E58( (void (*)(void))&_swift_bridgeObjectRelease,  (void (*)(void))&_swift_unknownObjectRelease,  48LL);
}

uint64_t sub_1001D3E58(void (*a1)(void), void (*a2)(void), uint64_t a3)
{
  return swift_deallocObject(v3, a3, 7LL);
}

void sub_1001D3EA8(char a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1001D3EB8()
{
  uint64_t v1 = type metadata accessor for AdamId(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001D3F2C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AdamId(0LL) - 8) + 80LL);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((v1 + 32) & ~v1);
  uint64_t ObjectType = swift_getObjectType(v2);
  return AppStateController.clearWaiting(for:)(v4, ObjectType, v3);
}

uint64_t sub_1001D3F88()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001D3FAC()
{
  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_1001D3FE8(uint64_t a1, uint64_t a2, __n128 a3)
{
}

uint64_t sub_1001D3FF4()
{
  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1001D4028(uint64_t a1)
{
}

uint64_t sub_1001D4038()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1001D4064()
{
  return sub_1001D07E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001D406C()
{
  if (v0[5]) {
    _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 2);
  }
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72LL, 7LL);
}

double sub_1001D40B0()
{
  return sub_1001D0B04((uint64_t)(v0 + 2), v0[6], v0[7], v0[8]);
}

uint64_t sub_1001D40C0()
{
  uint64_t v1 = type metadata accessor for AdamId(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001D4134(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AdamId(0LL) - 8) + 80LL);
  return sub_1001D0E18(a1, *(void *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

double sub_1001D41AC(double a1)
{
  uint64_t v3 = *(char **)&v1[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView];
  id v4 = [*(id *)&v3[OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel] text];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    uint64_t v8 = v7;
  }

  else
  {
    uint64_t v6 = 0LL;
    uint64_t v8 = 0LL;
  }

  char v9 = static String.isNilOrEmpty(_:)(v6, v8);
  *(void *)&double v10 = swift_bridgeObjectRelease(v8).n128_u64[0];
  if ((v9 & 1) == 0)
  {
    objc_msgSend(v1, "frame", v10);
    objc_msgSend(v3, "sizeThatFits:", v11, v12);
  }

  return a1;
}

double sub_1001D42A8()
{
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView];
  id v2 = [*(id *)&v1[OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel] text];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    uint64_t v6 = v5;
  }

  else
  {
    uint64_t v4 = 0LL;
    uint64_t v6 = 0LL;
  }

  char v7 = static String.isNilOrEmpty(_:)(v4, v6);
  swift_bridgeObjectRelease(v6);
  double result = 0.0;
  if ((v7 & 1) == 0)
  {
    objc_msgSend(v0, "frame", 0.0);
    objc_msgSend(v1, "sizeThatFits:", v9, v10);
    return v11;
  }

  return result;
}

uint64_t sub_1001D4370()
{
  uint64_t v0 = sub_1000031E8(&qword_1002EB970);
  sub_10000FF90(v0, qword_1002F1670);
  sub_1000061F4(v0, (uint64_t)qword_1002F1670);
  uint64_t v3 = 0x405E800000000000LL;
  uint64_t v2 = 0x4059000000000000LL;
  return Conditional<>.init(roundedCornersValue:nonRoundedCornersValue:)(&v3, &v2, &type metadata for CGFloat);
}

char *sub_1001D43E8(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for TitleHeaderView.Style(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v5[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageParallaxY] = 0LL;
  *(void *)&v5[OBJC_IVAR____TtC6Arcade14UberHeaderView_navigationItem] = 0LL;
  uint64_t v14 = &v5[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver];
  *(void *)uint64_t v14 = 0LL;
  *((void *)v14 + 1) = 0LL;
  id v15 = objc_allocWithZone(&OBJC_CLASS___UIView);
  uint64_t v16 = v5;
  id v17 = objc_msgSend(v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageContainerView] = v17;
  id v18 = objc_msgSend(objc_allocWithZone(UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageView] = v18;
  *(void *)&v16[OBJC_IVAR____TtC6Arcade14UberHeaderView_legibilityGradientView] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for GradientView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for TitleHeaderView(0)),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);

  v48.id receiver = v16;
  v48.super_class = ObjectType;
  uint64_t v19 = (char *)objc_msgSendSuper2(&v48, "initWithFrame:", a1, a2, a3, a4);
  [v19 setEdgesInsettingLayoutMarginsFromSafeArea:0];
  uint64_t v20 = OBJC_IVAR____TtC6Arcade14UberHeaderView_imageContainerView;
  uint64_t v21 = *(void **)&v19[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageContainerView];
  [v21 setClipsToBounds:1];
  uint64_t v22 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v23 = v21;
  id v24 = [v22 whiteColor];
  [v23 setBackgroundColor:v24];

  uint64_t v25 = *(void **)&v19[v20];
  [v19 addSubview:v25];
  uint64_t v26 = *(void **)&v19[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageView];
  [v26 setContentMode:2];
  [v26 setAccessibilityIgnoresInvertColors:1];
  [v25 addSubview:v26];
  uint64_t v27 = OBJC_IVAR____TtC6Arcade14UberHeaderView_legibilityGradientView;
  uint64_t v28 = *(void **)&v19[OBJC_IVAR____TtC6Arcade14UberHeaderView_legibilityGradientView];
  uint64_t v29 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  initeCGFloat d = swift_initStackObject(v29, v47);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1002339A0;
  sub_100010F30();
  id v31 = v28;
  *(UIColor *)(inited + 32) = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.4);
  v32.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.0).super.isa;
  *(UIColor *)(inited + 40) = v32;
  uint64_t v46 = inited;
  specialized Array._endMutation()(v32.super.isa);
  sub_10011DD80(v46);

  id v33 = *(id *)&v19[v27];
  id v34 = [v33 layer];
  uint64_t v35 = objc_opt_self(&OBJC_CLASS___CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v34, v35, 0, 0, 0), "setStartPoint:", 0.5, 0.0);

  id v36 = *(id *)&v19[v27];
  id v37 = [v36 layer];
  uint64_t v38 = objc_opt_self(&OBJC_CLASS___CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v37, v38, 0, 0, 0), "setEndPoint:", 0.5, 1.0);

  [*(id *)&v19[v20] addSubview:*(void *)&v19[v27]];
  uint64_t v39 = OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView;
  uint64_t v40 = *(void **)&v19[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView];
  if (qword_1002DCEE8 != -1) {
    swift_once(&qword_1002DCEE8, sub_1001692DC);
  }
  uint64_t v41 = sub_1000061F4(v11, (uint64_t)qword_1002F10C0);
  sub_10000D57C(v41, (uint64_t)v13);
  (*(void (**)(char *))((swift_isaMask & *v40) + 0x190LL))(v13);
  uint64_t v42 = *(void *)&v19[v39];
  int64_t v43 = *(void **)(v42 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
  [v43 setNumberOfLines:2];
  [v43 setAllowsDefaultTighteningForTruncation:1];
  [v19 addSubview:v42];

  return v19;
}

id sub_1001D4964()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade14UberHeaderView_navigationItem];
  if (v2)
  {
    id v3 = v2;
    NSString v4 = String._bridgeToObjectiveC()();
    [v3 removeObserver:v0 forKeyPath:v4 context:&unk_1002EB900];
  }

  v6.id receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "dealloc");
}

double sub_1001D4AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView];
  uint64_t v6 = OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel;
  id v7 = [*(id *)(v5 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel) text];
  if (!v7)
  {
    if (!a2) {
      return result;
    }
    goto LABEL_11;
  }

  double v9 = v7;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  uint64_t v12 = v11;

  if (a2)
  {
    if (v12)
    {
      if (v10 == a1 && v12 == a2)
      {
        swift_bridgeObjectRelease(a2);
        uint64_t v15 = v12;
        goto LABEL_18;
      }

      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v10, v12, 0LL);
      swift_bridgeObjectRelease(v12);
      if ((v14 & 1) != 0)
      {
        uint64_t v15 = a2;
LABEL_18:
        *(void *)&double result = swift_bridgeObjectRelease(v15).n128_u64[0];
        return result;
      }
    }

double sub_1001D4C44(uint64_t a1, NSString a2, uint64_t a3, Class isa, void *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v5);
  if (!a2)
  {
LABEL_11:
    sub_100077A80(a3, (uint64_t)v27);
    uint64_t v19 = v28;
    if (v28)
    {
      uint64_t v20 = sub_100005F8C(v27, v28);
      uint64_t v21 = *(void *)(v19 - 8);
      __n128 v22 = __chkstk_darwin(v20);
      id v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *, __n128))(v21 + 16))(v24, v22);
      uint64_t v25 = _bridgeAnythingToObjectiveC<A>(_:)(v24, v19);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v19);
      _s6Arcade17PillOverlayLayoutVwxx_0(v27);
      if (!isa)
      {
LABEL_14:
        v26.id receiver = v5;
        v26.super_class = ObjectType;
        objc_msgSendSuper2(&v26, "observeValueForKeyPath:ofObject:change:context:", a2, v25, isa, a5);

        swift_unknownObjectRelease(v25);
        return result;
      }
    }

    else
    {
      uint64_t v25 = 0LL;
      if (!isa) {
        goto LABEL_14;
      }
    }

    type metadata accessor for NSKeyValueChangeKey(0LL);
    sub_1001D5874();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    goto LABEL_14;
  }

  if ((a1 != 0x656C746974LL || a2 != (NSString)0xE500000000000000LL)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x656C746974LL, 0xE500000000000000LL, 0LL) & 1) == 0
    || !a5
    || a5 != &unk_1002EB900)
  {
    a2 = String._bridgeToObjectiveC()();
    goto LABEL_11;
  }

  uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC6Arcade14UberHeaderView_navigationItem];
  if (!v12) {
    return sub_1001D4AA4(0LL, 0LL);
  }
  id v13 = [v12 title];
  if (!v13) {
    return sub_1001D4AA4(0LL, 0LL);
  }
  char v14 = v13;
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  uint64_t v17 = v16;

  return sub_1001D4AA4(v15, v17);
}

uint64_t sub_1001D4F94(void *a1, id a2)
{
  if ([a2 userInterfaceIdiom] == (id)1
    && (id v5 = [a2 horizontalSizeClass], v5 != objc_msgSend(a1, "horizontalSizeClass")))
  {
    char v13 = 1;
  }

  else
  {
    id v6 = objc_retainAutoreleasedReturnValue( objc_msgSend( *(id *)(*(void *)(v2 + OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView)
                   + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel),
             "text"));
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      uint64_t v10 = v9;
    }

    else
    {
      uint64_t v8 = 0LL;
      uint64_t v10 = 0LL;
    }

    char v11 = static String.isNilOrEmpty(_:)(v8, v10);
    *(void *)&double v12 = swift_bridgeObjectRelease(v10).n128_u64[0];
    if ((v11 & 1) != 0)
    {
      char v13 = 0;
    }

    else
    {
      id v14 = objc_msgSend(a2, "preferredContentSizeCategory", v12);
      id v15 = [a1 preferredContentSizeCategory];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      uint64_t v18 = v17;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      uint64_t v21 = v19;
      if (v16 == v20 && v18 == v19)
      {
        swift_bridgeObjectRelease_n(v18, 2LL);
        char v13 = 0;
      }

      else
      {
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v20, v19, 0LL);
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(v21);
        char v13 = v22 ^ 1;
      }
    }
  }

  return v13 & 1;
}

void sub_1001D5134(void *a1)
{
  v8.id receiver = v1;
  v8.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  if (a1)
  {
    id v3 = a1;
    id v4 = [v1 traitCollection];
    if ((sub_1001D4F94(v3, v4) & 1) != 0)
    {
      [v1 invalidateIntrinsicContentSize];
      id v5 = *(void (**)(__n128))&v1[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver];
      if (v5)
      {
        uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver + 8];
        __n128 v7 = swift_retain(v6);
        v5(v7);
        sub_10000D3D8((uint64_t)v5, v6);
      }
    }
  }

id sub_1001D5258()
{
  uint64_t v1 = v0;
  v38.id receiver = v0;
  v38.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v38, "layoutSubviews");
  [v0 bounds];
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  double v10 = sub_1001D42A8();
  if (v10 <= 0.0)
  {
    id v15 = *(char **)&v0[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView];
    [*(id *)&v1[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView] setHidden:1];
  }

  else
  {
    double v11 = v10;
    v39.origin.x = v3;
    v39.origin.y = v5;
    v39.size.width = v7;
    v39.size.height = v9;
    double MinX = CGRectGetMinX(v39);
    v40.origin.x = v3;
    v40.origin.y = v5;
    v40.size.width = v7;
    v40.size.height = v9;
    CGFloat v13 = CGRectGetMaxY(v40) - v11;
    v41.origin.x = v3;
    v41.origin.y = v5;
    v41.size.width = v7;
    v41.size.height = v9;
    CGFloat Width = CGRectGetWidth(v41);
    id v15 = *(char **)&v0[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView];
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView], "setFrame:", MinX, v13, Width, v11);
    [v15 setHidden:0];
  }

  v42.origin.x = v3;
  v42.origin.y = v5;
  v42.size.width = v7;
  v42.size.height = v9;
  double v16 = CGRectGetMinX(v42);
  v43.origin.x = v3;
  v43.origin.y = v5;
  v43.size.width = v7;
  v43.size.height = v9;
  double MinY = CGRectGetMinY(v43);
  v44.origin.x = v3;
  v44.origin.y = v5;
  v44.size.width = v7;
  v44.size.height = v9;
  double v18 = CGRectGetWidth(v44);
  v45.origin.x = v3;
  v45.origin.y = v5;
  v45.size.width = v7;
  v45.size.height = v9;
  double Height = CGRectGetHeight(v45);
  id v20 = [*(id *)&v15[OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel] text];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    uint64_t v24 = v23;
  }

  else
  {
    uint64_t v22 = 0LL;
    uint64_t v24 = 0LL;
  }

  char v25 = static String.isNilOrEmpty(_:)(v22, v24);
  swift_bridgeObjectRelease(v24);
  double v26 = 0.0;
  if ((v25 & 1) == 0)
  {
    objc_msgSend(v1, "frame", 0.0);
    objc_msgSend(v15, "sizeThatFits:", v27, v28);
    double v26 = v29 + 64.0;
  }

  double v30 = Height - v26;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageContainerView], "setFrame:", v16, MinY, v18, v30);
  if (qword_1002DD0D0 != -1) {
    swift_once(&qword_1002DD0D0, sub_1001D4370);
  }
  uint64_t v31 = sub_1000031E8(&qword_1002EB970);
  sub_1000061F4(v31, (uint64_t)qword_1002F1670);
  Conditional<>.value.getter(&v37, v31);
  double v32 = v37;
  id v33 = *(void **)&v1[OBJC_IVAR____TtC6Arcade14UberHeaderView_legibilityGradientView];
  v46.origin.x = 0.0;
  v46.origin.y = 0.0;
  v46.size.width = v18;
  v46.size.height = v30;
  double v34 = CGRectGetMinX(v46);
  v47.origin.x = 0.0;
  v47.origin.y = 0.0;
  v47.size.width = v18;
  v47.size.height = v30;
  double v35 = CGRectGetMinY(v47);
  v48.origin.x = 0.0;
  v48.origin.y = 0.0;
  v48.size.width = v18;
  v48.size.height = v30;
  objc_msgSend(v33, "setFrame:", v34, v35, CGRectGetWidth(v48), v32);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageView], "setFrame:", 0.0, 0.0, v18, v30);
}

CGFloat sub_1001D5668()
{
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView];
  id v2 = [*(id *)&v1[OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel] text];
  if (v2)
  {
    CGFloat v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    uint64_t v6 = v5;
  }

  else
  {
    uint64_t v4 = 0LL;
    uint64_t v6 = 0LL;
  }

  char v7 = static String.isNilOrEmpty(_:)(v4, v6);
  *(void *)&double v8 = swift_bridgeObjectRelease(v6).n128_u64[0];
  if ((v7 & 1) == 0)
  {
    objc_msgSend(v0, "frame", v8);
    objc_msgSend(v1, "sizeThatFits:", v9, v10);
  }

  return UIViewNoIntrinsicMetric;
}

uint64_t type metadata accessor for UberHeaderView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade14UberHeaderView);
}

unint64_t sub_1001D5874()
{
  unint64_t result = qword_1002DD768;
  if (!qword_1002DD768)
  {
    type metadata accessor for NSKeyValueChangeKey(255LL);
    unint64_t result = swift_getWitnessTable(&unk_1002334D8, v1);
    atomic_store(result, (unint64_t *)&qword_1002DD768);
  }

  return result;
}

uint64_t sub_1001D58BC()
{
  return swift_retain(*(void *)(v0 + OBJC_IVAR____TtC6Arcade15BaseAppDelegate_urlActionRunner));
}

id sub_1001D58D0()
{
  uint64_t v1 = type metadata accessor for ArcadeBootstrap(0LL);
  uint64_t v2 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  uint64_t v3 = OBJC_IVAR____TtC6Arcade15ArcadeBootstrap_navigationController;
  id v4 = objc_allocWithZone((Class)type metadata accessor for FlowNavigationController());
  id v5 = v0;
  *(void *)(v2 + v3) = objc_msgSend(v4, "init", swift_retain(v2).n128_f64[0]);
  swift_release(v2);
  uint64_t v6 = sub_1001D5A94((uint64_t)v5, v2);

  id v7 = (id)sub_100005D7C();
  swift_release(v6);
  return v7;
}

id sub_1001D59BC()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

int main(int argc, const char **argv, const char **envp)
{
  uint64_t v3 = type metadata accessor for AppDelegate();
  uint64_t v4 = static CommandLine.unsafeArgv.getter();
  uint64_t v5 = ((uint64_t (*)(void))static CommandLine.argc.getter)();
  uint64_t v6 = static CommandLine.argc.getter(v5);
  ObjCClassFromMetadatCGFloat a = (objc_class *)swift_getObjCClassFromMetadata(v3);
  double v8 = NSStringFromClass(ObjCClassFromMetadata);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  uint64_t v11 = v10;

  LODWORD(v8) = UIApplicationMain(_:_:_:_:)(v6, v4, 0LL, 0LL, v9, v11);
  swift_bridgeObjectRelease(v11);
  exit((int)v8);
}

uint64_t type metadata accessor for AppDelegate()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade11AppDelegate);
}

uint64_t sub_1001D5A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OSLogger.Subsystem(0LL);
  uint64_t v36 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for CompoundLogger(0LL);
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingMetricsLogger;
  uint64_t v12 = type metadata accessor for ReplayLogger(0LL, v8);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  uint64_t v13 = ReplayLogger.init()();
  uint64_t v35 = v11;
  *(void *)(a2 + v11) = v13;
  uint64_t v14 = OBJC_IVAR____TtC6Arcade13BaseBootstrap_diagnosticsRecorder;
  uint64_t v15 = type metadata accessor for RenderPipelineDiagnostics.Recorder(0LL);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(void *)(a2 + v1swift_weakDestroy(v0 + 4) = RenderPipelineDiagnostics.Recorder.init()();
  *(void *)(a2 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingEvents) = _swiftEmptyArrayStorage;
  *(_BYTE *)(a2 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_isBootstrapping) = 0;
  *(void *)(a2 + 2swift_weakDestroy(v0 + 4) = &off_100288778;
  uint64_t v16 = swift_unknownObjectUnownedInit(a2 + 16, a1);
  id v17 = (id)ASKBuildTypeGetCurrent(v16);
  uint64_t v18 = sub_1000031E8(&qword_1002E46C8);
  uint64_t v19 = swift_allocObject(v18, 48LL, 7LL);
  __int128 v34 = xmmword_1002339B0;
  *(_OWORD *)(v19 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
  id v20 = (void *)ASKBuildTypeDebug;
  uint64_t v21 = (void *)ASKBuildTypeInternal;
  *(void *)(v19 + 32) = ASKBuildTypeDebug;
  *(void *)(v19 + 40) = v21;
  type metadata accessor for BuildType(0LL);
  id v22 = v20;
  id v23 = v21;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  __n128 v25 = swift_bridgeObjectRelease(v19);
  LODWORD(v19) = ASKBuildTypeIsAnyOf(v17, isa, v25);

  uint64_t v26 = 0LL;
  if ((_DWORD)v19)
  {
    uint64_t v27 = type metadata accessor for InMemoryMetricsEventRecorder(0LL);
    swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
    uint64_t v26 = InMemoryMetricsEventRecorder.init(historySize:)(30LL);
  }

  *(void *)(a2 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_debugMetricsRecorder) = v26;
  uint64_t v28 = sub_1000031E8(&qword_1002EB9A0);
  uint64_t v29 = swift_allocObject(v28, 112LL, 7LL);
  uint64_t v30 = *(void *)(a2 + v35);
  *(_OWORD *)(v29 + swift_weakDestroy(v0 + 16) = v34;
  *(void *)(v29 + 56) = v12;
  *(void *)(v29 + 6swift_weakDestroy(v0 + 4) = &protocol witness table for ReplayLogger;
  *(void *)(v29 + 32) = v30;
  uint64_t v31 = qword_1002DD0D8;
  swift_retain(v30);
  if (v31 != -1) {
    swift_once(&qword_1002DD0D8, sub_1001DF564);
  }
  uint64_t v32 = sub_1000061F4(v4, (uint64_t)qword_1002F1690);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v6, v32, v4);
  *(void *)(v29 + 96) = type metadata accessor for OSLogger(0LL);
  *(void *)(v29 + 10swift_weakDestroy(v0 + 4) = &protocol witness table for OSLogger;
  sub_100009D54((void *)(v29 + 72));
  OSLogger.init(subsystem:category:)(v6, 0x61727473746F6F42LL, 0xE900000000000070LL);
  CompoundLogger.init(loggers:)(v29);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))( a2 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_logger,  v10,  v38);
  return a2;
}

void sub_1001D5DB8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v2 = a1;
    }
    else {
      uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = __CocoaSet.makeIterator()(v2);
    unint64_t v4 = sub_1000045E8();
    unint64_t v5 = sub_10006B6B4();
    uint64_t v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    uint64_t v1 = v27[0];
    uint64_t v25 = v27[1];
    uint64_t v7 = v27[2];
    uint64_t v8 = v27[3];
    unint64_t v9 = v27[4];
  }

  else
  {
    uint64_t v10 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    uint64_t v8 = 0LL;
  }

  int64_t v24 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    uint64_t v17 = v8;
    if ((v1 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v21 = __CocoaSet.Iterator.next()(v6);
    if (!v21) {
      goto LABEL_34;
    }
    uint64_t v22 = v21;
    uint64_t v26 = v21;
    unint64_t v23 = sub_1000045E8();
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v23, 7LL);
    id v15 = v28;
    swift_unknownObjectRelease(v22);
    if (!v15) {
      goto LABEL_34;
    }
LABEL_13:
    id v16 = [v15 type];

    if (v16 == (id)6) {
      goto LABEL_34;
    }
  }

  if (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v8 << 6);
LABEL_12:
    id v15 = *(id *)(*(void *)(v1 + 48) + 8 * v14);
    if (!v15) {
      goto LABEL_34;
    }
    goto LABEL_13;
  }

  int64_t v18 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v18 >= v24) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v8;
    if (!v19)
    {
      uint64_t v8 = v17 + 2;
      if (v17 + 2 >= v24) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v8);
      if (!v19)
      {
        uint64_t v8 = v17 + 3;
        if (v17 + 3 >= v24) {
          goto LABEL_34;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v8);
        if (!v19)
        {
          uint64_t v8 = v17 + 4;
          if (v17 + 4 >= v24) {
            goto LABEL_34;
          }
          unint64_t v19 = *(void *)(v25 + 8 * v8);
          if (!v19)
          {
            uint64_t v8 = v17 + 5;
            if (v17 + 5 >= v24) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v25 + 8 * v8);
            if (!v19)
            {
              uint64_t v20 = v17 + 6;
              while (v24 != v20)
              {
                unint64_t v19 = *(void *)(v25 + 8 * v20++);
                if (v19)
                {
                  uint64_t v8 = v20 - 1;
                  goto LABEL_31;
                }
              }

char *sub_1001D607C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for CornerStyle(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = OBJC_IVAR____TtC6Arcade23VideoCollectionViewCell_videoContainer;
  unint64_t v14 = (objc_class *)type metadata accessor for VideoViewContainer();
  id v15 = (char *)objc_allocWithZone(v14);
  swift_unknownObjectWeakInit(&v15[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view], 0LL);
  *(void *)&v15[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v16, 0LL);
  v48.id receiver = v15;
  v48.super_class = v14;
  uint64_t v17 = v4;
  *(void *)&v4[v13] = objc_msgSendSuper2(&v48, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  int64_t v18 = (objc_class *)type metadata accessor for VideoCollectionViewCell();
  v47.id receiver = v17;
  v47.super_class = v18;
  unint64_t v19 = (char *)objc_msgSendSuper2(&v47, "initWithFrame:", a1, a2, a3, a4);
  id v20 = [v19 contentView];
  [v20 addSubview:*(void *)&v19[OBJC_IVAR____TtC6Arcade23VideoCollectionViewCell_videoContainer]];

  (*(void (**)(_BYTE *, void, uint64_t))(v10 + 104))(v12, enum case for CornerStyle.continuous(_:), v9);
  id v21 = [v19 contentView];
  CornerStyle.apply(withRadius:to:)(v21, 16.0);

  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v22 = &v19[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  __int128 v23 = *(_OWORD *)&v19[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
  v54[0] = *(_OWORD *)&v19[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  v54[1] = v23;
  char v55 = v19[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)uint64_t v22 = 0x4014000000000000LL;
  *((void *)v22 + 1) = 0x4041800000000000LL;
  v22[16] = 0;
  *((void *)v22 + 3) = 0LL;
  v22[32] = 1;
  int64_t v24 = v19;
  sub_1000690F4((uint64_t)v54, v25, v26);

  v49[0] = xmmword_1002414E0;
  v49[1] = xmmword_1002414F0;
  char v50 = 0;
  uint64_t v51 = 0LL;
  uint64_t v52 = 0LL;
  char v53 = 1;
  uint64_t v27 = v24;
  sub_10006779C(v49);

  uint64_t v28 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v29 = v27;
  id v30 = [v28 blackColor];
  id v31 = [v30 CGColor];

  uint64_t v32 = &v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  id v33 = *(void **)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  __int128 v34 = *(void **)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
  uint64_t v35 = *(void **)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
  *(void *)uint64_t v32 = v31;
  *(int64x2_t *)(v32 + 8) = vdupq_n_s64(1uLL);
  id v36 = v33;
  sub_10000AAF8(v34);
  sub_10000AAF8(v35);
  id v37 = v31;

  sub_10000AB08(v34);
  sub_10000AB08(v35);
  sub_100069248(v33, v34, (unint64_t)v35);

  sub_10000AB08(v34);
  sub_10000AB08(v35);

  uint64_t v38 = &v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(aswift_weakDestroy(v0 + 4) = *(_DWORD *)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v37) = *(_DWORD *)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v3swift_weakDestroy(v0 + 4) = v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v35) = v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)uint64_t v38 = 1041865114;
  *((_DWORD *)v38 + 1) = 1056964608;
  v38[8] = 0;
  uint64_t v39 = *((unsigned int *)v38 + 3);
  *((_DWORD *)v38 + 3) = 0;
  v38[16] = 1;
  CGRect v40 = v29;
  v46[8] = (_BYTE)v34;
  v46[0] = (_BYTE)v35;
  v41.n128_u32[0] = LODWORD(a4);
  sub_1000693B0((int)v37, v34 | (unint64_t)(v39 << 32), (char)v35, v41);

  char v42 = v40[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
  v40[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v42 & 1) == 0)
  {
    char v43 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v40) + 0x98LL))();
    CGRect v44 = v40;
    sub_1000678F0(v43);
  }

  return v40;
}

void sub_1001D64A4(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_10006734C(a1, a2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v2 + OBJC_IVAR____TtC6Arcade23VideoCollectionViewCell_videoContainer)
           + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    id v6 = (id)Strong;
    sub_100128F18(v4, a2);
  }

void sub_1001D652C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MediaClickMetricsEvent.ActionType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000045E8();
  sub_10006B6B4();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  uint64_t v10 = (objc_class *)type metadata accessor for VideoCollectionViewCell();
  v19.id receiver = v2;
  v19.super_class = v10;
  objc_msgSendSuper2(&v19, "pressesBegan:withEvent:", isa, a2);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)&v2[OBJC_IVAR____TtC6Arcade23VideoCollectionViewCell_videoContainer] + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    uint64_t v12 = (_BYTE *)Strong;
    sub_1001D5DB8(a1);
    if ((v13 & 1) != 0)
    {
      uint64_t v14 = qword_1002F0818;
      if ((v12[qword_1002F0818] & 1) == 0)
      {
        id v15 = *(void **)&v12[qword_1002E70D8];
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = (void *)dispatch thunk of VideoPlayer.playerItem.getter();

          if (v17)
          {

            v12[v14] = 1;
            sub_10012A748();
            (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for MediaClickMetricsEvent.ActionType.enterFullscreen(_:),  v5);
            sub_10012B584((uint64_t)v8);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            sub_10012C020();
          }
        }
      }
    }
  }

void sub_1001D6864()
{
}

id sub_1001D6874()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VideoCollectionViewCell()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade23VideoCollectionViewCell);
}

uint64_t sub_1001D68D4()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*v0 + OBJC_IVAR____TtC6Arcade23VideoCollectionViewCell_videoContainer)
         + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
}

id sub_1001D68F8()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC6Arcade23VideoCollectionViewCell_videoContainer);
}

double destroy for FlowDebugAction(void *a1)
{
  *(void *)&double result = swift_bridgeObjectRelease(a1[2]).n128_u64[0];
  return result;
}

uint64_t *_s6Arcade15FlowDebugActionVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for FlowDebugAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t *assignWithTake for FlowDebugAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  uint64_t v5 = a2[2];
  uint64_t v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for FlowDebugAction()
{
  return &type metadata for FlowDebugAction;
}

uint64_t sub_1001D6A2C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *v1;
  uint64_t result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    uint64_t v9 = result;
    memset(v11, 0, sizeof(v11));
    (*(void (**)(char *, void, uint64_t))(v4 + 104))( v6,  enum case for ActionRunner.Origin.userInitiated(_:),  v3);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v7, v11, v6, a1);
    __n128 v10 = swift_release(v9);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v10);
    return sub_100029100((uint64_t)v11);
  }

  return result;
}

char *sub_1001D6B10(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC6Arcade33AnnotationGroupCollectionViewCell_itemLayoutContext];
  uint64_t v10 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v9, 1LL, 1LL, v10);
  uint64_t v11 = OBJC_IVAR____TtC6Arcade33AnnotationGroupCollectionViewCell_informationColumnView;
  uint64_t v12 = type metadata accessor for InformationColumnView();
  id v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12));
  uint64_t v14 = v4;
  *(void *)&v4[v11] = [v13 init];

  v23.id receiver = v14;
  v23.super_class = (Class)type metadata accessor for AnnotationGroupCollectionViewCell(0LL);
  id v15 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  objc_super v19 = (char *)v15;
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  id v20 = [v19 contentView];
  id v21 = *(id *)&v19[OBJC_IVAR____TtC6Arcade33AnnotationGroupCollectionViewCell_informationColumnView];
  [v20 addSubview:v21];

  return v19;
}

void sub_1001D6E28()
{
  uint64_t v1 = (char *)*(id *)&v0[OBJC_IVAR____TtC6Arcade33AnnotationGroupCollectionViewCell_informationColumnView];
  id v2 = [v0 overrideUserInterfaceStyle];
  uint64_t v3 = (objc_class *)type metadata accessor for InformationColumnView();
  v14.id receiver = v1;
  v14.super_class = v3;
  objc_msgSendSuper2(&v14, "setOverrideUserInterfaceStyle:", v2);
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6Arcade21InformationColumnView_annotations];
  if (!((unint64_t)v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade21InformationColumnView_annotations]);
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:

    swift_bridgeObjectRelease(v4);
    return;
  }

  if (v4 < 0) {
    uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC6Arcade21InformationColumnView_annotations];
  }
  else {
    uint64_t v11 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade21InformationColumnView_annotations]);
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      if ((v4 & 0xC000000000000001LL) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      }
      else {
        id v7 = *(id *)(v4 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      ++v6;
      v13.id receiver = v1;
      v13.super_class = v3;
      id v9 = objc_msgSendSuper2(&v13, "overrideUserInterfaceStyle");
      uint64_t v10 = (objc_class *)type metadata accessor for AnnotationCollectionViewCell(0LL);
      v12.id receiver = v8;
      v12.super_class = v10;
      objc_msgSendSuper2(&v12, "setOverrideUserInterfaceStyle:", v9);
      sub_1001AF9B8(0);
    }

    while (v5 != v6);
    goto LABEL_13;
  }

  __break(1u);
}

double sub_1001D6F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnnotationGroup(0LL);
  uint64_t v5 = sub_100003B6C( &qword_1002EBA38,  (uint64_t (*)(uint64_t))&type metadata accessor for AnnotationGroup,  (uint64_t)&protocol conformance descriptor for AnnotationGroup);
  ItemLayoutContext.typedModel<A>(as:)(&v21, v4, v4, v5);
  uint64_t v7 = v21;
  if (v21)
  {
    uint64_t v8 = *(id *)(v2 + OBJC_IVAR____TtC6Arcade33AnnotationGroupCollectionViewCell_informationColumnView);
    AnnotationGroup.title.getter();
    uint64_t v10 = v9;
    uint64_t v11 = AnnotationGroup.annotations.getter();
    char v12 = AnnotationGroup.forceExpanded.getter();
    uint64_t v13 = type metadata accessor for ObjectGraph(0LL);
    objc_super v14 = (void *)swift_dynamicCastClassUnconditional(a2, v13, 0LL, 0LL, 0LL);
    id v15 = *(id *)&v8[OBJC_IVAR____TtC6Arcade21InformationColumnView_headline];
    NSString v16 = String._bridgeToObjectiveC()();
    [v15 setText:v16];

    int v17 = v12 & 1;
    v8[OBJC_IVAR____TtC6Arcade21InformationColumnView_shouldExpandAllAnnotations] = v17;
    v20.id receiver = v8;
    v20.super_class = (Class)type metadata accessor for InformationColumnView();
    id v18 = objc_msgSendSuper2(&v20, "overrideUserInterfaceStyle");
    objc_super v19 = sub_1000C50F8(v11, v17, (uint64_t)v18, 0, v14);
    sub_1000C41F0((uint64_t)v19);
    [v8 setNeedsLayout];
    swift_release(v7);

    swift_bridgeObjectRelease(v10);
    *(void *)&double result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }

  return result;
}

void sub_1001D7128()
{
}

id sub_1001D7154()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnnotationGroupCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001D71C0()
{
  return type metadata accessor for AnnotationGroupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for AnnotationGroupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002EBA10;
  if (!qword_1002EBA10) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnotationGroupCollectionViewCell);
  }
  return result;
}

uint64_t sub_1001D7204()
{
  return sub_100003B6C( (unint64_t *)&unk_1002EBA28,  type metadata accessor for AnnotationGroupCollectionViewCell,  (uint64_t)&unk_1002415C4);
}

uint64_t sub_1001D7230@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade33AnnotationGroupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_100015FDC(v3, a1);
}

double sub_1001D7280(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade33AnnotationGroupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_100015F94(a1, v3);
  *(void *)&double result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1001D72D8(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

void sub_1001D7324(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PageGrid(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = type metadata accessor for AnnotationGroup(0LL);
  uint64_t v8 = sub_100003B6C( &qword_1002EBA38,  (uint64_t (*)(uint64_t))&type metadata accessor for AnnotationGroup,  (uint64_t)&protocol conformance descriptor for AnnotationGroup);
  ItemLayoutContext.typedModel<A>(as:)(&v28, v7, v7, v8);
  uint64_t v9 = v28;
  if (v28)
  {
    type metadata accessor for InformationColumnView();
    uint64_t KeyPath = swift_getKeyPath(&unk_100241658, v10);
    ItemLayoutContext.subscript.getter(v6);
    swift_release(KeyPath);
    double v13 = PageGrid.componentMeasuringSize(spanning:)(v12, 1.0);
    double v15 = v14;
    uint64_t v16 = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v17 = AnnotationGroup.title.getter(v16);
    uint64_t v19 = v18;
    uint64_t v20 = AnnotationGroup.annotations.getter();
    char v21 = AnnotationGroup.forceExpanded.getter();
    uint64_t v23 = swift_getKeyPath(&unk_100241690, v22);
    ItemLayoutContext.subscript.getter(&v28);
    swift_release(v23);
    int64_t v24 = v28;
    uint64_t v25 = type metadata accessor for ObjectGraph(0LL);
    __n128 v26 = (void *)swift_dynamicCastClassUnconditional(a2, v25, 0LL, 0LL, 0LL);
    swift_getObjectType(v24);
    sub_1000C4C60(v17, v19, v20, v21 & 1, v24, v26, v13, v15);
    swift_release(v9);
    swift_unknownObjectRelease(v24);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v20);
  }

uint64_t type metadata accessor for MSODiffablePageViewController(uint64_t a1)
{
  uint64_t result = qword_1002EBA68;
  if (!qword_1002EBA68) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MSODiffablePageViewController);
  }
  return result;
}

uint64_t sub_1001D7560()
{
  return type metadata accessor for MSODiffablePageViewController(0LL);
}

char *sub_1001D7568(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v354 = a4;
  uint64_t v366 = a2;
  uint64_t v367 = a3;
  id v369 = a1;
  uint64_t v356 = type metadata accessor for Dependency(0LL);
  uint64_t v359 = *(void *)(v356 - 8);
  __chkstk_darwin(v356);
  __int128 v355 = (char *)&v338 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v342 = sub_1000031E8(&qword_1002E9088);
  uint64_t v341 = *(void *)(v342 - 8);
  uint64_t v5 = __chkstk_darwin(v342);
  v340 = (char *)&v338 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v338 = (uint64_t)&v338 - v8;
  __chkstk_darwin(v7);
  uint64_t v339 = (char *)&v338 - v9;
  uint64_t v10 = sub_1000031E8(&qword_1002E8F00);
  __chkstk_darwin(v10);
  v344 = (char *)&v338 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000031E8(&qword_1002DEF80);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v346 = (uint64_t)&v338 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v349 = (uint64_t)&v338 - v15;
  uint64_t v352 = type metadata accessor for ArcadePageUrls(0LL);
  uint64_t v351 = *(void *)(v352 - 8);
  uint64_t v16 = __chkstk_darwin(v352);
  uint64_t v343 = (char *)&v338 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  double v348 = (char *)&v338 - v18;
  uint64_t v353 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v19 = *(void *)(v353 - 8);
  uint64_t v20 = __chkstk_darwin(v353);
  uint64_t v22 = (char *)&v338 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v350 = (char *)&v338 - v23;
  uint64_t v345 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
  uint64_t v357 = *(void *)(v345 - 8);
  uint64_t v24 = __chkstk_darwin(v345);
  __n128 v26 = (char *)&v338 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v338 - v27;
  uint64_t v29 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v347 = (uint64_t)&v338 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = __chkstk_darwin(v30);
  v360 = (char *)&v338 - v33;
  __chkstk_darwin(v32);
  uint64_t v362 = (uint64_t)&v338 - v34;
  uint64_t v35 = type metadata accessor for ProductDiffablePagePresenter.PageWidth(0LL);
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v338 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v39);
  __n128 v41 = (char *)&v338 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v365 = type metadata accessor for URL(0LL);
  uint64_t v364 = *(void *)(v365 - 8);
  uint64_t v42 = __chkstk_darwin(v365);
  uint64_t v361 = (char *)&v338 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = __chkstk_darwin(v42);
  v363 = (char *)&v338 - v45;
  __chkstk_darwin(v44);
  uint64_t v358 = (char *)&v338 - v46;
  uint64_t v47 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v47);
  uint64_t v49 = (uint64_t *)((char *)&v338 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_10000611C((uint64_t)v369, (uint64_t)v49);
  switch(swift_getEnumCaseMultiPayload(v49, v47))
  {
    case 0u:
      uint64_t v50 = sub_1000031E8(&qword_1002DEF78);
      __n128 v51 = swift_release(*(uint64_t *)((char *)v49 + *(int *)(v50 + 48)));
      id v369 = *(id *)((char *)v49 + *(int *)(v50 + 64));
      uint64_t v52 = v364;
      char v53 = v358;
      id v54 = v49;
      uint64_t v55 = v365;
      (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v364 + 32))(v358, v54, v365, v51);
      uint64_t v56 = *(void *)(v368 + qword_1002E1B98);
      uint64_t v362 = inject(_:from:)(v56);
      uint64_t v361 = v57;
      uint64_t v58 = sub_1000031E8(&qword_1002EC060);
      uint64_t v59 = type metadata accessor for ObjectGraph(0LL);
      inject<A, B>(_:from:)(&v373, v58, v56, v58, v59);
      uint64_t v60 = sub_100006028(0LL, (unint64_t *)&qword_1002EC098, &OBJC_CLASS___ASKRestrictions_ptr);
      uint64_t v61 = (void *)inject(_:from:)(v60, v56);
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
      uint64_t v63 = v363;
      v62(v363, v53, v55);
      sub_10001F010((uint64_t)&v373, (uint64_t)v372);
      uint64_t v371 = 0LL;
      memset(v370, 0, sizeof(v370));
      sub_10001027C(v354, (uint64_t)v41, &qword_1002E1FB0);
      uint64_t v64 = v35;
      id v65 = v369;
      (*(void (**)(char *, void, uint64_t))(v36 + 104))( v38,  enum case for ProductDiffablePagePresenter.PageWidth.regular(_:),  v64);
      uint64_t v66 = type metadata accessor for ProductDiffablePagePresenter(0LL);
      swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
      swift_retain(v65);
      uint64_t v67 = v362;
      swift_unknownObjectRetain(v362);
      unint64_t v68 = v61;
      uint64_t v69 = swift_retain(v56);
      char v336 = v41;
      uint64_t v70 = v67;
      LOWORD(v335) = 0;
      uint64_t v71 = ProductDiffablePagePresenter.init(objectGraph:pageUrl:sidePackedPage:sidePackedPageRenderMetrics:appStateController:purchaseHistory:restrictions:fullProductFetchedAction:pageWidth:isDownloadingOrderingEnabled:downloadingOrderingTimeout:supportsFastImpressions:advertLifecycleMetricsReporter:referrerData:)( v69,  v63,  v65,  0LL,  v67,  v361,  v372,  v68,  0.0,  0LL,  v38,  v335,  v370,  v336);
      uint64_t v72 = v367;
      swift_bridgeObjectRetain(v367);
      swift_retain(v71);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v366, v72);
      __n128 v73 = swift_release(v71);
      uint64_t v74 = type metadata accessor for Feature.tvOS(0LL, v73);
      v372[3] = v74;
      v372[4] = sub_100003B6C( &qword_1002EC0A0,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature.tvOS,  (uint64_t)&protocol conformance descriptor for Feature.tvOS);
      uint64_t v75 = sub_100009D54(v372);
      (*(void (**)(void *, void, uint64_t))(*(void *)(v74 - 8) + 104LL))( v75,  enum case for Feature.tvOS.tv_product_page_2024E(_:),  v74);
      LOBYTE(v7swift_weakDestroy(v0 + 4) = isFeatureEnabled(_:)(v372);
      _s6Arcade17PillOverlayLayoutVwxx_0(v372);
      if ((v74 & 1) != 0)
      {
        uint64_t v76 = sub_1000031E8(&qword_1002DE660);
        uint64_t v77 = swift_allocObject( v76,  ((*(unsigned __int8 *)(v359 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v359 + 80))
              + *(void *)(v359 + 72),
                *(unsigned __int8 *)(v359 + 80) | 7LL);
        *(_OWORD *)(v77 + swift_weakDestroy(v0 + 16) = xmmword_100233580;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong(v368 + qword_1002E1B90);
        if (!Strong)
        {
          __break(1u);
          JUMPOUT(0x1001D97F0LL);
        }

        uint64_t v79 = (void *)Strong;
        swift_retain(v71);
        uint64_t v80 = UIResponder.nearestActionRunner.getter();
        uint64_t v81 = v338;
        v360 = v68;
        if (v80)
        {
          uint64_t v82 = v80;
          sub_10015D340(v80, v338);
          swift_release(v82);
        }

        else
        {
          uint64_t v324 = type metadata accessor for BaseObjectGraph(0LL);
          ActionDispatcher.init()(v324);
        }

        uint64_t v325 = sub_100003B6C( &qword_1002EC0A8,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
        uint64_t v326 = v341;
        v327 = v339;
        uint64_t v328 = v342;
        (*(void (**)(char *, uint64_t, uint64_t))(v341 + 32))(v339, v81, v342);
        uint64_t v329 = v340;
        (*(void (**)(char *, char *, uint64_t))(v326 + 16))(v340, v327, v328);
        Dependency.init<A>(satisfying:with:)(v328, v329, v328);
        (*(void (**)(char *, uint64_t))(v326 + 8))(v327, v328);

        uint64_t v330 = sub_10015F498(v56, v71, v325, v77, 0x50746375646F7270LL, 0xEB00000000656761LL);
        swift_release(v71);
        swift_bridgeObjectRelease(v77);
        __chkstk_darwin(v331);
        char v336 = (char *)v71;
        uint64_t v337 = v330;
        id v332 = objc_allocWithZone((Class)sub_1000031E8(&qword_1002EC0B0));
        uint64_t v333 = swift_retain(v330);
        uint64_t v92 = (char *)HostingViewController.init(objectGraph:content:)(v333, sub_1001DF208, &v335);
        swift_release(v369);
        swift_unknownObjectRelease(v362);

        swift_release(v330);
        swift_release(v71);
      }

      else
      {
        uint64_t v291 = sub_100003B6C( &qword_1002EC0A8,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
        swift_retain(v71);
        uint64_t v292 = sub_10015F498( v56,  v71,  v291,  (uint64_t)&_swiftEmptyArrayStorage,  0x50746375646F7270LL,  0xEB00000000656761LL);
        swift_release(v71);
        id v293 = objc_allocWithZone((Class)type metadata accessor for ProductDiffablePageViewController(0LL));
        uint64_t v92 = sub_100043750(v71, v292);
        swift_release(v65);
        swift_unknownObjectRelease(v70);
      }

      _s6Arcade17PillOverlayLayoutVwxx_0(&v373);
      (*(void (**)(char *, uint64_t, __n128))(v364 + 8))(v358, v365, v334);
      return v92;
    case 3u:
      uint64_t v83 = *(uint64_t *)((char *)v49 + *(int *)(sub_1000031E8(&qword_1002DEF48) + 48));
      uint64_t v84 = v364;
      unint64_t v85 = v363;
      uint64_t v86 = v365;
      (*(void (**)(char *, uint64_t *, uint64_t))(v364 + 32))(v363, v49, v365);
      uint64_t v87 = (uint64_t)v361;
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v361, v85, v86);
      uint64_t v88 = v367;
      uint64_t v89 = *(void *)(v368 + qword_1002E1B98);
      swift_bridgeObjectRetain(v367);
      uint64_t v90 = sub_10015F498(v89, 0LL, 0LL, (uint64_t)&_swiftEmptyArrayStorage, 0x5063696D616E7964LL, 0xEB00000000656761LL);
      id v91 = objc_allocWithZone((Class)type metadata accessor for DynamicViewController());
      uint64_t v92 = sub_10010FF18(v87, v83, v366, v88, v90);
      swift_release(v83);
      __n128 v93 = swift_release(v90);
      (*(void (**)(char *, uint64_t, __n128))(v84 + 8))(v85, v86, v93);
      return v92;
    case 4u:
      swift_release(*v49);
      uint64_t v173 = sub_10015F498( *(void *)(v368 + qword_1002E1B98),  0LL,  0LL,  (uint64_t)&_swiftEmptyArrayStorage,  0x6150686372616573LL,  0xEA00000000006567LL);
      id v174 = objc_allocWithZone((Class)type metadata accessor for SearchViewController());
      return sub_10014A8DC(v173);
    case 7u:
      uint64_t v175 = *v49;
      uint64_t v176 = sub_1000031E8(&qword_1002E8340);
      uint64_t v177 = v347;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v176 + 48), v347, (uint64_t *)&unk_1002E1810);
      uint64_t v178 = *(void *)(v368 + qword_1002E1B98);
      uint64_t v179 = type metadata accessor for PersonalizationDataProvider(0LL);
      BaseObjectGraph.optional<A>(_:)(&v373, v179, v179);
      uint64_t v180 = v373;
      uint64_t v181 = v362;
      sub_10001027C(v177, v362, (uint64_t *)&unk_1002E1810);
      uint64_t v182 = type metadata accessor for GenericDiffablePagePresenter(0LL);
      swift_allocObject(v182, *(unsigned int *)(v182 + 48), *(unsigned __int16 *)(v182 + 52));
      swift_retain(v175);
      swift_retain(v178);
      swift_retain(v180);
      uint64_t v183 = GenericDiffablePagePresenter.init(objectGraph:personalizationProvider:sidePackedPage:sidePackedPageRenderMetrics:pageUrl:)( v178,  v180,  v175,  0LL,  v181);
      uint64_t v184 = v367;
      swift_bridgeObjectRetain(v367);
      swift_retain(v183);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v366, v184);
      swift_release(v183);
      uint64_t v185 = sub_100003B6C( &qword_1002E2548,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v183);
      uint64_t v186 = sub_10015F498( v178,  v183,  v185,  (uint64_t)&_swiftEmptyArrayStorage,  0x50636972656E6567LL,  0xEB00000000656761LL);
      swift_release(v183);
      id v187 = objc_allocWithZone((Class)type metadata accessor for GenericDiffablePageViewController(0LL));
      swift_retain(v183);
      swift_retain(v186);
      uint64_t v92 = sub_1001EDC30(v183, v186);
      dispatch thunk of GenericDiffablePagePresenter.pageTitle.getter();
      if (v188)
      {
        uint64_t v190 = v188;
        NSString v191 = String._bridgeToObjectiveC()();
        *(void *)&double v189 = swift_bridgeObjectRelease(v190).n128_u64[0];
      }

      else
      {
        NSString v191 = 0LL;
      }

      objc_msgSend(v92, "setTitle:", v191, v189);
      swift_release(v180);
      swift_release(v175);

      swift_release(v183);
      swift_release(v186);
      sub_100006060(v177, (uint64_t *)&unk_1002E1810);
      return v92;
    case 8u:
      uint64_t v94 = *v49;
      uint64_t v95 = sub_1000031E8(&qword_1002DEF58);
      uint64_t v96 = v362;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v95 + 48), v362, (uint64_t *)&unk_1002E1810);
      uint64_t v97 = *(void *)(v368 + qword_1002E1B98);
      unint64_t v98 = v360;
      sub_10001027C(v96, (uint64_t)v360, (uint64_t *)&unk_1002E1810);
      uint64_t v99 = type metadata accessor for TopChartsDiffablePagePresenter(0LL);
      swift_allocObject(v99, *(unsigned int *)(v99 + 48), *(unsigned __int16 *)(v99 + 52));
      swift_retain(v94);
      uint64_t v100 = swift_retain(v97);
      uint64_t v101 = TopChartsDiffablePagePresenter.init(objectGraph:pageUrl:sidePackedPage:)(v100, v98, v94);
      uint64_t v102 = sub_100003B6C( &qword_1002EC058,  (uint64_t (*)(uint64_t))&type metadata accessor for TopChartsDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v101);
      uint64_t v103 = sub_10015F498( v97,  v101,  v102,  (uint64_t)&_swiftEmptyArrayStorage,  0x7472616843706F74LL,  0xED00006567615073LL);
      swift_release(v101);
      id v104 = objc_allocWithZone((Class)type metadata accessor for TopChartsDiffablePageViewController());
      uint64_t v92 = (char *)sub_1001EE2C0(v101, v103);
      swift_release(v94);
      uint64_t v105 = v96;
      goto LABEL_22;
    case 0xBu:
      return (char *)*v49;
    case 0xDu:
      uint64_t v192 = *v49;
      uint64_t v193 = sub_1000031E8(&qword_1002DEF68);
      uint64_t v194 = v362;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v193 + 48), v362, (uint64_t *)&unk_1002E1810);
      uint64_t v195 = *(void *)(v368 + qword_1002E1B98);
      uint64_t v196 = v360;
      sub_10001027C(v194, (uint64_t)v360, (uint64_t *)&unk_1002E1810);
      uint64_t v197 = type metadata accessor for ArticleDiffablePagePresenter(0LL);
      swift_allocObject(v197, *(unsigned int *)(v197 + 48), *(unsigned __int16 *)(v197 + 52));
      swift_retain(v192);
      uint64_t v198 = swift_retain(v195);
      uint64_t v199 = ArticleDiffablePagePresenter.init(objectGraph:impressionsTracker:pageUrl:sidePackedPage:)( v198,  0LL,  0LL,  v196,  v192);
      uint64_t v200 = v367;
      swift_bridgeObjectRetain(v367);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v366, v200);
      uint64_t v201 = sub_100003B6C( &qword_1002EC078,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v199);
      uint64_t v202 = sub_10015F498( v195,  v199,  v201,  (uint64_t)&_swiftEmptyArrayStorage,  0x50656C6369747261LL,  0xEB00000000656761LL);
      swift_release(v199);
      id v203 = objc_allocWithZone((Class)type metadata accessor for ArticleDiffablePageViewController(0LL));
      uint64_t v92 = sub_1001EDC54(v199, v202);
      swift_release(v192);
      uint64_t v105 = v194;
LABEL_22:
      sub_100006060(v105, (uint64_t *)&unk_1002E1810);
      return v92;
    case 0xEu:
      uint64_t v204 = (void *)*v49;
      if (v204)
      {
        uint64_t v205 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
        uint64_t v206 = swift_allocObject(v205, 40LL, 7LL);
        *(_OWORD *)(v206 + swift_weakDestroy(v0 + 16) = xmmword_100233570;
        *(void *)(v206 + 32) = v204;
        *(void *)&__int128 v373 = v206;
        specialized Array._endMutation()(v206);
        uint64_t v207 = (void *)v373;
      }

      else
      {
        uint64_t v207 = &_swiftEmptyArrayStorage;
      }

      uint64_t v294 = v368;
      uint64_t v295 = v359;
      uint64_t v296 = sub_100006028(0LL, (unint64_t *)&qword_1002E5E50, &OBJC_CLASS___ACAccountStore_ptr);
      uint64_t v297 = *(void *)(v294 + qword_1002E1B98);
      uint64_t v298 = type metadata accessor for ObjectGraph(0LL);
      id v299 = v204;
      inject<A, B>(_:from:)(&v373, v296, v297, v296, v298);
      id v369 = (id)v373;
      uint64_t v300 = type metadata accessor for ASKBagContract(0LL);
      uint64_t v301 = inject(_:from:)(v300, v297);
      uint64_t v302 = sub_1000031E8(&qword_1002EC060);
      inject<A, B>(_:from:)(&v373, v302, v297, v302, v298);
      updateCGFloat d = type metadata accessor for UpdateStore(0LL);
      inject<A, B>(_:from:)(v372, updated, v297, updated, v298);
      v304 = (void *)v372[0];
      uint64_t v305 = sub_1000031E8(&qword_1002EC068);
      v372[0] = v207;
      uint64_t v306 = v355;
      Dependency.init<A>(satisfying:with:)(v305, v372, v305);
      uint64_t v307 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v306);
      uint64_t v308 = *(void (**)(char *, uint64_t))(v295 + 8);
      uint64_t v309 = v356;
      v308(v306, v356);
      type metadata accessor for ASDPurchaseHistoryContext(0LL);
      v372[0] = 1LL;
      Dependency.init<A>(satisfying:with:)(v310, v372, v310);
      uint64_t v311 = (void *)dispatch thunk of BaseObjectGraph.adding(dependency:)(v306);
      __n128 v312 = swift_release(v307);
      ((void (*)(char *, uint64_t, __n128))v308)(v306, v309, v312);
      uint64_t v313 = sub_1002183D0(v311);
      uint64_t v315 = v314;
      sub_10001F010((uint64_t)&v373, (uint64_t)v372);
      uint64_t v316 = type metadata accessor for TVPurchasesPagePresenter(0LL);
      swift_allocObject(v316, *(unsigned int *)(v316 + 48), *(unsigned __int16 *)(v316 + 52));
      id v317 = v299;
      swift_retain(v297);
      id v318 = v369;
      swift_unknownObjectRetain(v313);
      id v319 = v304;
      swift_retain(v301);
      uint64_t v320 = TVPurchasesPagePresenter.init(objectGraph:accountStore:purchaseHistory:appStateController:updateStore:bag:familyMember:)( v297,  v318,  v372,  v313,  v315,  v319,  v301,  v204);
      uint64_t v321 = sub_100003B6C( &qword_1002EC070,  (uint64_t (*)(uint64_t))&type metadata accessor for TVPurchasesPagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v320);
      uint64_t v322 = sub_10015F498( v297,  v320,  v321,  (uint64_t)&_swiftEmptyArrayStorage,  0x6573616863727570LL,  0xED00006567615073LL);
      swift_release(v320);
      id v323 = objc_allocWithZone((Class)type metadata accessor for PurchasesViewController());
      uint64_t v92 = sub_10000AC4C(v320, v322);

      swift_unknownObjectRelease(v313);
      swift_release(v301);

      swift_release(v311);
      _s6Arcade17PillOverlayLayoutVwxx_0(&v373);
      return v92;
    case 0x14u:
      uint64_t v208 = (uint64_t)v49 + *(int *)(sub_1000031E8(&qword_1002DEF98) + 48);
      uint64_t v209 = v364;
      uint64_t v210 = v363;
      uint64_t v211 = v365;
      (*(void (**)(char *, uint64_t *, uint64_t))(v364 + 32))(v363, v49, v365);
      uint64_t v212 = v349;
      sub_10003FBFC(v208, v349, &qword_1002DEF80);
      uint64_t v213 = *(void *)(v368 + qword_1002E1B98);
      uint64_t v214 = type metadata accessor for PersonalizationDataProvider(0LL);
      BaseObjectGraph.optional<A>(_:)(&v373, v214, v214);
      uint64_t v215 = v373;
      uint64_t v216 = v361;
      (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v361, v210, v211);
      uint64_t v217 = v346;
      sub_10001027C(v212, v346, &qword_1002DEF80);
      uint64_t v218 = type metadata accessor for MSODiffablePagePresenter(0LL);
      swift_allocObject(v218, *(unsigned int *)(v218 + 48), *(unsigned __int16 *)(v218 + 52));
      swift_retain(v215);
      uint64_t v219 = swift_retain(v213);
      uint64_t v220 = MSODiffablePagePresenter.init(objectGraph:personalizationProvider:pageUrl:context:)(v219, v215, v216, v217);
      uint64_t v221 = v367;
      swift_bridgeObjectRetain(v367);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v366, v221);
      uint64_t v222 = sub_100003B6C( &qword_1002EC048,  (uint64_t (*)(uint64_t))&type metadata accessor for MSODiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v220);
      uint64_t v223 = sub_10015F498( v213,  v220,  v222,  (uint64_t)&_swiftEmptyArrayStorage,  0x656761506F736DLL,  0xE700000000000000LL);
      swift_release(v220);
      id v224 = objc_allocWithZone((Class)type metadata accessor for MSODiffablePageViewController(0LL));
      uint64_t v92 = sub_1001EDC9C(v220, v223);
      swift_release(v215);
      sub_100006060(v212, &qword_1002DEF80);
      (*(void (**)(char *, uint64_t, __n128))(v209 + 8))(v210, v211, v225);
      return v92;
    case 0x16u:
      char v226 = *(_BYTE *)v49;
      uint64_t v227 = *(void *)(v368 + qword_1002E1B98);
      id v228 = objc_allocWithZone((Class)type metadata accessor for OnboardingViewController());
      swift_retain(v227);
      uint64_t v92 = sub_1000E59D8(v226, v227);
      uint64_t v229 = swift_allocObject(&unk_10028E050, 24LL, 7LL);
      swift_weakInit(v229 + 16, v227);
      uint64_t v230 = swift_allocObject(&unk_10028E0C8, 25LL, 7LL);
      *(void *)(v230 + swift_weakDestroy(v0 + 16) = v229;
      *(_BYTE *)(v230 + 2swift_weakDestroy(v0 + 4) = v226;
      int v231 = &v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_primaryButtonCallback];
      uint64_t v232 = *(void *)&v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_primaryButtonCallback];
      uint64_t v233 = *(void *)&v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_primaryButtonCallback + 8];
      *(void *)int v231 = sub_1001DF1F0;
      *((void *)v231 + 1) = v230;
      swift_retain(v229);
      swift_retain(v230);
      sub_10000D3D8(v232, v233);
      uint64_t v234 = *(void *)&v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_onboardingView];
      uint64_t v235 = swift_allocObject(&unk_10028E0A0, 24LL, 7LL);
      swift_unknownObjectWeakInit(v235 + 16, v92);
      uint64_t v237 = *v236;
      uint64_t v238 = v236[1];
      *uint64_t v236 = (uint64_t)sub_1001DF1B4;
      v236[1] = v235;
      sub_10000D3D8(v237, v238);
      swift_release(v229);
      swift_release(v230);
      if (qword_1002DC4E0 != -1) {
        swift_once(&qword_1002DC4E0, sub_100065B64);
      }
      swift_unknownObjectWeakAssign(&unk_1002EEA30, v92);
      return v92;
    case 0x19u:
      uint64_t v106 = *v49;
      uint64_t v107 = sub_1000031E8(&qword_1002DDA20);
      uint64_t v108 = v351;
      uint64_t v109 = v348;
      uint64_t v110 = v352;
      (*(void (**)(char *, char *, uint64_t))(v351 + 32))(v348, (char *)v49 + *(int *)(v107 + 48), v352);
      uint64_t v111 = type metadata accessor for ArcadeSubscriptionManager(0LL);
      uint64_t v112 = *(void *)(v368 + qword_1002E1B98);
      uint64_t v113 = (void *)inject(_:from:)(v111, v112);
      uint64_t v114 = type metadata accessor for ASKBagContract(0LL);
      uint64_t v115 = inject(_:from:)(v114, v112);
      swift_retain(v112);
      id v116 = v113;
      double v117 = ASKBagContract.fetchTimeout.getter();
      uint64_t v118 = v343;
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v343, v109, v110);
      uint64_t v119 = type metadata accessor for ArcadeDiffablePagePresenter(0LL);
      swift_allocObject(v119, *(unsigned int *)(v119 + 48), *(unsigned __int16 *)(v119 + 52));
      swift_retain(v106);
      uint64_t v120 = ArcadeDiffablePagePresenter.init(objectGraph:arcadeSubscriptionManager:subscriptionStateFetchTimeout:sidePackedPage:pageUrls:)( v112,  v116,  v106,  v118,  v117);
      uint64_t v121 = v367;
      swift_bridgeObjectRetain(v367);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v366, v121);
      uint64_t v122 = sub_100003B6C( &qword_1002EC050,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v120);
      uint64_t v123 = sub_10015F498( v112,  v120,  v122,  (uint64_t)&_swiftEmptyArrayStorage,  0x6150656461637261LL,  0xEA00000000006567LL);
      swift_release(v120);
      id v124 = objc_allocWithZone((Class)type metadata accessor for ArcadeDiffablePageViewController(0LL));
      uint64_t v92 = sub_1000BFE80(v120, v123);

      swift_release(v106);
      __n128 v125 = swift_release(v115);
      (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v109, v110, v125);
      return v92;
    case 0x1Au:
      uint64_t v126 = *(uint64_t *)((char *)v49 + *(int *)(sub_1000031E8(&qword_1002DEF50) + 48));
      uint64_t v127 = v362;
      sub_10003FBFC((uint64_t)v49, v362, (uint64_t *)&unk_1002E1810);
      uint64_t v128 = *(void *)(v368 + qword_1002E1B98);
      uint64_t v129 = type metadata accessor for ArcadeSubscriptionManager(0LL);
      swift_retain(v128);
      uint64_t v130 = inject(_:from:)(v129, v128);
      uint64_t v131 = v360;
      sub_10001027C(v127, (uint64_t)v360, (uint64_t *)&unk_1002E1810);
      uint64_t v132 = type metadata accessor for ArcadeSubscribePresenter(0LL);
      swift_allocObject(v132, *(unsigned int *)(v132 + 48), *(unsigned __int16 *)(v132 + 52));
      swift_retain(v126);
      uint64_t v133 = ArcadeSubscribePresenter.init(objectGraph:subscriptionManager:url:sidepack:)(v128, v130, v131, v126);
      uint64_t v134 = v367;
      swift_bridgeObjectRetain(v367);
      dispatch thunk of BasePresenter.referrer.setter(v366, v134);
      uint64_t v135 = sub_100003B6C( &qword_1002EC090,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSubscribePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v133);
      uint64_t v136 = sub_10015F498( v128,  v133,  v135,  (uint64_t)&_swiftEmptyArrayStorage,  0xD000000000000013LL,  0x800000010024E3F0LL);
      swift_release(v133);
      id v137 = objc_allocWithZone((Class)type metadata accessor for ArcadeSubscribeViewController());
      uint64_t v92 = sub_10007F018(v133, v136);
      swift_release(v126);
      sub_100006060(v127, (uint64_t *)&unk_1002E1810);
      return v92;
    case 0x1Bu:
      uint64_t v138 = *v49;
      uint64_t v139 = v367;
      uint64_t v140 = *(void *)(v368 + qword_1002E1B98);
      swift_bridgeObjectRetain(v367);
      uint64_t v141 = sub_10015F498( v140,  0LL,  0LL,  (uint64_t)&_swiftEmptyArrayStorage,  0x49676E696B72616DLL,  0xEF656761506D6574LL);
      id v142 = objc_allocWithZone((Class)type metadata accessor for MarketingItemViewController());
      return sub_1001259E8(v138, v366, v139, v141);
    case 0x1Cu:
      swift_release(*v49);
      uint64_t v143 = sub_1000031E8(&qword_1002DEF90);
      uint64_t v144 = v364;
      __n128 v145 = v363;
      (*(void (**)(char *, char *, uint64_t))(v364 + 32))(v363, (char *)v49 + *(int *)(v143 + 48), v365);
      uint64_t v146 = type metadata accessor for PageFacetsPresenter(0LL);
      swift_allocObject(v146, *(unsigned int *)(v146 + 48), *(unsigned __int16 *)(v146 + 52));
      uint64_t v147 = PageFacetsPresenter.init()();
      uint64_t v148 = *(void *)(v368 + qword_1002E1B98);
      inject(_:from:)(v148);
      __int128 v149 = v350;
      static PageFacetsFieldsProvider.metricsPipelineWithPageFacetsProvider(using:currentPipeline:)( v147,  &protocol witness table for PageFacetsPresenter,  v22);
      id v369 = *(id *)(v19 + 8);
      uint64_t v150 = v353;
      ((void (*)(char *, uint64_t))v369)(v22, v353);
      uint64_t v151 = v361;
      uint64_t v152 = v145;
      uint64_t v153 = v365;
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v361, v152, v365);
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v149, v150);
      uint64_t v154 = type metadata accessor for ArcadeSeeAllGamesDiffablePagePresenter(0LL);
      swift_allocObject(v154, *(unsigned int *)(v154 + 48), *(unsigned __int16 *)(v154 + 52));
      swift_retain(v148);
      swift_retain(v147);
      uint64_t v155 = ArcadeSeeAllGamesDiffablePagePresenter.init(objectGraph:pageUrl:facetsPresenter:metricsPipeline:)( v148,  v151,  v147,  v22);
      uint64_t v156 = sub_100003B6C( &qword_1002EC080,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSeeAllGamesDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      uint64_t v157 = sub_1000031E8(&qword_1002DE660);
      uint64_t v158 = swift_allocObject( v157,  ((*(unsigned __int8 *)(v359 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v359 + 80))
             + *(void *)(v359 + 72),
               *(unsigned __int8 *)(v359 + 80) | 7LL);
      *(_OWORD *)(v158 + swift_weakDestroy(v0 + 16) = xmmword_100233580;
      swift_retain(v155);
      static Dependency.satisfying<A>(_:with:)(v150, v149, v150);
      uint64_t v159 = sub_10015F498(v148, v155, v156, v158, 0xD000000000000015LL, 0x800000010024E3B0LL);
      swift_release(v155);
      swift_bridgeObjectRelease(v158);
      id v160 = objc_allocWithZone((Class)type metadata accessor for ArcadeSeeAllGamesDiffablePageViewController(0LL));
      uint64_t v92 = sub_1001230DC(v155, v159);
      __n128 v161 = swift_release(v147);
      ((void (*)(char *, uint64_t, __n128))v369)(v149, v150, v161);
      (*(void (**)(char *, uint64_t, __n128))(v364 + 8))(v363, v153, v162);
      return v92;
    case 0x1Du:
      uint64_t v239 = (void *)*v49;
      uint64_t v240 = sub_1000031E8(&qword_1002DEF88);
      uint64_t v241 = (char *)v49 + *(int *)(v240 + 48);
      uint64_t v242 = (char *)v49 + *(int *)(v240 + 64);
      uint64_t v243 = v357;
      uint64_t v244 = v345;
      (*(void (**)(char *, char *, uint64_t))(v357 + 32))(v28, v241, v345);
      uint64_t v245 = v364;
      __int128 v246 = v363;
      uint64_t v247 = v365;
      (*(void (**)(char *, char *, uint64_t))(v364 + 32))(v363, v242, v365);
      uint64_t v248 = *(void *)(v368 + qword_1002E1B98);
      (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v26, v28, v244);
      uint64_t v249 = v361;
      (*(void (**)(char *, char *, uint64_t))(v245 + 16))(v361, v246, v247);
      uint64_t v250 = type metadata accessor for ArcadeWelcomePagePresenter(0LL);
      swift_allocObject(v250, *(unsigned int *)(v250 + 48), *(unsigned __int16 *)(v250 + 52));
      id v369 = v239;
      swift_retain(v239);
      uint64_t v251 = swift_retain(v248);
      uint64_t v252 = ArcadeWelcomePagePresenter.init(objectGraph:contentType:welcomePage:url:)(v251, v26, v239, v249);
      uint64_t v253 = sub_100003B6C( &qword_1002EC088,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeWelcomePagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v252);
      uint64_t v254 = sub_10015F498( v248,  v252,  v253,  (uint64_t)&_swiftEmptyArrayStorage,  0xD000000000000011LL,  0x800000010024E3D0LL);
      swift_release(v252);
      id v255 = objc_allocWithZone((Class)type metadata accessor for ArcadeWelcomeViewController());
      uint64_t v92 = sub_1001B0354(v252, v254);
      __n128 v256 = swift_release(v369);
      (*(void (**)(char *, uint64_t, __n128))(v245 + 8))(v246, v247, v256);
      (*(void (**)(char *, uint64_t, __n128))(v357 + 8))(v28, v244, v257);
      return v92;
    case 0x1Eu:
      uint64_t v259 = *v49;
      uint64_t v258 = v49[1];
      uint64_t v260 = swift_unknownObjectWeakLoadStrong(v368 + qword_1002E1B90);
      if (!v260
        || (v372[0] = v260,
            uint64_t v261 = sub_100006028(0LL, &qword_1002EC0B8, &OBJC_CLASS___UINavigationController_ptr),
            uint64_t v262 = sub_1000031E8(&qword_1002EC040),
            (swift_dynamicCast(&v373, v372, v261, v262, 6LL) & 1) == 0))
      {
        uint64_t v375 = 0LL;
        __int128 v373 = 0u;
        __int128 v374 = 0u;
      }

      type metadata accessor for PlayerProfileViewController(0LL);
      return (char *)PlayerProfileViewController.__allocating_init(playerId:navigationProxy:objectGraph:)( v259,  v258,  &v373,  0LL);
    case 0x1Fu:
      uint64_t v263 = (void *)*v49;
      uint64_t v264 = type metadata accessor for GameLayerAchievementsPresenter(0LL);
      swift_allocObject(v264, *(unsigned int *)(v264 + 48), *(unsigned __int16 *)(v264 + 52));
      id v265 = v263;
      uint64_t v266 = GameLayerAchievementsPresenter.init(gameRecord:)(v263);
      uint64_t v267 = type metadata accessor for AchievementsTheme(0LL);
      v268 = v344;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v267 - 8) + 56LL))(v344, 1LL, 1LL, v267);
      id v269 = objc_allocWithZone((Class)type metadata accessor for GameLayerAchievementsViewController(0LL));
      uint64_t v92 = (char *)GameLayerAchievementsViewController.init(presenter:theme:objectGraph:)(v266, v268, 0LL);

      return v92;
    case 0x20u:
      uint64_t v270 = *v49;
      uint64_t v271 = sub_1000031E8(&qword_1002E8340);
      uint64_t v272 = v362;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v271 + 48), v362, (uint64_t *)&unk_1002E1810);
      uint64_t v273 = *(void *)(v368 + qword_1002E1B98);
      uint64_t v274 = type metadata accessor for PersonalizationDataProvider(0LL);
      BaseObjectGraph.optional<A>(_:)(&v373, v274, v274);
      uint64_t v275 = v373;
      v276 = v360;
      sub_10001027C(v272, (uint64_t)v360, (uint64_t *)&unk_1002E1810);
      uint64_t v277 = type metadata accessor for GenericPagePresenter(0LL);
      __int128 v373 = 0u;
      __int128 v374 = 0u;
      uint64_t v375 = 0LL;
      swift_allocObject(v277, *(unsigned int *)(v277 + 48), *(unsigned __int16 *)(v277 + 52));
      swift_retain(v270);
      swift_retain(v273);
      swift_retain(v275);
      uint64_t v278 = GenericPagePresenter.init(objectGraph:personalizationProvider:page:pageUrl:supportsFastImpressions:adLifecycleMetricReporter:)( v273,  v275,  v270,  v276,  0LL,  &v373);
      uint64_t v279 = v367;
      swift_bridgeObjectRetain(v367);
      swift_retain(v278);
      dispatch thunk of BasePresenter.referrer.setter(v366, v279);
      swift_release(v278);
      uint64_t v280 = sub_100003B6C( &qword_1002EC030,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v278);
      uint64_t v281 = sub_10015F498( v273,  v278,  v280,  (uint64_t)&_swiftEmptyArrayStorage,  0xD000000000000011LL,  0x800000010024E390LL);
      swift_release(v278);
      id v282 = objc_allocWithZone((Class)type metadata accessor for PrivacyDetailViewController(0LL));
      id v283 = [objc_allocWithZone((Class)type metadata accessor for CollectionViewTableFlowLayout()) init];
      uint64_t v284 = type metadata accessor for PrivacyDetailDataSource(0LL);
      swift_allocObject(v284, 104LL, 7LL);
      uint64_t v285 = swift_retain_n(v278, 2LL);
      uint64_t v286 = sub_100201BD8(v285);
      swift_retain(v281);
      uint64_t v287 = sub_100201704(v283, v278, v286, v281);
      uint64_t v288 = sub_100003B6C( &qword_1002EC038,  type metadata accessor for PrivacyDetailViewController,  (uint64_t)&unk_100241C30);
      swift_retain(v278);
      v289 = v287;
      dispatch thunk of BaseGenericPagePresenter.view.setter(v287, v288);
      swift_release(v275);
      swift_release(v270);
      swift_release_n(v278, 2LL);
      swift_release(v281);
      sub_100006060(v272, (uint64_t *)&unk_1002E1810);
      return v289;
    case 0x21u:
      uint64_t v164 = *v49;
      uint64_t v163 = v49[1];
      unint64_t v165 = sub_1000E67C0((uint64_t)&_swiftEmptyArrayStorage);
      uint64_t v166 = type metadata accessor for ArtworkLoader(0LL);
      uint64_t v167 = inject(_:from:)(v166, *(void *)(v368 + qword_1002E1B98));
      uint64_t v168 = sub_10015C7CC(v164, v163);
      if ((v169 & 1) != 0) {
        uint64_t v170 = 0LL;
      }
      else {
        uint64_t v170 = v168;
      }
      id v171 = objc_allocWithZone((Class)type metadata accessor for ScreenshotsGalleryViewController());
      uint64_t v92 = sub_1000B7540(v163, v165, v167, v170);
      swift_release(v164);
      return v92;
    default:
      uint64_t v172 = type metadata accessor for ComingSoonViewController();
      uint64_t v92 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v172)) init];
      sub_10000609C((uint64_t)v49);
      return v92;
  }

char *sub_1001D9878(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v356 = a4;
  uint64_t v368 = a2;
  uint64_t v369 = a3;
  id v371 = a1;
  uint64_t v358 = type metadata accessor for Dependency(0LL);
  uint64_t v361 = *(void *)(v358 - 8);
  __chkstk_darwin(v358);
  uint64_t v357 = (char *)&v340 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v344 = sub_1000031E8(&qword_1002E9088);
  uint64_t v343 = *(void *)(v344 - 8);
  __chkstk_darwin(v344);
  uint64_t v342 = (char *)&v340 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v340 = (uint64_t)&v340 - v7;
  __chkstk_darwin(v8);
  uint64_t v341 = (char *)&v340 - v9;
  uint64_t v10 = sub_1000031E8(&qword_1002E8F00);
  __chkstk_darwin(v10);
  uint64_t v346 = (char *)&v340 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000031E8(&qword_1002DEF80);
  __chkstk_darwin(v12);
  uint64_t v348 = (uint64_t)&v340 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v351 = (uint64_t)&v340 - v15;
  uint64_t v354 = type metadata accessor for ArcadePageUrls(0LL);
  uint64_t v353 = *(void *)(v354 - 8);
  __chkstk_darwin(v354);
  uint64_t v345 = (char *)&v340 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v350 = (char *)&v340 - v18;
  uint64_t v355 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v19 = *(void *)(v355 - 8);
  __chkstk_darwin(v355);
  uint64_t v21 = (char *)&v340 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v352 = (char *)&v340 - v23;
  uint64_t v347 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
  uint64_t v359 = *(void *)(v347 - 8);
  __chkstk_darwin(v347);
  uint64_t v25 = (char *)&v340 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v340 - v27;
  uint64_t v29 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v29);
  uint64_t v349 = (uint64_t)&v340 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v31);
  uint64_t v362 = (char *)&v340 - v32;
  __chkstk_darwin(v33);
  uint64_t v364 = (uint64_t)&v340 - v34;
  uint64_t v35 = type metadata accessor for ProductDiffablePagePresenter.PageWidth(0LL);
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v340 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v39);
  __n128 v41 = (char *)&v340 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v367 = type metadata accessor for URL(0LL);
  uint64_t v366 = *(void *)(v367 - 8);
  __chkstk_darwin(v367);
  v363 = (char *)&v340 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v43);
  uint64_t v365 = (char *)&v340 - v44;
  __chkstk_darwin(v45);
  v360 = (char *)&v340 - v46;
  uint64_t v47 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v47);
  uint64_t v49 = (uint64_t *)((char *)&v340 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_10000611C((uint64_t)v371, (uint64_t)v49);
  switch(swift_getEnumCaseMultiPayload(v49, v47))
  {
    case 0u:
      uint64_t v50 = sub_1000031E8(&qword_1002DEF78);
      __n128 v51 = swift_release(*(uint64_t *)((char *)v49 + *(int *)(v50 + 48)));
      id v371 = *(id *)((char *)v49 + *(int *)(v50 + 64));
      uint64_t v52 = v366;
      char v53 = v360;
      id v54 = v49;
      uint64_t v55 = v367;
      (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v366 + 32))(v360, v54, v367, v51);
      uint64_t v56 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v364 = inject(_:from:)(v56);
      v363 = v57;
      uint64_t v58 = sub_1000031E8(&qword_1002EC060);
      uint64_t v59 = type metadata accessor for ObjectGraph(0LL);
      inject<A, B>(_:from:)(&v375, v58, v56, v58, v59);
      uint64_t v60 = sub_100006028(0LL, (unint64_t *)&qword_1002EC098, &OBJC_CLASS___ASKRestrictions_ptr);
      uint64_t v61 = (void *)inject(_:from:)(v60, v56);
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
      uint64_t v63 = v365;
      v62(v365, v53, v55);
      sub_10001F010((uint64_t)&v375, (uint64_t)v374);
      uint64_t v373 = 0LL;
      memset(v372, 0, sizeof(v372));
      sub_10001027C(v356, (uint64_t)v41, &qword_1002E1FB0);
      uint64_t v64 = v35;
      id v65 = v371;
      (*(void (**)(char *, void, uint64_t))(v36 + 104))( v38,  enum case for ProductDiffablePagePresenter.PageWidth.regular(_:),  v64);
      uint64_t v66 = type metadata accessor for ProductDiffablePagePresenter(0LL);
      swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
      swift_retain(v65);
      uint64_t v67 = v364;
      swift_unknownObjectRetain(v364);
      unint64_t v68 = v61;
      swift_retain(v56);
      uint64_t v338 = v41;
      uint64_t v69 = v67;
      LOWORD(v337) = 0;
      uint64_t v71 = ProductDiffablePagePresenter.init(objectGraph:pageUrl:sidePackedPage:sidePackedPageRenderMetrics:appStateController:purchaseHistory:restrictions:fullProductFetchedAction:pageWidth:isDownloadingOrderingEnabled:downloadingOrderingTimeout:supportsFastImpressions:advertLifecycleMetricsReporter:referrerData:)( v70,  v63,  v65,  0LL,  v67,  v363,  v374,  v68,  0.0,  0LL,  v38,  v337,  v372,  v338);
      uint64_t v72 = v369;
      swift_bridgeObjectRetain(v369);
      swift_retain(v71);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v368, v72);
      __n128 v73 = swift_release(v71);
      uint64_t v74 = type metadata accessor for Feature.tvOS(0LL, v73);
      v374[3] = v74;
      v374[4] = sub_100003B6C( &qword_1002EC0A0,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature.tvOS,  (uint64_t)&protocol conformance descriptor for Feature.tvOS);
      uint64_t v75 = sub_100009D54(v374);
      (*(void (**)(void *, void, uint64_t))(*(void *)(v74 - 8) + 104LL))( v75,  enum case for Feature.tvOS.tv_product_page_2024E(_:),  v74);
      LOBYTE(v7swift_weakDestroy(v0 + 4) = isFeatureEnabled(_:)(v374);
      _s6Arcade17PillOverlayLayoutVwxx_0(v374);
      if ((v74 & 1) != 0)
      {
        uint64_t v76 = sub_1000031E8(&qword_1002DE660);
        uint64_t v77 = swift_allocObject( v76,  ((*(unsigned __int8 *)(v361 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v361 + 80))
              + *(void *)(v361 + 72),
                *(unsigned __int8 *)(v361 + 80) | 7LL);
        *(_OWORD *)(v77 + swift_weakDestroy(v0 + 16) = xmmword_100233580;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong(v370 + qword_1002E1B90);
        if (!Strong)
        {
          __break(1u);
          JUMPOUT(0x1001DBB00LL);
        }

        uint64_t v79 = (void *)Strong;
        swift_retain(v71);
        uint64_t v80 = UIResponder.nearestActionRunner.getter();
        uint64_t v81 = v340;
        uint64_t v362 = v68;
        if (v80)
        {
          uint64_t v82 = v80;
          sub_10015D340(v80, v340);
          swift_release(v82);
        }

        else
        {
          uint64_t v326 = type metadata accessor for BaseObjectGraph(0LL);
          ActionDispatcher.init()(v326);
        }

        uint64_t v327 = sub_100003B6C( &qword_1002EC0A8,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
        uint64_t v328 = v343;
        uint64_t v329 = v341;
        uint64_t v330 = v344;
        (*(void (**)(char *, uint64_t, uint64_t))(v343 + 32))(v341, v81, v344);
        uint64_t v331 = v342;
        (*(void (**)(char *, char *, uint64_t))(v328 + 16))(v342, v329, v330);
        Dependency.init<A>(satisfying:with:)(v330, v331, v330);
        (*(void (**)(char *, uint64_t))(v328 + 8))(v329, v330);

        uint64_t v332 = sub_10015F498(v56, v71, v327, v77, 0x50746375646F7270LL, 0xEB00000000656761LL);
        swift_release(v71);
        swift_bridgeObjectRelease(v77);
        __chkstk_darwin(v333);
        uint64_t v338 = (char *)v71;
        uint64_t v339 = v332;
        id v334 = objc_allocWithZone((Class)sub_1000031E8(&qword_1002EC0B0));
        swift_retain(v332);
        uint64_t v92 = (char *)HostingViewController.init(objectGraph:content:)(v335, sub_1001DF1BC, &v337);
        swift_release(v371);
        swift_unknownObjectRelease(v364);

        swift_release(v332);
        swift_release(v71);
      }

      else
      {
        uint64_t v293 = sub_100003B6C( &qword_1002EC0A8,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
        swift_retain(v71);
        uint64_t v294 = sub_10015F498( v56,  v71,  v293,  (uint64_t)_swiftEmptyArrayStorage,  0x50746375646F7270LL,  0xEB00000000656761LL);
        swift_release(v71);
        id v295 = objc_allocWithZone((Class)type metadata accessor for ProductDiffablePageViewController(0LL));
        uint64_t v92 = sub_100043750(v71, v294);
        swift_release(v65);
        swift_unknownObjectRelease(v69);
      }

      _s6Arcade17PillOverlayLayoutVwxx_0(&v375);
      (*(void (**)(char *, uint64_t, __n128))(v366 + 8))(v360, v367, v336);
      return v92;
    case 3u:
      uint64_t v83 = *(uint64_t *)((char *)v49 + *(int *)(sub_1000031E8(&qword_1002DEF48) + 48));
      uint64_t v84 = v366;
      unint64_t v85 = v365;
      uint64_t v86 = v367;
      (*(void (**)(char *, uint64_t *, uint64_t))(v366 + 32))(v365, v49, v367);
      uint64_t v87 = (uint64_t)v363;
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v363, v85, v86);
      uint64_t v88 = v369;
      uint64_t v89 = *(void *)(v370 + qword_1002E1B98);
      swift_bridgeObjectRetain(v369);
      uint64_t v90 = sub_10015F498(v89, 0LL, 0LL, (uint64_t)_swiftEmptyArrayStorage, 0x5063696D616E7964LL, 0xEB00000000656761LL);
      id v91 = objc_allocWithZone((Class)type metadata accessor for DynamicViewController());
      uint64_t v92 = sub_10010FF18(v87, v83, v368, v88, v90);
      swift_release(v83);
      __n128 v93 = swift_release(v90);
      (*(void (**)(char *, uint64_t, __n128))(v84 + 8))(v85, v86, v93);
      return v92;
    case 4u:
      swift_release(*v49);
      uint64_t v174 = sub_10015F498( *(void *)(v370 + qword_1002E1B98),  0LL,  0LL,  (uint64_t)_swiftEmptyArrayStorage,  0x6150686372616573LL,  0xEA00000000006567LL);
      id v175 = objc_allocWithZone((Class)type metadata accessor for SearchViewController());
      return sub_10014A8DC(v174);
    case 7u:
      uint64_t v176 = *v49;
      uint64_t v177 = sub_1000031E8(&qword_1002E8340);
      uint64_t v178 = v349;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v177 + 48), v349, (uint64_t *)&unk_1002E1810);
      uint64_t v179 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v180 = type metadata accessor for PersonalizationDataProvider(0LL);
      BaseObjectGraph.optional<A>(_:)(&v375, v180, v180);
      uint64_t v181 = v375;
      uint64_t v182 = v364;
      sub_10001027C(v178, v364, (uint64_t *)&unk_1002E1810);
      uint64_t v183 = type metadata accessor for GenericDiffablePagePresenter(0LL);
      swift_allocObject(v183, *(unsigned int *)(v183 + 48), *(unsigned __int16 *)(v183 + 52));
      swift_retain(v176);
      swift_retain(v179);
      swift_retain(v181);
      uint64_t v184 = GenericDiffablePagePresenter.init(objectGraph:personalizationProvider:sidePackedPage:sidePackedPageRenderMetrics:pageUrl:)( v179,  v181,  v176,  0LL,  v182);
      uint64_t v185 = v369;
      swift_bridgeObjectRetain(v369);
      swift_retain(v184);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v368, v185);
      swift_release(v184);
      uint64_t v186 = sub_100003B6C( &qword_1002E2548,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v184);
      uint64_t v187 = sub_10015F498( v179,  v184,  v186,  (uint64_t)_swiftEmptyArrayStorage,  0x50636972656E6567LL,  0xEB00000000656761LL);
      swift_release(v184);
      id v188 = objc_allocWithZone((Class)type metadata accessor for GenericDiffablePageViewController(0LL));
      swift_retain(v184);
      swift_retain(v187);
      uint64_t v92 = sub_1001EDC30(v184, v187);
      dispatch thunk of GenericDiffablePagePresenter.pageTitle.getter(v189);
      if (v190)
      {
        uint64_t v192 = v190;
        NSString v193 = String._bridgeToObjectiveC()();
        *(void *)&double v191 = swift_bridgeObjectRelease(v192).n128_u64[0];
      }

      else
      {
        NSString v193 = 0LL;
      }

      objc_msgSend(v92, "setTitle:", v193, v191);
      swift_release(v181);
      swift_release(v176);

      swift_release(v184);
      swift_release(v187);
      sub_100006060(v178, (uint64_t *)&unk_1002E1810);
      return v92;
    case 8u:
      uint64_t v94 = *v49;
      uint64_t v95 = sub_1000031E8(&qword_1002DEF58);
      uint64_t v96 = v364;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v95 + 48), v364, (uint64_t *)&unk_1002E1810);
      uint64_t v97 = *(void *)(v370 + qword_1002E1B98);
      unint64_t v98 = v362;
      sub_10001027C(v96, (uint64_t)v362, (uint64_t *)&unk_1002E1810);
      uint64_t v99 = type metadata accessor for TopChartsDiffablePagePresenter(0LL);
      swift_allocObject(v99, *(unsigned int *)(v99 + 48), *(unsigned __int16 *)(v99 + 52));
      swift_retain(v94);
      swift_retain(v97);
      uint64_t v101 = TopChartsDiffablePagePresenter.init(objectGraph:pageUrl:sidePackedPage:)(v100, v98, v94);
      uint64_t v102 = sub_100003B6C( &qword_1002EC058,  (uint64_t (*)(uint64_t))&type metadata accessor for TopChartsDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v101);
      uint64_t v103 = sub_10015F498( v97,  v101,  v102,  (uint64_t)_swiftEmptyArrayStorage,  0x7472616843706F74LL,  0xED00006567615073LL);
      swift_release(v101);
      id v104 = objc_allocWithZone((Class)type metadata accessor for TopChartsDiffablePageViewController());
      uint64_t v92 = (char *)sub_1001EE2C0(v101, v103);
      swift_release(v94);
      uint64_t v105 = v96;
      goto LABEL_22;
    case 0xBu:
      return (char *)*v49;
    case 0xDu:
      uint64_t v194 = *v49;
      uint64_t v195 = sub_1000031E8(&qword_1002DEF68);
      uint64_t v196 = v364;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v195 + 48), v364, (uint64_t *)&unk_1002E1810);
      uint64_t v197 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v198 = v362;
      sub_10001027C(v196, (uint64_t)v362, (uint64_t *)&unk_1002E1810);
      uint64_t v199 = type metadata accessor for ArticleDiffablePagePresenter(0LL);
      swift_allocObject(v199, *(unsigned int *)(v199 + 48), *(unsigned __int16 *)(v199 + 52));
      swift_retain(v194);
      swift_retain(v197);
      uint64_t v201 = ArticleDiffablePagePresenter.init(objectGraph:impressionsTracker:pageUrl:sidePackedPage:)( v200,  0LL,  0LL,  v198,  v194);
      uint64_t v202 = v369;
      swift_bridgeObjectRetain(v369);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v368, v202);
      uint64_t v203 = sub_100003B6C( &qword_1002EC078,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v201);
      uint64_t v204 = sub_10015F498( v197,  v201,  v203,  (uint64_t)_swiftEmptyArrayStorage,  0x50656C6369747261LL,  0xEB00000000656761LL);
      swift_release(v201);
      id v205 = objc_allocWithZone((Class)type metadata accessor for ArticleDiffablePageViewController(0LL));
      uint64_t v92 = sub_1001EDC54(v201, v204);
      swift_release(v194);
      uint64_t v105 = v196;
LABEL_22:
      sub_100006060(v105, (uint64_t *)&unk_1002E1810);
      return v92;
    case 0xEu:
      uint64_t v206 = (void *)*v49;
      if (v206)
      {
        uint64_t v207 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
        uint64_t v208 = swift_allocObject(v207, 40LL, 7LL);
        *(_OWORD *)(v208 + swift_weakDestroy(v0 + 16) = xmmword_100233570;
        *(void *)(v208 + 32) = v206;
        *(void *)&__int128 v375 = v208;
        specialized Array._endMutation()(v208);
        uint64_t v209 = (void *)v375;
      }

      else
      {
        uint64_t v209 = _swiftEmptyArrayStorage;
      }

      uint64_t v296 = v370;
      uint64_t v297 = v361;
      uint64_t v298 = sub_100006028(0LL, (unint64_t *)&qword_1002E5E50, &OBJC_CLASS___ACAccountStore_ptr);
      uint64_t v299 = *(void *)(v296 + qword_1002E1B98);
      uint64_t v300 = type metadata accessor for ObjectGraph(0LL);
      id v301 = v206;
      inject<A, B>(_:from:)(&v375, v298, v299, v298, v300);
      id v371 = (id)v375;
      uint64_t v302 = type metadata accessor for ASKBagContract(0LL);
      uint64_t v303 = inject(_:from:)(v302, v299);
      uint64_t v304 = sub_1000031E8(&qword_1002EC060);
      inject<A, B>(_:from:)(&v375, v304, v299, v304, v300);
      updateCGFloat d = type metadata accessor for UpdateStore(0LL);
      inject<A, B>(_:from:)(v374, updated, v299, updated, v300);
      uint64_t v306 = (void *)v374[0];
      uint64_t v307 = sub_1000031E8(&qword_1002EC068);
      v374[0] = v209;
      uint64_t v308 = v357;
      Dependency.init<A>(satisfying:with:)(v307, v374, v307);
      uint64_t v309 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v308);
      uint64_t v310 = *(void (**)(char *, uint64_t))(v297 + 8);
      uint64_t v311 = v358;
      v310(v308, v358);
      type metadata accessor for ASDPurchaseHistoryContext(0LL);
      v374[0] = 1LL;
      Dependency.init<A>(satisfying:with:)(v312, v374, v312);
      uint64_t v313 = (void *)dispatch thunk of BaseObjectGraph.adding(dependency:)(v308);
      __n128 v314 = swift_release(v309);
      ((void (*)(char *, uint64_t, __n128))v310)(v308, v311, v314);
      uint64_t v315 = sub_1002183D0(v313);
      uint64_t v317 = v316;
      sub_10001F010((uint64_t)&v375, (uint64_t)v374);
      uint64_t v318 = type metadata accessor for TVPurchasesPagePresenter(0LL);
      swift_allocObject(v318, *(unsigned int *)(v318 + 48), *(unsigned __int16 *)(v318 + 52));
      id v319 = v301;
      swift_retain(v299);
      id v320 = v371;
      swift_unknownObjectRetain(v315);
      id v321 = v306;
      swift_retain(v303);
      uint64_t v322 = TVPurchasesPagePresenter.init(objectGraph:accountStore:purchaseHistory:appStateController:updateStore:bag:familyMember:)( v299,  v320,  v374,  v315,  v317,  v321,  v303,  v206);
      uint64_t v323 = sub_100003B6C( &qword_1002EC070,  (uint64_t (*)(uint64_t))&type metadata accessor for TVPurchasesPagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v322);
      uint64_t v324 = sub_10015F498( v299,  v322,  v323,  (uint64_t)_swiftEmptyArrayStorage,  0x6573616863727570LL,  0xED00006567615073LL);
      swift_release(v322);
      id v325 = objc_allocWithZone((Class)type metadata accessor for PurchasesViewController());
      uint64_t v92 = sub_10000AC4C(v322, v324);

      swift_unknownObjectRelease(v315);
      swift_release(v303);

      swift_release(v313);
      _s6Arcade17PillOverlayLayoutVwxx_0(&v375);
      return v92;
    case 0x14u:
      uint64_t v210 = (uint64_t)v49 + *(int *)(sub_1000031E8(&qword_1002DEF98) + 48);
      uint64_t v211 = v366;
      uint64_t v212 = v365;
      uint64_t v213 = v367;
      (*(void (**)(char *, uint64_t *, uint64_t))(v366 + 32))(v365, v49, v367);
      uint64_t v214 = v351;
      sub_10003FBFC(v210, v351, &qword_1002DEF80);
      uint64_t v215 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v216 = type metadata accessor for PersonalizationDataProvider(0LL);
      BaseObjectGraph.optional<A>(_:)(&v375, v216, v216);
      uint64_t v217 = v375;
      uint64_t v218 = v363;
      (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v363, v212, v213);
      uint64_t v219 = v348;
      sub_10001027C(v214, v348, &qword_1002DEF80);
      uint64_t v220 = type metadata accessor for MSODiffablePagePresenter(0LL);
      swift_allocObject(v220, *(unsigned int *)(v220 + 48), *(unsigned __int16 *)(v220 + 52));
      swift_retain(v217);
      swift_retain(v215);
      uint64_t v222 = MSODiffablePagePresenter.init(objectGraph:personalizationProvider:pageUrl:context:)(v221, v217, v218, v219);
      uint64_t v223 = v369;
      swift_bridgeObjectRetain(v369);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v368, v223);
      uint64_t v224 = sub_100003B6C( &qword_1002EC048,  (uint64_t (*)(uint64_t))&type metadata accessor for MSODiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v222);
      uint64_t v225 = sub_10015F498(v215, v222, v224, (uint64_t)_swiftEmptyArrayStorage, 0x656761506F736DLL, 0xE700000000000000LL);
      swift_release(v222);
      id v226 = objc_allocWithZone((Class)type metadata accessor for MSODiffablePageViewController(0LL));
      uint64_t v92 = sub_1001EDC9C(v222, v225);
      swift_release(v217);
      sub_100006060(v214, &qword_1002DEF80);
      (*(void (**)(char *, uint64_t, __n128))(v211 + 8))(v212, v213, v227);
      return v92;
    case 0x16u:
      char v228 = *(_BYTE *)v49;
      uint64_t v229 = *(void *)(v370 + qword_1002E1B98);
      id v230 = objc_allocWithZone((Class)type metadata accessor for OnboardingViewController());
      swift_retain(v229);
      uint64_t v92 = sub_1000E59D8(v228, v229);
      uint64_t v231 = swift_allocObject(&unk_10028E050, 24LL, 7LL);
      swift_weakInit(v231 + 16, v229);
      uint64_t v232 = swift_allocObject(&unk_10028E078, 25LL, 7LL);
      *(void *)(v232 + swift_weakDestroy(v0 + 16) = v231;
      *(_BYTE *)(v232 + 2swift_weakDestroy(v0 + 4) = v228;
      uint64_t v233 = (double (**)(void *))&v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_primaryButtonCallback];
      uint64_t v234 = *(void *)&v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_primaryButtonCallback];
      uint64_t v235 = *(void *)&v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_primaryButtonCallback + 8];
      *uint64_t v233 = sub_1001DF184;
      v233[1] = (double (*)(void *))v232;
      swift_retain(v231);
      swift_retain(v232);
      sub_10000D3D8(v234, v235);
      uint64_t v236 = *(void *)&v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_onboardingView];
      uint64_t v237 = swift_allocObject(&unk_10028E0A0, 24LL, 7LL);
      swift_unknownObjectWeakInit(v237 + 16, v92);
      uint64_t v239 = *v238;
      uint64_t v240 = v238[1];
      *uint64_t v238 = (uint64_t)sub_1001DF1B4;
      v238[1] = v237;
      sub_10000D3D8(v239, v240);
      swift_release(v231);
      swift_release(v232);
      if (qword_1002DC4E0 != -1) {
        swift_once(&qword_1002DC4E0, sub_100065B64);
      }
      swift_unknownObjectWeakAssign(&unk_1002EEA30, v92);
      return v92;
    case 0x19u:
      uint64_t v106 = *v49;
      uint64_t v107 = sub_1000031E8(&qword_1002DDA20);
      uint64_t v108 = v353;
      uint64_t v109 = v350;
      uint64_t v110 = v354;
      (*(void (**)(char *, char *, uint64_t))(v353 + 32))(v350, (char *)v49 + *(int *)(v107 + 48), v354);
      uint64_t v111 = type metadata accessor for ArcadeSubscriptionManager(0LL);
      uint64_t v112 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v113 = (void *)inject(_:from:)(v111, v112);
      uint64_t v114 = type metadata accessor for ASKBagContract(0LL);
      uint64_t v115 = inject(_:from:)(v114, v112);
      swift_retain(v112);
      id v116 = v113;
      double v117 = ASKBagContract.fetchTimeout.getter();
      uint64_t v118 = v345;
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v345, v109, v110);
      uint64_t v119 = type metadata accessor for ArcadeDiffablePagePresenter(0LL);
      swift_allocObject(v119, *(unsigned int *)(v119 + 48), *(unsigned __int16 *)(v119 + 52));
      swift_retain(v106);
      uint64_t v120 = ArcadeDiffablePagePresenter.init(objectGraph:arcadeSubscriptionManager:subscriptionStateFetchTimeout:sidePackedPage:pageUrls:)( v112,  v116,  v106,  v118,  v117);
      uint64_t v121 = v369;
      swift_bridgeObjectRetain(v369);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v368, v121);
      uint64_t v122 = sub_100003B6C( &qword_1002EC050,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v120);
      uint64_t v123 = sub_10015F498( v112,  v120,  v122,  (uint64_t)_swiftEmptyArrayStorage,  0x6150656461637261LL,  0xEA00000000006567LL);
      swift_release(v120);
      id v124 = objc_allocWithZone((Class)type metadata accessor for ArcadeDiffablePageViewController(0LL));
      uint64_t v92 = sub_1000BFE80(v120, v123);

      swift_release(v106);
      __n128 v125 = swift_release(v115);
      (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v109, v110, v125);
      return v92;
    case 0x1Au:
      uint64_t v126 = *(uint64_t *)((char *)v49 + *(int *)(sub_1000031E8(&qword_1002DEF50) + 48));
      uint64_t v127 = v364;
      sub_10003FBFC((uint64_t)v49, v364, (uint64_t *)&unk_1002E1810);
      uint64_t v128 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v129 = type metadata accessor for ArcadeSubscriptionManager(0LL);
      swift_retain(v128);
      uint64_t v130 = inject(_:from:)(v129, v128);
      uint64_t v131 = v362;
      sub_10001027C(v127, (uint64_t)v362, (uint64_t *)&unk_1002E1810);
      uint64_t v132 = type metadata accessor for ArcadeSubscribePresenter(0LL);
      swift_allocObject(v132, *(unsigned int *)(v132 + 48), *(unsigned __int16 *)(v132 + 52));
      swift_retain(v126);
      uint64_t v133 = ArcadeSubscribePresenter.init(objectGraph:subscriptionManager:url:sidepack:)(v128, v130, v131, v126);
      uint64_t v134 = v369;
      swift_bridgeObjectRetain(v369);
      dispatch thunk of BasePresenter.referrer.setter(v368, v134);
      uint64_t v135 = sub_100003B6C( &qword_1002EC090,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSubscribePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v133);
      uint64_t v136 = sub_10015F498( v128,  v133,  v135,  (uint64_t)_swiftEmptyArrayStorage,  0xD000000000000013LL,  0x800000010024E3F0LL);
      swift_release(v133);
      id v137 = objc_allocWithZone((Class)type metadata accessor for ArcadeSubscribeViewController());
      uint64_t v92 = sub_10007F018(v133, v136);
      swift_release(v126);
      sub_100006060(v127, (uint64_t *)&unk_1002E1810);
      return v92;
    case 0x1Bu:
      uint64_t v138 = *v49;
      uint64_t v139 = v369;
      uint64_t v140 = *(void *)(v370 + qword_1002E1B98);
      swift_bridgeObjectRetain(v369);
      uint64_t v141 = sub_10015F498(v140, 0LL, 0LL, (uint64_t)_swiftEmptyArrayStorage, 0x49676E696B72616DLL, 0xEF656761506D6574LL);
      id v142 = objc_allocWithZone((Class)type metadata accessor for MarketingItemViewController());
      return sub_1001259E8(v138, v368, v139, v141);
    case 0x1Cu:
      swift_release(*v49);
      uint64_t v143 = sub_1000031E8(&qword_1002DEF90);
      uint64_t v144 = v366;
      __n128 v145 = v365;
      (*(void (**)(char *, char *, uint64_t))(v366 + 32))(v365, (char *)v49 + *(int *)(v143 + 48), v367);
      uint64_t v146 = type metadata accessor for PageFacetsPresenter(0LL);
      swift_allocObject(v146, *(unsigned int *)(v146 + 48), *(unsigned __int16 *)(v146 + 52));
      uint64_t v148 = PageFacetsPresenter.init()(v147);
      uint64_t v149 = *(void *)(v370 + qword_1002E1B98);
      inject(_:from:)(v149);
      uint64_t v150 = v352;
      static PageFacetsFieldsProvider.metricsPipelineWithPageFacetsProvider(using:currentPipeline:)( v148,  &protocol witness table for PageFacetsPresenter,  v21);
      id v371 = *(id *)(v19 + 8);
      uint64_t v151 = v355;
      ((void (*)(char *, uint64_t))v371)(v21, v355);
      uint64_t v152 = v363;
      uint64_t v153 = v145;
      uint64_t v154 = v367;
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v363, v153, v367);
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v150, v151);
      uint64_t v155 = type metadata accessor for ArcadeSeeAllGamesDiffablePagePresenter(0LL);
      swift_allocObject(v155, *(unsigned int *)(v155 + 48), *(unsigned __int16 *)(v155 + 52));
      swift_retain(v149);
      swift_retain(v148);
      uint64_t v156 = ArcadeSeeAllGamesDiffablePagePresenter.init(objectGraph:pageUrl:facetsPresenter:metricsPipeline:)( v149,  v152,  v148,  v21);
      uint64_t v157 = sub_100003B6C( &qword_1002EC080,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSeeAllGamesDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      uint64_t v158 = sub_1000031E8(&qword_1002DE660);
      uint64_t v159 = swift_allocObject( v158,  ((*(unsigned __int8 *)(v361 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v361 + 80))
             + *(void *)(v361 + 72),
               *(unsigned __int8 *)(v361 + 80) | 7LL);
      *(_OWORD *)(v159 + swift_weakDestroy(v0 + 16) = xmmword_100233580;
      swift_retain(v156);
      static Dependency.satisfying<A>(_:with:)(v151, v150, v151);
      uint64_t v160 = sub_10015F498(v149, v156, v157, v159, 0xD000000000000015LL, 0x800000010024E3B0LL);
      swift_release(v156);
      swift_bridgeObjectRelease(v159);
      id v161 = objc_allocWithZone((Class)type metadata accessor for ArcadeSeeAllGamesDiffablePageViewController(0LL));
      uint64_t v92 = sub_1001230DC(v156, v160);
      __n128 v162 = swift_release(v148);
      ((void (*)(char *, uint64_t, __n128))v371)(v150, v151, v162);
      (*(void (**)(char *, uint64_t, __n128))(v366 + 8))(v365, v154, v163);
      return v92;
    case 0x1Du:
      uint64_t v241 = (void *)*v49;
      uint64_t v242 = sub_1000031E8(&qword_1002DEF88);
      uint64_t v243 = (char *)v49 + *(int *)(v242 + 48);
      uint64_t v244 = (char *)v49 + *(int *)(v242 + 64);
      uint64_t v245 = v359;
      uint64_t v246 = v347;
      (*(void (**)(char *, char *, uint64_t))(v359 + 32))(v28, v243, v347);
      uint64_t v247 = v366;
      uint64_t v248 = v365;
      uint64_t v249 = v367;
      (*(void (**)(char *, char *, uint64_t))(v366 + 32))(v365, v244, v367);
      uint64_t v250 = *(void *)(v370 + qword_1002E1B98);
      (*(void (**)(char *, char *, uint64_t))(v245 + 16))(v25, v28, v246);
      uint64_t v251 = v363;
      (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v363, v248, v249);
      uint64_t v252 = type metadata accessor for ArcadeWelcomePagePresenter(0LL);
      swift_allocObject(v252, *(unsigned int *)(v252 + 48), *(unsigned __int16 *)(v252 + 52));
      id v371 = v241;
      swift_retain(v241);
      swift_retain(v250);
      uint64_t v254 = ArcadeWelcomePagePresenter.init(objectGraph:contentType:welcomePage:url:)(v253, v25, v241, v251);
      uint64_t v255 = sub_100003B6C( &qword_1002EC088,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeWelcomePagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v254);
      uint64_t v256 = sub_10015F498( v250,  v254,  v255,  (uint64_t)_swiftEmptyArrayStorage,  0xD000000000000011LL,  0x800000010024E3D0LL);
      swift_release(v254);
      id v257 = objc_allocWithZone((Class)type metadata accessor for ArcadeWelcomeViewController());
      uint64_t v92 = sub_1001B0354(v254, v256);
      __n128 v258 = swift_release(v371);
      (*(void (**)(char *, uint64_t, __n128))(v247 + 8))(v248, v249, v258);
      (*(void (**)(char *, uint64_t, __n128))(v359 + 8))(v28, v246, v259);
      return v92;
    case 0x1Eu:
      uint64_t v261 = *v49;
      uint64_t v260 = v49[1];
      uint64_t v262 = swift_unknownObjectWeakLoadStrong(v370 + qword_1002E1B90);
      if (!v262
        || (v374[0] = v262,
            uint64_t v263 = sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr),
            uint64_t v264 = sub_1000031E8(&qword_1002EC040),
            (swift_dynamicCast(&v375, v374, v263, v264, 6LL) & 1) == 0))
      {
        uint64_t v377 = 0LL;
        __int128 v375 = 0u;
        __int128 v376 = 0u;
      }

      type metadata accessor for PlayerProfileViewController(0LL);
      return (char *)PlayerProfileViewController.__allocating_init(playerId:navigationProxy:objectGraph:)( v261,  v260,  &v375,  0LL);
    case 0x1Fu:
      id v265 = (void *)*v49;
      uint64_t v266 = type metadata accessor for GameLayerAchievementsPresenter(0LL);
      swift_allocObject(v266, *(unsigned int *)(v266 + 48), *(unsigned __int16 *)(v266 + 52));
      id v267 = v265;
      uint64_t v268 = GameLayerAchievementsPresenter.init(gameRecord:)(v265);
      uint64_t v269 = type metadata accessor for AchievementsTheme(0LL);
      uint64_t v270 = v346;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v269 - 8) + 56LL))(v346, 1LL, 1LL, v269);
      id v271 = objc_allocWithZone((Class)type metadata accessor for GameLayerAchievementsViewController(0LL));
      uint64_t v92 = (char *)GameLayerAchievementsViewController.init(presenter:theme:objectGraph:)(v268, v270, 0LL);

      return v92;
    case 0x20u:
      uint64_t v272 = *v49;
      uint64_t v273 = sub_1000031E8(&qword_1002E8340);
      uint64_t v274 = v364;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v273 + 48), v364, (uint64_t *)&unk_1002E1810);
      uint64_t v275 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v276 = type metadata accessor for PersonalizationDataProvider(0LL);
      BaseObjectGraph.optional<A>(_:)(&v375, v276, v276);
      uint64_t v277 = v375;
      uint64_t v278 = v362;
      sub_10001027C(v274, (uint64_t)v362, (uint64_t *)&unk_1002E1810);
      uint64_t v279 = type metadata accessor for GenericPagePresenter(0LL);
      __int128 v375 = 0u;
      __int128 v376 = 0u;
      uint64_t v377 = 0LL;
      swift_allocObject(v279, *(unsigned int *)(v279 + 48), *(unsigned __int16 *)(v279 + 52));
      swift_retain(v272);
      swift_retain(v275);
      swift_retain(v277);
      uint64_t v280 = GenericPagePresenter.init(objectGraph:personalizationProvider:page:pageUrl:supportsFastImpressions:adLifecycleMetricReporter:)( v275,  v277,  v272,  v278,  0LL,  &v375);
      uint64_t v281 = v369;
      swift_bridgeObjectRetain(v369);
      swift_retain(v280);
      dispatch thunk of BasePresenter.referrer.setter(v368, v281);
      swift_release(v280);
      uint64_t v282 = sub_100003B6C( &qword_1002EC030,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v280);
      uint64_t v283 = sub_10015F498( v275,  v280,  v282,  (uint64_t)_swiftEmptyArrayStorage,  0xD000000000000011LL,  0x800000010024E390LL);
      swift_release(v280);
      id v284 = objc_allocWithZone((Class)type metadata accessor for PrivacyDetailViewController(0LL));
      id v285 = [objc_allocWithZone((Class)type metadata accessor for CollectionViewTableFlowLayout()) init];
      uint64_t v286 = type metadata accessor for PrivacyDetailDataSource(0LL);
      swift_allocObject(v286, 104LL, 7LL);
      uint64_t v287 = swift_retain_n(v280, 2LL);
      uint64_t v288 = sub_100201BD8(v287);
      swift_retain(v283);
      v289 = sub_100201704(v285, v280, v288, v283);
      uint64_t v290 = sub_100003B6C( &qword_1002EC038,  type metadata accessor for PrivacyDetailViewController,  (uint64_t)&unk_100241C30);
      swift_retain(v280);
      uint64_t v291 = v289;
      dispatch thunk of BaseGenericPagePresenter.view.setter(v289, v290);
      swift_release(v277);
      swift_release(v272);
      swift_release_n(v280, 2LL);
      swift_release(v283);
      sub_100006060(v274, (uint64_t *)&unk_1002E1810);
      return v291;
    case 0x21u:
      uint64_t v165 = *v49;
      uint64_t v164 = v49[1];
      unint64_t v166 = sub_1000E67C0((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v167 = type metadata accessor for ArtworkLoader(0LL);
      uint64_t v168 = inject(_:from:)(v167, *(void *)(v370 + qword_1002E1B98));
      uint64_t v169 = sub_10015C7CC(v165, v164);
      if ((v170 & 1) != 0) {
        uint64_t v171 = 0LL;
      }
      else {
        uint64_t v171 = v169;
      }
      id v172 = objc_allocWithZone((Class)type metadata accessor for ScreenshotsGalleryViewController());
      uint64_t v92 = sub_1000B7540(v164, v166, v168, v171);
      swift_release(v165);
      return v92;
    default:
      uint64_t v173 = type metadata accessor for ComingSoonViewController();
      uint64_t v92 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v173)) init];
      sub_10000609C((uint64_t)v49);
      return v92;
  }

char *sub_1001DBB88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v356 = a4;
  uint64_t v368 = a2;
  uint64_t v369 = a3;
  id v371 = a1;
  uint64_t v358 = type metadata accessor for Dependency(0LL);
  uint64_t v361 = *(void *)(v358 - 8);
  __chkstk_darwin(v358);
  uint64_t v357 = (char *)&v340 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v344 = sub_1000031E8(&qword_1002E9088);
  uint64_t v343 = *(void *)(v344 - 8);
  __chkstk_darwin(v344);
  uint64_t v342 = (char *)&v340 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v340 = (uint64_t)&v340 - v7;
  __chkstk_darwin(v8);
  uint64_t v341 = (char *)&v340 - v9;
  uint64_t v10 = sub_1000031E8(&qword_1002E8F00);
  __chkstk_darwin(v10);
  uint64_t v346 = (char *)&v340 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000031E8(&qword_1002DEF80);
  __chkstk_darwin(v12);
  uint64_t v348 = (uint64_t)&v340 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v351 = (uint64_t)&v340 - v15;
  uint64_t v354 = type metadata accessor for ArcadePageUrls(0LL);
  uint64_t v353 = *(void *)(v354 - 8);
  __chkstk_darwin(v354);
  uint64_t v345 = (char *)&v340 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v350 = (char *)&v340 - v18;
  uint64_t v355 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v19 = *(void *)(v355 - 8);
  __chkstk_darwin(v355);
  uint64_t v21 = (char *)&v340 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v352 = (char *)&v340 - v23;
  uint64_t v347 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
  uint64_t v359 = *(void *)(v347 - 8);
  __chkstk_darwin(v347);
  uint64_t v25 = (char *)&v340 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v340 - v27;
  uint64_t v29 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v29);
  uint64_t v349 = (uint64_t)&v340 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v31);
  uint64_t v362 = (char *)&v340 - v32;
  __chkstk_darwin(v33);
  uint64_t v364 = (uint64_t)&v340 - v34;
  uint64_t v35 = type metadata accessor for ProductDiffablePagePresenter.PageWidth(0LL);
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v340 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v39);
  __n128 v41 = (char *)&v340 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v367 = type metadata accessor for URL(0LL);
  uint64_t v366 = *(void *)(v367 - 8);
  __chkstk_darwin(v367);
  v363 = (char *)&v340 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v43);
  uint64_t v365 = (char *)&v340 - v44;
  __chkstk_darwin(v45);
  v360 = (char *)&v340 - v46;
  uint64_t v47 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v47);
  uint64_t v49 = (uint64_t *)((char *)&v340 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_10000611C((uint64_t)v371, (uint64_t)v49);
  switch(swift_getEnumCaseMultiPayload(v49, v47))
  {
    case 0u:
      uint64_t v50 = sub_1000031E8(&qword_1002DEF78);
      __n128 v51 = swift_release(*(uint64_t *)((char *)v49 + *(int *)(v50 + 48)));
      id v371 = *(id *)((char *)v49 + *(int *)(v50 + 64));
      uint64_t v52 = v366;
      char v53 = v360;
      id v54 = v49;
      uint64_t v55 = v367;
      (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v366 + 32))(v360, v54, v367, v51);
      uint64_t v56 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v364 = inject(_:from:)(v56);
      v363 = v57;
      uint64_t v58 = sub_1000031E8(&qword_1002EC060);
      uint64_t v59 = type metadata accessor for ObjectGraph(0LL);
      inject<A, B>(_:from:)(&v375, v58, v56, v58, v59);
      uint64_t v60 = sub_100006028(0LL, (unint64_t *)&qword_1002EC098, &OBJC_CLASS___ASKRestrictions_ptr);
      uint64_t v61 = (void *)inject(_:from:)(v60, v56);
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
      uint64_t v63 = v365;
      v62(v365, v53, v55);
      sub_10001F010((uint64_t)&v375, (uint64_t)v374);
      uint64_t v373 = 0LL;
      memset(v372, 0, sizeof(v372));
      sub_10001027C(v356, (uint64_t)v41, &qword_1002E1FB0);
      uint64_t v64 = v35;
      id v65 = v371;
      (*(void (**)(char *, void, uint64_t))(v36 + 104))( v38,  enum case for ProductDiffablePagePresenter.PageWidth.regular(_:),  v64);
      uint64_t v66 = type metadata accessor for ProductDiffablePagePresenter(0LL);
      swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
      swift_retain(v65);
      uint64_t v67 = v364;
      swift_unknownObjectRetain(v364);
      unint64_t v68 = v61;
      swift_retain(v56);
      uint64_t v338 = v41;
      uint64_t v69 = v67;
      LOWORD(v337) = 0;
      uint64_t v71 = ProductDiffablePagePresenter.init(objectGraph:pageUrl:sidePackedPage:sidePackedPageRenderMetrics:appStateController:purchaseHistory:restrictions:fullProductFetchedAction:pageWidth:isDownloadingOrderingEnabled:downloadingOrderingTimeout:supportsFastImpressions:advertLifecycleMetricsReporter:referrerData:)( v70,  v63,  v65,  0LL,  v67,  v363,  v374,  v68,  0.0,  0LL,  v38,  v337,  v372,  v338);
      uint64_t v72 = v369;
      swift_bridgeObjectRetain(v369);
      swift_retain(v71);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v368, v72);
      __n128 v73 = swift_release(v71);
      uint64_t v74 = type metadata accessor for Feature.tvOS(0LL, v73);
      v374[3] = v74;
      v374[4] = sub_100003B6C( &qword_1002EC0A0,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature.tvOS,  (uint64_t)&protocol conformance descriptor for Feature.tvOS);
      uint64_t v75 = sub_100009D54(v374);
      (*(void (**)(void *, void, uint64_t))(*(void *)(v74 - 8) + 104LL))( v75,  enum case for Feature.tvOS.tv_product_page_2024E(_:),  v74);
      LOBYTE(v7swift_weakDestroy(v0 + 4) = isFeatureEnabled(_:)(v374);
      _s6Arcade17PillOverlayLayoutVwxx_0(v374);
      if ((v74 & 1) != 0)
      {
        uint64_t v76 = sub_1000031E8(&qword_1002DE660);
        uint64_t v77 = swift_allocObject( v76,  ((*(unsigned __int8 *)(v361 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v361 + 80))
              + *(void *)(v361 + 72),
                *(unsigned __int8 *)(v361 + 80) | 7LL);
        *(_OWORD *)(v77 + swift_weakDestroy(v0 + 16) = xmmword_100233580;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong(v370 + qword_1002E1B90);
        if (!Strong)
        {
          __break(1u);
          JUMPOUT(0x1001DDE10LL);
        }

        uint64_t v79 = (void *)Strong;
        swift_retain(v71);
        uint64_t v80 = UIResponder.nearestActionRunner.getter();
        uint64_t v81 = v340;
        uint64_t v362 = v68;
        if (v80)
        {
          uint64_t v82 = v80;
          sub_10015D340(v80, v340);
          swift_release(v82);
        }

        else
        {
          uint64_t v326 = type metadata accessor for BaseObjectGraph(0LL);
          ActionDispatcher.init()(v326);
        }

        uint64_t v327 = sub_100003B6C( &qword_1002EC0A8,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
        uint64_t v328 = v343;
        uint64_t v329 = v341;
        uint64_t v330 = v344;
        (*(void (**)(char *, uint64_t, uint64_t))(v343 + 32))(v341, v81, v344);
        uint64_t v331 = v342;
        (*(void (**)(char *, char *, uint64_t))(v328 + 16))(v342, v329, v330);
        Dependency.init<A>(satisfying:with:)(v330, v331, v330);
        (*(void (**)(char *, uint64_t))(v328 + 8))(v329, v330);

        uint64_t v332 = sub_10015F498(v56, v71, v327, v77, 0x50746375646F7270LL, 0xEB00000000656761LL);
        swift_release(v71);
        swift_bridgeObjectRelease(v77);
        __chkstk_darwin(v333);
        uint64_t v338 = (char *)v71;
        uint64_t v339 = v332;
        id v334 = objc_allocWithZone((Class)sub_1000031E8(&qword_1002EC0B0));
        swift_retain(v332);
        uint64_t v92 = (char *)HostingViewController.init(objectGraph:content:)(v335, sub_1001DF208, &v337);
        swift_release(v371);
        swift_unknownObjectRelease(v364);

        swift_release(v332);
        swift_release(v71);
      }

      else
      {
        uint64_t v293 = sub_100003B6C( &qword_1002EC0A8,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
        swift_retain(v71);
        uint64_t v294 = sub_10015F498( v56,  v71,  v293,  (uint64_t)_swiftEmptyArrayStorage,  0x50746375646F7270LL,  0xEB00000000656761LL);
        swift_release(v71);
        id v295 = objc_allocWithZone((Class)type metadata accessor for ProductDiffablePageViewController(0LL));
        uint64_t v92 = sub_100043750(v71, v294);
        swift_release(v65);
        swift_unknownObjectRelease(v69);
      }

      _s6Arcade17PillOverlayLayoutVwxx_0(&v375);
      (*(void (**)(char *, uint64_t, __n128))(v366 + 8))(v360, v367, v336);
      return v92;
    case 3u:
      uint64_t v83 = *(uint64_t *)((char *)v49 + *(int *)(sub_1000031E8(&qword_1002DEF48) + 48));
      uint64_t v84 = v366;
      unint64_t v85 = v365;
      uint64_t v86 = v367;
      (*(void (**)(char *, uint64_t *, uint64_t))(v366 + 32))(v365, v49, v367);
      uint64_t v87 = (uint64_t)v363;
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v363, v85, v86);
      uint64_t v88 = v369;
      uint64_t v89 = *(void *)(v370 + qword_1002E1B98);
      swift_bridgeObjectRetain(v369);
      uint64_t v90 = sub_10015F498(v89, 0LL, 0LL, (uint64_t)_swiftEmptyArrayStorage, 0x5063696D616E7964LL, 0xEB00000000656761LL);
      id v91 = objc_allocWithZone((Class)type metadata accessor for DynamicViewController());
      uint64_t v92 = sub_10010FF18(v87, v83, v368, v88, v90);
      swift_release(v83);
      __n128 v93 = swift_release(v90);
      (*(void (**)(char *, uint64_t, __n128))(v84 + 8))(v85, v86, v93);
      return v92;
    case 4u:
      swift_release(*v49);
      uint64_t v174 = sub_10015F498( *(void *)(v370 + qword_1002E1B98),  0LL,  0LL,  (uint64_t)_swiftEmptyArrayStorage,  0x6150686372616573LL,  0xEA00000000006567LL);
      id v175 = objc_allocWithZone((Class)type metadata accessor for SearchViewController());
      return sub_10014A8DC(v174);
    case 7u:
      uint64_t v176 = *v49;
      uint64_t v177 = sub_1000031E8(&qword_1002E8340);
      uint64_t v178 = v349;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v177 + 48), v349, (uint64_t *)&unk_1002E1810);
      uint64_t v179 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v180 = type metadata accessor for PersonalizationDataProvider(0LL);
      BaseObjectGraph.optional<A>(_:)(&v375, v180, v180);
      uint64_t v181 = v375;
      uint64_t v182 = v364;
      sub_10001027C(v178, v364, (uint64_t *)&unk_1002E1810);
      uint64_t v183 = type metadata accessor for GenericDiffablePagePresenter(0LL);
      swift_allocObject(v183, *(unsigned int *)(v183 + 48), *(unsigned __int16 *)(v183 + 52));
      swift_retain(v176);
      swift_retain(v179);
      swift_retain(v181);
      uint64_t v184 = GenericDiffablePagePresenter.init(objectGraph:personalizationProvider:sidePackedPage:sidePackedPageRenderMetrics:pageUrl:)( v179,  v181,  v176,  0LL,  v182);
      uint64_t v185 = v369;
      swift_bridgeObjectRetain(v369);
      swift_retain(v184);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v368, v185);
      swift_release(v184);
      uint64_t v186 = sub_100003B6C( &qword_1002E2548,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v184);
      uint64_t v187 = sub_10015F498( v179,  v184,  v186,  (uint64_t)_swiftEmptyArrayStorage,  0x50636972656E6567LL,  0xEB00000000656761LL);
      swift_release(v184);
      id v188 = objc_allocWithZone((Class)type metadata accessor for GenericDiffablePageViewController(0LL));
      swift_retain(v184);
      swift_retain(v187);
      uint64_t v92 = sub_1001EDC30(v184, v187);
      dispatch thunk of GenericDiffablePagePresenter.pageTitle.getter(v189);
      if (v190)
      {
        uint64_t v192 = v190;
        NSString v193 = String._bridgeToObjectiveC()();
        *(void *)&double v191 = swift_bridgeObjectRelease(v192).n128_u64[0];
      }

      else
      {
        NSString v193 = 0LL;
      }

      objc_msgSend(v92, "setTitle:", v193, v191);
      swift_release(v181);
      swift_release(v176);

      swift_release(v184);
      swift_release(v187);
      sub_100006060(v178, (uint64_t *)&unk_1002E1810);
      return v92;
    case 8u:
      uint64_t v94 = *v49;
      uint64_t v95 = sub_1000031E8(&qword_1002DEF58);
      uint64_t v96 = v364;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v95 + 48), v364, (uint64_t *)&unk_1002E1810);
      uint64_t v97 = *(void *)(v370 + qword_1002E1B98);
      unint64_t v98 = v362;
      sub_10001027C(v96, (uint64_t)v362, (uint64_t *)&unk_1002E1810);
      uint64_t v99 = type metadata accessor for TopChartsDiffablePagePresenter(0LL);
      swift_allocObject(v99, *(unsigned int *)(v99 + 48), *(unsigned __int16 *)(v99 + 52));
      swift_retain(v94);
      swift_retain(v97);
      uint64_t v101 = TopChartsDiffablePagePresenter.init(objectGraph:pageUrl:sidePackedPage:)(v100, v98, v94);
      uint64_t v102 = sub_100003B6C( &qword_1002EC058,  (uint64_t (*)(uint64_t))&type metadata accessor for TopChartsDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v101);
      uint64_t v103 = sub_10015F498( v97,  v101,  v102,  (uint64_t)_swiftEmptyArrayStorage,  0x7472616843706F74LL,  0xED00006567615073LL);
      swift_release(v101);
      id v104 = objc_allocWithZone((Class)type metadata accessor for TopChartsDiffablePageViewController());
      uint64_t v92 = (char *)sub_1001EE2C0(v101, v103);
      swift_release(v94);
      uint64_t v105 = v96;
      goto LABEL_22;
    case 0xBu:
      return (char *)*v49;
    case 0xDu:
      uint64_t v194 = *v49;
      uint64_t v195 = sub_1000031E8(&qword_1002DEF68);
      uint64_t v196 = v364;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v195 + 48), v364, (uint64_t *)&unk_1002E1810);
      uint64_t v197 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v198 = v362;
      sub_10001027C(v196, (uint64_t)v362, (uint64_t *)&unk_1002E1810);
      uint64_t v199 = type metadata accessor for ArticleDiffablePagePresenter(0LL);
      swift_allocObject(v199, *(unsigned int *)(v199 + 48), *(unsigned __int16 *)(v199 + 52));
      swift_retain(v194);
      swift_retain(v197);
      uint64_t v201 = ArticleDiffablePagePresenter.init(objectGraph:impressionsTracker:pageUrl:sidePackedPage:)( v200,  0LL,  0LL,  v198,  v194);
      uint64_t v202 = v369;
      swift_bridgeObjectRetain(v369);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v368, v202);
      uint64_t v203 = sub_100003B6C( &qword_1002EC078,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v201);
      uint64_t v204 = sub_10015F498( v197,  v201,  v203,  (uint64_t)_swiftEmptyArrayStorage,  0x50656C6369747261LL,  0xEB00000000656761LL);
      swift_release(v201);
      id v205 = objc_allocWithZone((Class)type metadata accessor for ArticleDiffablePageViewController(0LL));
      uint64_t v92 = sub_1001EDC54(v201, v204);
      swift_release(v194);
      uint64_t v105 = v196;
LABEL_22:
      sub_100006060(v105, (uint64_t *)&unk_1002E1810);
      return v92;
    case 0xEu:
      uint64_t v206 = (void *)*v49;
      if (v206)
      {
        uint64_t v207 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
        uint64_t v208 = swift_allocObject(v207, 40LL, 7LL);
        *(_OWORD *)(v208 + swift_weakDestroy(v0 + 16) = xmmword_100233570;
        *(void *)(v208 + 32) = v206;
        *(void *)&__int128 v375 = v208;
        specialized Array._endMutation()(v208);
        uint64_t v209 = (void *)v375;
      }

      else
      {
        uint64_t v209 = _swiftEmptyArrayStorage;
      }

      uint64_t v296 = v370;
      uint64_t v297 = v361;
      uint64_t v298 = sub_100006028(0LL, (unint64_t *)&qword_1002E5E50, &OBJC_CLASS___ACAccountStore_ptr);
      uint64_t v299 = *(void *)(v296 + qword_1002E1B98);
      uint64_t v300 = type metadata accessor for ObjectGraph(0LL);
      id v301 = v206;
      inject<A, B>(_:from:)(&v375, v298, v299, v298, v300);
      id v371 = (id)v375;
      uint64_t v302 = type metadata accessor for ASKBagContract(0LL);
      uint64_t v303 = inject(_:from:)(v302, v299);
      uint64_t v304 = sub_1000031E8(&qword_1002EC060);
      inject<A, B>(_:from:)(&v375, v304, v299, v304, v300);
      updateCGFloat d = type metadata accessor for UpdateStore(0LL);
      inject<A, B>(_:from:)(v374, updated, v299, updated, v300);
      uint64_t v306 = (void *)v374[0];
      uint64_t v307 = sub_1000031E8(&qword_1002EC068);
      v374[0] = v209;
      uint64_t v308 = v357;
      Dependency.init<A>(satisfying:with:)(v307, v374, v307);
      uint64_t v309 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v308);
      uint64_t v310 = *(void (**)(char *, uint64_t))(v297 + 8);
      uint64_t v311 = v358;
      v310(v308, v358);
      type metadata accessor for ASDPurchaseHistoryContext(0LL);
      v374[0] = 1LL;
      Dependency.init<A>(satisfying:with:)(v312, v374, v312);
      uint64_t v313 = (void *)dispatch thunk of BaseObjectGraph.adding(dependency:)(v308);
      __n128 v314 = swift_release(v309);
      ((void (*)(char *, uint64_t, __n128))v310)(v308, v311, v314);
      uint64_t v315 = sub_1002183D0(v313);
      uint64_t v317 = v316;
      sub_10001F010((uint64_t)&v375, (uint64_t)v374);
      uint64_t v318 = type metadata accessor for TVPurchasesPagePresenter(0LL);
      swift_allocObject(v318, *(unsigned int *)(v318 + 48), *(unsigned __int16 *)(v318 + 52));
      id v319 = v301;
      swift_retain(v299);
      id v320 = v371;
      swift_unknownObjectRetain(v315);
      id v321 = v306;
      swift_retain(v303);
      uint64_t v322 = TVPurchasesPagePresenter.init(objectGraph:accountStore:purchaseHistory:appStateController:updateStore:bag:familyMember:)( v299,  v320,  v374,  v315,  v317,  v321,  v303,  v206);
      uint64_t v323 = sub_100003B6C( &qword_1002EC070,  (uint64_t (*)(uint64_t))&type metadata accessor for TVPurchasesPagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v322);
      uint64_t v324 = sub_10015F498( v299,  v322,  v323,  (uint64_t)_swiftEmptyArrayStorage,  0x6573616863727570LL,  0xED00006567615073LL);
      swift_release(v322);
      id v325 = objc_allocWithZone((Class)type metadata accessor for PurchasesViewController());
      uint64_t v92 = sub_10000AC4C(v322, v324);

      swift_unknownObjectRelease(v315);
      swift_release(v303);

      swift_release(v313);
      _s6Arcade17PillOverlayLayoutVwxx_0(&v375);
      return v92;
    case 0x14u:
      uint64_t v210 = (uint64_t)v49 + *(int *)(sub_1000031E8(&qword_1002DEF98) + 48);
      uint64_t v211 = v366;
      uint64_t v212 = v365;
      uint64_t v213 = v367;
      (*(void (**)(char *, uint64_t *, uint64_t))(v366 + 32))(v365, v49, v367);
      uint64_t v214 = v351;
      sub_10003FBFC(v210, v351, &qword_1002DEF80);
      uint64_t v215 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v216 = type metadata accessor for PersonalizationDataProvider(0LL);
      BaseObjectGraph.optional<A>(_:)(&v375, v216, v216);
      uint64_t v217 = v375;
      uint64_t v218 = v363;
      (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v363, v212, v213);
      uint64_t v219 = v348;
      sub_10001027C(v214, v348, &qword_1002DEF80);
      uint64_t v220 = type metadata accessor for MSODiffablePagePresenter(0LL);
      swift_allocObject(v220, *(unsigned int *)(v220 + 48), *(unsigned __int16 *)(v220 + 52));
      swift_retain(v217);
      swift_retain(v215);
      uint64_t v222 = MSODiffablePagePresenter.init(objectGraph:personalizationProvider:pageUrl:context:)(v221, v217, v218, v219);
      uint64_t v223 = v369;
      swift_bridgeObjectRetain(v369);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v368, v223);
      uint64_t v224 = sub_100003B6C( &qword_1002EC048,  (uint64_t (*)(uint64_t))&type metadata accessor for MSODiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v222);
      uint64_t v225 = sub_10015F498(v215, v222, v224, (uint64_t)_swiftEmptyArrayStorage, 0x656761506F736DLL, 0xE700000000000000LL);
      swift_release(v222);
      id v226 = objc_allocWithZone((Class)type metadata accessor for MSODiffablePageViewController(0LL));
      uint64_t v92 = sub_1001EDC9C(v222, v225);
      swift_release(v217);
      sub_100006060(v214, &qword_1002DEF80);
      (*(void (**)(char *, uint64_t, __n128))(v211 + 8))(v212, v213, v227);
      return v92;
    case 0x16u:
      char v228 = *(_BYTE *)v49;
      uint64_t v229 = *(void *)(v370 + qword_1002E1B98);
      id v230 = objc_allocWithZone((Class)type metadata accessor for OnboardingViewController());
      swift_retain(v229);
      uint64_t v92 = sub_1000E59D8(v228, v229);
      uint64_t v231 = swift_allocObject(&unk_10028E050, 24LL, 7LL);
      swift_weakInit(v231 + 16, v229);
      uint64_t v232 = swift_allocObject(&unk_10028E0F0, 25LL, 7LL);
      *(void *)(v232 + swift_weakDestroy(v0 + 16) = v231;
      *(_BYTE *)(v232 + 2swift_weakDestroy(v0 + 4) = v228;
      uint64_t v233 = &v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_primaryButtonCallback];
      uint64_t v234 = *(void *)&v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_primaryButtonCallback];
      uint64_t v235 = *(void *)&v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_primaryButtonCallback + 8];
      *(void *)uint64_t v233 = sub_1001DF1F0;
      *((void *)v233 + 1) = v232;
      swift_retain(v231);
      swift_retain(v232);
      sub_10000D3D8(v234, v235);
      uint64_t v236 = *(void *)&v92[OBJC_IVAR____TtC6Arcade24OnboardingViewController_onboardingView];
      uint64_t v237 = swift_allocObject(&unk_10028E0A0, 24LL, 7LL);
      swift_unknownObjectWeakInit(v237 + 16, v92);
      uint64_t v239 = *v238;
      uint64_t v240 = v238[1];
      *uint64_t v238 = (uint64_t)sub_1001DF1B4;
      v238[1] = v237;
      sub_10000D3D8(v239, v240);
      swift_release(v231);
      swift_release(v232);
      if (qword_1002DC4E0 != -1) {
        swift_once(&qword_1002DC4E0, sub_100065B64);
      }
      swift_unknownObjectWeakAssign(&unk_1002EEA30, v92);
      return v92;
    case 0x19u:
      uint64_t v106 = *v49;
      uint64_t v107 = sub_1000031E8(&qword_1002DDA20);
      uint64_t v108 = v353;
      uint64_t v109 = v350;
      uint64_t v110 = v354;
      (*(void (**)(char *, char *, uint64_t))(v353 + 32))(v350, (char *)v49 + *(int *)(v107 + 48), v354);
      uint64_t v111 = type metadata accessor for ArcadeSubscriptionManager(0LL);
      uint64_t v112 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v113 = (void *)inject(_:from:)(v111, v112);
      uint64_t v114 = type metadata accessor for ASKBagContract(0LL);
      uint64_t v115 = inject(_:from:)(v114, v112);
      swift_retain(v112);
      id v116 = v113;
      double v117 = ASKBagContract.fetchTimeout.getter();
      uint64_t v118 = v345;
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v345, v109, v110);
      uint64_t v119 = type metadata accessor for ArcadeDiffablePagePresenter(0LL);
      swift_allocObject(v119, *(unsigned int *)(v119 + 48), *(unsigned __int16 *)(v119 + 52));
      swift_retain(v106);
      uint64_t v120 = ArcadeDiffablePagePresenter.init(objectGraph:arcadeSubscriptionManager:subscriptionStateFetchTimeout:sidePackedPage:pageUrls:)( v112,  v116,  v106,  v118,  v117);
      uint64_t v121 = v369;
      swift_bridgeObjectRetain(v369);
      dispatch thunk of TimedMetricsPagePresenter.referrer.setter(v368, v121);
      uint64_t v122 = sub_100003B6C( &qword_1002EC050,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      swift_retain(v120);
      uint64_t v123 = sub_10015F498( v112,  v120,  v122,  (uint64_t)_swiftEmptyArrayStorage,  0x6150656461637261LL,  0xEA00000000006567LL);
      swift_release(v120);
      id v124 = objc_allocWithZone((Class)type metadata accessor for ArcadeDiffablePageViewController(0LL));
      uint64_t v92 = sub_1000BFE80(v120, v123);

      swift_release(v106);
      __n128 v125 = swift_release(v115);
      (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v109, v110, v125);
      return v92;
    case 0x1Au:
      uint64_t v126 = *(uint64_t *)((char *)v49 + *(int *)(sub_1000031E8(&qword_1002DEF50) + 48));
      uint64_t v127 = v364;
      sub_10003FBFC((uint64_t)v49, v364, (uint64_t *)&unk_1002E1810);
      uint64_t v128 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v129 = type metadata accessor for ArcadeSubscriptionManager(0LL);
      swift_retain(v128);
      uint64_t v130 = inject(_:from:)(v129, v128);
      uint64_t v131 = v362;
      sub_10001027C(v127, (uint64_t)v362, (uint64_t *)&unk_1002E1810);
      uint64_t v132 = type metadata accessor for ArcadeSubscribePresenter(0LL);
      swift_allocObject(v132, *(unsigned int *)(v132 + 48), *(unsigned __int16 *)(v132 + 52));
      swift_retain(v126);
      uint64_t v133 = ArcadeSubscribePresenter.init(objectGraph:subscriptionManager:url:sidepack:)(v128, v130, v131, v126);
      uint64_t v134 = v369;
      swift_bridgeObjectRetain(v369);
      dispatch thunk of BasePresenter.referrer.setter(v368, v134);
      uint64_t v135 = sub_100003B6C( &qword_1002EC090,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSubscribePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v133);
      uint64_t v136 = sub_10015F498( v128,  v133,  v135,  (uint64_t)_swiftEmptyArrayStorage,  0xD000000000000013LL,  0x800000010024E3F0LL);
      swift_release(v133);
      id v137 = objc_allocWithZone((Class)type metadata accessor for ArcadeSubscribeViewController());
      uint64_t v92 = sub_10007F018(v133, v136);
      swift_release(v126);
      sub_100006060(v127, (uint64_t *)&unk_1002E1810);
      return v92;
    case 0x1Bu:
      uint64_t v138 = *v49;
      uint64_t v139 = v369;
      uint64_t v140 = *(void *)(v370 + qword_1002E1B98);
      swift_bridgeObjectRetain(v369);
      uint64_t v141 = sub_10015F498(v140, 0LL, 0LL, (uint64_t)_swiftEmptyArrayStorage, 0x49676E696B72616DLL, 0xEF656761506D6574LL);
      id v142 = objc_allocWithZone((Class)type metadata accessor for MarketingItemViewController());
      return sub_1001259E8(v138, v368, v139, v141);
    case 0x1Cu:
      swift_release(*v49);
      uint64_t v143 = sub_1000031E8(&qword_1002DEF90);
      uint64_t v144 = v366;
      __n128 v145 = v365;
      (*(void (**)(char *, char *, uint64_t))(v366 + 32))(v365, (char *)v49 + *(int *)(v143 + 48), v367);
      uint64_t v146 = type metadata accessor for PageFacetsPresenter(0LL);
      swift_allocObject(v146, *(unsigned int *)(v146 + 48), *(unsigned __int16 *)(v146 + 52));
      uint64_t v148 = PageFacetsPresenter.init()(v147);
      uint64_t v149 = *(void *)(v370 + qword_1002E1B98);
      inject(_:from:)(v149);
      uint64_t v150 = v352;
      static PageFacetsFieldsProvider.metricsPipelineWithPageFacetsProvider(using:currentPipeline:)( v148,  &protocol witness table for PageFacetsPresenter,  v21);
      id v371 = *(id *)(v19 + 8);
      uint64_t v151 = v355;
      ((void (*)(char *, uint64_t))v371)(v21, v355);
      uint64_t v152 = v363;
      uint64_t v153 = v145;
      uint64_t v154 = v367;
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v363, v153, v367);
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v150, v151);
      uint64_t v155 = type metadata accessor for ArcadeSeeAllGamesDiffablePagePresenter(0LL);
      swift_allocObject(v155, *(unsigned int *)(v155 + 48), *(unsigned __int16 *)(v155 + 52));
      swift_retain(v149);
      swift_retain(v148);
      uint64_t v156 = ArcadeSeeAllGamesDiffablePagePresenter.init(objectGraph:pageUrl:facetsPresenter:metricsPipeline:)( v149,  v152,  v148,  v21);
      uint64_t v157 = sub_100003B6C( &qword_1002EC080,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSeeAllGamesDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
      uint64_t v158 = sub_1000031E8(&qword_1002DE660);
      uint64_t v159 = swift_allocObject( v158,  ((*(unsigned __int8 *)(v361 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v361 + 80))
             + *(void *)(v361 + 72),
               *(unsigned __int8 *)(v361 + 80) | 7LL);
      *(_OWORD *)(v159 + swift_weakDestroy(v0 + 16) = xmmword_100233580;
      swift_retain(v156);
      static Dependency.satisfying<A>(_:with:)(v151, v150, v151);
      uint64_t v160 = sub_10015F498(v149, v156, v157, v159, 0xD000000000000015LL, 0x800000010024E3B0LL);
      swift_release(v156);
      swift_bridgeObjectRelease(v159);
      id v161 = objc_allocWithZone((Class)type metadata accessor for ArcadeSeeAllGamesDiffablePageViewController(0LL));
      uint64_t v92 = sub_1001230DC(v156, v160);
      __n128 v162 = swift_release(v148);
      ((void (*)(char *, uint64_t, __n128))v371)(v150, v151, v162);
      (*(void (**)(char *, uint64_t, __n128))(v366 + 8))(v365, v154, v163);
      return v92;
    case 0x1Du:
      uint64_t v241 = (void *)*v49;
      uint64_t v242 = sub_1000031E8(&qword_1002DEF88);
      uint64_t v243 = (char *)v49 + *(int *)(v242 + 48);
      uint64_t v244 = (char *)v49 + *(int *)(v242 + 64);
      uint64_t v245 = v359;
      uint64_t v246 = v347;
      (*(void (**)(char *, char *, uint64_t))(v359 + 32))(v28, v243, v347);
      uint64_t v247 = v366;
      uint64_t v248 = v365;
      uint64_t v249 = v367;
      (*(void (**)(char *, char *, uint64_t))(v366 + 32))(v365, v244, v367);
      uint64_t v250 = *(void *)(v370 + qword_1002E1B98);
      (*(void (**)(char *, char *, uint64_t))(v245 + 16))(v25, v28, v246);
      uint64_t v251 = v363;
      (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v363, v248, v249);
      uint64_t v252 = type metadata accessor for ArcadeWelcomePagePresenter(0LL);
      swift_allocObject(v252, *(unsigned int *)(v252 + 48), *(unsigned __int16 *)(v252 + 52));
      id v371 = v241;
      swift_retain(v241);
      swift_retain(v250);
      uint64_t v254 = ArcadeWelcomePagePresenter.init(objectGraph:contentType:welcomePage:url:)(v253, v25, v241, v251);
      uint64_t v255 = sub_100003B6C( &qword_1002EC088,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeWelcomePagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v254);
      uint64_t v256 = sub_10015F498( v250,  v254,  v255,  (uint64_t)_swiftEmptyArrayStorage,  0xD000000000000011LL,  0x800000010024E3D0LL);
      swift_release(v254);
      id v257 = objc_allocWithZone((Class)type metadata accessor for ArcadeWelcomeViewController());
      uint64_t v92 = sub_1001B0354(v254, v256);
      __n128 v258 = swift_release(v371);
      (*(void (**)(char *, uint64_t, __n128))(v247 + 8))(v248, v249, v258);
      (*(void (**)(char *, uint64_t, __n128))(v359 + 8))(v28, v246, v259);
      return v92;
    case 0x1Eu:
      uint64_t v261 = *v49;
      uint64_t v260 = v49[1];
      uint64_t v262 = swift_unknownObjectWeakLoadStrong(v370 + qword_1002E1B90);
      if (!v262
        || (v374[0] = v262,
            uint64_t v263 = sub_100006028(0LL, &qword_1002EC0C0, &OBJC_CLASS___UITabBarController_ptr),
            uint64_t v264 = sub_1000031E8(&qword_1002EC040),
            (swift_dynamicCast(&v375, v374, v263, v264, 6LL) & 1) == 0))
      {
        uint64_t v377 = 0LL;
        __int128 v375 = 0u;
        __int128 v376 = 0u;
      }

      type metadata accessor for PlayerProfileViewController(0LL);
      return (char *)PlayerProfileViewController.__allocating_init(playerId:navigationProxy:objectGraph:)( v261,  v260,  &v375,  0LL);
    case 0x1Fu:
      id v265 = (void *)*v49;
      uint64_t v266 = type metadata accessor for GameLayerAchievementsPresenter(0LL);
      swift_allocObject(v266, *(unsigned int *)(v266 + 48), *(unsigned __int16 *)(v266 + 52));
      id v267 = v265;
      uint64_t v268 = GameLayerAchievementsPresenter.init(gameRecord:)(v265);
      uint64_t v269 = type metadata accessor for AchievementsTheme(0LL);
      uint64_t v270 = v346;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v269 - 8) + 56LL))(v346, 1LL, 1LL, v269);
      id v271 = objc_allocWithZone((Class)type metadata accessor for GameLayerAchievementsViewController(0LL));
      uint64_t v92 = (char *)GameLayerAchievementsViewController.init(presenter:theme:objectGraph:)(v268, v270, 0LL);

      return v92;
    case 0x20u:
      uint64_t v272 = *v49;
      uint64_t v273 = sub_1000031E8(&qword_1002E8340);
      uint64_t v274 = v364;
      sub_10003FBFC((uint64_t)v49 + *(int *)(v273 + 48), v364, (uint64_t *)&unk_1002E1810);
      uint64_t v275 = *(void *)(v370 + qword_1002E1B98);
      uint64_t v276 = type metadata accessor for PersonalizationDataProvider(0LL);
      BaseObjectGraph.optional<A>(_:)(&v375, v276, v276);
      uint64_t v277 = v375;
      uint64_t v278 = v362;
      sub_10001027C(v274, (uint64_t)v362, (uint64_t *)&unk_1002E1810);
      uint64_t v279 = type metadata accessor for GenericPagePresenter(0LL);
      __int128 v375 = 0u;
      __int128 v376 = 0u;
      uint64_t v377 = 0LL;
      swift_allocObject(v279, *(unsigned int *)(v279 + 48), *(unsigned __int16 *)(v279 + 52));
      swift_retain(v272);
      swift_retain(v275);
      swift_retain(v277);
      uint64_t v280 = GenericPagePresenter.init(objectGraph:personalizationProvider:page:pageUrl:supportsFastImpressions:adLifecycleMetricReporter:)( v275,  v277,  v272,  v278,  0LL,  &v375);
      uint64_t v281 = v369;
      swift_bridgeObjectRetain(v369);
      swift_retain(v280);
      dispatch thunk of BasePresenter.referrer.setter(v368, v281);
      swift_release(v280);
      uint64_t v282 = sub_100003B6C( &qword_1002EC030,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v280);
      uint64_t v283 = sub_10015F498( v275,  v280,  v282,  (uint64_t)_swiftEmptyArrayStorage,  0xD000000000000011LL,  0x800000010024E390LL);
      swift_release(v280);
      id v284 = objc_allocWithZone((Class)type metadata accessor for PrivacyDetailViewController(0LL));
      id v285 = [objc_allocWithZone((Class)type metadata accessor for CollectionViewTableFlowLayout()) init];
      uint64_t v286 = type metadata accessor for PrivacyDetailDataSource(0LL);
      swift_allocObject(v286, 104LL, 7LL);
      uint64_t v287 = swift_retain_n(v280, 2LL);
      uint64_t v288 = sub_100201BD8(v287);
      swift_retain(v283);
      v289 = sub_100201704(v285, v280, v288, v283);
      uint64_t v290 = sub_100003B6C( &qword_1002EC038,  type metadata accessor for PrivacyDetailViewController,  (uint64_t)&unk_100241C30);
      swift_retain(v280);
      uint64_t v291 = v289;
      dispatch thunk of BaseGenericPagePresenter.view.setter(v289, v290);
      swift_release(v277);
      swift_release(v272);
      swift_release_n(v280, 2LL);
      swift_release(v283);
      sub_100006060(v274, (uint64_t *)&unk_1002E1810);
      return v291;
    case 0x21u:
      uint64_t v165 = *v49;
      uint64_t v164 = v49[1];
      unint64_t v166 = sub_1000E67C0((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v167 = type metadata accessor for ArtworkLoader(0LL);
      uint64_t v168 = inject(_:from:)(v167, *(void *)(v370 + qword_1002E1B98));
      uint64_t v169 = sub_10015C7CC(v165, v164);
      if ((v170 & 1) != 0) {
        uint64_t v171 = 0LL;
      }
      else {
        uint64_t v171 = v169;
      }
      id v172 = objc_allocWithZone((Class)type metadata accessor for ScreenshotsGalleryViewController());
      uint64_t v92 = sub_1000B7540(v164, v166, v168, v171);
      swift_release(v165);
      return v92;
    default:
      uint64_t v173 = type metadata accessor for ComingSoonViewController();
      uint64_t v92 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v173)) init];
      sub_10000609C((uint64_t)v49);
      return v92;
  }

char *sub_1001DDE98(void *a1, uint64_t a2)
{
  uint64_t v5 = &v2[qword_1002EBEA0];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  uint64_t v6 = qword_1002EBEB0;
  id v7 = objc_allocWithZone((Class)type metadata accessor for ZoomTransitioningDelegate());
  uint64_t v8 = v2;
  *(void *)&v2[v6] = [v7 init];
  uint64_t v9 = type metadata accessor for FlowActionRunner(0LL);
  uint64_t v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  swift_unknownObjectWeakInit(v10 + qword_1002E0738, 0LL);
  uint64_t v12 = swift_unknownObjectWeakAssign(v11, a1);
  uint64_t v13 = ActionRunner.init()(v12);
  uint64_t v14 = type metadata accessor for LoadingController();
  uint64_t v15 = (void *)swift_allocObject(v14, 56LL, 7LL);
  v15[5] = 0LL;
  v15[6] = 0LL;
  v15[3] = a2;
  v15[4] = 0LL;
  v15[2] = v13;
  *(void *)&v8[qword_1002EBEA8] = v15;
  swift_retain(v13);
  swift_retain(a2);

  swift_unknownObjectWeakInit(&v8[qword_1002E1B90], 0LL);
  swift_unknownObjectWeakAssign(v16, a1);
  *(void *)&v8[qword_1002E1B98] = a2;
  swift_retain(a2);
  v29.id receiver = v8;
  v29.super_class = (Class)sub_1000031E8(&qword_1002EC0C8);
  id v17 = objc_msgSendSuper2(&v29, "init");
  uint64_t v18 = (void *)objc_opt_self(&OBJC_CLASS___ASKRebootstrapCoordinator);
  uint64_t v19 = (char *)v17;
  id v20 = [v18 sharedCoordinator];
  uint64_t v21 = swift_allocObject(&unk_10028E118, 24LL, 7LL);
  swift_unknownObjectWeakInit(v21 + 16, v19);
  aBlock[4] = sub_1001DF1E8;
  uint64_t v28 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100135408;
  void aBlock[3] = &unk_10028E130;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = objc_msgSend(v20, "registerCleanupHandler:", v22, swift_release(v28).n128_f64[0]);
  _Block_release(v22);

  _bridgeAnyObjectToAny(_:)(aBlock, v23);
  swift_unknownObjectRelease(v23);
  swift_release(v13);

  swift_release(a2);
  uint64_t v24 = (uint64_t)&v19[qword_1002EBEA0];
  swift_beginAccess(&v19[qword_1002EBEA0], v26, 33LL, 0LL);
  sub_1000FB06C((uint64_t)aBlock, v24, (uint64_t *)&unk_1002DF680);
  swift_endAccess(v26);
  return v19;
}

void sub_1001DE130(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong(Strong + qword_1002E1B90);
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = [v4 presentedViewController];
      if (v6)
      {
        id v7 = v6;
        id v8 = [v6 presentingViewController];
        if (v8)
        {
          uint64_t v9 = v8;
          sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
          id v10 = v5;
          id v11 = v9;
          LOBYTE(v9) = static NSObject.== infix(_:_:)(v11, v10);
        }

        uint64_t v3 = v5;
      }

      else
      {
        id v7 = v5;
      }

      uint64_t v3 = v7;
    }
  }

void sub_1001DE264(char *a1, uint64_t a2, void *a3)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(&a1[qword_1002E1B90]);
  if (Strong)
  {
    id v6 = (void *)Strong;
    id v7 = a3;
    uint64_t v9 = a1;
    id v8 = [v6 presentedViewController];

    if (v8)
    {
      [v8 dismissViewControllerAnimated:1 completion:0];

      id v7 = v9;
      uint64_t v9 = (char *)v8;
    }
  }

char *sub_1001DE324(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)[objc_allocWithZone((Class)type metadata accessor for FlowNavigationController()) init];
  uint64_t v10 = *(void *)(v4 + qword_1002E1B98);
  id v11 = (objc_class *)type metadata accessor for NavigationFlowController(0LL);
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  swift_unknownObjectWeakInit(&v12[qword_1002E1B90], 0LL);
  swift_unknownObjectWeakAssign(v13, v9);
  *(void *)&v12[qword_1002E1B98] = v10;
  swift_retain_n(v10, 2LL);
  v27.id receiver = v12;
  v27.super_class = (Class)sub_1000031E8(&qword_1002DDA00);
  id v14 = objc_msgSendSuper2(&v27, "init");
  [v9 setDelegate:v14];
  swift_release(v10);
  v26[3] = v11;
  v26[4] = &off_1002848F0;
  v26[0] = v14;
  uint64_t v15 = (uint64_t)&v9[OBJC_IVAR____TtC6Arcade24FlowNavigationController_flowController];
  swift_beginAccess(&v9[OBJC_IVAR____TtC6Arcade24FlowNavigationController_flowController], v25, 33LL, 0LL);
  id v16 = v14;
  sub_1000FB06C((uint64_t)v26, v15, (uint64_t *)&unk_1002E1800);
  swift_endAccess(v25);
  id v17 = sub_1001D7568(a1, a2, a3, a4);
  uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v19 = swift_allocObject(v18, 40LL, 7LL);
  *(_OWORD *)(v19 + swift_weakDestroy(v0 + 16) = xmmword_100233570;
  *(void *)(v19 + 32) = v17;
  v26[0] = v19;
  specialized Array._endMutation()(v19);
  uint64_t v20 = v26[0];
  sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
  uint64_t v21 = v9;
  uint64_t v22 = v17;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v21, "setViewControllers:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

  return v21;
}

void sub_1001DE53C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v85 = a4;
  uint64_t v86 = a5;
  uint64_t v84 = a3;
  uint64_t v92 = a2;
  id v93 = a1;
  uint64_t v91 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v90 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v88 = (char *)&v77 - v8;
  __chkstk_darwin(v9);
  uint64_t v81 = (uint64_t)&v77 - v10;
  uint64_t v87 = type metadata accessor for FlowAnimationBehavior(0LL);
  uint64_t v83 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v82 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v12);
  uint64_t v79 = (void **)((char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v14);
  uint64_t v80 = (uint64_t)&v77 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v77 - v17;
  uint64_t v19 = type metadata accessor for FlowOrigin(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for URL(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v94 = v5;
  uint64_t v27 = v5 + qword_1002E1B90;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v27);
  if (!Strong) {
    return;
  }
  objc_super v29 = (void *)Strong;
  uint64_t v78 = v27;
  id v30 = v93;
  sub_10000611C((uint64_t)v93, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload(v18, v12) == 1)
  {
    uint64_t v31 = &v18[*(int *)(sub_1000031E8(&qword_1002DEFB8) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v18, v23);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v31, v19);
    uint64_t v32 = *(void *)(v94 + qword_1002EBEA8);
    swift_retain(v32);
    sub_1000E4330((uint64_t)v26, (uint64_t)v22);

    __n128 v33 = swift_release(v32);
    (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v22, v19, v33);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    return;
  }

  id v34 = v30;
  uint64_t v35 = v12;
  uint64_t v36 = v34;
  sub_10000609C((uint64_t)v18);
  id v37 = v29;
  id v38 = [v37 presentedViewController];
  uint64_t v39 = v37;
  if (v38)
  {
    uint64_t v40 = v38;
    if ([v38 isBeingDismissed])
    {
      uint64_t v39 = v37;
    }

    else
    {
      uint64_t v41 = v35;
      uint64_t ObjectType = swift_getObjectType(v40);
      uint64_t v43 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ReusableFlowViewController);
      if (v43) {
        uint64_t v44 = v43;
      }
      else {
        uint64_t v44 = 0LL;
      }
      if (v43) {
        uint64_t v45 = v40;
      }
      else {
        uint64_t v45 = 0LL;
      }
      if (v45)
      {
        uint64_t v46 = swift_getObjectType(v45);
        uint64_t v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 8);
        id v48 = v40;
        char v49 = v47(v36, v46, v44);

        if ((v49 & 1) != 0)
        {

          return;
        }
      }

      id v50 = v40;
      id v51 = [v50 presentedViewController];
      uint64_t v39 = v50;
      if (v51)
      {
        uint64_t v52 = v50;
        do
        {
          uint64_t v39 = v51;

          id v51 = [v39 presentedViewController];
          uint64_t v52 = v39;
        }

        while (v51);
      }

      uint64_t v40 = v37;
      uint64_t v35 = v41;
    }
  }

  id v53 = objc_msgSend(v39, "traitCollection", v35);
  BOOL v54 = sub_10003FA14();

  uint64_t v55 = (uint64_t)v36;
  if (v54) {
    uint64_t v56 = sub_1001DE324(v36, v84, v85, (uint64_t)v86);
  }
  else {
    uint64_t v56 = sub_1001D9878(v36, v84, v85, (uint64_t)v86);
  }
  uint64_t v86 = v56;
  uint64_t v58 = v90;
  uint64_t v57 = v91;
  uint64_t v59 = type metadata accessor for FlowPresentationHints(0LL);
  uint64_t v61 = v82;
  uint64_t v60 = v83;
  uint64_t v62 = (char *)v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v92 + *(int *)(v59 + 20), v87);
  int v63 = (*(uint64_t (**)(char *, char *))(v60 + 88))(v61, v62);
  if (v63 != enum case for FlowAnimationBehavior.infer(_:))
  {
    if (v63 == enum case for FlowAnimationBehavior.never(_:))
    {
      LODWORD(v91) = 0;
      goto LABEL_29;
    }

    if (v63 != enum case for FlowAnimationBehavior.always(_:))
    {
LABEL_39:
      _diagnoseUnexpectedEnumCase<A>(type:)(v62, v62);
      __break(1u);
      return;
    }
  }

  LODWORD(v91) = 1;
LABEL_29:
  uint64_t v62 = v88;
  uint64_t v64 = v89;
  id v93 = v37;
  id v65 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
  v65(v88, v92, v57);
  uint64_t v66 = (void *)swift_unknownObjectWeakLoadStrong(v78);
  if (!v66)
  {
    __break(1u);
    goto LABEL_39;
  }

  uint64_t v67 = v66;
  id v68 = [v66 traitCollection];

  uint64_t v69 = v81;
  sub_100166440(v81);

  uint64_t v70 = *(void (**)(char *, uint64_t))(v64 + 8);
  v70(v62, v57);
  v65(v58, v69, v57);
  if ((*(unsigned int (**)(char *, uint64_t))(v64 + 88))(v58, v57) == enum case for FlowPresentationContext.presentModalBlur(_:))
  {
    uint64_t v71 = v86;
    [v86 setModalPresentationStyle:8];
  }

  else
  {
    uint64_t v72 = v80;
    sub_10000611C(v55, v80);
    if (swift_getEnumCaseMultiPayload(v72, v77) == 11
      && (__n128 v73 = v79,
          sub_10000611C(v72, (uint64_t)v79),
          uint64_t v74 = *v73,
          uint64_t v75 = type metadata accessor for FullScreenVideoViewController(),
          uint64_t v76 = swift_dynamicCastClass(v74, v75),
          v74,
          v76))
    {
      sub_10000609C(v72);
      v70(v58, v57);
      uint64_t v71 = v86;
    }

    else
    {
      sub_10000609C(v72);
      uint64_t v71 = v86;
      [v86 setTransitioningDelegate:*(void *)(v94 + qword_1002EBEB0)];
      v70(v58, v57);
    }
  }

  [v39 presentViewController:v71 animated:v91 completion:0];

  v70((char *)v69, v57);
}

void sub_1001DEBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v7 = v4 + qword_1002E1B90;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v4 + qword_1002E1B90);
    if (Strong)
    {
      id v21 = (id)Strong;
      uint64_t v9 = type metadata accessor for FlowActionRunner(0LL);
      uint64_t v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
      swift_unknownObjectWeakInit(v10 + qword_1002E0738, 0LL);
      swift_unknownObjectWeakAssign(v11, v21);
      uint64_t v13 = ActionRunner.init()(v12);
      uint64_t v14 = (void *)swift_allocObject(&unk_10028DFD8, 40LL, 7LL);
      v14[2] = a3;
      v14[3] = v13;
      void v14[4] = a4;
      uint64_t v15 = swift_unknownObjectWeakLoadStrong(v7);
      if (v15)
      {
        uint64_t v16 = (void *)v15;
        swift_retain(a4);
        swift_retain(v13);
        id v17 = objc_msgSend(v16, "presentedViewController", swift_bridgeObjectRetain(a3).n128_f64[0]);

        if (!v17)
        {
LABEL_7:
          sub_1001DEDDC(a3, v13, a4);
          swift_release(v14);
          swift_release(v13);

          return;
        }

        if ([v17 isBeingDismissed])
        {

          goto LABEL_7;
        }

        uint64_t v18 = swift_allocObject(&unk_10028E000, 32LL, 7LL);
        *(void *)(v18 + swift_weakDestroy(v0 + 16) = sub_1001DF118;
        *(void *)(v18 + 2swift_weakDestroy(v0 + 4) = v14;
        aBlock[4] = sub_10004AECC;
        uint64_t v23 = v18;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256LL;
        aBlock[2] = sub_100135408;
        void aBlock[3] = &unk_10028E018;
        uint64_t v19 = _Block_copy(aBlock);
        uint64_t v20 = v23;
        swift_retain(v14);
        objc_msgSend(v17, "dismissViewControllerAnimated:completion:", 1, v19, swift_release(v20).n128_f64[0]);
        swift_release(v14);
        swift_release(v13);

        _Block_release(v19);
      }

      else
      {
        __break(1u);
      }
    }
  }

void sub_1001DEDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a3;
  uint64_t v4 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v8) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease(a1);
    return;
  }

  if (a1 < 0) {
    uint64_t v13 = a1;
  }
  else {
    uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a1);
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v8) {
    goto LABEL_14;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v9 = 0LL;
    uint64_t v10 = enum case for ActionRunner.Origin.action(_:);
    do
    {
      if ((a1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      }

      else
      {
        uint64_t v11 = *(void *)(a1 + 8 * v9 + 32);
        swift_retain(v11);
      }

      ++v9;
      memset(v16, 0, sizeof(v16));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 104))(v7, v10, v4);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v11, v16, v7, v15);
      __n128 v12 = swift_release(v11);
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v12);
      sub_100006060((uint64_t)v16, (uint64_t *)&unk_1002DF680);
    }

    while (v8 != v9);
    goto LABEL_14;
  }

  __break(1u);
}

void sub_1001DEF7C()
{
}

id sub_1001DEFC0()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for RootFlowController(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1001DEFF4(uint64_t a1)
{
}

uint64_t type metadata accessor for RootFlowController(uint64_t a1)
{
  uint64_t result = qword_1002EBEE0;
  if (!qword_1002EBEE0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RootFlowController);
  }
  return result;
}

uint64_t sub_1001DF080(uint64_t a1)
{
  v2[0] = " ";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256LL, 3LL, v2, a1 + 168);
}

uint64_t sub_1001DF0DC()
{
  return type metadata accessor for RootFlowController(0LL);
}

uint64_t sub_1001DF0E4()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1001DF118()
{
}

uint64_t sub_1001DF124()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1001DF148(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001DF158(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001DF160()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

double sub_1001DF184(void *a1)
{
  return sub_1000924D0(a1, *(void *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1001DF190()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1001DF1B4()
{
}

uint64_t sub_1001DF1BC()
{
  return sub_1000923C4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001DF1C4()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

void sub_1001DF1E8()
{
}

double PillOverlayLayout.Metrics.init(for:)(char a1)
{
  double result = 10.0;
  return result;
}

uint64_t PillOverlayLayout.init(metrics:pillView:)@<X0>( __int128 *a1@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  a2[5] = a3;
  a2[6] = a4;
  a2[7] = a5;
  a2[8] = a6;
  return sub_100009D90(a1, (uint64_t)a2);
}

uint64_t PillOverlayLayout.placeChildren(relativeTo:in:)( uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v6 = (void *)v5;
  double v10 = sub_10000AA6C(a2, a3, a4, a5, *(double *)(v5 + 40), *(double *)(v5 + 48));
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  uint64_t v17 = *(void *)(v5 + 24);
  uint64_t v18 = v6[4];
  sub_100005F8C(v6, v17);
  Measurable.measuredSize(fitting:in:)(a1, v17, *(void *)(v18 + 8), a4, a5);
  v28.origin.x = v10;
  v28.origin.y = v12;
  v28.size.width = v14;
  v28.size.height = v16;
  CGRectGetMaxY(v28);
  v29.origin.x = v10;
  v29.origin.y = v12;
  v29.size.width = v14;
  v29.size.height = v16;
  CGRectGetMinX(v29);
  uint64_t v19 = v6[3];
  uint64_t v20 = v6[4];
  sub_100005F8C(v6, v19);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v19, v20);
  uint64_t v21 = v6[3];
  uint64_t v22 = v6[4];
  sub_100005F8C(v6, v21);
  double v23 = dispatch thunk of LayoutView.frame.getter(v21, v22);
  return LayoutRect.init(representing:)(v23, v24, v25, v26);
}

uint64_t PillOverlayLayout.pillView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1, a1);
}

double PillOverlayLayout.metrics.getter()
{
  return *(double *)(v0 + 40);
}

__n128 sub_1001DF3C0@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 40);
  __int128 v3 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  return result;
}

uint64_t initializeWithCopy for PillOverlayLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 4) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

void *assignWithCopy for PillOverlayLayout(void *a1, void *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  return a1;
}

uint64_t assignWithTake for PillOverlayLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for PillOverlayLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PillOverlayLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 72) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 2swift_weakDestroy(v0 + 4) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for PillOverlayLayout()
{
  return &type metadata for PillOverlayLayout;
}

ValueMetadata *type metadata accessor for PillOverlayLayout.Metrics()
{
  return &type metadata for PillOverlayLayout.Metrics;
}

uint64_t sub_1001DF564()
{
  uint64_t v0 = type metadata accessor for OSLogger.Subsystem(0LL);
  sub_10000FF90(v0, qword_1002F1690);
  sub_1000061F4(v0, (uint64_t)qword_1002F1690);
  return OSLogger.Subsystem.init(rawValue:)(0xD000000000000010LL, 0x800000010024E410LL);
}

unint64_t sub_1001DF5C4()
{
  uint64_t v1 = *v0;
  if (!((unint64_t)*v0 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_3;
    }
    return 0LL;
  }

  if (v1 < 0) {
    uint64_t v5 = *v0;
  }
  else {
    uint64_t v5 = v1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v0);
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v5);
  swift_bridgeObjectRelease(v1);
  if (!v6) {
    return 0LL;
  }
LABEL_3:
  unint64_t result = sub_1001E085C();
  if (!result)
  {
    uint64_t v3 = *v0;
    if ((unint64_t)*v0 >> 62)
    {
      if (v3 < 0) {
        uint64_t v7 = *v0;
      }
      else {
        uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(*v0);
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v3);
      unint64_t result = v8 - 1;
      if (!__OFSUB__(v8, 1LL)) {
        return sub_1001DFFC4(result);
      }
    }

    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t result = v4 - 1;
      if (!__OFSUB__(v4, 1LL)) {
        return sub_1001DFFC4(result);
      }
    }

    __break(1u);
  }

  return result;
}

void sub_1001DF68C(uint64_t a1@<X8>)
{
  uint64_t v3 = (void *)*v1;
  if (*(void *)(*v1 + 16LL))
  {
    if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) != 0)
    {
      uint64_t v4 = v3[2];
      if (v4)
      {
LABEL_4:
        uint64_t v5 = v4 - 1;
        sub_100009D90((__int128 *)&v3[5 * v4 - 1], (uint64_t)v6);
        v3[2] = v5;
        void *v1 = v3;
        sub_100009D90(v6, (uint64_t)v7);
        sub_100009D90(v7, a1);
        return;
      }
    }

    else
    {
      uint64_t v3 = sub_1001E0820(v3);
      uint64_t v4 = v3[2];
      if (v4) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  else
  {
    *(void *)(a1 + 32) = 0LL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  }

uint64_t TVUpsellGridLayout.Metrics.init(interItemSpacing:smallIconSize:)@<X0>( __int128 *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t result = sub_100009D90(a1, a2);
  *(double *)(a2 + 40) = a3;
  *(double *)(a2 + 48) = a4;
  return result;
}

__n128 TVUpsellGridLayout.init(metrics:icons:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a3 + 32) = result;
  *(void *)(a3 + 48) = *(void *)(a1 + 48);
  *(void *)(a3 + 56) = a2;
  return result;
}

void TVUpsellGridLayout.placeChildren(relativeTo:in:)( uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v7 = v6;
  v82[1] = a2;
  *(double *)&uint64_t v13 = COERCE_DOUBLE(type metadata accessor for AspectRatio(0LL));
  double v98 = *(double *)(v13 - 8);
  double v99 = *(double *)&v13;
  __chkstk_darwin(v13);
  double v15 = (char *)v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v20 = *(double *)(v6 + 40);
  double v21 = *(double *)(v6 + 48);
  uint64_t v22 = *(void *)(v6 + 24);
  uint64_t v23 = *(void *)(v7 + 32);
  sub_100005F8C((void *)v7, v22);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22, v23);
  uint64_t v24 = v23;
  uint64_t v25 = v16;
  double v26 = AnyDimension.value(in:rounded:)(a1, v19, v22, v24);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  uint64_t v28 = v27(v19, v25);
  AspectRatio.init(_:_:)(v28, v20);
  double v93 = v21 + v21 + v26;
  CGFloat v94 = AspectRatio.width(fromHeight:)(v93);
  (*(void (**)(char *, double))(*(void *)&v98 + 8LL))(v15, COERCE_DOUBLE(*(void *)&v99));
  double v86 = *(double *)(v7 + 40);
  double v99 = *(double *)(v7 + 48);
  sub_1000FDB7C(v7, (uint64_t)&v111);
  uint64_t v29 = v112;
  uint64_t v30 = v113;
  sub_100005F8C(&v111, v112);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v29, v30);
  double v87 = AnyDimension.value(in:rounded:)(a1, v19, v29, v30);
  v27(v19, v25);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v111);
  uint64_t v31 = *(void *)(v7 + 56);
  uint64_t v32 = swift_bridgeObjectRetain(v31);
  __n128 v33 = sub_1001E0530(v32);
  swift_bridgeObjectRelease(v31);
  uint64_t v110 = v33;
  v116.origin.x = a3;
  v116.origin.y = a4;
  v116.size.width = a5;
  CGFloat v34 = a6;
  v116.size.height = a6;
  double Height = CGRectGetHeight(v116);
  double v36 = *(double *)(v7 + 48);
  uint64_t v37 = *(void *)(v7 + 24);
  uint64_t v38 = *(void *)(v7 + 32);
  sub_100005F8C((void *)v7, v37);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v37, v38);
  double v39 = AnyDimension.value(in:rounded:)(a1, v19, v37, v38);
  v27(v19, v25);
  swift_getObjectType(a1);
  sub_1000FE414(v7, a1, Height * 0.5 - v36 * 0.5 - v39);
  if (*(void *)&v40 + 0x4000000000000000LL < 0) {
    goto LABEL_30;
  }
  double v98 = v40;
  double v41 = a4;
  double v42 = a3;
  v117.origin.x = a3;
  v117.origin.y = v41;
  v117.size.width = a5;
  CGFloat v100 = v34;
  v117.size.height = v34;
  double v43 = CGRectGetHeight(v117);
  uint64_t v44 = *(void *)(v7 + 24);
  uint64_t v45 = *(void *)(v7 + 32);
  sub_100005F8C((void *)v7, v44);
  uint64_t v88 = v25;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v44, v45);
  double v46 = AnyDimension.value(in:rounded:)(a1, v19, v44, v45);
  v27(v19, v88);
  sub_1000FE414(v7, a1, v43 * 0.5 - v46 * 0.5);
  if (v47 + 0x4000000000000000LL < 0)
  {
LABEL_31:
    __break(1u);
  }

  else
  {
    uint64_t v48 = v47;
    sub_1001DF68C((uint64_t)&v111);
    if (v112)
    {
      uint64_t v85 = (void (*)(char *, uint64_t))v27;
      sub_100009D90(&v111, (uint64_t)v107);
      v118.origin.x = a3;
      v118.origin.y = v41;
      v118.size.width = a5;
      double v49 = v100;
      v118.size.height = v100;
      CGFloat v50 = CGRectGetMaxX(v118) - v94;
      v119.origin.x = v42;
      v119.origin.y = v41;
      v119.size.width = a5;
      v119.size.height = v49;
      CGFloat v51 = CGRectGetMidY(v119) + v93 * -0.5;
      uint64_t v52 = v108;
      uint64_t v53 = v109;
      sub_100005F8C(v107, v108);
      CGFloat v91 = v51;
      CGFloat v92 = v50;
      CGRect.withLayoutDirection(in:relativeTo:)(a1);
      dispatch thunk of LayoutView.frame.setter(v52, v53);
      v120.origin.x = v42;
      v120.origin.y = v41;
      v120.size.width = a5;
      v120.size.height = v49;
      double MaxX = CGRectGetMaxX(v120);
      v121.origin.x = v42;
      v121.origin.y = v41;
      v121.size.width = a5;
      v121.size.height = v49;
      CGFloat MinX = CGRectGetMinX(v121);
      double v56 = v87;
      if (MinX < MaxX)
      {
        uint64_t v57 = 0LL;
        double v84 = v99 + v87;
        uint64_t v83 = (2LL * *(void *)&v98) | 1;
        uint64_t v58 = 2 * v48;
        do
        {
          if (v57) {
            double v59 = v86;
          }
          else {
            double v59 = v94;
          }
          uint64_t v60 = v83;
          if ((v57 & 0x8000000000000001LL) != 1) {
            uint64_t v60 = v58;
          }
          CGFloat v61 = v84 * (double)v60 - v56;
          v122.origin.x = v42;
          v122.origin.y = v41;
          v122.size.width = a5;
          v122.size.height = v49;
          double v99 = (CGRectGetHeight(v122) - v61) * 0.5;
          double v89 = MaxX;
          CGFloat v62 = MaxX - v59;
          sub_1000FDB7C(v7, (uint64_t)&v111);
          CGFloat v63 = v114;
          double v64 = v115;
          uint64_t v65 = v112;
          uint64_t v66 = v113;
          sub_100005F8C(&v111, v112);
          j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v65, v66);
          double v90 = AnyDimension.value(in:rounded:)(a1, v19, v65, v66);
          v85(v19, v88);
          CGFloat v96 = v62;
          CGFloat v97 = v61;
          v123.origin.x = v62;
          v123.origin.y = v99;
          double v98 = v59;
          v123.size.width = v59;
          v123.size.height = v61;
          double MinY = CGRectGetMinY(v123);
          v124.origin.x = v42;
          v124.origin.y = v41;
          v124.size.width = a5;
          v124.size.height = v100;
          if (MinY < CGRectGetMaxY(v124))
          {
            double v95 = v64 + v90;
            do
            {
              v127.origin.x = v96;
              v127.size.height = v97;
              v127.size.width = v98;
              v127.origin.y = v99;
              CGFloat v70 = CGRectGetMinX(v127);
              CGFloat v71 = v70;
              if (!v57
                && (double v72 = MinY,
                    CGFloat v73 = v63,
                    double v74 = v64,
                    v130.origin.y = v91,
                    v130.origin.x = v92,
                    v130.size.height = v93,
                    v130.size.width = v94,
                    CGRectIntersectsRect(*(CGRect *)&v70, v130)))
              {
                v125.origin.y = v91;
                v125.origin.x = v92;
                v125.size.height = v93;
                v125.size.width = v94;
                double MinY = v90 + CGRectGetMaxY(v125);
                double v68 = a5;
                CGFloat v69 = v100;
              }

              else
              {
                v128.origin.x = v42;
                v128.origin.y = v41;
                v128.size.width = a5;
                v128.size.height = v100;
                v131.origin.x = v71;
                v131.origin.y = MinY;
                v131.size.width = v63;
                v131.size.height = v64;
                if (!CGRectIntersectsRect(v128, v131)) {
                  break;
                }
                uint64_t v75 = v110;
                if (!v110[2]) {
                  break;
                }
                if ((swift_isUniquelyReferenced_nonNull_native(v110) & 1) != 0)
                {
                  uint64_t v76 = v75[2];
                  if (!v76) {
                    goto LABEL_28;
                  }
                }

                else
                {
                  uint64_t v75 = sub_1001E0820(v75);
                  uint64_t v76 = v75[2];
                  if (!v76)
                  {
LABEL_28:
                    __break(1u);
LABEL_29:
                    __break(1u);
LABEL_30:
                    __break(1u);
                    goto LABEL_31;
                  }
                }

                uint64_t v77 = v76 - 1;
                sub_100009D90((__int128 *)&v75[5 * v76 - 1], (uint64_t)v101);
                v75[2] = v77;
                uint64_t v110 = v75;
                sub_100009D90(v101, (uint64_t)v102);
                sub_100009D90(v102, (uint64_t)v103);
                sub_100009D90(v103, (uint64_t)v104);
                uint64_t v78 = v105;
                uint64_t v79 = v106;
                sub_100005F8C(v104, v105);
                double v68 = a5;
                CGFloat v69 = v100;
                CGRect.withLayoutDirection(in:relativeTo:)(a1);
                dispatch thunk of LayoutView.frame.setter(v78, v79);
                double MinY = v95 + MinY;
                _s6Arcade17PillOverlayLayoutVwxx_0(v104);
              }

              v126.origin.x = v42;
              v126.origin.y = v41;
              v126.size.width = v68;
              v126.size.height = v69;
              a5 = v68;
            }

            while (MinY < CGRectGetMaxY(v126));
          }

          sub_1000FE8A4(&v111);
          if (__OFADD__(v57++, 1LL)) {
            goto LABEL_29;
          }
          double v56 = v87;
          double MaxX = v89 - (v87 + v98);
          v129.origin.x = v42;
          v129.origin.y = v41;
          v129.size.width = a5;
          double v49 = v100;
          v129.size.height = v100;
        }

        while (CGRectGetMinX(v129) < MaxX);
      }

      LayoutRect.init(representing:)(v42, v41, a5, v49);
      swift_bridgeObjectRelease(v110);
      _s6Arcade17PillOverlayLayoutVwxx_0(v107);
    }

    else
    {
      uint64_t v81 = sub_1000F01AC((uint64_t)&v111);
      static LayoutRect.zero.getter(v81);
      swift_bridgeObjectRelease(v110);
    }
  }

void static TVUpsellGridLayout.totalNumberOfIcons(fitting:using:in:)( uint64_t a1, uint64_t a2, double a3, double a4)
{
}

double static TVUpsellGridLayout.largeIconSize(using:in:)(uint64_t a1, uint64_t a2)
{
  return sub_1001E1210(a1, a2);
}

double TVUpsellGridLayout.Metrics.smallIconSize.getter()
{
  return *(double *)(v0 + 40);
}

void TVUpsellGridLayout.Metrics.smallIconSize.setter(double a1, double a2)
{
  *(double *)(v2 + 40) = a1;
  *(double *)(v2 + 48) = a2;
}

uint64_t TVUpsellGridLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000FDB7C(v1, a1);
}

uint64_t TVUpsellGridLayout.metrics.setter(__int128 *a1)
{
  return sub_1001E1368(a1, v1);
}

uint64_t sub_1001DFFC4(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  uint64_t *v1 = v3;
  if (!(_DWORD)result || v3 < 0 || (v3 & 0x4000000000000000LL) != 0)
  {
    uint64_t result = sub_1001E07B8(v3);
    uint64_t v3 = result;
    uint64_t *v1 = result;
  }

  unint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  if (v5 <= a1)
  {
    __break(1u);
  }

  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = (v3 & 0xFFFFFFFFFFFFFF8LL) + 8 * a1 + 32;
    uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8LL) + 8 * a1 + 0x20);
    uint64_t v9 = memmove((void *)v7, (const void *)(v7 + 8), 8 * (v5 - 1 - a1));
    *(void *)((*v1 & 0xFFFFFFFFFFFFF8LL) + 0x10) = v6;
    specialized Array._endMutation()(v9);
    return v8;
  }

  return result;
}

void *sub_1001E0058(uint64_t a1)
{
  return sub_1001E0234(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1000B1F50);
}

void *sub_1001E0064(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_1000031E8(&qword_1002DEA38);
  uint64_t v4 = swift_allocObject(v3, 48 * v1 + 32, 7LL);
  size_t v5 = j__malloc_size((const void *)v4);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  *(void *)(v4 + 2swift_weakDestroy(v0 + 4) = 2 * ((uint64_t)(v5 - 32) / 48);
  unint64_t v6 = sub_1001E0A94(&v9, (_OWORD *)(v4 + 32), v1, a1);
  uint64_t v7 = v9;
  swift_bridgeObjectRetain(a1);
  sub_100004624(v7);
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }

  return (void *)v4;
}

void *sub_1001E0158(void *result, uint64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v3 = v2 + 1;
  if (__OFADD__(v2, 1LL))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  if (v2 == -1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = (uint64_t)result;
  if (v3 <= 0)
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002E9FE0);
    uint64_t v7 = (void *)swift_allocObject(v6, 8 * v3 + 32, 7LL);
    int64_t v8 = j__malloc_size(v7);
    uint64_t v9 = v8 - 32;
    if (v8 < 32) {
      uint64_t v9 = v8 - 25;
    }
    __int128 v7[2] = v3;
    v7[3] = 2 * (v9 >> 3);
  }

  uint64_t result = (void *)sub_1001E08C8((uint64_t)&v10, (uint64_t)(v7 + 4), v3, v5, a2);
  if (result == (void *)v3) {
    return v7;
  }
LABEL_14:
  __break(1u);
  return result;
}

void *sub_1001E0228(uint64_t a1)
{
  return sub_1001E0234(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1000B2100);
}

void *sub_1001E0234(uint64_t a1, uint64_t (*a2)(void *, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v6 = _swiftEmptyArrayStorage;
    }

    else
    {
      uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
      uint64_t v6 = (void *)swift_allocObject(v5, 8 * v4 + 32, 7LL);
      int64_t v7 = j__malloc_size(v6);
      uint64_t v8 = v7 - 32;
      if (v7 < 32) {
        uint64_t v8 = v7 - 25;
      }
      __int128 v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }

    swift_bridgeObjectRetain(a1);
    uint64_t v9 = a2(v6 + 4, v4, a1);
    a2 = v10;
    swift_bridgeObjectRelease(v9);
    __break(1u);
LABEL_10:
    if (a1 < 0) {
      uint64_t v11 = a1;
    }
    else {
      uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }

  return v6;
}

void sub_1001E0334(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_14;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      if (v4 != a3) {
        goto LABEL_10;
      }
    }

    else
    {
      uint64_t v8 = sub_1000031E8(&qword_1002EC0D0);
      uint64_t v9 = *(void *)(type metadata accessor for AdamId(0LL) - 8);
      uint64_t v10 = *(void *)(v9 + 72);
      uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
      uint64_t v12 = (v11 + 32) & ~v11;
      uint64_t v13 = (void *)swift_allocObject(v8, v12 + v10 * v5, v11 | 7);
      size_t v14 = j__malloc_size(v13);
      if (!v10)
      {
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        return;
      }

      if (v14 - v12 == 0x8000000000000000LL && v10 == -1) {
        goto LABEL_16;
      }
      v13[2] = v5;
      v13[3] = 2 * ((uint64_t)(v14 - v12) / v10);
      if (v4 != a3)
      {
LABEL_10:
        uint64_t v16 = type metadata accessor for AdamId(0LL);
        swift_arrayInitWithCopy( (char *)v13 + ((*(unsigned __int8 *)(*(void *)(v16 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80LL)),  a2 + *(void *)(*(void *)(v16 - 8) + 72LL) * a3,  v5,  v16);
        return;
      }
    }

    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

void sub_1001E0454(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }

  if (v5)
  {
    if (v5 <= 0)
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        uint64_t v12 = type metadata accessor for Artwork(0LL);
        swift_arrayInitWithCopy(v9 + 4, a2 + 8 * a3, v5, v12);
        return;
      }
    }

    else
    {
      uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
      uint64_t v9 = (void *)swift_allocObject(v8, 8 * v5 + 32, 7LL);
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }

    __break(1u);
    goto LABEL_11;
  }

void *sub_1001E0530(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002DE630);
  unint64_t v4 = (void *)swift_allocObject(v3, 40 * v1 + 32, 7LL);
  size_t v5 = j__malloc_size(v4);
  void v4[2] = v1;
  void v4[3] = 2 * ((uint64_t)(v5 - 32) / 40);
  uint64_t v6 = sub_1001E0CE0(&v9, (uint64_t)(v4 + 4), v1, a1);
  uint64_t v7 = v9;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v7);
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }

  return v4;
}

int64_t *sub_1001E05F8(int64_t *result, int64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }

  else
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      uint64_t v6 = _swiftEmptyArrayStorage;
    }

    else
    {
      uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002E9FE0);
      uint64_t v6 = (int64_t *)swift_allocObject(v5, 8 * v2 + 32, 7LL);
      int64_t v7 = j__malloc_size(v6);
      uint64_t v8 = v7 - 32;
      if (v7 < 32) {
        uint64_t v8 = v7 - 25;
      }
      __int128 v6[2] = v2;
      v6[3] = 2 * (v8 >> 3);
    }

    uint64_t result = sub_1001E0954(v9, v6 + 4, v2, v4, a2);
  }

  __break(1u);
  return result;
}

void *sub_1001E06BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002E9FE0);
  int64_t v4 = (void *)swift_allocObject(v3, 8 * v1 + 32, 7LL);
  int64_t v5 = j__malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 25;
  }
  void v4[2] = v1;
  void v4[3] = 2 * (v6 >> 3);
  int64_t v7 = sub_1001E0DBC(&v10, v4 + 4, v1, a1);
  uint64_t v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_100004624(v8);
  if (v7 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }

  return v4;
}

char *sub_1001E07A4(uint64_t a1)
{
  return sub_10001A048(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1001E07B8(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v4 = a1;
    }
    else {
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0LL, v2, 0LL, a1);
}

void *sub_1001E0820(void *a1)
{
  return sub_10001A374(0LL, a1[2], 0, a1);
}

void *sub_1001E0834(void *a1)
{
  return sub_10001AA7C(0LL, a1[2], 0, a1);
}

void *sub_1001E0848(void *a1)
{
  return sub_10001B0A0(0LL, a1[2], 0, a1);
}

uint64_t sub_1001E085C()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v0);
  *uint64_t v0 = v1;
  if (!(_DWORD)result || v1 < 0 || (v1 & 0x4000000000000000LL) != 0)
  {
    uint64_t result = sub_1001E07B8(v1);
    uint64_t v1 = result;
    *uint64_t v0 = result;
  }

  uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8LL) + 8 * v5 + 0x20);
    *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
    specialized Array._endMutation()(result);
    return v6;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1001E08C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    BOOL v7 = 0;
    a3 = 0LL;
    goto LABEL_14;
  }

  if (!a3)
  {
    BOOL v7 = 0;
LABEL_14:
    uint64_t v8 = a4;
LABEL_15:
    *(void *)uint64_t result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
    *(_BYTE *)(result + 2swift_weakDestroy(v0 + 4) = v7;
    return a3;
  }

  if (a3 < 0) {
    goto LABEL_17;
  }
  uint64_t v5 = 0LL;
  uint64_t v6 = a4;
  while (1)
  {
    BOOL v7 = v6 == a5;
    if (v6 != a5) {
      break;
    }
    uint64_t v8 = 0LL;
LABEL_8:
    *(void *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5) {
      goto LABEL_15;
    }
    ++v5;
    BOOL v9 = v6 == a5;
    uint64_t v6 = v8;
    if (v9)
    {
      BOOL v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }

  uint64_t v8 = v6 + 1;
  if (!__OFADD__(v6, 1LL)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

int64_t *sub_1001E0954( int64_t *result, int64_t *a2, uint64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    int64_t v5 = a4;
LABEL_7:
    void *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }

  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0LL;
    goto LABEL_6;
  }

  if (a5 < a4) {
    goto LABEL_32;
  }
  int64_t v6 = a5 - a4;
  if (a5 > a4)
  {
    int64_t v5 = a4 + 1;
    *a2 = a4;
    if (a3 == 1) {
      goto LABEL_7;
    }
    if (v5 == a5)
    {
      a3 = 1LL;
      int64_t v5 = a5;
      goto LABEL_7;
    }

    unint64_t v7 = v6 - 2;
    if (v7 >= ~a4 + a5) {
      unint64_t v7 = ~a4 + a5;
    }
    unint64_t v8 = v7 + 1;
    if (v8 >= 5)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4LL;
      }
      unint64_t v12 = v8 - v11;
      int64_t v13 = v5 + v8 - v11;
      uint64_t v10 = &a2[v8 - v11];
      uint64_t v9 = v12 + 2;
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_100234E10);
      double v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        int64x2_t *v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4LL;
      }

      while (v12);
      int64_t v5 = v13;
    }

    else
    {
      uint64_t v9 = 2LL;
      uint64_t v10 = a2;
    }

    uint64_t v17 = v10 + 1;
    while (v5 < a5)
    {
      int64_t v18 = v5 + 1;
      *uint64_t v17 = v5;
      if (a3 == v9)
      {
        ++v5;
        goto LABEL_7;
      }

      ++v9;
      ++v17;
      ++v5;
      if (a5 == v18)
      {
        int64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
    }

    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }

  __break(1u);
  return result;
}

void *sub_1001E0A94(void *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1LL << -(char)v6);
  }
  else {
    uint64_t v7 = -1LL;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0LL;
    uint64_t v12 = 0LL;
LABEL_37:
    void *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v12;
  }

  if (!a3)
  {
    int64_t v11 = 0LL;
    uint64_t v12 = 0LL;
    goto LABEL_37;
  }

  if (a3 < 0) {
    goto LABEL_39;
  }
  uint64_t v10 = a2;
  uint64_t v23 = -1LL << *(_BYTE *)(a4 + 32);
  uint64_t v24 = result;
  int64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  int64_t v25 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    int64_t v18 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_100008364(*(void *)(a4 + 56) + 32 * v14, (uint64_t)&v27);
    *(void *)&__int128 v26 = v20;
    *((void *)&v26 + 1) = v19;
    __int128 v22 = v27;
    __int128 v21 = v28;
    __int128 v30 = v27;
    __int128 v31 = v28;
    __int128 v29 = v26;
    *uint64_t v10 = v26;
    v10[1] = v22;
    v10[2] = v21;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain(v19);
      uint64_t v12 = a3;
      goto LABEL_36;
    }

    v10 += 3;
    uint64_t result = (void *)swift_bridgeObjectRetain(v19);
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1LL)) {
      break;
    }
    if (v15 >= v25) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      int64_t v17 = v11 + 2;
      ++v11;
      if (v15 + 1 >= v25) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v17);
      if (v16) {
        goto LABEL_14;
      }
      int64_t v11 = v15 + 1;
      if (v15 + 2 >= v25) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v5 + 8 * (v15 + 2));
      if (v16)
      {
        v15 += 2LL;
      }

      else
      {
        int64_t v11 = v15 + 2;
        if (v15 + 3 >= v25) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v5 + 8 * (v15 + 3));
        if (!v16)
        {
          int64_t v17 = v15 + 4;
          int64_t v11 = v15 + 3;
          if (v15 + 4 < v25)
          {
            unint64_t v16 = *(void *)(v5 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v15 = v17 + 1;
                if (__OFADD__(v17, 1LL)) {
                  goto LABEL_40;
                }
                if (v15 >= v25)
                {
                  int64_t v11 = v25 - 1;
                  goto LABEL_35;
                }

                unint64_t v16 = *(void *)(v5 + 8 * v15);
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }

uint64_t sub_1001E0CE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  if (a2)
  {
    if (a3)
    {
      if ((a3 & 0x8000000000000000LL) == 0)
      {
        if (!v6)
        {
LABEL_17:
          uint64_t v11 = 0LL;
          goto LABEL_14;
        }

        uint64_t v8 = a2;
        uint64_t v9 = 0LL;
        uint64_t v10 = a4 + 40 * v6 - 8;
        while (v6 + v9 <= *(void *)(a4 + 16))
        {
          sub_10001F010(v10, v8);
          if (a3 + v9 == 1)
          {
            uint64_t v11 = v6 + v9 - 1;
            goto LABEL_13;
          }

          v8 += 40LL;
          --v9;
          v10 -= 40LL;
          uint64_t v11 = v6 + v9;
          if (!(v6 + v9)) {
            goto LABEL_14;
          }
        }

        __break(1u);
      }

      __break(1u);
      goto LABEL_17;
    }

    uint64_t v11 = *(void *)(a4 + 16);
LABEL_13:
    uint64_t v6 = a3;
  }

  else
  {
    uint64_t v11 = *(void *)(a4 + 16);
    uint64_t v6 = 0LL;
  }

void *sub_1001E0DBC(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1LL;
  uint64_t v6 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0LL;
    a3 = 0LL;
LABEL_35:
    void *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }

  if (!a3)
  {
    int64_t v8 = 0LL;
    goto LABEL_35;
  }

  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }

  int64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }

  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1LL))
  {
    __break(1u);
    goto LABEL_37;
  }

  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2LL;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0LL;
    int64_t v8 = v13;
    goto LABEL_34;
  }

  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }

  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }

  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0LL;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }

  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0LL;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }

  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0LL;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }

    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }

void sub_1001E0F50(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000FE1B4(a1, a2, a3);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  sub_100005F8C((void *)a1, v13);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v13, v14);
  double v15 = AnyDimension.value(in:rounded:)(a2, v11, v13, v14);
  unint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  double v17 = a4 * 0.5;
  sub_1000FE414(a1, a2, a4 * 0.5 - v15 * 0.5);
  if (v18 + 0x4000000000000000LL < 0)
  {
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v19 = 2 * v18 - 1;
  if (__OFSUB__(2 * v18, 1LL))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  if (v12 < 2) {
    return;
  }
  uint64_t v33 = 2 * v18;
  uint64_t v34 = v12;
  double v20 = *(double *)(a1 + 48);
  uint64_t v21 = *(void *)(a1 + 24);
  uint64_t v22 = *(void *)(a1 + 32);
  sub_100005F8C((void *)a1, v21);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v21, v22);
  double v23 = AnyDimension.value(in:rounded:)(a2, v11, v21, v22);
  v16(v11, v8);
  sub_1000FE414(a1, a2, v17 + v20 * -0.5 - v23);
  if (v24 + 0x4000000000000000LL < 0) {
    goto LABEL_18;
  }
  double v25 = (double)(v34 - 1) * 0.5;
  double v26 = ceil(v25);
  if ((~*(void *)&v26 & 0x7FF0000000000000LL) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  if (v26 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }

  if (v26 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  double v27 = floor(v25);
  if ((~*(void *)&v27 & 0x7FF0000000000000LL) == 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  if (v27 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }

  if (v27 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }

  uint64_t v28 = (2 * v24) | 1;
  uint64_t v29 = v28 * (uint64_t)v26;
  if ((unsigned __int128)(v28 * (__int128)(uint64_t)v26) >> 64 != v29 >> 63)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }

  BOOL v30 = __OFADD__(v19, v29);
  uint64_t v31 = v19 + v29;
  if (v30)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }

  uint64_t v32 = v33 * (uint64_t)v27;
  if ((unsigned __int128)(v33 * (__int128)(uint64_t)v27) >> 64 != v32 >> 63)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }

  if (__OFADD__(v31, v32)) {
LABEL_28:
  }
    __break(1u);
}

double sub_1001E1210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AspectRatio(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v12 = *(double *)(a1 + 40);
  double v13 = *(double *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  sub_100005F8C((void *)a1, v14);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v14, v15);
  double v16 = AnyDimension.value(in:rounded:)(a2, v11, v14, v15);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  AspectRatio.init(_:_:)(v17, v12);
  double v18 = AspectRatio.width(fromHeight:)(v13 + v13 + v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v18;
}

uint64_t sub_1001E1368(__int128 *a1, uint64_t a2)
{
  __int128 v4 = *a1;
  __int128 v5 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *(_OWORD *)(a2 + 40) = *(__int128 *)((char *)a1 + 40);
  return a2;
}

double destroy for TVUpsellGridLayout(void *a1)
{
  *(void *)&double result = swift_bridgeObjectRelease(a1[7]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for TVUpsellGridLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 4) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain(v5);
  return a1;
}

void *assignWithCopy for TVUpsellGridLayout(void *a1, void *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  uint64_t v4 = a2[7];
  uint64_t v5 = a1[7];
  a1[7] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

__n128 initializeWithTake for TVUpsellGridLayout(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TVUpsellGridLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVUpsellGridLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVUpsellGridLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 6swift_weakDestroy(v0 + 4) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 2swift_weakDestroy(v0 + 4) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 6swift_weakDestroy(v0 + 4) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVUpsellGridLayout()
{
  return &type metadata for TVUpsellGridLayout;
}

uint64_t initializeWithCopy for TVUpsellGridLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 4) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

void *assignWithCopy for TVUpsellGridLayout.Metrics(void *a1, void *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for TVUpsellGridLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVUpsellGridLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVUpsellGridLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 56) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 2swift_weakDestroy(v0 + 4) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVUpsellGridLayout.Metrics()
{
  return &type metadata for TVUpsellGridLayout.Metrics;
}

ValueMetadata *type metadata accessor for ArcadeRefreshEntitlementsDebugAction()
{
  return &type metadata for ArcadeRefreshEntitlementsDebugAction;
}

uint64_t sub_1001E16EC()
{
  uint64_t v0 = type metadata accessor for EntitlementRefeshCondition(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  __int128 v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))( v3,  enum case for EntitlementRefeshCondition.always(_:),  v0);
  uint64_t v4 = ArcadeSubscriptionManager.updateStateFromEntitlements(refreshingCache:)(v3);
  swift_release(v4);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1001E1784(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC6Arcade21SectionBackgroundView_artworkView;
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC6Arcade21SectionBackgroundView_artworkView];
  if (!a1)
  {
    if (v5)
    {
      id v10 = v5;
      uint64_t v9 = v5;
LABEL_8:
      [v9 removeFromSuperview];
      uint64_t v9 = *(void **)&v2[v4];
      goto LABEL_10;
    }

void sub_1001E197C(uint64_t a1, uint64_t a2)
{
  __int128 v3 = v2;
  uint64_t v6 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (void **)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(void **, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(void **, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for ShelfBackground.artwork(_:))
  {
    (*(void (**)(void **, uint64_t))(v7 + 96))(v9, v6);
    id v11 = *v9;
    uint64_t v12 = type metadata accessor for ArtworkLoader(0LL);
    uint64_t v13 = inject(_:from:)(v12, a2);
    id v14 = *(void **)&v3[OBJC_IVAR____TtC6Arcade21SectionBackgroundView_artworkView];
    if (v14)
    {
      id v15 = *(id *)&v3[OBJC_IVAR____TtC6Arcade21SectionBackgroundView_artworkView];
    }

    else
    {
      uint64_t v23 = type metadata accessor for ArtworkView(0LL);
      id v15 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v23)) init];
    }

    id v18 = (char *)v9 + *(int *)(sub_1000031E8(&qword_1002EC108) + 48);
    id v24 = v14;
    [v3 frame];
    uint64_t v27 = Artwork.config(_:mode:prefersLayeredImage:)(2LL, 0LL, v25, v26);
    uint64_t v28 = Artwork.backgroundColor.getter(v27);
    ArtworkView.backgroundColor.setter(v28);
    uint64_t v29 = type metadata accessor for ArtworkView(0LL);
    unint64_t v30 = sub_10005D36C();
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v27, 2LL, 1LL, v15, v29, v30);
    id v31 = v15;
    sub_1001E1784(v15);
    swift_release(v11);
    swift_release(v13);

    __n128 v19 = swift_release(v27);
    goto LABEL_10;
  }

  int v16 = v10;
  if (v10 == enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(void **, uint64_t))(v7 + 96))(v9, v6);
    id v17 = *v9;
    id v18 = (char *)v9 + *(int *)(sub_1000031E8((uint64_t *)&unk_1002EA0C0) + 48);
    sub_1001E1784(0LL);
    [v3 setBackgroundColor:v17];

LABEL_10:
    uint64_t v32 = type metadata accessor for ShelfBackgroundStyle(0LL, v19);
    (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8LL))(v18, v32);
    return;
  }

  int v20 = enum case for ShelfBackground.darkOverlay(_:);
  sub_1001E1784(0LL);
  if (v16 == v20)
  {
    id v21 = [(id)objc_opt_self(UIColor) blackColor];
    id v22 = [v21 colorWithAlphaComponent:0.2];

    [v3 setBackgroundColor:v22];
  }

  else
  {
    sub_100010F30();
    uint64_t v33 = (void *)static UIColor.defaultBackground.getter();
    [v3 setBackgroundColor:v33];

    (*(void (**)(void **, uint64_t))(v7 + 8))(v9, v6);
  }

void sub_1001E1C80()
{
  uint64_t v1 = v0;
  v5.id receiver = v0;
  v5.super_class = (Class)type metadata accessor for SectionBackgroundView();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade21SectionBackgroundView_artworkView];
  if (v2)
  {
    id v3 = v2;
    ArtworkView.image.setter(0LL);
  }

  sub_100010F30();
  uint64_t v4 = (void *)static UIColor.defaultBackground.getter();
  [v1 setBackgroundColor:v4];
}

id sub_1001E1E08()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for SectionBackgroundView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SectionBackgroundView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade21SectionBackgroundView);
}

uint64_t sub_1001E1E68()
{
  uint64_t v0 = type metadata accessor for BreakoutDetailsLayout.DetailDimension(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (void *)((char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  if (qword_1002DD0E8 != -1) {
    swift_once(&qword_1002DD0E8, sub_1001E2050);
  }
  double v4 = *(double *)&qword_1002F16A8;
  double v5 = *(double *)&qword_1002F16B0;
  if (qword_1002DD0F0 != -1) {
    swift_once(&qword_1002DD0F0, sub_1001E20C8);
  }
  double v6 = *(double *)&qword_1002EC118;
  v11[3] = &type metadata for Double;
  v11[4] = &protocol witness table for Double;
  v11[0] = 0xC05C400000000000LL;
  v10[3] = &type metadata for CGFloat;
  v10[4] = &protocol witness table for CGFloat;
  v10[0] = 0x407F400000000000LL;
  v3[3] = &type metadata for Double;
  v3[4] = &protocol witness table for Double;
  *id v3 = 0x407B800000000000LL;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))( v3,  enum case for BreakoutDetailsLayout.DetailDimension.static(_:),  v0);
  int64_t v9[3] = &type metadata for CGFloat;
  v9[4] = &protocol witness table for CGFloat;
  v9[0] = 0x4082200000000000LL;
  return SmallBreakoutLayout.Metrics.init(iconSize:iconRotation:iconBottomOffset:detailsTrailingMargin:detailsWidth:layoutMargins:height:)( v11,  v10,  v3,  v9,  v4,  v5,  v6,  80.0,  80.0,  80.0,  80.0);
}

double sub_1001E1FFC()
{
  if (qword_1002DD0F0 != -1) {
    swift_once(&qword_1002DD0F0, sub_1001E20C8);
  }
  double result = *(double *)&qword_1002EC118 * 0.0174532925;
  *(double *)&qword_1002EC110 = *(double *)&qword_1002EC118 * 0.0174532925;
  return result;
}

void sub_1001E2050()
{
  if (qword_1002DD0F8 != -1) {
    swift_once(&qword_1002DD0F8, sub_1001E20D8);
  }
  uint64_t v0 = type metadata accessor for AspectRatio(0LL);
  sub_1000061F4(v0, (uint64_t)qword_1002EC120);
  qword_1002F16A8 = AspectRatio.width(fromHeight:)(545.0);
  qword_1002F16B0 = 0x4081080000000000LL;
}

void sub_1001E20C8()
{
  qword_1002EC118 = 0xC03E000000000000LL;
}

double sub_1001E20D8()
{
  uint64_t v0 = type metadata accessor for AspectRatio(0LL);
  sub_10000FF90(v0, qword_1002EC120);
  uint64_t v1 = sub_1000061F4(v0, (uint64_t)qword_1002EC120);
  *(void *)&double result = AspectRatio.init(_:_:)(v1, 15.0).n128_u64[0];
  return result;
}

char *sub_1001E2128(double a1, double a2, double a3, double a4)
{
  double v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = sub_1000031E8(&qword_1002DFCF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for CornerStyle(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  int v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  __chkstk_darwin(v17);
  __n128 v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int v20 = &v5[OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_itemLayoutContext];
  uint64_t v21 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v20, 1LL, 1LL, v21);
  *(void *)&v5[OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_backgroundArtwork] = 0LL;
  uint64_t v22 = OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_detailsView;
  uint64_t v23 = qword_1002DCAF0;
  id v24 = v5;
  if (v23 != -1) {
    swift_once(&qword_1002DCAF0, sub_1000DEBF8);
  }
  uint64_t v25 = sub_1000061F4(v17, (uint64_t)qword_1002F0358);
  sub_10004E80C(v25, (uint64_t)v19);
  id v26 = objc_allocWithZone((Class)type metadata accessor for BreakoutDetailsView(0LL));
  *(void *)&v5[v22] = sub_1000DF0D4((uint64_t)v19);
  uint64_t v27 = type metadata accessor for ArtworkView(0LL);
  *(void *)&v24[OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_iconView] = static ArtworkView.staticIconArtworkView.getter(v27);

  v48.id receiver = v24;
  v48.super_class = ObjectType;
  uint64_t v28 = (char *)objc_msgSendSuper2(&v48, "initWithFrame:", a1, a2, a3, a4);
  id v29 = [v28 contentView];
  [v29 setClipsToBounds:1];

  id v30 = [v28 contentView];
  objc_msgSend( v30,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  uint64_t v31 = OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_iconView;
  uint64_t v32 = *(void **)&v28[OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_iconView];
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for CornerStyle.continuous(_:), v13);
  id v33 = v32;
  ArtworkView.setCorner(radius:style:)(v16, 87.0);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v34 = qword_1002DD0E0;
  id v35 = *(id *)&v28[v31];
  if (v34 != -1) {
    swift_once(&qword_1002DD0E0, sub_1001E1FFC);
  }
  CGAffineTransformMakeRotation(&v47, *(CGFloat *)&qword_1002EC110);
  [v35 setTransform:&v47];

  uint64_t v36 = qword_1002DC410;
  id v37 = *(id *)&v28[v31];
  if (v36 != -1) {
    swift_once(&qword_1002DC410, sub_100046EA0);
  }
  uint64_t v38 = type metadata accessor for Shadow(0LL);
  uint64_t v39 = sub_1000061F4(v38, (uint64_t)qword_1002EE6E0);
  uint64_t v40 = *(void *)(v38 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v12, v39, v38);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v12, 0LL, 1LL, v38);
  ArtworkView.shadow.setter(v12);

  id v41 = [v28 contentView];
  [v41 addSubview:*(void *)&v28[v31]];

  id v42 = [v28 contentView];
  id v43 = *(id *)&v28[OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_detailsView];
  [v42 addSubview:v43];

  return v28;
}

void *sub_1001E281C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_detailsView);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_offerButton);
  if (v2)
  {
    id v3 = *(id *)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_offerButton);
  }

  else
  {
    double v4 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_callToActionButton);
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
    id v3 = v4;
    uint64_t v2 = 0LL;
  }

  id v5 = v2;
  if ([v3 isFocused])
  {

    return _swiftEmptyArrayStorage;
  }

  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v8 = swift_allocObject(v7, 40LL, 7LL);
  *(_OWORD *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233570;
  *(void *)(v8 + 32) = v3;
  uint64_t v9 = v8;
  specialized Array._endMutation()(v8);
  return (void *)v9;
}

uint64_t sub_1001E2914()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_detailsView);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_offerButton);
  if (v2)
  {
    id v3 = *(id *)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_offerButton);
LABEL_5:
    id v5 = v2;
    unsigned int v6 = [v3 isFocused];

    return v6 ^ 1;
  }

  double v4 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_callToActionButton);
  if (v4)
  {
    id v3 = v4;
    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  return 0LL;
}

uint64_t sub_1001E299C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SmallBreakoutLayout.Metrics(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for SmallBreakoutLayout(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)&double v12 = __chkstk_darwin(v10).n128_u64[0];
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v21.id receiver = v1;
  v21.super_class = ObjectType;
  objc_msgSendSuper2(&v21, "layoutSubviews", v12);
  [v1 bounds];
  sub_1001E1E68();
  id v15 = *(id *)&v1[OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_iconView];
  UIView.withUntransformedFrame.getter(v20);

  int v16 = *(void **)&v1[OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_detailsView];
  v19[3] = type metadata accessor for BreakoutDetailsView(0LL);
  void v19[4] = protocol witness table for UIView;
  v19[0] = v16;
  id v17 = v16;
  SmallBreakoutLayout.init(metrics:iconView:detailsView:)(v9, v20, v19);
  [v1 bounds];
  SmallBreakoutLayout.placeChildren(relativeTo:in:)(v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1001E2CB0()
{
  return type metadata accessor for SmallBreakoutCollectionViewCell(0LL);
}

uint64_t type metadata accessor for SmallBreakoutCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002EC160;
  if (!qword_1002EC160) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmallBreakoutCollectionViewCell);
  }
  return result;
}

void sub_1001E2CF4(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[2] = "\b";
    void v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
  }

id sub_1001E2D78()
{
  return *(id *)(v0 + OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_iconView);
}

double sub_1001E2D88()
{
  if (qword_1002DD0E8 != -1) {
    swift_once(&qword_1002DD0E8, sub_1001E2050);
  }
  return *(double *)&qword_1002F16A8;
}

void sub_1001E2DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_iconView);
  uint64_t v5 = type metadata accessor for ArtworkView(0LL);
  uint64_t v6 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  id v7 = v4;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v7, a2, v5, v6);
}

uint64_t sub_1001E2E60(uint64_t a1)
{
  uint64_t result = sub_100003B6C( &qword_1002EC178,  type metadata accessor for SmallBreakoutCollectionViewCell,  (uint64_t)&unk_100241928);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t AccountChannelsProvider.__allocating_init()()
{
  uint64_t v1 = swift_allocObject(v0, 32LL, 7LL);
  *(void *)(v1 + 2swift_weakDestroy(v0 + 4) = 0LL;
  swift_unknownObjectWeakInit(v1 + 16, 0LL);
  id v2 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  id v3 = [(id)objc_opt_self(ASVSAccountStoreWrapper) accountStoreDidChange];
  [v2 addObserver:v1 selector:"notifyObserver" name:v3 object:0];

  return v1;
}

uint64_t AccountChannelsProvider.init()()
{
  *(void *)(v0 + 2swift_weakDestroy(v0 + 4) = 0LL;
  swift_unknownObjectWeakInit(v0 + 16, 0LL);
  id v1 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  id v2 = [(id)objc_opt_self(ASVSAccountStoreWrapper) accountStoreDidChange];
  [v1 addObserver:v0 selector:"notifyObserver" name:v2 object:0];

  return v0;
}

uint64_t AccountChannelsProvider.deinit()
{
  id v1 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  id v2 = [(id)objc_opt_self(ASVSAccountStoreWrapper) accountStoreDidChange];
  [v1 removeObserver:v0 name:v2 object:0];

  sub_100015B48(v0 + 16);
  return v0;
}

double AccountChannelsProvider.__deallocating_deinit()
{
  id v1 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  id v2 = [(id)objc_opt_self(ASVSAccountStoreWrapper) accountStoreDidChange];
  [v1 removeObserver:v0 name:v2 object:0];

  sub_100015B48(v0 + 16);
  *(void *)&double result = swift_deallocClassInstance(v0, 32LL, 7LL).n128_u64[0];
  return result;
}

uint64_t AccountChannelsProvider.updateObserver.getter()
{
  return swift_unknownObjectWeakLoadStrong(v0 + 16);
}

uint64_t AccountChannelsProvider.updateObserver.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 2swift_weakDestroy(v0 + 4) = a2;
  swift_unknownObjectWeakAssign(v2 + 16, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t (*AccountChannelsProvider.updateObserver.modify(void *a1))()
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 16, v3, 33LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_1001E32D4;
}

void AccountChannelsProvider.fetchChannels(_:)(uint64_t a1, uint64_t a2)
{
  id v4 = [(id)objc_opt_self(VSAccountChannelsCenter) sharedCenter];
  uint64_t v5 = swift_allocObject(&unk_10028E4D8, 32LL, 7LL);
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v5 + 2swift_weakDestroy(v0 + 4) = a2;
  v8[4] = sub_1001E35F4;
  uint64_t v9 = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256LL;
  v8[2] = sub_1001C7E1C;
  v8[3] = &unk_10028E4F0;
  uint64_t v6 = _Block_copy(v8);
  uint64_t v7 = v9;
  swift_retain(a2);
  objc_msgSend(v4, "fetchAccountChannelsWithCompletionHandler:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
}

uint64_t sub_1001E33BC(void *a1, void (*a2)(char *))
{
  uint64_t v4 = sub_1000031E8(&qword_1002EC258);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for AdamId(0LL);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for AccountChannels(0LL, v8);
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a1) {
    goto LABEL_6;
  }
  id v16 = a1;
  id v17 = [v16 adamID];
  if (!v17)
  {

LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v6, 1LL, 1LL, v11, v13);
    a2(v6);
    return sub_1001E3788((uint64_t)v6);
  }

  uint64_t v18 = v17;
  uint64_t v28 = a2;
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  uint64_t v21 = v20;

  AdamId.init(value:)(v19, v21, v22);
  id v23 = [v16 channelIDs];
  if (v23)
  {
    id v24 = v23;
    uint64_t v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)( v23,  &type metadata for String,  &protocol witness table for String);
  }

  else
  {
    uint64_t v25 = 0LL;
  }

  AccountChannels.init(providerAdamId:subscribedChannelIds:)(v10, v25);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v6, v15, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0LL, 1LL, v11);
  v28(v6);

  sub_1001E3788((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_1001E35D0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1001E35F4(void *a1)
{
  return sub_1001E33BC(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1001E35FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001E360C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_1001E3614(uint64_t a1, char a2)
{
  id v3 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v5 = *(void *)(*(void *)a1 + 40LL);
  *(void *)(v5 + 2swift_weakDestroy(v0 + 4) = *(void *)(*(void *)a1 + 32LL);
  swift_unknownObjectWeakAssign(v5 + 16, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }

  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }

  free(v3);
}

void sub_1001E3684(uint64_t a1, uint64_t a2)
{
  id v4 = [(id)objc_opt_self(VSAccountChannelsCenter) sharedCenter];
  uint64_t v5 = swift_allocObject(&unk_10028E528, 32LL, 7LL);
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v5 + 2swift_weakDestroy(v0 + 4) = a2;
  v8[4] = sub_1001E37D4;
  uint64_t v9 = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256LL;
  v8[2] = sub_1001C7E1C;
  v8[3] = &unk_10028E540;
  uint64_t v6 = _Block_copy(v8);
  uint64_t v7 = v9;
  swift_retain(a2);
  objc_msgSend(v4, "fetchAccountChannelsWithCompletionHandler:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
}

uint64_t type metadata accessor for AccountChannelsProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade23AccountChannelsProvider);
}

uint64_t sub_1001E3788(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8(&qword_1002EC258);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_1001E37D8()
{
  qword_1002EC260 = 0xBFE0C152382D7365LL;
}

double sub_1001E37F4()
{
  qword_1002F1708 = 0LL;
  swift_weakInit(algn_1002F1710, 0LL);
  double result = 320.0;
  xmmword_1002F16E0 = xmmword_10023F670;
  *(_OWORD *)algn_1002F16F0 = xmmword_100241A00;
  qword_1002F1700 = 0LL;
  return result;
}

double sub_1001E383C()
{
  if (qword_1002DD100 != -1) {
    swift_once(&qword_1002DD100, sub_1001E37D8);
  }
  uint64_t v0 = qword_1002EC260;
  qword_1002F1748 = 0LL;
  swift_weakInit(algn_1002F1750, 0LL);
  double result = 730.0;
  xmmword_1002F1720 = xmmword_100241A10;
  *(_OWORD *)algn_1002F1730 = xmmword_100241A20;
  qword_1002F1740 = v0;
  return result;
}

double sub_1001E38BC()
{
  if (qword_1002DD100 != -1) {
    swift_once(&qword_1002DD100, sub_1001E37D8);
  }
  uint64_t v0 = qword_1002EC260;
  qword_1002F1788 = 0LL;
  swift_weakInit(algn_1002F1790, 0LL);
  double result = 417.0;
  xmmword_1002F1760 = xmmword_100241A30;
  *(_OWORD *)algn_1002F1770 = xmmword_100241A40;
  qword_1002F1780 = v0;
  return result;
}

double sub_1001E393C()
{
  if (qword_1002DD100 != -1) {
    swift_once(&qword_1002DD100, sub_1001E37D8);
  }
  uint64_t v0 = qword_1002EC260;
  qword_1002F17C8 = 0LL;
  swift_weakInit(algn_1002F17D0, 0LL);
  double result = 365.0;
  xmmword_1002F17A0 = xmmword_100241A50;
  *(_OWORD *)algn_1002F17B0 = xmmword_100241A60;
  qword_1002F17C0 = v0;
  return result;
}

double sub_1001E39BC()
{
  if (qword_1002DD100 != -1) {
    swift_once(&qword_1002DD100, sub_1001E37D8);
  }
  uint64_t v0 = qword_1002EC260;
  qword_1002F1808 = 0LL;
  swift_weakInit(algn_1002F1810, 0LL);
  double result = 208.0;
  xmmword_1002F17E0 = xmmword_100241A70;
  *(_OWORD *)algn_1002F17F0 = xmmword_100241A80;
  qword_1002F1800 = v0;
  return result;
}

double sub_1001E3A3C()
{
  if (qword_1002DD100 != -1) {
    swift_once(&qword_1002DD100, sub_1001E37D8);
  }
  uint64_t v0 = qword_1002EC260;
  qword_1002F1848 = 0LL;
  swift_weakInit(algn_1002F1850, 0LL);
  double result = 365.0;
  xmmword_1002F1820 = xmmword_100241A50;
  *(_OWORD *)algn_1002F1830 = xmmword_100241A60;
  qword_1002F1840 = v0;
  return result;
}

double sub_1001E3ABC()
{
  if (qword_1002DD100 != -1) {
    swift_once(&qword_1002DD100, sub_1001E37D8);
  }
  uint64_t v0 = qword_1002EC260;
  qword_1002F1888 = 0LL;
  swift_weakInit(&unk_1002F1890, 0LL);
  double result = 320.0;
  xmmword_1002F1860 = xmmword_10023F670;
  *(_OWORD *)algn_1002F1870 = xmmword_100241A00;
  qword_1002F1880 = v0;
  return result;
}

uint64_t sub_1001E3B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100072D48(a1, a2);
}

id sub_1001E3BA0(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  *(void *)&v4[OBJC_IVAR____TtC6Arcade8GridView_iconViews] = _swiftEmptyArrayStorage;
  uint64_t v10 = OBJC_IVAR____TtC6Arcade8GridView_layoutMetrics;
  uint64_t v11 = qword_1002DD108;
  uint64_t v12 = v4;
  if (v11 != -1) {
    swift_once(&qword_1002DD108, sub_1001E37F4);
  }
  __n128 v13 = &v12[v10];
  sub_100072D0C((uint64_t)&xmmword_1002F16E0, (uint64_t)&v22);
  uint64_t v14 = v23;
  *((void *)v13 + 5) = &type metadata for CGFloat;
  *((void *)v13 + 6) = &protocol witness table for CGFloat;
  *((void *)v13 + 2) = v14;
  *(_OWORD *)__n128 v13 = v22;
  *(_OWORD *)(v13 + 56) = v24;
  sub_10009F86C((uint64_t)&v22);
  sub_100072D0C((uint64_t)&xmmword_1002F16E0, (uint64_t)&v12[OBJC_IVAR____TtC6Arcade8GridView_config]);

  v21.id receiver = v12;
  v21.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v19 = v15;
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  [v19 setClipsToBounds:1];

  return v19;
}

id sub_1001E3D60(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6Arcade8GridView_iconViews;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6Arcade8GridView_iconViews];
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0) {
      uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC6Arcade8GridView_iconViews];
    }
    else {
      uint64_t v10 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade8GridView_iconViews]);
    id result = (id)_CocoaArrayWrapper.endIndex.getter(v10);
    uint64_t v5 = (uint64_t)result;
    if (!result) {
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    id result = (id)swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade8GridView_iconViews]);
    if (!v5) {
      goto LABEL_13;
    }
  }

  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }

  for (uint64_t i = 0LL; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001LL) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    }
    else {
      id v8 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v9 = v8;
    [v8 removeFromSuperview];
  }

uint64_t sub_1001E3F0C()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC6Arcade8GridView_config];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade8GridView_config], v13, 0LL, 0LL);
  sub_100072D0C(v1, (uint64_t)&v10);
  uint64_t v7 = &type metadata for CGFloat;
  id v8 = &protocol witness table for CGFloat;
  uint64_t v6 = v11;
  __int128 v5 = v10;
  __int128 v9 = v12;
  sub_10009F86C((uint64_t)&v10);
  uint64_t v2 = &v0[OBJC_IVAR____TtC6Arcade8GridView_layoutMetrics];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade8GridView_layoutMetrics], v4, 33LL, 0LL);
  sub_1001E4DE8(&v5, v2);
  objc_msgSend(v0, "setNeedsLayout", swift_endAccess(v4).n128_f64[0]);
  return sub_1001E4DB4((uint64_t)&v5);
}

void sub_1001E40FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6Arcade8GridView_iconViews;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade8GridView_iconViews);
  if (!((unint64_t)v3 >> 62))
  {
LABEL_3:
    uint64_t v4 = v1 + OBJC_IVAR____TtC6Arcade8GridView_config;
    swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade8GridView_config, v17, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(v4 + 48);
    if (!Strong)
    {
LABEL_22:
      sub_1001E3D60((uint64_t)_swiftEmptyArrayStorage);
      return;
    }

    uint64_t v6 = Strong;
    uint64_t v7 = *(void *)(v1 + v2);
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0) {
        uint64_t v16 = *(void *)(v1 + v2);
      }
      else {
        uint64_t v16 = v7 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v7);
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v16);
      if (v8) {
        goto LABEL_6;
      }
    }

    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(v7);
      if (v8)
      {
LABEL_6:
        if (v8 < 1)
        {
          __break(1u);
          return;
        }

        uint64_t v9 = 0LL;
        do
        {
          if ((v7 & 0xC000000000000001LL) != 0) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
          }
          else {
            id v10 = *(id *)(v7 + 8 * v9 + 32);
          }
          uint64_t v11 = v10;
          ++v9;
          uint64_t v12 = type metadata accessor for ArtworkView(0LL);
          unint64_t v13 = sub_10005D36C();
          ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v11, 1LL, v12, v13);
        }

        while (v8 != v9);
      }
    }

    swift_release(v6);
    swift_bridgeObjectRelease(v7);
    goto LABEL_22;
  }

  if (v3 < 0) {
    uint64_t v14 = v3;
  }
  else {
    uint64_t v14 = v3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v3);
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v14);
  swift_bridgeObjectRelease(v3);
  if (v15 >= 1) {
    goto LABEL_3;
  }
}

void sub_1001E4294(double a1, double a2)
{
  if (a1 > 0.0)
  {
    double a = a2;
    if (a2 > 0.0)
    {
      double b = a1;
      __int128 v5 = (char *)v2 + OBJC_IVAR____TtC6Arcade8GridView_config;
      swift_beginAccess((char *)v2 + OBJC_IVAR____TtC6Arcade8GridView_config, v37, 0LL, 0LL);
      uint64_t Strong = swift_weakLoadStrong(v5 + 48);
      if (Strong)
      {
        uint64_t v6 = *((void *)v5 + 5);
        if (!v6) {
          goto LABEL_19;
        }
        unint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8LL;
        uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        swift_bridgeObjectRetain(*((void *)v5 + 5));
        if (v8 < 1)
        {
LABEL_25:
          swift_release(Strong);
          swift_bridgeObjectRelease(v6);
        }

        else
        {
LABEL_7:
          uint64_t v9 = (_OWORD *)((char *)v2 + OBJC_IVAR____TtC6Arcade8GridView_layoutMetrics);
          swift_beginAccess((char *)v2 + OBJC_IVAR____TtC6Arcade8GridView_layoutMetrics, v36, 0LL, 0LL);
          sub_100158D28(v9, &v35);
          id v10 = sub_10015901C((uint64_t)&v35, (uint64_t)v2, 0.0, 0.0, b, a);
          uint64_t v11 = *((void *)v10 + 2);
          swift_bridgeObjectRelease(v10);
          sub_1001E4DB4((uint64_t)&v35);
          unint64_t v34 = (unint64_t)_swiftEmptyArrayStorage;
          CGAffineTransformMakeRotation(&v35, *((CGFloat *)v5 + 4));
          if (v11)
          {
            unint64_t v31 = v7;
            double a = v35.a;
            double b = v35.b;
            CGFloat c = v35.c;
            CGFloat d = v35.d;
            CGFloat tx = v35.tx;
            CGFloat ty = v35.ty;
            uint64_t v16 = type metadata accessor for ArtworkView(0LL);
            uint64_t v17 = v16;
            uint64_t v18 = 0LL;
            unint64_t v7 = v6 & 0xC000000000000001LL;
            uint64_t v32 = v6;
            uint64_t v30 = v6 + 32;
            while (1)
            {
              uint64_t v23 = (void *)static ArtworkView.staticIconArtworkView.getter(v16);
              v35.double a = a;
              v35.double b = b;
              v35.CGFloat c = c;
              v35.CGFloat d = d;
              v35.CGFloat tx = tx;
              v35.CGFloat ty = ty;
              [v23 setTransform:&v35];
              uint64_t v6 = v23;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
              unint64_t v25 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
              unint64_t v24 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
              if (v25 >= v24 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1LL);
              }
              uint64_t v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v6);
              uint64_t v2 = &v34;
              specialized Array._endMutation()(v26);
              unint64_t v27 = v18 % v8;
              if (v7)
              {
                uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v32);
                uint64_t v20 = v19;
              }

              else
              {
                if (v27 >= *(void *)(v31 + 16))
                {
                  __break(1u);
LABEL_21:
                  if (v6 >= 0) {
                    unint64_t v29 = v7;
                  }
                  else {
                    unint64_t v29 = v6;
                  }
                  swift_bridgeObjectRetain(v6);
                  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v29);
                  if (v8 < 1) {
                    goto LABEL_25;
                  }
                  goto LABEL_7;
                }

                uint64_t v20 = *(void *)(v30 + 8 * v27);
                swift_retain(v20);
              }

              ++v18;
              uint64_t v21 = Artwork.config(using:)(v19, *(double *)v5, *((double *)v5 + 1));
              unint64_t v22 = sub_10005D36C();
              ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v21, 2LL, 1LL, v6, v17, v22);

              swift_release(v20);
              swift_release(v21);
              if (v11 == v18)
              {
                swift_bridgeObjectRelease(v32);
                uint64_t v28 = (void *)v34;
                goto LABEL_18;
              }
            }
          }

          swift_bridgeObjectRelease(v6);
          uint64_t v28 = _swiftEmptyArrayStorage;
LABEL_18:
          sub_1001E3D60((uint64_t)v28);
LABEL_19:
          swift_release(Strong);
        }
      }
    }
  }

void sub_1001E4584()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  unint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v4 = *(char **)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  unint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v50.id receiver = (id)v1;
  v50.super_class = ObjectType;
  objc_msgSendSuper2(&v50, "layoutSubviews", v5);
  [(id)v1 bounds];
  CGFloat x = v53.origin.x;
  CGFloat y = v53.origin.y;
  CGFloat width = v53.size.width;
  CGFloat height = v53.size.height;
  if (!CGRectIsEmpty(v53))
  {
    uint64_t v12 = OBJC_IVAR____TtC6Arcade8GridView_iconViews;
    uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade8GridView_iconViews);
    if (*(void *)((v13 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      do
      {
        uint64_t v41 = v1;
        uint64_t v14 = *(void *)(v1 + v12);
        if ((unint64_t)v14 >> 62)
        {
          if (v14 < 0) {
            uint64_t v37 = *(void *)(v1 + v12);
          }
          else {
            uint64_t v37 = v14 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain(*(void *)(v1 + v12));
          uint64_t v1 = _CocoaArrayWrapper.endIndex.getter(v37);
        }

        else
        {
          uint64_t v1 = *(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10);
          swift_bridgeObjectRetain(v14);
        }

        uint64_t v39 = v4;
        unint64_t v40 = v3;
        uint64_t v38 = v7;
        if (v1)
        {
          v42[0] = (uint64_t)_swiftEmptyArrayStorage;
          sub_100026EDC(0LL, v1 & ~(v1 >> 63), 0);
          if (v1 < 0)
          {
            __break(1u);
            return;
          }

          uint64_t v15 = 0LL;
          uint64_t v16 = (void *)v42[0];
          v52[0] = 0x3FF0000000000000LL;
          v52[1] = 0LL;
          _OWORD v52[2] = 0LL;
          v52[3] = 0x3FF0000000000000LL;
          v52[4] = 0LL;
          v52[5] = 0LL;
          do
          {
            if ((v14 & 0xC000000000000001LL) != 0) {
              id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v14);
            }
            else {
              id v17 = *(id *)(v14 + 8 * v15 + 32);
            }
            uint64_t v18 = v17;
            objc_msgSend(v17, "transform", v38);
            v51[0] = v46;
            v51[1] = v47;
            v51[2] = v48;
            if ((static CGAffineTransform.== infix(_:_:)(v51, v52) & 1) != 0)
            {
              *((void *)&v47 + 1) = sub_100018D98();
              *(void *)&__int128 v48 = protocol witness table for UIView;
              *(void *)&__int128 v46 = v18;
            }

            else
            {
              UIView.withUntransformedFrame.getter(&v46);
            }

            v42[0] = (uint64_t)v16;
            unint64_t v20 = v16[2];
            unint64_t v19 = v16[3];
            if (v20 >= v19 >> 1) {
              sub_100026EDC((void *)(v19 > 1), v20 + 1, 1);
            }
            ++v15;
            uint64_t v21 = *((void *)&v47 + 1);
            uint64_t v22 = v48;
            uint64_t v23 = sub_1000862E8((uint64_t)&v46, *((uint64_t *)&v47 + 1));
            __n128 v24 = __chkstk_darwin(v23);
            uint64_t v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
            (*(void (**)(char *, __n128))(v27 + 16))(v26, v24);
            sub_1001AF3A0(v20, (uint64_t)v26, v42, v21, v22);
            _s6Arcade17PillOverlayLayoutVwxx_0(&v46);
            uint64_t v16 = (void *)v42[0];
          }

          while (v1 != v15);
          swift_bridgeObjectRelease(v14);
        }

        else
        {
          swift_bridgeObjectRelease(v14);
          uint64_t v16 = _swiftEmptyArrayStorage;
        }

        uint64_t v28 = v41;
        uint64_t v13 = v41 + OBJC_IVAR____TtC6Arcade8GridView_layoutMetrics;
        swift_beginAccess(v41 + OBJC_IVAR____TtC6Arcade8GridView_layoutMetrics, &v45, 0LL, 0LL);
        sub_100158D28((_OWORD *)v13, &v46);
        double v49 = v16;
        unint64_t v29 = sub_10015901C((uint64_t)&v46, v28, x, y, width, height);
        uint64_t v4 = v29;
        uint64_t v12 = v16[2];
        if (!v12)
        {
LABEL_27:
          swift_bridgeObjectRelease(v4);
          unint64_t v34 = v38;
          LayoutRect.init(representing:)(x, y, width, height);
          (*((void (**)(char *, unint64_t))v39 + 1))(v34, v40);
          sub_1001E4E24((uint64_t)&v46);
          return;
        }

        unint64_t v3 = 0LL;
        unint64_t v7 = (char *)*((void *)v29 + 2);
        uint64_t v30 = v29 + 56;
        uint64_t v31 = 4LL;
        while (1)
        {
          if (v3 >= v49[2]) {
            break;
          }
          sub_10001F010((uint64_t)&v49[v31], (uint64_t)v42);
          uint64_t v32 = v43;
          uint64_t v1 = v44;
          id v33 = sub_100005F8C(v42, v43);
          if (v3 >= *((void *)v4 + 2)) {
            goto LABEL_30;
          }
          uint64_t v13 = (uint64_t)v33;
          dispatch thunk of LayoutView.frame.setter(v32, v1);
          _s6Arcade17PillOverlayLayoutVwxx_0(v42);
LABEL_22:
          ++v3;
          v30 += 32;
          v31 += 5LL;
          if (v12 == v3) {
            goto LABEL_27;
          }
        }

        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        if (v13 < 0) {
          uint64_t v35 = v13;
        }
        else {
          uint64_t v35 = v13 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v13);
        uint64_t v36 = _CocoaArrayWrapper.endIndex.getter(v35);
        swift_bridgeObjectRelease(v13);
      }

      while (v36);
    }
  }

uint64_t sub_1001E4AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v6);
  *(void *)(a1 + 40) = a2;
  return swift_weakAssign(a1 + 48, a3);
}

uint64_t type metadata accessor for GridView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade8GridView);
}

uint64_t destroy for GridView.Config(uint64_t a1)
{
  return swift_weakDestroy(a1 + 48);
}

uint64_t initializeWithCopy for GridView.Config(uint64_t a1, uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = a2 + 48;
  swift_bridgeObjectRetain(v4);
  swift_weakCopyInit(a1 + 48, v5);
  return a1;
}

void *assignWithCopy for GridView.Config(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a2[5];
  a1[5] = v5;
  swift_bridgeObjectRetain(v5);
  __n128 v6 = swift_bridgeObjectRelease(v4);
  swift_weakCopyAssign(a1 + 6, a2 + 6, v6);
  return a1;
}

uint64_t initializeWithTake for GridView.Config(uint64_t a1, uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_weakTakeInit(a1 + 48, a2 + 48);
  return a1;
}

uint64_t assignWithTake for GridView.Config(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  __n128 v6 = swift_bridgeObjectRelease(v5);
  swift_weakTakeAssign(a1 + 48, a2 + 48, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for GridView.Config(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GridView.Config(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 56) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for GridView.Config()
{
  return &type metadata for GridView.Config;
}

uint64_t sub_1001E4DB4(uint64_t a1)
{
  return a1;
}

void *sub_1001E4DE8(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_1001E4E24(uint64_t a1)
{
  return a1;
}

void sub_1001E4E58()
{
  *(void *)&v0[OBJC_IVAR____TtC6Arcade8GridView_iconViews] = _swiftEmptyArrayStorage;
  uint64_t v1 = OBJC_IVAR____TtC6Arcade8GridView_layoutMetrics;
  if (qword_1002DD108 != -1) {
    swift_once(&qword_1002DD108, sub_1001E37F4);
  }
  uint64_t v2 = &v0[v1];
  sub_100072D0C((uint64_t)&xmmword_1002F16E0, (uint64_t)&v4);
  uint64_t v3 = v5;
  *((void *)v2 + 5) = &type metadata for CGFloat;
  *((void *)v2 + 6) = &protocol witness table for CGFloat;
  *((void *)v2 + 2) = v3;
  *(_OWORD *)uint64_t v2 = v4;
  *(_OWORD *)(v2 + 56) = v6;
  sub_10009F86C((uint64_t)&v4);
  sub_100072D0C((uint64_t)&xmmword_1002F16E0, (uint64_t)&v0[OBJC_IVAR____TtC6Arcade8GridView_config]);

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/GridView.swift",  21LL,  2LL,  165LL,  0);
  __break(1u);
}

id sub_1001E4F5C()
{
  uint64_t v1 = v0;
  v15.id receiver = v0;
  v15.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v15, "prepareForReuse");
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategoryView];
  uint64_t v3 = OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category;
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category);
  *(void *)(v2 + OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category) = 0LL;
  swift_release(v4);
  sub_1000245F8(v5, v6);
  v16.value.super.Class isa = 0LL;
  v16.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v16, v7);
  uint64_t v8 = OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategory;
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategory];
  *(void *)&v1[OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategory] = 0LL;
  swift_release(v9);
  uint64_t v10 = *(void *)&v1[v8];
  uint64_t v11 = *(void *)(v2 + v3);
  *(void *)(v2 + v3) = v10;
  swift_retain_n(v10, 2LL);
  swift_release(v11);
  sub_1000245F8(v12, v13);
  return objc_msgSend(v1, "setNeedsLayout", swift_release(v10).n128_f64[0]);
}

double sub_1001E517C()
{
  sub_10000AA2C(v0 + OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_itemLayoutContext);
  *(void *)&double result = swift_release(*(void *)(v0
                                               + OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategory)).n128_u64[0];
  return result;
}

uint64_t sub_1001E5200()
{
  return type metadata accessor for PrivacyCategoryCollectionViewCell(0LL);
}

uint64_t type metadata accessor for PrivacyCategoryCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002EC2D8;
  if (!qword_1002EC2D8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PrivacyCategoryCollectionViewCell);
  }
  return result;
}

void sub_1001E5244(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10000A9D8(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    void v4[2] = "\b";
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 472);
  }

char *sub_1001E52C8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategoryView;
  id v3 = objc_allocWithZone((Class)type metadata accessor for PrivacyCategoryView());
  uint64_t v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = &v4[OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_itemLayoutContext];
  uint64_t v6 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v5, 1LL, 1LL, v6);
  *(void *)&v4[OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategory] = 0LL;

  v13.id receiver = v4;
  v13.super_class = ObjectType;
  Swift::Bool v7 = (char *)objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v8 = [v7 contentView];
  [v8 setClipsToBounds:0];

  id v9 = [v7 contentView];
  objc_msgSend( v9,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  id v10 = [v7 contentView];
  id v11 = *(id *)&v7[OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategoryView];
  [v10 addSubview:v11];

  return v7;
}

void sub_1001E5468(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v32 = a3;
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::Bool v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for PageGrid(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = ShelfLayoutContext.contentPageGrid.getter(v12);
  double v14 = PageGrid.componentMeasuringSize(spanning:)(v13, 1.0);
  double v16 = v15;
  id v17 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v18 = v17(v11, v8);
  ShelfLayoutContext.shelf.getter(v18);
  uint64_t KeyPath = swift_getKeyPath(&unk_100241B80, v19);
  ReadOnlyLens.subscript.getter(KeyPath, v4);
  __n128 v21 = swift_release(KeyPath);
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v21);
  uint64_t v23 = v35;
  uint64_t v24 = ShelfLayoutContext.contentPageGrid.getter(v22);
  double v25 = PageGrid.containerWidth.getter(v24);
  uint64_t v26 = v17(v11, v8);
  uint64_t v27 = ShelfLayoutContext.traitCollection.getter(v26);
  uint64_t v28 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  unint64_t v29 = (char *)objc_allocWithZone(v28);
  uint64_t v30 = (double *)&v29[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_pageContainerSize];
  *uint64_t v30 = v25;
  v30[1] = 1.79769313e308;
  *(void *)&v29[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_traitCollection] = v27;
  v34.id receiver = v29;
  v34.super_class = v28;
  id v31 = objc_msgSendSuper2(&v34, "init");
  (*(void (**)(uint64_t, id, uint64_t, double, double))(*(void *)(a2 + 8) + 16LL))(v23, v31, v33, v14, v16);
}

uint64_t sub_1001E5660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v37 = a6;
  uint64_t v38 = a5;
  uint64_t v39 = a3;
  v33[1] = a2;
  uint64_t v10 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8(&qword_1002E5218);
  __chkstk_darwin(v14);
  double v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for ComponentPrefetchSizing(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v21);
  uint64_t v35 = a4;
  uint64_t v36 = v7;
  uint64_t v22 = v38;
  dispatch thunk of static ArtworkPrefetchingShelfComponentView.sizingForArtworkPrefetch(in:asPartOf:)( v13,  v39,  a4,  v38);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v39 = v17;
  if (v23(v16, 1LL, v17) == 1) {
    return sub_100006060((uint64_t)v16, &qword_1002E5218);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v39);
  uint64_t v25 = v35;
  uint64_t v27 = v36;
  uint64_t v26 = v37;
  uint64_t v28 = sub_1001E58E8(v34);
  __chkstk_darwin(v28);
  v33[-6] = v25;
  v33[-5] = v22;
  v33[-4] = v26;
  v33[-3] = v20;
  v33[-2] = v27;
  uint64_t v29 = (uint64_t)sub_10011F514( (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1001E5C64,  (uint64_t)&v33[-8],  (uint64_t)v28);
  swift_bridgeObjectRelease(v28);
  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0) {
      uint64_t v31 = v29;
    }
    else {
      uint64_t v31 = v29 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v29);
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v29);
    if (!v32) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }

  if (*(void *)((v29 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
LABEL_5:
  }
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v29);
LABEL_6:
  __n128 v30 = swift_bridgeObjectRelease(v29);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v18 + 8))(v20, v39, v30);
}

uint64_t sub_1001E58BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = Shelf.isHorizontal.getter();
  *a1 = result & 1;
  return result;
}

void *sub_1001E58E8(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v35 - v10;
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (void *)((char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t KeyPath = swift_getKeyPath(&unk_100241B20, v16);
  v35[1] = a1;
  ItemLayoutContext.subscript.getter(v15);
  swift_release(KeyPath);
  uint64_t v19 = swift_getKeyPath(&unk_100241B50, v18);
  ReadOnlyLens.subscript.getter(v19, v12);
  __n128 v20 = swift_release(v19);
  (*(void (**)(void *, uint64_t, __n128))(v13 + 8))(v15, v12, v20);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Shelf.ContentType.todayCard(_:), v5);
  unint64_t v21 = sub_10014E070();
  LOBYTE(a1) = dispatch thunk of static Equatable.== infix(_:_:)(v11, v8, v5, v21);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22(v8, v5);
  v22(v11, v5);
  if ((a1 & 1) != 0) {
    return _swiftEmptyArrayStorage;
  }
  ItemLayoutContext.item.getter(v23);
  uint64_t v24 = v37;
  ReadOnlyLens.value.getter(v40, v37);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v24);
  uint64_t v25 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v26 = sub_1000031E8(&qword_1002E5228);
  if ((swift_dynamicCast(v38, v40, v25, v26, 6LL) & 1) == 0)
  {
    uint64_t v39 = 0LL;
    memset(v38, 0, sizeof(v38));
    sub_100006060((uint64_t)v38, &qword_1002E5230);
    return _swiftEmptyArrayStorage;
  }

  sub_100009D90(v38, (uint64_t)v41);
  uint64_t v27 = v42;
  uint64_t v28 = v43;
  sub_100005F8C(v41, v42);
  uint64_t v29 = dispatch thunk of ArtworkModelProtocol.artwork.getter(v27, v28);
  if (!v29)
  {
    _s6Arcade17PillOverlayLayoutVwxx_0(v41);
    return _swiftEmptyArrayStorage;
  }

  uint64_t v30 = v29;
  uint64_t v31 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v32 = swift_allocObject(v31, 40LL, 7LL);
  *(_OWORD *)(v32 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233570;
  *(void *)(v32 + 32) = v30;
  v40[0] = v32;
  specialized Array._endMutation()(v32);
  uint64_t v33 = v40[0];
  _s6Arcade17PillOverlayLayoutVwxx_0(v41);
  return (void *)v33;
}

uint64_t sub_1001E5BC8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t *a3@<X8>)
{
  double v6 = ComponentPrefetchSizing.size.getter();
  double v8 = v7;
  uint64_t v9 = ComponentPrefetchSizing.contentMode.getter();
  char v10 = (*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 24LL))(a1);
  uint64_t result = Artwork.config(_:mode:prefersLayeredImage:)(v9, v10 & 1, v6, v8);
  *a3 = result;
  return result;
}

uint64_t sub_1001E5C64@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001E5BC8(*(void *)(v1 + 16), *(void *)(v1 + 32), a1);
}

uint64_t sub_1001E5C90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = Shelf.isHorizontal.getter();
  *a1 = result & 1;
  return result;
}

void sub_1001E5CBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[qword_1002EDBC8];
  uint64_t v3 = type metadata accessor for ArticlePagePresenter(0LL);
  uint64_t v4 = sub_100003B6C( &qword_1002EDA80,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePagePresenter,  (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  dispatch thunk of ShelfPresenter.sectionCount.getter(v3, v4);
  uint64_t v20 = *(void *)(v2 + 24);
  swift_retain(v20);
  uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002EC740);
  unint64_t v6 = sub_1001E6E70();
  StateStore.performTransaction<A>(_:)(sub_1001E6F70, v2, v5, (char *)&type metadata for () + 8, v6);
  id v7 = objc_msgSend(v0, "collectionView", swift_release(v20).n128_f64[0]);
  [v7 reloadData];

  uint64_t v8 = sub_100003B6C( &qword_1002EC770,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
  uint64_t v9 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v3, v8);
  if (v9)
  {
    uint64_t v11 = v9;
    PendingPageRender.isLayoutPending.setter(1LL);
    *(void *)&double v10 = swift_release(v11).n128_u64[0];
  }

  id v12 = objc_msgSend(v1, "collectionViewLayout", v10);
  uint64_t v13 = type metadata accessor for CollectionViewTableFlowLayout();
  uint64_t v14 = swift_dynamicCastClass(v12, v13);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = swift_allocObject(&unk_10028E6A8, 24LL, 7LL);
    swift_unknownObjectWeakInit(v16 + 16, v1);
    uint64_t v17 = (double (**)(uint64_t))(v15
                                          + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver);
    uint64_t v18 = *(void *)(v15 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver);
    uint64_t v19 = *(void *)(v15 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver + 8);
    *uint64_t v17 = sub_1001E6F40;
    v17[1] = (double (*)(uint64_t))v16;
    sub_10000D3D8(v18, v19);
  }
}

void sub_1001E5E94()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[qword_1002EDBC8];
  uint64_t v3 = type metadata accessor for MSOPagePresenter(0LL);
  uint64_t v4 = sub_100003B6C( &qword_1002EC758,  (uint64_t (*)(uint64_t))&type metadata accessor for MSOPagePresenter,  (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  dispatch thunk of ShelfPresenter.sectionCount.getter(v3, v4);
  uint64_t v20 = *(void *)(v2 + 24);
  swift_retain(v20);
  uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002EC740);
  unint64_t v6 = sub_1001E6E70();
  StateStore.performTransaction<A>(_:)(sub_1000D58BC, v2, v5, (char *)&type metadata for () + 8, v6);
  id v7 = objc_msgSend(v0, "collectionView", swift_release(v20).n128_f64[0]);
  [v7 reloadData];

  uint64_t v8 = sub_100003B6C( (unint64_t *)&unk_1002EC760,  (uint64_t (*)(uint64_t))&type metadata accessor for MSOPagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
  uint64_t v9 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v3, v8);
  if (v9)
  {
    uint64_t v11 = v9;
    PendingPageRender.isLayoutPending.setter(1LL);
    *(void *)&double v10 = swift_release(v11).n128_u64[0];
  }

  id v12 = objc_msgSend(v1, "collectionViewLayout", v10);
  uint64_t v13 = type metadata accessor for CollectionViewTableFlowLayout();
  uint64_t v14 = swift_dynamicCastClass(v12, v13);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = swift_allocObject(&unk_10028E680, 24LL, 7LL);
    swift_unknownObjectWeakInit(v16 + 16, v1);
    uint64_t v17 = (double (**)(uint64_t))(v15
                                          + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver);
    uint64_t v18 = *(void *)(v15 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver);
    uint64_t v19 = *(void *)(v15 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver + 8);
    *uint64_t v17 = sub_1001E6F10;
    v17[1] = (double (*)(uint64_t))v16;
    sub_10000D3D8(v18, v19);
  }
}

void sub_1001E606C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[qword_1002EDBC8];
  uint64_t v3 = type metadata accessor for GenericPagePresenter(0LL);
  uint64_t v4 = sub_100003B6C( &qword_1002EA200,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  dispatch thunk of ShelfPresenter.sectionCount.getter(v3, v4);
  uint64_t v20 = *(void *)(v2 + 24);
  swift_retain(v20);
  uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002EC740);
  unint64_t v6 = sub_1001E6E70();
  StateStore.performTransaction<A>(_:)(sub_1001E6F70, v2, v5, (char *)&type metadata for () + 8, v6);
  id v7 = objc_msgSend(v0, "collectionView", swift_release(v20).n128_f64[0]);
  [v7 reloadData];

  uint64_t v8 = sub_100003B6C( &qword_1002EC750,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
  uint64_t v9 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v3, v8);
  if (v9)
  {
    uint64_t v11 = v9;
    PendingPageRender.isLayoutPending.setter(1LL);
    *(void *)&double v10 = swift_release(v11).n128_u64[0];
  }

  id v12 = objc_msgSend(v1, "collectionViewLayout", v10);
  uint64_t v13 = type metadata accessor for CollectionViewTableFlowLayout();
  uint64_t v14 = swift_dynamicCastClass(v12, v13);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = swift_allocObject(&unk_10028E658, 24LL, 7LL);
    swift_unknownObjectWeakInit(v16 + 16, v1);
    uint64_t v17 = (double (**)(uint64_t))(v15
                                          + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver);
    uint64_t v18 = *(void *)(v15 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver);
    uint64_t v19 = *(void *)(v15 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver + 8);
    *uint64_t v17 = sub_1001E6EE0;
    v17[1] = (double (*)(uint64_t))v16;
    sub_10000D3D8(v18, v19);
  }
}

uint64_t sub_1001E6244()
{
  uint64_t v0 = type metadata accessor for TitleHeaderView.Style(0LL);
  sub_10000FF90(v0, qword_1002EC2F0);
  uint64_t v1 = sub_1000061F4(v0, (uint64_t)qword_1002EC2F0);
  if (qword_1002DCEE8 != -1) {
    swift_once(&qword_1002DCEE8, sub_1001692DC);
  }
  uint64_t v2 = sub_1000061F4(v0, (uint64_t)qword_1002F10C0);
  return sub_10000D57C(v2, v1);
}

void sub_1001E62C4(void *a1)
{
  id v1 = a1;
  sub_1000D7CAC();
}

void sub_1001E62F8()
{
  v7.id receiver = v0;
  v7.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v7, "viewDidLoad");
  id v1 = [v0 collectionView];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = type metadata accessor for TitleHeaderView(0LL);
    ObjCClassFromMetadatdouble a = swift_getObjCClassFromMetadata(v3);
    NSString v5 = String._bridgeToObjectiveC()();
    NSString v6 = String._bridgeToObjectiveC()();
    [v2 registerClass:ObjCClassFromMetadata forSupplementaryViewOfKind:v5 withReuseIdentifier:v6];
  }

void sub_1001E63D8(void *a1)
{
  id v1 = a1;
  sub_1001E62F8();
}

id sub_1001E640C()
{
  uint64_t v1 = sub_1000031E8((uint64_t *)&unk_1002DF650);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for IndexPath(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  objc_super v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001E606C();
  if (**(_UNKNOWN *****)&v0[qword_1002EDBC8] != &off_1002E2DD0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1LL, 1LL, v4);
    return (id)sub_10000D394((uint64_t)v3);
  }

  sub_1000B69E4((uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  id result = [v0 collectionView];
  if (result)
  {
    uint64_t v9 = result;
    double v10 = (void *)IndexPath._bridgeToObjectiveC()();
    [v9 scrollToItemAtIndexPath:v10 atScrollPosition:1 animated:1];

    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1001E6598()
{
  return 0LL;
}

double sub_1001E65A0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  uint64_t v10 = dispatch thunk of BaseGenericPagePresenter.pageTitle.getter(v9);
  if (v11)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    [v6 frame];
    double v15 = v14;
    double v17 = v16;
    if (qword_1002DD140 != -1) {
      swift_once(&qword_1002DD140, sub_1001E6244);
    }
    uint64_t v18 = type metadata accessor for TitleHeaderView.Style(0LL);
    uint64_t v19 = sub_1000061F4(v18, (uint64_t)qword_1002EC2F0);
    [v8 pageMarginInsets];
    sub_100204774(0LL, 0LL, 0LL, v12, v13, 0LL, 0LL, 0LL, v15, v17, 0.0, 0.0, v20, v21, v22, v23, 2LL, v19, v8);
    double v25 = v24;

    swift_bridgeObjectRelease(v13);
  }

  else
  {

    double v25 = 0.0;
  }

  return v25;
}

id sub_1001E66FC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  uint64_t v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  id v16 = a3;
  id v17 = a1;
  id v18 = sub_1000D8934(v16, v13, v15);

  __n128 v19 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v19);
  return v18;
}

void sub_1001E67E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for TitleHeaderView.Style(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a3 == 0xD000000000000035LL && a4 == 0x80000001002490B0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, 0xD000000000000035LL, 0x80000001002490B0LL, 0LL) & 1) != 0)
  {
    uint64_t v14 = type metadata accessor for TitleHeaderView(0LL);
    uint64_t v15 = (void *)swift_dynamicCastClassUnconditional(a2, v14, 0LL, 0LL, 0LL);
    id v16 = a2;
    [v4 pageMarginInsets];
    objc_msgSend(v15, "setLayoutMargins:");
    id v17 = *(void **)((char *)v15 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
    [v17 setNumberOfLines:2];
    [v17 setAllowsDefaultTighteningForTruncation:1];
    id v18 = v17;
    dispatch thunk of BaseGenericPagePresenter.pageTitle.getter(v19);
    if (v20)
    {
      uint64_t v22 = v20;
      NSString v23 = String._bridgeToObjectiveC()();
      *(void *)&double v21 = swift_bridgeObjectRelease(v22).n128_u64[0];
    }

    else
    {
      NSString v23 = 0LL;
    }

    objc_msgSend(v18, "setText:", v23, v21);

    [v5 pageMarginInsets];
    double v24 = (void *)((char *)v15 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_separatorInset);
    *double v24 = v25;
    v24[1] = v26;
    v24[2] = v27;
    void v24[3] = v28;
    [v15 setNeedsLayout];
    if (qword_1002DD140 != -1) {
      swift_once(&qword_1002DD140, sub_1001E6244);
    }
    uint64_t v29 = sub_1000061F4(v11, (uint64_t)qword_1002EC2F0);
    sub_10000D57C(v29, (uint64_t)v13);
    (*(void (**)(char *))((swift_isaMask & *v15) + 0x190LL))(v13);
  }

  else
  {
    NSString v30 = String._bridgeToObjectiveC()();
    id v16 = (id)IndexPath._bridgeToObjectiveC()();
    v31.id receiver = v4;
    v31.super_class = ObjectType;
    objc_msgSendSuper2( &v31,  "collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:",  a1,  a2,  v30,  v16);
  }
}

uint64_t sub_1001E6A88(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for IndexPath(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  uint64_t v17 = v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  id v18 = a3;
  id v19 = a4;
  id v20 = a1;
  sub_1001E67E4((uint64_t)v18, v19, v15, v17);

  __n128 v21 = swift_bridgeObjectRelease(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
}

uint64_t type metadata accessor for PrivacyDetailViewController(uint64_t a1)
{
  uint64_t result = qword_1002EC330;
  if (!qword_1002EC330) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PrivacyDetailViewController);
  }
  return result;
}

uint64_t sub_1001E6BC0()
{
  return type metadata accessor for PrivacyDetailViewController(0LL);
}

uint64_t sub_1001E6BD0()
{
  return sub_100003B6C( &qword_1002EC728,  type metadata accessor for PrivacyDetailViewController,  (uint64_t)&unk_100241BF8);
}

uint64_t sub_1001E6BFC()
{
  return sub_100003B6C( &qword_1002EC730,  type metadata accessor for PrivacyDetailViewController,  (uint64_t)&unk_100241BDC);
}

uint64_t sub_1001E6C28()
{
  return sub_100003B6C( &qword_1002EC738,  type metadata accessor for PrivacyDetailViewController,  (uint64_t)&unk_100242EA8);
}

double sub_1001E6C54( uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  uint64_t v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    uint64_t v11 = sub_1000B93C0();
    a3();

    swift_bridgeObjectRelease(v11);
  }

  swift_beginAccess(v8, &v19, 0LL, 0LL);
  uint64_t v12 = swift_unknownObjectWeakLoadStrong(v8);
  if (v12)
  {
    uint64_t v14 = (void *)v12;
    uint64_t v15 = *(void *)(v12 + qword_1002EDBC0);
    swift_retain(v15);

    uint64_t v16 = a4(0LL);
    uint64_t v17 = sub_100003B6C(a5, a4, (uint64_t)&protocol conformance descriptor for BasePresenter);
    uint64_t v18 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v16, v17);
    *(void *)&double result = swift_release(v15).n128_u64[0];
    if (v18)
    {
      PendingPageRender.isLayoutPending.setter(0LL);
      *(void *)&double result = swift_release(v18).n128_u64[0];
    }
  }

  return result;
}

void sub_1001E6D70()
{
  id v1 = [v0 collectionView];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 panGestureRecognizer];

    uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
    uint64_t v5 = swift_allocObject(v4, 40LL, 7LL);
    *(_OWORD *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233570;
    id v6 = [objc_allocWithZone(NSNumber) initWithInteger:1];
    *(void *)(v5 + 32) = v6;
    specialized Array._endMutation()(v6);
    sub_10000870C();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "setAllowedTouchTypes:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);
  }

unint64_t sub_1001E6E70()
{
  unint64_t result = qword_1002EA020;
  if (!qword_1002EA020)
  {
    uint64_t v1 = sub_100003274((uint64_t *)&unk_1002EC740);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for TransientStateStore<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002EA020);
  }

  return result;
}

uint64_t sub_1001E6EBC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

double sub_1001E6EE0(uint64_t a1)
{
  return sub_1001E6C54( a1,  v1,  (void (*)(void))sub_1002025D4,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  &qword_1002EC750);
}

double sub_1001E6F10(uint64_t a1)
{
  return sub_1001E6C54( a1,  v1,  (void (*)(void))sub_1002025C0,  (uint64_t (*)(uint64_t))&type metadata accessor for MSOPagePresenter,  (unint64_t *)&unk_1002EC760);
}

double sub_1001E6F40(uint64_t a1)
{
  return sub_1001E6C54( a1,  v1,  (void (*)(void))sub_1002025AC,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePagePresenter,  &qword_1002EC770);
}

void sub_1001E6F70()
{
}

unint64_t sub_1001E6F90()
{
  unint64_t result = qword_1002EC778;
  if (!qword_1002EC778)
  {
    uint64_t v1 = type metadata accessor for ActionCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100241C78, v1);
    atomic_store(result, (unint64_t *)&qword_1002EC778);
  }

  return result;
}

double sub_1001E6FDC()
{
  uint64_t v0 = type metadata accessor for PageGrid(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = ShelfLayoutContext.contentPageGrid.getter(v4);
  double v6 = PageGrid.componentMeasuringSize(spanning:)(v5, 1.0);
  double v8 = v7;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1002DC998 != -1) {
    swift_once(&qword_1002DC998, sub_1000A1AA4);
  }
  uint64_t v9 = type metadata accessor for ActionLayout.Metrics(0LL);
  uint64_t v10 = sub_1000061F4(v9, (uint64_t)qword_1002E21F0);
  uint64_t v11 = ShelfLayoutContext.traitEnvironment.getter(v10);
  static ActionLayout.estimatedMeasurements(fitting:using:in:)(v10, v11, v6, v8);
  double v13 = v12;
  swift_unknownObjectRelease(v11);
  uint64_t v15 = (void *)ShelfLayoutContext.traitCollection.getter(v14);
  double v16 = static Separator.thickness(compatibleWith:)();

  return v13 + v16;
}

double sub_1001E7104(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v42 = type metadata accessor for PageGrid(0LL);
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  id v3 = (char **)((char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = sub_1000031E8(&qword_1002EB230);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  double v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char **)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  double v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v46, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t KeyPath = swift_getKeyPath(&unk_100241CF8, v17);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  uint64_t v20 = swift_getKeyPath(&unk_100241D28, v19);
  ReadOnlyLens.subscript.getter(v20, v8);
  __n128 v21 = swift_release(v20);
  (*(void (**)(void *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
  __n128 v22 = swift_bridgeObjectRelease(v45);
  ItemLayoutContext.state.getter(v22);
  uint64_t v23 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v24 = swift_dynamicCastClassUnconditional(v38, v23, 0LL, 0LL, 0LL);
  uint64_t v25 = (uint64_t)v37;
  ItemLayoutContext.componentLayoutOptions.getter(v24);
  uint64_t v27 = swift_getKeyPath(&unk_100241D58, v26);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v27);
  double v29 = PageGrid.componentMeasuringSize(spanning:)(v28, 1.0);
  double v31 = v30;
  (*(void (**)(void *, uint64_t))(v40 + 8))(v3, v42);
  uint64_t v32 = (char *)sub_100147A04();
  sub_100033244((uint64_t)v46, (uint64_t)v7, v29, v31, v25, v32);
  double v34 = v33;
  __n128 v35 = swift_unknownObjectRelease(v32);
  (*(void (**)(uint64_t, uint64_t, __n128))(v43 + 8))(v25, v44, v35);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v41);
  _s6Arcade17PillOverlayLayoutVwxx_0(v46);
  return v34;
}

double sub_1001E7408( uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1000AAD88(a2, a3, *a1, a8);
}

uint64_t sub_1001E7414(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001E7630(*a1, a2, a3);
}

uint64_t sub_1001E741C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC9C8 != -1) {
    swift_once(&qword_1002DC9C8, sub_1000A97D8);
  }
  uint64_t v8 = type metadata accessor for StaticDimension(0LL);
  uint64_t v9 = sub_1000061F4(v8, (uint64_t)qword_1002EFD40);
  static Dimensions.defaultRoundingRule.getter(v9);
  double v10 = AnyDimension.value(in:rounded:)(a3, v7, v8, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(void *)&v10;
}

uint64_t sub_1001E7510(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC9C0 != -1) {
    swift_once(&qword_1002DC9C0, sub_1000A97C8);
  }
  uint64_t v7 = type metadata accessor for StaticDimension(0LL);
  uint64_t v8 = sub_1000061F4(v7, (uint64_t)qword_1002EFD28);
  static Dimensions.defaultRoundingRule.getter(v8);
  double v9 = AnyDimension.value(in:rounded:)(a2, v6, v7, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return *(void *)&v9;
}

uint64_t sub_1001E7604()
{
  return sub_100003B6C( (unint64_t *)&unk_1002EC780,  (uint64_t (*)(uint64_t))&type metadata accessor for TitledButtonStack,  (uint64_t)&protocol conformance descriptor for TitledButtonStack);
}

uint64_t sub_1001E7630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v27 = type metadata accessor for IndexSet(0LL);
  __chkstk_darwin(v27);
  v26[0] = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  double v10 = (char *)v26 - v9;
  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002E27C8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v14 = sub_1000A9E18();
  v26[1] = a1;
  uint64_t result = TitledButtonStack.buttons.getter(v14);
  uint64_t v16 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0) {
      result &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(result);
    uint64_t v17 = result;
    if (!result) {
      goto LABEL_12;
    }
  }

  else
  {
    uint64_t v17 = *(void *)((result & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v17)
    {
LABEL_12:
      __n128 v20 = swift_bridgeObjectRelease(v16);
      uint64_t v21 = TitledButtonStack.regularLineBreaks.getter(v20);
      uint64_t v22 = v26[0];
      TitledButtonStack.compactLineBreaks.getter(v21);
      uint64_t v23 = sub_1000031E8(&qword_1002DE250);
      Conditional<>.init(regularValue:compactValue:)(v10, v22, v23, v27);
      uint64_t v24 = sub_1000031E8(&qword_1002E27A8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v13, 0LL, 1LL, v24);
      uint64_t v25 = (uint64_t)&v3[OBJC_IVAR____TtC6Arcade35TitledButtonStackCollectionViewCell_lineBreaks];
      swift_beginAccess(&v4[OBJC_IVAR____TtC6Arcade35TitledButtonStackCollectionViewCell_lineBreaks], v28, 33LL, 0LL);
      sub_1001E7864((uint64_t)v13, v25);
      return (uint64_t)objc_msgSend(v4, "setNeedsLayout", swift_endAccess(v28).n128_f64[0]);
    }
  }

  if (v17 >= 1)
  {
    for (uint64_t i = 0LL; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001LL) != 0)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v16);
      }

      else
      {
        uint64_t v19 = *(void *)(v16 + 8 * i + 32);
        swift_retain(v19);
      }

      sub_1000A9FB8(v19, a3);
      swift_release(v19);
    }

    goto LABEL_12;
  }

  __break(1u);
  return result;
}

uint64_t sub_1001E7864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E27C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

double sub_1001E78AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v83 = a6;
  int v79 = a7;
  uint64_t v81 = a4;
  uint64_t v82 = a5;
  uint64_t v80 = a3;
  uint64_t v9 = type metadata accessor for OSLogger(0LL);
  uint64_t v73 = *(void *)(v9 - 8);
  uint64_t v74 = v9;
  __chkstk_darwin(v9);
  double v72 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for ArcadeState(0LL);
  uint64_t v70 = *(void *)(v11 - 8);
  uint64_t v71 = v11;
  __n128 v12 = __chkstk_darwin(v11);
  CGFloat v69 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for OfferType(0LL, v12);
  uint64_t v78 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v77 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v76 = (char *)&v64 - v17;
  uint64_t v75 = sub_1000031E8((uint64_t *)&unk_1002EA100);
  uint64_t v18 = *(void *)(v75 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v75);
  __n128 v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_1000031E8(&qword_1002EA110);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  *(void *)&double v24 = __chkstk_darwin(v21).n128_u64[0];
  uint64_t v25 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1 && a2)
  {
    uint64_t v26 = a1;
    uint64_t v66 = a2;
    uint64_t v27 = type metadata accessor for ArcadeSubscriptionManager(0LL);
    swift_retain(v26);
    id v67 = (id)inject(_:from:)(v27, v83);
    uint64_t v28 = ArcadeSubscriptionManager.removeSubscriptionStateActions(for:)(v84);
    uint64_t v68 = v26;
    if ((OfferDisplayProperties.isArcadeOffer.getter(v28) & 1) != 0)
    {
      uint64_t v30 = swift_allocObject(&unk_10028E808, 24LL, 7LL);
      uint64_t v65 = v30;
      swift_unknownObjectWeakInit(v30 + 16, v84);
      uint64_t v31 = swift_allocObject(&unk_10028E830, 24LL, 7LL);
      uint64_t v64 = v31;
      swift_weakInit(v31 + 16, v83);
      sub_10001027C(v81, (uint64_t)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL), &qword_1002EA110);
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))( (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v82,  v75);
      uint64_t v32 = *(unsigned __int8 *)(v22 + 80);
      uint64_t v33 = (v32 + 56) & ~v32;
      uint64_t v34 = *(unsigned __int8 *)(v18 + 80);
      uint64_t v35 = (v23 + v34 + v33) & ~v34;
      uint64_t v36 = v35 + v19;
      uint64_t v37 = (char *)swift_allocObject(&unk_10028E858, v36 + 1, v32 | v34 | 7);
      *((void *)v37 + 2) = v31;
      *((void *)v37 + 3) = v30;
      uint64_t v38 = v68;
      uint64_t v39 = v66;
      *((void *)v37 + swift_weakDestroy(v0 + 4) = v68;
      *((void *)v37 + 5) = v39;
      uint64_t v40 = (uint64_t)&v37[v33];
      uint64_t v41 = v80;
      *((void *)v37 + 6) = v80;
      sub_10003FBFC((uint64_t)v25, v40, &qword_1002EA110);
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v37[v35], v20, v75);
      v37[v36] = v79 & 1;
      swift_retain(v41);
      swift_retain(v38);
      uint64_t v42 = v64;
      swift_retain(v64);
      uint64_t v43 = v65;
      swift_retain(v65);
      swift_retain(v39);
      ArcadeSubscriptionManager.addSubscriptionStateObserver(_:action:)(v84, sub_1001E94D8, v37);
      swift_release(v43);
      swift_release(v42);
      __n128 v29 = swift_release(v37);
    }

    uint64_t v44 = v76;
    uint64_t v45 = v68;
    OfferDisplayProperties.offerType.getter(v29);
    __int128 v47 = v77;
    uint64_t v46 = v78;
    (*(void (**)(char *, void, uint64_t))(v78 + 104))(v77, enum case for OfferType.inAppPurchase(_:), v14);
    uint64_t v48 = sub_100003B6C( &qword_1002EC7E0,  (uint64_t (*)(uint64_t))&type metadata accessor for OfferType,  (uint64_t)&protocol conformance descriptor for OfferType);
    char v49 = dispatch thunk of static Equatable.== infix(_:_:)(v44, v47, v14, v48);
    objc_super v50 = *(void (**)(char *, uint64_t))(v46 + 8);
    v50(v47, v14);
    uint64_t v51 = ((uint64_t (*)(char *, uint64_t))v50)(v44, v14);
    if ((v49 & 1) != 0)
    {
      if (qword_1002DC370 != -1) {
        swift_once(&qword_1002DC370, sub_100018F58);
      }
      uint64_t v52 = v74;
      uint64_t v53 = sub_1000061F4(v74, (uint64_t)qword_1002EE528);
      uint64_t v55 = v72;
      uint64_t v54 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, v53, v52);
      uint64_t v56 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v57 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v58 = swift_allocObject( v56,  ((*(unsigned __int8 *)(v57 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))
            + 2LL * *(void *)(v57 + 72),
              *(unsigned __int8 *)(v57 + 80) | 7LL);
      *(_OWORD *)(v58 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
      LogMessage.init(stringLiteral:)(0xD00000000000004DLL, 0x800000010024E6D0LL);
      v85[3] = type metadata accessor for AdamId(0LL);
      sub_100009D54(v85);
      OfferDisplayProperties.adamId.getter();
      static LogMessage.traceableSensitive(_:)(v85);
      sub_100006060((uint64_t)v85, (uint64_t *)&unk_1002DF680);
      Logger.error(_:)(v58, v52, &protocol witness table for OSLogger);
      swift_release(v45);
      swift_bridgeObjectRelease(v58);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v52);
    }

    else
    {
      uint64_t v60 = v69;
      id v61 = v67;
      uint64_t v62 = ArcadeSubscriptionManager.subscriptionState.getter(v51);
      char v63 = ArcadeState.isSubscribed.getter(v62);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v60, v71);
      sub_1001E7FD4(v63 & 1, v45, v66, v80, v81, v82, v83, v79 & 1);

      *(void *)&double result = swift_release(v45).n128_u64[0];
    }
  }

  else
  {
    objc_msgSend(v84, "setHidden:", 1, v24);
  }

  return result;
}

void (*sub_1001E7EA0(uint64_t *a1))(uint64_t a1, char a2, double a3)
{
  a1[2] = (uint64_t)v1;
  id v3 = [v1 accessibilityLabel];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    uint64_t v7 = v6;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v7 = 0LL;
  }

  *a1 = v5;
  a1[1] = v7;
  return sub_1001E7F14;
}

void sub_1001E7F14(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    if (v4)
    {
      swift_bridgeObjectRetain(*(void *)(a1 + 8));
      id v5 = String._bridgeToObjectiveC()();
      *(void *)&a3 = swift_bridgeObjectRelease(v4).n128_u64[0];
    }

    else
    {
      id v5 = 0LL;
    }

    objc_msgSend(*(id *)(a1 + 16), "setAccessibilityLabel:", v5, a3);
    swift_bridgeObjectRelease(v4);
  }

  else if (v4)
  {
    id v5 = String._bridgeToObjectiveC()();
    objc_msgSend(*(id *)(a1 + 16), "setAccessibilityLabel:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);
  }

  else
  {
    id v5 = 0LL;
    objc_msgSend(*(id *)(a1 + 16), "setAccessibilityLabel:", 0, a3);
  }
}

uint64_t sub_1001E7FD4( char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v86 = a7;
  int v81 = a8;
  uint64_t v88 = a6;
  uint64_t v83 = a5;
  uint64_t v80 = a4;
  uint64_t v85 = a3;
  uint64_t v10 = sub_1000031E8(&qword_1002EA110);
  __chkstk_darwin(v10);
  uint64_t v82 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002EA100);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1000031E8(&qword_1002EC7E8);
  __n128 v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for OfferType(0LL, v17);
  uint64_t v21 = *(void *)(v20 - 8);
  __n128 v22 = __chkstk_darwin(v20);
  double v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = a2;
  OfferDisplayProperties.offerType.getter(v22);
  uint64_t v25 = *(int *)(v16 + 48);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v19, v24, v20);
  char v26 = a1;
  v19[v25] = a1;
  uint64_t v27 = v20;
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v19, v20);
  if (v28 != enum case for OfferType.app(_:))
  {
    uint64_t v77 = v13;
    uint64_t v78 = v21;
    uint64_t v46 = v12;
    uint64_t v47 = v88;
    int v79 = v19;
    if (v28 == enum case for OfferType.arcade(_:))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v15, v88, v12);
      sub_10001027C(v83, v82, &qword_1002EA110);
      uint64_t v48 = type metadata accessor for ArcadeSubscriptionOfferButtonPresenter(0LL);
      swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
      uint64_t v76 = v27;
      swift_retain(v80);
      uint64_t v49 = v86;
      swift_retain(v86);
      swift_retain(v84);
      __n128 v50 = swift_retain(v85);
      uint64_t v38 = ArcadeSubscriptionOfferButtonPresenter.init(displayProperties:buttonAction:subscribedButtonAction:subtitlePosition:asPartOf:alignment:)(v50);
      uint64_t v51 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
      id v52 = [v51 areAnimationsEnabled];
      [v51 setAnimationsEnabled:0];
      uint64_t v53 = OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled;
      uint64_t v45 = v87;
      v87[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] = 0;
      [v45 setHidden:0];
      uint64_t v54 = sub_100003B6C( &qword_1002EC7F8,  (uint64_t (*)(uint64_t))type metadata accessor for OfferButton,  (uint64_t)&unk_100241DE0);
      uint64_t v55 = swift_unknownObjectRetain(v45);
      ArcadeSubscriptionOfferButtonPresenter.view.setter(v55, v54);
      uint64_t v29 = v49;
      [v51 setAnimationsEnabled:v52];
      v45[v53] = 1;
      sub_100003B6C( &qword_1002EC808,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSubscriptionOfferButtonPresenter,  (uint64_t)&protocol conformance descriptor for ArcadeSubscriptionOfferButtonPresenter);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v76);
      goto LABEL_5;
    }

    if (v28 != enum case for OfferType.arcadeApp(_:))
    {
      [v87 setHidden:1];
      return sub_100006060((uint64_t)v79, &qword_1002EC7E8);
    }

    uint64_t v21 = v78;
    uint64_t v19 = v79;
    uint64_t v13 = v77;
    if ((v26 & 1) == 0)
    {
      uint64_t v59 = v85;
      uint64_t v76 = v27;
      if (v85 && (uint64_t v60 = type metadata accessor for OfferStateAction(0LL), swift_dynamicCastClass(v59, v60))) {
        uint64_t v61 = OfferStateAction.subscribePageAction.getter();
      }
      else {
        uint64_t v61 = 0LL;
      }
      uint64_t v62 = v83;
      uint64_t v63 = v84;
      uint64_t v64 = v82;
      uint64_t v65 = v80;
      uint64_t v66 = v47;
      uint64_t v67 = v78;
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v15, v66, v46);
      sub_10001027C(v62, v64, &qword_1002EA110);
      uint64_t v68 = type metadata accessor for ArcadeSubscriptionOfferButtonPresenter(0LL);
      swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
      swift_retain(v61);
      swift_retain(v65);
      uint64_t v69 = v86;
      swift_retain(v86);
      __n128 v70 = swift_retain(v63);
      uint64_t v38 = ArcadeSubscriptionOfferButtonPresenter.init(displayProperties:buttonAction:subscribedButtonAction:subtitlePosition:asPartOf:alignment:)(v70);
      uint64_t v71 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
      id v72 = [v71 areAnimationsEnabled];
      [v71 setAnimationsEnabled:0];
      uint64_t v73 = OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled;
      uint64_t v45 = v87;
      v87[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] = 0;
      [v45 setHidden:0];
      uint64_t v74 = sub_100003B6C( &qword_1002EC7F8,  (uint64_t (*)(uint64_t))type metadata accessor for OfferButton,  (uint64_t)&unk_100241DE0);
      uint64_t v75 = swift_unknownObjectRetain(v45);
      ArcadeSubscriptionOfferButtonPresenter.view.setter(v75, v74);
      [v71 setAnimationsEnabled:v72];
      v45[v73] = 1;
      uint64_t v29 = v69;
      swift_release(v61);
      sub_100003B6C( &qword_1002EC808,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSubscriptionOfferButtonPresenter,  (uint64_t)&protocol conformance descriptor for ArcadeSubscriptionOfferButtonPresenter);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v79, v76);
      goto LABEL_5;
    }
  }

  (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v27);
  swift_retain(v85);
  uint64_t v29 = v86;
  inject(_:from:)(v86);
  uint64_t v30 = sub_1000031E8(&qword_1002EC7F0);
  uint64_t v31 = type metadata accessor for ObjectGraph(0LL);
  inject<A, B>(_:from:)(v90, v30, v29, v30, v31);
  unint64_t v32 = sub_1001E9570();
  inject(_:from:)(v32, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v88, v12);
  sub_10001027C(v83, v82, &qword_1002EA110);
  uint64_t v33 = type metadata accessor for ASKBagContract(0LL);
  uint64_t v34 = inject(_:from:)(v33, v29);
  ASKBagContract.arePreordersCancellable.getter();
  __n128 v35 = swift_release(v34);
  uint64_t v36 = type metadata accessor for AppOfferButtonPresenter(0LL, v35);
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  __n128 v37 = swift_retain(v84);
  uint64_t v38 = AppOfferButtonPresenter.init(displayProperties:buttonAction:appStateController:appStoreInstallStateMonitor:restrictions:subtitlePosition:alignment:hasCompactRedownloads:arePreordersCancellable:includeBetaApps:)(v37);
  uint64_t v39 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  id v40 = [v39 areAnimationsEnabled];
  [v39 setAnimationsEnabled:0];
  uint64_t v41 = OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled;
  uint64_t v42 = v87;
  v87[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] = 0;
  [v42 setHidden:0];
  uint64_t v43 = sub_100003B6C( &qword_1002EC7F8,  (uint64_t (*)(uint64_t))type metadata accessor for OfferButton,  (uint64_t)&unk_100241DE0);
  uint64_t v44 = swift_unknownObjectRetain(v42);
  AppOfferButtonPresenter.view.setter(v44, v43);
  [v39 setAnimationsEnabled:v40];
  v42[v41] = 1;
  sub_100003B6C( &qword_1002EC800,  (uint64_t (*)(uint64_t))&type metadata accessor for AppOfferButtonPresenter,  (uint64_t)&protocol conformance descriptor for AppOfferButtonPresenter);
  uint64_t v45 = v42;
LABEL_5:
  uint64_t v56 = *(void *)&v45[OBJC_IVAR____TtC6Arcade11OfferButton_objectGraph];
  *(void *)&v45[OBJC_IVAR____TtC6Arcade11OfferButton_objectGraph] = v29;
  swift_release(v56);
  v90[3] = swift_getObjectType(v38);
  v90[0] = v38;
  uint64_t v57 = (uint64_t)&v45[OBJC_IVAR____TtC6Arcade11OfferButton_presenter];
  swift_beginAccess(&v45[OBJC_IVAR____TtC6Arcade11OfferButton_presenter], v89, 33LL, 0LL);
  swift_retain(v29);
  sub_1001E95AC((uint64_t)v90, v57);
  return swift_endAccess(v89);
}

double sub_1001E8760( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v28 = a4;
  uint64_t v15 = type metadata accessor for ArcadeState(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a2 += 16LL;
  swift_beginAccess(a2, v30, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v21 = Strong;
    uint64_t v22 = a3 + 16;
    swift_beginAccess(v22, v29, 0LL, 0LL);
    uint64_t v23 = swift_unknownObjectWeakLoadStrong(v22);
    if (v23)
    {
      double v24 = (void *)v23;
      uint64_t v27 = a8;
      uint64_t v25 = ArcadeStateChange.newState.getter();
      char v26 = ArcadeState.isSubscribed.getter(v25);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      sub_1001E7FD4(v26 & 1, v28, a5, a6, a7, v27, v21, a9 & 1);
      swift_release(v21);
    }

    else
    {
      *(void *)&double result = swift_release(v21).n128_u64[0];
    }
  }

  return result;
}

id sub_1001E88B0(id result)
{
  if (v1[OBJC_IVAR____TtC6Arcade11OfferButton_isEnabled] != (result & 1))
  {
    v1[OBJC_IVAR____TtC6Arcade11OfferButton_isEnabled] = result & 1;
    else {
      double v2 = 0.4;
    }
    id v3 = [v1 contentView];
    [v3 setAlpha:v2];

    return [*(id *)&v1[OBJC_IVAR____TtC6Arcade11OfferButton_backgroundEffectView] setAlpha:v2];
  }

  return result;
}

uint64_t sub_1001E8964(uint64_t a1, uint64_t a2)
{
  v10[1] = a2;
  uint64_t v4 = OBJC_IVAR____TtC6Arcade11OfferButton_targetActions;
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade11OfferButton_targetActions);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
  *(void *)(v2 + vswift_weakDestroy(v0 + 4) = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v5 = sub_10001B0A0(0LL, v5[2] + 1LL, 1, v5);
    *(void *)(v2 + vswift_weakDestroy(v0 + 4) = v5;
  }

  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    id v5 = sub_10001B0A0((void *)(v7 > 1), v8 + 1, 1, v5);
    *(void *)(v2 + vswift_weakDestroy(v0 + 4) = v5;
  }

  v5[2] = v8 + 1;
  return sub_1001E95F4((uint64_t)v10, (uint64_t)&v5[2 * v8 + 4]);
}

void sub_1001E8A34(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC6Arcade11OfferButton_targetActions;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade11OfferButton_targetActions);
  if (!a1)
  {
    *(void *)(v1 + OBJC_IVAR____TtC6Arcade11OfferButton_targetActions) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v4);
    return;
  }

  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = v4 + 32;
  swift_bridgeObjectRetain(v4);
  uint64_t v7 = 0LL;
  uint64_t v21 = v4 + 32;
  while (1)
  {
    if (!v5)
    {
      uint64_t v24 = 0LL;
      v25[0] = 0LL;
      v25[1] = 0LL;
      goto LABEL_8;
    }

    if (--v5 >= *(void *)(v4 + 16)) {
      break;
    }
    sub_100133FC8(v6 + 16 * v5, (uint64_t)v23);
    if (__OFADD__(v7, 1LL)) {
      goto LABEL_19;
    }
    uint64_t v24 = v7;
    sub_1001E95F4((uint64_t)v23, (uint64_t)v25);
    ++v7;
LABEL_8:
    sub_10003FBFC((uint64_t)&v24, (uint64_t)&v26, &qword_1002EC810);
    if (!v27[1])
    {
      swift_bridgeObjectRelease(v4);
      return;
    }

    unint64_t v8 = v26;
    sub_1001E95F4((uint64_t)v27, (uint64_t)&v24);
    uint64_t v9 = swift_unknownObjectWeakLoadStrong(&v24);
    if (v9)
    {
      uint64_t v10 = v9;
      swift_unknownObjectRelease(v9);
      if (v10 == a1)
      {
        uint64_t v11 = *(void **)(v2 + v3);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
        *(void *)(v2 + v3) = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v11 = sub_1001E0848(v11);
          *(void *)(v2 + v3) = v11;
        }

        unint64_t v13 = v11[2];
        if (v8 >= v13) {
          goto LABEL_20;
        }
        unint64_t v14 = v13 - 1;
        uint64_t v15 = v4;
        uint64_t v16 = v3;
        uint64_t v17 = &v11[2 * v8];
        uint64_t v18 = v17 + 4;
        sub_100015B48((uint64_t)(v17 + 4));
        uint64_t v19 = v17 + 6;
        uint64_t v3 = v16;
        uint64_t v4 = v15;
        uint64_t v20 = v18;
        uint64_t v6 = v21;
        swift_arrayInitWithTakeFrontToBack(v20, v19, v14 - v8, &type metadata for OfferButton.TargetAction);
        _OWORD v11[2] = v14;
        uint64_t v2 = v1;
        *(void *)(v1 + v3) = v11;
      }
    }

    sub_100015B48((uint64_t)&v24);
  }

  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
}

double sub_1001E8C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double result = __chkstk_darwin(v5).n128_u64[0];
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade11OfferButton_objectGraph);
  if (v10)
  {
    swift_retain(*(void *)(v2 + OBJC_IVAR____TtC6Arcade11OfferButton_objectGraph));
    uint64_t v11 = UIResponder.nearestActionRunner.getter();
    if (v11)
    {
      uint64_t v12 = v11;
      (*(void (**)(char *, void, uint64_t))(v6 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v5);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, a2, v9, v10);
      swift_release(v10);
      __n128 v13 = swift_release(v12);
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v13);
    }

    else
    {
      *(void *)&double result = swift_release(v10).n128_u64[0];
    }
  }

  return result;
}

uint64_t sub_1001E8D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v13 - v9;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  memset(v13, 0, sizeof(v13));
  static AutomationSemantics.offerButton(id:parentId:)(&v14, v13);
  sub_100006060((uint64_t)v13, (uint64_t *)&unk_1002DF680);
  sub_100006060((uint64_t)&v14, (uint64_t *)&unk_1002DF680);
  *((void *)&v15 + 1) = &type metadata for String;
  *(void *)&__int128 v14 = a1;
  *((void *)&v14 + 1) = a2;
  swift_bridgeObjectRetain(a2);
  AutomationSemantics.attribute(key:value:)(0x6574617473LL, 0xE500000000000000LL, &v14);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  sub_100006060((uint64_t)&v14, (uint64_t *)&unk_1002DF680);
  UIView.setAutomationSemantics(_:)(v10);
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v4);
}

uint64_t sub_1001E8E8C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001EAA04(a1, a2, a3, a4, a5, a8);
}

uint64_t sub_1001E8E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001EAD1C(a1, a2, a5);
}

uint64_t sub_1001E8E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1000031E8(&qword_1002EC818);
  __chkstk_darwin(v12);
  __int128 v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000031E8((uint64_t *)&unk_1002EA100);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a5, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0LL, 1LL, v15);
  sub_1001EB008(a1, a2, a3, a4, (uint64_t)v14, a6);
  return sub_100006060((uint64_t)v14, &qword_1002EC818);
}

uint64_t sub_1001E8F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000031E8(&qword_1002EC818);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000031E8((uint64_t *)&unk_1002EA100);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  sub_1001EB008(a1, a2, 0LL, 0LL, (uint64_t)v8, a3);
  return sub_100006060((uint64_t)v8, &qword_1002EC818);
}

double sub_1001E9058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v22 = a3;
  uint64_t v4 = type metadata accessor for OfferButtonPresenterViewTheme(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002EA140);
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for OfferButtonMetrics(0LL, v10);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DD1A0 != -1) {
    swift_once(&qword_1002DD1A0, sub_100212684);
  }
  uint64_t v17 = sub_1000061F4(v13, (uint64_t)qword_1002F1998);
  swift_beginAccess(v17, v25, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v22, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v23, v4);
  uint64_t v18 = type metadata accessor for IndeterminateProgressConfiguration(0LL);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  uint64_t v19 = IndeterminateProgressConfiguration.init(metrics:alignment:theme:)(v16, v12, v7);
  swift_retain(v19);
  sub_1001E9630(v20, v24);
  *(void *)&double result = swift_release(v19).n128_u64[0];
  return result;
}

id sub_1001E9218(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001EB690(a4, a5, a1);
}

uint64_t sub_1001E9224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EB424(a3, a4);
}

uint64_t sub_1001E9238()
{
  id v1 = [v0 accessibilityLabel];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void sub_1001E929C(double a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v5 = String._bridgeToObjectiveC()();
    *(void *)&a1 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }

  else
  {
    id v5 = 0LL;
  }

  objc_msgSend(v3, "setAccessibilityLabel:", v5, a1);
}

void (*sub_1001E92F4(uint64_t **a1))(void *a1)
{
  uint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1001E7EA0(v2);
  return sub_10000FDC0;
}

uint64_t sub_1001E9340()
{
  return sub_100003B6C( &qword_1002EC7D8,  (uint64_t (*)(uint64_t))type metadata accessor for OfferButton,  (uint64_t)&unk_100241DB8);
}

uint64_t sub_1001E936C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001E9390()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001E93B4()
{
  uint64_t v1 = *(void *)(sub_1000031E8(&qword_1002EA110) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002EA100);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_release(*((void *)v0 + 2));
  swift_release(*((void *)v0 + 3));
  swift_release(*((void *)v0 + 4));
  swift_release(*((void *)v0 + 5));
  swift_release(*((void *)v0 + 6));
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002EA140);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (v3 + v13 + v6) & ~v6;
  uint64_t v11 = v7 + v10 + 1;
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v10], v4);
  return swift_deallocObject(v0, v11, v2 | v6 | 7);
}

double sub_1001E94D8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000031E8(&qword_1002EA110) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1000031E8((uint64_t *)&unk_1002EA100) - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1001E8760( a1,  v1[2],  v1[3],  v1[4],  v1[5],  v1[6],  (uint64_t)v1 + v4,  (uint64_t)v1 + v7,  *((_BYTE *)v1 + v7 + *(void *)(v6 + 64)));
}

unint64_t sub_1001E9570()
{
  unint64_t result = qword_1002EC098;
  if (!qword_1002EC098)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___ASKRestrictions);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002EC098);
  }

  return result;
}

uint64_t sub_1001E95AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DF680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001E95F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001E9630(uint64_t a1, char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(a2);
  uint64_t v5 = type metadata accessor for IndeterminateProgressConfiguration(0LL);
  uint64_t v53 = v5;
  uint64_t v54 = &protocol witness table for IndeterminateProgressConfiguration;
  v52[0] = a1;
  uint64_t v6 = &a2[OBJC_IVAR____TtC6Arcade11OfferButton__configuration];
  swift_beginAccess(&a2[OBJC_IVAR____TtC6Arcade11OfferButton__configuration], v48, 0LL, 0LL);
  sub_10001F010((uint64_t)v6, (uint64_t)v49);
  uint64_t v7 = v50;
  uint64_t v8 = sub_100005F8C(v49, v50);
  uint64_t DynamicType = swift_getDynamicType(v8, v7, 1LL);
  uint64_t v10 = sub_100005F8C(v52, v5);
  uint64_t v11 = swift_getDynamicType(v10, v5, 1LL);
  uint64_t v12 = v53;
  uint64_t v13 = v54;
  sub_100005F8C(v52, v53);
  id v14 = [a2 traitCollection];
  LOBYTE(v7) = dispatch thunk of OfferButtonConfiguration.isEqual(to:with:)(v49, v14, v12, v13);

  if ((v7 & 1) != 0) {
    goto LABEL_21;
  }
  swift_beginAccess(v6, v44, 33LL, 0LL);
  sub_1000264E4(v6, v52);
  swift_endAccess(v44);
  if (DynamicType == v11 || a2[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] == 1)
  {
    int v15 = 0;
  }

  else
  {
    uint64_t v16 = (void *)objc_opt_self(&OBJC_CLASS___CATransaction);
    [v16 begin];
    int v15 = 1;
    [v16 setDisableActions:1];
  }

  uint64_t v17 = v50;
  uint64_t v18 = v51;
  sub_100005F8C(v49, v50);
  uint64_t v19 = sub_100003B6C( (unint64_t *)&qword_1002EA868,  (uint64_t (*)(uint64_t))type metadata accessor for OfferButton,  (uint64_t)&unk_100240188);
  dispatch thunk of OfferButtonConfiguration.unapply<A>(to:)(a2, ObjectType, v19, v17, v18);
  if (DynamicType != v11) {
    sub_10019F324();
  }
  uint64_t v20 = v53;
  uint64_t v21 = v54;
  sub_100005F8C(v52, v53);
  dispatch thunk of OfferButtonConfiguration.apply<A>(to:)(a2, ObjectType, v19, v20, v21);
  if (a2[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] != 1)
  {
    [a2 setNeedsLayout];
    v47.id receiver = a2;
    v47.super_class = ObjectType;
    objc_msgSendSuper2(&v47, "invalidateIntrinsicContentSize");
    uint64_t v39 = &a2[OBJC_IVAR____TtC6Arcade11OfferButton_cachedIntrinsicContentSize];
    *(void *)uint64_t v39 = 0LL;
    *((void *)v39 + 1) = 0LL;
    v39[16] = 1;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC6Arcade11OfferButton_layoutDelegate]);
    if (Strong)
    {
      uint64_t v41 = Strong;
      [Strong setNeedsLayout];
    }

    if (!v15) {
      goto LABEL_21;
    }
LABEL_20:
    [(id)objc_opt_self(CATransaction) commit];
    goto LABEL_21;
  }

  uint64_t v22 = v50;
  uint64_t v23 = v51;
  sub_100005F8C(v49, v50);
  double v24 = dispatch thunk of OfferButtonConfiguration.size(in:)(a2, v22, v23);
  double v26 = v25;
  uint64_t v27 = v53;
  uint64_t v28 = v54;
  sub_100005F8C(v52, v53);
  BOOL v29 = v24 == dispatch thunk of OfferButtonConfiguration.size(in:)(a2, v27, v28);
  BOOL v31 = v26 == v30 && v29;
  id v32 = (id)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC6Arcade11OfferButton_layoutDelegate]);
  if (!v32) {
    id v32 = [a2 superview];
  }
  uint64_t v33 = swift_allocObject(&unk_10028E8D0, 40LL, 7LL);
  *(void *)(v33 + swift_weakDestroy(v0 + 16) = a2;
  *(_BYTE *)(v33 + 2swift_weakDestroy(v0 + 4) = v31;
  *(void *)(v33 + 32) = v32;
  uint64_t v34 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  __n128 v35 = a2;
  id v36 = v32;
  if ([v34 areAnimationsEnabled])
  {
    v44[4] = sub_1001EB8EC;
    uint64_t v45 = v33;
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 1107296256LL;
    v44[2] = sub_100135408;
    v44[3] = &unk_10028E8E8;
    __n128 v37 = _Block_copy(v44);
    uint64_t v38 = v45;
    swift_retain(v33);
    swift_release(v38);
    [v34 animateWithDuration:v37 animations:0.3];
    swift_release(v33);

    _Block_release(v37);
    if (!v15) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

  [v35 setNeedsLayout];
  if (v31)
  {
    [v35 layoutIfNeeded];
  }

  else
  {
    v46.id receiver = v35;
    v46.super_class = ObjectType;
    objc_msgSendSuper2(&v46, "invalidateIntrinsicContentSize");
    uint64_t v43 = &v35[OBJC_IVAR____TtC6Arcade11OfferButton_cachedIntrinsicContentSize];
    *(void *)uint64_t v43 = 0LL;
    *((void *)v43 + 1) = 0LL;
    v43[16] = 1;
    [v36 setNeedsLayout];
    [v36 layoutIfNeeded];
  }

  swift_release(v33);

  if (v15) {
    goto LABEL_20;
  }
LABEL_21:
  _s6Arcade17PillOverlayLayoutVwxx_0(v49);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v52);
}

uint64_t sub_1001E9B10(uint64_t a1, char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(a2);
  uint64_t v6 = type metadata accessor for TextConfiguration(0LL, v5);
  uint64_t v56 = v6;
  uint64_t v57 = &protocol witness table for TextConfiguration;
  uint64_t v7 = sub_100009D54(v55);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(v7, a1, v6);
  uint64_t v8 = &a2[OBJC_IVAR____TtC6Arcade11OfferButton__configuration];
  swift_beginAccess(&a2[OBJC_IVAR____TtC6Arcade11OfferButton__configuration], v51, 0LL, 0LL);
  sub_10001F010((uint64_t)v8, (uint64_t)v52);
  uint64_t v9 = v53;
  uint64_t v10 = sub_100005F8C(v52, v53);
  uint64_t DynamicType = swift_getDynamicType(v10, v9, 1LL);
  uint64_t v12 = v56;
  uint64_t v13 = sub_100005F8C(v55, v56);
  uint64_t v14 = swift_getDynamicType(v13, v12, 1LL);
  uint64_t v15 = v56;
  uint64_t v16 = v57;
  sub_100005F8C(v55, v56);
  id v17 = [a2 traitCollection];
  LOBYTE(v12) = dispatch thunk of OfferButtonConfiguration.isEqual(to:with:)(v52, v17, v15, v16);

  if ((v12 & 1) != 0) {
    goto LABEL_21;
  }
  swift_beginAccess(v8, v47, 33LL, 0LL);
  sub_1000264E4(v8, v55);
  swift_endAccess(v47);
  if (DynamicType == v14 || a2[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] == 1)
  {
    int v18 = 0;
  }

  else
  {
    uint64_t v19 = (void *)objc_opt_self(&OBJC_CLASS___CATransaction);
    [v19 begin];
    int v18 = 1;
    [v19 setDisableActions:1];
  }

  uint64_t v20 = v53;
  uint64_t v21 = v54;
  sub_100005F8C(v52, v53);
  uint64_t v22 = sub_100003B6C( (unint64_t *)&qword_1002EA868,  (uint64_t (*)(uint64_t))type metadata accessor for OfferButton,  (uint64_t)&unk_100240188);
  dispatch thunk of OfferButtonConfiguration.unapply<A>(to:)(a2, ObjectType, v22, v20, v21);
  if (DynamicType != v14) {
    sub_10019F324();
  }
  uint64_t v23 = v56;
  double v24 = v57;
  sub_100005F8C(v55, v56);
  dispatch thunk of OfferButtonConfiguration.apply<A>(to:)(a2, ObjectType, v22, v23, v24);
  if (a2[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] != 1)
  {
    [a2 setNeedsLayout];
    v50.id receiver = a2;
    v50.super_class = ObjectType;
    objc_msgSendSuper2(&v50, "invalidateIntrinsicContentSize");
    uint64_t v42 = &a2[OBJC_IVAR____TtC6Arcade11OfferButton_cachedIntrinsicContentSize];
    *(void *)uint64_t v42 = 0LL;
    *((void *)v42 + 1) = 0LL;
    v42[16] = 1;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC6Arcade11OfferButton_layoutDelegate]);
    if (Strong)
    {
      uint64_t v44 = Strong;
      [Strong setNeedsLayout];
    }

    if (!v18) {
      goto LABEL_21;
    }
LABEL_20:
    [(id)objc_opt_self(CATransaction) commit];
    goto LABEL_21;
  }

  uint64_t v25 = v53;
  uint64_t v26 = v54;
  sub_100005F8C(v52, v53);
  double v27 = dispatch thunk of OfferButtonConfiguration.size(in:)(a2, v25, v26);
  double v29 = v28;
  uint64_t v30 = v56;
  BOOL v31 = v57;
  sub_100005F8C(v55, v56);
  BOOL v32 = v27 == dispatch thunk of OfferButtonConfiguration.size(in:)(a2, v30, v31);
  BOOL v34 = v29 == v33 && v32;
  id v35 = (id)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC6Arcade11OfferButton_layoutDelegate]);
  if (!v35) {
    id v35 = [a2 superview];
  }
  uint64_t v36 = swift_allocObject(&unk_10028E970, 40LL, 7LL);
  *(void *)(v36 + swift_weakDestroy(v0 + 16) = a2;
  *(_BYTE *)(v36 + 2swift_weakDestroy(v0 + 4) = v34;
  *(void *)(v36 + 32) = v35;
  __n128 v37 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  uint64_t v38 = a2;
  id v39 = v35;
  if ([v37 areAnimationsEnabled])
  {
    v47[4] = sub_1001EB8EC;
    uint64_t v48 = v36;
    v47[0] = _NSConcreteStackBlock;
    v47[1] = 1107296256LL;
    v47[2] = sub_100135408;
    v47[3] = &unk_10028E988;
    id v40 = _Block_copy(v47);
    uint64_t v41 = v48;
    swift_retain(v36);
    swift_release(v41);
    [v37 animateWithDuration:v40 animations:0.3];
    swift_release(v36);

    _Block_release(v40);
    if (!v18) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

  [v38 setNeedsLayout];
  if (v34)
  {
    [v38 layoutIfNeeded];
  }

  else
  {
    v49.id receiver = v38;
    v49.super_class = ObjectType;
    objc_msgSendSuper2(&v49, "invalidateIntrinsicContentSize");
    objc_super v46 = &v38[OBJC_IVAR____TtC6Arcade11OfferButton_cachedIntrinsicContentSize];
    *(void *)objc_super v46 = 0LL;
    *((void *)v46 + 1) = 0LL;
    _BYTE v46[16] = 1;
    [v39 setNeedsLayout];
    [v39 layoutIfNeeded];
  }

  swift_release(v36);

  if (v18) {
    goto LABEL_20;
  }
LABEL_21:
  _s6Arcade17PillOverlayLayoutVwxx_0(v52);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v55);
}

uint64_t sub_1001EA00C(uint64_t a1, char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(a2);
  uint64_t v5 = type metadata accessor for RedownloadConfiguration(0LL);
  uint64_t v55 = v5;
  uint64_t v56 = &protocol witness table for RedownloadConfiguration;
  uint64_t v6 = sub_100009D54(v54);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(v6, a1, v5);
  uint64_t v7 = &a2[OBJC_IVAR____TtC6Arcade11OfferButton__configuration];
  swift_beginAccess(&a2[OBJC_IVAR____TtC6Arcade11OfferButton__configuration], v50, 0LL, 0LL);
  sub_10001F010((uint64_t)v7, (uint64_t)v51);
  uint64_t v8 = v52;
  uint64_t v9 = sub_100005F8C(v51, v52);
  uint64_t DynamicType = swift_getDynamicType(v9, v8, 1LL);
  uint64_t v11 = v55;
  uint64_t v12 = sub_100005F8C(v54, v55);
  uint64_t v13 = swift_getDynamicType(v12, v11, 1LL);
  uint64_t v14 = v55;
  uint64_t v15 = v56;
  sub_100005F8C(v54, v55);
  id v16 = [a2 traitCollection];
  LOBYTE(v11) = dispatch thunk of OfferButtonConfiguration.isEqual(to:with:)(v51, v16, v14, v15);

  if ((v11 & 1) != 0) {
    goto LABEL_21;
  }
  swift_beginAccess(v7, v46, 33LL, 0LL);
  sub_1000264E4(v7, v54);
  swift_endAccess(v46);
  if (DynamicType == v13 || a2[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] == 1)
  {
    int v17 = 0;
  }

  else
  {
    int v18 = (void *)objc_opt_self(&OBJC_CLASS___CATransaction);
    [v18 begin];
    int v17 = 1;
    [v18 setDisableActions:1];
  }

  uint64_t v19 = v52;
  uint64_t v20 = v53;
  sub_100005F8C(v51, v52);
  uint64_t v21 = sub_100003B6C( (unint64_t *)&qword_1002EA868,  (uint64_t (*)(uint64_t))type metadata accessor for OfferButton,  (uint64_t)&unk_100240188);
  dispatch thunk of OfferButtonConfiguration.unapply<A>(to:)(a2, ObjectType, v21, v19, v20);
  if (DynamicType != v13) {
    sub_10019F324();
  }
  uint64_t v22 = v55;
  uint64_t v23 = v56;
  sub_100005F8C(v54, v55);
  dispatch thunk of OfferButtonConfiguration.apply<A>(to:)(a2, ObjectType, v21, v22, v23);
  if (a2[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] != 1)
  {
    [a2 setNeedsLayout];
    v49.id receiver = a2;
    v49.super_class = ObjectType;
    objc_msgSendSuper2(&v49, "invalidateIntrinsicContentSize");
    uint64_t v41 = &a2[OBJC_IVAR____TtC6Arcade11OfferButton_cachedIntrinsicContentSize];
    *(void *)uint64_t v41 = 0LL;
    *((void *)v41 + 1) = 0LL;
    v41[16] = 1;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC6Arcade11OfferButton_layoutDelegate]);
    if (Strong)
    {
      uint64_t v43 = Strong;
      [Strong setNeedsLayout];
    }

    if (!v17) {
      goto LABEL_21;
    }
LABEL_20:
    [(id)objc_opt_self(CATransaction) commit];
    goto LABEL_21;
  }

  uint64_t v24 = v52;
  uint64_t v25 = v53;
  sub_100005F8C(v51, v52);
  double v26 = dispatch thunk of OfferButtonConfiguration.size(in:)(a2, v24, v25);
  double v28 = v27;
  uint64_t v29 = v55;
  uint64_t v30 = v56;
  sub_100005F8C(v54, v55);
  BOOL v31 = v26 == dispatch thunk of OfferButtonConfiguration.size(in:)(a2, v29, v30);
  BOOL v33 = v28 == v32 && v31;
  id v34 = (id)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC6Arcade11OfferButton_layoutDelegate]);
  if (!v34) {
    id v34 = [a2 superview];
  }
  uint64_t v35 = swift_allocObject(&unk_10028E880, 40LL, 7LL);
  *(void *)(v35 + swift_weakDestroy(v0 + 16) = a2;
  *(_BYTE *)(v35 + 2swift_weakDestroy(v0 + 4) = v33;
  *(void *)(v35 + 32) = v34;
  uint64_t v36 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  __n128 v37 = a2;
  id v38 = v34;
  if ([v36 areAnimationsEnabled])
  {
    v46[4] = sub_1001EB63C;
    uint64_t v47 = v35;
    v46[0] = _NSConcreteStackBlock;
    v46[1] = 1107296256LL;
    void v46[2] = sub_100135408;
    void v46[3] = &unk_10028E898;
    id v39 = _Block_copy(v46);
    uint64_t v40 = v47;
    swift_retain(v35);
    swift_release(v40);
    [v36 animateWithDuration:v39 animations:0.3];
    swift_release(v35);

    _Block_release(v39);
    if (!v17) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

  [v37 setNeedsLayout];
  if (v33)
  {
    [v37 layoutIfNeeded];
  }

  else
  {
    v48.id receiver = v37;
    v48.super_class = ObjectType;
    objc_msgSendSuper2(&v48, "invalidateIntrinsicContentSize");
    uint64_t v45 = &v37[OBJC_IVAR____TtC6Arcade11OfferButton_cachedIntrinsicContentSize];
    *(void *)uint64_t v45 = 0LL;
    *((void *)v45 + 1) = 0LL;
    v45[16] = 1;
    [v38 setNeedsLayout];
    [v38 layoutIfNeeded];
  }

  swift_release(v35);

  if (v17) {
    goto LABEL_20;
  }
LABEL_21:
  _s6Arcade17PillOverlayLayoutVwxx_0(v51);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v54);
}

uint64_t sub_1001EA508(uint64_t a1, char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(a2);
  uint64_t v5 = type metadata accessor for ProgressConfiguration(0LL);
  uint64_t v55 = v5;
  uint64_t v56 = &protocol witness table for ProgressConfiguration;
  uint64_t v6 = sub_100009D54(v54);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(v6, a1, v5);
  uint64_t v7 = &a2[OBJC_IVAR____TtC6Arcade11OfferButton__configuration];
  swift_beginAccess(&a2[OBJC_IVAR____TtC6Arcade11OfferButton__configuration], v50, 0LL, 0LL);
  sub_10001F010((uint64_t)v7, (uint64_t)v51);
  uint64_t v8 = v52;
  uint64_t v9 = sub_100005F8C(v51, v52);
  uint64_t DynamicType = swift_getDynamicType(v9, v8, 1LL);
  uint64_t v11 = v55;
  uint64_t v12 = sub_100005F8C(v54, v55);
  uint64_t v13 = swift_getDynamicType(v12, v11, 1LL);
  uint64_t v14 = v55;
  uint64_t v15 = v56;
  sub_100005F8C(v54, v55);
  id v16 = [a2 traitCollection];
  LOBYTE(v11) = dispatch thunk of OfferButtonConfiguration.isEqual(to:with:)(v51, v16, v14, v15);

  if ((v11 & 1) != 0) {
    goto LABEL_21;
  }
  swift_beginAccess(v7, v46, 33LL, 0LL);
  sub_1000264E4(v7, v54);
  swift_endAccess(v46);
  if (DynamicType == v13 || a2[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] == 1)
  {
    int v17 = 0;
  }

  else
  {
    int v18 = (void *)objc_opt_self(&OBJC_CLASS___CATransaction);
    [v18 begin];
    int v17 = 1;
    [v18 setDisableActions:1];
  }

  uint64_t v19 = v52;
  uint64_t v20 = v53;
  sub_100005F8C(v51, v52);
  uint64_t v21 = sub_100003B6C( (unint64_t *)&qword_1002EA868,  (uint64_t (*)(uint64_t))type metadata accessor for OfferButton,  (uint64_t)&unk_100240188);
  dispatch thunk of OfferButtonConfiguration.unapply<A>(to:)(a2, ObjectType, v21, v19, v20);
  if (DynamicType != v13) {
    sub_10019F324();
  }
  uint64_t v22 = v55;
  uint64_t v23 = v56;
  sub_100005F8C(v54, v55);
  dispatch thunk of OfferButtonConfiguration.apply<A>(to:)(a2, ObjectType, v21, v22, v23);
  if (a2[OBJC_IVAR____TtC6Arcade11OfferButton_isConfigurationLayoutEnabled] != 1)
  {
    [a2 setNeedsLayout];
    v49.id receiver = a2;
    v49.super_class = ObjectType;
    objc_msgSendSuper2(&v49, "invalidateIntrinsicContentSize");
    uint64_t v41 = &a2[OBJC_IVAR____TtC6Arcade11OfferButton_cachedIntrinsicContentSize];
    *(void *)uint64_t v41 = 0LL;
    *((void *)v41 + 1) = 0LL;
    v41[16] = 1;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC6Arcade11OfferButton_layoutDelegate]);
    if (Strong)
    {
      uint64_t v43 = Strong;
      [Strong setNeedsLayout];
    }

    if (!v17) {
      goto LABEL_21;
    }
LABEL_20:
    [(id)objc_opt_self(CATransaction) commit];
    goto LABEL_21;
  }

  uint64_t v24 = v52;
  uint64_t v25 = v53;
  sub_100005F8C(v51, v52);
  double v26 = dispatch thunk of OfferButtonConfiguration.size(in:)(a2, v24, v25);
  double v28 = v27;
  uint64_t v29 = v55;
  uint64_t v30 = v56;
  sub_100005F8C(v54, v55);
  BOOL v31 = v26 == dispatch thunk of OfferButtonConfiguration.size(in:)(a2, v29, v30);
  BOOL v33 = v28 == v32 && v31;
  id v34 = (id)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC6Arcade11OfferButton_layoutDelegate]);
  if (!v34) {
    id v34 = [a2 superview];
  }
  uint64_t v35 = swift_allocObject(&unk_10028E920, 40LL, 7LL);
  *(void *)(v35 + swift_weakDestroy(v0 + 16) = a2;
  *(_BYTE *)(v35 + 2swift_weakDestroy(v0 + 4) = v33;
  *(void *)(v35 + 32) = v34;
  uint64_t v36 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  __n128 v37 = a2;
  id v38 = v34;
  if ([v36 areAnimationsEnabled])
  {
    v46[4] = sub_1001EB8EC;
    uint64_t v47 = v35;
    v46[0] = _NSConcreteStackBlock;
    v46[1] = 1107296256LL;
    void v46[2] = sub_100135408;
    void v46[3] = &unk_10028E938;
    id v39 = _Block_copy(v46);
    uint64_t v40 = v47;
    swift_retain(v35);
    swift_release(v40);
    [v36 animateWithDuration:v39 animations:0.3];
    swift_release(v35);

    _Block_release(v39);
    if (!v17) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

  [v37 setNeedsLayout];
  if (v33)
  {
    [v37 layoutIfNeeded];
  }

  else
  {
    v48.id receiver = v37;
    v48.super_class = ObjectType;
    objc_msgSendSuper2(&v48, "invalidateIntrinsicContentSize");
    uint64_t v45 = &v37[OBJC_IVAR____TtC6Arcade11OfferButton_cachedIntrinsicContentSize];
    *(void *)uint64_t v45 = 0LL;
    *((void *)v45 + 1) = 0LL;
    v45[16] = 1;
    [v38 setNeedsLayout];
    [v38 layoutIfNeeded];
  }

  swift_release(v35);

  if (v17) {
    goto LABEL_20;
  }
LABEL_21:
  _s6Arcade17PillOverlayLayoutVwxx_0(v51);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v54);
}

uint64_t sub_1001EAA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a6;
  uint64_t v52 = a1;
  uint64_t v44 = a5;
  uint64_t v54 = a3;
  uint64_t v55 = a4;
  uint64_t v53 = a2;
  uint64_t v50 = type metadata accessor for OfferButtonPresenterViewTheme(0LL);
  uint64_t v6 = *(void *)(v50 - 8);
  __n128 v7 = __chkstk_darwin(v50);
  objc_super v49 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for TextConfigurationTheme(0LL, v7);
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for OfferButtonMetrics(0LL, v10);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for TextConfiguration(0LL, v14);
  uint64_t v47 = *(void *)(v17 - 8);
  uint64_t v48 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v43 - v21;
  uint64_t v23 = sub_1000031E8(&qword_1002EC818);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  double v28 = (char *)&v43 - v27;
  uint64_t v29 = sub_1000031E8((uint64_t *)&unk_1002EA100);
  uint64_t v30 = *(void *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v28, v44, v29);
  BOOL v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56);
  double v32 = v46;
  v31(v28, 0LL, 1LL, v29);
  [v32 setSelected:0];
  if (qword_1002DD1A0 != -1) {
    swift_once(&qword_1002DD1A0, sub_100212684);
  }
  uint64_t v33 = sub_1000061F4(v12, (uint64_t)qword_1002F1998);
  swift_beginAccess(v33, v56, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v33, v12);
  sub_10001027C((uint64_t)v28, (uint64_t)v25, &qword_1002EC818);
  id v34 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v35 = v49;
  v34(v49, v51, v50);
  uint64_t v36 = v53;
  swift_bridgeObjectRetain(v53);
  uint64_t v37 = v55;
  __n128 v38 = swift_bridgeObjectRetain(v55);
  id v39 = v45;
  TextConfigurationTheme.init(from:)(v35, v38);
  TextConfiguration.init(metrics:text:subtitleText:subtitlePosition:theme:)(v16, v52, v36, v54, v37, v25, v39);
  uint64_t v41 = v47;
  uint64_t v40 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v19, v22, v48);
  sub_1001E9B10((uint64_t)v19, (char *)v32);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v40);
  return sub_100006060((uint64_t)v28, &qword_1002EC818);
}

uint64_t sub_1001EAD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v39 = a3;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v38 = type metadata accessor for OfferButtonPresenterViewTheme(0LL);
  uint64_t v36 = *(void *)(v38 - 8);
  __n128 v5 = __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for TextConfigurationTheme(0LL, v5);
  __n128 v8 = __chkstk_darwin(v7);
  __n128 v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for OfferButtonMetrics(0LL, v8);
  uint64_t v35 = *(void *)(v11 - 8);
  __n128 v12 = __chkstk_darwin(v11);
  __n128 v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for TextConfiguration(0LL, v12);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v34 - v20;
  uint64_t v22 = sub_1000031E8(&qword_1002EC818);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v34 - v26;
  uint64_t v28 = sub_1000031E8((uint64_t *)&unk_1002EA100);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56LL))(v27, 1LL, 1LL, v28);
  uint64_t v42 = v4;
  [v4 setSelected:0];
  if (qword_1002DD1A0 != -1) {
    swift_once(&qword_1002DD1A0, sub_100212684);
  }
  uint64_t v29 = sub_1000061F4(v11, (uint64_t)qword_1002F1998);
  swift_beginAccess(v29, v43, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v14, v29, v11);
  sub_10001027C((uint64_t)v27, (uint64_t)v24, &qword_1002EC818);
  uint64_t v30 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v37, v39, v38);
  uint64_t v31 = v41;
  __n128 v32 = swift_bridgeObjectRetain(v41);
  TextConfigurationTheme.init(from:)(v30, v32);
  TextConfiguration.init(metrics:text:subtitleText:subtitlePosition:theme:)(v14, v40, v31, 0LL, 0LL, v24, v10);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
  sub_1001E9B10((uint64_t)v18, v42);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  return sub_100006060((uint64_t)v27, &qword_1002EC818);
}

uint64_t sub_1001EB008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v57 = a6;
  uint64_t v56 = a5;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v59 = a2;
  uint64_t v58 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v6);
  uint64_t v54 = type metadata accessor for OfferButtonPresenterViewTheme(0LL);
  uint64_t v52 = *(void *)(v54 - 8);
  __n128 v9 = __chkstk_darwin(v54);
  uint64_t v55 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for TextConfigurationTheme(0LL, v9);
  __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000031E8(&qword_1002EC818);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v50 = (uint64_t)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for OfferButtonMetrics(0LL, v14);
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = type metadata accessor for TextConfiguration(0LL, v18);
  uint64_t v21 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&double v25 = __chkstk_darwin(v24).n128_u64[0];
  uint64_t v27 = (char *)&v49 - v26;
  v68.id receiver = v7;
  v68.super_class = ObjectType;
  unsigned int v28 = objc_msgSendSuper2(&v68, "isHighlighted", v25);
  v67.id receiver = v7;
  v67.super_class = ObjectType;
  objc_msgSendSuper2(&v67, "setHighlighted:", 0);
  v66.id receiver = v7;
  v66.super_class = ObjectType;
  if (v28 != objc_msgSendSuper2(&v66, "isHighlighted"))
  {
    uint64_t v29 = (uint64_t)&v7[OBJC_IVAR____TtC6Arcade11OfferButton__configuration];
    swift_beginAccess(&v7[OBJC_IVAR____TtC6Arcade11OfferButton__configuration], v62, 0LL, 0LL);
    sub_10001F010(v29, (uint64_t)v63);
    uint64_t v30 = v64;
    uint64_t v49 = v65;
    sub_100005F8C(v63, v64);
    [v7 bounds];
    double v32 = v31;
    double v34 = v33;
    double v36 = v35;
    double v38 = v37;
    uint64_t v39 = sub_100003B6C( (unint64_t *)&qword_1002EA868,  (uint64_t (*)(uint64_t))type metadata accessor for OfferButton,  (uint64_t)&unk_100240188);
    dispatch thunk of OfferButtonConfiguration.layout<A>(button:in:disableAnimations:)( v7,  0LL,  ObjectType,  v39,  v30,  v49,  v32,  v34,  v36,  v38);
    _s6Arcade17PillOverlayLayoutVwxx_0(v63);
  }

  if (qword_1002DD1A0 != -1) {
    swift_once(&qword_1002DD1A0, sub_100212684);
  }
  uint64_t v40 = sub_1000061F4(v16, (uint64_t)qword_1002F1998);
  swift_beginAccess(v40, v63, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v40, v16);
  uint64_t v41 = v50;
  sub_10001027C(v56, v50, &qword_1002EC818);
  uint64_t v42 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v55, v57, v54);
  uint64_t v43 = v61;
  swift_bridgeObjectRetain(v61);
  uint64_t v44 = v59;
  __n128 v45 = swift_bridgeObjectRetain(v59);
  objc_super v46 = v53;
  TextConfigurationTheme.init(from:)(v42, v45);
  TextConfiguration.init(metrics:symbolName:subtitleText:subtitlePosition:theme:)(v20, v58, v44, v60, v43, v41, v46);
  uint64_t v47 = v51;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v27, v51);
  sub_1001E9B10((uint64_t)v23, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v27, v47);
}

uint64_t sub_1001EB424(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v24 = a1;
  uint64_t v25 = type metadata accessor for OfferButtonPresenterViewTheme(0LL);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002EA140);
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  __n128 v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for OfferButtonMetrics(0LL, v5);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for RedownloadConfiguration(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  __n128 v18 = (char *)&v21 - v17;
  if (qword_1002DD1A0 != -1) {
    swift_once(&qword_1002DD1A0, sub_100212684);
  }
  uint64_t v19 = sub_1000061F4(v8, (uint64_t)qword_1002F1998);
  swift_beginAccess(v19, v28, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v19, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v7, v24, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v3, v26, v25);
  RedownloadConfiguration.init(metrics:alignment:theme:)(v11, v7, v3);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  sub_1001EA00C((uint64_t)v15, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
}

id sub_1001EB63C()
{
  return sub_10019F670(*(char **)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1001EB64C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001EB65C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001EB664()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

id sub_1001EB690(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v29 = a2;
  uint64_t v27 = a1;
  uint64_t v28 = type metadata accessor for OfferButtonPresenterViewTheme(0LL);
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  __n128 v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002EA140);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for OfferButtonMetrics(0LL, v7);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for ProgressConfiguration(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v24 - v19;
  if (qword_1002DD1A0 != -1) {
    swift_once(&qword_1002DD1A0, sub_100212684);
  }
  uint64_t v21 = sub_1000061F4(v10, (uint64_t)qword_1002F1998);
  swift_beginAccess(v21, v31, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v21, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v9, v27, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v5, v29, v28);
  ProgressConfiguration.init(metrics:progress:alignment:theme:isInstalling:)(v13, v9, v5, 0LL, a3);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  uint64_t v22 = v30;
  sub_1001EA508((uint64_t)v17, v30);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  return [v22 setSelected:0];
}

double sub_1001EB8FC()
{
  if (qword_1002DCF68 != -1) {
    swift_once(&qword_1002DCF68, sub_100175A44);
  }
  double result = *(double *)&qword_1002F1250;
  qword_1002F18A8 = qword_1002F1250;
  return result;
}

uint64_t sub_1001EB944(uint64_t a1)
{
  return sub_1001EB964(30.0, a1, qword_1002F18B0);
}

uint64_t sub_1001EB954(uint64_t a1)
{
  return sub_1001EB964(0.0, a1, qword_1002F18C8);
}

uint64_t sub_1001EB964(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = type metadata accessor for FontSource(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (UIFontTextStyle *)((char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = type metadata accessor for StaticDimension(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DividerView.Style(0LL);
  sub_10000FF90(v13, a3);
  uint64_t v14 = sub_1000061F4(v13, (uint64_t)a3);
  __int128 v20 = *(_OWORD *)&UIEdgeInsetsZero.top;
  CGFloat bottom = UIEdgeInsetsZero.bottom;
  CGFloat right = UIEdgeInsetsZero.right;
  *uint64_t v8 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, void, uint64_t))(v6 + 104))( v8,  enum case for FontSource.textStyle(_:),  v5);
  v21[3] = v5;
  v21[4] = &protocol witness table for FontSource;
  uint64_t v17 = sub_100009D54(v21);
  (*(void (**)(void *, UIFontTextStyle *, uint64_t))(v6 + 16))(v17, v8, v5);
  uint64_t v18 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v21, a1);
  (*(void (**)(UIFontTextStyle *, uint64_t))(v6 + 8))(v8, v5);
  *(_OWORD *)uint64_t v14 = v20;
  *(CGFloat *)(v14 + swift_weakDestroy(v0 + 16) = bottom;
  *(CGFloat *)(v14 + 2swift_weakDestroy(v0 + 4) = right;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v14 + *(int *)(v13 + 20), v12, v9);
}

char *sub_1001EBAFC(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = &v4[OBJC_IVAR____TtC6Arcade11DividerView_separatorInset];
  __int128 v11 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v10 + 1) = v11;
  uint64_t v12 = OBJC_IVAR____TtC6Arcade11DividerView_style;
  uint64_t v13 = qword_1002DD150;
  uint64_t v14 = v4;
  if (v13 != -1) {
    swift_once(&qword_1002DD150, sub_1001EB944);
  }
  uint64_t v15 = type metadata accessor for DividerView.Style(0LL);
  uint64_t v16 = sub_1000061F4(v15, (uint64_t)qword_1002F18B0);
  sub_1000E8470(v16, (uint64_t)&v14[v12]);
  id v17 = objc_msgSend(objc_allocWithZone(UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v14[OBJC_IVAR____TtC6Arcade11DividerView_separatorView] = v17;

  v25.id receiver = v14;
  v25.super_class = ObjectType;
  uint64_t v18 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v19 = OBJC_IVAR____TtC6Arcade11DividerView_separatorView;
  __int128 v20 = *(void **)&v18[OBJC_IVAR____TtC6Arcade11DividerView_separatorView];
  sub_100010F30();
  uint64_t v21 = v18;
  id v22 = v20;
  uint64_t v23 = (void *)static UIColor.defaultLine.getter(v22);
  [v22 setBackgroundColor:v23];

  [v21 addSubview:*(void *)&v18[v19]];
  return v21;
}

id sub_1001EBF04()
{
  v16.id receiver = v0;
  v16.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v16, "layoutSubviews");
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  if (qword_1002DD148 != -1) {
    swift_once(&qword_1002DD148, sub_1001EB8FC);
  }
  double v9 = floor(*(double *)&qword_1002F18A8);
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC6Arcade11DividerView_separatorView];
  v17.origin.CGFloat x = v2;
  v17.origin.CGFloat y = v4;
  v17.size.CGFloat width = v6;
  v17.size.CGFloat height = v8;
  CGFloat MinX = CGRectGetMinX(v17);
  uint64_t v12 = (double *)&v0[OBJC_IVAR____TtC6Arcade11DividerView_separatorInset];
  CGFloat v13 = MinX + v12[1];
  v18.origin.CGFloat x = v2;
  v18.origin.CGFloat y = v4;
  v18.size.CGFloat width = v6;
  v18.size.CGFloat height = v8;
  CGFloat v14 = CGRectGetMidY(v18) + v9 * -0.5;
  v19.origin.CGFloat x = v2;
  v19.origin.CGFloat y = v4;
  v19.size.CGFloat width = v6;
  v19.size.CGFloat height = v8;
  return objc_msgSend(v10, "setFrame:", v13, v14, CGRectGetWidth(v19) - v12[1] - v12[3], v9);
}

uint64_t sub_1001EC0B4()
{
  return type metadata accessor for DividerView(0LL);
}

uint64_t type metadata accessor for DividerView(uint64_t a1)
{
  return sub_1000382AC(a1, (uint64_t *)&unk_1002EC858, (uint64_t)&nominal type descriptor for DividerView);
}

uint64_t sub_1001EC0D0(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = " ";
  uint64_t result = type metadata accessor for DividerView.Style(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t type metadata accessor for DividerView.Style(uint64_t a1)
{
  return sub_1000382AC(a1, qword_1002EC8C0, (uint64_t)&nominal type descriptor for DividerView.Style);
}

void *sub_1001EC168(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v10 + ((v4 + 16LL) & ~(unint64_t)v4));
    swift_retain(v10);
  }

  else
  {
    __int128 v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    double v7 = (char *)a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = type metadata accessor for StaticDimension(0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16LL))(v7, v8, v9);
  }

  return v3;
}

uint64_t sub_1001EC1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for StaticDimension(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(v2, v3);
}

_OWORD *sub_1001EC228(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  double v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for StaticDimension(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16LL))(v6, v7, v8);
  return a1;
}

void *sub_1001EC284(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for StaticDimension(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24LL))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1001EC2F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for StaticDimension(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32LL))(v6, v7, v8);
  return a1;
}

_OWORD *sub_1001EC354(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for StaticDimension(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40LL))(v6, v7, v8);
  return a1;
}

uint64_t sub_1001EC3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EC3BC);
}

uint64_t sub_1001EC3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for StaticDimension(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v4, a2, v5);
}

uint64_t sub_1001EC3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EC408);
}

uint64_t sub_1001EC408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for StaticDimension(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v5, a2, a2, v6);
}

uint64_t sub_1001EC44C(uint64_t a1)
{
  v4[0] = " ";
  uint64_t result = type metadata accessor for StaticDimension(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

double sub_1001EC4C0( uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1001EC514(*a1, a2, a3, a5, a7, a8);
}

void sub_1001EC4D4(void *a1, int a2, int a3, int a4, int a5, id a6)
{
}

uint64_t sub_1001EC4E8()
{
  return sub_100003B6C( &qword_1002EC8F8,  (uint64_t (*)(uint64_t))&type metadata accessor for SmallGameCenterPlayer,  (uint64_t)&protocol conformance descriptor for GameCenterPlayer);
}

double sub_1001EC514(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v56 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DCAE0 != -1) {
    swift_once(&qword_1002DCAE0, sub_1000DC120);
  }
  uint64_t v61 = v10;
  sub_1000DCD94(&xmmword_1002F0260, v72);
  __int128 v13 = v72[0];
  uint64_t v15 = type metadata accessor for LayoutViewPlaceholder(0LL, v14);
  uint64_t v16 = *(unsigned int *)(v15 + 48);
  uint64_t v17 = *(unsigned __int16 *)(v15 + 52);
  uint64_t v59 = v15;
  swift_allocObject(v15, v16, v17);
  uint64_t v60 = LayoutViewPlaceholder.init(representing:)(*(double *)&v13, *((double *)&v13 + 1));
  uint64_t v18 = GameCenterPlayer.alias.getter();
  uint64_t v20 = v19;
  unint64_t v21 = sub_100028C20();
  uint64_t v55 = a1;
  unint64_t v23 = v21;
  if (qword_1002DC6A0 != -1) {
    swift_once(&qword_1002DC6A0, sub_1000716C8);
  }
  uint64_t v24 = type metadata accessor for FontUseCase(0LL, v22);
  uint64_t v25 = sub_1000061F4(v24, (uint64_t)qword_1002EF030);
  uint64_t ObjectType = swift_getObjectType(a6);
  id v26 = [a6 traitCollection];
  id v57 = a6;
  id v27 = v26;
  uint64_t v28 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v25, v26);

  uint64_t v29 = type metadata accessor for Feature(0LL);
  unint64_t v54 = v23;
  uint64_t v30 = v29;
  uint64_t v63 = v29;
  uint64_t v53 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  uint64_t v64 = v53;
  double v31 = sub_100009D54(&v62);
  uint64_t v32 = enum case for Feature.measurement_with_labelplaceholder(_:);
  double v33 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104LL);
  v33(v31, enum case for Feature.measurement_with_labelplaceholder(_:), v30);
  char v34 = isFeatureEnabled(_:)(&v62);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v62);
  uint64_t v35 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v18,  v20,  v28,  4LL,  0LL,  0LL,  1LL,  0LL,  v34 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v71, v35);
  double v36 = *(uint64_t (**)(char *, uint64_t))(v56 + 8);
  uint64_t v37 = v61;
  uint64_t v38 = v36(v12, v61);
  uint64_t v39 = GameCenterPlayer.displayName.getter(v38);
  uint64_t v55 = v40;
  uint64_t v56 = v39;
  if (qword_1002DC6A8 != -1) {
    swift_once(&qword_1002DC6A8, sub_1000716E0);
  }
  uint64_t v41 = sub_1000061F4(v24, (uint64_t)qword_1002EF048);
  uint64_t v42 = (uint64_t)v57;
  id v43 = [v57 traitCollection];
  uint64_t v44 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v41, v43);

  uint64_t v63 = v30;
  uint64_t v64 = v53;
  __n128 v45 = sub_100009D54(&v62);
  v33(v45, v32, v30);
  char v46 = isFeatureEnabled(_:)(&v62);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v62);
  LOBYTE(v51) = v46 & 1;
  uint64_t v47 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v56,  v55,  v44,  4LL,  0LL,  0LL,  1LL,  0LL,  v51);
  LabelPlaceholderCompatibility.layoutTextView.getter(v70, v47);
  v36(v12, v37);
  sub_1000DCD94(v72, &v62);
  uint64_t v48 = v60;
  uint64_t v66 = v59;
  objc_super v67 = &protocol witness table for LayoutViewPlaceholder;
  uint64_t v65 = v60;
  sub_10001F010((uint64_t)v71, (uint64_t)&v69);
  sub_10001F010((uint64_t)v70, (uint64_t)&v68);
  swift_retain(v48);
  double v49 = sub_1000FBDB8(v42, (uint64_t)&v62, a2, a3);
  swift_release(v48);
  sub_1000DCDD0(&v62);
  _s6Arcade17PillOverlayLayoutVwxx_0(v70);
  _s6Arcade17PillOverlayLayoutVwxx_0(v71);
  sub_1001EC920(v72);
  return v49;
}

void *sub_1001EC920(void *a1)
{
  return a1;
}

void sub_1001EC954(int a1, int a2, int a3, int a4, id a5)
{
  uint64_t v6 = v5;
  [a5 pageMarginInsets];
  uint64_t v7 = (void *)(v5 + OBJC_IVAR____TtC6Arcade39SmallGameCenterPlayerCollectionViewCell_insets);
  *uint64_t v7 = v8;
  v7[1] = v9;
  __int128 v7[2] = v10;
  v7[3] = v11;
  id v12 = *(id *)(v5 + OBJC_IVAR____TtC6Arcade39SmallGameCenterPlayerCollectionViewCell_artworkView);
  v24.value.super.Class isa = 0LL;
  v24.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v24, v13);

  __n128 v14 = *(void **)(v6 + OBJC_IVAR____TtC6Arcade39SmallGameCenterPlayerCollectionViewCell_displayName);
  GameCenterPlayer.displayName.getter();
  if (v15)
  {
    uint64_t v17 = v15;
    NSString v18 = String._bridgeToObjectiveC()();
    *(void *)&double v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }

  else
  {
    NSString v18 = 0LL;
  }

  objc_msgSend(v14, "setText:", v18, v16);

  uint64_t v19 = *(void **)(v6 + OBJC_IVAR____TtC6Arcade39SmallGameCenterPlayerCollectionViewCell_alias);
  GameCenterPlayer.alias.getter();
  if (v20)
  {
    uint64_t v22 = v20;
    id v23 = String._bridgeToObjectiveC()();
    *(void *)&double v21 = swift_bridgeObjectRelease(v22).n128_u64[0];
  }

  else
  {
    id v23 = 0LL;
  }

  objc_msgSend(v19, "setText:", v23, v21);
}

double sub_1001ECA78()
{
  double result = 265.0;
  xmmword_1002F18F0 = xmmword_1002351F0;
  return result;
}

__n128 sub_1001ECA8C()
{
  __asm { FMOV            V0.2D, #25.0 }

  xmmword_1002EC948 = (__int128)result;
  *(__n128 *)&qword_1002EC958 = result;
  return result;
}

uint64_t sub_1001ECAA0()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000FF90(v4, qword_1002EC968);
  sub_1000061F4(v4, (uint64_t)qword_1002EC968);
  if (qword_1002DC648 != -1) {
    swift_once(&qword_1002DC648, sub_1000715C0);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_1000061F4(v6, (uint64_t)qword_1002EEF28);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v3, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  v11[3] = v0;
  v11[4] = &protocol witness table for FontSource;
  uint64_t v8 = sub_100009D54(v11);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  StaticDimension.init(_:scaledLike:)(v11, 22.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

char *sub_1001ECBEC(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v96 = type metadata accessor for SystemImage(0LL);
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  CGFloat v94 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v97 = type metadata accessor for CornerStyle(0LL);
  uint64_t v11 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  Swift::Bool v13 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for FontUseCase(0LL, v14);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  NSString v18 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = OBJC_IVAR____TtC6Arcade14RateButtonView_titleLabel;
  uint64_t v20 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v21 = qword_1002DC650;
  uint64_t v22 = v5;
  if (v21 != -1) {
    swift_once(&qword_1002DC650, sub_1000715D8);
  }
  uint64_t v23 = sub_1000061F4(v15, (uint64_t)qword_1002EEF40);
  UIImage_optional v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v24(v18, v23, v15);
  *(void *)&v5[v19] = sub_1000137B8((uint64_t)v18, 2LL, 0LL, 1, 0);
  uint64_t v25 = OBJC_IVAR____TtC6Arcade14RateButtonView_starRatingView;
  *(void *)&v22[v25] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for StarRatingView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  uint64_t v26 = OBJC_IVAR____TtC6Arcade14RateButtonView_rateLabel;
  if (qword_1002DC648 != -1) {
    swift_once(&qword_1002DC648, sub_1000715C0);
  }
  uint64_t v27 = sub_1000061F4(v15, (uint64_t)qword_1002EEF28);
  v24(v18, v27, v15);
  double v93 = (objc_class *)v20;
  *(void *)&v22[v26] = sub_1000137B8((uint64_t)v18, 2LL, 0LL, 1, 0);
  uint64_t v28 = &v22[OBJC_IVAR____TtC6Arcade14RateButtonView_actionClosure];
  *(void *)uint64_t v28 = 0LL;
  *((void *)v28 + 1) = 0LL;

  uint64_t v29 = (objc_class *)type metadata accessor for RateButtonView();
  v101.id receiver = v22;
  v101.super_class = v29;
  uint64_t v30 = (char *)objc_msgSendSuper2(&v101, "initWithFrame:", a1, a2, a3, a4);
  id v31 = [v30 contentView];
  id v32 = [v31 layer];

  [v32 setAllowsGroupBlending:0];
  id v33 = [v30 contentView];
  [v33 setClipsToBounds:1];

  uint64_t v34 = v97;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for CornerStyle.continuous(_:), v97);
  id v35 = [v30 contentView];
  CornerStyle.apply(withRadius:to:)(v35, 12.0);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v34);
  double v36 = &v30[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  __int128 v37 = *(_OWORD *)&v30[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
  v107[0] = *(_OWORD *)&v30[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  v107[1] = v37;
  char v108 = v30[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)double v36 = 0x4020000000000000LL;
  *((void *)v36 + 1) = 0x4039000000000000LL;
  v36[16] = 0;
  *((void *)v36 + 3) = 0LL;
  v36[32] = 1;
  uint64_t v38 = v30;
  sub_1000690F4((uint64_t)v107, v39, v40);

  v102[0] = xmmword_100233760;
  v102[1] = xmmword_100233770;
  char v103 = 0;
  uint64_t v104 = 0LL;
  uint64_t v105 = 0LL;
  char v106 = 1;
  uint64_t v41 = v38;
  sub_10006779C(v102);

  uint64_t v42 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v43 = v41;
  id v44 = [v42 blackColor];
  id v45 = [v44 CGColor];

  char v46 = &v43[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v47 = *(void **)&v43[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v48 = *(void **)&v43[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
  double v49 = *(void **)&v43[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
  *(void *)char v46 = v45;
  *(int64x2_t *)(v46 + 8) = vdupq_n_s64(1uLL);
  id v50 = v47;
  sub_10000AAF8(v48);
  sub_10000AAF8(v49);
  id v51 = v45;

  sub_10000AB08(v48);
  sub_10000AB08(v49);
  sub_100069248(v47, v48, (unint64_t)v49);

  sub_10000AB08(v48);
  sub_10000AB08(v49);

  uint64_t v52 = &v43[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v53 = *(_DWORD *)&v43[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v51) = *(_DWORD *)&v43[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
  unsigned __int8 v54 = v43[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
  char v55 = v43[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)uint64_t v52 = 1048576000;
  *((_DWORD *)v52 + 1) = 1051931443;
  v52[8] = 0;
  uint64_t v56 = *((unsigned int *)v52 + 3);
  *((_DWORD *)v52 + 3) = 0;
  v52[16] = 1;
  id v57 = v43;
  unsigned __int8 v100 = v54;
  char v99 = v55;
  v58.n128_u32[0] = v53;
  sub_1000693B0((int)v51, v54 | (unint64_t)(v56 << 32), v55, v58);

  char v59 = v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
  v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v59 & 1) == 0)
  {
    char v60 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v57) + 0x98LL))();
    uint64_t v61 = v57;
    sub_1000678F0(v60);
  }

  uint64_t v62 = OBJC_IVAR____TtC6Arcade14RateButtonView_titleLabel;
  uint64_t v63 = *(void **)&v57[OBJC_IVAR____TtC6Arcade14RateButtonView_titleLabel];
  sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  id v64 = v63;
  uint64_t v65 = (void *)static UIColor.opacityA.getter();
  [v64 setTextColor:v65];

  uint64_t v66 = *(_BYTE **)&v57[v62];
  int v67 = v66[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v66[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v67 != 1)
  {
    uint64_t v68 = v66;
    id v69 = [v68 traitCollection];
    char v70 = UITraitCollection.prefersRightToLeftLayouts.getter(v69);

    if ((v70 & 1) != 0) {
      uint64_t v71 = 2LL;
    }
    else {
      uint64_t v71 = 0LL;
    }
    v98.id receiver = v68;
    v98.super_class = v93;
    objc_msgSendSuper2(&v98, "setTextAlignment:", v71);
  }

  id v72 = [v57 contentView];
  [v72 addSubview:*(void *)&v57[v62]];

  uint64_t v73 = OBJC_IVAR____TtC6Arcade14RateButtonView_rateLabel;
  uint64_t v74 = *(void **)&v57[OBJC_IVAR____TtC6Arcade14RateButtonView_rateLabel];
  [v74 setTextAlignment:1];
  id v75 = v74;
  uint64_t v76 = (void *)static UIColor.opacityB.getter();
  [v75 setTextColor:v76];

  id v77 = [v57 contentView];
  [v77 addSubview:*(void *)&v57[v73]];

  uint64_t v78 = OBJC_IVAR____TtC6Arcade14RateButtonView_starRatingView;
  int v79 = *(_BYTE **)&v57[OBJC_IVAR____TtC6Arcade14RateButtonView_starRatingView];
  int v80 = v79[OBJC_IVAR____TtC6Arcade14StarRatingView_starSize];
  v79[OBJC_IVAR____TtC6Arcade14StarRatingView_starSize] = 0;
  if (v80 == 1)
  {
    uint64_t v81 = v95;
    uint64_t v82 = v94;
    uint64_t v83 = v96;
    (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, enum case for SystemImage.starFill(_:), v96);
    sub_100006028(0LL, (unint64_t *)&qword_1002DDB10, &OBJC_CLASS___UIImageSymbolConfiguration_ptr);
    uint64_t v84 = v79;
    uint64_t v85 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)( UIFontTextStyleCallout,  0LL,  1LL,  1LL,  0LL);
    uint64_t v86 = (void *)static SystemImage.load(_:with:)(v82, v85);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v83);
    id v87 = [v86 imageWithRenderingMode:2];

    uint64_t v88 = *(void **)&v84[OBJC_IVAR____TtC6Arcade14StarRatingView_starGlyph];
    *(void *)&v84[OBJC_IVAR____TtC6Arcade14StarRatingView_starGlyph] = v87;

    [v84 setNeedsDisplay];
  }

  id v89 = [v57 contentView];
  id v90 = *(id *)&v57[v78];
  [v89 addSubview:v90];

  return v57;
}

id sub_1001ED474()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (objc_class *)type metadata accessor for RateButtonView();
  v55.id receiver = v0;
  v55.super_class = v6;
  objc_msgSendSuper2(&v55, "layoutSubviews");
  id v7 = [v0 contentView];
  [v7 frame];

  *(void *)&double v8 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  if (qword_1002DD168 != -1) {
    swift_once(&qword_1002DD168, sub_1001ECA8C);
  }
  v56.origin.CGFloat x = sub_10000AA6C(v8, v10, v12, v14, *(double *)&xmmword_1002EC948, *((double *)&xmmword_1002EC948 + 1));
  CGFloat x = v56.origin.x;
  CGFloat y = v56.origin.y;
  double width = v56.size.width;
  double height = v56.size.height;
  uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC6Arcade14RateButtonView_titleLabel];
  double v20 = CGRectGetWidth(v56);
  v57.origin.CGFloat x = x;
  v57.origin.CGFloat y = y;
  v57.size.double width = width;
  v57.size.double height = height;
  objc_msgSend(v19, "measurementsWithFitting:in:", v1, v20, CGRectGetHeight(v57));
  v58.origin.CGFloat x = x;
  v58.origin.CGFloat y = y;
  v58.size.double width = width;
  v58.size.double height = height;
  CGRectGetMinX(v58);
  v59.origin.CGFloat x = x;
  v59.origin.CGFloat y = y;
  v59.size.double width = width;
  v59.size.double height = height;
  CGRectGetMinY(v59);
  [v19 setFrame:CGRect.withLayoutDirection(in:relativeTo:)(v1)];
  if (qword_1002DD170 != -1) {
    swift_once(&qword_1002DD170, sub_1001ECAA0);
  }
  uint64_t v21 = type metadata accessor for StaticDimension(0LL);
  uint64_t v22 = sub_1000061F4(v21, (uint64_t)qword_1002EC968);
  static Dimensions.defaultRoundingRule.getter(v22);
  double v23 = AnyDimension.value(in:rounded:)(v1, v5, v21, &protocol witness table for StaticDimension);
  UIImage_optional v24 = *(void (**)(char *, uint64_t))(v3 + 8);
  v24(v5, v2);
  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC6Arcade14RateButtonView_rateLabel];
  v60.origin.CGFloat x = x;
  v60.origin.CGFloat y = y;
  v60.size.double width = width;
  v60.size.double height = height;
  double v26 = CGRectGetWidth(v60);
  v61.origin.CGFloat x = x;
  v61.origin.CGFloat y = y;
  v61.size.double width = width;
  v61.size.double height = height;
  objc_msgSend(v25, "measurementsWithFitting:in:", v1, v26, CGRectGetHeight(v61));
  double v53 = v27;
  double v54 = v28;
  double v29 = v28;
  uint64_t v30 = *(void **)&v1[OBJC_IVAR____TtC6Arcade14RateButtonView_starRatingView];
  objc_msgSend(v30, "sizeThatFits:", width, height);
  double v32 = v31;
  double v51 = v33;
  double v52 = v23;
  double v34 = v23 + v29 + v33;
  [v19 frame];
  double v35 = v23 + CGRectGetMaxY(v62);
  v63.origin.CGFloat x = x;
  v63.origin.CGFloat y = y;
  v63.size.double width = width;
  v63.size.double height = height;
  double v36 = CGRectGetMidY(v63) - v34 * 0.5;
  if (v36 > v35) {
    double v35 = v36;
  }
  v64.origin.CGFloat x = x;
  v64.origin.CGFloat y = y;
  v64.size.double width = width;
  v64.size.double height = height;
  double v37 = CGRectGetMidX(v64) - v32 * 0.5;
  uint64_t v38 = enum case for FloatingPointRoundingRule.down(_:);
  __n128 v39 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v39(v5, enum case for FloatingPointRoundingRule.down(_:), v2);
  double v40 = CGPoint.rounded(_:)(v5, v37, v35);
  double v42 = v41;
  v24(v5, v2);
  objc_msgSend(v30, "setFrame:", v40, v42, v32, v51);
  v65.origin.CGFloat x = x;
  v65.origin.CGFloat y = y;
  v65.size.double width = width;
  v65.size.double height = height;
  CGFloat MidX = CGRectGetMidX(v65);
  double v44 = v53;
  double v45 = MidX - v53 * 0.5;
  [v30 frame];
  double v46 = v52 + CGRectGetMaxY(v66);
  v39(v5, v38, v2);
  double v47 = CGPoint.rounded(_:)(v5, v45, v46);
  double v49 = v48;
  v24(v5, v2);
  return objc_msgSend(v25, "setFrame:", v47, v49, v44, v54);
}

void sub_1001EDA58(uint64_t a1, void *a2)
{
  int v3 = a1;
  sub_10006734C(a1, a2);
  if (v3 == 2)
  {
    uint64_t v4 = *(void (**)(uint64_t, __n128))(v2 + OBJC_IVAR____TtC6Arcade14RateButtonView_actionClosure);
    if (v4)
    {
      uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade14RateButtonView_actionClosure + 8);
      __n128 v6 = swift_retain(v5);
      v4(v2, v6);
      sub_10000D3D8((uint64_t)v4, v5);
    }
  }

uint64_t sub_1001EDACC()
{
  return sub_10000D3D8( *(void *)(v0 + OBJC_IVAR____TtC6Arcade14RateButtonView_actionClosure),  *(void *)(v0 + OBJC_IVAR____TtC6Arcade14RateButtonView_actionClosure + 8));
}

id sub_1001EDB1C()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for RateButtonView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RateButtonView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade14RateButtonView);
}

uint64_t sub_1001EDBC8(uint64_t (*a1)(void))
{
  return a1();
}

char *sub_1001EDBE8(uint64_t a1, uint64_t a2)
{
  return sub_1001EDCE4( a1,  a2,  &qword_1002ECA80,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter,  &qword_1002ECA88,  &qword_1002ECA90);
}

char *sub_1001EDC0C(uint64_t a1, uint64_t a2)
{
  return sub_1001EDCE4( a1,  a2,  &qword_1002ECA98,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSeeAllGamesDiffablePagePresenter,  &qword_1002ECAA0,  &qword_1002ECAA8);
}

char *sub_1001EDC30(uint64_t a1, uint64_t a2)
{
  return sub_1001EDCE4( a1,  a2,  &qword_1002ECAB0,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericDiffablePagePresenter,  &qword_1002ECAB8,  &qword_1002ECAC0);
}

char *sub_1001EDC54(uint64_t a1, uint64_t a2)
{
  return sub_1001EDCE4( a1,  a2,  &qword_1002ECAC8,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter,  &qword_1002ECAD0,  &qword_1002ECAD8);
}

char *sub_1001EDC78(uint64_t a1, uint64_t a2)
{
  return sub_1001EDCE4( a1,  a2,  &qword_1002ECAE0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter,  &qword_1002ECAE8,  &qword_1002ECAF0);
}

char *sub_1001EDC9C(uint64_t a1, uint64_t a2)
{
  return sub_1001EDCE4( a1,  a2,  &qword_1002ECAF8,  (uint64_t (*)(uint64_t))&type metadata accessor for MSODiffablePagePresenter,  &qword_1002ECB00,  &qword_1002ECB08);
}

char *sub_1001EDCC0(uint64_t a1, uint64_t a2)
{
  return sub_1001EDCE4( a1,  a2,  &qword_1002ECB10,  (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsDiffablePagePresenter,  &qword_1002ECB18,  &qword_1002ECB20);
}

char *sub_1001EDCE4( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5, unint64_t *a6)
{
  *(void *)&v6[qword_1002E1C20] = 0x409F400000000000LL;
  *(void *)&v6[qword_1002E1C28] = 0LL;
  *(void *)&v6[qword_1002E1C30] = 0LL;
  double v12 = v6;
  ShelfBasedCollectionViewControllerDependencies.init()();
  uint64_t v13 = qword_1002EF838;
  id v14 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0LL));
  *(void *)&v12[v13] = CompoundScrollObserver.init(children:)(&_swiftEmptyArrayStorage);
  *(void *)&v12[qword_1002E1C40] = 0LL;
  uint64_t v15 = qword_1002EF848;
  uint64_t v16 = type metadata accessor for ComponentHeightCache(0LL);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  *(void *)&v12[v15] = ComponentHeightCache.init()();
  uint64_t v17 = qword_1002EF850;
  uint64_t v18 = sub_1000031E8(&qword_1002ECA50);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  *(void *)&v12[v17] = SyncEvent.init()();
  v12[qword_1002EF858] = 1;
  *(void *)&v12[qword_1002EF830] = a1;
  uint64_t v19 = type metadata accessor for ImpressionsCalculator(0LL);
  swift_retain(a1);
  BaseObjectGraph.optional<A>(_:)(v71, v19, v19);
  uint64_t v20 = v71[0];
  if (v71[0])
  {
    swift_retain(v71[0]);
    ImpressionsCalculator.isVisible.setter(1LL);
    swift_release(v20);
  }

  uint64_t v21 = type metadata accessor for ImpressionsScrollObserver(0LL);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  uint64_t v22 = swift_retain(v20);
  *(void *)&v12[qword_1002E1C38] = ImpressionsScrollObserver.init(_:)(v22);
  uint64_t v68 = a3;
  uint64_t v23 = sub_1000031E8(a3);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  uint64_t v24 = swift_retain(a1);
  *(void *)&v12[qword_1002EF840] = InfiniteScrollObserver.init(paginatedPresenter:triggerDistance:)(v24, 500.0);

  id v25 = [objc_allocWithZone(UICollectionViewLayout) init];
  swift_retain(a2);
  id v26 = sub_1001FCC14((uint64_t)v25, a2);

  uint64_t v27 = type metadata accessor for PlaybackCoordinator(0LL);
  uint64_t v28 = type metadata accessor for ObjectGraph(0LL);
  id v29 = v26;
  uint64_t v67 = v28;
  inject<A, B>(_:from:)(v71, v27, a2, v27, v28);
  uint64_t v30 = (void *)v71[0];
  double v31 = (char *)v29;
  dispatch thunk of PlaybackCoordinator.setParentViewController(_:)();

  v71[3] = a4(0LL);
  void v71[4] = sub_100003B6C(a5, a4, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
  v71[0] = a1;
  uint64_t v32 = (uint64_t)&v31[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver];
  swift_beginAccess(&v31[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver], v70, 33LL, 0LL);
  swift_retain(a1);
  double v33 = v31;
  sub_1001EFA60((uint64_t)v71, v32);
  swift_endAccess(v70);

  uint64_t v34 = swift_retain(a1);
  uint64_t v35 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v34);
  swift_release(a1);
  if (v35)
  {
    uint64_t v36 = *(void *)&v33[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_artworkLoader];
    uint64_t v37 = swift_retain(v36);
    PendingPageRender.observeAssets(_:)(v37, &protocol witness table for ArtworkLoader);
    swift_release(v35);
    swift_release(v36);
  }

  uint64_t v38 = *(void *)&v33[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_artworkLoader];
  swift_retain(a1);
  uint64_t v39 = swift_retain(v38);
  uint64_t v40 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v39);
  swift_release(a1);
  ArtworkLoader.pageRenderMetrics.setter(v40);
  swift_release(v38);
  uint64_t v41 = type metadata accessor for FocusAvoidanceCollectionElementsObserver();
  double v42 = (uint64_t *)swift_allocObject(v41, 88LL, 7LL);
  id v43 = v33;
  double v44 = sub_1001EF798((uint64_t)v43, v42);

  uint64_t v45 = qword_1002E1C40;
  uint64_t v46 = *(void *)&v43[qword_1002E1C40];
  *(void *)&v43[qword_1002E1C40] = v44;
  swift_release(v46);
  uint64_t v47 = qword_1002EF838;
  double v48 = *(void **)&v43[qword_1002EF838];
  uint64_t v49 = *(void *)&v43[qword_1002EF840];
  uint64_t v50 = sub_100061B94(a6, v68, (uint64_t)&protocol conformance descriptor for InfiniteScrollObserver<A>);
  id v51 = v48;
  uint64_t v52 = swift_retain(v49);
  CompoundScrollObserver.addChild(_:)(v52, v50);

  swift_release(v49);
  uint64_t v53 = *(void *)&v43[qword_1002E1C38];
  if (v53) {
    double v54 = &protocol witness table for ImpressionsScrollObserver;
  }
  else {
    double v54 = 0LL;
  }
  id v55 = *(id *)&v43[v47];
  uint64_t v56 = swift_retain(v53);
  CompoundScrollObserver.addChild(_:)(v56, v54);

  swift_release(v53);
  CGRect v57 = *(void **)&v43[v47];
  uint64_t v58 = *(void *)&v43[v45];
  if (v58) {
    uint64_t v59 = sub_100003B6C( &qword_1002E3A70,  (uint64_t (*)(uint64_t))type metadata accessor for FocusAvoidanceCollectionElementsObserver,  (uint64_t)&unk_100238800);
  }
  else {
    uint64_t v59 = 0LL;
  }
  swift_retain(v58);
  id v60 = v57;
  CompoundScrollObserver.addChild(_:)(v58, v59);

  swift_release(v58);
  uint64_t v61 = *(void *)&v43[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_objectGraph];
  id v62 = *(id *)&v43[v47];
  swift_retain(v61);
  inject<A, B>(_:from:)(v71, v27, v61, v27, v67);
  swift_release(v61);
  uint64_t v63 = v71[0];
  uint64_t v64 = type metadata accessor for PlaybackScrollObserver(0LL);
  swift_allocObject(v64, *(unsigned int *)(v64 + 48), *(unsigned __int16 *)(v64 + 52));
  uint64_t v65 = PlaybackScrollObserver.init(_:)(v63);
  CompoundScrollObserver.addChild(_:)(v65, &protocol witness table for PlaybackScrollObserver);
  swift_release(v20);

  swift_release(v65);
  swift_release(a1);
  swift_release(a2);
  return v43;
}

void (*sub_1001EE290(uint64_t a1))(uint64_t a1)
{
  return sub_1001EFAA8;
}

id sub_1001EE2C0(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v3);
  *(void *)&v3[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_overlayViewController] = 0LL;
  *(void *)&v3[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_activeViewController] = 0LL;
  *(void *)&v3[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_objectGraph] = a2;
  *(void *)&v3[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_presenter] = a1;
  uint64_t v7 = type metadata accessor for ArtworkLoader(0LL);
  double v8 = v3;
  swift_retain(a2);
  swift_retain(a1);
  *(void *)&v8[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_artworkLoader] = inject(_:from:)(v7, a2);

  v15.id receiver = v8;
  v15.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v15, "initWithNibName:bundle:", 0, 0);
  TopChartsDiffablePagePresenter.title.getter();
  if (v10)
  {
    uint64_t v12 = v10;
    NSString v13 = String._bridgeToObjectiveC()();
    *(void *)&double v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }

  else
  {
    NSString v13 = 0LL;
  }

  objc_msgSend(v9, "setTitle:", v13, v11);

  swift_release(a1);
  swift_release(a2);
  return v9;
}

uint64_t sub_1001EE478()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = sub_1000031E8(&qword_1002ECA18);
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  __chkstk_darwin(v2);
  uint64_t v20 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_1000031E8(&qword_1002ECA20);
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  double v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v24.id receiver = v0;
  v24.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v24, "viewDidLoad", v6);
  updateCGFloat d = TimedMetricsPagePresenter.onUpdatePhaseChanged.getter(v9);
  uint64_t v11 = sub_1000031E8(&qword_1002ECA28);
  uint64_t v12 = sub_100061B94(&qword_1002ECA30, &qword_1002ECA28, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v23, v11, v12);
  EventEmitter.addObserver<A>(on:target:method:)(v23, v0, sub_1001EEAD8, 0LL, v11, ObjectType, v12);
  swift_release(updated);
  _s6Arcade17PillOverlayLayoutVwxx_0(v23);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v14 = TopChartsDiffablePagePresenter.onSegmentPresentersUpdated.getter(v13);
  uint64_t v15 = sub_1000031E8(&qword_1002ECA38);
  uint64_t v16 = sub_100061B94(&qword_1002ECA40, &qword_1002ECA38, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v23, v15, v16);
  uint64_t v17 = v20;
  EventEmitter.addObserver<A>(on:target:method:)(v23, v0, sub_1001EED5C, 0LL, v15, ObjectType, v16);
  swift_release(v14);
  _s6Arcade17PillOverlayLayoutVwxx_0(v23);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v17, v22);
  return dispatch thunk of TimedMetricsPagePresenter.didLoad()(v18);
}

void sub_1001EE6A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for JULoadingViewController.PresentationContext(0LL);
  __n128 v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  updateCGFloat d = type metadata accessor for TopChartsDiffablePagePresenter.UpdatePhase(0LL, v5);
  uint64_t v9 = *(void *)(updated - 8);
  __n128 v10 = __chkstk_darwin(updated);
  uint64_t v12 = (uint64_t *)((char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a1, updated, v10);
  uint64_t v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 88))(v12, updated);
  if ((_DWORD)v13 != enum case for TopChartsDiffablePagePresenter.UpdatePhase.completed(_:))
  {
    if ((_DWORD)v13 == enum case for TopChartsDiffablePagePresenter.UpdatePhase.error(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v12, updated);
      uint64_t v35 = *v12;
      uint64_t v36 = v12[1];
      uint64_t v37 = v12[2];
      swift_errorRetain(v35);
      sub_1001EEFB4(v35, v36, v37);
      swift_errorRelease(v35);
      sub_10000D3D8(v36, v37);
      swift_errorRelease(v35);
      return;
    }

    if ((_DWORD)v13 != enum case for TopChartsDiffablePagePresenter.UpdatePhase.started(_:))
    {
      uint64_t v61 = OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_overlayViewController;
      id v62 = *(void **)&v2[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_overlayViewController];
      id v63 = v62;
      static ViewControllerContainment.remove(_:)(v62);

      uint64_t v64 = *(void **)&v2[v61];
      *(void *)&v2[v61] = 0LL;

      uint64_t v65 = *(void **)&v2[v61];
      id v66 = v65;
      id v67 = [v2 view];
      if (v67)
      {
        uint64_t v68 = v67;
        [v67 bounds];
        uint64_t v70 = v69;
        uint64_t v72 = v71;
        uint64_t v74 = v73;
        uint64_t v76 = v75;

        uint64_t v78 = v70;
        uint64_t v79 = v72;
        uint64_t v80 = v74;
        uint64_t v81 = v76;
        char v82 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v65, v2, &v78);

        (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v12, updated);
        return;
      }

      goto LABEL_18;
    }

    uint64_t v38 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v13);
    static JULoadingViewController.PresentationContext.placeholder.getter(v38);
    id v39 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
    uint64_t v40 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v7, v38);
    uint64_t v41 = OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_overlayViewController;
    double v42 = *(void **)&v2[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_overlayViewController];
    id v43 = v42;
    static ViewControllerContainment.remove(_:)(v42);

    double v44 = *(void **)&v2[v41];
    *(void *)&v2[v41] = v40;
    id v45 = v40;

    uint64_t v46 = *(void **)&v2[v41];
    id v47 = v46;
    id v48 = [v2 view];
    if (v48)
    {
      uint64_t v49 = v48;
      [v48 bounds];
      uint64_t v51 = v50;
      uint64_t v53 = v52;
      uint64_t v55 = v54;
      uint64_t v57 = v56;

      uint64_t v78 = v51;
      uint64_t v79 = v53;
      uint64_t v80 = v55;
      uint64_t v81 = v57;
      char v82 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v46, v2, &v78);

      return;
    }

void (*sub_1001EEAD8(void *a1))(uint64_t a1)
{
  *(void *)(swift_allocObject(&unk_10028EB68, 24LL, 7LL) + swift_weakDestroy(v0 + 16) = a1;
  id v2 = a1;
  return sub_1001EFAB0;
}

void sub_1001EEB2C(uint64_t a1)
{
  uint64_t v3 = TopChartsDiffablePagePresenter.initialSegmentIndex.getter();
  uint64_t v4 = v3;
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v3 < v5)
    {
LABEL_3:
      unint64_t v6 = TopChartsDiffablePagePresenter.initialSegmentIndex.getter();
      if ((a1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
        goto LABEL_12;
      }

      if ((v6 & 0x8000000000000000LL) != 0)
      {
        __break(1u);
      }

      else if (v6 < *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
        swift_retain(v7);
LABEL_12:
        uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_objectGraph);
        uint64_t v9 = sub_100003B6C( &qword_1002ECA48,  (uint64_t (*)(uint64_t))&type metadata accessor for TopChartDiffableSegmentPresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
        swift_retain(v7);
        uint64_t v10 = sub_10015F498(v8, v7, v9, (uint64_t)_swiftEmptyArrayStorage, 0x7472616843706F74LL, 0xEF746E656D676553LL);
        id v11 = objc_allocWithZone((Class)type metadata accessor for TopChartDiffableSegmentViewController(0LL));
        uint64_t v14 = sub_1001EDCE4( v7,  v10,  &qword_1002ECA58,  (uint64_t (*)(uint64_t))&type metadata accessor for TopChartDiffableSegmentPresenter,  &qword_1002ECA60,  &qword_1002ECA68);
        sub_1001EF8F4(v14);
        swift_release(v7);

        return;
      }

      __break(1u);
      goto LABEL_22;
    }

    swift_bridgeObjectRetain(a1);
    if (v5) {
      goto LABEL_8;
    }
LABEL_18:
    swift_bridgeObjectRelease(a1);
    sub_1001EF8F4(0LL);
    return;
  }

  if (a1 < 0) {
    uint64_t v12 = a1;
  }
  else {
    uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a1);
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(a1);
  if (v4 < v13) {
    goto LABEL_3;
  }
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v12)) {
    goto LABEL_18;
  }
LABEL_8:
  if ((a1 & 0xC000000000000001LL) != 0)
  {
LABEL_22:
    uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
    goto LABEL_11;
  }

  if (*(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    swift_retain(v7);
LABEL_11:
    swift_bridgeObjectRelease(a1);
    goto LABEL_12;
  }

  __break(1u);
}

uint64_t (*sub_1001EED5C(void *a1))(void *a1)
{
  uint64_t v2 = swift_allocObject(&unk_10028EB18, 24LL, 7LL);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = a1;
  uint64_t v3 = swift_allocObject(&unk_10028EB40, 32LL, 7LL);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = sub_1001EF778;
  *(void *)(v3 + 2swift_weakDestroy(v0 + 4) = v2;
  id v4 = a1;
  return sub_1001C8B2C;
}

void sub_1001EEE08()
{
  v27.id receiver = v0;
  v27.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v27, "viewWillLayoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_overlayViewController];
  if (v1)
  {
    id v2 = [v1 view];
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = [v0 view];
      if (v4)
      {
        uint64_t v5 = v4;
        [v4 bounds];
        double v7 = v6;
        double v9 = v8;
        double v11 = v10;
        double v13 = v12;

        objc_msgSend(v3, "setFrame:", v7, v9, v11, v13);
        goto LABEL_5;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }

id sub_1001EEFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v91 = a3;
  uint64_t v92 = a1;
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v7 = type metadata accessor for OSLogger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v85 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v82 = type metadata accessor for MetricsData(0LL);
  uint64_t v90 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  id v89 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v87 = *(void *)(v13 - 8);
  uint64_t v88 = v13;
  __chkstk_darwin(v13);
  uint64_t v86 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = *(void *)&v3[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_presenter];
  uint64_t v20 = TopChartsDiffablePagePresenter.segmentPresenters.getter(v16);
  uint64_t v21 = v20;
  if ((unint64_t)v20 >> 62)
  {
    if (v20 >= 0) {
      v20 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v20);
  }

  else
  {
    uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  swift_bridgeObjectRelease(v21);
  if (v22)
  {
    if (qword_1002DC378 != -1) {
      swift_once(&qword_1002DC378, sub_100018F7C);
    }
    uint64_t v23 = sub_1000061F4(v7, (uint64_t)qword_1002EE540);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v23, v7);
    uint64_t v24 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v25 = type metadata accessor for LogMessage(0LL);
    uint64_t v26 = swift_allocObject( v24,  ((*(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL))
          + 3LL * *(void *)(*(void *)(v25 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v26 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
    *((void *)&v97 + 1) = ObjectType;
    *(void *)&__int128 v96 = v4;
    objc_super v27 = v4;
    static LogMessage.safe(_:)(&v96);
    sub_100006060((uint64_t)&v96, (uint64_t *)&unk_1002DF680);
    LogMessage.init(stringLiteral:)(0xD00000000000002ELL, 0x8000000100249820LL);
    if (v92)
    {
      swift_getErrorValue(v92, v95, &v93);
      uint64_t v28 = v93;
      uint64_t v29 = v94;
      *((void *)&v97 + 1) = v94;
      uint64_t v30 = sub_100009D54(&v96);
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16LL))(v30, v28, v29);
    }

    else
    {
      __int128 v96 = 0u;
      __int128 v97 = 0u;
    }

    static LogMessage.sensitive(_:)(&v96);
    sub_100006060((uint64_t)&v96, (uint64_t *)&unk_1002DF680);
    Logger.error(_:)(v26, v7, &protocol witness table for OSLogger);
    __n128 v36 = swift_bridgeObjectRelease(v26);
    return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v36);
  }

  else
  {
    uint64_t v31 = (char *)objc_msgSend( objc_allocWithZone((Class)type metadata accessor for ErrorShieldView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
    uint64_t v32 = v92;
    swift_errorRetain(v92);
    ErrorPresenter.error.setter(v32);
    if (a2)
    {
      uint64_t v33 = swift_allocObject(&unk_10028EBE0, 32LL, 7LL);
      uint64_t v34 = v91;
      *(void *)(v33 + swift_weakDestroy(v0 + 16) = a2;
      *(void *)(v33 + 2swift_weakDestroy(v0 + 4) = v34;
      uint64_t v35 = sub_10004AECC;
    }

    else
    {
      uint64_t v33 = swift_allocObject(&unk_10028EB90, 24LL, 7LL);
      swift_weakInit(v33 + 16, v19);
      uint64_t v35 = sub_1001EFAF4;
      uint64_t v34 = v91;
    }

    uint64_t v38 = swift_allocObject(&unk_10028EBB8, 32LL, 7LL);
    *(void *)(v38 + swift_weakDestroy(v0 + 16) = v35;
    *(void *)(v38 + 2swift_weakDestroy(v0 + 4) = v33;
    id v39 = (uint64_t (**)())&v31[OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler];
    uint64_t v40 = *(void *)&v31[OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler];
    uint64_t v41 = *(void *)&v31[OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler + 8];
    *id v39 = sub_10004AECC;
    v39[1] = (uint64_t (*)())v38;
    swift_retain(v38);
    sub_100017A40(a2, v34);
    sub_10000D3D8(v40, v41);
    sub_100135DD4();
    swift_release(v38);
    id v42 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
    id v43 = v31;
    double v44 = (void *)OverlayViewController.init(overlayView:)(v43);
    uint64_t v45 = OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_overlayViewController;
    uint64_t v46 = *(void **)&v4[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_overlayViewController];
    id v47 = v46;
    static ViewControllerContainment.remove(_:)(v46);

    id v48 = *(void **)&v4[v45];
    *(void *)&v4[v45] = v44;
    id v49 = v44;

    uint64_t v50 = *(void **)&v4[v45];
    id v51 = v50;
    id result = [v4 view];
    if (result)
    {
      uint64_t v52 = result;
      [result bounds];
      uint64_t v54 = v53;
      uint64_t v56 = v55;
      uint64_t v58 = v57;
      uint64_t v60 = v59;

      *(void *)&__int128 v96 = v54;
      *((void *)&v96 + 1) = v56;
      *(void *)&__int128 v97 = v58;
      *((void *)&v97 + 1) = v60;
      char v98 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v50, v4, &v96);

      TopChartsDiffablePagePresenter.pageUrl.getter();
      uint64_t v61 = type metadata accessor for URL(0LL);
      uint64_t v62 = *(void *)(v61 - 8);
      uint64_t v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48))(v18, 1LL, v61);
      if ((_DWORD)v63 == 1)
      {
        sub_100006060((uint64_t)v18, (uint64_t *)&unk_1002E1810);
        uint64_t v64 = 0LL;
        uint64_t v65 = 0LL;
      }

      else
      {
        uint64_t v64 = URL.absoluteString.getter(v63);
        uint64_t v65 = v66;
        (*(void (**)(char *, uint64_t))(v62 + 8))(v18, v61);
      }

      uint64_t v67 = v92;
      uint64_t v68 = v85;
      uint64_t v69 = v84;
      uint64_t v70 = v83;
      uint64_t v71 = v82;
      uint64_t v72 = type metadata accessor for PageMetricsEvent(0LL);
      swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
      swift_errorRetain(v67);
      uint64_t v73 = PageMetricsEvent.init(error:pageUrl:)(v67, v64, v65);
      uint64_t v74 = v86;
      uint64_t v75 = dispatch thunk of TimedMetricsPagePresenter.metricsPipeline.getter();
      uint64_t v76 = v89;
      uint64_t v77 = dispatch thunk of MetricsEvent.metricsData.getter(v75);
      static MetricsFieldsContext.emptyContext.getter(v77);
      uint64_t v78 = MetricsPipeline.process(_:using:)(v76, v70);

      swift_release(v73);
      __n128 v79 = swift_release(v78);
      (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v70, v68, v79);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v76, v71);
      return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v87 + 8))(v74, v88, v80);
    }

    else
    {
      __break(1u);
    }
  }

  return result;
}

uint64_t sub_1001EF644(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v1);
  if (result)
  {
    uint64_t v3 = result;
    TopChartsDiffablePagePresenter.update(ignoringCache:)(1);
    return swift_release(v3);
  }

  return result;
}

uint64_t type metadata accessor for TopChartsDiffablePageViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade35TopChartsDiffablePageViewController);
}

uint64_t sub_1001EF754()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1001EF778(uint64_t a1)
{
}

uint64_t *sub_1001EF798(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = sub_1000031E8(&qword_1002ECA70);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a2[2] = (uint64_t)&_swiftEmptySetSingleton;
  *(_OWORD *)(a2 + 3) = 0u;
  *(_OWORD *)(a2 + 5) = 0u;
  a2[7] = 0LL;
  *((_BYTE *)a2 + 6swift_weakDestroy(v0 + 4) = 1;
  a2[9] = 0LL;
  a2[10] = 0LL;
  uint64_t v9 = *(void *)(a1 + qword_1002EF850);
  uint64_t v10 = sub_1000031E8(&qword_1002ECA50);
  uint64_t v11 = sub_100061B94(&qword_1002ECA78, &qword_1002ECA50, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  swift_retain(v9);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v14, v10, v11);
  EventEmitter.addObserver<A>(on:target:method:)(v14, a2, sub_1001EE290, 0LL, v10, v4, v11);
  swift_release(v9);
  _s6Arcade17PillOverlayLayoutVwxx_0(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a2;
}

void sub_1001EF8F4(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_activeViewController;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_activeViewController];
  if (v4)
  {
    id v5 = v4;
    [v5 willMoveToParentViewController:0];
    [v5 removeFromParentViewController];
    id v6 = [v5 view];
    if (!v6)
    {
      __break(1u);
      goto LABEL_11;
    }

    uint64_t v7 = v6;
    [v6 removeFromSuperview];

    uint64_t v8 = *(void **)&v1[v3];
  }

  else
  {
    uint64_t v8 = 0LL;
  }

  *(void *)&v1[v3] = a1;
  id v9 = a1;

  uint64_t v10 = *(void **)&v1[v3];
  if (v10)
  {
    id v15 = v10;
    objc_msgSend(v1, "addChildViewController:");
    id v11 = [v1 view];
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = [v15 view];
      if (v13)
      {
        uint64_t v14 = v13;
        [v12 addSubview:v13];

        [v15 didMoveToParentViewController:v1];
        return;
      }

      goto LABEL_12;
    }

uint64_t sub_1001EFA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E1E80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

void sub_1001EFAA8(uint64_t a1)
{
}

void sub_1001EFAB0(uint64_t a1)
{
}

uint64_t sub_1001EFAD0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001EFAF4()
{
  return sub_1001EF644(v0);
}

uint64_t sub_1001EFAFC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

double sub_1001EFB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v41 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  id v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  id v15 = (char *)&v33 - v14;
  uint64_t v16 = type metadata accessor for Paragraph(0LL);
  unint64_t v17 = sub_1001F0000();
  ItemLayoutContext.typedModel<A>(as:)(v45, v16, v16, v17);
  if (v45[0])
  {
    void v45[3] = v16;
    v45[4] = v17;
    uint64_t v34 = v45[0];
    swift_retain(v45[0]);
    ItemLayoutContext.mutableState.getter(v19);
    uint64_t v20 = type metadata accessor for ObjectGraph(0LL);
    uint64_t v21 = swift_dynamicCastClassUnconditional(v35, v20, 0LL, 0LL, 0LL);
    ItemLayoutContext.componentLayoutOptions.getter(v21);
    uint64_t KeyPath = swift_getKeyPath(&unk_100241F90, v22);
    ItemLayoutContext.subscript.getter(v5);
    swift_release(KeyPath);
    id v24 = sub_100147A04();
    sub_10001F010((uint64_t)v45, (uint64_t)v43);
    uint64_t v25 = sub_1000031E8((uint64_t *)&unk_1002EA170);
    swift_dynamicCast(&v44, v43, v25, v16, 7LL);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    uint64_t v26 = type metadata accessor for NilState(0LL);
    WritableStateLens.init(_:)(v12, v26);
    objc_super v27 = v42;
    sub_10017343C(v44, v28, (uint64_t)v3, (uint64_t)v8, (uint64_t)v5, v24);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v3, v41);
    uint64_t v29 = v44;
    swift_unknownObjectRelease(v24);
    __n128 v30 = swift_release(v29);
    (*(void (**)(void *, uint64_t, __n128))(v38 + 8))(v5, v40, v30);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    _s6Arcade17PillOverlayLayoutVwxx_0(v45);
    id v31 = [v27 contentView];
    [v31 layoutMargins];
    objc_msgSend(v31, "setLayoutMargins:");

    id v32 = [v27 contentView];
    [v32 layoutMargins];
    objc_msgSend(v32, "setLayoutMargins:");

    [v27 setNeedsLayout];
    *(void *)&double result = swift_release(v34).n128_u64[0];
  }

  return result;
}

uint64_t sub_1001EFE8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade27ParagraphCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_100015FDC(v3, a1);
}

double sub_1001EFEE0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade27ParagraphCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_100015F94(a1, v3);
  *(void *)&double result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1001EFF3C(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

id sub_1001EFF84()
{
  v3.id receiver = v0;
  v3.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v3, "prepareForReuse");
  [*(id *)&v0[OBJC_IVAR____TtC6Arcade27ParagraphCollectionViewCell_textLabel] setText:0];
  uint64_t v1 = &v0[OBJC_IVAR____TtC6Arcade27ParagraphCollectionViewCell_lineLengthLimit];
  *(void *)uint64_t v1 = 0LL;
  v1[8] = 1;
  return [v0 setNeedsLayout];
}

unint64_t sub_1001F0000()
{
  unint64_t result = qword_1002E97B0;
  if (!qword_1002E97B0)
  {
    uint64_t v1 = type metadata accessor for Paragraph(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Paragraph, v1);
    atomic_store(result, (unint64_t *)&qword_1002E97B0);
  }

  return result;
}

ValueMetadata *type metadata accessor for ProductPageShelfLayoutSpacingProvider()
{
  return &type metadata for ProductPageShelfLayoutSpacingProvider;
}

uint64_t sub_1001F005C@<X0>(void *a1@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v1 = type metadata accessor for PageGrid(0LL);
  uint64_t v57 = *(void *)(v1 - 8);
  uint64_t v58 = v1;
  __chkstk_darwin(v1);
  uint64_t v56 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = sub_1000031E8(&qword_1002E2080);
  __chkstk_darwin(v61);
  uint64_t v65 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_1000031E8(&qword_1002E1910);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v55 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v55 - v11;
  uint64_t v13 = sub_1000031E8(&qword_1002EA1B0);
  __chkstk_darwin(v13);
  uint64_t v59 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v60 = (char *)&v55 - v16;
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v62 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v64 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ShelfLayoutContext.shelf.getter(v23);
  uint64_t KeyPath = swift_getKeyPath(&unk_100242038, v24);
  uint64_t v63 = v22;
  ReadOnlyLens.subscript.getter(KeyPath, v17);
  __n128 v26 = swift_release(KeyPath);
  objc_super v27 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
  v27(v20, v17, v26);
  ShelfLayoutContext.surroundingShelves.getter(v9, v6);
  sub_100006060((uint64_t)v9, &qword_1002E1910);
  sub_10008E63C((uint64_t)v6, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1LL, v17) == 1)
  {
    sub_100006060((uint64_t)v12, &qword_1002E1910);
    uint64_t v29 = 1LL;
    uint64_t v30 = (uint64_t)v60;
  }

  else
  {
    uint64_t v31 = swift_getKeyPath(&unk_100242038, v28);
    uint64_t v30 = (uint64_t)v60;
    ReadOnlyLens.subscript.getter(v31, v17);
    __n128 v32 = swift_release(v31);
    v27(v12, v17, v32);
    uint64_t v29 = 0LL;
  }

  uint64_t v33 = v64;
  uint64_t v34 = v62;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v30, v29, 1LL, v62);
  uint64_t v35 = (uint64_t)v65;
  uint64_t v36 = (uint64_t)&v65[*(int *)(v61 + 48)];
  uint64_t v37 = v63;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v65, v63, v34);
  sub_10009F204(v30, v36);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v36, 1LL, v34) == 1)
  {
    uint64_t v38 = v66;
    v66[3] = &type metadata for Double;
    v38[4] = &protocol witness table for Double;
    void *v38 = 0LL;
    sub_100006060(v30, &qword_1002EA1B0);
    uint64_t v39 = *(void (**)(char *, uint64_t))(v33 + 8);
    v39(v37, v34);
    sub_100006060(v36, &qword_1002EA1B0);
    return ((uint64_t (*)(uint64_t, uint64_t))v39)(v35, v34);
  }

  uint64_t v41 = v59;
  sub_10009F204(v36, v59);
  id v42 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 88);
  int v43 = v42(v41, v34);
  if (v43 == enum case for Shelf.ContentType.paragraph(_:))
  {
    int v44 = v42(v35, v34);
    uint64_t v45 = &enum case for Shelf.ContentType.titledButtonStack(_:);
  }

  else
  {
    if (v43 == enum case for Shelf.ContentType.titledButtonStack(_:))
    {
      sub_100006060(v36, &qword_1002EA1B0);
      uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
      goto LABEL_12;
    }

    if (v43 == enum case for Shelf.ContentType.privacyFooter(_:))
    {
      int v44 = v42(v35, v34);
      uint64_t v45 = &enum case for Shelf.ContentType.privacyType(_:);
    }

    else
    {
      if (v43 != enum case for Shelf.ContentType.privacyType(_:))
      {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v59, v34);
        goto LABEL_18;
      }

      int v44 = v42(v35, v34);
      uint64_t v45 = &enum case for Shelf.ContentType.privacyHeader(_:);
    }
  }

  if (v44 == *v45)
  {
    uint64_t v46 = sub_100006060(v36, &qword_1002EA1B0);
LABEL_12:
    id v47 = v56;
    uint64_t v48 = ShelfLayoutContext.contentPageGrid.getter(v46);
    double v49 = PageGrid.interRowSpace.getter(v48);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v58);
    uint64_t v50 = (double *)v66;
    v66[3] = &type metadata for CGFloat;
    *((void *)v50 + swift_weakDestroy(v0 + 4) = &protocol witness table for CGFloat;
    *uint64_t v50 = v49;
    sub_100006060(v30, &qword_1002EA1B0);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v37, v34);
  }

id sub_1001F0630(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F071C(*a1, a2, a3);
}

void sub_1001F063C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v3 + OBJC_IVAR____TtC6Arcade29FramedVideoCollectionViewCell_videoContainer)
           + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    id v8 = (id)Strong;
    uint64_t v6 = type metadata accessor for VideoView(0LL);
    uint64_t v7 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v8, a3 & 1, v6, v7);
  }

uint64_t sub_1001F06F0()
{
  return sub_100003B6C( &qword_1002ECB28,  (uint64_t (*)(uint64_t))&type metadata accessor for FramedVideo,  (uint64_t)&protocol conformance descriptor for FramedMedia);
}

id sub_1001F071C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v100 = a3;
  uint64_t v6 = sub_1000031E8(&qword_1002DEA70);
  __chkstk_darwin(v6);
  char v99 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  char v98 = (char *)&v89 - v9;
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v10);
  __int128 v97 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for VideoControls(0LL);
  __chkstk_darwin(v12);
  uint64_t v94 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v93 = (char *)&v89 - v15;
  uint64_t v16 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __chkstk_darwin(v16);
  uint64_t v91 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = type metadata accessor for VideoFillMode(0LL);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  objc_super v101 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for VideoConfiguration(0LL);
  uint64_t v95 = *(void *)(v19 - 8);
  uint64_t v96 = v19;
  __chkstk_darwin(v19);
  uint64_t v92 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for AspectRatio(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v89 - v27;
  uint64_t v29 = *(char **)&v4[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_captionView];
  uint64_t v30 = (void *)FramedMedia.caption.getter(v26);
  uint64_t v102 = a1;
  FramedMedia.ordinal.getter();
  uint64_t v32 = v31;
  [*(id *)&v29[OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_captionLabel] setAttributedText:v30];
  uint64_t v33 = *(void **)&v29[OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_ordinalLabel];
  if (v32) {
    NSString v34 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v34 = 0LL;
  }
  [v33 setText:v34];

  [v29 setNeedsLayout];
  __n128 v35 = swift_bridgeObjectRelease(v32);
  uint64_t v36 = (void *)FramedMedia.caption.getter(v35);
  uint64_t v37 = (uint64_t)[v36 length];

  v4[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_hasCaption] = v37 > 0;
  uint64_t v38 = FramedVideo.artwork.getter([v29 setHidden:v37 < 1]);
  if (v38)
  {
    uint64_t v40 = v38;
    id v41 = [v4 contentView];
    [v41 frame];

    CGRect.subtracting(insets:)([v4 layoutMargins]);
    double v43 = v42;
    double v45 = v44;
    double v47 = Artwork.size.getter(v46);
    AspectRatio.init(_:_:)(v48, v47);
    __n128 v50 = AspectRatio.init(_:_:)(v49, v43);
    v51.n128_f64[0] = AspectRatio.horizontalFraction.getter(v50);
    if (AspectRatio.horizontalFraction.getter(v51) >= v51.n128_f64[0]) {
      double v45 = AspectRatio.height(fromWidth:)(v43);
    }
    else {
      double v43 = AspectRatio.width(fromHeight:)(v45);
    }
    uint64_t v52 = *(void (**)(char *, uint64_t))(v22 + 8);
    v52(v24, v21);
    v52(v28, v21);
    uint64_t v53 = (double *)&v4[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_preferredArtworkSize];
    *uint64_t v53 = v43;
    v53[1] = v45;
    __n128 v39 = swift_release(v40);
  }

  uint64_t v54 = FramedVideo.video.getter(v39);
  if (v54)
  {
    uint64_t v55 = v54;
    uint64_t v56 = (*(uint64_t (**)(char *, void, uint64_t))(v89 + 104))( v101,  enum case for VideoFillMode.scaleAspectFill(_:),  v90);
    uint64_t v57 = FramedVideo.artwork.getter(v56);
    uint64_t v59 = v57;
    if (v57)
    {
      double v60 = Artwork.size.getter(v57);
      uint64_t v61 = v91;
      AspectRatio.init(_:_:)(v62, v60);
      __n128 v58 = swift_release(v59);
      uint64_t v63 = 0LL;
    }

    else
    {
      uint64_t v63 = 1LL;
      uint64_t v61 = v91;
    }

    uint64_t v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v22 + 56))(v61, v63, 1LL, v21, v58);
    uint64_t v65 = v93;
    uint64_t v66 = Video.playbackControls.getter(v64);
    uint64_t v67 = v94;
    uint64_t v68 = Video.autoPlayPlaybackControls.getter(v66);
    char v69 = Video.canPlayFullScreen.getter(v68);
    char v70 = Video.allowsAutoPlay.getter();
    char v71 = Video.looping.getter();
    uint64_t v72 = v92;
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)( v101,  v61,  v65,  v67,  v69 & 1,  v70 & 1,  v71 & 1,  0LL,  0LL,  1);
    uint64_t v73 = type metadata accessor for VideoViewManager(0LL);
    uint64_t v74 = v100;
    uint64_t v75 = BaseObjectGraph.inject<A>(_:)(v103, v73, v73);
    uint64_t v76 = v103[0];
    uint64_t v77 = Video.playbackId.getter(v103, v75);
    uint64_t v78 = (uint64_t)v97;
    Video.videoUrl.getter(v77);
    uint64_t v79 = type metadata accessor for URL(0LL);
    uint64_t v80 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56LL))( v78,  0LL,  1LL,  v79);
    uint64_t v81 = (uint64_t)v98;
    uint64_t v82 = Video.templateMediaEvent.getter(v80);
    uint64_t v83 = (uint64_t)v99;
    Video.templateClickEvent.getter(v82);
    uint64_t v84 = type metadata accessor for VideoView(0LL);
    uint64_t v85 = sub_100003B6C( (unint64_t *)&qword_1002DEA78,  type metadata accessor for VideoView,  (uint64_t)&unk_10023D670);
    uint64_t v86 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)( v103,  v78,  v72,  v81,  v83,  v74,  v84,  v85);
    sub_100006060(v83, &qword_1002DEA70);
    sub_100006060(v81, &qword_1002DEA70);
    sub_100006060(v78, (uint64_t *)&unk_1002E1810);
    sub_100006060((uint64_t)v103, (uint64_t *)&unk_1002DE600);
    sub_1001B195C(v86);
    swift_release(v55);
    __n128 v87 = swift_release(v76);
    uint64_t v54 = (*(uint64_t (**)(char *, uint64_t, __n128))(v95 + 8))(v72, v96, v87);
  }

  v4[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_isFullWidthStyle] = FramedMedia.isFullWidth.getter(v54) & 1;
  sub_1000461EC();
  return [v4 setNeedsLayout];
}

void sub_1001F0DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v45 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v45 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v45 - v17;
  sub_10001F010(a1, (uint64_t)v47);
  uint64_t v19 = sub_1000031E8(&qword_1002E9470);
  uint64_t v20 = type metadata accessor for FramedVideo(0LL);
  if ((swift_dynamicCast(&v46, v47, v19, v20, 6LL) & 1) != 0)
  {
    uint64_t v22 = v46;
    uint64_t v23 = FramedVideo.video.getter(v21);
    if (v23)
    {
      uint64_t v24 = v23;
      v45[1] = a2;
      uint64_t v25 = Video.preview.getter(v23);
      swift_release(v24);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v3 + OBJC_IVAR____TtC6Arcade29FramedVideoCollectionViewCell_videoContainer)
               + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
      if (Strong)
      {
        v45[0] = Strong;
        double v27 = Artwork.size.getter(Strong);
        AspectRatio.init(_:_:)(v28, v27);
        double v29 = *(double *)(v3 + OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_preferredArtworkSize);
        double v30 = *(double *)(v3 + OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_preferredArtworkSize + 8);
        __n128 v32 = AspectRatio.init(_:_:)(v31, v29);
        v33.n128_f64[0] = AspectRatio.horizontalFraction.getter(v32);
        if (AspectRatio.horizontalFraction.getter(v33) >= v33.n128_f64[0]) {
          double v30 = AspectRatio.height(fromWidth:)(v29);
        }
        else {
          double v29 = AspectRatio.width(fromHeight:)(v30);
        }
        NSString v34 = *(void (**)(char *, uint64_t))(v7 + 8);
        v34(v15, v6);
        uint64_t v35 = ((uint64_t (*)(char *, uint64_t))v34)(v18, v6);
        double v36 = Artwork.size.getter(v35);
        AspectRatio.init(_:_:)(v37, v36);
        __n128 v39 = AspectRatio.init(_:_:)(v38, v29);
        v40.n128_f64[0] = AspectRatio.horizontalFraction.getter(v39);
        if (v40.n128_f64[0] >= AspectRatio.horizontalFraction.getter(v40)) {
          double v30 = AspectRatio.height(fromWidth:)(v29);
        }
        else {
          double v29 = AspectRatio.width(fromHeight:)(v30);
        }
        v34(v9, v6);
        v34(v12, v6);
        uint64_t v41 = Artwork.config(_:mode:prefersLayeredImage:)(2LL, 0LL, v29, v30);
        uint64_t v42 = type metadata accessor for VideoView(0LL);
        uint64_t v43 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
        double v44 = (void *)v45[0];
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v41, 2LL, 1LL, v45[0], v42, v43);

        swift_release(v41);
      }

      swift_release(v25);
    }

    swift_release(v22);
  }

uint64_t TVArticleCardTextLayout.init(metrics:headingText:titleText:descriptionText:)@<X0>( uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v8 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a5 + 18swift_weakDestroy(v0 + 4) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a5 + 200) = v8;
  *(_OWORD *)(a5 + 2swift_weakDestroy(v0 + 16) = *(_OWORD *)(a1 + 96);
  __int128 v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a5 + 120) = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 136) = v9;
  __int128 v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a5 + 152) = *(_OWORD *)(a1 + 32);
  *(void *)(a5 + 232) = *(void *)(a1 + 112);
  *(_OWORD *)(a5 + 168) = v10;
  sub_100009D90(a2, a5);
  sub_100009D90(a3, a5 + 40);
  return sub_100009D90(a4, a5 + 80);
}

uint64_t TVArticleCardTextLayout.Metrics.init(headingTopSpace:titleTopSpace:descriptionTopSpace:)@<X0>( __int128 *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_100009D90(a3, a4 + 80);
}

uint64_t TVArticleCardTextLayout.placeChildren(relativeTo:in:)( uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001F1354((uint64_t)v13);
  _VerticalFlowLayout.placeChildren(relativeTo:in:)(a1, a2, a3, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double TVArticleCardTextLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  __int128 v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001F1354((uint64_t)v9);
  double v10 = _VerticalFlowLayout.measurements(fitting:in:)(a1, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

_OWORD *TVArticleCardTextLayout.metrics.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_10000AA88((_OWORD *)(v1 + 120), a1);
}

double sub_1001F1354@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v56 = a1;
  uint64_t v53 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0LL);
  uint64_t v60 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v52 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  uint64_t v58 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002E4D00);
  uint64_t v13 = *(void *)(type metadata accessor for _VerticalFlowLayout.Child(0LL) - 8);
  uint64_t v51 = *(void *)(v13 + 72);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v54 = 2 * v51;
  uint64_t v16 = swift_allocObject(v12, v15 + 3 * v51, v14 | 7);
  __int128 v74 = xmmword_100232070;
  uint64_t v55 = v16;
  *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
  uint64_t v57 = v16 + v15;
  uint64_t v17 = v2[3];
  uint64_t v18 = v2[4];
  uint64_t v19 = sub_100005F8C(v2, v17);
  uint64_t v80 = v17;
  uint64_t v81 = *(void *)(v18 + 8);
  uint64_t v20 = sub_100009D54(&v79);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16LL))(v20, v19, v17);
  unsigned int v72 = enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:);
  uint64_t v73 = *(void (**)(char *))(v9 + 104);
  v73(v11);
  uint64_t v59 = (void (*)(char *, uint64_t))(v2 + 15);
  uint64_t v78 = 0LL;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  uint64_t v69 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
  uint64_t v49 = v5;
  uint64_t v21 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v70 = *(void *)(v5 + 72);
  uint64_t v71 = 2 * v70;
  uint64_t v67 = ((v21 + 32) & ~v21) + 3 * v70;
  uint64_t v68 = (v21 + 32) & ~v21;
  uint64_t v66 = v21 | 7;
  uint64_t v22 = swift_allocObject(v69, v67, v21 | 7);
  *(_OWORD *)(v22 + swift_weakDestroy(v0 + 16) = v74;
  uint64_t v23 = static _VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  uint64_t v24 = static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v23);
  static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v24);
  uint64_t v75 = v22;
  unint64_t v25 = sub_10002E158();
  unint64_t v65 = v25;
  uint64_t v26 = sub_1000031E8(&qword_1002E45E0);
  uint64_t v64 = v26;
  unint64_t v63 = sub_100003228();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v75, v26, v63, v4, v25);
  unsigned int v62 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:);
  uint64_t v27 = v60;
  uint64_t v61 = *(void (**)(char *))(v60 + 104);
  uint64_t v28 = v52;
  uint64_t v29 = v53;
  v61(v52);
  uint64_t v30 = v57;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v79,  v11,  v28,  v59,  &v76,  v7);
  uint64_t v60 = *(void *)(v27 + 8);
  ((void (*)(char *, uint64_t))v60)(v28, v29);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v49 + 8);
  v59(v7, v4);
  sub_10002E1A0((uint64_t)&v76);
  uint64_t v58 = *(void *)(v58 + 8);
  uint64_t v31 = v50;
  ((void (*)(char *, uint64_t))v58)(v11, v50);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v79);
  v51 += v30;
  uint64_t v32 = v2[8];
  uint64_t v33 = v2[9];
  NSString v34 = sub_100005F8C(v2 + 5, v32);
  uint64_t v80 = v32;
  uint64_t v81 = *(void *)(v33 + 8);
  uint64_t v35 = sub_100009D54(&v79);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16LL))(v35, v34, v32);
  ((void (*)(char *, void, uint64_t))v73)(v11, v72, v31);
  uint64_t v78 = 0LL;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  uint64_t v36 = swift_allocObject(v69, v67, v66);
  *(_OWORD *)(v36 + swift_weakDestroy(v0 + 16) = v74;
  uint64_t v37 = static _VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  uint64_t v38 = static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v37);
  static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v38);
  uint64_t v75 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v75, v64, v63, v4, v65);
  ((void (*)(char *, void, uint64_t))v61)(v28, v62, v29);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v79,  v11,  v28,  v2 + 20,  &v76,  v7);
  ((void (*)(char *, uint64_t))v60)(v28, v29);
  v59(v7, v4);
  sub_10002E1A0((uint64_t)&v76);
  uint64_t v39 = v31;
  ((void (*)(char *, uint64_t))v58)(v11, v31);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v79);
  v57 += v54;
  uint64_t v40 = v2[13];
  uint64_t v41 = v2[14];
  uint64_t v42 = sub_100005F8C(v2 + 10, v40);
  uint64_t v80 = v40;
  uint64_t v81 = *(void *)(v41 + 8);
  uint64_t v43 = sub_100009D54(&v79);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16LL))(v43, v42, v40);
  ((void (*)(char *, void, uint64_t))v73)(v11, v72, v39);
  uint64_t v78 = 0LL;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  uint64_t v44 = swift_allocObject(v69, v67, v66);
  *(_OWORD *)(v44 + swift_weakDestroy(v0 + 16) = v74;
  uint64_t v45 = static _VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  uint64_t v46 = static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v45);
  static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v46);
  uint64_t v75 = v44;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v75, v64, v63, v4, v65);
  ((void (*)(char *, void, uint64_t))v61)(v28, v62, v29);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v79,  v11,  v28,  v2 + 25,  &v76,  v7);
  ((void (*)(char *, uint64_t))v60)(v28, v29);
  v59(v7, v4);
  sub_10002E1A0((uint64_t)&v76);
  ((void (*)(char *, uint64_t))v58)(v11, v39);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v79);
  *(void *)&double result = _VerticalFlowLayout.init(expandChildrenToFit:children:)(1LL, v55).n128_u64[0];
  return result;
}

_OWORD *initializeWithCopy for TVArticleCardTextLayout(_OWORD *a1, _OWORD *a2)
{
  __int128 v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 2swift_weakDestroy(v0 + 4) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  __int128 v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 10swift_weakDestroy(v0 + 4) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  __int128 v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  __int128 v8 = *(_OWORD *)((char *)a2 + 184);
  *(_OWORD *)((char *)a1 + 18swift_weakDestroy(v0 + 4) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
  __int128 v9 = a2[14];
  a1[14] = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)a1 + 200, (uint64_t)a2 + 200);
  return a1;
}

void *assignWithCopy for TVArticleCardTextLayout(void *a1, void *a2)
{
  return a1;
}

uint64_t assignWithTake for TVArticleCardTextLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 160));
  __int128 v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 200));
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVArticleCardTextLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 240)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVArticleCardTextLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 232) = 0LL;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 18swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 10swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 240) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 2swift_weakDestroy(v0 + 4) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 240) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVArticleCardTextLayout()
{
  return &type metadata for TVArticleCardTextLayout;
}

uint64_t destroy for TVArticleCardTextLayout.Metrics(void *a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 10);
}

_OWORD *initializeWithCopy for TVArticleCardTextLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 2swift_weakDestroy(v0 + 4) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  __int128 v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 10swift_weakDestroy(v0 + 4) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  return a1;
}

void *assignWithCopy for TVArticleCardTextLayout.Metrics(void *a1, void *a2)
{
  return a1;
}

__n128 initializeWithTake for TVArticleCardTextLayout.Metrics(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[1];
  __int128 v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  __n128 result = (__n128)a2[4];
  __int128 v6 = a2[5];
  __int128 v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 6swift_weakDestroy(v0 + 4) = result;
  return result;
}

uint64_t assignWithTake for TVArticleCardTextLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVArticleCardTextLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVArticleCardTextLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 10swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 120) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 2swift_weakDestroy(v0 + 4) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVArticleCardTextLayout.Metrics()
{
  return &type metadata for TVArticleCardTextLayout.Metrics;
}

unint64_t sub_1001F1F44()
{
  unint64_t result = qword_1002ECB78;
  if (!qword_1002ECB78)
  {
    uint64_t v1 = type metadata accessor for SmallStoryCardCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100242140, v1);
    atomic_store(result, (unint64_t *)&qword_1002ECB78);
  }

  return result;
}

double sub_1001F1F90(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v2 = type metadata accessor for PageGrid(0LL);
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v42 = v2;
  __chkstk_darwin(v2);
  __int128 v4 = (char **)((char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  uint64_t v37 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000031E8(&qword_1002EB230);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  __chkstk_darwin(v7);
  __int128 v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char **)((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v16);
  ReadOnlyLens.value.getter(v46, v14);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  uint64_t KeyPath = swift_getKeyPath(&unk_100242190, v19);
  ItemLayoutContext.subscript.getter(v13);
  swift_release(KeyPath);
  uint64_t v22 = swift_getKeyPath(&unk_1002421C0, v21);
  ReadOnlyLens.subscript.getter(v22, v10);
  __n128 v23 = swift_release(v22);
  (*(void (**)(void *, uint64_t, __n128))(v11 + 8))(v13, v10, v23);
  __n128 v24 = swift_bridgeObjectRelease(v45);
  ItemLayoutContext.state.getter(v24);
  uint64_t v25 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v26 = swift_dynamicCastClassUnconditional(v38, v25, 0LL, 0LL, 0LL);
  uint64_t v27 = (uint64_t)v37;
  ItemLayoutContext.componentLayoutOptions.getter(v26);
  uint64_t v29 = swift_getKeyPath(&unk_1002421F0, v28);
  ItemLayoutContext.subscript.getter(v4);
  swift_release(v29);
  double v31 = PageGrid.componentMeasuringSize(spanning:)(v30, 1.0);
  (*(void (**)(void *, uint64_t, double))(v41 + 8))(v4, v42, v31);
  id v32 = sub_100147A04();
  sub_1000341C0((uint64_t)v46, (uint64_t)v9, v27, (uint64_t)v32);
  double v34 = v33;
  __n128 v35 = swift_unknownObjectRelease(v32);
  (*(void (**)(uint64_t, uint64_t, __n128))(v43 + 8))(v27, v44, v35);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v40);
  _s6Arcade17PillOverlayLayoutVwxx_0(v46);
  return v34;
}

double sub_1001F2274(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = swift_allocObject(&unk_10028EE88, 24LL, 7LL);
  *(void *)(v11 + swift_weakDestroy(v0 + 16) = a2;
  aBlock[4] = sub_1001F2610;
  uint64_t v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100135408;
  void aBlock[3] = &unk_10028EEA0;
  uint64_t v12 = _Block_copy(aBlock);
  __n128 v13 = swift_bridgeObjectRetain(a2);
  static DispatchQoS.unspecified.getter(v13);
  uint64_t v19 = _swiftEmptyArrayStorage;
  unint64_t v14 = sub_100048DF8();
  uint64_t v15 = sub_1000031E8((uint64_t *)&unk_1002DF660);
  unint64_t v16 = sub_100048E40();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(void *)&double result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_1001F2428(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = a1 + 56;
  uint64_t v7 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v8 = -1LL;
  if (v7 < 64) {
    uint64_t v8 = ~(-1LL << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  __n128 v11 = swift_bridgeObjectRetain(a1);
  int64_t v12 = 0LL;
  while (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_20:
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v3 + 16))( v5,  *(void *)(a1 + 48) + *(void *)(v3 + 72) * v14,  v2,  v11);
    uint64_t v18 = sub_1001782D0();
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v18) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v20);
    }
  }

  int64_t v15 = v12 + 1;
  if (__OFADD__(v12, 1LL))
  {
    __break(1u);
    goto LABEL_24;
  }

  if (v15 >= v10) {
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v15);
  ++v12;
  if (v16) {
    goto LABEL_19;
  }
  int64_t v12 = v15 + 1;
  if (v15 + 1 >= v10) {
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16) {
    goto LABEL_19;
  }
  int64_t v12 = v15 + 2;
  if (v15 + 2 >= v10) {
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_20;
  }

  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_22:
    swift_release(a1);
    return;
  }

  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_19;
  }

  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_22;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }

uint64_t sub_1001F25EC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1001F2610()
{
}

uint64_t sub_1001F2618(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001F2628(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

ValueMetadata *type metadata accessor for ResetLocalizerSettingsDebugAction()
{
  return &type metadata for ResetLocalizerSettingsDebugAction;
}

unint64_t sub_1001F2640()
{
  return 0xD000000000000018LL;
}

void sub_1001F2660()
{
  uint64_t v0 = type metadata accessor for LocalPreferences(0LL);
  uint64_t v1 = static LocalPreferences.currentApplication.getter(v0);
  void v4[3] = sub_1000031E8(&qword_1002ECB80);
  void v4[4] = sub_1001F2734();
  sub_100009D54(v4);
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002ECB90);
  PreferenceKey.init(_:)(0xD00000000000001BLL, 0x800000010024E850LL, v2);
  LocalPreferences.removeValue(forKey:)(v4);
  swift_release(v1);
  _s6Arcade17PillOverlayLayoutVwxx_0(v4);
  id v3 = [(id)objc_opt_self(ASKRebootstrapCoordinator) sharedCoordinator];
  [v3 notify];
}

unint64_t sub_1001F2734()
{
  unint64_t result = qword_1002ECB88;
  if (!qword_1002ECB88)
  {
    uint64_t v1 = sub_100003274(&qword_1002ECB80);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PreferenceKey<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002ECB88);
  }

  return result;
}

ValueMetadata *type metadata accessor for DebugActionsGroup()
{
  return &type metadata for DebugActionsGroup;
}

uint64_t sub_1001F2790()
{
  uint64_t v0 = type metadata accessor for IndexPath(0LL);
  sub_10000FF90(v0, qword_1002F1900);
  sub_1000061F4(v0, (uint64_t)qword_1002F1900);
  return IndexPath.init(item:section:)(0LL, 0LL);
}

id sub_1001F27E0()
{
  v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderAvoidsOverscroll] = 0;
  v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_isSupplementaryViewAnimationEnabled] = 1;
  uint64_t v1 = &v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize];
  void *v1 = 0LL;
  v1[1] = 0LL;
  uint64_t v2 = &v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderFrame];
  _OWORD *v2 = 0u;
  v2[1] = 0u;
  id v3 = &v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver];
  uint64_t v4 = (objc_class *)type metadata accessor for CollectionViewTableFlowLayout();
  *id v3 = 0LL;
  v3[1] = 0LL;
  v11.id receiver = v0;
  v11.super_class = v4;
  id v5 = objc_msgSendSuper2(&v11, "init");
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v9 = v5;
  objc_msgSend(v9, "setSectionInset:", UIEdgeInsetsZero.top, left, bottom, right);
  [v9 setMinimumInteritemSpacing:0.0];
  [v9 setMinimumLineSpacing:0.0];
  [v9 setScrollDirection:0];

  return v9;
}

double sub_1001F29B4()
{
  id v1 = [v0 collectionView];
  double v2 = 0.0;
  if (v1)
  {
    id v3 = v1;
    id v4 = [v1 delegate];

    if (v4)
    {
      objc_super v11 = &OBJC_PROTOCOL____TtP6Arcade37CollectionViewDelegateTableFlowLayout_;
      uint64_t v5 = swift_dynamicCastObjCProtocolConditional(v4, 1LL, &v11);
      if (v5 && (uint64_t v6 = (void *)v5, (v7 = [v0 collectionView]) != 0))
      {
        uint64_t v8 = v7;
        [v6 collectionView:v7 heightForGlobalHeaderViewInTableFlowLayout:v0];
        double v2 = v9;
        swift_unknownObjectRelease(v4);
      }

      else
      {
        swift_unknownObjectRelease(v4);
      }
    }
  }

  return v2;
}

uint64_t sub_1001F2AA0()
{
  v27.id receiver = v0;
  v27.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  objc_msgSendSuper2(&v27, "prepareLayout");
  id v1 = [v0 collectionView];
  if (v1)
  {
    double v2 = v1;
    [v1 bounds];
    CGFloat Width = CGRectGetWidth(v28);
    double v4 = sub_1001F29B4();

    uint64_t v5 = (double *)&v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize];
    *uint64_t v5 = Width;
    v5[1] = v4;
  }

  else
  {
    uint64_t v6 = &v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize];
    *(void *)uint64_t v6 = 0LL;
    *((void *)v6 + 1) = 0LL;
  }

  double v7 = 0.0;
  if (v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderAvoidsOverscroll] == 1)
  {
    id v8 = [v0 collectionView];
    if (v8)
    {
      double v9 = v8;
      [v8 contentInset];
      double v7 = v10;
      double v12 = v11;
      [v9 bounds];
      v29.origin.CGFloat x = sub_10000AA6C(v13, v14, v15, v16, v7, v12);
      double MinY = CGRectGetMinY(v29);

      if (MinY < v7) {
        double v7 = MinY;
      }
    }
  }

  uint64_t v18 = (double *)&v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderFrame];
  __int128 v19 = *(_OWORD *)&v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize];
  *uint64_t v18 = 0.0;
  v18[1] = v7;
  *((_OWORD *)v18 + 1) = v19;
  uint64_t v20 = (uint64_t *)&v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver];
  uint64_t v21 = *(void (**)(char *, __n128))&v0[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver];
  if (v21)
  {
    uint64_t v22 = v20[1];
    __n128 v23 = swift_retain(v22);
    v21(v0, v23);
    sub_10000D3D8((uint64_t)v21, v22);
    uint64_t v24 = *v20;
  }

  else
  {
    uint64_t v24 = 0LL;
  }

  uint64_t v25 = v20[1];
  *uint64_t v20 = 0LL;
  v20[1] = 0LL;
  return sub_10000D3D8(v24, v25);
}

double sub_1001F2CBC()
{
  v9.id receiver = v0;
  v9.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  objc_msgSendSuper2(&v9, "collectionViewContentSize");
  double v2 = v1;
  id v3 = [v0 collectionView];
  if (v3)
  {
    double v4 = v3;
    id v5 = [v3 delegate];

    if (v5)
    {
      id v8 = &OBJC_PROTOCOL____TtP6Arcade37CollectionViewDelegateTableFlowLayout_;
      uint64_t v6 = (void *)swift_dynamicCastObjCProtocolConditional(v5, 1LL, &v8);
      if (v6) {
        [v6 contentExtendsUnderGlobalHeader];
      }
      swift_unknownObjectRelease(v5);
    }
  }

  return v2;
}

void *sub_1001F2DC4()
{
  double v1 = v0;
  double v2 = (void *)IndexPath._bridgeToObjectiveC()();
  v15.id receiver = v0;
  v15.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  id v3 = objc_msgSendSuper2(&v15, "layoutAttributesForItemAtIndexPath:", v2);

  if (!v3) {
    return 0LL;
  }
  double v4 = *(double *)&v1[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize + 8];
  uint64_t v6 = v3;
  if (!v5)
  {
    id v7 = objc_msgSend(v1, "collectionView", COERCE_DOUBLE(1), v4);
    if (v7)
    {
      id v8 = v7;
      id v9 = [v7 delegate];

      if (v9)
      {
        double v14 = &OBJC_PROTOCOL____TtP6Arcade37CollectionViewDelegateTableFlowLayout_;
        double v10 = (void *)swift_dynamicCastObjCProtocolConditional(v9, 1LL, &v14);
        if (v10)
        {
          unsigned __int8 v11 = [v10 contentExtendsUnderGlobalHeader];
          swift_unknownObjectRelease(v9);
          uint64_t v6 = v3;
          if ((v11 & 1) != 0) {
            return v6;
          }
        }

        else
        {
          swift_unknownObjectRelease(v9);
        }
      }
    }

    unint64_t v12 = sub_1000B9B2C();
    uint64_t v6 = (void *)NSCopying.makeCopy()(v12);
    [v6 frame];
    objc_msgSend(v6, "setFrame:");
  }

  return v6;
}

id sub_1001F2FDC(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  if (a1 == 0xD000000000000035LL && a2 == 0x80000001002490B0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000035LL, 0x80000001002490B0LL, 0LL) & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    uint64_t v6 = (void *)IndexPath._bridgeToObjectiveC()();
    id v7 =  [(id)objc_opt_self(UICollectionViewLayoutAttributes) layoutAttributesForSupplementaryViewOfKind:v5 withIndexPath:v6];

    objc_msgSend( v7,  "setFrame:",  *(double *)&v3[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderFrame],  *(double *)&v3[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderFrame + 8],  *(double *)&v3[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderFrame + 16],  *(double *)&v3[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderFrame + 24]);
    [v7 setZIndex:10];
  }

  else
  {
    NSString v9 = String._bridgeToObjectiveC()();
    double v10 = (void *)IndexPath._bridgeToObjectiveC()();
    v21.id receiver = v2;
    v21.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
    id v11 = objc_msgSendSuper2(&v21, "layoutAttributesForSupplementaryViewOfKind:atIndexPath:", v9, v10);

    if (!v11) {
      return 0LL;
    }
    double v12 = *(double *)&v3[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize + 8];
    id v7 = v11;
    if (!v13)
    {
      id v14 = objc_msgSend(v3, "collectionView", COERCE_DOUBLE(1), v12);
      if (v14)
      {
        objc_super v15 = v14;
        id v16 = [v14 delegate];

        if (v16)
        {
          uint64_t v20 = &OBJC_PROTOCOL____TtP6Arcade37CollectionViewDelegateTableFlowLayout_;
          int64_t v17 = (void *)swift_dynamicCastObjCProtocolConditional(v16, 1LL, &v20);
          if (v17)
          {
            unsigned __int8 v18 = [v17 contentExtendsUnderGlobalHeader];
            swift_unknownObjectRelease(v16);
            id v7 = v11;
            if ((v18 & 1) != 0) {
              return v7;
            }
          }

          else
          {
            swift_unknownObjectRelease(v16);
          }
        }
      }

      unint64_t v19 = sub_1000B9B2C();
      id v7 = (id)NSCopying.makeCopy()(v19);
      [v7 frame];
      objc_msgSend(v7, "setFrame:");
    }
  }

  return v7;
}

void *sub_1001F3260()
{
  double v1 = v0;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = (void *)IndexPath._bridgeToObjectiveC()();
  v16.id receiver = v0;
  v16.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  id v4 = objc_msgSendSuper2(&v16, "layoutAttributesForDecorationViewOfKind:atIndexPath:", v2, v3);

  if (!v4) {
    return 0LL;
  }
  double v5 = *(double *)&v1[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize + 8];
  id v7 = v4;
  if (!v6)
  {
    id v8 = objc_msgSend(v1, "collectionView", COERCE_DOUBLE(1), v5);
    if (v8)
    {
      NSString v9 = v8;
      id v10 = [v8 delegate];

      if (v10)
      {
        objc_super v15 = &OBJC_PROTOCOL____TtP6Arcade37CollectionViewDelegateTableFlowLayout_;
        id v11 = (void *)swift_dynamicCastObjCProtocolConditional(v10, 1LL, &v15);
        if (v11)
        {
          unsigned __int8 v12 = [v11 contentExtendsUnderGlobalHeader];
          swift_unknownObjectRelease(v10);
          id v7 = v4;
          if ((v12 & 1) != 0) {
            return v7;
          }
        }

        else
        {
          swift_unknownObjectRelease(v10);
        }
      }
    }

    unint64_t v13 = sub_1000B9B2C();
    id v7 = (void *)NSCopying.makeCopy()(v13);
    [v7 frame];
    objc_msgSend(v7, "setFrame:");
  }

  return v7;
}

id sub_1001F33F0( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, char *))
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned __int8 v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  uint64_t v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  id v16 = a1;
  int64_t v17 = (void *)a5(v13, v15, v12);

  __n128 v18 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v18);
  return v17;
}

uint64_t sub_1001F34C4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v5 = v4;
  double v11 = *(double *)&v4[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize];
  double v10 = *(double *)&v4[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize + 8];
  BOOL v12 = v10 < CGRectGetMinY(*(CGRect *)&a1);
  double v13 = -0.0;
  if (v12) {
    double v13 = v10;
  }
  double v14 = v13 + a4;
  double v15 = 0.0;
  if (v12) {
    double v15 = v10;
  }
  CGFloat v16 = a2 - v15;
  v44.id receiver = v4;
  v44.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  id v17 = objc_msgSendSuper2(&v44, "layoutAttributesForElementsInRect:", a1, v16, a3, v14);
  if (!v17) {
    return 0LL;
  }
  __n128 v18 = v17;
  unint64_t v19 = sub_1000B9B2C();
  uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

  if (v11 >= COERCE_DOUBLE(1LL) && v10 >= COERCE_DOUBLE(1LL))
  {
    uint64_t v43 = v20;
    id v22 = objc_msgSend(v5, "collectionView", swift_bridgeObjectRetain(v20).n128_f64[0]);
    if (v22)
    {
      __n128 v23 = v22;
      id v24 = [v22 delegate];

      if (v24)
      {
        uint64_t v42 = &OBJC_PROTOCOL____TtP6Arcade37CollectionViewDelegateTableFlowLayout_;
        uint64_t v25 = (void *)swift_dynamicCastObjCProtocolConditional(v24, 1LL, &v42);
        if (v25)
        {
          unsigned __int8 v26 = [v25 contentExtendsUnderGlobalHeader];
          swift_unknownObjectRelease(v24);
          if ((v26 & 1) != 0)
          {
            swift_bridgeObjectRelease(v20);
LABEL_18:
            v45.origin.CGFloat x = a1;
            v45.origin.CGFloat y = a2;
            v45.size.double width = a3;
            v45.size.double height = a4;
            if (CGRectIntersectsRect( v45,  *(CGRect *)&v5[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderFrame]))
            {
              id v28 = [v5 collectionView];
              if (v28)
              {
                CGRect v29 = v28;
                id v30 = [v28 numberOfSections];
              }

              else
              {
                id v30 = 0LL;
              }

              if (qword_1002DD178 != -1) {
                swift_once(&qword_1002DD178, sub_1001F2790);
              }
              uint64_t v31 = type metadata accessor for IndexPath(0LL);
              uint64_t v32 = sub_1000061F4(v31, (uint64_t)qword_1002F1900);
              IndexPath.section.getter(v32);
              if (v33 < (uint64_t)v30)
              {
                NSString v34 = String._bridgeToObjectiveC()();
                __n128 v35 = (void *)IndexPath._bridgeToObjectiveC()();
                id v36 = [v5 layoutAttributesForSupplementaryViewOfKind:v34 atIndexPath:v35];

                if (v36)
                {
                  id v37 = v36;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
                  unint64_t v39 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
                  unint64_t v38 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
                  if (v39 >= v38 >> 1) {
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)( v38 > 1,  v39 + 1,  1LL);
                  }
                  uint64_t v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v37);
                  specialized Array._endMutation()(v40);
                }
              }
            }

            return v43;
          }
        }

        else
        {
          swift_unknownObjectRelease(v24);
        }
      }
    }

    objc_super v27 = sub_1001F4068(v20, 0xD000000000000035LL, 0x80000001002490B0LL);
    swift_bridgeObjectRelease_n(v20, 2LL);
    uint64_t v43 = (uint64_t)v27;
    goto LABEL_18;
  }

  return v20;
}

id sub_1001F38B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  BOOL v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  uint64_t v14 = v13;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  if (*((_BYTE *)a1 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_isSupplementaryViewAnimationEnabled) == 1)
  {
    id v15 = a1;
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = (void *)IndexPath._bridgeToObjectiveC()();
    __n128 v18 = (objc_class *)type metadata accessor for CollectionViewTableFlowLayout();
    v21.id receiver = v15;
    v21.super_class = v18;
    id v19 = objc_msgSendSuper2(&v21, *a5, v16, v17);

    swift_bridgeObjectRelease(v14);
  }

  else
  {
    swift_bridgeObjectRelease(v14);
    id v19 = 0LL;
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v19;
}

uint64_t sub_1001F39E0(double a1, double a2, double a3, double a4)
{
  if (!v9 && v4[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderAvoidsOverscroll] == 1)
  {
    if (CGRectGetMinY(*(CGRect *)&a1) <= 0.0) {
      return 1LL;
    }
    double MinY = CGRectGetMinY(*(CGRect *)&v4[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderFrame]);
    id v11 = [v4 collectionView];
    if (v11)
    {
      BOOL v12 = v11;
      [v11 contentInset];
      double v14 = v13;

      if (MinY < v14) {
        return 1LL;
      }
    }

    else if (MinY < 0.0)
    {
      return 1LL;
    }
  }

  v16.id receiver = v4;
  v16.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  return (uint64_t)objc_msgSendSuper2(&v16, "shouldInvalidateLayoutForBoundsChange:", a1, a2, a3, a4);
}

void *sub_1001F3B74(double a1, double a2, double a3, double a4)
{
  v30.id receiver = v4;
  v30.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  id v9 = objc_msgSendSuper2(&v30, "invalidationContextForBoundsChange:", a1, a2, a3, a4);
  uint64_t v10 = objc_opt_self(&OBJC_CLASS___UICollectionViewFlowLayoutInvalidationContext);
  id v11 = (void *)swift_dynamicCastObjCClassUnconditional(v9, v10, 0LL, 0LL, 0LL);
  id v12 = [v4 collectionView];
  if (v12)
  {
    double v13 = v12;
    [v12 bounds];
    double v15 = v14;
    double v17 = v16;

    if (v15 != a3) {
      return v11;
    }
  }

  else
  {
    double v17 = 0.0;
    if (a3 != 0.0) {
      return v11;
    }
  }

  if (v17 == a4
    && *(double *)&v4[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize] >= COERCE_DOUBLE(1LL)
    && *(double *)&v4[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize + 8] >= COERCE_DOUBLE(1LL))
  {
    NSString v19 = String._bridgeToObjectiveC()();
    uint64_t v20 = sub_1000031E8(&qword_1002ECC00);
    uint64_t v21 = type metadata accessor for IndexPath(0LL);
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
    uint64_t v24 = (v23 + 32) & ~v23;
    uint64_t v25 = swift_allocObject(v20, v24 + *(void *)(v22 + 72), v23 | 7);
    *(_OWORD *)(v25 + swift_weakDestroy(v0 + 16) = xmmword_100233580;
    uint64_t v26 = v25 + v24;
    if (qword_1002DD178 != -1) {
      swift_once(&qword_1002DD178, sub_1001F2790);
    }
    uint64_t v27 = sub_1000061F4(v21, (uint64_t)qword_1002F1900);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v27, v21);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend( v11,  "invalidateSupplementaryElementsOfKind:atIndexPaths:",  v19,  isa,  swift_bridgeObjectRelease(v25).n128_f64[0]);
  }

  return v11;
}

void sub_1001F3E00(void *a1)
{
  NSString v2 = v1;
  v24.id receiver = v2;
  v24.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  objc_msgSendSuper2(&v24, "invalidateLayoutWithContext:", a1);
  id v4 = [a1 invalidatedSupplementaryIndexPaths];
  if (v4)
  {
    double v5 = v4;
    uint64_t v6 = sub_1000031E8(&qword_1002ECBF8);
    uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v5,  &type metadata for String,  v6,  &protocol witness table for String);

    if (*(void *)(v7 + 16))
    {
      sub_1000E8690(0xD000000000000035LL, 0x80000001002490B0LL);
      char v9 = v8;
      *(void *)&double v10 = swift_bridgeObjectRelease(v7).n128_u64[0];
      if ((v9 & 1) != 0)
      {
        double v11 = 0.0;
        if (v2[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderAvoidsOverscroll] == 1)
        {
          id v12 = objc_msgSend(v2, "collectionView", v10);
          if (v12)
          {
            double v13 = v12;
            [v12 contentInset];
            double v11 = v14;
            double v16 = v15;
            [v13 bounds];
            v25.origin.CGFloat x = sub_10000AA6C(v17, v18, v19, v20, v11, v16);
            double MinY = CGRectGetMinY(v25);

            if (MinY < v11) {
              double v11 = MinY;
            }
          }
        }

        uint64_t v22 = (double *)&v2[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderFrame];
        __int128 v23 = *(_OWORD *)&v2[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_globalHeaderSize];
        *uint64_t v22 = 0.0;
        v22[1] = v11;
        *((_OWORD *)v22 + 1) = v23;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v7);
    }
  }

uint64_t sub_1001F3FF0()
{
  return sub_10000D3D8( *(void *)(v0 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver),  *(void *)(v0 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver + 8));
}

id sub_1001F4004()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CollectionViewTableFlowLayout()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade29CollectionViewTableFlowLayout);
}

void *sub_1001F4068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
LABEL_3:
  unint64_t result = _swiftEmptyArrayStorage;
  if (v5)
  {
    unint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)(v5);
    if ((v5 & 0x8000000000000000LL) == 0)
    {
      uint64_t v7 = 0LL;
      while (1)
      {
        if (v5 == v7)
        {
          __break(1u);
LABEL_23:
          if (a1 < 0) {
            uint64_t v22 = a1;
          }
          else {
            uint64_t v22 = a1 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain(a1);
          uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v22);
          swift_bridgeObjectRelease(a1);
          goto LABEL_3;
        }

        if ((a1 & 0xC000000000000001LL) != 0) {
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
        }
        else {
          id v14 = *(id *)(a1 + 8 * v7 + 32);
        }
        double v11 = v14;
        id v15 = [v14 representedElementKind];
        if (v15)
        {
          double v16 = v15;
          uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
          uint64_t v19 = v18;

          if (v17 == a2 && v19 == a3)
          {
            swift_bridgeObjectRelease(a3);
            goto LABEL_7;
          }

          char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, a2, a3, 0LL);
          swift_bridgeObjectRelease(v19);
          if ((v21 & 1) != 0) {
            goto LABEL_7;
          }
        }

        unint64_t v8 = sub_1000B9B2C();
        char v9 = (void *)NSCopying.makeCopy()(v8);
        [v9 frame];
        objc_msgSend(v9, "setFrame:");

        double v11 = v9;
LABEL_7:
        ++v7;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        uint64_t v12 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
        uint64_t v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
        specialized ContiguousArray._endMutation()(v13);
        if (v5 == v7) {
          return _swiftEmptyArrayStorage;
        }
      }
    }

    __break(1u);
  }

  return result;
}

double sub_1001F425C(void *a1)
{
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002DE260);
  uint64_t v4 = swift_allocObject(v3, 64LL, 7LL);
  *(_OWORD *)(v4 + swift_weakDestroy(v0 + 16) = xmmword_100233580;
  _StringGuts.grow(_:)(55LL);
  v5._countAndFlagsBits = 0xD000000000000035LL;
  v5._object = a1;
  String.append(_:)(v5);
  id v6 = [v1 description];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  char v9 = v8;

  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  __n128 v11 = swift_bridgeObjectRelease(v9);
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 32) = 0LL;
  *(void *)(v4 + 40) = 0xE000000000000000LL;
  debugPrint(_:separator:terminator:)(v4, 32LL, 0xE100000000000000LL, 10LL, 0xE100000000000000LL, v11);
  *(void *)&double result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for DebugMetricsInspectorViewController(uint64_t a1)
{
  uint64_t result = qword_1002ECC30;
  if (!qword_1002ECC30) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DebugMetricsInspectorViewController);
  }
  return result;
}

uint64_t sub_1001F4394()
{
  return type metadata accessor for DebugMetricsInspectorViewController(0LL);
}

double sub_1001F439C(double a1)
{
  if (qword_1002DCA60 != -1) {
    swift_once(&qword_1002DCA60, sub_1000BC758);
  }
  uint64_t v2 = type metadata accessor for AspectRatio(0LL);
  sub_1000061F4(v2, (uint64_t)qword_1002F0000);
  AspectRatio.height(fromWidth:)(a1);
  return a1;
}

id sub_1001F4410()
{
  return sub_1001F4774();
}

uint64_t sub_1001F4420@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  if ((a1 & 1) != 0)
  {
    swift_getObjectType(a2);
    double v7 = PageTraitEnvironment.pageContentSize.getter();
    uint64_t v6 = qword_1002DCA60;
    a4 = (v7 + -80.0) / 3.0;
  }

  else
  {
    uint64_t v6 = qword_1002DCA60;
  }

  if (v6 != -1) {
    swift_once(&qword_1002DCA60, sub_1000BC758);
  }
  uint64_t v8 = type metadata accessor for AspectRatio(0LL);
  sub_1000061F4(v8, (uint64_t)qword_1002F0000);
  double v9 = AspectRatio.height(fromWidth:)(a4);
  ComponentPrefetchSizing.init(size:contentMode:)(1LL, a4, v9);
  uint64_t v10 = type metadata accessor for ComponentPrefetchSizing(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(a3, 0LL, 1LL, v10);
}

__n128 sub_1001F44F8@<Q0>(uint64_t a1@<X1>, void *a2@<X4>, uint64_t a3@<X8>)
{
  __int128 v4 = v6[3];
  *(_OWORD *)(a3 + 32) = v6[2];
  *(_OWORD *)(a3 + 48) = v4;
  *(_OWORD *)(a3 + 6swift_weakDestroy(v0 + 4) = v6[4];
  __n128 result = (__n128)v6[1];
  *(_OWORD *)a3 = v6[0];
  *(__n128 *)(a3 + swift_weakDestroy(v0 + 16) = result;
  return result;
}

uint64_t sub_1001F4548()
{
  return sub_100003B6C( &qword_1002ECD28,  (uint64_t (*)(uint64_t))&type metadata accessor for Brick,  (uint64_t)&protocol conformance descriptor for Brick);
}

double sub_1001F4574@<D0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_getObjectType(a2);
  double v10 = (PageTraitEnvironment.pageContentSize.getter() + -80.0) / 3.0;
  static Shelf.PresentationHints.showSupplementaryText.getter(v11);
  uint64_t v12 = sub_100003B6C( &qword_1002EA0E0,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints,  (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  char v13 = dispatch thunk of SetAlgebra.isSuperset(of:)(v9, v6, v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v13 & 1) != 0)
  {
    if (qword_1002DCA68 != -1) {
      swift_once(&qword_1002DCA68, sub_1000BC7A8);
    }
    uint64_t v15 = type metadata accessor for BrickLayout.Metrics(0LL, v14);
    double v16 = qword_1002F0018;
  }

  else
  {
    if (qword_1002DCA70 != -1) {
      swift_once(&qword_1002DCA70, sub_1000BCA44);
    }
    uint64_t v15 = type metadata accessor for BrickLayout.Metrics(0LL, v14);
    double v16 = qword_1002F0030;
  }

  uint64_t v17 = sub_1000061F4(v15, (uint64_t)v16);
  uint64_t v19 = type metadata accessor for BrickLayout(0LL, v18);
  uint64_t v20 = sub_100003B6C( &qword_1002E63B0,  (uint64_t (*)(uint64_t))&type metadata accessor for BrickLayout,  (uint64_t)&protocol conformance descriptor for BrickLayout);
  double v21 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)( v17,  a2,  v19,  v20,  v10,  1.79769313e308);
  uint64_t v23 = v22;
  objc_msgSend(a2, "pageMarginInsets", v21);
  *(void *)a3 = v24;
  *(void *)(a3 + 8) = v25;
  *(void *)(a3 + swift_weakDestroy(v0 + 16) = v26;
  *(void *)(a3 + 2swift_weakDestroy(v0 + 4) = v27;
  *(double *)(a3 + 32) = v10;
  *(void *)(a3 + 40) = v23;
  double result = 40.0;
  *(_OWORD *)(a3 + 48) = xmmword_1002346C0;
  *(_BYTE *)(a3 + 6swift_weakDestroy(v0 + 4) = 0;
  *(void *)(a3 + 72) = a1;
  return result;
}

id sub_1001F4774()
{
  double v1 = v0;
  uint64_t v2 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Brick.accessibilityLabel.getter(v4);
  if (v7)
  {
    uint64_t v9 = v7;
    NSString v10 = String._bridgeToObjectiveC()();
    *(void *)&double v8 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }

  else
  {
    NSString v10 = 0LL;
  }

  objc_msgSend(v1, "setAccessibilityLabel:", v10, v8);

  static Shelf.PresentationHints.showSupplementaryText.getter();
  uint64_t v11 = sub_100003B6C( &qword_1002EA0E0,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints,  (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  char v12 = dispatch thunk of SetAlgebra.isSuperset(of:)(v6, v2, v11);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  if ((v12 & 1) != 0)
  {
    uint64_t v15 = Brick.shortEditorialDescription.getter(v13);
    double v16 = (uint64_t *)&v1[OBJC_IVAR____TtC6Arcade23BrickCollectionViewCell_shortDescriptionLabelText];
    uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC6Arcade23BrickCollectionViewCell_shortDescriptionLabelText];
    uint64_t v18 = *(void *)&v1[OBJC_IVAR____TtC6Arcade23BrickCollectionViewCell_shortDescriptionLabelText + 8];
    *double v16 = v15;
    v16[1] = v19;
    sub_1000BD094(v17, v18);
    *(void *)&double v14 = swift_bridgeObjectRelease(v18).n128_u64[0];
  }

  return objc_msgSend(v1, "setNeedsLayout", v14);
}

void sub_1001F48C4(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0) {
    uint64_t v2 = sub_100007908((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v4[0] = (uint64_t)(v2 + 32);
  v4[1] = v3;
  sub_1001F492C(v4);
  *a1 = v2;
}

void sub_1001F492C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000LL) == 0)
    {
      if (v3) {
        sub_1001F4FD0(0LL, v3, 1LL, a1);
      }
      return;
    }

    goto LABEL_154;
  }

  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_153;
  }
  Swift::Int v111 = v4;
  char v108 = a1;
  if (v3 <= 1)
  {
    double v8 = _swiftEmptyArrayStorage;
    double v114 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_119:
      objc_super v101 = v11;
      uint64_t v110 = v8;
      if (v12 < 2) {
        goto LABEL_116;
      }
      uint64_t v102 = *v108;
      while (1)
      {
        unint64_t v103 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_148;
        }
        if (!v102) {
          goto LABEL_161;
        }
        uint64_t v100 = v101;
        uint64_t v104 = *(void *)&v101[16 * v103 + 32];
        uint64_t v105 = *(void *)&v101[16 * v12 + 24];
        sub_1001F509C( (char *)(v102 + 16 * v104),  (char *)(v102 + 16LL * *(void *)&v101[16 * v12 + 16]),  v102 + 16 * v105,  v114);
        if (v1) {
          goto LABEL_115;
        }
        if (v105 < v104) {
          goto LABEL_149;
        }
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0) {
          uint64_t v100 = sub_1000078CC((uint64_t)v100);
        }
        if (v103 >= *((void *)v100 + 2)) {
          goto LABEL_150;
        }
        char v106 = &v100[16 * v103 + 32];
        *(void *)char v106 = v104;
        *((void *)v106 + 1) = v105;
        unint64_t v107 = *((void *)v100 + 2);
        if (v12 > v107) {
          goto LABEL_151;
        }
        memmove(&v100[16 * v12 + 16], &v100[16 * v12 + 32], 16 * (v107 - v12));
        objc_super v101 = v100;
        *((void *)v100 + 2) = v107 - 1;
        unint64_t v12 = v107 - 1;
        if (v107 <= 2) {
          goto LABEL_116;
        }
      }
    }

    uint64_t v110 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for String);
    *(void *)(v7 + swift_weakDestroy(v0 + 16) = v6;
    uint64_t v110 = (void *)v7;
    double v114 = (char *)(v7 + 32);
  }

  Swift::Int v9 = 0LL;
  uint64_t v10 = *a1;
  uint64_t v109 = v10 + 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v112 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_45;
    }
    double v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    uint64_t v18 = v17[1];
    if (v15 == *v17 && v16 == v18)
    {
      Swift::Int v21 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_44;
      }
      int v20 = 0;
    }

    else
    {
      int v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *v17, v18, 1LL);
      Swift::Int v21 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }

    uint64_t v22 = (uint64_t *)(v109 + 16 * v21);
    do
    {
      uint64_t v24 = *(v22 - 1);
      uint64_t v25 = *v22;
      uint64_t v26 = (void *)(v10 + 16 * v9);
      uint64_t v27 = v26[1];
      if (v24 == *v26 && v25 == v27)
      {
        if ((v20 & 1) != 0) {
          goto LABEL_37;
        }
      }

      else if (((v20 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *v26, v27, 1LL)) & 1) != 0)
      {
        goto LABEL_36;
      }

      v22 += 2;
      Swift::Int v23 = v21 + 1;
      Swift::Int v9 = v21;
      Swift::Int v21 = v23;
    }

    while (v23 < v3);
    Swift::Int v21 = v23;
LABEL_36:
    Swift::Int v9 = v21;
    if ((v20 & 1) != 0)
    {
LABEL_37:
      if (v21 < v13) {
        goto LABEL_157;
      }
      if (v13 < v21)
      {
        uint64_t v29 = 16 * v21;
        uint64_t v30 = 16 * v13;
        Swift::Int v31 = v21;
        Swift::Int v32 = v13;
        do
        {
          if (v32 != --v31)
          {
            if (!v10) {
              goto LABEL_160;
            }
            uint64_t v33 = v10 + v29;
            uint64_t v34 = *(void *)(v10 + v30);
            uint64_t v35 = *(void *)(v10 + v30 + 8);
            *(_OWORD *)(v10 + v30) = *(_OWORD *)(v10 + v29 - 16);
            *(void *)(v33 - swift_weakDestroy(v0 + 16) = v34;
            *(void *)(v33 - 8) = v35;
          }

          ++v32;
          v29 -= 16LL;
          v30 += 16LL;
        }

        while (v32 < v31);
      }

uint64_t sub_1001F4FD0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    double result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      uint64_t v13 = *(v12 - 2);
      uint64_t v14 = *(v12 - 1);
      BOOL v15 = result == v13 && v10 == v14;
      if (v15 || (double result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1LL), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16LL;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }

      if (!v7) {
        break;
      }
      double result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_1001F509C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_48;
    }
    uint64_t v19 = (char *)(a3 - 16);
    while (1)
    {
      int v20 = v19 + 16;
      uint64_t v21 = *((void *)v14 - 2);
      uint64_t v22 = *((void *)v14 - 1);
      uint64_t v23 = *((void *)v6 - 2);
      uint64_t v24 = *((void *)v6 - 1);
      uint64_t v25 = v6 - 16;
      BOOL v26 = v21 == v23 && v22 == v24;
      if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 1LL) & 1) == 0)
      {
        uint64_t v25 = v14 - 16;
        if (v20 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v25;
          goto LABEL_46;
        }

        BOOL v27 = v19 >= v14;
        v14 -= 16;
        if (v27) {
          goto LABEL_45;
        }
      }

      else
      {
        if (v20 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }

        BOOL v27 = v19 >= v6;
        v6 -= 16;
        if (v27) {
          goto LABEL_45;
        }
      }

uint64_t sub_1001F52C8()
{
  uint64_t v72 = sub_1000031E8(&qword_1002DEBC0);
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v1 = (char *)&v60 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = sub_1000031E8((uint64_t *)&unk_1002DFA90);
  uint64_t v65 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  unint64_t v63 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v60 - v4;
  uint64_t v6 = sub_1000031E8(&qword_1002ECB80);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for LocalPreferences(0LL);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  uint64_t v71 = LocalPreferences.init(bundleIdentifier:)(0xD00000000000001CLL, 0x800000010024EA90LL);
  uint64_t v11 = ((uint64_t (*)(void))static LocalPreferences.currentApplication.getter)();
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002ECB90);
  PreferenceKey.init(_:)(0xD00000000000001BLL, 0x800000010024E850LL, v12);
  uint64_t v13 = Preferences.subscript.getter(v9, v10, &protocol witness table for LocalPreferences);
  uint64_t v15 = v14;
  __n128 v16 = swift_release(v11);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
  uint64_t v62 = v13;
  uint64_t ObjectType = swift_getObjectType(v13);
  PreferenceKey.init(_:)(0xD000000000000020LL, 0x800000010024EAB0LL, &type metadata for String);
  __int128 v74 = xmmword_100242360;
  uint64_t v67 = v15;
  uint64_t v68 = v5;
  Preferences.subscript.setter(&v74, v5, ObjectType, &type metadata for String, v15);
  uint64_t v18 = sub_1000031E8(&qword_1002ECD78);
  uint64_t v19 = swift_allocObject(v18, 104LL, 7LL);
  __int128 v66 = xmmword_100232070;
  *(_OWORD *)(v19 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
  uint64_t v69 = (void (*)(char *, char *, uint64_t))sub_1000031E8(&qword_1002ECD80);
  uint64_t v20 = swift_allocObject(v69, 152LL, 7LL);
  *(_OWORD *)(v20 + swift_weakDestroy(v0 + 16) = v66;
  uint64_t v21 = ((uint64_t (*)(void))static LocalPreferences.AppStoreKitInternal.getter)();
  static MetricsSamplingLottery.isSamplingGloballyForcedKey.getter();
  uint64_t v22 = (int *)type metadata accessor for BoolDebugSetting(0LL);
  *(void *)(v20 + 56) = v22;
  *(void *)(v20 + 6swift_weakDestroy(v0 + 4) = &off_100281B48;
  uint64_t v23 = (char *)sub_100009D54((void *)(v20 + 32));
  *(void *)uint64_t v23 = 0xD000000000000010LL;
  *((void *)v23 + 1) = 0x800000010024EAE0LL;
  *((void *)v23 + 2) = v21;
  *((void *)v23 + 3) = &protocol witness table for LocalPreferences;
  uint64_t v24 = (uint64_t (*)(char *, char *, uint64_t))*((void *)v70 + 4);
  uint64_t v25 = v72;
  uint64_t v26 = v24(&v23[v22[6]], v1, v72);
  v23[v22[7]] = 0;
  v23[v22[8]] = 0;
  uint64_t v27 = static LocalPreferences.AppStoreKitInternal.getter(v26);
  static MetricsSamplingLottery.shouldLogKey.getter();
  *(void *)(v20 + 96) = v22;
  *(void *)(v20 + 10swift_weakDestroy(v0 + 4) = &off_100281B48;
  id v28 = (char *)sub_100009D54((void *)(v20 + 72));
  *(void *)id v28 = 0x676E6967676F4CLL;
  *((void *)v28 + 1) = 0xE700000000000000LL;
  *((void *)v28 + 2) = v27;
  *((void *)v28 + 3) = &protocol witness table for LocalPreferences;
  uint64_t v29 = v24(&v28[v22[6]], v1, v25);
  v28[v22[7]] = 0;
  v28[v22[8]] = 0;
  uint64_t v30 = static LocalPreferences.currentApplication.getter(v29);
  PreferenceKey.init(_:)(0xD000000000000013LL, 0x800000010024EB20LL, &type metadata for Bool);
  *(void *)(v20 + 136) = v22;
  *(void *)(v20 + 14swift_weakDestroy(v0 + 4) = &off_100281B48;
  Swift::Int v31 = (char *)sub_100009D54((void *)(v20 + 112));
  *(void *)Swift::Int v31 = 0xD00000000000001ALL;
  *((void *)v31 + 1) = 0x800000010024EB00LL;
  *((void *)v31 + 2) = v30;
  *((void *)v31 + 3) = &protocol witness table for LocalPreferences;
  v24(&v31[v22[6]], v1, v25);
  v31[v22[7]] = 0;
  v31[v22[8]] = 1;
  *(void *)(v19 + 32) = 0x7363697274654DLL;
  *(void *)(v19 + 40) = 0xE700000000000000LL;
  *(void *)(v19 + 48) = v20;
  uint64_t v32 = swift_allocObject(v69, 112LL, 7LL);
  *(_OWORD *)(v32 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
  uint64_t v33 = v71;
  swift_retain(v71);
  PreferenceKey.init(_:)(0xD000000000000013LL, 0x800000010024EB40LL, &type metadata for Bool);
  *(void *)(v32 + 56) = v22;
  *(void *)(v32 + 6swift_weakDestroy(v0 + 4) = &off_100281B48;
  uint64_t v34 = (char *)sub_100009D54((void *)(v32 + 32));
  strcpy(v34, "Cache Buster");
  v34[13] = 0;
  *((_WORD *)v34 + 7) = -5120;
  *((void *)v34 + 2) = v33;
  *((void *)v34 + 3) = &protocol witness table for LocalPreferences;
  v24(&v34[v22[6]], v1, v25);
  v34[v22[7]] = 0;
  v34[v22[8]] = 0;
  swift_retain(v33);
  PreferenceKey.init(_:)(0xD00000000000001ELL, 0x800000010024EB80LL, &type metadata for Bool);
  *(void *)(v32 + 96) = v22;
  *(void *)(v32 + 10swift_weakDestroy(v0 + 4) = &off_100281B48;
  uint64_t v35 = sub_100009D54((void *)(v32 + 72));
  *uint64_t v35 = 0xD00000000000001ELL;
  v35[1] = 0x800000010024EB60LL;
  void v35[2] = v33;
  void v35[3] = &protocol witness table for LocalPreferences;
  Swift::Int v36 = (char *)v35 + v22[6];
  uint64_t v64 = v1;
  id v37 = v63;
  uint64_t v70 = (void (*)(char *, char *, uint64_t))v24;
  v24(v36, v1, v25);
  *((_BYTE *)v35 + v22[7]) = 0;
  *((_BYTE *)v35 + v22[8]) = 0;
  *(void *)(v19 + 56) = 0x696B726F7774654ELL;
  *(void *)(v19 + 6swift_weakDestroy(v0 + 4) = 0xEA0000000000676ELL;
  *(void *)&__int128 v66 = v19;
  *(void *)(v19 + 72) = v32;
  uint64_t v38 = swift_allocObject(v69, 232LL, 7LL);
  *(_OWORD *)(v38 + swift_weakDestroy(v0 + 16) = xmmword_100239AF0;
  uint64_t v39 = v62;
  swift_unknownObjectRetain(v62);
  uint64_t v40 = v37;
  uint64_t v41 = PreferenceKey.init(_:)(0x65676175676E616CLL, 0xE800000000000000LL, &type metadata for String);
  uint64_t v42 = static Locale.availableIdentifiers.getter(v41);
  *(void *)&__int128 v74 = v42;
  swift_bridgeObjectRetain(v42);
  sub_1001F48C4((char **)&v74);
  swift_bridgeObjectRelease(v42);
  uint64_t v43 = v74;
  uint64_t v44 = (int *)type metadata accessor for StringDebugSetting(0LL);
  *(void *)(v38 + 56) = v44;
  *(void *)(v38 + 6swift_weakDestroy(v0 + 4) = &off_10028B750;
  BOOL v45 = sub_100009D54((void *)(v38 + 32));
  unint64_t v61 = 0xD000000000000011LL;
  void *v45 = 0xD000000000000011LL;
  v45[1] = 0x800000010024EBA0LL;
  uint64_t v46 = v67;
  void v45[2] = v39;
  void v45[3] = v46;
  unint64_t v47 = (char *)v45 + v44[6];
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
  v69(v47, v40, v73);
  uint64_t v48 = (void *)((char *)v45 + v44[7]);
  void *v48 = 0x74655320746F4ELL;
  v48[1] = 0xE700000000000000LL;
  *(void *)((char *)v45 + v44[8]) = v43;
  *((_BYTE *)v45 + v44[9]) = 1;
  swift_unknownObjectRetain(v39);
  uint64_t v49 = v64;
  PreferenceKey.init(_:)(0x72656D6165726373LL, 0xEC00000065646F4DLL, &type metadata for Bool);
  *(void *)(v38 + 96) = v22;
  *(void *)(v38 + 10swift_weakDestroy(v0 + 4) = &off_100281B48;
  unint64_t v50 = (char *)sub_100009D54((void *)(v38 + 72));
  *(void *)unint64_t v50 = 0xD000000000000014LL;
  *((void *)v50 + 1) = 0x800000010024EBC0LL;
  *((void *)v50 + 2) = v39;
  *((void *)v50 + 3) = v46;
  uint64_t v51 = v72;
  uint64_t v52 = v70;
  v70(&v50[v22[6]], v49, v72);
  v50[v22[7]] = 0;
  v50[v22[8]] = 1;
  swift_unknownObjectRetain(v39);
  PreferenceKey.init(_:)(0xD000000000000018LL, 0x800000010024EC00LL, &type metadata for Bool);
  *(void *)(v38 + 136) = v22;
  *(void *)(v38 + 14swift_weakDestroy(v0 + 4) = &off_100281B48;
  uint64_t v53 = (char *)sub_100009D54((void *)(v38 + 112));
  *(void *)uint64_t v53 = 0xD000000000000018LL;
  *((void *)v53 + 1) = 0x800000010024EBE0LL;
  *((void *)v53 + 2) = v39;
  *((void *)v53 + 3) = v46;
  v52(&v53[v22[6]], v49, v51);
  v53[v22[7]] = 1;
  v53[v22[8]] = 1;
  swift_unknownObjectRetain(v39);
  PreferenceKey.init(_:)(v61, 0x800000010024EC40LL, &type metadata for Bool);
  *(void *)(v38 + 176) = v22;
  *(void *)(v38 + 18swift_weakDestroy(v0 + 4) = &off_100281B48;
  char v54 = (char *)sub_100009D54((void *)(v38 + 152));
  *(void *)char v54 = 0xD00000000000001ALL;
  *((void *)v54 + 1) = 0x800000010024EC20LL;
  *((void *)v54 + 2) = v39;
  *((void *)v54 + 3) = v46;
  v70(&v54[v22[6]], v49, v51);
  v54[v22[7]] = 0;
  v54[v22[8]] = 1;
  swift_unknownObjectRetain(v39);
  uint64_t v55 = v68;
  PreferenceKey.init(_:)(0xD00000000000001ELL, 0x800000010024EC80LL, &type metadata for String);
  *(void *)(v38 + 2swift_weakDestroy(v0 + 16) = v44;
  *(void *)(v38 + 22swift_weakDestroy(v0 + 4) = &off_10028B750;
  uint64_t v56 = (char *)sub_100009D54((void *)(v38 + 192));
  *(void *)uint64_t v56 = 0xD00000000000001ALL;
  *((void *)v56 + 1) = 0x800000010024EC60LL;
  *((void *)v56 + 2) = v39;
  *((void *)v56 + 3) = v46;
  v69(&v56[v44[6]], v55, v73);
  uint64_t v57 = &v56[v44[7]];
  *(void *)uint64_t v57 = 0x74726174536E6FLL;
  *((void *)v57 + 1) = 0xE700000000000000LL;
  *(void *)&v56[v44[8]] = &off_10027FFB8;
  v56[v44[9]] = 1;
  uint64_t v58 = v66;
  *(void *)(v66 + 80) = 0x657A696C61636F4CLL;
  *(void *)(v58 + 88) = 0xE900000000000072LL;
  *(void *)(v58 + 96) = v38;
  swift_release(v71);
  swift_unknownObjectRelease(v39);
  return 0x73676E6974746553LL;
}

void sub_1001F5CCC(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v2 = a1;
    }
    else {
      uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = __CocoaSet.makeIterator()(v2);
    unint64_t v4 = sub_1000045E8();
    uint64_t v5 = sub_100003B6C( (unint64_t *)&qword_1002E18F0,  (uint64_t (*)(uint64_t))sub_1000045E8,  (uint64_t)&protocol conformance descriptor for NSObject);
    uint64_t v6 = Set.Iterator.init(_cocoa:)(v28, v3, v4, v5);
    uint64_t v1 = v28[0];
    uint64_t v26 = v28[1];
    uint64_t v7 = v28[2];
    uint64_t v8 = v28[3];
    unint64_t v9 = v28[4];
  }

  else
  {
    uint64_t v10 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v26 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    uint64_t v8 = 0LL;
  }

  int64_t v25 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    uint64_t v13 = v8;
    if ((v1 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v16 = __CocoaSet.Iterator.next()(v6);
    if (!v16) {
      goto LABEL_39;
    }
    uint64_t v17 = v16;
    uint64_t v27 = v16;
    unint64_t v18 = sub_1000045E8();
    swift_unknownObjectRetain(v17);
    swift_dynamicCast(&v29, &v27, (char *)&type metadata for Swift.AnyObject + 8, v18, 7LL);
    id v19 = v29;
    *(void *)&double v20 = swift_unknownObjectRelease(v17).n128_u64[0];
    if (!v19) {
      goto LABEL_39;
    }
LABEL_34:
    if (objc_msgSend(v19, "type", v20) == (id)6)
    {

LABEL_39:
      sub_100004624(v1);
      return;
    }

    id v24 = [v19 type];

    if (v24 == (id)4) {
      goto LABEL_39;
    }
  }

  if (v9)
  {
    unint64_t v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v15 = v14 | (v8 << 6);
LABEL_33:
    id v19 = *(id *)(*(void *)(v1 + 48) + 8 * v15);
    if (!v19) {
      goto LABEL_39;
    }
    goto LABEL_34;
  }

  int64_t v21 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v21 >= v25) {
      goto LABEL_39;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v8;
    if (!v22)
    {
      uint64_t v8 = v13 + 2;
      if (v13 + 2 >= v25) {
        goto LABEL_39;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v8);
      if (!v22)
      {
        uint64_t v8 = v13 + 3;
        if (v13 + 3 >= v25) {
          goto LABEL_39;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v8);
        if (!v22)
        {
          uint64_t v8 = v13 + 4;
          if (v13 + 4 >= v25) {
            goto LABEL_39;
          }
          unint64_t v22 = *(void *)(v26 + 8 * v8);
          if (!v22)
          {
            uint64_t v8 = v13 + 5;
            if (v13 + 5 >= v25) {
              goto LABEL_39;
            }
            unint64_t v22 = *(void *)(v26 + 8 * v8);
            if (!v22)
            {
              uint64_t v23 = v13 + 6;
              while (v25 != v23)
              {
                unint64_t v22 = *(void *)(v26 + 8 * v23++);
                if (v22)
                {
                  uint64_t v8 = v23 - 1;
                  goto LABEL_32;
                }
              }

              goto LABEL_39;
            }
          }
        }
      }
    }

char *sub_1001F5FC8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for CornerStyle(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v55[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = &v4[OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_itemLayoutContext];
  uint64_t v14 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v13, 1LL, 1LL, v14);
  uint64_t v15 = OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_artworkView;
  id v16 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0LL));
  uint64_t v17 = v4;
  *(void *)&v4[v15] = objc_msgSend(v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v18 = OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer;
  id v19 = (objc_class *)type metadata accessor for VideoViewContainer();
  double v20 = (char *)objc_allocWithZone(v19);
  swift_unknownObjectWeakInit(&v20[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view], 0LL);
  *(void *)&v20[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v21, 0LL);
  v57.id receiver = v20;
  v57.super_class = v19;
  *(void *)&v17[v18] = objc_msgSendSuper2(&v57, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  unint64_t v22 = (objc_class *)type metadata accessor for ProductMediaItemCollectionViewCell(0LL);
  v56.id receiver = v17;
  v56.super_class = v22;
  uint64_t v23 = (char *)objc_msgSendSuper2(&v56, "initWithFrame:", a1, a2, a3, a4);
  [v23 setInsetsLayoutMarginsFromSafeArea:0];
  [v23 _setSafeAreaInsetsFrozen:1];
  id v24 = [v23 contentView];
  uint64_t v25 = OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer;
  [v24 addSubview:*(void *)&v23[OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer]];

  id v26 = [v23 contentView];
  uint64_t v27 = OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_artworkView;
  [v26 addSubview:*(void *)&v23[OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_artworkView]];

  uint64_t v28 = enum case for CornerStyle.continuous(_:);
  uint64_t v29 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 104);
  v29(v12, enum case for CornerStyle.continuous(_:), v9);
  CornerStyle.apply(withRadius:to:)(*(void *)&v23[v25], 16.0);
  uint64_t v30 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
  v30(v12, v9);
  v29(v12, v28, v9);
  CornerStyle.apply(withRadius:to:)(*(void *)&v23[v27], 16.0);
  v30(v12, v9);
  Swift::Int v31 = &v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  __int128 v32 = *(_OWORD *)&v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
  v63[0] = *(_OWORD *)&v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  v63[1] = v32;
  char v64 = v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)Swift::Int v31 = 0x4014000000000000LL;
  *((void *)v31 + 1) = 0x4041800000000000LL;
  v31[16] = 0;
  *((void *)v31 + 3) = 0LL;
  v31[32] = 1;
  uint64_t v33 = v23;
  sub_1000690F4((uint64_t)v63, v34, v35);

  v58[0] = xmmword_1002414E0;
  v58[1] = xmmword_1002414F0;
  char v59 = 0;
  uint64_t v60 = 0LL;
  uint64_t v61 = 0LL;
  char v62 = 1;
  Swift::Int v36 = v33;
  sub_10006779C(v58);

  id v37 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v38 = v36;
  id v39 = [v37 blackColor];
  id v40 = [v39 CGColor];

  uint64_t v41 = &v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v42 = *(void **)&v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v43 = *(void **)&v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
  uint64_t v44 = *(void **)&v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
  *(void *)uint64_t v41 = v40;
  *(int64x2_t *)(v41 + 8) = vdupq_n_s64(1uLL);
  id v45 = v42;
  sub_10000AAF8(v43);
  sub_10000AAF8(v44);
  id v46 = v40;

  sub_10000AB08(v43);
  sub_10000AB08(v44);
  sub_100069248(v42, v43, (unint64_t)v44);

  sub_10000AB08(v43);
  sub_10000AB08(v44);

  unint64_t v47 = &v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(aswift_weakDestroy(v0 + 4) = *(_DWORD *)&v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v46) = *(_DWORD *)&v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v43) = v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v4swift_weakDestroy(v0 + 4) = v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)unint64_t v47 = 1041865114;
  *((_DWORD *)v47 + 1) = 1056964608;
  v47[8] = 0;
  uint64_t v48 = *((unsigned int *)v47 + 3);
  *((_DWORD *)v47 + 3) = 0;
  v47[16] = 1;
  uint64_t v49 = v38;
  v55[8] = (_BYTE)v43;
  v55[0] = (_BYTE)v44;
  v50.n128_u32[0] = LODWORD(a4);
  sub_1000693B0((int)v46, v43 | (unint64_t)(v48 << 32), (char)v44, v50);

  char v51 = v49[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
  v49[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v51 & 1) == 0)
  {
    char v52 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v49) + 0x98LL))();
    uint64_t v53 = v49;
    sub_1000678F0(v52);
  }

  return v49;
}

BOOL sub_1001F64C4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong( *(void *)(v0 + OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer)
                   + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  uint64_t v2 = Strong;
  if (Strong) {

  }
  return v2 != 0LL;
}

void sub_1001F6510(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MediaClickMetricsEvent.ActionType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000045E8();
  sub_100003B6C( (unint64_t *)&qword_1002E18F0,  (uint64_t (*)(uint64_t))sub_1000045E8,  (uint64_t)&protocol conformance descriptor for NSObject);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  uint64_t v10 = (objc_class *)type metadata accessor for ProductMediaItemCollectionViewCell(0LL);
  v19.id receiver = v2;
  v19.super_class = v10;
  objc_msgSendSuper2(&v19, "pressesBegan:withEvent:", isa, a2);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)&v2[OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer] + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    uint64_t v12 = (_BYTE *)Strong;
    sub_1001F5CCC(a1);
    if ((v13 & 1) != 0)
    {
      uint64_t v14 = qword_1002F0818;
      if ((v12[qword_1002F0818] & 1) == 0)
      {
        uint64_t v15 = *(void **)&v12[qword_1002E70D8];
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = (void *)dispatch thunk of VideoPlayer.playerItem.getter();

          if (v17)
          {

            v12[v14] = 1;
            sub_10012A748();
            (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for MediaClickMetricsEvent.ActionType.enterFullscreen(_:),  v5);
            sub_10012B584((uint64_t)v8);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            sub_10012C020();
          }
        }
      }
    }
  }

id sub_1001F67C8()
{
  v22.id receiver = v0;
  v22.super_class = (Class)type metadata accessor for ProductMediaItemCollectionViewCell(0LL);
  objc_msgSendSuper2(&v22, "layoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_artworkView];
  id v2 = [v0 contentView];
  [v2 bounds];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;

  objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
  uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer];
  id v12 = [v0 contentView];
  [v12 bounds];
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;

  return objc_msgSend(v11, "setFrame:", v14, v16, v18, v20);
}

void sub_1001F691C(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_10006734C(a1, a2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v2 + OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer)
           + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    id v6 = (id)Strong;
    sub_100128F18(v4, a2);
  }

void sub_1001F69A4()
{
}

id sub_1001F69E8()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductMediaItemCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001F6A6C()
{
  return type metadata accessor for ProductMediaItemCollectionViewCell(0LL);
}

uint64_t type metadata accessor for ProductMediaItemCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002ECDB0;
  if (!qword_1002ECDB0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductMediaItemCollectionViewCell);
  }
  return result;
}

uint64_t sub_1001F6AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F6EE8(a1, a3);
}

uint64_t sub_1001F6ABC()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*v0 + OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer)
         + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
}

id sub_1001F6AE0()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer);
}

void sub_1001F6AF4(uint64_t a1, uint64_t a2)
{
  double v3 = v2;
  uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __chkstk_darwin(v6);
  double v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AspectRatio(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  double v15 = (char *)v53 - v14;
  sub_10001F010(a1, (uint64_t)v55);
  uint64_t v16 = sub_1000031E8(&qword_1002E9470);
  uint64_t v18 = type metadata accessor for ProductMediaItem(0LL, v17);
  uint64_t v20 = v54;
  uint64_t v21 = ProductMediaItem.video.getter(v19);
  if (!v21) {
    goto LABEL_7;
  }
  uint64_t v23 = v21;
  v53[1] = a2;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)&v3[OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer] + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (!Strong)
  {
LABEL_6:
    __n128 v22 = swift_release(v23);
LABEL_7:
    uint64_t v27 = ProductMediaItem.screenshot.getter(v22);
    if (v27)
    {
      uint64_t v28 = v27;
      id v29 = [v3 contentView];
      [v29 bounds];
      double v31 = v30;
      double v33 = v32;

      uint64_t v34 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v31, v33);
      uint64_t v35 = *(void *)&v3[OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_artworkView];
      uint64_t v36 = type metadata accessor for ArtworkView(0LL);
      uint64_t v37 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v34, 2LL, 1LL, v35, v36, v37);
      swift_release(v28);
      swift_release(v34);
    }

    swift_release(v20);
    return;
  }

  uint64_t v25 = (void *)Strong;
  swift_beginAccess(Strong + qword_1002F0830, v55, 32LL, 0LL);
  VideoConfiguration.aspectRatio.getter(v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9) == 1)
  {
    sub_100006060((uint64_t)v8, (uint64_t *)&unk_1002E2D70);
    swift_endAccess(v55);

    goto LABEL_6;
  }

  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  id v38 = objc_msgSend(v3, "contentView", swift_endAccess(v55).n128_f64[0]);
  [v38 bounds];
  double v40 = v39;
  double v42 = v41;

  __n128 v44 = AspectRatio.init(_:_:)(v43, v40);
  v45.n128_f64[0] = AspectRatio.horizontalFraction.getter(v44);
  if (v45.n128_f64[0] >= AspectRatio.horizontalFraction.getter(v45)) {
    double v42 = AspectRatio.height(fromWidth:)(v40);
  }
  else {
    double v40 = AspectRatio.width(fromHeight:)(v42);
  }
  id v46 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v47 = v46(v12, v9);
  uint64_t v48 = Video.preview.getter(v47);
  uint64_t v49 = Artwork.config(_:mode:prefersLayeredImage:)(2LL, 0LL, v40, v42);
  swift_release(v48);
  uint64_t v50 = type metadata accessor for VideoView(0LL);
  uint64_t v51 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v49, 2LL, 1LL, v25, v50, v51);

  swift_release(v20);
  swift_release(v49);
  __n128 v52 = swift_release(v23);
  ((void (*)(char *, uint64_t, __n128))v46)(v15, v9, v52);
}

uint64_t sub_1001F6EE8(uint64_t a1, uint64_t a2)
{
  id v11 = *(id *)(v2 + OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_artworkView);
  uint64_t v4 = type metadata accessor for ArtworkView(0LL);
  uint64_t v5 = sub_100003B6C( (unint64_t *)&qword_1002E2948,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for NSObject);
  id v6 = v11;
  AnyHashable.init<A>(_:)(v12, &v11, v4, v5);
  ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v12, a2);
  sub_1000087D8((uint64_t)v12);
  uint64_t result = swift_unknownObjectWeakLoadStrong( *(void *)(v2 + OBJC_IVAR____TtC6Arcade34ProductMediaItemCollectionViewCell_videoContainer)
           + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (result)
  {
    double v8 = (void *)result;
    id v9 = *(id *)(result + qword_1002E70D0);

    id v11 = v9;
    id v10 = v9;
    AnyHashable.init<A>(_:)(v12, &v11, v4, v5);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v12, a2 & 1);

    return sub_1000087D8((uint64_t)v12);
  }

  return result;
}

uint64_t sub_1001F7008()
{
  return sub_100003B6C( (unint64_t *)&unk_1002ECDC0,  type metadata accessor for PrivacyHeaderCollectionViewCell,  (uint64_t)&unk_1002423E8);
}

void *sub_1001F7038(uint64_t *a1)
{
  uint64_t v142 = type metadata accessor for PrivacyHeaderLayout.Metrics(0LL);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v143 = (char *)&v132 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for PrivacyHeaderLayout(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v140 = type metadata accessor for PageGrid.Direction(0LL);
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v138 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v152 = type metadata accessor for PageGrid(0LL);
  uint64_t v150 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  id v9 = (id *)((char *)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v10);
  uint64_t v151 = (id *)((char *)&v132 - v11);
  uint64_t v12 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v12);
  uint64_t v149 = (uint64_t)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v132 - v15;
  uint64_t v17 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v154 = type metadata accessor for FontUseCase(0LL, v21);
  uint64_t v153 = *(void *)(v154 - 8);
  __n128 v22 = __chkstk_darwin(v154);
  __n128 v145 = (char *)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for PrivacyHeader(0LL, v22);
  uint64_t v25 = sub_100003B6C( &qword_1002ECDD0,  (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyHeader,  (uint64_t)&protocol conformance descriptor for PrivacyHeader);
  uint64_t result = ItemLayoutContext.typedModel<A>(as:)(&v165, v24, v24, v25);
  if (v165)
  {
    uint64_t v144 = v165;
    char v27 = PrivacyHeader.isDetailHeader.getter(result);
    uint64_t v137 = v3;
    uint64_t v136 = v4;
    uint64_t v134 = v9;
    if ((v27 & 1) != 0)
    {
      if (qword_1002DC6B8 != -1) {
        swift_once(&qword_1002DC6B8, sub_100071710);
      }
      uint64_t v28 = qword_1002EF078;
    }

    else
    {
      if (qword_1002DC6B0 != -1) {
        swift_once(&qword_1002DC6B0, sub_1000716F8);
      }
      uint64_t v28 = qword_1002EF060;
    }

    uint64_t v29 = v154;
    uint64_t v30 = sub_1000061F4(v154, (uint64_t)v28);
    double v31 = v145;
    uint64_t v148 = *(void (**)(char *, uint64_t, uint64_t))(v153 + 16);
    v148(v145, v30, v29);
    sub_100028C20();
    uint64_t KeyPath = swift_getKeyPath(&unk_100242438, v32);
    ItemLayoutContext.subscript.getter(&v165);
    swift_release(KeyPath);
    uint64_t v34 = v165;
    uint64_t v35 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v31, v165);

    uint64_t v37 = PrivacyHeader.bodyText.getter(v36);
    uint64_t v39 = LinkableText.styledText.getter(v38);
    __n128 v40 = swift_release(v37);
    double v41 = (void *)dispatch thunk of StyledText.asAttributedString(using:)(v35, v40);
    swift_release(v39);
    uint64_t v42 = type metadata accessor for Feature(0LL);
    uint64_t v166 = v42;
    uint64_t v167 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
    uint64_t v43 = sub_100009D54(&v165);
    (*(void (**)(void *, void, uint64_t))(*(void *)(v42 - 8) + 104LL))( v43,  enum case for Feature.measurement_with_labelplaceholder(_:),  v42);
    id v133 = v41;
    id v44 = (id)v35;
    LOBYTE(v35) = isFeatureEnabled(_:)(&v165);
    _s6Arcade17PillOverlayLayoutVwxx_0(&v165);
    id v132 = v44;
    uint64_t v45 = LabelPlaceholderCompatibility.init(attributedText:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v41,  v44,  4LL,  0LL,  0LL,  0LL,  0LL,  v35 & 1);
    LabelPlaceholderCompatibility.layoutTextView.getter(&v165, v45);
    uint64_t v46 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v47 = PrivacyHeader.bodyActions.getter(v46);
    if ((unint64_t)v47 >> 62)
    {
LABEL_39:
      if (v47 < 0) {
        uint64_t v131 = v47;
      }
      else {
        uint64_t v131 = v47 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v48 = _CocoaArrayWrapper.endIndex.getter(v131);
    }

    else
    {
      uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    uint64_t v156 = a1;
    uint64_t v135 = v6;
    if (v48)
    {
      uint64_t v155 = (void (*)(void *, uint64_t))(v47 & 0xC000000000000001LL);
      uint64_t v49 = _swiftEmptyArrayStorage;
      uint64_t v50 = 4LL;
      a1 = &OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey;
      uint64_t v147 = v47;
      uint64_t v146 = v48;
      while (1)
      {
        uint64_t v51 = v50 - 4;
        if (v155)
        {
          uint64_t v52 = specialized _ArrayBuffer._getElementSlowPath(_:)(v50 - 4, v47);
          uint64_t v53 = v52;
          id v6 = (char *)(v50 - 3);
          if (__OFADD__(v51, 1LL)) {
            goto LABEL_38;
          }
        }

        else
        {
          uint64_t v53 = *(void *)(v47 + 8 * v50);
          swift_retain(v53);
          id v6 = (char *)(v50 - 3);
          if (__OFADD__(v51, 1LL))
          {
LABEL_38:
            __break(1u);
            goto LABEL_39;
          }
        }

        Action.title.getter(v52);
        if (v54)
        {
          uint64_t v55 = v54;
          if (qword_1002DC3D8 != -1) {
            swift_once(&qword_1002DC3D8, sub_100026AB8);
          }
          objc_super v56 = (void *)a1[205];
          NSString v57 = String._bridgeToObjectiveC()();
          objc_msgSend(v56, "setTitle:forState:", v57, 0, swift_bridgeObjectRelease(v55).n128_f64[0]);

          uint64_t v58 = a1[205];
          if (qword_1002DC6C0 != -1) {
            swift_once(&qword_1002DC6C0, sub_100071728);
          }
          uint64_t v59 = v154;
          uint64_t v60 = sub_1000061F4(v154, (uint64_t)qword_1002EF090);
          v148(v16, v60, v59);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v16, 0LL, 1LL, v59);
          uint64_t v61 = v58 + OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase;
          swift_beginAccess(v58 + OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase, v157, 0LL, 0LL);
          uint64_t v62 = v149;
          sub_100014CFC(v61, v149);
          swift_beginAccess(v61, &v162, 33LL, 0LL);
          sub_10000FF48((uint64_t)v16, v61);
          swift_endAccess(&v162);
          sub_1001010C0(v62);
          sub_1000658F8((uint64_t)v16);
          sub_1000658F8(v62);
          id v63 = [(id)a1[205] titleLabel];
          uint64_t v65 = v63;
          if (v63)
          {
            id v66 = v63;
            uint64_t result = [v66 font];
            if (!result)
            {
              __break(1u);
              return result;
            }

            uint64_t v68 = result;
            uint64_t v69 = swift_getKeyPath(&unk_100242438, v67);
            ItemLayoutContext.subscript.getter(&v162);
            *(void *)&double v70 = swift_release(v69).n128_u64[0];
            uint64_t v71 = (void *)v162;
            id v72 =  objc_msgSend( v68,  "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:",  (void)v162,  v70);

            [v66 setFont:v72];
            a1 = &OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey;
          }

          uint64_t v73 = (void *)a1[205];
          uint64_t v74 = swift_getKeyPath(&unk_100242468, v64);
          uint64_t v75 = v151;
          ItemLayoutContext.subscript.getter(v151);
          swift_release(v74);
          double v77 = PageGrid.componentMeasuringSize(spanning:)(v76, 1.0);
          double v79 = v78;
          (*(void (**)(void *, uint64_t))(v150 + 8))(v75, v152);
          id v80 = objc_msgSend(v73, "sizeThatFits:", v77, v79);
          v83.n128_f64[0] = CGSize.adding(outsets:)(v80, 14.0, 40.0, 14.0, 40.0, v81, v82);
          double v84 = v83.n128_f64[0];
          double v86 = v85;
          uint64_t v87 = type metadata accessor for LayoutViewPlaceholder(0LL, v83);
          swift_allocObject(v87, *(unsigned int *)(v87 + 48), *(unsigned __int16 *)(v87 + 52));
          uint64_t v88 = LayoutViewPlaceholder.init(representing:)(v84, v86);
          swift_retain(v88);
          if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0) {
            uint64_t v49 = sub_10001A374(0LL, v49[2] + 1LL, 1, v49);
          }
          unint64_t v90 = v49[2];
          unint64_t v89 = v49[3];
          if (v90 >= v89 >> 1) {
            uint64_t v49 = sub_10001A374((void *)(v89 > 1), v90 + 1, 1, v49);
          }
          __n128 v163 = (void *)v87;
          uint64_t v164 = &protocol witness table for LayoutViewPlaceholder;
          *(void *)&__int128 v162 = v88;
          _OWORD v49[2] = v90 + 1;
          sub_100009D90(&v162, (uint64_t)&v49[5 * v90 + 4]);
          swift_release(v53);
          swift_release(v88);

          uint64_t v47 = v147;
          uint64_t v48 = v146;
          a1 = &OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey;
        }

        else
        {
          swift_release(v53);
        }

        ++v50;
      }
    }

    uint64_t v49 = _swiftEmptyArrayStorage;
LABEL_35:
    swift_bridgeObjectRelease(v47);
    uint64_t v92 = swift_getKeyPath(&unk_100242468, v91);
    uint64_t v93 = v151;
    ItemLayoutContext.subscript.getter(v151);
    swift_release(v92);
    double v95 = PageGrid.containerWidth.getter(v94);
    uint64_t v96 = *(void (**)(void *, uint64_t))(v150 + 8);
    uint64_t v97 = v152;
    v96(v93, v152);
    uint64_t v99 = swift_getKeyPath(&unk_100242468, v98);
    ItemLayoutContext.subscript.getter(v93);
    __n128 v100 = swift_release(v99);
    double v101 = PageGrid.containerHeight.getter(v100);
    uint64_t v155 = v96;
    v96(v93, v97);
    uint64_t v102 = v139;
    unint64_t v103 = v138;
    uint64_t v104 = v140;
    (*(void (**)(char *, void, uint64_t))(v139 + 104))( v138,  enum case for PageGrid.Direction.vertical(_:),  v140);
    static PageGrid.designGridD(direction:containerSize:)(v103, v95, v101);
    uint64_t v105 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v103, v104);
    double v106 = PageGrid.componentMeasuringSize(spanning:)(v105, 4.0);
    if (qword_1002DCF60 != -1) {
      swift_once(&qword_1002DCF60, sub_100173A4C);
    }
    uint64_t v107 = v142;
    uint64_t v108 = sub_1000061F4(v142, (uint64_t)qword_1002F11F8);
    uint64_t v109 = v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v143, v108, v107);
    __n128 v163 = &type metadata for CGFloat;
    uint64_t v164 = &protocol witness table for CGFloat;
    *(double *)&__int128 v162 = v106;
    uint64_t v110 = PrivacyHeaderLayout.Metrics.maxTextWidth.setter(&v162);
    Swift::Int v111 = v144;
    LOBYTE(v107) = PrivacyHeader.isDetailHeader.getter(v110);
    uint64_t v112 = v166;
    uint64_t v113 = v167;
    double v114 = sub_100005F8C(&v165, v166);
    __n128 v163 = (void *)v112;
    uint64_t v164 = *(void **)(v113 + 8);
    double v115 = sub_100009D54(&v162);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v112 - 8) + 16LL))(v115, v114, v112);
    uint64_t v161 = 0LL;
    memset(v160, 0, sizeof(v160));
    uint64_t v159 = 0LL;
    memset(v158, 0, sizeof(v158));
    CGRect v116 = v135;
    PrivacyHeaderLayout.init(metrics:isDetailHeader:bodyLabel:supplementaryItemLabels:topSeparatorView:middleSeparatorView:actionButtons:)( v109,  v107 & 1,  &v162,  _swiftEmptyArrayStorage,  v160,  v158,  v49);
    uint64_t v118 = swift_getKeyPath(&unk_100242468, v117);
    CGRect v119 = v134;
    ItemLayoutContext.subscript.getter(v134);
    swift_release(v118);
    double v121 = PageGrid.componentMeasuringSize(spanning:)(v120, 1.0);
    double v123 = v122;
    CGRect v124 = v155;
    v155(v119, v97);
    uint64_t v126 = swift_getKeyPath(&unk_100242498, v125);
    ItemLayoutContext.subscript.getter(&v162);
    swift_release(v126);
    uint64_t v127 = v162;
    uint64_t v128 = sub_100003B6C( &qword_1002DEA30,  (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyHeaderLayout,  (uint64_t)&protocol conformance descriptor for PrivacyHeaderLayout);
    uint64_t v129 = v137;
    dispatch thunk of Measurable.measurements(fitting:in:)(v127, v137, v128, v121, v123);

    swift_release(v111);
    __n128 v130 = swift_unknownObjectRelease(v127);
    (*(void (**)(char *, uint64_t, __n128))(v136 + 8))(v116, v129, v130);
    v124(v93, v97);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v145, v154);
    return (void *)_s6Arcade17PillOverlayLayoutVwxx_0(&v165);
  }

  return result;
}

void sub_1001F7D00()
{
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_isBootstrapping) & 1) == 0)
  {
    uint64_t v1 = v0;
    *(_BYTE *)(v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_isBootstrapping) = 1;
    (*(void (**)(void))(*(void *)v0 + 328LL))();
    sub_1001F8980(v8);
    uint64_t v2 = v9;
    uint64_t v3 = v10;
    sub_100005F8C(v8, v9);
    uint64_t v4 = dispatch thunk of ASKBootstrapProtocol.start()(v2, v3);
    uint64_t v5 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v6 = swift_retain_n(v1, 2LL);
    v7[3] = v5;
    v7[4] = &protocol witness table for OS_dispatch_queue;
    v7[0] = static OS_dispatch_queue.main.getter(v6);
    Promise.then(perform:orCatchError:on:)(sub_100005FB0, v1, sub_1001F9934, v1, v7);
    swift_release(v4);
    swift_release_n(v1, 2LL);
    _s6Arcade17PillOverlayLayoutVwxx_0(v7);
    _s6Arcade17PillOverlayLayoutVwxx_0(v8);
  }

uint64_t sub_1001F7E00(uint64_t a1)
{
  uint64_t v104 = type metadata accessor for Dependency(0LL);
  uint64_t v112 = *(void *)(v104 - 8);
  uint64_t v2 = __chkstk_darwin(v104);
  uint64_t v102 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v105 = (char *)&v86 - v5;
  __chkstk_darwin(v4);
  uint64_t v87 = (char *)&v86 - v6;
  uint64_t v95 = type metadata accessor for Bag(0LL);
  uint64_t v96 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v94 = (uint64_t *)((char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v103 = type metadata accessor for MetricsFieldInclusionRequest(0LL);
  double v101 = *(void (***)(char *, uint64_t))(v103 - 8);
  __chkstk_darwin(v103);
  __n128 v100 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v93 = type metadata accessor for MetricsFieldExclusionRequest(0LL);
  uint64_t v89 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v88 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ArcadeSubscriptionFieldsProvider(0LL);
  uint64_t v110 = *(void *)(v10 - 8);
  uint64_t v111 = v10;
  __chkstk_darwin(v10);
  uint64_t v109 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for MetricsFieldsAggregator(0LL);
  uint64_t v107 = *(void *)(v12 - 8);
  uint64_t v108 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v92 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (void (**)(char *, uint64_t))((char *)&v86 - v15);
  uint64_t v91 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v99 = *(void *)(v91 - 8);
  uint64_t v17 = __chkstk_darwin(v91);
  double v106 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v86 - v19;
  uint64_t v21 = type metadata accessor for EntitlementRefeshCondition(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for ASKBagContract(0LL);
  uint64_t v98 = inject(_:from:)(v25, a1);
  uint64_t v26 = ASKBagContract.arcadeProductFamilyId.getter();
  uint64_t v28 = v27;
  uint64_t v29 = (char *)[(id)objc_opt_self(ASDSubscriptionEntitlements) sharedInstance];
  uint64_t v115 = sub_100006028(0LL, &qword_1002ECFB0, &OBJC_CLASS___ASDSubscriptionEntitlements_ptr);
  CGRect v116 = &protocol witness table for ASDSubscriptionEntitlements;
  double v114 = v29;
  uint64_t v30 = sub_100006028(0LL, (unint64_t *)&qword_1002E5E50, &OBJC_CLASS___ACAccountStore_ptr);
  v113[3] = v30;
  v113[4] = &protocol witness table for ACAccountStore;
  uint64_t v90 = type metadata accessor for ObjectGraph(0LL);
  inject<A, B>(_:from:)(v113, v30, a1, v30, v90);
  double v31 = (objc_class *)type metadata accessor for ArcadeSubscriptionManager(0LL);
  id v32 = objc_allocWithZone(v31);
  double v33 = (void *)ArcadeSubscriptionManager.init(arcadeSubscriptionFamilyId:subscriptionEntitlements:activeStoreAccountProvider:)( v26,  v28,  &v114,  v113);
  *uint64_t v24 = 0;
  (*(void (**)(_BYTE *, void, uint64_t))(v22 + 104))( v24,  enum case for EntitlementRefeshCondition.ifCacheIsExpired(_:),  v21);
  uint64_t v34 = ArcadeSubscriptionManager.updateStateFromEntitlements(refreshingCache:)(v24);
  swift_release(v34);
  (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t v35 = a1;
  uint64_t v36 = inject(_:from:)(a1);
  MetricsPipeline.aggregator.getter(v36);
  id v37 = v33;
  __n128 v38 = v109;
  ArcadeSubscriptionFieldsProvider.init(arcadeSubscriptionManager:)();
  uint64_t v39 = v111;
  uint64_t v115 = v111;
  CGRect v116 = (void *)sub_100003B6C( &qword_1002ECFB8,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSubscriptionFieldsProvider,  (uint64_t)&protocol conformance descriptor for ArcadeSubscriptionFieldsProvider);
  __n128 v40 = sub_100009D54(&v114);
  uint64_t v41 = (*(uint64_t (**)(void *, char *, uint64_t))(v110 + 16))(v40, v38, v39);
  uint64_t v42 = v88;
  static MetricsFieldExclusionRequest.arcadeSubscription.getter(v41);
  MetricsFieldsAggregator.addOptOutProvider(_:forRequest:)(&v114, v42);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v42, v93);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v114);
  uint64_t v43 = inject(_:from:)(v35);
  uint64_t v45 = v44;
  uint64_t v115 = type metadata accessor for ArcadeButtonNameFieldsProvider(0LL);
  CGRect v116 = (void *)sub_100003B6C( &qword_1002ECFC0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeButtonNameFieldsProvider,  (uint64_t)&protocol conformance descriptor for ArcadeButtonNameFieldsProvider);
  sub_100009D54(&v114);
  uint64_t v46 = (char *)v37;
  swift_unknownObjectRetain(v43);
  uint64_t v93 = v43;
  uint64_t v47 = ArcadeButtonNameFieldsProvider.init(arcadeSubscriptionManager:appStateController:)(v46, v43, v45);
  uint64_t v48 = v100;
  static MetricsFieldInclusionRequest.arcadeButtonName.getter(v47);
  MetricsFieldsAggregator.addOptInProvider(_:forRequest:)(&v114, v48);
  v101[1](v48, v103);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v114);
  uint64_t v49 = type metadata accessor for AppStoreMetricsFieldsBuilder(0LL);
  uint64_t v50 = sub_100003B6C( &qword_1002ECFC8,  (uint64_t (*)(uint64_t))&type metadata accessor for AppStoreMetricsFieldsBuilder,  (uint64_t)&protocol conformance descriptor for AppStoreMetricsFieldsBuilder);
  uint64_t v51 = *(uint64_t (**)(char *, void (**)(char *, uint64_t), uint64_t))(v107 + 16);
  uint64_t v52 = v92;
  double v101 = v16;
  uint64_t v53 = v16;
  uint64_t v54 = v91;
  uint64_t v55 = v51(v92, v53, v108);
  objc_super v56 = MetricsPipeline.linter.getter(&v114, v55);
  __n128 v100 = v20;
  MetricsPipeline.recorder.getter(v113, v56);
  NSString v57 = v106;
  MetricsPipeline.init(builderType:aggregator:linter:recorder:)(v49, v50, v52, &v114, v113);
  uint64_t v58 = sub_1000031E8(&qword_1002DE660);
  uint64_t v59 = *(void *)(v112 + 72);
  uint64_t v60 = *(unsigned __int8 *)(v112 + 80);
  uint64_t v61 = (v60 + 32) & ~v60;
  size_t v62 = swift_allocObject(v58, v61 + 2 * v59, v60 | 7);
  *(_OWORD *)(v62 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
  uint64_t v92 = v46;
  double v114 = v46;
  static Dependency.satisfying<A>(_:with:)(v31, &v114, v31);
  static Dependency.satisfying<A>(_:with:)(v54, v57, v54);
  id v63 = v94;
  uint64_t v64 = v95;
  uint64_t v103 = v35;
  inject<A, B>(_:from:)(v94, v95, v35, v95, v90);
  uint64_t v65 = v97;
  id v66 = (char *)(*(uint64_t (**)(void *))(*(void *)v97 + 224LL))(v63);
  (*(void (**)(void *, uint64_t))(v96 + 8))(v63, v64);
  if (v66)
  {
    uint64_t v67 = type metadata accessor for CommerceDialogHandler(0LL);
    double v114 = v66;
    uint64_t v68 = v87;
    static Dependency.satisfying<A>(_:with:)(v67, &v114, v67);
    unint64_t v70 = *(void *)(v62 + 16);
    unint64_t v69 = *(void *)(v62 + 24);
    if (v70 >= v69 >> 1) {
      size_t v62 = sub_100019F14(v69 > 1, v70 + 1, 1, (void *)v62);
    }
    uint64_t v71 = v104;
    *(void *)(v62 + swift_weakDestroy(v0 + 16) = v70 + 1;
    (*(void (**)(size_t, char *, uint64_t))(v112 + 32))(v62 + v61 + v70 * v59, v68, v71);
  }

  else
  {
    uint64_t v71 = v104;
  }

  id v72 = *(char **)(v65 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_debugMetricsRecorder);
  if (v72)
  {
    uint64_t v73 = type metadata accessor for InMemoryMetricsEventRecorder(0LL);
    double v114 = v72;
    swift_retain(v72);
    static Dependency.satisfying<A>(_:with:)(v73, &v114, v73);
    unint64_t v75 = *(void *)(v62 + 16);
    unint64_t v74 = *(void *)(v62 + 24);
    if (v75 >= v74 >> 1) {
      size_t v62 = sub_100019F14(v74 > 1, v75 + 1, 1, (void *)v62);
    }
    *(void *)(v62 + swift_weakDestroy(v0 + 16) = v75 + 1;
    (*(void (**)(size_t, char *, uint64_t))(v112 + 32))(v62 + v61 + v75 * v59, v105, v71);
    swift_release(v72);
  }

  uint64_t v76 = type metadata accessor for AttentionAwarenessTracker();
  swift_allocObject(v76, 32LL, 7LL);
  uint64_t v77 = sub_1001330C0();
  double v114 = (char *)v77;
  double v78 = v102;
  static Dependency.satisfying<A>(_:with:)(v76, &v114, v76);
  swift_release(v77);
  unint64_t v80 = *(void *)(v62 + 16);
  unint64_t v79 = *(void *)(v62 + 24);
  if (v80 >= v79 >> 1) {
    size_t v62 = sub_100019F14(v79 > 1, v80 + 1, 1, (void *)v62);
  }
  *(void *)(v62 + swift_weakDestroy(v0 + 16) = v80 + 1;
  (*(void (**)(size_t, char *, uint64_t))(v112 + 32))(v62 + v61 + v80 * v59, v78, v71);
  double v114 = (char *)v62;
  uint64_t v81 = sub_1000031E8(&qword_1002DDA28);
  unint64_t v82 = sub_1000061A8();
  uint64_t v83 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(&v114, v81, v82);
  swift_bridgeObjectRelease(v62);

  swift_unknownObjectRelease(v93);
  swift_release(v98);
  double v84 = *(void (**)(char *, uint64_t))(v99 + 8);
  v84(v106, v54);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v109, v111);
  (*(void (**)(char *, uint64_t))(v107 + 8))((char *)v101, v108);
  v84(v100, v54);
  return v83;
}

void sub_1001F8758(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v2 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for MetricsData(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingEvents);
  swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingEvents, v28, 1LL, 0LL);
  uint64_t v10 = *v9;
  if (!((unint64_t)*v9 >> 62))
  {
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      return;
    }
LABEL_3:
    uint64_t v11 = *v9;
    unint64_t v12 = (unint64_t)*v9 >> 62;
    uint64_t v24 = v9;
    if (v12)
    {
      if (v11 < 0) {
        uint64_t v21 = v11;
      }
      else {
        uint64_t v21 = v11 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v11);
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v21);
      if (v13) {
        goto LABEL_5;
      }
    }

    else
    {
      uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(v11);
      if (v13)
      {
LABEL_5:
        if (v13 < 1)
        {
          __break(1u);
          return;
        }

        uint64_t v14 = 0LL;
        do
        {
          if ((v11 & 0xC000000000000001LL) != 0)
          {
            uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v11);
            uint64_t v16 = v15;
          }

          else
          {
            uint64_t v16 = *(void *)(v11 + 8 * v14 + 32);
            uint64_t v15 = swift_retain(v16);
          }

          ++v14;
          uint64_t v17 = dispatch thunk of MetricsEvent.metricsData.getter(v15);
          static MetricsFieldsContext.emptyContext.getter(v17);
          uint64_t v18 = MetricsPipeline.process(_:using:)(v8, v4);
          swift_release(v16);
          swift_release(v18);
          (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        }

        while (v13 != v14);
      }
    }

    swift_bridgeObjectRelease(v11);
    uint64_t v22 = *v24;
    *uint64_t v24 = (uint64_t)&_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v22);
    return;
  }

  if (v10 < 0) {
    uint64_t v19 = *v9;
  }
  else {
    uint64_t v19 = v10 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v9);
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v10);
  if (v20) {
    goto LABEL_3;
  }
}

uint64_t sub_1001F8980@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ASKBootstrap.TargetType(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Bag.Profile(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(uint64_t))(*(void *)v1 + 176LL))(v9);
  *((void *)&v17 + 1) = &type metadata for ModernAppStateControllerFactory;
  uint64_t v18 = (void *)sub_1001F99A0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ASKBootstrap.TargetType.app(_:), v3);
  static ASKBootstrapFactory.make(bagProfile:appStateControllerFactory:targetType:)(v19, v11, &v16, v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v16);
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  sub_100005F8C(v19, v20);
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_debugMetricsRecorder);
  if (v14)
  {
    *((void *)&v17 + 1) = type metadata accessor for InMemoryMetricsEventRecorder(0LL);
    uint64_t v18 = &protocol witness table for InMemoryMetricsEventRecorder;
    *(void *)&__int128 v16 = v14;
  }

  else
  {
    uint64_t v18 = 0LL;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
  }

  a1[3] = v12;
  a1[4] = v13;
  sub_100009D54(a1);
  swift_retain(v14);
  dispatch thunk of ASKBootstrapProtocol.withMetricsEventRecorder(_:)(&v16, v12, v13);
  sub_100006060((uint64_t)&v16, &qword_1002ECFE8);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v19);
}

id sub_1001F8B3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ErrorViewController();
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)) init];
  swift_errorRetain(a1);
  id result = [v5 view];
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = type metadata accessor for ErrorShieldView();
    swift_dynamicCastClassUnconditional(v7, v8, 0LL, 0LL, 0LL);
    ErrorPresenter.error.setter(a1);

    swift_retain_n(v1, 2LL);
    id result = [v5 view];
    if (result)
    {
      uint64_t v9 = result;
      uint64_t v10 = swift_dynamicCastClassUnconditional(result, v8, 0LL, 0LL, 0LL);
      uint64_t v11 = swift_allocObject(&unk_10028F0C8, 24LL, 7LL);
      swift_unknownObjectWeakInit(v11 + 16, v5);
      uint64_t v12 = (uint64_t (*)())swift_allocObject(&unk_10028F0F0, 40LL, 7LL);
      *((void *)v12 + 2) = v11;
      *((void *)v12 + 3) = sub_1001F993C;
      *((void *)v12 + swift_weakDestroy(v0 + 4) = v2;
      uint64_t v13 = (uint64_t (**)())(v10 + OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler);
      uint64_t v14 = *(void *)(v10 + OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler);
      uint64_t v15 = *(void *)(v10 + OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler + 8);
      *uint64_t v13 = sub_1001F9994;
      v13[1] = v12;
      swift_retain(v2);
      swift_retain(v12);
      sub_10000D3D8(v14, v15);
      sub_100135DD4();

      swift_release_n(v2, 2LL);
      swift_release(v12);
      return v5;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_1001F8CE8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v8 = *(void *)(v38 - 8);
  uint64_t v9 = __chkstk_darwin(v38);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = type metadata accessor for ASKBagContract(0LL);
  uint64_t v15 = inject(_:from:)(v14, a1);
  if (qword_1002DCC10 != -1) {
    swift_once(&qword_1002DCC10, sub_10011449C);
  }
  uint64_t v16 = qword_1002F0690;
  uint64_t v37 = v15;
  uint64_t v17 = ASKBagContract.defaultAutoPlayVideoSetting.getter();
  uint64_t v18 = (uint64_t *)(v16 + OBJC_IVAR____TtC6Arcade28AutoPlayVideoSettingsManager_defaultAutoPlayVideoSetting);
  uint64_t v19 = *(void *)(v16 + OBJC_IVAR____TtC6Arcade28AutoPlayVideoSettingsManager_defaultAutoPlayVideoSetting + 8);
  *uint64_t v18 = v17;
  v18[1] = v20;
  swift_bridgeObjectRelease(v19);
  sub_1001152D8();
  inject(_:from:)(a1);
  sub_1001F8758((uint64_t)v13);
  type metadata accessor for PageRenderMetricsEvent(0LL);
  uint64_t v21 = Date.init()();
  double v22 = Date.timeIntervalSince1970.getter(v21);
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  static PageRenderMetricsEvent.lastInteractionTime.setter(v23, v22);
  uint64_t v24 = type metadata accessor for CommerceDialogHandler(0LL);
  BaseObjectGraph.optional<A>(_:)(&v39, v24, v24);
  uint64_t v25 = v39;
  if (v39)
  {
    CommerceDialogHandler.isActive.setter(1LL);
  }

  uint64_t v26 = v38;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v38);
  uint64_t v27 = type metadata accessor for ArcadeAccountEventGenerator(0LL);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  uint64_t v28 = ArcadeAccountEventGenerator.init(metricsPipeline:)(v11);
  uint64_t v29 = type metadata accessor for ArcadeSubscriptionManager(0LL);
  uint64_t v30 = (void *)inject(_:from:)(v29, a1);
  uint64_t v31 = swift_retain_n(v28, 2LL);
  ArcadeSubscriptionManager.addSubscriptionStateObserver(_:action:)( v31,  &j___s19AppStoreKitInternal27ArcadeAccountEventGeneratorC20arcadeStateDidChangeyyFTj,  v28);
  swift_release_n(v28, 2LL);
  (*(void (**)(uint64_t))(*v2 + 344LL))(a1);
  static PendingAppLaunch.didFinishLaunch(postEventUsing:)(v13);
  *((_BYTE *)v2 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_isBootstrapping) = 0;
  uint64_t Strong = swift_unknownObjectUnownedLoadStrong(v2 + 2);
  uint64_t v33 = v2[3];
  uint64_t ObjectType = swift_getObjectType(Strong);
  (*(void (**)(uint64_t, uint64_t))(v33 + 16))(ObjectType, v33);
  swift_release(v28);
  swift_release(v37);

  swift_unknownObjectRelease(Strong);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v26);
}

uint64_t sub_1001F8FAC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v5 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v6 = swift_allocObject( v4,  ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
       + 2LL * *(void *)(v5 + 72),
         *(unsigned __int8 *)(v5 + 80) | 7LL);
  *(_OWORD *)(v6 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
  LogMessage.init(stringLiteral:)(0xD000000000000030LL, 0x800000010024EE30LL);
  swift_getErrorValue(a1, v22, &v20);
  uint64_t v7 = v20;
  uint64_t v8 = v21;
  v23[3] = v21;
  uint64_t v9 = sub_100009D54(v23);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(v9, v7, v8);
  static LogMessage.safe(_:)(v23);
  sub_100006060((uint64_t)v23, (uint64_t *)&unk_1002DF680);
  uint64_t v10 = type metadata accessor for CompoundLogger(0LL);
  Logger.error(_:)(v6, v10, &protocol witness table for CompoundLogger);
  swift_bridgeObjectRelease(v6);
  uint64_t v11 = type metadata accessor for PageMetricsEvent(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  swift_errorRetain(a1);
  uint64_t v12 = PageMetricsEvent.init(error:pageUrl:)(a1, 0LL, 0LL);
  uint64_t v13 = (void *)(v1 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingEvents);
  uint64_t v14 = swift_beginAccess(v13, v23, 33LL, 0LL);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  unint64_t v16 = *(void *)((*v13 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v15 = *(void *)((*v13 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v16 >= v15 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1LL);
  }
  uint64_t v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v12);
  specialized Array._endMutation()(v17);
  __n128 v18 = swift_endAccess(v23);
  static PendingAppLaunch.didFailToLaunch()(v18);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_isBootstrapping) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)v2 + 352LL))(a1);
}

uint64_t sub_1001F91A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MetricsLogger.Configuration(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for ArtworkLoader(0LL);
  uint64_t v27 = ArtworkLoader.__allocating_init(cacheLimit:renderIntent:)(0LL, 0LL);
  uint64_t v7 = sub_100006028(0LL, &qword_1002ECFD0, &OBJC_CLASS___ASKLoadAvatarResourceOperation_ptr);
  ArtworkLoader.register(resourceLoader:)(v7);
  uint64_t v8 = sub_100003B6C( &qword_1002ECFD8,  (uint64_t (*)(uint64_t))&type metadata accessor for MetricsLogger.Configuration,  (uint64_t)&protocol conformance descriptor for MetricsLogger.Configuration);
  inject<A>(_:from:)(v2, a1, v2, v8);
  uint64_t v9 = type metadata accessor for DiagnosticsReporter(0LL);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  uint64_t v26 = sub_100120E00((uint64_t)v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))( v5,  v26 + OBJC_IVAR____TtC6Arcade19DiagnosticsReporter_configuration,  v2);
  uint64_t v10 = type metadata accessor for MetricsLogger(0LL);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  uint64_t v11 = MetricsLogger.init(loggerName:configuration:)(0x61727473746F6F62LL, 0xE900000000000070LL, v5);
  v28[3] = v10;
  v28[4] = &protocol witness table for MetricsLogger;
  v28[0] = v11;
  swift_retain(v11);
  ReplayLogger.replay(last:messagesInto:)(20LL, v28);
  swift_release(v11);
  _s6Arcade17PillOverlayLayoutVwxx_0(v28);
  sub_100121D4C();
  type metadata accessor for ObjectGraph(0LL);
  uint64_t v12 = swift_retain(a1);
  uint64_t v13 = BaseObjectGraph.__allocating_init(_:)(v12);
  uint64_t v14 = sub_1000031E8(&qword_1002DE660);
  uint64_t v15 = type metadata accessor for Dependency(0LL);
  uint64_t v16 = swift_allocObject( v14,  ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v15 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
  uint64_t v17 = v27;
  v28[0] = v27;
  static Dependency.satisfying<A>(_:with:)(v6, v28, v6);
  updateCGFloat d = type metadata accessor for UpdateStore(0LL);
  uint64_t v19 = (void *)static UpdateStore.shared.getter();
  v28[0] = v19;
  static Dependency.satisfying<A>(_:with:)(updated, v28, updated);

  uint64_t v20 = v26;
  v28[0] = v26;
  static Dependency.satisfying<A>(_:with:)(v9, v28, v9);
  v28[0] = v16;
  uint64_t v21 = sub_1000031E8(&qword_1002DDA28);
  unint64_t v22 = sub_1000061A8();
  uint64_t v23 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(v28, v21, v22);
  swift_bridgeObjectRelease(v16);
  swift_release(v13);
  swift_retain(v23);
  dispatch thunk of BaseObjectGraph.name.setter(1701998403LL, 0xE400000000000000LL);
  swift_release(v17);
  swift_release(v20);
  swift_release(v23);
  return v23;
}

void sub_1001F94C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1001F94F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1001F9520( uint64_t a1, uint64_t a2, uint64_t a3, Swift::Int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = *v7;
  _StringGuts.grow(_:)(a4);
  __n128 v15 = swift_bridgeObjectRelease(0xE000000000000000LL);
  uint64_t v21 = a6;
  v16._countAndFlagsBits = StaticString.description.getter(a1, a2, a3, v15);
  object = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(object);
  v18._object = (void *)0x800000010024EDF0LL;
  v18._countAndFlagsBits = 0xD000000000000017LL;
  String.append(_:)(v18);
  v19._countAndFlagsBits = _typeName(_:qualified:)(v14, 0LL);
  uint64_t v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  a5,  v21,  "Arcade/BaseBootstrap.swift",  26LL,  2LL,  a7,  0);
  __break(1u);
}

void sub_1001F9610()
{
}

void sub_1001F962C(uint64_t a1)
{
  uint64_t v2 = static ClickMetricsEvent.makeErrorRetryEvent()();
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingEvents);
  uint64_t v4 = swift_beginAccess(a1 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingEvents, v8, 33LL, 0LL);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
  unint64_t v6 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v5 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v6 >= v5 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1LL);
  }
  uint64_t v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v2);
  specialized Array._endMutation()(v7);
  swift_endAccess(v8);
  sub_1001F7D00();
}

double sub_1001F96DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_1001F91A0(*a1);
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)a2 + 288LL))();
  dispatch thunk of BaseObjectGraph.name.setter(0x65726F7453707041LL, 0xE800000000000000LL);
  sub_1001F8CE8(v4);
  swift_release(v3);
  *(void *)&double result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_1001F9758(uint64_t a1)
{
  return sub_1001F8FAC(a1);
}

void sub_1001F9778()
{
}

void sub_1001F9794()
{
}

double sub_1001F97B0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_logger;
  uint64_t v2 = type metadata accessor for CompoundLogger(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingMetricsLogger));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_diagnosticsRecorder));
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingEvents));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_debugMetricsRecorder));
  *(void *)&double result = swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL)).n128_u64[0];
  return result;
}

uint64_t sub_1001F9848()
{
  return type metadata accessor for BaseBootstrap(0LL);
}

uint64_t type metadata accessor for BaseBootstrap(uint64_t a1)
{
  uint64_t result = qword_1002ECE20;
  if (!qword_1002ECE20) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BaseBootstrap);
  }
  return result;
}

uint64_t sub_1001F988C(uint64_t a1)
{
  v4[0] = &unk_100242510;
  uint64_t result = type metadata accessor for CompoundLogger(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    uint64_t v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[5] = &unk_100242528;
    v4[6] = &unk_100242540;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

void sub_1001F993C()
{
}

uint64_t sub_1001F9944()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001F9968()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1001F9994()
{
  return sub_10012F868(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

unint64_t sub_1001F99A0()
{
  unint64_t result = qword_1002ECFE0;
  if (!qword_1002ECFE0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100243360, &type metadata for ModernAppStateControllerFactory);
    atomic_store(result, (unint64_t *)&qword_1002ECFE0);
  }

  return result;
}

id sub_1001F99E4(uint64_t a1, char *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  double v9 = PageGrid.componentMeasuringSize(spanning:)(a1, 1.0);
  double v11 = v10;
  if (qword_1002DCEE8 != -1) {
    swift_once(&qword_1002DCEE8, sub_1001692DC);
  }
  uint64_t v12 = type metadata accessor for TitleHeaderView.Style(0LL);
  uint64_t v13 = sub_1000061F4(v12, (uint64_t)qword_1002F10C0);
  double v14 = PageGrid.horizontalMargins.getter(v13);
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  id v21 = [a4 snapshotPageTraitEnvironment];
  uint64_t ObjectType = swift_getObjectType(v21);
  sub_10017034C( 0LL,  0LL,  0LL,  a1,  a2,  0LL,  0LL,  0LL,  v9,  v11,  0.0,  0.0,  v14,  v16,  v18,  v20,  1LL,  v13,  v21,  v5,  ObjectType);
  double v24 = v23;
  swift_unknownObjectRelease(v21);
  uint64_t v25 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
  id v26 = [v25 fractionalWidthDimension:1.0];
  id v27 = [v25 absoluteDimension:v24];
  id v28 =  [(id)objc_opt_self(NSCollectionLayoutSize) sizeWithWidthDimension:v26 heightDimension:v27];

  id v29 = v28;
  static UICollectionReusableView.elementKind.getter();
  uint64_t v31 = v30;
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  id v33 =  [(id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem) boundarySupplementaryItemWithLayoutSize:v29 elementKind:v32 alignment:1];

  id v34 = v33;
  PageGrid.horizontalDirectionalMargins.getter(v34);
  objc_msgSend(v34, "setContentInsets:");

  return v34;
}

id sub_1001F9C3C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSString a6)
{
  uint64_t v8 = type metadata accessor for TitleHeaderView.Style(0LL);
  __chkstk_darwin(v8);
  double v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  objc_msgSend( a1,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);
  double v11 = *(void **)((char *)a1 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
  [v11 setAllowsDefaultTighteningForTruncation:1];
  if (a6) {
    a6 = String._bridgeToObjectiveC()();
  }
  [v11 setText:a6];

  if (qword_1002DCEE8 != -1) {
    swift_once(&qword_1002DCEE8, sub_1001692DC);
  }
  uint64_t v12 = sub_1000061F4(v8, (uint64_t)qword_1002F10C0);
  sub_10000D57C(v12, (uint64_t)v10);
  (*(void (**)(char *))((swift_isaMask & *a1) + 0x190LL))(v10);
  id v13 = [(id)objc_opt_self(UIColor) clearColor];
  [a1 setBackgroundColor:v13];

  return [a1 setNeedsLayout];
}

uint64_t sub_1001F9DC8()
{
  return sub_1001F9DE0(0.5);
}

uint64_t sub_1001F9DD0()
{
  return sub_1001F9DE0(0.7);
}

uint64_t sub_1001F9DE0(double a1)
{
  uint64_t v3 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for BreakoutDetails.BackgroundStyle.material(_:)
    || v7 == enum case for BreakoutDetails.BackgroundStyle.dark(_:))
  {
    id v9 = [(id)objc_opt_self(UIColor) whiteColor];
    id v10 = [v9 colorWithAlphaComponent:a1];
LABEL_9:
    id v11 = v10;

    return (uint64_t)v11;
  }

  if (v7 == enum case for BreakoutDetails.BackgroundStyle.light(_:))
  {
    id v9 = [(id)objc_opt_self(UIColor) blackColor];
    id v10 = [v9 colorWithAlphaComponent:0.6];
    goto LABEL_9;
  }

  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v3, v3);
  __break(1u);
  return result;
}

uint64_t sub_1001F9F34()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t type metadata accessor for ArticlePageHeaderCollectionElementsObserver()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade43ArticlePageHeaderCollectionElementsObserver);
}

void sub_1001F9F78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1001F9F80(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for ArticleHeaderView();
  uint64_t result = swift_dynamicCastClass(a1, v6);
  if (result)
  {
    v13[3] = v6;
    v13[0] = result;
    uint64_t v8 = type metadata accessor for ArtworkLoader(0LL);
    uint64_t v9 = type metadata accessor for BaseObjectGraph(0LL);
    id v10 = a1;
    inject<A, B>(_:from:)(&v12, v8, a4, v8, v9);
    uint64_t v11 = v12;
    tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v13, v12, a4, 1LL);
    swift_release(v11);
    return _s6Arcade17PillOverlayLayoutVwxx_0(v13);
  }

  return result;
}

void sub_1001FA030(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ArticleHeaderView();
  uint64_t v7 = swift_dynamicCastClass(a1, v6);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t Strong = swift_weakLoadStrong(v3 + 16);
    if (Strong)
    {
      uint64_t v10 = Strong;
      id v18 = a1;
      uint64_t v12 = ArticleDiffablePagePresenter.todayCard.getter(v11);
      swift_release(v10);
      if (v12)
      {
        v21[3] = type metadata accessor for TodayCard(0LL);
        v21[4] = sub_1001FA170();
        v20[3] = v6;
        v21[0] = v12;
        v20[0] = v8;
        uint64_t v13 = type metadata accessor for ArtworkLoader(0LL);
        uint64_t v14 = type metadata accessor for BaseObjectGraph(0LL);
        id v15 = v18;
        swift_retain(v12);
        inject<A, B>(_:from:)(&v19, v13, a3, v13, v14);
        uint64_t v16 = v19;
        tryToFetch(artworkFor:into:on:asPartOf:)(v21, v20, v19, a3, v17);
        swift_release(v16);
        swift_release(v12);

        _s6Arcade17PillOverlayLayoutVwxx_0(v20);
        sub_10013B8A8((uint64_t)v21);
      }

      else
      {
      }
    }
  }

unint64_t sub_1001FA170()
{
  unint64_t result = qword_1002E42C0;
  if (!qword_1002E42C0)
  {
    uint64_t v1 = type metadata accessor for TodayCard(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for TodayCard, v1);
    atomic_store(result, (unint64_t *)&qword_1002E42C0);
  }

  return result;
}

uint64_t _s14descr10028F251C5StateVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t _s14descr10028F251C5StateVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *_s14descr10028F251C5StateVMa()
{
  return &_s14descr10028F251C5StateVN;
}

void sub_1001FA214(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_1001FA224(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a1 + 8);
  uint64_t result = *(unsigned __int8 *)(a2 + 8);
  if ((v3 & 1) == 0) {
    return (*(void *)a1 == *(void *)a2) & ~(_DWORD)result;
  }
  return result;
}

unint64_t sub_1001FA250()
{
  unint64_t result = qword_1002ED0B8;
  if (!qword_1002ED0B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_100242644, &_s14descr10028F251C5StateVN);
    atomic_store(result, (unint64_t *)&qword_1002ED0B8);
  }

  return result;
}

unint64_t sub_1001FA298()
{
  unint64_t result = qword_1002ED0C0;
  if (!qword_1002ED0C0)
  {
    unint64_t result = swift_getWitnessTable(&unk_10024261C, &_s14descr10028F251C5StateVN);
    atomic_store(result, (unint64_t *)&qword_1002ED0C0);
  }

  return result;
}

  ;
}

id sub_1001FA2EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FA498(*a1, a2, a3);
}

uint64_t sub_1001FA2F4(uint64_t a1, char a2, uint64_t a3)
{
  return sub_1001FA35C(a1, a2, a3);
}

unint64_t sub_1001FA310()
{
  unint64_t result = qword_1002ED0C8;
  if (!qword_1002ED0C8)
  {
    uint64_t v1 = type metadata accessor for HeroCarousel(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for HeroCarousel, v1);
    atomic_store(result, (unint64_t *)&qword_1002ED0C8);
  }

  return result;
}

uint64_t sub_1001FA35C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a2 & 1) != 0)
  {
    if (qword_1002DCBC8 != -1) {
      swift_once(&qword_1002DCBC8, sub_100102E40);
    }
    uint64_t v9 = type metadata accessor for StaticDimension(0LL);
    uint64_t v10 = v9;
    __n128 v11 = qword_1002F0570;
  }

  else
  {
    if (qword_1002DCBD0 != -1) {
      swift_once(&qword_1002DCBD0, sub_100102E50);
    }
    uint64_t v9 = type metadata accessor for StaticDimension(0LL);
    uint64_t v10 = v9;
    __n128 v11 = qword_1002F0588;
  }

  uint64_t v12 = sub_1000061F4(v9, (uint64_t)v11);
  static Dimensions.defaultRoundingRule.getter(v12);
  double v13 = AnyDimension.value(in:rounded:)(a3, v8, v10, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return *(void *)&v13;
}

id sub_1001FA498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v32 = a3;
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002EB6C0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for AutoScrollConfiguration(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8(&qword_1002EB698);
  __n128 v15 = __chkstk_darwin(v14);
  __n128 v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  HeroCarousel.id.getter(&v34, v15);
  uint64_t v18 = (uint64_t)&v3[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_playbackId];
  swift_beginAccess(v18, v33, 33LL, 0LL);
  sub_1001FA788((uint64_t)&v34, v18);
  swift_endAccess(v33);
  uint64_t v19 = sub_1000031E8(&qword_1002EB568);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v17, a2, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0LL, 1LL, v19);
  uint64_t v21 = (uint64_t)&v4[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_stateLens];
  swift_beginAccess(&v4[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_stateLens], &v34, 33LL, 0LL);
  sub_1001C55C8((uint64_t)v17, v21);
  objc_msgSend(v4, "setNeedsLayout", swift_endAccess(&v34).n128_f64[0]);
  HeroCarousel.autoScrollConfiguration.getter([v4 layoutIfNeeded]);
  unint64_t v22 = &v4[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_autoScrollConfiguration];
  swift_beginAccess( &v4[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_autoScrollConfiguration],  &v34,  33LL,  0LL);
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v22, v13, v10);
  swift_endAccess(&v34);
  sub_1001C2070();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v34 = a1;
  uint64_t v23 = type metadata accessor for HeroCarousel(0LL);
  uint64_t v24 = type metadata accessor for ObjectGraph(0LL);
  unint64_t v25 = sub_1001FA310();
  ComponentModel.pairedWith<A>(objectGraph:)(v32, v23, v24, v25);
  uint64_t v26 = sub_1000031E8(&qword_1002EB558);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v9, 0LL, 1LL, v26);
  sub_1001C0FBC((uint64_t)v9);
  id v27 = *(void **)&v4[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_carouselView];
  unint64_t v28 = sub_1001C54F0();
  WritableStateLens<A>.currentValue.getter(&v34, v19, v28);
  if (v35) {
    uint64_t v29 = 0LL;
  }
  else {
    uint64_t v29 = v34;
  }
  return [v27 centerItemAtPageIndex:v29];
}

uint64_t sub_1001FA788(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001FA7C4()
{
  return sub_1001FA7DC(&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:));
}

uint64_t sub_1001FA7D0()
{
  return sub_1001FA7DC(&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:));
}

uint64_t sub_1001FA7DC(unsigned int *a1)
{
  uint64_t v3 = type metadata accessor for StoreViewControllerLifecycleEvent(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = v1 + OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v7, v15, 0LL, 0LL);
  sub_1001FBAE8(v7, (uint64_t)v16);
  if (!v17) {
    return sub_1001FBB30((uint64_t)v16);
  }
  sub_10001F010((uint64_t)v16, (uint64_t)v12);
  sub_1001FBB30((uint64_t)v16);
  uint64_t v8 = v13;
  uint64_t v9 = v14;
  sub_100005F8C(v12, v13);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *a1, v3);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v6, v8, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v12);
}

void sub_1001FA8F4()
{
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    [v1 bounds];
  }

  else
  {
    __break(1u);
  }

void sub_1001FA994()
{
  id v1 = v0;
  if (qword_1002DCC48 != -1) {
    swift_once(&qword_1002DCC48, sub_100121FC0);
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(&unk_1002E68E0);
  if (Strong
    && (uint64_t v3 = Strong,
        uint64_t v4 = (uint64_t (**)(uint64_t, void *))off_1002E68E8,
        uint64_t ObjectType = swift_getObjectType(Strong),
        uint64_t v6 = (void *)v4[1](ObjectType, v4),
        *(void *)&double v7 = swift_unknownObjectRelease(v3).n128_u64[0],
        v6))
  {
    id v8 = objc_msgSend(v6, "view", v7);

    if (v8)
    {
      [v8 bounds];
      double v10 = v9;
      double v12 = v11;
      double v14 = v13;
      double v16 = v15;

      id v17 = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for InsetCollectionViewControllerContentView()),  "initWithFrame:",  v10,  v12,  v14,  v16);
      [v17 setAutoresizingMask:18];
      [v1 setView:v17];
      id v18 = [v1 collectionViewLayout];
      id v19 = objc_msgSend( objc_allocWithZone(UICollectionView),  "initWithFrame:collectionViewLayout:",  v18,  v10,  v12,  v14,  v16);

      [v19 setAutoresizingMask:18];
      [v19 setDelegate:*(void *)&v1[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_collectionViewDelegate]];
      [v19 setDataSource:*(void *)&v1[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_collectionViewDataSource]];
      [v19 setShowsVerticalScrollIndicator:0];
      [v19 setShowsHorizontalScrollIndicator:0];
      [v19 setAllowsSelection:1];
      memset(v24, 0, sizeof(v24));
      char v25 = 4;
      id v22 = v19;
      sub_1000661C8((uint64_t)v24);

      id v20 = [v1 view];
      if (v20)
      {
        uint64_t v21 = v20;
        [v20 addSubview:v22];

        [v1 setCollectionView:v22];
        return;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
  }

  else
  {
    v23.id receiver = v1;
    v23.super_class = (Class)type metadata accessor for StoreCollectionViewController();
    objc_msgSendSuper2(&v23, "loadView");
  }

void sub_1001FACA0()
{
  id v1 = v0;
  v30.id receiver = v0;
  v30.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  objc_msgSendSuper2(&v30, "viewDidLoad");
  id v2 = [v0 collectionView];
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 _gradientMaskLengths];
    if (v7 != *(double *)((char *)v1 + OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_gradientMaskLengths)
      || v4 != *(double *)((char *)v1 + OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_gradientMaskLengths + 8)
      || v5 != *(double *)((char *)v1 + OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_gradientMaskLengths + 16)
      || v6 != *(double *)((char *)v1 + OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_gradientMaskLengths + 24))
    {
      objc_msgSend(v3, "_setGradientMaskLengths:");
    }
  }

  double v11 = *(void **)((char *)v1 + OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController);
  if (v11)
  {
    double v12 = *(double (**)(void))((swift_isaMask & *v1) + 0x138LL);
    id v13 = v11;
    v31[0] = v12();
    v31[1] = v14;
    _OWORD v31[2] = v15;
    id v31[3] = v16;
    char v32 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v11, v1, v31);
  }

  uint64_t v17 = type metadata accessor for ImpressionsCalculator(0LL);
  BaseObjectGraph.optional<A>(_:)(&v29, v17, v17);
  uint64_t v18 = v29;
  if (v29)
  {
    id v19 = [v1 collectionView];
    if (v19)
    {
      id v20 = v19;
      [v19 bounds];
      double v22 = v21;
      double v24 = v23;
      double v26 = v25;
      double v28 = v27;

      ImpressionsCalculator.viewBounds.setter(v22, v24, v26, v28);
      swift_release(v18);
    }

    else
    {
      __break(1u);
    }
  }

uint64_t sub_1001FAE84(char a1)
{
  return sub_1001FB4BC( a1,  (SEL *)&selRef_viewWillAppear_,  (unsigned int *)&enum case for StoreViewControllerLifecycleEvent.willAppear(_:));
}

void sub_1001FAEE8(char a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for StoreViewControllerLifecycleEvent(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v8 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v25.id receiver = v2;
  v25.super_class = v8;
  objc_msgSendSuper2(&v25, "viewDidAppear:", a1 & 1);
  uint64_t v9 = (uint64_t)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver];
  swift_beginAccess(&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver], v22, 0LL, 0LL);
  sub_1001FBAE8(v9, (uint64_t)v23);
  if (v24)
  {
    sub_10001F010((uint64_t)v23, (uint64_t)v19);
    sub_1001FBB30((uint64_t)v23);
    uint64_t v10 = v20;
    uint64_t v11 = v21;
    sub_100005F8C(v19, v20);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for StoreViewControllerLifecycleEvent.didAppear(_:),  v4);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v7, v10, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _s6Arcade17PillOverlayLayoutVwxx_0(v19);
  }

  else
  {
    sub_1001FBB30((uint64_t)v23);
  }

  uint64_t v12 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_registeredForApplicationDidBecomeActive;
  if (v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_registeredForApplicationDidBecomeActive] == 1)
  {
    NSNotificationName v13 = UIApplicationDidBecomeActiveNotification;
  }

  else
  {
    id v14 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
    NSNotificationName v13 = UIApplicationDidBecomeActiveNotification;
    [v14 addObserver:v2 selector:"applicationDidBecomeActive:" name:UIApplicationDidBecomeActiveNotification object:0];

    v2[v12] = 1;
  }

  uint64_t v15 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v16 = [v15 defaultCenter];
  [v16 addObserver:v2 selector:"appEnteredWhileAppeared" name:v13 object:0];

  id v17 = [v15 defaultCenter];
  [v17 addObserver:v2 selector:"appExitedWhileAppeared" name:UIApplicationDidEnterBackgroundNotification object:0];
}

void sub_1001FB168(char a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for StoreViewControllerLifecycleEvent(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  id v8 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v31.id receiver = v2;
  v31.super_class = v8;
  objc_msgSendSuper2(&v31, "viewWillDisappear:", a1 & 1);
  id v9 = [v2 navigationController];
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = [v9 viewControllers];
    unint64_t v12 = sub_10005103C();
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    sub_10015C920((uint64_t)v2, v13);
    LOBYTE(v11) = v14;
    swift_bridgeObjectRelease(v13);
    if ((v11 & 1) != 0)
    {
      uint64_t v15 = (uint64_t)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver];
      swift_beginAccess(&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver], v24, 0LL, 0LL);
      sub_1001FBAE8(v15, (uint64_t)v29);
      if (v30)
      {
        sub_10001F010((uint64_t)v29, (uint64_t)v25);
        sub_1001FBB30((uint64_t)v29);
        uint64_t v16 = v26;
        uint64_t v17 = v27;
        sub_100005F8C(v25, v26);
        (*(void (**)(_BYTE *, void, uint64_t))(v5 + 104))( v7,  enum case for StoreViewControllerLifecycleEvent.dismissedByBackButton(_:),  v4);
        dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v7, v16, v17);

        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
        _s6Arcade17PillOverlayLayoutVwxx_0(v25);
      }

      else
      {

        sub_1001FBB30((uint64_t)v29);
      }
    }

    else
    {
    }
  }

  uint64_t v18 = (uint64_t)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver];
  swift_beginAccess(&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver], v28, 0LL, 0LL);
  sub_1001FBAE8(v18, (uint64_t)v29);
  if (v30)
  {
    sub_10001F010((uint64_t)v29, (uint64_t)v25);
    sub_1001FBB30((uint64_t)v29);
    uint64_t v19 = v26;
    uint64_t v20 = v27;
    sub_100005F8C(v25, v26);
    static ViewWillDisappearReason.inferred(for:)(v2);
    (*(void (**)(_BYTE *, void, uint64_t))(v5 + 104))( v7,  enum case for StoreViewControllerLifecycleEvent.willDisappear(_:),  v4);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v7, v19, v20);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    _s6Arcade17PillOverlayLayoutVwxx_0(v25);
  }

  else
  {
    sub_1001FBB30((uint64_t)v29);
  }

  uint64_t v21 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v22 = [v21 defaultCenter];
  [v22 removeObserver:v2 name:UIApplicationDidBecomeActiveNotification object:0];

  id v23 = [v21 defaultCenter];
  [v23 removeObserver:v2 name:UIApplicationDidEnterBackgroundNotification object:0];
}

uint64_t sub_1001FB4A8(char a1)
{
  return sub_1001FB4BC( a1,  (SEL *)&selRef_viewDidDisappear_,  (unsigned int *)&enum case for StoreViewControllerLifecycleEvent.didDisappear(_:));
}

uint64_t sub_1001FB4BC(char a1, SEL *a2, unsigned int *a3)
{
  uint64_t v7 = type metadata accessor for StoreViewControllerLifecycleEvent(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v11 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v23.id receiver = v3;
  v23.super_class = v11;
  objc_msgSendSuper2(&v23, *a2, a1 & 1);
  uint64_t v12 = (uint64_t)v3 + OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v12, v20, 0LL, 0LL);
  sub_1001FBAE8(v12, (uint64_t)v21);
  if (!v22) {
    return sub_1001FBB30((uint64_t)v21);
  }
  sub_10001F010((uint64_t)v21, (uint64_t)v17);
  sub_1001FBB30((uint64_t)v21);
  uint64_t v13 = v18;
  uint64_t v14 = v19;
  sub_100005F8C(v17, v18);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *a3, v7);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v10, v13, v14);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v17);
}

id sub_1001FB840()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StoreCollectionViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade29StoreCollectionViewController);
}

uint64_t type metadata accessor for InsetCollectionViewControllerContentView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6ArcadeP33_46F848842F8214BA3C0F4A913BA0E21B40InsetCollectionViewControllerContentView);
}

uint64_t sub_1001FBAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E1E80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FBB30(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002E1E80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_1001FBB70()
{
  id v1 = &v0[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + swift_weakDestroy(v0 + 4) = 0LL;
  uint64_t v2 = &v0[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_gradientMaskLengths];
  __int128 v3 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  _OWORD *v2 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v2[1] = v3;
  v0[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_registeredForApplicationDidBecomeActive] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_collectionViewDelegate] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_collectionViewDataSource] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/StoreCollectionViewController.swift",  42LL,  2LL,  45LL,  0);
  __break(1u);
}

double sub_1001FBC30()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberScrollObserver];
  if (v1)
  {
    id v2 =  objc_msgSend( v0,  "collectionView",  swift_retain(*(void *)&v0[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberScrollObserver]).n128_f64[0]);
    if (v2)
    {
      __int128 v3 = *(void **)(v1 + 24);
      id v8 = v2;
      [v3 _systemContentInset];
      double v5 = v4;
      [v3 contentOffset];
      [v3 contentInset];
      [v3 frame];
      v9.origin.CGFloat x = sub_1001C02DC();
      CGFloat v6 = CGRectGetHeight(v9) - v5;
      objc_msgSend(v8, "setContentInset:", v6, 0.0, 0.0, 0.0);
      objc_msgSend(v8, "setScrollIndicatorInsets:", v6, 0.0, 0.0, 0.0);
      swift_release(v1);
    }

    else
    {
      *(void *)&double result = swift_release(v1).n128_u64[0];
    }
  }

  return result;
}

void sub_1001FBD94()
{
  uint64_t v1 = v0;
  id v2 = [v0 collectionView];
  if (v2)
  {
    id v3 = v2;
    if (!*(void *)&v0[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uber]) {
      goto LABEL_30;
    }
    double v4 = *(void **)&v0[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberHeaderView];
    if (v4)
    {
      id v5 = v4;
LABEL_30:

      return;
    }

    CGFloat v6 = (char *)objc_msgSend( objc_allocWithZone((Class)type metadata accessor for UberHeaderView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
    [v0 pageMarginInsets];
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;
    double v14 = v13;
    uint64_t v15 = *(void **)&v6[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView];
    [v15 layoutMargins];
    if (v8 != v19 || v10 != v16 || v12 != v17 || v14 != v18)
    {
      objc_msgSend(v15, "setLayoutMargins:", v8, v10, v12, v14);
      [v6 invalidateIntrinsicContentSize];
      objc_super v23 = *(void (**)(__n128))&v6[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver];
      if (v23)
      {
        uint64_t v24 = *(void *)&v6[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver + 8];
        __n128 v25 = swift_retain(v24);
        v23(v25);
        sub_10000D3D8((uint64_t)v23, v24);
      }
    }

    id v26 = [v1 navigationItem];
    uint64_t v27 = OBJC_IVAR____TtC6Arcade14UberHeaderView_navigationItem;
    double v28 = *(void **)&v6[OBJC_IVAR____TtC6Arcade14UberHeaderView_navigationItem];
    if (v28)
    {
      id v29 = v28;
      NSString v30 = String._bridgeToObjectiveC()();
      [v29 removeObserver:v6 forKeyPath:v30 context:&unk_1002EB900];

      objc_super v31 = *(void **)&v6[v27];
    }

    else
    {
      objc_super v31 = 0LL;
    }

    *(void *)&v6[v27] = v26;
    id v32 = v26;

    id v33 = *(void **)&v6[v27];
    if (v33
      && (id v34 = v33,
          NSString v35 = String._bridgeToObjectiveC()(),
          [v34 addObserver:v6 forKeyPath:v35 options:0 context:&unk_1002EB900],
          v34,
          v35,
          (uint64_t v36 = *(void **)&v6[v27]) != 0LL)
      && (id v37 = [v36 title]) != 0)
    {
      uint64_t v38 = v37;
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      uint64_t v41 = v40;
    }

    else
    {
      uint64_t v39 = 0LL;
      uint64_t v41 = 0LL;
    }

    sub_1001D4AA4(v39, v41);

    uint64_t v42 = swift_allocObject(&unk_10028F318, 24LL, 7LL);
    swift_unknownObjectWeakInit(v42 + 16, v1);
    uint64_t v43 = (void (**)())&v6[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver];
    uint64_t v44 = *(void *)&v6[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver];
    uint64_t v45 = *(void *)&v6[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver + 8];
    void *v43 = sub_1001FCE84;
    v43[1] = (void (*)())v42;
    sub_10000D3D8(v44, v45);
    id v46 = [v1 view];
    if (v46)
    {
      uint64_t v47 = v46;
      id v48 = [v46 tintColor];

      if (v48)
      {
        uint64_t v49 = type metadata accessor for UberScrollObserver(0LL);
        swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
        uint64_t v50 = v6;
        id v51 = v3;
        uint64_t v52 = sub_1001C0794(v50, v51, (uint64_t)v48);

        uint64_t v53 = v50;
        sub_1001FCDA4(v50);

        uint64_t v54 = *(void *)&v1[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberScrollObserver];
        *(void *)&v1[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberScrollObserver] = v52;
        swift_retain(v52);
        *(void *)&double v55 = swift_release(v54).n128_u64[0];
        v1[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_contentInsetsInvalid] = 1;
        id v3 = objc_msgSend(v1, "viewIfLoaded", v55);
        [v3 setNeedsLayout];

        swift_release(v52);
        goto LABEL_30;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
  }

void sub_1001FC270(void *a1, uint64_t a2, uint64_t a3, const char **a4, uint64_t a5)
{
  v10.id receiver = a1;
  v10.super_class = (Class)type metadata accessor for UberedCollectionViewController();
  double v8 = *a4;
  id v9 = v10.receiver;
  objc_msgSendSuper2(&v10, v8, a3);
  ArtworkLoader.isOccluded.setter(a5);
}

void sub_1001FC2E4(void *a1, double a2, double a3)
{
  v15.id receiver = v3;
  v15.super_class = (Class)type metadata accessor for UberedCollectionViewController();
  objc_msgSendSuper2(&v15, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberScrollObserver];
  if (v7)
  {
    double v8 = *(void **)&v3[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberHeaderView];
    if (v8)
    {
      uint64_t v9 = swift_allocObject(&unk_10028F2C8, 32LL, 7LL);
      *(void *)(v9 + swift_weakDestroy(v0 + 16) = v8;
      *(void *)(v9 + 2swift_weakDestroy(v0 + 4) = v7;
      void v13[4] = sub_1001FCD84;
      uint64_t v14 = v9;
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 1107296256LL;
      _OWORD v13[2] = sub_1000C29E8;
      v13[3] = &unk_10028F2E0;
      objc_super v10 = _Block_copy(v13);
      uint64_t v11 = v14;
      swift_retain_n(v7, 2LL);
      id v12 = v8;
      objc_msgSend(a1, "animateAlongsideTransition:completion:", v10, 0, swift_release(v11).n128_f64[0]);
      _Block_release(v10);
      swift_release(v7);
    }
  }

id sub_1001FC418(uint64_t a1, void *a2, uint64_t a3)
{
  double v4 = *(void **)(a3 + 24);
  [v4 _systemContentInset];
  [v4 contentOffset];
  [v4 contentInset];
  [v4 frame];
  return [a2 setFrame:sub_1001C02DC()];
}

void sub_1001FC538()
{
  uint64_t v1 = v0;
  v23.id receiver = v0;
  v23.super_class = (Class)type metadata accessor for UberedCollectionViewController();
  objc_msgSendSuper2(&v23, "viewDidLayoutSubviews");
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberHeaderView];
  if (v2)
  {
    id v3 = v2;
    [v0 pageMarginInsets];
    double v5 = v4;
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    id v12 = *(void **)&v3[OBJC_IVAR____TtC6Arcade14UberHeaderView_titleView];
    [v12 layoutMargins];
    if (v5 != v16 || v7 != v13 || v9 != v14 || v11 != v15)
    {
      objc_msgSend(v12, "setLayoutMargins:", v5, v7, v9, v11);
      [v3 invalidateIntrinsicContentSize];
      uint64_t v20 = *(void (**)(__n128))&v3[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver];
      if (v20)
      {
        uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver + 8];
        __n128 v22 = swift_retain(v21);
        v20(v22);
        sub_10000D3D8((uint64_t)v20, v21);
      }
    }
  }

  if (v1[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_contentInsetsInvalid] == 1)
  {
    v1[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_contentInsetsInvalid] = 0;
    sub_1001FBC30();
  }

void sub_1001FC710(uint64_t a1)
{
  id v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uber;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uber];
  if (v4)
  {
    uint64_t v28 = *(void *)&v1[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uber];
    if (a1)
    {
      uint64_t v27 = a1;
      uint64_t v5 = type metadata accessor for Artwork(0LL);
      uint64_t v6 = sub_100003B6C( &qword_1002E4840,  (uint64_t (*)(uint64_t))&type metadata accessor for Artwork,  (uint64_t)&protocol conformance descriptor for Artwork);
      swift_retain_n(v4, 2LL);
      LOBYTE(v5) = dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v27, v5, v6);
      uint64_t v7 = v28;
      swift_release(v4);
      swift_release(v7);
      if ((v5 & 1) != 0) {
        return;
      }
    }

    uint64_t v8 = *(void *)&v2[v3];
    if (v8)
    {
      swift_retain(*(void *)&v2[v3]);
      sub_1001FBD94();
      if (v9)
      {
        double v10 = v9;
        double v11 = (void *)Artwork.backgroundColor.getter(v9);
        [*(id *)&v10[OBJC_IVAR____TtC6Arcade14UberHeaderView_imageContainerView] setBackgroundColor:v11];

        double v13 = Artwork.size.getter(v12) * 350.0;
        Artwork.size.getter(v14);
        uint64_t v16 = Artwork.config(_:mode:prefersLayeredImage:)(4LL, 0LL, v13 / v15, 350.0);
        uint64_t v17 = type metadata accessor for UberHeaderView();
        uint64_t v18 = sub_100003B6C( &qword_1002ED210,  (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView,  (uint64_t)&unk_10024100C);
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v16, 2LL, 1LL, v10, v17, v18);
        swift_release(v8);

        uint64_t v19 = v16;
      }

      else
      {
        uint64_t v19 = v8;
      }

      swift_release(v19);
      return;
    }
  }

  else if (!a1)
  {
    return;
  }

  uint64_t v20 = *(void **)&v2[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberHeaderView];
  if (v20)
  {
    uint64_t v21 = type metadata accessor for UberHeaderView();
    uint64_t v22 = sub_100003B6C( &qword_1002ED210,  (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView,  (uint64_t)&unk_10024100C);
    id v23 = v20;
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v23, 1LL, v21, v22);
  }

  sub_1001FCDA4(0LL);
  uint64_t v24 = *(void *)&v2[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberScrollObserver];
  *(void *)&v2[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberScrollObserver] = 0LL;
  *(void *)&double v25 = swift_release(v24).n128_u64[0];
  v2[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_contentInsetsInvalid] = 1;
  id v26 = objc_msgSend(v2, "viewIfLoaded", v25);
  [v26 setNeedsLayout];
}

void sub_1001FC998(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v3 = Strong;
    *((_BYTE *)Strong + OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_contentInsetsInvalid) = 1;
    id v4 = [Strong viewIfLoaded];
    [v4 setNeedsLayout];
  }

uint64_t sub_1001FCB20()
{
  return swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberScrollObserver));
}

id sub_1001FCB6C()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for UberedCollectionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UberedCollectionViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade30UberedCollectionViewController);
}

id sub_1001FCC14(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uber] = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_statusBarStyle] = 0LL;
  v2[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_contentInsetsInvalid] = 0;
  *(void *)&v2[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberHeaderView] = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberScrollObserver] = 0LL;
  uint64_t v5 = type metadata accessor for ArtworkLoader(0LL);
  uint64_t v6 = v2;
  *(void *)&v6[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_artworkLoader] = inject(_:from:)(v5, a2);

  uint64_t v7 = &v6[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver];
  *((void *)v7 + swift_weakDestroy(v0 + 4) = 0LL;
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  uint64_t v8 = &v6[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_gradientMaskLengths];
  __int128 v9 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v8 + 1) = v9;
  v6[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_registeredForApplicationDidBecomeActive] = 0;
  *(void *)&v6[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController] = 0LL;
  *(void *)&v6[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_collectionViewDelegate] = 0LL;
  *(void *)&v6[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_collectionViewDataSource] = 0LL;
  *(void *)&v6[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_objectGraph] = a2;
  v11.id receiver = v6;
  v11.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  return objc_msgSendSuper2(&v11, "initWithCollectionViewLayout:", a1);
}

uint64_t sub_1001FCD58()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

id sub_1001FCD84(uint64_t a1)
{
  return sub_1001FC418(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001FCD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001FCD9C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_1001FCDA4(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberHeaderView;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_uberHeaderView];
  if (v4)
  {
    [v4 removeFromSuperview];
    uint64_t v5 = *(void **)&v1[v3];
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(void *)&v1[v3] = a1;
  id v6 = a1;

  uint64_t v7 = *(void **)&v1[v3];
  if (v7)
  {
    id v10 = v7;
    id v8 = [v1 viewIfLoaded];
    if (v8)
    {
      __int128 v9 = v8;
      [v8 addSubview:v10];
    }
  }

uint64_t sub_1001FCE60()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1001FCE84()
{
}

void *sub_1001FCE8C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade31EditorialCardCollectionViewCell_avatarShowcase);
  id v2 = v1;
  return v1;
}

void (*sub_1001FCEC0(void *a1))(void **a1, char a2)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade31EditorialCardCollectionViewCell_avatarShowcase);
  *a1 = v2;
  a1[1] = v1;
  id v3 = v2;
  return sub_1001FCF04;
}

void sub_1001FCF04(void **a1, char a2)
{
  id v2 = *a1;
  if ((a2 & 1) != 0)
  {
    id v3 = v2;
    sub_1001655AC(v2);
  }

  else
  {
    sub_1001655AC(*a1);
  }

id sub_1001FCF58()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC6Arcade31EditorialCardCollectionViewCell_artworkView) frame];
}

uint64_t sub_1001FCF74(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType(v2);
  uint64_t v6 = sub_100003B6C( &qword_1002E9488,  type metadata accessor for EditorialCardCollectionViewCell,  (uint64_t)&unk_1002427D8);
  return AvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(a1, a2, ObjectType, v6);
}

uint64_t sub_1001FCFD4(uint64_t a1, uint64_t a2)
{
  return sub_1001FCFEC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.unapply());
}

uint64_t sub_1001FCFE0(uint64_t a1, uint64_t a2)
{
  return sub_1001FCFEC( a1,  a2,  (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.placeAvatarShowcase());
}

uint64_t sub_1001FCFEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v5 = sub_100003B6C( &qword_1002E9488,  type metadata accessor for EditorialCardCollectionViewCell,  (uint64_t)&unk_1002427D8);
  return a3(ObjectType, v5);
}

uint64_t sub_1001FD044()
{
  return sub_100003B6C( &qword_1002ED218,  type metadata accessor for EditorialCardCollectionViewCell,  (uint64_t)&unk_1002427A0);
}

double sub_1001FD070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double v6 = (PageTraitEnvironment.pageContentSize.getter() + -80.0) / 3.0;
  if (qword_1002DCDA8 != -1) {
    swift_once(&qword_1002DCDA8, sub_1001500E0);
  }
  uint64_t v7 = type metadata accessor for AspectRatio(0LL);
  sub_1000061F4(v7, (uint64_t)qword_1002F0C10);
  AspectRatio.height(fromWidth:)(v6);
  if (qword_1002DCDB0 != -1) {
    swift_once(&qword_1002DCDB0, sub_100150130);
  }
  return v6;
}

id sub_1001FD13C(uint64_t *a1, __n128 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void **)&v4[OBJC_IVAR____TtC6Arcade32SmallStoryCardCollectionViewCell_mediaView];
  uint64_t v8 = TodayCard.media.getter(a2);
  uint64_t v9 = TodayCard.heroMedia.getter();
  sub_1000722A4(v8, v9, 1, (uint64_t)v13);
  sub_1001B6754(v13, a4);
  sub_100035420(v13);
  [v7 setNeedsLayout];
  if (qword_1002DCCF0 != -1) {
    swift_once(&qword_1002DCCF0, sub_1001377DC);
  }
  uint64_t v10 = type metadata accessor for ArticleCardTextView.Config(0LL);
  uint64_t v11 = sub_1000061F4(v10, (uint64_t)qword_1002F0A50);
  sub_100124344(v6, v11, 1);
  return [v4 setNeedsLayout];
}

void sub_1001FD23C()
{
  if (qword_1002DCDA8 != -1) {
    swift_once(&qword_1002DCDA8, sub_1001500E0);
  }
  uint64_t v1 = type metadata accessor for AspectRatio(0LL);
  sub_1000061F4(v1, (uint64_t)qword_1002F0C10);
  [v0 bounds];
  double Width = CGRectGetWidth(v3);
  AspectRatio.height(fromWidth:)(Width);
  [v0 frame];
  CGRectGetWidth(v4);
  sub_10009F250();
}

void sub_1001FD300()
{
}

uint64_t sub_1001FD32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DCBD0 != -1) {
    swift_once(&qword_1002DCBD0, sub_100102E50);
  }
  uint64_t v8 = type metadata accessor for StaticDimension(0LL);
  uint64_t v9 = sub_1000061F4(v8, (uint64_t)qword_1002F0588);
  static Dimensions.defaultRoundingRule.getter(v9);
  double v10 = AnyDimension.value(in:rounded:)(a3, v7, v8, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(void *)&v10;
}

double sub_1001FD420@<D0>(uint64_t a1@<X1>, void *a2@<X4>, uint64_t a3@<X8>)
{
  double v6 = (PageTraitEnvironment.pageContentSize.getter() + -80.0) / 3.0;
  if (qword_1002DCDA8 != -1) {
    swift_once(&qword_1002DCDA8, sub_1001500E0);
  }
  uint64_t v7 = type metadata accessor for AspectRatio(0LL);
  sub_1000061F4(v7, (uint64_t)qword_1002F0C10);
  double v8 = AspectRatio.height(fromWidth:)(v6);
  if (qword_1002DCDB0 != -1) {
    swift_once(&qword_1002DCDB0, sub_100150130);
  }
  double v9 = floor(v8) + *(double *)&qword_1002F0C28;
  [a2 pageMarginInsets];
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v11;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
  *(void *)(a3 + 2swift_weakDestroy(v0 + 4) = v13;
  *(double *)(a3 + 32) = v6;
  *(double *)(a3 + 40) = v9;
  double result = 40.0;
  *(_OWORD *)(a3 + 48) = xmmword_1002346C0;
  *(_BYTE *)(a3 + 6swift_weakDestroy(v0 + 4) = 0;
  *(void *)(a3 + 72) = a1;
  return result;
}

void sub_1001FD52C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 textLabel];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    sub_100005F8C(a1, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    uint64_t v9 = v8;
    NSString v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setText:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);
  }

  id v11 = [v2 detailTextLabel];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    sub_100005F8C(a1, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    if (v15)
    {
      uint64_t v17 = v15;
      id v18 = String._bridgeToObjectiveC()();
      *(void *)&double v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
    }

    else
    {
      id v18 = 0LL;
    }

    objc_msgSend(v12, "setText:", v18, v16);
  }

uint64_t type metadata accessor for DebugActionTableViewCell()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade24DebugActionTableViewCell);
}

unint64_t sub_1001FD7AC()
{
  unint64_t result = qword_1002ED290;
  if (!qword_1002ED290)
  {
    uint64_t v1 = type metadata accessor for PosterLockupCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_1002428F0, v1);
    atomic_store(result, (unint64_t *)&qword_1002ED290);
  }

  return result;
}

double sub_1001FD7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v2 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v61 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  __chkstk_darwin(v2);
  uint64_t v58 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v55 = type metadata accessor for PageGrid(0LL);
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v5 = (uint64_t *)((char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  __chkstk_darwin(v6);
  id v51 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8(&qword_1002EB230);
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  __chkstk_darwin(v8);
  uint64_t v53 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v50 - v11;
  uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  double v16 = (uint64_t *)((char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v19);
  ReadOnlyLens.value.getter(v66, v17);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  uint64_t KeyPath = swift_getKeyPath(&unk_100242940, v22);
  ItemLayoutContext.subscript.getter(v16);
  swift_release(KeyPath);
  uint64_t v25 = swift_getKeyPath(&unk_100242970, v24);
  ReadOnlyLens.subscript.getter(v25, v13);
  __n128 v26 = swift_release(v25);
  (*(void (**)(void *, uint64_t, __n128))(v14 + 8))(v16, v13, v26);
  uint64_t v27 = *(void *)(v65 + 16);
  __n128 v28 = swift_bridgeObjectRelease(v65);
  ItemLayoutContext.state.getter(v28);
  uint64_t v29 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v30 = swift_dynamicCastClassUnconditional(v52, v29, 0LL, 0LL, 0LL);
  objc_super v31 = v51;
  ItemLayoutContext.componentLayoutOptions.getter(v30);
  uint64_t v33 = swift_getKeyPath(&unk_1002429A0, v32);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(v33);
  double v35 = PageGrid.componentMeasuringSize(spanning:)(v34, 1.0);
  (*(void (**)(void *, uint64_t, double))(v54 + 8))(v5, v55, v35);
  id v36 = sub_100147A04();
  sub_10001F010((uint64_t)v66, (uint64_t)v63);
  uint64_t v37 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v38 = type metadata accessor for PosterLockup(0LL);
  swift_dynamicCast(&v64, v63, v37, v38, 7LL);
  uint64_t v40 = v56;
  uint64_t v39 = v57;
  uint64_t v41 = v53;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v12, v57);
  uint64_t v42 = type metadata accessor for NilState(0LL);
  uint64_t v43 = v58;
  StateLens.init(_:)(v41, v42);
  double v44 = sub_10014CE6C(v27, (uint64_t)v36);
  double v46 = v45;
  (*(void (**)(char *, uint64_t, double))(v61 + 8))(v43, v62, v44);
  uint64_t v47 = v64;
  swift_unknownObjectRelease(v36);
  __n128 v48 = swift_release(v47);
  (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v31, v60, v48);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v39);
  _s6Arcade17PillOverlayLayoutVwxx_0(v66);
  return v46;
}

uint64_t static LargeGameCenterPlayerLayout.estimatedMeasurements(fitting:using:in:)(void *a1, uint64_t a2)
{
  return sub_1001FE1B4(a1, a2);
}

uint64_t LargeGameCenterPlayerLayout.placeChildren(relativeTo:in:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v7 = v6;
  uint64_t v57 = a2;
  uint64_t v52 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v13 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v16 = v6 + 17;
  uint64_t v17 = v6[20];
  uint64_t v18 = v6[21];
  sub_100005F8C(v6 + 17, v17);
  v61.origin.CGFloat x = a3;
  v61.origin.CGFloat y = a4;
  v61.size.double width = a5;
  v61.size.double height = a6;
  CGRectGetMinX(v61);
  v62.origin.CGFloat x = a3;
  v62.origin.CGFloat y = a4;
  v62.size.double width = a5;
  v62.size.double height = a6;
  CGRectGetMinY(v62);
  dispatch thunk of LayoutView.frame.setter(v17, v18);
  uint64_t v19 = v6[25];
  uint64_t v20 = v6[26];
  uint64_t v56 = v6 + 22;
  sub_100005F8C(v6 + 22, v19);
  double v21 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v19, *(void *)(*(void *)(v20 + 8) + 8LL), a5, a6);
  double v50 = v22;
  double v51 = v21;
  double v24 = v23;
  double v26 = v25;
  sub_10001F010((uint64_t)(v6 + 22), (uint64_t)v58);
  uint64_t v54 = v60;
  uint64_t v55 = v59;
  uint64_t v53 = sub_100005F8C(v58, v59);
  v63.origin.CGFloat x = a3;
  v63.origin.CGFloat y = a4;
  v63.size.double width = a5;
  v63.size.double height = a6;
  double MinX = CGRectGetMinX(v63);
  uint64_t v28 = v6[15];
  uint64_t v29 = v7[16];
  sub_100005F8C(v7 + 12, v7[15]);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v28, v29);
  double v30 = AnyDimension.value(in:rounded:)(a1, v15, v28, v29);
  objc_super v31 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v32 = v52;
  v31(v15, v52);
  v49[1] = MinX + v30;
  uint64_t v33 = v7[20];
  uint64_t v34 = v7[21];
  sub_100005F8C(v16, v33);
  v64.origin.CGFloat x = dispatch thunk of LayoutView.frame.getter(v33, v34);
  CGRectGetMaxY(v64);
  uint64_t v35 = v7[5];
  uint64_t v36 = v7[6];
  sub_100005F8C(v7 + 2, v35);
  AnyDimension.topMargin(from:in:)(a1, v35, v36, v51, v24, v50, v26);
  v65.origin.CGFloat x = a3;
  v65.origin.CGFloat y = a4;
  v65.size.double width = a5;
  v65.size.double height = a6;
  CGRectGetWidth(v65);
  uint64_t v37 = v7[15];
  uint64_t v38 = v7[16];
  sub_100005F8C(v7 + 12, v37);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v37, v38);
  AnyDimension.value(in:rounded:)(a1, v15, v37, v38);
  v31(v15, v32);
  dispatch thunk of LayoutView.frame.setter(v55, *(void *)(v54 + 8));
  _s6Arcade17PillOverlayLayoutVwxx_0(v58);
  v66.origin.CGFloat x = a3;
  v66.origin.CGFloat y = a4;
  v66.size.double width = a5;
  v66.size.double height = a6;
  double v39 = CGRectGetMinX(v66);
  v67.origin.CGFloat x = a3;
  v67.origin.CGFloat y = a4;
  v67.size.double width = a5;
  v67.size.double height = a6;
  double MinY = CGRectGetMinY(v67);
  v68.origin.CGFloat x = a3;
  v68.origin.CGFloat y = a4;
  v68.size.double width = a5;
  v68.size.double height = a6;
  double Width = CGRectGetWidth(v68);
  uint64_t v42 = v7[25];
  uint64_t v43 = v7[26];
  sub_100005F8C(v56, v42);
  v69.origin.CGFloat x = dispatch thunk of LayoutView.frame.getter(v42, *(void *)(v43 + 8));
  double MaxY = CGRectGetMaxY(v69);
  uint64_t v45 = v7[10];
  uint64_t v46 = v7[11];
  sub_100005F8C(v7 + 7, v45);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v45, v46);
  double v47 = AnyDimension.value(in:rounded:)(a1, v15, v45, v46);
  v31(v15, v32);
  return LayoutRect.init(representing:)(v39, MinY, Width, MaxY + v47);
}

_OWORD *LargeGameCenterPlayerLayout.metrics.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1000BE338(v1, a1);
}

uint64_t LargeGameCenterPlayerLayout.playerName.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 176, a1);
}

uint64_t LargeGameCenterPlayerLayout.measurements(fitting:in:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = v1 + 2;
  uint64_t v9 = v1[5];
  uint64_t v10 = v2[6];
  sub_100005F8C(v8, v9);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v9, v10);
  AnyDimension.value(in:rounded:)(a1, v7, v9, v10);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  uint64_t v12 = v2[10];
  uint64_t v13 = v2[11];
  sub_100005F8C(v2 + 7, v12);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12, v13);
  AnyDimension.value(in:rounded:)(a1, v7, v12, v13);
  return ((uint64_t (*)(char *, uint64_t))v11)(v7, v4);
}

uint64_t sub_1001FE19C(uint64_t a1)
{
  return LargeGameCenterPlayerLayout.measurements(fitting:in:)(a1);
}

uint64_t sub_1001FE1B4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  sub_100005F8C(a1 + 2, v8);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v8, v9);
  AnyDimension.value(in:rounded:)(a2, v7, v8, v9);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  uint64_t v11 = a1[10];
  uint64_t v12 = a1[11];
  sub_100005F8C(a1 + 7, v11);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v11, v12);
  AnyDimension.value(in:rounded:)(a2, v7, v11, v12);
  return ((uint64_t (*)(char *, uint64_t))v10)(v7, v4);
}

unint64_t sub_1001FE308()
{
  unint64_t result = qword_1002ED298;
  if (!qword_1002ED298)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for LargeGameCenterPlayerLayout,  &type metadata for LargeGameCenterPlayerLayout);
    atomic_store(result, (unint64_t *)&qword_1002ED298);
  }

  return result;
}

uint64_t destroy for LargeGameCenterPlayerLayout(void *a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 22);
}

_OWORD *initializeWithCopy for LargeGameCenterPlayerLayout(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  __int128 v4 = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)((char *)a1 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  __int128 v5 = a2[5];
  a1[5] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 56, (uint64_t)a2 + 56);
  __int128 v6 = *(_OWORD *)((char *)a2 + 120);
  *(_OWORD *)((char *)a1 + 120) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 6), (uint64_t)(a2 + 6));
  __int128 v7 = a2[10];
  a1[10] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 136, (uint64_t)a2 + 136);
  __int128 v8 = *(_OWORD *)((char *)a2 + 200);
  *(_OWORD *)((char *)a1 + 200) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11));
  return a1;
}

void *assignWithCopy for LargeGameCenterPlayerLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1000264E4(a1 + 2, a2 + 2);
  sub_1000264E4(a1 + 7, a2 + 7);
  sub_1000264E4(a1 + 12, a2 + 12);
  sub_1000264E4(a1 + 17, a2 + 17);
  sub_1000264E4(a1 + 22, a2 + 22);
  return a1;
}

__n128 initializeWithTake for LargeGameCenterPlayerLayout(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 6swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __int128 v6 = *(_OWORD *)(a2 + 96);
  __int128 v7 = *(_OWORD *)(a2 + 112);
  __int128 v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 14swift_weakDestroy(v0 + 4) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  __int128 v10 = *(_OWORD *)(a2 + 176);
  __int128 v11 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for LargeGameCenterPlayerLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 16));
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 96));
  __int128 v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 136));
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 176));
  __int128 v6 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v6;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for LargeGameCenterPlayerLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 216)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LargeGameCenterPlayerLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 18swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 10swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for LargeGameCenterPlayerLayout()
{
  return &type metadata for LargeGameCenterPlayerLayout;
}

ValueMetadata *type metadata accessor for LargeGameCenterPlayerLayout.Metrics()
{
  return &type metadata for LargeGameCenterPlayerLayout.Metrics;
}

uint64_t sub_1001FE690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AspectRatio(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  __int128 v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v6 = sub_1001FEE18();
  unint64_t v7 = v6;
  if (*(void *)(v6 + 16))
  {
    uint64_t v8 = *(void *)(v6 + 32);
    int v9 = *(char *)(v6 + 48);
    j__swift_retain(v8);
    swift_bridgeObjectRelease(v7);
    swift_retain(v8);
    if (v9 < 0)
    {
      double v16 = Artwork.size.getter(v10);
      AspectRatio.init(_:_:)(v17, v16);
    }

    else
    {
      uint64_t v11 = Video.preview.getter(v10);
      double v12 = Artwork.size.getter(v11);
      AspectRatio.init(_:_:)(v13, v12);
      swift_release(v11);
    }

    j__swift_release(v8);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
    j__swift_release(v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(a1, 0LL, 1LL, v2);
  }

  else
  {
    __n128 v14 = swift_bridgeObjectRelease(v6);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56))(a1, 1LL, 1LL, v2, v14);
  }

double sub_1001FE7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = v6;
  uint64_t v11 = AppShowcase.lockup.getter();
  sub_1000BDF00(v11);
  swift_release(v11);
  uint64_t v12 = type metadata accessor for ArtworkLoader(0LL);
  uint64_t v13 = inject(_:from:)(v12, a3);
  unint64_t v14 = sub_1001FEE18();
  uint64_t v15 = *(void *)&v6[OBJC_IVAR____TtC6Arcade29AppShowcaseCollectionViewCell_mediaCollectionView];
  sub_10020F6B8(v14, v13, a6, 2, a3);
  swift_bridgeObjectRelease(v14);
  uint64_t v16 = swift_allocObject(&unk_10028F668, 24LL, 7LL);
  swift_unknownObjectWeakInit(v16 + 16, v7);
  uint64_t v17 = (void *)swift_allocObject(&unk_10028F690, 40LL, 7LL);
  v17[2] = a1;
  void v17[3] = v13;
  v17[4] = v16;
  uint64_t v18 = (uint64_t *)(v15 + OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_artworkSelectionHandler);
  uint64_t v19 = *(void *)(v15 + OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_artworkSelectionHandler);
  uint64_t v20 = *(void *)(v15 + OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_artworkSelectionHandler + 8);
  *uint64_t v18 = (uint64_t)sub_1001FF0D8;
  v18[1] = (uint64_t)v17;
  swift_retain(a1);
  swift_retain(v13);
  swift_retain(v16);
  swift_retain(v17);
  sub_10000D3D8(v19, v20);
  uint64_t v21 = *(void *)(v15 + OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_activeDataSource);
  if (v21)
  {
    uint64_t v22 = *v18;
    uint64_t v23 = v18[1];
    double v24 = (uint64_t *)(v21
                    + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_artworkSelectionHandler);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    *double v24 = *v18;
    v24[1] = v23;
    sub_100017A40(v22, v23);
    sub_10000D3D8(v25, v26);
  }

  swift_release(v16);
  objc_msgSend(v7, "setNeedsLayout", swift_release(v17).n128_f64[0]);
  *(void *)&double result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_1001FE9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v7);
  int v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char **)((char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v13 = a4 + 16;
  unint64_t v14 = sub_1001FF998();
  uint64_t v15 = sub_10015C7CC(a1, (uint64_t)v14);
  if ((v16 & 1) != 0) {
    uint64_t v17 = 0LL;
  }
  else {
    uint64_t v17 = v15;
  }
  unint64_t v18 = sub_1000E67C0((uint64_t)_swiftEmptyArrayStorage);
  objc_allocWithZone((Class)type metadata accessor for ScreenshotsGalleryViewController());
  swift_retain(a3);
  uint64_t v19 = sub_1000B7540((uint64_t)v14, v18, a3, v17);
  swift_beginAccess(v13, v32, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v13);
  if (Strong)
  {
    uint64_t v21 = (void *)Strong;
    sub_100082D00((uint64_t)v29);

    uint64_t v22 = v30;
    if (v30)
    {
      uint64_t v23 = v31;
      sub_100005F8C(v29, v30);
      *uint64_t v12 = v19;
      swift_storeEnumTagMultiPayload(v12, v10, 11LL);
      uint64_t v24 = qword_1002DCE78;
      uint64_t v25 = v19;
      if (v24 != -1) {
        swift_once(&qword_1002DCE78, sub_1001665C8);
      }
      uint64_t v26 = type metadata accessor for FlowPresentationHints(0LL);
      uint64_t v27 = sub_1000061F4(v26, (uint64_t)qword_1002F0F70);
      uint64_t v28 = type metadata accessor for ReferrerData(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56LL))(v9, 1LL, 1LL, v28);
      (*(void (**)(char **, uint64_t, void, void, char *, uint64_t, uint64_t))(v23 + 16))( v12,  v27,  0LL,  0LL,  v9,  v22,  v23);

      sub_100006060((uint64_t)v9, &qword_1002E1FB0);
      sub_10000609C((uint64_t)v12);
      _s6Arcade17PillOverlayLayoutVwxx_0(v29);
    }

    else
    {
      __break(1u);
    }
  }

  else
  {
  }

double sub_1001FEBEC( double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for AspectRatio(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001FE690((uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1LL, v14) == 1)
  {
    sub_100006060((uint64_t)v13, (uint64_t *)&unk_1002E2D70);
    return 0.0;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    double v18 = sub_1000C3728((uint64_t)v17, a8, 2, a1, a2);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

  return v18;
}

double sub_1001FED30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1001FE7F8(*a1, a2, a3, a4, a5, a6);
}

void sub_1001FED3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ArtworkView(0LL);
  uint64_t v7 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  id v8 = v5;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v8, a3, v6, v7);
}

void sub_1001FEDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1001FEDEC()
{
  return sub_100003B6C( &qword_1002ED2A0,  (uint64_t (*)(uint64_t))&type metadata accessor for AppShowcase,  (uint64_t)&protocol conformance descriptor for AppShowcase);
}

unint64_t sub_1001FEE18()
{
  uint64_t v0 = AppShowcase.video.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    swift_retain(v0);
    uint64_t v2 = sub_10001A24C(0LL, 1LL, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v4 = *((void *)v2 + 2);
    unint64_t v3 = *((void *)v2 + 3);
    if (v4 >= v3 >> 1) {
      uint64_t v2 = sub_10001A24C((char *)(v3 > 1), v4 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v4 + 1;
    __int128 v5 = &v2[24 * v4];
    *((void *)v5 + swift_weakDestroy(v0 + 4) = v1;
    *((void *)v5 + 5) = 0LL;
    v5[48] = 1;
    __n128 v6 = swift_release(v1);
    uint64_t v7 = AppShowcase.screenshots.getter(v6);
    if (!v7) {
      return (unint64_t)v2;
    }
  }

  else
  {
    uint64_t v2 = (char *)_swiftEmptyArrayStorage;
    uint64_t v7 = ((uint64_t (*)(void))AppShowcase.screenshots.getter)();
    if (!v7) {
      return (unint64_t)v2;
    }
  }

  uint64_t v8 = v7;
  uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8LL;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 >= 0) {
      v7 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (!_CocoaArrayWrapper.endIndex.getter(v7)) {
      goto LABEL_37;
    }
  }

  else if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8LL) + 0x10))
  {
LABEL_37:
    swift_bridgeObjectRelease(v8);
    return (unint64_t)v2;
  }

  if ((v8 & 0xC000000000000001LL) != 0)
  {
    uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v8);
  }

  else
  {
    if (!*(void *)(v9 + 16))
    {
      __break(1u);
      goto LABEL_31;
    }

    uint64_t v9 = *(void *)(v8 + 32);
    swift_retain(v9);
  }

  __n128 v10 = swift_bridgeObjectRelease(v8);
  unint64_t result = Screenshots.artwork.getter(v10);
  uint64_t v8 = result;
  if (!(result >> 62))
  {
    uint64_t v12 = *(void *)((result & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v12) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t v18 = v9;
LABEL_36:
    swift_release(v18);
    goto LABEL_37;
  }

uint64_t sub_1001FF080()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001FF0A4()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1001FF0D8(uint64_t a1)
{
}

void sub_1001FF0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v91 = a2;
  uint64_t v90 = type metadata accessor for AspectRatio(0LL);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v88 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v87 = (char *)&v85 - v6;
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v86 = (char *)&v85 - v9;
  uint64_t v10 = Shelf.items.getter(v8);
  unint64_t v11 = *(void *)(v10 + 16);
  uint64_t v94 = v10 + 32;
  uint64_t v95 = v10;
  swift_bridgeObjectRetain(v10);
  unint64_t v12 = 0LL;
  __int128 v85 = xmmword_100233570;
  uint64_t v93 = a3;
  unint64_t v92 = v11;
  while (v12 == v11)
  {
    uint64_t v106 = 0LL;
    unint64_t v12 = v11;
    __int128 v104 = 0u;
    __int128 v105 = 0u;
LABEL_8:
    sub_1001FFC7C((uint64_t)&v104, (uint64_t)&v102);
    if (!v103)
    {
      swift_bridgeObjectRelease_n(v95, 2LL);
      return;
    }

    sub_100009D90(&v102, (uint64_t)v101);
    sub_10001F010((uint64_t)v101, (uint64_t)v99);
    uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002EA170);
    uint64_t v14 = type metadata accessor for AppShowcase(0LL);
    if ((swift_dynamicCast(&v100, v99, v13, v14, 6LL) & 1) != 0)
    {
      uint64_t v15 = v100;
      _s6Arcade17PillOverlayLayoutVwxx_0(v101);
      if (v15)
      {
        __n128 v16 = swift_retain(v15);
        uint64_t v17 = AppShowcase.lockup.getter(v16);
        uint64_t v18 = Lockup.icon.getter(v17);
        swift_release(v17);
        if (v18)
        {
          if (qword_1002DCA30 != -1) {
            swift_once(&qword_1002DCA30, sub_1000B9E54);
          }
          uint64_t v19 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
          sub_1000061F4(v19, (uint64_t)qword_1002EFF78);
          double v20 = SmallLockupLayout.Metrics.artworkSize.getter();
          uint64_t v22 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v20, v21);
          swift_release(v15);
          swift_release(v18);
          uint64_t v23 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
          uint64_t v24 = swift_allocObject(v23, 40LL, 7LL);
          *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = v85;
          *(void *)(v24 + 32) = v22;
          *(void *)&__int128 v104 = v24;
          specialized Array._endMutation()(v24);
          v25._rawValue = (void *)v104;
          swift_retain(v22);
          ArtworkLoader.prefetchArtwork(using:)(v25);
          swift_release(v22);
          swift_bridgeObjectRelease(v25._rawValue);
        }

        else
        {
          swift_release(v15);
        }

        unint64_t v97 = v12;
        unint64_t v26 = sub_1001FEE18();
        unint64_t v27 = v26;
        if (*(void *)(v26 + 16))
        {
          uint64_t v28 = *(void *)(v26 + 32);
          int v29 = *(char *)(v26 + 48);
          j__swift_retain(v28);
          swift_bridgeObjectRelease(v27);
          swift_retain(v28);
          uint64_t v31 = v15;
          if (v29 < 0)
          {
            double v40 = Artwork.size.getter(v30);
            uint64_t v37 = v88;
            AspectRatio.init(_:_:)(v41, v40);
          }

          else
          {
            uint64_t v32 = Video.preview.getter(v30);
            double v33 = Artwork.size.getter(v32);
            uint64_t v34 = v88;
            AspectRatio.init(_:_:)(v35, v33);
            uint64_t v36 = v32;
            uint64_t v37 = v34;
            swift_release(v36);
          }

          j__swift_release(v28);
          uint64_t v42 = v89;
          uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
          double v44 = v87;
          uint64_t v45 = v90;
          v43(v87, v37, v90);
          j__swift_release(v28);
          uint64_t v46 = v86;
          v43(v86, v44, v45);
          swift_getObjectType(v91);
          double v47 = (PageTraitEnvironment.pageContentSize.getter() + -80.0) / 3.0;
          double v48 = AspectRatio.height(fromWidth:)(v47);
          double v38 = CGSize.scaled(_:)(2.0, v47, floor(v48));
          double v39 = v49;
          (*(void (**)(char *, uint64_t))(v42 + 8))(v46, v45);
          uint64_t v15 = v31;
        }

        else
        {
          swift_bridgeObjectRelease(v26);
          double v38 = 0.0;
          double v39 = 0.0;
        }

        *(void *)&__int128 v104 = _swiftEmptyArrayStorage;
        uint64_t v96 = v15;
        unint64_t v50 = sub_1001FEE18();
        unint64_t v51 = v50;
        uint64_t v52 = *(void *)(v50 + 16);
        if (v52)
        {
          uint64_t v53 = (char *)(v50 + 48);
          do
          {
            uint64_t v60 = *((void *)v53 - 2);
            int v61 = *v53;
            swift_retain(v60);
            if (v61 < 0)
            {
              swift_retain(v60);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
              unint64_t v65 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
              unint64_t v64 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
              if (v65 >= v64 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1LL);
              }
              unint64_t v57 = v65;
              uint64_t v58 = v60;
            }

            else
            {
              uint64_t v54 = Video.preview.getter(v62);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
              unint64_t v56 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
              unint64_t v55 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
              if (v56 >= v55 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1LL);
              }
              unint64_t v57 = v56;
              uint64_t v58 = v54;
            }

            uint64_t v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v58);
            v53 += 24;
            specialized Array._endMutation()(v59);
            j__swift_release(v60);
            --v52;
          }

          while (v52);
          swift_bridgeObjectRelease(v51);
          uint64_t v66 = v104;
        }

        else
        {
          swift_bridgeObjectRelease(v50);
          uint64_t v66 = (uint64_t)_swiftEmptyArrayStorage;
        }

        uint64_t v67 = type metadata accessor for ScreenshotFetcher();
        uint64_t v68 = swift_allocObject(v67, 40LL, 7LL);
        *(void *)(v68 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1000E67C0((uint64_t)_swiftEmptyArrayStorage);
        *(void *)(v68 + 32) = 0LL;
        swift_unknownObjectWeakInit(v68 + 24, 0LL);
        *(void *)(v68 + 32) = 0LL;
        swift_unknownObjectWeakAssign(v69, 0LL);
        if ((unint64_t)v66 >> 62)
        {
          if (v66 < 0) {
            uint64_t v84 = v66;
          }
          else {
            uint64_t v84 = v66 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain(v66);
          uint64_t v70 = _CocoaArrayWrapper.endIndex.getter(v84);
          if (!v70) {
            goto LABEL_48;
          }
        }

        else
        {
          uint64_t v70 = *(void *)((v66 & 0xFFFFFFFFFFFFF8LL) + 0x10);
          swift_bridgeObjectRetain(v66);
          if (!v70) {
            goto LABEL_48;
          }
        }

        if (v70 < 1) {
          goto LABEL_52;
        }
        uint64_t v98 = v66;
        if ((v66 & 0xC000000000000001LL) != 0)
        {
          for (uint64_t i = 0LL; i != v70; ++i)
          {
            uint64_t v72 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v66);
            uint64_t v73 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v38, v39);
            uint64_t v106 = 0LL;
            __int128 v104 = 0u;
            __int128 v105 = 0u;
            uint64_t v74 = swift_allocObject(&unk_10028F6B8, 24LL, 7LL);
            swift_weakInit(v74 + 16, v68);
            unint64_t v75 = (void *)swift_allocObject(&unk_10028F6E0, 40LL, 7LL);
            v75[2] = v74;
            v75[3] = v72;
            void v75[4] = i;
            swift_retain(v74);
            swift_unknownObjectRetain(v72);
            ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v73,  0LL,  1LL,  &v104,  sub_1000B886C,  v75,  v76);
            swift_unknownObjectRelease(v72);
            swift_release(v73);
            uint64_t v77 = v75;
            uint64_t v66 = v98;
            swift_release(v77);
            sub_100006060((uint64_t)&v104, (uint64_t *)&unk_1002DE600);
            swift_release(v74);
          }
        }

        else
        {
          for (uint64_t j = 0LL; j != v70; ++j)
          {
            uint64_t v79 = *(void *)(v66 + 8 * j + 32);
            swift_retain(v79);
            uint64_t v80 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v38, v39);
            uint64_t v106 = 0LL;
            __int128 v104 = 0u;
            __int128 v105 = 0u;
            uint64_t v81 = swift_allocObject(&unk_10028F6B8, 24LL, 7LL);
            swift_weakInit(v81 + 16, v68);
            unint64_t v82 = (void *)swift_allocObject(&unk_10028F708, 40LL, 7LL);
            void v82[2] = v81;
            v82[3] = v79;
            v82[4] = j;
            swift_retain(v79);
            __n128 v83 = swift_retain(v81);
            ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v80,  0LL,  1LL,  &v104,  sub_1000B88A8,  v82,  v83);
            swift_release(v79);
            swift_release(v80);
            swift_release(v82);
            sub_100006060((uint64_t)&v104, (uint64_t *)&unk_1002DE600);
            swift_release(v81);
            uint64_t v66 = v98;
          }
        }

void *sub_1001FF998()
{
  unint64_t v0 = sub_1001FEE18();
  unint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    unint64_t v3 = (char *)(v0 + 48);
    do
    {
      if (*v3 < 0)
      {
        uint64_t v5 = *((void *)v3 - 2);
        uint64_t v6 = swift_retain_n(v5, 2LL);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
        unint64_t v8 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v7 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v8 >= v7 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1LL);
        }
        uint64_t v4 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v5);
        specialized Array._endMutation()(v4);
        j__swift_release(v5);
      }

      v3 += 24;
      --v2;
    }

    while (v2);
    swift_bridgeObjectRelease(v1);
    return _swiftEmptyArrayStorage;
  }

  else
  {
    swift_bridgeObjectRelease(v0);
    return _swiftEmptyArrayStorage;
  }

void sub_1001FFA98(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10001F010(a1, (uint64_t)v20);
  uint64_t v3 = sub_1000031E8(&qword_1002E9470);
  uint64_t v4 = type metadata accessor for AppShowcase(0LL);
  if (swift_dynamicCast(&v19, v20, v3, v4, 6LL))
  {
    uint64_t v6 = v19;
    uint64_t v7 = AppShowcase.lockup.getter(v5);
    uint64_t v8 = Lockup.icon.getter(v7);
    swift_release(v7);
    if (!v8)
    {
LABEL_7:
      swift_release(v6);
      return;
    }

    __n128 v9 = swift_retain(v6);
    uint64_t v10 = AppShowcase.lockup.getter(v9);
    uint64_t v11 = Lockup.icon.getter(v10);
    swift_release(v10);
    if (v11)
    {
      if (qword_1002DCA30 != -1) {
        swift_once(&qword_1002DCA30, sub_1000B9E54);
      }
      uint64_t v12 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
      sub_1000061F4(v12, (uint64_t)qword_1002EFF78);
      double v13 = SmallLockupLayout.Metrics.artworkSize.getter();
      uint64_t v15 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v13, v14);
      swift_release(v6);
      swift_release(v11);
      id v16 = objc_retain(*(id *)(*(void *)(v2 + OBJC_IVAR____TtC6Arcade29AppShowcaseCollectionViewCell_lockupView)
                              + OBJC_IVAR____TtC6Arcade15SmallLockupView_artworkView));
      sub_1000FB124();
      uint64_t v17 = type metadata accessor for ArtworkView(0LL);
      uint64_t v18 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v15, 2LL, 1LL, v16, v17, v18);
      swift_release(v8);
      swift_release(v15);

      goto LABEL_7;
    }

    swift_release(v8);
    swift_release_n(v6, 2LL);
  }

uint64_t sub_1001FFC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002E77A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FFCC4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t type metadata accessor for BaseShelfComponentTypeMappingProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade37BaseShelfComponentTypeMappingProvider);
}

uint64_t sub_1001FFD10()
{
  return sub_1001FFD34();
}

uint64_t sub_1001FFD34()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v0);
  double v48 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = type metadata accessor for OSLogger(0LL);
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  __chkstk_darwin(v2);
  double v49 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  double v14 = (char *)&v46 - v13;
  ShelfLayoutContext.shelf.getter(v15);
  uint64_t KeyPath = swift_getKeyPath(&unk_100242B78, v16);
  ReadOnlyLens.subscript.getter(KeyPath, v8);
  __n128 v18 = swift_release(KeyPath);
  uint64_t v19 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
  v19(v14, v8, v18);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v20 == enum case for Shelf.ContentType.smallLockup(_:))
  {
    uint64_t v21 = type metadata accessor for SmallLockupCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for SmallLockupCollectionViewCell;
    sub_100003B6C(&qword_1002ED3C8, type metadata accessor for SmallLockupCollectionViewCell, (uint64_t)&unk_10023A1A8);
    sub_100003B6C(&qword_1002EB238, type metadata accessor for SmallLockupCollectionViewCell, (uint64_t)&unk_100240D20);
    uint64_t v23 = &qword_1002E52E8;
    uint64_t v24 = &unk_10023A1D8;
LABEL_44:
    sub_100003B6C(v23, v22, (uint64_t)v24);
    return v21;
  }

  if (v20 == enum case for Shelf.ContentType.purchasesLockup(_:))
  {
    uint64_t v21 = type metadata accessor for PurchasesLockupCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for PurchasesLockupCollectionViewCell;
    sub_100003B6C( &qword_1002ED410,  type metadata accessor for PurchasesLockupCollectionViewCell,  (uint64_t)&unk_10023A3E8);
    sub_100003B6C( (unint64_t *)&qword_1002E6E08,  type metadata accessor for PurchasesLockupCollectionViewCell,  (uint64_t)&unk_10023D0B8);
    uint64_t v23 = &qword_1002E52D8;
    uint64_t v24 = &unk_10023A418;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.mediumLockup(_:))
  {
    uint64_t v21 = type metadata accessor for MediumLockupCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for MediumLockupCollectionViewCell;
    sub_100003B6C(&qword_1002ED4B0, type metadata accessor for MediumLockupCollectionViewCell, (uint64_t)&unk_10023AB30);
    sub_100003B6C( (unint64_t *)&qword_1002E7378,  type metadata accessor for MediumLockupCollectionViewCell,  (uint64_t)&unk_10023DAE8);
    uint64_t v23 = &qword_1002E5288;
    uint64_t v24 = &unk_10023AB60;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.largeLockup(_:))
  {
    uint64_t v21 = type metadata accessor for LargeLockupCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for LargeLockupCollectionViewCell;
    sub_100003B6C(&qword_1002ED4C0, type metadata accessor for LargeLockupCollectionViewCell, (uint64_t)&unk_10023AC90);
    sub_100003B6C( (unint64_t *)&qword_1002E83D0,  type metadata accessor for LargeLockupCollectionViewCell,  (uint64_t)&unk_10023E738);
    uint64_t v23 = &qword_1002E5278;
    uint64_t v24 = &unk_10023ACC0;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.productTopLockup(_:))
  {
    uint64_t v21 = type metadata accessor for ProductLockupCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ProductLockupCollectionViewCell;
    sub_100003B6C(&qword_1002ED418, type metadata accessor for ProductLockupCollectionViewCell, (uint64_t)&unk_10023A570);
    sub_100003B6C(&qword_1002E53E0, type metadata accessor for ProductLockupCollectionViewCell, (uint64_t)&unk_10023B9F8);
    uint64_t v23 = (unint64_t *)&unk_1002ED420;
    uint64_t v24 = &unk_1002391A8;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.action(_:))
  {
    uint64_t v21 = type metadata accessor for ActionCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ActionCollectionViewCell;
    sub_100003B6C( (unint64_t *)&unk_1002ED590,  type metadata accessor for ActionCollectionViewCell,  (uint64_t)&unk_10023B660);
    sub_100003B6C( (unint64_t *)&qword_1002EC778,  type metadata accessor for ActionCollectionViewCell,  (uint64_t)&unk_100241C78);
    uint64_t v23 = &qword_1002E5238;
    uint64_t v24 = &unk_100241110;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.paragraph(_:))
  {
    uint64_t v21 = type metadata accessor for ParagraphCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ParagraphCollectionViewCell;
    sub_100003B6C(&qword_1002ED498, type metadata accessor for ParagraphCollectionViewCell, (uint64_t)&unk_10023AAC8);
    sub_100003B6C(&qword_1002EB240, type metadata accessor for ParagraphCollectionViewCell, (uint64_t)&unk_100240D70);
    uint64_t v23 = &qword_1002E5290;
    uint64_t v24 = &unk_100241F48;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.annotation(_:))
  {
    uint64_t v21 = type metadata accessor for AnnotationCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for AnnotationCollectionViewCell;
    sub_100003B6C(&qword_1002ED588, type metadata accessor for AnnotationCollectionViewCell, (uint64_t)&unk_10023B5B0);
    sub_100003B6C(&qword_1002E4300, type metadata accessor for AnnotationCollectionViewCell, (uint64_t)&unk_1002390E8);
    uint64_t v23 = &qword_1002E5240;
    uint64_t v24 = &unk_10023B5E0;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.annotationGroup(_:))
  {
    uint64_t v21 = type metadata accessor for AnnotationGroupCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for AnnotationGroupCollectionViewCell;
    sub_100003B6C( &qword_1002ED578,  type metadata accessor for AnnotationGroupCollectionViewCell,  (uint64_t)&unk_10023B548);
    sub_100003B6C( (unint64_t *)&unk_1002EBA28,  type metadata accessor for AnnotationGroupCollectionViewCell,  (uint64_t)&unk_1002415C4);
    uint64_t v23 = (unint64_t *)&unk_1002ED580;
    uint64_t v24 = &unk_100241610;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.editorialCard(_:))
  {
    uint64_t v21 = type metadata accessor for EditorialCardCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for EditorialCardCollectionViewCell;
    sub_100003B6C(&qword_1002ED528, type metadata accessor for EditorialCardCollectionViewCell, (uint64_t)&unk_10023B210);
    sub_100003B6C( (unint64_t *)&qword_1002EB220,  type metadata accessor for EditorialCardCollectionViewCell,  (uint64_t)&unk_100240C10);
    uint64_t v23 = &qword_1002E5258;
    uint64_t v24 = &unk_10023B240;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.videoCard(_:))
  {
    uint64_t v21 = type metadata accessor for VideoCardCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for VideoCardCollectionViewCell;
    sub_100003B6C(&qword_1002ED390, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_100239E38);
    sub_100003B6C( (unint64_t *)&qword_1002E83C8,  type metadata accessor for VideoCardCollectionViewCell,  (uint64_t)&unk_10023E628);
    uint64_t v23 = (unint64_t *)&unk_1002E5300;
    uint64_t v24 = &unk_100239E68;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.brick(_:))
  {
    uint64_t v21 = type metadata accessor for BrickCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for BrickCollectionViewCell;
    sub_100003B6C(&qword_1002ED538, type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_10023B370);
    sub_100003B6C(&qword_1002E63A8, type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_10023CE44);
    uint64_t v23 = &qword_1002E5248;
    uint64_t v24 = &unk_10023B3A0;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.categoryBrick(_:))
  {
    uint64_t v21 = type metadata accessor for ChartOrCategoryBrickCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ChartOrCategoryBrickCollectionViewCell;
    sub_100003B6C( &qword_1002ED530,  type metadata accessor for ChartOrCategoryBrickCollectionViewCell,  (uint64_t)&unk_10023B2C0);
    sub_100003B6C( &qword_1002E14B8,  type metadata accessor for ChartOrCategoryBrickCollectionViewCell,  (uint64_t)&unk_1002369F0);
    uint64_t v23 = &qword_1002E5250;
    uint64_t v24 = &unk_10023B2F0;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.framedArtwork(_:))
  {
    uint64_t v21 = type metadata accessor for FramedArtworkCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for FramedArtworkCollectionViewCell;
    sub_100003B6C(&qword_1002ED510, type metadata accessor for FramedArtworkCollectionViewCell, (uint64_t)&unk_10023B0B0);
    sub_100003B6C( (unint64_t *)&qword_1002E3B88,  type metadata accessor for FramedArtworkCollectionViewCell,  (uint64_t)&unk_100238A08);
    uint64_t v23 = &qword_1002E5260;
    uint64_t v24 = &unk_10023B0E0;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.productMedia(_:))
  {
    uint64_t v21 = type metadata accessor for ProductMediaCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ProductMediaCollectionViewCell;
    sub_100003B6C(&qword_1002ED438, type metadata accessor for ProductMediaCollectionViewCell, (uint64_t)&unk_10023A4F8);
    sub_100003B6C(qword_1002E3C58, type metadata accessor for ProductMediaCollectionViewCell, (uint64_t)&unk_100238C20);
    uint64_t v23 = &qword_1002E52D0;
    uint64_t v24 = &unk_10023A528;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.productMediaItem(_:))
  {
    uint64_t v21 = type metadata accessor for ProductMediaItemCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ProductMediaItemCollectionViewCell;
    sub_100003B6C( &qword_1002ED458,  type metadata accessor for ProductMediaItemCollectionViewCell,  (uint64_t)&unk_10023A490);
    sub_100003B6C( &qword_1002E7E10,  type metadata accessor for ProductMediaItemCollectionViewCell,  (uint64_t)&unk_10023E338);
    uint64_t v23 = (unint64_t *)&unk_1002ED460;
    uint64_t v24 = &unk_100236E20;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.appShowcase(_:))
  {
    uint64_t v21 = type metadata accessor for AppShowcaseCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for AppShowcaseCollectionViewCell;
    sub_100003B6C(&qword_1002ED568, type metadata accessor for AppShowcaseCollectionViewCell, (uint64_t)&unk_10023B4D0);
    sub_100003B6C( (unint64_t *)&qword_1002E6160,  type metadata accessor for AppShowcaseCollectionViewCell,  (uint64_t)&unk_10023CAE8);
    uint64_t v23 = (unint64_t *)&unk_1002ED570;
    uint64_t v24 = &unk_10023B500;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.appTrailerLockup(_:))
  {
    uint64_t v21 = type metadata accessor for AppTrailerLockupCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for AppTrailerLockupCollectionViewCell;
    sub_100003B6C( &qword_1002ED550,  type metadata accessor for AppTrailerLockupCollectionViewCell,  (uint64_t)&unk_10023B778);
    sub_100003B6C( &qword_1002ED558,  type metadata accessor for AppTrailerLockupCollectionViewCell,  (uint64_t)&unk_100236B60);
    uint64_t v23 = (unint64_t *)&unk_1002ED560;
LABEL_37:
    uint64_t v24 = &unk_10023B7A8;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.productPageLink(_:))
  {
    uint64_t v21 = type metadata accessor for ProductPageLinkCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ProductPageLinkCollectionViewCell;
    sub_100003B6C( &qword_1002ED440,  type metadata accessor for ProductPageLinkCollectionViewCell,  (uint64_t)&unk_10023A5D8);
    sub_100003B6C( (unint64_t *)&qword_1002EB058,  type metadata accessor for ProductPageLinkCollectionViewCell,  (uint64_t)&unk_100240850);
    uint64_t v23 = &qword_1002E52C8;
    uint64_t v24 = &unk_10023A608;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.framedVideo(_:))
  {
    uint64_t v21 = type metadata accessor for FramedVideoCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for FramedVideoCollectionViewCell;
    sub_100003B6C(&qword_1002ED508, type metadata accessor for FramedVideoCollectionViewCell, (uint64_t)&unk_10023B000);
    sub_100003B6C( (unint64_t *)&qword_1002E0730,  type metadata accessor for FramedVideoCollectionViewCell,  (uint64_t)&unk_100236290);
    uint64_t v23 = &qword_1002E5268;
    uint64_t v24 = &unk_10023B030;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.productDescription(_:))
  {
    uint64_t v21 = type metadata accessor for ProductDescriptionCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ProductDescriptionCollectionViewCell;
    sub_100003B6C( &qword_1002ED448,  type metadata accessor for ProductDescriptionCollectionViewCell,  (uint64_t)&unk_10023A688);
    sub_100003B6C( (unint64_t *)&qword_1002E0408,  type metadata accessor for ProductDescriptionCollectionViewCell,  (uint64_t)&unk_1002360B8);
    uint64_t v23 = (unint64_t *)&unk_1002ED450;
    uint64_t v24 = &unk_10023A6B8;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.screenshotsLockup(_:))
  {
    uint64_t v21 = type metadata accessor for ScreenshotsLockupCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ScreenshotsLockupCollectionViewCell;
    sub_100003B6C( &qword_1002ED3F8,  type metadata accessor for ScreenshotsLockupCollectionViewCell,  (uint64_t)&unk_10023B778);
    sub_100003B6C( &qword_1002ED400,  type metadata accessor for ScreenshotsLockupCollectionViewCell,  (uint64_t)&unk_100236B60);
    uint64_t v23 = (unint64_t *)&unk_1002ED408;
    goto LABEL_37;
  }

  if (v20 == enum case for Shelf.ContentType.titledButtonStack(_:))
  {
    uint64_t v21 = type metadata accessor for TitledButtonStackCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for TitledButtonStackCollectionViewCell;
    sub_100003B6C( &qword_1002ED3A8,  type metadata accessor for TitledButtonStackCollectionViewCell,  (uint64_t)&unk_100239F98);
    sub_100003B6C( (unint64_t *)&qword_1002DF600,  type metadata accessor for TitledButtonStackCollectionViewCell,  (uint64_t)&unk_100234E88);
    uint64_t v23 = (unint64_t *)&unk_1002ED3B0;
    uint64_t v24 = &unk_100239FC8;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.smallStoryCard(_:))
  {
    uint64_t v21 = type metadata accessor for SmallStoryCardCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for SmallStoryCardCollectionViewCell;
    sub_100003B6C( &qword_1002ED3C0,  type metadata accessor for SmallStoryCardCollectionViewCell,  (uint64_t)&unk_10023A0F8);
    sub_100003B6C( (unint64_t *)&qword_1002ECB78,  type metadata accessor for SmallStoryCardCollectionViewCell,  (uint64_t)&unk_100242140);
    uint64_t v23 = &qword_1002E52F0;
    uint64_t v24 = &unk_10023A128;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.largeStoryCard(_:))
  {
    uint64_t v21 = type metadata accessor for LargeStoryCardCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for LargeStoryCardCollectionViewCell;
    sub_100003B6C( &qword_1002ED4B8,  type metadata accessor for LargeStoryCardCollectionViewCell,  (uint64_t)&unk_10023ABE0);
    sub_100003B6C( (unint64_t *)&qword_1002E30A0,  type metadata accessor for LargeStoryCardCollectionViewCell,  (uint64_t)&unk_100238218);
    uint64_t v23 = &qword_1002E5280;
    uint64_t v24 = &unk_10023AC10;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.largeHeroBreakout(_:))
  {
    uint64_t v21 = type metadata accessor for LargeHeroBreakoutCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for LargeHeroBreakoutCollectionViewCell;
    sub_100003B6C( &qword_1002ED4C8,  type metadata accessor for LargeHeroBreakoutCollectionViewCell,  (uint64_t)&unk_10023AD40);
    sub_100003B6C( (unint64_t *)&qword_1002E1840,  type metadata accessor for LargeHeroBreakoutCollectionViewCell,  (uint64_t)&unk_100236DA0);
    uint64_t v23 = (unint64_t *)&unk_1002ED4D0;
    uint64_t v24 = &unk_10023AD70;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.upsellBreakout(_:))
  {
    uint64_t v21 = type metadata accessor for UpsellBreakoutCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for UpsellBreakoutCollectionViewCell;
    sub_100003B6C( &qword_1002ED398,  type metadata accessor for UpsellBreakoutCollectionViewCell,  (uint64_t)&unk_100239EE8);
    sub_100003B6C( (unint64_t *)&qword_1002E4C70,  type metadata accessor for UpsellBreakoutCollectionViewCell,  (uint64_t)&unk_100239A10);
    uint64_t v23 = (unint64_t *)&unk_1002ED3A0;
    uint64_t v24 = &unk_100239F18;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.smallBreakout(_:))
  {
    uint64_t v21 = type metadata accessor for SmallBreakoutCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for SmallBreakoutCollectionViewCell;
    sub_100003B6C(&qword_1002ED3E0, type metadata accessor for SmallBreakoutCollectionViewCell, (uint64_t)&unk_10023A308);
    sub_100003B6C( (unint64_t *)&qword_1002EA758,  type metadata accessor for SmallBreakoutCollectionViewCell,  (uint64_t)&unk_100240088);
    uint64_t v23 = &qword_1002E52E0;
    uint64_t v24 = &unk_10023A338;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.mixedMediaLockup(_:))
  {
    uint64_t v21 = type metadata accessor for MixedMediaLockupCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for MixedMediaLockupCollectionViewCell;
    sub_100003B6C( &qword_1002ED4A0,  type metadata accessor for MixedMediaLockupCollectionViewCell,  (uint64_t)&unk_10023B778);
    sub_100003B6C( &qword_1002E1538,  type metadata accessor for MixedMediaLockupCollectionViewCell,  (uint64_t)&unk_100236B60);
    uint64_t v23 = (unint64_t *)&unk_1002ED4A8;
    goto LABEL_37;
  }

  if (v20 == enum case for Shelf.ContentType.arcadeFooter(_:))
  {
    uint64_t v21 = type metadata accessor for ArcadeFooterCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ArcadeFooterCollectionViewCell;
    sub_100003B6C(&qword_1002ED540, type metadata accessor for ArcadeFooterCollectionViewCell, (uint64_t)&unk_10023B420);
    sub_100003B6C( (unint64_t *)&qword_1002E5EE8,  type metadata accessor for ArcadeFooterCollectionViewCell,  (uint64_t)&unk_10023C798);
    uint64_t v23 = (unint64_t *)&unk_1002ED548;
    uint64_t v24 = &unk_10023B450;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.familyMember(_:))
  {
    uint64_t v21 = type metadata accessor for FamilyMemberCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for FamilyMemberCollectionViewCell;
    sub_100003B6C(&qword_1002ED518, type metadata accessor for FamilyMemberCollectionViewCell, (uint64_t)&unk_10023B160);
    sub_100003B6C( (unint64_t *)&qword_1002E8B00,  type metadata accessor for FamilyMemberCollectionViewCell,  (uint64_t)&unk_10023E9A8);
    uint64_t v23 = (unint64_t *)&unk_1002ED520;
    uint64_t v24 = &unk_10023B190;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.textCard(_:))
  {
    uint64_t v21 = type metadata accessor for TextCardCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for TextCardCollectionViewCell;
    sub_100003B6C(&qword_1002ED3B8, type metadata accessor for TextCardCollectionViewCell, (uint64_t)&unk_10023A048);
    sub_100003B6C( (unint64_t *)&qword_1002EB2C0,  type metadata accessor for TextCardCollectionViewCell,  (uint64_t)&unk_100240E78);
    uint64_t v23 = &qword_1002E52F8;
    uint64_t v24 = &unk_10023A078;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.gameCenterReengagement(_:))
  {
    uint64_t v21 = type metadata accessor for GameCenterReengagementCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for GameCenterReengagementCollectionViewCell;
    sub_100003B6C( &qword_1002ED500,  type metadata accessor for GameCenterReengagementCollectionViewCell,  (uint64_t)&unk_10023AF50);
    sub_100003B6C( (unint64_t *)&qword_1002E7290,  type metadata accessor for GameCenterReengagementCollectionViewCell,  (uint64_t)&unk_10023D7E8);
    uint64_t v23 = &qword_1002E5270;
    uint64_t v24 = &unk_10023AF80;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.smallGameCenterPlayer(_:))
  {
    uint64_t v21 = type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for SmallGameCenterPlayerCollectionViewCell;
    sub_100003B6C( &qword_1002ED3D0,  type metadata accessor for SmallGameCenterPlayerCollectionViewCell,  (uint64_t)&unk_10023A258);
    sub_100003B6C( (unint64_t *)&qword_1002EB140,  type metadata accessor for SmallGameCenterPlayerCollectionViewCell,  (uint64_t)&unk_100240A00);
    uint64_t v23 = (unint64_t *)&unk_1002ED3D8;
    uint64_t v24 = &unk_10023A288;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.largeGameCenterPlayer(_:))
  {
    uint64_t v21 = type metadata accessor for LargeGameCenterPlayerCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for LargeGameCenterPlayerCollectionViewCell;
    sub_100003B6C( &qword_1002ED4D8,  type metadata accessor for LargeGameCenterPlayerCollectionViewCell,  (uint64_t)&unk_10023ADF0);
    sub_100003B6C( (unint64_t *)&qword_1002E32B8,  type metadata accessor for LargeGameCenterPlayerCollectionViewCell,  (uint64_t)&unk_1002384B4);
    uint64_t v23 = (unint64_t *)&unk_1002ED4E0;
    uint64_t v24 = &unk_10023AE20;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:))
  {
    uint64_t v21 = type metadata accessor for AchievementSummaryCardCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for AchievementSummaryCardCollectionViewCell;
    sub_100003B6C( &qword_1002ED4F8,  type metadata accessor for AchievementSummaryCardCollectionViewCell,  (uint64_t)&unk_10023B6C8);
    sub_100003B6C( (unint64_t *)&qword_1002DE160,  type metadata accessor for AchievementSummaryCardCollectionViewCell,  (uint64_t)&unk_100233938);
    uint64_t v23 = &qword_1002E5210;
    uint64_t v24 = &unk_10023B6F8;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.posterLockup(_:))
  {
    uint64_t v21 = type metadata accessor for PosterLockupCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for PosterLockupCollectionViewCell;
    sub_100003B6C(&qword_1002ED490, type metadata accessor for PosterLockupCollectionViewCell, (uint64_t)&unk_10023AA18);
    sub_100003B6C( (unint64_t *)&qword_1002ED290,  type metadata accessor for PosterLockupCollectionViewCell,  (uint64_t)&unk_1002428F0);
    uint64_t v23 = &qword_1002E5298;
    uint64_t v24 = &unk_10023AA48;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.privacyHeader(_:))
  {
    uint64_t v21 = type metadata accessor for PrivacyHeaderCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for PrivacyHeaderCollectionViewCell;
    sub_100003B6C(&qword_1002ED470, type metadata accessor for PrivacyHeaderCollectionViewCell, (uint64_t)&unk_10023A7E8);
    sub_100003B6C( (unint64_t *)&unk_1002ECDC0,  type metadata accessor for PrivacyHeaderCollectionViewCell,  (uint64_t)&unk_1002423E8);
    uint64_t v23 = &qword_1002E52B8;
    uint64_t v24 = &unk_100239D88;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.privacyFooter(_:))
  {
    uint64_t v21 = type metadata accessor for PrivacyFooterCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for PrivacyFooterCollectionViewCell;
    sub_100003B6C(&qword_1002ED478, type metadata accessor for PrivacyFooterCollectionViewCell, (uint64_t)&unk_10023A850);
    sub_100003B6C( (unint64_t *)&unk_1002E6140,  type metadata accessor for PrivacyFooterCollectionViewCell,  (uint64_t)&unk_10023C9D8);
    uint64_t v23 = &qword_1002E52B0;
    uint64_t v24 = &unk_10023DC78;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.privacyType(_:))
  {
    uint64_t v21 = type metadata accessor for PrivacyTypeCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for PrivacyTypeCollectionViewCell;
    sub_100003B6C(&qword_1002ED468, type metadata accessor for PrivacyTypeCollectionViewCell, (uint64_t)&unk_10023A738);
    sub_100003B6C(&qword_1002E38C0, type metadata accessor for PrivacyTypeCollectionViewCell, (uint64_t)&unk_100238630);
    uint64_t v23 = &qword_1002E52C0;
    uint64_t v24 = &unk_10023A768;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.privacyCategory(_:))
  {
    uint64_t v21 = type metadata accessor for PrivacyCategoryCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for PrivacyCategoryCollectionViewCell;
    sub_100003B6C( &qword_1002ED488,  type metadata accessor for PrivacyCategoryCollectionViewCell,  (uint64_t)&unk_10023A968);
    sub_100003B6C( (unint64_t *)&qword_1002DF798,  type metadata accessor for PrivacyCategoryCollectionViewCell,  (uint64_t)&unk_100235110);
    uint64_t v23 = &qword_1002E52A0;
    uint64_t v24 = &unk_10023A998;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.privacyDefinition(_:))
  {
    uint64_t v21 = type metadata accessor for PrivacyDefinitionCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for PrivacyDefinitionCollectionViewCell;
    sub_100003B6C( &qword_1002ED480,  type metadata accessor for PrivacyDefinitionCollectionViewCell,  (uint64_t)&unk_10023A8B8);
    sub_100003B6C( (unint64_t *)&qword_1002E5E60,  type metadata accessor for PrivacyDefinitionCollectionViewCell,  (uint64_t)&unk_10023C610);
    uint64_t v23 = &qword_1002E52A8;
    uint64_t v24 = &unk_10023A8E8;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.searchResult(_:))
  {
    uint64_t v21 = type metadata accessor for SearchResultCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for SearchResultCollectionViewCell;
    sub_100003B6C(&qword_1002ED3E8, type metadata accessor for SearchResultCollectionViewCell, (uint64_t)&unk_10023A380);
    sub_100003B6C( (unint64_t *)&unk_1002EE1C0,  type metadata accessor for SearchResultCollectionViewCell,  (uint64_t)&unk_100243408);
    uint64_t v23 = (unint64_t *)&unk_1002ED3F0;
    uint64_t v24 = &unk_1002434CC;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.heroCarousel(_:))
  {
    uint64_t v21 = type metadata accessor for HeroCarouselCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for HeroCarouselCollectionViewCell;
    sub_100003B6C(&qword_1002ED4E8, type metadata accessor for HeroCarouselCollectionViewCell, (uint64_t)&unk_10023AEA0);
    sub_100003B6C( (unint64_t *)&qword_1002E6398,  type metadata accessor for HeroCarouselCollectionViewCell,  (uint64_t)&unk_10023CD38);
    uint64_t v23 = (unint64_t *)&unk_1002ED4F0;
    uint64_t v24 = &unk_10023AED0;
    goto LABEL_44;
  }

  if (v20 == enum case for Shelf.ContentType.productRatingsAndReviewsComponent(_:))
  {
    uint64_t v21 = type metadata accessor for ProductRatingsAndReviewsComponentCollectionViewCell(0LL);
    uint64_t v22 = type metadata accessor for ProductRatingsAndReviewsComponentCollectionViewCell;
    sub_100003B6C( &qword_1002ED428,  type metadata accessor for ProductRatingsAndReviewsComponentCollectionViewCell,  (uint64_t)&unk_10023A460);
    sub_100003B6C( (unint64_t *)&qword_1002EB348,  type metadata accessor for ProductRatingsAndReviewsComponentCollectionViewCell,  (uint64_t)&unk_100240F94);
    uint64_t v23 = (unint64_t *)&unk_1002ED430;
    uint64_t v24 = &unk_100233D50;
    goto LABEL_44;
  }

  if (qword_1002DC370 != -1) {
    swift_once(&qword_1002DC370, sub_100018F58);
  }
  uint64_t v26 = v51;
  uint64_t v27 = sub_1000061F4(v51, (uint64_t)qword_1002EE528);
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v27, v26);
  uint64_t v28 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v29 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v30 = *(void *)(v29 + 72);
  uint64_t v31 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = (v31 + 32) & ~v31;
  uint64_t v33 = swift_allocObject(v28, v32 + 2 * v30, v31 | 7);
  *(_OWORD *)(v33 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
  uint64_t v34 = v33 + v32;
  uint64_t v35 = v33;
  static LogMessage.identity(_:)(v47);
  uint64_t v47 = v34 + v30;
  uint64_t v36 = v48;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(48LL, 1LL);
  v37._object = (void *)0x800000010024F220LL;
  v37._countAndFlagsBits = 0xD000000000000021LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  ShelfLayoutContext.shelf.getter(v38);
  uint64_t v40 = swift_getKeyPath(&unk_100242B78, v39);
  void v52[3] = v4;
  sub_100009D54(v52);
  ReadOnlyLens.subscript.getter(v40, v8);
  __n128 v41 = swift_release(v40);
  v19(v11, v8, v41);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v52);
  sub_100029100((uint64_t)v52);
  v42._countAndFlagsBits = 0x686E752073617720LL;
  v42._object = (void *)0xEF2E64656C646E61LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v42);
  LogMessage.init(stringInterpolation:)(v36);
  uint64_t v43 = v51;
  double v44 = v49;
  Logger.error(_:)(v35, v51, &protocol witness table for OSLogger);
  __n128 v45 = swift_bridgeObjectRelease(v35);
  (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v44, v43, v45);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0LL;
}

id sub_100201690()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for ZoomTransitioningDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ZoomTransitioningDelegate()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade25ZoomTransitioningDelegate);
}

char *sub_1002016E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100201728( a1,  a2,  a3,  a4,  &qword_1002EDA50,  (uint64_t (*)(uint64_t))&type metadata accessor for TVPurchasesDetailsPresenter,  &qword_1002EDA58,  &qword_1002EDA60);
}

char *sub_100201704(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100201728( a1,  a2,  a3,  a4,  (uint64_t *)&unk_1002EDA68,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  &qword_1002EC750,  &qword_1002EDA78);
}

char *sub_100201728( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t), unint64_t *a7, unint64_t *a8)
{
  uint64_t v14 = qword_1002EDBD0;
  id v15 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0LL));
  uint64_t v16 = v8;
  *(void *)&v8[v14] = CompoundScrollObserver.init(children:)(&_swiftEmptyArrayStorage);
  *(void *)&v16[qword_1002EDBC0] = a2;
  *(void *)&v16[qword_1002EDBC8] = a3;
  uint64_t v60 = a5;
  uint64_t v17 = sub_1000031E8(a5);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  swift_retain_n(a2, 2LL);
  swift_retain(a3);
  *(void *)&v16[qword_1002EDBD8] = InfiniteScrollObserver.init(paginatedPresenter:triggerDistance:)(a2, 500.0);
  uint64_t v18 = type metadata accessor for ImpressionsCalculator(0LL);
  BaseObjectGraph.optional<A>(_:)(v66, v18, v18);
  uint64_t v19 = v66[0];
  if (v66[0])
  {
    swift_retain(v66[0]);
    ImpressionsCalculator.isVisible.setter(1LL);
    swift_release(v19);
  }

  uint64_t v20 = *(void *)(a3 + 96);
  uint64_t v63 = a3;
  *(void *)(a3 + 96) = v19;
  swift_retain_n(v19, 2LL);
  swift_release(v20);
  uint64_t v21 = type metadata accessor for ImpressionsScrollObserver(0LL);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(void *)&v16[qword_1002EDBE0] = ImpressionsScrollObserver.init(_:)(v19);

  id v22 = a1;
  swift_retain(a4);
  id v23 = sub_1001FCC14((uint64_t)v22, a4);
  uint64_t v62 = v22;

  uint64_t v24 = type metadata accessor for PlaybackCoordinator(0LL);
  uint64_t v25 = type metadata accessor for ObjectGraph(0LL);
  id v26 = v23;
  uint64_t v64 = a4;
  inject<A, B>(_:from:)(v66, v24, a4, v24, v25);
  uint64_t v27 = (void *)v66[0];
  uint64_t v28 = (char *)v26;
  dispatch thunk of PlaybackCoordinator.setParentViewController(_:)();

  uint64_t v29 = a6(0LL);
  v66[3] = v29;
  v66[4] = &protocol witness table for BasePresenter;
  v66[0] = a2;
  uint64_t v30 = (uint64_t)&v28[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver];
  swift_beginAccess(&v28[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_lifecycleObserver], v65, 33LL, 0LL);
  swift_retain(a2);
  uint64_t v31 = v28;
  sub_1001EFA60((uint64_t)v66, v30);
  swift_endAccess(v65);

  uint64_t v32 = sub_100003B6C(a7, a6, (uint64_t)&protocol conformance descriptor for BasePresenter);
  uint64_t v33 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v29, v32);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)&v31[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_artworkLoader];
    uint64_t v36 = swift_retain(v35);
    PendingPageRender.observeAssets(_:)(v36, &protocol witness table for ArtworkLoader);
    swift_release(v34);
    swift_release(v35);
  }

  uint64_t v37 = *(void *)&v31[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_artworkLoader];
  swift_retain(v37);
  uint64_t v38 = dispatch thunk of MetricsPagePresenter.pageRenderMetrics.getter(v29, v32);
  ArtworkLoader.pageRenderMetrics.setter(v38);
  swift_release(v37);
  uint64_t v39 = qword_1002EDBD0;
  uint64_t v40 = *(void **)&v31[qword_1002EDBD0];
  uint64_t v41 = *(void *)&v31[qword_1002EDBD8];
  uint64_t v42 = sub_100206114(a8, v60);
  id v43 = v40;
  uint64_t v44 = swift_retain(v41);
  CompoundScrollObserver.addChild(_:)(v44, v42);

  swift_release(v41);
  uint64_t v45 = *(void *)&v31[qword_1002EDBE0];
  if (v45) {
    uint64_t v46 = &protocol witness table for ImpressionsScrollObserver;
  }
  else {
    uint64_t v46 = 0LL;
  }
  id v47 = *(id *)&v31[v39];
  uint64_t v48 = swift_retain(v45);
  CompoundScrollObserver.addChild(_:)(v48, v46);

  swift_release(v45);
  uint64_t v49 = *(void *)&v31[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_objectGraph];
  id v50 = *(id *)&v31[v39];
  swift_retain(v49);
  inject<A, B>(_:from:)(v66, v24, v49, v24, v25);
  swift_release(v49);
  uint64_t v51 = v66[0];
  uint64_t v52 = type metadata accessor for PlaybackScrollObserver(0LL);
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  uint64_t v53 = PlaybackScrollObserver.init(_:)(v51);
  CompoundScrollObserver.addChild(_:)(v53, &protocol witness table for PlaybackScrollObserver);

  swift_release(v53);
  uint64_t v54 = sub_100204678();
  unint64_t v55 = v31;
  uint64_t v56 = UIViewController.registerForTraitChanges(_:action:)( v54,  "traitCollectionChangedWithView:previousTraitCollection:");
  swift_release(v19);
  swift_unknownObjectRelease(v56);
  swift_bridgeObjectRelease(v54);

  swift_release(a2);
  swift_release(v63);
  swift_release(v64);
  return v55;
}

uint64_t sub_100201BDC(uint64_t a1)
{
  id v3 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0LL));
  *(void *)(v1 + 32) = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  *(void *)(v1 + 40) = &protocol witness table for CompoundScrollObserver;
  uint64_t v4 = type metadata accessor for FocusAvoidanceScrollObserver();
  uint64_t v5 = (void *)swift_allocObject(v4, 40LL, 7LL);
  v5[3] = 0LL;
  v5[4] = 0LL;
  v5[2] = 0LL;
  *(void *)(v1 + 48) = v5;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_WORD *)(v1 + 88) = 1;
  *(void *)(v1 + 96) = 0LL;
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = a1;
  uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002EC740);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  *(void *)(v1 + 2swift_weakDestroy(v0 + 4) = TransientStateStore.init(isConcurrent:)(1LL);
  return v1;
}

uint64_t sub_100201C94(uint64_t a1)
{
  return sub_100201CCC( a1,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductPresenter,  (unint64_t *)&unk_1002EA010,  (uint64_t)&protocol conformance descriptor for ProductPresenter);
}

uint64_t sub_100201CB0(uint64_t a1)
{
  return sub_100201CCC( a1,  (uint64_t (*)(uint64_t))&type metadata accessor for TopChartSegmentPresenter,  (unint64_t *)&qword_1002E8320,  (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
}

uint64_t sub_100201CCC(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v36 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v37 = (char *)&v35 - v12;
  __chkstk_darwin(v13);
  id v15 = (char *)&v35 - v14;
  __n128 v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = ((uint64_t (*)(void, __n128))a2)(0LL, v17);
  uint64_t v21 = sub_100003B6C(a3, a2, a4);
  uint64_t v35 = a1;
  dispatch thunk of ShelfPresenter.contentType(for:)(a1, v20, v21);
  id v22 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v22(v15, v19, v8);
  uint64_t v38 = v9;
  id v23 = *(uint64_t (**)(char *, uint64_t))(v9 + 88);
  int v24 = v23(v15, v8);
  if (v24 == enum case for Shelf.ContentType.informationContainer(_:))
  {
    uint64_t v25 = type metadata accessor for InformationContainerCollectionViewCell();
    goto LABEL_5;
  }

  if (v24 == enum case for Shelf.ContentType.reviewsContainer(_:))
  {
    uint64_t v25 = type metadata accessor for ReviewsContainerCell();
LABEL_5:
    uint64_t v26 = v25;
    uint64_t v27 = v37;
    v22(v37, v19, v8);
    if (v26)
    {
LABEL_15:
      char v32 = 1;
      goto LABEL_16;
    }

    goto LABEL_8;
  }

  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v8);
  uint64_t v27 = v37;
  v22(v37, v19, v8);
LABEL_8:
  char v28 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v35, v20, v21);
  uint64_t v29 = v36;
  v22(v36, v27, v8);
  int v30 = v23(v29, v8);
  if (v30 == enum case for Shelf.ContentType.smallLockup(_:) || v30 == enum case for Shelf.ContentType.mediumLockup(_:)) {
    goto LABEL_13;
  }
  if (v30 == enum case for Shelf.ContentType.largeLockup(_:)) {
    goto LABEL_15;
  }
  if (v30 == enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
    || v30 == enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
    || v30 == enum case for Shelf.ContentType.action(_:)
    || v30 == enum case for Shelf.ContentType.editorialCard(_:)
    || v30 == enum case for Shelf.ContentType.videoCard(_:))
  {
    goto LABEL_13;
  }

  char v32 = 1;
  if (v30 == enum case for Shelf.ContentType.brick(_:) || v30 == enum case for Shelf.ContentType.categoryBrick(_:)) {
    goto LABEL_16;
  }
  if (v30 == enum case for Shelf.ContentType.reviews(_:)
    || v30 == enum case for Shelf.ContentType.appTrailerLockup(_:)
    || v30 == enum case for Shelf.ContentType.framedVideo(_:)
    || v30 == enum case for Shelf.ContentType.screenshotsLockup(_:)
    || v30 == enum case for Shelf.ContentType.smallStoryCard(_:)
    || v30 == enum case for Shelf.ContentType.mediumStoryCard(_:))
  {
    goto LABEL_13;
  }

  if (v30 == enum case for Shelf.ContentType.largeStoryCard(_:)) {
    goto LABEL_16;
  }
  if (v30 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
    || v30 == enum case for Shelf.ContentType.upsellBreakout(_:)
    || v30 == enum case for Shelf.ContentType.smallBreakout(_:)
    || v30 == enum case for Shelf.ContentType.mixedMediaLockup(_:)
    || v30 == enum case for Shelf.ContentType.arcadeFooter(_:)
    || v30 == enum case for Shelf.ContentType.textCard(_:)
    || v30 == enum case for Shelf.ContentType.smallGameCenterPlayer(_:)
    || v30 == enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
    || v30 == enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:))
  {
LABEL_13:
    char v32 = v28;
    goto LABEL_16;
  }

  char v32 = v28;
  if (v30 != enum case for Shelf.ContentType.posterLockup(_:))
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v8);
    char v32 = 0;
  }

uint64_t sub_100202138(uint64_t a1)
{
  return sub_100201CCC( a1,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  &qword_1002EA200,  (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
}

char *sub_100202154(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = qword_1002F1940;
  uint64_t v6 = qword_1002DCEE8;
  uint64_t v7 = v2;
  if (v6 != -1) {
    swift_once(&qword_1002DCEE8, sub_1001692DC);
  }
  uint64_t v8 = type metadata accessor for TitleHeaderView.Style(0LL);
  uint64_t v9 = sub_1000061F4(v8, (uint64_t)qword_1002F10C0);
  sub_100077AEC(v9, (uint64_t)&v7[v5], type metadata accessor for TitleHeaderView.Style);
  uint64_t v10 = &v7[qword_1002F1948];
  *(void *)uint64_t v10 = 0LL;
  *((void *)v10 + 1) = 0LL;

  id v11 = [objc_allocWithZone((Class)type metadata accessor for CollectionViewTableFlowLayout()) init];
  uint64_t v12 = type metadata accessor for TopChartSegmentDataSource(0LL);
  swift_allocObject(v12, 104LL, 7LL);
  uint64_t v13 = swift_retain_n(a1, 2LL);
  uint64_t v14 = sub_100201BDC(v13);
  swift_retain(a2);
  id v15 = sub_100201728( v11,  a1,  v14,  a2,  (uint64_t *)&unk_1002EDA18,  (uint64_t (*)(uint64_t))&type metadata accessor for TopChartSegmentPresenter,  &qword_1002EDA28,  (unint64_t *)&unk_1002EDA30);
  uint64_t v16 = sub_100003B6C( &qword_1002EDA10,  type metadata accessor for TopChartSegmentViewController,  (uint64_t)&unk_100242C60);
  __n128 v17 = v15;
  dispatch thunk of TopChartSegmentPresenter.view.setter(v15, v16);
  uint64_t v18 = *(void *)&v17[qword_1002EDBD8];
  __n128 v19 = swift_retain(v18);
  dispatch thunk of InfiniteScrollObserver.shouldPrepareNextPageWithoutContent.setter(0LL, v19);
  swift_release(v18);

  swift_release(a1);
  swift_release(a2);
  return v17;
}

uint64_t sub_100202304()
{
  return 0LL;
}

void sub_10020230C()
{
  uint64_t v1 = v0;
  v22.id receiver = v0;
  v22.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v22, "viewDidLoad");
  id v2 = [v0 collectionView];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = type metadata accessor for TitleHeaderView(0LL);
    ObjCClassFromMetadatdouble a = (objc_class *)swift_getObjCClassFromMetadata(v4);
    NSString v6 = String._bridgeToObjectiveC()();
    uint64_t v7 = NSStringFromClass(ObjCClassFromMetadata);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    uint64_t v9 = v8;

    NSString v10 = String._bridgeToObjectiveC()();
    objc_msgSend( v3,  "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:",  ObjCClassFromMetadata,  v6,  v10,  swift_bridgeObjectRelease(v9).n128_f64[0]);
  }

  uint64_t v11 = dispatch thunk of BasePresenter.pendingPageRender.getter(v2);
  if (v11)
  {
    uint64_t v13 = v11;
    PendingPageRender.isLayoutPending.setter(1LL);
    *(void *)&double v12 = swift_release(v13).n128_u64[0];
  }

  id v14 = objc_msgSend(v1, "collectionViewLayout", v12);
  uint64_t v15 = type metadata accessor for CollectionViewTableFlowLayout();
  uint64_t v16 = swift_dynamicCastClass(v14, v15);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = swift_allocObject(&unk_10028F778, 24LL, 7LL);
    swift_unknownObjectWeakInit(v18 + 16, v1);
    __n128 v19 = (double (**)(uint64_t))(v17
                                          + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver);
    uint64_t v20 = *(void *)(v17 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver);
    uint64_t v21 = *(void *)(v17 + OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver + 8);
    char *v19 = sub_10020610C;
    v19[1] = (double (*)(uint64_t))v18;
    sub_10000D3D8(v20, v21);
  }
}

double sub_1002024C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = sub_1000B93C0();
    sub_100203614( (uint64_t)v5,  (uint64_t (*)(uint64_t))&type metadata accessor for TopChartSegmentPresenter,  (unint64_t *)&qword_1002E8320);

    swift_bridgeObjectRelease(v5);
  }

  swift_beginAccess(v2, &v12, 0LL, 0LL);
  uint64_t v6 = swift_unknownObjectWeakLoadStrong(v2);
  if (v6)
  {
    uint64_t v8 = (void *)v6;
    uint64_t v9 = *(void *)(v6 + qword_1002EDBC0);
    swift_retain(v9);

    uint64_t v11 = dispatch thunk of BasePresenter.pendingPageRender.getter(v10);
    *(void *)&double result = swift_release(v9).n128_u64[0];
    if (v11)
    {
      PendingPageRender.isLayoutPending.setter(0LL);
      *(void *)&double result = swift_release(v11).n128_u64[0];
    }
  }

  return result;
}

void sub_1002025AC(uint64_t a1)
{
}

void sub_1002025C0(uint64_t a1)
{
}

void sub_1002025D4(uint64_t a1)
{
  uint64_t v90 = sub_1000031E8(&qword_1002E9A28);
  __chkstk_darwin(v90);
  double v122 = &v76[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v4 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v147 = *(void *)(v4 - 8);
  uint64_t v148 = v4;
  __chkstk_darwin(v4);
  double v123 = &v76[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v127 = &v76[-v7];
  __chkstk_darwin(v8);
  uint64_t v139 = &v76[-v9];
  *(void *)&double v11 = __chkstk_darwin(v10).n128_u64[0];
  uint64_t v13 = &v76[-v12];
  uint64_t v149 = v1;
  id v140 = objc_msgSend(v1, "collectionView", v11);
  if (!v140) {
    return;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v136 = a1 + 56;
  uint64_t v15 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v16 = -1LL;
  if (v15 < 64) {
    uint64_t v16 = ~(-1LL << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v142 = qword_1002EDBC8;
  uint64_t v143 = qword_1002EDBC0;
  int64_t v138 = (unint64_t)(v15 + 63) >> 6;
  int v137 = enum case for Shelf.ContentType.smallLockup(_:);
  int v134 = enum case for Shelf.ContentType.mediumLockup(_:);
  int v133 = enum case for Shelf.ContentType.largeLockup(_:);
  int v131 = enum case for Shelf.ContentType.inAppPurchaseLockup(_:);
  int v130 = enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:);
  int v132 = enum case for Shelf.ContentType.action(_:);
  int v129 = enum case for Shelf.ContentType.editorialCard(_:);
  int v128 = enum case for Shelf.ContentType.videoCard(_:);
  int v121 = enum case for Shelf.ContentType.brick(_:);
  int v95 = enum case for Shelf.ContentType.categoryBrick(_:);
  int v88 = enum case for Shelf.ContentType.reviews(_:);
  int v87 = enum case for Shelf.ContentType.appTrailerLockup(_:);
  int v126 = enum case for Shelf.ContentType.framedVideo(_:);
  int v86 = enum case for Shelf.ContentType.screenshotsLockup(_:);
  int v85 = enum case for Shelf.ContentType.smallStoryCard(_:);
  int v84 = enum case for Shelf.ContentType.mediumStoryCard(_:);
  int v124 = enum case for Shelf.ContentType.largeStoryCard(_:);
  int v120 = enum case for Shelf.ContentType.largeHeroBreakout(_:);
  int v119 = enum case for Shelf.ContentType.upsellBreakout(_:);
  int v118 = enum case for Shelf.ContentType.smallBreakout(_:);
  int v89 = enum case for Shelf.ContentType.mixedMediaLockup(_:);
  int v117 = enum case for Shelf.ContentType.arcadeFooter(_:);
  int v82 = enum case for Shelf.ContentType.textCard(_:);
  int v80 = enum case for Shelf.ContentType.smallGameCenterPlayer(_:);
  int v79 = enum case for Shelf.ContentType.largeGameCenterPlayer(_:);
  int v81 = enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:);
  int v78 = enum case for Shelf.ContentType.posterLockup(_:);
  int v116 = enum case for Shelf.ContentType.artwork(_:);
  int v115 = enum case for Shelf.ContentType.paragraph(_:);
  int v114 = enum case for Shelf.ContentType.footnote(_:);
  int v113 = enum case for Shelf.ContentType.titledParagraph(_:);
  int v112 = enum case for Shelf.ContentType.reviewsContainer(_:);
  int v111 = enum case for Shelf.ContentType.editorialLink(_:);
  int v110 = enum case for Shelf.ContentType.quote(_:);
  int v109 = enum case for Shelf.ContentType.framedArtwork(_:);
  int v108 = enum case for Shelf.ContentType.screenshots(_:);
  int v107 = enum case for Shelf.ContentType.appShowcase(_:);
  int v106 = enum case for Shelf.ContentType.inAppPurchaseShowcase(_:);
  int v105 = enum case for Shelf.ContentType.productDescription(_:);
  int v104 = enum case for Shelf.ContentType.banner(_:);
  int v103 = enum case for Shelf.ContentType.roundedButton(_:);
  int v102 = enum case for Shelf.ContentType.titledButtonStack(_:);
  int v101 = enum case for Shelf.ContentType.personalizationFeedbackContainer(_:);
  int v100 = enum case for Shelf.ContentType.gameCenterReengagement(_:);
  int v99 = enum case for Shelf.ContentType.privacyHeader(_:);
  int v98 = enum case for Shelf.ContentType.privacyFooter(_:);
  int v96 = enum case for Shelf.ContentType.privacyCategory(_:);
  int v94 = enum case for Shelf.ContentType.privacyDefinition(_:);
  int v92 = enum case for Shelf.ContentType.heroCarousel(_:);
  int v97 = enum case for Shelf.ContentType.annotation(_:);
  int v93 = enum case for Shelf.ContentType.productCapability(_:);
  int v91 = enum case for Shelf.ContentType.productPageLink(_:);
  int v83 = enum case for Shelf.ContentType.familyMember(_:);
  int v77 = enum case for Shelf.ContentType.privacyType(_:);
  swift_bridgeObjectRetain(a1);
  int64_t v18 = 0LL;
  for (uint64_t i = a1; ; a1 = i)
  {
    if (v17)
    {
      unint64_t v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v26 = v25 | (v18 << 6);
      goto LABEL_31;
    }

    int64_t v27 = v18 + 1;
    if (__OFADD__(v18, 1LL))
    {
      __break(1u);
      goto LABEL_140;
    }

    if (v27 >= v138) {
      goto LABEL_137;
    }
    unint64_t v28 = *(void *)(v136 + 8 * v27);
    ++v18;
    if (!v28)
    {
      int64_t v18 = v27 + 1;
      if (v27 + 1 >= v138) {
        goto LABEL_137;
      }
      unint64_t v28 = *(void *)(v136 + 8 * v18);
      if (!v28)
      {
        int64_t v18 = v27 + 2;
        if (v27 + 2 >= v138) {
          goto LABEL_137;
        }
        unint64_t v28 = *(void *)(v136 + 8 * v18);
        if (!v28)
        {
          int64_t v18 = v27 + 3;
          if (v27 + 3 >= v138) {
            goto LABEL_137;
          }
          unint64_t v28 = *(void *)(v136 + 8 * v18);
          if (!v28) {
            break;
          }
        }
      }
    }

LABEL_135:
              v65(v122, v148);
              uint64_t v63 = 2LL;
              goto LABEL_122;
            }

            if (v68 == v83)
            {
              v65(v122, v148);
              uint64_t v63 = 4LL;
LABEL_122:
              uint64_t v71 = v123;
              uint64_t v72 = v148;
              v141(v123, v13, v148);
              int v73 = v44(v71, v72);
              if (v73 != v132)
              {
                double v75 = 60.0;
                if (v73 == v97 || v73 == v93 || v73 == v91) {
                  goto LABEL_125;
                }
                if (v73 != v89)
                {
                  if (v73 == v83)
                  {
                    *(double *)&uint64_t v74 = 72.0;
                    goto LABEL_124;
                  }

                  if (v73 != v77)
                  {
                    (*(void (**)(_BYTE *, uint64_t, double))(v147 + 8))(v123, v148, 60.0);
                    uint64_t v24 = 0LL;
                    double v21 = v21 / (double)v63 + -40.0 / (double)v63;
                    uint64_t v38 = v149;
                    goto LABEL_8;
                  }
                }
              }

              *(double *)&uint64_t v74 = 40.0;
LABEL_124:
              double v75 = *(double *)&v74;
LABEL_125:
              uint64_t v24 = 0LL;
              double v21 = (v21 - v75 * (double)(v63 - 1)) / (double)v63;
              uint64_t v38 = v149;
              goto LABEL_8;
            }

            if (v68 != v82 && v68 != v81)
            {
              if (v68 != v77)
              {
LABEL_132:
                sub_100006060((uint64_t)v122, &qword_1002E9A28);
                uint64_t v63 = 2LL;
                goto LABEL_122;
              }

              if (v125 != (id)1)
              {
                if (v125 == (id)2)
                {
                  if (v135 <= 2) {
                    uint64_t v63 = 2LL;
                  }
                  else {
                    uint64_t v63 = 3LL;
                  }
                  v65(v122, v148);
                  goto LABEL_122;
                }

                goto LABEL_132;
              }

              goto LABEL_135;
            }
          }

LABEL_121:
          v65(v122, v148);
          uint64_t v63 = 3LL;
          goto LABEL_122;
        }

        uint64_t v63 = 1LL;
        goto LABEL_122;
      }

      uint64_t v24 = 0LL;
      uint64_t v38 = v54;
    }

    else
    {
      uint64_t v24 = 0LL;
      uint64_t v38 = v149;
    }

LABEL_140:
  __break(1u);
}

void sub_100203614(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3)
{
  int v77 = a2;
  int v78 = a3;
  uint64_t v5 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v79 = *(void *)(v5 - 8);
  uint64_t v80 = v5;
  __chkstk_darwin(v5);
  int v73 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  *(void *)&double v8 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v10 = &v42[-v9];
  int v81 = v3;
  id v74 = objc_msgSend(v3, "collectionView", v8);
  if (!v74) {
    return;
  }
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v70 = a1 + 56;
  uint64_t v12 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v13 = -1LL;
  uint64_t v75 = qword_1002EDBC0;
  if (v12 < 64) {
    uint64_t v13 = ~(-1LL << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v68 = qword_1002EDBC8;
  int64_t v72 = (unint64_t)(v12 + 63) >> 6;
  int v71 = enum case for Shelf.ContentType.smallLockup(_:);
  int v69 = enum case for Shelf.ContentType.mediumLockup(_:);
  int v67 = enum case for Shelf.ContentType.largeLockup(_:);
  int v66 = enum case for Shelf.ContentType.inAppPurchaseLockup(_:);
  int v65 = enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:);
  int v64 = enum case for Shelf.ContentType.action(_:);
  int v63 = enum case for Shelf.ContentType.editorialCard(_:);
  int v62 = enum case for Shelf.ContentType.videoCard(_:);
  int v61 = enum case for Shelf.ContentType.brick(_:);
  int v60 = enum case for Shelf.ContentType.categoryBrick(_:);
  int v59 = enum case for Shelf.ContentType.reviews(_:);
  int v58 = enum case for Shelf.ContentType.appTrailerLockup(_:);
  int v57 = enum case for Shelf.ContentType.framedVideo(_:);
  int v56 = enum case for Shelf.ContentType.screenshotsLockup(_:);
  int v55 = enum case for Shelf.ContentType.smallStoryCard(_:);
  int v54 = enum case for Shelf.ContentType.mediumStoryCard(_:);
  int v53 = enum case for Shelf.ContentType.largeStoryCard(_:);
  int v52 = enum case for Shelf.ContentType.largeHeroBreakout(_:);
  int v51 = enum case for Shelf.ContentType.upsellBreakout(_:);
  int v50 = enum case for Shelf.ContentType.smallBreakout(_:);
  int v49 = enum case for Shelf.ContentType.mixedMediaLockup(_:);
  int v48 = enum case for Shelf.ContentType.arcadeFooter(_:);
  int v47 = enum case for Shelf.ContentType.textCard(_:);
  int v46 = enum case for Shelf.ContentType.smallGameCenterPlayer(_:);
  int v45 = enum case for Shelf.ContentType.largeGameCenterPlayer(_:);
  int v44 = enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:);
  int v43 = enum case for Shelf.ContentType.posterLockup(_:);
  swift_bridgeObjectRetain(a1);
  int64_t v15 = 0LL;
  uint64_t v76 = a1;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      int64_t v82 = v15;
      unint64_t v21 = v20 | (v15 << 6);
      goto LABEL_26;
    }

    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1LL))
    {
      __break(1u);
      goto LABEL_66;
    }

    if (v22 >= v72) {
      goto LABEL_63;
    }
    unint64_t v23 = *(void *)(v70 + 8 * v22);
    int64_t v24 = v15 + 1;
    if (!v23)
    {
      int64_t v24 = v15 + 2;
      if (v15 + 2 >= v72) {
        goto LABEL_63;
      }
      unint64_t v23 = *(void *)(v70 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v15 + 3;
        if (v15 + 3 >= v72) {
          goto LABEL_63;
        }
        unint64_t v23 = *(void *)(v70 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v15 + 4;
          if (v15 + 4 >= v72) {
            goto LABEL_63;
          }
          unint64_t v23 = *(void *)(v70 + 8 * v24);
          if (!v23) {
            break;
          }
        }
      }
    }

void sub_100203D84(void *a1)
{
  id v1 = a1;
  sub_10020230C();
}

double sub_100203DB8(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [v2 collectionView];
  sub_100194500(a1, v4);

  uint64_t v5 = dispatch thunk of TopChartSegmentPresenter.longName.getter();
  uint64_t v6 = (uint64_t *)&v2[qword_1002F1948];
  uint64_t v7 = *(void *)&v2[qword_1002F1948 + 8];
  *uint64_t v6 = v5;
  v6[1] = v8;
  *(void *)&double result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

double sub_100203E38(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  double v9 = sub_100205FB0(v6);

  return v9;
}

id sub_100203E9C(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v3);
  if (a2 == 0xD000000000000035LL && a3 == 0x80000001002490B0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0xD000000000000035LL, 0x80000001002490B0LL, 0LL) & 1) != 0)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    uint64_t v10 = type metadata accessor for TitleHeaderView(0LL);
    ObjCClassFromMetadatdouble a = (objc_class *)swift_getObjCClassFromMetadata(v10);
    uint64_t v12 = NSStringFromClass(ObjCClassFromMetadata);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    uint64_t v14 = v13;

    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    char v16 = (void *)IndexPath._bridgeToObjectiveC()();
    id v17 = [a1 dequeueReusableSupplementaryViewOfKind:v9 withReuseIdentifier:v15 forIndexPath:v16];
  }

  else
  {
    NSString v15 = String._bridgeToObjectiveC()();
    char v16 = (void *)IndexPath._bridgeToObjectiveC()();
    v19.id receiver = v4;
    v19.super_class = ObjectType;
    id v17 = objc_msgSendSuper2(&v19, "collectionView:viewForSupplementaryElementOfKind:atIndexPath:", a1, v15, v16);
  }

  return v17;
}

id sub_10020401C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  uint64_t v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  id v16 = a3;
  id v17 = a1;
  id v18 = sub_100203E9C(v16, v13, v15);

  __n128 v19 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v19);
  return v18;
}

void sub_100204104(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for TitleHeaderView.Style(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a3 == 0xD000000000000035LL && a4 == 0x80000001002490B0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, 0xD000000000000035LL, 0x80000001002490B0LL, 0LL) & 1) != 0)
  {
    uint64_t v14 = type metadata accessor for TitleHeaderView(0LL);
    uint64_t v15 = (void *)swift_dynamicCastClassUnconditional(a2, v14, 0LL, 0LL, 0LL);
    id v16 = a2;
    [v5 pageMarginInsets];
    objc_msgSend(v15, "setLayoutMargins:");
    id v17 = *(void **)((char *)v15 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
    [v17 setNumberOfLines:2];
    [v17 setAllowsDefaultTighteningForTruncation:1];
    uint64_t v18 = *(void *)&v5[qword_1002F1948 + 8];
    id v19 = v17;
    if (v18)
    {
      swift_bridgeObjectRetain(v18);
      NSString v21 = String._bridgeToObjectiveC()();
      *(void *)&double v20 = swift_bridgeObjectRelease(v18).n128_u64[0];
    }

    else
    {
      NSString v21 = 0LL;
    }

    objc_msgSend(v17, "setText:", v21, v20);

    [v5 pageMarginInsets];
    unint64_t v23 = (void *)((char *)v15 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_separatorInset);
    void *v23 = v24;
    v23[1] = v25;
    void v23[2] = v26;
    v23[3] = v27;
    [v15 setNeedsLayout];
    sub_100077AEC((uint64_t)&v5[qword_1002F1940], (uint64_t)v13, type metadata accessor for TitleHeaderView.Style);
    (*(void (**)(char *))((swift_isaMask & *v15) + 0x190LL))(v13);
  }

  else
  {
    NSString v22 = String._bridgeToObjectiveC()();
    id v16 = (id)IndexPath._bridgeToObjectiveC()();
    v28.id receiver = v5;
    v28.super_class = ObjectType;
    objc_msgSendSuper2( &v28,  "collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:",  a1,  a2,  v22,  v16);
  }
}

uint64_t sub_100204390(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for IndexPath(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  uint64_t v17 = v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  id v18 = a3;
  id v19 = a4;
  id v20 = a1;
  sub_100204104((uint64_t)v18, v19, v15, v17);

  __n128 v21 = swift_bridgeObjectRelease(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
}

double sub_100204488()
{
  *(void *)&double result = swift_bridgeObjectRelease(*(void *)(v0 + qword_1002F1948 + 8)).n128_u64[0];
  return result;
}

double sub_1002044C0(uint64_t a1)
{
  *(void *)&double result = swift_bridgeObjectRelease(*(void *)(a1 + qword_1002F1948 + 8)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for TopChartSegmentViewController(uint64_t a1)
{
  uint64_t result = qword_1002ED5F8;
  if (!qword_1002ED5F8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TopChartSegmentViewController);
  }
  return result;
}

uint64_t sub_100204540(uint64_t a1)
{
  uint64_t result = type metadata accessor for TitleHeaderView.Style(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_100242C10;
    uint64_t result = swift_initClassMetadata2(a1, 256LL, 2LL, v4, a1 + 944);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1002045B4()
{
  return type metadata accessor for TopChartSegmentViewController(0LL);
}

void sub_1002045C0()
{
  id v1 = v0;
  uint64_t v2 = *(void *)&v0[qword_1002EDBC8];
  id v3 = [v1 collectionView];
  (*(void (**)(void))(*(void *)v2 + 240LL))();
}

uint64_t sub_100204620()
{
  return sub_100003B6C( &qword_1002EDA00,  type metadata accessor for TopChartSegmentViewController,  (uint64_t)&unk_100242C28);
}

uint64_t sub_10020464C()
{
  return sub_100003B6C( &qword_1002EDA08,  type metadata accessor for TopChartSegmentViewController,  (uint64_t)&unk_100242EA8);
}

uint64_t sub_100204678()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002E14F0);
  uint64_t v1 = swift_allocObject(v0, 176LL, 7LL);
  *(_OWORD *)(v1 + swift_weakDestroy(v0 + 16) = xmmword_100237320;
  *(void *)(v1 + 32) = type metadata accessor for UITraitAccessibilityContrast(0LL);
  *(void *)(v1 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  *(void *)(v1 + 48) = type metadata accessor for UITraitDisplayGamut(0LL);
  *(void *)(v1 + 56) = &protocol witness table for UITraitDisplayGamut;
  *(void *)(v1 + 6swift_weakDestroy(v0 + 4) = type metadata accessor for UITraitDisplayScale(0LL);
  *(void *)(v1 + 72) = &protocol witness table for UITraitDisplayScale;
  *(void *)(v1 + 80) = type metadata accessor for UITraitHorizontalSizeClass(0LL);
  *(void *)(v1 + 88) = &protocol witness table for UITraitHorizontalSizeClass;
  *(void *)(v1 + 96) = type metadata accessor for UITraitLayoutDirection(0LL);
  *(void *)(v1 + 10swift_weakDestroy(v0 + 4) = &protocol witness table for UITraitLayoutDirection;
  *(void *)(v1 + 112) = type metadata accessor for UITraitPreferredContentSizeCategory(0LL);
  *(void *)(v1 + 120) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(void *)(v1 + 128) = type metadata accessor for UITraitUserInterfaceIdiom(0LL);
  *(void *)(v1 + 136) = &protocol witness table for UITraitUserInterfaceIdiom;
  *(void *)(v1 + 14swift_weakDestroy(v0 + 4) = type metadata accessor for UITraitUserInterfaceStyle(0LL);
  *(void *)(v1 + 152) = &protocol witness table for UITraitUserInterfaceStyle;
  *(void *)(v1 + 160) = type metadata accessor for UITraitVerticalSizeClass(0LL);
  *(void *)(v1 + 168) = &protocol witness table for UITraitVerticalSizeClass;
  return v1;
}

id sub_100204774( uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t, uint64_t), uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, void *a19)
{
  return sub_100204788(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

id sub_100204788( uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t, uint64_t), uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, void *a19)
{
  uint64_t v252 = a8;
  uint64_t v232 = a7;
  uint64_t v255 = a6;
  __n128 v258 = a5;
  uint64_t v253 = a4;
  uint64_t v261 = a3;
  uint64_t v231 = a1;
  double v250 = a10;
  double v249 = a9;
  uint64_t v266 = a18;
  uint64_t v236 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0LL);
  uint64_t v247 = *(void *)(v236 - 8);
  __chkstk_darwin(v236);
  uint64_t v237 = (char *)&v227 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v245 = type metadata accessor for TitleHeaderLayout.AccessoryHorizontalAlignment(0LL);
  uint64_t v235 = *(void *)(v245 - 8);
  __chkstk_darwin(v245);
  uint64_t v246 = (char *)&v227 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v243 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0LL);
  uint64_t v242 = *(void *)(v243 - 8);
  __chkstk_darwin(v243);
  uint64_t v244 = (char *)&v227 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v239 = type metadata accessor for TitleHeaderLayout(0LL);
  uint64_t v248 = *(void *)(v239 - 8);
  __chkstk_darwin(v239);
  uint64_t v238 = (char *)&v227 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = type metadata accessor for TitleHeaderLayout.Child(0LL);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v278 = (char *)&v227 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v272 = (char *)&v227 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v277 = (char *)&v227 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  id v271 = (char *)&v227 - v39;
  __chkstk_darwin(v38);
  uint64_t v262 = (char *)&v227 - v40;
  uint64_t v41 = sub_1000031E8(&qword_1002E95A8);
  __chkstk_darwin(v41);
  uint64_t v260 = (char *)&v227 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v265 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v264 = *(void *)(v265 - 8);
  __chkstk_darwin(v265);
  uint64_t v263 = (char *)&v227 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = type metadata accessor for CharacterSet(0LL);
  uint64_t v45 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  int v47 = (char *)&v227 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for TitleHeaderView.TextConfiguration(0LL);
  uint64_t v254 = *(void *)(v48 - 8);
  uint64_t v49 = __chkstk_darwin(v48);
  uint64_t v270 = (uint64_t)&v227 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v251 = (uint64_t)&v227 - v52;
  __chkstk_darwin(v51);
  int v54 = (char *)&v227 - v53;
  uint64_t v241 = sub_1000031E8((uint64_t *)&unk_1002E9710);
  uint64_t v240 = *(void *)(v241 - 8);
  uint64_t v55 = __chkstk_darwin(v241);
  uint64_t v274 = (char *)&v227 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v276 = (uint64_t)&v227 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v273 = (char *)&v227 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v275 = (uint64_t)&v227 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v229 = (char *)&v227 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v269 = (char *)&v227 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  id v230 = (char *)&v227 - v68;
  __chkstk_darwin(v67);
  uint64_t v70 = (char *)&v227 - v69;
  uint64_t v259 = (uint64_t)a19;
  uint64_t v71 = a2;
  id v72 = [a19 traitCollection];
  uint64_t v233 = v47;
  uint64_t v268 = v70;
  id v267 = v72;
  uint64_t v234 = v45;
  uint64_t v256 = v44;
  if (!a2)
  {
    int v101 = v258;
    uint64_t v261 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v261(v70, 1LL, 1LL, v30);
    uint64_t v102 = v266;
    goto LABEL_16;
  }

  id v73 = v72;
  sub_100077AEC(v266, (uint64_t)v54, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100028C20();
  uint64_t v74 = *(int *)(v48 + 20);
  char v228 = v54;
  id v257 = (int *)static UIFont.preferredFont(forUseWith:compatibleWith:)(&v54[v74], v73);
  uint64_t v75 = v231;
  *(void *)&__int128 v283 = v231;
  *((void *)&v283 + 1) = v71;
  uint64_t v76 = swift_bridgeObjectRetain(v71);
  static CharacterSet.excessiveLeading.getter(v76);
  unint64_t v77 = sub_100008794();
  StringProtocol.rangeOfCharacter(from:options:range:)(v47, 0LL, 0LL, 0LL, 1LL, &type metadata for String, v77);
  char v79 = v78;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
  *(void *)&double v80 = swift_bridgeObjectRelease(*((void *)&v283 + 1)).n128_u64[0];
  uint64_t v81 = 0LL;
  int64_t v82 = v261;
  if ((v79 & 1) == 0)
  {
    id result = objc_msgSend(v257, "lineHeight", v80);
    double v85 = ceil(v84 * 1.3);
    if ((~*(void *)&v85 & 0x7FF0000000000000LL) != 0)
    {
      if (v85 > -9.22337204e18)
      {
        if (v85 < 9.22337204e18)
        {
          uint64_t v81 = (uint64_t)v85;
          goto LABEL_7;
        }

double sub_100205FB0(void *a1)
{
  uint64_t v2 = *(char **)&v1[qword_1002F1948 + 8];
  if (!v2) {
    return 0.0;
  }
  uint64_t v3 = *(void *)&v1[qword_1002F1948];
  objc_msgSend(a1, "frame", swift_bridgeObjectRetain(*(void *)&v1[qword_1002F1948 + 8]).n128_f64[0]);
  double v5 = v4;
  double v7 = v6;
  uint64_t v8 = (uint64_t)&v1[qword_1002F1940];
  [v1 pageMarginInsets];
  sub_100204788(0LL, 0LL, 0LL, v3, v2, 0LL, 0LL, 0LL, v5, v7, 0.0, 0.0, v9, v10, v11, v12, 2LL, v8, v1);
  double v14 = v13;
  swift_bridgeObjectRelease(v2);
  return v14;
}

uint64_t sub_1002060A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E9710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002060E8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

double sub_10020610C(uint64_t a1)
{
  return sub_1002024C4(a1, v1);
}

uint64_t sub_100206114(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_100003274(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for InfiniteScrollObserver<A>, v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t type metadata accessor for SearchActionRunner(uint64_t a1)
{
  uint64_t result = qword_1002EDA90;
  if (!qword_1002EDA90) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchActionRunner);
  }
  return result;
}

uint64_t sub_100206190(uint64_t a1)
{
  uint64_t v2 = "\b";
  return swift_initClassMetadata2(a1, 0LL, 1LL, &v2, a1 + qword_1002F1950);
}

double sub_1002061D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for SearchAction(0LL);
  uint64_t v8 = swift_dynamicCastClass(a1, v7);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3 + qword_1002EDA88);
    if (Strong)
    {
      uint64_t v18 = Strong;
      unint64_t v11 = sub_10003C6CC();
      swift_retain(a1);
      uint64_t v12 = sub_1000031E8(qword_1002EDAE8);
      if ((swift_dynamicCast(&v19, &v18, v11, v12, 6LL) & 1) != 0)
      {
        if (*((void *)&v20 + 1))
        {
          sub_100009D90(&v19, (uint64_t)v22);
          sub_100005F8C(v22, v22[3]);
          sub_10014BFB8(v9);
          _s6Arcade17PillOverlayLayoutVwxx_0(v22);
LABEL_13:
          *(void *)&double result = swift_release(a1).n128_u64[0];
          return result;
        }
      }

      else
      {
        uint64_t v21 = 0LL;
        __int128 v19 = 0u;
        __int128 v20 = 0u;
      }
    }

    else
    {
      uint64_t v21 = 0LL;
      __int128 v19 = 0u;
      __int128 v20 = 0u;
      swift_retain(a1);
    }

    sub_100206494((uint64_t)&v19);
    goto LABEL_13;
  }

  double v13 = (void *)swift_unknownObjectWeakLoadStrong(v3 + qword_1002EDA88);
  if (v13)
  {
    uint64_t v15 = v13;
    id v16 = [v13 nextResponder];

    if (v16)
    {
      uint64_t v17 = UIResponder.nearestActionRunner.getter();

      if (v17)
      {
        dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(a1, a2, a3);
        *(void *)&double result = swift_release(v17).n128_u64[0];
      }
    }
  }

  return result;
}

double sub_10020636C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + qword_1002EDA88);
  if (Strong)
  {
    uint64_t v9 = Strong;
    id v10 = [Strong nextResponder];

    if (v10)
    {
      uint64_t v11 = UIResponder.nearestActionRunner.getter();

      if (v11)
      {
        dispatch thunk of ActionRunner.send(metricsData:from:asPartOf:)(a1, a2, a3);
        *(void *)&double result = swift_release(v11).n128_u64[0];
      }
    }
  }

  return result;
}

void sub_100206414()
{
}

uint64_t sub_100206440()
{
  return swift_unknownObjectWeakDestroy(v0 + qword_1002EDA88);
}

uint64_t sub_100206450()
{
  uint64_t v0 = ActionRunner.deinit();
  swift_unknownObjectWeakDestroy(v0 + qword_1002EDA88);
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t sub_10020648C()
{
  return type metadata accessor for SearchActionRunner(0LL);
}

uint64_t sub_100206494(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8(&qword_1002EDAE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1002064D4(uint64_t a1)
{
  uint64_t result = swift_checkMetadataState(319LL, *(void *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t result = swift_initClassMetadata2(a1, 0LL, 2LL, v4, a1 + 96);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100206550@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)((swift_isaMask & *(void *)v1) + 0x50LL)
                                                                - 8LL)
                                                    + 16LL))( a1,  &v1[*(void *)((swift_isaMask & *(void *)v1) + 0x60LL)]);
}

void sub_100206580()
{
}

uint64_t sub_1002065AC(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

uint64_t sub_1002065C4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  uint64_t v6 = sub_100207514((uint64_t)v5);

  return v6;
}

uint64_t sub_10020660C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  uint64_t v8 = sub_1002075C4(a4);

  return v8;
}

double sub_10020665C(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(swift_isaMask & *(void *)v2);
  uint64_t v6 = v5[10];
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)&v12 - v8, &v2[v5[12]], v6);
  double v10 = (*(double (**)(uint64_t, uint64_t, uint64_t))(v5[11] + 24LL))(a2, a1, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

double sub_10020672C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  double v8 = sub_10020665C((uint64_t)v6, a4);

  return v8;
}

id sub_100206788(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  sub_10020767C(a4);
  uint64_t v9 = v8;

  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }

  else
  {
    NSString v10 = 0LL;
  }

  return v10;
}

double sub_100206804(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(swift_isaMask & *(void *)v2);
  uint64_t v6 = v5[10];
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)&v12 - v8, &v2[v5[12]], v6);
  double v10 = (*(double (**)(uint64_t, uint64_t, uint64_t))(v5[11] + 40LL))(a2, a1, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

double sub_1002068D4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  double v8 = sub_100206804((uint64_t)v6, a4);

  return v8;
}

uint64_t sub_100206930(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(swift_isaMask & *(void *)v2);
  uint64_t v6 = v5[10];
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)&v12 - v8, &v2[v5[12]], v6);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5[11] + 48LL))( a2,  *(void *)&v2[*(void *)((swift_isaMask & *(void *)v2) + 0x68LL)],  a1,  v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

id sub_100206A0C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  uint64_t v8 = (void *)sub_100206930((uint64_t)v6, a4);

  return v8;
}

double sub_100206A60(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(swift_isaMask & *(void *)v2);
  uint64_t v6 = v5[10];
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)&v12 - v8, &v2[v5[12]], v6);
  double v10 = (*(double (**)(uint64_t, void, uint64_t, uint64_t))(v5[11] + 56LL))( a2,  *(void *)&v2[*(void *)((swift_isaMask & *(void *)v2) + 0x68LL)],  a1,  v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

double sub_100206B44(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  id v11 = a3;
  id v12 = a1;
  double v13 = sub_100206A60((uint64_t)v11, (uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

uint64_t sub_100206C04(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(swift_isaMask & *(void *)v2);
  uint64_t v6 = v5[10];
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v15 - v8;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)&v15 - v8, &v2[v5[12]], v6);
  uint64_t v10 = *(void *)&v2[*(void *)((swift_isaMask & *(void *)v2) + 0x68LL)];
  uint64_t v11 = v5[11];
  id v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 64);
  swift_retain(v10);
  uint64_t v13 = v12(a2, v10, a1, v6, v11);
  swift_release(v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

id sub_100206D00(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  id v11 = a3;
  id v12 = a1;
  uint64_t v13 = (void *)sub_100206C04((uint64_t)v11, (uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

uint64_t sub_100206DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)(swift_isaMask & *(void *)v3);
  uint64_t v8 = v7[10];
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(a1);
  id v11 = (char *)&v13 - v10;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)&v13 - v10, &v3[v7[12]], v8);
  (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v7[11] + 72LL))( a2,  a3,  *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x68LL)],  a1,  v8);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100206E9C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_10018AD14(a1, a2, a3, a4, a5, (void (*)(id, id, char *))sub_100206DB8);
}

uint64_t sub_100206EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)(swift_isaMask & *(void *)v3);
  uint64_t v8 = v7[10];
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(a1);
  id v11 = (char *)&v13 - v10;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)&v13 - v10, &v3[v7[12]], v8);
  (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v7[11] + 80LL))( a2,  a3,  *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x68LL)],  a1,  v8);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100206F8C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_10018AD14(a1, a2, a3, a4, a5, (void (*)(id, id, char *))sub_100206EA8);
}

uint64_t sub_100206F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1;
  uint64_t v7 = (void *)(swift_isaMask & *(void *)v3);
  uint64_t v8 = v7[10];
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(a1);
  id v11 = (char *)&v19 - v10;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)&v19 - v10, &v3[v7[12]], v8);
  uint64_t v12 = *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x68LL)];
  uint64_t v13 = v7[11];
  double v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 88);
  swift_retain(v12);
  LOBYTE(v5) = v14(a2, v12, v5, v8, v13);
  swift_release(v12);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v15 = type metadata accessor for IndexPath(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((v5 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a3, a2, v15);
    uint64_t v17 = 0LL;
  }

  else
  {
    uint64_t v17 = 1LL;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a3, v17, 1LL, v15);
}

Class sub_1002070DC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002DF650);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  id v14 = a3;
  id v15 = a1;
  sub_100206F98((uint64_t)v14, (uint64_t)v10, (uint64_t)v13);

  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  Class isa = 0LL;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1LL, v7) != 1)
  {
    NSIndexPath v20 = IndexPath._bridgeToObjectiveC()();
    Class isa = v20.super.isa;
    ((void (*)(char *, uint64_t, NSUInteger, void *))v16)(v13, v7, v20._length, v20._reserved);
  }

  return isa;
}

uint64_t sub_10020720C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(swift_isaMask & *(void *)v2);
  uint64_t v6 = v5[10];
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v14 - v8;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)&v14 - v8, &v2[v5[12]], v6);
  uint64_t v10 = *(void *)&v2[*(void *)((swift_isaMask & *(void *)v2) + 0x68LL)];
  uint64_t v11 = v5[11];
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 96);
  swift_retain(v10);
  v12(a2, v10, a1, v6, v11);
  swift_release(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100207300(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  id v11 = a3;
  id v12 = a1;
  sub_10020720C((uint64_t)v11, (uint64_t)v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1002073B0()
{
}

void sub_1002073CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  sub_100207768();
}

id sub_100207408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (objc_class *)type metadata accessor for FederatedTableViewController( 0LL,  *(void *)((swift_isaMask & *v4) + 0x50LL),  *(void *)((swift_isaMask & *v4) + 0x58LL),  a4);
  v7.id receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_100207454(char *a1)
{
  return swift_release(*(void *)&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x68LL)]);
}

uint64_t type metadata accessor for FederatedTableViewController( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006BA48(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FederatedTableViewController);
}

void sub_1002074BC()
{
}

uint64_t sub_100207514(uint64_t a1)
{
  uint64_t v2 = (void *)(swift_isaMask & *(void *)v1);
  uint64_t v3 = v2[10];
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v9 - v5;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)&v9 - v5, &v1[v2[12]], v3);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2[11] + 8LL))(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t sub_1002075C4(uint64_t a1)
{
  uint64_t v3 = (void *)(swift_isaMask & *(void *)v1);
  uint64_t v4 = v3[10];
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)&v10 - v6, &v1[v3[12]], v4);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3[11] + 16LL))(a1, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_10020767C(uint64_t a1)
{
  uint64_t v3 = (void *)(swift_isaMask & *(void *)v1);
  uint64_t v4 = v3[10];
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)&v10 - v6, &v1[v3[12]], v4);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3[11] + 32LL))(a1, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

void sub_10020773C()
{
}

void sub_100207768()
{
}

double sub_100207794(uint64_t *a1, double a2)
{
  return sub_100207C38(*a1, a2);
}

void sub_1002077A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7 = *a1;
  id v8 = objc_msgSend(a6, "traitCollection", swift_retain(*a1).n128_f64[0]);
  sub_100207864(v7, v8, v6);
  swift_release(v7);
}

__n128 sub_100207814@<Q0>(uint64_t a1@<X1>, void *a2@<X4>, uint64_t a3@<X8>)
{
  __int128 v4 = v6[3];
  *(_OWORD *)(a3 + 32) = v6[2];
  *(_OWORD *)(a3 + 48) = v4;
  *(_OWORD *)(a3 + 6swift_weakDestroy(v0 + 4) = v6[4];
  __n128 result = (__n128)v6[1];
  *(_OWORD *)a3 = v6[0];
  *(__n128 *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  return result;
}

uint64_t sub_100207864(uint64_t a1, void *a2, char *a3)
{
  uint64_t v6 = sub_1000031E8(&qword_1002E14D8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Brick(0LL);
  v23[3] = v9;
  void v23[4] = &protocol witness table for Brick;
  v23[0] = a1;
  sub_10001F010((uint64_t)v23, (uint64_t)v22);
  sub_10001F010((uint64_t)v23, (uint64_t)v21);
  uint64_t v10 = swift_allocObject(&unk_10028F938, 56LL, 7LL);
  sub_100009D90(v21, v10 + 16);
  swift_retain(a1);
  v11.n128_f64[0] = ChartOrCategoryBrickContext.init(model:fontStyles:in:)(v22, sub_100207A2C, v10, a2);
  uint64_t v12 = type metadata accessor for ChartOrCategoryBrickContext(0LL, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v8, 0LL, 1LL, v12);
  uint64_t v13 = (uint64_t)&a3[OBJC_IVAR____TtC6Arcade38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(&a3[OBJC_IVAR____TtC6Arcade38ChartOrCategoryBrickCollectionViewCell_brickContext], v22, 33LL, 0LL);
  sub_1000862A0((uint64_t)v8, v13);
  swift_endAccess(v22);
  sub_100084860(v14);
  uint64_t v15 = dispatch thunk of ChartOrCategoryBrick.brickTitle.getter(v9, &protocol witness table for Brick);
  sub_100083988(v15, v16);
  uint64_t v17 = dispatch thunk of ChartOrCategoryBrick.brickBadge.getter(v9, &protocol witness table for Brick);
  sub_100083974(v17, v18);
  [a3 setNeedsLayout];
  return _s6Arcade17PillOverlayLayoutVwxx_0(v23);
}

uint64_t sub_100207A08()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_100207A2C@<X0>(void *a1@<X8>)
{
  return sub_1000851E0((void *)(v1 + 16), a1);
}

int64x2_t sub_100207A34@<Q0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v5 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout.Metrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ChartOrCategoryBrickStyle(0LL, v7);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_getObjectType(a2);
  double v17 = (PageTraitEnvironment.pageContentSize.getter() + -120.0) * 0.25;
  uint64_t v18 = (*(uint64_t (**)(char *, void, uint64_t))(v11 + 104))( v13,  enum case for ChartOrCategoryBrickStyle.tile(_:),  v10);
  ChartOrCategoryBrickStyle.metrics.getter(v18);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  ChartOrCategoryBrickCollectionViewCellLayout.Metrics.artworkAspectRatio.getter(v19);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v20 = type metadata accessor for AspectRatio(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1LL, v20) == 1)
  {
    sub_100034DEC((uint64_t)v16);
    double v22 = 0.0;
  }

  else
  {
    double v22 = AspectRatio.height(fromWidth:)(v17);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v20);
  }

  [a2 pageMarginInsets];
  *(void *)a3 = v23;
  *(void *)(a3 + 8) = v24;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v25;
  *(void *)(a3 + 2swift_weakDestroy(v0 + 4) = v26;
  *(double *)(a3 + 32) = v17;
  *(double *)(a3 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = v22;
  int64x2_t result = vdupq_n_s64(0x4044000000000000uLL);
  *(int64x2_t *)(a3 + 48) = result;
  *(_BYTE *)(a3 + 6swift_weakDestroy(v0 + 4) = 0;
  *(void *)(a3 + 72) = v29;
  return result;
}

double sub_100207C38(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout.Metrics(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ChartOrCategoryBrickStyle(0LL, v6);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v22[1] = a1;
  uint64_t v16 = type metadata accessor for Brick(0LL);
  uint64_t v17 = ChartOrCategoryBrick.style.getter(v16, &protocol witness table for Brick);
  ChartOrCategoryBrickStyle.metrics.getter(v17);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  ChartOrCategoryBrickCollectionViewCellLayout.Metrics.artworkAspectRatio.getter(v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v19 = type metadata accessor for AspectRatio(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1LL, v19) == 1)
  {
    sub_100034DEC((uint64_t)v15);
  }

  else
  {
    AspectRatio.height(fromWidth:)(a2);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v19);
  }

  return a2;
}

uint64_t sub_100207DE4(uint64_t a1)
{
  v2[0] = "\b";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = &unk_100242DE0;
  return swift_initClassMetadata2(a1, 0LL, 5LL, v2, a1 + 640);
}

uint64_t sub_100207E4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v30 = a3;
  uint64_t v7 = *v4;
  uint64_t v8 = swift_isaMask;
  uint64_t v9 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = a1;
  Shelf.contentType.getter(v17);
  uint64_t v18 = sub_1001782D0();
  if (v18)
  {
    uint64_t v28 = v19;
    uint64_t v29 = v18;
    if ((dispatch thunk of ShelfPresenter.doesShelfExist(for:)( a2,  *(void *)((v8 & v7) + 0x260),  *(void *)((v8 & v7) + 0x278)) & 1) != 0) {
      uint64_t v20 = (*(uint64_t (**)(uint64_t))(**(void **)((char *)v4 + qword_1002EDBC8) + 336LL))(a2);
    }
    else {
      uint64_t v20 = 0LL;
    }
    char v21 = Shelf.isHorizontal.getter();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    int v22 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
    if (v22 != enum case for Shelf.ContentType.smallLockup(_:)
      && v22 != enum case for Shelf.ContentType.mediumLockup(_:))
    {
      if (v22 == enum case for Shelf.ContentType.largeLockup(_:))
      {
LABEL_12:
        char v24 = 1;
        goto LABEL_13;
      }

      if (v22 != enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
        && v22 != enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
        && v22 != enum case for Shelf.ContentType.action(_:)
        && v22 != enum case for Shelf.ContentType.editorialCard(_:)
        && v22 != enum case for Shelf.ContentType.videoCard(_:))
      {
        char v24 = 1;
        if (v22 == enum case for Shelf.ContentType.brick(_:)
          || v22 == enum case for Shelf.ContentType.categoryBrick(_:))
        {
          goto LABEL_13;
        }

        if (v22 != enum case for Shelf.ContentType.reviews(_:)
          && v22 != enum case for Shelf.ContentType.appTrailerLockup(_:)
          && v22 != enum case for Shelf.ContentType.framedVideo(_:)
          && v22 != enum case for Shelf.ContentType.screenshotsLockup(_:)
          && v22 != enum case for Shelf.ContentType.smallStoryCard(_:)
          && v22 != enum case for Shelf.ContentType.mediumStoryCard(_:))
        {
          if (v22 == enum case for Shelf.ContentType.largeStoryCard(_:)) {
            goto LABEL_12;
          }
          if (v22 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
            && v22 != enum case for Shelf.ContentType.upsellBreakout(_:)
            && v22 != enum case for Shelf.ContentType.smallBreakout(_:)
            && v22 != enum case for Shelf.ContentType.mixedMediaLockup(_:)
            && v22 != enum case for Shelf.ContentType.arcadeFooter(_:)
            && v22 != enum case for Shelf.ContentType.textCard(_:)
            && v22 != enum case for Shelf.ContentType.smallGameCenterPlayer(_:)
            && v22 != enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
            && v22 != enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:))
          {
            char v24 = v21;
            if (v22 != enum case for Shelf.ContentType.posterLockup(_:))
            {
              (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
              char v24 = 0;
            }

            goto LABEL_13;
          }
        }
      }
    }

    char v24 = v21;
LABEL_13:
    uint64_t v25 = v24 & 1;
    sub_1000D2C54((uint64_t)v15, v24 & 1, v20, v4, v30);
    (*(void (**)(uint64_t, uint64_t, uint64_t *, void))(v28 + 32))( v16,  v25,  v4,  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_artworkLoader));
  }

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

void sub_100208240()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(swift_isaMask & *(void *)v0);
  uint64_t v3 = type metadata accessor for JULoadingViewController.PresentationContext(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = v2[76];
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v6, v2[79]))
  {
    uint64_t v7 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
    uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
    id v9 = v8;
    static ViewControllerContainment.remove(_:)(v8);

    uint64_t v10 = *(void **)&v1[v7];
    *(void *)&v1[v7] = 0LL;

    uint64_t v11 = *(void **)&v1[v7];
    id v42 = v11;
    id v12 = [v1 view];
    if (v12)
    {
      uint64_t v13 = v12;
      [v12 bounds];
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;

      uint64_t v43 = v15;
      uint64_t v44 = v17;
      uint64_t v45 = v19;
      uint64_t v46 = v21;
      char v47 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v11, v1, &v43);

      return;
    }

    __break(1u);
  }

  else
  {
    uint64_t v22 = dispatch thunk of MetricsPagePresenter.pageRenderMetrics.getter(v6, v2[77]);
    static JULoadingViewController.PresentationContext.placeholder.getter(v22);
    id v23 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
    char v24 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v5, v22);
    uint64_t v25 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
    uint64_t v26 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
    id v27 = v26;
    static ViewControllerContainment.remove(_:)(v26);

    uint64_t v28 = *(void **)&v1[v25];
    *(void *)&v1[v25] = v24;
    id v29 = v24;

    uint64_t v30 = *(void **)&v1[v25];
    id v31 = v30;
    id v32 = [v1 view];
    if (v32)
    {
      uint64_t v33 = v32;
      [v32 bounds];
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      uint64_t v39 = v38;
      uint64_t v41 = v40;

      uint64_t v43 = v35;
      uint64_t v44 = v37;
      uint64_t v45 = v39;
      uint64_t v46 = v41;
      char v47 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v30, v1, &v43);

      return;
    }
  }

  __break(1u);
}

void sub_10020849C()
{
  uint64_t v1 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
  if (v2)
  {
    uint64_t v3 = type metadata accessor for JULoadingViewController(0LL);
    if (swift_dynamicCastClass(v2, v3))
    {
      id v4 = v2;
      static ViewControllerContainment.remove(_:)(v2);

      uint64_t v5 = *(void **)&v0[v1];
      *(void *)&v0[v1] = 0LL;

      uint64_t v6 = *(void **)&v0[v1];
      id v17 = v6;
      id v7 = [v0 view];
      if (v7)
      {
        uint64_t v8 = v7;
        [v7 bounds];
        uint64_t v10 = v9;
        uint64_t v12 = v11;
        uint64_t v14 = v13;
        uint64_t v16 = v15;

        v18[0] = v10;
        v18[1] = v12;
        v18[2] = v14;
        void v18[3] = v16;
        char v19 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v6, v0, v18);
      }

      else
      {
        __break(1u);
      }
    }
  }

void sub_1002085AC(uint64_t a1)
{
  id v3 = [v1 collectionView];
  sub_1000D41A8(a1, v3);
}

void sub_100208624(uint64_t a1)
{
  id v3 = [v1 collectionView];
  if (v3)
  {
    id v4 = v3;
    id v5 = [v3 collectionViewLayout];

    [v5 invalidateLayout];
  }

  id v6 = [v1 collectionView];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = sub_1000031E8(&qword_1002ECC00);
    uint64_t v9 = type metadata accessor for IndexPath(0LL);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v12 = (v11 + 32) & ~v11;
    uint64_t v13 = swift_allocObject(v8, v12 + *(void *)(v10 + 72), v11 | 7);
    *(_OWORD *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13 + v12, a1, v9);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v7, "reloadItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);
  }

void sub_100208774(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = swift_isaMask & *v1;
  uint64_t v5 = type metadata accessor for IndexSet(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  id v8 = objc_msgSend(v1, "collectionView", __chkstk_darwin(v5).n128_f64[0]);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 collectionViewLayout];

    [v10 invalidateLayout];
  }

  uint64_t v11 = sub_100003B6C( &qword_1002EDCD8,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet,  (uint64_t)&protocol conformance descriptor for IndexSet);
  sub_1000CA5A4(a1, v5, v11);
  uint64_t v12 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))( (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v5);
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = (v13 + 56) & ~v13;
  uint64_t v15 = swift_allocObject(&unk_10028FAF0, v14 + v7, v13 | 7);
  *(void *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v4 + 608);
  *(_OWORD *)(v15 + 2swift_weakDestroy(v0 + 4) = *(_OWORD *)(v4 + 616);
  *(void *)(v15 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(v4 + 632);
  *(void *)(v15 + 48) = v2;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))( v15 + v14,  (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v5);
  uint64_t v16 = swift_allocObject(&unk_10028FB18, 32LL, 7LL);
  *(void *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10020C468;
  *(void *)(v16 + 2swift_weakDestroy(v0 + 4) = v15;
  aBlock[4] = sub_10004B0D0;
  uint64_t v22 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100209610;
  void aBlock[3] = &unk_10028FB30;
  id v17 = _Block_copy(aBlock);
  uint64_t v18 = v22;
  id v19 = v2;
  swift_retain(v16);
  objc_msgSend(v12, "performWithoutAnimation:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v16, "", 131LL, 267LL, 40LL, 1LL);
  swift_release(v15);
  swift_release(v16);
  if ((isEscapingClosureAtFileLocation & 1) != 0) {
    __break(1u);
  }
}

void sub_1002089E0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)(swift_isaMask & *(void *)v1);
  uint64_t v5 = type metadata accessor for OSLogger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *(void *)&v1[qword_1002EDBC0];
  uint64_t v10 = v4[76];
  uint64_t v11 = v4[79];
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v10, v11))
  {
    id v44 = a1;
    if (qword_1002DC378 != -1) {
      swift_once(&qword_1002DC378, sub_100018F7C);
    }
    uint64_t v12 = sub_1000061F4(v5, (uint64_t)qword_1002EE540);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v12, v5);
    uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v14 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    id v42 = v8;
    uint64_t v43 = v6;
    uint64_t v15 = swift_allocObject( v13,  ((*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
          + 3LL * *(void *)(v14 + 72),
            *(unsigned __int8 *)(v14 + 80) | 7LL);
    *(_OWORD *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
    uint64_t v48 = (char *)v10;
    __int128 v49 = *(_OWORD *)(v4 + 77);
    uint64_t v50 = v11;
    uint64_t v50 = type metadata accessor for BaseShelfViewController(0LL, (uint64_t)&v48);
    uint64_t v48 = v2;
    uint64_t v16 = v2;
    static LogMessage.safe(_:)(&v48);
    sub_100029100((uint64_t)&v48);
    LogMessage.init(stringLiteral:)(0xD00000000000002ELL, 0x8000000100249820LL);
    swift_getErrorValue(v44, v47, &v45);
    uint64_t v17 = v45;
    uint64_t v18 = v46;
    uint64_t v50 = v46;
    id v19 = sub_100009D54(&v48);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16LL))(v19, v17, v18);
    static LogMessage.sensitive(_:)(&v48);
    sub_100029100((uint64_t)&v48);
    uint64_t v20 = v42;
    Logger.error(_:)(v15, v5, &protocol witness table for OSLogger);
    __n128 v21 = swift_bridgeObjectRelease(v15);
    (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v20, v5, v21);
  }

  else
  {
    type metadata accessor for ErrorShieldView();
    uint64_t v22 = sub_100135434((uint64_t)a1, v9, v10, v4[77]);
    id v23 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
    char v24 = v22;
    uint64_t v25 = (void *)OverlayViewController.init(overlayView:)(v24);
    uint64_t v26 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
    id v27 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
    id v28 = v27;
    static ViewControllerContainment.remove(_:)(v27);

    id v29 = *(void **)&v2[v26];
    *(void *)&v2[v26] = v25;
    id v30 = v25;

    id v31 = *(void **)&v2[v26];
    id v44 = v31;
    id v32 = [v2 view];
    if (v32)
    {
      uint64_t v33 = v32;
      [v32 bounds];
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      uint64_t v39 = v38;
      uint64_t v41 = v40;

      uint64_t v48 = v35;
      *(void *)&__int128 v49 = v37;
      *((void *)&v49 + 1) = v39;
      uint64_t v50 = v41;
      char v51 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v31, v2, &v48);
    }

    else
    {
      __break(1u);
    }
  }

void sub_100208D54()
{
  id v1 = [v0 collectionView];
  sub_1000CA420(v1);
}

void sub_100208DA4()
{
  id v1 = v0;
  uint64_t v2 = *(void *)&v0[qword_1002EDBC8];
  id v3 = [v1 collectionView];
  (*(void (**)(void))(*(void *)v2 + 240LL))();
}

uint64_t sub_100208DFC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = swift_isaMask;
  uint64_t v5 = type metadata accessor for OSLogger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC378 != -1) {
    swift_once(&qword_1002DC378, sub_100018F7C);
  }
  uint64_t v9 = v4 & v3;
  uint64_t v10 = sub_1000061F4(v5, (uint64_t)qword_1002EE540);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v12 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v13 = swift_allocObject( v11,  ((*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
        + 3LL * *(void *)(v12 + 72),
          *(unsigned __int8 *)(v12 + 80) | 7LL);
  *(_OWORD *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
  __int128 v14 = *(_OWORD *)(v9 + 624);
  __int128 v24 = *(_OWORD *)(v9 + 608);
  __int128 v25 = v14;
  *((void *)&v25 + 1) = type metadata accessor for BaseShelfViewController(0LL, (uint64_t)&v24);
  *(void *)&__int128 v24 = v1;
  uint64_t v15 = v1;
  static LogMessage.safe(_:)(&v24);
  sub_100029100((uint64_t)&v24);
  LogMessage.init(stringLiteral:)(0xD00000000000002CLL, 0x800000010024BE80LL);
  swift_getErrorValue(a1, v23, &v21);
  uint64_t v16 = v21;
  uint64_t v17 = v22;
  *((void *)&v25 + 1) = v22;
  uint64_t v18 = sub_100009D54(&v24);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16LL))(v18, v16, v17);
  static LogMessage.sensitive(_:)(&v24);
  sub_100029100((uint64_t)&v24);
  Logger.error(_:)(v13, v5, &protocol witness table for OSLogger);
  __n128 v19 = swift_bridgeObjectRelease(v13);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v19);
}

void sub_100209000(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = swift_isaMask;
  uint64_t v61 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v8 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v59 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v60 = (char *)&v56 - v11;
  uint64_t v12 = type metadata accessor for IndexPath(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v62 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&double v16 = __chkstk_darwin(v15).n128_u64[0];
  uint64_t v18 = (char *)&v56 - v17;
  id v63 = objc_msgSend(v3, "collectionViewLayout", v16);
  uint64_t v19 = objc_opt_self(&OBJC_CLASS___UICollectionViewFlowLayout);
  uint64_t v20 = swift_dynamicCastObjCClass(v63, v19);
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    uint64_t ObjectType = swift_getObjectType(a1);
    uint64_t v23 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FocusExtendableItem);
    uint64_t v24 = v23 ? v23 : 0LL;
    __int128 v25 = v23 ? a1 : 0LL;
    if (v25)
    {
      uint64_t v56 = v25;
      uint64_t v57 = v24;
      id v58 = a1;
      if ([v21 scrollDirection])
      {

        return;
      }

      id v26 = [v3 collectionView];
      if (v26)
      {
        id v27 = v26;
        uint64_t v28 = v7 & v6;
        *(void *)&double v29 = IndexPath.section.getter(v26).n128_u64[0];
        uint64_t v31 = (uint64_t)objc_msgSend(v27, "numberOfItemsInSection:", v30, v29);
        if (v31 < 1)
        {

          uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
          v36(v18, a2, v12);
          goto LABEL_19;
        }

        uint64_t v32 = v31;
        uint64_t v33 = IndexPath.item.getter(v31);

        BOOL v34 = __OFADD__(v33, 1LL);
        uint64_t v35 = v33 + 1;
        if (!v34)
        {
          uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
          uint64_t v37 = ((uint64_t (*)(char *, uint64_t, uint64_t))v36)(v18, a2, v12);
          if (v32 == v35)
          {
            IndexPath.section.getter(v37);
            char v39 = dispatch thunk of ShelfPresenter.doesShelfExist(for:)( v38,  *(void *)(v28 + 608),  *(void *)(v28 + 632));
            goto LABEL_20;
          }

uint64_t sub_100209610(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_100209630()
{
  id v1 = v0;
  uint64_t v2 = (void *)(swift_isaMask & *v0);
  uint64_t v3 = v2[76];
  uint64_t v4 = v2[79];
  dispatch thunk of ShelfPresenter.sectionCount.getter(v3, v4);
  id v5 = objc_msgSend(v0, "collectionView", sub_1000D4E40());
  [v5 reloadData];

  uint64_t v6 = v2[77];
  uint64_t v7 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v3, v6);
  if (v7)
  {
    uint64_t v8 = v7;
    PendingPageRender.isLayoutPending.setter(1LL);
    swift_release(v8);
  }

  uint64_t v9 = sub_1002097B0();
  if (v9)
  {
    uint64_t v15 = (char *)v9;
    uint64_t v10 = swift_allocObject(&unk_10028FAA0, 24LL, 7LL);
    swift_unknownObjectWeakInit(v10 + 16, v1);
    uint64_t v11 = (double (*)(uint64_t))swift_allocObject(&unk_10028FAC8, 56LL, 7LL);
    *((void *)v11 + 2) = v3;
    *((void *)v11 + 3) = v6;
    *((void *)v11 + swift_weakDestroy(v0 + 4) = v2[78];
    *((void *)v11 + 5) = v4;
    *((void *)v11 + 6) = v10;
    uint64_t v12 = (double (**)(uint64_t))&v15[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver];
    uint64_t v14 = *(void *)&v15[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver];
    uint64_t v13 = *(void *)&v15[OBJC_IVAR____TtC6Arcade29CollectionViewTableFlowLayout_pendingPrepareObserver + 8];
    *uint64_t v12 = sub_10020C3E4;
    v12[1] = v11;
    sub_10000D3D8(v14, v13);
  }

uint64_t sub_1002097B0()
{
  id v1 = [v0 collectionViewLayout];
  uint64_t v2 = type metadata accessor for CollectionViewTableFlowLayout();
  uint64_t result = swift_dynamicCastClass(v1, v2);
  if (!result)
  {

    return 0LL;
  }

  return result;
}

void sub_100209804(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = swift_isaMask;
  id v6 = [v2 collectionView];
  if (!v6) {
    return;
  }
  uint64_t v7 = v6;
  uint64_t v8 = v5 & v4;
  uint64_t v20 = a1 + 56;
  uint64_t v9 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v10 = -1LL;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  int64_t v21 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  int64_t v12 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_6;
    }

    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
      __break(1u);
      goto LABEL_25;
    }

    if (v17 >= v21) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v20 + 8 * v17);
    ++v12;
    if (!v18)
    {
      int64_t v12 = v17 + 1;
      if (v17 + 1 >= v21) {
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v20 + 8 * v12);
      if (!v18)
      {
        int64_t v12 = v17 + 2;
        if (v17 + 2 >= v21) {
          goto LABEL_22;
        }
        unint64_t v18 = *(void *)(v20 + 8 * v12);
        if (!v18) {
          break;
        }
      }
    }

uint64_t sub_100209A0C()
{
  id v1 = v0;
  uint64_t v3 = (__int128 *)((swift_isaMask & *v0) + 616LL);
  uint64_t v4 = *(void *)((swift_isaMask & *v0) + 0x278LL);
  uint64_t v12 = *(void *)((swift_isaMask & *v0) + 0x260LL);
  uint64_t v2 = v12;
  __int128 v13 = *v3;
  __int128 v11 = v13;
  uint64_t v14 = v4;
  uint64_t v5 = (objc_class *)type metadata accessor for BaseShelfViewController(0LL, (uint64_t)&v12);
  v15.id receiver = v0;
  v15.super_class = v5;
  objc_msgSendSuper2(&v15, "viewDidLoad");
  uint64_t v6 = *(void *)((char *)v0 + qword_1002EDBD8);
  swift_retain(v6);
  dispatch thunk of InfiniteScrollObserver.isEnabled.setter(0LL);
  swift_release(v6);
  dispatch thunk of UpdatablePresenter.didLoad()(v2, *(void *)(v11 + 24));
  id v7 = [v1 collectionView];
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 setPrefetchDataSource:v1];
  }

  id v9 = objc_msgSend(v1, "collectionView", v11);
  sub_1000D4CF8(v9);

  return sub_100209B2C((uint64_t)v1);
}

uint64_t sub_100209B2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + qword_1002EDBD8);
  swift_retain(v1);
  dispatch thunk of InfiniteScrollObserver.isEnabled.setter(1LL);
  return swift_release(v1);
}

void sub_100209B64(void *a1)
{
  id v1 = a1;
  sub_100209A0C();
}

void sub_100209B98(char a1)
{
  __int128 v3 = *(_OWORD *)((swift_isaMask & *v1) + 0x270LL);
  v7[0] = *(_OWORD *)((swift_isaMask & *v1) + 0x260LL);
  v7[1] = v3;
  uint64_t v4 = (objc_class *)type metadata accessor for BaseShelfViewController(0LL, (uint64_t)v7);
  v8.id receiver = v1;
  v8.super_class = v4;
  objc_msgSendSuper2(&v8, "viewWillAppear:", a1 & 1);
  uint64_t v5 = type metadata accessor for PlaybackCoordinator(0LL);
  BaseObjectGraph.optional<A>(_:)(v7, v5, v5);
  if (*(void *)&v7[0])
  {
    id v6 = *(id *)&v7[0];
    dispatch thunk of PlaybackCoordinator.resume()();
  }

void sub_100209C3C(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100209B98(a3);
}

double sub_100209C7C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + 0x260LL);
  uint64_t v5 = (__int128 *)((swift_isaMask & *v2) + 616LL);
  uint64_t v6 = *(void *)((swift_isaMask & *v2) + 0x278LL);
  uint64_t v18 = v4;
  __int128 v17 = *v5;
  __int128 v19 = *v5;
  uint64_t v20 = v6;
  id v7 = (objc_class *)type metadata accessor for BaseShelfViewController(0LL, (uint64_t)&v18);
  v21.id receiver = v2;
  v21.super_class = v7;
  objc_msgSendSuper2(&v21, "viewDidAppear:", a1 & 1);
  uint64_t v8 = *(void *)((char *)v2 + qword_1002EDBC8);
  uint64_t v9 = *(void *)(v8 + 96);
  if (v9)
  {
    swift_retain(*(void *)(v8 + 96));
    ImpressionsCalculator.isVisible.setter(1LL);
    swift_release(v9);
  }

  uint64_t v10 = type metadata accessor for MetricsActivity(0LL);
  uint64_t v12 = static MetricsActivity.current.getter(v10, v11);
  uint64_t v13 = dispatch thunk of MetricsPagePresenter.referrer.getter(v4, v17);
  uint64_t v15 = v14;
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(v13);
  swift_release(v12);
  *(void *)&double result = swift_bridgeObjectRelease(v15).n128_u64[0];
  return result;
}

void sub_100209D7C(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100209C7C(a3);
}

void sub_100209DBC(char a1)
{
  uint64_t v2 = v1;
  __int128 v4 = *(_OWORD *)((swift_isaMask & *v2) + 0x270LL);
  v13[0] = *(_OWORD *)((swift_isaMask & *v2) + 0x260LL);
  v13[1] = v4;
  uint64_t v5 = (objc_class *)type metadata accessor for BaseShelfViewController(0LL, (uint64_t)v13);
  v14.id receiver = v2;
  v14.super_class = v5;
  objc_msgSendSuper2(&v14, "viewWillDisappear:", a1 & 1);
  uint64_t v6 = *(void *)((char *)v2 + qword_1002EDBC8);
  uint64_t v7 = *(void *)(v6 + 96);
  if (v7)
  {
    swift_retain(*(void *)(v6 + 96));
    ImpressionsCalculator.isVisible.setter(0LL);
    swift_release(v7);
  }

  uint64_t v8 = type metadata accessor for MetricsActivity(0LL);
  uint64_t v10 = static MetricsActivity.current.getter(v8, v9);
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(0LL);
  swift_release(v10);
  uint64_t v11 = type metadata accessor for PlaybackCoordinator(0LL);
  BaseObjectGraph.optional<A>(_:)(v13, v11, v11);
  if (*(void *)&v13[0])
  {
    id v12 = *(id *)&v13[0];
    dispatch thunk of PlaybackCoordinator.pause()();
  }

void sub_100209EB8(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100209DBC(a3);
}

void sub_100209EF8(void *a1, double a2, double a3)
{
  __int128 v7 = *(_OWORD *)((swift_isaMask & *v3) + 0x270LL);
  v16[0] = *(_OWORD *)((swift_isaMask & *v3) + 0x260LL);
  v16[1] = v7;
  uint64_t v8 = (objc_class *)type metadata accessor for BaseShelfViewController(0LL, (uint64_t)v16);
  v17.id receiver = v3;
  v17.super_class = v8;
  objc_msgSendSuper2(&v17, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  if ([v3 isViewLoaded])
  {
    id v9 = [v3 traitCollection];
    uint64_t v10 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
    uint64_t v11 = (char *)objc_allocWithZone(v10);
    id v12 = (double *)&v11[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_pageContainerSize];
    *id v12 = a2;
    v12[1] = a3;
    *(void *)&v11[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_traitCollection] = v9;
    v15.id receiver = v11;
    v15.super_class = v10;
    id v13 = objc_msgSendSuper2(&v15, "init");
    id v14 = [v3 collectionView];
    sub_1000D4B58(a1, v14);
  }

void sub_10020A040(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9 = a1;
  sub_100209EF8(a5, a2, a3);
  swift_unknownObjectRelease(a5);
}

double sub_10020A0AC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath(0LL);
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v7);
  id v9 = a3;
  id v10 = a1;
  sub_10020B738(v8);

  *(void *)&double result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

double sub_10020A114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    id v9 = sub_1000B93C0();
    sub_100209804((uint64_t)v9);

    swift_bridgeObjectRelease(v9);
  }

  swift_beginAccess(v6, &v15, 0LL, 0LL);
  uint64_t v10 = swift_unknownObjectWeakLoadStrong(v6);
  if (v10)
  {
    id v12 = (void *)v10;
    uint64_t v13 = *(void *)(v10 + qword_1002EDBC0);
    swift_unknownObjectRetain(v13);

    uint64_t v14 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(a3, a4);
    *(void *)&double result = swift_unknownObjectRelease(v13).n128_u64[0];
    if (v14)
    {
      PendingPageRender.isLayoutPending.setter(0LL);
      *(void *)&double result = swift_release(v14).n128_u64[0];
    }
  }

  return result;
}

void sub_10020A200(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexSet(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v9 = objc_msgSend(a1, "collectionView", v6);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002E9FE0);
    uint64_t v12 = swift_allocObject(v11, 40LL, 7LL);
    *(_OWORD *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    *(void *)(v12 + 32) = a2;
    uint64_t v20 = v12;
    uint64_t v13 = sub_100003B6C( &qword_1002E8300,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet,  (uint64_t)&protocol conformance descriptor for IndexSet);
    uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002DE0E0);
    unint64_t v15 = sub_10000D434();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v14, v15, v4, v13);
    IndexSet._bridgeToObjectiveC()(v16);
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    [v10 reloadSections:v18];
  }

void sub_10020A348(void *a1)
{
  id v1 = a1;
  sub_100208D54();
}

void sub_10020A37C(void *a1)
{
  id v1 = a1;
  sub_100208DA4();
}

void sub_10020A3B0(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v4 = a1;
  sub_100208DFC((uint64_t)v5);
}

uint64_t sub_10020A3F4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  uint64_t v6 = sub_10020C2DC();

  return v6;
}

uint64_t sub_10020A43C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  uint64_t v6 = sub_10020C304();

  return v6;
}

uint64_t sub_10020A48C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  LOBYTE(a5) = sub_10020BA74(a5);

  return a5 & 1;
}

double sub_10020A4F4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_10018B640(a1, a2, a3, a4, a5, sub_10020BAA0);
}

uint64_t sub_10020A500(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  LOBYTE(a5) = sub_10020BACC(a5);

  return a5 & 1;
}

uint64_t sub_10020A568(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  uint64_t v11 = sub_10020BB34(a5);

  return v11;
}

double sub_10020A5D0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  double v11 = sub_10020BC84(a5);

  return v11;
}

double sub_10020A640(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_10020A658(a1, a2, a3, a4, a5, sub_10020BE38);
}

double sub_10020A64C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_10020A658(a1, a2, a3, a4, a5, sub_10020BE70);
}

double sub_10020A658( void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, double (*a6)(id, uint64_t))
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a1;
  double v13 = a6(v10, a5);

  return v13;
}

double sub_10020A6DC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_10018B640(a1, a2, a3, a4, a5, (double (*)(uint64_t))sub_10020BEA8);
}

double sub_10020A6E8(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  double v11 = sub_10020BEDC(a5);

  return v11;
}

double sub_10020A758(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  double v11 = sub_10020BF08(a5);

  return v11;
}

uint64_t sub_10020A7C8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1000CBFD4(a2, a3, a4, a1);
}

id sub_10020A804(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  unint64_t v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  id v16 = a3;
  id v17 = a1;
  uint64_t v18 = (void *)sub_10020A7C8(v16, v13, v15, (uint64_t)v12);

  __n128 v19 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v19);
  return v18;
}

void sub_10020A8EC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10020A974(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for IndexPath(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  uint64_t v17 = v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  id v18 = a3;
  id v19 = a4;
  id v20 = a1;
  sub_10020A8EC(v18, v19, v15, v17);

  __n128 v21 = swift_bridgeObjectRelease(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
}

Class sub_10020AA6C()
{
  unint64_t v0 = sub_10020BF34();
  if (v0)
  {
    unint64_t v1 = v0;
    v2.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v1);
  }

  else
  {
    v2.super.Class isa = 0LL;
  }

  return v2.super.isa;
}

double sub_10020AAEC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  id v13 = a3;
  id v14 = a4;
  id v15 = a1;
  double v16 = sub_10020C044((uint64_t)v13, (uint64_t)v12);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v16;
}

id sub_10020ABCC(void *a1, char *a2)
{
  return sub_1000CEE70( a2,  *(void (**)(char *, char *, uint64_t))(v2 + OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_artworkLoader),  v2,  *(void *)(v2 + OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_objectGraph),  a1);
}

id sub_10020AC24(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  id v11 = a3;
  id v12 = a1;
  id v13 = sub_10020ABCC(v11, v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

uint64_t sub_10020ACDC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  id v13 = a3;
  id v14 = a4;
  id v15 = a1;
  sub_10020C334(v14, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_10020ADA4(void *a1, void *a2, uint64_t a3)
{
}

uint64_t sub_10020AE00(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  id v13 = a3;
  id v14 = a4;
  id v15 = a1;
  sub_10020ADA4(v13, v14, (uint64_t)v12);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

BOOL sub_10020AECC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  id v11 = a3;
  id v12 = a1;
  NSIndexPath v20 = IndexPath._bridgeToObjectiveC()();
  Class isa = v20.super.isa;
  id v14 = objc_msgSend(v11, "cellForItemAtIndexPath:", v20.super.isa, v20._reserved);

  if (v14)
  {
    uint64_t ObjectType = swift_getObjectType(v14);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerView)) {
      id v16 = v14;
    }
    else {
      id v16 = 0LL;
    }
    BOOL v17 = v16 == 0LL;

    id v11 = v12;
    id v12 = v14;
  }

  else
  {
    BOOL v17 = 0LL;
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v17;
}

void sub_10020AFE4(void *a1, void *a2)
{
}

uint64_t sub_10020B028(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  id v11 = a3;
  id v12 = a1;
  sub_10020AFE4(v11, v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_10020B0D8(void *a1, void *a2)
{
  __int128 v5 = *(_OWORD *)((swift_isaMask & *v2) + 0x270LL);
  v9[0] = *(_OWORD *)((swift_isaMask & *v2) + 0x260LL);
  v9[1] = v5;
  uint64_t v6 = (objc_class *)type metadata accessor for BaseShelfViewController(0LL, (uint64_t)v9);
  v10.id receiver = v2;
  v10.super_class = v6;
  objc_msgSendSuper2(&v10, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  id v7 = [v2 collectionView];
  if (v7)
  {
    uint64_t v8 = v7;
    sub_1000D0740(a1, a2, v7);
  }

  else
  {
    __break(1u);
  }

void sub_10020B194(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_10020B0D8(v6, v7);
}

id sub_10020B1FC(uint64_t a1)
{
  return [*(id *)(v1 + qword_1002EDBD0) scrollViewWillBeginDecelerating:a1];
}

void sub_10020B218(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10020B1FC((uint64_t)v4);
}

id sub_10020B26C(uint64_t a1)
{
  return [*(id *)(v1 + qword_1002EDBD0) scrollViewDidEndDecelerating:a1];
}

void sub_10020B288(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10020B26C((uint64_t)v4);
}

id sub_10020B2DC(uint64_t a1)
{
  __int128 v3 = *(_OWORD *)((swift_isaMask & *v1) + 0x270LL);
  v6[0] = *(_OWORD *)((swift_isaMask & *v1) + 0x260LL);
  v6[1] = v3;
  id v4 = (objc_class *)type metadata accessor for BaseShelfViewController(0LL, (uint64_t)v6);
  v7.id receiver = v1;
  v7.super_class = v4;
  objc_msgSendSuper2(&v7, "scrollViewDidScroll:", a1);
  return [*(id *)((char *)v1 + qword_1002EDBD0) scrollViewDidScroll:a1];
}

void sub_10020B360(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10020B2DC((uint64_t)v4);
}

id sub_10020B3B4(uint64_t a1)
{
  return [*(id *)(v1 + qword_1002EDBD0) scrollViewWillBeginDragging:a1];
}

void sub_10020B3D0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10020B3B4((uint64_t)v4);
}

id sub_10020B424(uint64_t a1, char a2)
{
  return [*(id *)(v2 + qword_1002EDBD0) scrollViewDidEndDragging:a1 willDecelerate:a2 & 1];
}

void sub_10020B448(void *a1, uint64_t a2, void *a3, char a4)
{
  id v6 = a3;
  id v7 = a1;
  sub_10020B424((uint64_t)v6, a4);
}

void sub_10020B4A4(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_10020C08C(v7);
}

uint64_t sub_10020B508()
{
  swift_release(*(void *)(v0 + qword_1002EDBD8));
  return swift_release(*(void *)(v0 + qword_1002EDBE0));
}

id sub_10020B564()
{
  __int128 v1 = *(_OWORD *)((swift_isaMask & *v0) + 0x270LL);
  v4[0] = *(_OWORD *)((swift_isaMask & *v0) + 0x260LL);
  v4[1] = v1;
  uint64_t v2 = (objc_class *)type metadata accessor for BaseShelfViewController(0LL, (uint64_t)v4);
  v5.id receiver = v0;
  v5.super_class = v2;
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t sub_10020B5B8(uint64_t a1)
{
  swift_release(*(void *)(a1 + qword_1002EDBD8));
  return swift_release(*(void *)(a1 + qword_1002EDBE0));
}

uint64_t type metadata accessor for BaseShelfViewController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for BaseShelfViewController);
}

uint64_t sub_10020B62C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2E8LL))();
}

void sub_10020B648(uint64_t a1, void *a2)
{
}

uint64_t sub_10020B658()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2D8LL))();
}

uint64_t sub_10020B67C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2F0LL))();
}

uint64_t sub_10020B698(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100242E48, a1);
}

uint64_t sub_10020B6A8(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100242E20, a1);
}

uint64_t sub_10020B6B8(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100242E70, a1);
}

uint64_t sub_10020B6C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)(v2, &type metadata for Int, &protocol witness table for Int);
  uint64_t v7 = result;
  if (v2)
  {
    id v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_10001B1C4(&v6, v5);
      --v2;
    }

    while (v2);
    return v7;
  }

  return result;
}

double sub_10020B738(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v7 = *(void *)(a1 + 16);
  id v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v20 = v1;
    uint64_t v23 = _swiftEmptyArrayStorage;
    sub_100026F08(0LL, v7, 0);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    __n128 v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v22 = v10;
    uint64_t v11 = v4;
    do
    {
      uint64_t v12 = v21(v6, v9, v3);
      __n128 v13 = IndexPath.section.getter(v12);
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v13);
      id v8 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
      {
        sub_100026F08(0LL, v8[2] + 1LL, 1);
        id v8 = v23;
      }

      unint64_t v17 = v8[2];
      unint64_t v16 = v8[3];
      if (v17 >= v16 >> 1)
      {
        sub_100026F08((char *)(v16 > 1), v17 + 1, 1);
        id v8 = v23;
      }

      v8[2] = v17 + 1;
      v8[v17 + 4] = v15;
      v9 += v22;
      --v7;
      uint64_t v4 = v11;
    }

    while (v7);
  }

  uint64_t v18 = sub_10020B6C8((uint64_t)v8);
  swift_bridgeObjectRelease(v8);
  sub_100209804(v18);
  *(void *)&double result = swift_bridgeObjectRelease(v18).n128_u64[0];
  return result;
}

void sub_10020B8D8(void *a1)
{
  if (a1)
  {
    id v2 = [a1 integerValue];
    uint64_t v3 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v4 = swift_allocObject(&unk_10028FA28, 32LL, 7LL);
    *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
    *(void *)(v4 + 2swift_weakDestroy(v0 + 4) = v2;
    uint64_t v5 = swift_allocObject(&unk_10028FA50, 32LL, 7LL);
    *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10020BA44;
    *(void *)(v5 + 2swift_weakDestroy(v0 + 4) = v4;
    v10[4] = sub_10004AECC;
    uint64_t v11 = v5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256LL;
    void v10[2] = sub_100209610;
    v10[3] = &unk_10028FA68;
    uint64_t v6 = _Block_copy(v10);
    uint64_t v7 = v11;
    id v8 = v1;
    swift_retain(v5);
    objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release(v7).n128_f64[0]);
    _Block_release(v6);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 131LL, 295LL, 40LL, 1LL);
    swift_release(v4);
    swift_release(v5);
    if ((isEscapingClosureAtFileLocation & 1) != 0) {
      __break(1u);
    }
  }

uint64_t sub_10020BA20()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_10020BA44()
{
}

uint64_t sub_10020BA4C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10020BA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10020BA6C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10020BA74(uint64_t a1)
{
  return sub_1000CB958(a1) & 1;
}

CGFloat sub_10020BAA0(uint64_t a1)
{
  return sub_1000CBA88(a1, v1);
}

uint64_t sub_10020BACC(uint64_t a1)
{
  id v3 = [v1 traitCollection];
  LOBYTE(a1) = sub_1000D34F4(a1, (uint64_t)v3);

  return a1 & 1;
}

uint64_t sub_10020BB34(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = swift_isaMask & *(void *)v1;
  uint64_t v5 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *(void *)(v4 + 608);
  uint64_t v10 = *(void *)(v4 + 632);
  uint64_t v11 = 0LL;
  if ((dispatch thunk of ShelfPresenter.doesShelfExist(for:)(a1, v9, v10) & 1) != 0) {
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(**(void **)&v2[qword_1002EDBC8] + 336LL))(a1);
  }
  dispatch thunk of ShelfPresenter.contentType(for:)(a1, v9, v10);
  id v12 = [v2 traitCollection];
  id v13 = [v12 horizontalSizeClass];

  uint64_t v14 = sub_100178CE0(v11, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v14;
}

double sub_10020BC84(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v17 - v9;
  dispatch thunk of ShelfPresenter.contentType(for:)(a1, *(void *)(v3 + 608), *(void *)(v3 + 632));
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v11 == enum case for Shelf.ContentType.action(_:)) {
    goto LABEL_15;
  }
  if (v11 != enum case for Shelf.ContentType.annotation(_:)
    && v11 != enum case for Shelf.ContentType.productCapability(_:)
    && v11 != enum case for Shelf.ContentType.productPageLink(_:))
  {
    if (v11 != enum case for Shelf.ContentType.mixedMediaLockup(_:))
    {
      if (v11 == enum case for Shelf.ContentType.familyMember(_:))
      {
        uint64_t v14 = 0x4052000000000000LL;
        goto LABEL_16;
      }

      if (v11 != enum case for Shelf.ContentType.privacyType(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        double v15 = 0.0;
        goto LABEL_17;
      }
    }

double sub_10020BE38(void *a1, uint64_t a2)
{
  return sub_1000CBBE8(a2, v2, a1);
}

double sub_10020BE70(void *a1, uint64_t a2)
{
  return sub_1000CBE70(a2, v2, a1);
}

uint64_t sub_10020BEA8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v1 + qword_1002EDBC8) + 368LL))(a1, v1);
}

double sub_10020BEDC(uint64_t a1)
{
  return sub_1000CB6E0(a1, v1);
}

double sub_10020BF08(uint64_t a1)
{
  return sub_1000CB82C(a1, v1);
}

unint64_t sub_10020BF34()
{
  uint64_t v0 = sub_1000031E8(&qword_1002E7198);
  initeCGFloat d = swift_initStackObject(v0, v8);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIFlowLayoutCommonRowHorizontalAlignmentKey);
  uint64_t v7 = v2;
  AnyHashable.init<A>(_:)((void *)(inited + 32), &v6, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 96) = &type metadata for UInt32;
  *(_DWORD *)(inited + 72) = 0;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIFlowLayoutLastRowHorizontalAlignmentKey);
  uint64_t v7 = v3;
  AnyHashable.init<A>(_:)((void *)(inited + 104), &v6, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 168) = &type metadata for UInt32;
  *(_DWORD *)(inited + 14swift_weakDestroy(v0 + 4) = 0;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIFlowLayoutRowVerticalAlignmentKey);
  uint64_t v7 = v4;
  AnyHashable.init<A>(_:)((void *)(inited + 176), &v6, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = &type metadata for UInt32;
  *(_DWORD *)(inited + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0;
  return sub_1000E69F4(inited);
}

double sub_10020C044(uint64_t a1, uint64_t a2)
{
  return sub_1000CD6EC(a2, *(void *)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_objectGraph], v2, a1);
}

void sub_10020C08C(void *a1)
{
  if ([v1 isViewLoaded])
  {
    id v3 = [v1 collectionView];
    sub_1000CA33C(a1, v1, v3);
  }

uint64_t sub_10020C120(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)(v2, &type metadata for String, &protocol witness table for String);
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain(*v4);
      sub_10001B434(v7, v5, v6);
      swift_bridgeObjectRelease(v7[1]);
      v4 += 2;
      --v2;
    }

    while (v2);
    return v8;
  }

  return result;
}

uint64_t sub_10020C1B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageFacets.Facet.DisplayType(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v11 = sub_100003B6C(&qword_1002DE6D0, v10, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
  uint64_t result = Set.init(minimumCapacity:)(v9, v2, v11);
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v14 = *(void *)(v3 + 72);
    double v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v15(v5, v13, v2);
      sub_10001BB18((uint64_t)v8, (uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v13 += v14;
      --v9;
    }

    while (v9);
    return v17;
  }

  return result;
}

uint64_t sub_10020C2DC()
{
  return sub_1000CA984();
}

uint64_t sub_10020C304()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + qword_1002EDBC8) + 336LL))();
}

void sub_10020C334(char *a1, char *a2)
{
}

uint64_t sub_10020C39C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10020C3C0()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

double sub_10020C3E4(uint64_t a1)
{
  return sub_10020A114(a1, v1[6], v1[2], v1[3]);
}

uint64_t sub_10020C3F4()
{
  uint64_t v1 = type metadata accessor for IndexSet(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10020C468()
{
}

uint64_t sub_10020C498()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for TVSelectionHandlerCollectionElementsObserver(uint64_t a1)
{
  uint64_t result = qword_1002EDCE0;
  if (!qword_1002EDCE0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TVSelectionHandlerCollectionElementsObserver);
  }
  return result;
}

uint64_t sub_10020C4EC(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_1002F1960);
}

uint64_t sub_10020C528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType(a1);
  return sub_10020C75C(a1, a4, v4, ObjectType, a2, a3);
}

uint64_t sub_10020C57C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t ObjectType = swift_getObjectType(a1);
  uint64_t v13 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for SeeAllCapableView);
  if (v13) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0LL;
  }
  if (v13) {
    double v15 = a1;
  }
  else {
    double v15 = 0LL;
  }
  if (v15)
  {
    uint64_t v30 = v8;
    uint64_t v31 = a3;
    uint64_t v16 = a4;
    uint64_t v33 = a2;
    uint64_t v17 = swift_getObjectType(v15);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    id v32 = a1;
    if ((v18(v17, v14) & 1) != 0)
    {
      uint64_t v19 = SelectionHandlerCollectionElementsObserver.presenter.getter();
      uint64_t v21 = v20;
      uint64_t v22 = swift_getObjectType(v19);
      uint64_t KeyPath = swift_getKeyPath(&unk_100242F58, v23);
      ItemLayoutContext.subscript.getter(v11);
      __n128 v25 = swift_release(KeyPath);
      dispatch thunk of SelectablePagePresenter.didSelectSeeAll(for:)(v11, v22, v21, v25);

      __n128 v26 = swift_unknownObjectRelease(v19);
      return (*(uint64_t (**)(void *, uint64_t, __n128))(v9 + 8))(v11, v30, v26);
    }

    a2 = v33;
    a4 = v16;
    a3 = v31;
  }

  uint64_t v28 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0LL);
  double v29 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))method lookup function for SelectionHandlerCollectionElementsObserver( v28,  &method descriptor for SelectionHandlerCollectionElementsObserver.didSelectCell(_:in:collectionView:asPartOf:));
  return v29(a1, a2, a3, a4);
}

uint64_t sub_10020C738()
{
  uint64_t v0 = SelectionHandlerCollectionElementsObserver.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t sub_10020C754()
{
  return type metadata accessor for TVSelectionHandlerCollectionElementsObserver(0LL);
}

uint64_t sub_10020C75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for TVSelectionHandlerCollectionElementsObserver(0LL);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  return SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(a1, a5, a6, a2, v11);
}

void sub_10020C7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    id v12 = (void *)Strong;
    uint64_t v13 = UIResponder.nearestActionRunner.getter();

    if (v13)
    {
      swift_beginAccess(v10, v18, 0LL, 0LL);
      uint64_t v14 = swift_unknownObjectWeakLoadStrong(v10);
      if (v14)
      {
        uint64_t v15 = v14;
        *((void *)&v20 + 1) = type metadata accessor for ArcadeFooterCollectionViewCell(0LL);
        *(void *)&__int128 v19 = v15;
      }

      else
      {
        __int128 v19 = 0u;
        __int128 v20 = 0u;
      }

      (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v6);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, &v19, v9, a3);
      __n128 v16 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
      sub_100029100((uint64_t)&v19);
    }
  }

double sub_10020C908( double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1000EF4A4(a8, a1, a2);
}

id sub_10020C950(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10020C984(*a1, a2, a3);
}

uint64_t sub_10020C958()
{
  return sub_100003B6C( &qword_1002EDD30,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeFooter,  (uint64_t)&protocol conformance descriptor for ArcadeFooter);
}

id sub_10020C984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = ArcadeFooter.buttonAction.getter(v8);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = *(char **)&v3[OBJC_IVAR____TtC6Arcade30ArcadeFooterCollectionViewCell_buttonView];
    Action.title.getter(v11);
    if (v14)
    {
      uint64_t v16 = v14;
      NSString v17 = String._bridgeToObjectiveC()();
      *(void *)&double v15 = swift_bridgeObjectRelease(v16).n128_u64[0];
    }

    else
    {
      NSString v17 = 0LL;
    }

    objc_msgSend(v13, "setTitle:forState:", v17, 0, v15);

    memset(v25, 0, sizeof(v25));
    memset(v24, 0, sizeof(v24));
    static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)( 0xD000000000000012LL,  0x800000010024F420LL,  v25,  v24);
    sub_100029100((uint64_t)v24);
    sub_100029100((uint64_t)v25);
    UIView.setAutomationSemantics(_:)(v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v18 = swift_allocObject(&unk_10028FC98, 24LL, 7LL);
    swift_unknownObjectWeakInit(v18 + 16, v4);
    __int128 v19 = (void (*)())swift_allocObject(&unk_10028FCC0, 40LL, 7LL);
    *((void *)v19 + 2) = v18;
    *((void *)v19 + 3) = v12;
    *((void *)v19 + swift_weakDestroy(v0 + 4) = a3;
    __int128 v20 = (void (**)())&v13[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_primaryActionHandler];
    uint64_t v21 = *(void *)&v13[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_primaryActionHandler];
    uint64_t v22 = *(void *)&v13[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_primaryActionHandler + 8];
    *__int128 v20 = sub_10020CBA4;
    v20[1] = v19;
    swift_retain(a3);
    sub_10000D3D8(v21, v22);
  }

  return [v4 setNeedsLayout];
}

uint64_t sub_10020CB4C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10020CB70()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_10020CBA4()
{
}

void sub_10020CBB0()
{
  qword_1002F1988 = (uint64_t)&type metadata for Double;
  unk_1002F1990 = &protocol witness table for Double;
  qword_1002F1970 = 0x4040800000000000LL;
}

char *sub_10020CBDC(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  *(void *)&v4[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_rateButtonView] = 0LL;
  uint64_t v11 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_summaryView;
  id v12 = objc_allocWithZone((Class)type metadata accessor for ProductRatingsSummaryCardView());
  uint64_t v13 = v4;
  *(void *)&v5[v11] = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_histogramView;
  *(void *)&v13[v14] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for ProductRatingsHistogramCardView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  uint64_t v15 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_noRatingsView;
  *(void *)&v13[v15] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for ProductNoRatingsView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *(void *)&v13[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_pageTraits] = 0LL;
  uint64_t v16 = &v13[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_scrollObserver];
  *(void *)uint64_t v16 = 0LL;
  *((void *)v16 + 1) = 0LL;

  v31.id receiver = v13;
  v31.super_class = ObjectType;
  NSString v17 = (char *)objc_msgSendSuper2(&v31, "initWithFrame:", a1, a2, a3, a4);
  [v17 setInsetsLayoutMarginsFromSafeArea:0];
  id v18 = [v17 contentView];
  [v18 setInsetsLayoutMarginsFromSafeArea:0];

  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  id v22 = [v17 contentView];
  objc_msgSend(v22, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  uint64_t v23 = *(void **)&v17[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_noRatingsView];
  [v23 setHidden:1];
  id v24 = [v17 contentView];
  [v24 addSubview:v23];

  uint64_t v25 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_summaryView;
  [*(id *)&v17[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_summaryView] setHidden:1];
  id v26 = [v17 contentView];
  [v26 addSubview:*(void *)&v17[v25]];

  uint64_t v27 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_histogramView;
  [*(id *)&v17[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_histogramView] setHidden:1];
  id v28 = [v17 contentView];
  id v29 = *(id *)&v17[v27];
  [v28 addSubview:v29];

  return v17;
}

void *sub_10020CEFC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v52.id receiver = v1;
  v52.super_class = ObjectType;
  objc_msgSendSuper2(&v52, "layoutSubviews", v5);
  [v1 bounds];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_pageTraits];
  if (v16)
  {
    [v16 pageMarginInsets];
    double top = v17;
    double left = v19;
  }

  else
  {
    double top = UIEdgeInsetsZero.top;
    double left = UIEdgeInsetsZero.left;
  }

  uint64_t v21 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_summaryView;
  unsigned int v22 = [*(id *)&v1[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_summaryView] isHidden];
  uint64_t v23 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_noRatingsView;
  if (!v22) {
    uint64_t v23 = v21;
  }
  id v24 = *(id *)&v1[v23];
  if (qword_1002DD180 != -1) {
    swift_once(&qword_1002DD180, sub_10020CBB0);
  }
  sub_1000EF8B4((uint64_t)&qword_1002F1970, (uint64_t)v45);
  uint64_t v43 = type metadata accessor for BaseCollectionViewCell();
  uint64_t v44 = protocol witness table for UIView;
  *(void *)&__int128 v42 = v24;
  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_histogramView];
  void v41[3] = type metadata accessor for ProductRatingsHistogramCardView();
  v41[4] = protocol witness table for UIView;
  v41[0] = v25;
  id v26 = *(void **)&v1[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_rateButtonView];
  if (v26)
  {
    *((void *)&v39 + 1) = type metadata accessor for RateButtonView();
    uint64_t v40 = protocol witness table for UIView;
    *(void *)&__int128 v38 = v26;
  }

  else
  {
    uint64_t v40 = 0LL;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
  }

  double v27 = sub_10000AA6C(v9, v11, v13, v15, top, left);
  CGFloat v29 = v28;
  CGFloat v31 = v30;
  CGFloat v33 = v32;
  *(_OWORD *)&v49[40] = v45[0];
  __int128 v50 = v45[1];
  uint64_t v51 = v46;
  sub_100009D90(&v42, (uint64_t)v47);
  sub_10005E53C((uint64_t)v41, (uint64_t)&v48);
  sub_10005E53C((uint64_t)&v38, (uint64_t)v49);
  id v34 = v24;
  id v35 = v25;
  id v36 = v26;
  TVReviewsContainerLayout.placeChildren(relativeTo:in:)((uint64_t)v1, v27, v29, v31, v33);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return sub_10020F424(v47);
}

uint64_t sub_10020D1E0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v58 = a5;
  uint64_t v61 = a1;
  uint64_t v62 = a4;
  uint64_t v7 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v7);
  uint64_t v60 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v57 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v57);
  uint64_t v59 = (char **)((char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = sub_1000031E8(&qword_1002E6390);
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  uint64_t v11 = *(void *)(v63 + 64);
  __chkstk_darwin(v10);
  uint64_t v56 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  double v14 = (char *)&v56 - v13;
  uint64_t v15 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v56 - v20;
  uint64_t v22 = type metadata accessor for TapToRate(0LL);
  v71[3] = v22;
  void v71[4] = sub_10020F30C( (unint64_t *)&qword_1002EDDF0,  (uint64_t (*)(uint64_t))&type metadata accessor for TapToRate);
  v71[0] = a2;
  uint64_t ObjectType = swift_getObjectType(a3);
  swift_retain(a2);
  dispatch thunk of ComponentContainerDelegate.mutableState(ofItem:)(0LL, ObjectType, v62);
  sub_10001F010((uint64_t)v71, (uint64_t)v67);
  uint64_t v24 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v25 = v22;
  id v26 = v14;
  swift_dynamicCast(&v70, v67, v24, v25, 7LL);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
  uint64_t v27 = WritableStateLens.init(_:)(v18, &_s5StateVN_0);
  uint64_t v28 = TapToRate.rateAction.getter(v27);
  if (v28)
  {
    uint64_t v29 = v28;
    double v30 = v61;
    sub_100082D00((uint64_t)&v65);
    if (v66)
    {
      uint64_t v62 = v15;
      sub_100009D90(&v65, (uint64_t)v67);
      uint64_t v31 = swift_allocObject(&unk_10028FD58, 24LL, 7LL);
      __n128 v32 = swift_unknownObjectWeakInit(v31 + 16, v30);
      uint64_t v33 = v63;
      id v34 = *(void (**)(char *, char *, uint64_t, __n128))(v63 + 16);
      id v35 = v56;
      uint64_t v61 = v26;
      id v36 = v26;
      uint64_t v37 = v64;
      v34(v56, v36, v64, v32);
      uint64_t v38 = *(unsigned __int8 *)(v33 + 80);
      uint64_t v39 = (v38 + 24) & ~v38;
      uint64_t v40 = swift_allocObject(&unk_10028FD80, v39 + v11, v38 | 7);
      *(void *)(v40 + swift_unknownObjectWeakDestroy(v0 + 16) = v31;
      (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v40 + v39, v35, v37);
      __n128 v41 = swift_retain(v31);
      dispatch thunk of RateAction.successClosure.setter(sub_10011E9A8, v40, v41);
      swift_release(v31);
      id v42 = objc_allocWithZone((Class)type metadata accessor for RateProductViewController());
      swift_retain(v29);
      uint64_t v43 = v58;
      swift_retain(v58);
      id v44 = sub_1001A4F58(v29, v43);
      swift_release(v29);
      swift_release(v43);
      uint64_t v45 = v68;
      uint64_t v46 = v69;
      sub_100005F8C(v67, v68);
      uint64_t v47 = (uint64_t)v59;
      void *v59 = v44;
      swift_storeEnumTagMultiPayload(v47, v57, 11LL);
      uint64_t v48 = qword_1002DCE78;
      id v49 = v44;
      if (v48 != -1) {
        swift_once(&qword_1002DCE78, sub_1001665C8);
      }
      uint64_t v50 = type metadata accessor for FlowPresentationHints(0LL);
      uint64_t v51 = sub_1000061F4(v50, (uint64_t)qword_1002F0F70);
      uint64_t v52 = type metadata accessor for ReferrerData(0LL);
      uint64_t v53 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56LL))(v60, 1LL, 1LL, v52);
      (*(void (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))(v46 + 16))( v47,  v51,  0LL,  0LL,  v53,  v45,  v46);
      sub_100006060(v53, &qword_1002E1FB0);
      sub_10000609C(v47);

      swift_release(v29);
      _s6Arcade17PillOverlayLayoutVwxx_0(v67);
      id v26 = v61;
      uint64_t v15 = v62;
    }

    else
    {
      swift_release(v29);
      sub_100006060((uint64_t)&v65, (uint64_t *)&unk_1002E1800);
    }
  }

  (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v64);
  __n128 v54 = swift_release(v70);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v21, v15, v54);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v71);
}

double sub_10020D708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1000031E8(&qword_1002EB230);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t ObjectType = swift_getObjectType(a3);
  dispatch thunk of ComponentContainerDelegate.state(ofItem:)(1LL, ObjectType, a4);
  uint64_t v14 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v8, v14);
  if (qword_1002DC450 != -1) {
    swift_once(&qword_1002DC450, sub_10004BA54);
  }
  double v15 = *(double *)&xmmword_1002EE760;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

double sub_10020D840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1000031E8(&qword_1002EB230);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t ObjectType = swift_getObjectType(a3);
  dispatch thunk of ComponentContainerDelegate.state(ofItem:)(2LL, ObjectType, a4);
  uint64_t v14 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v8, v14);
  if (qword_1002DCB50 != -1) {
    swift_once(&qword_1002DCB50, sub_1000EC64C);
  }
  double v15 = *(double *)&xmmword_1002F03B0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

uint64_t type metadata accessor for ReviewsContainerCell()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade20ReviewsContainerCell);
}

uint64_t sub_10020DA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DCBD0 != -1) {
    swift_once(&qword_1002DCBD0, sub_100102E50);
  }
  uint64_t v9 = type metadata accessor for StaticDimension(0LL);
  uint64_t v10 = sub_1000061F4(v9, (uint64_t)qword_1002F0588);
  static Dimensions.defaultRoundingRule.getter(v10);
  double v11 = AnyDimension.value(in:rounded:)(a4, v8, v9, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return *(void *)&v11;
}

double sub_10020DB04( __n128 a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10020DE4C(a1, a2, a4, a5, a6, a7, a8);
}

void sub_10020DB1C( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void), uint64_t a5, uint64_t a6, void *a7)
{
}

void sub_10020DB30(char *a1, void *a2)
{
  double MaxX = CGRectGetMaxX(v20);
  [a2 frame];
  if (MaxX < CGRectGetMaxX(v21))
  {
    id v5 = [a1 layoutGuides];
    unint64_t v6 = sub_10020F3E8();
    uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    uint64_t v8 = OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_focusGuideExtension;
    id v9 = *(id *)&a1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_focusGuideExtension];
    char v10 = sub_1000DCE04((uint64_t)v9, v7);
    swift_bridgeObjectRelease(v7);

    if ((v10 & 1) == 0) {
      [a1 addLayoutGuide:*(void *)&a1[v8]];
    }
    [*(id *)&a1[v8] setEnabled:1];
    id v11 = [*(id *)&a1[v8] heightAnchor];
    id v12 = [a1 heightAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    [v13 setActive:1];
    id v14 = [*(id *)&a1[v8] leadingAnchor];
    id v15 = [a1 trailingAnchor];
    id v16 = [v14 constraintEqualToAnchor:v15];

    [v16 setActive:1];
    id v17 = [*(id *)&a1[v8] trailingAnchor];
    id v18 = [a2 trailingAnchor];
    id v19 = [v17 constraintEqualToAnchor:v18];

    [v19 setActive:1];
  }

uint64_t sub_10020DDB0(__n128 a1)
{
  uint64_t v1 = Shelf.items.getter(a1);
  uint64_t v2 = *(void *)(v1 + 16);
  __n128 v3 = swift_bridgeObjectRelease(v1);
  if (v2)
  {
    uint64_t result = Shelf.items.getter(v3);
    if (!*(void *)(result + 16))
    {
      __break(1u);
      return result;
    }

    uint64_t v5 = result;
    sub_10001F010(result + 32, (uint64_t)v9);
    swift_bridgeObjectRelease(v5);
    uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002EA170);
    uint64_t v7 = type metadata accessor for ReviewsContainer(0LL);
  }

  return 0LL;
}

double sub_10020DE4C(__n128 a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v105 = a7;
  uint64_t v99 = a6;
  uint64_t v96 = a5;
  double v9 = a1.n128_f64[0];
  uint64_t v102 = type metadata accessor for LegacyAppState(0LL, a1);
  uint64_t v10 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  id v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for AdamId(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v104 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v17 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v98 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v95 = v18;
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v88 - v21;
  uint64_t v23 = sub_10020DDB0(v20);
  if (!v23) {
    return 0.0;
  }
  uint64_t v24 = v23;
  uint64_t v101 = v17;
  uint64_t v103 = v22;
  ComponentLayoutOptions.init()(v23);
  uint64_t v94 = a4;
  uint64_t v25 = inject(_:from:)(a4);
  uint64_t v27 = v26;
  uint64_t ObjectType = swift_getObjectType(v25);
  uint64_t v100 = v24;
  ReviewsContainer.adamId.getter();
  uint64_t v97 = v25;
  uint64_t v29 = dispatch thunk of AppStateController.stateMachine(forApp:)(v16, ObjectType, v27);
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v32 = swift_getObjectType(v29);
  dispatch thunk of AppStateMachine.currentState.getter(v32, v31);
  swift_unknownObjectRelease(v29);
  LOBYTE(v29) = LegacyAppState.hasBeenPurchased.getter(v33);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v102);
  if ((v29 & 1) != 0)
  {
    if (qword_1002DD160 != -1) {
      swift_once(&qword_1002DD160, sub_1001ECA78);
    }
    __int128 v35 = xmmword_1002F18F0;
    uint64_t v36 = type metadata accessor for LayoutViewPlaceholder(0LL, v34);
    swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
    uint64_t v37 = LayoutViewPlaceholder.init(representing:)(*(double *)&v35, *((double *)&v35 + 1));
    __n128 v38 = swift_retain(v37);
    uint64_t v39 = 0LL;
  }

  else
  {
    uint64_t v41 = type metadata accessor for LayoutViewPlaceholder(0LL, v34);
    swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
    uint64_t v37 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
    __n128 v38 = swift_retain(v37);
    uint64_t v39 = 1LL;
  }

  LayoutViewPlaceholder.isHidden.setter(v39, v38);
  uint64_t v42 = v100;
  uint64_t v43 = v101;
  id v44 = v103;
  __n128 v45 = swift_release(v37);
  uint64_t v46 = ReviewsContainer.ratings.getter(v45);
  if (v46)
  {
    uint64_t v48 = Ratings.status.getter(v47);
    if (v49 && (uint64_t v50 = v49, v51 = String.count.getter(v48, v49), v52 = swift_bridgeObjectRelease(v50), v51 >= 1))
    {
      if (qword_1002DCB98 != -1) {
        swift_once(&qword_1002DCB98, sub_1000F218C);
      }
      __int128 v53 = xmmword_1002F04E0;
      uint64_t v54 = type metadata accessor for LayoutViewPlaceholder(0LL, v52);
      swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
      uint64_t v55 = LayoutViewPlaceholder.init(representing:)(*(double *)&v53, *((double *)&v53 + 1));
      __n128 v56 = swift_release(v46);
      uint64_t v46 = 0LL;
    }

    else
    {
      id v93 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
      uint64_t v57 = v98;
      v93(v98, v44, v104);
      uint64_t v58 = *(unsigned __int8 *)(v43 + 80);
      uint64_t v59 = (v58 + 48) & ~v58;
      uint64_t v60 = v58 | 7;
      uint64_t v91 = v58 | 7;
      uint64_t v92 = v59;
      uint64_t v61 = v43;
      unint64_t v62 = (v95 + v59 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      unint64_t v95 = v62 + 8;
      unint64_t v63 = v62;
      unint64_t v90 = v62;
      uint64_t v64 = (char *)swift_allocObject(&unk_10028FDA8, v62 + 8, v60);
      uint64_t v65 = v96;
      *((void *)v64 + 2) = v46;
      *((void *)v64 + 3) = v65;
      uint64_t v66 = v94;
      *((void *)v64 + swift_weakDestroy(v0 + 4) = v99;
      *((void *)v64 + 5) = v66;
      uint64_t v67 = v66;
      uint64_t v89 = *(double (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v68 = v104;
      v69.n128_f64[0] = v89(&v64[v59], v57, v104);
      *(void *)&v64[v63] = v105;
      uint64_t v70 = type metadata accessor for LayoutViewPlaceholder(0LL, v69);
      swift_allocObject(v70, *(unsigned int *)(v70 + 48), *(unsigned __int16 *)(v70 + 52));
      swift_retain(v46);
      swift_unknownObjectRetain(v65);
      uint64_t v71 = v67;
      swift_retain(v67);
      swift_unknownObjectRetain(v105);
      uint64_t v102 = v37;
      uint64_t v72 = v105;
      uint64_t v55 = LayoutViewPlaceholder.init(measureWith:)(sub_10020F45C, v64);
      id v73 = v98;
      v93(v98, v103, v68);
      uint64_t v74 = (char *)swift_allocObject(&unk_10028FDD0, v95, v91);
      *((void *)v74 + 2) = v46;
      *((void *)v74 + 3) = v65;
      *((void *)v74 + swift_weakDestroy(v0 + 4) = v99;
      *((void *)v74 + 5) = v71;
      uint64_t v75 = v68;
      id v44 = v103;
      v89(&v74[v92], v73, v75);
      *(void *)&v74[v90] = v72;
      uint64_t v76 = *(unsigned int *)(v70 + 48);
      uint64_t v77 = *(unsigned __int16 *)(v70 + 52);
      uint64_t v78 = v70;
      uint64_t v42 = v100;
      uint64_t v43 = v101;
      swift_allocObject(v78, v76, v77);
      swift_unknownObjectRetain(v65);
      uint64_t v79 = v72;
      uint64_t v37 = v102;
      swift_retain(v71);
      swift_unknownObjectRetain(v79);
      uint64_t v46 = LayoutViewPlaceholder.init(measureWith:)(sub_10020F50C, v74);
    }
  }

  else
  {
    uint64_t v80 = type metadata accessor for LayoutViewPlaceholder(0LL, v47);
    swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
    uint64_t v55 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  }

  uint64_t v81 = ReviewsContainer.ratings.getter(v56);
  uint64_t v83 = v81;
  if (v81) {
    __n128 v82 = swift_release(v81);
  }
  LayoutViewPlaceholder.isHidden.setter(v83 == 0, v82);
  if (qword_1002DD180 != -1) {
    swift_once(&qword_1002DD180, sub_10020CBB0);
  }
  sub_1000EF8B4((uint64_t)&qword_1002F1970, (uint64_t)v112);
  uint64_t v85 = type metadata accessor for LayoutViewPlaceholder(0LL, v84);
  uint64_t v110 = v85;
  int v111 = protocol witness table for LayoutViewPlaceholder;
  *(void *)&__int128 v109 = v55;
  if (v46)
  {
    *((void *)&v107 + 1) = v85;
    uint64_t v108 = protocol witness table for LayoutViewPlaceholder;
    *(void *)&__int128 v106 = v46;
  }

  else
  {
    uint64_t v108 = 0LL;
    __int128 v106 = 0u;
    __int128 v107 = 0u;
  }

  v115[8] = v85;
  v115[9] = protocol witness table for LayoutViewPlaceholder;
  v115[5] = v37;
  __int128 v116 = v112[0];
  __int128 v117 = v112[1];
  uint64_t v118 = v113;
  sub_100009D90(&v109, (uint64_t)v114);
  sub_10005E53C((uint64_t)&v106, (uint64_t)v115);
  uint64_t v86 = v105;
  swift_getObjectType(v105);
  swift_retain(v55);
  swift_retain(v46);
  swift_retain(v37);
  double v40 = sub_1000EFF5C(v86, v114, v9, a2);
  swift_release(v37);
  swift_release(v46);
  swift_release(v55);
  swift_unknownObjectRelease(v97);
  swift_release(v42);
  sub_10020F424(v114);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v104);
  return v40;
}

uint64_t sub_10020E4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v8 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  id v16 = &v29[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v17 = type metadata accessor for Ratings(0LL, v14);
  id v31[3] = v17;
  void v31[4] = sub_10020F30C( (unint64_t *)&unk_1002EDDE0,  (uint64_t (*)(uint64_t))&type metadata accessor for Ratings);
  v31[0] = a1;
  sub_10001F010((uint64_t)v31, (uint64_t)v29);
  swift_retain(a1);
  uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  swift_dynamicCast(&v30, v29, v18, v17, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v19 = type metadata accessor for NilState(0LL);
  uint64_t v20 = WritableStateLens.init(_:)(v11, v19);
  float v21 = Ratings.ratingAverage.getter(v20);
  sub_10004CCEC(v21);
  uint64_t v22 = *(void **)&a5[OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_outOfRatingLabel];
  v23._object = (void *)0x80000001002465F0LL;
  v23._countAndFlagsBits = 0xD000000000000012LL;
  v24._countAndFlagsBits = 0LL;
  v24._object = (void *)0xE000000000000000LL;
  object = localizedStringWithCount(_:count:comment:)(v23, 5LL, v24)._object;
  NSString v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setText:", v26, swift_bridgeObjectRelease(object).n128_f64[0]);

  [a5 setNeedsLayout];
  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v16, v12);
  swift_release(v30);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v31);
}

void sub_10020E6D0(uint64_t a1, void (*a2)(void, void), uint64_t a3, uint64_t a4, void *a5)
{
  id v159 = a5;
  uint64_t v156 = a4;
  uint64_t v155 = a3;
  uint64_t v160 = a2;
  uint64_t v151 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v149 = (char *)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v152 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v154 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v157 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v147 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v148 = (char *)&v137 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  double v153 = (char *)&v137 - v11;
  uint64_t v146 = sub_1000031E8(&qword_1002E6390);
  uint64_t v145 = *(void *)(v146 - 8);
  __n128 v12 = __chkstk_darwin(v146);
  uint64_t v144 = (char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v158 = type metadata accessor for LegacyAppState(0LL, v12);
  uint64_t v14 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  id v16 = (char *)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for AdamId(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __n128 v23 = __chkstk_darwin(v21);
  uint64_t v162 = (uint64_t)&v137 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = Shelf.items.getter(v23);
  uint64_t v26 = *(void *)(v25 + 16);
  __n128 v27 = swift_bridgeObjectRelease(v25);
  if (!v26) {
    return;
  }
  uint64_t v143 = a1;
  uint64_t v28 = a1;
  uint64_t v29 = Shelf.items.getter(v27);
  if (!*(void *)(v29 + 16))
  {
    __break(1u);
    goto LABEL_42;
  }

  uint64_t v30 = v29;
  sub_10001F010(v29 + 32, (uint64_t)v166);
  swift_bridgeObjectRelease(v30);
  uint64_t v31 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v32 = type metadata accessor for ReviewsContainer(0LL);
  uint64_t v33 = swift_dynamicCast(v163, v166, v31, v32, 6LL);
  if ((v33 & 1) == 0) {
    return;
  }
  uint64_t v138 = v31;
  uint64_t v142 = v7;
  uint64_t v141 = v22;
  uint64_t v140 = v21;
  uint64_t v34 = v163[0];
  ComponentLayoutOptions.init()(v33);
  uint64_t v35 = inject(_:from:)(v160);
  uint64_t v37 = v36;
  uint64_t ObjectType = swift_getObjectType(v35);
  ReviewsContainer.adamId.getter();
  uint64_t v139 = v35;
  uint64_t v39 = dispatch thunk of AppStateController.stateMachine(forApp:)(v20, ObjectType, v37);
  uint64_t v41 = v40;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v42 = swift_getObjectType(v39);
  dispatch thunk of AppStateMachine.currentState.getter(v42, v41);
  swift_unknownObjectRelease(v39);
  char v44 = LegacyAppState.hasBeenPurchased.getter(v43);
  uint64_t v45 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v158);
  uint64_t v158 = v34;
  uint64_t v46 = ReviewsContainer.tapToRate.getter(v45);
  id v16 = v161;
  if (v46)
  {
    uint64_t v48 = v46;
    if ((v44 & 1) != 0)
    {
      id v49 = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for RateButtonView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
      uint64_t v50 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_rateButtonView;
      uint64_t v51 = *(void **)&v16[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_rateButtonView];
      if (v51)
      {
        [v51 removeFromSuperview];
        __n128 v52 = *(void **)&v16[v50];
      }

      else
      {
        __n128 v52 = 0LL;
      }

      uint64_t v56 = v142;
      *(void *)&v16[v50] = v49;
      id v61 = v49;

      unint64_t v62 = *(void **)&v16[v50];
      if (v62)
      {
        id v63 = v62;
        id v64 = [v16 contentView];
        [v64 addSubview:v63];

        id v61 = v64;
      }

      uint64_t v65 = *(void **)&v16[v50];
      if (!v65) {
        goto LABEL_20;
      }
      uint64_t v66 = swift_getObjectType(v155);
      id v67 = v65;
      uint64_t v68 = v153;
      dispatch thunk of ComponentContainerDelegate.mutableState(ofItem:)(0LL, v66, v156);
      __n128 v69 = v144;
      WritableStateLens.init(_:)(v68, &_s5StateVN_0);
      uint64_t v70 = v154;
      Shelf.presentationHints.getter(v71);
      sub_10011E9EC(v48);

      (*(void (**)(char *, uint64_t))(v152 + 8))(v70, v56);
      (*(void (**)(char *, uint64_t))(v145 + 8))(v69, v146);
      uint64_t v72 = *(void *)&v16[v50];
      if (v72)
      {
        id v73 = (uint64_t (*)(char *))swift_allocObject(&unk_10028FD30, 48LL, 7LL);
        uint64_t v74 = v155;
        *((void *)v73 + 2) = v48;
        *((void *)v73 + 3) = v74;
        uint64_t v75 = v160;
        *((void *)v73 + swift_weakDestroy(v0 + 4) = v156;
        *((void *)v73 + 5) = v75;
        uint64_t v76 = (uint64_t (**)(char *))(v72 + OBJC_IVAR____TtC6Arcade14RateButtonView_actionClosure);
        uint64_t v77 = *(void *)(v72 + OBJC_IVAR____TtC6Arcade14RateButtonView_actionClosure);
        uint64_t v78 = *(void *)(v72 + OBJC_IVAR____TtC6Arcade14RateButtonView_actionClosure + 8);
        *uint64_t v76 = sub_10020F300;
        v76[1] = v73;
        swift_unknownObjectRetain(v74);
        swift_retain(v75);
        sub_10000D3D8(v77, v78);
      }

      else
      {
LABEL_20:
        __n128 v57 = swift_release(v48);
      }

      goto LABEL_21;
    }

    *(void *)&double v47 = swift_release(v46).n128_u64[0];
  }

  uint64_t v53 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_rateButtonView;
  uint64_t v54 = *(void **)&v16[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_rateButtonView];
  if (v54)
  {
    objc_msgSend(v54, "removeFromSuperview", v47);
    uint64_t v55 = *(void **)&v16[v53];
  }

  else
  {
    uint64_t v55 = 0LL;
  }

  uint64_t v56 = v142;
  *(void *)&v16[v53] = 0LL;

  uint64_t v58 = *(void **)&v16[v53];
  if (v58)
  {
    id v59 = v58;
    id v60 = [v16 contentView];
    [v60 addSubview:v59];
  }

uint64_t sub_10020F2CC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_10020F300(char *a1)
{
  return sub_10020D1E0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10020F30C(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = a2(255LL);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ProductRatingsAndReviewsComponent, v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_10020F34C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10020F370()
{
  uint64_t v1 = sub_1000031E8(&qword_1002E6390);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  __n128 v7 = swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_10020F3E8()
{
  unint64_t result = qword_1002EDE00;
  if (!qword_1002EDE00)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UILayoutGuide);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002EDE00);
  }

  return result;
}

void *sub_10020F424(void *a1)
{
  return a1;
}

uint64_t sub_10020F45C(uint64_t a1, double a2, double a3)
{
  return sub_10020F518( a1,  (uint64_t (*)(uint64_t, void, void, void, void, char *, void, double, double))sub_10020D708,  a2,  a3);
}

uint64_t sub_10020F46C()
{
  uint64_t v1 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*((void *)v0 + 2));
  swift_unknownObjectRelease(*((void *)v0 + 3));
  swift_release(*((void *)v0 + 5));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  swift_unknownObjectRelease(*(void *)&v0[v6]);
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10020F50C(uint64_t a1, double a2, double a3)
{
  return sub_10020F518( a1,  (uint64_t (*)(uint64_t, void, void, void, void, char *, void, double, double))sub_10020D840,  a2,  a3);
}

uint64_t sub_10020F518( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, char *, void, double, double), double a3, double a4)
{
  uint64_t v8 = *(void *)(type metadata accessor for ComponentLayoutOptions(0LL) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 48LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return a2( a1,  *((void *)v4 + 2),  *((void *)v4 + 3),  *((void *)v4 + 4),  *((void *)v4 + 5),  &v4[v9],  *(void *)&v4[(*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8LL],  a3,  a4);
}

void sub_10020F598()
{
  *(void *)&v0[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_rateButtonView] = 0LL;
  uint64_t v1 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_summaryView;
  *(void *)&v0[v1] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for ProductRatingsSummaryCardView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  uint64_t v2 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_histogramView;
  *(void *)&v0[v2] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for ProductRatingsHistogramCardView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  uint64_t v3 = OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_noRatingsView;
  *(void *)&v0[v3] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for ProductNoRatingsView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *(void *)&v0[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_pageTraits] = 0LL;
  uint64_t v4 = &v0[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_scrollObserver];
  *(void *)uint64_t v4 = 0LL;
  *((void *)v4 + 1) = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/ReviewsContainerCell.swift",  33LL,  2LL,  51LL,  0);
  __break(1u);
}

id sub_10020F6B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v11 = *(void **)&v5[OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_compoundScrollObserver];
  __n128 v12 = (objc_class *)type metadata accessor for ProductMediaCollectionView.DataSource();
  uint64_t v13 = objc_allocWithZone(v12);
  uint64_t v14 = &v13[OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_artworkSelectionHandler];
  *uint64_t v14 = 0LL;
  v14[1] = 0LL;
  *(void *)&v13[OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_displayedMedia] = a1;
  *(void *)&v13[OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_pageTraits] = a3;
  v13[OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_gridType] = a4;
  *(void *)&v13[OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_artworkLoader] = a2;
  *(void *)&v13[OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_compoundScrollObserver] = v11;
  *(void *)&v13[OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_objectGraph] = a5;
  v28.id receiver = v13;
  v28.super_class = v12;
  swift_bridgeObjectRetain(a1);
  swift_unknownObjectRetain(a3);
  swift_retain(a2);
  id v15 = v11;
  *(void *)&double v16 = swift_retain(a5).n128_u64[0];
  id v17 = objc_msgSendSuper2(&v28, "init", v16);
  uint64_t v18 = OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_activeDataSource;
  uint64_t v19 = *(void **)&v5[OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_activeDataSource];
  *(void *)&v5[OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_activeDataSource] = v17;

  uint64_t v20 = *(void *)&v5[v18];
  if (v20)
  {
    uint64_t v21 = *(void *)&v5[OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_artworkSelectionHandler];
    uint64_t v22 = *(void *)&v5[OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_artworkSelectionHandler + 8];
    __n128 v23 = (uint64_t *)(v20
                    + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_artworkSelectionHandler);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    uint64_t *v23 = v21;
    v23[1] = v22;
    sub_100017A40(v21, v22);
    sub_10000D3D8(v24, v25);
    uint64_t v26 = *(void *)&v5[v18];
  }

  else
  {
    uint64_t v26 = 0LL;
  }

  objc_msgSend(v5, "setDataSource:", v26, v28.receiver, v28.super_class);
  [v5 setDelegate:*(void *)&v5[v18]];
  return [v5 reloadData];
}

id sub_10020F848(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  *(void *)&v4[OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_activeDataSource] = 0LL;
  uint64_t v11 = OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_flowLayout;
  id v12 = objc_allocWithZone(&OBJC_CLASS___UICollectionViewFlowLayout);
  uint64_t v13 = v5;
  id v14 = [v12 init];
  [v14 setScrollDirection:1];
  *(void *)&v5[v11] = v14;
  id v15 = &v13[OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_artworkSelectionHandler];
  *(void *)id v15 = 0LL;
  *((void *)v15 + 1) = 0LL;
  uint64_t v16 = OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_compoundScrollObserver;
  id v17 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0LL));
  *(void *)&v13[v16] = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);

  uint64_t v18 = *(void *)&v5[v11];
  v38.id receiver = v13;
  v38.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v38, "initWithFrame:collectionViewLayout:", v18, a1, a2, a3, a4);
  uint64_t v20 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v21 = v19;
  id v22 = [v20 clearColor];
  [v21 setBackgroundColor:v22];

  [v21 setClipsToBounds:0];
  [v21 setAllowsSelection:1];
  [v21 setAlwaysBounceHorizontal:1];
  [v21 setShowsHorizontalScrollIndicator:0];
  [v21 setScrollsToTop:0];
  [v21 setBounces:1];
  [v21 setContentInsetAdjustmentBehavior:2];
  [v21 setRemembersLastFocusedIndexPath:1];
  uint64_t v23 = type metadata accessor for VideoCollectionViewCell();
  ObjCClassFromMetadatdouble a = (objc_class *)swift_getObjCClassFromMetadata(v23);
  id v25 = v21;
  uint64_t v26 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  uint64_t v28 = v27;

  NSString v29 = String._bridgeToObjectiveC()();
  objc_msgSend( v25,  "registerClass:forCellWithReuseIdentifier:",  ObjCClassFromMetadata,  v29,  swift_bridgeObjectRelease(v28).n128_f64[0]);

  uint64_t v30 = type metadata accessor for ScreenshotCollectionViewCell();
  uint64_t v31 = (objc_class *)swift_getObjCClassFromMetadata(v30);
  id v32 = v25;
  uint64_t v33 = NSStringFromClass(v31);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  uint64_t v35 = v34;

  NSString v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "registerClass:forCellWithReuseIdentifier:", v31, v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

  return v32;
}

double sub_10020FC58(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AspectRatio(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  __n128 v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = *(void *)(v1
                  + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_displayedMedia);
  if (!*(void *)(v11 + 16)) {
    return 0.0;
  }
  uint64_t v12 = *(void *)(v11 + 32);
  int v13 = *(char *)(v11 + 48);
  swift_retain(v12);
  if (v13 < 0)
  {
    double v20 = Artwork.size.getter(v14);
    __n128 v19 = AspectRatio.init(_:_:)(v21, v20);
  }

  else
  {
    swift_retain(v12);
    uint64_t v16 = Video.preview.getter(v15);
    double v17 = Artwork.size.getter(v16);
    AspectRatio.init(_:_:)(v18, v17);
    swift_release(v16);
    j__swift_release(v12);
  }

  (*(void (**)(char *, char *, uint64_t, __n128))(v5 + 32))(v10, v7, v4, v19);
  uint64_t v22 = *(void *)(v2
                  + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_pageTraits);
  uint64_t v23 = *(char *)(v2
                + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_gridType);
  swift_getObjectType(v22);
  double v24 = dbl_100243038[v23];
  double v25 = PageTraitEnvironment.pageContentSize.getter();
  AspectRatio.height(fromWidth:)((v25 + (v24 + -1.0) * -40.0) / v24);
  j__swift_release(v12);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return a1;
}

unint64_t sub_10020FEA4(void *a1)
{
  uint64_t v3 = *(void *)(v1
                 + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_displayedMedia);
  unint64_t result = IndexPath.item.getter(a1);
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }

  if (result >= *(void *)(v3 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }

  uint64_t v5 = v3 + 24 * result;
  uint64_t v6 = *(void *)(v5 + 32);
  else {
    uint64_t v7 = type metadata accessor for VideoCollectionViewCell();
  }
  ObjCClassFromMetadatdouble a = (objc_class *)swift_getObjCClassFromMetadata(v7);
  swift_retain(v6);
  uint64_t v9 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  uint64_t v11 = v10;

  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  int v13 = (void *)IndexPath._bridgeToObjectiveC()();
  id v14 = [a1 dequeueReusableCellWithReuseIdentifier:v12 forIndexPath:v13];

  j__swift_release(v6);
  return (unint64_t)v14;
}

void sub_100210094(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v46 = a4;
  char v7 = a3 & 1;
  uint64_t v8 = sub_1000031E8(&qword_1002DEA70);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  int v13 = (char *)&v46 - v12;
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for VideoConfiguration(0LL);
  uint64_t v47 = *(void *)(v17 - 8);
  uint64_t v48 = v17;
  __chkstk_darwin(v17);
  __n128 v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1002107A8(a2, v7, (uint64_t)v19);
  uint64_t v20 = *(void *)(v5
                  + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_objectGraph);
  uint64_t v21 = type metadata accessor for VideoViewManager(0LL);
  uint64_t v22 = BaseObjectGraph.inject<A>(_:)(v49, v21, v21);
  uint64_t v23 = v49[0];
  double v24 = Video.playbackId.getter(v49, v22);
  Video.videoUrl.getter(v24);
  uint64_t v25 = type metadata accessor for URL(0LL);
  uint64_t v26 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v16, 0LL, 1LL, v25);
  uint64_t v27 = Video.templateMediaEvent.getter(v26);
  Video.templateClickEvent.getter(v27);
  uint64_t v28 = type metadata accessor for VideoView(0LL);
  uint64_t v29 = sub_100003B6C( (unint64_t *)&qword_1002DEA78,  type metadata accessor for VideoView,  (uint64_t)&unk_10023D670);
  uint64_t v30 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)( v49,  v16,  v19,  v13,  v10,  v20,  v28,  v29);
  sub_100006060((uint64_t)v10, &qword_1002DEA70);
  sub_100006060((uint64_t)v13, &qword_1002DEA70);
  uint64_t v31 = (uint64_t)v16;
  uint64_t v32 = v46;
  sub_100006060(v31, (uint64_t *)&unk_1002E1810);
  sub_100006060((uint64_t)v49, (uint64_t *)&unk_1002DE600);
  uint64_t v33 = *(void *)(v32 + OBJC_IVAR____TtC6Arcade23VideoCollectionViewCell_videoContainer);
  sub_1001B195C(v30);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v33 + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    uint64_t v35 = (void *)Strong;
    uint64_t v36 = type metadata accessor for VideoCollectionViewCell();
    LayoutMarginsAware<>.layoutFrame.getter(v36);
    double v38 = v37;
    double v40 = v39;
    uint64_t v42 = Video.preview.getter(v41);
    uint64_t v43 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v38, v40);
    swift_release(v42);
    uint64_t v44 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v43, 2LL, 1LL, v35, v28, v44);

    swift_release(v23);
    __n128 v45 = swift_release(v43);
    (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v19, v48, v45);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v19, v48);
    swift_release(v23);
  }

unint64_t sub_1002103EC(void *a1)
{
  uint64_t v3 = type metadata accessor for MediaClickMetricsEvent.ActionType(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *(void *)(v1
                 + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_displayedMedia);
  unint64_t result = IndexPath.item.getter(v8);
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }

  if (result >= *(void *)(v7 + 16))
  {
LABEL_21:
    __break(1u);
    return result;
  }

  uint64_t v10 = v7 + 24 * result;
  uint64_t v11 = *(void *)(v10 + 32);
  if ((*(char *)(v10 + 48) & 0x80000000) == 0)
  {
    swift_retain_n(*(void *)(v10 + 32), 2LL);
    NSIndexPath v34 = IndexPath._bridgeToObjectiveC()();
    Class isa = v34.super.isa;
    id v13 = objc_msgSend(a1, "cellForItemAtIndexPath:", v34.super.isa, v34._reserved);

    if (v13
      && (id v27 = v13,
          unint64_t v14 = sub_1000837D8(),
          uint64_t v15 = sub_1000031E8((uint64_t *)&unk_1002EDEC8),
          (swift_dynamicCast(&v28, &v27, v14, v15, 6LL) & 1) != 0))
    {
      if (*((void *)&v29 + 1))
      {
        sub_100009D90(&v28, (uint64_t)v31);
        uint64_t v16 = v32;
        uint64_t v17 = v33;
        sub_100005F8C(v31, v32);
        uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
        if (v18)
        {
          __n128 v19 = (_BYTE *)v18;
          uint64_t v20 = qword_1002F0818;
          if (*(_BYTE *)(v18 + qword_1002F0818) != 1)
          {
            uint64_t v21 = *(void **)(v18 + qword_1002E70D8);
            if (v21)
            {
              id v22 = v21;
              uint64_t v23 = (void *)dispatch thunk of VideoPlayer.playerItem.getter();

              if (v23)
              {

                v19[v20] = 1;
                sub_10012A748();
                (*(void (**)(char *, void, uint64_t))(v4 + 104))( v6,  enum case for MediaClickMetricsEvent.ActionType.enterFullscreen(_:),  v3);
                sub_10012B584((uint64_t)v6);
                (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
                sub_10012C020();
              }
            }
          }

          j__swift_release(v11);
          j__swift_release(v11);
        }

        else
        {
          j__swift_release(v11);
          j__swift_release(v11);
        }

        return _s6Arcade17PillOverlayLayoutVwxx_0(v31);
      }
    }

    else
    {
      uint64_t v30 = 0LL;
      __int128 v28 = 0u;
      __int128 v29 = 0u;
    }

    j__swift_release(v11);
    j__swift_release(v11);
    return sub_100006060((uint64_t)&v28, &qword_1002EDEB8);
  }

  double v24 = *(void (**)(uint64_t))(v1
                                       + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_artworkSelectionHandler);
  if (v24)
  {
    uint64_t v25 = *(void *)(v1
                    + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_artworkSelectionHandler
                    + 8);
    j__swift_retain(v11);
    sub_100017A40((uint64_t)v24, v25);
    v24(v11);
    sub_10000D3D8((uint64_t)v24, v25);
    return j__swift_release(v11);
  }

  return result;
}

uint64_t sub_1002107A8@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  v31[1] = a3;
  char v4 = a2 & 1;
  uint64_t v5 = type metadata accessor for VideoControls(0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v31 - v9;
  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __chkstk_darwin(v11);
  id v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for VideoFillMode(0LL);
  __n128 v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = (*(uint64_t (**)(char *, void, __n128))(v18 + 104))( v17,  enum case for VideoFillMode.scaleAspectFit(_:),  v15);
  uint64_t v20 = Video.preview.getter(v19);
  double v21 = Artwork.size.getter(v20);
  swift_release(v20);
  AspectRatio.init(_:_:)(v22, v21);
  uint64_t v23 = type metadata accessor for AspectRatio(0LL);
  uint64_t v24 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v13, 0LL, 1LL, v23);
  uint64_t v25 = Video.playbackControls.getter(v24);
  uint64_t v26 = Video.autoPlayPlaybackControls.getter(v25);
  char v27 = Video.canPlayFullScreen.getter(v26);
  char v28 = Video.allowsAutoPlay.getter();
  char v29 = Video.looping.getter();
  return VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)( v17,  v13,  v10,  v7,  v27 & 1,  v28 & 1,  v29 & 1,  1LL,  a1,  v4);
}

uint64_t type metadata accessor for ProductMediaCollectionView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade26ProductMediaCollectionView);
}

uint64_t type metadata accessor for ProductMediaCollectionView.DataSource()
{
  return objc_opt_self(&OBJC_CLASS____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource);
}

uint64_t destroy for ProductMediaCollectionView.Media(void *a1)
{
  return j__swift_release(*a1);
}

uint64_t _s6Arcade26ProductMediaCollectionViewC5MediaOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((_BYTE *)a2 + 16);
  j__swift_retain(*a2);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  return a1;
}

uint64_t *assignWithCopy for ProductMediaCollectionView.Media(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((_BYTE *)a2 + 16);
  j__swift_retain(*a2);
  uint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  *((_BYTE *)a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  j__swift_release(v6);
  return a1;
}

__n128 initializeWithTake for ProductMediaCollectionView.Media(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for ProductMediaCollectionView.Media(uint64_t *a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_BYTE *)a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  j__swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductMediaCollectionView.Media(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x3FFF && *(_BYTE *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 7) | (2
                                              * ((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7 | (((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x3F) << 7)))) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ProductMediaCollectionView.Media( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(_BYTE *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
    *(void *)__n128 result = a2 - 0x3FFF;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0x3FFF) {
      *(_BYTE *)(result + 17) = 1;
    }
  }

  else
  {
    if (a3 >= 0x3FFF) {
      *(_BYTE *)(result + 17) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007LL;
      *(void *)(result + 8) = 0LL;
      *(_BYTE *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = (v3 >> 6) & 0xFE;
    }
  }

  return result;
}

uint64_t sub_100210DE0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_100210DEC(uint64_t result)
{
  *(_BYTE *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_100210DFC(uint64_t result, char a2)
{
  char v2 = *(_BYTE *)(result + 16) & 1 | (a2 << 7);
  *(void *)result &= 0xFFFFFFFFFFFFFF8uLL;
  *(_BYTE *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  return result;
}

ValueMetadata *type metadata accessor for ProductMediaCollectionView.Media()
{
  return &type metadata for ProductMediaCollectionView.Media;
}

void sub_100210E2C(uint64_t a1)
{
  uint64_t v3 = v1;
  *(void *)&v1[OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_activeDataSource] = 0LL;
  uint64_t v4 = OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_flowLayout;
  id v5 = [objc_allocWithZone(UICollectionViewFlowLayout) init];
  [v5 setScrollDirection:1];
  *(void *)&v3[v4] = v5;
  uint64_t v6 = &v3[OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_artworkSelectionHandler];
  *(void *)uint64_t v6 = 0LL;
  *((void *)v6 + 1) = 0LL;
  uint64_t v7 = OBJC_IVAR____TtC6Arcade26ProductMediaCollectionView_compoundScrollObserver;
  id v8 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0LL));
  *(void *)&v3[v7] = CompoundScrollObserver.init(children:)(&_swiftEmptyArrayStorage);

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000010LL,  0x800000010024F620LL,  "Arcade/ProductMediaCollectionView.swift",  39LL,  2LL,  a1,  0);
  __break(1u);
}

unint64_t sub_100210F10(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1
                 + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_displayedMedia);
  unint64_t result = IndexPath.item.getter(a1);
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }

  if (result >= *(void *)(v4 + 16))
  {
LABEL_10:
    __break(1u);
    return result;
  }

  uint64_t v6 = v4 + 24 * result;
  uint64_t v8 = *(void *)(v6 + 32);
  uint64_t v7 = *(void *)(v6 + 40);
  int v9 = *(char *)(v6 + 48);
  if (v9 < 0)
  {
    uint64_t v13 = type metadata accessor for ScreenshotCollectionViewCell();
    unint64_t result = swift_dynamicCastClass(a1, v13);
    if (result)
    {
      unint64_t v14 = result;
      uint64_t v15 = *(void *)(v2
                      + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_objectGraph);
      v20[3] = type metadata accessor for Artwork(0LL);
      void v20[4] = sub_100003B6C( &qword_1002EDED8,  (uint64_t (*)(uint64_t))&type metadata accessor for Artwork,  (uint64_t)&protocol conformance descriptor for Artwork);
      void v19[3] = v13;
      v20[0] = v8;
      v19[0] = v14;
      uint64_t v16 = *(void *)(v2
                      + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_artworkLoader);
      j__swift_retain(v8);
      j__swift_retain(v8);
      id v17 = a1;
      tryToFetch(artworkFor:into:on:asPartOf:)(v20, v19, v16, v15, v18);
      _s6Arcade17PillOverlayLayoutVwxx_0(v19);
      sub_100006060((uint64_t)v20, &qword_1002E77A0);
      return j__swift_release(v8);
    }
  }

  else
  {
    uint64_t v10 = type metadata accessor for VideoCollectionViewCell();
    unint64_t result = swift_dynamicCastClass(a1, v10);
    if (result)
    {
      uint64_t v11 = result;
      j__swift_retain(v8);
      id v12 = a1;
      sub_100210094(v8, v7, v9 & 1, v11);

      return j__swift_release(v8);
    }
  }

  return result;
}

unint64_t sub_1002110D8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1
                 + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_displayedMedia);
  unint64_t result = IndexPath.item.getter(a1);
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }

  if (result >= *(void *)(v4 + 16))
  {
LABEL_11:
    __break(1u);
    return result;
  }

  uint64_t v6 = v4 + 24 * result;
  uint64_t v7 = *(void *)(v6 + 32);
  if (*(char *)(v6 + 48) < 0)
  {
    uint64_t v13 = type metadata accessor for ScreenshotCollectionViewCell();
    unint64_t result = swift_dynamicCastClass(a1, v13);
    if (result)
    {
      void v17[3] = v13;
      v17[0] = result;
      uint64_t v14 = *(void *)(v2
                      + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_artworkLoader);
      uint64_t v15 = *(void *)(v2
                      + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_objectGraph);
      j__swift_retain(v7);
      id v16 = a1;
      tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v17, v14, v15, 1LL);
      _s6Arcade17PillOverlayLayoutVwxx_0(v17);
      return j__swift_release(v7);
    }
  }

  else
  {
    uint64_t v8 = type metadata accessor for VideoCollectionViewCell();
    unint64_t result = swift_dynamicCastClass(a1, v8);
    if (result)
    {
      unint64_t result = swift_unknownObjectWeakLoadStrong( *(void *)(result + OBJC_IVAR____TtC6Arcade23VideoCollectionViewCell_videoContainer)
               + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
      if (result)
      {
        int v9 = (void *)result;
        j__swift_retain(v7);
        uint64_t v10 = type metadata accessor for VideoView(0LL);
        uint64_t v11 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
        id v12 = a1;
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v9, 1LL, v10, v11);

        return j__swift_release(v7);
      }
    }
  }

  return result;
}

unint64_t sub_1002112AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AspectRatio(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = *(void *)(v0
                 + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_displayedMedia);
  unint64_t result = IndexPath.item.getter(v10);
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }

  if (result >= *(void *)(v9 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }

  uint64_t v12 = v9 + 24 * result;
  uint64_t v13 = *(void *)(v12 + 32);
  int v14 = *(char *)(v12 + 48);
  swift_retain(v13);
  if (v14 < 0)
  {
    double v21 = Artwork.size.getter(v15);
    __n128 v20 = AspectRatio.init(_:_:)(v22, v21);
  }

  else
  {
    swift_retain(v13);
    uint64_t v17 = Video.preview.getter(v16);
    double v18 = Artwork.size.getter(v17);
    AspectRatio.init(_:_:)(v19, v18);
    swift_release(v17);
    j__swift_release(v13);
  }

  (*(void (**)(char *, char *, uint64_t, __n128))(v3 + 32))(v8, v5, v2, v20);
  uint64_t v23 = *(void *)(v1
                  + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_pageTraits);
  uint64_t v24 = *(char *)(v1
                + OBJC_IVAR____TtCC6Arcade26ProductMediaCollectionViewP33_ABD4D9B5E11AA1EEFB4E3F7AB5D7A38C10DataSource_gridType);
  swift_getObjectType(v23);
  double v25 = dbl_100243038[v24];
  double v26 = (PageTraitEnvironment.pageContentSize.getter() + (v25 + -1.0) * -40.0) / v25;
  AspectRatio.height(fromWidth:)(v26);
  j__swift_release(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

double sub_100211478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1002DCE20 != -1) {
    swift_once(&qword_1002DCE20, sub_1001631B8);
  }
  uint64_t ObjectType = swift_getObjectType(a6);
  return sub_100132D00(&xmmword_1002F0CC0, a6, ObjectType);
}

uint64_t sub_1002114D4()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC630 != -1) {
    swift_once(&qword_1002DC630, sub_10007156C);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_1000061F4(v5, (uint64_t)qword_1002EEEE0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(v4, v6, v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for FontSource.useCase(_:), v0);
  qword_1002EDF40 = type metadata accessor for StaticDimension(0LL);
  unk_1002EDF48 = &protocol witness table for StaticDimension;
  sub_100009D54(qword_1002EDF28);
  v10[3] = v0;
  v10[4] = &protocol witness table for FontSource;
  uint64_t v7 = sub_100009D54(v10);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v7, v4, v0);
  StaticDimension.init(_:scaledLike:)(v10, 62.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_100211618()
{
  qword_1002EDF68 = (uint64_t)&type metadata for Double;
  unk_1002EDF70 = &protocol witness table for Double;
  qword_1002EDF50 = 0x404F000000000000LL;
}

void sub_100211640()
{
  qword_1002EDF90 = (uint64_t)&type metadata for Double;
  unk_1002EDF98 = &protocol witness table for Double;
  qword_1002EDF78 = 0x4024000000000000LL;
}

char *sub_100211668(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for SystemImage(0LL);
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  __chkstk_darwin(v10);
  id v61 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for FontUseCase(0LL, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_ratingLabel;
  double v18 = (objc_class *)type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v19 = qword_1002DC630;
  __n128 v20 = v5;
  if (v19 != -1) {
    swift_once(&qword_1002DC630, sub_10007156C);
  }
  uint64_t v21 = sub_1000061F4(v13, (uint64_t)qword_1002EEEE0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v22(v16, v21, v13);
  *(void *)&v5[v17] = sub_1000137B8((uint64_t)v16, 1LL, 0LL, 1, 0);
  uint64_t v23 = OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_outOfRatingLabel;
  if (qword_1002DC638 != -1) {
    swift_once(&qword_1002DC638, sub_100071584);
  }
  uint64_t v24 = sub_1000061F4(v13, (uint64_t)qword_1002EEEF8);
  v22(v16, v24, v13);
  *(void *)&v20[v23] = sub_1000137B8((uint64_t)v16, 2LL, 0LL, 1, 0);
  uint64_t v25 = OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_starRatingView;
  *(void *)&v20[v25] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for StarRatingView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  v20[OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_isPressEnabled] = 0;

  double v26 = (objc_class *)type metadata accessor for ProductStarRatingsContentView();
  v66.id receiver = v20;
  v66.super_class = v26;
  uint64_t v27 = (char *)objc_msgSendSuper2(&v66, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v28 = OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_ratingLabel;
  char v29 = *(_BYTE **)&v27[OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_ratingLabel];
  int v30 = v29[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v29[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  uint64_t v31 = v27;
  if (v30 != 1)
  {
    uint64_t v32 = v29;
    id v33 = [v32 traitCollection];
    char v34 = UITraitCollection.prefersRightToLeftLayouts.getter(v33);

    if ((v34 & 1) != 0) {
      uint64_t v35 = 2LL;
    }
    else {
      uint64_t v35 = 0LL;
    }
    v65.id receiver = v32;
    v65.super_class = v18;
    objc_msgSendSuper2(&v65, "setTextAlignment:", v35);
  }

  uint64_t v36 = *(void **)&v27[v28];
  sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  id v37 = v36;
  double v38 = (void *)static UIColor.opacityA.getter();
  [v37 setTextColor:v38];

  [v31 addSubview:*(void *)&v27[v28]];
  uint64_t v39 = OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_outOfRatingLabel;
  double v40 = *(_BYTE **)&v31[OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_outOfRatingLabel];
  int v41 = v40[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v40[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v41 != 1)
  {
    uint64_t v42 = v40;
    id v43 = [v42 traitCollection];
    char v44 = UITraitCollection.prefersRightToLeftLayouts.getter(v43);

    if ((v44 & 1) != 0) {
      uint64_t v45 = 2LL;
    }
    else {
      uint64_t v45 = 0LL;
    }
    v64.id receiver = v42;
    v64.super_class = v18;
    objc_msgSendSuper2(&v64, "setTextAlignment:", v45);
  }

  id v46 = *(id *)&v31[v39];
  uint64_t v47 = (void *)static UIColor.opacityB.getter();
  [v46 setTextColor:v47];

  [v31 addSubview:*(void *)&v31[v39]];
  uint64_t v48 = OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_starRatingView;
  id v49 = *(_BYTE **)&v31[OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_starRatingView];
  int v50 = v49[OBJC_IVAR____TtC6Arcade14StarRatingView_starSize];
  v49[OBJC_IVAR____TtC6Arcade14StarRatingView_starSize] = 0;
  if (v50 == 1)
  {
    __n128 v52 = v61;
    uint64_t v51 = v62;
    uint64_t v53 = v63;
    (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, enum case for SystemImage.starFill(_:), v63);
    sub_100006028(0LL, (unint64_t *)&qword_1002DDB10, &OBJC_CLASS___UIImageSymbolConfiguration_ptr);
    uint64_t v54 = v49;
    uint64_t v55 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)( UIFontTextStyleCallout,  0LL,  1LL,  1LL,  0LL);
    uint64_t v56 = (void *)static SystemImage.load(_:with:)(v52, v55);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    id v57 = [v56 imageWithRenderingMode:2];

    uint64_t v58 = *(void **)&v54[OBJC_IVAR____TtC6Arcade14StarRatingView_starGlyph];
    *(void *)&v54[OBJC_IVAR____TtC6Arcade14StarRatingView_starGlyph] = v57;

    [v54 setNeedsDisplay];
  }

  [v31 addSubview:*(void *)&v31[v48]];
  objc_msgSend(v31, "setLayoutMargins:", 20.0, 20.0, 20.0, 20.0);

  return v31;
}

id sub_100211BC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (objc_class *)type metadata accessor for ProductStarRatingsContentView();
  v67.id receiver = v0;
  v67.super_class = v6;
  objc_msgSendSuper2(&v67, "layoutSubviews");
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_ratingLabel];
  LayoutMarginsAware<>.layoutFrame.getter(v6);
  id v63 = v7;
  objc_msgSend(v7, "measurementsWithFitting:in:", v0, v8, v9);
  double v11 = v10;
  CGFloat v13 = v12;
  double v15 = v14;
  uint64_t v64 = v16;
  if (qword_1002DD188 != -1) {
    swift_once(&qword_1002DD188, sub_1002114D4);
  }
  uint64_t v17 = qword_1002EDF40;
  uint64_t v18 = unk_1002EDF48;
  sub_100005F8C(qword_1002EDF28, qword_1002EDF40);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v17, v18);
  double v19 = AnyDimension.value(in:rounded:)(v1, v5, v17, v18);
  uint64_t v66 = v3;
  __n128 v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v5, v2);
  double v21 = v19 - v15;
  *(void *)&v68.origin.CGFloat x = LayoutMarginsAware<>.layoutFrame.getter(v6).n128_u64[0];
  double MinY = CGRectGetMinY(v68);
  uint64_t v23 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_outOfRatingLabel];
  LayoutMarginsAware<>.layoutFrame.getter(v6);
  objc_msgSend(v23, "measurementsWithFitting:in:", v1, v24, v25);
  double v27 = v26;
  uint64_t v61 = v29;
  uint64_t v62 = v28;
  double v65 = v30;
  if (qword_1002DD198 != -1) {
    swift_once(&qword_1002DD198, sub_100211640);
  }
  double v31 = v21 + MinY;
  uint64_t v32 = qword_1002EDF90;
  uint64_t v33 = unk_1002EDF98;
  sub_100005F8C(qword_1002EDF78, qword_1002EDF90);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v32, v33);
  double v34 = AnyDimension.value(in:rounded:)(v1, v5, v32, v33);
  v20(v5, v2);
  double v35 = v27 + v11 + v34;
  *(void *)&v69.origin.CGFloat x = LayoutMarginsAware<>.layoutFrame.getter(v6).n128_u64[0];
  double Width = CGRectGetWidth(v69);
  *(void *)&v70.origin.CGFloat x = LayoutMarginsAware<>.layoutFrame.getter(v6).n128_u64[0];
  double MidX = CGRectGetMidX(v70);
  LayoutMarginsAware<>.layoutFrame.getter(v6);
  if (v35 >= Width)
  {
    double v40 = CGRect.withLayoutDirection(in:relativeTo:)(v1);
    objc_msgSend(v63, "setFrame:", v40, v61, v62);
    v73.origin.CGFloat x = MidX - v11 * 0.5;
    v73.origin.CGFloat y = v31;
    v73.size.double width = v11;
    v73.size.double height = v13;
    CGRectGetMaxY(v73);
    *(void *)&v74.origin.CGFloat x = LayoutMarginsAware<>.layoutFrame.getter(v6).n128_u64[0];
    CGRectGetMidX(v74);
  }

  else
  {
    CGFloat v38 = MidX + v35 * -0.5;
    double v39 = CGRect.withLayoutDirection(in:relativeTo:)(v1);
    objc_msgSend(v63, "setFrame:", v39, v61, v62);
    v71.origin.CGFloat x = v38;
    v71.origin.CGFloat y = v31;
    v71.size.double width = v11;
    v71.size.double height = v13;
    CGRectGetMaxY(v71);
    v72.origin.CGFloat x = v38;
    v72.origin.CGFloat y = v31;
    v72.size.double width = v11;
    v72.size.double height = v13;
    CGRectGetMaxX(v72);
  }

  LayoutMarginsAware<>.layoutFrame.getter(v6);
  [v23 setFrame:CGRect.withLayoutDirection(in:relativeTo:)(v1)];
  int v41 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_starRatingView];
  LayoutMarginsAware<>.layoutFrame.getter(v6);
  objc_msgSend(v41, "measurementsWithFitting:in:", v1, v42, v43);
  double v45 = v44;
  double v47 = v46;
  double v49 = v48;
  [v23 frame];
  double MaxY = CGRectGetMaxY(v75);
  if (qword_1002DD190 != -1) {
    swift_once(&qword_1002DD190, sub_100211618);
  }
  double v51 = MaxY - v65;
  uint64_t v52 = qword_1002EDF68;
  uint64_t v53 = unk_1002EDF70;
  sub_100005F8C(qword_1002EDF50, qword_1002EDF68);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v52, v53);
  double v54 = AnyDimension.value(in:rounded:)(v1, v5, v52, v53);
  v20(v5, v2);
  double v55 = v51 + v54 - v49;
  *(void *)&v76.origin.CGFloat x = LayoutMarginsAware<>.layoutFrame.getter(v6).n128_u64[0];
  double v56 = CGRectGetMidX(v76) + v45 * -0.5;
  (*(void (**)(char *, void, uint64_t))(v66 + 104))( v5,  enum case for FloatingPointRoundingRule.down(_:),  v2);
  double v57 = CGPoint.rounded(_:)(v5, v56, v55);
  double v59 = v58;
  v20(v5, v2);
  return objc_msgSend(v41, "setFrame:", v57, v59, v45, v47);
}

void sub_1002120E8(float a1)
{
  id v3 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
  *(float *)&double v4 = a1;
  v20.value.super.super.Class isa = (Class)[v3 initWithFloat:v4];
  Class isa = v20.value.super.super.isa;
  v20.is_nil = 1;
  object = localizedStringForDecimal(_:_:)(v20, v6).value._object;

  if (object)
  {
    double v8 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_ratingLabel);
    uint64_t v9 = sub_1000031E8(&qword_1002DF830);
    initeCGFloat d = swift_initStackObject(v9, v19);
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    *(void *)(inited + 6swift_weakDestroy(v0 + 4) = &type metadata for Int;
    *(void *)(inited + 32) = NSKernAttributeName;
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = -1LL;
    double v11 = NSKernAttributeName;
    unint64_t v12 = sub_1000E68C8(inited);
    id v13 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    type metadata accessor for Key(0LL);
    sub_100009CA4( (unint64_t *)&qword_1002DD7B0,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_10023351C);
    Class v15 = Dictionary._bridgeToObjectiveC()().super.isa;
    id v16 = objc_msgSend(v13, "initWithString:attributes:", v14, v15, swift_bridgeObjectRelease(v12).n128_f64[0]);

    [v8 setAttributedText:v16];
    uint64_t v17 = *(char **)(v1 + OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_starRatingView);
    double v18 = *(double *)&v17[OBJC_IVAR____TtC6Arcade14StarRatingView_rating];
    *(double *)&v17[OBJC_IVAR____TtC6Arcade14StarRatingView_rating] = a1;
    if (v18 != a1) {
      [v17 setNeedsDisplay];
    }
  }

id sub_1002122BC()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductStarRatingsContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProductStarRatingsContentView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade29ProductStarRatingsContentView);
}

uint64_t sub_100212358(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100009CA4( &qword_1002EDFE8,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for ProductStarRatingsContentView,  (uint64_t)&unk_1002430C0);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_100212394()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ProductStarRatings(0LL);
  uint64_t v3 = sub_100009CA4( &qword_1002EDFF0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductStarRatings,  (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  ItemLayoutContext.typedModel<A>(as:)(&v12, v2, v2, v3);
  uint64_t v4 = v12;
  if (v12)
  {
    swift_retain(v12);
    float v6 = Ratings.ratingAverage.getter(v5);
    swift_release(v4);
    sub_1002120E8(v6);
    uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_outOfRatingLabel];
    v8._object = (void *)0x80000001002465F0LL;
    v8._countAndFlagsBits = 0xD000000000000012LL;
    v9._countAndFlagsBits = 0LL;
    v9._object = (void *)0xE000000000000000LL;
    object = localizedStringWithCount(_:count:comment:)(v8, 5LL, v9)._object;
    NSString v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setText:", v11, swift_bridgeObjectRelease(object).n128_f64[0]);

    [v1 setNeedsLayout];
    swift_release(v4);
  }

void sub_1002124BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_ratingLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002DC630 != -1) {
    swift_once(&qword_1002DC630, sub_10007156C);
  }
  uint64_t v9 = sub_1000061F4(v4, (uint64_t)qword_1002EEEE0);
  double v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v10(v7, v9, v4);
  *(void *)&v2[v8] = sub_1000137B8((uint64_t)v7, 1LL, 0LL, 1, 0);
  uint64_t v11 = OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_outOfRatingLabel;
  if (qword_1002DC638 != -1) {
    swift_once(&qword_1002DC638, sub_100071584);
  }
  uint64_t v12 = sub_1000061F4(v4, (uint64_t)qword_1002EEEF8);
  v10(v7, v12, v4);
  *(void *)&v2[v11] = sub_1000137B8((uint64_t)v7, 2LL, 0LL, 1, 0);
  uint64_t v13 = OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_starRatingView;
  *(void *)&v3[v13] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for StarRatingView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  v3[OBJC_IVAR____TtC6Arcade29ProductStarRatingsContentView_isPressEnabled] = 0;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/ProductStarRatingsContentView.swift",  42LL,  2LL,  52LL,  0);
  __break(1u);
}

uint64_t sub_100212684()
{
  uint64_t v0 = type metadata accessor for SystemImage(0LL);
  uint64_t v33 = *(void *)(v0 - 8);
  uint64_t v34 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for FontSource(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - v8;
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = type metadata accessor for OfferButtonMetrics(0LL, v11);
  sub_10000FF90(v14, qword_1002F1998);
  uint64_t v35 = sub_1000061F4(v14, (uint64_t)qword_1002F1998);
  if (qword_1002DC718 != -1) {
    swift_once(&qword_1002DC718, sub_100071830);
  }
  uint64_t v16 = type metadata accessor for FontUseCase(0LL, v15);
  uint64_t v17 = sub_1000061F4(v16, (uint64_t)qword_1002EF198);
  double v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16LL);
  v18(v13, v17, v16);
  uint64_t v19 = enum case for FontSource.useCase(_:);
  NSNumber_optional v20 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v20(v13, enum case for FontSource.useCase(_:), v3);
  uint64_t v32 = v13;
  if (qword_1002DC720 != -1) {
    swift_once(&qword_1002DC720, sub_100071848);
  }
  uint64_t v21 = sub_1000061F4(v16, (uint64_t)qword_1002EF1B0);
  v18(v9, v21, v16);
  v20(v9, v19, v3);
  v18(v6, v21, v16);
  v20(v6, v19, v3);
  v37[3] = type metadata accessor for StaticDimension(0LL);
  v37[4] = &protocol witness table for StaticDimension;
  sub_100009D54(v37);
  void v36[3] = v3;
  v36[4] = &protocol witness table for FontSource;
  uint64_t v22 = sub_100009D54(v36);
  (*(void (**)(void *, char *, uint64_t))(v4 + 16))(v22, v6, v3);
  StaticDimension.init(_:scaledLike:)(v36, 12.0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v24 = v33;
  uint64_t v23 = v34;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))( v2,  enum case for SystemImage.icloudAndArrowDown(_:),  v34);
  double v25 = (void *)objc_opt_self(&OBJC_CLASS___UIImageSymbolConfiguration);
  id v26 = [v25 configurationWithPointSize:6 weight:38.0];
  uint64_t v27 = static SystemImage.load(_:with:)(v2, v26);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v2, v23);
  type metadata accessor for BundleImage(0LL);
  uint64_t v28 = (void *)static BundleImage.load(_:bundle:with:compatibleWith:)( 0x74536E6F69746341LL,  0xEA0000000000706FLL,  0LL,  0LL,  0LL);
  id v29 = [v28 imageWithRenderingMode:2];

  id v30 = [v25 configurationWithPointSize:6 weight:38.0];
  return OfferButtonMetrics.init(fontSource:subtitleFontSource:inAppPurchaseTextSpace:contentInsets:redownloadImage:stopImage:symbolConfiguration:redownloadImageSymbolConfiguration:minimumSize:progressDiameter:lineWidth:textShapeLineWidth:expandsToFit:cornerRadius:includeTopPadding:)( v32,  v9,  v37,  v27,  v29,  v30,  0LL,  0LL,  6.0,  16.0,  6.0,  16.0,  120.0,  64.0,  56.0,  5.0,  1,  0x4018000000000000LL,  256);
}

void sub_100212A64(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = (void *)type metadata accessor for Uber.AssetType(0LL, a3);
  uint64_t v198 = *(v7 - 1);
  id v199 = v7;
  __chkstk_darwin(v7);
  uint64_t v190 = (char *)&v181 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v195 = sub_1000031E8(&qword_1002E4308);
  __chkstk_darwin(v195);
  uint64_t v10 = (char *)&v181 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v193 = (uint64_t)&v181 - v12;
  uint64_t v13 = sub_1000031E8(&qword_1002E9FD0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v181 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  double v18 = (char *)&v181 - v17;
  __chkstk_darwin(v19);
  uint64_t v192 = (uint64_t)&v181 - v20;
  __chkstk_darwin(v21);
  uint64_t v189 = (uint64_t)&v181 - v22;
  __chkstk_darwin(v23);
  double v25 = (char *)&v181 - v24;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v181 - v27;
  uint64_t v29 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  __n128 v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v181 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uber;
  uint64_t v35 = *(void *)&v4[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uber];
  uint64_t v196 = v33;
  uint64_t v197 = v36;
  uint64_t v191 = v15;
  uint64_t v194 = v18;
  if (a1)
  {
    v203[0] = a1;
    if (v35)
    {
      uint64_t v201 = v35;
      uint64_t v37 = type metadata accessor for Uber(0LL, v31);
      uint64_t v38 = sub_100009CA4( &qword_1002EE060,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for Uber,  (uint64_t)&protocol conformance descriptor for Uber);
      swift_retain_n(a1, 2LL);
      LOBYTE(v37) = dispatch thunk of static Equatable.== infix(_:_:)(v203, &v201, v37, v38);
      uint64_t v39 = v203[0];
      swift_release(a1);
      swift_release(v39);
      if ((v37 & 1) != 0) {
        return;
      }
    }
  }

  else if (!v35)
  {
    return;
  }

  char v185 = v10;
  uint64_t v186 = v30;
  uint64_t v40 = type metadata accessor for ArtworkLoader(0LL);
  uint64_t v41 = inject(_:from:)(v40, a2);
  double v42 = v4;
  uint64_t v44 = *(void *)&v4[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey];
  uint64_t v43 = *(void *)&v4[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey + 8];
  double v45 = (uint64_t (*)())swift_allocObject(&unk_100290018, 40LL, 7LL);
  *((void *)v45 + 2) = v41;
  *((void *)v45 + 3) = v44;
  uint64_t v187 = v44;
  *((void *)v45 + swift_weakDestroy(v0 + 4) = v43;
  double v46 = (uint64_t (**)())&v42[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_forgetFetchBlock];
  uint64_t v47 = *(void *)&v42[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_forgetFetchBlock];
  uint64_t v48 = *(void *)&v42[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_forgetFetchBlock + 8];
  *double v46 = sub_100214EBC;
  v46[1] = v45;
  uint64_t v188 = v43;
  uint64_t v49 = v43;
  int v50 = v42;
  swift_bridgeObjectRetain(v49);
  uint64_t v200 = v41;
  swift_retain(v41);
  sub_10000D3D8(v47, v48);
  uint64_t v51 = *(void *)&v42[v34];
  *(void *)&v42[v34] = a1;
  swift_retain(a1);
  unint64_t v52 = swift_release(v51).n128_u64[0];
  if (!a1)
  {
    id v53 = 0LL;
    goto LABEL_37;
  }

  id v53 = sub_1001573C8(a2);
  uint64_t v54 = Uber.video.getter();
  if (!v54)
  {
LABEL_17:
    uint64_t v91 = Uber.artwork.getter(v54);
    id v89 = v199;
    if (!v91) {
      goto LABEL_23;
    }
    uint64_t v90 = v91;
    if (v53)
    {
      uint64_t v92 = type metadata accessor for ArtworkView(0LL);
      id v93 = (void *)swift_dynamicCastClass(v53, v92);
      if (v93)
      {
        uint64_t v94 = *(void *)&v50[v34];
        id v184 = v53;
        uint64_t v183 = v90;
        id v182 = v93;
        if (v94)
        {
          id v95 = v53;
          __n128 v96 = swift_retain(v94);
          Uber.assetType.getter(v96);
          __n128 v97 = swift_release(v94);
          uint64_t v98 = v198;
          uint64_t v99 = *(void (**)(char *, uint64_t, uint64_t, id))(v198 + 56);
          ((void (*)(char *, void, uint64_t, id, __n128))v99)(v28, 0LL, 1LL, v89, v97);
        }

        else
        {
          uint64_t v98 = v198;
          uint64_t v99 = *(void (**)(char *, uint64_t, uint64_t, id))(v198 + 56);
          v99(v28, 1LL, 1LL, v89);
          id v117 = v53;
        }

        (*(void (**)(char *, void, id))(v98 + 104))(v25, enum case for Uber.AssetType.artwork(_:), v89);
        v99(v25, 0LL, 1LL, v89);
        uint64_t v118 = v193;
        uint64_t v119 = v193 + *(int *)(v195 + 48);
        sub_100214EC8((uint64_t)v28, v193);
        sub_100214EC8((uint64_t)v25, v119);
        id v120 = *(uint64_t (**)(uint64_t, uint64_t, id))(v98 + 48);
        if (v120(v118, 1LL, v89) == 1)
        {
          sub_100006060((uint64_t)v25, &qword_1002E9FD0);
          uint64_t v118 = v193;
          sub_100006060((uint64_t)v28, &qword_1002E9FD0);
          int v121 = v120(v119, 1LL, v89);
          id v53 = v184;
          if (v121 == 1)
          {
            sub_100006060(v118, &qword_1002E9FD0);
LABEL_50:
            id v162 = [(id)objc_opt_self(UIScreen) mainScreen];
            [v162 _referenceBounds];
            double v164 = v163;
            double v166 = v165;

            double v167 = v196;
            uint64_t v168 = v183;
            uint64_t v170 = Artwork.crop.getter(v169);
            uint64_t v171 = Artwork.Crop.preferredContentMode.getter(v170);
            (*(void (**)(char *, uint64_t))(v186 + 8))(v167, v197);
            uint64_t v172 = Artwork.config(_:mode:prefersLayeredImage:)(v171, 0LL, v164, v166);
            [*(id *)&v50[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_fallbackArtworkEffectView] removeFromSuperview];
            uint64_t v201 = v187;
            uint64_t v202 = v188;
            swift_bridgeObjectRetain(v188);
            AnyHashable.init<A>(_:)(v203, &v201, &type metadata for String, &protocol witness table for String);
            uint64_t v173 = swift_allocObject(&unk_100290040, 24LL, 7LL);
            swift_unknownObjectWeakInit(v173 + 16, v50);
            __n128 v174 = swift_retain(v173);
            double v175 = v53;
            uint64_t v176 = v200;
            ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v172,  2LL,  1LL,  v203,  sub_100214F9C,  v173,  v174);
            swift_release(v173);
            sub_100006060((uint64_t)v203, (uint64_t *)&unk_1002DE600);
            swift_release(v173);
            uint64_t v178 = (void *)Artwork.backgroundColor.getter(v177);
            [v50 setBackgroundColor:v178];

            id v179 = v182;
            [v182 setHidden:1];
            sub_1001B2138();
            id v180 = v175;
            sub_100214BCC(v179);
            swift_release(v168);
            swift_release(v172);
            swift_release(v176);

            return;
          }
        }

        else
        {
          uint64_t v122 = v189;
          sub_100214EC8(v118, v189);
          if (v120(v119, 1LL, v89) != 1)
          {
            uint64_t v157 = v198;
            uint64_t v158 = v190;
            (*(void (**)(char *, uint64_t, id))(v198 + 32))(v190, v119, v89);
            uint64_t v159 = sub_100009CA4( &qword_1002E4318,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for Uber.AssetType,  (uint64_t)&protocol conformance descriptor for Uber.AssetType);
            char v160 = dispatch thunk of static Equatable.== infix(_:_:)(v122, v158, v89, v159);
            uint64_t v161 = *(void (**)(char *, id))(v157 + 8);
            v161(v158, v199);
            sub_100006060((uint64_t)v25, &qword_1002E9FD0);
            sub_100006060((uint64_t)v28, &qword_1002E9FD0);
            v161((char *)v122, v199);
            id v89 = v199;
            sub_100006060(v193, &qword_1002E9FD0);
            id v53 = v184;
            if ((v160 & 1) != 0) {
              goto LABEL_50;
            }
            goto LABEL_51;
          }

          sub_100006060((uint64_t)v25, &qword_1002E9FD0);
          sub_100006060((uint64_t)v28, &qword_1002E9FD0);
          (*(void (**)(uint64_t, id))(v198 + 8))(v122, v89);
          id v53 = v184;
        }

        sub_100006060(v118, &qword_1002E4308);
LABEL_51:
        swift_release(v183);

LABEL_23:
        uint64_t v100 = Uber.iconArtwork.getter(v88);
        if (v100)
        {
          uint64_t v101 = v100;
          if (v53)
          {
            uint64_t v102 = type metadata accessor for ArtworkView(0LL);
            id v103 = (void *)swift_dynamicCastClass(v53, v102);
            if (v103)
            {
              id v199 = v103;
              uint64_t v104 = *(void *)&v50[v34];
              if (v104)
              {
                id v105 = v53;
                __n128 v106 = swift_retain(v104);
                uint64_t v107 = v192;
                Uber.assetType.getter(v106);
                __n128 v108 = swift_release(v104);
                uint64_t v109 = v198;
                uint64_t v110 = *(void (**)(uint64_t, uint64_t, uint64_t, id))(v198 + 56);
                ((void (*)(uint64_t, void, uint64_t, id, __n128))v110)(v107, 0LL, 1LL, v89, v108);
              }

              else
              {
                uint64_t v109 = v198;
                uint64_t v110 = *(void (**)(uint64_t, uint64_t, uint64_t, id))(v198 + 56);
                uint64_t v107 = v192;
                v110(v192, 1LL, 1LL, v89);
                id v111 = v53;
              }

              uint64_t v112 = (uint64_t)v194;
              (*(void (**)(char *, void, id))(v109 + 104))( v194,  enum case for Uber.AssetType.icon(_:),  v89);
              v110(v112, 0LL, 1LL, v89);
              uint64_t v113 = (uint64_t)v185;
              uint64_t v114 = (uint64_t)&v185[*(int *)(v195 + 48)];
              sub_100214EC8(v107, (uint64_t)v185);
              sub_100214EC8(v112, v114);
              id v115 = *(unsigned int (**)(uint64_t, uint64_t, id))(v109 + 48);
              if (v115(v113, 1LL, v89) == 1)
              {
                sub_100006060(v112, &qword_1002E9FD0);
                sub_100006060(v107, &qword_1002E9FD0);
                if (v115(v114, 1LL, v89) == 1)
                {
                  sub_100006060((uint64_t)v185, &qword_1002E9FD0);
LABEL_48:
                  uint64_t v127 = (void *)objc_opt_self(&OBJC_CLASS___UIScreen);
                  id v184 = v53;
                  id v128 = [v127 mainScreen];
                  [v128 _referenceBounds];
                  double v130 = v129;
                  double v132 = v131;

                  __n128 v133 = v196;
                  uint64_t v135 = Artwork.crop.getter(v134);
                  uint64_t v136 = Artwork.Crop.preferredContentMode.getter(v135);
                  uint64_t v137 = *(void (**)(char *, uint64_t))(v186 + 8);
                  uint64_t v138 = v197;
                  v137(v133, v197);
                  uint64_t v139 = Artwork.config(_:mode:prefersLayeredImage:)(v136, 0LL, v130, v132);
                  id v140 = [v127 mainScreen];
                  [v140 _referenceBounds];
                  double v142 = v141;
                  double v144 = v143;

                  uint64_t v146 = Artwork.crop.getter(v145);
                  uint64_t v147 = Artwork.Crop.preferredContentMode.getter(v146);
                  v137(v133, v138);
                  uint64_t v148 = Artwork.config(_:mode:prefersLayeredImage:)(v147, 0LL, v142, v144);
                  uint64_t v201 = v187;
                  uint64_t v202 = v188;
                  swift_bridgeObjectRetain(v188);
                  AnyHashable.init<A>(_:)(v203, &v201, &type metadata for String, &protocol witness table for String);
                  uint64_t v149 = swift_allocObject(&unk_100290040, 24LL, 7LL);
                  swift_unknownObjectWeakInit(v149 + 16, v50);
                  uint64_t v150 = swift_allocObject(&unk_100290068, 24LL, 7LL);
                  uint64_t v151 = v200;
                  swift_weakInit(v150 + 16, v200);
                  uint64_t v152 = (void *)swift_allocObject(&unk_100290090, 56LL, 7LL);
                  v152[2] = sub_100214F34;
                  v152[3] = v149;
                  v152[4] = v150;
                  v152[5] = v148;
                  v152[6] = 2LL;
                  swift_retain_n(v149, 2LL);
                  swift_retain(v150);
                  swift_retain(v148);
                  ArtworkLoader.fetchArtworkFromCache(using:forReason:closestMatch:completionHandler:)( v139,  2LL,  1LL,  sub_100072218,  v152);
                  swift_release(v150);
                  __n128 v153 = swift_release(v152);
                  ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v139,  2LL,  0LL,  v203,  sub_100214F34,  v149,  v153);
                  swift_release(v149);
                  sub_100006060((uint64_t)v203, (uint64_t *)&unk_1002DE600);
                  id v154 = objc_msgSend( v50,  "addSubview:",  *(void *)&v50[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_fallbackArtworkEffectView],  swift_release(v149).n128_f64[0]);
                  uint64_t v155 = (void *)Artwork.backgroundColor.getter(v154);
                  [v50 setBackgroundColor:v155];

                  id v156 = v199;
                  [v199 setHidden:1];
                  sub_1001B2138();
                  id v53 = v184;
                  sub_100214BCC(v156);
                  swift_release(v101);
                  swift_release(v139);
                  swift_release(v148);
                  swift_release(v151);

                  goto LABEL_38;
                }
              }

              else
              {
                uint64_t v116 = (uint64_t)v191;
                sub_100214EC8(v113, (uint64_t)v191);
                if (v115(v114, 1LL, v89) != 1)
                {
                  uint64_t v123 = v190;
                  (*(void (**)(char *, uint64_t, id))(v109 + 32))(v190, v114, v89);
                  uint64_t v124 = sub_100009CA4( &qword_1002E4318,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for Uber.AssetType,  (uint64_t)&protocol conformance descriptor for Uber.AssetType);
                  char v125 = dispatch thunk of static Equatable.== infix(_:_:)(v116, v123, v89, v124);
                  id v126 = *(void (**)(char *, id))(v109 + 8);
                  v126(v123, v89);
                  sub_100006060((uint64_t)v194, &qword_1002E9FD0);
                  sub_100006060(v192, &qword_1002E9FD0);
                  v126((char *)v116, v89);
                  sub_100006060(v113, &qword_1002E9FD0);
                  if ((v125 & 1) != 0) {
                    goto LABEL_48;
                  }
                  goto LABEL_36;
                }

                sub_100006060((uint64_t)v194, &qword_1002E9FD0);
                sub_100006060(v107, &qword_1002E9FD0);
                (*(void (**)(uint64_t, id))(v109 + 8))(v116, v89);
              }

              sub_100006060((uint64_t)v185, &qword_1002E4308);
LABEL_36:
              swift_release(v101);

              goto LABEL_37;
            }
          }

          unint64_t v52 = swift_release(v101).n128_u64[0];
        }

char *sub_100213B38(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = type metadata accessor for UUID(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer;
  uint64_t v15 = (objc_class *)type metadata accessor for VideoViewContainer();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  swift_unknownObjectWeakInit(&v16[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view], 0LL);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v17, 0LL);
  v38.id receiver = v16;
  v38.super_class = v15;
  double v18 = v4;
  *(void *)&v4[v14] = objc_msgSendSuper2(&v38, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = (uint64_t *)&v18[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey];
  uint64_t v21 = UUID.init()(v20);
  uint64_t v22 = UUID.uuidString.getter(v21);
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t *v19 = v22;
  v19[1] = v24;
  double v25 = &v18[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_forgetFetchBlock];
  *(void *)double v25 = 0LL;
  *((void *)v25 + 1) = 0LL;
  *(void *)&v18[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView] = 0LL;
  uint64_t v26 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberBlurView;
  uint64_t v27 = type metadata accessor for ProductBackgroundUberEffectView();
  *(void *)&v18[v26] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v27)) init];
  *(void *)&v18[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uber] = 0LL;
  id v28 = [(id)objc_opt_self(UIBlurEffect) effectWithBlurRadius:100.0];
  uint64_t v29 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_fallbackArtworkEffectView;
  id v30 = [objc_allocWithZone(UIVisualEffectView) initWithEffect:v28];

  *(void *)&v18[v29] = v30;
  v37.id receiver = v18;
  v37.super_class = ObjectType;
  __n128 v31 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v32 = *(void **)&v31[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer];
  uint64_t v33 = v31;
  [v32 setHidden:1];
  [v33 addSubview:v32];
  [v33 addSubview:*(void *)&v33[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberBlurView]];
  unint64_t v39 = 0xBFE8000000000000LL;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  uint64_t v42 = 0LL;
  char v43 = 1;
  uint64_t v34 = v33;
  sub_1000661C8((uint64_t)&v39);

  return v34;
}

id sub_100213E30()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = *(void (**)(__n128))&v0[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_forgetFetchBlock];
  if (v3)
  {
    uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_forgetFetchBlock + 8];
    __n128 v5 = swift_retain(v4);
    v3(v5);
    sub_10000D3D8((uint64_t)v3, v4);
  }

  v7.id receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "dealloc");
}

id sub_100213FC4()
{
  v9.id receiver = v0;
  v9.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v9, "layoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer];
  [v0 bounds];
  objc_msgSend(v1, "setFrame:");
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView];
  if (v2)
  {
    id v3 = v2;
    [v0 bounds];
    objc_msgSend(v3, "setFrame:");
  }

  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberBlurView];
  [v0 bounds];
  double MinX = CGRectGetMinX(v10);
  [v0 bounds];
  CGFloat v6 = CGRectGetHeight(v11) + -474.0;
  [v0 bounds];
  objc_msgSend(v4, "setFrame:", MinX, v6, CGRectGetWidth(v12), 474.0);
  objc_super v7 = *(void **)&v0[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_fallbackArtworkEffectView];
  [v0 bounds];
  return objc_msgSend(v7, "setFrame:");
}

uint64_t type metadata accessor for ProductBackgroundUberView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade25ProductBackgroundUberView);
}

uint64_t sub_10021415C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[0] = a2;
  v4[1] = a3;
  swift_bridgeObjectRetain(a3);
  AnyHashable.init<A>(_:)(v5, v4, &type metadata for String, &protocol witness table for String);
  ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v5, 1LL);
  return sub_1000087D8((uint64_t)v5);
}

void sub_1002141BC(objc_class *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a5 + 16;
  swift_beginAccess(a5 + 16, v15, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    objc_super v9 = (void *)Strong;
    if ((a2 & 1) == 0)
    {
      CGRect v10 = *(void **)(Strong + OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView);
      if (!v10
        || (uint64_t v11 = type metadata accessor for ArtworkView(0LL), !swift_dynamicCastClass(v10, v11))
        || (id v12 = v10, v13 = (void *)ArtworkView.image.getter(), v12, !v13))
      {
        char v14 = 1;
        goto LABEL_9;
      }
    }

    char v14 = 0;
LABEL_9:
    sub_100214500(a1, v14);
  }

void sub_100214288(objc_class *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v9, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    sub_100214500(a1, 0);
  }

void sub_1002142E4(objc_class *a1)
{
  objc_msgSend( *(id *)(*(void *)(v1 + OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberBlurView)
          + OBJC_IVAR____TtC6Arcade31ProductBackgroundUberEffectView_layer1),
    "setImage:");
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView);
  if (v2)
  {
    uint64_t v3 = type metadata accessor for ArtworkView(0LL);
    if (swift_dynamicCastClass(v2, v3))
    {
      id v4 = v2;
      v7.value.super.Class isa = a1;
      v7.is_nil = 0;
      ArtworkView.setImage(image:animated:)(v7, v5);
    }
  }
}

void (*sub_100214378(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView;
  a1[1] = v1;
  a1[2] = v3;
  id v4 = *(void **)(v1 + v3);
  if (v4)
  {
    uint64_t v5 = type metadata accessor for ArtworkView(0LL);
    if (swift_dynamicCastClass(v4, v5))
    {
      id v6 = v4;
      id v4 = (void *)ArtworkView.image.getter();
    }

    else
    {
      id v4 = 0LL;
    }
  }

  *a1 = v4;
  return sub_1002143FC;
}

void sub_1002143FC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  image = *(objc_class **)a1;
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = (objc_class *)*(id *)a1;
    [v3 setImage:v5];
    id v6 = *(void **)(v2 + v4);
    if (v6)
    {
      uint64_t v7 = type metadata accessor for ArtworkView(0LL);
      if (swift_dynamicCastClass(v6, v7))
      {
        id v8 = v6;
        v14.value.super.Class isa = image;
        v14.is_nil = 0;
        ArtworkView.setImage(image:animated:)(v14, v9);
      }
    }

    image = v5;
    goto LABEL_9;
  }

  objc_msgSend(v3, "setImage:");
  CGRect v10 = *(void **)(v2 + v4);
  if (v10)
  {
    uint64_t v11 = type metadata accessor for ArtworkView(0LL);
    if (swift_dynamicCastClass(v10, v11))
    {
      uint64_t v5 = v10;
      v15.value.super.Class isa = image;
      v15.is_nil = 0;
      ArtworkView.setImage(image:animated:)(v15, v12);
LABEL_9:
    }
  }
}

void sub_100214500(objc_class *a1, char a2)
{
  uint64_t v3 = v2;
  id v6 = [v2 layer];
  [v6 removeAllAnimations];

  uint64_t v7 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView;
  id v8 = *(void **)&v3[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView];
  if (v8)
  {
    uint64_t v9 = type metadata accessor for VideoView(0LL);
    uint64_t v10 = swift_dynamicCastClass(v8, v9);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      id v12 = v8;
      sub_10019B8A4(a1, a2 & 1);
      if ((a2 & 1) != 0)
      {
        [v11 setAlpha:0.0];
        [v11 setHidden:0];
        uint64_t v13 = *(void **)(*(void *)&v3[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberBlurView]
                       + OBJC_IVAR____TtC6Arcade31ProductBackgroundUberEffectView_layer1);
        UIImage_optional v14 = a1;
        [v13 setImage:v14];
        UIImage_optional v15 = *(void **)&v3[v7];
        if (v15)
        {
          uint64_t v16 = type metadata accessor for ArtworkView(0LL);
          if (swift_dynamicCastClass(v15, v16))
          {
            id v17 = v15;
            v50.value.super.Class isa = a1;
            v50.is_nil = 0;
            ArtworkView.setImage(image:animated:)(v50, v18);
          }
        }

        id v19 = [objc_allocWithZone(UICubicTimingParameters) init];
        id v20 = [objc_allocWithZone(UIViewPropertyAnimator) initWithDuration:v19 timingParameters:0.15];

        uint64_t v21 = swift_allocObject(&unk_10028FFC8, 24LL, 7LL);
        *(void *)(v21 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
        uint64_t v48 = sub_100214B88;
        uint64_t v49 = v21;
        __int128 aBlock = _NSConcreteStackBlock;
        uint64_t v45 = 1107296256LL;
        uint64_t v22 = &unk_10028FFE0;
LABEL_14:
        double v46 = sub_100135408;
        uint64_t v47 = v22;
        uint64_t v34 = _Block_copy(&aBlock);
        uint64_t v35 = v49;
        uint64_t v36 = v3;
        objc_msgSend(v20, "addAnimations:", v34, swift_release(v35).n128_f64[0]);
        _Block_release(v34);
        [v20 startAnimation];

        return;
      }

      [v11 setHidden:0];
      objc_super v37 = *(void **)(*(void *)&v3[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberBlurView]
                     + OBJC_IVAR____TtC6Arcade31ProductBackgroundUberEffectView_layer1);
      char v43 = a1;
      objc_msgSend(v37, "setImage:");
      objc_super v38 = *(void **)&v3[v7];
      if (!v38 || (uint64_t v39 = type metadata accessor for ArtworkView(0LL), !swift_dynamicCastClass(v38, v39)))
      {
LABEL_22:

        goto LABEL_23;
      }
    }

    else
    {
      uint64_t v23 = type metadata accessor for ArtworkView(0LL);
      uint64_t v24 = swift_dynamicCastClass(v8, v23);
      if (!v24) {
        return;
      }
      double v25 = (void *)v24;
      id v12 = v8;
      v51.is_nil = a2 & 1;
      v51.value.super.Class isa = a1;
      ArtworkView.setImage(image:animated:)(v51, v26);
      if ((a2 & 1) != 0)
      {
        [v25 setAlpha:0.0];
        [v25 setHidden:0];
        uint64_t v27 = *(void **)(*(void *)&v3[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberBlurView]
                       + OBJC_IVAR____TtC6Arcade31ProductBackgroundUberEffectView_layer1);
        id v28 = a1;
        [v27 setImage:v28];
        uint64_t v29 = *(void **)&v3[v7];
        if (v29 && swift_dynamicCastClass(*(void *)&v3[v7], v23))
        {
          id v30 = v29;
          v52.value.super.Class isa = a1;
          v52.is_nil = 0;
          ArtworkView.setImage(image:animated:)(v52, v31);
        }

        id v32 = [objc_allocWithZone(UICubicTimingParameters) init];
        id v20 = [objc_allocWithZone(UIViewPropertyAnimator) initWithDuration:v32 timingParameters:0.15];

        uint64_t v33 = swift_allocObject(&unk_10028FF78, 24LL, 7LL);
        *(void *)(v33 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
        uint64_t v48 = sub_100214B88;
        uint64_t v49 = v33;
        __int128 aBlock = _NSConcreteStackBlock;
        uint64_t v45 = 1107296256LL;
        uint64_t v22 = &unk_10028FF90;
        goto LABEL_14;
      }

      [v25 setHidden:0];
      __int128 v40 = *(void **)(*(void *)&v3[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberBlurView]
                     + OBJC_IVAR____TtC6Arcade31ProductBackgroundUberEffectView_layer1);
      char v43 = a1;
      objc_msgSend(v40, "setImage:");
      objc_super v38 = *(void **)&v3[v7];
      if (!v38 || !swift_dynamicCastClass(v38, v23)) {
        goto LABEL_22;
      }
    }

    id v41 = v38;
    v53.value.super.Class isa = a1;
    v53.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v53, v42);

LABEL_23:
  }

uint64_t sub_1002149C4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = type metadata accessor for ArtworkView(0LL);
  if (!swift_dynamicCastClass(v1, v2)) {
    return 0LL;
  }
  id v3 = v1;
  uint64_t v4 = ArtworkView.image.getter();

  return v4;
}

void (*sub_100214A2C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100214378(v2);
  return sub_10000FDC0;
}

void sub_100214A70(objc_class *a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView);
    if (!v4
      || (uint64_t v5 = type metadata accessor for ArtworkView(0LL), !swift_dynamicCastClass(v4, v5))
      || (id v6 = v4, v7 = (void *)ArtworkView.image.getter(), v6, !v7))
    {
      char v8 = 1;
      goto LABEL_8;
    }
  }

  char v8 = 0;
LABEL_8:
  sub_100214500(a1, v8);
}

uint64_t sub_100214B00()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*v0 + OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer)
         + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
}

id sub_100214B24()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer);
}

uint64_t sub_100214B38(uint64_t a1, uint64_t a2)
{
  return sub_100009CA4( &qword_1002EE058,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for ProductBackgroundUberView,  (uint64_t)&protocol conformance descriptor for NSObject);
}

uint64_t sub_100214B64()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100214B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100214B9C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

id sub_100214BA4()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView);
  if (result) {
    return [result setAlpha:1.0];
  }
  return result;
}

void sub_100214BCC(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView];
  if (v4)
  {
    [v4 removeFromSuperview];
    uint64_t v5 = *(void **)&v1[v3];
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(void *)&v1[v3] = a1;
  id v6 = a1;

  uint64_t v7 = *(void **)&v1[v3];
  if (v7)
  {
    uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberBlurView];
    id v9 = v7;
    [v1 insertSubview:v9 belowSubview:v8];
    [v1 setNeedsLayout];
  }

void sub_100214C88()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer;
  uint64_t v7 = (objc_class *)type metadata accessor for VideoViewContainer();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  swift_unknownObjectWeakInit(&v8[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view], 0LL);
  *(void *)&v8[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v9, 0LL);
  v22.id receiver = v8;
  v22.super_class = v7;
  *(void *)&v1[v6] = objc_msgSendSuper2(&v22, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = (uint64_t *)&v1[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey];
  uint64_t v12 = UUID.init()(v11);
  uint64_t v13 = UUID.uuidString.getter(v12);
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *uint64_t v10 = v13;
  v10[1] = v15;
  uint64_t v16 = &v1[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_forgetFetchBlock];
  *(void *)uint64_t v16 = 0LL;
  *((void *)v16 + 1) = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberView] = 0LL;
  uint64_t v17 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uberBlurView;
  uint64_t v18 = type metadata accessor for ProductBackgroundUberEffectView();
  *(void *)&v1[v17] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18)) init];
  *(void *)&v1[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_uber] = 0LL;
  id v19 = [(id)objc_opt_self(UIBlurEffect) effectWithBlurRadius:100.0];
  uint64_t v20 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_fallbackArtworkEffectView;
  id v21 = [objc_allocWithZone(UIVisualEffectView) initWithEffect:v19];

  *(void *)&v1[v20] = v21;
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/ProductBackgroundUberView.swift",  38LL,  2LL,  44LL,  0);
  __break(1u);
}

uint64_t sub_100214E90()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100214EBC()
{
  return sub_10021415C(v0[2], v0[3], v0[4]);
}

uint64_t sub_100214EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002E9FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100214F10()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100214F34(objc_class *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_100214F3C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100214F60()
{
  if (v0[2]) {
    swift_release(v0[3]);
  }
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 56LL, 7LL);
}

void sub_100214F9C(objc_class *a1, char a2, uint64_t a3, uint64_t a4)
{
}

uint64_t TVBreakoutDetailsLayout.Metrics.init(alignment:alignmentSpacing:titleSpace:descriptionSpace:descriptionBottomSpace:badgeSpace:wordmarkTopSpace:buttonHeight:buttonMinWidth:layoutMargins:)@<X0>( char a1@<W0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, __int128 *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, __int128 *a14)
{
  *(_BYTE *)a9 = a1 & 1;
  sub_100009D90(a2, a9 + 8);
  sub_100009D90(a3, a9 + 48);
  sub_100009D90(a4, a9 + 88);
  sub_100009D90(a5, a9 + 128);
  sub_100009D90(a6, a9 + 168);
  sub_100009D90(a7, a9 + 208);
  sub_100009D90(a8, a9 + 248);
  uint64_t result = sub_100009D90(a14, a9 + 288);
  *(double *)(a9 + 328) = a10;
  *(double *)(a9 + 336) = a11;
  *(double *)(a9 + 34swift_weakDestroy(v0 + 4) = a12;
  *(double *)(a9 + 352) = a13;
  return result;
}

uint64_t TVBreakoutDetailsLayout.init(metrics:titleLabel:descriptionLabel:badgeLabel:wordmarkView:button:)@<X0>( const void *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
  uint64_t v12 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v13 = swift_allocObject( v11,  ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v12 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v13 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
  uint64_t v14 = static _VerticalFlowLayout.ExclusionCondition.isHidden.getter(v13);
  uint64_t v15 = static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v14);
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v15);
  uint64_t v23 = v13;
  uint64_t v16 = sub_100003B6C( (unint64_t *)&qword_1002DD1C0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  uint64_t v17 = sub_1000031E8(&qword_1002E45E0);
  unint64_t v18 = sub_100003228();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v17, v18, v12, v16);
  memcpy(a7, a1, 0x168uLL);
  sub_10005E53C(a5, (uint64_t)a7 + 360);
  sub_100009D90(a4, (uint64_t)a7 + 400);
  sub_100009D90(a2, (uint64_t)a7 + 440);
  sub_100009D90(a3, (uint64_t)a7 + 480);
  return sub_10005E53C(a6, (uint64_t)a7 + 520);
}

uint64_t type metadata accessor for TVBreakoutDetailsLayout(uint64_t a1)
{
  uint64_t result = qword_1002EE0C8;
  if (!qword_1002EE0C8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TVBreakoutDetailsLayout);
  }
  return result;
}

void TVBreakoutDetailsLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v12 = NSDirectionalEdgeInsets.edgeInsets.getter( v11,  *(double *)(v3 + 328),  *(double *)(v3 + 336),  *(double *)(v3 + 344),  *(double *)(v3 + 352));
  double v16 = CGSize.subtracting(insets:)(v12, v13, v14, v15, a2, a3);
  double v18 = v17;
  if ((*(_BYTE *)v3 & 1) != 0)
  {
    sub_1002162E8((uint64_t)v10);
    double v19 = _VerticalFlowLayout.measurements(fitting:in:)(a1, v16, v18);
    double v21 = v20;
    double v23 = v22;
    double v25 = v24;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  else
  {
    swift_getObjectType(a1);
    sub_1000E3100(a1, (void *)v3, v16, v18);
    double v19 = v27;
    double v21 = v28;
    double v23 = v29;
    double v25 = v30;
  }

  if (v16 > v19) {
    v26.n128_f64[0] = v16;
  }
  else {
    v26.n128_f64[0] = v19;
  }
  JUMeasurements.adding(outsets:in:)( a1,  *(double *)(v3 + 328),  *(double *)(v3 + 336),  *(double *)(v3 + 344),  *(double *)(v3 + 352),  v26,  v21,  v23,  v25);
}

uint64_t TVBreakoutDetailsLayout.placeChildren(relativeTo:in:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  NSDirectionalEdgeInsets.insetsWithLayoutDirection(in:)( a1,  *(double *)(v1 + 328),  *(double *)(v1 + 336),  *(double *)(v1 + 344),  *(double *)(v1 + 352));
  CGRect.subtracting(insets:)(v7);
  double v8 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
  double v12 = v8;
  double v13 = v9;
  double v14 = v10;
  double v15 = v11;
  if ((*(_BYTE *)v1 & 1) == 0) {
    return sub_100216E78(a1, v8, v9, v10, v11);
  }
  sub_1002162E8((uint64_t)v6);
  _VerticalFlowLayout.placeChildren(relativeTo:in:)(a1, v12, v13, v14, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TVBreakoutDetailsLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100217088(v1, a1);
}

uint64_t TVBreakoutDetailsLayout.metrics.setter(uint64_t a1)
{
  return sub_1002170BC(a1, v1);
}

double sub_100215520@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TVBreakoutDetailsLayout(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  sub_1000EF838(v1 + 520, (uint64_t)&v15);
  if (v16)
  {
    sub_100009D90(&v15, (uint64_t)v18);
    sub_10001F010((uint64_t)v18, (uint64_t)&v15);
    sub_1002181E8(v1, (uint64_t)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
    uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v7 = (v6 + 56) & ~v6;
    uint64_t v8 = swift_allocObject(&unk_100290220, v7 + v5, v6 | 7);
    sub_100009D90(&v15, v8 + 16);
    sub_100218330((uint64_t)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL), v8 + v7);
    uint64_t v10 = type metadata accessor for LayoutViewPlaceholder(0LL, v9);
    swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v11 = LayoutViewPlaceholder.init(measureWith:)(sub_100218374, v8);
    uint64_t v12 = v19;
    uint64_t v13 = v20;
    sub_100005F8C(v18, v19);
    uint64_t v16 = v10;
    uint64_t v17 = &protocol witness table for LayoutViewPlaceholder;
    *(void *)&__int128 v15 = v11;
    LayoutView.withMeasurements(providedBy:)((void *)a1, &v15, v12, v13);
    _s6Arcade17PillOverlayLayoutVwxx_0(&v15);
    _s6Arcade17PillOverlayLayoutVwxx_0(v18);
  }

  else
  {
    sub_100006060((uint64_t)&v15, &qword_1002E2020);
    *(void *)(a1 + 32) = 0LL;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = 0u;
  }

  return result;
}

double sub_10021569C(uint64_t a1, void *a2, void *a3, double a4, double a5)
{
  uint64_t v10 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  sub_100005F8C(a2, v14);
  double v16 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v14, *(void *)(v15 + 8), a4, a5);
  uint64_t v17 = a3[39];
  uint64_t v18 = a3[40];
  sub_100005F8C(a3 + 36, v17);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v17, v18);
  double v19 = AnyDimension.value(in:rounded:)(a1, v13, v17, v18);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v13, v10);
  if (v19 >= a4) {
    double v21 = a4;
  }
  else {
    double v21 = v19;
  }
  if (v16 > v21) {
    double v22 = v16;
  }
  else {
    double v22 = v21;
  }
  double v23 = a3 + 31;
  uint64_t v24 = a3[34];
  uint64_t v25 = a3[35];
  sub_100005F8C(v23, v24);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v24, v25);
  AnyDimension.value(in:rounded:)(a1, v13, v24, v25);
  v20(v13, v10);
  return v22;
}

double sub_100215818@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v69 = a1;
  uint64_t v68 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0LL);
  uint64_t v73 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v66 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v71 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v81 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0LL);
  uint64_t v7 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  __n128 v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000EF838((uint64_t)(v1 + 45), (uint64_t)&v85);
  if (*((void *)&v86 + 1))
  {
    sub_100009D90(&v85, (uint64_t)&v88);
    uint64_t v10 = v89;
    uint64_t v11 = v90;
    sub_100005F8C(&v88, v89);
    if ((dispatch thunk of LayoutView.isHidden.getter(v10, v11) & 1) == 0)
    {
      uint64_t v38 = sub_1000031E8((uint64_t *)&unk_1002E4D00);
      uint64_t v39 = *(void *)(type metadata accessor for _VerticalFlowLayout.Child(0LL) - 8);
      uint64_t v40 = *(void *)(v39 + 72);
      uint64_t v41 = *(unsigned __int8 *)(v39 + 80);
      uint64_t v42 = (v41 + 32) & ~v41;
      uint64_t v70 = 2 * v40;
      uint64_t v43 = swift_allocObject(v38, v42 + 3 * v40, v41 | 7);
      *(_OWORD *)(v43 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
      uint64_t v67 = v43;
      uint64_t v44 = v43 + v42;
      uint64_t v45 = v7;
      id v80 = *(void (**)(void))(v7 + 104);
      ((void (*)(char *, void, uint64_t))v80)( v9,  enum case for _VerticalFlowLayout.Child.Placement.top(_:),  v81);
      id v79 = (void (*)(char *, uint64_t))(v2 + 26);
      uint64_t v87 = 0LL;
      __int128 v85 = 0u;
      __int128 v86 = 0u;
      *(void *)&v83[0] = _swiftEmptyArrayStorage;
      uint64_t v46 = sub_100003B6C( (unint64_t *)&qword_1002DD1C0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
      uint64_t v75 = (void (*)(char *))v46;
      uint64_t v47 = sub_1000031E8(&qword_1002E45E0);
      uint64_t v74 = v47;
      CGRect v76 = (void (*)(char *))sub_100003228();
      uint64_t v48 = v4;
      dispatch thunk of SetAlgebra.init<A>(_:)(v83, v47, v76, v4, v46);
      LODWORD(v78) = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:);
      uint64_t v49 = v73;
      id v77 = *(void (**)(char *))(v73 + 104);
      UIImage_optional v50 = v66;
      uint64_t v51 = v68;
      v77(v66);
      uint64_t v65 = v44;
      static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v88,  v9,  v50,  v79,  &v85,  v6);
      uint64_t v73 = *(void *)(v49 + 8);
      ((void (*)(char *, uint64_t))v73)(v50, v51);
      id v79 = *(void (**)(char *, uint64_t))(v71 + 8);
      v79(v6, v48);
      sub_100006060((uint64_t)&v85, (uint64_t *)&unk_1002E4D10);
      __n128 v72 = *(void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v52 = v81;
      v72(v9, v81);
      uint64_t v64 = v44 + v40;
      uint64_t v53 = v2[58];
      uint64_t v54 = v2[59];
      uint64_t v55 = sub_100005F8C(v2 + 55, v53);
      *((void *)&v86 + 1) = v53;
      uint64_t v87 = *(void *)(v54 + 8);
      uint64_t v56 = sub_100009D54(&v85);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16LL))(v56, v55, v53);
      uint64_t v84 = 0LL;
      memset(v83, 0, sizeof(v83));
      id v82 = _swiftEmptyArrayStorage;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v82, v74, v76, v48, v75);
      LODWORD(v71) = enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:);
      v80(v9);
      ((void (*)(char *, void, uint64_t))v77)(v50, v78, v51);
      static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v85,  v9,  v50,  v2 + 6,  v83,  v6);
      ((void (*)(char *, uint64_t))v73)(v50, v51);
      uint64_t v57 = v52;
      v72(v9, v52);
      v79(v6, v48);
      sub_100006060((uint64_t)v83, (uint64_t *)&unk_1002E4D10);
      _s6Arcade17PillOverlayLayoutVwxx_0(&v85);
      v70 += v65;
      uint64_t v58 = v2[63];
      uint64_t v59 = v2[64];
      uint64_t v60 = sub_100005F8C(v2 + 60, v58);
      *((void *)&v86 + 1) = v58;
      uint64_t v87 = *(void *)(v59 + 8);
      id v61 = sub_100009D54(&v85);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16LL))(v61, v60, v58);
      sub_10001F010((uint64_t)(v2 + 16), (uint64_t)v83);
      id v82 = _swiftEmptyArrayStorage;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v82, v74, v76, v48, v75);
      ((void (*)(char *, void, uint64_t))v80)(v9, v71, v57);
      ((void (*)(char *, void, uint64_t))v77)(v50, v78, v51);
      static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v85,  v9,  v50,  v2 + 11,  v83,  v6);
      ((void (*)(char *, uint64_t))v73)(v50, v51);
      v72(v9, v57);
      v79(v6, v48);
      sub_100006060((uint64_t)v83, (uint64_t *)&unk_1002E4D10);
      _s6Arcade17PillOverlayLayoutVwxx_0(&v85);
      goto LABEL_7;
    }

    _s6Arcade17PillOverlayLayoutVwxx_0(&v88);
  }

  else
  {
    sub_100006060((uint64_t)&v85, &qword_1002E2020);
  }

  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002E4D00);
  uint64_t v13 = *(void *)(type metadata accessor for _VerticalFlowLayout.Child(0LL) - 8);
  uint64_t v64 = *(void *)(v13 + 72);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v65 = 2 * v64;
  uint64_t v16 = swift_allocObject(v12, v15 + 3 * v64, v14 | 7);
  *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
  uint64_t v67 = v16;
  uint64_t v70 = v16 + v15;
  uint64_t v17 = v2[53];
  uint64_t v18 = v2[54];
  double v19 = sub_100005F8C(v2 + 50, v17);
  uint64_t v89 = v17;
  uint64_t v90 = *(void *)(v18 + 8);
  uint64_t v20 = sub_100009D54(&v88);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16LL))(v20, v19, v17);
  __n128 v72 = (void (*)(char *, uint64_t))(v2 + 21);
  uint64_t v87 = 0LL;
  __int128 v85 = 0u;
  __int128 v86 = 0u;
  *(void *)&v83[0] = _swiftEmptyArrayStorage;
  uint64_t v21 = sub_100003B6C( (unint64_t *)&qword_1002DD1C0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  id v79 = (void (*)(char *, uint64_t))v21;
  uint64_t v22 = sub_1000031E8(&qword_1002E45E0);
  uint64_t v78 = v22;
  id v80 = (void (*)(void))sub_100003228();
  dispatch thunk of SetAlgebra.init<A>(_:)(v83, v22, v80, v4, v21);
  LODWORD(v77) = enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:);
  uint64_t v23 = v7;
  CGRect v76 = *(void (**)(char *))(v7 + 104);
  uint64_t v24 = v81;
  v76(v9);
  LODWORD(v7swift_weakDestroy(v0 + 4) = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:);
  uint64_t v25 = v73;
  uint64_t v75 = *(void (**)(char *))(v73 + 104);
  __n128 v26 = v66;
  uint64_t v27 = v68;
  v75(v66);
  uint64_t v28 = v70;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v88,  v9,  v26,  v72,  &v85,  v6);
  uint64_t v73 = *(void *)(v25 + 8);
  ((void (*)(char *, uint64_t))v73)(v26, v27);
  __n128 v72 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v29 = v24;
  v72(v9, v24);
  uint64_t v71 = *(void *)(v71 + 8);
  ((void (*)(char *, uint64_t))v71)(v6, v4);
  sub_100006060((uint64_t)&v85, (uint64_t *)&unk_1002E4D10);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v88);
  v64 += v28;
  uint64_t v31 = v2[58];
  uint64_t v30 = v2[59];
  id v32 = sub_100005F8C(v2 + 55, v31);
  uint64_t v89 = v31;
  uint64_t v90 = *(void *)(v30 + 8);
  uint64_t v33 = sub_100009D54(&v88);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16LL))(v33, v32, v31);
  uint64_t v87 = 0LL;
  __int128 v85 = 0u;
  __int128 v86 = 0u;
  *(void *)&v83[0] = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(v83, v78, v80, v4, v79);
  ((void (*)(char *, void, uint64_t))v76)(v9, v77, v29);
  ((void (*)(char *, void, uint64_t))v75)(v26, v74, v27);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v88,  v9,  v26,  v2 + 6,  &v85,  v6);
  ((void (*)(char *, uint64_t))v73)(v26, v27);
  v72(v9, v29);
  ((void (*)(char *, uint64_t))v71)(v6, v4);
  sub_100006060((uint64_t)&v85, (uint64_t *)&unk_1002E4D10);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v88);
  v70 += v65;
  uint64_t v35 = v2[63];
  uint64_t v34 = v2[64];
  uint64_t v36 = sub_100005F8C(v2 + 60, v35);
  uint64_t v89 = v35;
  uint64_t v90 = *(void *)(v34 + 8);
  objc_super v37 = sub_100009D54(&v88);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16LL))(v37, v36, v35);
  sub_10001F010((uint64_t)(v2 + 16), (uint64_t)&v85);
  *(void *)&v83[0] = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(v83, v78, v80, v4, v79);
  ((void (*)(char *, void, uint64_t))v76)(v9, v77, v29);
  ((void (*)(char *, void, uint64_t))v75)(v26, v74, v27);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v88,  v9,  v26,  v2 + 11,  &v85,  v6);
  ((void (*)(char *, uint64_t))v73)(v26, v27);
  v72(v9, v29);
  ((void (*)(char *, uint64_t))v71)(v6, v4);
  sub_100006060((uint64_t)&v85, (uint64_t *)&unk_1002E4D10);
LABEL_7:
  _s6Arcade17PillOverlayLayoutVwxx_0(&v88);
  *(void *)&double result = _VerticalFlowLayout.init(expandChildrenToFit:children:)(1LL, v67).n128_u64[0];
  return result;
}

double sub_1002162E8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v82 = a1;
  uint64_t v81 = type metadata accessor for _VerticalFlowLayout.Child(0LL);
  uint64_t v3 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  id v79 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0LL);
  uint64_t v5 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v91 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0LL);
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000EF838((uint64_t)(v1 + 45), (uint64_t)&v97);
  uint64_t v80 = v3;
  if (!*((void *)&v98 + 1))
  {
    sub_100006060((uint64_t)&v97, &qword_1002E2020);
    goto LABEL_5;
  }

  sub_100009D90(&v97, (uint64_t)v100);
  uint64_t v9 = v101;
  uint64_t v10 = v102;
  sub_100005F8C(v100, v101);
  if ((dispatch thunk of LayoutView.isHidden.getter(v9, v10) & 1) != 0)
  {
    _s6Arcade17PillOverlayLayoutVwxx_0(v100);
LABEL_5:
    uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002E4D00);
    uint64_t v77 = *(void *)(v3 + 72);
    uint64_t v12 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v13 = (v12 + 32) & ~v12;
    uint64_t v78 = 2 * v77;
    uint64_t v14 = swift_allocObject(v11, v13 + 3 * v77, v12 | 7);
    *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
    id v83 = (void *)v14;
    uint64_t v84 = v14 + v13;
    uint64_t v15 = v1[53];
    uint64_t v16 = v1[54];
    uint64_t v17 = sub_100005F8C(v1 + 50, v15);
    uint64_t v101 = v15;
    uint64_t v102 = *(void *)(v16 + 8);
    uint64_t v18 = sub_100009D54(v100);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v18, v17, v15);
    uint64_t v94 = (void (*)(char *, uint64_t))(v2 + 21);
    uint64_t v19 = type metadata accessor for TVBreakoutDetailsLayout(0LL);
    __int128 v97 = 0u;
    __int128 v98 = 0u;
    uint64_t v99 = 0LL;
    __int128 v86 = (char *)v2 + *(int *)(v19 + 40);
    uint64_t v20 = v86;
    LODWORD(v85) = enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:);
    uint64_t v21 = v90;
    uint64_t v87 = *(void (**)(char *))(v90 + 104);
    uint64_t v22 = v91;
    v87(v8);
    uint64_t v23 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:);
    uint64_t v88 = *(void (**)(char *, void, uint64_t))(v5 + 104);
    uint64_t v24 = v89;
    uint64_t v25 = v92;
    v88(v89, enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:), v92);
    uint64_t v26 = v84;
    static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v100,  v8,  v24,  v94,  &v97,  v20);
    id v93 = *(void (**)(char *, uint64_t))(v5 + 8);
    v93(v24, v25);
    uint64_t v94 = *(void (**)(char *, uint64_t))(v21 + 8);
    v94(v8, v22);
    sub_100006060((uint64_t)&v97, (uint64_t *)&unk_1002E4D10);
    _s6Arcade17PillOverlayLayoutVwxx_0(v100);
    v77 += v26;
    uint64_t v28 = v2[58];
    uint64_t v27 = v2[59];
    uint64_t v29 = sub_100005F8C(v2 + 55, v28);
    uint64_t v101 = v28;
    uint64_t v102 = *(void *)(v27 + 8);
    uint64_t v30 = sub_100009D54(v100);
    uint64_t v31 = *(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16LL);
    uint64_t v32 = v28;
    uint64_t v33 = v23;
    v31(v30, v29, v32);
    uint64_t v99 = 0LL;
    __int128 v97 = 0u;
    __int128 v98 = 0u;
    ((void (*)(char *, void, uint64_t))v87)(v8, v85, v22);
    uint64_t v34 = v88;
    v88(v24, v23, v25);
    static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v100,  v8,  v24,  v2 + 6,  &v97,  v86);
    v93(v24, v25);
    v94(v8, v22);
    sub_100006060((uint64_t)&v97, (uint64_t *)&unk_1002E4D10);
    _s6Arcade17PillOverlayLayoutVwxx_0(v100);
    v84 += v78;
    uint64_t v35 = v2[63];
    uint64_t v36 = v2[64];
    objc_super v37 = sub_100005F8C(v2 + 60, v35);
    uint64_t v101 = v35;
    uint64_t v38 = *(void *)(v36 + 8);
    uint64_t v39 = v34;
    uint64_t v102 = v38;
    uint64_t v40 = sub_100009D54(v100);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16LL))(v40, v37, v35);
    sub_10001F010((uint64_t)(v2 + 16), (uint64_t)&v97);
    ((void (*)(char *, void, uint64_t))v87)(v8, v85, v22);
    LODWORD(v87) = v33;
    v34(v24, v33, v25);
    static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v100,  v8,  v24,  v2 + 11,  &v97,  v86);
    uint64_t v41 = v93;
    v93(v24, v25);
    v94(v8, v22);
    sub_100006060((uint64_t)&v97, (uint64_t *)&unk_1002E4D10);
    goto LABEL_7;
  }

  uint64_t v42 = sub_1000031E8((uint64_t *)&unk_1002E4D00);
  uint64_t v43 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v44 = (v43 + 32) & ~v43;
  uint64_t v84 = *(void *)(v3 + 72);
  uint64_t v85 = 2 * v84;
  uint64_t v45 = swift_allocObject(v42, v44 + 3 * v84, v43 | 7);
  *(_OWORD *)(v45 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
  id v83 = (void *)v45;
  uint64_t v46 = v45 + v44;
  uint64_t v47 = v90;
  uint64_t v94 = *(void (**)(char *, uint64_t))(v90 + 104);
  uint64_t v48 = v91;
  ((void (*)(char *, void, uint64_t))v94)( v8,  enum case for _VerticalFlowLayout.Child.Placement.top(_:),  v91);
  uint64_t v49 = type metadata accessor for TVBreakoutDetailsLayout(0LL);
  __int128 v97 = 0u;
  __int128 v98 = 0u;
  uint64_t v99 = 0LL;
  __int128 v86 = (char *)v2 + *(int *)(v49 + 40);
  UIImage_optional v50 = v86;
  LODWORD(v87) = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:);
  uint64_t v88 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  uint64_t v51 = v5;
  uint64_t v52 = v89;
  uint64_t v53 = v92;
  ((void (*)(char *))v88)(v89);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v100,  v8,  v52,  v2 + 26,  &v97,  v50);
  id v93 = *(void (**)(char *, uint64_t))(v51 + 8);
  v93(v52, v53);
  sub_100006060((uint64_t)&v97, (uint64_t *)&unk_1002E4D10);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v47 + 8);
  v54(v8, v48);
  uint64_t v78 = v46 + v84;
  uint64_t v55 = v2[58];
  uint64_t v56 = v2[59];
  uint64_t v57 = sub_100005F8C(v2 + 55, v55);
  *((void *)&v98 + 1) = v55;
  uint64_t v99 = *(void *)(v56 + 8);
  uint64_t v58 = sub_100009D54(&v97);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16LL))(v58, v57, v55);
  uint64_t v96 = 0LL;
  memset(v95, 0, sizeof(v95));
  LODWORD(v8swift_weakDestroy(v0 + 4) = enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:);
  ((void (*)(char *))v94)(v8);
  v88(v52, v87, v53);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v97,  v8,  v52,  v2 + 6,  v95,  v86);
  v93(v52, v53);
  uint64_t v59 = v48;
  v54(v8, v48);
  sub_100006060((uint64_t)v95, (uint64_t *)&unk_1002E4D10);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v97);
  v85 += v46;
  uint64_t v60 = v2[63];
  uint64_t v61 = v2[64];
  double v62 = sub_100005F8C(v2 + 60, v60);
  *((void *)&v98 + 1) = v60;
  uint64_t v99 = *(void *)(v61 + 8);
  uint64_t v63 = sub_100009D54(&v97);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v60 - 8) + 16LL))(v63, v62, v60);
  sub_10001F010((uint64_t)(v2 + 16), (uint64_t)v95);
  ((void (*)(char *, void, uint64_t))v94)(v8, v84, v48);
  uint64_t v39 = v88;
  v88(v52, v87, v53);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v97,  v8,  v52,  v2 + 11,  v95,  v86);
  uint64_t v64 = v53;
  uint64_t v41 = v93;
  v93(v52, v64);
  uint64_t v94 = v54;
  v54(v8, v59);
  sub_100006060((uint64_t)v95, (uint64_t *)&unk_1002E4D10);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v97);
LABEL_7:
  _s6Arcade17PillOverlayLayoutVwxx_0(v100);
  sub_100215520((uint64_t)&v97);
  if (*((void *)&v98 + 1))
  {
    sub_100009D90(&v97, (uint64_t)v100);
    uint64_t v65 = v91;
    (*(void (**)(char *, void, uint64_t))(v90 + 104))( v8,  enum case for _VerticalFlowLayout.Child.Placement.top(_:),  v91);
    uint64_t v66 = v2 + 1;
    uint64_t v67 = type metadata accessor for TVBreakoutDetailsLayout(0LL);
    __int128 v97 = 0u;
    __int128 v98 = 0u;
    uint64_t v99 = 0LL;
    uint64_t v68 = (char *)v2 + *(int *)(v67 + 40);
    uint64_t v69 = v89;
    uint64_t v70 = v92;
    v39(v89, v87, v92);
    uint64_t v71 = v79;
    static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v100,  v8,  v69,  v66,  &v97,  v68);
    v41(v69, v70);
    sub_100006060((uint64_t)&v97, (uint64_t *)&unk_1002E4D10);
    v94(v8, v65);
    __n128 v72 = v83;
    unint64_t v74 = v83[2];
    unint64_t v73 = v83[3];
    if (v74 >= v73 >> 1) {
      __n128 v72 = (void *)sub_100019F28(v73 > 1, v74 + 1, 1, v83);
    }
    uint64_t v75 = v80;
    void v72[2] = v74 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v75 + 32))( (unint64_t)v72 + ((*(unsigned __int8 *)(v75 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))
    + *(void *)(v75 + 72) * v74,
      v71,
      v81);
    _s6Arcade17PillOverlayLayoutVwxx_0(v100);
  }

  else
  {
    sub_100006060((uint64_t)&v97, &qword_1002E2020);
    __n128 v72 = v83;
  }

  *(void *)&double result = _VerticalFlowLayout.init(expandChildrenToFit:children:)(1LL, v72).n128_u64[0];
  return result;
}

uint64_t TVBreakoutDetailsLayout.Metrics.alignment.getter()
{
  return *v0;
}

uint64_t TVBreakoutDetailsLayout.Metrics.alignment.setter(uint64_t result)
{
  _BYTE *v1 = result & 1;
  return result;
}

uint64_t TVBreakoutDetailsLayout.Metrics.alignmentSpacing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 8, a1);
}

uint64_t TVBreakoutDetailsLayout.Metrics.alignmentSpacing.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 8);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVBreakoutDetailsLayout.Metrics.alignmentSpacing.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVBreakoutDetailsLayout.Metrics.badgeSpace.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 168);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVBreakoutDetailsLayout.Metrics.badgeSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVBreakoutDetailsLayout.Metrics.wordmarkTopSpace.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 208);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVBreakoutDetailsLayout.Metrics.wordmarkTopSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVBreakoutDetailsLayout.Metrics.buttonHeight.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 248);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVBreakoutDetailsLayout.Metrics.buttonHeight.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVBreakoutDetailsLayout.Metrics.buttonMinWidth.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 288, a1);
}

uint64_t TVBreakoutDetailsLayout.Metrics.buttonMinWidth.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 288);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVBreakoutDetailsLayout.Metrics.buttonMinWidth.modify())()
{
  return MotionEffects.rawValue.getter;
}

double TVBreakoutDetailsLayout.Metrics.layoutMargins.getter()
{
  return *(double *)(v0 + 328);
}

void TVBreakoutDetailsLayout.Metrics.layoutMargins.setter(double a1, double a2, double a3, double a4)
{
  v4[41] = a1;
  v4[42] = a2;
  v4[43] = a3;
  v4[44] = a4;
}

uint64_t (*TVBreakoutDetailsLayout.Metrics.layoutMargins.modify())()
{
  return MotionEffects.rawValue.getter;
}

void *TVBreakoutDetailsLayout.Metrics.init(byCopying:)@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  return memcpy(a2, __src, 0x168uLL);
}

uint64_t sub_100216E78(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = type metadata accessor for FlankedHorizontalLayout.ViewAlignment(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v28[-1] - v17;
  uint64_t v19 = type metadata accessor for FlankedHorizontalLayout(0LL, v16);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v28[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v33[3] = type metadata accessor for _VerticalFlowLayout(0LL);
  v33[4] = sub_100003B6C( &qword_1002E4D20,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout);
  uint64_t v23 = sub_100009D54(v33);
  sub_100215818((uint64_t)v23);
  sub_100215520((uint64_t)v32);
  sub_10001F010(v5 + 8, (uint64_t)v31);
  uint64_t v30 = 0LL;
  memset(v29, 0, sizeof(v29));
  uint64_t v24 = enum case for FlankedHorizontalLayout.ViewAlignment.center(_:);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v25(v18, enum case for FlankedHorizontalLayout.ViewAlignment.center(_:), v11);
  v28[3] = type metadata accessor for ZeroDimension(0LL);
  v28[4] = &protocol witness table for ZeroDimension;
  sub_100009D54(v28);
  static ZeroDimension.zero.getter();
  v25(v14, v24, v11);
  FlankedHorizontalLayout.init(sublayout:leadingView:leadingMargin:leadingAlignment:trailingView:trailingMargin:trailingAlignment:)( v33,  v32,  v31,  v18,  v29,  v28,  v14);
  FlankedHorizontalLayout.placeChildren(relativeTo:in:)(a1, a2, a3, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

uint64_t sub_100217088(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1002170BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1002170F4()
{
  unint64_t result = qword_1002EE068;
  if (!qword_1002EE068)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for TVBreakoutDetailsLayout.Alignment,  &type metadata for TVBreakoutDetailsLayout.Alignment);
    atomic_store(result, (unint64_t *)&qword_1002EE068);
  }

  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TVBreakoutDetailsLayout(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v21 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v21);
  }

  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    __int128 v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    __int128 v8 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(v4 + 72) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 48, (uint64_t)(a2 + 6));
    __int128 v9 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(v4 + 112) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 88, (uint64_t)(a2 + 11));
    __int128 v10 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(v4 + 152) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v4 + 128, (uint64_t)(a2 + 16));
    __int128 v11 = *((_OWORD *)a2 + 12);
    *(_OWORD *)(v4 + 192) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v4 + 168, (uint64_t)(a2 + 21));
    __int128 v12 = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(v4 + 232) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v4 + 208, (uint64_t)(a2 + 26));
    __int128 v13 = *((_OWORD *)a2 + 17);
    *(_OWORD *)(v4 + 272) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v4 + 248, (uint64_t)(a2 + 31));
    uint64_t v14 = a2[39];
    uint64_t v15 = a2[40];
    *(void *)(v4 + 312) = v14;
    *(void *)(v4 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = v15;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))(v4 + 288, (uint64_t)(a2 + 36));
    __int128 v16 = *(_OWORD *)(a2 + 43);
    *(_OWORD *)(v4 + 328) = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(v4 + 34swift_weakDestroy(v0 + 4) = v16;
    uint64_t v17 = (_OWORD *)(v4 + 360);
    uint64_t v18 = a2 + 45;
    uint64_t v19 = a2[48];
    if (v19)
    {
      uint64_t v20 = a2[49];
      *(void *)(v4 + 38swift_weakDestroy(v0 + 4) = v19;
      *(void *)(v4 + 392) = v20;
      (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
    }

    else
    {
      __int128 v22 = *(_OWORD *)(a2 + 47);
      *uint64_t v17 = *v18;
      *(_OWORD *)(v4 + 376) = v22;
      *(void *)(v4 + 392) = a2[49];
    }

    uint64_t v23 = a2[53];
    uint64_t v24 = a2[54];
    *(void *)(v4 + 42swift_weakDestroy(v0 + 4) = v23;
    *(void *)(v4 + 432) = v24;
    (**(void (***)(uint64_t, uint64_t))(v23 - 8))(v4 + 400, (uint64_t)(a2 + 50));
    __int128 v25 = *((_OWORD *)a2 + 29);
    *(_OWORD *)(v4 + 46swift_weakDestroy(v0 + 4) = v25;
    (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v4 + 440, (uint64_t)(a2 + 55));
    uint64_t v26 = a2[63];
    uint64_t v27 = a2[64];
    *(void *)(v4 + 50swift_weakDestroy(v0 + 4) = v26;
    *(void *)(v4 + 512) = v27;
    (**(void (***)(uint64_t, uint64_t))(v26 - 8))(v4 + 480, (uint64_t)(a2 + 60));
    uint64_t v28 = (_OWORD *)(v4 + 520);
    uint64_t v29 = a2 + 65;
    uint64_t v30 = a2[68];
    if (v30)
    {
      *(void *)(v4 + 54swift_weakDestroy(v0 + 4) = v30;
      *(void *)(v4 + 552) = a2[69];
      (**(void (***)(_OWORD *, _OWORD *))(v30 - 8))(v28, v29);
    }

    else
    {
      __int128 v31 = *(_OWORD *)(a2 + 67);
      *uint64_t v28 = *v29;
      *(_OWORD *)(v4 + 536) = v31;
      *(void *)(v4 + 552) = a2[69];
    }

    uint64_t v32 = *(int *)(a3 + 40);
    uint64_t v33 = v4 + v32;
    uint64_t v34 = (uint64_t)a2 + v32;
    uint64_t v35 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16LL))(v33, v34, v35);
  }

  return v4;
}

uint64_t destroy for TVBreakoutDetailsLayout(void *a1, uint64_t a2)
{
  if (a1[48]) {
    _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 45);
  }
  _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 50);
  _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 55);
  _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 60);
  if (a1[68]) {
    _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 65);
  }
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
}

uint64_t initializeWithCopy for TVBreakoutDetailsLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  __int128 v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
  __int128 v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 48, a2 + 48);
  __int128 v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 88, a2 + 88);
  __int128 v9 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 128, a2 + 128);
  __int128 v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 192) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 168, a2 + 168);
  __int128 v11 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 232) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 208, a2 + 208);
  __int128 v12 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 272) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 248, a2 + 248);
  uint64_t v13 = *(void *)(a2 + 312);
  uint64_t v14 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = v13;
  *(void *)(a1 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = v14;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 288, a2 + 288);
  __int128 v15 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 34swift_weakDestroy(v0 + 4) = v15;
  __int128 v16 = (_OWORD *)(a1 + 360);
  uint64_t v17 = (_OWORD *)(a2 + 360);
  uint64_t v18 = *(void *)(a2 + 384);
  if (v18)
  {
    uint64_t v19 = *(void *)(a2 + 392);
    *(void *)(a1 + 38swift_weakDestroy(v0 + 4) = v18;
    *(void *)(a1 + 392) = v19;
    (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
  }

  else
  {
    __int128 v20 = *(_OWORD *)(a2 + 376);
    *__int128 v16 = *v17;
    *(_OWORD *)(a1 + 376) = v20;
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
  }

  uint64_t v21 = *(void *)(a2 + 424);
  uint64_t v22 = *(void *)(a2 + 432);
  *(void *)(a1 + 42swift_weakDestroy(v0 + 4) = v21;
  *(void *)(a1 + 432) = v22;
  (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1 + 400, a2 + 400);
  __int128 v23 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 46swift_weakDestroy(v0 + 4) = v23;
  (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 440, a2 + 440);
  uint64_t v24 = *(void *)(a2 + 504);
  uint64_t v25 = *(void *)(a2 + 512);
  *(void *)(a1 + 50swift_weakDestroy(v0 + 4) = v24;
  *(void *)(a1 + 512) = v25;
  (**(void (***)(uint64_t, uint64_t))(v24 - 8))(a1 + 480, a2 + 480);
  uint64_t v26 = (_OWORD *)(a1 + 520);
  uint64_t v27 = (_OWORD *)(a2 + 520);
  uint64_t v28 = *(void *)(a2 + 544);
  if (v28)
  {
    *(void *)(a1 + 54swift_weakDestroy(v0 + 4) = v28;
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    (**(void (***)(_OWORD *, _OWORD *))(v28 - 8))(v26, v27);
  }

  else
  {
    __int128 v29 = *(_OWORD *)(a2 + 536);
    *uint64_t v26 = *v27;
    *(_OWORD *)(a1 + 536) = v29;
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
  }

  uint64_t v30 = *(int *)(a3 + 40);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16LL))(v31, v32, v33);
  return a1;
}

uint64_t assignWithCopy for TVBreakoutDetailsLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  sub_1000264E4((void *)(a1 + 8), (void *)(a2 + 8));
  sub_1000264E4((void *)(a1 + 48), (void *)(a2 + 48));
  sub_1000264E4((void *)(a1 + 88), (void *)(a2 + 88));
  sub_1000264E4((void *)(a1 + 128), (void *)(a2 + 128));
  sub_1000264E4((void *)(a1 + 168), (void *)(a2 + 168));
  sub_1000264E4((void *)(a1 + 208), (void *)(a2 + 208));
  sub_1000264E4((void *)(a1 + 248), (void *)(a2 + 248));
  sub_1000264E4((void *)(a1 + 288), (void *)(a2 + 288));
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 34swift_weakDestroy(v0 + 4) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  uint64_t v6 = *(void *)(a2 + 384);
  if (*(void *)(a1 + 384))
  {
    if (v6)
    {
      sub_1000264E4((void *)(a1 + 360), (void *)(a2 + 360));
      goto LABEL_8;
    }

    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 360));
  }

  else if (v6)
  {
    *(void *)(a1 + 38swift_weakDestroy(v0 + 4) = v6;
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 360, a2 + 360);
    goto LABEL_8;
  }

  __int128 v7 = *(_OWORD *)(a2 + 360);
  __int128 v8 = *(_OWORD *)(a2 + 376);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(_OWORD *)(a1 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = v7;
  *(_OWORD *)(a1 + 376) = v8;
LABEL_8:
  sub_1000264E4((void *)(a1 + 400), (void *)(a2 + 400));
  sub_1000264E4((void *)(a1 + 440), (void *)(a2 + 440));
  sub_1000264E4((void *)(a1 + 480), (void *)(a2 + 480));
  uint64_t v9 = *(void *)(a2 + 544);
  if (!*(void *)(a1 + 544))
  {
    if (v9)
    {
      *(void *)(a1 + 54swift_weakDestroy(v0 + 4) = v9;
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 520, a2 + 520);
      goto LABEL_15;
    }

uint64_t initializeWithTake for TVBreakoutDetailsLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v6;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  __int128 v7 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 4swift_weakDestroy(v0 + 16) = v7;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  __int128 v8 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v8;
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  __int128 v9 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v9;
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  __int128 v11 = *(_OWORD *)(a2 + 520);
  __int128 v10 = *(_OWORD *)(a2 + 536);
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)(a1 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = v11;
  *(_OWORD *)(a1 + 536) = v10;
  uint64_t v15 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32LL))(v13, v14, v15);
  return a1;
}

uint64_t assignWithTake for TVBreakoutDetailsLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 40);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 48));
  __int128 v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 6swift_weakDestroy(v0 + 4) = v6;
  *(void *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 80);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 10swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 120);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 128));
  __int128 v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 14swift_weakDestroy(v0 + 4) = v7;
  *(void *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 160);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 168));
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 18swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 200);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 208));
  __int128 v8 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 22swift_weakDestroy(v0 + 4) = v8;
  *(void *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 240);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 248));
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 26swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 280);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 288));
  __int128 v9 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 30swift_weakDestroy(v0 + 4) = v9;
  *(void *)(a1 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  if (*(void *)(a1 + 384)) {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 360));
  }
  __int128 v10 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v10;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 400));
  __int128 v11 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 4swift_weakDestroy(v0 + 16) = v11;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 440));
  __int128 v12 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v12;
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 480));
  __int128 v13 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v13;
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  if (*(void *)(a1 + 544)) {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 520));
  }
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  __int128 v14 = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 536) = v14;
  uint64_t v15 = *(int *)(a3 + 40);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40LL))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVBreakoutDetailsLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100217B44);
}

uint64_t sub_100217B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(vswift_weakDestroy(v0 + 4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( a1 + *(int *)(a3 + 40),  a2,  v8);
  }

uint64_t storeEnumTagSinglePayload for TVBreakoutDetailsLayout( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100217BCC);
}

uint64_t sub_100217BCC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v5 + *(int *)(a4 + 40),  a2,  a2,  v7);
  }

  return result;
}

uint64_t sub_100217C40(uint64_t a1)
{
  v4[0] = &unk_1002432C8;
  v4[1] = &unk_1002432E0;
  void v4[2] = &unk_1002432F8;
  void v4[3] = &unk_1002432F8;
  void v4[4] = &unk_1002432F8;
  void v4[5] = &unk_1002432E0;
  uint64_t result = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(319LL);
  if (v3 <= 0x3F)
  {
    v4[6] = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for TVBreakoutDetailsLayout.Alignment( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(vswift_weakDestroy(v0 + 4) = 1;
  }
  else {
    LODWORD(vswift_weakDestroy(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_100217D18 + 4 * byte_1002431B5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100217D4C + 4 * byte_1002431B0[v4]))();
}

uint64_t sub_100217D4C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100217D54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100217D5CLL);
  }
  return result;
}

uint64_t sub_100217D68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100217D70LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_100217D74(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100217D7C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TVBreakoutDetailsLayout.Alignment()
{
  return &type metadata for TVBreakoutDetailsLayout.Alignment;
}

uint64_t destroy for TVBreakoutDetailsLayout.Metrics(void *a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 36);
}

uint64_t initializeWithCopy for TVBreakoutDetailsLayout.Metrics(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  __int128 v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 48, a2 + 48);
  __int128 v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 88, a2 + 88);
  __int128 v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 128, a2 + 128);
  __int128 v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 192) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 168, a2 + 168);
  __int128 v9 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 232) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 208, a2 + 208);
  __int128 v10 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 272) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 248, a2 + 248);
  uint64_t v11 = *(void *)(a2 + 312);
  uint64_t v12 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = v11;
  *(void *)(a1 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = v12;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 288, a2 + 288);
  __int128 v13 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 34swift_weakDestroy(v0 + 4) = v13;
  return a1;
}

uint64_t assignWithCopy for TVBreakoutDetailsLayout.Metrics(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  sub_1000264E4((void *)(a1 + 8), (void *)(a2 + 8));
  sub_1000264E4((void *)(a1 + 48), (void *)(a2 + 48));
  sub_1000264E4((void *)(a1 + 88), (void *)(a2 + 88));
  sub_1000264E4((void *)(a1 + 128), (void *)(a2 + 128));
  sub_1000264E4((void *)(a1 + 168), (void *)(a2 + 168));
  sub_1000264E4((void *)(a1 + 208), (void *)(a2 + 208));
  sub_1000264E4((void *)(a1 + 248), (void *)(a2 + 248));
  sub_1000264E4((void *)(a1 + 288), (void *)(a2 + 288));
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 34swift_weakDestroy(v0 + 4) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  return a1;
}

uint64_t assignWithTake for TVBreakoutDetailsLayout.Metrics(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 2swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 40);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 48));
  __int128 v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 6swift_weakDestroy(v0 + 4) = v4;
  *(void *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 80);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 10swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 120);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 128));
  __int128 v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 14swift_weakDestroy(v0 + 4) = v5;
  *(void *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 160);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 168));
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 18swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 200);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 208));
  __int128 v6 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 22swift_weakDestroy(v0 + 4) = v6;
  *(void *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 240);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 248));
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 26swift_weakDestroy(v0 + 4) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 280);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 288));
  __int128 v7 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 30swift_weakDestroy(v0 + 4) = v7;
  *(void *)(a1 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVBreakoutDetailsLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 360)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVBreakoutDetailsLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = 0u;
    *(_OWORD *)(result + 18swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = 0u;
    *(_OWORD *)(result + 10swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 34swift_weakDestroy(v0 + 4) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = 0u;
    *(_OWORD *)(result + 26swift_weakDestroy(v0 + 4) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/FederatedTableViewController.swift",  41LL,  2LL,  40LL, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVBreakoutDetailsLayout.Metrics()
{
  return &type metadata for TVBreakoutDetailsLayout.Metrics;
}

uint64_t sub_1002181E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVBreakoutDetailsLayout(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10021822C()
{
  uint64_t v1 = type metadata accessor for TVBreakoutDetailsLayout(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + 16));
  __int128 v6 = (void *)(v0 + v4);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + v4 + 8));
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + v4 + 48));
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + v4 + 88));
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + v4 + 128));
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + v4 + 168));
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + v4 + 208));
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + v4 + 248));
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + v4 + 288));
  if (*(void *)(v0 + v4 + 384)) {
    _s6Arcade17PillOverlayLayoutVwxx_0(v6 + 45);
  }
  _s6Arcade17PillOverlayLayoutVwxx_0(v6 + 50);
  _s6Arcade17PillOverlayLayoutVwxx_0(v6 + 55);
  _s6Arcade17PillOverlayLayoutVwxx_0(v6 + 60);
  if (v6[68]) {
    _s6Arcade17PillOverlayLayoutVwxx_0(v6 + 65);
  }
  __int128 v7 = (char *)v6 + *(int *)(v1 + 40);
  uint64_t v8 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100218330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVBreakoutDetailsLayout(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

double sub_100218374(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for TVBreakoutDetailsLayout(0LL) - 8) + 80LL);
  return sub_10021569C(a1, (void *)(v3 + 16), (void *)(v3 + ((v7 + 56) & ~v7)), a2, a3);
}

uint64_t sub_1002183D0(void *a1)
{
  id v50 = a1;
  uint64_t v1 = type metadata accessor for ModernAppStateDataSource(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v56 = v1;
  uint64_t v57 = v2;
  __chkstk_darwin(v1);
  uint64_t v51 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for AppStoreType(0LL);
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  __chkstk_darwin(v4);
  __int128 v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DeviceAppQuery(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  __int128 v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for ASDDeviceAppFetcher(0LL);
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v12 = v55;
  __chkstk_darwin(v11);
  __int128 v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  updateCGFloat d = type metadata accessor for DeviceUpdateRegistry(0LL);
  uint64_t v52 = updated;
  uint64_t v16 = DeviceUpdateRegistry.__allocating_init()();
  uint64_t v63 = 0LL;
  __int128 v61 = 0u;
  __int128 v62 = 0u;
  uint64_t v53 = v14;
  ASDDeviceAppFetcher.init(regulatoryLogger:)(&v61);
  uint64_t v47 = type metadata accessor for DeviceAppStateDataSource(0LL);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DeviceAppQuery.allStoreApps(_:), v7);
  *((void *)&v62 + 1) = v11;
  uint64_t v63 = &protocol witness table for ASDDeviceAppFetcher;
  uint64_t v17 = sub_100009D54(&v61);
  uint64_t v54 = *(void (**)(void *, char *, uint64_t))(v12 + 16);
  uint64_t v18 = v11;
  v54(v17, v14, v11);
  uint64_t v59 = updated;
  uint64_t v60 = &protocol witness table for DeviceUpdateRegistry;
  v58[0] = v16;
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v6, enum case for AppStoreType.default(_:), v49);
  uint64_t v19 = v16;
  swift_retain(v16);
  uint64_t v20 = v47;
  uint64_t v21 = DeviceAppStateDataSource.__allocating_init(query:fetcher:updateRegistry:store:)(v10, &v61, v58, v6);
  type metadata accessor for PurchaseHistoryAppStateDataSource(0LL);
  uint64_t v22 = swift_retain(v50);
  __int128 v23 = (void *)PurchaseHistoryAppStateDataSource.__allocating_init(asPartOf:)(v22);
  uint64_t v24 = sub_1000031E8(&qword_1002EE118);
  uint64_t v25 = type metadata accessor for App.Kind(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = (v27 + 32) & ~v27;
  uint64_t v29 = swift_allocObject(v24, v28 + *(void *)(v26 + 72), v27 | 7);
  *(_OWORD *)(v29 + swift_weakDestroy(v0 + 16) = xmmword_100233580;
  (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v29 + v28, enum case for App.Kind.store(_:), v25);
  id v50 = v23;
  uint64_t v30 = v51;
  ModernAppStateDataSource.init(_:isIncremental:supportedAppKinds:)();
  uint64_t v31 = sub_1000031E8(&qword_1002EE120);
  uint64_t v32 = swift_allocObject(v31, 192LL, 7LL);
  *(_OWORD *)(v32 + swift_weakDestroy(v0 + 16) = xmmword_1002394E0;
  uint64_t v33 = type metadata accessor for WaitingAppStateDataSource(0LL);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  uint64_t v34 = WaitingAppStateDataSource.init()();
  *(void *)(v32 + 56) = v33;
  *(void *)(v32 + 6swift_weakDestroy(v0 + 4) = &protocol witness table for WaitingAppStateDataSource;
  *(void *)(v32 + 32) = v34;
  *(void *)(v32 + 96) = v20;
  *(void *)(v32 + 10swift_weakDestroy(v0 + 4) = &protocol witness table for DeviceAppStateDataSource;
  uint64_t v35 = v21;
  *(void *)(v32 + 72) = v21;
  uint64_t v36 = v56;
  *(void *)(v32 + 136) = v56;
  *(void *)(v32 + 14swift_weakDestroy(v0 + 4) = sub_100218818();
  objc_super v37 = sub_100009D54((void *)(v32 + 112));
  uint64_t v38 = v57;
  (*(void (**)(void *, char *, uint64_t))(v57 + 16))(v37, v30, v36);
  uint64_t v39 = type metadata accessor for DefaultAppStateDataSource(0LL);
  swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  uint64_t v40 = swift_retain(v35);
  uint64_t v41 = DefaultAppStateDataSource.init()(v40);
  *(void *)(v32 + 176) = v39;
  *(void *)(v32 + 18swift_weakDestroy(v0 + 4) = &protocol witness table for DefaultAppStateDataSource;
  *(void *)(v32 + 152) = v41;
  *((void *)&v62 + 1) = v18;
  uint64_t v63 = &protocol witness table for ASDDeviceAppFetcher;
  uint64_t v42 = sub_100009D54(&v61);
  uint64_t v43 = v53;
  v54(v42, v53, v18);
  uint64_t v59 = v52;
  uint64_t v60 = &protocol witness table for DeviceUpdateRegistry;
  v58[0] = v19;
  swift_retain(v19);
  uint64_t v44 = makeModernAppStateController(deviceAppFetcher:updateRegistry:dataSources:)(&v61, v58, v32);
  swift_release(v19);

  swift_release(v35);
  __n128 v45 = swift_bridgeObjectRelease(v32);
  (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v30, v36, v45);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v43, v18);
  _s6Arcade17PillOverlayLayoutVwxx_0(v58);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v61);
  return v44;
}

unint64_t sub_100218818()
{
  unint64_t result = qword_1002EE128;
  if (!qword_1002EE128)
  {
    uint64_t v1 = type metadata accessor for ModernAppStateDataSource(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ModernAppStateDataSource, v1);
    atomic_store(result, (unint64_t *)&qword_1002EE128);
  }

  return result;
}

ValueMetadata *type metadata accessor for ModernAppStateControllerFactory()
{
  return &type metadata for ModernAppStateControllerFactory;
}

uint64_t sub_100218870( double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (qword_1002DCA30 != -1) {
    swift_once(&qword_1002DCA30, sub_1000B9E54);
  }
  uint64_t v11 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  uint64_t v12 = sub_1000061F4(v11, (uint64_t)qword_1002EFF78);
  return sub_1000BBEDC(v12, a8, a1, a2);
}

id sub_100218910()
{
  return sub_100218AB4();
}

uint64_t sub_100218920@<X0>(uint64_t a1@<X8>)
{
  if (qword_1002DCA30 != -1) {
    swift_once(&qword_1002DCA30, sub_1000B9E54);
  }
  uint64_t v2 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  sub_1000061F4(v2, (uint64_t)qword_1002EFF78);
  double v3 = SmallLockupLayout.Metrics.artworkSize.getter();
  ComponentPrefetchSizing.init(size:contentMode:)(1LL, v3, v4);
  uint64_t v5 = type metadata accessor for ComponentPrefetchSizing(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(a1, 0LL, 1LL, v5);
}

int64x2_t sub_1002189AC@<Q0>(uint64_t a1@<X1>, void *a2@<X4>, int64x2_t *a3@<X8>)
{
  double v6 = PageTraitEnvironment.pageContentSize.getter();
  if (qword_1002DCA30 != -1) {
    swift_once(&qword_1002DCA30, sub_1000B9E54);
  }
  uint64_t v7 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  uint64_t v8 = sub_1000061F4(v7, (uint64_t)qword_1002EFF78);
  sub_1000BBEDC(v8, (uint64_t)a2, (v6 + -40.0) * 0.5, 1.79769313e308);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  [a2 pageMarginInsets];
  a3->i64[0] = v13;
  a3->i64[1] = v14;
  a3[1].i64[0] = v15;
  a3[1].i64[1] = v16;
  a3[2].i64[0] = v10;
  a3[2].i64[1] = v12;
  int64x2_t result = vdupq_n_s64(0x4044000000000000uLL);
  a3[3] = result;
  a3[4].i8[0] = 0;
  a3[4].i64[1] = a1;
  return result;
}

id sub_100218AB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OfferTitleType(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v6 = *(void **)&v0[OBJC_IVAR____TtC6Arcade29SmallLockupCollectionViewCell_titleLabel];
  Lockup.title.getter(v7);
  if (v8)
  {
    uint64_t v10 = v8;
    NSString v11 = String._bridgeToObjectiveC()();
    *(void *)&double v9 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }

  else
  {
    NSString v11 = 0LL;
  }

  objc_msgSend(v6, "setText:", v11, v9);

  uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29SmallLockupCollectionViewCell_subtitleLabel];
  Lockup.subtitle.getter();
  if (v13)
  {
    uint64_t v15 = v13;
    NSString v16 = String._bridgeToObjectiveC()();
    *(void *)&double v14 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }

  else
  {
    NSString v16 = 0LL;
  }

  objc_msgSend(v12, "setText:", v16, v14);

  id v17 = [v12 text];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    uint64_t v21 = v20;
  }

  else
  {
    uint64_t v19 = 0LL;
    uint64_t v21 = 0LL;
  }

  char v22 = static String.isNilOrEmpty(_:)(v19, v21);
  __int128 v23 = &selRef_updateSearchResultsForSearchController_;
  id v24 = objc_msgSend(v12, "setHidden:", v22 & 1, swift_bridgeObjectRelease(v21).n128_f64[0]);
  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29SmallLockupCollectionViewCell_ordinalLabel];
  Lockup.ordinal.getter(v24);
  if (v26)
  {
    uint64_t v28 = v26;
    NSString v29 = String._bridgeToObjectiveC()();
    *(void *)&double v27 = swift_bridgeObjectRelease(v28).n128_u64[0];
  }

  else
  {
    NSString v29 = 0LL;
  }

  objc_msgSend(v25, "setText:", v29, v27);

  uint64_t v30 = Lockup.offerDisplayProperties.getter();
  if (v30)
  {
    uint64_t v32 = v30;
    if ((OfferDisplayProperties.isFree.getter() & 1) == 0)
    {
      uint64_t v33 = OfferDisplayProperties.titles.getter();
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OfferTitleType.standard(_:), v2);
      if (*(void *)(v33 + 16))
      {
        unint64_t v34 = sub_1000E86F4((uint64_t)v5);
        if ((v35 & 1) != 0)
        {
          uint64_t v36 = *(void *)(*(void *)(v33 + 56) + 16 * v34 + 8);
          swift_bridgeObjectRetain(v36);
          __n128 v37 = swift_bridgeObjectRelease(v33);
          (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v37);
          uint64_t v38 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29SmallLockupCollectionViewCell_priceLabel];
          NSString v39 = String._bridgeToObjectiveC()();
          uint64_t v40 = v36;
          __int128 v23 = &selRef_updateSearchResultsForSearchController_;
          objc_msgSend(v38, "setText:", v39, swift_bridgeObjectRelease(v40).n128_f64[0]);
          swift_release(v32);

          goto LABEL_21;
        }
      }

      __n128 v41 = swift_bridgeObjectRelease(v33);
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v41);
    }

    *(void *)&double v31 = swift_release(v32).n128_u64[0];
  }

  uint64_t v38 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29SmallLockupCollectionViewCell_priceLabel];
  objc_msgSend(v38, "setText:", 0, v31);
LABEL_21:
  id v42 = [v38 text];
  if (v42)
  {
    uint64_t v43 = v42;
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    uint64_t v46 = v45;
  }

  else
  {
    uint64_t v44 = 0LL;
    uint64_t v46 = 0LL;
  }

  char v47 = static String.isNilOrEmpty(_:)(v44, v46);
  id v48 = objc_msgSend(v38, v23[83], v47 & 1, swift_bridgeObjectRelease(v46).n128_f64[0]);
  uint64_t v49 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29SmallLockupCollectionViewCell_artworkView];
  uint64_t v50 = Lockup.icon.getter(v48);
  uint64_t v52 = v50;
  if (v50) {
    *(void *)&double v51 = swift_release(v50).n128_u64[0];
  }
  objc_msgSend(v49, v23[83], v52 == 0, v51);
  return [v1 setNeedsLayout];
}

uint64_t sub_100218E40()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002E7020);
  __chkstk_darwin(v3);
  uint64_t v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  NSString v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000FF90(v0, qword_1002F19B0);
  uint64_t v25 = sub_1000061F4(v0, (uint64_t)qword_1002F19B0);
  id v12 = [(id)objc_opt_self(UIColor) clearColor];
  v27[0] = sub_1000031E8(&qword_1002DE250);
  uint64_t v13 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  v27[1] = v13;
  uint64_t KeyPath = swift_getKeyPath(&unk_100243520, v27);
  id v28 = v12;
  id v29 = v12;
  id v15 = v12;
  NSString v16 = v11;
  Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v29, &v28, v13);
  if (qword_1002DCF88 != -1) {
    swift_once(&qword_1002DCF88, sub_100175C20);
  }
  uint64_t v17 = sub_1000061F4(v8, (uint64_t)qword_1002F1280);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v7, v17, v8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v19(v7, 0LL, 1LL, v8);
  if (qword_1002DCF80 != -1) {
    swift_once(&qword_1002DCF80, sub_100175B3C);
  }
  uint64_t v20 = sub_1000061F4(v8, (uint64_t)qword_1002F1268);
  uint64_t v21 = (uint64_t)v26;
  v18(v26, v20, v8);
  v19((char *)v21, 0LL, 1LL, v8);
  uint64_t v22 = (uint64_t)&v2[*(int *)(v0 + 28)];
  v19((char *)v22, 1LL, 1LL, v8);
  uint64_t v23 = (uint64_t)&v2[*(int *)(v0 + 32)];
  v19((char *)v23, 1LL, 1LL, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v2, v16, v8);
  sub_1000FB06C((uint64_t)v7, v22, (uint64_t *)&unk_1002E7020);
  sub_1000FB06C(v21, v23, (uint64_t *)&unk_1002E7020);
  return sub_1000C97D4((uint64_t)v2, v25);
}

uint64_t sub_100219144()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002E7020);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  NSString v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000FF90(v0, qword_1002F19C8);
  uint64_t v24 = sub_1000061F4(v0, (uint64_t)qword_1002F19C8);
  id v12 = [(id)objc_opt_self(UIColor) clearColor];
  v26[0] = sub_1000031E8(&qword_1002DE250);
  uint64_t v13 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  v26[1] = v13;
  uint64_t KeyPath = swift_getKeyPath(&unk_100243520, v26);
  id v27 = v12;
  id v28 = v12;
  id v15 = v12;
  NSString v16 = v11;
  Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v28, &v27, v13);
  if (qword_1002DCF90 != -1) {
    swift_once(&qword_1002DCF90, sub_100175D08);
  }
  uint64_t v17 = sub_1000061F4(v8, (uint64_t)qword_1002F1298);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v7, v17, v8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v19(v7, 0LL, 1LL, v8);
  uint64_t v20 = (uint64_t)v25;
  v18(v25, v17, v8);
  v19((char *)v20, 0LL, 1LL, v8);
  uint64_t v21 = (uint64_t)&v2[*(int *)(v0 + 28)];
  v19((char *)v21, 1LL, 1LL, v8);
  uint64_t v22 = (uint64_t)&v2[*(int *)(v0 + 32)];
  v19((char *)v22, 1LL, 1LL, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v2, v16, v8);
  sub_1000FB06C((uint64_t)v7, v21, (uint64_t *)&unk_1002E7020);
  sub_1000FB06C(v20, v22, (uint64_t *)&unk_1002E7020);
  return sub_1000C97D4((uint64_t)v2, v24);
}

char *sub_100219414(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for CornerStyle(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = &v4[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_itemLayoutContext];
  uint64_t v14 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v13, 1LL, 1LL, v14);
  id v15 = &v4[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents];
  NSString v16 = (objc_class *)type metadata accessor for SearchResultCollectionViewCell(0LL);
  *(void *)id v15 = 0LL;
  *((void *)v15 + 1) = 0LL;
  v51.id receiver = v4;
  v51.super_class = v16;
  uint64_t v17 = (char *)objc_msgSendSuper2(&v51, "initWithFrame:", a1, a2, a3, a4);
  id v18 = [v17 contentView];
  id v19 = [v18 layer];

  if (qword_1002DCF68 != -1) {
    swift_once(&qword_1002DCF68, sub_100175A44);
  }
  [v19 setBorderWidth:*(double *)&qword_1002F1250];

  (*(void (**)(_BYTE *, void, uint64_t))(v10 + 104))(v12, enum case for CornerStyle.continuous(_:), v9);
  id v20 = [v17 contentView];
  CornerStyle.apply(withRadius:to:)(v20, 12.0);

  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v21 = &v17[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  __int128 v22 = *(_OWORD *)&v17[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
  v57[0] = *(_OWORD *)&v17[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  v57[1] = v22;
  char v58 = v17[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)uint64_t v21 = 0x4020000000000000LL;
  *((void *)v21 + 1) = 0x4034000000000000LL;
  v21[16] = 0;
  *((void *)v21 + 3) = 0LL;
  v21[32] = 1;
  uint64_t v23 = v17;
  sub_1000690F4((uint64_t)v57, v24, v25);

  v52[0] = xmmword_100233760;
  v52[1] = xmmword_100236ED0;
  char v53 = 0;
  uint64_t v54 = 0LL;
  uint64_t v55 = 0LL;
  char v56 = 1;
  uint64_t v26 = v23;
  sub_10006779C(v52);

  id v27 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v28 = v26;
  id v29 = [v27 blackColor];
  id v30 = [v29 CGColor];

  double v31 = &v28[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v32 = *(void **)&v28[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v33 = *(void **)&v28[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
  unint64_t v34 = *(void **)&v28[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
  *(void *)double v31 = v30;
  *(int64x2_t *)(v31 + 8) = vdupq_n_s64(1uLL);
  id v35 = v32;
  sub_10000AAF8(v33);
  sub_10000AAF8(v34);
  id v36 = v30;

  sub_10000AB08(v33);
  sub_10000AB08(v34);
  sub_100069248(v32, v33, (unint64_t)v34);

  sub_10000AB08(v33);
  sub_10000AB08(v34);

  __n128 v37 = &v28[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v38 = *(_DWORD *)&v28[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v36) = *(_DWORD *)&v28[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v33) = v28[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v3swift_weakDestroy(v0 + 4) = v28[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)__n128 v37 = 0;
  *((_DWORD *)v37 + 1) = 1051931443;
  v37[8] = 0;
  uint64_t v39 = *((unsigned int *)v37 + 3);
  *((_DWORD *)v37 + 3) = 0;
  v37[16] = 1;
  uint64_t v40 = v28;
  v50[8] = (_BYTE)v33;
  v50[0] = (_BYTE)v34;
  v41.n128_u32[0] = v38;
  sub_1000693B0((int)v36, v33 | (unint64_t)(v39 << 32), (char)v34, v41);

  char v42 = v40[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
  v40[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v42 & 1) == 0)
  {
    char v43 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v40) + 0x98LL))();
    uint64_t v44 = v40;
    sub_1000678F0(v43);
  }

  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  objc_msgSend(v40, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  id v48 = [v40 contentView];
  objc_msgSend(v48, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  return v40;
}

void sub_100219890(uint64_t a1)
{
  *(_BYTE *)(v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state) = a1;
  uint64_t v2 = v1 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents);
  if (v3)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType(v3);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    id v8 = v3;
    v7(a1, ObjectType, v5);
  }

void sub_100219938(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = &v3[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents];
  id v6 = *(id *)&v3[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  id v7 = a1;
  id v13 = v7;
  if (a1)
  {
    uint64_t v8 = *((void *)v5 + 1);
    uint64_t ObjectType = swift_getObjectType(v7);
    if (!v6)
    {
      id v11 = v13;
      goto LABEL_6;
    }

    if (v13 != v6)
    {
      id v10 = v13;
      [v6 removeFromSuperview];
LABEL_6:
      (*(void (**)(void, uint64_t, uint64_t))(v8 + 32))( v3[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state],  ObjectType,  v8);
      id v12 = [v3 contentView];
      [v12 addSubview:v13];

      [v3 setNeedsLayout];
      [v3 layoutIfNeeded];

      id v6 = v13;
    }
  }
}

id sub_100219A50()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents);
  if (!v1
    || (uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents + 8),
        v13[0] = *(void *)(v0 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents),
        v13[1] = v2,
        id v3 = v1,
        uint64_t v4 = sub_1000031E8(&qword_1002EE200),
        uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002EDEC8),
        (swift_dynamicCast(&v15, v13, v4, v5, 6LL) & 1) == 0))
  {
    uint64_t v17 = 0LL;
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    goto LABEL_6;
  }

  if (!*((void *)&v16 + 1))
  {
LABEL_6:
    sub_100006060((uint64_t)&v15, &qword_1002EDEB8);
    uint64_t v9 = (objc_class *)type metadata accessor for VideoViewContainer();
    id v10 = (char *)objc_allocWithZone(v9);
    swift_unknownObjectWeakInit(&v10[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view], 0LL);
    *(void *)&v10[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = -1LL;
    swift_unknownObjectWeakAssign(v11, 0LL);
    v14.id receiver = v10;
    v14.super_class = v9;
    return objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  }

  sub_100009D90(&v15, (uint64_t)v18);
  uint64_t v6 = v19;
  uint64_t v7 = v20;
  sub_100005F8C(v18, v19);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
  _s6Arcade17PillOverlayLayoutVwxx_0(v18);
  return (id)v8;
}

uint64_t sub_100219BA8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents);
  if (!v1
    || (uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents + 8),
        v11[0] = *(void *)(v0 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents),
        v11[1] = v2,
        id v3 = v1,
        uint64_t v4 = sub_1000031E8(&qword_1002EE200),
        uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002EDEC8),
        (swift_dynamicCast(&v12, v11, v4, v5, 6LL) & 1) == 0))
  {
    uint64_t v14 = 0LL;
    __int128 v12 = 0u;
    __int128 v13 = 0u;
    goto LABEL_6;
  }

  uint64_t v6 = *((void *)&v13 + 1);
  if (!*((void *)&v13 + 1))
  {
LABEL_6:
    sub_100006060((uint64_t)&v12, &qword_1002EDEB8);
    return 0LL;
  }

  uint64_t v7 = v14;
  sub_100005F8C(&v12, *((uint64_t *)&v13 + 1));
  uint64_t v8 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(&v8[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);

  _s6Arcade17PillOverlayLayoutVwxx_0(&v12);
  return Strong;
}

id sub_100219CA4()
{
  v6.id receiver = v0;
  v6.super_class = (Class)type metadata accessor for SearchResultCollectionViewCell(0LL);
  id result = objc_msgSendSuper2(&v6, "layoutSubviews");
  uint64_t v2 = OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents];
  if (v3)
  {
    id v4 = v3;
    id v5 = [v0 contentView];
    [v5 frame];

    objc_msgSend(v4, "setFrame:", CGRect.subtracting(insets:)(objc_msgSend(v0, "layoutMargins")).n128_f64[0]);
    id result = *(id *)&v0[v2];
    if (result) {
      return [result layoutIfNeeded];
    }
  }

  return result;
}

void sub_100219E60(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = __chkstk_darwin(v6).n128_u64[0];
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v11 = objc_msgSend(v2, "contentView", v8);
  if (qword_1002DD1A8 != -1) {
    swift_once(&qword_1002DD1A8, sub_100218E40);
  }
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  sub_1000061F4(v12, (uint64_t)qword_1002F19B0);
  sub_1001AB114(a1, (uint64_t)v10);
  __n128 v24 = v2;
  Conditional.evaluate(with:)(&v25, &v24, v6);
  __int128 v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v10, v6);
  id v14 = v25;
  [v11 setBackgroundColor:v25];

  id v15 = [v3 contentView];
  id v16 = [v15 layer];

  if (qword_1002DD1B0 != -1) {
    swift_once(&qword_1002DD1B0, sub_100219144);
  }
  sub_1000061F4(v12, (uint64_t)qword_1002F19C8);
  sub_1001AB114(a1, (uint64_t)v10);
  __n128 v24 = v3;
  Conditional.evaluate(with:)(&v25, &v24, v6);
  v13(v10, v6);
  id v17 = v25;
  id v18 = [v25 CGColor];

  [v16 setBorderColor:v18];
  uint64_t v19 = *(void **)&v3[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents];
  if (v19)
  {
    uint64_t v20 = *(void *)&v3[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents + 8];
    uint64_t ObjectType = swift_getObjectType(*(void *)&v3[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents]);
    __int128 v22 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 80);
    id v23 = v19;
    v22(a1, a2 & 1, ObjectType, v20);
  }

  if ((a2 & 1) != 0)
  {
    [v3 setNeedsLayout];
    [v3 layoutIfNeeded];
  }

void sub_10021A0EC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_10006734C(a1, a2);
  uint64_t v6 = sub_100219BA8();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_100128F18(a1, a2);
  }

  double v8 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents);
  if (v8)
  {
    uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents + 8);
    uint64_t ObjectType = swift_getObjectType(v8);
    id v11 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v9 + 88);
    id v12 = v8;
    v11(a1, a2, ObjectType, v9);
  }

void sub_10021A1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MediaClickMetricsEvent.ActionType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100006028(0LL, (unint64_t *)&qword_1002DD600, &OBJC_CLASS___UIPress_ptr);
  sub_10006B6B4();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  id v10 = (objc_class *)type metadata accessor for SearchResultCollectionViewCell(0LL);
  v19.id receiver = v2;
  v19.super_class = v10;
  objc_msgSendSuper2(&v19, "pressesBegan:withEvent:", isa, a2);

  uint64_t v11 = sub_100219BA8();
  if (v11)
  {
    id v12 = (_BYTE *)v11;
    sub_10008AEB0(a1);
    if ((v13 & 1) != 0)
    {
      uint64_t v14 = qword_1002F0818;
      if ((v12[qword_1002F0818] & 1) == 0)
      {
        id v15 = *(void **)&v12[qword_1002E70D8];
        if (v15)
        {
          id v16 = v15;
          id v17 = (void *)dispatch thunk of VideoPlayer.playerItem.getter();

          if (v17)
          {

            v12[v14] = 1;
            sub_10012A748();
            (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for MediaClickMetricsEvent.ActionType.enterFullscreen(_:),  v5);
            sub_10012B584((uint64_t)v8);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            sub_10012C020();
          }
        }
      }
    }
  }

double sub_10021A3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SearchResult(0LL);
  uint64_t v7 = sub_100003B6C( &qword_1002EE1D0,  (uint64_t (*)(uint64_t))&type metadata accessor for SearchResult,  (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v24, v6, v6, v7);
  uint64_t v9 = v24;
  if (v24)
  {
    uint64_t v10 = type metadata accessor for AppSearchResult(0LL);
    if (swift_dynamicCastClass(v9, v10))
    {
      uint64_t v11 = type metadata accessor for AppSearchResultContentView();
      id v12 = type metadata accessor for AppSearchResultContentView;
      char v13 = (unint64_t *)&unk_1002EE1E0;
      uint64_t v14 = &unk_100234090;
    }

    else
    {
      uint64_t v15 = type metadata accessor for EditorialSearchResult(0LL);
      if (!swift_dynamicCastClass(v9, v15))
      {
LABEL_11:
        *(void *)&double result = swift_release(v9).n128_u64[0];
        return result;
      }

      uint64_t v11 = type metadata accessor for EditorialSearchResultContentView();
      id v12 = type metadata accessor for EditorialSearchResultContentView;
      char v13 = (unint64_t *)&unk_1002EE1D8;
      uint64_t v14 = &unk_10023E238;
    }

    uint64_t v16 = sub_100003B6C(v13, (uint64_t (*)(uint64_t))v12, (uint64_t)v14);
    id v17 = &v3[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents];
    uint64_t v18 = *(void **)&v3[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents];
    if (v18 && sub_1000031E8((uint64_t *)&unk_1002EE1F0) == v11
      || (id v19 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11)) init],
          sub_100219938(v19, v16),
          (uint64_t v18 = *(void **)v17) != 0LL))
    {
      uint64_t v20 = *((void *)v17 + 1);
      uint64_t ObjectType = swift_getObjectType(v18);
      __int128 v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
      id v23 = v18;
      v22(a1, a2, ObjectType, v20);
    }

    [v3 setNeedsLayout];
    goto LABEL_11;
  }

  return result;
}

void sub_10021A578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v5 = &v3[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents];
  uint64_t v6 = *(void **)&v3[OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents];
  if (v6)
  {
    uint64_t v10 = *((void *)v5 + 1);
    uint64_t ObjectType = swift_getObjectType(v6);
    id v14 = v6;
    id v12 = [v4 contentView];
    [v12 frame];

    __n128 v13 = CGRect.subtracting(insets:)([v4 layoutMargins]);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v10 + 64))( a1,  a2,  a3,  ObjectType,  v10,  v13);
  }

void sub_10021A690()
{
}

id sub_10021A6C4()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10021A738()
{
  return type metadata accessor for SearchResultCollectionViewCell(0LL);
}

uint64_t type metadata accessor for SearchResultCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002EE1A8;
  if (!qword_1002EE1A8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchResultCollectionViewCell);
  }
  return result;
}

void sub_10021A77C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = &unk_1002433F0;
    swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 472);
  }

uint64_t sub_10021A7F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_100015FDC(v3, a1);
}

double sub_10021A840(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_1000FB06C(a1, v3, (uint64_t *)&unk_1002DDB60);
  *(void *)&double result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_10021A8A0(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

void sub_10021A8F0(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents);
  if (v4)
  {
    uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents + 8);
    uint64_t ObjectType = swift_getObjectType(*(void *)(v3
                                               + OBJC_IVAR____TtC6Arcade30SearchResultCollectionViewCell_resultContents));
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v8 + 72);
    id v11 = v4;
    v10(a1, a2, a3 & 1, ObjectType, v8);
  }

uint64_t sub_10021A9A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchResult(0LL);
  uint64_t v3 = sub_100003B6C( &qword_1002EE1D0,  (uint64_t (*)(uint64_t))&type metadata accessor for SearchResult,  (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v14, v2, v2, v3);
  uint64_t v4 = v14;
  if (!v14) {
    goto LABEL_8;
  }
  uint64_t v5 = type metadata accessor for AppSearchResult(0LL);
  if (!swift_dynamicCastClass(v4, v5))
  {
    uint64_t v10 = type metadata accessor for EditorialSearchResult(0LL);
    if (swift_dynamicCastClass(v4, v10))
    {
      uint64_t v6 = type metadata accessor for EditorialSearchResultContentView();
      uint64_t v7 = type metadata accessor for EditorialSearchResultContentView;
      uint64_t v8 = (unint64_t *)&unk_1002EE1D8;
      uint64_t v9 = &unk_10023E238;
      goto LABEL_6;
    }

    swift_release(v4);
LABEL_8:
    char v12 = 0;
    return v12 & 1;
  }

  uint64_t v6 = type metadata accessor for AppSearchResultContentView();
  uint64_t v7 = type metadata accessor for AppSearchResultContentView;
  uint64_t v8 = (unint64_t *)&unk_1002EE1E0;
  uint64_t v9 = &unk_100234090;
LABEL_6:
  uint64_t v11 = sub_100003B6C(v8, (uint64_t (*)(uint64_t))v7, (uint64_t)v9);
  char v12 = dispatch thunk of static ArtworkPrefetchingShelfComponentView.prefersLayeredImageForArtworkPrefetch(in:)( a1,  v6,  *(void *)(v11 + 8));
  swift_release(v4);
  return v12 & 1;
}

double sub_10021AAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SearchResult(0LL);
  uint64_t v7 = sub_100003B6C( &qword_1002EE1D0,  (uint64_t (*)(uint64_t))&type metadata accessor for SearchResult,  (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v17, v6, v6, v7);
  uint64_t v9 = v17;
  if (v17)
  {
    uint64_t v10 = type metadata accessor for AppSearchResult(0LL);
    if (swift_dynamicCastClass(v9, v10))
    {
      uint64_t v11 = type metadata accessor for AppSearchResultContentView();
      char v12 = type metadata accessor for AppSearchResultContentView;
      __n128 v13 = (unint64_t *)&unk_1002EE1E0;
      uint64_t v14 = &unk_100234090;
    }

    else
    {
      uint64_t v15 = type metadata accessor for EditorialSearchResult(0LL);
      if (!swift_dynamicCastClass(v9, v15))
      {
LABEL_7:
        *(void *)&double result = swift_release(v9).n128_u64[0];
        return result;
      }

      uint64_t v11 = type metadata accessor for EditorialSearchResultContentView();
      char v12 = type metadata accessor for EditorialSearchResultContentView;
      __n128 v13 = (unint64_t *)&unk_1002EE1D8;
      uint64_t v14 = &unk_10023E238;
    }

    uint64_t v16 = sub_100003B6C(v13, (uint64_t (*)(uint64_t))v12, (uint64_t)v14);
    dispatch thunk of static ArtworkPrefetchingShelfComponentView.prefetchArtwork(for:with:asPartOf:)( a1,  a2,  a3,  v11,  *(void *)(v16 + 8));
    goto LABEL_7;
  }

  return result;
}

uint64_t sub_10021ABE4()
{
  return sub_100219BA8();
}

id sub_10021AC04()
{
  return sub_100219A50();
}

uint64_t sub_10021AC24()
{
  return sub_100003B6C( (unint64_t *)&unk_1002EE1C0,  type metadata accessor for SearchResultCollectionViewCell,  (uint64_t)&unk_100243408);
}

double sub_10021AC50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResult(0LL);
  uint64_t v5 = sub_100003B6C( &qword_1002EE1D0,  (uint64_t (*)(uint64_t))&type metadata accessor for SearchResult,  (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v14, v4, v4, v5);
  uint64_t v6 = v14;
  if (!v14) {
    return 0.0;
  }
  uint64_t v7 = type metadata accessor for AppSearchResult(0LL);
  if (swift_dynamicCastClass(v6, v7))
  {
    type metadata accessor for AppSearchResultContentView();
    uint64_t v8 = type metadata accessor for AppSearchResultContentView;
    uint64_t v9 = (unint64_t *)&unk_1002EE1E0;
    uint64_t v10 = &unk_100234090;
  }

  else
  {
    uint64_t v12 = type metadata accessor for EditorialSearchResult(0LL);
    if (!swift_dynamicCastClass(v6, v12))
    {
      swift_release(v6);
      return 0.0;
    }

    type metadata accessor for EditorialSearchResultContentView();
    uint64_t v8 = type metadata accessor for EditorialSearchResultContentView;
    uint64_t v9 = (unint64_t *)&unk_1002EE1D8;
    uint64_t v10 = &unk_10023E238;
  }

  sub_100003B6C(v9, (uint64_t (*)(uint64_t))v8, (uint64_t)v10);
  double v11 = dispatch thunk of static ExactHeightProviding.height(in:asPartOf:)(a1, a2);
  swift_release(v6);
  return v11;
}

uint64_t sub_10021AD8C()
{
  return 16LL;
}

__n128 sub_10021AD98(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021ADA8()
{
  return 16LL;
}

__n128 sub_10021ADB4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(&OBJC_CLASS____TtC6ArcadeP33_5A1B2153BD425DF8FF7AEB41241C7FF619ResourceBundleClass);
}

id objc_msgSend_setBlurRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlurRadius:");
}