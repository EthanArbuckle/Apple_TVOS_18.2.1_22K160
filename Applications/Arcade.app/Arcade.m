char *sub_100002834(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  objc_super v19;
  objc_super v20;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v10 = OBJC_IVAR____TtC6Arcade29FramedVideoCollectionViewCell_videoContainer;
  v11 = (objc_class *)type metadata accessor for VideoViewContainer();
  v12 = (char *)objc_allocWithZone(v11);
  swift_unknownObjectWeakInit(&v12[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view], 0LL);
  *(void *)&v12[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v13, 0LL);
  v20.receiver = v12;
  v20.super_class = v11;
  v14 = v4;
  *(void *)&v4[v10] = objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v19.receiver = v14;
  v19.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  v16 = [v15 contentView];
  v17 = *(id *)&v15[OBJC_IVAR____TtC6Arcade29FramedVideoCollectionViewCell_videoContainer];
  [v16 addSubview:v17];

  return v15;
}

void *sub_100002A10()
{
  v1 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade29FramedVideoCollectionViewCell_videoContainer);
  id v2 = v1;
  return v1;
}

void sub_100002A3C(uint64_t a1, uint64_t a2)
{
  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  uint64_t v7 = type metadata accessor for MediaClickMetricsEvent.ActionType(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000045E8();
  sub_100003B6C( (unint64_t *)&qword_1002E18F0,  (uint64_t (*)(uint64_t))sub_1000045E8,  (uint64_t)&protocol conformance descriptor for NSObject);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v20.receiver = v3;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, "pressesBegan:withEvent:", isa, a2);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)&v3[OBJC_IVAR____TtC6Arcade29FramedVideoCollectionViewCell_videoContainer] + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    v13 = (_BYTE *)Strong;
    sub_100002BEC(a1);
    if ((v14 & 1) != 0)
    {
      uint64_t v15 = qword_1002F0818;
      if ((v13[qword_1002F0818] & 1) == 0)
      {
        v16 = *(void **)&v13[qword_1002E70D8];
        if (v16)
        {
          id v17 = v16;
          v18 = (void *)dispatch thunk of VideoPlayer.playerItem.getter();

          if (v18)
          {

            v13[v15] = 1;
            sub_10012A748();
            (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for MediaClickMetricsEvent.ActionType.enterFullscreen(_:),  v7);
            sub_10012B584((uint64_t)v10);
            (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
            sub_10012C020();
          }
        }
      }
    }
  }
}

void sub_100002BEC(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v2 = a1;
    }
    else {
      uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = __CocoaSet.makeIterator()(v2);
    unint64_t v4 = sub_1000045E8();
    uint64_t v5 = sub_100003B6C( (unint64_t *)&qword_1002E18F0,  (uint64_t (*)(uint64_t))sub_1000045E8,  (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    uint64_t v1 = v27[0];
    uint64_t v25 = v27[1];
    uint64_t v7 = v27[2];
    uint64_t v8 = v27[3];
    unint64_t v9 = v27[4];
  }

  else
  {
    uint64_t v10 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    v6 = (void *)swift_bridgeObjectRetain(a1);
    uint64_t v8 = 0LL;
  }

  int64_t v24 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    uint64_t v17 = v8;
    if ((v1 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v21 = __CocoaSet.Iterator.next()(v6);
    if (!v21) {
      goto LABEL_34;
    }
    uint64_t v22 = v21;
    uint64_t v26 = v21;
    unint64_t v23 = sub_1000045E8();
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v23, 7LL);
    id v15 = v28;
    swift_unknownObjectRelease(v22);
    if (!v15) {
      goto LABEL_34;
    }
LABEL_13:
    id v16 = [v15 type];

    if (v16 == (id)6) {
      goto LABEL_34;
    }
  }

  if (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v8 << 6);
LABEL_12:
    id v15 = *(id *)(*(void *)(v1 + 48) + 8 * v14);
    if (!v15) {
      goto LABEL_34;
    }
    goto LABEL_13;
  }

  int64_t v18 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v18 >= v24) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v8;
    if (!v19)
    {
      uint64_t v8 = v17 + 2;
      if (v17 + 2 >= v24) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v8);
      if (!v19)
      {
        uint64_t v8 = v17 + 3;
        if (v17 + 3 >= v24) {
          goto LABEL_34;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v8);
        if (!v19)
        {
          uint64_t v8 = v17 + 4;
          if (v17 + 4 >= v24) {
            goto LABEL_34;
          }
          unint64_t v19 = *(void *)(v25 + 8 * v8);
          if (!v19)
          {
            uint64_t v8 = v17 + 5;
            if (v17 + 5 >= v24) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v25 + 8 * v8);
            if (!v19)
            {
              uint64_t v20 = v17 + 6;
              while (v24 != v20)
              {
                unint64_t v19 = *(void *)(v25 + 8 * v20++);
                if (v19)
                {
                  uint64_t v8 = v20 - 1;
                  goto LABEL_31;
                }
              }

LABEL_34:
              sub_100004624(v1);
              return;
            }
          }
        }
      }
    }

              sub_100004624(v1);
              return;
            }
          }
        }
      }
    }

              sub_100004624(v1);
              return;
            }
          }
        }
      }
    }

    uint64_t v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v8);
LABEL_12:
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade32ScreenshotsGalleryViewController_fullScreenshotFetcher);
    swift_beginAccess(v12 + 16, v34, 32LL, 0LL);
    unint64_t v13 = *(void *)(v12 + 16);
    swift_retain(v9);
    id v15 = sub_1000B745C(v14, v13);
    swift_release(v9);
    if (!v15)
    {
      swift_endAccess(v34);
      goto LABEL_21;
    }

    id v16 = objc_msgSend(v11, "view", swift_endAccess(v34).n128_f64[0]);
    if (v16)
    {
      uint64_t v17 = v16;
      int64_t v18 = objc_opt_self(&OBJC_CLASS___UIImageView);
      unint64_t v19 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional( v17,  v18,  0,  0,  0), "image");

      if (v19)
      {
        sub_100006028(0LL, (unint64_t *)&qword_1002E3098, &OBJC_CLASS___UIImage_ptr);
        uint64_t v20 = v15;
        uint64_t v21 = v19;
        uint64_t v22 = static NSObject.== infix(_:_:)(v21, v20);

        if ((v22 & 1) != 0)
        {

LABEL_21:
          swift_release(v9);
          return;
        }
      }

      unint64_t v23 = v15;
      int64_t v24 = [v11 view];
      if (v24)
      {
        uint64_t v25 = v24;
        uint64_t v26 = objc_opt_self(&OBJC_CLASS___UIImageView);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v25, v26, 0, 0, 0), "setImage:", v23);

        v27 = [v11 view];
        if (v27)
        {
          v28 = v27;
          v29 = objc_opt_self(&OBJC_CLASS___UIImageView);
          swift_dynamicCastObjCClassUnconditional(v28, v29, 0LL, 0LL, 0LL);
          memset(v34, 0, sizeof(v34));
          static AutomationSemantics.page(name:id:)(0xD000000000000021LL, 0x8000000100248300LL, v34);
          sub_100006060((uint64_t)v34, (uint64_t *)&unk_1002DF680);
          UIView.setAutomationSemantics(_:)(v6);
          swift_release(v9);

          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
          return;
        }

        goto LABEL_41;
      }

              sub_100004624(v1);
              return;
            }
          }
        }
      }
    }

              sub_100004624(v1);
              return;
            }
          }
        }
      }
    }

    swift_bridgeObjectRelease(v46);
    sub_10001F054((uint64_t)v82, (uint64_t)&v78);
    v65 = swift_allocObject(&unk_10028BE40, 24LL, 7LL);
    swift_unknownObjectWeakInit(v65 + 16, v2);
    v66 = (void *)swift_allocObject(&unk_10028C098, 40LL, 7LL);
    v67 = v72;
    v66[2] = v65;
    v66[3] = v67;
    v68 = v77;
    v66[4] = v77;
    v69 = swift_allocObject(&unk_10028C0C0, 24LL, 7LL);
    swift_weakInit(v69 + 16, v73);
    v70 = (void *)swift_allocObject(&unk_10028C0E8, 56LL, 7LL);
    v70[2] = sub_100196A74;
    v70[3] = v66;
    v70[4] = v69;
    v70[5] = v31;
    v70[6] = 2LL;
    swift_retain(v68);
    swift_retain(v65);
    swift_retain(v67);
    swift_retain(v66);
    swift_retain(v69);
    swift_retain(v31);
    ArtworkLoader.fetchArtworkFromCache(using:forReason:closestMatch:completionHandler:)( v67,  2LL,  1LL,  sub_100072218,  v70);
    swift_release(v69);
    v71 = swift_release(v70);
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v67,  2LL,  0LL,  &v78,  sub_100196A74,  v66,  v71);
    swift_release(v67);
    swift_release(v68);
    swift_release(v31);
    swift_release(v66);
    sub_100006060((uint64_t)&v78, (uint64_t *)&unk_1002DE600);
    sub_1000087D8((uint64_t)v82);
    swift_release(v65);
  }

          v29 = 0LL;
          v31 = 1LL;
          uint64_t v26 = v43;
          goto LABEL_8;
        }

        v29 = 0LL;
        v31 = 1LL;
        v26 += 3LL;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1LL, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v56;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12) == 1)
        {
          sub_100006060((uint64_t)v11, (uint64_t *)&unk_1002E6FB0);
          v49 = v58;
          swift_retain(v58);
          sub_1001D3230(v53, v51, v52, v49);
          return;
        }

        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v59, v11, v12);
        v32 = v58;
        v33 = *(void *)(v58 + 40);
        v34 = sub_100003B6C( &qword_1002DE6A8,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  (uint64_t)&protocol conformance descriptor for AdamId);
        v35 = dispatch thunk of Hashable._rawHashValue(seed:)(v33, v12, v34);
        v36 = -1LL << *(_BYTE *)(v32 + 32);
        v37 = v35 & ~v36;
        if (((*(void *)(v57 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v37) & 1) != 0) {
          break;
        }
        unint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        v23(v59, v12);
        uint64_t v11 = v54;
        a5 = v55;
      }

      v38 = ~v36;
      v39 = *(void *)(v13 + 72);
      v40 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v40(v15, *(void *)(v58 + 48) + v39 * v37, v12);
        v41 = sub_100003B6C( &qword_1002DE6B0,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  (uint64_t)&protocol conformance descriptor for AdamId);
        v42 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v59, v12, v41);
        unint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
        v23(v15, v12);
        if ((v42 & 1) != 0) {
          break;
        }
        v37 = (v37 + 1) & v38;
        if (((*(void *)(v57 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v37) & 1) == 0) {
          goto LABEL_4;
        }
      }

      v23(v59, v12);
      v46 = (v37 >> 3) & 0x1FFFFFFFFFFFFFF8LL;
      uint64_t v11 = v54;
      v47 = *(unint64_t *)((char *)v53 + v46);
      *(unint64_t *)((char *)v53 + v46) = v47 & ~(1LL << v37);
      a5 = v55;
    }

    while ((v47 & (1LL << v37)) == 0);
    uint64_t v22 = v52 - 1;
    if (__OFSUB__(v52, 1LL))
    {
LABEL_41:
      __break(1u);
      return;
    }

    if (v52 != 1) {
      continue;
    }
    break;
  }

              sub_100004624(v1);
              return;
            }
          }
        }
      }
    }

LABEL_31:
    unint64_t v9 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v8 << 6);
    goto LABEL_12;
  }

  __break(1u);
}

  sub_10005FD00((uint64_t)v7, (uint64_t)(v7 + 4), 0LL, (2LL * v7[2]) | 1);
  *(void *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

    unint64_t v9 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v8 << 6);
    goto LABEL_12;
  }

  __break(1u);
}

    unint64_t v9 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v8 << 6);
    goto LABEL_12;
  }

  __break(1u);
}

  v84 = v98;
  sub_1000A767C(v37, v98);
  v85 = v97;
  swift_beginAccess(v97, v99, 33LL, 0LL);
  sub_1000A8804(v84, v85);
  swift_endAccess(v99);
}

    unint64_t v9 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v8 << 6);
    goto LABEL_12;
  }

  __break(1u);
}

    unint64_t v9 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v8 << 6);
    goto LABEL_12;
  }

  __break(1u);
}

    unint64_t v9 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v8 << 6);
    goto LABEL_12;
  }

  __break(1u);
}

  if (v8 < 0) {
    unint64_t v19 = v8;
  }
  else {
    unint64_t v19 = v8 & 0xFFFFFFFFFFFFFF8LL;
  }
  result = _CocoaArrayWrapper.endIndex.getter(v19);
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_35;
  }
LABEL_14:
  if (v12 >= 1)
  {
    uint64_t v20 = v9;
    unint64_t v13 = 0LL;
    do
    {
      if ((v8 & 0xC000000000000001LL) != 0)
      {
        unint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v8);
      }

      else
      {
        unint64_t v14 = *(void *)(v8 + 8 * v13 + 32);
        swift_retain(v14);
      }

      swift_retain(v14);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0) {
        uint64_t v2 = sub_10001A24C(0LL, *((void *)v2 + 2) + 1LL, 1, v2);
      }
      id v16 = *((void *)v2 + 2);
      id v15 = *((void *)v2 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v2 = sub_10001A24C((char *)(v15 > 1), v16 + 1, 1, v2);
      }
      ++v13;
      *((void *)v2 + 2) = v16 + 1;
      uint64_t v17 = &v2[24 * v16];
      *((void *)v17 + 4) = v14;
      *((void *)v17 + 5) = 0LL;
      v17[48] = 0x80;
      swift_release(v14);
    }

    while (v12 != v13);
    int64_t v18 = v20;
    goto LABEL_36;
  }

  __break(1u);
  return result;
}

void sub_100002F60(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_10006734C(a1, a2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v2 + OBJC_IVAR____TtC6Arcade29FramedVideoCollectionViewCell_videoContainer)
           + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    id v6 = (id)Strong;
    sub_100128F18(v4, a2);
  }

uint64_t sub_100002FE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FramedVideo(0LL);
  uint64_t result = swift_dynamicCastClass(a1, v2);
  if (result) {
    return FramedVideo.artwork.getter();
  }
  return result;
}

void sub_100003024()
{
}

id sub_100003034()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100003078()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*v0 + OBJC_IVAR____TtC6Arcade29FramedVideoCollectionViewCell_videoContainer)
         + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
}

id sub_10000309C()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC6Arcade29FramedVideoCollectionViewCell_videoContainer);
}

double variable initialization expression of ArcadeSubscribePageLayout.Metrics.contentHeight@<D0>( uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0LL;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double variable initialization expression of TVFlowcaseItemLayout.Metrics.textLayoutMargins@<D0>( uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

uint64_t variable initialization expression of AccountChannelsProvider.updateObserver()
{
  return 0LL;
}

uint64_t variable initialization expression of TVBreakoutDetailsLayout.verticalAlignmentExclusionCondition()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
  uint64_t v1 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v2 = swift_allocObject( v0,  ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80LL))
       + 3LL * *(void *)(*(void *)(v1 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v1 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v2 + 16) = xmmword_100232070;
  uint64_t v3 = static _VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  uint64_t v4 = static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v3);
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v4);
  uint64_t v9 = v2;
  uint64_t v5 = sub_100003B6C( (unint64_t *)&qword_1002DD1C0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  uint64_t v6 = sub_1000031E8(&qword_1002E45E0);
  unint64_t v7 = sub_100003228();
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v9, v6, v7, v1, v5);
}

uint64_t sub_1000031E8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0LL, 0LL);
    *a1 = result;
  }

  return result;
}

unint64_t sub_100003228()
{
  unint64_t result = qword_1002DD1D0;
  if (!qword_1002DD1D0)
  {
    uint64_t v1 = sub_100003274(&qword_1002E45E0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002DD1D0);
  }

  return result;
}

uint64_t sub_100003274(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2( 255LL,  (char *)a1 + (int)result,  -(result >> 32),  0LL,  0LL);
    *a1 = result;
  }

  return result;
}

uint64_t sub_1000032B8()
{
  return type metadata accessor for FramedVideoCollectionViewCell(0LL);
}

uint64_t type metadata accessor for FramedVideoCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DD200;
  if (!qword_1002DD200) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FramedVideoCollectionViewCell);
  }
  return result;
}

uint64_t sub_1000032FC(uint64_t a1)
{
  uint64_t v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_updateClassMetadata2(a1, 256LL, 1LL, &v2, a1 + 664);
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
}

void type metadata accessor for NSTextAlignment(uint64_t a1)
{
}

void type metadata accessor for AutoPlayVideoSetting(uint64_t a1)
{
}

__n128 initializeWithCopy for PillOverlayLayout.Metrics(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

__n128 sub_1000033C8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1000033D4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000033F4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0LL;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

void type metadata accessor for ResourceLoadReason(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for TVLockupLayout.Metrics(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t getEnumTagSinglePayload for PillOverlayLayout.Metrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for PillOverlayLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0LL;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for UITraitEnvironmentLayoutDirection(uint64_t a1)
{
}

void sub_100003524(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_100003530(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void sub_100003560(void *a1@<X8>)
{
  *a1 = 0LL;
}

uint64_t sub_100003568(uint64_t a1, uint64_t a2)
{
  return sub_100004428(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void *sub_100003584@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_100003598@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1000035AC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_1000035C0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1000035EC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_100003610(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_100003624(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_100003638(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_10000364C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100003660(void *a1)
{
  return (*v1 & ~*a1) == 0LL;
}

BOOL sub_100003674(void *a1)
{
  return (*v1 & *a1) == 0LL;
}

BOOL sub_100003688(void *a1)
{
  return (*a1 & ~*v1) == 0LL;
}

BOOL sub_10000369C()
{
  return *v0 == 0LL;
}

uint64_t sub_1000036AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_1000036C4(void *result)
{
  *v1 &= ~*result;
  return result;
}

void sub_1000036E0(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_1000036E8(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_100003718(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023245C, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

NSNumber sub_100003764()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_10000376C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0LL;
  char v7 = 1;
  uint64_t result = static Int._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  uint64_t v4 = v6;
  char v5 = v7;
  if (v7) {
    uint64_t v4 = 0LL;
  }
  *(void *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1000037BC(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = 0LL;
  char v8 = 1;
  char v3 = static Int._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  uint64_t v4 = v7;
  char v5 = v8;
  if (v8) {
    uint64_t v4 = 0LL;
  }
  *(void *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return v3 & 1;
}

uint64_t sub_100003810@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static Int._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

NSNumber sub_100003834()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_10000383C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0LL;
  char v7 = 1;
  uint64_t result = static CGFloat._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  char v4 = v7;
  uint64_t v5 = v6;
  if (v7) {
    uint64_t v5 = 0LL;
  }
  *(void *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_10000388C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = 0LL;
  char v8 = 1;
  char v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  char v4 = v8;
  uint64_t v5 = v7;
  if (v8) {
    uint64_t v5 = 0LL;
  }
  *(void *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_1000038E0(double *a1@<X8>)
{
  *a1 = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100003904(uint64_t a1, id *a2)
{
  uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  uint64_t v5 = v8;
  if (v8)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    uint64_t result = swift_bridgeObjectRelease(v5);
  }

  else
  {
    NSString v6 = 0LL;
  }

  *a2 = v6;
  return result;
}

uint64_t sub_100003978(uint64_t a1, id *a2)
{
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  char v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  uint64_t v5 = v9;
  if (v9)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }

  else
  {
    NSString v6 = 0LL;
  }

  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_1000039F4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v2;
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

BOOL sub_100003A38(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_100003A4C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000045B0(a1);
  swift_bridgeObjectRelease(a1);
  *a2 = v4;
}

void *sub_100003A88@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100003A94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100003ABC(uint64_t a1)
{
  uint64_t v2 = sub_100003B6C( &qword_1002DD530,  (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory,  (uint64_t)&unk_10023234C);
  uint64_t v3 = sub_100003B6C( &qword_1002DD538,  (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory,  (uint64_t)&unk_1002322EC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100003B40()
{
  return sub_100003B6C( &qword_1002DD458,  (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory,  (uint64_t)&unk_1002322B0);
}

uint64_t sub_100003B6C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = a2(255LL);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_100003BAC()
{
  return sub_100003B6C( &qword_1002DD460,  (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory,  (uint64_t)&unk_100232284);
}

uint64_t sub_100003BD8()
{
  return sub_100003B6C( &qword_1002DD468,  (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory,  (uint64_t)&unk_100232320);
}

void *sub_100003C04@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_100003C14(uint64_t a1)
{
  uint64_t v2 = sub_100003B6C( (unint64_t *)&qword_1002DD7B0,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_10023351C);
  uint64_t v3 = sub_100003B6C( &qword_1002DD7B8,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_100232A34);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100003C98(uint64_t a1)
{
  uint64_t v2 = sub_100003B6C( &qword_1002DD7A0,  (uint64_t (*)(uint64_t))type metadata accessor for TextStyle,  (uint64_t)&unk_100232BA8);
  uint64_t v3 = sub_100003B6C( &qword_1002DD7A8,  (uint64_t (*)(uint64_t))type metadata accessor for TextStyle,  (uint64_t)&unk_100232B48);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100003D1C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023245C, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_100003D58(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023245C, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_100003DA0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023245C, a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

uint64_t sub_100003DF8(uint64_t a1)
{
  uint64_t v2 = sub_100003B6C( &qword_1002DD738,  (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier,  (uint64_t)&unk_100233368);
  uint64_t v3 = sub_100003B6C( (unint64_t *)&unk_1002DD740,  (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier,  (uint64_t)&unk_100233308);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Int);
}

double sub_100003E8C@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_100003E98(uint64_t a1)
{
  uint64_t v2 = sub_100003B6C( &qword_1002DD778,  (uint64_t (*)(uint64_t))type metadata accessor for Level,  (uint64_t)&unk_100232ED4);
  uint64_t v3 = sub_100003B6C( &qword_1002DD780,  (uint64_t (*)(uint64_t))type metadata accessor for Level,  (uint64_t)&unk_100232E74);
  unint64_t v4 = sub_100004BBC();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, v4);
}

uint64_t sub_100003F38(uint64_t a1)
{
  uint64_t v2 = sub_100003B6C( &qword_1002DD790,  (uint64_t (*)(uint64_t))type metadata accessor for BuildType,  (uint64_t)&unk_100232D7C);
  uint64_t v3 = sub_100003B6C( &qword_1002DD798,  (uint64_t (*)(uint64_t))type metadata accessor for BuildType,  (uint64_t)&unk_100232D1C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100003FBC(uint64_t a1)
{
  uint64_t v2 = sub_100003B6C( &qword_1002DD520,  (uint64_t (*)(uint64_t))type metadata accessor for AutoPlayVideoSetting,  (uint64_t)&unk_1002326E4);
  uint64_t v3 = sub_100003B6C( &qword_1002DD528,  (uint64_t (*)(uint64_t))type metadata accessor for AutoPlayVideoSetting,  (uint64_t)&unk_10023268C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004040(uint64_t a1)
{
  uint64_t v2 = sub_100003B6C( &qword_1002E62D0,  (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey,  (uint64_t)&unk_100233450);
  uint64_t v3 = sub_100003B6C( &qword_1002DD750,  (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey,  (uint64_t)&unk_1002331F4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000040C4(uint64_t a1)
{
  uint64_t v2 = sub_100003B6C( &qword_1002DD758,  (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey,  (uint64_t)&unk_100233494);
  uint64_t v3 = sub_100003B6C( &qword_1002DD760,  (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey,  (uint64_t)&unk_1002330E0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004148@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_10000418C(uint64_t a1)
{
  uint64_t v2 = sub_100003B6C( (unint64_t *)&qword_1002DD768,  (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey,  (uint64_t)&unk_1002334D8);
  uint64_t v3 = sub_100003B6C( &qword_1002DD770,  (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey,  (uint64_t)&unk_100232FCC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004210()
{
  return sub_100003B6C( &qword_1002DD470,  (uint64_t (*)(uint64_t))type metadata accessor for CGColor,  (uint64_t)&unk_1002323EC);
}

uint64_t sub_10000423C()
{
  return sub_100003B6C( &qword_1002DD478,  (uint64_t (*)(uint64_t))type metadata accessor for CGColor,  (uint64_t)&unk_100232418);
}

uint64_t sub_100004268()
{
  return sub_100003B6C( &qword_1002DD480,  (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner,  (uint64_t)&unk_1002324BC);
}

uint64_t sub_100004294()
{
  return sub_100003B6C( &qword_1002DD488,  (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner,  (uint64_t)&unk_100232488);
}

uint64_t sub_1000042C0()
{
  return sub_100003B6C( &qword_1002DD490,  (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner,  (uint64_t)&unk_1002324E8);
}

uint64_t sub_1000042EC()
{
  return sub_100003B6C( &qword_1002DD498,  (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner,  (uint64_t)&unk_100232524);
}

uint64_t sub_100004318()
{
  return sub_100003B6C( &qword_1002DD4A0,  (uint64_t (*)(uint64_t))type metadata accessor for AutoPlayVideoSetting,  (uint64_t)&unk_100232654);
}

uint64_t sub_100004344()
{
  return sub_100003B6C( &qword_1002DD4A8,  (uint64_t (*)(uint64_t))type metadata accessor for AutoPlayVideoSetting,  (uint64_t)&unk_10023262C);
}

uint64_t sub_100004370()
{
  return sub_100003B6C( (unint64_t *)&unk_1002DD4B0,  (uint64_t (*)(uint64_t))type metadata accessor for AutoPlayVideoSetting,  (uint64_t)&unk_1002326BC);
}

uint64_t sub_10000439C()
{
  return Int.hashValue.getter(*v0);
}

void sub_1000043A4()
{
}

uint64_t sub_1000043CC(uint64_t a1)
{
  return static Hasher._hash(seed:_:)(a1, *v1);
}

uint64_t sub_1000043D4()
{
  return Double.hashValue.getter(*v0);
}

void sub_1000043DC()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0LL;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_10000440C(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return static Hasher._hash(seed:_:)(a1, v2);
}

uint64_t sub_10000441C(uint64_t a1, uint64_t a2)
{
  return sub_100004428(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100004428(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  uint64_t v7 = v6;
  uint64_t v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100004464(uint64_t a1)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  uint64_t v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000044A4()
{
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v0);
  uint64_t v3 = v2;
  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, v1, v3);
  Swift::Int v4 = Hasher._finalize()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_100004514(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  uint64_t v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    char v10 = 1;
    uint64_t v9 = v5;
  }

  else
  {
    uint64_t v9 = v7;
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0LL);
  }

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

BOOL sub_10000459C(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1000045B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0LL;
  }
  uint64_t result = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0LL;
    }
    result |= v5;
    --v1;
  }

  while (v1);
  return result;
}

unint64_t sub_1000045E8()
{
  unint64_t result = qword_1002DD600;
  if (!qword_1002DD600)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIPress);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DD600);
  }

  return result;
}

uint64_t sub_100004624(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

void type metadata accessor for PBSRestrictionValue(uint64_t a1)
{
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
}

__n128 sub_10000467C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_100004690(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000046B0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for ASDPurchaseHistoryContext(uint64_t a1)
{
}

void type metadata accessor for Level(uint64_t a1)
{
}

void type metadata accessor for BuildType(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

void type metadata accessor for TextStyle(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_10000479C()
{
  return sub_100003B6C( &qword_1002DD678,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_1002329F8);
}

uint64_t sub_1000047C8()
{
  return sub_100003B6C( &qword_1002DD680,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_1002329CC);
}

uint64_t sub_1000047F4()
{
  return sub_100003B6C( &qword_1002DD688,  (uint64_t (*)(uint64_t))type metadata accessor for TextStyle,  (uint64_t)&unk_100232B0C);
}

uint64_t sub_100004820()
{
  return sub_100003B6C( &qword_1002DD690,  (uint64_t (*)(uint64_t))type metadata accessor for TextStyle,  (uint64_t)&unk_100232AE0);
}

uint64_t sub_10000484C()
{
  return sub_100003B6C( &qword_1002DD698,  (uint64_t (*)(uint64_t))type metadata accessor for TextStyle,  (uint64_t)&unk_100232B7C);
}

uint64_t sub_100004878()
{
  return sub_100003B6C( &qword_1002DD6A0,  (uint64_t (*)(uint64_t))type metadata accessor for BuildType,  (uint64_t)&unk_100232CE0);
}

uint64_t sub_1000048A4()
{
  return sub_100003B6C( &qword_1002DD6A8,  (uint64_t (*)(uint64_t))type metadata accessor for BuildType,  (uint64_t)&unk_100232CB4);
}

uint64_t sub_1000048D0()
{
  return sub_100003B6C( &qword_1002DD6B0,  (uint64_t (*)(uint64_t))type metadata accessor for BuildType,  (uint64_t)&unk_100232D50);
}

uint64_t sub_1000048FC()
{
  return sub_100003B6C( &qword_1002DD6B8,  (uint64_t (*)(uint64_t))type metadata accessor for Level,  (uint64_t)&unk_100232E38);
}

uint64_t sub_100004928()
{
  return sub_100003B6C( &qword_1002DD6C0,  (uint64_t (*)(uint64_t))type metadata accessor for Level,  (uint64_t)&unk_100232E0C);
}

uint64_t sub_100004954()
{
  return sub_100003B6C( &qword_1002DD6C8,  (uint64_t (*)(uint64_t))type metadata accessor for Level,  (uint64_t)&unk_100232EA8);
}

uint64_t sub_100004980()
{
  return sub_100003B6C( &qword_1002DD6D0,  (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey,  (uint64_t)&unk_100232F90);
}

uint64_t sub_1000049AC()
{
  return sub_100003B6C( &qword_1002DD6D8,  (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey,  (uint64_t)&unk_100232F64);
}

uint64_t sub_1000049D8()
{
  return sub_100003B6C( &qword_1002DD6E0,  (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey,  (uint64_t)&unk_1002330A4);
}

uint64_t sub_100004A04()
{
  return sub_100003B6C( &qword_1002DD6E8,  (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey,  (uint64_t)&unk_100233078);
}

uint64_t sub_100004A30()
{
  return sub_100003B6C( &qword_1002DD6F0,  (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey,  (uint64_t)&unk_1002331B8);
}

uint64_t sub_100004A5C()
{
  return sub_100003B6C( &qword_1002DD6F8,  (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey,  (uint64_t)&unk_10023318C);
}

uint64_t sub_100004A88()
{
  return sub_100003B6C( &qword_1002DD700,  (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier,  (uint64_t)&unk_1002332CC);
}

uint64_t sub_100004AB4()
{
  return sub_100003B6C( &qword_1002DD708,  (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier,  (uint64_t)&unk_1002332A0);
}

uint64_t sub_100004AE0()
{
  return sub_100003B6C( &qword_1002DD710,  (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier,  (uint64_t)&unk_10023333C);
}

uint64_t sub_100004B0C()
{
  return sub_100003B6C( &qword_1002DD718,  (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey,  (uint64_t)&unk_100233228);
}

uint64_t sub_100004B38()
{
  return sub_100003B6C( &qword_1002DD720,  (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey,  (uint64_t)&unk_100233114);
}

uint64_t sub_100004B64()
{
  return sub_100003B6C( &qword_1002DD728,  (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey,  (uint64_t)&unk_100233000);
}

uint64_t sub_100004B90()
{
  return sub_100003B6C( &qword_1002DD730,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_100232A68);
}

unint64_t sub_100004BBC()
{
  unint64_t result = qword_1002DD788;
  if (!qword_1002DD788)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1002DD788);
  }

  return result;
}

__n128 initializeWithTake for ProductLockupBannerViewLayout.Metrics(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[1];
  __int128 v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  __int128 v6 = a2[5];
  __int128 v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_100004C24(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_100004C44(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 120) = 0LL;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 128) = v3;
  return result;
}

void type metadata accessor for CATransform3D(uint64_t a1)
{
}

void sub_100004CA4(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(0LL, a3);
    if (!v5) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }

uint64_t sub_100004D28@<X0>(uint64_t a1@<X8>)
{
  if (qword_1002DC8C0 != -1) {
    swift_once(&qword_1002DC8C0, sub_1000730D0);
  }
  uint64_t v2 = type metadata accessor for Bag.Profile(0LL);
  uint64_t v3 = sub_1000061F4(v2, (uint64_t)qword_1002EF690);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v3, v2);
}

uint64_t sub_100004D98(uint64_t a1)
{
  __int128 v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade15ArcadeBootstrap_navigationController);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v4, a1);
  id v7 = objc_allocWithZone((Class)type metadata accessor for CommerceDialogHandler(0LL));
  return CommerceDialogHandler.init(_:_:)(v5, v4);
}

void sub_100004E30()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for JULoadingViewController.PresentationContext(0LL);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static JULoadingViewController.PresentationContext.placeholder.getter(v3);
  id v6 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
  id v7 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v5, 0LL);
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade15ArcadeBootstrap_navigationController);
  uint64_t v9 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v10 = swift_allocObject(v9, 40LL, 7LL);
  *(_OWORD *)(v10 + 16) = xmmword_100233570;
  *(void *)(v10 + 32) = v7;
  uint64_t v15 = v10;
  specialized Array._endMutation()(v10);
  uint64_t v11 = v15;
  sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
  id v12 = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "setViewControllers:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);
}

uint64_t sub_100004F60(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8(&qword_1002DD9F8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1001F7E00(a1);
  uint64_t v6 = sub_1000031E8(&qword_1002DE660);
  uint64_t v7 = type metadata accessor for Dependency(0LL);
  uint64_t v8 = swift_allocObject( v6,  ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL))
       + *(void *)(*(void *)(v7 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v8 + 16) = xmmword_100233580;
  uint64_t v9 = (objc_class *)type metadata accessor for URLProtocolDelegate(0LL);
  uint64_t v10 = type metadata accessor for URLProtocolDelegate.DialogStyle(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v4, 1LL, 1LL, v10);
  id v11 = objc_allocWithZone(v9);
  id v12 = (void *)URLProtocolDelegate.init(dialogStyle:)(v4);
  uint64_t v18 = (uint64_t)v12;
  static Dependency.satisfying<A>(_:with:)(v9, &v18, v9);

  uint64_t v18 = v8;
  uint64_t v13 = sub_1000031E8(&qword_1002DDA28);
  unint64_t v14 = sub_1000061A8();
  uint64_t v15 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(&v18, v13, v14);
  swift_bridgeObjectRelease(v8);
  swift_release(v5);
  return v15;
}

void sub_1000050D0(uint64_t a1)
{
  uint64_t v48 = type metadata accessor for Bag(0LL);
  __chkstk_darwin(v48);
  v46 = (id *)((char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = sub_1000031E8(&qword_1002DD9F8);
  __chkstk_darwin(v4);
  uint64_t v6 = (id *)((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade15ArcadeBootstrap_navigationController);
  uint64_t v8 = type metadata accessor for RootActionRunner(0LL);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  id v9 = v7;
  swift_retain(a1);
  uint64_t v45 = sub_1001D3530((uint64_t)v9, a1);

  swift_release(a1);
  id v10 = objc_allocWithZone((Class)type metadata accessor for RootFlowController(0LL));
  id v11 = v9;
  swift_retain(a1);
  v44 = sub_1001DDE98(v11, a1);
  id v12 = (char *)[objc_allocWithZone((Class)type metadata accessor for FlowNavigationController()) init];
  uint64_t v13 = (objc_class *)type metadata accessor for NavigationFlowController(0LL);
  unint64_t v14 = (char *)objc_allocWithZone(v13);
  swift_unknownObjectWeakInit(&v14[qword_1002E1B90], 0LL);
  swift_unknownObjectWeakAssign(v15, v12);
  *(void *)&v14[qword_1002E1B98] = a1;
  swift_retain(a1);
  id v16 = (objc_class *)sub_1000031E8(&qword_1002DDA00);
  v51.receiver = v14;
  v51.super_class = v16;
  id v17 = objc_msgSendSuper2(&v51, "init");
  id v43 = v12;
  [v12 setDelegate:v17];
  v53 = v13;
  v54 = &off_1002848F0;
  v52[0] = v17;
  uint64_t v18 = (uint64_t)&v12[OBJC_IVAR____TtC6Arcade24FlowNavigationController_flowController];
  swift_beginAccess(&v12[OBJC_IVAR____TtC6Arcade24FlowNavigationController_flowController], v50, 33LL, 0LL);
  sub_100005FE0((uint64_t)v52, v18);
  swift_endAccess(v50);
  unint64_t v19 = (char *)objc_allocWithZone(v13);
  swift_unknownObjectWeakInit(&v19[qword_1002E1B90], 0LL);
  swift_unknownObjectWeakAssign(v20, v11);
  *(void *)&v19[qword_1002E1B98] = a1;
  v49.receiver = v19;
  v49.super_class = v16;
  uint64_t v21 = (char *)v11;
  swift_retain(a1);
  id v22 = objc_msgSendSuper2(&v49, "init");
  [v21 setDelegate:v22];

  v53 = v13;
  v54 = &off_1002848F0;
  v52[0] = v22;
  uint64_t v23 = (uint64_t)&v21[OBJC_IVAR____TtC6Arcade24FlowNavigationController_flowController];
  swift_beginAccess(&v21[OBJC_IVAR____TtC6Arcade24FlowNavigationController_flowController], v50, 33LL, 0LL);
  id v24 = v22;
  sub_100005FE0((uint64_t)v52, v23);
  swift_endAccess(v50);
  uint64_t v25 = sub_100006028(0LL, &qword_1002DDA08, &OBJC_CLASS___AMSURLSession_ptr);
  uint64_t v26 = type metadata accessor for ObjectGraph(0LL);
  inject<A, B>(_:from:)(v52, v25, a1, v25, v26);
  v27 = (void *)v52[0];
  uint64_t v28 = type metadata accessor for URLProtocolDelegate(0LL);
  inject<A, B>(_:from:)(v52, v28, a1, v28, v26);
  v29 = (void *)v52[0];
  void *v6 = v21;
  uint64_t v30 = enum case for URLProtocolDelegate.DialogStyle.alert(_:);
  uint64_t v31 = type metadata accessor for URLProtocolDelegate.DialogStyle(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v32 + 104))(v6, v30, v31);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v6, 0LL, 1LL, v31);
  v33 = v21;
  URLProtocolDelegate.dialogStyle.setter(v6);
  [v27 setDelegate:v29];
  type metadata accessor for JSFreshnessWatchdog(0LL);
  v34 = v46;
  inject<A, B>(_:from:)(v46, v48, a1, v48, v26);
  uint64_t v35 = sub_1000031E8(&qword_1002DDA10);
  inject<A, B>(_:from:)(v52, v35, a1, v35, v26);
  uint64_t v36 = JSFreshnessWatchdog.__allocating_init(bag:networkInquiry:)(v34, v52);
  uint64_t v37 = v47;
  uint64_t Strong = swift_unknownObjectUnownedLoadStrong(v47 + 16);
  uint64_t v39 = *(void *)(v37 + 24);
  uint64_t ObjectType = swift_getObjectType(Strong);
  v42 = v44;
  uint64_t v41 = v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8))( v44,  v45,  v36,  a1,  ObjectType,  v39);
  swift_release(v36);
  swift_unknownObjectRelease(Strong);
  sub_100005560((uint64_t)v24, a1);
  swift_release(v41);
}

uint64_t sub_100005560(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = a1;
  uint64_t v3 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v3);
  v68 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = type metadata accessor for StoreTab.Identifier(0LL);
  uint64_t v5 = *(void *)(v78 - 8);
  uint64_t v6 = __chkstk_darwin(v78);
  v80 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  v79 = (char *)&v65 - v8;
  uint64_t v9 = sub_1000031E8(&qword_1002EAAF0);
  __chkstk_darwin(v9);
  id v11 = (uint64_t *)((char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = type metadata accessor for StoreTab(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for FlowDestination(0LL);
  uint64_t v83 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  unint64_t v19 = (uint64_t *)((char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v20 = __chkstk_darwin(v17);
  id v22 = (char *)&v65 - v21;
  __chkstk_darwin(v20);
  id v24 = (char *)&v65 - v23;
  uint64_t v25 = type metadata accessor for ASKBagContract(0LL);
  uint64_t v67 = inject(_:from:)(v25, a2);
  uint64_t v26 = v16;
  uint64_t v27 = ASKBagContract.tabs.getter();
  v71 = v24;
  swift_storeEnumTagMultiPayload(v24, v26, 36LL);
  uint64_t v28 = *(void *)(v27 + 16);
  if (!v28)
  {
    swift_bridgeObjectRelease(v27);
    uint64_t v46 = (uint64_t)v68;
    uint64_t v47 = v67;
    uint64_t v48 = v70;
    goto LABEL_19;
  }

  unint64_t v29 = (*(unsigned __int8 *)(v13 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v66 = v27;
  unint64_t v30 = v27 + v29;
  unsigned int v76 = enum case for StoreTab.Identifier.games(_:);
  uint64_t v77 = *(void *)(v13 + 72);
  v81 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  uint64_t v82 = v26;
  uint64_t v74 = v12;
  v75 = v22;
  v72 = v11;
  v73 = v19;
  v81(v15, v30, v12);
  while (1)
  {
    sub_1000C5BD0(v11);
    uint64_t v31 = v82;
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v83 + 48))(v11, 1LL, v82) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      sub_100006060((uint64_t)v11, &qword_1002EAAF0);
      goto LABEL_4;
    }

    sub_1000060D8((uint64_t)v11, (uint64_t)v22);
    sub_10000611C((uint64_t)v22, (uint64_t)v19);
    uint64_t v32 = v13;
    uint64_t v33 = sub_10000609C((uint64_t)v19);
    StoreTab.identifier.getter(v33);
    uint64_t v34 = v5;
    uint64_t v35 = v78;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v80, v76, v78);
    unint64_t v36 = sub_100006160();
    dispatch thunk of RawRepresentable.rawValue.getter(&v86, v35, v36);
    dispatch thunk of RawRepresentable.rawValue.getter(&v84, v35, v36);
    uint64_t v37 = v87;
    uint64_t v38 = v85;
    if (v86 == v84 && v87 == v85)
    {
      swift_bridgeObjectRelease_n(v87, 2LL);
      uint64_t v5 = v34;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
      uint64_t v40 = v78;
      v39(v80, v78);
      v39(v79, v40);
      uint64_t v12 = v74;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v74);
    }

    else
    {
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v87, v84, v85, 0LL);
      swift_bridgeObjectRelease(v37);
      __n128 v42 = swift_bridgeObjectRelease(v38);
      uint64_t v5 = v34;
      id v43 = *(void (**)(char *, uint64_t, __n128))(v34 + 8);
      uint64_t v44 = v78;
      v43(v80, v78, v42);
      ((void (*)(char *, uint64_t))v43)(v79, v44);
      uint64_t v12 = v74;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v74);
      if ((v41 & 1) == 0)
      {
        id v22 = v75;
        sub_10000609C((uint64_t)v75);
        goto LABEL_14;
      }
    }

    uint64_t v45 = (uint64_t)v71;
    sub_10000609C((uint64_t)v71);
    id v22 = v75;
    sub_1000060D8((uint64_t)v75, v45);
LABEL_14:
    uint64_t v13 = v32;
    id v11 = v72;
    unint64_t v19 = v73;
LABEL_4:
    v30 += v77;
    if (!--v28)
    {
      swift_bridgeObjectRelease(v66);
      goto LABEL_18;
    }

    v81(v15, v30, v12);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_bridgeObjectRelease(v66);
  uint64_t v49 = (uint64_t)v71;
  sub_10000609C((uint64_t)v71);
  swift_release(*v19);
  v50 = (char *)v19 + *(int *)(sub_1000031E8(&qword_1002DDA20) + 48);
  uint64_t v51 = type metadata accessor for ArcadePageUrls(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v51 - 8) + 8LL))(v50, v51);
  sub_1000060D8((uint64_t)v22, v49);
LABEL_18:
  uint64_t v48 = v70;
  uint64_t v47 = v67;
  uint64_t v46 = (uint64_t)v68;
LABEL_19:
  uint64_t v52 = type metadata accessor for ReferrerData(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56LL))(v46, 1LL, 1LL, v52);
  uint64_t v53 = (uint64_t)v71;
  v54 = sub_1001D7568(v71, 0LL, 0LL, v46);
  sub_100006060(v46, &qword_1002E1FB0);
  v55 = *(void **)(v48 + OBJC_IVAR____TtC6Arcade15ArcadeBootstrap_navigationController);
  uint64_t v56 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v57 = swift_allocObject(v56, 40LL, 7LL);
  *(_OWORD *)(v57 + 16) = xmmword_100233570;
  *(void *)(v57 + 32) = v54;
  uint64_t v86 = v57;
  specialized Array._endMutation()(v57);
  uint64_t v58 = v86;
  sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
  v59 = v54;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v55, "setViewControllers:", isa, swift_bridgeObjectRelease(v58).n128_f64[0]);

  uint64_t v61 = type metadata accessor for MetricsActivity(0LL);
  uint64_t v63 = static MetricsActivity.current.getter(v61, v62);
  dispatch thunk of MetricsActivity.changeContext(_:)(1852399949LL, 0xE400000000000000LL);

  swift_release(v47);
  swift_release(v63);
  return sub_10000609C(v53);
}

void sub_100005B6C(uint64_t a1)
{
  id v2 = sub_1001F8B3C(a1);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade15ArcadeBootstrap_navigationController);
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v5 = swift_allocObject(v4, 40LL, 7LL);
  *(_OWORD *)(v5 + 16) = xmmword_100233570;
  *(void *)(v5 + 32) = v2;
  uint64_t v8 = v5;
  specialized Array._endMutation()(v5);
  sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
  id v6 = v2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "setViewControllers:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);
}

void sub_100005C38()
{
}

uint64_t sub_100005C48()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_logger;
  uint64_t v2 = type metadata accessor for CompoundLogger(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingMetricsLogger));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_diagnosticsRecorder));
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_pendingEvents));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_debugMetricsRecorder));

  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_100005CF4()
{
  return type metadata accessor for ArcadeBootstrap(0LL);
}

uint64_t type metadata accessor for ArcadeBootstrap(uint64_t a1)
{
  uint64_t result = qword_1002DD860;
  if (!qword_1002DD860) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadeBootstrap);
  }
  return result;
}

uint64_t sub_100005D38(uint64_t a1)
{
  uint64_t v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_updateClassMetadata2(a1, 256LL, 1LL, &v2, a1 + 360);
}

uint64_t sub_100005D7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for JULoadingViewController.PresentationContext(0LL);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_isBootstrapping) & 1) == 0)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC6Arcade13BaseBootstrap_isBootstrapping) = 1;
    static JULoadingViewController.PresentationContext.placeholder.getter(v3);
    id v6 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
    uint64_t v7 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v5, 0LL);
    uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade15ArcadeBootstrap_navigationController);
    uint64_t v9 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
    uint64_t v10 = swift_allocObject(v9, 40LL, 7LL);
    *(_OWORD *)(v10 + sub_10000620C(v0 + 16) = xmmword_100233570;
    *(void *)(v10 + 32) = v7;
    v22[0] = v10;
    specialized Array._endMutation()(v10);
    uint64_t v11 = v22[0];
    sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
    id v12 = v7;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "setViewControllers:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

    sub_1001F8980(v22);
    uint64_t v14 = v23;
    uint64_t v15 = v24;
    sub_100005F8C(v22, v23);
    uint64_t v16 = dispatch thunk of ASKBootstrapProtocol.start()(v14, v15);
    uint64_t v17 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v18 = swift_retain_n(v1, 2LL);
    uint64_t v19 = static OS_dispatch_queue.main.getter(v18);
    v21[3] = v17;
    v21[4] = &protocol witness table for OS_dispatch_queue;
    v21[0] = v19;
    Promise.then(perform:orCatchError:on:)(sub_100005FB0, v1, sub_100005FB8, v1, v21);
    swift_release(v16);
    swift_release_n(v1, 2LL);
    _s6Arcade17PillOverlayLayoutVwxx_0(v21);
    _s6Arcade17PillOverlayLayoutVwxx_0(v22);
  }

  return *(void *)(v1 + OBJC_IVAR____TtC6Arcade15ArcadeBootstrap_navigationController);
}

void *sub_100005F8C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) + 16LL) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80LL)));
  return result;
}

double sub_100005FB0(uint64_t *a1)
{
  return sub_1001F96DC(a1, v1);
}

uint64_t sub_100005FB8(uint64_t a1)
{
  return sub_1001F9758(a1);
}

uint64_t _s6Arcade17PillOverlayLayoutVwxx_0(void *a1)
{
  uint64_t v1 = *(void *)(a1[3] - 8LL);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0) {
    return swift_release(*a1);
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100005FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E1800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100006028(uint64_t a1, unint64_t *a2, void *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t v5 = objc_opt_self(*a3);
    uint64_t result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }

  return result;
}

uint64_t sub_100006060(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000031E8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

uint64_t sub_10000609C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FlowDestination(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1000060D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlowDestination(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000611C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlowDestination(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_100006160()
{
  unint64_t result = qword_1002DDA18;
  if (!qword_1002DDA18)
  {
    uint64_t v1 = type metadata accessor for StoreTab.Identifier(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for StoreTab.Identifier, v1);
    atomic_store(result, (unint64_t *)&qword_1002DDA18);
  }

  return result;
}

unint64_t sub_1000061A8()
{
  unint64_t result = qword_1002DDA30;
  if (!qword_1002DDA30)
  {
    uint64_t v1 = sub_100003274(&qword_1002DDA28);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002DDA30);
  }

  return result;
}

uint64_t sub_1000061F4(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(void *)(a1 - 8) + 82LL) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10000620C(uint64_t a1)
{
  return a1;
}

void *sub_100006230()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade27VideoCardCollectionViewCell_avatarShowcase);
  id v2 = v1;
  return v1;
}

void (*sub_100006264(void *a1))(void **a1, char a2)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade27VideoCardCollectionViewCell_avatarShowcase);
  *a1 = v2;
  a1[1] = v1;
  id v3 = v2;
  return sub_1000062A8;
}

void sub_1000062A8(void **a1, char a2)
{
  id v2 = *a1;
  if ((a2 & 1) != 0)
  {
    id v3 = v2;
    sub_100090F9C(v2);
  }

  else
  {
    sub_100090F9C(*a1);
  }

uint64_t sub_1000062FC()
{
  return 3LL;
}

uint64_t sub_100006304()
{
  return AvatarShowcaseLayoutConfiguration.init(width:visibleWidth:)(64.0, 32.0);
}

double sub_100006318()
{
  return 20.0;
}

id sub_10000632C()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC6Arcade27VideoCardCollectionViewCell_videoContainer) frame];
}

uint64_t sub_100006348()
{
  uint64_t ObjectType = swift_getObjectType(v0);
  return LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
}

uint64_t static MotionEffects.verticalTilt.getter()
{
  return 2LL;
}

uint64_t sub_100006368(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType(v2);
  uint64_t v6 = sub_100003B6C(&qword_1002DDA48, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_1002335E0);
  return AvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(a1, a2, ObjectType, v6);
}

uint64_t sub_1000063C8(uint64_t a1, uint64_t a2)
{
  return sub_1000063E0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.unapply());
}

uint64_t sub_1000063D4(uint64_t a1, uint64_t a2)
{
  return sub_1000063E0( a1,  a2,  (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.placeAvatarShowcase());
}

uint64_t sub_1000063E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v5 = sub_100003B6C(&qword_1002DDA48, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_1002335E0);
  return a3(ObjectType, v5);
}

uint64_t sub_100006438()
{
  return sub_100003B6C( &qword_1002DDA38,  type metadata accessor for VideoCardCollectionViewCell,  (uint64_t)&unk_1002335A8);
}

uint64_t sub_100006464()
{
  return sub_100003B6C(&qword_1002DDA40, type metadata accessor for AvatarShowcaseView, (uint64_t)&unk_100235980);
}

ValueMetadata *type metadata accessor for DebugMetricsInspectorDataSource()
{
  return &type metadata for DebugMetricsInspectorDataSource;
}

uint64_t sub_1000064A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  v14[0] = *a1;
  v14[1] = v5;
  swift_bridgeObjectRetain(v5);
  AnyHashable.init<A>(_:)(v15, v14, &type metadata for String, &protocol witness table for String);
  if (*(void *)(a2 + 16) && (unint64_t v7 = sub_1000E8534((uint64_t)v15), (v8 & 1) != 0))
  {
    sub_100008364(*(void *)(a2 + 56) + 32 * v7, (uint64_t)&v16);
  }

  else
  {
    __int128 v16 = 0u;
    __int128 v17 = 0u;
  }

  sub_1000087D8((uint64_t)v15);
  if (*((void *)&v17 + 1))
  {
    if ((swift_dynamicCast(&v18, &v16, (char *)&type metadata for Any + 8, &type metadata for AnyHashable, 6LL) & 1) != 0)
    {
      if (*((void *)&v19 + 1))
      {
        v21[0] = v18;
        v21[1] = v19;
        uint64_t v22 = v20;
        *(void *)&__int128 v18 = v6;
        *((void *)&v18 + 1) = v5;
        swift_bridgeObjectRetain(v5);
        v9._countAndFlagsBits = 8250LL;
        v9._object = (void *)0xE200000000000000LL;
        String.append(_:)(v9);
        v10._countAndFlagsBits = AnyHashable.description.getter();
        object = v10._object;
        String.append(_:)(v10);
        swift_bridgeObjectRelease(object);
        __int128 v12 = v18;
        uint64_t result = sub_1000087D8((uint64_t)v21);
        *(_OWORD *)a3 = v12;
        return result;
      }
    }

    else
    {
      uint64_t v20 = 0LL;
      __int128 v18 = 0u;
      __int128 v19 = 0u;
    }
  }

  else
  {
    sub_100006060((uint64_t)&v16, (uint64_t *)&unk_1002DF680);
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    uint64_t v20 = 0LL;
  }

  uint64_t result = sub_100006060((uint64_t)&v18, (uint64_t *)&unk_1002DE600);
  *(void *)a3 = 0LL;
  *(void *)(a3 + 8) = 0LL;
  return result;
}

void sub_10000661C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v60 = a3;
  uint64_t v61 = a2;
  uint64_t v5 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  v50 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v57 = type metadata accessor for FlowOrigin(0LL);
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  v59 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for FlowAnimationBehavior(0LL);
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  __chkstk_darwin(v9);
  uint64_t v58 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v52 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v56 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v15);
  __int128 v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for FlowPage(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v26 = IndexPath.row.getter(v23);
  if ((v26 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }

  if (v26 >= *(void *)(a4 + 16))
  {
LABEL_10:
    __break(1u);
    return;
  }

  uint64_t v48 = v6;
  uint64_t v49 = v5;
  sub_100006B20(a4 + 48 * v26 + 32, (uint64_t)&v63);
  uint64_t v27 = *((void *)&v63 + 1);
  id v28 = sub_100007FA8(v63, *((uint64_t *)&v63 + 1), (uint64_t)&v64, v61);
  swift_bridgeObjectRelease(v27);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v64);
  if (v28)
  {
    uint64_t v65 = 0LL;
    __int128 v63 = 0u;
    __int128 v64 = 0u;
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v25, enum case for FlowPage.viewController(_:), v21);
    uint64_t v29 = type metadata accessor for URL(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v20, 1LL, 1LL, v29);
    uint64_t v30 = type metadata accessor for ReferrerData(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v17, 1LL, 1LL, v30);
    v62[3] = type metadata accessor for DebugMetricsInspectorViewController(0LL);
    v62[0] = v28;
    id v31 = v28;
    static ActionMetrics.notInstrumented.getter();
    uint64_t v32 = v56;
    (*(void (**)(char *, void, uint64_t))(v51 + 104))( v56,  enum case for FlowPresentationContext.infer(_:),  v52);
    uint64_t v33 = v58;
    (*(void (**)(char *, void, uint64_t))(v53 + 104))( v58,  enum case for FlowAnimationBehavior.infer(_:),  v54);
    uint64_t v34 = v59;
    uint64_t v35 = (*(uint64_t (**)(char *, void, uint64_t))(v55 + 104))(v59, enum case for FlowOrigin.inapp(_:), v57);
    uint64_t v36 = static FlowActionPresentation.stackPush.getter(v35);
    uint64_t v38 = v37;
    uint64_t v39 = type metadata accessor for FlowAction(0LL);
    swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
    uint64_t v40 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)( &v63,  0LL,  0LL,  0LL,  v25,  v20,  0LL,  0LL,  v17,  v62,  v14,  v32,  v33,  v34,  0LL,  v36,  v38);
    uint64_t v41 = UIResponder.nearestActionRunner.getter();
    if (v41)
    {
      uint64_t v42 = v41;
      __int128 v63 = 0u;
      __int128 v64 = 0u;
      uint64_t v43 = v48;
      uint64_t v44 = v50;
      uint64_t v45 = v49;
      (*(void (**)(char *, void, uint64_t))(v48 + 104))( v50,  enum case for ActionRunner.Origin.userInitiated(_:),  v49);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v40, &v63, v44, v61);

      swift_release(v40);
      __n128 v46 = swift_release(v42);
      (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v44, v45, v46);
      sub_100006060((uint64_t)&v63, (uint64_t *)&unk_1002DF680);
    }

    else
    {
      swift_release(v40);
    }
  }

  else
  {
    uint64_t v47 = (void *)IndexPath._bridgeToObjectiveC()();
    [v60 deselectRowAtIndexPath:v47 animated:1];
  }

uint64_t static MotionEffects.horizontalTilt.getter()
{
  return 1LL;
}

uint64_t sub_100006AF8()
{
  return *(void *)(*(void *)v0 + 16LL);
}

unint64_t sub_100006B04(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1000083A4(a1, a3, *v3);
}

unint64_t sub_100006B10(uint64_t a1)
{
  return sub_100008574(a1, *v1);
}

void sub_100006B18(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_100006B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002DDA50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_100006B68(void *a1)
{
  uint64_t v2 = (void *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0) {
    uint64_t v2 = sub_1000078E0(v2);
  }
  uint64_t v3 = v2[2];
  v4[0] = v2 + 4;
  v4[1] = v3;
  sub_100006BD0(v4);
  *a1 = v2;
}

void sub_100006BD0(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000LL) == 0)
    {
      if (v3) {
        sub_100007358(0LL, v3, 1LL, v2);
      }
      return;
    }

    goto LABEL_153;
  }

  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1)
  {
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
    return;
  }

  Swift::Int v108 = v4;
  uint64_t v117 = v1;
  if (v3 <= 1)
  {
    uint64_t v9 = (char *)&_swiftEmptyArrayStorage;
    v112 = (char *)&_swiftEmptyArrayStorage + 32;
    v107 = &_swiftEmptyArrayStorage;
    if (v3 == 1) {
      goto LABEL_12;
    }
    unint64_t v11 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_119:
    v99 = v9;
    if (v11 < 2) {
      goto LABEL_116;
    }
    uint64_t v100 = *v2;
    while (1)
    {
      unint64_t v101 = v11 - 2;
      if (v11 < 2) {
        break;
      }
      if (!v100) {
        goto LABEL_160;
      }
      v98 = v99;
      uint64_t v102 = *(void *)&v99[16 * v101 + 32];
      uint64_t v103 = *(void *)&v99[16 * v11 + 24];
      uint64_t v104 = v117;
      sub_10000749C( (char *)(v100 + 48 * v102),  (char *)(v100 + 48LL * *(void *)&v99[16 * v11 + 16]),  v100 + 48 * v103,  v112);
      uint64_t v117 = v104;
      if (v104) {
        goto LABEL_115;
      }
      if (v103 < v102) {
        goto LABEL_148;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(v98) & 1) == 0) {
        v98 = sub_1000078CC((uint64_t)v98);
      }
      if (v101 >= *((void *)v98 + 2)) {
        goto LABEL_149;
      }
      v105 = &v98[16 * v101 + 32];
      *(void *)v105 = v102;
      *((void *)v105 + 1) = v103;
      unint64_t v106 = *((void *)v98 + 2);
      if (v11 > v106) {
        goto LABEL_150;
      }
      memmove(&v98[16 * v11 + 16], &v98[16 * v11 + 32], 16 * (v106 - v11));
      v99 = v98;
      *((void *)v98 + 2) = v106 - 1;
      unint64_t v11 = v106 - 1;
      if (v106 <= 2) {
        goto LABEL_116;
      }
    }

LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }

  uint64_t v6 = v5 >> 1;
  uint64_t v7 = sub_1000031E8(&qword_1002DDA50);
  uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
  *(void *)(v8 + sub_10000620C(v0 + 16) = v6;
  v107 = (void *)v8;
  v112 = (char *)(v8 + 32);
LABEL_12:
  Swift::Int v10 = 0LL;
  uint64_t v9 = (char *)&_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v12 = v10++;
    if (v10 < v3)
    {
      uint64_t v13 = *v2;
      sub_100006B20(*v2 + 48 * v10, (uint64_t)&v115);
      uint64_t v14 = v13;
      sub_100006B20(v13 + 48 * v12, (uint64_t)&v113);
      if (v115 == v113 && v116 == v114) {
        int v16 = 0;
      }
      else {
        int v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v115, v116, v113, v114, 1LL);
      }
      sub_100006060((uint64_t)&v113, &qword_1002DDA50);
      sub_100006060((uint64_t)&v115, &qword_1002DDA50);
      Swift::Int v10 = v12 + 2;
      if (v12 + 2 >= v3)
      {
        if ((v16 & 1) != 0) {
          goto LABEL_36;
        }
      }

      else
      {
        uint64_t v109 = v14;
        uint64_t v17 = v14 + 48 * v12 + 48;
        while (1)
        {
          sub_100006B20(v17 + 48, (uint64_t)&v115);
          sub_100006B20(v17, (uint64_t)&v113);
          BOOL v18 = v115 == v113 && v116 == v114;
          int v19 = v18 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)(v115, v116, v113, v114, 1LL);
          sub_100006060((uint64_t)&v113, &qword_1002DDA50);
          sub_100006060((uint64_t)&v115, &qword_1002DDA50);
          if (((v16 ^ v19) & 1) != 0) {
            break;
          }
          ++v10;
          v17 += 48LL;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }

        uint64_t v14 = v109;
        if ((v16 & 1) != 0)
        {
LABEL_36:
          if (v10 < v12) {
            goto LABEL_154;
          }
          if (v12 < v10)
          {
            uint64_t v20 = (__int128 *)(v14 + 48 * v10 - 48);
            uint64_t v21 = (__int128 *)(v14 + 48 * v12);
            Swift::Int v22 = v10;
            Swift::Int v23 = v12;
            do
            {
              if (v23 != --v22)
              {
                if (!v14) {
                  goto LABEL_159;
                }
                __int128 v24 = *v21;
                __int128 v25 = v21[1];
                __int128 v26 = v21[2];
                __int128 v28 = v20[1];
                __int128 v27 = v20[2];
                *uint64_t v21 = *v20;
                v21[1] = v28;
                _OWORD v21[2] = v27;
                v20[1] = v25;
                v20[2] = v26;
                *uint64_t v20 = v24;
              }

              ++v23;
              v20 -= 3;
              v21 += 3;
            }

            while (v23 < v22);
          }
        }
      }
    }

    if (v10 < v3)
    {
      if (__OFSUB__(v10, v12)) {
        goto LABEL_151;
      }
      if (v10 - v12 < v108)
      {
        if (__OFADD__(v12, v108)) {
          goto LABEL_155;
        }
        Swift::Int v29 = v12;
        if (v12 + v108 >= v3) {
          Swift::Int v30 = v3;
        }
        else {
          Swift::Int v30 = v12 + v108;
        }
        Swift::Int v110 = v29;
        if (v30 < v29) {
          goto LABEL_156;
        }
        if (v10 != v30)
        {
          uint64_t v31 = 48 * v10;
          do
          {
            Swift::Int v32 = v110;
            uint64_t v33 = v31;
            while (1)
            {
              uint64_t v34 = *v2 + v33;
              sub_100006B20(v34, (uint64_t)&v115);
              sub_100006B20(v34 - 48, (uint64_t)&v113);
              if (v115 == v113 && v116 == v114) {
                break;
              }
              char v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v115, v116, v113, v114, 1LL);
              sub_100006060((uint64_t)&v113, &qword_1002DDA50);
              sub_100006060((uint64_t)&v115, &qword_1002DDA50);
              if ((v36 & 1) == 0) {
                goto LABEL_54;
              }
              if (!*v2) {
                goto LABEL_157;
              }
              uint64_t v37 = (__int128 *)(*v2 + v33);
              __int128 v39 = v37[1];
              __int128 v38 = v37[2];
              __int128 v40 = *v37;
              __int128 v41 = *(v37 - 2);
              *uint64_t v37 = *(v37 - 3);
              v37[1] = v41;
              v37[2] = *(v37 - 1);
              *(v37 - 3) = v40;
              *(v37 - 2) = v39;
              *(v37 - 1) = v38;
              v33 -= 48LL;
              if (v10 == ++v32) {
                goto LABEL_54;
              }
            }

            sub_100006060((uint64_t)&v113, &qword_1002DDA50);
            sub_100006060((uint64_t)&v115, &qword_1002DDA50);
LABEL_54:
            ++v10;
            v31 += 48LL;
          }

          while (v10 != v30);
          Swift::Int v10 = v30;
        }

        Swift::Int v12 = v110;
      }
    }

    if (v10 < v12)
    {
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }

    Swift::Int v42 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0) {
      uint64_t v9 = sub_1000077D4(0LL, *((void *)v9 + 2) + 1LL, 1, v9);
    }
    unint64_t v44 = *((void *)v9 + 2);
    unint64_t v43 = *((void *)v9 + 3);
    unint64_t v11 = v44 + 1;
    if (v44 >= v43 >> 1) {
      uint64_t v9 = sub_1000077D4((char *)(v43 > 1), v44 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v11;
    uint64_t v45 = v9 + 32;
    __n128 v46 = &v9[16 * v44 + 32];
    *(void *)__n128 v46 = v42;
    *((void *)v46 + 1) = v10;
    if (v44) {
      break;
    }
    unint64_t v11 = 1LL;
LABEL_14:
    Swift::Int v3 = v2[1];
    if (v10 >= v3) {
      goto LABEL_119;
    }
  }

  Swift::Int v111 = v10;
  while (1)
  {
    unint64_t v47 = v11 - 1;
    if (v11 >= 4)
    {
      uint64_t v52 = &v45[16 * v11];
      uint64_t v53 = *((void *)v52 - 8);
      uint64_t v54 = *((void *)v52 - 7);
      BOOL v58 = __OFSUB__(v54, v53);
      uint64_t v55 = v54 - v53;
      if (v58) {
        goto LABEL_135;
      }
      uint64_t v57 = *((void *)v52 - 6);
      uint64_t v56 = *((void *)v52 - 5);
      BOOL v58 = __OFSUB__(v56, v57);
      uint64_t v50 = v56 - v57;
      char v51 = v58;
      if (v58) {
        goto LABEL_136;
      }
      unint64_t v59 = v11 - 2;
      id v60 = &v45[16 * v11 - 32];
      uint64_t v62 = *(void *)v60;
      uint64_t v61 = *((void *)v60 + 1);
      BOOL v58 = __OFSUB__(v61, v62);
      uint64_t v63 = v61 - v62;
      if (v58) {
        goto LABEL_137;
      }
      BOOL v58 = __OFADD__(v50, v63);
      uint64_t v64 = v50 + v63;
      if (v58) {
        goto LABEL_139;
      }
      if (v64 >= v55)
      {
        uint64_t v82 = &v45[16 * v47];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v58 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v58) {
          goto LABEL_145;
        }
        BOOL v75 = v50 < v85;
        goto LABEL_104;
      }
    }

    else
    {
      if (v11 != 3)
      {
        uint64_t v76 = *((void *)v9 + 4);
        uint64_t v77 = *((void *)v9 + 5);
        BOOL v58 = __OFSUB__(v77, v76);
        uint64_t v69 = v77 - v76;
        char v70 = v58;
        goto LABEL_98;
      }

      uint64_t v49 = *((void *)v9 + 4);
      uint64_t v48 = *((void *)v9 + 5);
      BOOL v58 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      char v51 = v58;
    }

    if ((v51 & 1) != 0) {
      goto LABEL_138;
    }
    unint64_t v59 = v11 - 2;
    uint64_t v65 = &v45[16 * v11 - 32];
    uint64_t v67 = *(void *)v65;
    uint64_t v66 = *((void *)v65 + 1);
    BOOL v68 = __OFSUB__(v66, v67);
    uint64_t v69 = v66 - v67;
    char v70 = v68;
    if (v68) {
      goto LABEL_140;
    }
    v71 = &v45[16 * v47];
    uint64_t v73 = *(void *)v71;
    uint64_t v72 = *((void *)v71 + 1);
    BOOL v58 = __OFSUB__(v72, v73);
    uint64_t v74 = v72 - v73;
    if (v58) {
      goto LABEL_142;
    }
    if (__OFADD__(v69, v74)) {
      goto LABEL_144;
    }
    if (v69 + v74 >= v50)
    {
      BOOL v75 = v50 < v74;
LABEL_104:
      if (v75) {
        unint64_t v47 = v59;
      }
      goto LABEL_106;
    }

LABEL_98:
    if ((v70 & 1) != 0) {
      goto LABEL_141;
    }
    uint64_t v78 = &v45[16 * v47];
    uint64_t v80 = *(void *)v78;
    uint64_t v79 = *((void *)v78 + 1);
    BOOL v58 = __OFSUB__(v79, v80);
    uint64_t v81 = v79 - v80;
    if (v58) {
      goto LABEL_143;
    }
    if (v81 < v69) {
      goto LABEL_14;
    }
LABEL_106:
    unint64_t v86 = v47 - 1;
    if (v47 - 1 >= v11)
    {
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
      goto LABEL_146;
    }

    uint64_t v87 = *v2;
    if (!*v2) {
      goto LABEL_158;
    }
    v88 = v9;
    v89 = v2;
    v90 = &v45[16 * v86];
    uint64_t v91 = *(void *)v90;
    v92 = v45;
    unint64_t v93 = v47;
    v94 = &v45[16 * v47];
    uint64_t v95 = *((void *)v94 + 1);
    uint64_t v96 = v117;
    sub_10000749C((char *)(v87 + 48LL * *(void *)v90), (char *)(v87 + 48LL * *(void *)v94), v87 + 48 * v95, v112);
    uint64_t v117 = v96;
    if (v96) {
      break;
    }
    if (v95 < v91) {
      goto LABEL_132;
    }
    if (v93 > *((void *)v88 + 2)) {
      goto LABEL_133;
    }
    *(void *)v90 = v91;
    *(void *)&v92[16 * v86 + 8] = v95;
    unint64_t v97 = *((void *)v88 + 2);
    if (v93 >= v97) {
      goto LABEL_134;
    }
    uint64_t v9 = v88;
    unint64_t v11 = v97 - 1;
    memmove(v94, v94 + 16, 16 * (v97 - 1 - v93));
    uint64_t v45 = v92;
    *((void *)v88 + 2) = v97 - 1;
    uint64_t v2 = v89;
    Swift::Int v10 = v111;
    if (v97 <= 2) {
      goto LABEL_14;
    }
  }

  v98 = v88;
LABEL_115:
  v99 = v98;
LABEL_116:
  swift_bridgeObjectRelease(v99);
  v107[2] = 0LL;
  swift_bridgeObjectRelease(v107);
}

    if ((v73 & 1) != 0) {
      goto LABEL_142;
    }
    uint64_t v81 = &v48[16 * v50];
    uint64_t v83 = *(void *)v81;
    uint64_t v82 = *((void *)v81 + 1);
    uint64_t v61 = __OFSUB__(v82, v83);
    uint64_t v84 = v82 - v83;
    if (v61) {
      goto LABEL_144;
    }
    if (v84 < v72) {
      goto LABEL_15;
    }
LABEL_106:
    v89 = v50 - 1;
    if (v50 - 1 >= v12)
    {
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }

    v90 = v10;
    if (!v10) {
      goto LABEL_159;
    }
    uint64_t v91 = v11;
    v92 = &v48[16 * v89];
    unint64_t v93 = *(void *)v92;
    v94 = v48;
    uint64_t v95 = v50;
    uint64_t v96 = &v48[16 * v50];
    unint64_t v97 = *((void *)v96 + 1);
    v98 = v90;
    sub_1001F509C((char *)(v90 + 16LL * *(void *)v92), (char *)(v90 + 16LL * *(void *)v96), v90 + 16 * v97, v114);
    if (v1) {
      break;
    }
    if (v97 < v93) {
      goto LABEL_133;
    }
    if (v95 > *((void *)v91 + 2)) {
      goto LABEL_134;
    }
    *(void *)v92 = v93;
    *(void *)&v94[16 * v89 + 8] = v97;
    v99 = *((void *)v91 + 2);
    if (v95 >= v99) {
      goto LABEL_135;
    }
    unint64_t v11 = v91;
    Swift::Int v12 = v99 - 1;
    memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
    uint64_t v48 = v94;
    *((void *)v91 + 2) = v99 - 1;
    Swift::Int v10 = v98;
    uint64_t v9 = v113;
    if (v99 <= 2) {
      goto LABEL_15;
    }
  }

  uint64_t v100 = v91;
LABEL_115:
  unint64_t v101 = v100;
LABEL_116:
  swift_bridgeObjectRelease(v101);
  v110[2] = 0LL;
  swift_bridgeObjectRelease(v110);
}

uint64_t sub_100007358(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = result;
    uint64_t v8 = 48 * a3;
LABEL_6:
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t v11 = *a4 + v10;
      sub_100006B20(v11, (uint64_t)&v21);
      sub_100006B20(v11 - 48, (uint64_t)&v19);
      if (v21 == v19 && v22 == v20)
      {
        sub_100006060((uint64_t)&v19, &qword_1002DDA50);
        uint64_t result = sub_100006060((uint64_t)&v21, &qword_1002DDA50);
LABEL_5:
        ++v5;
        v8 += 48LL;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_6;
      }

      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v19, v20, 1LL);
      sub_100006060((uint64_t)&v19, &qword_1002DDA50);
      uint64_t result = sub_100006060((uint64_t)&v21, &qword_1002DDA50);
      if ((v13 & 1) == 0) {
        goto LABEL_5;
      }
      if (!*a4) {
        break;
      }
      uint64_t v14 = (__int128 *)(*a4 + v10);
      __int128 v16 = v14[1];
      __int128 v15 = v14[2];
      __int128 v17 = *v14;
      __int128 v18 = *(v14 - 2);
      *uint64_t v14 = *(v14 - 3);
      v14[1] = v18;
      void v14[2] = *(v14 - 1);
      *(v14 - 3) = v17;
      *(v14 - 2) = v16;
      *(v14 - 1) = v15;
      v10 -= 48LL;
      if (v5 == ++v9) {
        goto LABEL_5;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_10000749C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  Swift::Int v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 48;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 48;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[48 * v11] <= a4) {
      memmove(a4, __src, 48 * v11);
    }
    Swift::Int v12 = &v4[48 * v11];
    if (v7 >= v6 || v10 < 48) {
      goto LABEL_49;
    }
    uint64_t v20 = (char *)(a3 - 48);
    char v36 = v4;
    while (1)
    {
      unint64_t v21 = (unint64_t)v12;
      uint64_t v22 = v12 - 48;
      sub_100006B20((uint64_t)(v12 - 48), (uint64_t)&v34);
      Swift::Int v23 = v6 - 48;
      sub_100006B20((uint64_t)(v6 - 48), (uint64_t)&v32);
      BOOL v24 = v34 == v32 && v35 == v33;
      char v25 = v24 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v32, v33, 1LL);
      __int128 v26 = v20 + 48;
      sub_100006060((uint64_t)&v32, &qword_1002DDA50);
      sub_100006060((uint64_t)&v34, &qword_1002DDA50);
      if ((v25 & 1) == 0) {
        break;
      }
      if (v26 != v6)
      {
        v6 -= 48;
        Swift::Int v12 = (char *)v21;
LABEL_46:
        __int128 v28 = *(_OWORD *)v23;
        __int128 v29 = *((_OWORD *)v23 + 2);
        *((_OWORD *)v20 + 1) = *((_OWORD *)v23 + 1);
        *((_OWORD *)v20 + 2) = v29;
        *(_OWORD *)uint64_t v20 = v28;
        goto LABEL_47;
      }

      BOOL v27 = v20 >= v6;
      v6 -= 48;
      Swift::Int v12 = (char *)v21;
      if (v27) {
        goto LABEL_46;
      }
LABEL_47:
      Swift::Int v4 = v36;
      if (v12 > v36)
      {
        v20 -= 48;
        if (v6 > v7) {
          continue;
        }
      }

      goto LABEL_49;
    }

    Swift::Int v23 = v22;
    if (v26 == (char *)v21)
    {
      Swift::Int v12 = v22;
    }

    else
    {
      Swift::Int v12 = v22;
    }

    goto LABEL_46;
  }

  if (a4 != __dst || &__dst[48 * v9] <= a4) {
    memmove(a4, __dst, 48 * v9);
  }
  Swift::Int v12 = &v4[48 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 48)
  {
    while (1)
    {
      sub_100006B20((uint64_t)v6, (uint64_t)&v34);
      sub_100006B20((uint64_t)v4, (uint64_t)&v32);
      if (v34 == v32 && v35 == v33)
      {
        sub_100006060((uint64_t)&v32, &qword_1002DDA50);
        sub_100006060((uint64_t)&v34, &qword_1002DDA50);
      }

      else
      {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v32, v33, 1LL);
        sub_100006060((uint64_t)&v32, &qword_1002DDA50);
        sub_100006060((uint64_t)&v34, &qword_1002DDA50);
        if ((v14 & 1) != 0)
        {
          __int128 v15 = v6 + 48;
          __int128 v16 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_21;
          }
          goto LABEL_20;
        }
      }

      __int128 v17 = v4 + 48;
      __int128 v16 = v4;
      __int128 v15 = v6;
      if (v7 == v4)
      {
        v4 += 48;
        if (v7 < v17) {
          goto LABEL_21;
        }
      }

      else
      {
        v4 += 48;
      }

LABEL_20:
      __int128 v18 = *(_OWORD *)v16;
      __int128 v19 = *((_OWORD *)v16 + 2);
      *((_OWORD *)v7 + 1) = *((_OWORD *)v16 + 1);
      *((_OWORD *)v7 + 2) = v19;
      *(_OWORD *)uint64_t v7 = v18;
LABEL_21:
      v7 += 48;
      if (v4 < v12)
      {
        uint64_t v6 = v15;
      }

      break;
    }
  }

  uint64_t v6 = v7;
LABEL_49:
  uint64_t v30 = (v12 - v4) / 48;
  if (v6 != v4 || v6 >= &v4[48 * v30]) {
    memmove(v6, v4, 48 * v30);
  }
  return 1LL;
}

  uint64_t v20 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  unint64_t v21 = *(void *)(v20 + 16);
  uint64_t v22 = __OFADD__(v21, 1LL);
  Swift::Int v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
LABEL_23:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v3);
    __break(1u);
  }

  else
  {
    *(void *)(v20 + sub_10000620C(v0 + 16) = v23;
  }

    uint64_t v6 = (v12 - 1) & v12;
    uint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_5:
    sub_10001F054(*(void *)(v2 + 48) + 40 * v10, (uint64_t)v21);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v21, 1LL);
    sub_1000087D8((uint64_t)v21);
  }

  char v13 = v11 + 3;
  if (v13 < v7)
  {
    Swift::Int v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1LL)) {
          goto LABEL_25;
        }
        if (v8 >= v7) {
          goto LABEL_21;
        }
        Swift::Int v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_20;
        }
      }
    }

    int64_t v8 = v13;
    goto LABEL_20;
  }

  swift_bridgeObjectRelease(a1);
  return &_swiftEmptyArrayStorage;
}

    return;
  }

  __int128 v19 = (_BYTE *)swift_unknownObjectWeakLoadStrong(*(void *)(v15 + v16) + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (!v19) {
    return;
  }
  v19[qword_1002F0800] = 1;
  if (v19[qword_1002F0818] == 1) {
    goto LABEL_20;
  }
  uint64_t v30 = v19;
  uint64_t v20 = swift_beginAccess(&v19[qword_1002F0830], aBlock, 32LL, 0LL);
  unint64_t v21 = VideoConfiguration.allowsAutoPlay.getter(v20);
  swift_endAccess(aBlock);
  if ((v21 & 1) == 0) {
    goto LABEL_21;
  }
  if (qword_1002DCC10 != -1) {
    swift_once(&qword_1002DCC10, sub_10011449C);
  }
  if ((sub_1001144C8() & 1) != 0)
  {
    uint64_t v22 = swift_allocObject(&unk_100281DF0, 24LL, 7LL);
    swift_unknownObjectWeakInit(v22 + 16, v30);
    aBlock[4] = sub_100045058;
    uint64_t v33 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100135408;
    aBlock[3] = &unk_100281E08;
    Swift::Int v23 = _Block_copy(aBlock);
    BOOL v24 = v33;
    char v25 = a3;
    objc_msgSend(v25, "addCoordinatedAnimations:completion:", 0, v23, swift_release(v24).n128_f64[0]);
    _Block_release(v23);
  }

  else
  {
LABEL_21:
  }

          __break(1u);
          goto LABEL_21;
        }
      }

      else
      {
        __break(1u);
      }

      __break(1u);
      goto LABEL_20;
    }
  }

      __int128 v38 = v10;
      __int128 v39 = (void *)ProductMedia.allPlatformsDescription.getter();
      __int128 v41 = v40;
      [a1 bounds];
      unint64_t v44 = sub_10018E838((uint64_t)v8, v39, v41, 1, v3, v42, v43);
      __n128 v46 = v45;
      swift_bridgeObjectRelease(v41);
      swift_bridgeObjectRelease(v8);
      unint64_t v47 = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for PlatformSelectorView()),  "initWithFrame:",  0.0,  0.0,  v44,  v46);
      sub_10005F640(v47);
      swift_release(v11);

      return a2;
    }

    if (v13 == enum case for ProductData.shelf(_:))
    {
      (*(void (**)(void *, void *))(v11 + 96))(v8, v10);
      char v36 = (char *)v8 + *(int *)(sub_1000031E8(&qword_1002E9FF8) + 48);
      uint64_t v37 = type metadata accessor for Shelf.ContentType(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8LL))(v36, v37);
      _s6Arcade17PillOverlayLayoutVwxx_0(v8);
    }

    else
    {
      if (v13 != enum case for ProductData.incompleteShelf(_:))
      {
        if (v13 == enum case for ProductData.askToBuyRequest(_:)) {
          goto LABEL_4;
        }
        _diagnoseUnexpectedEnumCase<A>(type:)(v10, v10);
        __break(1u);
        goto LABEL_20;
      }

      (*(void (**)(void *, void *))(v11 + 8))(v8, v10);
    }

    return sub_1001913B8( a2,  *(void *)&v3[OBJC_IVAR____TtC6Arcade21ProductViewController_artworkLoader],  v3,  *(void *)&v3[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_objectGraph],  (char *)a1,  *(void *)&v3[OBJC_IVAR____TtC6Arcade21ProductViewController_shelfDataSource]);
  }

  __break(1u);
  return result;
}

  swift_bridgeObjectRelease(a1);
  return v4;
}

    __break(1u);
    goto LABEL_21;
  }

char *sub_1000077D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DDA68);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  char v14 = v11 + 32;
  __int128 v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8]) {
      memmove(v14, v15, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v14, v15, 16 * v8);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_1000078CC(uint64_t a1)
{
  return sub_1000077D4(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1000078E0(void *a1)
{
  return sub_10002708C(0LL, a1[2], 0, a1);
}

char *sub_1000078F4(uint64_t a1)
{
  return sub_1000271C4(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_100007908(uint64_t a1)
{
  return sub_100027710(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_10000791C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  Swift::Int v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    __int128 v16 = _swiftEmptyArrayStorage;
    sub_100026EC0(0LL, v3, 0);
    Swift::Int v4 = _swiftEmptyArrayStorage;
    uint64_t v8 = a1 + 32;
    do
    {
      *(void *)&__int128 v14 = a2;
      *((void *)&v14 + 1) = a3;
      sub_100008364(v8, (uint64_t)v15);
      __int128 v16 = v4;
      unint64_t v9 = v4[2];
      unint64_t v10 = v4[3];
      swift_bridgeObjectRetain(a3);
      if (v9 >= v10 >> 1)
      {
        sub_100026EC0((void *)(v10 > 1), v9 + 1, 1);
        Swift::Int v4 = v16;
      }

      void v4[2] = v9 + 1;
      uint64_t v11 = &v4[6 * v9];
      __int128 v12 = v15[1];
      v11[3] = v15[0];
      v11[4] = v12;
      v11[2] = v14;
      v8 += 32LL;
      --v3;
    }

    while (v3);
  }

  return v4;
}

char *sub_100007A24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v17 = swift_bridgeObjectRetain(a1);
  char v5 = (uint64_t *)(v17 + 40);
  unint64_t v6 = (char *)&_swiftEmptyArrayStorage;
  do
  {
    uint64_t v8 = *v5;
    v16[0] = *(v5 - 1);
    v16[1] = v8;
    swift_bridgeObjectRetain(v8);
    sub_1000064A0(v16, a2, (uint64_t)&v14);
    if (v2)
    {
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v8);
      return v6;
    }

    swift_bridgeObjectRelease(v8);
    uint64_t v9 = v15;
    if (v15)
    {
      uint64_t v10 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0) {
        unint64_t v6 = sub_100019F48(0LL, *((void *)v6 + 2) + 1LL, 1, v6);
      }
      unint64_t v12 = *((void *)v6 + 2);
      unint64_t v11 = *((void *)v6 + 3);
      if (v12 >= v11 >> 1) {
        unint64_t v6 = sub_100019F48((char *)(v11 > 1), v12 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v12 + 1;
      int64_t v7 = &v6[16 * v12];
      *((void *)v7 + 4) = v10;
      *((void *)v7 + 5) = v9;
    }

    v5 += 2;
    --v3;
  }

  while (v3);
  swift_bridgeObjectRelease(v17);
  return v6;
}

uint64_t sub_100007B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v31[0] = a1;
  v31[1] = a2;
  sub_100008364(a3, (uint64_t)v32);
  sub_100008364((uint64_t)v32, (uint64_t)v30);
  swift_bridgeObjectRetain(a2);
  if (swift_dynamicCast(&v29, v30, (char *)&type metadata for Any + 8, &type metadata for Double, 0LL))
  {
    double v10 = v29;
    *(void *)&v28[0] = a1;
    *((void *)&v28[0] + 1) = a2;
    v27[0] = 1701669204LL;
    v27[1] = 0xE400000000000000LL;
    unint64_t v11 = sub_100008794();
    if ((StringProtocol.contains<A>(_:)(v27, &type metadata for String, &type metadata for String, v11, v11) & 1) != 0)
    {
      Date.init(timeIntervalSince1970:)(v10 / 1000.0);
      unint64_t v12 = (void *)objc_opt_self(&OBJC_CLASS___NSDateFormatter);
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v14 = [v12 localizedStringFromDate:isa dateStyle:2 timeStyle:2];

      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_6:
      sub_100006060((uint64_t)v31, &qword_1002DDA50);
LABEL_14:
      _s6Arcade17PillOverlayLayoutVwxx_0(v30);
      return v15;
    }
  }

  unint64_t v16 = sub_10000870C();
  if (swift_dynamicCast(v28, v30, (char *)&type metadata for Any + 8, v16, 0LL))
  {
    uint64_t v17 = *(void **)&v28[0];
    id v18 = [*(id *)&v28[0] stringValue];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);

    goto LABEL_6;
  }

  if (swift_dynamicCast(v28, v30, (char *)&type metadata for Any + 8, &type metadata for String, 0LL))
  {
    sub_100006060((uint64_t)v31, &qword_1002DDA50);
    uint64_t v15 = *(void *)&v28[0];
    goto LABEL_14;
  }

  uint64_t v19 = sub_1000031E8(&qword_1002DDA70);
  if (swift_dynamicCast(v28, v30, (char *)&type metadata for Any + 8, v19, 0LL))
  {
    uint64_t v20 = *(void *)&v28[0];
    if (a1 == 0x6973736572706D69LL && a2 == 0xEB00000000736E6FLL
      || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x6973736572706D69LL, 0xEB00000000736E6FLL, 0LL) & 1) != 0)
    {
      swift_bridgeObjectRetain(v20);
      unint64_t v21 = sub_100007A24((uint64_t)&off_10027FEF0, v20);
      swift_bridgeObjectRelease_n(v20, 2LL);
      v27[0] = v21;
      uint64_t v22 = sub_1000031E8(&qword_1002EAEC0);
      unint64_t v23 = sub_100008748();
      uint64_t v15 = BidirectionalCollection<>.joined(separator:)(8236LL, 0xE200000000000000LL, v22, v23);
      sub_100006060((uint64_t)v31, &qword_1002DDA50);
      swift_bridgeObjectRelease(v21);
      goto LABEL_14;
    }

    swift_bridgeObjectRelease(v20);
  }

  uint64_t v25 = sub_1000031E8(&qword_1002DDA58);
  if (swift_dynamicCast(v28, v30, (char *)&type metadata for Any + 8, v25, 0LL)
    || swift_dynamicCast(v28, v30, (char *)&type metadata for Any + 8, v19, 0LL))
  {
    sub_100006060((uint64_t)v31, &qword_1002DDA50);
    swift_bridgeObjectRelease(*(void *)&v28[0]);
    _s6Arcade17PillOverlayLayoutVwxx_0(v30);
    return 0LL;
  }

  else
  {
    sub_1000086FC(v30, v28);
    sub_100008364((uint64_t)v28, (uint64_t)v27);
    uint64_t v15 = String.init<A>(describing:)(v27, (char *)&type metadata for Any + 8);
    _s6Arcade17PillOverlayLayoutVwxx_0(v28);
    sub_100006060((uint64_t)v31, &qword_1002DDA50);
  }

  return v15;
}

id sub_100007FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v37[0] = a1;
  v37[1] = a2;
  sub_100008364(a3, (uint64_t)v38);
  sub_100008364((uint64_t)v38, (uint64_t)v36);
  swift_bridgeObjectRetain(a2);
  uint64_t v7 = sub_1000031E8(&qword_1002DE730);
  if (swift_dynamicCast(&v35, v36, (char *)&type metadata for Any + 8, v7, 0LL))
  {
    uint64_t v8 = v35;
    uint64_t v9 = objc_allocWithZone((Class)type metadata accessor for DebugMetricsInspectorViewController(0LL));
    swift_retain(a4);
    uint64_t v10 = swift_bridgeObjectRetain(v8);
    unint64_t v11 = sub_1001E0064(v10);
    swift_bridgeObjectRelease(v8);
    uint64_t v32 = (uint64_t)v11;
    sub_100006B68(&v32);
    swift_bridgeObjectRelease(v8);
    *(void *)((char *)v9 + *(void *)((swift_isaMask & *v9) + 0x60LL)) = v32;
    *(void *)((char *)v9 + *(void *)((swift_isaMask & *v9) + 0x68LL)) = a4;
    v29.receiver = v9;
    v29.super_class = (Class)sub_1000031E8(&qword_1002DDA60);
    id v12 = objc_msgSendSuper2(&v29, "initWithStyle:", 0);
    uint64_t v32 = a1;
    uint64_t v33 = a2;
    sub_100008364((uint64_t)v38, (uint64_t)v34);
    swift_bridgeObjectRetain(a2);
    id v13 = v12;
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    _s6Arcade17PillOverlayLayoutVwxx_0(v34);
    [v13 setTitle:v14];

LABEL_9:
    sub_100006060((uint64_t)v37, &qword_1002DDA50);
    goto LABEL_10;
  }

  uint64_t v15 = sub_1000031E8(&qword_1002DDA58);
  if (swift_dynamicCast(&v35, v36, (char *)&type metadata for Any + 8, v15, 0LL))
  {
    uint64_t v16 = v35;
    uint64_t v32 = a1;
    uint64_t v33 = a2;
    sub_100008364((uint64_t)v38, (uint64_t)v34);
    uint64_t v17 = objc_allocWithZone((Class)type metadata accessor for DebugMetricsInspectorViewController(0LL));
    swift_bridgeObjectRetain_n(a2, 2LL);
    swift_retain(a4);
    uint64_t v18 = swift_bridgeObjectRetain(v16);
    uint64_t v19 = sub_10000791C(v18, a1, a2);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease_n(a2, 2LL);
    *(void *)((char *)v17 + *(void *)((swift_isaMask & *v17) + 0x60LL)) = v19;
    *(void *)((char *)v17 + *(void *)((swift_isaMask & *v17) + 0x68LL)) = a4;
    v31.receiver = v17;
    v31.super_class = (Class)sub_1000031E8(&qword_1002DDA60);
    id v13 = objc_msgSendSuper2(&v31, "initWithStyle:", 0);
    _s6Arcade17PillOverlayLayoutVwxx_0(v34);
    uint64_t v20 = *(void *)(v16 + 16);
    if (v20 == 1)
    {
      swift_bridgeObjectRelease(v16);
      id v21 = v13;
      NSString v22 = String._bridgeToObjectiveC()();
    }

    else
    {
      id v24 = v13;
      swift_bridgeObjectRelease(v16);
      uint64_t v30 = v20;
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
      uint64_t v33 = v25;
      v26._countAndFlagsBits = 0x746E656D656C6520LL;
      v26._object = (void *)0xE900000000000073LL;
      String.append(_:)(v26);
      uint64_t v27 = v33;
      NSString v22 = String._bridgeToObjectiveC()();
      *(void *)&double v23 = swift_bridgeObjectRelease(v27).n128_u64[0];
    }

    objc_msgSend(v13, "setTitle:", v22, v23);

    goto LABEL_9;
  }

  sub_100006060((uint64_t)v37, &qword_1002DDA50);
  id v13 = 0LL;
LABEL_10:
  _s6Arcade17PillOverlayLayoutVwxx_0(v36);
  return v13;
}

uint64_t sub_100008364(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1000083A4(uint64_t a1, void *a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [a2 dequeueReusableCellWithIdentifier:v5];

  if (v6)
  {
    uint64_t v7 = type metadata accessor for BasicTableViewCell();
    id v8 = (id)swift_dynamicCastClass(v6, v7);
    if (v8) {
      goto LABEL_5;
    }
  }

  id v9 = objc_allocWithZone((Class)type metadata accessor for BasicTableViewCell());
  NSString v10 = String._bridgeToObjectiveC()();
  id v8 = [v9 initWithStyle:3 reuseIdentifier:v10];

LABEL_5:
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (result < *(void *)(a3 + 16))
  {
    sub_100006B20(a3 + 48 * result + 32, (uint64_t)&v19);
    uint64_t v12 = v19;
    id v13 = v20;
    v17[4] = v19;
    v17[5] = v20;
    sub_100008364((uint64_t)v21, (uint64_t)v18);
    sub_100008364((uint64_t)v21, (uint64_t)v17);
    swift_bridgeObjectRetain(v13);
    uint64_t v14 = sub_100007B78(v12, (uint64_t)v13, (uint64_t)v17);
    uint64_t v16 = v15;
    _s6Arcade17PillOverlayLayoutVwxx_0(v17);
    sub_10015111C(v12, v13, v14, v16, 0LL);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v16);
    sub_100006060((uint64_t)&v19, &qword_1002DDA50);
    _s6Arcade17PillOverlayLayoutVwxx_0(v18);
    return (unint64_t)v8;
  }

  __break(1u);
  return result;
}

unint64_t sub_100008574(uint64_t a1, uint64_t a2)
{
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }

  if (result >= *(void *)(a2 + 16))
  {
LABEL_11:
    __break(1u);
    return result;
  }

  sub_100006B20(a2 + 48 * result + 32, (uint64_t)&v17);
  uint64_t v14 = v17;
  uint64_t v15 = v18;
  sub_100008364((uint64_t)v19, (uint64_t)v16);
  sub_1000086FC(v16, &v11);
  uint64_t v4 = sub_1000031E8(&qword_1002DDA58);
  int v5 = swift_dynamicCast(v13, &v11, (char *)&type metadata for Any + 8, v4, 6LL);
  if (v5) {
    swift_bridgeObjectRelease(*(void *)&v13[0]);
  }
  uint64_t v7 = v17;
  uint64_t v6 = v18;
  uint64_t v14 = v17;
  uint64_t v15 = v18;
  sub_1000086FC(v19, v16);
  if (v5)
  {
    sub_100006060((uint64_t)&v14, &qword_1002DDA50);
    return 1LL;
  }

  else
  {
    *(void *)&__int128 v11 = v7;
    *((void *)&v11 + 1) = v6;
    sub_100008364((uint64_t)v16, (uint64_t)v12);
    swift_bridgeObjectRetain(v6);
    sub_100006060((uint64_t)&v14, &qword_1002DDA50);
    swift_bridgeObjectRelease(*((void *)&v11 + 1));
    sub_1000086FC(v12, v13);
    uint64_t v9 = sub_1000031E8(&qword_1002DE730);
    uint64_t v8 = swift_dynamicCast(&v10, v13, (char *)&type metadata for Any + 8, v9, 6LL);
    if ((_DWORD)v8) {
      swift_bridgeObjectRelease(v10);
    }
  }

  return v8;
}

_OWORD *sub_1000086FC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_10000870C()
{
  unint64_t result = qword_1002E42B0;
  if (!qword_1002E42B0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSNumber);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002E42B0);
  }

  return result;
}

unint64_t sub_100008748()
{
  unint64_t result = qword_1002E0010;
  if (!qword_1002E0010)
  {
    uint64_t v1 = sub_100003274(&qword_1002EAEC0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002E0010);
  }

  return result;
}

unint64_t sub_100008794()
{
  unint64_t result = qword_1002E42D0;
  if (!qword_1002E42D0)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1002E42D0);
  }

  return result;
}

uint64_t sub_1000087D8(uint64_t a1)
{
  return a1;
}

_OWORD *sub_10000880C@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1002DCE20 != -1) {
    swift_once(&qword_1002DCE20, sub_1001631B8);
  }
  return sub_100008954(&xmmword_1002F0CC0, a1);
}

double sub_10000885C()
{
  return 15.0;
}

uint64_t sub_1000088DC()
{
  return type metadata accessor for MediumLockupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for MediumLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DDAA0;
  if (!qword_1002DDAA0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MediumLockupCollectionViewCell);
  }
  return result;
}

uint64_t sub_100008920(uint64_t a1)
{
  return swift_updateClassMetadata2(a1, 256LL, 0LL, v2, a1 + 616);
}

_OWORD *sub_100008954(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

uint64_t sub_100008990()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v18[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC658 != -1) {
    swift_once(&qword_1002DC658, sub_1000715F0);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_1000061F4(v5, (uint64_t)qword_1002EEF58);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL);
  v7(v4, v6, v5);
  uint64_t v8 = enum case for FontSource.useCase(_:);
  uint64_t v9 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v9(v4, enum case for FontSource.useCase(_:), v0);
  uint64_t v10 = type metadata accessor for StaticDimension(0LL);
  uint64_t v23 = v10;
  id v24 = &protocol witness table for StaticDimension;
  sub_100009D54(&v22);
  uint64_t v20 = v0;
  id v21 = &protocol witness table for FontSource;
  __int128 v11 = sub_100009D54(&v19);
  uint64_t v12 = (void (*)(void *, char *, uint64_t))v1[2];
  v12(v11, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v19, 30.0);
  id v13 = (void (*)(char *, uint64_t))v1[1];
  v13(v4, v0);
  if (qword_1002DC660 != -1) {
    swift_once(&qword_1002DC660, sub_100071608);
  }
  uint64_t v14 = sub_1000061F4(v5, (uint64_t)qword_1002EEF70);
  v7(v4, v14, v5);
  v9(v4, v8, v0);
  uint64_t v20 = v10;
  id v21 = &protocol witness table for StaticDimension;
  sub_100009D54(&v19);
  v18[3] = v0;
  void v18[4] = &protocol witness table for FontSource;
  uint64_t v15 = sub_100009D54(v18);
  v12(v15, v4, v0);
  StaticDimension.init(_:scaledLike:)(v18, 30.0);
  v13(v4, v0);
  qword_1002EE3D0 = (uint64_t)&type metadata for Double;
  unk_1002EE3D8 = &protocol witness table for Double;
  qword_1002EE3B8 = 0x404B000000000000LL;
  qword_1002EE3F8 = (uint64_t)&type metadata for Double;
  unk_1002EE400 = &protocol witness table for Double;
  qword_1002EE3E0 = 0x4034000000000000LL;
  qword_1002EE420 = (uint64_t)&type metadata for Double;
  unk_1002EE428 = &protocol witness table for Double;
  qword_1002EE408 = 0x4034000000000000LL;
  qword_1002EE448 = (uint64_t)&type metadata for Double;
  unk_1002EE450 = &protocol witness table for Double;
  qword_1002EE430 = 0x4040000000000000LL;
  sub_100009D90(&v22, (uint64_t)&unk_1002EE368);
  uint64_t result = sub_100009D90(&v19, (uint64_t)&unk_1002EE390);
  qword_1002EE458 = 0x4018000000000000LL;
  return result;
}

uint64_t sub_100008C00(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for SystemImage(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v99 = v10;
  uint64_t v100 = v11;
  __chkstk_darwin(v10);
  v98 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = &qword_1002DD000;
  uint64_t v19 = OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_titleLabel;
  uint64_t v20 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v21 = qword_1002DC658;
  uint64_t v95 = v5;
  if (v21 != -1) {
    swift_once(&qword_1002DC658, sub_1000715F0);
  }
  uint64_t v22 = sub_1000061F4(v14, (uint64_t)qword_1002EEF58);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v23(v17, v22, v14);
  *(void *)&v5[v19] = sub_1000137B8((uint64_t)v17, 2LL, 0LL, 1, 0);
  uint64_t v24 = OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_subtitleLabel;
  if (qword_1002DC660 != -1) {
    swift_once(&qword_1002DC660, sub_100071608);
  }
  uint64_t v25 = sub_1000061F4(v14, (uint64_t)qword_1002EEF70);
  v23(v17, v25, v14);
  v94 = (objc_class *)v20;
  Swift::String v26 = sub_1000137B8((uint64_t)v17, 2LL, 0LL, 1, 0);
  uint64_t v27 = v95;
  *(void *)&v95[v24] = v26;
  v27[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_isPressEnabled] = 0;
  uint64_t v28 = sub_100025794((void *)1, 5LL);
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 + 16);
  objc_super v31 = &selRef_updateSearchResultsForSearchController_;
  uint64_t v32 = _swiftEmptyArrayStorage;
  if (v30)
  {
    unint64_t v106 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v30);
    uint64_t v33 = (objc_class *)type metadata accessor for StarRatingView();
    uint64_t v34 = 0LL;
    unsigned int v97 = enum case for SystemImage.starFill(_:);
    UIFontTextStyle v96 = UIFontTextStyleCaption1;
    uint64_t v101 = v29;
    do
    {
      uint64_t v39 = *(void *)(v29 + 8 * v34 + 32);
      __int128 v40 = objc_msgSend(objc_allocWithZone(v33), v31[45], 0.0, 0.0, 0.0, 0.0);
      char v41 = v40[OBJC_IVAR____TtC6Arcade14StarRatingView_starSize];
      v40[OBJC_IVAR____TtC6Arcade14StarRatingView_starSize] = 1;
      if ((v41 & 1) == 0)
      {
        uint64_t v42 = v100;
        unint64_t v43 = v33;
        unint64_t v44 = v98;
        uint64_t v45 = v31;
        uint64_t v46 = v99;
        (*(void (**)(char *, void, uint64_t))(v100 + 104))(v98, v97, v99);
        sub_100006028(0LL, (unint64_t *)&qword_1002DDB10, &OBJC_CLASS___UIImageSymbolConfiguration_ptr);
        uint64_t v102 = v39;
        unint64_t v47 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)(v96, 0LL, 1LL, 1LL, 0LL);
        uint64_t v48 = (void *)static SystemImage.load(_:with:)(v44, v47);

        uint64_t v49 = *(void (**)(char *, uint64_t))(v42 + 8);
        uint64_t v29 = v101;
        uint64_t v50 = v44;
        uint64_t v33 = v43;
        uint64_t v51 = v46;
        objc_super v31 = v45;
        v49(v50, v51);
        id v52 = [v48 imageWithRenderingMode:2];

        uint64_t v53 = *(void **)&v40[OBJC_IVAR____TtC6Arcade14StarRatingView_starGlyph];
        *(void *)&v40[OBJC_IVAR____TtC6Arcade14StarRatingView_starGlyph] = v52;
        uint64_t v39 = v102;

        [v40 setNeedsDisplay];
      }

      v40[OBJC_IVAR____TtC6Arcade14StarRatingView_showsEmptyStars] = 0;
      id v35 = [v40 setNeedsLayout];
      double v36 = *(double *)&v40[OBJC_IVAR____TtC6Arcade14StarRatingView_rating];
      *(double *)&v40[OBJC_IVAR____TtC6Arcade14StarRatingView_rating] = (double)v39;
      ++v34;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v35);
      uint64_t v37 = v106[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v37);
      uint64_t v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v40);
      specialized ContiguousArray._endMutation()(v38);
    }

    while (v30 != v34);
    uint64_t v27 = v95;
    *(void *)&v95[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_starViews] = v106;
    unint64_t v106 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v30);
    uint64_t v54 = (objc_class *)type metadata accessor for ProgressBarView();
    uint64_t v18 = &qword_1002DD000;
    do
    {
      id v55 = [objc_allocWithZone(v54) init];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v55);
      uint64_t v56 = v106[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v56);
      uint64_t v57 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v55);
      specialized ContiguousArray._endMutation()(v57);
      --v30;
    }

    while (v30);
    uint64_t v32 = v106;
    uint64_t v28 = v101;
  }

  else
  {
    *(void *)&v27[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_starViews] = _swiftEmptyArrayStorage;
  }

  swift_bridgeObjectRelease(v28);
  *(void *)&v27[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews] = v32;

  BOOL v58 = (objc_class *)type metadata accessor for ProductStarRatingsHistogramContentView();
  v105.receiver = v27;
  v105.super_class = v58;
  unint64_t v59 = (char *)objc_msgSendSuper2(&v105, v31[45], a1, a2, a3, a4);
  uint64_t v60 = v18[342];
  uint64_t v61 = *(void **)&v59[v60];
  sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  uint64_t v62 = v59;
  id v63 = v61;
  uint64_t v64 = (void *)static UIColor.opacityA.getter();
  [v63 setTextColor:v64];

  uint64_t v65 = *(_BYTE **)&v59[v60];
  int v66 = v65[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v65[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v66 != 1)
  {
    uint64_t v67 = v65;
    id v68 = [v67 traitCollection];
    char v69 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v69 & 1) != 0) {
      uint64_t v70 = 2LL;
    }
    else {
      uint64_t v70 = 0LL;
    }
    v104.receiver = v67;
    v104.super_class = v94;
    objc_msgSendSuper2(&v104, "setTextAlignment:", v70);
  }

  [v62 addSubview:*(void *)&v59[v60]];
  uint64_t v71 = OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_subtitleLabel;
  uint64_t v72 = *(_BYTE **)&v62[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_subtitleLabel];
  int v73 = v72[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v72[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v73 != 1)
  {
    uint64_t v74 = v72;
    id v75 = [v74 traitCollection];
    char v76 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v76 & 1) != 0) {
      uint64_t v77 = 2LL;
    }
    else {
      uint64_t v77 = 0LL;
    }
    v103.receiver = v74;
    v103.super_class = v94;
    objc_msgSendSuper2(&v103, "setTextAlignment:", v77);
  }

  id v78 = *(id *)&v62[v71];
  uint64_t v79 = (void *)static UIColor.opacityB.getter();
  [v78 setTextColor:v79];

  [v62 addSubview:*(void *)&v62[v71]];
  uint64_t v80 = *(void *)&v62[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_starViews];
  if ((unint64_t)v80 >> 62)
  {
    if (v80 < 0) {
      uint64_t v86 = *(void *)&v62[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_starViews];
    }
    else {
      uint64_t v86 = v80 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v62[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_starViews]);
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v86);
    uint64_t v81 = result;
    if (!result) {
      goto LABEL_38;
    }
  }

  else
  {
    uint64_t v81 = *(void *)((v80 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(*(void *)&v62[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_starViews]);
    if (!v81) {
      goto LABEL_38;
    }
  }

  if (v81 < 1)
  {
    __break(1u);
    goto LABEL_52;
  }

  for (uint64_t i = 0LL; i != v81; ++i)
  {
    if ((v80 & 0xC000000000000001LL) != 0) {
      id v84 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v80);
    }
    else {
      id v84 = *(id *)(v80 + 8 * i + 32);
    }
    uint64_t v85 = v84;
    [v62 addSubview:v84];
  }

LABEL_38:
  swift_bridgeObjectRelease(v80);
  uint64_t v87 = *(void *)&v62[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews];
  if (!((unint64_t)v87 >> 62))
  {
    uint64_t v88 = *(void *)((v87 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(*(void *)&v62[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews]);
    if (v88) {
      goto LABEL_40;
    }
LABEL_50:
    swift_bridgeObjectRelease(v87);
    objc_msgSend(v62, "setLayoutMargins:", 20.0, 20.0, 20.0, 20.0);

    return (uint64_t)v62;
  }

  if (v87 < 0) {
    uint64_t v92 = *(void *)&v62[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews];
  }
  else {
    uint64_t v92 = v87 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)&v62[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews]);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v92);
  uint64_t v88 = result;
  if (!result) {
    goto LABEL_50;
  }
LABEL_40:
  if (v88 >= 1)
  {
    for (uint64_t j = 0LL; j != v88; ++j)
    {
      if ((v87 & 0xC000000000000001LL) != 0) {
        id v90 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v87);
      }
      else {
        id v90 = *(id *)(v87 + 8 * j + 32);
      }
      uint64_t v91 = v90;
      [v62 addSubview:v90];
    }

    goto LABEL_50;
  }

  __break(1u);
}

        __break(1u);
        goto LABEL_39;
      }

  BOOL v58 = sub_100006028(0LL, (unint64_t *)&qword_1002DF670, &OBJC_CLASS___OS_dispatch_queue_ptr);
  unint64_t v59 = (void *)static OS_dispatch_queue.main.getter(v58);
  uint64_t v60 = (void *)swift_allocObject(&unk_10028C880, 40LL, 7LL);
  uint64_t v61 = v75;
  v60[2] = v75;
  v60[3] = v52;
  uint64_t v62 = v76;
  v60[4] = v76;
  aBlock[4] = sub_1001A394C;
  UIFontTextStyle v96 = v60;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100135408;
  aBlock[3] = &unk_10028C898;
  id v63 = _Block_copy(aBlock);
  uint64_t v64 = v96;
  swift_bridgeObjectRetain(v61);
  uint64_t v65 = v52;
  swift_retain(v62);
  int v66 = swift_release(v64);
  uint64_t v67 = v77;
  static DispatchQoS.unspecified.getter(v66);
  aBlock[0] = _swiftEmptyArrayStorage;
  id v68 = sub_100003B6C( (unint64_t *)&qword_1002E42E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  char v69 = sub_1000031E8((uint64_t *)&unk_1002DF660);
  uint64_t v70 = sub_100048E40();
  uint64_t v71 = v80;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v69, v70, v9, v68);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v67, v71, v63);
  _Block_release(v63);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v71, v9);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v67, v79);
}

  __break(1u);
  return result;
}

LABEL_52:
  __break(1u);
  return result;
}

      uint64_t v42 = (char)v85;
    }

                  __break(1u);
                  return result;
                }

                goto LABEL_50;
              }

void *sub_100009448()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (objc_class *)type metadata accessor for ProductStarRatingsHistogramContentView();
  v28.receiver = v1;
  v28.super_class = v6;
  objc_msgSendSuper2(&v28, "layoutSubviews");
  if (qword_1002DC2F0 != -1) {
    swift_once(&qword_1002DC2F0, sub_100008990);
  }
  sub_100009CE4((uint64_t)&unk_1002EE368, (uint64_t)v20);
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_titleLabel];
  uint64_t v21 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v22 = &protocol witness table for UILabel;
  v20[31] = v7;
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_subtitleLabel];
  uint64_t v24 = v21;
  uint64_t v25 = &protocol witness table for UILabel;
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_starViews];
  id v10 = v7;
  id v11 = v8;
  uint64_t v12 = sub_10005A10C(v9);
  uint64_t v13 = sub_10005A130(*(void *)&v1[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews]);
  uint64_t v26 = v12;
  uint64_t v27 = v13;
  LayoutMarginsAware<>.layoutFrame.getter(v6);
  sub_10002D8CC((uint64_t)v1, (uint64_t)v5, v14, v15, v16, v17);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_100009D20(v20);
}

id sub_1000095F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductStarRatingsHistogramContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProductStarRatingsHistogramContentView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade38ProductStarRatingsHistogramContentView);
}

uint64_t sub_1000096A0()
{
  return 0LL;
}

uint64_t sub_1000096B0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100009CA4( &qword_1002DDB00,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for ProductStarRatingsHistogramContentView,  (uint64_t)&unk_100233718);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_1000096EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_titleLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002DC658 != -1) {
    swift_once(&qword_1002DC658, sub_1000715F0);
  }
  uint64_t v8 = sub_1000061F4(v3, (uint64_t)qword_1002EEF58);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9(v6, v8, v3);
  *(void *)&v2[v7] = sub_1000137B8((uint64_t)v6, 2LL, 0LL, 1, 0);
  uint64_t v10 = OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_subtitleLabel;
  if (qword_1002DC660 != -1) {
    swift_once(&qword_1002DC660, sub_100071608);
  }
  uint64_t v11 = sub_1000061F4(v3, (uint64_t)qword_1002EEF70);
  v9(v6, v11, v3);
  *(void *)&v2[v10] = sub_1000137B8((uint64_t)v6, 2LL, 0LL, 1, 0);
  v2[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_isPressEnabled] = 0;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/ProductStarRatingsHistogramContentView.swift",  51LL,  2LL,  67LL,  0);
  __break(1u);
}

void sub_100009880()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = type metadata accessor for ProductStarRatingsHistogram(0LL);
  uint64_t v3 = sub_100009CA4( &qword_1002DDB08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductStarRatingsHistogram,  (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  ItemLayoutContext.typedModel<A>(as:)(&v42, v2, v2, v3);
  id v4 = v42;
  if (!v42) {
    return;
  }
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_titleLabel];
  v6._countAndFlagsBits = 0xD000000000000015LL;
  v6._object = (void *)0x8000000100243900LL;
  v7._countAndFlagsBits = 0LL;
  v7._object = (void *)0xE000000000000000LL;
  object = localizedString(_:comment:)(v6, v7)._object;
  NSString v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setText:", v9, swift_bridgeObjectRelease(object).n128_f64[0]);

  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_subtitleLabel];
  uint64_t v11 = swift_retain(v4);
  uint64_t v12 = (uint64_t)v4;
  Swift::Int v13 = Ratings.totalNumberOfRatings.getter(v11);
  swift_release(v4);
  v14._object = (void *)0x8000000100243920LL;
  v14._countAndFlagsBits = 0xD000000000000013LL;
  v15._countAndFlagsBits = 0LL;
  v15._object = (void *)0xE000000000000000LL;
  double v16 = localizedStringWithCount(_:count:comment:)(v14, v13, v15)._object;
  NSString v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setText:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  uint64_t v18 = swift_retain(v4);
  uint64_t v19 = (void *)Ratings.totalNumberOfRatings.getter(v18);
  swift_release(v4);
  uint64_t v20 = swift_retain(v4);
  uint64_t v21 = Ratings.ratingCounts.getter(v20);
  swift_release(v4);
  if (!v21) {
    goto LABEL_29;
  }
  unint64_t v22 = v21 & 0xFFFFFFFFFFFFFF8LL;
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8LL) + 0x10) != 5LL) {
    goto LABEL_28;
  }
  uint64_t v23 = 5LL;
  while (2)
  {
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews);
    uint64_t v24 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    while (1)
    {
      id v39 = v4;
      __int128 v40 = (void *)v1;
      if (v23 >= 1) {
        break;
      }
LABEL_45:
      __break(1u);
LABEL_46:
      if (v12 < 0) {
        uint64_t v38 = v12;
      }
      else {
        uint64_t v38 = v12 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v12);
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease(v12);
    }

    uint64_t v1 = 0LL;
    float v25 = (float)(uint64_t)v19;
    unint64_t v41 = v12 & 0xC000000000000001LL;
    uint64_t v26 = v12;
    v12 &= 0xFFFFFFFFFFFFFF8uLL;
    while (1)
    {
      if ((v21 & 0xC000000000000001LL) != 0) {
        id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v21);
      }
      else {
        id v28 = *(id *)(v21 + 8 * v1 + 32);
      }
      uint64_t v19 = v28;
      objc_msgSend(v28, "floatValue", v39, v40);
      if (v1 >= v24) {
        goto LABEL_12;
      }
      float v30 = v29;
      if (!v41) {
        break;
      }
      uint64_t v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v26);
LABEL_11:
      id v4 = v27;
      *(double *)&v27[OBJC_IVAR____TtC6Arcade15ProgressBarView_percentage] = (float)(v30 / v25);
      [v27 setNeedsDisplay];

      uint64_t v19 = v4;
LABEL_12:
      ++v1;

      if (v23 == v1)
      {
        *(void *)&double v31 = swift_bridgeObjectRelease(v21).n128_u64[0];
        id v4 = v39;
        uint64_t v1 = (uint64_t)v40;
        goto LABEL_42;
      }
    }

    unint64_t v22 = *(void *)(v12 + 16);
    if (v1 < v22)
    {
      uint64_t v27 = (char *)*(id *)(v26 + 8 * v1 + 32);
      goto LABEL_11;
    }

    __break(1u);
LABEL_22:
    if (v21 >= 0) {
      unint64_t v32 = v22;
    }
    else {
      unint64_t v32 = v21;
    }
    swift_bridgeObjectRetain(v21);
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v21);
    if (v33 == 5)
    {
      swift_bridgeObjectRetain(v21);
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease(v21);
      if (!v23) {
        goto LABEL_41;
      }
      continue;
    }

    break;
  }

LABEL_28:
  swift_bridgeObjectRelease(v21);
LABEL_29:
  uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0) {
      uint64_t v37 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews);
    }
    else {
      uint64_t v37 = v21 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)(v1
                                       + OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews));
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (!v23) {
      goto LABEL_41;
    }
LABEL_31:
    if (v23 >= 1)
    {
      uint64_t v34 = 0LL;
      do
      {
        if ((v21 & 0xC000000000000001LL) != 0) {
          id v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v21);
        }
        else {
          id v35 = (char *)*(id *)(v21 + 8 * v34 + 32);
        }
        double v36 = v35;
        ++v34;
        *(void *)&v35[OBJC_IVAR____TtC6Arcade15ProgressBarView_percentage] = 0LL;
        [v35 setNeedsDisplay];
      }

      while (v23 != v34);
      goto LABEL_41;
    }

    __break(1u);
    goto LABEL_45;
  }

  uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(*(void *)(v1
                                     + OBJC_IVAR____TtC6Arcade38ProductStarRatingsHistogramContentView_progressBarViews));
  if (v23) {
    goto LABEL_31;
  }
LABEL_41:
  *(void *)&double v31 = swift_bridgeObjectRelease(v21).n128_u64[0];
LABEL_42:
  objc_msgSend((id)v1, "setNeedsLayout", v31);
  swift_release(v4);
}

  swift_release(v20);
  uint64_t v34 = v63;
  uint64_t v33 = v64;
  if (v12 == v14)
  {
LABEL_29:
    *((_BYTE *)v1 + v66) = 0;
    return;
  }

  if (v14 < v12) {
    goto LABEL_40;
  }
  if (v12 < v14)
  {
    id v55 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x60LL);
    uint64_t v54 = v14;
    do
    {
      swift_beginAccess(v33, v69, 32LL, 0LL);
      uint64_t v37 = *v33;
      uint64_t v67 = v12;
      Dictionary.subscript.getter(&v68, &v67, v37, &type metadata for Int, v34, &protocol witness table for Int);
      uint64_t v38 = v68;
      swift_endAccess(v69);

      if (v38)
      {
        swift_beginAccess(v33, v69, 32LL, 0LL);
        id v35 = *v33;
        uint64_t v67 = v12;
        Dictionary.subscript.getter(&v68, &v67, v35, &type metadata for Int, v34, &protocol witness table for Int);
        double v36 = v68;
        swift_endAccess(v69);
        sub_10007B110(v36, v12);
      }

      else
      {
        id v39 = sub_10007B290(v12);
        __int128 v40 = v39;
        if (*((_BYTE *)v1 + v65) == 1)
        {
          unint64_t v41 = v61;
          uint64_t v42 = v62;
          unint64_t v43 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
          unint64_t v44 = v60;
          uint64_t v45 = v55;
          v43(v60, v55, v62);
          uint64_t v46 = v59;
          unint64_t v47 = v56;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 40))(v12, v42, v59);
          uint64_t v48 = *(void (**)(char *, uint64_t))(v41 + 8);
          v48(v44, v42);
          v43(v44, v45, v42);
          uint64_t v49 = *(void (**)(char *, uint64_t, void *, uint64_t, uint64_t))(v46 + 56);
          uint64_t v50 = v46;
          uint64_t v33 = v64;
          v49(v47, v12, v40, v42, v50);
          v48(v44, v42);
          uint64_t v34 = v63;
          uint64_t v51 = v40;
          sub_10007B110(v40, v12);

          id v52 = v47;
          Swift::String v14 = v54;
          (*(void (**)(char *, uint64_t))(v57 + 8))(v52, AssociatedTypeWitness);
        }

        else
        {
        }
      }

      ++v12;
    }

    while (v14 != v12);
    goto LABEL_29;
  }

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  *(void *)(v1 + v34) = v38;

  uint64_t v54 = *(void **)(v1 + v34);
  if (v54)
  {
    [v54 setContentHorizontalAlignment:0];
    id v55 = *(void **)(v1 + v34);
    if (v55)
    {
      uint64_t v56 = qword_1002DC7B0;
      BOOL v58 = v55;
      if (v56 != -1) {
        swift_once(&qword_1002DC7B0, sub_100071AAC);
      }
      unint64_t v59 = type metadata accessor for FontUseCase(0LL, v57);
      uint64_t v60 = sub_1000061F4(v59, (uint64_t)qword_1002EF360);
      uint64_t v61 = *(void *)(v59 - 8);
      uint64_t v62 = (uint64_t)v133;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v133, v60, v59);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v62, 0LL, 1LL, v59);
      id v63 = (uint64_t)&v58[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase];
      swift_beginAccess(&v58[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase], v146, 0LL, 0LL);
      uint64_t v64 = v134;
      sub_100014CFC(v63, v134);
      swift_beginAccess(v63, v141, 33LL, 0LL);
      sub_10000FF48(v62, v63);
      swift_endAccess(v141);
      sub_1001010C0(v64);
      sub_100006060(v62, &qword_1002DE930);
      sub_100006060(v64, &qword_1002DE930);

      uint64_t v2 = v135;
    }
  }

  uint64_t v51 = (void **)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_offerButton);
  id v52 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_offerButton);
  if (v52)
  {
    uint64_t v3 = v33;
LABEL_35:
    [v52 removeFromSuperview];
    uint64_t v53 = *v51;
    goto LABEL_36;
  }

  uint64_t v53 = 0LL;
  uint64_t v3 = v33;
LABEL_36:
  *uint64_t v51 = 0LL;

  v131 = OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_wordmarkView;
  uint64_t v65 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_wordmarkView);
  if (v65)
  {
    int v66 = (void *)v19[2];
    if (v66)
    {
      uint64_t v67 = v65;
      id v68 = v66;
    }

    else
    {
      char v69 = v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_detailBackgroundStyle;
      swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_detailBackgroundStyle, v145, 0LL, 0LL);
      uint64_t v70 = v132;
      (*((void (**)(char *, uint64_t, uint64_t))v3 + 2))(v132, v69, v2);
      uint64_t v71 = v65;
      id v68 = (void *)sub_1001F9DC8();
      (*((void (**)(char *, uint64_t))v3 + 1))(v70, v2);
      int v66 = 0LL;
    }

    uint64_t v72 = v66;
    [v65 setTintColor:v68];
  }

  int v73 = *(char **)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_badgeLabel);
  uint64_t v74 = (void *)v19[2];
  if (v74)
  {
    id v75 = (void *)v19[2];
  }

  else
  {
    char v76 = v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_detailBackgroundStyle;
    swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_detailBackgroundStyle, v144, 0LL, 0LL);
    uint64_t v77 = v132;
    (*((void (**)(char *, uint64_t, uint64_t))v3 + 2))(v132, v76, v2);
    id v75 = (void *)sub_1001F9DC8();
    (*((void (**)(char *, uint64_t))v3 + 1))(v77, v2);
    uint64_t v74 = 0LL;
  }

  id v78 = v74;
  [v73 setTextColor:v75];

  v136 = *(char **)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_titleLabel);
  uint64_t v79 = v1;
  uint64_t v80 = (void *)v19[3];
  if (v80)
  {
    uint64_t v81 = (id)v19[3];
  }

  else
  {
    v126 = v21;
    uint64_t v82 = v79 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_detailBackgroundStyle;
    swift_beginAccess(v79 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_detailBackgroundStyle, v143, 0LL, 0LL);
    uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))*((void *)v3 + 2);
    id v84 = v130;
    v83(v130, v82, v2);
    uint64_t v85 = v127;
    v83(v127, (uint64_t)v84, v2);
    uint64_t v86 = (*((uint64_t (**)(char *, uint64_t))v3 + 11))(v85, v2);
    if (v86 == enum case for BreakoutDetails.BackgroundStyle.material(_:)
      || v86 == enum case for BreakoutDetails.BackgroundStyle.dark(_:))
    {
      uint64_t v81 = [(id)objc_opt_self(UIColor) whiteColor];
      (*((void (**)(char *, uint64_t))v3 + 1))(v130, v2);
      uint64_t v21 = v126;
    }

    else
    {
      uint64_t v21 = v126;
      if (v86 != enum case for BreakoutDetails.BackgroundStyle.light(_:)) {
        goto LABEL_68;
      }
      uint64_t v81 = [(id)objc_opt_self(UIColor) blackColor];
      (*((void (**)(char *, uint64_t))v3 + 1))(v130, v2);
    }
  }

  uint64_t v87 = v80;
  [v136 setTextColor:v81];

  uint64_t v88 = v137;
  v89 = *(char **)(v137 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_descriptionLabel);
  id v90 = (void *)v19[4];
  if (v90)
  {
    uint64_t v91 = (void *)v19[4];
  }

  else
  {
    uint64_t v92 = v137 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_detailBackgroundStyle;
    swift_beginAccess(v137 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_detailBackgroundStyle, &v142, 0LL, 0LL);
    uint64_t v93 = v132;
    (*((void (**)(char *, uint64_t, uint64_t))v3 + 2))(v132, v92, v2);
    uint64_t v91 = (void *)sub_1001F9DD0();
    (*((void (**)(char *, uint64_t))v3 + 1))(v93, v2);
    id v90 = 0LL;
  }

  v132 = v3;
  v94 = v90;
  v130 = v89;
  [v89 setTextColor:v91];

  UIFontTextStyle v96 = *(void **)(v88 + v131);
  if (v96)
  {
    unsigned int v97 = *(void *)((char *)v19 + *(int *)(v21 + 52));
    v141[3] = &type metadata for CGFloat;
    v141[4] = &protocol witness table for CGFloat;
    v141[0] = v97;
    v98 = v96;
    WordmarkView.referenceLineHeight.setter(v141);
  }

  uint64_t v99 = (char *)v19 + *(int *)(v21 + 40);
  uint64_t v100 = type metadata accessor for FontUseCase(0LL, v95);
  uint64_t v101 = *(void *)(v100 - 8);
  uint64_t v102 = v21;
  objc_super v103 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  objc_super v104 = (uint64_t)v133;
  v103(v133, v99, v100);
  objc_super v105 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56);
  v105(v104, 0LL, 1LL, v100);
  unint64_t v106 = (uint64_t)&v73[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v73[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase], v141, 0LL, 0LL);
  v107 = (char *)v19;
  Swift::Int v108 = v134;
  sub_100014CFC(v106, v134);
  swift_beginAccess(v106, v140, 33LL, 0LL);
  sub_10000FF48(v104, v106);
  swift_endAccess(v140);
  sub_100013DC8(v108);
  sub_100006060(v104, &qword_1002DE930);
  sub_100006060(v108, &qword_1002DE930);
  v103((char *)v104, &v107[*(int *)(v102 + 44)], v100);
  v105(v104, 0LL, 1LL, v100);
  uint64_t v109 = &v136[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v136[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase], v140, 0LL, 0LL);
  sub_100014CFC((uint64_t)v109, v108);
  swift_beginAccess(v109, v139, 33LL, 0LL);
  sub_10000FF48(v104, (uint64_t)v109);
  swift_endAccess(v139);
  sub_100013DC8(v108);
  sub_100006060(v104, &qword_1002DE930);
  sub_100006060(v108, &qword_1002DE930);
  v103((char *)v104, &v107[*(int *)(v102 + 48)], v100);
  v105(v104, 0LL, 1LL, v100);
  Swift::Int v110 = (uint64_t)&v130[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v130[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase], v139, 0LL, 0LL);
  sub_100014CFC(v110, v108);
  swift_beginAccess(v110, v138, 33LL, 0LL);
  sub_10000FF48(v104, v110);
  swift_endAccess(v138);
  sub_100013DC8(v108);
  sub_100006060(v104, &qword_1002DE930);
  sub_100006060(v108, &qword_1002DE930);
  Swift::Int v111 = v137;
  v112 = *(void **)(v137 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_offerButton);
  if (v112)
  {
    uint64_t v113 = *(id *)(v137 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_offerButton);
    uint64_t v114 = v135;
    uint64_t v2 = (uint64_t)v132;
  }

  else
  {
    uint64_t v115 = *(void **)(v137 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_callToActionButton);
    uint64_t v114 = v135;
    uint64_t v2 = (uint64_t)v132;
    if (!v115) {
      return;
    }
    uint64_t v113 = v115;
  }

  uint64_t v116 = v111 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_detailBackgroundStyle;
  swift_beginAccess(v116, v138, 0LL, 0LL);
  uint64_t v117 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v118 = v129;
  v117(v129, v116, v114);
  v119 = v128;
  v117(v128, (uint64_t)v118, v114);
  v120 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v119, v114);
  v121 = 2LL;
  if (v120 != enum case for BreakoutDetails.BackgroundStyle.material(_:)
    && v120 != enum case for BreakoutDetails.BackgroundStyle.dark(_:))
  {
    if (v120 == enum case for BreakoutDetails.BackgroundStyle.light(_:))
    {
      v121 = 1LL;
      goto LABEL_64;
    }

    v124 = v112;
    _diagnoseUnexpectedEnumCase<A>(type:)(v114, v114);
    __break(1u);
LABEL_68:
    _diagnoseUnexpectedEnumCase<A>(type:)(v2, v2);
    __break(1u);
    return;
  }

  objc_msgSend( *(id *)&v16[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_summaryView],  "setHidden:",  v90,  v80.n128_f64[0]);
  uint64_t v113 = (char *)p_cache[434];
  [*(id *)&v113[(void)v16] setHidden:v90];
  uint64_t v114 = *(void **)&v16[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_noRatingsView];
  [v114 setHidden:v89];
  uint64_t v115 = [v159 snapshotPageTraitEnvironment];
  uint64_t v116 = *(void *)&v16[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_pageTraits];
  *(void *)&v16[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_pageTraits] = v115;
  swift_unknownObjectRetain(v115);
  objc_msgSend(v16, "setNeedsLayout", swift_unknownObjectRelease(v116).n128_f64[0]);
  swift_unknownObjectRelease(v115);
  uint64_t v117 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  inited = swift_initStackObject(v117, v165);
  *(_OWORD *)(inited + sub_10000620C(v0 + 16) = xmmword_1002339A0;
  v119 = *(void **)&v113[(void)v16];
  *(void *)(inited + 32) = v119;
  *(void *)(inited + 40) = v114;
  v166[0] = _swiftEmptyArrayStorage;
  v120 = v119;
  v121 = v114;
  v122 = [v120 isHidden];
  if ((v122 & 1) != 0)
  {
  }

  else
  {
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v122);
    v123 = *(void *)(v166[0] + 16LL);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v123);
    v124 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v123, v120);
    specialized ContiguousArray._endMutation()(v124);
  }

  v125 = v121;
  v126 = [v125 isHidden];
  if ((_DWORD)v126)
  {
    swift_release(inited);
  }

  else
  {
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v126);
    v127 = *(void *)(v166[0] + 16LL);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v127);
    v128 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v127, v125);
    specialized ContiguousArray._endMutation()(v128);
    swift_release(inited);
  }

  Swift::String v14 = v141;
  id v28 = v166[0];
  if ((v166[0] & 0x8000000000000000LL) != 0 || (v166[0] & 0x4000000000000000LL) != 0)
  {
LABEL_42:
    swift_bridgeObjectRetain(v28);
    v135 = _CocoaArrayWrapper.endIndex.getter(v134);
    swift_release(v28);
    if (v135) {
      goto LABEL_37;
    }
LABEL_43:
    v136 = swift_release(v28);
    (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v162, v140, v136);
    swift_unknownObjectRelease(v139);
    swift_release(v158);
    return;
  }

  if (!*(void *)(v166[0] + 16LL)) {
    goto LABEL_43;
  }
LABEL_37:
  if ((v28 & 0xC000000000000001LL) != 0)
  {
    v129 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v28);
    goto LABEL_40;
  }

  if (*(void *)(v28 + 16))
  {
    v129 = *(id *)(v28 + 32);
LABEL_40:
    v130 = v129;
    v131 = objc_msgSend(v16, "contentView", swift_release(v28).n128_f64[0]);
    v132 = v130;
    sub_10020DB30(v132, v131);
    swift_unknownObjectRelease(v139);

    v133 = swift_release(v158);
    (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v162, v140, v133);
    return;
  }

  __break(1u);
}

uint64_t sub_100009CA4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v7 = a3(a2);
    uint64_t result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_100009CE4(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_100009D20(void *a1)
{
  return a1;
}

void *sub_100009D54(void *a1)
{
  uint64_t v1 = a1;
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (void *)v2;
  }

  return v1;
}

uint64_t sub_100009D90(__int128 *a1, uint64_t a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + sub_10000620C(v0 + 16) = v3;
  return a2;
}

int64x2_t sub_100009DA8()
{
  int64x2_t result = vdupq_n_s64(0x4049000000000000uLL);
  xmmword_1002EE460 = (__int128)result;
  qword_1002EE470 = 0LL;
  unk_1002EE478 = 0LL;
  return result;
}

char *sub_100009DC4(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for CornerStyle(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  Swift::String v14 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  Swift::String v15 = &v5[OBJC_IVAR____TtC6Arcade32LargeStoryCardCollectionViewCell_itemLayoutContext];
  uint64_t v16 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  uint64_t v17 = OBJC_IVAR____TtC6Arcade32LargeStoryCardCollectionViewCell_detailsView;
  uint64_t v18 = type metadata accessor for ArticleCardTextView(0LL);
  id v19 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18));
  uint64_t v20 = v5;
  *(void *)&v5[v17] = [v19 init];
  *(void *)&v20[OBJC_IVAR____TtC6Arcade32LargeStoryCardCollectionViewCell_mediaView] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for StoryCardMediaView()),  "initWithFrame:",  a1,  a2,  a3,  a4);

  v55.receiver = v20;
  v55.super_class = ObjectType;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v55, "initWithFrame:", a1, a2, a3, a4);
  id v22 = [v21 contentView];
  [v22 setClipsToBounds:1];

  (*(void (**)(_BYTE *, void, uint64_t))(v12 + 104))(v14, enum case for CornerStyle.continuous(_:), v11);
  id v23 = [v21 contentView];
  CornerStyle.apply(withRadius:to:)(v23, 12.0);

  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v24 = &v21[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  __int128 v25 = *(_OWORD *)&v21[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
  v61[0] = *(_OWORD *)&v21[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  v61[1] = v25;
  char v62 = v21[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)uint64_t v24 = 0x4020000000000000LL;
  *((void *)v24 + 1) = 0x4039000000000000LL;
  v24[16] = 0;
  *((void *)v24 + 3) = 0LL;
  v24[32] = 1;
  uint64_t v26 = v21;
  sub_1000690F4((uint64_t)v61, v27, v28);

  v56[0] = xmmword_100233760;
  v56[1] = xmmword_100233770;
  char v57 = 0;
  uint64_t v58 = 0LL;
  uint64_t v59 = 0LL;
  char v60 = 1;
  float v29 = v26;
  sub_10006779C(v56);

  float v30 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  double v31 = v29;
  id v32 = [v30 blackColor];
  id v33 = [v32 CGColor];

  uint64_t v34 = &v31[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  id v35 = *(void **)&v31[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  double v36 = *(void **)&v31[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
  uint64_t v37 = *(void **)&v31[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
  *(void *)uint64_t v34 = v33;
  *(int64x2_t *)(v34 + 8) = vdupq_n_s64(1uLL);
  id v38 = v35;
  sub_10000AAF8(v36);
  sub_10000AAF8(v37);
  id v39 = v33;

  sub_10000AB08(v36);
  sub_10000AB08(v37);
  sub_100069248(v35, v36, (unint64_t)v37);

  sub_10000AB08(v36);
  sub_10000AB08(v37);

  __int128 v40 = &v31[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(a4) = *(_DWORD *)&v31[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v39) = *(_DWORD *)&v31[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v36) = v31[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v37) = v31[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)__int128 v40 = 1048576000;
  *((_DWORD *)v40 + 1) = 1051931443;
  v40[8] = 0;
  uint64_t v41 = *((unsigned int *)v40 + 3);
  *((_DWORD *)v40 + 3) = 0;
  v40[16] = 1;
  uint64_t v42 = v31;
  LOBYTE(v54[0]) = (_BYTE)v36;
  v53[0] = (_BYTE)v37;
  v43.n128_u32[0] = LODWORD(a4);
  sub_1000693B0((int)v39, v36 | (unint64_t)(v41 << 32), (char)v37, v43);

  char v44 = v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
  v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v44 & 1) == 0)
  {
    char v45 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v42) + 0x98LL))();
    uint64_t v46 = v42;
    sub_1000678F0(v45);
  }

  id v47 = [v42 contentView];
  [v47 addSubview:*(void *)&v42[OBJC_IVAR____TtC6Arcade32LargeStoryCardCollectionViewCell_mediaView]];

  uint64_t v48 = OBJC_IVAR____TtC6Arcade32LargeStoryCardCollectionViewCell_detailsView;
  uint64_t v49 = *(char **)&v42[OBJC_IVAR____TtC6Arcade32LargeStoryCardCollectionViewCell_detailsView];
  if (qword_1002DCCE0 != -1) {
    swift_once(&qword_1002DCCE0, sub_1001371E8);
  }
  sub_10000AA88(xmmword_1002F0960, v54);
  uint64_t v50 = &v49[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_layoutMetrics];
  swift_beginAccess(&v49[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_layoutMetrics], v53, 33LL, 0LL);
  sub_10000AB18(v54, v50);
  swift_endAccess(v53);
  [v49 setNeedsLayout];
  sub_10000AB54(v54);
  id v51 = [v42 contentView];
  [v51 addSubview:*(void *)&v42[v48]];

  [v42 _setSpeedBumpEdges:10];
  return v42;
}

id sub_10000A2FC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  v39.receiver = v1;
  v39.super_class = ObjectType;
  objc_msgSendSuper2(&v39, "layoutSubviews");
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC6Arcade32LargeStoryCardCollectionViewCell_mediaView];
  [v1 bounds];
  objc_msgSend(v7, "setFrame:");
  id v8 = [v1 contentView];
  [v8 frame];

  *(void *)&double v9 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  if (qword_1002DC2F8 != -1) {
    swift_once(&qword_1002DC2F8, sub_100009DA8);
  }
  sub_10000AA6C(v9, v11, v13, v15, *(double *)&xmmword_1002EE460, *((double *)&xmmword_1002EE460 + 1));
  double v17 = v16;
  uint64_t v18 = *(char **)&v1[OBJC_IVAR____TtC6Arcade32LargeStoryCardCollectionViewCell_detailsView];
  id v19 = &v18[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_layoutMetrics];
  swift_beginAccess(&v18[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_layoutMetrics], v28, 0LL, 0LL);
  sub_10000AA88(v19, v38);
  uint64_t v20 = *(void **)&v18[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_headingLabel];
  uint64_t v30 = type metadata accessor for DynamicTypeLabel(0LL);
  double v31 = &protocol witness table for UILabel;
  float v29 = v20;
  uint64_t v21 = *(void **)&v18[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_titleLabel];
  uint64_t v33 = v30;
  uint64_t v34 = &protocol witness table for UILabel;
  id v32 = v21;
  id v22 = *(void **)&v18[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_descriptionLabel];
  uint64_t v36 = v30;
  uint64_t v37 = &protocol witness table for UILabel;
  id v35 = v22;
  id v23 = v20;
  id v24 = v21;
  id v25 = v22;
  sub_1001F1354((uint64_t)v6);
  _VerticalFlowLayout.measurements(fitting:in:)(v1, 440.0, v17);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  sub_10000AAC4(&v29);
  id v26 = [v1 contentView];
  [v26 frame];

  CGRect.subtracting(insets:)([v1 layoutMargins]);
  CGRect.withLayoutDirection(in:relativeTo:)(v1);
  return objc_msgSend(v18, "setFrame:");
}

id sub_10000A63C()
{
  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v3, "prepareForReuse");
  ArtworkView.image.setter(0LL);
  ArtworkView.backgroundColor.setter(0LL);
  sub_1001B2138();
  sub_1001B791C(0LL);
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC6Arcade32LargeStoryCardCollectionViewCell_detailsView];
  [*(id *)(v1 + OBJC_IVAR____TtC6Arcade19ArticleCardTextView_headingLabel) setText:0];
  [*(id *)(v1 + OBJC_IVAR____TtC6Arcade19ArticleCardTextView_titleLabel) setText:0];
  return [*(id *)(v1 + OBJC_IVAR____TtC6Arcade19ArticleCardTextView_descriptionLabel) setText:0];
}

void sub_10000A768(char a1)
{
  __int128 v2 = v1;
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v8 = [v2 contentView];
  if (qword_1002DCF98 != -1) {
    swift_once(&qword_1002DCF98, sub_100175DEC);
  }
  uint64_t v9 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  sub_1000061F4(v9, (uint64_t)qword_1002F12B0);
  sub_1001AB114(a1, (uint64_t)v7);
  double v11 = v2;
  Conditional.evaluate(with:)(&v12, &v11, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  double v10 = v12;
  [v8 setBackgroundColor:v12];
}

void sub_10000A894()
{
}

uint64_t sub_10000A918()
{
  return type metadata accessor for LargeStoryCardCollectionViewCell(0LL);
}

uint64_t type metadata accessor for LargeStoryCardCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DDB48;
  if (!qword_1002DDB48) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LargeStoryCardCollectionViewCell);
  }
  return result;
}

void sub_10000A95C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 472);
  }

void sub_10000A9D8(uint64_t a1)
{
  if (!qword_1002DE900)
  {
    uint64_t v2 = type metadata accessor for ItemLayoutContext(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1002DE900);
    }
  }

uint64_t sub_10000AA2C(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002DDB60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

double sub_10000AA6C(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

_OWORD *sub_10000AA88(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

void *sub_10000AAC4(void *a1)
{
  return a1;
}

id sub_10000AAF8(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_10000AB08(id a1)
{
  if (a1 != (id)1) {
}
  }

void *sub_10000AB18(void *a1, void *a2)
{
  return a2;
}

void *sub_10000AB54(void *a1)
{
  return a1;
}

double sub_10000AB88()
{
  if (qword_1002DC310 != -1) {
    swift_once(&qword_1002DC310, sub_10000AC3C);
  }
  qword_1002DDB80 = qword_1002DDBC0;
  double result = -200.0;
  *(_OWORD *)algn_1002DDB88 = xmmword_1002337C0;
  qword_1002DDB98 = 0xC069000000000000LL;
  return result;
}

double sub_10000ABE8()
{
  if (qword_1002DC310 != -1) {
    swift_once(&qword_1002DC310, sub_10000AC3C);
  }
  double result = *(double *)&qword_1002DDBC0;
  qword_1002DDBA0 = qword_1002DDBC0;
  qword_1002DDBB0 = 0LL;
  qword_1002DDBB8 = 0LL;
  qword_1002DDBA8 = 0LL;
  return result;
}

void sub_10000AC3C()
{
  qword_1002DDBC0 = 0x403E000000000000LL;
}

char *sub_10000AC4C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  *(void *)&v2[OBJC_IVAR____TtC6Arcade23PurchasesViewController_pageTraits] = 0LL;
  uint64_t v5 = &v2[OBJC_IVAR____TtC6Arcade23PurchasesViewController_pageTitle];
  *(void *)uint64_t v5 = 0LL;
  *((void *)v5 + 1) = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController] = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC6Arcade23PurchasesViewController_objectGraph] = a2;
  *(void *)&v2[OBJC_IVAR____TtC6Arcade23PurchasesViewController_presenter] = a1;
  id v6 = objc_allocWithZone(&OBJC_CLASS___UICollectionViewLayout);
  uint64_t v7 = v2;
  swift_retain(a2);
  swift_retain(a1);
  id v8 = [v6 init];
  id v9 = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for MasterCollectionView()),  "initWithFrame:collectionViewLayout:",  v8,  0.0,  0.0,  0.0,  0.0);

  *(void *)&v7[OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionView] = v9;
  double v10 = (objc_class *)type metadata accessor for PurchasesMasterCollectionDelegate();
  double v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR____TtC6Arcade33PurchasesMasterCollectionDelegate_showDetailsWorkItem] = 0LL;
  *(void *)&v11[OBJC_IVAR____TtC6Arcade33PurchasesMasterCollectionDelegate_showDetailsCoalescingWaitTime] = 0x3FC999999999999ALL;
  *(void *)&v11[OBJC_IVAR____TtC6Arcade33PurchasesMasterCollectionDelegate_presenter] = a1;
  v39.receiver = v11;
  v39.super_class = v10;
  swift_retain(a1);
  *(void *)&v7[OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionDelegate] = objc_msgSendSuper2( &v39,  "init");
  uint64_t v12 = type metadata accessor for TitleHeaderView(0LL);
  *(void *)&v7[OBJC_IVAR____TtC6Arcade23PurchasesViewController_titleHeaderView] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)) init];
  uint64_t v13 = type metadata accessor for TVPurchasesDetailsPresenter(0LL);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  uint64_t v14 = swift_retain(a2);
  uint64_t v15 = TVPurchasesDetailsPresenter.init(objectGraph:impressionsTracker:impressionsCalculator:)(v14, 0LL, 0LL, 0LL);
  *(void *)&v7[OBJC_IVAR____TtC6Arcade23PurchasesViewController_detailsPresenter] = v15;
  id v16 = [objc_allocWithZone((Class)type metadata accessor for CollectionViewTableFlowLayout()) init];
  uint64_t v17 = type metadata accessor for PurchasesDataSource(0LL);
  swift_allocObject(v17, 104LL, 7LL);
  uint64_t v18 = swift_retain_n(v15, 2LL);
  uint64_t v19 = sub_100201BD8(v18);
  uint64_t v20 = sub_100009CA4( &qword_1002DE0C0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for TVPurchasesDetailsPresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
  swift_retain(v15);
  uint64_t v21 = sub_10015F498(a2, v15, v20, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000013LL, 0x8000000100243C80LL);
  swift_release(v15);
  id v22 = objc_allocWithZone((Class)type metadata accessor for PurchasesDetailsViewController(0LL));
  swift_retain(v15);
  id v23 = v16;
  swift_retain(v19);
  swift_retain(v21);
  id v24 = sub_1002016E0(v23, v15, v19, v21);
  uint64_t v25 = sub_100009CA4( &qword_1002DE0C8,  255LL,  type metadata accessor for PurchasesDetailsViewController,  (uint64_t)&unk_100242EA8);
  id v26 = v24;
  dispatch thunk of TVPurchasesDetailsPresenter.view.setter(v24, v25);

  swift_release(v15);
  swift_release(v19);
  swift_release(v21);
  *(void *)&v7[OBJC_IVAR____TtC6Arcade23PurchasesViewController_detailViewController] = v26;

  v38.receiver = v7;
  v38.super_class = ObjectType;
  __n128 v27 = (char *)objc_msgSendSuper2(&v38, "initWithNibName:bundle:", 0, 0);
  __n128 v28 = *(void **)&v27[OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionDelegate];
  float v29 = *(void **)&v27[OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionView];
  uint64_t v30 = v27;
  id v31 = v28;
  id v32 = v29;
  sub_100047544(v32);

  uint64_t v34 = sub_100009CA4( (unint64_t *)&unk_1002DE0D0,  v33,  (uint64_t (*)(uint64_t))type metadata accessor for PurchasesViewController,  (uint64_t)&unk_1002338C8);
  id v35 = v30;
  TVPurchasesPagePresenter.view.setter(v30, v34);

  swift_release(a1);
  swift_release(a2);
  return v35;
}

void sub_10000B0C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = &v2[OBJC_IVAR____TtC6Arcade23PurchasesViewController_pageTitle];
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC6Arcade23PurchasesViewController_pageTitle + 8];
  *(void *)unint64_t v3 = a1;
  *((void *)v3 + 1) = a2;
  swift_bridgeObjectRelease(v4);
  uint64_t v5 = *(void **)(*(void *)&v2[OBJC_IVAR____TtC6Arcade23PurchasesViewController_titleHeaderView]
                + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
  uint64_t v6 = *((void *)v3 + 1);
  id v7 = v5;
  if (v6)
  {
    swift_bridgeObjectRetain(v6);
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }

  else
  {
    NSString v8 = 0LL;
  }

  [v5 setText:v8];

  id v9 = [v2 view];
  if (v9)
  {
    id v10 = v9;
    [v9 setNeedsLayout];
  }

  else
  {
    __break(1u);
  }

void sub_10000B1B4()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for TitleHeaderView.Style(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v30.receiver = v1;
  v30.super_class = ObjectType;
  objc_msgSendSuper2(&v30, "viewDidLoad");
  id v6 = [v1 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_13;
  }

  id v7 = v6;
  [v6 setInsetsLayoutMarginsFromSafeArea:0];

  id v8 = [v1 view];
  if (!v8)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  id v9 = v8;
  [v8 _setSafeAreaInsetsFrozen:1];

  id v10 = [v1 view];
  if (!v10)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  double v11 = v10;
  objc_msgSend( v10,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionView];
  id v13 = [(id)objc_opt_self(UIColor) clearColor];
  [v12 setBackgroundColor:v13];

  [v12 setContentInsetAdjustmentBehavior:2];
  [v12 setClipsToBounds:0];
  id v14 = [v1 view];
  if (!v14)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v15 = v14;
  [v14 addSubview:v12];

  TVPurchasesPagePresenter.didLoad()();
  id v16 = *(void **)&v1[OBJC_IVAR____TtC6Arcade23PurchasesViewController_titleHeaderView];
  if (qword_1002DCEE8 != -1) {
    swift_once(&qword_1002DCEE8, sub_1001692DC);
  }
  uint64_t v17 = sub_1000061F4(v3, (uint64_t)qword_1002F10C0);
  sub_10000D57C(v17, (uint64_t)v5);
  (*(void (**)(char *))((swift_isaMask & *v16) + 0x190LL))(v5);
  [v1 pageMarginInsets];
  objc_msgSend(v16, "setLayoutMargins:");
  uint64_t v18 = *(void **)((char *)v16 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
  [v18 setNumberOfLines:2];
  [v18 setAllowsDefaultTighteningForTruncation:1];
  id v19 = [v1 view];
  if (!v19) {
    goto LABEL_16;
  }
  uint64_t v20 = v19;
  [v19 addSubview:v16];

  uint64_t v21 = TVPurchasesPagePresenter.pageTitle.getter();
  sub_10000B0C8(v21, v22);
  uint64_t v23 = OBJC_IVAR____TtC6Arcade23PurchasesViewController_detailViewController;
  [*(id *)&v1[OBJC_IVAR____TtC6Arcade23PurchasesViewController_detailViewController] willMoveToParentViewController:v1];
  [v1 addChildViewController:*(void *)&v1[v23]];
  id v24 = [v1 view];
  if (!v24)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v25 = v24;
  id v26 = [*(id *)&v1[v23] view];
  if (!v26)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  __n128 v27 = v26;
  [v25 insertSubview:v26 atIndex:0];

  [*(id *)&v1[v23] didMoveToParentViewController:v1];
  id v28 = [v1 view];
  if (v28)
  {
    float v29 = v28;
    [v28 setNeedsLayout];

    return;
  }

LABEL_19:
  __break(1u);
}

  _s6Arcade17PillOverlayLayoutVwxx_0(&v143);
  objc_super v105 = (void *)IndexPath._bridgeToObjectiveC()();
  [v26 deselectRowAtIndexPath:v105 animated:1];

  return _s6Arcade17PillOverlayLayoutVwxx_0(&v144);
}

    uint64_t v22 = (v27 - 1) & v27;
    uint64_t v25 = __clz(__rbit64(v27)) + (v28 << 6);
    uint64_t v21 = v28;
LABEL_20:
    objc_super v30 = *(void *)(*(void *)(v20 + 48) + 8 * v25);
    if (*((_BYTE *)v1 + v66) == 1 || v30 < v12 || v30 >= v14) {
      sub_10007AF38(v30);
    }
  }

  float v29 = v21 + 6;
  while (v23 != v29)
  {
    __n128 v27 = *(void *)(v19 + 8 * v29++);
    if (v27)
    {
      id v28 = v29 - 1;
      goto LABEL_19;
    }
  }

                  __break(1u);
                  goto LABEL_20;
                }

  id v6 = v7;
LABEL_39:
  uint64_t v23 = v14 - v4 + (v14 - v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= &v4[v23 & 0xFFFFFFFFFFFFFFF8LL]) {
    memmove(v6, v4, 8 * (v23 >> 3));
  }
  return 1LL;
}

  uint64_t v33 = v49;
  left = UIEdgeInsetsZero.left;
  right = UIEdgeInsetsZero.right;
  v25(v49, v22, v14);
  sub_10001F010((uint64_t)v57, (uint64_t)v56);
  sub_100006028(0LL, (unint64_t *)&qword_1002E0470, &OBJC_CLASS___UIFont_ptr);
  if (qword_1002DC758 != -1) {
    swift_once(&qword_1002DC758, sub_100071994);
  }
  uint64_t v37 = type metadata accessor for FontUseCase(0LL, v36);
  objc_super v38 = sub_1000061F4(v37, (uint64_t)qword_1002EF258);
  objc_super v39 = [v27 traitCollection];
  __int128 v40 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v38, v39);

  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16LL))(v9, v38, v37);
  uint64_t v41 = v51;
  uint64_t v42 = v50;
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v9, enum case for FontSource.useCase(_:), v50);
  v55[3] = type metadata accessor for StaticDimension(0LL);
  v55[4] = &protocol witness table for StaticDimension;
  sub_100009D54(v55);
  v54[3] = v42;
  v54[4] = &protocol witness table for FontSource;
  __n128 v43 = sub_100009D54(v54);
  (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v43, v9, v42);
  StaticDimension.init(_:scaledLike:)(v54, 14.0);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v42);
  MixedMediaLockupLayout.Metrics.init(lockupPosition:taglineNumberOfLines:taglineSpace:taglineFont:alwaysIncludeTaglineSpace:verticalSpacing:layoutMargins:)( v33,  1LL,  v56,  v40,  v52 & 1,  v55,  top,  left,  bottom,  right);
  _s6Arcade17PillOverlayLayoutVwxx_0(v57);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v22, v14);
}

        __break(1u);
        return;
      }

      uint64_t v61 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v12);
      static JULoadingViewController.PresentationContext.placeholder.getter(v61);
      char v62 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
      id v63 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v6, v61);
      uint64_t v64 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
      uint64_t v65 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
      int v66 = v65;
      static ViewControllerContainment.remove(_:)(v65);

      uint64_t v67 = *(void **)&v2[v64];
      *(void *)&v2[v64] = v63;
      id v68 = v63;

      char v69 = *(void **)&v2[v64];
      uint64_t v70 = v69;
      uint64_t v71 = [v2 view];
      if (v71)
      {
        uint64_t v72 = v71;
        [v71 bounds];
        uint64_t v74 = v73;
        char v76 = v75;
        id v78 = v77;
        uint64_t v80 = v79;

        v98 = v74;
        uint64_t v99 = v76;
        uint64_t v100 = v78;
        uint64_t v101 = v80;
        uint64_t v102 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v69, v2, &v98);

        return;
      }

        __break(1u);
        return;
      }

      uint64_t v61 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v12);
      static JULoadingViewController.PresentationContext.placeholder.getter(v61);
      char v62 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
      id v63 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v6, v61);
      uint64_t v64 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
      uint64_t v65 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
      int v66 = v65;
      static ViewControllerContainment.remove(_:)(v65);

      uint64_t v67 = *(void **)&v2[v64];
      *(void *)&v2[v64] = v63;
      id v68 = v63;

      char v69 = *(void **)&v2[v64];
      uint64_t v70 = v69;
      uint64_t v71 = [v2 view];
      if (v71)
      {
        uint64_t v72 = v71;
        [v71 bounds];
        uint64_t v74 = v73;
        char v76 = v75;
        id v78 = v77;
        uint64_t v80 = v79;

        v98 = v74;
        uint64_t v99 = v76;
        uint64_t v100 = v78;
        uint64_t v101 = v80;
        uint64_t v102 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v69, v2, &v98);

        return;
      }

        __break(1u);
        return;
      }

      uint64_t v61 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v12);
      static JULoadingViewController.PresentationContext.placeholder.getter(v61);
      char v62 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
      id v63 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v6, v61);
      uint64_t v64 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
      uint64_t v65 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
      int v66 = v65;
      static ViewControllerContainment.remove(_:)(v65);

      uint64_t v67 = *(void **)&v2[v64];
      *(void *)&v2[v64] = v63;
      id v68 = v63;

      char v69 = *(void **)&v2[v64];
      uint64_t v70 = v69;
      uint64_t v71 = [v2 view];
      if (v71)
      {
        uint64_t v72 = v71;
        [v71 bounds];
        uint64_t v74 = v73;
        char v76 = v75;
        id v78 = v77;
        uint64_t v80 = v79;

        v98 = v74;
        uint64_t v99 = v76;
        uint64_t v100 = v78;
        uint64_t v101 = v80;
        uint64_t v102 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v69, v2, &v98);

        return;
      }

        __break(1u);
        return;
      }

      uint64_t v61 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v12);
      static JULoadingViewController.PresentationContext.placeholder.getter(v61);
      char v62 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
      id v63 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v6, v61);
      uint64_t v64 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
      uint64_t v65 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
      int v66 = v65;
      static ViewControllerContainment.remove(_:)(v65);

      uint64_t v67 = *(void **)&v2[v64];
      *(void *)&v2[v64] = v63;
      id v68 = v63;

      char v69 = *(void **)&v2[v64];
      uint64_t v70 = v69;
      uint64_t v71 = [v2 view];
      if (v71)
      {
        uint64_t v72 = v71;
        [v71 bounds];
        uint64_t v74 = v73;
        char v76 = v75;
        id v78 = v77;
        uint64_t v80 = v79;

        v98 = v74;
        uint64_t v99 = v76;
        uint64_t v100 = v78;
        uint64_t v101 = v80;
        uint64_t v102 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v69, v2, &v98);

        return;
      }

        __break(1u);
        return;
      }

      uint64_t v61 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v12);
      static JULoadingViewController.PresentationContext.placeholder.getter(v61);
      char v62 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
      id v63 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v6, v61);
      uint64_t v64 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
      uint64_t v65 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
      int v66 = v65;
      static ViewControllerContainment.remove(_:)(v65);

      uint64_t v67 = *(void **)&v2[v64];
      *(void *)&v2[v64] = v63;
      id v68 = v63;

      char v69 = *(void **)&v2[v64];
      uint64_t v70 = v69;
      uint64_t v71 = [v2 view];
      if (v71)
      {
        uint64_t v72 = v71;
        [v71 bounds];
        uint64_t v74 = v73;
        char v76 = v75;
        id v78 = v77;
        uint64_t v80 = v79;

        v98 = v74;
        uint64_t v99 = v76;
        uint64_t v100 = v78;
        uint64_t v101 = v80;
        uint64_t v102 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v69, v2, &v98);

        return;
      }

        __break(1u);
        return;
      }

      uint64_t v61 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v12);
      static JULoadingViewController.PresentationContext.placeholder.getter(v61);
      char v62 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
      id v63 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v6, v61);
      uint64_t v64 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
      uint64_t v65 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
      int v66 = v65;
      static ViewControllerContainment.remove(_:)(v65);

      uint64_t v67 = *(void **)&v2[v64];
      *(void *)&v2[v64] = v63;
      id v68 = v63;

      char v69 = *(void **)&v2[v64];
      uint64_t v70 = v69;
      uint64_t v71 = [v2 view];
      if (v71)
      {
        uint64_t v72 = v71;
        [v71 bounds];
        uint64_t v74 = v73;
        char v76 = v75;
        id v78 = v77;
        uint64_t v80 = v79;

        v98 = v74;
        uint64_t v99 = v76;
        uint64_t v100 = v78;
        uint64_t v101 = v80;
        uint64_t v102 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v69, v2, &v98);

        return;
      }

          objc_super v39 = 0;
LABEL_20:
          __int128 v40 = *(void (**)(char *, uint64_t))(v13 + 8);
          v40(v18, v12);
          uint64_t v41 = v62;
          uint64_t v42 = ((uint64_t (*)(char *, uint64_t, uint64_t))v36)(v62, a2, v12);
          if ((v39 & 1) != 0)
          {
            IndexPath.section.getter(v42);
            __n128 v43 = *(void *)(v28 + 608);
            char v44 = *(void *)(v28 + 632);
            char v45 = v60;
            dispatch thunk of ShelfPresenter.contentType(for:)(v46, v43, v44);
            id v47 = v59;
            uint64_t v48 = v61;
            (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v59, v45, v61);
            uint64_t v49 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v47, v48);
            uint64_t v50 = *(void (**)(char *, uint64_t))(v8 + 8);
            if (v49 != enum case for Shelf.ContentType.artwork(_:)
              && v49 != enum case for Shelf.ContentType.paragraph(_:)
              && v49 != enum case for Shelf.ContentType.footnote(_:)
              && v49 != enum case for Shelf.ContentType.titledParagraph(_:)
              && v49 != enum case for Shelf.ContentType.reviewsContainer(_:)
              && v49 != enum case for Shelf.ContentType.editorialLink(_:)
              && v49 != enum case for Shelf.ContentType.quote(_:)
              && v49 != enum case for Shelf.ContentType.framedArtwork(_:)
              && v49 != enum case for Shelf.ContentType.screenshots(_:)
              && v49 != enum case for Shelf.ContentType.appShowcase(_:)
              && v49 != enum case for Shelf.ContentType.inAppPurchaseShowcase(_:)
              && v49 != enum case for Shelf.ContentType.framedVideo(_:)
              && v49 != enum case for Shelf.ContentType.productDescription(_:)
              && v49 != enum case for Shelf.ContentType.banner(_:)
              && v49 != enum case for Shelf.ContentType.roundedButton(_:)
              && v49 != enum case for Shelf.ContentType.titledButtonStack(_:)
              && v49 != enum case for Shelf.ContentType.largeStoryCard(_:)
              && v49 != enum case for Shelf.ContentType.personalizationFeedbackContainer(_:)
              && v49 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
              && v49 != enum case for Shelf.ContentType.upsellBreakout(_:)
              && v49 != enum case for Shelf.ContentType.smallBreakout(_:)
              && v49 != enum case for Shelf.ContentType.arcadeFooter(_:)
              && v49 != enum case for Shelf.ContentType.gameCenterReengagement(_:)
              && v49 != enum case for Shelf.ContentType.privacyHeader(_:)
              && v49 != enum case for Shelf.ContentType.privacyFooter(_:)
              && v49 != enum case for Shelf.ContentType.privacyCategory(_:)
              && v49 != enum case for Shelf.ContentType.privacyDefinition(_:)
              && v49 != enum case for Shelf.ContentType.heroCarousel(_:))
            {
              v50(v47, v48);
              v50(v45, v48);
              v40(v62, v12);
              id v51 = [v3 collectionView];
              if (v51)
              {
                id v52 = v51;
                uint64_t v53 = v56;
                uint64_t v54 = swift_getObjectType(v56);
                sub_1000DCFB0(v53, v52, v54, v57);
LABEL_53:

                return;
              }

              goto LABEL_56;
            }

            v50(v45, v48);
            uint64_t v41 = v62;
          }

          v40(v41, v12);
          objc_super v55 = swift_getObjectType(v56);
          id v52 = (void *)(*(uint64_t (**)(uint64_t))(v57 + 8))(v55);
          [v52 setEnabled:0];
          goto LABEL_53;
        }

        __break(1u);
      }

      __break(1u);
LABEL_56:
      __break(1u);
      return;
    }
  }
}

void sub_10000B5B4()
{
  v95.receiver = v0;
  v95.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v95, "viewDidLayoutSubviews");
  uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_pageTitle + 8];
  if (v2)
  {
    uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_pageTitle];
    swift_bridgeObjectRetain(*(void *)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_pageTitle + 8]);
    id v4 = [v0 view];
    if (!v4)
    {
LABEL_33:
      __break(1u);
      return;
    }

    uint64_t v5 = v4;
    [v4 frame];
    double v7 = v6;
    double v9 = v8;

    if (qword_1002DCEE8 != -1) {
      swift_once(&qword_1002DCEE8, sub_1001692DC);
    }
    uint64_t v10 = type metadata accessor for TitleHeaderView.Style(0LL);
    uint64_t v11 = sub_1000061F4(v10, (uint64_t)qword_1002F10C0);
    [v0 pageMarginInsets];
    sub_100204774(0LL, 0LL, 0LL, v3, v2, 0LL, 0LL, 0LL, v7, v9, 0.0, 0.0, v12, v13, v14, v15, 2LL, v11, v0);
    *(void *)&double v1 = swift_bridgeObjectRelease(v2).n128_u64[0];
  }

  id v16 = *(void **)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_titleHeaderView];
  id v17 = objc_msgSend(v0, "view", v1);
  if (!v17)
  {
    __break(1u);
    goto LABEL_25;
  }

  uint64_t v18 = v17;
  [v17 frame];
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;

  v96.origin.x = v20;
  v96.origin.y = v22;
  v96.size.width = v24;
  v96.size.height = v26;
  CGRectGetMinX(v96);
  id v27 = [v0 view];
  if (!v27)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }

  id v28 = v27;
  [v27 frame];
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;

  v97.origin.x = v30;
  v97.origin.y = v32;
  v97.size.width = v34;
  v97.size.height = v36;
  CGRectGetWidth(v97);
  id v37 = [v0 view];
  if (!v37)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }

  objc_super v38 = v37;
  [v37 frame];

  CGRect.withLayoutDirection(in:relativeTo:)(v0);
  objc_msgSend(v16, "setFrame:");
  if (qword_1002DC300 != -1) {
    swift_once(&qword_1002DC300, sub_10000AB88);
  }
  double v39 = *(double *)&qword_1002DDB80;
  double v93 = *(double *)&qword_1002DDB90;
  double v94 = *(double *)algn_1002DDB88;
  double v92 = *(double *)&qword_1002DDB98;
  if (qword_1002DC308 != -1) {
    swift_once(&qword_1002DC308, sub_10000ABE8);
  }
  double v90 = *(double *)&qword_1002DDBA8;
  double v91 = *(double *)&qword_1002DDBA0;
  double v88 = *(double *)&qword_1002DDBB8;
  double v89 = *(double *)&qword_1002DDBB0;
  if (qword_1002DC310 != -1) {
    swift_once(&qword_1002DC310, sub_10000AC3C);
  }
  double v87 = *(double *)&qword_1002DDBC0;
  [v16 frame];
  double MaxY = CGRectGetMaxY(v98);
  id v41 = [v0 view];
  if (!v41) {
    goto LABEL_27;
  }
  uint64_t v42 = v41;
  [v41 frame];
  CGFloat v44 = v43;
  CGFloat v46 = v45;
  CGFloat v48 = v47;
  CGFloat v50 = v49;

  v99.origin.x = v44;
  v99.origin.y = v46;
  v99.size.width = v48;
  v99.size.height = v50;
  double Height = CGRectGetHeight(v99);
  [v16 frame];
  double v52 = CGRectGetMaxY(v100);
  id v53 = [v0 view];
  if (!v53)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }

  uint64_t v54 = v53;
  double v86 = v39;
  [v53 frame];
  CGFloat v56 = v55;
  CGFloat v58 = v57;
  CGFloat v60 = v59;
  CGFloat v62 = v61;

  v101.origin.x = v56;
  v101.origin.y = v58;
  v101.size.width = v60;
  v101.size.height = v62;
  CGFloat MinX = CGRectGetMinX(v101);
  uint64_t v64 = *(void **)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionView];
  id v65 = [v0 view];
  if (!v65)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  int v66 = v65;
  double v67 = MaxY - v87;
  double v68 = v87 + Height - v52;
  [v65 frame];

  CGRect.withLayoutDirection(in:relativeTo:)(v0);
  objc_msgSend(v64, "setFrame:");
  [v0 pageMarginInsets];
  [v64 setContentInset:v87];
  objc_msgSend(v64, "_setGradientMaskLengths:", v39, v94, v93, v92);
  objc_msgSend(v64, "_setGradientMaskEdgeInsets:", v91, v90, v89, v88);
  uint64_t v69 = OBJC_IVAR____TtC6Arcade23PurchasesViewController_detailViewController;
  id v70 = [*(id *)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_detailViewController] view];
  if (!v70)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }

  uint64_t v71 = v70;
  v102.origin.x = MinX;
  v102.origin.y = v67;
  v102.size.width = 530.0;
  v102.size.height = v68;
  CGRectGetMaxX(v102);
  id v72 = [v0 view];
  if (!v72)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }

  int v73 = v72;
  [v72 frame];
  CGFloat v75 = v74;
  CGFloat v77 = v76;
  CGFloat v79 = v78;
  CGFloat v81 = v80;

  v103.origin.x = v75;
  v103.origin.y = v77;
  v103.size.width = v79;
  v103.size.height = v81;
  CGRectGetWidth(v103);
  v104.origin.x = MinX;
  v104.origin.y = v67;
  v104.size.width = 530.0;
  v104.size.height = v68;
  CGRectGetWidth(v104);
  id v82 = [v0 view];
  if (!v82)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }

  uint64_t v83 = v82;
  [v82 frame];

  CGRect.withLayoutDirection(in:relativeTo:)(v0);
  objc_msgSend(v71, "setFrame:");

  id v84 = [*(id *)&v0[v69] collectionView];
  if (v84)
  {
    uint64_t v85 = v84;
    [v84 setContentInsetAdjustmentBehavior:2];
    objc_msgSend(v85, "setContentInset:", v87, 0.0, 0.0, 0.0);
    objc_msgSend(v85, "_setGradientMaskEdgeInsets:", v91, v90, v89, v88);
    objc_msgSend(v85, "_setGradientMaskLengths:", v86, v94, v93, v92);
  }

void sub_10000BD64()
{
  if (![v0 isViewLoaded]
    || (double v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController]) == 0LL)
  {
    [*(id *)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionView] setHidden:0];
    id v14 = [*(id *)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_detailViewController] view];
    if (v14)
    {
      id v15 = v14;
      [v14 setHidden:0];
      goto LABEL_8;
    }

    __break(1u);
    goto LABEL_10;
  }

  id v2 = v1;
  id v3 = [v0 view];
  if (!v3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  id v4 = v3;
  [v3 bounds];
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;

  v16[0] = v6;
  v16[1] = v8;
  _OWORD v16[2] = v10;
  v16[3] = v12;
  char v17 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v1, v0, v16);

  [*(id *)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionView] setHidden:1];
  id v13 = [*(id *)&v0[OBJC_IVAR____TtC6Arcade23PurchasesViewController_detailViewController] view];
  if (v13)
  {
    id v15 = v13;
    [v13 setHidden:1];

LABEL_8:
    return;
  }

LABEL_11:
  __break(1u);
}

    swift_bridgeObjectRelease(v31);
    CGFloat v34 = AppSearchResult.lockup.getter(v33);
    double v31 = MixedMediaLockup.trailers.getter();
    swift_release(v34);
    if ((unint64_t)v31 >> 62)
    {
      if (v31 < 0) {
        id v37 = v31;
      }
      else {
        id v37 = v31 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v31);
      double v35 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease(v31);
      if (!v35) {
        goto LABEL_16;
      }
    }

    else
    {
      double v35 = *(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (!v35)
      {
LABEL_16:
        swift_bridgeObjectRelease(v31);
        sub_10001E43C(v32, v35, v7, a2, v29, (uint64_t)&unk_1002812E0, (uint64_t)sub_10001F0B8, a5, a6);
        swift_release(v14);
        swift_release(v32);
        swift_release(v35);
        return;
      }
    }

    if ((v31 & 0xC000000000000001LL) == 0)
    {
      if (!*(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        __break(1u);
        return;
      }

      double v35 = *(void *)(v31 + 32);
      swift_retain(v35);
      goto LABEL_16;
    }

  id v16 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_focusGuide);
  sub_1000031E8((uint64_t *)&unk_1002DF9C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend( v16,  "setPreferredFocusEnvironments:",  isa,  swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);
}

  KeyPath = swift_getKeyPath(&unk_1002378B0, v29);
  ItemLayoutContext.subscript.getter(v13);
  swift_release(KeyPath);
  CGFloat v30 = PageGrid.componentMeasuringSize(spanning:)(v37, v30);
  (*(void (**)(void *, uint64_t))(v60 + 8))(v13, v61);
  objc_super v38 = swift_conformsToProtocol2(v24, &protocol descriptor for EstimatedHeightProviding);
  if (v38) {
    double v39 = v38;
  }
  else {
    double v39 = 0LL;
  }
  if (v38) {
    __int128 v40 = v24;
  }
  else {
    __int128 v40 = 0LL;
  }
  if (v40)
  {
    id v41 = v56;
    ItemLayoutContext.parentShelfLayoutContext.getter(v38);
    uint64_t v42 = dispatch thunk of static EstimatedHeightProviding.estimatedHeight(in:asPartOf:)(v41, v33, v40, v39);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v58);
LABEL_32:
    double v45 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
    CGFloat v46 = [v45 absoluteDimension:v30];
    double v47 = [v45 absoluteDimension:v42];
    CGFloat v48 =  [(id)objc_opt_self(NSCollectionLayoutSize) sizeWithWidthDimension:v46 heightDimension:v47];

    uint64_t ObjectType = swift_getObjectType(v34);
    CGFloat v50 = dispatch thunk of ItemSupplementaryProvider.supplementaryItems(for:asPartOf:)(v35, v33, ObjectType, v32);
    sub_100006028(0LL, (unint64_t *)&unk_1002E21E0, &OBJC_CLASS___NSCollectionLayoutSupplementaryItem_ptr);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v50);
    double v43 =  [(id)objc_opt_self(NSCollectionLayoutItem) itemWithLayoutSize:v48 supplementaryItems:isa];
    swift_release(v26);

    return (uint64_t)v43;
  }

    v18[(v12 >> 6) + 8] |= 1LL << v12;
    double v21 = (uint64_t *)(v18[6] + 16 * v12);
    *double v21 = a1;
    v21[1] = a2;
    *(double *)(v18[7] + 8 * v12) = a4;
    CGFloat v22 = v18[2];
    double v23 = __OFADD__(v22, 1LL);
    CGFloat v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      swift_bridgeObjectRetain(a2);
      return;
    }

    goto LABEL_14;
  }

  sub_1000B0430(v15, a3 & 1);
  double v19 = sub_1000E8690(a1, a2);
  if ((v16 & 1) == (v20 & 1))
  {
    uint64_t v12 = v19;
    uint64_t v18 = (void *)*v5;
    if ((v16 & 1) != 0) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }

    v16[(v10 >> 6) + 8] |= 1LL << v10;
    CGFloat v20 = 8 * v10;
    *(void *)(v16[6] + v20) = a2;
    *(void *)(v16[7] + v20) = a1;
    double v21 = v16[2];
    CGFloat v22 = __OFADD__(v21, 1LL);
    double v23 = v21 + 1;
    if (!v22)
    {
      _OWORD v16[2] = v23;
      swift_retain(a2);
      return;
    }

    goto LABEL_14;
  }

  sub_1000B0734(v13, a3 & 1);
  uint64_t v18 = sub_1000E8564(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    uint64_t v10 = v18;
    id v16 = (void *)*v4;
    if ((v14 & 1) != 0) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }

    v18[(v12 >> 6) + 8] |= 1LL << v12;
    CGFloat v22 = 8 * v12;
    *(void *)(v18[6] + v22) = a2;
    *(void *)(v18[7] + v22) = a1;
    double v23 = v18[2];
    CGFloat v24 = __OFADD__(v23, 1LL);
    double v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }

    goto LABEL_14;
  }

  sub_1000B0A64(v15, a3 & 1, a4);
  CGFloat v20 = sub_1000E878C(a2);
  if ((v16 & 1) == (v21 & 1))
  {
    uint64_t v12 = v20;
    uint64_t v18 = (void *)*v6;
    if ((v16 & 1) != 0) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }

  if ((a4 & 1) != 0) {
    return;
  }
  char v17 = (unint64_t)_swiftEmptyArrayStorage >> 62;
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
LABEL_14:
    if (a3 < 0)
    {
      __break(1u);
    }

    else if (!v17)
    {
      uint64_t v18 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (v18 >= a3) {
        goto LABEL_17;
      }
      goto LABEL_56;
    }

    else {
      double v31 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
    }
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v8 < 0)
    {
      __break(1u);
      return;
    }

    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v18 >= a3)
    {
LABEL_17:
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001LL) != 0 && a3)
      {
        type metadata accessor for Artwork(0LL);
        double v19 = 0LL;
        do
        {
          CGFloat v20 = v19 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v19);
          double v19 = v20;
        }

        while (a3 != v20);
      }

      if (v17)
      {
        else {
          double v21 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
        }
        swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        uint64_t v18 = _CocoaArrayWrapper.subscript.getter(0LL, a3, v21);
        uint64_t v8 = v22;
        char v17 = v23;
        a3 = v24;
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        if ((a3 & 1) == 0) {
          goto LABEL_28;
        }
      }

      else
      {
        uint64_t v18 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL;
        uint64_t v8 = ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 32;
        a3 = (2 * a3) | 1;
        swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        if ((a3 & 1) == 0)
        {
LABEL_28:
          sub_1001E0454(v18, v8, v17, a3);
LABEL_35:
          swift_unknownObjectRelease(v18);
          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          return;
        }
      }

      double v25 = type metadata accessor for __ContiguousArrayStorageBase(0LL);
      CGFloat v26 = swift_unknownObjectRetain_n(v18, 2LL);
      id v27 = (void *)swift_dynamicCastClass(v26, v25);
      if (!v27)
      {
        swift_unknownObjectRelease(v18);
        id v27 = _swiftEmptyArrayStorage;
      }

      id v28 = v27[2];
      swift_release(v27);
      if (!__OFSUB__((unint64_t)a3 >> 1, v17))
      {
        a1 = v18;
        if (v28 == ((unint64_t)a3 >> 1) - v17)
        {
          if (!swift_dynamicCastClass(v18, v25)) {
            swift_unknownObjectRelease(v18);
          }
          goto LABEL_35;
        }

        goto LABEL_58;
      }

  __break(1u);
}

  swift_release(v25);
LABEL_12:
  double v43 = v98;
  CGFloat v44 = v89;
  double v45 = *(void *)(v89 + v19[11]);
  CGFloat v46 = type metadata accessor for Feature(0LL);
  CGRect v104 = v46;
  CGRect v98 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  objc_super v105 = v98;
  double v47 = sub_100009D54(v103);
  CGRect v97 = enum case for Feature.measurement_with_labelplaceholder(_:);
  CGRect v96 = *(void (**)(void))(*(void *)(v46 - 8) + 104LL);
  v96(v47);
  CGFloat v48 = v95;
  double v87 = v48;
  double v49 = isFeatureEnabled(_:)(v103);
  _s6Arcade17PillOverlayLayoutVwxx_0(v103);
  LOBYTE(v84) = v49 & 1;
  CGFloat v50 = v88;
  id v51 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v32,  v34,  v48,  4LL,  0LL,  0LL,  v45,  0LL,  v84);
  LabelPlaceholderCompatibility.layoutTextView.getter(v111, v51);
  objc_super v95 = *(id *)(v43 + 8);
  ((void (*)(char *, uint64_t))v95)(v50, v102);
  double v52 = v44 + v19[9];
  id v53 = [v101 traitCollection];
  uint64_t v54 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v52, v53);

  double v55 = sub_1001249C0();
  double v57 = v56;
  CGFloat v58 = *(void *)(v44 + v19[12]);
  CGRect v104 = v46;
  objc_super v105 = v98;
  double v59 = sub_100009D54(v103);
  ((void (*)(void *, void, uint64_t))v96)(v59, v97, v46);
  CGFloat v60 = (id)v54;
  LOBYTE(v54) = isFeatureEnabled(_:)(v103);
  _s6Arcade17PillOverlayLayoutVwxx_0(v103);
  LOBYTE(v85) = v54 & 1;
  double v61 = v90;
  CGFloat v62 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v55,  v57,  v60,  4LL,  0LL,  0LL,  v58,  0LL,  v85);
  LabelPlaceholderCompatibility.layoutTextView.getter(v110, v62);
  ((void (*)(char *, uint64_t))v95)(v61, v102);
  id v63 = v44 + v19[10];
  uint64_t v64 = [v101 traitCollection];
  id v65 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v63, v64);

  int v66 = sub_100124B74();
  double v68 = v67;
  uint64_t v69 = *(void *)(v44 + v19[13]);
  CGRect v104 = v46;
  objc_super v105 = v98;
  id v70 = sub_100009D54(v103);
  ((void (*)(void *, void, uint64_t))v96)(v70, v97, v46);
  uint64_t v71 = (id)v65;
  LOBYTE(v65) = isFeatureEnabled(_:)(v103);
  _s6Arcade17PillOverlayLayoutVwxx_0(v103);
  LOBYTE(v86) = v65 & 1;
  id v72 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v66,  v68,  v71,  4LL,  0LL,  0LL,  v69,  0LL,  v86);
  LabelPlaceholderCompatibility.layoutTextView.getter(v109, v72);
  ((void (*)(char *, uint64_t))v95)(v61, v102);
  sub_10000AA88(v91, v108);
  sub_10001F010((uint64_t)v111, (uint64_t)v103);
  sub_10001F010((uint64_t)v110, (uint64_t)&v106);
  sub_10001F010((uint64_t)v109, (uint64_t)&v107);
  int v73 = (uint64_t)v92;
  sub_1001F1354((uint64_t)v92);
  double v74 = _VerticalFlowLayout.measurements(fitting:in:)(v101, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v73, v94);

  sub_10000AAC4(v103);
  _s6Arcade17PillOverlayLayoutVwxx_0(v109);
  _s6Arcade17PillOverlayLayoutVwxx_0(v110);
  _s6Arcade17PillOverlayLayoutVwxx_0(v111);
  return v74;
}

    __break(1u);
LABEL_12:
    __break(1u);
  }

  static MetricsVisualizer.setupMetricsEventVisualizer()();
LABEL_12:
  id v37 = [(id)objc_opt_self(ASKRebootstrapCoordinator) sharedCoordinator];
  objc_super v38 = swift_allocObject(&unk_100288930, 24LL, 7LL);
  *(void *)(v38 + sub_10000620C(v0 + 16) = v2;
  v137 = sub_10011DCF0;
  v138 = v38;
  *(void *)&aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256LL;
  *(void *)&v136 = sub_100135408;
  *((void *)&v136 + 1) = &unk_100288948;
  double v39 = _Block_copy(&aBlock);
  __int128 v40 = v138;
  id v41 = v2;
  objc_msgSend(v37, "registerAppBootstrapHandler:", v39, swift_release(v40).n128_f64[0]);
  _Block_release(v39);

  uint64_t v42 = [(id)objc_opt_self(AVAudioSession) sharedInstance];
  *(void *)&aBlock = 0LL;
  LODWORD(v39) = [v42 setCategory:AVAudioSessionCategoryAmbient mode:AVAudioSessionModeDefault options:1 error:&aBlock];

  double v43 = aBlock;
  v132 = v29;
  if ((_DWORD)v39)
  {
    CGFloat v44 = (id)aBlock;
  }

  else
  {
    v129 = a1;
    v130 = v17;
    double v45 = (id)aBlock;
    CGFloat v46 = _convertNSErrorToError(_:)(v43);

    swift_willThrow();
    v134[0] = v46;
    double v47 = sub_1000031E8(&qword_1002E62D8);
    CGFloat v48 = sub_100006028(0LL, &qword_1002E62E0, &OBJC_CLASS___NSError_ptr);
    swift_dynamicCast(&v133, v134, v47, v48, 0LL);
    double v49 = v133;
    if (qword_1002DCC30 != -1) {
      swift_once(&qword_1002DCC30, sub_100119A0C);
    }
    CGFloat v50 = sub_1000061F4(v4, (uint64_t)qword_1002F0698);
    id v51 = v131;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v6, v50, v4);
    double v52 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    id v53 = type metadata accessor for LogMessage(0LL);
    uint64_t v54 = swift_allocObject( v52,  ((*(unsigned __int8 *)(*(void *)(v53 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v53 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v53 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v53 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v54 + sub_10000620C(v0 + 16) = xmmword_1002339B0;
    LogMessage.init(stringLiteral:)(0xD000000000000024LL, 0x800000010024AB50LL);
    *((void *)&v136 + 1) = v48;
    *(void *)&aBlock = v49;
    double v55 = v49;
    static LogMessage.sensitive(_:)(&aBlock);
    sub_100006060((uint64_t)&aBlock, (uint64_t *)&unk_1002DF680);
    Logger.error(_:)(v54, v4, &protocol witness table for OSLogger);

    CGFloat v56 = swift_bridgeObjectRelease(v54);
    (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v6, v4, v56);
    swift_errorRelease(v134[0]);
    a1 = v129;
    char v17 = v130;
  }

  double v57 = (void *)objc_opt_self(&OBJC_CLASS___UIApplication);
  CGFloat v58 = [v57 sharedApplication];
  [v58 setMinimumBackgroundFetchInterval:14400.0];

  double v59 = [v57 sharedApplication];
  [v59 _setIdleModeVisualEffectsEnabled:1];

  if (qword_1002DC4D8 != -1) {
    swift_once(&qword_1002DC4D8, sub_100065B50);
  }
  qword_1002EEA28 = (uint64_t)&off_100288738;
  swift_unknownObjectWeakAssign(&unk_1002EEA20, v41);
  CGFloat v60 = swift_allocObject(&unk_100288980, 24LL, 7LL);
  *(void *)(v60 + sub_10000620C(v0 + 16) = v41;
  double v61 = (uint64_t)v41 + OBJC_IVAR____TtC6Arcade15BaseAppDelegate_flowController;
  swift_beginAccess((char *)v41 + OBJC_IVAR____TtC6Arcade15BaseAppDelegate_flowController, v134, 0LL, 0LL);
  sub_10011BA98(v61, (uint64_t)&aBlock);
  CGFloat v62 = *((void *)&v136 + 1);
  id v63 = v41;
  sub_100006060((uint64_t)&aBlock, (uint64_t *)&unk_1002E1800);
  if (v62)
  {
    sub_10011AFCC(v63);
    uint64_t v64 = v132;
  }

  else
  {
    id v65 = swift_allocObject(&unk_1002889A8, 32LL, 7LL);
    *(void *)(v65 + sub_10000620C(v0 + 16) = sub_10011DD54;
    *(void *)(v65 + 24) = v60;
    int v66 = OBJC_IVAR____TtC6Arcade15BaseAppDelegate_pendingBootstrap;
    double v67 = *(void **)((char *)v63 + OBJC_IVAR____TtC6Arcade15BaseAppDelegate_pendingBootstrap);
    swift_retain(v60);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v67);
    *(void *)((char *)v63 + v66) = v67;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      double v67 = sub_100019F3C(0LL, v67[2] + 1LL, 1, v67);
      *(void *)((char *)v63 + v66) = v67;
    }

    id v70 = v67[2];
    uint64_t v69 = v67[3];
    if (v70 >= v69 >> 1)
    {
      double v67 = sub_100019F3C((void *)(v69 > 1), v70 + 1, 1, v67);
      *(void *)((char *)v63 + v66) = v67;
    }

    uint64_t v64 = v132;
    v67[2] = v70 + 1;
    uint64_t v71 = &v67[2 * v70];
    v71[4] = sub_100061D34;
    v71[5] = v65;
  }

  swift_release(v60);
  int v73 = (id)ASKBuildTypeGetCurrent(v72);
  double v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
  double v76 = v75;
  double v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
  CGFloat v79 = v77;
  if (v74 == v78 && v76 == v77) {
    goto LABEL_28;
  }
  double v80 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v76, v78, v77, 0LL);
  swift_bridgeObjectRelease(v76);
  swift_bridgeObjectRelease(v79);
  if ((v80 & 1) != 0) {
    goto LABEL_33;
  }
  CGFloat v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeConvergence);
  double v76 = v82;
  id v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
  uint64_t v85 = v83;
  if (v81 == v84 && v76 == v83)
  {
LABEL_28:
    swift_bridgeObjectRelease_n(v76, 2LL);
LABEL_33:

LABEL_34:
    double v87 = [objc_allocWithZone(UITapGestureRecognizer) initWithTarget:v63 action:"performDebugGesture:"];
    double v88 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
    double v89 = swift_allocObject(v88, 40LL, 7LL);
    *(_OWORD *)(v89 + sub_10000620C(v0 + 16) = xmmword_100233570;
    double v90 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
    double v91 = v87;
    double v92 = [v90 initWithInteger:6];
    *(void *)(v89 + 32) = v92;
    *(void *)&aBlock = v89;
    specialized Array._endMutation()(v92);
    double v93 = aBlock;
    sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v91, "setAllowedPressTypes:", isa, swift_bridgeObjectRelease(v93).n128_f64[0]);

    [v91 setNumberOfTapsRequired:3];
    [v91 setDelegate:v63];
    objc_super v95 = *(void **)((char *)v2 + v17);
    if (v95)
    {
      CGRect v96 = v95;
      [v96 addGestureRecognizer:v91];
    }

    goto LABEL_37;
  }

  double v86 = _stringCompareWithSmolCheck(_:_:expecting:)(v81, v76, v84, v83, 0LL);
  swift_bridgeObjectRelease(v76);
  swift_bridgeObjectRelease(v85);
  if ((v86 & 1) != 0) {
    goto LABEL_33;
  }
  uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeInternal);
  v119 = v118;
  v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
  v122 = v120;
  if (v117 == v121 && v119 == v120)
  {

    swift_bridgeObjectRelease_n(v119, 2LL);
  }

  else
  {
    v123 = _stringCompareWithSmolCheck(_:_:expecting:)(v117, v119, v121, v120, 0LL);

    swift_bridgeObjectRelease(v119);
    swift_bridgeObjectRelease(v122);
    if ((v123 & 1) == 0) {
      goto LABEL_37;
    }
  }

  v124 = type metadata accessor for LocalPreferences(0LL);
  v125 = static LocalPreferences.currentApplication.getter();
  if (qword_1002DCC38 != -1) {
    swift_once(&qword_1002DCC38, sub_100119B14);
  }
  v126 = sub_1000031E8(&qword_1002DEBC0);
  v127 = sub_1000061F4(v126, (uint64_t)qword_1002F06B0);
  Preferences.subscript.getter( &aBlock,  v127,  v124,  &type metadata for Bool,  &protocol witness table for LocalPreferences);
  swift_release(v125);
LABEL_37:
  if (!a1 || !*(void *)(a1 + 16))
  {
    aBlock = 0u;
    v136 = 0u;
LABEL_42:
    sub_100006060((uint64_t)&aBlock, (uint64_t *)&unk_1002DF680);
    goto LABEL_49;
  }

  CGRect v97 = UIApplicationLaunchOptionsURLKey;
  CGRect v98 = sub_1000E8854((uint64_t)v97);
  if ((v99 & 1) != 0)
  {
    sub_100008364(*(void *)(a1 + 56) + 32 * v98, (uint64_t)&aBlock);
  }

  else
  {
    aBlock = 0u;
    v136 = 0u;
  }

  if (!*((void *)&v136 + 1)) {
    goto LABEL_42;
  }
  sub_100006060((uint64_t)&aBlock, (uint64_t *)&unk_1002DF680);
  *((_BYTE *)v63 + OBJC_IVAR____TtC6Arcade15BaseAppDelegate_shouldAnimateDeepLinksWithCrossfade) = 1;
LABEL_49:
  unint64_t v106 = swift_allocObject(&unk_1002889D0, 24LL, 7LL);
  *(void *)(v106 + sub_10000620C(v0 + 16) = v63;
  if (*((_BYTE *)v63 + OBJC_IVAR____TtC6Arcade15BaseAppDelegate_isOnboardingFinished) == 1)
  {
    sub_100119CCC((uint64_t)v63);
  }

  else
  {
    v107 = swift_allocObject(&unk_1002889F8, 32LL, 7LL);
    *(void *)(v107 + sub_10000620C(v0 + 16) = sub_10011DD28;
    *(void *)(v107 + 24) = v106;
    Swift::Int v108 = OBJC_IVAR____TtC6Arcade15BaseAppDelegate_pendingOnboarding;
    uint64_t v109 = *(void **)((char *)v63 + OBJC_IVAR____TtC6Arcade15BaseAppDelegate_pendingOnboarding);
    Swift::Int v110 = v63;
    swift_retain(v106);
    Swift::Int v111 = swift_isUniquelyReferenced_nonNull_native(v109);
    *(void *)((char *)v63 + v108) = v109;
    if ((v111 & 1) == 0)
    {
      uint64_t v109 = sub_100019F3C(0LL, v109[2] + 1LL, 1, v109);
      *(void *)((char *)v63 + v108) = v109;
    }

    uint64_t v113 = v109[2];
    v112 = v109[3];
    if (v113 >= v112 >> 1)
    {
      uint64_t v109 = sub_100019F3C((void *)(v112 > 1), v113 + 1, 1, v109);
      *(void *)((char *)v63 + v108) = v109;
    }

    v109[2] = v113 + 1;
    uint64_t v114 = &v109[2 * v113];
    v114[4] = sub_100061D34;
    v114[5] = v107;
  }

  swift_release(v106);
  return 1LL;
}

  __break(1u);
}

  double v47 = *(void *)&v2[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_epicHeadingArtwork];
  if (v47)
  {
    objc_msgSend( v2,  "bounds",  swift_retain(*(void *)&v2[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_epicHeadingArtwork]).n128_f64[0]);
    sub_1000583CC(v48, v49);
    [v2 bounds];
    double v52 = static PosterLockupLayout.maximiumLogoArtworkSize(metrics:containerSize:)(v8, v50, v51);
    uint64_t v54 = v53;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v8, v65);
    double v55 = type metadata accessor for ArtworkView(0LL);
    CGFloat v56 = (void *)static ArtworkView.plainArtworkView.getter();
    double v57 = v67;
    CGFloat v58 = Artwork.crop.getter(v56);
    double v59 = Artwork.Crop.preferredContentMode.getter(v58);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v57, v69);
    CGFloat v60 = Artwork.config(_:mode:prefersLayeredImage:)(v59, 0LL, v52, v54);
    sub_1000FB124();
    double v61 = [(id)objc_opt_self(UIColor) clearColor];
    ArtworkView.backgroundColor.setter(v61);
    CGFloat v62 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v60, 2LL, 1LL, v56, v55, v62);
    id v63 = v56;
    sub_10005A048(v56);
    swift_release(v47);
    swift_release(v60);
  }

  CGRect v102 = 0LL;
  v290 = 0LL;
  v288 = 0u;
  v289 = 0u;
LABEL_15:
  v112 = type metadata accessor for Feature(0LL);
  v286 = v112;
  v287 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  uint64_t v113 = sub_100009D54(v285);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v112 - 8) + 104LL))( v113,  enum case for Feature.measurement_with_labelplaceholder(_:),  v112);
  swift_bridgeObjectRetain(v89);
  uint64_t v114 = v262;
  swift_retain(v102);
  LOBYTE(v112) = isFeatureEnabled(_:)(v285);
  _s6Arcade17PillOverlayLayoutVwxx_0(v285);
  v229 = v112 & 1;
  uint64_t v115 = v268;
  uint64_t v116 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v78,  v89,  v114,  4LL,  0LL,  v230,  1LL,  0LL,  v229);
  LabelPlaceholderCompatibility.layoutTextView.getter(v285, v116);
  (*(void (**)(char *, uint64_t))(v269 + 8))(v115, v270);
  uint64_t v117 = (uint64_t)v235;
  v118 = (uint64_t)v231;
  sub_100166DD4((uint64_t)&v288, v285);
  _s6Arcade17PillOverlayLayoutVwxx_0(v285);
  swift_release(v102);

  sub_100046E64(v118, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100006060((uint64_t)&v288, &qword_1002E2020);
  v266 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  v266((char *)v117, 0LL, 1LL, v32);
  sub_10003FBFC(v117, (uint64_t)v273, (uint64_t *)&unk_1002E9710);
  objc_super v105 = v271;
  CGRect v104 = v263;
  CGFloat v46 = v261;
LABEL_16:
  v119 = (int *)type metadata accessor for TitleHeaderView.Style(0LL);
  v120 = v265;
  sub_10001027C(v105 + v119[6], (uint64_t)v265, &qword_1002E95A8);
  v121 = v50;
  v122 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v259 + 48))(v120, 1LL, v50);
  v262 = v119;
  if (v122 == 1)
  {
    sub_100006060((uint64_t)v120, &qword_1002E95A8);
    v266(v274, 1LL, 1LL, v32);
    v123 = (uint64_t)v279;
    v124 = v104;
    v125 = v272;
  }

  else
  {
    v126 = v256;
    sub_100170308((uint64_t)v120, v256);
    sub_100006028(0LL, (unint64_t *)&qword_1002E0470, &OBJC_CLASS___UIFont_ptr);
    v127 = v126 + *(int *)(v50 + 20);
    v265 = (char *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v127, v272);
    v123 = (uint64_t)v279;
    if (v257)
    {
      *(void *)&v288 = v237;
      *((void *)&v288 + 1) = v257;
      v128 = swift_bridgeObjectRetain(v257);
      v129 = v105;
      v130 = v238;
      static CharacterSet.excessiveLeading.getter(v128);
      v131 = sub_100008794();
      StringProtocol.rangeOfCharacter(from:options:range:)(v130, 0LL, 0LL, 0LL, 1LL, &type metadata for String, v131);
      v133 = v132;
      v134 = v130;
      objc_super v105 = v129;
      v121 = v50;
      (*(void (**)(char *, uint64_t))(v239 + 8))(v134, v261);
      *(void *)&v135 = swift_bridgeObjectRelease(*((void *)&v288 + 1)).n128_u64[0];
      v136 = 0LL;
      if ((v133 & 1) == 0)
      {
        double result = objc_msgSend(v265, "lineHeight", v135);
        v138 = ceil(v137 * 1.3);
        if ((~*(void *)&v138 & 0x7FF0000000000000LL) == 0)
        {
LABEL_71:
          __break(1u);
          goto LABEL_72;
        }

        if (v138 <= -9.22337204e18)
        {
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }

        if (v138 >= 9.22337204e18)
        {
LABEL_73:
          __break(1u);
          return result;
        }

        v136 = (uint64_t)v138;
      }
    }

    else
    {
      v136 = 0LL;
    }

    v290 = 0LL;
    v288 = 0u;
    v289 = 0u;
    v139 = v127;
    v125 = v272;
    v140 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v139, v272);
    v141 = type metadata accessor for Feature(0LL);
    v286 = v141;
    v287 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
    v142 = sub_100009D54(v285);
    (*(void (**)(void *, void, uint64_t))(*(void *)(v141 - 8) + 104LL))( v142,  enum case for Feature.measurement_with_labelplaceholder(_:),  v141);
    v143 = v257;
    swift_bridgeObjectRetain(v257);
    v144 = (id)v140;
    LOBYTE(v140) = isFeatureEnabled(_:)(v285);
    _s6Arcade17PillOverlayLayoutVwxx_0(v285);
    LOBYTE(v228) = v140 & 1;
    v145 = v268;
    v146 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v237,  v143,  v144,  4LL,  0LL,  v136,  1LL,  0LL,  v228);
    LabelPlaceholderCompatibility.layoutTextView.getter(v285, v146);
    (*(void (**)(char *, uint64_t))(v269 + 8))(v145, v270);
    v147 = (uint64_t)v232;
    v148 = v256;
    sub_100166DD4((uint64_t)&v288, v285);

    _s6Arcade17PillOverlayLayoutVwxx_0(v285);
    sub_100006060((uint64_t)&v288, &qword_1002E2020);
    sub_100046E64(v148, type metadata accessor for TitleHeaderView.TextConfiguration);
    v266((char *)v147, 0LL, 1LL, v32);
    sub_10003FBFC(v147, (uint64_t)v274, (uint64_t *)&unk_1002E9710);
    CGFloat v46 = v261;
    v119 = v262;
    v124 = v263;
  }

  v259 = v105 + v119[5];
  v149 = v275;
  sub_100077AEC(v259, v275, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100006028(0LL, (unint64_t *)&qword_1002E0470, &OBJC_CLASS___UIFont_ptr);
  v265 = (char *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v149 + *(int *)(v121 + 20), v125);
  if (v124)
  {
    v150 = v258;
    *(void *)&v288 = v258;
    *((void *)&v288 + 1) = v124;
    v151 = swift_bridgeObjectRetain(v124);
    v152 = v238;
    static CharacterSet.excessiveLeading.getter(v151);
    v153 = sub_100008794();
    StringProtocol.rangeOfCharacter(from:options:range:)(v152, 0LL, 0LL, 0LL, 1LL, &type metadata for String, v153);
    v155 = v154;
    (*(void (**)(char *, uint64_t))(v239 + 8))(v152, v46);
    *(void *)&v156 = swift_bridgeObjectRelease(*((void *)&v288 + 1)).n128_u64[0];
    v157 = 0LL;
    v158 = v260;
    if ((v155 & 1) != 0) {
      goto LABEL_33;
    }
    double result = objc_msgSend(v265, "lineHeight", v156);
    v160 = ceil(v159 * 1.3);
    if ((~*(void *)&v160 & 0x7FF0000000000000LL) != 0)
    {
      if (v160 > -9.22337204e18)
      {
        if (v160 < 9.22337204e18)
        {
          v157 = (uint64_t)v160;
          goto LABEL_33;
        }

        goto LABEL_70;
      }

  sub_100046E64((uint64_t)v48, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100046E64((uint64_t)v7, type metadata accessor for TitleHeaderView.TextConfiguration);
  return 0LL;
}

  double v55 = 0;
LABEL_12:
  sub_100046E64(v48, type metadata accessor for TitleHeaderView.Style);
  sub_100046E64(v53, type metadata accessor for TitleHeaderView.Style);
  return v55 & 1;
}

  swift_bridgeObjectRelease(a3);
  return 0LL;
}

    id v16 = *(id *)(v5 + v6);
    char v17 = String._bridgeToObjectiveC()();
    *(void *)&uint64_t v18 = swift_bridgeObjectRelease(a2).n128_u64[0];
    goto LABEL_14;
  }

  if (!v12) {
    return result;
  }
  swift_bridgeObjectRelease(v12);
  id v16 = *(id *)(v5 + v6);
  char v17 = 0LL;
LABEL_14:
  objc_msgSend(v16, "setText:", v17, v18);

  [v2 invalidateIntrinsicContentSize];
  double v19 = *(void (**)(__n128))&v2[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver];
  if (v19)
  {
    CGFloat v20 = *(void *)&v2[OBJC_IVAR____TtC6Arcade14UberHeaderView_sizeChangeObserver + 8];
    double v21 = swift_retain(v20);
    v19(v21);
    sub_10000D3D8((uint64_t)v19, v20);
  }

  return result;
}

    __break(1u);
LABEL_12:
    __break(1u);
  }

  CGRect v99 = 0LL;
  v285 = 0LL;
  v283 = 0u;
  v284 = 0u;
LABEL_15:
  uint64_t v109 = type metadata accessor for Feature(0LL);
  v281 = v109;
  v282 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  Swift::Int v110 = sub_100009D54(v280);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v109 - 8) + 104LL))( v110,  enum case for Feature.measurement_with_labelplaceholder(_:),  v109);
  swift_bridgeObjectRetain(v86);
  Swift::Int v111 = v257;
  swift_retain(v99);
  LOBYTE(v109) = isFeatureEnabled(_:)(v280);
  _s6Arcade17PillOverlayLayoutVwxx_0(v280);
  v226 = v109 & 1;
  v112 = v263;
  uint64_t v113 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v75,  v86,  v111,  4LL,  0LL,  v227,  1LL,  0LL,  v226);
  LabelPlaceholderCompatibility.layoutTextView.getter(v280, v113);
  (*(void (**)(char *, uint64_t))(v264 + 8))(v112, v265);
  uint64_t v114 = (uint64_t)v230;
  uint64_t v115 = (uint64_t)v228;
  sub_100166DD4((uint64_t)&v283, v280);
  _s6Arcade17PillOverlayLayoutVwxx_0(v280);
  swift_release(v99);

  sub_100046E64(v115, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100006060((uint64_t)&v283, &qword_1002E2020);
  v261 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  v261((char *)v114, 0LL, 1LL, v30);
  sub_1002060A0(v114, (uint64_t)v268);
  CGRect v102 = v266;
  CGRect v101 = v258;
  CGFloat v44 = v256;
LABEL_16:
  uint64_t v116 = (int *)type metadata accessor for TitleHeaderView.Style(0LL);
  uint64_t v117 = v260;
  sub_10001027C(v102 + v116[6], (uint64_t)v260, &qword_1002E95A8);
  v118 = v48;
  v119 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v254 + 48))(v117, 1LL, v48);
  v257 = v116;
  if (v119 == 1)
  {
    sub_100006060((uint64_t)v117, &qword_1002E95A8);
    v261(v269, 1LL, 1LL, v30);
    v120 = (uint64_t)v274;
    v121 = v101;
    v122 = v267;
  }

  else
  {
    v123 = v251;
    sub_100170308((uint64_t)v117, v251);
    sub_100028C20();
    v124 = v123 + *(int *)(v48 + 20);
    v260 = (char *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v124, v267);
    v120 = (uint64_t)v274;
    if (v252)
    {
      *(void *)&v283 = v232;
      *((void *)&v283 + 1) = v252;
      v125 = swift_bridgeObjectRetain(v252);
      v126 = v102;
      v127 = v233;
      static CharacterSet.excessiveLeading.getter(v125);
      v128 = sub_100008794();
      StringProtocol.rangeOfCharacter(from:options:range:)(v127, 0LL, 0LL, 0LL, 1LL, &type metadata for String, v128);
      v130 = v129;
      v131 = v127;
      CGRect v102 = v126;
      v118 = v48;
      (*(void (**)(char *, uint64_t))(v234 + 8))(v131, v256);
      *(void *)&v132 = swift_bridgeObjectRelease(*((void *)&v283 + 1)).n128_u64[0];
      v133 = 0LL;
      if ((v130 & 1) == 0)
      {
        double result = objc_msgSend(v260, "lineHeight", v132);
        v135 = ceil(v134 * 1.3);
        if ((~*(void *)&v135 & 0x7FF0000000000000LL) == 0)
        {
LABEL_71:
          __break(1u);
          goto LABEL_72;
        }

        if (v135 <= -9.22337204e18)
        {
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }

        if (v135 >= 9.22337204e18)
        {
LABEL_73:
          __break(1u);
          return result;
        }

        v133 = (uint64_t)v135;
      }
    }

    else
    {
      v133 = 0LL;
    }

    v285 = 0LL;
    v283 = 0u;
    v284 = 0u;
    v136 = v124;
    v122 = v267;
    v137 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v136, v267);
    v138 = type metadata accessor for Feature(0LL);
    v281 = v138;
    v282 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
    v139 = sub_100009D54(v280);
    (*(void (**)(void *, void, uint64_t))(*(void *)(v138 - 8) + 104LL))( v139,  enum case for Feature.measurement_with_labelplaceholder(_:),  v138);
    v140 = v252;
    swift_bridgeObjectRetain(v252);
    v141 = (id)v137;
    LOBYTE(v137) = isFeatureEnabled(_:)(v280);
    _s6Arcade17PillOverlayLayoutVwxx_0(v280);
    LOBYTE(v225) = v137 & 1;
    v142 = v263;
    v143 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v232,  v140,  v141,  4LL,  0LL,  v133,  1LL,  0LL,  v225);
    LabelPlaceholderCompatibility.layoutTextView.getter(v280, v143);
    (*(void (**)(char *, uint64_t))(v264 + 8))(v142, v265);
    v144 = (uint64_t)v229;
    v145 = v251;
    sub_100166DD4((uint64_t)&v283, v280);

    _s6Arcade17PillOverlayLayoutVwxx_0(v280);
    sub_100006060((uint64_t)&v283, &qword_1002E2020);
    sub_100046E64(v145, type metadata accessor for TitleHeaderView.TextConfiguration);
    v261((char *)v144, 0LL, 1LL, v30);
    sub_1002060A0(v144, (uint64_t)v269);
    CGFloat v44 = v256;
    uint64_t v116 = v257;
    v121 = v258;
  }

  v254 = v102 + v116[5];
  v146 = v270;
  sub_100077AEC(v254, v270, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100028C20();
  v260 = (char *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v146 + *(int *)(v118 + 20), v122);
  if (v121)
  {
    v147 = v253;
    *(void *)&v283 = v253;
    *((void *)&v283 + 1) = v121;
    v148 = swift_bridgeObjectRetain(v121);
    v149 = v233;
    static CharacterSet.excessiveLeading.getter(v148);
    v150 = sub_100008794();
    StringProtocol.rangeOfCharacter(from:options:range:)(v149, 0LL, 0LL, 0LL, 1LL, &type metadata for String, v150);
    v152 = v151;
    (*(void (**)(char *, uint64_t))(v234 + 8))(v149, v44);
    *(void *)&v153 = swift_bridgeObjectRelease(*((void *)&v283 + 1)).n128_u64[0];
    v154 = 0LL;
    v155 = v255;
    if ((v152 & 1) != 0) {
      goto LABEL_33;
    }
    double result = objc_msgSend(v260, "lineHeight", v153);
    v157 = ceil(v156 * 1.3);
    if ((~*(void *)&v157 & 0x7FF0000000000000LL) != 0)
    {
      if (v157 > -9.22337204e18)
      {
        if (v157 < 9.22337204e18)
        {
          v154 = (uint64_t)v157;
          goto LABEL_33;
        }

        goto LABEL_70;
      }

BOOL sub_10000BEE8()
{
  uint64_t v1 = sub_1000031E8((uint64_t *)&unk_1002DF650);
  __chkstk_darwin(v1);
  id v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6Arcade23PurchasesViewController_detailViewController), "view"));
  id v5 =  [*(id *)(v0 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionView) indexPathsForSelectedItems];
  if (!v5)
  {
    uint64_t v11 = type metadata accessor for IndexPath(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v3, 1LL, 1LL, v11);
LABEL_7:

    sub_10000D394((uint64_t)v3);
    return 0LL;
  }

  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for IndexPath(0LL);
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  uint64_t v9 = *(void *)(v7 - 8);
  if (*(void *)(v8 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))( v3,  v8 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)),  v7);
    uint64_t v10 = 0LL;
  }

  else
  {
    uint64_t v10 = 1LL;
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v3, v10, 1LL, v7);
  __n128 v12 = swift_bridgeObjectRelease(v8);
  sub_10000D394((uint64_t)v3);
  if (!v4) {
    return 0LL;
  }
  unsigned __int8 v14 = [v4 isHidden];

  return (v14 & 1) == 0;
}

void sub_10000C08C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (char *)objc_msgSend( objc_allocWithZone((Class)type metadata accessor for AccountSignInView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  id v3 = *(Swift::Void (__swiftcall **)())(v1 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_presenter);
  id v4 = (Swift::Void (__swiftcall **)())&v2[OBJC_IVAR____TtC6Arcade17AccountSignInView_didSelectHandler];
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC6Arcade17AccountSignInView_didSelectHandler];
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC6Arcade17AccountSignInView_didSelectHandler + 8];
  *id v4 = j___s19AppStoreKitInternal24TVPurchasesPagePresenterC6signInyyF;
  v4[1] = v3;
  swift_retain(v3);
  sub_10000D3D8(v5, v6);
  id v7 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
  uint64_t v8 = v2;
  uint64_t v9 = (void *)OverlayViewController.init(overlayView:)();
  uint64_t v10 = OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController;
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController);
  id v12 = v11;
  static ViewControllerContainment.remove(_:)(v11);

  id v13 = *(void **)(v1 + v10);
  *(void *)(v1 + v10) = v9;
  id v14 = v9;

  sub_10000BD64();
}

void sub_10000C190()
{
  uint64_t v1 = v0;
  v2._object = (void *)0x8000000100243C40LL;
  v2._countAndFlagsBits = 0xD000000000000012LL;
  v3._countAndFlagsBits = 0LL;
  v3._object = (void *)0xE000000000000000LL;
  Swift::String v4 = localizedString(_:comment:)(v2, v3);
  v5._countAndFlagsBits = 0xD00000000000001CLL;
  v5._object = (void *)0x8000000100243C60LL;
  v6._countAndFlagsBits = 0LL;
  v6._object = (void *)0xE000000000000000LL;
  Swift::String v7 = localizedString(_:comment:)(v5, v6);
  id v8 = objc_allocWithZone((Class)type metadata accessor for EmptyStateView(0LL));
  uint64_t v9 = sub_1000E75B8(v4._countAndFlagsBits, (uint64_t)v4._object, v7._countAndFlagsBits, (uint64_t)v7._object);
  id v10 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
  uint64_t v11 = v9;
  id v12 = (void *)OverlayViewController.init(overlayView:)();
  uint64_t v13 = OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController;
  id v14 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController);
  id v15 = v14;
  static ViewControllerContainment.remove(_:)(v14);

  id v16 = *(void **)(v1 + v13);
  *(void *)(v1 + v13) = v12;
  id v17 = v12;

  sub_10000BD64();
}

void sub_10000C2B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for JULoadingViewController.PresentationContext(0LL);
  uint64_t v3 = __chkstk_darwin(v2);
  Swift::String v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static JULoadingViewController.PresentationContext.placeholder.getter(v3);
  id v6 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
  Swift::String v7 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v5, 0LL);
  uint64_t v8 = OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController);
  id v10 = v9;
  static ViewControllerContainment.remove(_:)(v9);

  uint64_t v11 = *(void **)(v1 + v8);
  *(void *)(v1 + v8) = v7;
  id v12 = v7;

  sub_10000BD64();
}

void sub_10000C38C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_presenter);
  Swift::String v5 = (char *)objc_msgSend( objc_allocWithZone((Class)type metadata accessor for ErrorShieldView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  sub_100135880(1);
  swift_errorRetain(a1);
  ErrorPresenter.error.setter(a1);
  uint64_t v6 = swift_allocObject(&unk_100280BA0, 24LL, 7LL);
  swift_weakInit(v6 + 16, v4);
  Swift::String v7 = (double (**)())&v5[OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler];
  uint64_t v8 = *(void *)&v5[OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler];
  uint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC6Arcade15ErrorShieldView_retryHandler + 8];
  *Swift::String v7 = sub_10000D40C;
  v7[1] = (double (*)())v6;
  swift_retain_n(v6, 2LL);
  sub_10000D3D8(v8, v9);
  sub_100135DD4();
  swift_release_n(v6, 2LL);
  id v10 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
  uint64_t v11 = v5;
  id v12 = (void *)OverlayViewController.init(overlayView:)();
  uint64_t v13 = OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController;
  id v14 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController);
  id v15 = v14;
  static ViewControllerContainment.remove(_:)(v14);

  id v16 = *(void **)(v2 + v13);
  *(void *)(v2 + v13) = v12;
  id v17 = v12;

  sub_10000BD64();
}

void sub_10000C54C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController);
  if (v2)
  {
    uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
    uint64_t v4 = swift_allocObject(v3, 40LL, 7LL);
    *(_OWORD *)(v4 + sub_10000620C(v0 + 16) = xmmword_100233570;
    id v5 = v2;
    id v6 = [v5 view];
    if (v6)
    {
      *(void *)(v4 + 32) = v6;
      specialized Array._endMutation()(v6);

      return;
    }

    goto LABEL_14;
  }

  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v8 = swift_allocObject(v7, 40LL, 7LL);
  *(_OWORD *)(v8 + sub_10000620C(v0 + 16) = xmmword_100233570;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionView);
  *(void *)(v8 + 32) = v9;
  uint64_t v14 = v8;
  specialized Array._endMutation()(v8);
  if (dispatch thunk of BaseShelfPresenter.sectionCount.getter(v9) >= 1)
  {
    id v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR____TtC6Arcade23PurchasesViewController_detailViewController), "view"));
    if (!v10)
    {
LABEL_15:
      __break(1u);
      return;
    }

    uint64_t v11 = (uint64_t)v10;
    if ((unint64_t)v14 >> 62)
    {
      uint64_t v12 = v14 < 0 ? v14 : v14 & 0xFFFFFFFFFFFFFF8LL;
      swift_bridgeObjectRetain(v14);
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v12);
      swift_bridgeObjectRelease(v14);
      if (v13 < 0)
      {
        __break(1u);
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }

    sub_1001BA35C(0LL, 0LL, v11);
  }

uint64_t type metadata accessor for PurchasesViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade23PurchasesViewController);
}

id sub_10000C82C()
{
  return v0;
}

uint64_t sub_10000C83C(uint64_t a1)
{
  uint64_t v1 = swift_retain(a1);
  return dispatch thunk of TVPurchasesDetailsPresenter.page.setter(v1);
}

void sub_10000C86C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionView);
  id v2 = (id)IndexPath._bridgeToObjectiveC()();
  [v1 selectItemAtIndexPath:v2 animated:0 scrollPosition:0];
}

id sub_10000C8C4()
{
  uint64_t v1 = TVPurchasesPagePresenter.pageTitle.getter();
  sub_10000B0C8(v1, v2);
  return [*(id *)(v0 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_masterCollectionView) reloadData];
}

uint64_t sub_10000C90C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_objectGraph);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for ActionRunner.Origin.userInitiated(_:),  v5);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, a2, v8, v11);
    __n128 v12 = swift_release(v10);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v12);
  }

  return result;
}

void sub_10000C9E8()
{
  uint64_t v1 = OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade23PurchasesViewController_overlayViewController);
  if (v2)
  {
    uint64_t v3 = type metadata accessor for JULoadingViewController(0LL);
    if (swift_dynamicCastClass(v2, v3))
    {
      id v4 = v2;
      static ViewControllerContainment.remove(_:)(v2);

      uint64_t v5 = *(void **)(v0 + v1);
      *(void *)(v0 + v1) = 0LL;

      sub_10000BD64();
    }
  }

id sub_10000CBA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002DF650);
  __chkstk_darwin(v2);
  id v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for IndexPath(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v9 = [v1 indexPathsForSelectedItems];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v5);

    if (*(void *)(v11 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))( v4,  v11 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)),  v5);
      uint64_t v12 = 0LL;
    }

    else
    {
      uint64_t v12 = 1LL;
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v12, 1LL, v5);
    __n128 v13 = swift_bridgeObjectRelease(v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1LL, v5, v13) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      NSIndexPath v21 = IndexPath._bridgeToObjectiveC()();
      Class isa = v21.super.isa;
      id v14 = objc_msgSend(v1, "cellForItemAtIndexPath:", v21.super.isa, v21._reserved);

      if (v14)
      {
        if ([v14 isFocused])
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

          return 0LL;
        }

        uint64_t v16 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
        uint64_t v17 = swift_allocObject(v16, 40LL, 7LL);
        *(_OWORD *)(v17 + sub_10000620C(v0 + 16) = xmmword_100233570;
        *(void *)(v17 + 32) = v14;
        CGFloat v20 = (void *)v17;
        specialized Array._endMutation()(v17);
        id v14 = v20;
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v14;
    }
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1LL, 1LL, v5);
  }

  sub_10000D394((uint64_t)v4);
  return 0LL;
}

id sub_10000CE94()
{
  return sub_10000D18C((uint64_t (*)(void))type metadata accessor for MasterCollectionView);
}

uint64_t type metadata accessor for MasterCollectionView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6ArcadeP33_3358C411B8F694B15B79B3C5333FA14D20MasterCollectionView);
}

void sub_10000CEC0(void *a1)
{
  v4.receiver = a1;
  v4.super_class = (Class)type metadata accessor for PurchasesDetailsViewController(0LL);
  id v1 = v4.receiver;
  objc_msgSendSuper2(&v4, "viewDidLoad");
  id v2 = objc_msgSend(v1, "collectionView", v4.receiver, v4.super_class);
  if (v2)
  {
    id v3 = v2;
    [v2 setClipsToBounds:0];

    id v1 = v3;
  }
}

void sub_10000CF48()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for IndexSet(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v6 = [v0 collectionView];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = (uint64_t)[v6 numberOfSections];

    if (v8 >= 1
      && dispatch thunk of BaseShelfPresenter.sectionCount.getter(v9) >= 1
      && dispatch thunk of BaseShelfPresenter.numberOfRows(for:)(0LL) >= 1)
    {
      id v10 = [v1 collectionView];
      if (v10)
      {
        uint64_t v11 = v10;
        CGFloat v20 = &off_10027FF60;
        uint64_t v12 = sub_100009CA4( &qword_1002E8300,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet,  (uint64_t)&protocol conformance descriptor for IndexSet);
        uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002DE0E0);
        unint64_t v14 = sub_10000D434();
        dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v13, v14, v2, v12);
        IndexSet._bridgeToObjectiveC()(v15);
        uint64_t v17 = v16;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        [v11 reloadSections:v17];

        return;
      }

      goto LABEL_11;
    }

    id v18 = [v1 collectionView];
    if (v18)
    {
      id v19 = v18;
      [v18 reloadData];

      return;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
LABEL_11:
  __break(1u);
}

id sub_10000D130(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for PurchasesDetailsViewController(0LL);
  return objc_msgSendSuper2(&v5, "contentScrollViewForEdge:", a3);
}

id sub_10000D180()
{
  return sub_10000D18C(type metadata accessor for PurchasesDetailsViewController);
}

id sub_10000D18C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0LL);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for PurchasesDetailsViewController(uint64_t a1)
{
  uint64_t result = qword_1002DDC90;
  if (!qword_1002DDC90) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PurchasesDetailsViewController);
  }
  return result;
}

uint64_t sub_10000D200(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 256LL, 0LL, v2, a1 + 944);
}

uint64_t sub_10000D234()
{
  return type metadata accessor for PurchasesDetailsViewController(0LL);
}

uint64_t sub_10000D23C(uint64_t a1, uint64_t a2)
{
  return sub_100009CA4( &qword_1002DE080,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for PurchasesViewController,  (uint64_t)&unk_100233878);
}

uint64_t sub_10000D268(uint64_t a1, uint64_t a2)
{
  return sub_100009CA4( &qword_1002DE088,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for PurchasesViewController,  (uint64_t)&unk_1002338A0);
}

uint64_t sub_10000D294(uint64_t a1, uint64_t a2)
{
  return sub_100009CA4( (unint64_t *)&unk_1002DE090,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for PurchasesViewController,  (uint64_t)&unk_100233840);
}

double sub_10000D2C0(uint64_t a1)
{
  return sub_10000D2D4( a1,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSubscribePresenter,  &qword_1002DE0A8);
}

double sub_10000D2D4(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = a2(0LL);
    uint64_t v10 = sub_100009CA4(a3, 255LL, a2, (uint64_t)&protocol conformance descriptor for BasePresenter);
    dispatch thunk of UpdatablePresenter.update(ignoringCache:)(1LL, v9, v10);
    *(void *)&double result = swift_release(v8).n128_u64[0];
  }

  return result;
}

double sub_10000D36C(uint64_t a1)
{
  return sub_10000D2D4( a1,  (uint64_t (*)(uint64_t))&type metadata accessor for TopChartsPagePresenter,  &qword_1002DE0B0);
}

double sub_10000D380(uint64_t a1)
{
  return sub_10000D2D4( a1,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeWelcomePagePresenter,  &qword_1002DE0B8);
}

uint64_t sub_10000D394(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002DF650);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10000D3D8(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_release(a2);
  }
  return result;
}

uint64_t sub_10000D3E8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

double sub_10000D40C()
{
  return sub_10000D2D4( v0,  (uint64_t (*)(uint64_t))&type metadata accessor for TVPurchasesPagePresenter,  &qword_1002DE0A0);
}

unint64_t sub_10000D434()
{
  unint64_t result = qword_1002EDCD0;
  if (!qword_1002EDCD0)
  {
    uint64_t v1 = sub_100003274((uint64_t *)&unk_1002DE0E0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002EDCD0);
  }

  return result;
}

void sub_10000D480(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6Arcade23PurchasesViewController_pageTraits;
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC6Arcade23PurchasesViewController_pageTraits];
  *(void *)&v1[OBJC_IVAR____TtC6Arcade23PurchasesViewController_pageTraits] = a1;
  ((void (*)(void))swift_unknownObjectRetain)();
  swift_unknownObjectRelease(v3);
  if ([v1 isViewLoaded])
  {
    uint64_t v4 = *(void **)&v1[v2];
    if (v4)
    {
      swift_unknownObjectRetain(*(void *)&v1[v2]);
      id v5 = [v1 view];
      if (v5)
      {
        id v6 = v5;
        [v4 pageMarginInsets];
        objc_msgSend(v6, "setLayoutMargins:");

        id v7 = [v1 view];
        if (v7)
        {
          id v8 = v7;
          [v7 setNeedsLayout];
          swift_unknownObjectRelease(v4);

          return;
        }
      }

      else
      {
        __break(1u);
      }

      __break(1u);
    }
  }

uint64_t sub_10000D57C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TitleHeaderView.Style(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_10000D5C4()
{
  unint64_t result = qword_1002DE160;
  if (!qword_1002DE160)
  {
    uint64_t v1 = type metadata accessor for AchievementSummaryCardCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100233938, v1);
    atomic_store(result, (unint64_t *)&qword_1002DE160);
  }

  return result;
}

double sub_10000D610()
{
  uint64_t v0 = type metadata accessor for AchievementSummaryLayout.Metrics(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for PageGrid(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = ShelfLayoutContext.contentPageGrid.getter(v6);
  double v10 = PageGrid.componentMeasuringSize(spanning:)(v9, 1.0);
  double v12 = v11;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  if (qword_1002DCCB0 != -1) {
    swift_once(&qword_1002DCCB0, sub_100130140);
  }
  uint64_t v14 = sub_1000061F4(v0, (uint64_t)qword_1002F0878);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v14, v0);
  uint64_t v16 = ShelfLayoutContext.contentPageGrid.getter(v15);
  double v17 = PageGrid.containerWidth.getter(v16);
  uint64_t v18 = ((uint64_t (*)(char *, uint64_t))v13)(v8, v4);
  uint64_t v19 = ShelfLayoutContext.traitCollection.getter(v18);
  CGFloat v20 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  NSIndexPath v21 = (char *)objc_allocWithZone(v20);
  CGFloat v22 = (double *)&v21[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_pageContainerSize];
  *CGFloat v22 = v17;
  v22[1] = 1.79769313e308;
  *(void *)&v21[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_traitCollection] = v19;
  v27.receiver = v21;
  v27.super_class = v20;
  id v23 = objc_msgSendSuper2(&v27, "init");
  static AchievementSummaryLayout.estimatedMeasurements(fitting:using:in:)(v3, v23, v10, v12);
  double v25 = v24;

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v25;
}

uint64_t sub_10000D7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000FF90(v2, qword_1002DE170);
  uint64_t v3 = sub_1000061F4(v2, (uint64_t)qword_1002DE170);
  if (qword_1002DC5D0 != -1) {
    swift_once(&qword_1002DC5D0, sub_100071448);
  }
  uint64_t v4 = sub_1000061F4(v2, (uint64_t)qword_1002EEDC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(v3, v4, v2);
}

uint64_t sub_10000D88C()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  sub_10000FF90(v0, qword_1002DE188);
  sub_1000061F4(v0, (uint64_t)qword_1002DE188);
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v2 = [v1 blackColor];
  id v3 = [v1 whiteColor];
  v7[0] = sub_1000031E8(&qword_1002DE250);
  uint64_t v4 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  v7[1] = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_100233A88, v7);
  id v8 = v2;
  id v9 = v3;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v9, &v8, v4);
}

uint64_t sub_10000D980()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  sub_10000FF90(v0, qword_1002DE1A0);
  sub_1000061F4(v0, (uint64_t)qword_1002DE1A0);
  uint64_t v1 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.7).super.isa;
  Class v3 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 0.80054).super.isa;
  v6[0] = sub_1000031E8(&qword_1002DE250);
  v6[1] = v1;
  uint64_t KeyPath = swift_getKeyPath(&unk_100233A88, v6);
  Class v7 = isa;
  Class v8 = v3;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v8, &v7, v1);
}

double sub_10000DA6C()
{
  double result = 8.0;
  xmmword_1002DE1B8 = xmmword_100233990;
  *(_OWORD *)&qword_1002DE1C8 = xmmword_100233990;
  return result;
}

void sub_10000DA84()
{
  qword_1002EE498 = 0x4059000000000000LL;
}

char *sub_10000DA94(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, a6);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v6[OBJC_IVAR____TtC6Arcade17CollapsedTextView_automaticallyAdjustTextColors] = 1;
  uint64_t v15 = &v6[OBJC_IVAR____TtC6Arcade17CollapsedTextView_primaryActionHandler];
  *uint64_t v15 = 0LL;
  v15[1] = 0LL;
  v6[OBJC_IVAR____TtC6Arcade17CollapsedTextView_shouldShowMoreButtonIfNeeded] = 1;
  *(void *)&v6[OBJC_IVAR____TtC6Arcade17CollapsedTextView_languageAwareString] = 0LL;
  v6[OBJC_IVAR____TtC6Arcade17CollapsedTextView_directionalTextAlignment] = 0;
  uint64_t v16 = v6;
  double v17 = sub_10014E544();
  *(void *)&v16[OBJC_IVAR____TtC6Arcade17CollapsedTextView_moreButton] = v17;
  [v17 setUserInteractionEnabled:0];
  type metadata accessor for DynamicTypeTextView(0LL);
  if (qword_1002DC318 != -1) {
    swift_once(&qword_1002DC318, sub_10000D7FC);
  }
  uint64_t v18 = sub_1000061F4(v11, (uint64_t)qword_1002DE170);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v18, v11);
  uint64_t v19 = sub_1000F2AB8((uint64_t)v14, 2LL, 0LL, 1);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel] = v19;
  uint64_t v20 = qword_1002DC330;
  NSIndexPath v21 = v19;
  if (v20 != -1) {
    swift_once(&qword_1002DC330, sub_10000DA6C);
  }
  objc_msgSend(v21, "setTextContainerInset:", xmmword_1002DE1B8, *(double *)&qword_1002DE1C8, unk_1002DE1D0);

  CGFloat v22 = (objc_class *)type metadata accessor for CollapsedTextView();
  v32.receiver = v16;
  v32.super_class = v22;
  id v23 = (char *)objc_msgSendSuper2(&v32, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v24 = OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel;
  double v25 = *(void **)&v23[OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel];
  CGFloat v26 = v23;
  id v27 = [v25 textContainer];
  [v27 setMaximumNumberOfLines:0];

  id v28 = [*(id *)&v23[v24] textContainer];
  [v28 setLineBreakMode:4];

  [v26 setClipsToBounds:0];
  id v29 = [v26 contentView];
  [v29 addSubview:*(void *)&v23[v24]];

  id v30 = [v26 contentView];
  [v30 addSubview:*(void *)&v26[OBJC_IVAR____TtC6Arcade17CollapsedTextView_moreButton]];

  sub_10000F8F4();
  return v26;
}

char *sub_10000DD98(uint64_t a1)
{
  uint64_t v3 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v3);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  Class v8 = &v20[-v7];
  __chkstk_darwin(v9);
  uint64_t v11 = &v20[-v10];
  uint64_t v12 = (char *)objc_msgSend(objc_allocWithZone(v1), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v11, a1, v14);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0LL, 1LL, v14);
  uint64_t v16 = *(void *)&v12[OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel];
  sub_10001027C((uint64_t)v11, (uint64_t)v8, &qword_1002DE930);
  uint64_t v17 = v16 + OBJC_IVAR____TtC6Arcade19DynamicTypeTextView_fontUseCase;
  swift_beginAccess(v16 + OBJC_IVAR____TtC6Arcade19DynamicTypeTextView_fontUseCase, v21, 0LL, 0LL);
  sub_10001027C(v17, (uint64_t)v5, &qword_1002DE930);
  swift_beginAccess(v17, v20, 33LL, 0LL);
  uint64_t v18 = v12;
  sub_10000FF48((uint64_t)v8, v17);
  swift_endAccess(v20);
  sub_1000F31D8((uint64_t)v5);
  sub_100006060((uint64_t)v8, &qword_1002DE930);
  sub_100006060((uint64_t)v5, &qword_1002DE930);
  sub_100006060((uint64_t)v11, &qword_1002DE930);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  return v18;
}

double sub_10000E038()
{
  return 30.0;
}

uint64_t static MotionEffects.verticalPan.getter()
{
  return 8LL;
}

uint64_t sub_10000E078()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel) text];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    uint64_t v5 = v4;
  }

  else
  {
    uint64_t v3 = 0LL;
    uint64_t v5 = 0LL;
  }

  char v6 = static String.isNilOrEmpty(_:)(v3, v5);
  swift_bridgeObjectRelease(v5);
  if ((v6 & 1) != 0) {
    return 0LL;
  }
  else {
    return [*(id *)(v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_moreButton) isHidden] ^ 1;
  }
}

void sub_10000E11C()
{
  id v1 = (objc_class *)type metadata accessor for CollapsedTextView();
  v48.receiver = v0;
  v48.super_class = v1;
  objc_msgSendSuper2(&v48, "layoutSubviews");
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel];
  LayoutMarginsAware<>.layoutFrame.getter(v1);
  objc_msgSend(v2, "sizeThatFits:", v3, v4);
  double v6 = v5;
  double v8 = v7;
  *(void *)&double v9 = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  double v11 = v10;
  *(void *)&v49.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  double Width = CGRectGetWidth(v49);
  LayoutMarginsAware<>.layoutFrame.getter(v1);
  if (v13 >= v8) {
    double v13 = v8;
  }
  objc_msgSend(v2, "setFrame:", v9, v11, Width, v13);
  uint64_t v14 = *(void **)&v0[OBJC_IVAR____TtC6Arcade17CollapsedTextView_moreButton];
  if ([v14 isHidden])
  {
    id v15 = [v2 layer];
    [v15 setMask:0];
  }

  else
  {
    LayoutMarginsAware<>.layoutFrame.getter(v1);
    objc_msgSend(v14, "sizeThatFits:", v16, v17);
    double v19 = v18;
    double v21 = v20;
    objc_msgSend(v2, "measurementsWithFitting:in:", v0, v6, v8);
    double v23 = v22;
    objc_msgSend(v14, "measurementsWithFitting:in:", v0, v19, v21);
    double v25 = v24 - v23;
    *(void *)&v50.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
    double v26 = CGRectGetMaxX(v50) - v19;
    [v2 frame];
    double v27 = v25 + CGRectGetMaxY(v51) - v21;
    sub_10000F7C0();
    uint64_t v29 = v28;
    *(void *)&double v30 = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
    v31.n128_f64[0] = v21;
    objc_msgSend( v14,  "setFrame:",  CGRect.withLayoutDirection(_:relativeTo:)(v29, v30, v32, v33, v34, v26, v27, v19, v31));
    id v35 = [v2 layer];
    [v2 bounds];
    double v37 = v36;
    double v39 = v38;
    double v41 = v40;
    double v43 = v42;
    [v14 frame];
    id v15 = sub_10000EF08(v37, v39, v41, v43, v44, v45, v46, v47);
    [v35 setMask:v15];
  }
}

void sub_10000E3D8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002DE270);
  __n128 v8 = __chkstk_darwin(v7);
  double v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Paragraph.Alignment(0LL, v8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  id v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  double v19 = (char *)&v41 - v18;
  if (!a1)
  {
    sub_10000F6C8(0LL, 0LL);
    [v3 setNeedsLayout];
    return;
  }

  uint64_t v49 = a3;
  CGFloat v47 = v17;
  double v20 = *(void **)&v3[OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel];
  id v50 = a1;
  id v21 = [v20 textContainer];
  [v21 setMaximumNumberOfLines:a2];

  int v22 = v3[OBJC_IVAR____TtC6Arcade17CollapsedTextView_automaticallyAdjustTextColors];
  objc_super v48 = v20;
  if (v22 == 1)
  {
    double v42 = v15;
    double v43 = v19;
    uint64_t v44 = v12;
    id v23 = [v20 textColor];
    if (!v23) {
      id v23 = [(id)objc_opt_self(UIColor) clearColor];
    }
    id v24 = objc_allocWithZone(&OBJC_CLASS___NSMutableAttributedString);
    id v25 = v50;
    id v26 = [v24 initWithAttributedString:v50];
    id v46 = [v25 length];
    NSAttributedStringKey v45 = NSForegroundColorAttributeName;
    uint64_t v27 = swift_allocObject(&unk_100280C90, 32LL, 7LL);
    *(void *)(v27 + swift_weakDestroy(v0 + 16) = v26;
    *(void *)(v27 + 24) = v23;
    uint64_t v28 = swift_allocObject(&unk_100280CB8, 32LL, 7LL);
    *(void *)(v28 + swift_weakDestroy(v0 + 16) = sub_1000102EC;
    *(void *)(v28 + 24) = v27;
    aBlock[4] = sub_100010304;
    uint64_t v52 = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100172D70;
    aBlock[3] = &unk_100280CD0;
    uint64_t v29 = _Block_copy(aBlock);
    uint64_t v30 = v52;
    id v31 = v26;
    id v32 = v23;
    swift_retain(v28);
    *(void *)&double v33 = swift_release(v30).n128_u64[0];
    objc_msgSend(v25, "enumerateAttribute:inRange:options:usingBlock:", v45, 0, v46, 0x100000, v29, v33);
    _Block_release(v29);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v28, "", 133LL, 82LL, 11LL, 1LL);

    swift_release(v27);
    swift_release(v28);
    if ((v29 & 1) != 0)
    {
      __break(1u);
      goto LABEL_24;
    }

    sub_100010108(v31);

    double v19 = v43;
    uint64_t v12 = v44;
    id v15 = v42;
  }

  else
  {
    id v34 = v50;
    sub_100010108(a1);
  }

  sub_10001027C(v49, (uint64_t)v10, (uint64_t *)&unk_1002DE270);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11) == 1)
  {
    sub_100006060((uint64_t)v10, (uint64_t *)&unk_1002DE270);
LABEL_22:
    [v3 setNeedsLayout];

    return;
  }

  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v10, v11);
  id v35 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v35(v15, v19, v11);
  double v36 = v47;
  v35(v47, v15, v11);
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v36, v11);
  if (v37 == enum case for Paragraph.Alignment.left(_:))
  {
    uint64_t v38 = 0LL;
    double v39 = v48;
LABEL_21:
    double v40 = *(void (**)(char *, uint64_t))(v12 + 8);
    v40(v15, v11);
    [v39 setTextAlignment:v38];
    v40(v19, v11);
    goto LABEL_22;
  }

  double v39 = v48;
  if (v37 == enum case for Paragraph.Alignment.center(_:))
  {
    uint64_t v38 = 1LL;
    goto LABEL_21;
  }

  if (v37 == enum case for Paragraph.Alignment.right(_:))
  {
    uint64_t v38 = 2LL;
    goto LABEL_21;
  }

  if (v37 == enum case for Paragraph.Alignment.justified(_:))
  {
    uint64_t v38 = 3LL;
    goto LABEL_21;
  }

  if (v37 == enum case for Paragraph.Alignment.localized(_:))
  {
    uint64_t v38 = 4LL;
    goto LABEL_21;
  }

LABEL_24:
  _diagnoseUnexpectedEnumCase<A>(type:)(v11, v11);
  __break(1u);
}

                  __break(1u);
LABEL_25:
                  __break(1u);
                  goto LABEL_26;
                }

        uint64_t v13 = (v21 - 1) & v21;
        double v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }

      id v23 = 8 * v19;
      id v24 = *(void *)(*(void *)(v5 + 48) + v23);
      id v25 = *(void *)(*(void *)(v5 + 56) + v23);
      id v26 = static Hasher._hash(seed:_:)(*(void *)(v8 + 40), v24);
      uint64_t v27 = -1LL << *(_BYTE *)(v8 + 32);
      uint64_t v28 = v26 & ~v27;
      uint64_t v29 = v28 >> 6;
      if (((-1LL << v28) & ~*(void *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        uint64_t v16 = __clz(__rbit64((-1LL << v28) & ~*(void *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        uint64_t v30 = 0;
        id v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }

          id v32 = v29 == v31;
          if (v29 == v31) {
            uint64_t v29 = 0LL;
          }
          v30 |= v32;
          double v33 = *(void *)(v15 + 8 * v29);
        }

        while (v33 == -1);
        uint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }

      *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v16;
      double v17 = 8 * v16;
      *(void *)(*(void *)(v8 + 48) + v17) = v24;
      *(void *)(*(void *)(v8 + 56) + v17) = v25;
      ++*(void *)(v8 + 16);
    }
  }

  swift_release(v5);
LABEL_41:
  char *v3 = v8;
}

    uint64_t v11 = (v19 - 1) & v19;
    uint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_25:
    id v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    int v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if ((v38 & 1) != 0)
    {
      sub_1000086FC(v22, v40);
    }

    else
    {
      sub_100008364((uint64_t)v22, (uint64_t)v40);
      id v23 = v21;
    }

    id v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    id v26 = v25;
    Hasher.init(_seed:)(v39);
    String.hash(into:)(v39, v24, v26);
    uint64_t v27 = Hasher._finalize()();
    swift_bridgeObjectRelease(v26);
    uint64_t v28 = -1LL << *(_BYTE *)(v8 + 32);
    uint64_t v29 = v27 & ~v28;
    uint64_t v30 = v29 >> 6;
    if (((-1LL << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      uint64_t v14 = __clz(__rbit64((-1LL << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      id v31 = 0;
      id v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }

        double v33 = v30 == v32;
        if (v30 == v32) {
          uint64_t v30 = 0LL;
        }
        v31 |= v33;
        id v34 = *(void *)(v12 + 8 * v30);
      }

      while (v34 == -1);
      uint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }

    *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
    *(void *)(*(void *)(v8 + 48) + 8 * v14) = v21;
    sub_1000086FC(v40, (_OWORD *)(*(void *)(v8 + 56) + 32 * v14));
    ++*(void *)(v8 + 16);
  }

  swift_release(v5);
  uint64_t v18 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_40:
  id v35 = 1LL << *(_BYTE *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v18, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    char *v18 = -1LL << v35;
  }
  *(void *)(v5 + swift_weakDestroy(v0 + 16) = 0LL;
LABEL_44:
  swift_release(v5);
  char *v3 = v8;
}

      int v37 = [v1 collectionView];
      if (!v37)
      {
        __break(1u);
        return;
      }

      uint64_t v38 = v37;
      [v37 contentOffset];
      double v40 = v39;

      uint64_t v41 = *(void *)v25;
      *(void *)id v25 = v40;
      double v42 = v25[8];
      double v43 = 64;
      goto LABEL_27;
    }
  }

    swift_once(&qword_1002DCBC0, sub_100102E30);
    goto LABEL_21;
  }

  __break(1u);
  return result;
}

    swift_once(&qword_1002DCBC0, sub_100102E30);
    goto LABEL_21;
  }

  __break(1u);
}

          __break(1u);
          goto LABEL_25;
        }

      uint64_t v14 = (v21 - 1) & v21;
      double v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }

    id v23 = a4;
    id v24 = *(void *)(a4 + 48);
    id v25 = *(void *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    id v26 = *(void *)(v12 + 40);
    uint64_t v27 = sub_100003B6C( &qword_1002DE6A8,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  (uint64_t)&protocol conformance descriptor for AdamId);
    double result = dispatch thunk of Hashable._rawHashValue(seed:)(v26, v8, v27);
    uint64_t v28 = -1LL << *(_BYTE *)(v12 + 32);
    uint64_t v29 = result & ~v28;
    uint64_t v30 = v29 >> 6;
    if (((-1LL << v29) & ~*(void *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      id v31 = __clz(__rbit64((-1LL << v29) & ~*(void *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0LL;
      double v17 = v40;
    }

    else
    {
      id v32 = 0;
      double v33 = (unint64_t)(63 - v28) >> 6;
      double v17 = v40;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }

        id v34 = v30 == v33;
        if (v30 == v33) {
          uint64_t v30 = 0LL;
        }
        v32 |= v34;
        id v35 = *(void *)(v16 + 8 * v30);
      }

      while (v35 == -1);
      id v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }

    *(void *)(v16 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v31;
    double result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))( *(void *)(v12 + 48) + v31 * v25,  v11,  v8);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1LL)) {
      break;
    }
    a4 = v23;
    if (!a3) {
      goto LABEL_37;
    }
  }

  __break(1u);
}

double sub_10000E8B8(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel);
  id v8 = [v7 textContainer];
  id v9 = [v8 exclusionPaths];

  uint64_t v10 = sub_100006028(0LL, (unint64_t *)&unk_1002DE280, &OBJC_CLASS___UIBezierPath_ptr);
  uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0) {
      uint64_t v22 = v11;
    }
    else {
      uint64_t v22 = v11 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v11);
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v11);
  }

  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  *(void *)&double v13 = swift_bridgeObjectRelease(v11).n128_u64[0];
  if (v12 < 1)
  {
    uint64_t v16 = 0LL;
  }

  else
  {
    id v14 = objc_msgSend(v7, "textContainer", v13);
    id v15 = [v14 exclusionPaths];

    uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v10);
    id v17 = [v7 textContainer];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v17 setExclusionPaths:isa];
  }

  objc_msgSend(v7, "measurementsWithFitting:in:", a1, a2, a3);
  if (v16)
  {
    id v19 = [v7 textContainer];
    Class v20 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "setExclusionPaths:", v20, swift_bridgeObjectRelease(v16).n128_f64[0]);
  }

  return a2;
}

void sub_10000EB68()
{
  uint64_t v1 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_shouldShowMoreButtonIfNeeded) == 1)
  {
    id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel), "attributedText"));
    if (v4)
    {
      double v5 = v4;
      if ((uint64_t)[v4 length] >= 1)
      {
        double v6 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_moreButton);
        double left = UIEdgeInsetsZero.left;
        double bottom = UIEdgeInsetsZero.bottom;
        double right = UIEdgeInsetsZero.right;
        uint64_t v10 = type metadata accessor for CollapsedTextView();
        LayoutMarginsAware<>.layoutFrame.getter(v10);
        double v12 = v11;
        double v14 = v13 - (left + right);
        uint64_t v16 = type metadata accessor for FontUseCase(0LL, v15);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v3, 1LL, 1LL, v16);
        uint64_t v17 = type metadata accessor for Feature(0LL);
        v23[3] = v17;
        v23[4] = sub_1000100C0();
        uint64_t v18 = sub_100009D54(v23);
        (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104LL))( v18,  enum case for Feature.measurement_with_labelplaceholder(_:),  v17);
        LOBYTE(v17) = isFeatureEnabled(_:)(v23);
        _s6Arcade17PillOverlayLayoutVwxx_0(v23);
        char v21 = v17 & 1;
        static LabelPlaceholderCompatibility.measurements(attributedText:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)( v5,  v3,  4LL,  0LL,  0LL,  0LL,  0LL,  v0,  v14,  1.79769313e308,  v21);
        double v20 = v19;
        sub_100006060((uint64_t)v3, &qword_1002DE930);
        [v6 setHidden:v12 >= bottom + UIEdgeInsetsZero.top + v20];

        return;
      }
    }
  }

  [*(id *)(v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_moreButton) setHidden:1];
}

void sub_10000ED90(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  char v4 = a1;
  sub_10006734C(a1, a2);
  if (v4 == 1)
  {
    uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_moreButton);
    sub_100066754((uint64_t)v15);
    id v8 = (void *)v15[0];
    uint64_t v9 = v15[1];
    uint64_t v10 = v15[2];
    uint64_t v11 = v15[3];
    uint64_t v12 = v15[4];
    uint64_t v13 = v15[5];
    char v14 = v16;
    sub_100010014((uint64_t)v15, (uint64_t)v17);
    if (v17[48] != 255)
    {
      sub_10001005C((uint64_t)v17, (uint64_t)&v18);
      sub_100010098(0LL, 0LL, 0LL, 0LL, 0LL, 0LL, 255);
      sub_100010098(v8, v9, v10, v11, v12, v13, v14);
      [v7 _setIdleModeLayoutAttributes:0];
    }
  }

  else
  {
    if (v4 == 2
      && ([*(id *)(v2 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_moreButton) isHidden] & 1) == 0)
    {
      double v5 = *(void (**)(uint64_t))(v2 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_primaryActionHandler);
      if (v5)
      {
        uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_primaryActionHandler + 8);
        swift_retain(v6);
        v5(v3);
        sub_10000D3D8((uint64_t)v5, v6);
      }
    }

    unint64_t v18 = 0xBFE8000000000000LL;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    uint64_t v21 = 0LL;
    char v22 = 1;
    sub_1000661C8((uint64_t)&v18);
  }

id sub_10000EF08(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  *(double *)&v57[16] = a3;
  *(double *)&v57[24] = a4;
  *(double *)double v57 = a1;
  *(double *)&v57[8] = a2;
  id v12 = [objc_allocWithZone(CALayer) init];
  sub_10000F7C0();
  uint64_t v14 = v13;
  if (qword_1002DC338 != -1) {
    swift_once(&qword_1002DC338, sub_10000DA84);
  }
  double v15 = *(double *)&qword_1002EE498;
  v59.origin.x = a5;
  v59.origin.y = a6;
  v59.size.width = a7;
  v59.size.height = a8;
  double Height = CGRectGetHeight(v59);
  if (Height >= v15) {
    double v17 = v15;
  }
  else {
    double v17 = Height;
  }
  v60.origin.x = a5;
  v60.origin.y = a6;
  v60.size.width = a7;
  v60.size.height = a8;
  double v58 = CGRectGetWidth(v60) + v17;
  v61.origin.x = a5;
  v61.origin.y = a6;
  v61.size.width = a7;
  v61.size.height = a8;
  double MinX = CGRectGetMinX(v61);
  v62.origin.x = a5;
  v62.origin.y = a6;
  v62.size.width = a7;
  v62.size.height = a8;
  double MinY = CGRectGetMinY(v62);
  v63.origin.x = a5;
  v63.origin.y = a6;
  v63.size.width = a7;
  v63.size.height = a8;
  double v19 = CGRectGetHeight(v63);
  double MaxY = CGRectGetMaxY(*(CGRect *)v57);
  v64.origin.x = a5;
  v64.origin.y = a6;
  v64.size.width = a7;
  v64.size.height = a8;
  double v21 = MaxY - CGRectGetMinY(v64);
  if (v19 > v21) {
    v22.n128_f64[0] = v19;
  }
  else {
    v22.n128_f64[0] = v21;
  }
  double v23 = CGRect.withLayoutDirection(_:relativeTo:)(v14, a5, a6, a7, a8, MinX - v17, MinY, v58, v22);
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;
  v65.origin.x = a5;
  v65.origin.y = a6;
  v65.size.width = a7;
  v65.size.height = a8;
  CGRectGetWidth(v65);
  uint64_t v30 = (void *)objc_opt_self(&OBJC_CLASS___UIBezierPath);
  id v31 = objc_msgSend(v30, "bezierPathWithRect:", v23, v25, v27, v29);
  id v32 =  objc_msgSend( v30,  "bezierPathWithRect:",  *(double *)v57,  *(double *)&v57[8],  *(double *)&v57[16],  *(double *)&v57[24]);
  [v31 appendPath:v32];

  id v33 = [objc_allocWithZone(CAShapeLayer) init];
  id v34 = [v31 CGPath];
  [v33 setPath:v34];

  [v33 setFillRule:kCAFillRuleEvenOdd];
  id v35 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v36 = [v35 blackColor];
  id v37 = [v36 CGColor];

  [v33 setFillColor:v37];
  id v38 = [objc_allocWithZone(CAGradientLayer) init];
  objc_msgSend(v38, "setFrame:", v23, v25, v27, v29);
  if (v14 == 1) {
    double v39 = 1.0;
  }
  else {
    double v39 = 0.0;
  }
  if (v14 == 1) {
    double v40 = 0.0;
  }
  else {
    double v40 = 1.0;
  }
  objc_msgSend(v38, "setStartPoint:", v39, 0.5);
  objc_msgSend(v38, "setEndPoint:", v40, 0.5);
  uint64_t v41 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v42 = swift_allocObject(v41, 48LL, 7LL);
  *(_OWORD *)(v42 + swift_weakDestroy(v0 + 16) = xmmword_1002339A0;
  sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
  *(NSNumber *)(v42 + 32) = NSNumber.init(floatLiteral:)(0.0);
  v43.super.super.Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  *(NSNumber *)(v42 + 40) = v43;
  specialized Array._endMutation()(v43.super.super.isa);
  uint64_t v44 = v42;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v38, "setLocations:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

  uint64_t v46 = sub_1000031E8((uint64_t *)&unk_1002DE260);
  uint64_t v47 = swift_allocObject(v46, 96LL, 7LL);
  *(_OWORD *)(v47 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
  id v48 = [v35 blackColor];
  id v49 = [v48 CGColor];

  type metadata accessor for CGColor(0LL);
  uint64_t v51 = v50;
  *(void *)(v47 + 56) = v50;
  *(void *)(v47 + 32) = v49;
  id v52 = [v35 clearColor];
  id v53 = [v52 CGColor];

  *(void *)(v47 + 88) = v51;
  *(void *)(v47 + 64) = v53;
  Class v54 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v38, "setColors:", v54, swift_bridgeObjectRelease(v47).n128_f64[0]);

  [v12 addSublayer:v33];
  [v12 addSublayer:v38];

  return v12;
}

void sub_10000F43C()
{
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_automaticallyAdjustTextColors) == 1)
  {
    uint64_t v1 = v0;
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel);
    if (qword_1002DC320 != -1) {
      swift_once(&qword_1002DC320, sub_10000D88C);
    }
    uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002DE240);
    sub_1000061F4(v3, (uint64_t)qword_1002DE188);
    uint64_t v7 = v0;
    Conditional.evaluate(with:)(&v8, &v7, v3);
    char v4 = v8;
    [v2 setTextColor:v8];

    double v5 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_moreButton);
    if (qword_1002DC328 != -1) {
      swift_once(&qword_1002DC328, sub_10000D980);
    }
    sub_1000061F4(v3, (uint64_t)qword_1002DE1A0);
    uint64_t v7 = v1;
    Conditional.evaluate(with:)(&v8, &v7, v3);
    uint64_t v6 = v8;
    [v5 setTitleColor:v8 forState:0];
  }

void (*sub_10000F57C(void *a1))(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel);
  a1[1] = v3;
  id v4 = [v3 textContainer];
  id v5 = [v4 maximumNumberOfLines];

  *a1 = v5;
  return sub_10000F5EC;
}

void sub_10000F5EC(uint64_t *a1, uint64_t a2)
{
}

void (*sub_10000F5F8(void *a1))(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel);
  a1[1] = v3;
  id v4 = [v3 textContainer];
  id v5 = [v4 lineBreakMode];

  *a1 = v5;
  return sub_10000F668;
}

void sub_10000F668(uint64_t *a1, uint64_t a2)
{
}

void sub_10000F674(uint64_t *a1, uint64_t a2, SEL *a3)
{
  uint64_t v4 = *a1;
  id v5 = [(id)a1[1] textContainer];
  objc_msgSend(v5, *a3, v4);
}

void sub_10000F6C8(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  NSString v4 = a2;
  uint64_t v6 = 0LL;
  if (a2)
  {
    type metadata accessor for LanguageAwareString(0LL);
    uint64_t v7 = swift_bridgeObjectRetain(v4);
    char Attributed = static LanguageAwareString.alwaysGenerateAttributedString.getter(v7);
    char v9 = static LanguageAwareString.keepStatisticsOnLanguageComponents.getter();
    uint64_t v6 = LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:keepStatisticsOnLanguageComponents:)( a1,  v4,  0LL,  Attributed & 1,  v9 & 1);
  }

  uint64_t v10 = OBJC_IVAR____TtC6Arcade17CollapsedTextView_languageAwareString;
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_languageAwareString);
  *(void *)(v3 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_languageAwareString) = v6;

  uint64_t v13 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel);
  uint64_t v14 = *(void **)(v3 + v10);
  if (v14)
  {
    id v15 = v14;
    LanguageAwareString.string.getter();
    NSString v17 = v16;

    swift_bridgeObjectRelease(v4);
LABEL_7:
    NSString v4 = String._bridgeToObjectiveC()();
    *(void *)&double v12 = swift_bridgeObjectRelease(v17).n128_u64[0];
    goto LABEL_8;
  }

  if (v4)
  {
    NSString v17 = v4;
    goto LABEL_7;
  }

LABEL_8:
  objc_msgSend(v13, "setText:", v4, v12);
  sub_10000EB68();
}

    NSString v17 = (v17 + 1) & v18;
  }

  while (((*(void *)(v9 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v17) & 1) != 0);
  swift_release(v9);
  __break(1u);
LABEL_19:
  swift_release(v9);
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:

  __break(1u);
}

  v51.origin.x = v22;
  v51.origin.y = v24;
  v51.size.width = v26;
  v51.size.height = v28;
  MidX = v30 * 0.5 + CGRectGetMinX(v51);
LABEL_9:
  sub_100006060((uint64_t)v12, (uint64_t *)&unk_1002DF9D0);
LABEL_10:
  v52.origin.x = v22;
  v52.origin.y = v24;
  v52.size.width = v26;
  v52.size.height = v28;
  CGRectGetMaxY(v52);
  return MidX;
}
}

  uint64_t v30 = PrivacyType.detail.getter(v27);
  id v32 = v31;
  id v33 = *(void **)&v6[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_detailLabel];
  id v34 = [v33 text];
  if (!v34) {
    goto LABEL_14;
  }
  id v35 = v34;
  id v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  id v38 = v37;

  if (v36 != v30 || v38 != v32)
  {
    double v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v30, v32, 0LL);
    swift_bridgeObjectRelease(v38);
    if ((v40 & 1) != 0)
    {
      double v39 = swift_bridgeObjectRelease(v32);
      goto LABEL_15;
    }

void sub_10000F7C0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel];
  id v2 = [v1 textContainer];
  uint64_t v3 = (char *)[v2 maximumNumberOfLines];

  BOOL v4 = __OFSUB__(v3, 1LL);
  id v5 = v3 - 1;
  if (v4)
  {
    __break(1u);
  }

  else
  {
    uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC6Arcade17CollapsedTextView_languageAwareString];
    if (v6)
    {
      id v7 = v6;
      id v8 = [v1 textContainer];
      id v9 = [v8 maximumNumberOfLines];

      [v0 bounds];
      double Width = CGRectGetWidth(v13);
      id v11 = [v1 textContainer];
      id v12 = [v11 lineBreakMode];

      dispatch thunk of LanguageAwareString.writingDirectionOfLine(_:maximumLinesShown:withWidth:lineBreakMode:cacheLayoutInfo:)( v5,  v9,  v12,  1LL,  Width);
    }
  }

void sub_10000F8F4()
{
  if (v0[OBJC_IVAR____TtC6Arcade17CollapsedTextView_directionalTextAlignment])
  {
    uint64_t v1 = v0;
    if (v0[OBJC_IVAR____TtC6Arcade17CollapsedTextView_directionalTextAlignment] == 1)
    {
      id v2 = [v0 traitCollection];
      char v3 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v3 & 1) != 0) {
        uint64_t v4 = 2LL;
      }
      else {
        uint64_t v4 = 0LL;
      }
    }

    else
    {
      id v5 = [v0 traitCollection];
      char v6 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v6 & 1) != 0) {
        uint64_t v4 = 0LL;
      }
      else {
        uint64_t v4 = 2LL;
      }
    }

    [*(id *)&v1[OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel] setTextAlignment:v4];
  }

void sub_10000FA8C()
{
  sub_10000D3D8( *(void *)(v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_primaryActionHandler),  *(void *)(v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_primaryActionHandler + 8));
}

id sub_10000FADC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollapsedTextView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CollapsedTextView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade17CollapsedTextView);
}

void *sub_10000FBB8()
{
  return &protocol witness table for UIView;
}

id sub_10000FBC4()
{
  id result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel), "text"));
  if (result)
  {
    objc_super v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    unint64_t v5 = v4;

    swift_bridgeObjectRelease(v5);
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000LL) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    return (id)(v6 != 0);
  }

  return result;
}

id sub_10000FC3C(uint64_t a1, uint64_t a2)
{
  return sub_10000FCAC(a1, a2, (SEL *)&selRef_maximumNumberOfLines);
}

void sub_10000FC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void (*sub_10000FC54(void *a1))(void *)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10000F57C(v2);
  return sub_10000FC9C;
}

id sub_10000FCA0(uint64_t a1, uint64_t a2)
{
  return sub_10000FCAC(a1, a2, (SEL *)&selRef_lineBreakMode);
}

id sub_10000FCAC(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v5 = [*(id *)(*v3 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel) textContainer];
  id v6 = [v5 *a3];

  return v6;
}

void sub_10000FD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10000FD10(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7 = [*(id *)(*v4 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel) textContainer];
  objc_msgSend(v7, *a4, a1);
}

void (*sub_10000FD78(void *a1))(void *)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10000F5F8(v2);
  return sub_10000FC9C;
}

void sub_10000FDC0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32LL))(*a1);
  free(v1);
}

id sub_10000FDEC()
{
  return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v0
                                                               + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel), "font"));
}

void sub_10000FE1C(void *a1)
{
}

void (*sub_10000FE5C(void *a1))(id *a1)
{
  uint64_t v3 = *(void **)(*v1 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel);
  a1[1] = v3;
  *a1 = [v3 font];
  return sub_10000FEB0;
}

void sub_10000FEB0(id *a1)
{
  id v1 = *a1;
  objc_msgSend(a1[1], "setFont:");
}

id sub_10000FEE4()
{
  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel), "jet_isTextExtraTall");
}

id sub_10000FF10()
{
  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel), "jet_languageAwareOutsets");
}

id sub_10000FF2C()
{
  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel), "jet_textLength");
}

uint64_t sub_10000FF48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002DE930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10000FF90(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    uint64_t v4 = swift_slowAlloc(*(void *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }

  return a2;
}

const char *sub_10000FFD0()
{
  return "traitCollection";
}

uint64_t sub_10000FFE0()
{
  return 16LL;
}

__n128 sub_10000FFEC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10000FFFC()
{
  return 16LL;
}

__n128 sub_100010008(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100010014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002DE258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001005C(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_100010098(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1) {
    sub_1000100AC(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_1000100AC(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 == 3) {
}
  }

unint64_t sub_1000100C0()
{
  unint64_t result = qword_1002DE560;
  if (!qword_1002DE560)
  {
    uint64_t v1 = type metadata accessor for Feature(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Feature, v1);
    atomic_store(result, (unint64_t *)&qword_1002DE560);
  }

  return result;
}

void sub_100010108(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel);
  id v5 = [v4 attributedText];
  id v6 = v5;
  if (a1)
  {
    if (v5)
    {
      sub_100006028(0LL, (unint64_t *)&unk_1002EA040, &OBJC_CLASS___NSAttributedString_ptr);
      id v7 = a1;
      char v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0) {
        return;
      }
    }

    else
    {
      id v7 = a1;
    }

    id v9 = [v7 length];
    if (v9)
    {
      uint64_t v10 = (objc_class *)type metadata accessor for LanguageAwareString(0LL);
      id v11 = v7;
      char v12 = static LanguageAwareString.keepStatisticsOnLanguageComponents.getter();
      id v13 = objc_allocWithZone(v10);
      id v9 = (id)LanguageAwareString.init(_:baseParagraphStyle:keepStatisticsOnLanguageComponents:)(v11, 0LL, v12 & 1);
    }
  }

  else
  {
    if (!v5) {
      return;
    }

    id v9 = 0LL;
  }

  uint64_t v14 = OBJC_IVAR____TtC6Arcade17CollapsedTextView_languageAwareString;
  id v15 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_languageAwareString);
  *(void *)(v2 + OBJC_IVAR____TtC6Arcade17CollapsedTextView_languageAwareString) = v9;

  char v16 = *(void **)(v2 + v14);
  if (v16)
  {
    id v17 = v16;
    id v18 = (id)dispatch thunk of LanguageAwareString.attributedString.getter();
  }

  else
  {
    id v18 = a1;
  }

  [v4 setAttributedText:v18];

  sub_10000EB68();
}

uint64_t sub_10001027C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000031E8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000102C0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id sub_1000102EC(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_100128484(a1, a2, a3, a4, *(id *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1000102F4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100010304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004A878(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_10001030C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001031C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100010324()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for PrivacyDefinitionLayout.Metrics(0LL);
  sub_10000FF90(v4, qword_1002EE4A0);
  uint64_t v25 = sub_1000061F4(v4, (uint64_t)qword_1002EE4A0);
  if (qword_1002DC708 != -1) {
    swift_once(&qword_1002DC708, sub_100071800);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_1000061F4(v6, (uint64_t)qword_1002EF168);
  double v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v24(v3, v7, v6);
  uint64_t v8 = enum case for FontSource.useCase(_:);
  double v23 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v23(v3, enum case for FontSource.useCase(_:), v0);
  uint64_t v9 = type metadata accessor for StaticDimension(0LL);
  v35[3] = v9;
  v35[4] = &protocol witness table for StaticDimension;
  sub_100009D54(v35);
  uint64_t v33 = v0;
  id v34 = &protocol witness table for FontSource;
  uint64_t v10 = sub_100009D54(v32);
  __n128 v22 = (void (*)(void *, char *, uint64_t))v1[2];
  v22(v10, v3, v0);
  StaticDimension.init(_:scaledLike:)(v32, 30.0);
  double v21 = (void (*)(char *, uint64_t))v1[1];
  v21(v3, v0);
  if (qword_1002DC710 != -1) {
    swift_once(&qword_1002DC710, sub_100071818);
  }
  uint64_t v11 = sub_1000061F4(v6, (uint64_t)qword_1002EF180);
  char v12 = v24;
  v24(v3, v11, v6);
  id v13 = v23;
  v23(v3, v8, v0);
  uint64_t v33 = v9;
  id v34 = &protocol witness table for StaticDimension;
  sub_100009D54(v32);
  uint64_t v30 = v0;
  id v31 = &protocol witness table for FontSource;
  uint64_t v14 = sub_100009D54(v29);
  uint64_t v15 = v9;
  char v16 = v22;
  v22(v14, v3, v0);
  StaticDimension.init(_:scaledLike:)(v29, 30.0);
  id v17 = v21;
  v21(v3, v0);
  v12(v3, v11, v6);
  v13(v3, v8, v0);
  uint64_t v30 = v15;
  id v31 = &protocol witness table for StaticDimension;
  sub_100009D54(v29);
  *((void *)&v27 + 1) = v0;
  double v28 = &protocol witness table for FontSource;
  id v18 = sub_100009D54(&v26);
  v16(v18, v3, v0);
  StaticDimension.init(_:scaledLike:)(&v26, 30.0);
  v17(v3, v0);
  double v28 = 0LL;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  return PrivacyDefinitionLayout.Metrics.init(titleTopSpace:definitionTopSpace:bottomMargin:maxTextWidth:)( v35,  v32,  v29,  &v26);
}

uint64_t sub_100010660()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for PrivacyDefinitionLayout.Metrics(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  char v12 = (char *)&v27 - v11;
  uint64_t v28 = type metadata accessor for PrivacyDefinitionLayout(0LL);
  uint64_t v13 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v35.receiver = v1;
  v35.super_class = ObjectType;
  objc_msgSendSuper2(&v35, "layoutSubviews");
  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_pageTraits];
  uint64_t v17 = qword_1002DC340;
  swift_unknownObjectRetain(v16);
  if (v17 != -1) {
    swift_once(&qword_1002DC340, sub_100010324);
  }
  uint64_t v18 = sub_1000061F4(v6, (uint64_t)qword_1002EE4A0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v18, v6);
  if (v16)
  {
    swift_getObjectType(v16);
    swift_unknownObjectRetain(v16);
    double v19 = PageTraitEnvironment.pageContentSize.getter();
    uint64_t v33 = &type metadata for CGFloat;
    id v34 = &protocol witness table for CGFloat;
    v32[0] = (v19 + -160.0) / 5.0 * 4.0 + 120.0;
    PrivacyDefinitionLayout.Metrics.maxTextWidth.setter(v32);
    swift_unknownObjectRelease(v16);
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v10, v6);
  swift_unknownObjectRelease(v16);
  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_titleLabel];
  uint64_t v33 = (void *)type metadata accessor for DynamicTypeLabel(0LL);
  id v34 = &protocol witness table for UILabel;
  v31[4] = &protocol witness table for UILabel;
  *(void *)&v32[0] = v20;
  double v21 = *(void **)&v1[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_definitionLabel];
  v31[3] = v33;
  v31[0] = v21;
  id v22 = v20;
  id v23 = v21;
  PrivacyDefinitionLayout.init(metrics:titleLabel:definitionLabel:)(v12, v32, v31);
  id v24 = [v1 contentView];
  [v24 frame];

  __n128 v25 = CGRect.subtracting(insets:)([v1 layoutMargins]);
  PrivacyDefinitionLayout.placeChildren(relativeTo:in:)(v1, v25);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v28);
}

id sub_10001099C()
{
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v5, "prepareForReuse");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_titleLabel];
  id v2 = [v1 text];
  if (v2)
  {

    [v1 setText:0];
    [v0 setNeedsLayout];
  }

  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_definitionLabel];
  id result = [v3 text];
  if (result)
  {

    [v3 setText:0];
    return [v0 setNeedsLayout];
  }

  return result;
}

uint64_t sub_100010AD0()
{
  sub_10000AA2C(v0 + OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_itemLayoutContext);
  return swift_unknownObjectRelease(*(void *)(v0
                                              + OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_pageTraits));
}

uint64_t sub_100010B74()
{
  return type metadata accessor for PrivacyDefinitionCollectionViewCell(0LL);
}

uint64_t type metadata accessor for PrivacyDefinitionCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DE2C8;
  if (!qword_1002DE2C8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PrivacyDefinitionCollectionViewCell);
  }
  return result;
}

void sub_100010BB8(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10000A9D8(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(v2 - 8) + 64LL;
    void v4[3] = "\b";
    swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 472);
  }

char *sub_100010C3C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, v3);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = &v0[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_itemLayoutContext];
  uint64_t v9 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  *(void *)&v1[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_pageTraits] = 0LL;
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v10 = qword_1002DC708;
  uint64_t v11 = v1;
  if (v10 != -1) {
    swift_once(&qword_1002DC708, sub_100071800);
  }
  uint64_t v12 = sub_1000061F4(v4, (uint64_t)qword_1002EF168);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v7, v12, v4);
  *(void *)&v11[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_titleLabel] = sub_1000137B8( (uint64_t)v7,  0LL,  0LL,  1,  1);
  if (qword_1002DC710 != -1) {
    swift_once(&qword_1002DC710, sub_100071818);
  }
  uint64_t v14 = sub_1000061F4(v4, (uint64_t)qword_1002EF180);
  v13(v7, v14, v4);
  *(void *)&v11[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_definitionLabel] = sub_1000137B8( (uint64_t)v7,  0LL,  0LL,  1,  1);

  v28.receiver = v11;
  v28.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v16 = [v15 contentView];
  objc_msgSend( v16,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  uint64_t v17 = OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_titleLabel;
  uint64_t v18 = *(void **)&v15[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_titleLabel];
  sub_100010F30();
  id v19 = v18;
  uint64_t v20 = (void *)static UIColor.opacityA.getter();
  [v19 setTextColor:v20];

  id v21 = [v15 contentView];
  [v21 addSubview:*(void *)&v15[v17]];

  uint64_t v22 = OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_definitionLabel;
  id v23 = *(id *)&v15[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_definitionLabel];
  id v24 = (void *)static UIColor.opacityB.getter();
  [v23 setTextColor:v24];

  id v25 = [v15 contentView];
  id v26 = *(id *)&v15[v22];
  [v25 addSubview:v26];

  return v15;
}

unint64_t sub_100010F30()
{
  unint64_t result = qword_1002DE940;
  if (!qword_1002DE940)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIColor);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DE940);
  }

  return result;
}

UIColor sub_100010F6C(uint64_t a1)
{
  return sub_100010F94(0.8, a1, (UIColor *)&qword_1002EE4C8);
}

UIColor sub_100010F80(uint64_t a1)
{
  return sub_100010F94(0.1, a1, (UIColor *)&qword_1002EE4D0);
}

UIColor sub_100010F94(double a1, uint64_t a2, UIColor *a3)
{
  uint64_t v5 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v6 = [v5 blackColor];
  id v7 = [v6 colorWithAlphaComponent:a1];

  id v8 = [v5 whiteColor];
  id v9 = [v8 colorWithAlphaComponent:a1];

  result.super.Class isa = UIColor.init(light:dark:)((UIColor)v7, (UIColor)v9).super.isa;
  a3->super.Class isa = result.super.isa;
  return result;
}

id sub_100011068()
{
  *(void *)&v0[OBJC_IVAR____TtC6Arcade15ProgressBarView_percentage] = 0LL;
  uint64_t v1 = OBJC_IVAR____TtC6Arcade15ProgressBarView_fillColor;
  uint64_t v2 = qword_1002DC348;
  uint64_t v3 = v0;
  if (v2 != -1) {
    swift_once(&qword_1002DC348, sub_100010F6C);
  }
  uint64_t v4 = (void *)qword_1002EE4C8;
  *(void *)&v0[v1] = qword_1002EE4C8;
  uint64_t v5 = OBJC_IVAR____TtC6Arcade15ProgressBarView_trackColor;
  uint64_t v6 = qword_1002DC350;
  id v7 = v4;
  if (v6 != -1) {
    swift_once(&qword_1002DC350, sub_100010F80);
  }
  id v8 = (void *)qword_1002EE4D0;
  *(void *)&v3[v5] = qword_1002EE4D0;
  id v9 = v8;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for ProgressBarView();
  id v10 = objc_msgSendSuper2(&v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v10 setClipsToBounds:1];
  uint64_t v11 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v12 = v10;
  id v13 = [v11 clearColor];
  [v12 setBackgroundColor:v13];

  return v12;
}

void sub_100011428(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  v28.receiver = v4;
  v28.super_class = (Class)type metadata accessor for ProgressBarView();
  objc_msgSendSuper2(&v28, "drawRect:", a1, a2, a3, a4);
  id v9 = UIGraphicsGetCurrentContext();
  if (v9)
  {
    id v10 = v9;
    v29.origin.x = a1;
    v29.origin.y = a2;
    v29.size.width = a3;
    v29.size.height = a4;
    double Width = CGRectGetWidth(v29);
    v30.origin.x = a1;
    v30.origin.y = a2;
    v30.size.width = a3;
    v30.size.height = a4;
    double v12 = round(*(double *)&v4[OBJC_IVAR____TtC6Arcade15ProgressBarView_percentage] * CGRectGetWidth(v30));
    if (v12 >= Width) {
      double v12 = Width;
    }
    if (v12 < 0.0) {
      double v13 = 0.0;
    }
    else {
      double v13 = v12;
    }
    if (v13 > COERCE_DOUBLE(1LL))
    {
      id v14 = *(id *)&v4[OBJC_IVAR____TtC6Arcade15ProgressBarView_fillColor];
      objc_super v15 = (CGColor *)[v14 CGColor];
      CGContextSetFillColorWithColor(v10, v15);

      v31.origin.x = a1;
      v31.origin.y = a2;
      v31.size.width = a3;
      v31.size.height = a4;
      CGRectGetMinX(v31);
      v32.origin.x = a1;
      v32.origin.y = a2;
      v32.size.width = a3;
      v32.size.height = a4;
      CGRectGetMinY(v32);
      v33.origin.x = a1;
      v33.origin.y = a2;
      v33.size.width = a3;
      v33.size.height = a4;
      CGRectGetHeight(v33);
      double v16 = CGRect.withLayoutDirection(in:relativeTo:)(v4);
      double v26 = v17;
      double v27 = v16;
      double v19 = v18;
      double v21 = v20;
      v34.origin.x = a1;
      v34.origin.y = a2;
      v34.size.width = a3;
      v34.size.height = a4;
      CGFloat v22 = CGRectGetHeight(v34) * 0.5;
      id v23 =  objc_msgSend( (id)objc_opt_self(UIBezierPath),  "bezierPathWithRoundedRect:cornerRadius:",  v27,  v19,  v21,  v26,  v22);
      [v23 fill];
    }

    v35.origin.x = a1;
    v35.origin.y = a2;
    v35.size.width = a3;
    v35.size.height = a4;
    if (v13 + COERCE_DOUBLE(1LL) < CGRectGetWidth(v35))
    {
      id v24 = *(id *)&v4[OBJC_IVAR____TtC6Arcade15ProgressBarView_trackColor];
      id v25 = (CGColor *)[v24 CGColor];
      CGContextSetFillColorWithColor(v10, v25);

      v36.origin.x = a1;
      v36.origin.y = a2;
      v36.size.width = a3;
      v36.size.height = a4;
      CGRectGetMinX(v36);
      v37.origin.x = a1;
      v37.origin.y = a2;
      v37.size.width = a3;
      v37.size.height = a4;
      CGRectGetMinY(v37);
      v38.origin.x = a1;
      v38.origin.y = a2;
      v38.size.width = a3;
      v38.size.height = a4;
      CGRectGetMaxX(v38);
      v39.origin.x = a1;
      v39.origin.y = a2;
      v39.size.width = a3;
      v39.size.height = a4;
      CGRectGetHeight(v39);
      v40.origin.x = CGRect.withLayoutDirection(in:relativeTo:)(v4);
      UIRectFill(v40);
    }
  }

id sub_100011794(void *a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for ProgressBarView();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  id v3 = [v1 traitCollection];
  id v4 = [v3 userInterfaceStyle];

  if (!a1) {
    return [v1 setNeedsDisplay];
  }
  if (v4 != [a1 userInterfaceStyle]) {
    return [v1 setNeedsDisplay];
  }
  id v5 = [v1 traitCollection];
  id v6 = [v5 layoutDirection];

  id result = [a1 layoutDirection];
  if (v6 != result) {
    return [v1 setNeedsDisplay];
  }
  return result;
}

id sub_100011910()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressBarView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProgressBarView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade15ProgressBarView);
}

char *sub_100011998(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = type metadata accessor for CornerStyle(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  double v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = OBJC_IVAR____TtC6Arcade28ScreenshotCollectionViewCell_artworkView;
  id v15 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0LL));
  double v16 = v4;
  *(void *)&v4[v14] = objc_msgSend(v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v21.receiver = v16;
  v21.super_class = ObjectType;
  double v17 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  [v17 setInsetsLayoutMarginsFromSafeArea:0];
  [v17 _setSafeAreaInsetsFrozen:1];
  objc_msgSend( v17,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);
  uint64_t v18 = OBJC_IVAR____TtC6Arcade28ScreenshotCollectionViewCell_artworkView;
  id v19 = *(id *)&v17[OBJC_IVAR____TtC6Arcade28ScreenshotCollectionViewCell_artworkView];
  ArtworkView.contentMode.setter(1LL);

  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for CornerStyle.continuous(_:), v10);
  CornerStyle.apply(withRadius:to:)(*(void *)&v17[v18], 16.0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  [v17 addSubview:*(void *)&v17[v18]];

  return v17;
}

void sub_100011CB4()
{
}

uint64_t type metadata accessor for ScreenshotCollectionViewCell()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade28ScreenshotCollectionViewCell);
}

id sub_100011CF4()
{
  return *(id *)(v0 + OBJC_IVAR____TtC6Arcade28ScreenshotCollectionViewCell_artworkView);
}

double sub_100011D04()
{
  id v1 = [v0 contentView];
  [v1 frame];

  CGRect.subtracting(insets:)([v0 layoutMargins]);
  return v2;
}

void sub_100011D88(uint64_t a1)
{
  double v2 = v1;
  uint64_t v4 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v8 = swift_retain(a1);
    uint64_t v9 = Artwork.crop.getter(v8);
    uint64_t v10 = Artwork.Crop.preferredContentMode.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v11 = [v1 contentView];
    [v11 frame];

    CGRect.subtracting(insets:)([v2 layoutMargins]);
    double v13 = v12;
    double v15 = v14;
    id v16 = *(id *)&v2[OBJC_IVAR____TtC6Arcade28ScreenshotCollectionViewCell_artworkView];
    LOBYTE(v11) = ArtworkView.adjustsImageWhenAncestorFocused.getter(v16);

    uint64_t v17 = Artwork.config(_:mode:prefersLayeredImage:)(v10, v11 & 1, v13, v15);
    id v18 = v16;
    sub_1000FB124();

    id v19 = v18;
    ArtworkView.contentMode.setter(v10);

    uint64_t v20 = type metadata accessor for ArtworkView(0LL);
    uint64_t v21 = sub_100009CA4( (unint64_t *)&qword_1002DE5E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    id v22 = v19;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v17, 2LL, 1LL, v22, v20, v21);
    swift_release(a1);
    swift_release(v17);
  }

void sub_100011F74(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v7 = swift_retain(a1);
    uint64_t v8 = Artwork.crop.getter(v7);
    uint64_t v9 = Artwork.Crop.preferredContentMode.getter(v8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    double v10 = *(double *)(v1 + OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_preferredArtworkSize);
    double v11 = *(double *)(v1 + OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_preferredArtworkSize + 8);
    id v12 = *(id *)(v1 + OBJC_IVAR____TtC6Arcade31FramedArtworkCollectionViewCell_artworkView);
    char v13 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v12);

    uint64_t v14 = Artwork.config(_:mode:prefersLayeredImage:)(v9, v13 & 1, v10, v11);
    id v15 = v12;
    sub_1000FB124();

    id v16 = v15;
    ArtworkView.contentMode.setter(v9);

    uint64_t v17 = type metadata accessor for ArtworkView(0LL);
    uint64_t v18 = sub_100009CA4( (unint64_t *)&qword_1002DE5E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    id v19 = v16;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v14, 2LL, 1LL, v19, v17, v18);
    swift_release(a1);
    swift_release(v14);
  }

void sub_100012118(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CornerStyle(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v74 = a2;
    uint64_t v14 = swift_retain(a1);
    uint64_t v15 = Artwork.crop.getter(v14);
    uint64_t v75 = Artwork.Crop.preferredContentMode.getter(v15);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    double v16 = sub_1000A2F0C();
    double v18 = v17;
    uint64_t v19 = OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_lazilyCreatedArtworkView;
    uint64_t v20 = *(void **)&v3[OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_lazilyCreatedArtworkView];
    if (v20)
    {
      id v21 = *(id *)&v3[OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_lazilyCreatedArtworkView];
    }

    else
    {
      type metadata accessor for ArtworkView(0LL);
      id v22 = (void *)static ArtworkView.plainArtworkView.getter();
      id v23 = [(id)objc_opt_self(UIColor) clearColor];
      ArtworkView.backgroundColor.setter(v23);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for CornerStyle.arc(_:), v6);
      ArtworkView.setCorner(radius:style:)(v9, 0.0);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      id v24 = *(void **)&v3[v19];
      id v25 = v22;
      if (v24)
      {
        [v24 removeFromSuperview];
        id v24 = *(void **)&v3[v19];
      }

      *(void *)&v3[v19] = v22;
      id v21 = v22;

      double v26 = *(void **)&v3[v19];
      if (v26)
      {
        id v27 = v26;
        id v28 = [v3 contentView];
        [v28 addSubview:v27];
      }

      else
      {
      }
    }

    char v29 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v20);

    uint64_t v30 = Artwork.config(_:mode:prefersLayeredImage:)(v75, v29 & 1, v16, v18);
    CGRect v31 = *(void **)&v3[v19];
    if (v31)
    {
      id v32 = *(id *)&v3[v19];
    }

    else
    {
      type metadata accessor for ArtworkView(0LL);
      CGRect v33 = (void *)static ArtworkView.plainArtworkView.getter();
      id v34 = [(id)objc_opt_self(UIColor) clearColor];
      ArtworkView.backgroundColor.setter(v34);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for CornerStyle.arc(_:), v6);
      ArtworkView.setCorner(radius:style:)(v9, 0.0);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      CGRect v35 = *(void **)&v3[v19];
      id v36 = v33;
      if (v35)
      {
        [v35 removeFromSuperview];
        CGRect v35 = *(void **)&v3[v19];
      }

      *(void *)&v3[v19] = v33;
      id v32 = v33;

      CGRect v37 = *(void **)&v3[v19];
      if (v37)
      {
        id v38 = v37;
        id v39 = [v3 contentView];
        uint64_t v73 = a1;
        uint64_t v40 = v6;
        uint64_t v41 = v7;
        uint64_t v42 = v30;
        id v43 = v39;
        [v39 addSubview:v38];

        uint64_t v30 = v42;
        uint64_t v7 = v41;
        uint64_t v6 = v40;
        a1 = v73;
      }

      else
      {
      }
    }

    id v44 = v31;
    sub_1000FB124();

    NSAttributedStringKey v45 = *(void **)&v3[v19];
    if (v45)
    {
      id v46 = *(id *)&v3[v19];
    }

    else
    {
      type metadata accessor for ArtworkView(0LL);
      uint64_t v47 = (void *)static ArtworkView.plainArtworkView.getter();
      id v48 = [(id)objc_opt_self(UIColor) clearColor];
      ArtworkView.backgroundColor.setter(v48);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for CornerStyle.arc(_:), v6);
      ArtworkView.setCorner(radius:style:)(v9, 0.0);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      id v49 = *(void **)&v3[v19];
      id v50 = v47;
      if (v49)
      {
        [v49 removeFromSuperview];
        id v49 = *(void **)&v3[v19];
      }

      *(void *)&v3[v19] = v47;
      id v46 = v47;

      uint64_t v51 = *(void **)&v3[v19];
      if (v51)
      {
        id v52 = v51;
        id v53 = [v3 contentView];
        uint64_t v73 = a1;
        uint64_t v54 = v6;
        uint64_t v55 = v7;
        uint64_t v56 = v30;
        id v57 = v53;
        [v53 addSubview:v52];

        uint64_t v30 = v56;
        uint64_t v7 = v55;
        uint64_t v6 = v54;
        a1 = v73;
      }

      else
      {
      }
    }

    id v58 = v45;
    ArtworkView.contentMode.setter(v75);

    CGRect v59 = *(void **)&v3[v19];
    if (v59)
    {
      id v60 = *(id *)&v3[v19];
    }

    else
    {
      type metadata accessor for ArtworkView(0LL);
      CGRect v61 = (void *)static ArtworkView.plainArtworkView.getter();
      id v62 = [(id)objc_opt_self(UIColor) clearColor];
      ArtworkView.backgroundColor.setter(v62);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for CornerStyle.arc(_:), v6);
      ArtworkView.setCorner(radius:style:)(v9, 0.0);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      CGRect v63 = *(void **)&v3[v19];
      id v64 = v61;
      if (v63)
      {
        [v63 removeFromSuperview];
        CGRect v65 = *(void **)&v3[v19];
      }

      else
      {
        CGRect v65 = 0LL;
      }

      *(void *)&v3[v19] = v61;
      id v60 = v61;

      int v66 = *(void **)&v3[v19];
      if (v66)
      {
        id v67 = v66;
        id v68 = [v3 contentView];
        [v68 addSubview:v67];
      }

      else
      {
      }
    }

    uint64_t v69 = type metadata accessor for ArtworkView(0LL);
    uint64_t v70 = sub_100009CA4( (unint64_t *)&qword_1002DE5E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    id v71 = v59;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2LL, 1LL, v60, v69, v70);
    swift_release(a1);
    swift_release(v30);
  }

void sub_100012748(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v7 = swift_retain(a1);
    uint64_t v8 = Artwork.crop.getter(v7);
    uint64_t v9 = Artwork.Crop.preferredContentMode.getter(v8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (qword_1002DCA30 != -1) {
      swift_once(&qword_1002DCA30, sub_1000B9E54);
    }
    uint64_t v10 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
    sub_1000061F4(v10, (uint64_t)qword_1002EFF78);
    double v11 = SmallLockupLayout.Metrics.artworkSize.getter();
    double v13 = v12;
    id v14 = *(id *)(v1 + OBJC_IVAR____TtC6Arcade29SmallLockupCollectionViewCell_artworkView);
    char v15 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v14);

    uint64_t v16 = Artwork.config(_:mode:prefersLayeredImage:)(v9, v15 & 1, v11, v13);
    id v17 = v14;
    sub_1000FB124();

    id v18 = v17;
    ArtworkView.contentMode.setter(v9);

    uint64_t v19 = type metadata accessor for ArtworkView(0LL);
    uint64_t v20 = sub_100009CA4( (unint64_t *)&qword_1002DE5E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    id v21 = v18;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v16, 2LL, 1LL, v21, v19, v20);
    swift_release(a1);
    swift_release(v16);
  }

void sub_100012924(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v7 = swift_retain(a1);
    uint64_t v8 = Artwork.crop.getter(v7);
    uint64_t v9 = Artwork.Crop.preferredContentMode.getter(v8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    double v10 = sub_1000BDA08();
    double v12 = v11;
    id v13 = *(id *)(v1 + OBJC_IVAR____TtC6Arcade23BrickCollectionViewCell_artworkView);
    char v14 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v13);

    uint64_t v15 = Artwork.config(_:mode:prefersLayeredImage:)(v9, v14 & 1, v10, v12);
    id v16 = v13;
    sub_1000FB124();

    id v17 = v16;
    ArtworkView.contentMode.setter(v9);

    uint64_t v18 = type metadata accessor for ArtworkView(0LL);
    uint64_t v19 = sub_100009CA4( (unint64_t *)&qword_1002DE5E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    id v20 = v17;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v15, 2LL, 1LL, v20, v18, v19);
    swift_release(a1);
    swift_release(v15);
  }

void sub_100012AC4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v8 = swift_retain(a1);
    uint64_t v9 = Artwork.crop.getter(v8);
    uint64_t v10 = Artwork.Crop.preferredContentMode.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (qword_1002DD0E8 != -1) {
      swift_once(&qword_1002DD0E8, sub_1001E2050);
    }
    double v11 = *(double *)&qword_1002F16A8;
    double v12 = *(double *)&qword_1002F16B0;
    uint64_t v13 = OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_iconView;
    id v14 = *(id *)(v1 + OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_iconView);
    char v15 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v14);

    uint64_t v16 = Artwork.config(_:mode:prefersLayeredImage:)(v10, v15 & 1, v11, v12);
    id v17 = *(id *)(v2 + v13);
    sub_1000FB124();

    id v18 = *(id *)(v2 + v13);
    ArtworkView.contentMode.setter(v10);

    uint64_t v19 = *(void **)(v2 + v13);
    uint64_t v20 = type metadata accessor for ArtworkView(0LL);
    uint64_t v21 = sub_100009CA4( (unint64_t *)&qword_1002DE5E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    id v22 = v19;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v16, 2LL, 1LL, v22, v20, v21);
    swift_release(a1);
    swift_release(v16);
  }

void sub_100012C90()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade28ScreenshotCollectionViewCell_artworkView);
  type metadata accessor for ArtworkView(0LL);
  sub_100009CA4( (unint64_t *)&qword_1002DE5E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  id v2 = v1;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)();
}

uint64_t sub_100012D24(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100009CA4( &qword_1002DE348,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for ScreenshotCollectionViewCell,  (uint64_t)&unk_100233B90);
  *(void *)(a1 + 8) = result;
  return result;
}

char *sub_100012D60(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = type metadata accessor for Separator.Position(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = OBJC_IVAR____TtC6Arcade13SeparatorView_lineColor;
  sub_100010F30();
  char v15 = v4;
  *(void *)&v4[v14] = static UIColor.defaultLine.getter();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for Separator.Position.bottom(_:), v10);
  void v22[3] = type metadata accessor for ZeroDimension(0LL);
  v22[4] = &protocol witness table for ZeroDimension;
  sub_100009D54(v22);
  static ZeroDimension.zero.getter();
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v13, v22, 0.0, 0.0);
  id v16 = objc_msgSend(objc_allocWithZone(UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v15[OBJC_IVAR____TtC6Arcade13SeparatorView_lineView] = v16;

  v21.receiver = v15;
  v21.super_class = ObjectType;
  id v17 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  [v17 setUserInteractionEnabled:0];
  objc_msgSend( v17,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);
  [v17 setEdgesInsettingLayoutMarginsFromSafeArea:0];
  id v18 = *(void **)&v17[OBJC_IVAR____TtC6Arcade13SeparatorView_lineView];
  [v18 setBackgroundColor:*(void *)&v17[OBJC_IVAR____TtC6Arcade13SeparatorView_lineColor]];
  [v17 addSubview:v18];

  return v17;
}

id sub_100013284()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v28.receiver = v1;
  v28.super_class = ObjectType;
  objc_msgSendSuper2(&v28, "layoutSubviews");
  *(void *)&CGFloat v7 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType).n128_u64[0];
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  id v14 = [v1 traitCollection];
  double v15 = static Separator.thickness(compatibleWith:)();

  uint64_t v16 = swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade13SeparatorView_separator], v27, 32LL, 0LL);
  Separator.verticalOutset.getter(v24, v16);
  swift_endAccess(v27);
  uint64_t v17 = v25;
  uint64_t v18 = v26;
  sub_100005F8C(v24, v25);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v17, v18);
  double v19 = AnyDimension.value(in:rounded:)(v1, v6, v17, v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s6Arcade17PillOverlayLayoutVwxx_0(v24);
  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC6Arcade13SeparatorView_lineView];
  v29.origin.x = v7;
  v29.origin.y = v9;
  v29.size.width = v11;
  v29.size.height = v13;
  double MinX = CGRectGetMinX(v29);
  v30.origin.x = v7;
  v30.origin.y = v9;
  v30.size.width = v11;
  v30.size.height = v13;
  double v22 = v19 + CGRectGetMinY(v30);
  v31.origin.x = v7;
  v31.origin.y = v9;
  v31.size.width = v11;
  v31.size.height = v13;
  return objc_msgSend(v20, "setFrame:", MinX, v22, CGRectGetWidth(v31), v15);
}

uint64_t sub_100013508()
{
  return type metadata accessor for SeparatorView(0LL);
}

uint64_t type metadata accessor for SeparatorView(uint64_t a1)
{
  uint64_t result = qword_1002DE388;
  if (!qword_1002DE388) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SeparatorView);
  }
  return result;
}

uint64_t sub_10001354C(uint64_t a1, uint64_t a2)
{
  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t result = type metadata accessor for Separator(319LL, a2);
  if (v4 <= 0x3F)
  {
    v5[2] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 3LL, v5, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

  ;
}

id sub_1000135D4()
{
  return sub_10001371C();
}

__n128 sub_1000135E4@<Q0>(uint64_t a1@<X1>, void *a2@<X4>, uint64_t a3@<X8>)
{
  __int128 v4 = v6[3];
  *(_OWORD *)(a3 + 32) = v6[2];
  *(_OWORD *)(a3 + 48) = v4;
  *(_OWORD *)(a3 + 64) = v6[4];
  __n128 result = (__n128)v6[1];
  *(_OWORD *)a3 = v6[0];
  *(__n128 *)(a3 + swift_weakDestroy(v0 + 16) = result;
  return result;
}

uint64_t sub_10001363C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 480);
}

unint64_t sub_100013648()
{
  unint64_t result = qword_1002DE398;
  if (!qword_1002DE398)
  {
    uint64_t v1 = type metadata accessor for NilState(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NilState, v1);
    atomic_store(result, (unint64_t *)&qword_1002DE398);
  }

  return result;
}

double sub_100013690@<D0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  double v6 = (PageTraitEnvironment.pageContentSize.getter() + -160.0) / 5.0;
  [a2 pageMarginInsets];
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v8;
  *(void *)(a3 + swift_weakDestroy(v0 + 16) = v9;
  *(void *)(a3 + 24) = v10;
  *(double *)(a3 + 32) = v6;
  double result = 200.0;
  *(_OWORD *)(a3 + 40) = xmmword_100233C00;
  *(void *)(a3 + 56) = 0LL;
  *(_BYTE *)(a3 + 64) = 1;
  *(void *)(a3 + 72) = a1;
  return result;
}

id sub_10001371C()
{
  uint64_t v1 = *(void **)&v0[qword_1002E25C8];
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v2 = sub_1000031E8(&qword_1002DE3E8);
  String.init<A>(describing:)(&v7, v2);
  uint64_t v4 = v3;
  NSString v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

  return [v0 setNeedsLayout];
}

char *sub_1000137B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  double v6 = v5;
  uint64_t v12 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v12);
  id v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v15 = (char *)objc_msgSend(objc_allocWithZone(v6), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v15 setNumberOfLines:a2];
  if ((a4 & 1) != 0)
  {
    if (a2) {
      uint64_t v17 = 4LL;
    }
    else {
      uint64_t v17 = 0LL;
    }
    [v15 setLineBreakMode:v17];
  }

  else
  {
    [v15 setLineBreakMode:a3];
  }

  uint64_t v18 = OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment;
  v15[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = a5;
  uint64_t v19 = type metadata accessor for FontUseCase(0LL, v16);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v14, a1, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v14, 0LL, 1LL, v19);
  uint64_t v21 = (uint64_t)&v15[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v15[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase], v34, 33LL, 0LL);
  sub_100014CB4((uint64_t)v14, v21);
  swift_endAccess(v34);
  sub_100013BCC(a1);
  if (v15[v18])
  {
    if (v15[v18] == 1)
    {
      id v22 = [v15 traitCollection];
      char v23 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v23 & 1) != 0) {
        uint64_t v24 = 2LL;
      }
      else {
        uint64_t v24 = 0LL;
      }
      uint64_t v25 = (objc_class *)type metadata accessor for DynamicTypeLabel(0LL);
      v32.receiver = v15;
      v32.super_class = v25;
      objc_msgSendSuper2(&v32, "setTextAlignment:", v24);
    }

    else
    {
      id v26 = [v15 traitCollection];
      char v27 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v27 & 1) != 0) {
        uint64_t v28 = 0LL;
      }
      else {
        uint64_t v28 = 2LL;
      }
      CGRect v29 = (objc_class *)type metadata accessor for DynamicTypeLabel(0LL);
      v33.receiver = v15;
      v33.super_class = v29;
      objc_msgSendSuper2(&v33, "setTextAlignment:", v28);
    }
  }

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, v19);
  return v15;
}

void sub_100013BCC(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 traitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  uint64_t v8 = v7;
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryUnspecified);
  if (v6 == v9 && v8 == v10)
  {

    swift_bridgeObjectRelease_n(v8, 2LL);
  }

  else
  {
    uint64_t v12 = v10;
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0LL);

    swift_bridgeObjectRelease(v8);
    *(void *)&double v14 = swift_bridgeObjectRelease(v12).n128_u64[0];
    if ((v13 & 1) == 0)
    {
      id v15 = objc_msgSend(v2, "traitCollection", v14);
      goto LABEL_9;
    }
  }

  sub_100006028(0LL, (unint64_t *)&unk_1002E8DC0, &OBJC_CLASS___UITraitCollection_ptr);
  id v15 = (id)static UITraitCollection.withSystemPreferredContentSizeCategory.getter();
LABEL_9:
  uint64_t v16 = v15;
  id v17 = [v15 preferredContentSizeCategory];
  uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCaseContentSizeCategory];
  *(void *)&v2[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCaseContentSizeCategory] = v17;

  sub_100006028(0LL, (unint64_t *)&qword_1002E0470, &OBJC_CLASS___UIFont_ptr);
  uint64_t v19 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(a1, v16);
  v22.receiver = v2;
  v22.super_class = (Class)type metadata accessor for DynamicTypeLabel(0LL);
  objc_msgSendSuper2(&v22, "setFont:", v19);
  id v20 = [v2 lineSpacing];
  uint64_t v21 = 0LL;
  if (!v20)
  {
    if ((v2[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_wantsFastBaselineMeasurement] & 1) != 0
      || v2[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_isPlainText] == 1)
    {
      uint64_t v21 = v19;
    }

    else
    {
      uint64_t v21 = 0LL;
    }
  }

  objc_msgSend(v2, "set_fontForShortcutBaselineCalculation:", v21);
}

uint64_t sub_100013DC8(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v2 = sub_1000031E8(&qword_1002DE440);
  __chkstk_darwin(v2);
  id v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000031E8(&qword_1002DE930);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v33 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  id v20 = (char *)&v32 - v19;
  uint64_t v21 = v1 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase, v35, 0LL, 0LL);
  sub_100014CFC(v21, (uint64_t)v12);
  objc_super v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v22(v12, 1LL, v14) == 1) {
    return sub_100006060((uint64_t)v12, &qword_1002DE930);
  }
  uint64_t v32 = v1;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v24(v20, v12, v14);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v20, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0LL, 1LL, v14);
  uint64_t v25 = (uint64_t)&v4[*(int *)(v2 + 48)];
  sub_100014CFC((uint64_t)v10, (uint64_t)v4);
  sub_100014CFC(v34, v25);
  if (v22(v4, 1LL, v14) == 1)
  {
    sub_100006060((uint64_t)v10, &qword_1002DE930);
    if (v22((char *)v25, 1LL, v14) == 1)
    {
      sub_100006060((uint64_t)v4, &qword_1002DE930);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }

    goto LABEL_8;
  }

  uint64_t v26 = v33;
  sub_100014CFC((uint64_t)v4, v33);
  if (v22((char *)v25, 1LL, v14) == 1)
  {
    sub_100006060((uint64_t)v10, &qword_1002DE930);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, v14);
LABEL_8:
    sub_100006060((uint64_t)v4, &qword_1002DE440);
LABEL_12:
    sub_100013BCC((uint64_t)v20);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }

  uint64_t v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v24)(v18, v25, v14);
  unint64_t v29 = sub_100014D44(v27, v28);
  char v30 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v18, v14, v29);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v15 + 8);
  v31(v18, v14);
  sub_100006060((uint64_t)v10, &qword_1002DE930);
  v31((char *)v26, v14);
  sub_100006060((uint64_t)v4, &qword_1002DE930);
  if ((v30 & 1) == 0) {
    goto LABEL_12;
  }
  return ((uint64_t (*)(char *, uint64_t))v31)(v20, v14);
}

id sub_1000142B8(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for DynamicTypeLabel(0LL);
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_100014374(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_wantsFastBaselineMeasurement;
  v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_wantsFastBaselineMeasurement] = a1;
  id v3 = [v1 font];
  if (v3)
  {
    if (![v1 lineSpacing]
      && ((v1[v2] & 1) != 0 || v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_isPlainText] == 1))
    {
      objc_msgSend(v1, "set_fontForShortcutBaselineCalculation:", v3);
    }

    else
    {
      objc_msgSend(v1, "set_fontForShortcutBaselineCalculation:", 0);
    }
  }

  else
  {
    __break(1u);
  }

void sub_100014420(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_isPlainText;
  v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_isPlainText] = a1;
  id v3 = [v1 font];
  if (v3)
  {
    if (![v1 lineSpacing]
      && ((v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_wantsFastBaselineMeasurement] & 1) != 0 || v1[v2] == 1))
    {
      objc_msgSend(v1, "set_fontForShortcutBaselineCalculation:", v3);
    }

    else
    {
      objc_msgSend(v1, "set_fontForShortcutBaselineCalculation:", 0);
    }
  }

  else
  {
    __break(1u);
  }

void sub_1000145E0(uint64_t a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DynamicTypeLabel(0LL);
  objc_msgSendSuper2(&v5, "setLineSpacing:", a1);
  id v3 = [v1 font];
  if (v3)
  {
    id v4 = v3;
    if (![v1 lineSpacing]
      && ((*((_BYTE *)v1 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_wantsFastBaselineMeasurement) & 1) != 0
       || *((_BYTE *)v1 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_isPlainText) == 1))
    {
      objc_msgSend(v1, "set_fontForShortcutBaselineCalculation:", v4);
    }

    else
    {
      objc_msgSend(v1, "set_fontForShortcutBaselineCalculation:", 0);
    }
  }

  else
  {
    __break(1u);
  }

id sub_1000146AC(id result)
{
  int v2 = v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = (_BYTE)result;
  if (v2 != result && result != 0)
  {
    id v4 = v1;
    if (result == 1)
    {
      id v5 = [v1 traitCollection];
      char v6 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v6 & 1) != 0) {
        uint64_t v7 = 2LL;
      }
      else {
        uint64_t v7 = 0LL;
      }
      v11.super_class = (Class)type metadata accessor for DynamicTypeLabel(0LL);
      return objc_msgSendSuper2(&v11, "setTextAlignment:", v7, v4, v11.super_class, v12.receiver, v12.super_class);
    }

    else
    {
      id v8 = [v1 traitCollection];
      char v9 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v9 & 1) != 0) {
        uint64_t v10 = 0LL;
      }
      else {
        uint64_t v10 = 2LL;
      }
      v12.super_class = (Class)type metadata accessor for DynamicTypeLabel(0LL);
      return objc_msgSendSuper2(&v12, "setTextAlignment:", v10, v11.receiver, v11.super_class, v4, v12.super_class);
    }
  }

  return result;
}

uint64_t sub_1000147A4(void *a1)
{
  int v2 = v1;
  uint64_t v4 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v4);
  char v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for FontUseCase(0LL, v7);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  objc_super v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  objc_super v12 = (objc_class *)type metadata accessor for DynamicTypeLabel(0LL);
  v37.receiver = v2;
  v37.super_class = v12;
  objc_msgSendSuper2(&v37, "traitCollectionDidChange:", a1);
  id v13 = [v2 traitCollection];
  id v14 = [v13 layoutDirection];

  if ((!a1 || v14 != [a1 layoutDirection])
    && v2[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment])
  {
    if (v2[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] == 1)
    {
      id v15 = [v2 traitCollection];
      char v16 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v16 & 1) != 0) {
        uint64_t v17 = 2LL;
      }
      else {
        uint64_t v17 = 0LL;
      }
      v34.receiver = v2;
      v34.super_class = v12;
      objc_msgSendSuper2(&v34, "setTextAlignment:", v17);
    }

    else
    {
      id v18 = [v2 traitCollection];
      char v19 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v19 & 1) != 0) {
        uint64_t v20 = 0LL;
      }
      else {
        uint64_t v20 = 2LL;
      }
      v36.receiver = v2;
      v36.super_class = v12;
      objc_msgSendSuper2(&v36, "setTextAlignment:", v20);
    }
  }

  uint64_t v21 = (uint64_t)&v2[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v2[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase], v35, 0LL, 0LL);
  sub_100014CFC(v21, (uint64_t)v6);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v6, v8);
  id v23 = [v2 traitCollection];
  id v24 = [v23 preferredContentSizeCategory];

  uint64_t v25 = *(void *)&v2[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCaseContentSizeCategory];
  if (!v25)
  {

    goto LABEL_21;
  }

  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  uint64_t v28 = v27;
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  uint64_t v31 = v29;
  if (v26 != v30 || v28 != v29)
  {
    char v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v30, v29, 0LL);

    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v31);
    if ((v32 & 1) != 0) {
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
LABEL_21:
    sub_100013BCC((uint64_t)v11);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  swift_bridgeObjectRelease_n(v28, 2LL);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id sub_100014B18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLabel(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100014B90()
{
  return type metadata accessor for DynamicTypeLabel(0LL);
}

uint64_t type metadata accessor for DynamicTypeLabel(uint64_t a1)
{
  uint64_t result = qword_1002DE428;
  if (!qword_1002DE428) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DynamicTypeLabel);
  }
  return result;
}

void sub_100014BD4(uint64_t a1, uint64_t a2)
{
  v5[0] = "\b";
  sub_100014C60(319LL, a2);
  if (v4 <= 0x3F)
  {
    v5[1] = *(void *)(v3 - 8) + 64LL;
    v5[2] = &unk_100233CB0;
    void v5[3] = &unk_100233CB0;
    v5[4] = &unk_100233CC8;
    swift_updateClassMetadata2(a1, 256LL, 5LL, v5, a1 + 80);
  }

void sub_100014C60(uint64_t a1, uint64_t a2)
{
  if (!qword_1002DE438)
  {
    uint64_t v3 = type metadata accessor for FontUseCase(255LL, a2);
    unint64_t v4 = type metadata accessor for Optional(a1, v3);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_1002DE438);
    }
  }

uint64_t sub_100014CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002DE930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100014CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002DE930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_100014D44(uint64_t a1, uint64_t a2)
{
  unint64_t result = qword_1002DE448;
  if (!qword_1002DE448)
  {
    uint64_t v3 = type metadata accessor for FontUseCase(255LL, a2);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for FontUseCase, v3);
    atomic_store(result, (unint64_t *)&qword_1002DE448);
  }

  return result;
}

void sub_100014D8C(void *a1)
{
  uint64_t v3 = sub_1000031E8(&qword_1002DE930);
  uint64_t v4 = __chkstk_darwin(v3);
  char v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v15[-v7];
  uint64_t v9 = (objc_class *)type metadata accessor for DynamicTypeLabel(0LL);
  v17.receiver = v1;
  v17.super_class = v9;
  objc_msgSendSuper2(&v17, "setFont:", a1);
  if (a1)
  {
    id v10 = a1;
    if (![v1 lineSpacing]
      && ((v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_wantsFastBaselineMeasurement] & 1) != 0
       || v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_isPlainText] == 1))
    {
      objc_msgSend(v1, "set_fontForShortcutBaselineCalculation:", v10);
    }

    else
    {
      objc_msgSend(v1, "set_fontForShortcutBaselineCalculation:", 0);
    }

    uint64_t v12 = type metadata accessor for FontUseCase(0LL, v11);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v8, 1LL, 1LL, v12);
    uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase];
    swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase], v16, 0LL, 0LL);
    sub_100014CFC(v13, (uint64_t)v6);
    swift_beginAccess(v13, v15, 33LL, 0LL);
    sub_10000FF48((uint64_t)v8, v13);
    swift_endAccess(v15);
    sub_100013DC8((uint64_t)v6);
    sub_100006060((uint64_t)v8, &qword_1002DE930);
    sub_100006060((uint64_t)v6, &qword_1002DE930);
    id v14 = *(void **)&v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCaseContentSizeCategory];
    *(void *)&v1[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCaseContentSizeCategory] = 0LL;
  }

  else
  {
    __break(1u);
  }

char *sub_100014F54(_OWORD *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  uint64_t v8 = type metadata accessor for FontUseCase(0LL, v7);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = &v3[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_delegate];
  *((void *)v12 + 1) = 0LL;
  swift_unknownObjectWeakInit(v12, 0LL);
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v13 = qword_1002DC858;
  id v14 = v3;
  if (v13 != -1) {
    swift_once(&qword_1002DC858, sub_100071D54);
  }
  uint64_t v15 = sub_1000061F4(v8, (uint64_t)qword_1002EF558);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  *(void *)&v14[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_titleLabel] = sub_1000137B8( (uint64_t)v11,  0LL,  0LL,  1,  0);
  sub_100015A34((uint64_t)a2, (uint64_t)v32);
  char v16 = (objc_class *)type metadata accessor for ArcadeWelcomeItemsView();
  objc_super v17 = (char *)objc_allocWithZone(v16);
  sub_100015A34((uint64_t)v32, (uint64_t)&v17[OBJC_IVAR____TtC6Arcade22ArcadeWelcomeItemsView_layoutMetrics]);
  *(void *)&v17[OBJC_IVAR____TtC6Arcade22ArcadeWelcomeItemsView_itemViews] = &_swiftEmptyArrayStorage;
  v31.receiver = v17;
  v31.super_class = v16;
  id v18 = objc_msgSendSuper2(&v31, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100015A70(v32);
  *(void *)&v14[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_itemsView] = v18;
  uint64_t v19 = type metadata accessor for DynamicTypeButton(0LL);
  id v20 = [(id)swift_getObjCClassFromMetadata(v19) buttonWithType:1];
  *(void *)&v14[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_continueButton] = v20;
  id v21 = [(id)objc_opt_self(UIBlurEffect) effectWithStyle:5003];
  id v22 = [objc_allocWithZone(UIVisualEffectView) initWithEffect:v21];
  *(void *)&v14[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_backgroundMaterialView] = v22;
  sub_100015AA4(a1, &v14[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_layoutMetrics]);

  v30.receiver = v14;
  v30.super_class = ObjectType;
  id v23 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v24 = OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_titleLabel;
  uint64_t v25 = *(void **)&v23[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_titleLabel];
  uint64_t v26 = v23;
  [v25 setTextAlignment:1];
  sub_100010F30();
  id v27 = v25;
  uint64_t v28 = (void *)static UIColor.opacityA.getter();
  [v27 setTextColor:v28];

  [v26 addSubview:*(void *)&v26[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_backgroundMaterialView]];
  [v26 addSubview:*(void *)&v23[v24]];
  [v26 addSubview:*(void *)&v26[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_itemsView]];
  [v26 addSubview:*(void *)&v26[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_continueButton]];

  sub_100015A70(a2);
  sub_100015AE0(a1);
  return v26;
}

uint64_t sub_100015324()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v26 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v3 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for LayoutRect(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v35.receiver = v1;
  v35.super_class = ObjectType;
  objc_msgSendSuper2(&v35, "layoutSubviews");
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_backgroundMaterialView];
  [v1 bounds];
  objc_msgSend(v10, "setFrame:");
  sub_100015AA4(&v1[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_layoutMetrics], v27);
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_titleLabel];
  uint64_t v29 = type metadata accessor for DynamicTypeLabel(0LL);
  objc_super v30 = &protocol witness table for UILabel;
  uint64_t v28 = v11;
  uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_itemsView];
  uint64_t v32 = type metadata accessor for ArcadeWelcomeItemsView();
  uint64_t v33 = &protocol witness table for UIView;
  objc_super v31 = v12;
  objc_super v34 = *(void **)&v1[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_continueButton];
  uint64_t v13 = v34;
  id v14 = v11;
  id v15 = v12;
  id v16 = v13;
  [v1 bounds];
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;
  sub_1001BF204((uint64_t)v1, (uint64_t)v5);
  _VerticalFlowLayout.placeChildren(relativeTo:in:)(v1, v18, v20, v22, v24);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v26);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_100015B14((uint64_t)v27);
}

double sub_10001555C(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100015AA4((_OWORD *)(v3 + OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_layoutMetrics), v19);
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_titleLabel);
  uint64_t v21 = type metadata accessor for DynamicTypeLabel(0LL);
  double v22 = &protocol witness table for UILabel;
  double v20 = v11;
  uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_itemsView);
  uint64_t v24 = type metadata accessor for ArcadeWelcomeItemsView();
  uint64_t v25 = &protocol witness table for UIView;
  double v23 = v12;
  uint64_t v13 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_continueButton);
  uint64_t v26 = v13;
  id v14 = v11;
  id v15 = v12;
  id v16 = v13;
  sub_1001BF204(a1, (uint64_t)v10);
  double v17 = _VerticalFlowLayout.measurements(fitting:in:)(a1, a2, a3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_100015B14((uint64_t)v19);
  return v17;
}

id sub_10001574C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_titleLabel];
  ArcadeWelcomeContent.title.getter();
  if (v6)
  {
    uint64_t v8 = v6;
    NSString v9 = String._bridgeToObjectiveC()();
    *(void *)&double v7 = swift_bridgeObjectRelease(v8).n128_u64[0];
  }

  else
  {
    NSString v9 = 0LL;
  }

  objc_msgSend(v5, "setText:", v9, v7);

  id v10 = *(id *)&v3[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_itemsView];
  uint64_t v11 = ArcadeWelcomeContent.items.getter();
  sub_1000B8CF4(v11, a2);

  __n128 v12 = swift_bridgeObjectRelease(v11);
  uint64_t v13 = *(char **)&v3[OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_continueButton];
  uint64_t v14 = ArcadeWelcomeContent.continueAction.getter(v12);
  Action.title.getter(v14);
  uint64_t v16 = v15;
  unint64_t v17 = swift_release(v14).n128_u64[0];
  if (v16)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    unint64_t v17 = swift_bridgeObjectRelease(v16).n128_u64[0];
  }

  else
  {
    NSString v18 = 0LL;
  }

  objc_msgSend(v13, "setTitle:forState:", v18, 0, *(double *)&v17);

  uint64_t v19 = swift_allocObject(&unk_100280E78, 24LL, 7LL);
  swift_unknownObjectWeakInit(v19 + 16, v3);
  double v20 = (void (**)())&v13[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_primaryActionHandler];
  uint64_t v21 = *(void *)&v13[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_primaryActionHandler];
  uint64_t v22 = *(void *)&v13[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_primaryActionHandler + 8];
  *double v20 = sub_100015A2C;
  v20[1] = (void (*)())v19;
  sub_10000D3D8(v21, v22);
  return [v3 setNeedsLayout];
}

void sub_1000158C8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC6Arcade21ArcadeWelcomePageView_delegate);

    if (v4)
    {
      dispatch thunk of ArcadeWelcomePagePresenter.didTapContinueButton()();
      swift_unknownObjectRelease(v4);
    }
  }

uint64_t type metadata accessor for ArcadeWelcomePageView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade21ArcadeWelcomePageView);
}

uint64_t sub_100015A08()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100015A2C()
{
}

uint64_t sub_100015A34(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_100015A70(void *a1)
{
  return a1;
}

_OWORD *sub_100015AA4(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

void *sub_100015AE0(void *a1)
{
  return a1;
}

uint64_t sub_100015B14(uint64_t a1)
{
  return a1;
}

uint64_t sub_100015B48(uint64_t a1)
{
  return a1;
}

double sub_100015B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ProductRatingsAndReviewsComponent(0LL);
  uint64_t v7 = sub_100003B6C( (unint64_t *)&qword_1002DE4A8,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductRatingsAndReviewsComponent,  (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  ItemLayoutContext.typedModel<A>(as:)(&v22, v6, v6, v7);
  uint64_t v9 = v22;
  if (v22)
  {
    uint64_t v10 = sub_100035B28();
    if (!v10)
    {
LABEL_10:
      *(void *)&double result = swift_release(v9).n128_u64[0];
      return result;
    }

    uint64_t v12 = v10;
    uint64_t v13 = v11;
    uint64_t v14 = &v3[OBJC_IVAR____TtC6Arcade51ProductRatingsAndReviewsComponentCollectionViewCell_componentContentView];
    uint64_t v15 = *(void **)&v3[OBJC_IVAR____TtC6Arcade51ProductRatingsAndReviewsComponentCollectionViewCell_componentContentView];
    if (v15 && sub_1000031E8(&qword_1002DE4B0) == v10)
    {
      uint64_t v17 = *((void *)v14 + 1);
    }

    else
    {
      id v16 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)) init];
      sub_10015252C(v16, v13);
      uint64_t v15 = *(void **)v14;
      if (!*(void *)v14)
      {
LABEL_9:
        [v3 setNeedsLayout];
        goto LABEL_10;
      }

      uint64_t v17 = *((void *)v14 + 1);
      uint64_t ObjectType = swift_getObjectType(*(void *)v14);
      (*(void (**)(void, void, uint64_t, uint64_t))(v17 + 40))(0LL, 0LL, ObjectType, v17);
    }

    uint64_t v19 = swift_getObjectType(v15);
    double v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 24);
    id v21 = v15;
    v20(a1, a2, v19, v17);

    goto LABEL_9;
  }

  return result;
}

uint64_t sub_100015CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SelectableShelfComponentViewReaction(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = v3 + OBJC_IVAR____TtC6Arcade51ProductRatingsAndReviewsComponentCollectionViewCell_componentContentView;
  uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade51ProductRatingsAndReviewsComponentCollectionViewCell_componentContentView);
  if (v12)
  {
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType(v12);
    uint64_t v24 = (uint64_t)v12;
    uint64_t v15 = *(void *)(v13 + 8);
    id v16 = v12;
    dispatch thunk of SelectableShelfComponentView.didBecomeSelected(in:asPartOf:)(a1, a2, ObjectType, v15);

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v10, v7);
  }

  else
  {
    uint64_t v18 = sub_1000031E8(&qword_1002DE4B8);
    uint64_t v19 = swift_allocObject( v18,  ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
          + *(void *)(v8 + 72),
            *(unsigned __int8 *)(v8 + 80) | 7LL);
    *(_OWORD *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    static SelectableShelfComponentViewReaction.deselect.getter();
    uint64_t v24 = v19;
    uint64_t v20 = sub_100003B6C( &qword_1002DE4C0,  (uint64_t (*)(uint64_t))&type metadata accessor for SelectableShelfComponentViewReaction,  (uint64_t)&protocol conformance descriptor for SelectableShelfComponentViewReaction);
    uint64_t v21 = sub_1000031E8(&qword_1002DE4C8);
    unint64_t v22 = sub_100016024();
    return dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v21, v22, v7, v20);
  }

uint64_t sub_100015E64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade51ProductRatingsAndReviewsComponentCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_100015FDC(v3, a1);
}

uint64_t sub_100015EB8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Arcade51ProductRatingsAndReviewsComponentCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_100015F94(a1, v3);
  return swift_endAccess(v5);
}

void *sub_100015F14(uint64_t a1)
{
  return &j__swift_endAccess;
}

id sub_100015F60()
{
  return [v0 prepareForReuse];
}

uint64_t sub_100015F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100015CD8(a1, a2, a3);
}

uint64_t sub_100015F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DDB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100015FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DDB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_100016024()
{
  unint64_t result = qword_1002DE4D0;
  if (!qword_1002DE4D0)
  {
    uint64_t v1 = sub_100003274(&qword_1002DE4C8);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002DE4D0);
  }

  return result;
}

uint64_t sub_100016070(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000FF90(v2, qword_1002DE4E0);
  uint64_t v3 = sub_1000061F4(v2, (uint64_t)qword_1002DE4E0);
  if (qword_1002DC5D0 != -1) {
    swift_once(&qword_1002DC5D0, sub_100071448);
  }
  uint64_t v4 = sub_1000061F4(v2, (uint64_t)qword_1002EEDC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(v3, v4, v2);
}

uint64_t sub_100016100()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  sub_10000FF90(v0, qword_1002EE4F8);
  sub_1000061F4(v0, (uint64_t)qword_1002EE4F8);
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v2 = [v1 blackColor];
  id v3 = [v1 whiteColor];
  v7[0] = sub_1000031E8(&qword_1002DE250);
  uint64_t v4 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  v7[1] = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_100233E58, v7);
  id v8 = v2;
  id v9 = v3;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v9, &v8, v4);
}

uint64_t sub_1000161F4()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  sub_10000FF90(v0, qword_1002EE510);
  sub_1000061F4(v0, (uint64_t)qword_1002EE510);
  uint64_t v1 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.7).super.isa;
  Class v3 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 0.7).super.isa;
  v6[0] = sub_1000031E8(&qword_1002DE250);
  v6[1] = v1;
  uint64_t KeyPath = swift_getKeyPath(&unk_100233E58, v6);
  Class v7 = isa;
  Class v8 = v3;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v8, &v7, v1);
}

char *sub_1000162E4(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, a6);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v6[OBJC_IVAR____TtC6Arcade18ExpandableTextView_hasMoreButton] = 1;
  v6[OBJC_IVAR____TtC6Arcade18ExpandableTextView_automaticallyAdjustTextColors] = 1;
  v6[OBJC_IVAR____TtC6Arcade18ExpandableTextView_alwaysShowsMoreButtonWhenCollapsed] = 0;
  *(void *)&v6[OBJC_IVAR____TtC6Arcade18ExpandableTextView_collapsedNumberOfLines] = 3LL;
  v6[OBJC_IVAR____TtC6Arcade18ExpandableTextView_isCollapsed] = 1;
  uint64_t v15 = &v6[OBJC_IVAR____TtC6Arcade18ExpandableTextView_moreTapHandler];
  *uint64_t v15 = 0LL;
  v15[1] = 0LL;
  id v16 = v6;
  *(void *)&v16[OBJC_IVAR____TtC6Arcade18ExpandableTextView_moreButton] = sub_10014E7EC();
  type metadata accessor for DynamicTypeTextView(0LL);
  if (qword_1002DC358 != -1) {
    swift_once(&qword_1002DC358, sub_100016070);
  }
  uint64_t v17 = sub_1000061F4(v11, (uint64_t)qword_1002DE4E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v17, v11);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel] = sub_1000F2AB8((uint64_t)v14, 2LL, 0LL, 1);

  uint64_t v18 = (objc_class *)type metadata accessor for ExpandableTextView();
  v31.receiver = v16;
  v31.super_class = v18;
  id v19 = objc_msgSendSuper2(&v31, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  uint64_t v23 = (char *)v19;
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  [v23 setUserInteractionEnabled:1];
  uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC6Arcade18ExpandableTextView_collapsedNumberOfLines];
  uint64_t v25 = OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel;
  id v26 = [*(id *)&v23[OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel] textContainer];
  [v26 setMaximumNumberOfLines:v24];

  id v27 = [*(id *)&v23[v25] textContainer];
  [v27 setLineBreakMode:4];

  uint64_t v28 = *(void **)&v23[v25];
  [v28 setTextAlignment:4];
  [v23 addSubview:v28];
  uint64_t v29 = *(void **)&v23[OBJC_IVAR____TtC6Arcade18ExpandableTextView_moreButton];
  [v29 addTarget:v23 action:"moreFrom:" forControlEvents:64];
  [v23 addSubview:v29];

  return v23;
}

void (*sub_100016744(void *a1))(uint64_t *a1, uint64_t a2)
{
  Class v3 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel);
  a1[1] = v3;
  id v4 = [v3 textContainer];
  id v5 = [v4 maximumNumberOfLines];

  *a1 = v5;
  return sub_10000F5EC;
}

void (*sub_1000167B4(void *a1))(uint64_t *a1, uint64_t a2)
{
  Class v3 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel);
  a1[1] = v3;
  id v4 = [v3 textContainer];
  id v5 = [v4 lineBreakMode];

  *a1 = v5;
  return sub_10000F668;
}

void sub_100016824()
{
  uint64_t v1 = (objc_class *)type metadata accessor for ExpandableTextView();
  v25.receiver = v0;
  v25.super_class = v1;
  objc_msgSendSuper2(&v25, "layoutSubviews");
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel];
  LayoutMarginsAware<>.layoutFrame.getter(v1);
  objc_msgSend(v2, "sizeThatFits:", v3, v4);
  double v6 = v5;
  *(void *)&double v7 = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  double v9 = v8;
  *(void *)&v26.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  objc_msgSend(v2, "setFrame:", v7, v9, CGRectGetWidth(v26), v6);
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC6Arcade18ExpandableTextView_moreButton];
  LayoutMarginsAware<>.layoutFrame.getter(v1);
  objc_msgSend(v10, "sizeThatFits:", v11, v12);
  double v14 = v13;
  double v16 = v15;
  *(void *)&v27.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  CGFloat v17 = CGRectGetMaxX(v27) - v14;
  *(void *)&v28.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  CGFloat MaxY = CGRectGetMaxY(v28);
  CGFloat v19 = MaxY - v16;
  objc_msgSend(v10, "setFrame:", v17, MaxY - v16, v14, v16);
  id v20 = [v2 textContainer];
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v22 = swift_allocObject(v21, 40LL, 7LL);
  *(_OWORD *)(v22 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233570;
  id v23 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRect:", v17, v19, v14, v16);
  *(void *)(v22 + 32) = v23;
  specialized Array._endMutation()(v23);
  sub_100006028(0LL, (unint64_t *)&unk_1002DE280, &OBJC_CLASS___UIBezierPath_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "setExclusionPaths:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);
}

void sub_100016A60(void *a1, char a2, int a3, uint64_t a4)
{
  double v5 = v4;
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002DE270);
  __n128 v11 = __chkstk_darwin(v10);
  double v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Paragraph.Alignment(0LL, v11);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v45 - v17;
  *(void *)&double v21 = __chkstk_darwin(v19).n128_u64[0];
  id v23 = (char *)&v45 - v22;
  if (!a1)
  {
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel], "setText:", 0, v21);
    sub_100017048();
    [v5 setNeedsLayout];
    return;
  }

  int v54 = a3;
  id v53 = v20;
  v5[OBJC_IVAR____TtC6Arcade18ExpandableTextView_isCollapsed] = a2 & 1;
  uint64_t v55 = a4;
  if ((a2 & 1) != 0)
  {
    uint64_t v24 = *(void *)&v5[OBJC_IVAR____TtC6Arcade18ExpandableTextView_collapsedNumberOfLines];
    id v25 = *(id *)&v5[OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel];
    id v26 = a1;
    id v27 = [v25 textContainer];
    [v27 setMaximumNumberOfLines:v24];
  }

  else
  {
    id v25 = *(id *)&v5[OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel];
    id v28 = a1;
    id v27 = [v25 textContainer];
    [v27 setMaximumNumberOfLines:0];
  }

  sub_100017048();
  if (v5[OBJC_IVAR____TtC6Arcade18ExpandableTextView_automaticallyAdjustTextColors] == 1)
  {
    id v47 = v25;
    id v48 = v18;
    id v49 = v23;
    uint64_t v50 = v15;
    if (qword_1002DC360 != -1) {
      swift_once(&qword_1002DC360, sub_100016100);
    }
    uint64_t v29 = sub_1000031E8((uint64_t *)&unk_1002DE240);
    sub_1000061F4(v29, (uint64_t)qword_1002EE4F8);
    id v58 = v5;
    Conditional.evaluate(with:)(aBlock, &v58, v29);
    objc_super v30 = (void *)aBlock[0];
    id v31 = [objc_allocWithZone(NSMutableAttributedString) initWithAttributedString:a1];
    id v52 = [a1 length];
    NSAttributedStringKey v51 = NSForegroundColorAttributeName;
    uint64_t v32 = swift_allocObject(&unk_100280EE0, 32LL, 7LL);
    *(void *)(v32 + swift_unknownObjectWeakDestroy(v0 + 16) = v31;
    *(void *)(v32 + 24) = v30;
    uint64_t v33 = swift_allocObject(&unk_100280F08, 32LL, 7LL);
    *(void *)(v33 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1000102EC;
    *(void *)(v33 + 24) = v32;
    aBlock[4] = sub_100010304;
    uint64_t v57 = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100172D70;
    aBlock[3] = &unk_100280F20;
    objc_super v34 = _Block_copy(aBlock);
    uint64_t v35 = v57;
    id v36 = v31;
    id v46 = v30;
    swift_retain(v33);
    *(void *)&double v37 = swift_release(v35).n128_u64[0];
    objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v51, 0, v52, 0x100000, v34, v37);
    _Block_release(v34);
    LOBYTE(v35) = swift_isEscapingClosureAtFileLocation(v33, "", 133LL, 82LL, 11LL, 1LL);
    swift_release(v32);
    *(void *)&double v38 = swift_release(v33).n128_u64[0];
    if ((v35 & 1) != 0)
    {
      __break(1u);
      goto LABEL_27;
    }

    id v25 = v47;
    objc_msgSend(v47, "setAttributedText:", v36, v38);
    sub_100017048();

    id v23 = v49;
    uint64_t v15 = v50;
    uint64_t v18 = v48;
  }

  else
  {
    id v39 = a1;
    [v25 setAttributedText:v39];
    sub_100017048();
  }

  v5[OBJC_IVAR____TtC6Arcade18ExpandableTextView_alwaysShowsMoreButtonWhenCollapsed] = v54 & 1;
  sub_1000179A4(v55, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1LL, v14) == 1)
  {
    sub_100006060((uint64_t)v13, (uint64_t *)&unk_1002DE270);
LABEL_25:
    [v5 setNeedsLayout];

    return;
  }

  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v23, v13, v14);
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v40(v18, v23, v14);
  uint64_t v41 = v53;
  v40(v53, v18, v14);
  int v42 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v41, v14);
  if (v42 == enum case for Paragraph.Alignment.left(_:))
  {
    uint64_t v43 = 0LL;
LABEL_24:
    id v44 = *(void (**)(char *, uint64_t))(v15 + 8);
    v44(v18, v14);
    [v25 setTextAlignment:v43];
    v44(v23, v14);
    goto LABEL_25;
  }

  if (v42 == enum case for Paragraph.Alignment.center(_:))
  {
    uint64_t v43 = 1LL;
    goto LABEL_24;
  }

  if (v42 == enum case for Paragraph.Alignment.right(_:))
  {
    uint64_t v43 = 2LL;
    goto LABEL_24;
  }

  if (v42 == enum case for Paragraph.Alignment.justified(_:))
  {
    uint64_t v43 = 3LL;
    goto LABEL_24;
  }

  if (v42 == enum case for Paragraph.Alignment.localized(_:))
  {
    uint64_t v43 = 4LL;
    goto LABEL_24;
  }

LABEL_27:
  _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
}

    uint64_t v12 = (v17 - 1) & v17;
    uint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }

  uint64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    double v9 = v18;
    goto LABEL_27;
  }

  while (1)
  {
    double v9 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    uint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }

    uint64_t v12 = (v21 - 1) & v21;
    uint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_10001F054(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    uint64_t v18 = v23[0];
    uint64_t v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = v19;
  }

  uint64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  double v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    double v9 = v22;
    goto LABEL_27;
  }

  while (1)
  {
    double v9 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    double v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }

    uint64_t v12 = (v21 - 1) & v21;
    uint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain(v18);
  }

  uint64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  double v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    double v9 = v22;
    goto LABEL_27;
  }

  while (1)
  {
    double v9 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    double v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }

    uint64_t v12 = (v19 - 1) & v19;
    uint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + vswift_unknownObjectWeakDestroy(v0 + 16) = v17;
    swift_retain(v17);
  }

  id v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  uint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    double v9 = v20;
    goto LABEL_27;
  }

  while (1)
  {
    double v9 = v20 + 1;
    if (__OFADD__(v20, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    uint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }

    uint64_t v19 = (v25 - 1) & v25;
    uint64_t v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    id v23 = *(void *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v23, v5);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v23, v8, v5);
  }

  id v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    swift_release(v9);
    double v4 = v28;
    goto LABEL_30;
  }

  id v25 = *(void *)(v13 + 8 * v26);
  if (v25)
  {
    uint64_t v16 = v26;
    goto LABEL_27;
  }

  while (1)
  {
    uint64_t v16 = v26 + 1;
    if (__OFADD__(v26, 1LL)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_28;
    }
    id v25 = *(void *)(v13 + 8 * v16);
    ++v26;
    if (v25) {
      goto LABEL_27;
    }
  }

  __break(1u);
  return result;
}

  if (swift_conformsToProtocol2(v24, &protocol descriptor for ExactHeightProviding)) {
    id v44 = v24;
  }
  else {
    id v44 = 0LL;
  }
  if (v44)
  {
    int v42 = dispatch thunk of static ExactHeightProviding.height(in:asPartOf:)(v35, v33);
    goto LABEL_32;
  }

  unint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000023LL,  0x8000000100247A30LL,  "Arcade/ProductPageLayoutSectionProvider.swift",  45LL,  2LL,  167LL,  0);
  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }

  __break(1u);
  return result;
}

    double v6 = (v15 - 1) & v15;
    double v13 = __clz(__rbit64(v15)) + (v16 << 6);
    double v9 = v16;
LABEL_28:
    uint64_t v18 = (void *)(*(void *)(a1 + 48) + 16 * v13);
    uint64_t v19 = v18[1];
    id v20 = *(void *)(*(void *)(a1 + 56) + 8 * v13);
    *(void *)&v40[0] = *v18;
    *((void *)&v40[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(&v32, v40, &type metadata for String, &type metadata for AnyHashable, 7LL);
    id v31 = v20;
    double v21 = sub_1000031E8((uint64_t *)&unk_1002E5360);
    swift_dynamicCast(v35, &v31, v21, (char *)&type metadata for Any + 8, 7LL);
    id v36 = v32;
    double v37 = v33;
    double v38 = v34;
    sub_1000086FC(v35, v39);
    uint64_t v32 = v36;
    uint64_t v33 = v37;
    objc_super v34 = v38;
    sub_1000086FC(v39, v40);
    sub_1000086FC(v40, &v36);
    unint64_t result = AnyHashable._rawHashValue(seed:)(v3[5]);
    uint64_t v22 = -1LL << *((_BYTE *)v3 + 32);
    id v23 = result & ~v22;
    uint64_t v24 = v23 >> 6;
    if (((-1LL << v23) & ~*(void *)&v7[8 * (v23 >> 6)]) != 0)
    {
      uint64_t v10 = __clz(__rbit64((-1LL << v23) & ~*(void *)&v7[8 * (v23 >> 6)])) | v23 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      id v25 = 0;
      id v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }

        id v27 = v24 == v26;
        if (v24 == v26) {
          uint64_t v24 = 0LL;
        }
        v25 |= v27;
        id v28 = *(void *)&v7[8 * v24];
      }

      while (v28 == -1);
      uint64_t v10 = __clz(__rbit64(~v28)) + (v24 << 6);
    }

    *(void *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8LL] |= 1LL << v10;
    __n128 v11 = v3[6] + 40 * v10;
    *(_OWORD *)__n128 v11 = v32;
    *(_OWORD *)(v11 + swift_unknownObjectWeakDestroy(v0 + 16) = v33;
    *(void *)(v11 + 32) = v34;
    unint64_t result = (uint64_t)sub_1000086FC(&v36, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }

  uint64_t v17 = v9 + 5;
  if (v9 + 5 >= v29)
  {
LABEL_37:
    swift_release(v3);
    sub_100004624(a1);
    return (uint64_t)v3;
  }

  uint64_t v15 = *(void *)(v30 + 8 * v17);
  if (v15)
  {
    uint64_t v16 = v9 + 5;
    goto LABEL_27;
  }

  while (1)
  {
    uint64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v16 >= v29) {
      goto LABEL_37;
    }
    uint64_t v15 = *(void *)(v30 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_27;
    }
  }

  __break(1u);
}

  __break(1u);
  return result;
}

void sub_100017048()
{
  uint64_t v1 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v1);
  double v3 = (char *)&v24[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v4 = [*(id *)(v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel) attributedText];
  if (!v4) {
    goto LABEL_7;
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_hasMoreButton) != 1
    || *(_BYTE *)(v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_isCollapsed) != 1)
  {

LABEL_7:
    [*(id *)(v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_moreButton) setHidden:1];
    return;
  }

  int v5 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_alwaysShowsMoreButtonWhenCollapsed);
  id v23 = v4;
  if (v5 == 1)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_moreButton), "setHidden:", 0, v23);
  }

  else
  {
    id v6 = [v4 length];
    double v7 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_moreButton);
    if (v6)
    {
      double left = UIEdgeInsetsZero.left;
      double bottom = UIEdgeInsetsZero.bottom;
      double right = UIEdgeInsetsZero.right;
      uint64_t v11 = type metadata accessor for ExpandableTextView();
      LayoutMarginsAware<>.layoutFrame.getter(v11);
      double v13 = v12;
      double v15 = v14 - (left + right);
      uint64_t v17 = type metadata accessor for FontUseCase(0LL, v16);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v3, 1LL, 1LL, v17);
      uint64_t v18 = type metadata accessor for Feature(0LL);
      void v24[3] = v18;
      v24[4] = sub_1000100C0();
      uint64_t v19 = sub_100009D54(v24);
      (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104LL))( v19,  enum case for Feature.measurement_with_labelplaceholder(_:),  v18);
      LOBYTE(v18) = isFeatureEnabled(_:)(v24);
      _s6Arcade17PillOverlayLayoutVwxx_0(v24);
      char v22 = v18 & 1;
      static LabelPlaceholderCompatibility.measurements(attributedText:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)( v23,  v3,  4LL,  0LL,  0LL,  0LL,  0LL,  v0,  v15,  1.79769313e308,  v22);
      double v21 = v20;
      sub_100006060((uint64_t)v3, &qword_1002DE930);
      [v7 setHidden:v13 >= bottom + UIEdgeInsetsZero.top + v21];

      return;
    }

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_moreButton), "setHidden:", 1, v23);
  }
}

void sub_100017430()
{
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_automaticallyAdjustTextColors) == 1)
  {
    uint64_t v1 = v0;
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel);
    if (qword_1002DC360 != -1) {
      swift_once(&qword_1002DC360, sub_100016100);
    }
    uint64_t v3 = sub_1000031E8((uint64_t *)&unk_1002DE240);
    sub_1000061F4(v3, (uint64_t)qword_1002EE4F8);
    uint64_t v7 = v0;
    Conditional.evaluate(with:)(&v8, &v7, v3);
    id v4 = v8;
    [v2 setTextColor:v8];

    int v5 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_moreButton);
    if (qword_1002DC368 != -1) {
      swift_once(&qword_1002DC368, sub_1000161F4);
    }
    sub_1000061F4(v3, (uint64_t)qword_1002EE510);
    uint64_t v7 = v1;
    Conditional.evaluate(with:)(&v8, &v7, v3);
    id v6 = v8;
    [v5 setTitleColor:v8 forState:0];
  }

id sub_100017580()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpandableTextView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ExpandableTextView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade18ExpandableTextView);
}

id sub_10001764C()
{
  id result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel), "text"));
  if (result)
  {
    objc_super v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    unint64_t v5 = v4;

    swift_bridgeObjectRelease(v5);
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000LL) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    return (id)(v6 != 0);
  }

  return result;
}

id sub_1000176C4(uint64_t a1, uint64_t a2)
{
  return sub_100017730(a1, a2, (SEL *)&selRef_maximumNumberOfLines);
}

void sub_1000176D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void (*sub_1000176DC(void *a1))(void *)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100016744(v2);
  return sub_10000FC9C;
}

id sub_100017724(uint64_t a1, uint64_t a2)
{
  return sub_100017730(a1, a2, (SEL *)&selRef_lineBreakMode);
}

id sub_100017730(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v3
                                                             + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel), "textContainer"));
  id v6 = [v5 *a3];

  return v6;
}

void sub_100017788(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100017794(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v4
                                                             + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel), "textContainer"));
  objc_msgSend(v7, *a4, a1);
}

void (*sub_1000177FC(void *a1))(void *)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000167B4(v2);
  return sub_10000FC9C;
}

id sub_100017844()
{
  return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v0
                                                               + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel), "font"));
}

void sub_100017874(void *a1)
{
}

void (*sub_1000178B4(void *a1))(id *a1)
{
  uint64_t v3 = *(void **)(*v1 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel);
  a1[1] = v3;
  *a1 = [v3 font];
  return sub_10000FEB0;
}

id sub_100017908()
{
  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel), "jet_isTextExtraTall");
}

id sub_100017934()
{
  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel), "jet_languageAwareOutsets");
}

id sub_100017950()
{
  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC6Arcade18ExpandableTextView_textLabel), "jet_textLength");
}

uint64_t sub_100017970()
{
  return 16LL;
}

__n128 sub_10001797C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10001798C()
{
  return 16LL;
}

__n128 sub_100017998(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000179A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DE270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000179EC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100017A18()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100017A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100017A38(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100017A40(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_retain(a2);
  }
  return result;
}

void destroy for SingleOnboardingLayout(id *a1)
{
}

uint64_t initializeWithCopy for SingleOnboardingLayout(uint64_t a1, uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v3;
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  id v6 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  id v7 = *(void **)(a2 + 112);
  double v8 = *(void **)(a2 + 120);
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 120) = v8;
  double v9 = *(void **)(a2 + 128);
  uint64_t v10 = *(void **)(a2 + 136);
  *(void *)(a1 + 128) = v9;
  *(void *)(a1 + 136) = v10;
  id v11 = v6;
  id v12 = v7;
  id v13 = v8;
  id v14 = v9;
  id v15 = v10;
  return a1;
}

void *assignWithCopy for SingleOnboardingLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  __int128 v4 = (void *)a2[13];
  __int128 v5 = (void *)a1[13];
  a1[13] = v4;
  id v6 = v4;

  id v7 = (void *)a2[14];
  double v8 = (void *)a1[14];
  a1[14] = v7;
  id v9 = v7;

  uint64_t v10 = (void *)a2[15];
  id v11 = (void *)a1[15];
  a1[15] = v10;
  id v12 = v10;

  id v13 = (void *)a1[16];
  id v14 = (void *)a2[16];
  a1[16] = v14;
  id v15 = v14;

  uint64_t v16 = (void *)a2[17];
  uint64_t v17 = (void *)a1[17];
  a1[17] = v16;
  id v18 = v16;

  return a1;
}

__n128 initializeWithTake for SingleOnboardingLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v2 = *(_OWORD *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  __int128 v6 = *(_OWORD *)(a2 + 96);
  __int128 v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for SingleOnboardingLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  __int128 v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  __int128 v7 = *(void **)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);

  double v8 = *(void **)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);

  id v9 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  return a1;
}

uint64_t getEnumTagSinglePayload for SingleOnboardingLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 104);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleOnboardingLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0LL;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 144) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 104) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SingleOnboardingLayout()
{
  return &type metadata for SingleOnboardingLayout;
}

uint64_t sub_100017D68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v73 = a1;
  uint64_t v3 = type metadata accessor for Resize.Rule(0LL);
  uint64_t v70 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v72 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  id v71 = (char *)&v66 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v69 = (char *)&v66 - v9;
  __chkstk_darwin(v8);
  id v11 = (char *)&v66 - v10;
  uint64_t v12 = type metadata accessor for VerticalStack(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v66 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v74 = (char *)&v66 - v21;
  __chkstk_darwin(v20);
  id v68 = (char *)&v66 - v22;
  VerticalStack.init(with:)(sub_100018230, 0LL);
  id v23 = *(void **)(v2 + 104);
  uint64_t v24 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v77 = v24;
  double v78 = &protocol witness table for UILabel;
  v76[0] = v23;
  id v25 = v23;
  VerticalStack.adding(_:with:)(v76, 0LL, 0LL);
  uint64_t v66 = v13;
  id v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v27 = v12;
  v26(v16, v12);
  id v28 = (void (*)(char *, uint64_t, __n128))v26;
  id v67 = v26;
  _s6Arcade17PillOverlayLayoutVwxx_0(v76);
  uint64_t v29 = *(void **)(v2 + 112);
  uint64_t v77 = v24;
  double v78 = &protocol witness table for UILabel;
  v76[0] = v29;
  objc_super v30 = (_OWORD *)swift_allocObject(&unk_100281080, 160LL, 7LL);
  __int128 v31 = *(_OWORD *)(v2 + 112);
  v30[7] = *(_OWORD *)(v2 + 96);
  v30[8] = v31;
  v30[9] = *(_OWORD *)(v2 + 128);
  __int128 v32 = *(_OWORD *)(v2 + 48);
  v30[3] = *(_OWORD *)(v2 + 32);
  v30[4] = v32;
  __int128 v33 = *(_OWORD *)(v2 + 80);
  v30[5] = *(_OWORD *)(v2 + 64);
  v30[6] = v33;
  __int128 v34 = *(_OWORD *)(v2 + 16);
  v30[1] = *(_OWORD *)v2;
  _OWORD v30[2] = v34;
  id v35 = v29;
  sub_100018CA8(v2);
  VerticalStack.adding(_:with:)(v76, sub_100018CFC, v30);
  __n128 v36 = swift_release(v30);
  uint64_t v37 = v27;
  v28(v19, v27, v36);
  _s6Arcade17PillOverlayLayoutVwxx_0(v76);
  double v38 = *(void **)(v2 + 120);
  v75[3] = type metadata accessor for DynamicTypeButton(0LL);
  v75[4] = &protocol witness table for UIButton;
  v75[0] = v38;
  uint64_t v39 = *(void *)(v2 + 16);
  *((void *)v11 + 3) = &type metadata for CGFloat;
  *((void *)v11 + 4) = &protocol witness table for CGFloat;
  *(void *)id v11 = v39;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 104);
  v40(v11, enum case for Resize.Rule.replaced(_:), v3);
  uint64_t v41 = enum case for Resize.Rule.unchanged(_:);
  int v42 = v69;
  v40(v69, enum case for Resize.Rule.unchanged(_:), v3);
  uint64_t v43 = v71;
  uint64_t v44 = v3;
  v40(v71, v41, v3);
  uint64_t v45 = v72;
  v40(v72, v41, v44);
  id v46 = v68;
  uint64_t v47 = v37;
  uint64_t v77 = type metadata accessor for Resize(0LL);
  double v78 = &protocol witness table for Resize;
  sub_100009D54(v76);
  id v48 = v38;
  id v49 = (void (*)(char *, uint64_t, __n128))v67;
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v75, v11, v42, v43, v45);
  uint64_t v50 = (_OWORD *)swift_allocObject(&unk_1002810A8, 160LL, 7LL);
  __int128 v51 = *(_OWORD *)(v2 + 112);
  v50[7] = *(_OWORD *)(v2 + 96);
  v50[8] = v51;
  v50[9] = *(_OWORD *)(v2 + 128);
  __int128 v52 = *(_OWORD *)(v2 + 48);
  v50[3] = *(_OWORD *)(v2 + 32);
  v50[4] = v52;
  __int128 v53 = *(_OWORD *)(v2 + 80);
  v50[5] = *(_OWORD *)(v2 + 64);
  v50[6] = v53;
  __int128 v54 = *(_OWORD *)(v2 + 16);
  v50[1] = *(_OWORD *)v2;
  v50[2] = v54;
  sub_100018CA8(v2);
  uint64_t v55 = v74;
  VerticalStack.adding(_:with:)(v76, sub_100018D4C, v50);
  __n128 v56 = swift_release(v50);
  v49(v55, v47, v56);
  _s6Arcade17PillOverlayLayoutVwxx_0(v76);
  uint64_t v57 = *(void **)(v2 + 128);
  if (!v57) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v66 + 32))(v73, v46, v47);
  }
  v75[0] = *(void *)(v2 + 128);
  unint64_t v58 = sub_100018D98();
  id v59 = v57;
  Measurable.placeable.getter(v76, v58, &protocol witness table for UIView);
  id v60 = (_OWORD *)swift_allocObject(&unk_1002810D0, 160LL, 7LL);
  __int128 v61 = *(_OWORD *)(v2 + 112);
  v60[7] = *(_OWORD *)(v2 + 96);
  v60[8] = v61;
  v60[9] = *(_OWORD *)(v2 + 128);
  __int128 v62 = *(_OWORD *)(v2 + 48);
  v60[3] = *(_OWORD *)(v2 + 32);
  v60[4] = v62;
  __int128 v63 = *(_OWORD *)(v2 + 80);
  v60[5] = *(_OWORD *)(v2 + 64);
  v60[6] = v63;
  __int128 v64 = *(_OWORD *)(v2 + 16);
  v60[1] = *(_OWORD *)v2;
  v60[2] = v64;
  sub_100018CA8(v2);
  VerticalStack.adding(_:with:)(v76, sub_100018E1C, v60);

  swift_release(v60);
  _s6Arcade17PillOverlayLayoutVwxx_0(v76);
  return ((uint64_t (*)(char *, uint64_t))v49)(v46, v47);
}

uint64_t sub_100018230()
{
  return VerticalStack.Properties.alignment.setter(1LL);
}

uint64_t sub_100018254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v62 = a1;
  uint64_t v3 = type metadata accessor for Resize.Rule(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v57 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (uint64_t *)((char *)&v57 - v12);
  __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v57 - v14);
  uint64_t v65 = type metadata accessor for HorizontalStack(0LL);
  uint64_t v64 = *(void *)(v65 - 8);
  uint64_t v16 = __chkstk_darwin(v65);
  id v60 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  __int128 v63 = (char *)&v57 - v19;
  __chkstk_darwin(v18);
  __int128 v61 = (char *)&v57 - v20;
  uint64_t v21 = (void *)*((void *)v1 + 16);
  if (v21)
  {
    double v22 = v1[5];
    double v23 = v1[6];
    id v24 = v21;
    LODWORD(v25) = 1148846080;
    LODWORD(v26) = 1112014848;
    objc_msgSend( v24,  "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:",  v22,  v23,  v25,  v26);
    double v28 = v27;
    id v29 = [v24 widthAnchor];
    id v30 = [v29 constraintEqualToConstant:v28];

    [v30 setActive:1];
  }

  __int128 v31 = (_OWORD *)swift_allocObject(&unk_100281058, 160LL, 7LL);
  __int128 v32 = *(_OWORD *)(v2 + 112);
  v31[7] = *(_OWORD *)(v2 + 96);
  v31[8] = v32;
  v31[9] = *(_OWORD *)(v2 + 128);
  __int128 v33 = *(_OWORD *)(v2 + 48);
  v31[3] = *(_OWORD *)(v2 + 32);
  v31[4] = v33;
  __int128 v34 = *(_OWORD *)(v2 + 80);
  void v31[5] = *(_OWORD *)(v2 + 64);
  v31[6] = v34;
  __int128 v35 = *(_OWORD *)(v2 + 16);
  v31[1] = *(_OWORD *)v2;
  void v31[2] = v35;
  sub_100018CA8(v2);
  __n128 v36 = v60;
  HorizontalStack.init(with:)(sub_100018C54, v31);
  uint64_t v79 = type metadata accessor for VerticalStack(0LL);
  double v80 = &protocol witness table for VerticalStack;
  uint64_t v37 = sub_100009D54(v78);
  sub_100017D68((uint64_t)v37);
  uint64_t v38 = *(void *)(v2 + 40);
  uint64_t v40 = *(void *)(v2 + 56);
  uint64_t v39 = *(void *)(v2 + 64);
  uint64_t v42 = *(void *)(v2 + 72);
  uint64_t v41 = *(void *)(v2 + 80);
  uint64_t v44 = *(void *)(v2 + 88);
  uint64_t v43 = *(void *)(v2 + 96);
  v15[3] = &type metadata for CGFloat;
  v15[4] = &protocol witness table for CGFloat;
  *uint64_t v15 = v38;
  unsigned int v58 = enum case for Resize.Rule.replaced(_:);
  uint64_t v45 = *(void (**)(void *))(v4 + 104);
  v45(v15);
  uint64_t v46 = enum case for Resize.Rule.unchanged(_:);
  ((void (*)(void *, void, uint64_t))v45)(v13, enum case for Resize.Rule.unchanged(_:), v3);
  ((void (*)(char *, uint64_t, uint64_t))v45)(v10, v46, v3);
  ((void (*)(char *, uint64_t, uint64_t))v45)(v7, v46, v3);
  uint64_t v57 = type metadata accessor for Resize(0LL);
  uint64_t v82 = v57;
  uint64_t v83 = &protocol witness table for Resize;
  sub_100009D54(&v81);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v78, v15, v13, v10, v7);
  HorizontalStack.adding(_:with:)(&v81, 0LL, 0LL);
  id v59 = *(void (**)(char *, uint64_t))(v64 + 8);
  v59(v36, v65);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v81);
  v78[0] = *(void *)(v2 + 136);
  uint64_t v47 = type metadata accessor for ArtworkView(0LL);
  Measurable.placeable.getter(&v81, v47, &protocol witness table for UIView);
  v15[3] = &type metadata for CGFloat;
  v15[4] = &protocol witness table for CGFloat;
  *uint64_t v15 = v40;
  uint64_t v48 = v58;
  ((void (*)(void *, void, uint64_t))v45)(v15, v58, v3);
  v13[3] = &type metadata for CGFloat;
  v13[4] = &protocol witness table for CGFloat;
  void *v13 = v39;
  ((void (*)(void *, uint64_t, uint64_t))v45)(v13, v48, v3);
  ((void (*)(char *, uint64_t, uint64_t))v45)(v10, v46, v3);
  ((void (*)(char *, uint64_t, uint64_t))v45)(v7, v46, v3);
  uint64_t v79 = v57;
  double v80 = &protocol witness table for Resize;
  sub_100009D54(v78);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(&v81, v15, v13, v10, v7);
  double v76 = &type metadata for CGFloat;
  uint64_t v77 = &protocol witness table for CGFloat;
  v75[0] = v42;
  uint64_t v73 = &type metadata for CGFloat;
  uint64_t v74 = &protocol witness table for CGFloat;
  v72[0] = v41;
  uint64_t v49 = type metadata accessor for ZeroDimension(0LL);
  uint64_t v70 = v49;
  id v71 = &protocol witness table for ZeroDimension;
  sub_100009D54(v69);
  static ZeroDimension.zero.getter();
  uint64_t v67 = v49;
  id v68 = &protocol witness table for ZeroDimension;
  sub_100009D54(v66);
  static ZeroDimension.zero.getter();
  uint64_t v50 = type metadata accessor for Margins(0LL);
  uint64_t v82 = v50;
  uint64_t v83 = &protocol witness table for Margins;
  sub_100009D54(&v81);
  Margins.init(_:top:leading:bottom:trailing:)(v78, v69, v75, v66, v72);
  __int128 v51 = v61;
  __int128 v52 = v63;
  HorizontalStack.adding(_:with:)(&v81, 0LL, 0LL);
  uint64_t v53 = v65;
  __int128 v54 = v59;
  v59(v52, v65);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v81);
  HorizontalStack.init(with:)(sub_1000188D8, 0LL);
  uint64_t v79 = v53;
  double v80 = &protocol witness table for HorizontalStack;
  uint64_t v55 = sub_100009D54(v78);
  (*(void (**)(void *, char *, uint64_t))(v64 + 16))(v55, v51, v53);
  double v76 = &type metadata for CGFloat;
  uint64_t v77 = &protocol witness table for CGFloat;
  v75[0] = v44;
  uint64_t v73 = &type metadata for CGFloat;
  uint64_t v74 = &protocol witness table for CGFloat;
  v72[0] = v43;
  uint64_t v70 = v49;
  id v71 = &protocol witness table for ZeroDimension;
  sub_100009D54(v69);
  static ZeroDimension.zero.getter();
  uint64_t v67 = v49;
  id v68 = &protocol witness table for ZeroDimension;
  sub_100009D54(v66);
  static ZeroDimension.zero.getter();
  uint64_t v82 = v50;
  uint64_t v83 = &protocol witness table for Margins;
  sub_100009D54(&v81);
  Margins.init(_:top:leading:bottom:trailing:)(v78, v69, v75, v66, v72);
  HorizontalStack.adding(_:with:)(&v81, 0LL, 0LL);
  v54(v52, v53);
  v54(v51, v53);
  return _s6Arcade17PillOverlayLayoutVwxx_0(&v81);
}

uint64_t sub_1000188D8()
{
  return HorizontalStack.Properties.alignment.setter(1LL);
}

uint64_t sub_1000188FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100018254(a1);
}

double sub_10001894C@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 96);
  __int128 v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  __int128 v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  __int128 v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(double *)(a1 + 96) = result;
  return result;
}

double sub_100018970(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = type metadata accessor for HorizontalStack(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __int128 v11 = v3[7];
  void v17[6] = v3[6];
  v17[7] = v11;
  v17[8] = v3[8];
  __int128 v12 = v3[3];
  v17[2] = v3[2];
  v17[3] = v12;
  __int128 v13 = v3[5];
  v17[4] = v3[4];
  v17[5] = v13;
  __int128 v14 = v3[1];
  v17[0] = *v3;
  v17[1] = v14;
  sub_100018254((uint64_t)v10);
  double v15 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v7, &protocol witness table for HorizontalStack, a2, a3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v15;
}

uint64_t sub_100018A78(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = type metadata accessor for HorizontalStack(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  __int128 v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __int128 v15 = v5[7];
  v20[6] = v5[6];
  v20[7] = v15;
  v20[8] = v5[8];
  __int128 v16 = v5[3];
  v20[2] = v5[2];
  v20[3] = v16;
  __int128 v17 = v5[5];
  v20[4] = v5[4];
  v20[5] = v17;
  __int128 v18 = v5[1];
  v20[0] = *v5;
  v20[1] = v18;
  sub_100018254((uint64_t)v14);
  dispatch thunk of Placeable.place(at:with:)(a1, v11, &protocol witness table for HorizontalStack, a2, a3, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_100018B70(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100018E68();
  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, v4);
}

unint64_t sub_100018BB4()
{
  unint64_t result = qword_1002DE568;
  if (!qword_1002DE568)
  {
    unint64_t result = swift_getWitnessTable(&unk_100233F78, &type metadata for SingleOnboardingLayout);
    atomic_store(result, (unint64_t *)&qword_1002DE568);
  }

  return result;
}

unint64_t sub_100018BFC()
{
  unint64_t result = qword_1002DE570;
  if (!qword_1002DE570)
  {
    unint64_t result = swift_getWitnessTable(&unk_100233ED8, &type metadata for SingleOnboardingLayout);
    atomic_store(result, (unint64_t *)&qword_1002DE570);
  }

  return result;
}

uint64_t sub_100018C40(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100255E10, 1LL);
}

uint64_t sub_100018C54()
{
  uint64_t v1 = *(void *)(v0 + 48);
  v3[3] = &type metadata for CGFloat;
  v3[4] = &protocol witness table for CGFloat;
  v3[0] = v1;
  HorizontalStack.Properties.trailingSpacing.setter(v3);
  return HorizontalStack.Properties.alignment.setter(1LL);
}

uint64_t sub_100018CA8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 104);
  __int128 v3 = *(void **)(a1 + 112);
  unint64_t v4 = *(void **)(a1 + 120);
  __int128 v5 = *(void **)(a1 + 136);
  id v6 = *(id *)(a1 + 128);
  id v7 = v5;
  id v8 = v2;
  id v9 = v3;
  id v10 = v4;
  return a1;
}

uint64_t sub_100018CFC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  v3[3] = &type metadata for CGFloat;
  v3[4] = &protocol witness table for CGFloat;
  v3[0] = v1;
  return VerticalStack.Properties.topSpacing.setter(v3);
}

uint64_t sub_100018D4C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  v3[3] = &type metadata for CGFloat;
  v3[4] = &protocol witness table for CGFloat;
  v3[0] = v1;
  return VerticalStack.Properties.topSpacing.setter(v3);
}

unint64_t sub_100018D98()
{
  unint64_t result = qword_1002DF5F0;
  if (!qword_1002DF5F0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIView);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DF5F0);
  }

  return result;
}

uint64_t sub_100018DD8()
{
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t sub_100018E1C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  v3[3] = &type metadata for CGFloat;
  v3[4] = &protocol witness table for CGFloat;
  v3[0] = v1;
  return VerticalStack.Properties.topSpacing.setter(v3);
}

unint64_t sub_100018E68()
{
  unint64_t result = qword_1002DE578;
  if (!qword_1002DE578)
  {
    unint64_t result = swift_getWitnessTable(&unk_100233F30, &type metadata for SingleOnboardingLayout);
    atomic_store(result, (unint64_t *)&qword_1002DE578);
  }

  return result;
}

__n128 initializeWithCopy for SingleOnboardingLayout.Metrics(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[2];
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  __int128 v5 = a2[4];
  __int128 v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SingleOnboardingLayout.Metrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for SingleOnboardingLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 104) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SingleOnboardingLayout.Metrics()
{
  return &type metadata for SingleOnboardingLayout.Metrics;
}

void *sub_100018F4C()
{
  return &protocol witness table for HorizontalStack;
}

uint64_t sub_100018F58(uint64_t a1)
{
  return sub_100018FC0(a1, qword_1002EE528, 0x7573734920707041LL, 0xEA00000000007365LL);
}

uint64_t sub_100018F7C(uint64_t a1)
{
  return sub_100018FC0(a1, qword_1002EE540, 0x7365676150LL, 0xE500000000000000LL);
}

uint64_t sub_100018F98(uint64_t a1)
{
  return sub_100018FC0(a1, qword_1002EE558, 0x6E6F4320776F6C46LL, 0xEC0000006C6F7274LL);
}

uint64_t sub_100018FC0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for OSLogger.Subsystem(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for OSLogger(0LL);
  sub_10000FF90(v11, a2);
  sub_1000061F4(v11, (uint64_t)a2);
  if (qword_1002DD0D8 != -1) {
    swift_once(&qword_1002DD0D8, sub_1001DF564);
  }
  uint64_t v12 = sub_1000061F4(v7, (uint64_t)qword_1002F1690);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  return OSLogger.init(subsystem:category:)(v10, a3, a4);
}

__n128 sub_1000190BC()
{
  qword_1002EE570 = 0x4034000000000000LL;
  *(void *)algn_1002EE578 = 0LL;
  qword_1002EE580 = 0LL;
  unk_1002EE588 = 0LL;
  __asm { FMOV            V0.2D, #20.0 }

  xmmword_1002EE590 = (__int128)result;
  *(_OWORD *)&qword_1002EE5A0 = xmmword_100233FB0;
  byte_1002EE5B0 = 0;
  *(__n128 *)&qword_1002EE5B8 = result;
  *(_OWORD *)&qword_1002EE5C8 = xmmword_100233FB0;
  byte_1002EE5D8 = 0;
  return result;
}

char *sub_1000190F4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_lockupView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for SmallLockupView());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_mediaView;
  *(void *)&v11[v12] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for LockupMediaView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  v11[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_state] = 0;
  *(void *)&v11[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_pillView] = 0LL;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for AppSearchResultContentView();
  id v13 = objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  __int128 v17 = (char *)v13;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  [v17 addSubview:*(void *)&v17[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_lockupView]];
  [v17 addSubview:*(void *)&v17[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_mediaView]];
  sub_100019950(0, 0);

  return v17;
}

void sub_1000192B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AspectRatio(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  __int128 v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = (objc_class *)type metadata accessor for AppSearchResultContentView();
  v32.receiver = v0;
  v32.super_class = v9;
  objc_msgSendSuper2(&v32, "layoutSubviews");
  LayoutMarginsAware<>.layoutFrame.getter(v9);
  if (qword_1002DC388 != -1) {
    uint64_t v10 = swift_once(&qword_1002DC388, sub_1000190BC);
  }
  *(void *)&double v11 = CGRect.subtracting(insets:)(v10).n128_u64[0];
  double v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  __int128 v18 = *(void **)&v0[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_lockupView];
  sub_1000ABE78(v14);
  double v20 = v19;
  v33.origin.x = v11;
  v33.origin.y = v13;
  v33.size.width = v15;
  v33.size.height = v17;
  objc_msgSend(v18, "setFrame:", v11, v13, CGRectGetWidth(v33), v20);
  if (qword_1002DCA10 != -1) {
    swift_once(&qword_1002DCA10, sub_1000AE15C);
  }
  uint64_t v21 = sub_1000061F4(v2, (uint64_t)qword_1002EFF60);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v21, v2);
  LayoutMarginsAware<>.layoutFrame.getter(v9);
  double v23 = v22;
  double v25 = v24;
  __n128 v27 = AspectRatio.init(_:_:)(v26, v22);
  v28.n128_f64[0] = AspectRatio.horizontalFraction.getter(v27);
  if (AspectRatio.horizontalFraction.getter(v28) >= v28.n128_f64[0]) {
    double v25 = AspectRatio.height(fromWidth:)(v23);
  }
  else {
    double v23 = AspectRatio.width(fromHeight:)(v25);
  }
  id v29 = *(void (**)(char *, uint64_t))(v3 + 8);
  v29(v6, v2);
  v29(v8, v2);
  *(void *)&v34.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v9).n128_u64[0];
  CGFloat MaxY = CGRectGetMaxY(v34);
  __int128 v31 = *(void **)&v1[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_mediaView];
  objc_msgSend(v31, "setFrame:", 0.0, MaxY - v25, v23, v25);
  sub_1001B495C(v31, 2);
}

void sub_1000195D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ComponentDecoration(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AppSearchResult(0LL);
  uint64_t v10 = sub_100009CA4( &qword_1002DE750,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AppSearchResult,  (uint64_t)&protocol conformance descriptor for SearchResult);
  double v11 = ItemLayoutContext.typedModel<A>(as:)(&v35, v9, v9, v10);
  uint64_t v12 = v35;
  if (!v35) {
    return;
  }
  uint64_t v13 = AppSearchResult.lockup.getter(v11);
  sub_1000BDF00(v13);
  swift_release(v13);
  uint64_t v15 = AppSearchResult.lockup.getter(v14);
  uint64_t v16 = MixedMediaLockup.screenshots.getter();
  swift_release(v15);
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0) {
      uint64_t v32 = v16;
    }
    else {
      uint64_t v32 = v16 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v16);
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v16);
    if (!v17) {
      goto LABEL_7;
    }
  }

  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v17) {
      goto LABEL_7;
    }
  }

  if ((v16 & 0xC000000000000001LL) != 0)
  {
    uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v16);
  }

  else
  {
    if (!*(void *)((v16 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
LABEL_28:
      uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v16);
      goto LABEL_12;
    }

    uint64_t v17 = *(void *)(v16 + 32);
    swift_retain(v17);
  }

LABEL_7:
  swift_bridgeObjectRelease(v16);
  uint64_t v19 = AppSearchResult.lockup.getter(v18);
  uint64_t v16 = MixedMediaLockup.trailers.getter();
  swift_release(v19);
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0) {
      uint64_t v33 = v16;
    }
    else {
      uint64_t v33 = v16 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v16);
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v16);
    if (!v20) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }

  uint64_t v20 = *(void *)((v16 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (v20)
  {
LABEL_9:
    if ((v16 & 0xC000000000000001LL) == 0)
    {
      if (!*(void *)((v16 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        __break(1u);
        return;
      }

      uint64_t v20 = *(void *)(v16 + 32);
      swift_retain(v20);
      goto LABEL_12;
    }

    goto LABEL_28;
  }

    uint64_t v5 = *(_OWORD *)(a2 + 72);
    uint64_t v6 = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_OWORD *)(a1 + 72) = v5;
    *(_OWORD *)(a1 + 88) = v6;
    goto LABEL_8;
  }

  if (!v4)
  {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 72));
    goto LABEL_7;
  }

  sub_1000264E4((void *)(a1 + 72), (void *)(a2 + 72));
LABEL_8:
  sub_1000264E4((void *)(a1 + 112), (void *)(a2 + 112));
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  sub_1000264E4((void *)(a1 + 160), (void *)(a2 + 160));
  sub_1000264E4((void *)(a1 + 200), (void *)(a2 + 200));
  return a1;
}

    uint64_t v5 = *(_OWORD *)(a2 + 72);
    uint64_t v6 = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_OWORD *)(a1 + 72) = v5;
    *(_OWORD *)(a1 + 88) = v6;
    goto LABEL_8;
  }

  if (!v4)
  {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 72));
    goto LABEL_7;
  }

  sub_1000264E4((void *)(a1 + 72), (void *)(a2 + 72));
LABEL_8:
  sub_1000264E4((void *)(a1 + 112), (void *)(a2 + 112));
  return a1;
}

  if (qword_1002DC380 != -1) {
    swift_once(&qword_1002DC380, sub_100018F98);
  }
  Swift::String v29 = sub_1000061F4(v10, (uint64_t)qword_1002EE558);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v29, v10);
  Swift::String v30 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  Swift::String v31 = type metadata accessor for LogMessage(0LL);
  uint64_t v32 = swift_allocObject( v30,  ((*(unsigned __int8 *)(*(void *)(v31 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v31 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v31 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v31 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v32 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
  LogMessage.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100246690LL);
  *((void *)&v42 + 1) = v9;
  *(void *)&uint64_t v41 = a5;
  swift_retain(a5);
  static LogMessage.traceableSensitive(_:)(&v41);
  sub_100006060((uint64_t)&v41, (uint64_t *)&unk_1002DF680);
  Logger.info(_:)(v32, v10, &protocol witness table for OSLogger);
  uint64_t v33 = swift_bridgeObjectRelease(v32);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v33);
}

  uint64_t v38 = dispatch thunk of ProductPresenter.sectionCount.getter(v31);
  if (v33 < v38) {
    uint64_t v39 = v33;
  }
  else {
    uint64_t v39 = 0LL;
  }
  uint64_t v40 = v69;
  sub_1000D3758(v32, v39, v33 >= v38, v69);
  uint64_t v16 = v63;
  uint64_t v15 = v64;
LABEL_11:
  if ((sub_100201C94(v32) & 1) != 0)
  {
    uint64_t v41 = v67;
    dispatch thunk of ProductPresenter.contentType(for:)(v32);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v41, v15);
  }

  else
  {
    [v40 pageMarginInsets];
    uint64_t v43 = v42;
    uint64_t v44 = v67;
    dispatch thunk of ProductPresenter.contentType(for:)(v32);
    uint64_t v45 = sub_1001782D0();
    uint64_t v47 = v46;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v44, v15);
    if (v45) {
      (*(void (**)(void *, uint64_t, uint64_t, double, double))(v47 + 40))(v40, v45, v47, v43, v43);
    }
  }

    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
    goto LABEL_8;
  }

  if (!v4)
  {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)a1);
    goto LABEL_7;
  }

  sub_1000264E4((void *)a1, a2);
LABEL_8:
  sub_1000264E4((void *)(a1 + 40), (void *)a2 + 5);
  sub_1000264E4((void *)(a1 + 80), (void *)a2 + 10);
  sub_1000264E4((void *)(a1 + 120), (void *)a2 + 15);
  sub_1000264E4((void *)(a1 + 160), (void *)a2 + 20);
  sub_1000264E4((void *)(a1 + 200), (void *)a2 + 25);
  sub_1000264E4((void *)(a1 + 240), (void *)a2 + 30);
  sub_1000264E4((void *)(a1 + 280), (void *)a2 + 35);
  sub_1000264E4((void *)(a1 + 320), (void *)a2 + 40);
  sub_1000264E4((void *)(a1 + 360), (void *)a2 + 45);
  sub_1000264E4((void *)(a1 + 400), (void *)a2 + 50);
  *(void *)(a1 + 440) = *((void *)a2 + 55);
  *(void *)(a1 + 448) = *((void *)a2 + 56);
  *(void *)(a1 + 456) = *((void *)a2 + 57);
  *(void *)(a1 + 464) = *((void *)a2 + 58);
  return a1;
}

  double v89 = v74;
  v230 = v84;
  if (v85)
  {
    swift_retain(v85);
    dispatch thunk of Artwork.systemImageName.getter(v90);
    if (!v91) {
      goto LABEL_13;
    }
    double v92 = v91;
    double v93 = (void *)objc_opt_self(&OBJC_CLASS___UIImageSymbolConfiguration);
    double v94 = objc_msgSend(v93, "configurationWithFont:", v262, v230);
    objc_super v95 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v92);
    CGRect v96 = [(id)objc_opt_self(UIImage) _systemImageNamed:v95 withConfiguration:v94];

    uint64_t v85 = v266;
    if (v96)
    {
      [v96 size];
      CGRect v98 = v97.n128_f64[0];
      CGRect v100 = v99;
      CGRect v101 = type metadata accessor for LayoutViewPlaceholder(0LL, v97);
      swift_allocObject(v101, *(unsigned int *)(v101 + 48), *(unsigned __int16 *)(v101 + 52));
      CGRect v102 = LayoutViewPlaceholder.init(representing:)(v98, v100);
      swift_release(v85);

      if (!v102) {
        goto LABEL_11;
      }
    }

    else
    {
LABEL_13:
      swift_retain(v85);
      v107 = sub_100171BF4(v106, v271, v264);
      uint64_t v109 = v108;
      Swift::Int v110 = swift_release(v85);
      Swift::Int v111 = type metadata accessor for LayoutViewPlaceholder(0LL, v110);
      swift_allocObject(v111, *(unsigned int *)(v111 + 48), *(unsigned __int16 *)(v111 + 52));
      CGRect v102 = LayoutViewPlaceholder.init(representing:)(v107, v109);
      CGRect v103 = swift_release(v85);
      if (!v102) {
        goto LABEL_11;
      }
    }

    *((void *)&v289 + 1) = type metadata accessor for LayoutViewPlaceholder(0LL, v103);
    v290 = &protocol witness table for LayoutViewPlaceholder;
    *(void *)&v288 = v102;
    goto LABEL_15;
  }

  uint64_t v38 = dispatch thunk of ProductPresenter.sectionCount.getter(v31);
  if (v33 < v38) {
    uint64_t v39 = v32 + 1;
  }
  else {
    uint64_t v39 = 0LL;
  }
  uint64_t v40 = v70;
  sub_100192A7C(v32, v39, v33 >= v38, v70);
  uint64_t v15 = v64;
  uint64_t v14 = v65;
LABEL_11:
  if ((sub_100201C94(v32) & 1) != 0)
  {
    uint64_t v41 = v68;
    dispatch thunk of ProductPresenter.contentType(for:)(v32);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v14);
  }

  else
  {
    [v40 pageMarginInsets];
    uint64_t v43 = v42;
    uint64_t v44 = v68;
    dispatch thunk of ProductPresenter.contentType(for:)(v32);
    uint64_t v45 = sub_1001782D0();
    uint64_t v47 = v46;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v44, v14);
    if (v45) {
      (*(void (**)(void *, uint64_t, uint64_t, double, double))(v47 + 40))(v40, v45, v47, v43, v43);
    }
  }

    uint64_t v21 = v9;
LABEL_11:
    swift_release(v21);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v4);
    return;
  }

  __break(1u);
}

  __n128 v36 = Uber.init(style:assetType:artwork:compactArtwork:video:compactVideo:iconArtwork:title:)( v24,  v25,  v26,  0LL,  v27,  0LL,  v28,  0LL,  0LL);
LABEL_8:
  sub_10018C840(v36);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

    __n128 v28 = sub_1000031E8((uint64_t *)&unk_1002DE240);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16LL))(a2, v2, v28);
  }

  uint64_t v23 = v2 + *(int *)(sub_1000031E8((uint64_t *)&unk_1002DDB70) + 32);
  sub_10001027C(v23, (uint64_t)v14, (uint64_t *)&unk_1002E7020);
  uint64_t v24 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v25 = *(void *)(v24 - 8);
  id v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  __n128 v27 = v26(v14, 1LL, v24);
  sub_100006060((uint64_t)v14, (uint64_t *)&unk_1002E7020);
  if (v27 == 1) {
    goto LABEL_7;
  }
  sub_10001027C(v23, (uint64_t)v8, (uint64_t *)&unk_1002E7020);
  __n128 result = v26(v8, 1LL, v24);
  if ((_DWORD)result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(a2, v8, v24);
  }
LABEL_11:
  __break(1u);
  return result;
}

    uint64_t v18 = v145;
LABEL_8:
    if (v21 > 0.0) {
      v19.n128_f64[0] = v21;
    }
    else {
      v19.n128_f64[0] = 0.0;
    }
    (*(void (**)(uint64_t, uint64_t, char *, void, uint64_t, __n128, double))(v146 + 32))( v33,  v24,  v38,  *(void *)&v38[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_artworkLoader],  v36,  v19,  v23);
LABEL_12:
    (*(void (**)(_BYTE *, uint64_t))(v147 + 8))(v13, v148);
    swift_release(v33);
  }

  Swift::String v29 = v27 + 4;
  if (v29 >= v138)
  {
LABEL_137:

    swift_release(a1);
    return;
  }

  __n128 v28 = *(void *)(v136 + 8 * v29);
  if (v28)
  {
    uint64_t v18 = v29;
    goto LABEL_30;
  }

  while (1)
  {
    uint64_t v18 = v29 + 1;
    if (__OFADD__(v29, 1LL)) {
      break;
    }
    if (v18 >= v138) {
      goto LABEL_137;
    }
    __n128 v28 = *(void *)(v136 + 8 * v18);
    ++v29;
    if (v28) {
      goto LABEL_30;
    }
  }

  double v86 = v71;
  v227 = v81;
  if (v82)
  {
    double v87 = swift_retain(v82);
    dispatch thunk of Artwork.systemImageName.getter(v87);
    if (!v88) {
      goto LABEL_13;
    }
    double v89 = v88;
    double v90 = (void *)objc_opt_self(&OBJC_CLASS___UIImageSymbolConfiguration);
    double v91 = [v90 configurationWithFont:v257];
    double v92 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v89);
    double v93 = [(id)objc_opt_self(UIImage) _systemImageNamed:v92 withConfiguration:v91];

    uint64_t v82 = v261;
    if (v93)
    {
      [v93 size];
      objc_super v95 = v94.n128_f64[0];
      CGRect v97 = v96;
      CGRect v98 = type metadata accessor for LayoutViewPlaceholder(0LL, v94);
      swift_allocObject(v98, *(unsigned int *)(v98 + 48), *(unsigned __int16 *)(v98 + 52));
      CGRect v99 = LayoutViewPlaceholder.init(representing:)(v95, v97);
      swift_release(v82);

      if (!v99) {
        goto LABEL_11;
      }
    }

    else
    {
LABEL_13:
      CGRect v103 = swift_retain(v82);
      CGRect v104 = sub_100171BF4(v103, v266, v259);
      unint64_t v106 = v105;
      v107 = swift_release(v82);
      Swift::Int v108 = type metadata accessor for LayoutViewPlaceholder(0LL, v107);
      swift_allocObject(v108, *(unsigned int *)(v108 + 48), *(unsigned __int16 *)(v108 + 52));
      CGRect v99 = LayoutViewPlaceholder.init(representing:)(v104, v106);
      CGRect v100 = swift_release(v82);
      if (!v99) {
        goto LABEL_11;
      }
    }

    *((void *)&v284 + 1) = type metadata accessor for LayoutViewPlaceholder(0LL, v100);
    v285 = &protocol witness table for LayoutViewPlaceholder;
    *(void *)&v283 = v99;
    goto LABEL_15;
  }

LABEL_12:
  swift_bridgeObjectRelease(v16);
  uint64_t v21 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v22 = swift_dynamicCastClassUnconditional(a2, v21, 0LL, 0LL, 0LL);
  sub_10002B4E8(v20, v22);
  swift_release(v17);
  swift_release(v20);
  uint64_t v24 = AppSearchResult.lockup.getter(v23);
  uint64_t v25 = dispatch thunk of Lockup.decorations.getter();
  id v26 = objc_msgSend(v3, "traitCollection", swift_release(v24).n128_f64[0]);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for ComponentDecoration.arcade(_:), v5);
  LOBYTE(v24) = sub_1001119F8((uint64_t)v8, v25);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t countAndFlagsBits = 0LL;
  object = 0LL;
  if ((v24 & 1) != 0)
  {
    v29._object = (void *)0x80000001002444F0LL;
    v29._uint64_t countAndFlagsBits = 0xD000000000000011LL;
    v30._uint64_t countAndFlagsBits = 0x724120656C707041LL;
    v30._object = (void *)0xEC00000065646163LL;
    Swift::String v31 = localizedString(_:comment:)(v29, v30);
    uint64_t countAndFlagsBits = v31._countAndFlagsBits;
    object = v31._object;
  }

  sub_1001129C8(countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease(v25);

  objc_msgSend(v3, "setNeedsLayout", swift_bridgeObjectRelease(object).n128_f64[0]);
  swift_release(v12);
}

  uint64_t v15 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  uint64_t v16 = *(void *)(v15 + 48) + 40 * a2;
  uint64_t v17 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)a1;
  *(_OWORD *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(v15 + 16);
  uint64_t v19 = __OFADD__(v18, 1LL);
  uint64_t v20 = v18 + 1;
  if (!v19)
  {
    *(void *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = v20;
    return;
  }

  __break(1u);
LABEL_15:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
}

  uint64_t v24 = v31;
  uint64_t v25 = *v30;
  *(void *)(*v30 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  __n128 result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))( *(void *)(v25 + 48) + *(void *)(v7 + 72) * a2,  v24,  v6,  v8);
  __n128 v27 = *(void *)(v25 + 16);
  __n128 v28 = __OFADD__(v27, 1LL);
  Swift::String v29 = v27 + 1;
  if (!v28)
  {
    *(void *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = v29;
    return result;
  }

  __break(1u);
LABEL_15:
  __n128 result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

  uint64_t v24 = v31;
  uint64_t v25 = *v30;
  *(void *)(*v30 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  __n128 result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))( *(void *)(v25 + 48) + *(void *)(v7 + 72) * a2,  v24,  v6,  v8);
  __n128 v27 = *(void *)(v25 + 16);
  __n128 v28 = __OFADD__(v27, 1LL);
  Swift::String v29 = v27 + 1;
  if (!v28)
  {
    *(void *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = v29;
    return result;
  }

  __break(1u);
LABEL_15:
  __n128 result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

        uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22, a1);
        uint64_t v25 = v24;
LABEL_13:
        ++v22;
        id v26 = AvatarShowcaseLayoutConfiguration.width.getter(v24);
        __n128 v28 = AvatarShowcaseLayoutConfiguration.width.getter(v27);
        Swift::String v30 = Artwork.config(using:)(v29, v26, v28);
        Swift::String v31 = sub_10005D36C();
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2LL, 1LL, v33, v32, v31);
        uint64_t v21 = v32;

        swift_release(v25);
        swift_release(v30);

        a1 = v65;
        if (v64 == v22) {
          return;
        }
      }
    }

    goto LABEL_57;
  }

  OfferAlertAction.remoteControllerRequirement.getter(isUniquelyReferenced_nonNull_native);
  uint64_t v18 = type metadata accessor for ControllerRequirement(0LL);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48LL))(v5, 1LL, v18);
  uint64_t v20 = sub_100006060((uint64_t)v5, &qword_1002DFEA8);
  if (v19 == 1)
  {
    if ((OfferAlertAction.shouldPromptForConfirmation.getter(v20) & 1) == 0) {
      goto LABEL_14;
    }
  }

  else
  {
    uint64_t v22 = swift_allocObject(&unk_100283028, 32LL, 7LL);
    *(void *)(v22 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100061CF0;
    *(void *)(v22 + 24) = v0;
    swift_retain(v0);
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0) {
      uint64_t v7 = sub_10001A954(0LL, v7[2] + 1LL, 1, v7);
    }
    uint64_t v24 = v7[2];
    uint64_t v23 = v7[3];
    if (v24 >= v23 >> 1) {
      uint64_t v7 = sub_10001A954((void *)(v23 > 1), v24 + 1, 1, v7);
    }
    void v7[2] = v24 + 1;
    uint64_t v25 = &v7[2 * v24];
    v25[4] = sub_100061D30;
    v25[5] = v22;
    if ((((uint64_t (*)(void))OfferAlertAction.shouldPromptForConfirmation.getter)() & 1) == 0)
    {
LABEL_14:
      uint64_t v21 = OfferAlertAction.completionAction.getter();
      if (!v21) {
        goto LABEL_31;
      }
      goto LABEL_26;
    }
  }

  id v26 = swift_allocObject(&unk_100283000, 32LL, 7LL);
  *(void *)(v26 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100061CE4;
  *(void *)(v26 + 24) = v0;
  swift_retain(v0);
  if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0) {
    uint64_t v7 = sub_10001A954(0LL, v7[2] + 1LL, 1, v7);
  }
  __n128 v28 = v7[2];
  __n128 v27 = v7[3];
  if (v28 >= v27 >> 1) {
    uint64_t v7 = sub_10001A954((void *)(v27 > 1), v28 + 1, 1, v7);
  }
  void v7[2] = v28 + 1;
  Swift::String v29 = &v7[2 * v28];
  v29[4] = sub_100061CE8;
  v29[5] = v26;
  uint64_t v21 = OfferAlertAction.completionAction.getter();
  if (v21)
  {
LABEL_26:
    Swift::String v30 = v21;
    Swift::String v31 = swift_allocObject(&unk_100282FD8, 32LL, 7LL);
    *(void *)(v31 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
    *(void *)(v31 + 24) = v30;
    swift_retain(v1);
    swift_retain(v30);
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0) {
      uint64_t v7 = sub_10001A954(0LL, v7[2] + 1LL, 1, v7);
    }
    uint64_t v33 = v7[2];
    uint64_t v32 = v7[3];
    if (v33 >= v32 >> 1) {
      uint64_t v7 = sub_10001A954((void *)(v32 > 1), v33 + 1, 1, v7);
    }
    void v7[2] = v33 + 1;
    uint64_t v34 = &v7[2 * v33];
    void v34[4] = sub_100061CDC;
    v34[5] = v31;
    swift_release(v30);
  }

  uint64_t v22 = objc_allocWithZone(&OBJC_CLASS___UIInterpolatingMotionEffect);
  uint64_t v23 = String._bridgeToObjectiveC()();
  uint64_t v24 = [v22 initWithKeyPath:v23 type:0];

  uint64_t v25 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v24 setMinimumRelativeValue:v25];

  id v26 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v24 setMaximumRelativeValue:v26];

  __n128 v27 = v24;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  Swift::String v29 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  __n128 v28 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v29 >= v28 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1LL);
  }
  Swift::String v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
  specialized Array._endMutation()(v30);

  if ((v3 & 8) != 0)
  {
LABEL_15:
    Swift::String v31 = objc_allocWithZone(&OBJC_CLASS___UIInterpolatingMotionEffect);
    uint64_t v32 = String._bridgeToObjectiveC()();
    uint64_t v33 = [v31 initWithKeyPath:v32 type:1];

    uint64_t v34 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v33 setMinimumRelativeValue:v34];

    uint64_t v35 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v33 setMaximumRelativeValue:v35];

    __n128 v36 = v33;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
    uint64_t v38 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v37 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v38 >= v37 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1LL);
    }
    uint64_t v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
    specialized Array._endMutation()(v39);
  }

  sub_100006060((uint64_t)v15, &qword_1002E2528);
  return 0LL;
}

  sub_100006060((uint64_t)v15, &qword_1002E2528);
  sub_100046E64((uint64_t)v29, type metadata accessor for SearchSection);
  uint64_t v37 = v32;
  sub_1000A767C(v32, (uint64_t)v20);
  uint64_t v38 = v34(v20, 2LL, v33);
  if (!v38)
  {
    double v86 = v32;
    uint64_t v40 = v95;
    sub_1000A76C0((uint64_t)v20, (uint64_t)v95);
    type metadata accessor for PageRenderMetricsEvent(0LL);
    uint64_t v41 = v87;
    uint64_t v42 = Date.init()();
    uint64_t v43 = Date.timeIntervalSince1970.getter(v42);
    uint64_t v44 = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v41, v89);
    uint64_t v45 = static PageRenderMetricsEvent.lastInteractionTime.setter(v44, v43);
    static PageRenderEvent.willPerformAction()(v45);
    uint64_t v46 = v96;
    uint64_t v47 = *(void *)(v96 + OBJC_IVAR____TtC6Arcade36SearchResultsContainerViewController_objectGraph);
    uint64_t v48 = type metadata accessor for PageFacetsPresenter(0LL);
    swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
    uint64_t v49 = swift_retain(v47);
    uint64_t v50 = PageFacetsPresenter.init()(v49);
    __int128 v51 = *(void *)v40;
    __int128 v52 = *((void *)v40 + 1);
    uint64_t v53 = v90;
    __int128 v54 = v93;
    sub_10001027C((uint64_t)&v40[*(int *)(v90 + 20)], v93, &qword_1002E2400);
    uint64_t v55 = v94;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v94, &v40[*(int *)(v53 + 24)], v92);
    __n128 v56 = type metadata accessor for SearchResultsDiffablePagePresenter(0LL);
    swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
    swift_bridgeObjectRetain(v52);
    uint64_t v57 = SearchResultsDiffablePagePresenter.init(objectGraph:guidedSearchPresenter:facetsPresenter:sponsoredSearchSessionManager:term:searchEntity:origin:source:isNetworkConstrained:spellCheckEnabled:excludedTerms:originatingTerm:guidedSearchTokens:guidedSearchOptimizationTerm:appStateController:impressionsAppendixDataProvider:)( v47,  0LL,  v50,  0LL,  0LL,  v51,  v52,  v54,  v55,  0LL,  0LL,  0,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL);
    unsigned int v58 = sub_100003B6C( &qword_1002E2550,  (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_retain(v57);
    id v59 = sub_10015F498(v47, v57, v58, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000011LL, 0x8000000100247CB0LL);
    *((void *)v60 + 1) = 0LL;
    swift_unknownObjectWeakInit(v60, 0LL);
    __int128 v61 = sub_1001EDCC0(v57, v59);
    uint64_t v62 = v46 + OBJC_IVAR____TtC6Arcade36SearchResultsContainerViewController_searchResultsDelegate;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v46 + OBJC_IVAR____TtC6Arcade36SearchResultsContainerViewController_searchResultsDelegate);
    uint64_t v64 = &v61[qword_1002EF6B8];
    *((void *)v64 + 1) = *(void *)(v62 + 8);
    swift_unknownObjectWeakAssign(v64, Strong);
    swift_unknownObjectRelease(Strong);
    uint64_t v65 = qword_1002DCFE0;
    uint64_t v66 = v61;
    if (v65 != -1) {
      swift_once(&qword_1002DCFE0, sub_100176A04);
    }
    uint64_t v67 = &v66[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_gradientMaskLengths];
    id v68 = *(_OWORD *)&qword_1002F1378;
    *(_OWORD *)uint64_t v67 = xmmword_1002F1368;
    *((_OWORD *)v67 + 1) = v68;
    uint64_t v69 = [v66 collectionView];
    uint64_t v37 = v86;
    if (v69)
    {
      uint64_t v70 = v69;
      [v69 _gradientMaskLengths];
      if (v74 != *(double *)v67
        || v71 != *((double *)v67 + 1)
        || v72 != *((double *)v67 + 2)
        || v73 != *((double *)v67 + 3))
      {
        objc_msgSend(v70, "_setGradientMaskLengths:");
      }
    }

    sub_1000A7ECC(v66);
    swift_release(v57);

    sub_100046E64((uint64_t)v40, type metadata accessor for SearchSection.ResultsMetadata);
    goto LABEL_31;
  }

  uint64_t v39 = v96;
  if (v38 == 1)
  {
    sub_1000A7ECC(0LL);
  }

  else
  {
    uint64_t v75 = *(void **)(v96 + OBJC_IVAR____TtC6Arcade36SearchResultsContainerViewController_searchTrendingAppsViewController);
    double v76 = v75;
    sub_1000A7ECC(v75);

    uint64_t v77 = (void *)swift_unknownObjectWeakLoadStrong(v39 + OBJC_IVAR____TtC6Arcade36SearchResultsContainerViewController_searchResultsDelegate);
    if (v77)
    {
      double v78 = v77;
      uint64_t v79 = [v77 searchController];
      double v80 = [v79 searchBar];

      uint64_t v81 = [v80 searchField];
      if (v81)
      {
        uint64_t v82 = [v81 rightView];

        if (v82)
        {
          uint64_t v83 = objc_opt_self(&OBJC_CLASS___UIActivityIndicatorView);
          if (!swift_dynamicCastObjCClass(v82, v83))
          {
            swift_unknownObjectRelease(v78);

            goto LABEL_31;
          }

          sub_10014C84C(0LL);
        }
      }

      swift_unknownObjectRelease(v78);
    }
  }

          uint64_t v32 = sub_1000031E8(&qword_1002ECC00);
          uint64_t v33 = *(unsigned __int8 *)(v45 + 80);
          uint64_t v34 = (v33 + 32) & ~v33;
          uint64_t v35 = swift_allocObject(v32, v34 + *(void *)(v45 + 72), v33 | 7);
          *(_OWORD *)(v35 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
          v40((char *)(v35 + v34), v47, v46);
          __n128 v36 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v31, "reloadItemsAtIndexPaths:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

          uint64_t v20 = v36;
          goto LABEL_13;
        }
      }

      else
      {
        Swift::String v31 = v41;
        if ((v29 & 2) == 0) {
          goto LABEL_11;
        }
      }

      uint64_t v37 = (void *)IndexPath._bridgeToObjectiveC()();
      [v31 deselectItemAtIndexPath:v37 animated:1];

      if ((v30 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    a4 = v41;
  }

  dispatch thunk of ShelfPresenter.didSelectItem(at:)(a2, *(void *)(v9 + 80), *(void *)(v9 + 96));
  uint64_t v47 = (id)IndexPath._bridgeToObjectiveC()();
  [a4 deselectItemAtIndexPath:v47 animated:1];
}

          uint64_t v37 = sub_1000031E8(&qword_1002ECC00);
          uint64_t v38 = *(unsigned __int8 *)(v51 + 80);
          uint64_t v39 = (v38 + 32) & ~v38;
          uint64_t v40 = swift_allocObject(v37, v39 + *(void *)(v51 + 72), v38 | 7);
          *(_OWORD *)(v40 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
          v46((char *)(v40 + v39), v29, v52);
          uint64_t v41 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v36, "reloadItemsAtIndexPaths:", v41, swift_bridgeObjectRelease(v40).n128_f64[0]);

          uint64_t v18 = v41;
          goto LABEL_13;
        }
      }

      else
      {
        __n128 v36 = v47;
        if ((v34 & 2) == 0) {
          goto LABEL_11;
        }
      }

      uint64_t v44 = (void *)IndexPath._bridgeToObjectiveC()();
      [v36 deselectItemAtIndexPath:v44 animated:1];

      if ((v35 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    a4 = v47;
  }

  uint64_t v42 = type metadata accessor for ProductPresenter(0LL, v19);
  uint64_t v43 = sub_100003B6C( (unint64_t *)&unk_1002EA010,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductPresenter,  (uint64_t)&protocol conformance descriptor for ProductPresenter);
  dispatch thunk of ShelfPresenter.didSelectItem(at:)(v53, v42, v43);
  uint64_t v53 = (id)IndexPath._bridgeToObjectiveC()();
  [a4 deselectItemAtIndexPath:v53 animated:1];
}

void sub_100019950(unsigned __int8 a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(char **)&v2[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_mediaView];
  if (((a1 - 1) & 0xFE) != 0) {
    uint64_t v7 = -1LL;
  }
  else {
    uint64_t v7 = 12LL;
  }
  uint64_t v8 = OBJC_IVAR____TtC6Arcade15LockupMediaView_roundedCorners;
  *(void *)&v6[OBJC_IVAR____TtC6Arcade15LockupMediaView_roundedCorners] = v7;
  ArtworkView.roundedCorners.setter();
  uint64_t v9 = *(void *)&v6[OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer];
  *(void *)(v9 + OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners) = *(void *)&v6[v8];
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  sub_1001B1E00(Strong);

  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t inited = swift_initStackObject(v11, v18);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339A0;
  *(void *)(inited + 32) = v6;
  uint64_t v13 = *(void **)(*(void *)&v3[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_lockupView]
                 + OBJC_IVAR____TtC6Arcade15SmallLockupView_artworkView);
  *(void *)(inited + 40) = v13;
  uint64_t v17 = inited;
  specialized Array._endMutation()(inited);
  uint64_t v14 = v6;
  id v15 = v13;
  sub_100176A74(a1, v17);
  *(void *)&double v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v3, "setNeedsLayout", v16);
    [v3 layoutIfNeeded];
  }

void sub_100019AA4(char a1, void *a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_mediaView);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC6Arcade15LockupMediaView_state) = a1;
  if (a1)
  {
    if (a1 == 1) {
      sub_1000AE9DC();
    }
  }

  else
  {
    uint64_t v6 = OBJC_IVAR____TtC6Arcade15LockupMediaView_animationTimer;
    uint64_t v7 = *(void **)(v5 + OBJC_IVAR____TtC6Arcade15LockupMediaView_animationTimer);
    if (v7)
    {
      [v7 invalidate];
      uint64_t v8 = *(void **)(v5 + v6);
    }

    else
    {
      uint64_t v8 = 0LL;
    }

    *(void *)(v5 + v6) = 0LL;
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v5 + OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer)
           + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    id v10 = (id)Strong;
    sub_100128F18(a1, a2);
  }

uint64_t sub_100019B8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShelfLayoutContext.traitEnvironment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100019BB4()
{
  return ShelfLayoutContext.contentPageGrid.getter();
}

uint64_t sub_100019BD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShelfLayoutContext.traitCollection.getter();
  *a1 = result;
  return result;
}

id sub_100019C0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppSearchResultContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppSearchResultContentView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade26AppSearchResultContentView);
}

id sub_100019CA4(char a1)
{
  v1[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_state] = a1;
  return [v1 setNeedsLayout];
}

void sub_100019CC0()
{
  id v1 = objc_retain(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_lockupView)
                         + OBJC_IVAR____TtC6Arcade15SmallLockupView_artworkView));
  ArtworkView.image.setter(0LL);

  sub_1000AD50C();
}

void sub_100019D24()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_lockupView);
  uint64_t v2 = OBJC_IVAR____TtC6Arcade15SmallLockupView_artworkView;
  id v3 = *(id *)(v1 + OBJC_IVAR____TtC6Arcade15SmallLockupView_artworkView);
  v9.value.super.Class isa = 0LL;
  v9.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v9, v4);

  uint64_t v5 = *(void **)(v1 + v2);
  uint64_t v6 = type metadata accessor for ArtworkView(0LL);
  uint64_t v7 = sub_100009CA4( (unint64_t *)&qword_1002DE5E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  id v8 = v5;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v8, 1LL, v6, v7);
}

uint64_t sub_100019DF4()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*(void *)(*v0 + OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_mediaView)
                     + OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer)
         + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
}

id sub_100019E28()
{
  return objc_retain(*(id *)(*(void *)(*v0 + OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_mediaView)
                           + OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer));
}

uint64_t sub_100019E50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ComponentPrefetchSizing(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(a1, 1LL, 1LL, v2);
}

uint64_t sub_100019E8C(uint64_t a1, uint64_t a2)
{
  return sub_100009CA4( &qword_1002DE5C8,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for AppSearchResultContentView,  (uint64_t)&unk_100233FEC);
}

uint64_t sub_100019EB8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_100009CA4( &qword_1002DE5D0,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for AppSearchResultContentView,  (uint64_t)&unk_100234008);
  uint64_t result = sub_100009CA4( &qword_1002DE5D8,  v3,  (uint64_t (*)(uint64_t))type metadata accessor for AppSearchResultContentView,  (uint64_t)&unk_100234040);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  return result;
}

size_t sub_100019F14(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10001A7E0( a1,  a2,  a3,  a4,  &qword_1002DE660,  (uint64_t (*)(void))&type metadata accessor for Dependency);
}

size_t sub_100019F28(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10001A7E0( a1,  a2,  a3,  a4,  (uint64_t *)&unk_1002E4D00,  (uint64_t (*)(void))&type metadata accessor for _VerticalFlowLayout.Child);
}

void *sub_100019F3C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10001A960(a1, a2, a3, a4, &qword_1002DE710);
}

char *sub_100019F48(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE678);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  id v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8]) {
      memmove(v14, v15, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for String);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10001A048(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002E9FE0);
    uint64_t v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  id v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8]) {
      memmove(v14, v15, 8 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v14, v15, 8 * v8);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10001A140(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE720);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  id v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8]) {
      memmove(v14, v15, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v14, v15, 16 * v8);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_10001A238(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10001A7E0( a1,  a2,  a3,  a4,  (uint64_t *)&unk_1002DE690,  (uint64_t (*)(void))&type metadata accessor for TitleHeaderLayout.Child);
}

char *sub_10001A24C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE640);
    uint64_t v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v8]) {
      memmove(v13, v14, 24 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v13, v14, v8, &type metadata for ProductMediaCollectionView.Media);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_10001A360(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10001A7E0( a1,  a2,  a3,  a4,  &qword_1002ECC00,  (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

void *sub_10001A374(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10001ACC8(a1, a2, a3, a4, (uint64_t *)&unk_1002DE630, (uint64_t *)&unk_1002E27E0);
}

char *sub_10001A388(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE648);
    uint64_t v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  id v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8]) {
      memmove(v14, v15, 8 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v14, v15, 8 * v8);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

void *sub_10001A480(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE618);
    uint64_t v11 = (void *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v11 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    uint64_t v15 = sub_1000031E8((uint64_t *)&unk_1002DE620);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v15);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

void *sub_10001A5A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE738);
    uint64_t v11 = (void *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v11 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    uint64_t v15 = sub_1000031E8(&qword_1002DE740);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v15);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_10001A6C0(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10001A7E0( a1,  a2,  a3,  a4,  &qword_1002DE6F0,  (uint64_t (*)(void))&type metadata accessor for ItemLayoutContext);
}

char *sub_10001A6D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE650);
    uint64_t v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8]) {
      memmove(v14, v15, 32 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v14, v15, 32 * v8);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_10001A7CC(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10001A7E0( a1,  a2,  a3,  a4,  &qword_1002DE680,  (uint64_t (*)(void))&type metadata accessor for VerticalFlowLayout.Child);
}

size_t sub_10001A7E0( size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if ((a3 & 1) != 0)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000LL < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }

      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v10 = a2;
  }

  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v13 = sub_1000031E8(a5);
  uint64_t v14 = *(void *)(a6(0LL) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v18 = (void *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  uint64_t result = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (result - v17 == 0x8000000000000000LL && v15 == -1) {
    goto LABEL_29;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(result - v17) / v15);
LABEL_19:
  uint64_t v20 = a6(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (char *)v18 + v22;
  uint64_t v24 = (char *)a4 + v22;
  if ((v8 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(void *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23, v24, v11, v20);
    }

    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }

    a4[2] = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v23, v24, v11, v20);
  }

  swift_bridgeObjectRelease(a4);
  return (size_t)v18;
}

void *sub_10001A954(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10001A960(a1, a2, a3, a4, &qword_1002DE748);
}

void *sub_10001A960(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v7 = a4[3];
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v8 = a2;
  }

  uint64_t v9 = a4[2];
  if (v8 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    uint64_t v11 = sub_1000031E8(a5);
    uint64_t v12 = (void *)swift_allocObject(v11, 16 * v10 + 32, 7LL);
    int64_t v13 = j__malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 - 17;
    }
    _OWORD v12[2] = v9;
    v12[3] = 2 * (v14 >> 4);
  }

  else
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
  }

  if ((v6 & 1) != 0)
  {
    if (v12 != a4 || v12 + 4 >= &a4[2 * v9 + 4]) {
      memmove(v12 + 4, a4 + 4, 16 * v9);
    }
    a4[2] = 0LL;
  }

  else
  {
    uint64_t v16 = sub_1000031E8(&qword_1002DE718);
    swift_arrayInitWithCopy(v12 + 4, a4 + 4, v9, v16);
  }

  swift_bridgeObjectRelease(a4);
  return v12;
}

void *sub_10001AA7C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE728);
    uint64_t v11 = (void *)swift_allocObject(v10, 8 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4]) {
      memmove(v11 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    uint64_t v15 = sub_1000031E8(&qword_1002DE730);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v15);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10001AB9C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE708);
    uint64_t v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v8]) {
      memmove(v13, v14, 24 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v13, v14, v8, &type metadata for DebugActionsGroup);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

void *sub_10001ACB4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10001ACC8(a1, a2, a3, a4, &qword_1002DE6F8, &qword_1002DE700);
}

void *sub_10001ACC8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v10 = a2;
  }

  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    uint64_t v13 = sub_1000031E8(a5);
    uint64_t v14 = (void *)swift_allocObject(v13, 40 * v12 + 32, 7LL);
    size_t v15 = j__malloc_size(v14);
    void v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }

  else
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
  }

  if ((v8 & 1) != 0)
  {
    if (v14 != a4 || v14 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v14 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0LL;
  }

  else
  {
    uint64_t v17 = sub_1000031E8(a6);
    swift_arrayInitWithCopy(v14 + 4, a4 + 4, v11, v17);
  }

  swift_bridgeObjectRelease(a4);
  return v14;
}

void *sub_10001AE00(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE668);
    uint64_t v11 = (void *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  unint64_t v14 = (unint64_t)(v11 + 4);
  size_t v15 = a4 + 4;
  if ((v5 & 1) != 0)
  {
    if (v11 < a4 || v14 >= (unint64_t)&v15[2 * v8])
    {
      swift_arrayInitWithTakeFrontToBack( v14,  v15,  v8,  &type metadata for AttentionAwarenessTracker.AwarenessMonitorContainer);
    }

    else if (v11 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v14);
    }

    a4[2] = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for AttentionAwarenessTracker.AwarenessMonitorContainer);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_10001AF24(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    size_t v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_1000031E8(&qword_1002DE6C0);
  uint64_t v11 = *(void *)(sub_1000031E8(&qword_1002DE6C8) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  size_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  uint64_t result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (result - v14 == 0x8000000000000000LL && v12 == -1) {
    goto LABEL_29;
  }
  _OWORD v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  uint64_t v17 = sub_1000031E8(&qword_1002DE6C8);
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = (char *)v15 + v19;
  uint64_t v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(void *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }

    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v20);
    }

    a4[2] = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v20, v21, v8, v17);
  }

  swift_bridgeObjectRelease(a4);
  return (size_t)v15;
}

void *sub_10001B0A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE670);
    uint64_t v11 = (void *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  unint64_t v14 = (unint64_t)(v11 + 4);
  size_t v15 = a4 + 4;
  if ((v5 & 1) != 0)
  {
    if (v11 < a4 || v14 >= (unint64_t)&v15[2 * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v14, v15, v8, &type metadata for OfferButton.TargetAction);
    }

    else if (v11 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v14);
    }

    a4[2] = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for OfferButton.TargetAction);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t sub_10001B1C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = static Hasher._hash(seed:_:)(*(void *)(v6 + 40), a2);
  uint64_t v8 = -1LL << *(_BYTE *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v15 = *v3;
    void *v3 = 0x8000000000000000LL;
    sub_10001CC08(a2, v9, isUniquelyReferenced_nonNull_native);
    uint64_t v14 = *v3;
    void *v3 = v15;
    swift_bridgeObjectRelease(v14);
    uint64_t result = 1LL;
    goto LABEL_8;
  }

  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }

    while (*(void *)(v10 + 8 * v9) != a2);
  }

  uint64_t result = 0LL;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_10001B2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  Swift::Int v7 = *(void *)(*v2 + 40LL);
  swift_bridgeObjectRetain(v6);
  Swift::Int v8 = AnyHashable._rawHashValue(seed:)(v7);
  uint64_t v9 = -1LL << *(_BYTE *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      sub_10001F054(*(void *)(v6 + 48) + 40 * v10, (uint64_t)v18);
      char v12 = static AnyHashable.== infix(_:_:)(v18, a2);
      sub_1000087D8((uint64_t)v18);
      if ((v12 & 1) != 0) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0) {
        goto LABEL_5;
      }
    }

    swift_bridgeObjectRelease(v6);
    sub_1000087D8(a2);
    sub_10001F054(*(void *)(*v3 + 48LL) + 40 * v10, a1);
    return 0LL;
  }

  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v6);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    sub_10001F054(a2, (uint64_t)v18);
    uint64_t v17 = *v3;
    void *v3 = 0x8000000000000000LL;
    sub_10001CD28((uint64_t)v18, v10, isUniquelyReferenced_nonNull_native);
    uint64_t v14 = *v3;
    void *v3 = v17;
    swift_bridgeObjectRelease(v14);
    __int128 v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v15;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return 1LL;
  }

uint64_t sub_10001B434(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)(v24);
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1LL << *(_BYTE *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
  {
    uint64_t v11 = *(void *)(v7 + 48);
    char v12 = (void *)(v11 + 16 * v10);
    uint64_t v13 = v12[1];
    BOOL v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0LL) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      __int128 v15 = (uint64_t *)(*(void *)(*v3 + 48LL) + 16 * v10);
      uint64_t v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0LL;
    }

    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v19 = (void *)(v11 + 16 * v10);
      uint64_t v20 = v19[1];
      BOOL v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0LL) & 1) != 0) {
        goto LABEL_7;
      }
    }
  }

  swift_bridgeObjectRelease(v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  void *v3 = 0x8000000000000000LL;
  swift_bridgeObjectRetain(a3);
  sub_10001CE90(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t v23 = *v3;
  void *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1LL;
}

uint64_t sub_10001B5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for AdamId(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *v3;
  uint64_t v11 = *(void *)(*v3 + 40LL);
  uint64_t v13 = sub_100009CA4(&qword_1002DE6A8, 255LL, v12, (uint64_t)&protocol conformance descriptor for AdamId);
  swift_bridgeObjectRetain(v10);
  uint64_t v37 = a2;
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  uint64_t v15 = -1LL << *(_BYTE *)(v10 + 32);
  unint64_t v16 = v14 & ~v15;
  uint64_t v17 = v10;
  uint64_t v18 = v10 + 56;
  if (((*(void *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) != 0)
  {
    uint64_t v33 = v3;
    uint64_t v34 = a1;
    uint64_t v35 = ~v15;
    uint64_t v36 = v7;
    uint64_t v19 = *(void *)(v7 + 72);
    uint64_t v20 = *(void (**)(void, void, void))(v7 + 16);
    while (1)
    {
      uint64_t v21 = v17;
      unint64_t v22 = v20;
      v20(v9, *(void *)(v17 + 48) + v19 * v16, v6);
      uint64_t v23 = sub_100009CA4( &qword_1002DE6B0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  (uint64_t)&protocol conformance descriptor for AdamId);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      uint64_t v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v35;
      uint64_t v17 = v21;
      uint64_t v20 = v22;
      if (((*(void *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        uint64_t v3 = v33;
        a1 = v34;
        uint64_t v26 = v36;
        goto LABEL_7;
      }
    }

    __n128 v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(void *)(*v33 + 48LL) + v19 * v16, v6);
    return 0LL;
  }

  else
  {
    swift_bridgeObjectRelease(v10);
    uint64_t v20 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v26 = v7;
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v28 = v37;
    v20(v9, v37, v6);
    uint64_t v38 = *v3;
    void *v3 = 0x8000000000000000LL;
    sub_10001D028((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    uint64_t v29 = *v3;
    void *v3 = v38;
    __n128 v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1LL;
  }

uint64_t sub_10001B844(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001LL) == 0)
  {
    Hasher.init(_seed:)(v31);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong)
    {
      uint64_t v14 = (void *)Strong;
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v6);
      id v15 = v14;
      NSObject.hash(into:)(v31);
    }

    else
    {
      Hasher._combine(_:)(0);
      swift_bridgeObjectRetain(v6);
    }

    Swift::Int v19 = Hasher._finalize()();
    uint64_t v20 = -1LL << *(_BYTE *)(v6 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v6 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v21) & 1) == 0)
    {
LABEL_22:
      swift_bridgeObjectRelease(v6);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v31[0] = *v3;
      uint64_t *v3 = 0x8000000000000000LL;
      swift_retain(a2);
      sub_10001D274(v28, v21, isUniquelyReferenced_nonNull_native);
      uint64_t v29 = *v3;
      uint64_t *v3 = v31[0];
      goto LABEL_25;
    }

    uint64_t v22 = ~v20;
    while (1)
    {
      uint64_t v23 = (void *)swift_unknownObjectWeakLoadStrong(*(void *)(*(void *)(v6 + 48) + 8 * v21) + 16LL);
      uint64_t v24 = swift_unknownObjectWeakLoadStrong(a2 + 16);
      uint64_t v25 = (void *)v24;
      if (!v23) {
        break;
      }
      if (!v24) {
        goto LABEL_16;
      }

      if (v23 == v25)
      {
LABEL_21:
        swift_release(a2);
        swift_bridgeObjectRelease(v6);
        uint64_t v26 = *(void *)(*(void *)(*v3 + 48) + 8 * v21);
        *a1 = v26;
        swift_retain(v26);
        return 0LL;
      }

LABEL_17:
      unint64_t v21 = (v21 + 1) & v22;
      if (((*(void *)(v6 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v21) & 1) == 0) {
        goto LABEL_22;
      }
    }

    if (!v24) {
      goto LABEL_21;
    }
LABEL_16:

    goto LABEL_17;
  }

  if (v6 < 0) {
    uint64_t v7 = *v2;
  }
  else {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v2);
  __n128 v8 = swift_retain(a2);
  uint64_t v9 = __CocoaSet.member(for:)(v8);
  __n128 v10 = swift_release(a2);
  if (v9)
  {
    swift_bridgeObjectRelease(v6);
    swift_release(a2);
    uint64_t v32 = v9;
    uint64_t v11 = type metadata accessor for FocusAvoidanceCollectionElementsObserver.FocusAvoidingContainer();
    swift_unknownObjectRetain(v9);
    swift_dynamicCast(v31, &v32, (char *)&type metadata for Swift.AnyObject + 8, v11, 7LL);
    *a1 = v31[0];
    swift_unknownObjectRelease(v9);
    return 0LL;
  }

  uint64_t result = __CocoaSet.count.getter(v7, v10);
  if (__OFADD__(result, 1LL))
  {
    __break(1u);
    return result;
  }

  Swift::Int v16 = sub_1000294A0(v7, result + 1);
  v31[0] = v16;
  unint64_t v17 = *(void *)(v16 + 16);
  if (*(void *)(v16 + 24) <= v17)
  {
    uint64_t v30 = v17 + 1;
    swift_retain(a2);
    sub_10001C5A0(v30);
    uint64_t v18 = v31[0];
  }

  else
  {
    uint64_t v18 = v16;
    swift_retain(a2);
  }

  sub_1000296D4(a2, v18);
  uint64_t v29 = *v3;
  uint64_t *v3 = v18;
LABEL_25:
  swift_bridgeObjectRelease(v29);
  *a1 = a2;
  return 1LL;
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 2;
  __n128 v8 = v6 - 2;
  if (!v7) {
    __n128 v8 = -1;
  }
  return (v8 + 1);
}

  uint64_t v6 = *a1;
  if (v6 >= 2) {
    uint64_t v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    uint64_t v7 = -2;
  }
  if (v7 < 0) {
    uint64_t v7 = -1;
  }
  return (v7 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 3;
  __n128 v8 = v6 - 3;
  if (!v7) {
    __n128 v8 = -1;
  }
  return (v8 + 1);
}

    __break(1u);
    goto LABEL_18;
  }

  if (v19 + 0x4000000000000000LL < 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }

  uint64_t v26 = 2 * v19;
  v9(v7, v8, v4);
  v11(v34, v4, v10);
  uint64_t result = (id)((uint64_t (*)(_BYTE *, uint64_t))v12)(v7, v4);
  __n128 v27 = v26 * v35;
  if ((unsigned __int128)(v26 * (__int128)v35) >> 64 != (v26 * v35) >> 63)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  uint64_t v23 = v18 + v27;
  if (!__OFADD__(v18, v27))
  {
    uint64_t v24 = *v2;
    uint64_t v25 = swift_isaMask;
    goto LABEL_13;
  }

              __break(1u);
              goto LABEL_18;
            }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return;
  }

  if (!Strong) {
    goto LABEL_9;
  }
  uint64_t v11 = [Strong searchController];
  char v12 = [v11 searchBar];

  uint64_t v13 = [v12 searchField];
  if (!v13) {
    goto LABEL_7;
  }
  uint64_t v14 = [v13 rightView];

  if (!v14) {
    goto LABEL_7;
  }
  id v15 = objc_opt_self(&OBJC_CLASS___UIActivityIndicatorView);
  if (!swift_dynamicCastObjCClass(v14, v15))
  {

LABEL_7:
    uint64_t v14 = [objc_allocWithZone(UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
    sub_10014C84C(v14);
  }

  swift_unknownObjectRelease(v10);

LABEL_9:
  Swift::Int v16 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
  unint64_t v17 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
  uint64_t v18 = v17;
  static ViewControllerContainment.remove(_:)(v17);

  Swift::Int v19 = *(void **)&v2[v16];
  *(void *)&v2[v16] = 0LL;

  uint64_t v20 = *(void **)&v2[v16];
  unint64_t v21 = v20;
  uint64_t v22 = [v2 view];
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = [v22 safeAreaLayoutGuide];

    [v24 layoutFrame];
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    uint64_t v32 = v31;

    v39[0] = v26;
    v39[1] = v28;
    v39[2] = v30;
    v39[3] = v32;
    uint64_t v40 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v20, v2, v39);
  }

  else
  {
    __break(1u);
  }

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 2;
  __n128 v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    __n128 v8 = -1;
  }
  return (v8 + 1);
}

        uint64_t v20 = (void *)(*(uint64_t (**)(__n128))(v16 + 40))(v17);
        unint64_t v21 = *(void **)(v16 + 56);
        *(void *)(v16 + 56) = v20;
        Swift::Int v19 = v20;

        uint64_t v18 = 0LL;
        goto LABEL_18;
      }

      __break(1u);
      goto LABEL_27;
    }

    swift_bridgeObjectRetain(*(void *)&v3[OBJC_IVAR____TtC6Arcade23SegmentedViewController_segments]);
    Swift::Int v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v15);
    unint64_t v17 = swift_bridgeObjectRelease(v15);
    uint64_t v18 = *(void **)(v16 + 56);
    if (v18) {
      goto LABEL_15;
    }
    goto LABEL_17;
  }

  uint64_t v7 = v6;
  __n128 v8 = [v7 parentViewController];
  if (!v8) {
    goto LABEL_9;
  }
  uint64_t v9 = v8;
  sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
  __n128 v10 = v3;
  uint64_t v11 = v9;
  LOBYTE(v9) = static NSObject.== infix(_:_:)(v11, v10);

  if ((v9 & 1) == 0)
  {
LABEL_9:
    uint64_t v14 = *(void **)&v3[v5];
    *(void *)&v3[v5] = 0LL;

    goto LABEL_10;
  }

  if (![v7 isViewLoaded])
  {
LABEL_8:
    [v7 willMoveToParentViewController:0];
    [v7 removeFromParentViewController];
    goto LABEL_9;
  }

  char v12 = [v7 view];
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 removeFromSuperview];

    goto LABEL_8;
  }

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 5;
  __n128 v8 = v6 - 5;
  if (!v7) {
    __n128 v8 = -1;
  }
  return (v8 + 1);
}

  uint64_t v20 = dispatch thunk of BaseGenericPagePresenter.pageTitle.getter(v5);
  unint64_t v21 = (uint64_t *)&v2[qword_1002F0BE0];
  unint64_t v17 = *(void *)&v2[qword_1002F0BE0 + 8];
  *unint64_t v21 = v20;
  v21[1] = v22;
LABEL_18:
  uint64_t v23 = objc_msgSend(v2, "collectionView", swift_bridgeObjectRelease(v17).n128_f64[0]);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = [v23 panGestureRecognizer];

    if ((a1 & 0x10) != 0)
    {
      __n128 v27 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
      uint64_t v26 = (void *)swift_allocObject(v27, 40LL, 7LL);
      *((_OWORD *)v26 + 1) = xmmword_100233570;
      uint64_t v28 = [objc_allocWithZone(NSNumber) initWithInteger:1];
      v26[4] = v28;
      specialized Array._endMutation()(v28);
    }

    else
    {
      uint64_t v26 = _swiftEmptyArrayStorage;
    }

    sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v25, "setAllowedTouchTypes:", isa, swift_bridgeObjectRelease(v26).n128_f64[0]);
  }

    __break(1u);
    goto LABEL_18;
  }

  (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
  swift_release(*v11);
  uint64_t v13 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
  id v15 = v14;
  static ViewControllerContainment.remove(_:)(v14);

  Swift::Int v16 = *(void **)&v2[v13];
  *(void *)&v2[v13] = 0LL;

  unint64_t v17 = *(void **)&v2[v13];
  uint64_t v18 = v17;
  Swift::Int v19 = [v2 view];
  if (!v19)
  {
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v20 = v19;
  [v19 bounds];
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;

  CGRect v98 = v22;
  CGRect v99 = v24;
  CGRect v100 = v26;
  CGRect v101 = v28;
  CGRect v102 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v17, v2, &v98);

  uint64_t v30 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v29);
  if (v30)
  {
    Swift::String v31 = v30;
    PendingPageRender.isLayoutPending.setter(1LL);
    swift_release(v31);
  }

  uint64_t v32 = &v2[qword_1002E1C28];
  swift_beginAccess(&v2[qword_1002E1C28], v97, 0LL, 0LL);
  uint64_t v33 = *(void *)v32;
  if (*(void *)v32)
  {
    uint64_t v34 = swift_allocObject(&unk_10028BCD8, 24LL, 7LL);
    swift_unknownObjectWeakInit(v34 + 16, v2);
    uint64_t v35 = (void (**)(uint64_t))(v33
                                        + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v36 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v37 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver + 8);
    *uint64_t v35 = sub_10017E62C;
    v35[1] = (void (*)(uint64_t))v34;
    sub_10000D3D8(v36, v37);
  }

    __break(1u);
    goto LABEL_18;
  }

  (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
  swift_release(*v11);
  uint64_t v13 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
  id v15 = v14;
  static ViewControllerContainment.remove(_:)(v14);

  Swift::Int v16 = *(void **)&v2[v13];
  *(void *)&v2[v13] = 0LL;

  unint64_t v17 = *(void **)&v2[v13];
  uint64_t v18 = v17;
  Swift::Int v19 = [v2 view];
  if (!v19)
  {
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v20 = v19;
  [v19 bounds];
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;

  CGRect v98 = v22;
  CGRect v99 = v24;
  CGRect v100 = v26;
  CGRect v101 = v28;
  CGRect v102 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v17, v2, &v98);

  uint64_t v30 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v29);
  if (v30)
  {
    Swift::String v31 = v30;
    PendingPageRender.isLayoutPending.setter(1LL);
    swift_release(v31);
  }

  uint64_t v32 = &v2[qword_1002E1C28];
  swift_beginAccess(&v2[qword_1002E1C28], v97, 0LL, 0LL);
  uint64_t v33 = *(void *)v32;
  if (*(void *)v32)
  {
    uint64_t v34 = swift_allocObject(&unk_10028BC88, 24LL, 7LL);
    swift_unknownObjectWeakInit(v34 + 16, v2);
    uint64_t v35 = (void (**)(uint64_t))(v33
                                        + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v36 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v37 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver + 8);
    *uint64_t v35 = sub_10017E5CC;
    v35[1] = (void (*)(uint64_t))v34;
    sub_10000D3D8(v36, v37);
  }

    __break(1u);
    goto LABEL_18;
  }

  (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
  swift_release(*v11);
  uint64_t v13 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
  id v15 = v14;
  static ViewControllerContainment.remove(_:)(v14);

  Swift::Int v16 = *(void **)&v2[v13];
  *(void *)&v2[v13] = 0LL;

  unint64_t v17 = *(void **)&v2[v13];
  uint64_t v18 = v17;
  Swift::Int v19 = [v2 view];
  if (!v19)
  {
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v20 = v19;
  [v19 bounds];
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;

  CGRect v98 = v22;
  CGRect v99 = v24;
  CGRect v100 = v26;
  CGRect v101 = v28;
  CGRect v102 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v17, v2, &v98);

  uint64_t v30 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v29);
  if (v30)
  {
    Swift::String v31 = v30;
    PendingPageRender.isLayoutPending.setter(1LL);
    swift_release(v31);
  }

  uint64_t v32 = &v2[qword_1002E1C28];
  swift_beginAccess(&v2[qword_1002E1C28], v97, 0LL, 0LL);
  uint64_t v33 = *(void *)v32;
  if (*(void *)v32)
  {
    uint64_t v34 = swift_allocObject(&unk_10028BC10, 24LL, 7LL);
    swift_unknownObjectWeakInit(v34 + 16, v2);
    uint64_t v35 = (void (**)(uint64_t))(v33
                                        + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v36 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v37 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver + 8);
    *uint64_t v35 = sub_10017E4B4;
    v35[1] = (void (*)(uint64_t))v34;
    sub_10000D3D8(v36, v37);
  }

    __break(1u);
    goto LABEL_18;
  }

  (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
  swift_release(*v11);
  uint64_t v13 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
  id v15 = v14;
  static ViewControllerContainment.remove(_:)(v14);

  Swift::Int v16 = *(void **)&v2[v13];
  *(void *)&v2[v13] = 0LL;

  unint64_t v17 = *(void **)&v2[v13];
  uint64_t v18 = v17;
  Swift::Int v19 = [v2 view];
  if (!v19)
  {
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v20 = v19;
  [v19 bounds];
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;

  CGRect v98 = v22;
  CGRect v99 = v24;
  CGRect v100 = v26;
  CGRect v101 = v28;
  CGRect v102 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v17, v2, &v98);

  uint64_t v30 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v29);
  if (v30)
  {
    Swift::String v31 = v30;
    PendingPageRender.isLayoutPending.setter(1LL);
    swift_release(v31);
  }

  uint64_t v32 = &v2[qword_1002E1C28];
  swift_beginAccess(&v2[qword_1002E1C28], v97, 0LL, 0LL);
  uint64_t v33 = *(void *)v32;
  if (*(void *)v32)
  {
    uint64_t v34 = swift_allocObject(&unk_10028BC60, 24LL, 7LL);
    swift_unknownObjectWeakInit(v34 + 16, v2);
    uint64_t v35 = (void (**)(uint64_t))(v33
                                        + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v36 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v37 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver + 8);
    *uint64_t v35 = sub_10017E554;
    v35[1] = (void (*)(uint64_t))v34;
    sub_10000D3D8(v36, v37);
  }

    __break(1u);
    goto LABEL_18;
  }

  (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
  swift_release(*v11);
  uint64_t v13 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
  id v15 = v14;
  static ViewControllerContainment.remove(_:)(v14);

  Swift::Int v16 = *(void **)&v2[v13];
  *(void *)&v2[v13] = 0LL;

  unint64_t v17 = *(void **)&v2[v13];
  uint64_t v18 = v17;
  Swift::Int v19 = [v2 view];
  if (!v19)
  {
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v20 = v19;
  [v19 bounds];
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;

  CGRect v98 = v22;
  CGRect v99 = v24;
  CGRect v100 = v26;
  CGRect v101 = v28;
  CGRect v102 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v17, v2, &v98);

  uint64_t v30 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v29);
  if (v30)
  {
    Swift::String v31 = v30;
    PendingPageRender.isLayoutPending.setter(1LL);
    swift_release(v31);
  }

  uint64_t v32 = &v2[qword_1002E1C28];
  swift_beginAccess(&v2[qword_1002E1C28], v97, 0LL, 0LL);
  uint64_t v33 = *(void *)v32;
  if (*(void *)v32)
  {
    uint64_t v34 = swift_allocObject(&unk_10028BC38, 24LL, 7LL);
    swift_unknownObjectWeakInit(v34 + 16, v2);
    uint64_t v35 = (void (**)(uint64_t))(v33
                                        + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v36 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v37 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver + 8);
    *uint64_t v35 = sub_10017E4DC;
    v35[1] = (void (*)(uint64_t))v34;
    sub_10000D3D8(v36, v37);
  }

    __break(1u);
    goto LABEL_18;
  }

  (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
  swift_release(*v11);
  uint64_t v13 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
  id v15 = v14;
  static ViewControllerContainment.remove(_:)(v14);

  Swift::Int v16 = *(void **)&v2[v13];
  *(void *)&v2[v13] = 0LL;

  unint64_t v17 = *(void **)&v2[v13];
  uint64_t v18 = v17;
  Swift::Int v19 = [v2 view];
  if (!v19)
  {
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v20 = v19;
  [v19 bounds];
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;

  CGRect v98 = v22;
  CGRect v99 = v24;
  CGRect v100 = v26;
  CGRect v101 = v28;
  CGRect v102 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v17, v2, &v98);

  uint64_t v30 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v29);
  if (v30)
  {
    Swift::String v31 = v30;
    PendingPageRender.isLayoutPending.setter(1LL);
    swift_release(v31);
  }

  uint64_t v32 = &v2[qword_1002E1C28];
  swift_beginAccess(&v2[qword_1002E1C28], v97, 0LL, 0LL);
  uint64_t v33 = *(void *)v32;
  if (*(void *)v32)
  {
    uint64_t v34 = swift_allocObject(&unk_10028BBC0, 24LL, 7LL);
    swift_unknownObjectWeakInit(v34 + 16, v2);
    uint64_t v35 = (void (**)(uint64_t))(v33
                                        + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v36 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver);
    uint64_t v37 = *(void *)(v33 + OBJC_IVAR____TtC6Arcade33BaseCollectionCompositionalLayout_pendingPrepareObserver + 8);
    *uint64_t v35 = sub_10017D468;
    v35[1] = (void (*)(uint64_t))v34;
    sub_10000D3D8(v36, v37);
  }

  swift_bridgeObjectRelease(a3);
  return v48;
}

    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }

  (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v12, updated);
  uint64_t v14 = *v12;
  id v15 = OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_overlayViewController;
  Swift::Int v16 = *(void **)&v2[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_overlayViewController];
  unint64_t v17 = v16;
  static ViewControllerContainment.remove(_:)(v16);

  uint64_t v18 = *(void **)&v2[v15];
  *(void *)&v2[v15] = 0LL;

  Swift::Int v19 = *(void **)&v2[v15];
  uint64_t v20 = v19;
  unint64_t v21 = [v2 view];
  if (!v21)
  {
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v22 = v21;
  [v21 bounds];
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;

  double v78 = v24;
  uint64_t v79 = v26;
  double v80 = v28;
  uint64_t v81 = v30;
  uint64_t v82 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v19, v2, &v78);

  TopChartsDiffablePagePresenter.title.getter();
  if (v31)
  {
    uint64_t v33 = v31;
    uint64_t v34 = String._bridgeToObjectiveC()();
    *(void *)&uint64_t v32 = swift_bridgeObjectRelease(v33).n128_u64[0];
  }

  else
  {
    uint64_t v34 = 0LL;
  }

  objc_msgSend(v2, "setTitle:", v34, v32);

  id v59 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v58);
  if (v59)
  {
    id v60 = v59;
    PendingPageRender.isLayoutPending.setter(1LL);
    swift_release(v60);
  }

  swift_release(v14);
}

uint64_t sub_10001BB18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PageFacets.Facet.DisplayType(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *v3;
  uint64_t v11 = *(void *)(*v3 + 40LL);
  uint64_t v13 = sub_100009CA4( &qword_1002DE6D0,  255LL,  v12,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
  swift_bridgeObjectRetain(v10);
  uint64_t v37 = a2;
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  uint64_t v15 = -1LL << *(_BYTE *)(v10 + 32);
  unint64_t v16 = v14 & ~v15;
  uint64_t v17 = v10;
  uint64_t v18 = v10 + 56;
  if (((*(void *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) != 0)
  {
    uint64_t v33 = v3;
    uint64_t v34 = a1;
    uint64_t v35 = ~v15;
    uint64_t v36 = v7;
    uint64_t v19 = *(void *)(v7 + 72);
    uint64_t v20 = *(void (**)(void, void, void))(v7 + 16);
    while (1)
    {
      uint64_t v21 = v17;
      uint64_t v22 = v20;
      v20(v9, *(void *)(v17 + 48) + v19 * v16, v6);
      uint64_t v23 = sub_100009CA4( &qword_1002DE6D8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      uint64_t v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v35;
      uint64_t v17 = v21;
      uint64_t v20 = v22;
      if (((*(void *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        uint64_t v3 = v33;
        a1 = v34;
        uint64_t v26 = v36;
        goto LABEL_7;
      }
    }

    __n128 v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(void *)(*v33 + 48LL) + v19 * v16, v6);
    return 0LL;
  }

  else
  {
    swift_bridgeObjectRelease(v10);
    uint64_t v20 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v26 = v7;
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v28 = v37;
    v20(v9, v37, v6);
    uint64_t v38 = *v3;
    void *v3 = 0x8000000000000000LL;
    sub_10001D444((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    uint64_t v29 = *v3;
    void *v3 = v38;
    __n128 v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1LL;
  }

void sub_10001BD7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000031E8(&qword_1002DE688);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    int64_t v7 = 0LL;
    uint64_t v8 = (uint64_t *)(v3 + 56);
    uint64_t v9 = 1LL << *(_BYTE *)(v3 + 32);
    uint64_t v29 = -1LL << v9;
    __n128 v30 = v2;
    if (v9 < 64) {
      uint64_t v10 = ~(-1LL << v9);
    }
    else {
      uint64_t v10 = -1LL;
    }
    unint64_t v11 = v10 & *(void *)(v3 + 56);
    uint64_t v31 = 1LL << *(_BYTE *)(v3 + 32);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }

      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1LL))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }

        if (v17 >= v12) {
          goto LABEL_36;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_36;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_36;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                if (v31 >= 64) {
                  bzero((void *)(v3 + 56), 8 * v12);
                }
                else {
                  *uint64_t v8 = v29;
                }
                uint64_t v2 = v30;
                *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
                break;
              }

              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1LL)) {
                    goto LABEL_42;
                  }
                  if (v7 >= v12) {
                    goto LABEL_36;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v7 = v19;
            }
          }
        }

LABEL_26:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }

      uint64_t v20 = *(void *)(*(void *)(v3 + 48) + 8 * v16);
      uint64_t v21 = static Hasher._hash(seed:_:)(*(void *)(v6 + 40), v20);
      uint64_t v22 = -1LL << *(_BYTE *)(v6 + 32);
      unint64_t v23 = v21 & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1LL << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1LL << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }

          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0LL;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }

        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }

      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
      *(void *)(*(void *)(v6 + 48) + 8 * v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }

  swift_release(v3);
  *uint64_t v2 = v6;
}

        uint64_t v10 = (v19 - 1) & v19;
        int64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }

      uint64_t v21 = *(void *)(v3 + 48) + 40 * v17;
      __n128 v32 = *(_OWORD *)v21;
      uint64_t v33 = *(_OWORD *)(v21 + 16);
      uint64_t v34 = *(void *)(v21 + 32);
      uint64_t v22 = AnyHashable._rawHashValue(seed:)(*(void *)(v6 + 40));
      unint64_t v23 = -1LL << *(_BYTE *)(v6 + 32);
      unint64_t v24 = v22 & ~v23;
      char v25 = v24 >> 6;
      if (((-1LL << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1LL << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        unint64_t v26 = 0;
        BOOL v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }

          uint64_t v28 = v25 == v27;
          if (v25 == v27) {
            char v25 = 0LL;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v25);
        }

        while (v29 == -1);
        unint64_t v14 = __clz(__rbit64(~v29)) + (v25 << 6);
      }

      *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
      unint64_t v15 = *(void *)(v6 + 48) + 40 * v14;
      *(_OWORD *)unint64_t v15 = v32;
      *(_OWORD *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = v33;
      *(void *)(v15 + 32) = v34;
      ++*(void *)(v6 + 16);
    }
  }

  swift_release(v3);
  *uint64_t v2 = v6;
}

        uint64_t v9 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }

      uint64_t v20 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
      uint64_t v21 = *v20;
      uint64_t v22 = v20[1];
      Hasher.init(_seed:)(v34);
      String.hash(into:)(v34, v21, v22);
      unint64_t v23 = Hasher._finalize()();
      unint64_t v24 = -1LL << *(_BYTE *)(v6 + 32);
      char v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        uint64_t v13 = __clz(__rbit64((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        BOOL v27 = 0;
        uint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }

          uint64_t v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0LL;
          }
          v27 |= v29;
          __n128 v30 = *(void *)(v11 + 8 * v26);
        }

        while (v30 == -1);
        uint64_t v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }

      *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v13;
      unint64_t v14 = (void *)(*(void *)(v6 + 48) + 16 * v13);
      *unint64_t v14 = v21;
      v14[1] = v22;
      ++*(void *)(v6 + 16);
    }
  }

  swift_release(v3);
  *uint64_t v2 = v6;
}

        uint64_t v9 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }

      int64_t v19 = *(void *)(*(void *)(v3 + 48) + 8 * v15);
      Hasher.init(_seed:)(v34);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong(v19 + 16);
      if (Strong)
      {
        uint64_t v21 = (void *)Strong;
        Hasher._combine(_:)(1u);
        uint64_t v22 = v21;
        NSObject.hash(into:)(v34);
      }

      else
      {
        Hasher._combine(_:)(0);
      }

      unint64_t v23 = Hasher._finalize()();
      unint64_t v24 = -1LL << *(_BYTE *)(v6 + 32);
      char v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        uint64_t v13 = __clz(__rbit64((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        BOOL v27 = 0;
        uint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }

          uint64_t v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0LL;
          }
          v27 |= v29;
          __n128 v30 = *(void *)(v11 + 8 * v26);
        }

        while (v30 == -1);
        uint64_t v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }

      *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v13;
      *(void *)(*(void *)(v6 + 48) + 8 * v13) = v19;
      ++*(void *)(v6 + 16);
    }
  }

  swift_release(v3);
  *uint64_t v2 = v6;
}

    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    uint64_t v20 = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v21 = static Hasher._hash(seed:_:)(*(void *)(v6 + 40), v20);
    uint64_t v22 = -1LL << *(_BYTE *)(v6 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1LL << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1LL << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }

        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0LL;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v13 + 8 * v24);
      }

      while (v28 == -1);
      unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }

    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
    *(void *)(*(void *)(v6 + 48) + 8 * v14) = v20;
    ++*(void *)(v6 + 16);
  }

  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    uint64_t v2 = v29;
    goto LABEL_38;
  }

  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_26;
  }

  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_26;
    }
  }

    uint64_t v10 = (v21 - 1) & v21;
    int64_t v19 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_27:
    sub_10001F054(*(void *)(v3 + 48) + 40 * v19, (uint64_t)v32);
    unint64_t v23 = AnyHashable._rawHashValue(seed:)(*(void *)(v6 + 40));
    unint64_t v24 = -1LL << *(_BYTE *)(v6 + 32);
    char v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1LL << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1LL << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      BOOL v27 = 0;
      uint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }

        uint64_t v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0LL;
        }
        v27 |= v29;
        __n128 v30 = *(void *)(v12 + 8 * v26);
      }

      while (v30 == -1);
      unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }

    *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
    unint64_t v15 = *(void *)(v6 + 48) + 40 * v14;
    unint64_t v16 = v32[0];
    int64_t v17 = v32[1];
    *(void *)(v15 + 32) = v33;
    *(_OWORD *)unint64_t v15 = v16;
    *(_OWORD *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
    ++*(void *)(v6 + 16);
  }

  uint64_t v22 = v20 + 3;
  if (v22 >= v11)
  {
LABEL_36:
    swift_release_n(v3, 2LL);
    uint64_t v2 = v31;
    goto LABEL_38;
  }

  uint64_t v21 = *(void *)(v8 + 8 * v22);
  if (v21)
  {
    uint64_t v13 = v22;
    goto LABEL_26;
  }

  while (1)
  {
    uint64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_36;
    }
    uint64_t v21 = *(void *)(v8 + 8 * v13);
    ++v22;
    if (v21) {
      goto LABEL_26;
    }
  }

    uint64_t v10 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    uint64_t v20 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    Hasher.init(_seed:)(v33);
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(v33, v21, v22);
    unint64_t v23 = Hasher._finalize()();
    unint64_t v24 = -1LL << *(_BYTE *)(v6 + 32);
    char v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      uint64_t v13 = __clz(__rbit64((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      BOOL v27 = 0;
      uint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }

        uint64_t v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0LL;
        }
        v27 |= v29;
        __n128 v30 = *(void *)(v11 + 8 * v26);
      }

      while (v30 == -1);
      uint64_t v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }

    *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v13;
    unint64_t v14 = (void *)(*(void *)(v6 + 48) + 16 * v13);
    *unint64_t v14 = v21;
    v14[1] = v22;
    ++*(void *)(v6 + 16);
  }

  int64_t v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2LL);
    uint64_t v2 = v31;
    goto LABEL_38;
  }

  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v12 = v19;
    goto LABEL_26;
  }

  while (1)
  {
    int64_t v12 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v12);
    ++v19;
    if (v18) {
      goto LABEL_26;
    }
  }

    uint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_27:
    int64_t v19 = *(void *)(*(void *)(v3 + 48) + 8 * v15);
    Hasher.init(_seed:)(v33);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v19 + 16);
    if (Strong)
    {
      uint64_t v21 = (void *)Strong;
      Hasher._combine(_:)(1u);
      swift_retain(v19);
      uint64_t v22 = v21;
      NSObject.hash(into:)(v33);
    }

    else
    {
      Hasher._combine(_:)(0);
      swift_retain(v19);
    }

    unint64_t v23 = Hasher._finalize()();
    unint64_t v24 = -1LL << *(_BYTE *)(v6 + 32);
    char v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      uint64_t v13 = __clz(__rbit64((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      BOOL v27 = 0;
      uint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }

        uint64_t v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0LL;
        }
        v27 |= v29;
        __n128 v30 = *(void *)(v11 + 8 * v26);
      }

      while (v30 == -1);
      uint64_t v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }

    *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v13;
    *(void *)(*(void *)(v6 + 48) + 8 * v13) = v19;
    ++*(void *)(v6 + 16);
  }

  unint64_t v18 = v16 + 3;
  if (v18 >= v32)
  {
LABEL_39:
    swift_release_n(v3, 2LL);
    uint64_t v2 = v31;
    goto LABEL_41;
  }

  int64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_26;
  }

  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_39;
    }
    int64_t v17 = *(void *)(v8 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_26;
    }
  }

  uint64_t v37 = v22;
  uint64_t v38 = (v21 - 1) & v21;
  for (uint64_t i = __clz(__rbit64(v21)) + (v22 << 6); ; uint64_t i = __clz(__rbit64(v6)) | (v37 << 6))
  {
    unint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    char v25 = *v24;
    unint64_t v26 = v24[1];
    sub_100008364(*(void *)(v1 + 56) + 32 * i, (uint64_t)v7);
    *(void *)&uint64_t v43 = v25;
    *((void *)&v43 + 1) = v26;
    uint64_t v41 = v43;
    v42[0] = v44[0];
    v42[1] = v44[1];
    BOOL v27 = v43;
    sub_1000086FC(v8, v39);
    swift_bridgeObjectRetain(v26);
    uint64_t v28 = sub_1000031E8(v10);
    swift_dynamicCast(&v40, v39, v11, v28, 7LL);
    uint64_t v29 = v40;
    uint64_t result = sub_1000E8690(v27, *((uint64_t *)&v27 + 1));
    __n128 v30 = result;
    if ((v31 & 1) != 0)
    {
      int64_t v12 = v1;
      uint64_t v13 = v10;
      unint64_t v14 = v8;
      unint64_t v15 = v7;
      unint64_t v16 = v3[6] + 16 * result;
      swift_bridgeObjectRelease(*(void *)(v16 + 8));
      *(_OWORD *)unint64_t v16 = v27;
      int64_t v17 = v3[7];
      unint64_t v18 = 8 * v30;
      uint64_t result = swift_unknownObjectRelease(*(void *)(v17 + v18));
      *(void *)(v17 + v18) = v29;
      int64_t v7 = v15;
      uint64_t v8 = v14;
      uint64_t v10 = v13;
      uint64_t v1 = v12;
      unint64_t v11 = (char *)&type metadata for Any + 8;
      uint64_t v6 = v38;
      if (!v38) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }

    if (v3[2] >= v3[3]) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    *(_OWORD *)(v3[6] + 16 * result) = v27;
    *(void *)(v3[7] + 8 * result) = v29;
    __n128 v32 = v3[2];
    uint64_t v33 = __OFADD__(v32, 1LL);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_34;
    }
    v3[2] = v34;
    uint64_t v6 = v38;
    if (!v38) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v38 = (v6 - 1) & v6;
  }

  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

      *(void *)(a4 + 24) = sub_1000031E8(&qword_1002E5D48);
      *(void *)(a4 + 32) = sub_10010E450(&qword_1002E5D50, &qword_1002E5D48);
      sub_100009D54((void *)a4);
      static SpacerSupplementary.makeSpacerRegistration(elementKind:)(a1, a2);
      return result;
    }
  }

  *(void *)(a4 + 24) = sub_1000031E8(&qword_1002E1E40);
  *(void *)(a4 + 32) = sub_10010E450(&qword_1002E1E48, &qword_1002E1E40);
  sub_100009D54((void *)a4);
  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  uint64_t v49 = v48;
  uint64_t v50 = type metadata accessor for InfiniteScrollFooterView();
  __int128 v51 = (objc_class *)swift_getObjCClassFromMetadata(v50);
  __int128 v52 = NSStringFromClass(v51);
  uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  uint64_t v55 = v54;

  uint64_t v39 = sub_100096828;
  uint64_t v40 = (void *)v47;
  uint64_t v41 = v49;
  uint64_t v42 = v53;
  uint64_t v43 = v55;
  uint64_t v44 = 0LL;
  uint64_t v45 = v50;
LABEL_16:
  ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)( v40,  v41,  v42,  v43,  v39,  v44,  v45);
  return result;
}

  int64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v13);
LABEL_15:
  swift_bridgeObjectRelease(v13);
LABEL_20:
  sub_10002B4E8(v17, a2);
  swift_release(v3);
  unint64_t v18 = swift_release(v17);
  uint64_t v20 = dispatch thunk of Lockup.decorations.getter(v19, v18);
  uint64_t v21 = [a3 traitCollection];
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for ComponentDecoration.arcade(_:), v7);
  uint64_t v22 = sub_1001119F8((uint64_t)v10, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((v22 & 1) != 0)
  {
    v23._object = (void *)0x80000001002444F0LL;
    v23._uint64_t countAndFlagsBits = 0xD000000000000011LL;
    v24._uint64_t countAndFlagsBits = 0x724120656C707041LL;
    v24._object = (void *)0xEC00000065646163LL;
    unint64_t v26 = localizedString(_:comment:)(v23, v24);
    uint64_t countAndFlagsBits = v26._countAndFlagsBits;
    object = v26._object;
  }

  else
  {
    uint64_t countAndFlagsBits = 0LL;
    object = 0LL;
  }

  sub_1001129BC(countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease(v20);

  return objc_msgSend(a3, "setNeedsLayout", swift_bridgeObjectRelease(object).n128_f64[0]);
}

  uint64_t v31 = *(void *)(inited + 72);
  if (v31)
  {
    __n128 v32 = *(void *)(inited + 64);
    swift_bridgeObjectRetain(*(void *)(inited + 72));
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0) {
      uint64_t v21 = sub_100019F48(0LL, *((void *)v21 + 2) + 1LL, 1, v21);
    }
    uint64_t v34 = *((void *)v21 + 2);
    uint64_t v33 = *((void *)v21 + 3);
    if (v34 >= v33 >> 1) {
      uint64_t v21 = sub_100019F48((char *)(v33 > 1), v34 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v34 + 1;
    uint64_t v35 = &v21[16 * v34];
    *((void *)v35 + 4) = v32;
    *((void *)v35 + 5) = v31;
  }

  swift_bridgeObjectRelease(inited);
  uint64_t v36 = sub_1000031E8(&qword_1002EAEC0);
  uint64_t v37 = sub_100008748();
  uint64_t v38 = BidirectionalCollection<>.joined(separator:)(8236LL, 0xE200000000000000LL, v36, v37);
  swift_bridgeObjectRelease(v21);
  return v38;
}

    swift_bridgeObjectRelease(v16);
  }

  unint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC6Arcade31ProductRatingsHistogramCardView_progressBarViews];
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0) {
      uint64_t v33 = *(void *)&v1[OBJC_IVAR____TtC6Arcade31ProductRatingsHistogramCardView_progressBarViews];
    }
    else {
      uint64_t v33 = v16 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade31ProductRatingsHistogramCardView_progressBarViews]);
    unint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v33);
    if (!v18) {
      goto LABEL_39;
    }
  }

  else
  {
    unint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC6Arcade31ProductRatingsHistogramCardView_progressBarViews]);
    if (!v18)
    {
LABEL_39:
      *(void *)&BOOL v27 = swift_bridgeObjectRelease(v16).n128_u64[0];
LABEL_40:
      objc_msgSend(v1, "setNeedsLayout", v27);
      return;
    }
  }

  if (v18 >= 1)
  {
    __n128 v30 = 0LL;
    do
    {
      if ((v16 & 0xC000000000000001LL) != 0) {
        uint64_t v31 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v16);
      }
      else {
        uint64_t v31 = (char *)*(id *)(v16 + 8 * v30 + 32);
      }
      __n128 v32 = v31;
      ++v30;
      *(void *)&v31[OBJC_IVAR____TtC6Arcade15ProgressBarView_percentage] = 0LL;
      [v31 setNeedsDisplay];
    }

    while (v18 != v30);
    goto LABEL_39;
  }

  __break(1u);
  do
  {
    if (v7 < 0) {
      uint64_t v34 = v7;
    }
    else {
      uint64_t v34 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v7);
    int64_t v19 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v7);
    if (v18 < 1) {
      goto LABEL_46;
    }
LABEL_7:
    uint64_t v20 = 0LL;
    uint64_t v21 = (float)(uint64_t)v14;
    uint64_t v35 = v1;
    uint64_t v36 = v7 & 0xC000000000000001LL;
    uint64_t v22 = v7;
    v7 &= 0xFFFFFFFFFFFFFF8uLL;
    while (1)
    {
      if ((v16 & 0xC000000000000001LL) != 0) {
        unint64_t v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v16);
      }
      else {
        unint64_t v24 = *(id *)(v16 + 8 * v20 + 32);
      }
      unint64_t v14 = v24;
      objc_msgSend(v24, "floatValue", v35);
      unint64_t v26 = v25;
      if (!v36) {
        break;
      }
      unint64_t v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v22);
LABEL_9:
      uint64_t v1 = v23;
      *(double *)&v23[OBJC_IVAR____TtC6Arcade15ProgressBarView_percentage] = (float)(v26 / v21);
      [v23 setNeedsDisplay];

      unint64_t v14 = v1;
LABEL_10:
      ++v20;

      if (v18 == v20)
      {
        *(void *)&BOOL v27 = swift_bridgeObjectRelease(v16).n128_u64[0];
        uint64_t v1 = v35;
        goto LABEL_40;
      }
    }

    int64_t v17 = *(void *)(v7 + 16);
    if (v20 < v17)
    {
      unint64_t v23 = (char *)*(id *)(v22 + 8 * v20 + 32);
      goto LABEL_9;
    }

    __break(1u);
LABEL_20:
    if (v16 >= 0) {
      uint64_t v28 = v17;
    }
    else {
      uint64_t v28 = v16;
    }
    swift_bridgeObjectRetain(v16);
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v16);
    if (v29 != 5) {
      goto LABEL_26;
    }
    swift_bridgeObjectRetain(v16);
    unint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v16);
    if (!v18) {
      goto LABEL_39;
    }
LABEL_5:
    int64_t v7 = *(void *)&v1[OBJC_IVAR____TtC6Arcade31ProductRatingsHistogramCardView_progressBarViews];
  }

  while ((unint64_t)v7 >> 62);
  int64_t v19 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (v18 >= 1) {
    goto LABEL_7;
  }
LABEL_46:
  __break(1u);
}

void sub_10001BFFC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000031E8(&qword_1002DE610);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    uint64_t v31 = v2;
    uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
    uint64_t v8 = (void *)(v3 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1LL << v7);
    }
    else {
      uint64_t v9 = -1LL;
    }
    unint64_t v10 = v9 & *(void *)(v3 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    swift_retain(v3);
    int64_t v13 = 0LL;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }

      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1LL))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }

        if (v18 >= v11) {
          goto LABEL_36;
        }
        unint64_t v19 = v8[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_36;
          }
          unint64_t v19 = v8[v13];
          if (!v19)
          {
            int64_t v13 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_36;
            }
            unint64_t v19 = v8[v13];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_36:
                swift_release(v3);
                uint64_t v2 = v31;
                uint64_t v30 = 1LL << *(_BYTE *)(v3 + 32);
                if (v30 > 63) {
                  bzero((void *)(v3 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  *uint64_t v8 = -1LL << v30;
                }
                *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
                break;
              }

              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v13 = v20 + 1;
                  if (__OFADD__(v20, 1LL)) {
                    goto LABEL_42;
                  }
                  if (v13 >= v11) {
                    goto LABEL_36;
                  }
                  unint64_t v19 = v8[v13];
                  ++v20;
                  if (v19) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v13 = v20;
            }
          }
        }

void sub_10001C2C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000031E8(&qword_1002DE6A0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
    __int128 v32 = v2;
    __int128 v33 = (void *)(v3 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1LL << v7);
    }
    else {
      uint64_t v8 = -1LL;
    }
    unint64_t v9 = v8 & *(void *)(v3 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    swift_retain(v3);
    int64_t v12 = 0LL;
    while (1)
    {
      if (v9)
      {
        unint64_t v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v16 = v15 | (v12 << 6);
      }

      else
      {
        int64_t v17 = v12 + 1;
        if (__OFADD__(v12, 1LL))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }

        if (v17 >= v10) {
          goto LABEL_36;
        }
        unint64_t v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          int64_t v12 = v17 + 1;
          if (v17 + 1 >= v10) {
            goto LABEL_36;
          }
          unint64_t v18 = v33[v12];
          if (!v18)
          {
            int64_t v12 = v17 + 2;
            if (v17 + 2 >= v10) {
              goto LABEL_36;
            }
            unint64_t v18 = v33[v12];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                uint64_t v2 = v32;
                uint64_t v31 = 1LL << *(_BYTE *)(v3 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  void *v33 = -1LL << v31;
                }
                *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
                break;
              }

              unint64_t v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v12 = v19 + 1;
                  if (__OFADD__(v19, 1LL)) {
                    goto LABEL_42;
                  }
                  if (v12 >= v10) {
                    goto LABEL_36;
                  }
                  unint64_t v18 = v33[v12];
                  ++v19;
                  if (v18) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v12 = v19;
            }
          }
        }

void sub_10001C5A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000031E8(&qword_1002DE658);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
    __int128 v32 = v2;
    __int128 v33 = (void *)(v3 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1LL << v7);
    }
    else {
      uint64_t v8 = -1LL;
    }
    unint64_t v9 = v8 & *(void *)(v3 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    swift_retain(v3);
    int64_t v12 = 0LL;
    while (1)
    {
      if (v9)
      {
        unint64_t v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }

      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1LL))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }

        if (v16 >= v10) {
          goto LABEL_39;
        }
        unint64_t v17 = v33[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v10) {
            goto LABEL_39;
          }
          unint64_t v17 = v33[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v10) {
              goto LABEL_39;
            }
            unint64_t v17 = v33[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v10)
              {
LABEL_39:
                swift_release(v3);
                uint64_t v2 = v32;
                uint64_t v31 = 1LL << *(_BYTE *)(v3 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  void *v33 = -1LL << v31;
                }
                *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
                break;
              }

              unint64_t v17 = v33[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1LL)) {
                    goto LABEL_45;
                  }
                  if (v12 >= v10) {
                    goto LABEL_39;
                  }
                  unint64_t v17 = v33[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v12 = v18;
            }
          }
        }

void sub_10001C8A4( uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v7 = v5;
  uint64_t v48 = a2;
  uint64_t v9 = a2(0LL);
  uint64_t v47 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = *v7;
  if (*(void *)(*v7 + 24) > a1) {
    a1 = *(void *)(*v7 + 24);
  }
  sub_1000031E8(a3);
  uint64_t v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 1LL);
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_39;
  }
  uint64_t v15 = 1LL << *(_BYTE *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 56);
  uint64_t v46 = (void *)(v12 + 56);
  if (v15 < 64) {
    uint64_t v17 = ~(-1LL << v15);
  }
  else {
    uint64_t v17 = -1LL;
  }
  unint64_t v18 = v17 & v16;
  uint64_t v44 = v7;
  int64_t v45 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v19 = v13 + 56;
  __n128 v20 = swift_retain(v12);
  int64_t v21 = 0LL;
  while (1)
  {
    if (v18)
    {
      unint64_t v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_26;
    }

    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1LL))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }

    if (v25 >= v45) {
      goto LABEL_35;
    }
    unint64_t v26 = v46[v25];
    ++v21;
    if (!v26)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_35;
      }
      unint64_t v26 = v46[v21];
      if (!v26)
      {
        int64_t v21 = v25 + 2;
        if (v25 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v26 = v46[v21];
        if (!v26) {
          break;
        }
      }
    }

LABEL_25:
    unint64_t v18 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_26:
    uint64_t v28 = v12;
    uint64_t v29 = *(void *)(v12 + 48);
    uint64_t v30 = *(void *)(v47 + 72);
    uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v47 + 32);
    v31(v11, v29 + v30 * v24, v9, v20);
    uint64_t v32 = *(void *)(v14 + 40);
    uint64_t v33 = sub_100009CA4(v49, 255LL, v48, v50);
    uint64_t v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v9, v33);
    uint64_t v35 = -1LL << *(_BYTE *)(v14 + 32);
    unint64_t v36 = v34 & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1LL << v36) & ~*(void *)(v19 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1LL << v36) & ~*(void *)(v19 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }

        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0LL;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v19 + 8 * v37);
      }

      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }

    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v22;
    ((void (*)(unint64_t, char *, uint64_t))v31)(*(void *)(v14 + 48) + v22 * v30, v11, v9);
    ++*(void *)(v14 + 16);
    uint64_t v12 = v28;
  }

  int64_t v27 = v25 + 3;
  if (v27 < v45)
  {
    unint64_t v26 = v46[v27];
    if (!v26)
    {
      while (1)
      {
        int64_t v21 = v27 + 1;
        if (__OFADD__(v27, 1LL)) {
          goto LABEL_41;
        }
        if (v21 >= v45) {
          goto LABEL_35;
        }
        unint64_t v26 = v46[v21];
        ++v27;
        if (v26) {
          goto LABEL_25;
        }
      }
    }

    int64_t v21 = v27;
    goto LABEL_25;
  }

    uint64_t v19 = (v27 - 1) & v27;
    int64_t v25 = __clz(__rbit64(v27)) + (v22 << 6);
LABEL_26:
    uint64_t v29 = *(void *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))( v12,  *(void *)(v13 + 48) + v29 * v25,  v9,  v21);
    uint64_t v30 = *(void *)(v15 + 40);
    uint64_t v31 = sub_100009CA4(v44, 255LL, v43, v45);
    uint64_t v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v9, v31);
    uint64_t v33 = -1LL << *(_BYTE *)(v15 + 32);
    uint64_t v34 = v32 & ~v33;
    uint64_t v35 = v34 >> 6;
    if (((-1LL << v34) & ~*(void *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1LL << v34) & ~*(void *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      unint64_t v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }

        char v38 = v35 == v37;
        if (v35 == v37) {
          uint64_t v35 = 0LL;
        }
        v36 |= v38;
        unint64_t v39 = *(void *)(v20 + 8 * v35);
      }

      while (v39 == -1);
      unint64_t v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }

    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(void *)(v15 + 48) + v23 * v29, v12, v9);
    ++*(void *)(v15 + 16);
  }

  uint64_t v28 = v26 + 3;
  if (v28 >= v42)
  {
LABEL_35:
    swift_release_n(v13, 2LL);
    uint64_t v7 = v40;
    goto LABEL_37;
  }

  int64_t v27 = *(void *)(v41 + 8 * v28);
  if (v27)
  {
    unint64_t v22 = v28;
    goto LABEL_25;
  }

  while (1)
  {
    unint64_t v22 = v28 + 1;
    if (__OFADD__(v28, 1LL)) {
      break;
    }
    if (v22 >= v42) {
      goto LABEL_35;
    }
    int64_t v27 = *(void *)(v41 + 8 * v22);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }

    uint64_t v15 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v18 << 6);
LABEL_26:
    uint64_t v28 = *(void *)(v6 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + v49))( v8,  *(void *)(v9 + 48) + v28 * v23,  v5,  v17);
    uint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v23);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(v11 + 40);
    uint64_t v33 = sub_100003B6C( &qword_1002E2AA8,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath,  (uint64_t)&protocol conformance descriptor for IndexPath);
    uint64_t v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v5, v33);
    uint64_t v35 = -1LL << *(_BYTE *)(v11 + 32);
    unint64_t v36 = v34 & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1LL << v36) & ~*(void *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      __n128 v20 = __clz(__rbit64((-1LL << v36) & ~*(void *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }

        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0LL;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v16 + 8 * v37);
      }

      while (v41 == -1);
      __n128 v20 = __clz(__rbit64(~v41)) + (v37 << 6);
    }

    *(void *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v28 * v20, v8, v5);
    int64_t v21 = (void *)(*(void *)(v11 + 56) + 16 * v20);
    *int64_t v21 = v31;
    v21[1] = v30;
    ++*(void *)(v11 + 16);
  }

  int64_t v27 = v24 + 2;
  if (v27 >= v47)
  {
LABEL_36:
    swift_release(v9);
    uint64_t v42 = v46;
    if ((v45 & 1) != 0) {
      goto LABEL_39;
    }
    goto LABEL_43;
  }

  unint64_t v26 = v48[v27];
  if (v26)
  {
    unint64_t v18 = v27;
    goto LABEL_25;
  }

  while (1)
  {
    unint64_t v18 = v27 + 1;
    if (__OFADD__(v27, 1LL)) {
      break;
    }
    if (v18 >= v47) {
      goto LABEL_36;
    }
    unint64_t v26 = v48[v18];
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }

    int64_t v21 = __clz(__rbit64(v19));
    uint64_t v12 = (v19 - 1) & v19;
    uint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + vswift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + vswift_unknownObjectWeakDestroy(v0 + 16) = v17;
  }

  __n128 v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  uint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    uint64_t v9 = v20;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    uint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }

    uint64_t v15 = (v24 - 1) & v24;
    unint64_t v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = *(void *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v19, v2);
    __n128 v20 = 16 * v18;
    int64_t v21 = *(void *)(v8 + 48) + v19;
    unint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    uint64_t v28 = *(_OWORD *)(*(void *)(v6 + 56) + v20);
    v22(v21, v5, v2);
    *(_OWORD *)(*(void *)(v8 + 56) + v20) = v28;
  }

  int64_t v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    swift_release(v6);
    uint64_t v1 = v26;
    goto LABEL_28;
  }

  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    uint64_t v12 = v25;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v12 = v25 + 1;
    if (__OFADD__(v25, 1LL)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v12);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }

    uint64_t v12 = (v21 - 1) & v21;
    uint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    unint64_t v18 = 32 * v15;
    sub_100008364(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v23);
    *(void *)(*(void *)(v4 + 48) + vswift_unknownObjectWeakDestroy(v0 + 16) = v17;
    sub_1000086FC(v23, (_OWORD *)(*(void *)(v4 + 56) + v18));
    uint64_t v19 = v17;
  }

  unint64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  int64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    uint64_t v9 = v22;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    int64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }

    uint64_t v14 = (v26 - 1) & v26;
    uint64_t v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    unint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    int64_t v21 = *v19;
    __n128 v20 = v19[1];
    unint64_t v22 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v22, v15);
    unint64_t v23 = v35;
    unint64_t v24 = (void *)(*(void *)(v35 + 48) + v18);
    *unint64_t v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v23 + 56) + v22, v3, v15);
    swift_bridgeObjectRetain(v20);
  }

  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release(v4);
    uint64_t v28 = v31;
    uint64_t v29 = v35;
    goto LABEL_28;
  }

  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    uint64_t v11 = v27;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1LL)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }

    uint64_t v12 = (v23 - 1) & v23;
    uint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    unint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    __n128 v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
  }

  unint64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    uint64_t v9 = v24;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }

    uint64_t v12 = (v21 - 1) & v21;
    uint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + v16);
    unint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + vswift_unknownObjectWeakDestroy(v0 + 16) = v17;
    *(void *)(*(void *)(v4 + 56) + vswift_unknownObjectWeakDestroy(v0 + 16) = v18;
    swift_retain(v17);
    uint64_t v19 = v18;
  }

  unint64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  int64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    uint64_t v9 = v22;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    int64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }

    uint64_t v13 = (v21 - 1) & v21;
    uint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    uint64_t v19 = v18;
  }

  unint64_t v22 = v20 + 2;
  if (v22 >= v14) {
    goto LABEL_26;
  }
  int64_t v21 = *(void *)(v7 + 8 * v22);
  if (v21)
  {
    uint64_t v10 = v22;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    int64_t v21 = *(void *)(v7 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }

  unint64_t v36 = [v1 collectionView];
  if (!v36)
  {
    __break(1u);
    goto LABEL_40;
  }

  unint64_t v37 = v36;
  [v36 contentOffset];
  unint64_t v39 = v38;

  BOOL v40 = [v1 collectionView];
  if (!v40)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }

  uint64_t v41 = v40;
  [v40 contentSize];
  uint64_t v43 = v42;

  uint64_t v44 = [v1 collectionView];
  if (!v44)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }

  int64_t v45 = v44;
  [v44 visibleSize];
  uint64_t v47 = v46;

  if ([v24 focusHeading] != (id)1
    && (floor(v39 - (v43 - v47)) < 0.0 || [v24 focusHeading] != (id)2))
  {
    __int128 v52 = &v1[qword_1002E3E28];
    uint64_t v53 = *(void *)&v1[qword_1002E3E28];
    *(void *)__int128 v52 = 0LL;
    __int128 v54 = v52[8];
    v52[8] = 0x80;
LABEL_38:
    sub_1000D753C(v53, v54);

    return;
  }

  uint64_t v48 = &v1[qword_1002E3E28];
  if ((v1[qword_1002E3E28 + 8] & 0xC0) == 0x40)
  {

    return;
  }

  uint64_t v55 = [v1 collectionView];
  if (v55)
  {
    __n128 v56 = v55;
    [v55 contentOffset];
    unsigned int v58 = v57;

    uint64_t v53 = *(void *)v48;
    *(void *)uint64_t v48 = v58;
    __int128 v54 = v48[8];
    v48[8] = 64;
    goto LABEL_38;
  }

    swift_once(&qword_1002DC380, sub_100018F98);
    goto LABEL_11;
  }

  uint64_t v13 = v12;
  uint64_t v14 = (uint64_t (*)())[v12 cancellationHandler];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = swift_allocObject(&unk_10028DB08, 24LL, 7LL);
    *(void *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = v15;
    swift_retain(v16);
    sub_10000D3D8((uint64_t)sub_1001D3DBC, v16);
    (*(void (**)(void))(*(void *)(v16 + 16) + 16LL))();
    uint64_t v14 = sub_1001D3DBC;
    uint64_t v17 = v16;
  }

  else
  {
    uint64_t v17 = 0LL;
  }

  sub_10000D3D8((uint64_t)v14, v17);
}

    uint64_t v14 = (v23 - 1) & v23;
    uint64_t v82 = v24;
    int64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_26:
    unint64_t v26 = *(void *)(*(void *)(a1 + 48) + 8 * v21);
    int64_t v27 = v77;
    uint64_t v28 = v77(0LL);
    uint64_t v29 = sub_100003B6C(v78, v27, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    uint64_t v30 = dispatch thunk of ShelfPresenter.shelf(for:)(v26, v28, v29);
    Shelf.contentType.getter(v30);
    uint64_t v31 = sub_1001782D0();
    if (v31)
    {
      uint64_t v33 = v31;
      uint64_t v34 = v32;
      if ((dispatch thunk of ShelfPresenter.doesShelfExist(for:)(v26, v28, v29) & 1) != 0
        && v26 < dispatch thunk of ShelfPresenter.sectionCount.getter(v28, v29)
        && (dispatch thunk of ShelfPresenter.isShelfHidden(for:)(v26, v28, v29) & 1) == 0)
      {
        uint64_t v41 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v26, v28, v29);
        else {
          uint64_t v35 = v41;
        }
      }

      else
      {
        uint64_t v35 = 0LL;
      }

      unint64_t v36 = Shelf.isHorizontal.getter();
      char v38 = v79;
      unint64_t v37 = v80;
      unint64_t v39 = v73;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v79 + 16))(v73, v10, v80);
      BOOL v40 = (*(uint64_t (**)(_BYTE *, uint64_t))(v38 + 88))(v39, v37);
      if (v40 != v71 && v40 != v69)
      {
        if (v40 == v67)
        {
LABEL_34:
          uint64_t v16 = 1;
          goto LABEL_6;
        }

        if (v40 != v66 && v40 != v65 && v40 != v64 && v40 != v63 && v40 != v62)
        {
          uint64_t v16 = 1;
          if (v40 == v61 || v40 == v60) {
            goto LABEL_6;
          }
          if (v40 != v59 && v40 != v58 && v40 != v57 && v40 != v56 && v40 != v55 && v40 != v54)
          {
            if (v40 == v53) {
              goto LABEL_34;
            }
            if (v40 != v52
              && v40 != v51
              && v40 != v50
              && v40 != v49
              && v40 != v48
              && v40 != v47
              && v40 != v46
              && v40 != v45
              && v40 != v44)
            {
              uint64_t v16 = v36;
              if (v40 != v43)
              {
                (*(void (**)(_BYTE *, uint64_t))(v79 + 8))(v73, v80);
                uint64_t v16 = 0;
              }

              goto LABEL_6;
            }
          }
        }
      }

      uint64_t v16 = v36;
LABEL_6:
      uint64_t v17 = v16 & 1;
      unint64_t v18 = v35;
      uint64_t v19 = v81;
      sub_100195738((uint64_t)v10, v16 & 1, v18, v81, v74);
      (*(void (**)(uint64_t, uint64_t, char *, void, uint64_t, uint64_t))(v34 + 32))( v30,  v17,  v19,  *(void *)&v19[OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_artworkLoader],  v33,  v34);
    }

    (*(void (**)(_BYTE *, uint64_t))(v79 + 8))(v10, v80);
    swift_release(v30);
    a1 = v76;
    uint64_t v15 = v82;
  }

  int64_t v25 = v15 + 5;
  if (v15 + 5 >= v72)
  {
LABEL_63:

    swift_release(a1);
    return;
  }

  unint64_t v23 = *(void *)(v70 + 8 * v25);
  if (v23)
  {
    unint64_t v24 = v15 + 5;
    goto LABEL_25;
  }

  while (1)
  {
    unint64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1LL)) {
      break;
    }
    if (v24 >= v72) {
      goto LABEL_63;
    }
    unint64_t v23 = *(void *)(v70 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_25;
    }
  }

  __break(1u);
}

LABEL_35:
  swift_release(v12);
  uint64_t v7 = v44;
  uint64_t v42 = 1LL << *(_BYTE *)(v12 + 32);
  if (v42 > 63) {
    bzero(v46, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    void *v46 = -1LL << v42;
  }
  *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
LABEL_39:
  swift_release(v12);
  *uint64_t v7 = v14;
}

  swift_bridgeObjectRelease(v27);
  uint64_t v44 = sub_10005A6AC((uint64_t)v30);
  swift_bridgeObjectRelease(v30);
  int64_t v45 = v52;
  static ActionMetrics.notInstrumented.getter(v46);
  updated = type metadata accessor for UpdateAllAction(0LL);
  swift_allocObject(updated, *(unsigned int *)(updated + 48), *(unsigned __int16 *)(updated + 52));
  uint64_t v48 = UpdateAllAction.init(ordering:actionMetrics:)(v44, v45);
  memset(v62, 0, sizeof(v62));
  sub_1001CCFAC(v48, v62, v53);
  swift_release(v48);
  sub_100006060((uint64_t)v62, (uint64_t *)&unk_1002DF680);
}

          uint64_t v8 = 0LL;
LABEL_36:
          uint64_t v6 = v23;
          uint64_t result = v24;
          goto LABEL_37;
        }

        v15 += 3LL;
      }
    }

void sub_10001CC08(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10001BD7C(v8);
  }

  else
  {
    if (v7 > v6)
    {
      sub_1000297A8();
      goto LABEL_14;
    }

    sub_10001D690(v8);
  }

  uint64_t v9 = *v3;
  uint64_t v10 = static Hasher._hash(seed:_:)(*(void *)(*v3 + 40), a1);
  uint64_t v11 = -1LL << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    uint64_t v12 = *(void *)(v9 + 48);
    if (*(void *)(v12 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
      __break(1u);
    }

    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v12 + 8 * a2) == a1) {
          goto LABEL_13;
        }
      }
    }
  }

LABEL_14:
  uint64_t v14 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  *(void *)(*(void *)(v14 + 48) + 8 * a2) = a1;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1LL);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
  }
}

    uint64_t v11 = *(_OWORD *)(a2 + 128);
    uint64_t v12 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(_OWORD *)(a1 + 128) = v11;
    *(_OWORD *)(a1 + 144) = v12;
    goto LABEL_15;
  }

  if (!v10)
  {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 128));
    goto LABEL_14;
  }

  sub_1000264E4((void *)(a1 + 128), (void *)(a2 + 128));
LABEL_15:
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  sub_1000264E4((void *)(a1 + 176), (void *)(a2 + 176));
  sub_1000264E4((void *)(a1 + 216), (void *)(a2 + 216));
  sub_1000264E4((void *)(a1 + 256), (void *)(a2 + 256));
  sub_1000264E4((void *)(a1 + 296), (void *)(a2 + 296));
  sub_1000264E4((void *)(a1 + 336), (void *)(a2 + 336));
  return a1;
}

      __break(1u);
      goto LABEL_15;
    }

  swift_bridgeObjectRelease(v3);
  return _swiftEmptyArrayStorage;
}

    unint64_t v23 = (__int128 *)&NSDirectionalEdgeInsetsZero;
    goto LABEL_15;
  }

  if ((v19 & 1) == 0) {
    goto LABEL_14;
  }
  if (qword_1002DCB08 != -1) {
    swift_once(&qword_1002DCB08, sub_1000DEF20);
  }
  unint64_t v23 = &xmmword_1002E43E0;
LABEL_15:
  int64_t v25 = *((double *)v23 + 2);
  unint64_t v24 = *((double *)v23 + 3);
  int64_t v27 = *(double *)v23;
  unint64_t v26 = *((double *)v23 + 1);
  sub_10004E80C((uint64_t)v22, (uint64_t)v6);
  sub_1000DE390(v6, v2, a1, v27, v26, v25, v24);
  return sub_100046E64((uint64_t)v6, type metadata accessor for BreakoutDetailsView.Config);
}

    uint64_t v8 = *(_OWORD *)(a2 + 80);
    uint64_t v9 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v8;
    *(_OWORD *)(a1 + 96) = v9;
    goto LABEL_15;
  }

  if (!v7)
  {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
    goto LABEL_14;
  }

  sub_1000264E4((void *)(a1 + 80), (void *)(a2 + 80));
LABEL_15:
  sub_1000264E4((void *)(a1 + 120), (void *)(a2 + 120));
  return a1;
}

  swift_bridgeObjectRelease(v11);
  sub_1001A469C();
  uint64_t v19 = [objc_allocWithZone(UIPanGestureRecognizer) initWithTarget:v1 action:"handlePanWithGestureRecognizer:"];
  __n128 v20 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  int64_t v21 = swift_allocObject(v20, 40LL, 7LL);
  *(_OWORD *)(v21 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233570;
  unint64_t v22 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
  unint64_t v23 = v19;
  unint64_t v24 = [v22 initWithInteger:1];
  *(void *)(v21 + 32) = v24;
  specialized Array._endMutation()(v24);
  int64_t v25 = v21;
  sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "setAllowedTouchTypes:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

  int64_t v27 = [v1 view];
  if (v27)
  {
    uint64_t v28 = v27;
    [v27 addGestureRecognizer:v23];

    sub_1001A3E70(2LL, v1);
    sub_1001A3E70(3LL, v1);

    return;
  }

    uint64_t v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v33, "setText:", v41, swift_bridgeObjectRelease(v32).n128_f64[0]);

    [v6 setNeedsLayout];
    goto LABEL_15;
  }

  swift_bridgeObjectRelease_n(v32, 2LL);
LABEL_15:
  uint64_t v42 = PrivacyType.artwork.getter(v39);
  uint64_t v43 = *(void *)&v6[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_artwork];
  *(void *)&v6[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_artwork] = v42;
  swift_release(v43);
  int64_t v45 = PrivacyType.categories.getter(v44);
  sub_100023194();
  uint64_t v46 = *(void *)&v6[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categories];
  *(void *)&v6[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categories] = v45;
  swift_bridgeObjectRelease(v46);
  return sub_1000212A0();
}

            uint64_t v15 = v17;
            goto LABEL_21;
          }

  *a1 = a4;
  a1[1] = v11;
  return v6;
}

    uint64_t v10 = *(_OWORD *)(a2 + 520);
    uint64_t v11 = *(_OWORD *)(a2 + 536);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(_OWORD *)(a1 + 520) = v10;
    *(_OWORD *)(a1 + 536) = v11;
    goto LABEL_15;
  }

  if (!v9)
  {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 520));
    goto LABEL_14;
  }

  sub_1000264E4((void *)(a1 + 520), (void *)(a2 + 520));
LABEL_15:
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24LL))(v13, v14, v15);
  return a1;
}

void sub_10001CD28(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10001BFFC(v9);
  }

  else
  {
    if (v8 > v7)
    {
      sub_10002993C();
      goto LABEL_12;
    }

    sub_10001D8F0(v9);
  }

  uint64_t v10 = *v3;
  Swift::Int v11 = AnyHashable._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v12 = -1LL << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    uint64_t v13 = ~v12;
    do
    {
      sub_10001F054(*(void *)(v10 + 48) + 40 * a2, (uint64_t)v21);
      char v14 = static AnyHashable.== infix(_:_:)(v21, a1);
      sub_1000087D8((uint64_t)v21);
      if ((v14 & 1) != 0) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v13;
    }

    while (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0);
  }

void sub_10001CE90(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_10001C2C4(v11);
  }

  else
  {
    if (v10 > v9)
    {
      sub_100029B08();
      goto LABEL_22;
    }

    sub_10001DB80(v11);
  }

  uint64_t v12 = *v4;
  Hasher.init(_seed:)(v29);
  String.hash(into:)(v29, a1, a2);
  Swift::Int v13 = Hasher._finalize()();
  uint64_t v14 = -1LL << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  uint64_t v15 = v12 + 56;
  if (((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) != 0)
  {
    uint64_t v16 = *(void *)(v12 + 48);
    __int128 v17 = (void *)(v16 + 16 * a3);
    uint64_t v18 = v17[1];
    BOOL v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0LL) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }

    else
    {
      uint64_t v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(void *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v21 = (void *)(v16 + 16 * a3);
        uint64_t v22 = v21[1];
        BOOL v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0LL) & 1) != 0) {
          goto LABEL_21;
        }
      }
    }
  }

LABEL_22:
  uint64_t v24 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1LL << a3;
  int64_t v25 = (void *)(*(void *)(v24 + 48) + 16 * a3);
  *int64_t v25 = a1;
  v25[1] = a2;
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1LL);
  uint64_t v28 = v26 + 1;
  if (v27) {
    __break(1u);
  }
  else {
    *(void *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = v28;
  }
}

    uint64_t v11 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    unint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_release(_swiftEmptyArrayStorage);
    goto LABEL_21;
  }

  __break(1u);
  return result;
}

              __break(1u);
              goto LABEL_23;
            }

  __break(1u);
  return result;
}

  if (v28 < 0) {
    uint64_t v22 = v28;
  }
  else {
    uint64_t v22 = v28 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v28);
  BOOL v27 = _CocoaArrayWrapper.endIndex.getter(v22);
  if (!v27) {
    goto LABEL_26;
  }
LABEL_3:
  uint64_t v4 = v28 & 0xC000000000000001LL;
  uint64_t v5 = 4LL;
  uint64_t v26 = *(void *)(v25 + OBJC_IVAR____TtC6Arcade22HttpTemplateController_templateAction);
  while (1)
  {
    if (v4) {
      unint64_t v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v28);
    }
    else {
      unint64_t v6 = *(id *)(v28 + 8 * v5);
    }
    unint64_t v7 = v6;
    unint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1LL))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }

    unint64_t v9 = HttpTemplateAction.parameters.getter();
    unint64_t v10 = (unint64_t)[v7 tag];
    if ((v10 & 0x8000000000000000LL) != 0) {
      goto LABEL_20;
    }
    if (v10 >= *(void *)(v9 + 16)) {
      goto LABEL_21;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))( v29,  v9 + ((*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
    + *(void *)(v1 + 72) * v10,
      v30);
    uint64_t v11 = swift_bridgeObjectRelease(v9);
    if ((HttpTemplateParameter.isRequired.getter(v11) & 1) != 0)
    {
      uint64_t v12 = [v7 text];
      if (!v12) {
        break;
      }
      Swift::Int v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      uint64_t v15 = v7;
      uint64_t v16 = v4;
      uint64_t v18 = v17;

      swift_bridgeObjectRelease(v18);
      BOOL v19 = HIBYTE(v18) & 0xF;
      uint64_t v20 = (v18 & 0x2000000000000000LL) == 0;
      uint64_t v4 = v16;
      unint64_t v7 = v15;
      if (v20) {
        BOOL v19 = v14 & 0xFFFFFFFFFFFFLL;
      }
      if (!v19) {
        break;
      }
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v29, v30);
    ++v5;
    if (v8 == v27) {
      goto LABEL_26;
    }
  }

  swift_bridgeObjectRelease(v28);
  int64_t v21 = *(void **)(v25 + OBJC_IVAR____TtC6Arcade22HttpTemplateController_okAction);
  if (v21)
  {
    [v21 setEnabled:0];

    (*(void (**)(char *, uint64_t))(v1 + 8))(v29, v30);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v29, v30);
  }

  *(void *)&uint64_t v20 = swift_bridgeObjectRelease(v12).n128_u64[0];
  int64_t v21 = *(void **)(v33 + OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_contentContainerView);
  uint64_t v22 = objc_msgSend(v21, "subviews", v20);
  BOOL v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v11);

  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0) {
      uint64_t v30 = v23;
    }
    else {
      uint64_t v30 = v23 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v23);
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v23);
    if (v24)
    {
LABEL_24:
      if (v24 >= 1)
      {
        for (uint64_t j = 0LL; j != v24; ++j)
        {
          if ((v23 & 0xC000000000000001LL) != 0) {
            uint64_t v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v23);
          }
          else {
            uint64_t v26 = *(id *)(v23 + 8 * j + 32);
          }
          BOOL v27 = v26;
          uint64_t v28 = v9;
          uint64_t v29 = static NSObject.== infix(_:_:)(v27, v28);

          if ((v29 & 1) == 0) {
            [v27 setAlpha:v8];
          }
        }

        goto LABEL_36;
      }

    uint64_t v2 = v135;
LABEL_23:
    *(void *)(v1 + v25) = v29;

    goto LABEL_24;
  }

  uint64_t v33 = v3;
  uint64_t v34 = OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_callToActionButton;
  uint64_t v35 = v1;
  unint64_t v36 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_callToActionButton);
  if (v36)
  {
    unint64_t v37 = v36;
    char v38 = v36;
  }

  else
  {
    int64_t v45 = type metadata accessor for DynamicTypeButton(0LL);
    char v38 = [(id)swift_getObjCClassFromMetadata(v45) buttonWithType:1];
    unint64_t v37 = *(void **)(v35 + v34);
    if (!v37)
    {
      uint64_t v1 = v35;
      uint64_t v50 = 0LL;
      BOOL v19 = v24;
      int64_t v21 = v23;
      goto LABEL_27;
    }

    unint64_t v36 = 0LL;
  }

  BOOL v19 = v24;
  type metadata accessor for DynamicTypeButton(0LL);
  uint64_t v46 = v36;
  uint64_t v47 = v37;
  uint64_t v48 = v38;
  uint64_t v49 = static NSObject.== infix(_:_:)(v48, v47);

  uint64_t v1 = v137;
  uint64_t v50 = *(void **)(v137 + v34);
  int64_t v21 = v23;
  if ((v49 & 1) != 0)
  {
LABEL_27:
    uint64_t v2 = v135;
    goto LABEL_28;
  }

  uint64_t v2 = v135;
  if (v50)
  {
    [v50 removeFromSuperview];
    uint64_t v50 = *(void **)(v1 + v34);
  }

      sub_100006060(v43, &qword_1002EA1B0);
      __int128 v61 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8);
      uint64_t v62 = v61(v37, v35);
      __int128 v51 = static Sizing.interItemSpacing.getter(v62);
      sub_100006060(v42, &qword_1002EA1B0);
      v61((uint64_t)v38, v35);
      sub_100006060((uint64_t)v26, &qword_1002E8E78);
      return v51;
    }

    goto LABEL_24;
  }

  uint64_t v57 = enum case for Shelf.ContentType.privacyFooter(_:);
  if (v45 != enum case for Shelf.ContentType.privacyFooter(_:))
  {
    uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
    if (v45 != enum case for Shelf.ContentType.privacyType(_:) || v53(v43, 1LL, v35) == 1) {
      goto LABEL_24;
    }
    sub_10001027C(v43, v65, &qword_1002EA1B0);
    id v60 = v44(v65, v35);
    __n128 v56 = v65;
    if (v60 != v57) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }

  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v53(v43, 1LL, v35) == 1)
  {
LABEL_24:
    if (v53(v43, 1LL, v35) != 1)
    {
      if (v44(v37, v35) != enum case for Shelf.ContentType.mediumLockup(_:))
      {
        __int128 v51 = static Sizing.interSectionSpacing.getter();
        sub_100006060(v42, &qword_1002EA1B0);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
        sub_100006060((uint64_t)v26, &qword_1002E8E78);
        sub_100006060(v37, &qword_1002E2080);
        return v51;
      }

      sub_100006060(v42, &qword_1002EA1B0);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
      sub_100006060((uint64_t)v26, &qword_1002E8E78);
      sub_100006060(v43, &qword_1002EA1B0);
      uint64_t v49 = 0x4053800000000000LL;
      return *(double *)&v49;
    }

    sub_100006060(v42, &qword_1002EA1B0);
    uint64_t v46 = *(void (**)(char *, uint64_t))(v36 + 8);
    v46(v38, v35);
    uint64_t v48 = &qword_1002E8E78;
    uint64_t v47 = (uint64_t)v26;
    goto LABEL_6;
  }

  unsigned int v58 = v64;
  sub_10001027C(v43, v64, &qword_1002EA1B0);
  id v59 = v44(v58, v35);
  __n128 v56 = v58;
  if (v59 != enum case for Shelf.ContentType.annotationGroup(_:)) {
    goto LABEL_23;
  }
LABEL_5:
  sub_100006060(v42, &qword_1002EA1B0);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v36 + 8);
  v46(v38, v35);
  sub_100006060((uint64_t)v26, &qword_1002E8E78);
  uint64_t v47 = v43;
  uint64_t v48 = &qword_1002EA1B0;
LABEL_6:
  sub_100006060(v47, v48);
  v46((char *)v37, v35);
  uint64_t v49 = 0x4040000000000000LL;
  return *(double *)&v49;
}

  swift_bridgeObjectRelease(a3);
}

    double v88 = swift_release(v90);
    goto LABEL_23;
  }

  uint64_t v55 = v54;
  if (!v53)
  {
    swift_release(v54);
    double v87 = Uber.artwork.getter(v86);
    double v89 = v199;
    if (!v87) {
      goto LABEL_23;
    }
    double v90 = v87;
    goto LABEL_22;
  }

  __n128 v56 = type metadata accessor for VideoView(0LL);
  uint64_t v57 = swift_dynamicCastClass(v53, v56);
  if (!v57)
  {
    swift_release(v55);
    goto LABEL_17;
  }

  unsigned int v58 = (void *)v57;
  id v59 = v53;
  id v60 = Video.preview.getter(v59);
  __int128 v61 = [(id)objc_opt_self(UIScreen) mainScreen];
  [v61 _referenceBounds];
  __int128 v63 = v62;
  uint64_t v65 = v64;

  uint64_t v66 = v196;
  id v68 = Artwork.crop.getter(v67);
  uint64_t v69 = Artwork.Crop.preferredContentMode.getter(v68);
  (*(void (**)(char *, uint64_t))(v186 + 8))(v66, v197);
  uint64_t v70 = Artwork.config(_:mode:prefersLayeredImage:)(v69, 0LL, v63, v65);
  swift_release(v60);
  v201 = v187;
  v202 = v188;
  swift_bridgeObjectRetain(v188);
  AnyHashable.init<A>(_:)(v203, &v201, &type metadata for String, &protocol witness table for String);
  id v71 = swift_allocObject(&unk_100290040, 24LL, 7LL);
  swift_unknownObjectWeakInit(v71 + 16, v50);
  uint64_t v72 = swift_retain(v71);
  uint64_t v73 = 1;
  ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v70,  2LL,  1LL,  v203,  sub_100214F9C,  v71,  v72);
  swift_release(v71);
  sub_100006060((uint64_t)v203, (uint64_t *)&unk_1002DE600);
  swift_release(v71);
  uint64_t v75 = Video.preview.getter(v74);
  double v76 = (void *)Artwork.backgroundColor.getter(v75);
  objc_msgSend(v50, "setBackgroundColor:", v76, swift_release(v75).n128_f64[0]);

  [v58 setHidden:1];
  uint64_t v77 = v59;
  sub_100214BCC(v58);

  double v78 = *(void **)&v50[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer];
  uint64_t v79 = v77;
  double v80 = [v58 superview];
  if (v80)
  {
    uint64_t v81 = v80;
    sub_100018D98();
    uint64_t v82 = v78;
    uint64_t v83 = v81;
    LOBYTE(v81) = static NSObject.== infix(_:_:)(v83, v82);

    uint64_t v73 = v81 ^ 1;
  }

  id v84 = v73 & ~*((_BYTE *)v58 + qword_1002F0818);
  uint64_t v85 = v79;
  sub_1001B1AE8((uint64_t)v58, v84 & 1);

  [v78 setHidden:0];
  [*(id *)&v50[OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_fallbackArtworkEffectView] removeFromSuperview];
  swift_release(v55);
  swift_release(v70);

  swift_release(v200);
}

uint64_t sub_10001D028(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for AdamId(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10001C8A4( v13,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  &qword_1002DE6B8,  &qword_1002DE6A8,  (uint64_t)&protocol conformance descriptor for AdamId);
  }

  else
  {
    if (v12 > v11)
    {
      sub_100029CB8();
      goto LABEL_12;
    }

    sub_10001E108( v13,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  &qword_1002DE6B8,  &qword_1002DE6A8,  (uint64_t)&protocol conformance descriptor for AdamId);
  }

  uint64_t v14 = *v3;
  uint64_t v15 = *(void *)(*v3 + 40);
  uint64_t v16 = sub_100009CA4( &qword_1002DE6A8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  (uint64_t)&protocol conformance descriptor for AdamId);
  uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  uint64_t v18 = -1LL << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    uint64_t v19 = ~v18;
    uint64_t v20 = *(void *)(v7 + 72);
    int64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(void *)(v14 + 48) + v20 * a2, v6);
      uint64_t v22 = sub_100009CA4( &qword_1002DE6B0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  (uint64_t)&protocol conformance descriptor for AdamId);
      char v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v19;
    }

    while (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0);
  }

void sub_10001D274(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    uint64_t v9 = v7 + 1;
    if ((a3 & 1) != 0)
    {
      sub_10001C5A0(v9);
    }

    else
    {
      if (v8 > v7)
      {
        sub_100029CCC();
        goto LABEL_20;
      }

      sub_10001DE2C(v9);
    }

    uint64_t v10 = *v3;
    Hasher.init(_seed:)(v24);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
    if (Strong)
    {
      unint64_t v12 = (void *)Strong;
      Hasher._combine(_:)(1u);
      id v13 = v12;
      NSObject.hash(into:)(v24);
    }

    else
    {
      Hasher._combine(_:)(0);
    }

    uint64_t v3 = v24;
    Swift::Int v14 = Hasher._finalize()();
    uint64_t v15 = -1LL << *(_BYTE *)(v10 + 32);
    a2 = v14 & ~v15;
    if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
    {
      uint64_t v16 = ~v15;
      uint64_t v3 = (uint64_t *)type metadata accessor for FocusAvoidanceCollectionElementsObserver.FocusAvoidingContainer();
      do
      {
        uint64_t v17 = (void *)swift_unknownObjectWeakLoadStrong(*(void *)(*(void *)(v10 + 48) + 8 * a2) + 16LL);
        uint64_t v18 = swift_unknownObjectWeakLoadStrong(a1 + 16);
        uint64_t v19 = (void *)v18;
        if (v17)
        {
          if (v18)
          {

            if (v17 == v19) {
              goto LABEL_23;
            }
            goto LABEL_14;
          }
        }

        else if (!v18)
        {
          goto LABEL_23;
        }

LABEL_14:
        a2 = (a2 + 1) & v16;
      }

      while (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0);
    }
  }

uint64_t sub_10001D444(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for PageFacets.Facet.DisplayType(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10001C8A4( v13,  (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType,  (uint64_t *)&unk_1002DE6E0,  &qword_1002DE6D0,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
  }

  else
  {
    if (v12 > v11)
    {
      sub_100029E74();
      goto LABEL_12;
    }

    sub_10001E108( v13,  (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType,  (uint64_t *)&unk_1002DE6E0,  &qword_1002DE6D0,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
  }

  uint64_t v14 = *v3;
  uint64_t v15 = *(void *)(*v3 + 40);
  uint64_t v16 = sub_100009CA4( &qword_1002DE6D0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
  uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  uint64_t v18 = -1LL << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    uint64_t v19 = ~v18;
    uint64_t v20 = *(void *)(v7 + 72);
    uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(void *)(v14 + 48) + v20 * a2, v6);
      uint64_t v22 = sub_100009CA4( &qword_1002DE6D8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
      char v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v19;
    }

    while (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0);
  }

void sub_10001D690(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000031E8(&qword_1002DE688);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *uint64_t v2 = v6;
    return;
  }

  uint64_t v29 = v2;
  int64_t v7 = 0LL;
  uint64_t v8 = v3 + 56;
  uint64_t v9 = 1LL << *(_BYTE *)(v3 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }

    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1LL))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v12) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_36;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_36;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }

LABEL_40:
  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

      __break(1u);
      return;
    }
  }

  else
  {
    unint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v24) {
      goto LABEL_24;
    }
  }

      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }

void sub_10001D8F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000031E8(&qword_1002DE610);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *uint64_t v2 = v6;
    return;
  }

  uint64_t v31 = v2;
  uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v8 = v3 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1LL << v7);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v3 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  swift_retain(v3);
  int64_t v13 = 0LL;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_27;
    }

    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (v20 >= v11) {
      goto LABEL_36;
    }
    unint64_t v21 = *(void *)(v8 + 8 * v20);
    ++v13;
    if (!v21)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v11) {
        goto LABEL_36;
      }
      unint64_t v21 = *(void *)(v8 + 8 * v13);
      if (!v21)
      {
        int64_t v13 = v20 + 2;
        if (v20 + 2 >= v11) {
          goto LABEL_36;
        }
        unint64_t v21 = *(void *)(v8 + 8 * v13);
        if (!v21) {
          break;
        }
      }
    }

void sub_10001DB80(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000031E8(&qword_1002DE6A0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *uint64_t v2 = v6;
    return;
  }

  uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v8 = v3 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1LL << v7);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v3 + 56);
  uint64_t v31 = v2;
  int64_t v32 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  swift_retain(v3);
  int64_t v12 = 0LL;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }

    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v32) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      int64_t v12 = v17 + 1;
      if (v17 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v12);
      if (!v18)
      {
        int64_t v12 = v17 + 2;
        if (v17 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v12);
        if (!v18) {
          break;
        }
      }
    }

void sub_10001DE2C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000031E8(&qword_1002DE658);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    swift_release(v3);
LABEL_41:
    *uint64_t v2 = v6;
    return;
  }

  uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v8 = v3 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1LL << v7);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v3 + 56);
  uint64_t v31 = v2;
  int64_t v32 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  swift_retain(v3);
  int64_t v12 = 0LL;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_27;
    }

    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }

    if (v16 >= v32) {
      goto LABEL_39;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v32) {
        goto LABEL_39;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v32) {
          goto LABEL_39;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }

LABEL_43:
  __break(1u);
}

  if ((v5 & 0xC000000000000001LL) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v5);
  }

  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
      goto LABEL_91;
    }

    uint64_t v4 = *(void *)(v5 + 32);
    swift_retain(v4);
  }

  uint64_t v43 = swift_bridgeObjectRelease(v5);
LABEL_78:
  int64_t v45 = TodayCardMediaHero.videos.getter(v43);
  unint64_t v37 = v45;
  if (!((unint64_t)v45 >> 62))
  {
    if (*(void *)((v45 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_80;
    }
LABEL_87:
    swift_bridgeObjectRelease(v37);
    uint64_t v46 = 0LL;
    goto LABEL_88;
  }

  if (v45 >= 0) {
    v45 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  if (!_CocoaArrayWrapper.endIndex.getter(v45)) {
    goto LABEL_87;
  }
LABEL_80:
  if ((v37 & 0xC000000000000001LL) != 0)
  {
LABEL_91:
    uint64_t v46 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v37);
    goto LABEL_83;
  }

  if (*(void *)((v37 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    uint64_t v46 = *(void *)(v37 + 32);
    swift_retain(v46);
LABEL_83:
    swift_bridgeObjectRelease(v37);
LABEL_88:
    sub_100072C50(v4, v46, a3, a4);
    goto LABEL_18;
  }

  __break(1u);
}

      swift_release(v9);
      goto LABEL_44;
    }

    unint64_t v25 = v48;
    unint64_t v26 = v48[v24];
    ++v18;
    if (!v26)
    {
      int64_t v18 = v24 + 1;
      if (v24 + 1 >= v47) {
        goto LABEL_36;
      }
      unint64_t v26 = v48[v18];
      if (!v26) {
        break;
      }
    }

          if (qword_1002DCBD0 != -1) {
            swift_once(&qword_1002DCBD0, sub_100102E50);
          }
          id v71 = type metadata accessor for StaticDimension(0LL);
          sub_1000061F4(v71, (uint64_t)qword_1002F0588);
          uint64_t v72 = [v53 traitCollection];
          uint64_t v73 = v98;
          static Dimensions.defaultRoundingRule.getter(v72);
          uint64_t v57 = StaticDimension.value(compatibleWith:rounded:)(v72, v73);

          (*(void (**)(char *, uint64_t))(v99 + 8))(v73, v100);
          goto LABEL_46;
        }
      }
    }
  }

  if ((v39 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_33:
  uint64_t v43 = v40;
  uint64_t v44 = dispatch thunk of ShelfPresenter.shelf(for:)(v38, v32, v33);
  int64_t v45 = (uint64_t)v107;
  uint64_t v46 = v105;
  uint64_t v47 = sub_10009F204((uint64_t)v107, v105);
  uint64_t v48 = v104;
  Shelf.contentType.getter(v47);
  uint64_t v49 = sub_1001782D0();
  __int128 v51 = v50;
  __int128 v52 = (void (*)(char *, uint64_t))v109[1];
  v52(v48, v37);
  uint64_t v53 = v108;
  if (v49)
  {
    __int128 v54 = (*(uint64_t (**)(uint64_t, void, void *, uint64_t, uint64_t))(v51 + 48))( v46,  v106,  v108,  v49,  v51);
    if ((v55 & 1) == 0)
    {
      __n128 v56 = *(double *)&v54;
      sub_1000B73D4(v46);
      uint64_t v57 = v56;
      v52(v110, v37);
LABEL_51:
      swift_release(v44);
      goto LABEL_52;
    }
  }

  sub_1000B73D4(v46);
  unsigned int v58 = (uint64_t)v102;
  v43(v102, v110, v37);
  id v59 = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v103)(v58, 0LL, 1LL, v37);
  id v60 = v101;
  Shelf.contentType.getter(v59);
  __int128 v61 = sub_1001782D0();
  __int128 v63 = v62;
  v52(v60, v37);
  if (!v61)
  {
    swift_release(v44);
    goto LABEL_42;
  }

  *(double *)&uint64_t v64 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v63 + 56))(v58, v53, v61, v63));
  uint64_t v66 = v65;
  swift_release(v44);
  if ((v66 & 1) != 0)
  {
LABEL_42:
    sub_1000B73D4(v58);
    goto LABEL_43;
  }

  sub_1000B73D4(v58);
  uint64_t v57 = *(double *)&v64;
  v52(v110, v37);
LABEL_52:
  sub_1000B73D4(v45);
  return v57;
}

          id v60 = sub_1000D4A58(v56);
LABEL_44:
          (*(void (**)(char *, char *))(v43 + 8))(v115, v74);
          goto LABEL_57;
        }
      }
    }
  }

  if ((v38 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_33:
  uint64_t v44 = v39;
  int64_t v45 = v114;
  uint64_t v114 = v33;
  uint64_t v46 = dispatch thunk of ShelfPresenter.shelf(for:)(v45, v33, v112);
  uint64_t v47 = v43;
  uint64_t v48 = v109;
  uint64_t v49 = sub_10009F204((uint64_t)v113, v109);
  uint64_t v50 = v108;
  Shelf.contentType.getter(v49);
  __int128 v51 = sub_1001782D0();
  uint64_t v53 = v52;
  __int128 v54 = v47;
  uint64_t v55 = *(void (**)(char *, char *))(v47 + 8);
  v55(v50, v37);
  __n128 v56 = v111;
  if (!v51
    || (uint64_t v57 = (*(uint64_t (**)(uint64_t, BOOL, void *, uint64_t, uint64_t))(v53 + 48))( v48,  v110,  v111,  v51,  v53),  (v58 & 1) != 0))
  {
    sub_100006060(v48, &qword_1002EA1B0);
    uint64_t v62 = (uint64_t)v106;
    v44(v106, v40, v37);
    __int128 v63 = ((uint64_t (*)(uint64_t, void, uint64_t, char *))v107)(v62, 0LL, 1LL, v37);
    uint64_t v64 = v105;
    Shelf.contentType.getter(v63);
    uint64_t v65 = sub_1001782D0();
    uint64_t v67 = v66;
    v55(v64, v37);
    if (v65)
    {
      *(double *)&id v68 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v67 + 56))(v62, v56, v65, v67));
      uint64_t v70 = v69;
      swift_release(v46);
      if ((v70 & 1) == 0)
      {
        sub_100006060(v62, &qword_1002EA1B0);
        id v60 = *(double *)&v68;
        v55(v115, v37);
        __int128 v61 = (uint64_t)v113;
        goto LABEL_57;
      }
    }

    else
    {
      swift_release(v46);
    }

    sub_100006060(v62, &qword_1002EA1B0);
    uint64_t v74 = v37;
    uint64_t v43 = v54;
    __int128 v61 = (uint64_t)v113;
    goto LABEL_43;
  }

  id v59 = *(double *)&v57;
  sub_100006060(v48, &qword_1002EA1B0);
  id v60 = v59;
  v55(v40, v37);
  swift_release(v46);
  __int128 v61 = (uint64_t)v113;
LABEL_57:
  sub_100006060(v61, &qword_1002EA1B0);
  return v60;
}

          if (qword_1002DCBD0 != -1) {
            swift_once(&qword_1002DCBD0, sub_100102E50);
          }
          id v71 = type metadata accessor for StaticDimension(0LL);
          sub_1000061F4(v71, (uint64_t)qword_1002F0588);
          uint64_t v72 = [v53 traitCollection];
          uint64_t v73 = v98;
          static Dimensions.defaultRoundingRule.getter(v72);
          uint64_t v57 = StaticDimension.value(compatibleWith:rounded:)(v72, v73);

          (*(void (**)(char *, uint64_t))(v99 + 8))(v73, v100);
          goto LABEL_46;
        }
      }
    }
  }

  if ((v40 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_33:
  uint64_t v44 = dispatch thunk of ShelfPresenter.shelf(for:)(v39, v33, v34);
  int64_t v45 = (uint64_t)v107;
  uint64_t v46 = v105;
  uint64_t v47 = sub_10009F204((uint64_t)v107, v105);
  uint64_t v48 = v104;
  Shelf.contentType.getter(v47);
  uint64_t v49 = sub_1001782D0();
  __int128 v51 = v50;
  __int128 v52 = (void (*)(char *, uint64_t))v109[1];
  v52(v48, v38);
  uint64_t v53 = v108;
  if (v49)
  {
    __int128 v54 = (*(uint64_t (**)(uint64_t, void, void *, uint64_t, uint64_t))(v51 + 48))( v46,  v106,  v108,  v49,  v51);
    if ((v55 & 1) == 0)
    {
      __n128 v56 = *(double *)&v54;
      sub_100006060(v46, &qword_1002EA1B0);
      uint64_t v57 = v56;
      v52(v110, v38);
LABEL_51:
      swift_release(v44);
      goto LABEL_52;
    }
  }

  sub_100006060(v46, &qword_1002EA1B0);
  unsigned int v58 = (uint64_t)v102;
  v41(v102, v110, v38);
  id v59 = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v103)(v58, 0LL, 1LL, v38);
  id v60 = v101;
  Shelf.contentType.getter(v59);
  __int128 v61 = sub_1001782D0();
  __int128 v63 = v62;
  v52(v60, v38);
  if (!v61)
  {
    swift_release(v44);
    goto LABEL_42;
  }

  *(double *)&uint64_t v64 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v63 + 56))(v58, v53, v61, v63));
  uint64_t v66 = v65;
  swift_release(v44);
  if ((v66 & 1) != 0)
  {
LABEL_42:
    sub_100006060(v58, &qword_1002EA1B0);
    goto LABEL_43;
  }

  sub_100006060(v58, &qword_1002EA1B0);
  uint64_t v57 = *(double *)&v64;
  v52(v110, v38);
LABEL_52:
  sub_100006060(v45, &qword_1002EA1B0);
  return v57;
}

          if (qword_1002DCBD0 != -1) {
            swift_once(&qword_1002DCBD0, sub_100102E50);
          }
          id v71 = type metadata accessor for StaticDimension(0LL);
          sub_1000061F4(v71, (uint64_t)qword_1002F0588);
          uint64_t v72 = [v53 traitCollection];
          uint64_t v73 = v101;
          static Dimensions.defaultRoundingRule.getter(v72);
          uint64_t v57 = StaticDimension.value(compatibleWith:rounded:)(v72, v73);

          (*(void (**)(char *, uint64_t))(v102 + 8))(v73, v103);
          goto LABEL_46;
        }
      }
    }
  }

  if ((v40 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_33:
  uint64_t v44 = dispatch thunk of ShelfPresenter.shelf(for:)(v39, v33, v34);
  int64_t v45 = (uint64_t)v110;
  uint64_t v46 = v108;
  uint64_t v47 = sub_10001027C((uint64_t)v110, v108, &qword_1002EA1B0);
  uint64_t v48 = (char *)v107;
  Shelf.contentType.getter(v47);
  uint64_t v49 = sub_1001782D0();
  __int128 v51 = v50;
  __int128 v52 = (void (*)(char *, uint64_t))v112[1];
  v52(v48, v38);
  uint64_t v53 = v111;
  if (v49)
  {
    __int128 v54 = (*(uint64_t (**)(uint64_t, void, void *, uint64_t, uint64_t))(v51 + 48))( v46,  v109,  v111,  v49,  v51);
    if ((v55 & 1) == 0)
    {
      __n128 v56 = *(double *)&v54;
      sub_100006060(v46, &qword_1002EA1B0);
      uint64_t v57 = v56;
      v52(v113, v38);
LABEL_51:
      swift_release(v44);
      goto LABEL_52;
    }
  }

  sub_100006060(v46, &qword_1002EA1B0);
  unsigned int v58 = (uint64_t)v105;
  v41(v105, v113, v38);
  id v59 = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v106)(v58, 0LL, 1LL, v38);
  id v60 = v104;
  Shelf.contentType.getter(v59);
  __int128 v61 = sub_1001782D0();
  __int128 v63 = v62;
  v52(v60, v38);
  if (!v61)
  {
    swift_release(v44);
    goto LABEL_42;
  }

  *(double *)&uint64_t v64 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v63 + 56))(v58, v53, v61, v63));
  uint64_t v66 = v65;
  swift_release(v44);
  if ((v66 & 1) != 0)
  {
LABEL_42:
    uint64_t v70 = v38;
    sub_100006060(v58, &qword_1002EA1B0);
    goto LABEL_43;
  }

  sub_100006060(v58, &qword_1002EA1B0);
  uint64_t v57 = *(double *)&v64;
  v52(v113, v38);
LABEL_52:
  sub_100006060(v45, &qword_1002EA1B0);
  return v57;
}

void sub_10001E108( uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v7 = v5;
  uint64_t v43 = a2;
  uint64_t v9 = a2(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = *v7;
  if (*(void *)(*v7 + 24) > a1) {
    a1 = *(void *)(*v7 + 24);
  }
  sub_1000031E8(a3);
  uint64_t v14 = static _SetStorage.resize(original:capacity:move:)(v13, a1, 0LL);
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    swift_release(v13);
LABEL_37:
    *uint64_t v7 = v15;
    return;
  }

  uint64_t v16 = 1LL << *(_BYTE *)(v13 + 32);
  uint64_t v17 = *(void *)(v13 + 56);
  BOOL v40 = v7;
  uint64_t v41 = v13 + 56;
  if (v16 < 64) {
    uint64_t v18 = ~(-1LL << v16);
  }
  else {
    uint64_t v18 = -1LL;
  }
  unint64_t v19 = v18 & v17;
  int64_t v42 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v20 = v14 + 56;
  __n128 v21 = swift_retain(v13);
  int64_t v22 = 0LL;
  while (1)
  {
    if (v19)
    {
      unint64_t v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_26;
    }

    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1LL))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }

    if (v26 >= v42) {
      goto LABEL_35;
    }
    unint64_t v27 = *(void *)(v41 + 8 * v26);
    ++v22;
    if (!v27)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v42) {
        goto LABEL_35;
      }
      unint64_t v27 = *(void *)(v41 + 8 * v22);
      if (!v27)
      {
        int64_t v22 = v26 + 2;
        if (v26 + 2 >= v42) {
          goto LABEL_35;
        }
        unint64_t v27 = *(void *)(v41 + 8 * v22);
        if (!v27) {
          break;
        }
      }
    }

LABEL_39:
  __break(1u);
}

    __break(1u);
    goto LABEL_40;
  }

  if (v8 < 0) {
    uint64_t v32 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade32ScreenshotsGalleryViewController_galleryViewControllers);
  }
  else {
    uint64_t v32 = v8 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)(v1
                                     + OBJC_IVAR____TtC6Arcade32ScreenshotsGalleryViewController_galleryViewControllers));
  uint64_t v33 = _CocoaArrayWrapper.endIndex.getter(v32);
  swift_bridgeObjectRelease(v8);
  if (v33 > a1) {
    goto LABEL_5;
  }
}

  __break(1u);
  return result;
}

  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_10001E428(int64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
}

void sub_10001E43C( int64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t v65 = a7;
  uint64_t v64 = a6;
  uint64_t v63 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  __int128 v61 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002DE5F0);
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  sub_100029140();
  sub_10001E9B8(a1, 0LL, a3, a8, a9);
  uint64_t v21 = v20;
  sub_10001E9B8(0LL, a2, a3, a8, a9);
  unint64_t v23 = v22;
  if (v22[2])
  {
    uint64_t v24 = v22[4];
    uint64_t v25 = v22[5];
    swift_retain(v24);
    swift_retain(v25);
  }

  else
  {
    uint64_t v24 = 0LL;
    uint64_t v25 = 0LL;
  }

  swift_bridgeObjectRelease(v23);
  uint64_t v60 = *(void *)(v21 + 16);
  if (!v60)
  {
    swift_bridgeObjectRelease(v21);
    if (!v24) {
      return;
    }
    goto LABEL_12;
  }

  uint64_t v57 = v25;
  uint64_t v58 = v24;
  uint64_t v26 = 0LL;
  uint64_t v59 = v67 + OBJC_IVAR____TtC6Arcade15LockupMediaView_handlerKeys;
  unint64_t v27 = *(void **)(v67 + OBJC_IVAR____TtC6Arcade15LockupMediaView_imageView);
  uint64_t v56 = v21;
  int64_t v28 = (uint64_t *)(v21 + 40);
  do
  {
    uint64_t v33 = *(v28 - 1);
    uint64_t v34 = *v28;
    swift_retain(v33);
    v71[0] = objc_msgSend(v27, "hash", swift_retain(v34).n128_f64[0]);
    uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    uint64_t v73 = v35;
    v36._uint64_t countAndFlagsBits = 45LL;
    v36._object = (void *)0xE100000000000000LL;
    String.append(_:)(v36);
    v71[0] = v26;
    v37._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    object = v37._object;
    String.append(_:)(v37);
    swift_bridgeObjectRelease(object);
    v71[0] = v72;
    v71[1] = v73;
    AnyHashable.init<A>(_:)(&v72, v71, &type metadata for String, &protocol witness table for String);
    sub_10001F054((uint64_t)&v72, (uint64_t)v69);
    swift_beginAccess(v59, v68, 33LL, 0LL);
    sub_10001B2BC((uint64_t)v71, (uint64_t)v69);
    swift_endAccess(v68);
    uint64_t v39 = sub_1000087D8((uint64_t)v71);
    Artwork.style.getter(v39);
    uint64_t v40 = type metadata accessor for Artwork.Style(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56LL))(v19, 0LL, 1LL, v40);
    uint64_t v41 = ArtworkView.style.setter(v19);
    int64_t v42 = v61;
    uint64_t v43 = Artwork.crop.getter(v41);
    uint64_t v44 = Artwork.Crop.preferredContentMode.getter(v43);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v42, v63);
    uint64_t v45 = ArtworkView.contentMode.setter(v44);
    uint64_t v46 = ArtworkLoaderConfig.size.getter(v45);
    uint64_t v47 = ArtworkView.imageSize.setter(v46);
    uint64_t v48 = Artwork.backgroundColor.getter(v47);
    if (!v48)
    {
      sub_100010F30();
      uint64_t v48 = static UIColor.placeholderBackground.getter();
    }

    ArtworkView.backgroundColor.setter(v48);
    sub_10001F054((uint64_t)&v72, (uint64_t)v71);
    uint64_t v29 = swift_allocObject(&unk_1002812B8, 24LL, 7LL);
    swift_unknownObjectWeakInit(v29 + 16, v67);
    sub_10001F054((uint64_t)&v72, (uint64_t)v69);
    uint64_t v30 = swift_allocObject(v64, 72LL, 7LL);
    *(void *)(v30 + swift_unknownObjectWeakDestroy(v0 + 16) = v29;
    __int128 v31 = v69[1];
    *(_OWORD *)(v30 + 24) = v69[0];
    *(_OWORD *)(v30 + 40) = v31;
    *(void *)(v30 + 56) = v70;
    *(void *)(v30 + 64) = v26;
    __n128 v32 = swift_retain(v29);
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v34,  2LL,  1LL,  v71,  v65,  v30,  v32);
    swift_release(v34);
    swift_release(v33);
    swift_release(v30);
    sub_10001F0C8((uint64_t)v71);
    sub_1000087D8((uint64_t)&v72);
    swift_release(v29);
    v28 += 2;
    ++v26;
  }

  while (v60 != v26);
  swift_bridgeObjectRelease(v56);
  uint64_t v24 = v58;
  uint64_t v25 = v57;
  if (v58)
  {
LABEL_12:
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v67 + OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer)
             + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (Strong)
    {
      uint64_t v50 = (void *)Strong;
      __int128 v51 = *(void **)(Strong + qword_1002E70D0);
      sub_10001F108(v24, v25);
      id v52 = v51;
      sub_1000FB124();

      uint64_t v53 = type metadata accessor for VideoView(0LL);
      uint64_t v54 = sub_100009CA4(&qword_1002E7D80, 255LL, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v25, 2LL, 1LL, v50, v53, v54);
      sub_10001F134(v24, v25);
      swift_release(v25);
      swift_release(v24);
    }

    else
    {
      swift_release(v25);
      swift_release(v24);
    }
  }

void sub_10001E9B8(int64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  uint64_t v9 = v8;
  if (qword_1002DCA08 != -1) {
    swift_once(&qword_1002DCA08, sub_1000ADF54);
  }
  uint64_t v10 = type metadata accessor for LockupMediaLayout.Metrics(0LL);
  uint64_t v11 = sub_1000061F4(v10, (uint64_t)qword_1002EFF48);
  id v12 = [a3 traitCollection];
  double v13 = static LockupMediaLayout.mediaSize(using:fitting:with:)(v11, v12, a4, a5);
  double v15 = v14;

  if (!((unint64_t)v9 >> 62))
  {
    uint64_t v16 = *(void *)((v9 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v16) {
      goto LABEL_5;
    }
LABEL_20:
    swift_bridgeObjectRelease(v9);
    return;
  }

  if (v9 < 0) {
    uint64_t v24 = v9;
  }
  else {
    uint64_t v24 = v9 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v9);
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v9);
  if (!v16) {
    goto LABEL_20;
  }
LABEL_5:
  if (v16 >= 1)
  {
    uint64_t v17 = 0LL;
    uint64_t v18 = _swiftEmptyArrayStorage;
    do
    {
      if ((v9 & 0xC000000000000001LL) != 0)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v9);
      }

      else
      {
        uint64_t v19 = *(void *)(v9 + 8 * v17 + 32);
        swift_retain(v19);
      }

      uint64_t v20 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v13, v15);
      swift_retain(v19);
      swift_retain(v20);
      if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0) {
        uint64_t v18 = sub_10001A480(0LL, v18[2] + 1LL, 1, v18);
      }
      unint64_t v22 = v18[2];
      unint64_t v21 = v18[3];
      if (v22 >= v21 >> 1) {
        uint64_t v18 = sub_10001A480((void *)(v21 > 1), v22 + 1, 1, v18);
      }
      ++v17;
      v18[2] = v22 + 1;
      unint64_t v23 = &v18[2 * v22];
      v23[4] = v19;
      void v23[5] = v20;
      swift_release(v20);
      swift_release(v19);
    }

    while (v16 != v17);
    goto LABEL_20;
  }

  __break(1u);
}

void sub_10001EBD8()
{
  uint64_t v1 = OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_lockupView;
  *(void *)&v0[v1] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for SmallLockupView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  uint64_t v2 = OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_mediaView;
  *(void *)&v0[v2] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for LockupMediaView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  v0[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_state] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_pillView] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/AppSearchResultContentView.swift",  39LL,  2LL,  48LL,  0);
  __break(1u);
}

void sub_10001ECB8(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v7 = v6;
  sub_10001F010(a1, (uint64_t)v39);
  uint64_t v11 = sub_1000031E8(&qword_1002E9470);
  uint64_t v12 = type metadata accessor for AppSearchResult(0LL);
  uint64_t v13 = swift_dynamicCast(&v38, v39, v11, v12, 6LL);
  if ((_DWORD)v13)
  {
    uint64_t v14 = v38;
    uint64_t v15 = AppSearchResult.lockup.getter(v13);
    uint64_t v16 = Lockup.icon.getter(v15);
    swift_release(v15);
    if (v16)
    {
      uint64_t v18 = *(void *)&v7[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_lockupView];
      uint64_t v19 = OBJC_IVAR____TtC6Arcade15SmallLockupView_artworkView;
      uint64_t v20 = qword_1002DC9E0;
      id v21 = *(id *)(v18 + OBJC_IVAR____TtC6Arcade15SmallLockupView_artworkView);
      if (v20 != -1) {
        swift_once(&qword_1002DC9E0, sub_1000AC068);
      }
      __int128 v22 = xmmword_1002EFDA0;
      uint64_t v23 = ArtworkView.contentMode.getter();
      uint64_t v24 = Artwork.config(_:mode:prefersLayeredImage:)(v23, 0LL, *(double *)&v22, *((double *)&v22 + 1));
      sub_1000FB124();
      uint64_t v25 = *(void **)(v18 + v19);
      uint64_t v26 = type metadata accessor for ArtworkView(0LL);
      uint64_t v27 = sub_100009CA4( (unint64_t *)&qword_1002DE5E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
      id v28 = v25;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v24, 2LL, 1LL, v28, v26, v27);
      swift_release(v16);

      swift_release(v24);
    }

    uint64_t v29 = *(void *)&v7[OBJC_IVAR____TtC6Arcade26AppSearchResultContentView_mediaView];
    uint64_t v30 = AppSearchResult.lockup.getter(v17);
    uint64_t v31 = MixedMediaLockup.screenshots.getter();
    swift_release(v30);
    if ((unint64_t)v31 >> 62)
    {
      if (v31 < 0) {
        uint64_t v36 = v31;
      }
      else {
        uint64_t v36 = v31 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v31);
      int64_t v32 = _CocoaArrayWrapper.endIndex.getter(v36);
      swift_bridgeObjectRelease(v31);
      if (!v32) {
        goto LABEL_11;
      }
    }

    else
    {
      int64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (!v32) {
        goto LABEL_11;
      }
    }

    if ((v31 & 0xC000000000000001LL) != 0)
    {
      int64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v31);
    }

    else
    {
      if (!*(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        __break(1u);
        goto LABEL_30;
      }

      int64_t v32 = *(void *)(v31 + 32);
      swift_retain(v32);
    }

LABEL_30:
    uint64_t v35 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v31);
    goto LABEL_16;
  }

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }

  if (v17 >= COERCE_DOUBLE(1LL))
  {
    if (v20 >= v17) {
      goto LABEL_24;
    }
    uint64_t v23 = (v17 - v20) * -0.012;
    if (v23 < -0.5)
    {
      __int128 v22 = exp(v23);
      goto LABEL_22;
    }
  }

  else
  {
    id v21 = v17 * 0.012;
    if (v17 * 0.012 >= -0.5) {
      __int128 v22 = v21 * (v21 * 0.5 + 1.0) + 1.0;
    }
    else {
      __int128 v22 = exp(v21);
    }
    uint64_t v24 = [v3 collectionView];
    if (v24) {
      goto LABEL_23;
    }
    __break(1u);
  }

  __int128 v22 = v23 * (v23 * 0.5 + 1.0) + 1.0;
LABEL_22:
  uint64_t v24 = [v3 collectionView];
  if (v24)
  {
LABEL_23:
    uint64_t v25 = v24;
    [v24 contentOffset];
    uint64_t v27 = v26;

    uint64_t v17 = v22 * a3 + v27;
    goto LABEL_24;
  }

  type metadata accessor for DynamicTypeLabel(0LL);
  if (v66[195] != -1LL) {
    swift_once(&qword_1002DC618, sub_100071520);
  }
  double v92 = v102;
  double v93 = sub_1000061F4(v102, (uint64_t)qword_1002EEE98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v61, v93, v92);
  double v94 = sub_1000137B8(v61, 2LL, 0LL, 1, 1);
  memset(&v110[8], 0, 40);
  *(void *)Swift::Int v110 = 0xBFE8000000000000LL;
  Swift::Int v111 = 1;
  uint64_t v65 = v94;
  sub_1000661C8((uint64_t)v110);

  [v65 setAttributedText:v63];
  return v65;
}

    uint64_t v25 = *(_OWORD *)(a2 + 1256);
    uint64_t v26 = *(_OWORD *)(a2 + 1272);
    *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
    *(_OWORD *)(a1 + 1256) = v25;
    *(_OWORD *)(a1 + 1272) = v26;
    goto LABEL_31;
  }

  if (!v24)
  {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 1256));
    goto LABEL_30;
  }

  sub_1000264E4((void *)(a1 + 1256), (void *)(a2 + 1256));
LABEL_31:
  sub_1000264E4((void *)(a1 + 1296), (void *)(a2 + 1296));
  uint64_t v27 = *(void *)(a2 + 1336);
  id v28 = *(void *)(a1 + 1336);
  *(void *)(a1 + 1336) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  uint64_t v29 = *(void *)(a2 + 1344);
  uint64_t v30 = *(void *)(a1 + 1344);
  *(void *)(a1 + 1344) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  return a1;
}

  *(void *)&uint64_t result = swift_bridgeObjectRelease(v24).n128_u64[0];
  return result;
}

    swift_bridgeObjectRelease(v35);
  }

      swift_once(&qword_1002DCE78, sub_1001665C8);
      goto LABEL_26;
    }

    __break(1u);
  }

  else
  {

    swift_release(v13);
  }

    uint64_t v17 = (v28 - 1) & v28;
    uint64_t v26 = __clz(__rbit64(v28)) + (v18 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(*(void *)(a1 + 48) + 8 * v26);
    uint64_t v31 = type metadata accessor for GenericPagePresenter(0LL);
    int64_t v32 = sub_100003B6C( &qword_1002EA200,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    uint64_t v33 = dispatch thunk of ShelfPresenter.shelf(for:)(v30, v31, v32);
    Shelf.contentType.getter(v33);
    uint64_t v34 = sub_1001782D0();
    if (!v34) {
      goto LABEL_12;
    }
    uint64_t v36 = v34;
    v146 = v35;
    uint64_t v37 = dispatch thunk of ShelfPresenter.doesShelfExist(for:)(v30, v31, v32);
    v145 = v18;
    if ((v37 & 1) != 0
      && v30 < dispatch thunk of ShelfPresenter.sectionCount.getter(v31, v32)
      && (dispatch thunk of ShelfPresenter.isShelfHidden(for:)(v30, v31, v32) & 1) == 0)
    {
      uint64_t v69 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v30, v31, v32);
      if ((sub_100201CCC( v30,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  &qword_1002EA200,  (uint64_t)&protocol conformance descriptor for BaseShelfPresenter) & 1) != 0) {
        uint64_t v70 = 1LL;
      }
      else {
        uint64_t v70 = v69;
      }
      v135 = v70;
    }

    else
    {
      v135 = 0LL;
    }

    uint64_t v38 = v149;
    uint64_t v39 = *(void *)&v149[v142];
    uint64_t v40 = Shelf.isHorizontal.getter();
    int64_t v42 = v147;
    uint64_t v41 = v148;
    uint64_t v43 = v139;
    v141 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v147 + 16);
    v141(v139, v13, v148);
    uint64_t v44 = *(uint64_t (**)(_BYTE *, uint64_t))(v42 + 88);
    uint64_t v45 = v44(v43, v41);
    if (v45 == v137 || v45 == v134) {
      goto LABEL_64;
    }
    if (v45 == v133) {
      goto LABEL_5;
    }
    if (v45 == v131 || v45 == v130 || v45 == v132 || v45 == v129 || v45 == v128) {
      goto LABEL_64;
    }
    if (v45 == v121 || v45 == v95)
    {
LABEL_5:
      [v140 frame];
      id v21 = v20;
      uint64_t v23 = v22;
LABEL_6:
      uint64_t v24 = 1LL;
      goto LABEL_7;
    }

    if (v45 == v88 || v45 == v87 || v45 == v126 || v45 == v86 || v45 == v85 || v45 == v84) {
      goto LABEL_64;
    }
    if (v45 == v124) {
      goto LABEL_5;
    }
    if (v45 == v120
      || v45 == v119
      || v45 == v118
      || v45 == v89
      || v45 == v117
      || v45 == v82
      || v45 == v80
      || v45 == v79
      || v45 == v81
      || v45 == v78)
    {
LABEL_64:
      [v140 frame];
      id v21 = v48;
      uint64_t v23 = v49;
      if ((v40 & 1) != 0) {
        goto LABEL_6;
      }
    }

    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v147 + 8))(v139, v148);
      [v140 frame];
      id v21 = v46;
      uint64_t v23 = v47;
    }

    uint64_t v50 = sub_1001782D0();
    if (v50)
    {
      id v52 = v50;
      uint64_t v53 = v51;
      uint64_t v54 = v149;
      [v149 pageMarginInsets];
      uint64_t v56 = (*(double (**)(char *, uint64_t, uint64_t, double))(v53 + 40))(v54, v52, v53, v55);
      id v21 = v21 - (v56 + v57);
      uint64_t v58 = [v54 traitCollection];
      LOBYTE(v52) = (*(uint64_t (**)(_BYTE *, id))(*(void *)v39 + 504LL))(v13, v58);

      if ((v52 & 1) != 0)
      {
        uint64_t v59 = [v54 traitCollection];
        v125 = [v59 horizontalSizeClass];

        uint64_t v60 = v127;
        __int128 v61 = v148;
        v141(v127, v13, v148);
        uint64_t v62 = v44(v60, v61);
        if (v62 == v116 || v62 == v115)
        {
          uint64_t v63 = 1LL;
          uint64_t v18 = v145;
          goto LABEL_122;
        }

        uint64_t v18 = v145;
        if (v62 != v114
          && v62 != v113
          && v62 != v112
          && v62 != v111
          && v62 != v110
          && v62 != v109
          && v62 != v108
          && v62 != v107
          && v62 != v106
          && v62 != v126
          && v62 != v105
          && v62 != v104
          && v62 != v103
          && v62 != v102
          && v62 != v124
          && v62 != v101
          && v62 != v120
          && v62 != v119
          && v62 != v118
          && v62 != v117
          && v62 != v100
          && v62 != v99
          && v62 != v98
          && v62 != v96)
        {
          uint64_t v63 = 1LL;
          if (v62 == v94 || v62 == v92) {
            goto LABEL_122;
          }
          uint64_t v64 = v148;
          uint64_t v65 = *(void (**)(_BYTE *, uint64_t))(v147 + 8);
          v65(v127, v148);
          uint64_t v66 = *(int *)(v90 + 48);
          uint64_t v67 = v122;
          v141(v122, v13, v64);
          *(void *)&v67[v66] = v125;
          id v68 = v44(v67, v64);
          if (v68 != v132 && v68 != v97 && v68 != v93 && v68 != v91)
          {
            if (v68 == v89)
            {
              if (v125 != (id)1)
              {
                if (v125 != (id)2) {
                  goto LABEL_132;
                }
                goto LABEL_121;
              }

uint64_t sub_10001F010(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10001F054(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10001F090()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_10001F0B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10001F0C8(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002DE600);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10001F108(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_retain(result);
    return swift_retain(a2);
  }

  return result;
}

uint64_t sub_10001F134(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_release(result);
    return swift_release(a2);
  }

  return result;
}

double sub_10001F160(uint64_t a1)
{
  uint64_t v55 = type metadata accessor for AspectRatio(0LL);
  uint64_t v57 = *(void *)(v55 - 8);
  uint64_t v2 = __chkstk_darwin(v55);
  uint64_t v56 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v50 - v4;
  uint64_t v6 = type metadata accessor for StaticDimension(0LL);
  uint64_t v52 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for PageGrid(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  type metadata accessor for SmallLockupView();
  if (qword_1002DC9E0 != -1) {
    swift_once(&qword_1002DC9E0, sub_1000AC068);
  }
  sub_10001F61C(&xmmword_1002EFDA0, v59);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002340B8, v13);
  ItemLayoutContext.subscript.getter(&v58);
  swift_release(KeyPath);
  uint64_t v15 = v58;
  uint64_t v17 = swift_getKeyPath(&unk_1002340E8, v16);
  uint64_t v53 = a1;
  ItemLayoutContext.subscript.getter(v12);
  swift_release(v17);
  double v19 = PageGrid.componentMeasuringSize(spanning:)(v18, 1.0);
  __int128 v51 = *(void (**)(void, void))(v10 + 8);
  v51(v12, v9);
  swift_getObjectType(v15);
  sub_1000AD290(v59, v15, v19);
  double v21 = v20;
  swift_unknownObjectRelease(v15);
  sub_10001F6A0(v59);
  if (qword_1002DC388 != -1) {
    swift_once(&qword_1002DC388, sub_1000190BC);
  }
  uint64_t v54 = v9;
  double v22 = *(double *)&qword_1002EE570;
  double v23 = *(double *)&qword_1002EE580;
  if (qword_1002DCBC8 != -1) {
    swift_once(&qword_1002DCBC8, sub_100102E40);
  }
  uint64_t v24 = sub_1000061F4(v6, (uint64_t)qword_1002F0570);
  uint64_t v25 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v8, v24, v6);
  uint64_t v27 = swift_getKeyPath(&unk_100234118, v26);
  ItemLayoutContext.subscript.getter(v59);
  __n128 v28 = swift_release(v27);
  uint64_t v29 = *(void **)&v59[0];
  type metadata accessor for TraitEnvironmentPlaceholder(0LL, v28);
  uint64_t v30 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v31 = swift_allocObject(v30, 40LL, 7LL);
  *(_OWORD *)(v31 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233570;
  *(void *)(v31 + 32) = v29;
  id v32 = v29;
  uint64_t v33 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v31);
  double v34 = dispatch thunk of AnyDimension.rawValue(in:)(v33, v6, &protocol witness table for StaticDimension);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
  if (qword_1002DCA10 != -1) {
    swift_once(&qword_1002DCA10, sub_1000AE15C);
  }
  uint64_t v35 = v55;
  uint64_t v36 = sub_1000061F4(v55, (uint64_t)qword_1002EFF60);
  uint64_t v37 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v5, v36, v35);
  uint64_t v39 = swift_getKeyPath(&unk_1002340E8, v38);
  ItemLayoutContext.subscript.getter(v12);
  swift_release(v39);
  double v41 = PageGrid.componentMeasuringSize(spanning:)(v40, 1.0);
  double v43 = v42;
  uint64_t v44 = ((uint64_t (*)(void *, uint64_t))v51)(v12, v54);
  uint64_t v45 = v56;
  __n128 v46 = AspectRatio.init(_:_:)(v44, v41);
  v47.n128_f64[0] = AspectRatio.horizontalFraction.getter(v46);
  if (AspectRatio.horizontalFraction.getter(v47) >= v47.n128_f64[0]) {
    double v43 = AspectRatio.height(fromWidth:)(v41);
  }
  else {
    AspectRatio.width(fromHeight:)(v43);
  }
  uint64_t v48 = *(void (**)(void, void))(v37 + 8);
  v48(v45, v35);
  v48(v5, v35);
  return v21 + v22 + v23 + v34 + v43;
}

_OWORD *sub_10001F61C(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

uint64_t sub_10001F658@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShelfLayoutContext.traitEnvironment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10001F680()
{
  return ShelfLayoutContext.contentPageGrid.getter();
}

void *sub_10001F6A0(void *a1)
{
  return a1;
}

uint64_t sub_10001F6D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShelfLayoutContext.traitCollection.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10001F700()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

void *sub_10001F730()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade34AppTrailerLockupCollectionViewCell_avatarShowcase);
  id v2 = v1;
  return v1;
}

void (*sub_10001F764(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100086770(v2);
  return sub_10000FDC0;
}

id sub_10001F7A8()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC6Arcade34MixedMediaLockupCollectionViewCell_mediaView) frame];
}

uint64_t sub_10001F7C4(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType(v2);
  uint64_t v6 = sub_100003B6C( (unint64_t *)&qword_1002DE760,  type metadata accessor for AppTrailerLockupCollectionViewCell,  (uint64_t)&unk_10023417C);
  return AvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(a1, a2, ObjectType, v6);
}

uint64_t sub_10001F824(uint64_t a1, uint64_t a2)
{
  return sub_10001F83C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.unapply());
}

uint64_t sub_10001F830(uint64_t a1, uint64_t a2)
{
  return sub_10001F83C( a1,  a2,  (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.placeAvatarShowcase());
}

uint64_t sub_10001F83C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v5 = sub_100003B6C( (unint64_t *)&qword_1002DE760,  type metadata accessor for AppTrailerLockupCollectionViewCell,  (uint64_t)&unk_10023417C);
  return a3(ObjectType, v5);
}

uint64_t sub_10001F894()
{
  return sub_100003B6C( &qword_1002DE758,  type metadata accessor for AppTrailerLockupCollectionViewCell,  (uint64_t)&unk_100234144);
}

uint64_t sub_10001F8C0()
{
  uint64_t v34 = type metadata accessor for PlatformSelectorViewLayout.Metrics.AccessoryAlignment(0LL);
  uint64_t v33 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v35 = (char *)v30 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v1 = type metadata accessor for FontSource(0LL);
  uint64_t v2 = *(void **)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for StaticDimension(0LL);
  uint64_t v6 = __chkstk_darwin(v5);
  id v32 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v31 = (char *)v30 - v9;
  __chkstk_darwin(v8);
  uint64_t v36 = (char *)v30 - v10;
  uint64_t v11 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0LL);
  sub_10000FF90(v11, qword_1002DE768);
  v30[1] = sub_1000061F4(v11, (uint64_t)qword_1002DE768);
  v41[3] = &type metadata for Double;
  v41[4] = &protocol witness table for Double;
  v41[0] = 0x4024000000000000LL;
  if (qword_1002DC628 != -1) {
    swift_once(&qword_1002DC628, sub_100071554);
  }
  uint64_t v13 = type metadata accessor for FontUseCase(0LL, v12);
  uint64_t v14 = sub_1000061F4(v13, (uint64_t)qword_1002EEEC8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16LL);
  v15(v4, v14, v13);
  uint64_t v16 = enum case for FontSource.useCase(_:);
  uint64_t v17 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v17(v4, enum case for FontSource.useCase(_:), v1);
  uint64_t v39 = (void *)v1;
  uint64_t v40 = &protocol witness table for FontSource;
  uint64_t v18 = sub_100009D54(v38);
  double v19 = (void (*)(void *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(v38, 46.0);
  double v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v15(v4, v14, v13);
  v17(v4, v16, v1);
  uint64_t v39 = (void *)v1;
  uint64_t v40 = &protocol witness table for FontSource;
  double v21 = sub_100009D54(v38);
  v19(v21, v4, v1);
  double v22 = v31;
  StaticDimension.init(_:scaledLike:)(v38, 46.0);
  v20(v4, v1);
  v15(v4, v14, v13);
  v17(v4, v16, v1);
  uint64_t v39 = (void *)v1;
  uint64_t v40 = &protocol witness table for FontSource;
  double v23 = sub_100009D54(v38);
  v19(v23, v4, v1);
  uint64_t v24 = v32;
  StaticDimension.init(_:scaledLike:)(v38, 10.0);
  v20(v4, v1);
  uint64_t v40 = &protocol witness table for Double;
  uint64_t v39 = &type metadata for Double;
  v38[0] = 0LL;
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  __n128 v28 = v35;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))( v35,  enum case for PlatformSelectorViewLayout.Metrics.AccessoryAlignment.inline(_:),  v34);
  v37[3] = &type metadata for Double;
  v37[4] = &protocol witness table for Double;
  v37[0] = 0x403E000000000000LL;
  return PlatformSelectorViewLayout.Metrics.init(badgeHorizontalPadding:textSpaceWhenInline:textSpaceWhenExclusiveLine:badgeSpaceExclusiveLine:accessoryHorizontalPadding:accessoryContentInsets:accessoryAlignment:bottomSpacer:)( v41,  v36,  v22,  v24,  v38,  v28,  v37,  UIEdgeInsetsZero.top,  left,  bottom,  right);
}

uint64_t sub_10001FC84()
{
  uint64_t v0 = type metadata accessor for BadgeDisplayStyle(0LL);
  sub_10000FF90(v0, qword_1002DE780);
  uint64_t v1 = sub_1000061F4(v0, (uint64_t)qword_1002DE780);
  *(void *)uint64_t v1 = 0LL;
  *(_BYTE *)(v1 + 8) = 1;
  return (*(uint64_t (**)(void))(*(void *)(v0 - 8) + 104LL))();
}

uint64_t sub_10001FCE8()
{
  uint64_t result = static UIColor.secondaryText.getter();
  qword_1002DE798 = result;
  return result;
}

char *sub_10001FD18(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v12 = type metadata accessor for FontUseCase(0LL, v11);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v16 = qword_1002DC628;
  uint64_t v17 = v5;
  if (v16 != -1) {
    swift_once(&qword_1002DC628, sub_100071554);
  }
  uint64_t v18 = sub_1000061F4(v12, (uint64_t)qword_1002EEEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v18, v12);
  *(void *)&v17[OBJC_IVAR____TtC6Arcade20PlatformSelectorView_descriptionLabel] = sub_1000137B8( (uint64_t)v15,  0LL,  4LL,  0,  0);

  v26.receiver = v17;
  v26.super_class = ObjectType;
  double v19 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v20 = OBJC_IVAR____TtC6Arcade20PlatformSelectorView_descriptionLabel;
  double v21 = *(void **)&v19[OBJC_IVAR____TtC6Arcade20PlatformSelectorView_descriptionLabel];
  uint64_t v22 = qword_1002DC3A0;
  double v23 = v19;
  id v24 = v21;
  if (v22 != -1) {
    swift_once(&qword_1002DC3A0, sub_10001FCE8);
  }
  [v24 setTextColor:qword_1002DE798];

  [v23 addSubview:*(void *)&v19[v20]];
  return v23;
}

uint64_t sub_10001FF5C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for BadgeDisplayStyle(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for PlatformSelectorViewLayout(0LL);
  uint64_t v23 = *(void *)(v13 - 8);
  uint64_t v24 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v31.receiver = v0;
  v31.super_class = ObjectType;
  uint64_t v25 = ObjectType;
  objc_msgSendSuper2(&v31, "layoutSubviews");
  if (qword_1002DC390 != -1) {
    swift_once(&qword_1002DC390, sub_10001F8C0);
  }
  uint64_t v16 = sub_1000061F4(v9, (uint64_t)qword_1002DE768);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
  if (qword_1002DC398 != -1) {
    swift_once(&qword_1002DC398, sub_10001FC84);
  }
  uint64_t v17 = sub_1000061F4(v5, (uint64_t)qword_1002DE780);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v17, v5);
  uint64_t v18 = *(void **)&v0[OBJC_IVAR____TtC6Arcade20PlatformSelectorView_descriptionLabel];
  v30[3] = type metadata accessor for DynamicTypeLabel(0LL);
  v30[4] = &protocol witness table for UILabel;
  uint64_t v29 = 0LL;
  v30[0] = v18;
  memset(v28, 0, sizeof(v28));
  id v19 = v18;
  PlatformSelectorViewLayout.init(metrics:style:descriptionLabel:accessoryImageView:)(v12, v8, v30, v28);
  __n128 v20 = LayoutMarginsAware<>.layoutFrame.getter(v25);
  PlatformSelectorViewLayout.placeChildren(relativeTo:in:)(v0, v20);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v15, v24);
}

uint64_t type metadata accessor for PlatformSelectorView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade20PlatformSelectorView);
}

uint64_t sub_10002022C()
{
  return ShelfLayoutContext.shelf.getter();
}

uint64_t sub_10002024C()
{
  return Shelf.contentType.getter();
}

uint64_t sub_10002026C()
{
  return Shelf.background.getter();
}

uint64_t sub_10002028C()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for GenericPageCollectionElementsObserver()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade37GenericPageCollectionElementsObserver);
}

uint64_t sub_1000202D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002050C(a1, a2, a4);
}

void sub_1000202DC(void *a1)
{
  uint64_t ObjectType = swift_getObjectType(a1);
  uint64_t v3 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyAvatarShowcaseDisplaying);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (v3) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = 0LL;
  }
  if (v5)
  {
    uint64_t v6 = swift_getObjectType(v5);
    id v7 = a1;
    dispatch thunk of AnyAvatarShowcaseDisplaying.unapply()(v6, v4);
  }

uint64_t sub_100020368(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for SectionBackgroundView();
  uint64_t result = swift_dynamicCastClass(a1, v15);
  if (result)
  {
    id v24 = a1;
    ShelfLayoutContext.shelf.getter();
    uint64_t v18 = a5;
    uint64_t KeyPath = swift_getKeyPath(&unk_1002342E0, v17);
    ReadOnlyLens.subscript.getter(KeyPath, v11);
    __n128 v20 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v20);
    uint64_t v21 = type metadata accessor for ObjectGraph(0LL);
    uint64_t v22 = swift_dynamicCastClassUnconditional(v18, v21, 0LL, 0LL, 0LL);
    sub_1001E197C((uint64_t)v10, v22);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  return result;
}

uint64_t sub_1000204EC()
{
  return Shelf.background.getter();
}

uint64_t sub_10002050C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a3;
  id v46 = a1;
  uint64_t v3 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  __chkstk_darwin(v3);
  double v43 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  __n128 v47 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v48 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t KeyPath = swift_getKeyPath(&unk_100234310, v18);
  ItemLayoutContext.subscript.getter(v17);
  __n128 v20 = swift_release(KeyPath);
  ItemLayoutContext.item.getter(v20);
  ReadOnlyLens.value.getter(v49, v11);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v22 = swift_getKeyPath(&unk_100234340, v21);
  ReadOnlyLens.subscript.getter(v22, v15);
  uint64_t v23 = v47;
  __n128 v24 = swift_release(v22);
  (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 16))(v23, v10, v5, v24);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v23, v5);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  if (v25 == enum case for Shelf.ContentType.informationContainer(_:)
    || v25 == enum case for Shelf.ContentType.reviewsContainer(_:))
  {
    v26(v10, v5);
  }

  else
  {
    v26(v23, v5);
    v26(v10, v5);
    uint64_t v28 = swift_getKeyPath(&unk_1002342E0, v27);
    uint64_t v29 = v43;
    ReadOnlyLens.subscript.getter(v28, v15);
    __n128 v30 = swift_release(v28);
    uint64_t v32 = v44;
    uint64_t v31 = v45;
    LODWORD(v28) = (*(uint64_t (**)(char *, uint64_t, __n128))(v44 + 88))(v29, v45, v30);
    int v33 = enum case for ShelfBackground.darkOverlay(_:);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    id v34 = v46;
    if ((_DWORD)v28 == v33) {
      [v46 setOverrideUserInterfaceStyle:2];
    }
    uint64_t ObjectType = swift_getObjectType(v34);
    uint64_t v36 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyAvatarShowcaseDisplaying);
    if (v36) {
      uint64_t v37 = v36;
    }
    else {
      uint64_t v37 = 0LL;
    }
    if (v36) {
      id v38 = v34;
    }
    else {
      id v38 = 0LL;
    }
    if (v38)
    {
      uint64_t v39 = swift_getObjectType(v38);
      id v40 = v34;
      dispatch thunk of AnyAvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(v49, v42, v39, v37);
    }
  }

  _s6Arcade17PillOverlayLayoutVwxx_0(v49);
  return (*(uint64_t (**)(void *, uint64_t))(v48 + 8))(v17, v15);
}

uint64_t sub_100020840()
{
  return ShelfLayoutContext.shelf.getter();
}

uint64_t sub_100020860()
{
  return Shelf.contentType.getter();
}

uint64_t sub_100020880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for GenericPageCollectionElementsObserver();
  uint64_t v7 = swift_allocObject(v6, 32LL, 7LL);
  *(void *)(v7 + 24) = 0LL;
  swift_unknownObjectWeakInit(v7 + 16, 0LL);
  *(void *)(v7 + 24) = a4;
  swift_unknownObjectWeakAssign(v8, a1);
  return v7;
}

int64x2_t sub_1000208DC()
{
  int64x2_t result = vdupq_n_s64(0x4051800000000000uLL);
  xmmword_1002EE5E0 = (__int128)result;
  return result;
}

id sub_1000208F4()
{
  id result =  [(id)objc_opt_self(UIImageSymbolConfiguration) configurationWithPointSize:4 weight:3 scale:53.0];
  qword_1002DE8A0 = (uint64_t)result;
  return result;
}

uint64_t sub_100020940()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for PrivacyTypeLayout.Metrics.HorizontalAlignment(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for PrivacyTypeLayout.Metrics(0LL);
  sub_10000FF90(v8, qword_1002EE5F0);
  uint64_t v25 = sub_1000061F4(v8, (uint64_t)qword_1002EE5F0);
  uint64_t v9 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  uint64_t v26 = v7;
  v9(v7, enum case for PrivacyTypeLayout.Metrics.HorizontalAlignment.center(_:), v4);
  v41[3] = &type metadata for Double;
  v41[4] = &protocol witness table for Double;
  v41[0] = 0x4056000000000000LL;
  if (qword_1002DC3A8 != -1) {
    swift_once(&qword_1002DC3A8, sub_1000208DC);
  }
  __int128 v11 = xmmword_1002EE5E0;
  if (qword_1002DC6D8 != -1) {
    swift_once(&qword_1002DC6D8, sub_100071770);
  }
  uint64_t v12 = type metadata accessor for FontUseCase(0LL, v10);
  uint64_t v13 = sub_1000061F4(v12, (uint64_t)qword_1002EF0D8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16LL);
  uint64_t v24 = v13;
  v23(v3, v13, v12);
  uint64_t v14 = enum case for FontSource.useCase(_:);
  uint64_t v15 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v15(v3, enum case for FontSource.useCase(_:), v0);
  uint64_t v16 = type metadata accessor for StaticDimension(0LL);
  v40[3] = v16;
  v40[4] = &protocol witness table for StaticDimension;
  sub_100009D54(v40);
  uint64_t v38 = v0;
  uint64_t v39 = &protocol witness table for FontSource;
  uint64_t v17 = sub_100009D54(v37);
  uint64_t v18 = (void (*)(void *, char *, uint64_t))v1[2];
  v18(v17, v3, v0);
  StaticDimension.init(_:scaledLike:)(v37, 60.0);
  id v19 = (void (*)(char *, uint64_t))v1[1];
  v19(v3, v0);
  v23(v3, v24, v12);
  v15(v3, v14, v0);
  uint64_t v38 = v16;
  uint64_t v39 = &protocol witness table for StaticDimension;
  sub_100009D54(v37);
  *((void *)&v35 + 1) = v0;
  uint64_t v36 = &protocol witness table for FontSource;
  __n128 v20 = sub_100009D54(&v34);
  v18(v20, v3, v0);
  StaticDimension.init(_:scaledLike:)(&v34, 38.0);
  v19(v3, v0);
  uint64_t v36 = 0LL;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  v33[4] = &protocol witness table for Double;
  v33[3] = &type metadata for Double;
  v32[4] = &protocol witness table for Double;
  v33[0] = 0x406CC00000000000LL;
  double v32[3] = &type metadata for Double;
  v31[4] = &protocol witness table for Double;
  v32[0] = 0x403C000000000000LL;
  v31[3] = &type metadata for Double;
  v30[4] = &protocol witness table for Double;
  v31[0] = 0x4034000000000000LL;
  v30[3] = &type metadata for Double;
  v29[4] = &protocol witness table for Double;
  v30[0] = 0x4028000000000000LL;
  void v29[3] = &type metadata for Double;
  v28[4] = &protocol witness table for Double;
  v29[0] = 0x403E000000000000LL;
  v28[3] = &type metadata for Double;
  void v27[4] = &protocol witness table for Double;
  v28[0] = 0x4030000000000000LL;
  v27[3] = &type metadata for Double;
  v27[0] = 0x4030000000000000LL;
  return PrivacyTypeLayout.Metrics.init(horizontalAlignment:iconTopSpace:iconSize:iconBaseline:titleTopSpace:detailTopSpace:maxTextWidth:minimumCategoriesColumnWidth:categoriesTopSpace:categoriesHorizontalPadding:categoriesBottomSpace:horizontalMargin:compactBottomMargin:regularBottomMargin:)( v26,  v41,  v40,  v37,  &v34,  v33,  v32,  v31,  *(double *)&v11,  *((double *)&v11 + 1),  0.0,  v30,  v29,  v28,  v27);
}

id sub_100020CC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PrivacyTypeStyle(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v32 - v7;
  id v9 = [v0 traitCollection];
  char v10 = UITraitCollection.prefersAccessibilityLayouts.getter();

  if ((v10 & 1) == 0)
  {
    __int128 v11 = &v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style];
    swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style], v39, 0LL, 0LL);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v11, v2);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for PrivacyTypeStyle.detailPage(_:), v2);
    unint64_t v12 = sub_100023338();
    dispatch thunk of RawRepresentable.rawValue.getter(&v37, v2, v12);
    dispatch thunk of RawRepresentable.rawValue.getter(&v35, v2, v12);
    uint64_t v13 = v38;
    uint64_t v14 = v36;
    if (v37 == v35 && v38 == v36)
    {
      swift_bridgeObjectRelease_n(v38, 2LL);
      uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
      v15(v6, v2);
      v15(v8, v2);
    }

    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, v35, v36, 0LL);
      swift_bridgeObjectRelease(v13);
      __n128 v17 = swift_bridgeObjectRelease(v14);
      uint64_t v18 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
      v18(v6, v2, v17);
      ((void (*)(char *, uint64_t))v18)(v8, v2);
      if ((v16 & 1) == 0)
      {
        [*(id *)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_titleLabel] setTextAlignment:1];
        [*(id *)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_detailLabel] setTextAlignment:1];
        return [v1 setNeedsLayout];
      }
    }
  }

  id v19 = *(_BYTE **)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_titleLabel];
  int v20 = v19[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v19[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v20 != 1)
  {
    id v21 = [v19 traitCollection];
    char v22 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v22 & 1) != 0) {
      uint64_t v23 = 2LL;
    }
    else {
      uint64_t v23 = 0LL;
    }
    uint64_t v24 = (objc_class *)type metadata accessor for DynamicTypeLabel(0LL);
    v34.receiver = v19;
    v34.super_class = v24;
    objc_msgSendSuper2(&v34, "setTextAlignment:", v23);
  }

  uint64_t v25 = *(_BYTE **)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_detailLabel];
  int v26 = v25[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v25[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v26 != 1)
  {
    id v27 = [v25 traitCollection];
    char v28 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v28 & 1) != 0) {
      uint64_t v29 = 2LL;
    }
    else {
      uint64_t v29 = 0LL;
    }
    __n128 v30 = (objc_class *)type metadata accessor for DynamicTypeLabel(0LL);
    v33.receiver = v25;
    v33.super_class = v30;
    objc_msgSendSuper2(&v33, "setTextAlignment:", v29);
  }

  return [v1 setNeedsLayout];
}

double sub_100020FE8()
{
  uint64_t v1 = type metadata accessor for PageGrid.Direction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000031E8(&qword_1002E5A20);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for PageGrid(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  sub_10001027C( (uint64_t)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_pageGrid],  (uint64_t)v7,  &qword_1002E5A20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1LL, v8) == 1)
  {
    sub_100006060((uint64_t)v7, &qword_1002E5A20);
    uint64_t v15 = *(void *)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_pageTraits];
    if (v15)
    {
      swift_getObjectType(*(void *)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_pageTraits]);
      swift_unknownObjectRetain(v15);
      double v16 = PageTraitEnvironment.pageContentSize.getter();
      swift_unknownObjectRelease(v15);
      return (v16 + -160.0) / 5.0 * 4.0 + 120.0;
    }

    else
    {
      id v23 = [v0 contentView];
      [v23 frame];

      *(void *)&v26.origin.x = CGRect.subtracting(insets:)([v0 layoutMargins]).n128_u64[0];
      return CGRectGetWidth(v26) * 0.5;
    }
  }

  else
  {
    uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    double v19 = PageGrid.containerWidth.getter(v18);
    double v20 = PageGrid.containerHeight.getter();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for PageGrid.Direction.vertical(_:), v1);
    static PageGrid.designGridD(direction:containerSize:)(v4, v19, v20);
    uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    double v17 = PageGrid.componentMeasuringSize(spanning:)(v21, 4.0);
    char v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v12, v8);
    v22(v14, v8);
  }

  return v17;
}

id sub_1000212A0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categories);
  if (!((unint64_t)v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    id result = (id)swift_bridgeObjectRetain(*(void *)(v0
                                                    + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categories));
    if (v2) {
      goto LABEL_3;
    }
    return objc_msgSend(v19, "setNeedsLayout", swift_bridgeObjectRelease(v1).n128_f64[0]);
  }

  if (v1 < 0) {
    uint64_t v18 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categories);
  }
  else {
    uint64_t v18 = v1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v1);
  id result = (id)_CocoaArrayWrapper.endIndex.getter(v18);
  uint64_t v2 = (uint64_t)result;
  if (!result) {
    return objc_msgSend(v19, "setNeedsLayout", swift_bridgeObjectRelease(v1).n128_f64[0]);
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0LL;
    uint64_t v5 = &v19[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryReusePool];
    uint64_t v6 = &v19[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews];
    do
    {
      if ((v1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      }

      else
      {
        uint64_t v7 = *(void *)(v1 + 8 * v4 + 32);
        swift_retain(v7);
      }

      swift_beginAccess(v5, v20, 33LL, 0LL);
      uint64_t v8 = sub_1000031E8(&qword_1002DE928);
      ReusePool.dequeue(or:)(&v21, sub_1000214D8, 0LL, v8);
      swift_endAccess(v20);
      uint64_t v9 = v21;
      uint64_t v10 = *(void *)&v21[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category];
      *(void *)&v21[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category] = v7;
      swift_retain_n(v7, 2LL);
      swift_release(v10);
      sub_1000245F8(v11, v12);
      id v13 = objc_msgSend(v19, "contentView", swift_release(v7).n128_f64[0]);
      [v13 addSubview:v9];

      swift_beginAccess(v6, v20, 33LL, 0LL);
      id v14 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      unint64_t v16 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v15 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v16 >= v15 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1LL);
      }
      ++v4;
      uint64_t v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
      specialized Array._endMutation()(v17);
      swift_endAccess(v20);

      swift_release(v7);
    }

    while (v2 != v4);
    return objc_msgSend(v19, "setNeedsLayout", swift_bridgeObjectRelease(v1).n128_f64[0]);
  }

  __break(1u);
  return result;
}

id sub_1000214D8@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for PrivacyCategoryView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *a1 = result;
  return result;
}

id sub_100021520()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CornerStyle(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v65 - v10;
  uint64_t v12 = type metadata accessor for PrivacyTypeStyle(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v16 = &v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style], v72, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v16, v12);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v17 == enum case for PrivacyTypeStyle.productPage(_:))
  {
    uint64_t v66 = v3;
    uint64_t v67 = v2;
    uint64_t v19 = *(void *)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_titleLabel];
    if (qword_1002DC6D8 != -1) {
      swift_once(&qword_1002DC6D8, sub_100071770);
    }
    uint64_t v20 = type metadata accessor for FontUseCase(0LL, v18);
    uint64_t v21 = sub_1000061F4(v20, (uint64_t)qword_1002EF0D8);
    uint64_t v22 = *(void *)(v20 - 8);
    id v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v23(v11, v21, v20);
    uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56);
    v24(v11, 0LL, 1LL, v20);
    uint64_t v25 = v19 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase;
    swift_beginAccess(v19 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase, v71, 0LL, 0LL);
    sub_10001027C(v25, (uint64_t)v8, &qword_1002DE930);
    swift_beginAccess(v25, v73, 33LL, 0LL);
    sub_10000FF48((uint64_t)v11, v25);
    swift_endAccess(v73);
    sub_100013DC8((uint64_t)v8);
    sub_100006060((uint64_t)v11, &qword_1002DE930);
    sub_100006060((uint64_t)v8, &qword_1002DE930);
    uint64_t v26 = *(void *)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_detailLabel];
    if (qword_1002DC6E8 != -1) {
      swift_once(&qword_1002DC6E8, sub_1000717A0);
    }
    uint64_t v27 = sub_1000061F4(v20, (uint64_t)qword_1002EF108);
    v23(v11, v27, v20);
    v24(v11, 0LL, 1LL, v20);
    uint64_t v28 = v26 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase;
    swift_beginAccess(v26 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase, v70, 0LL, 0LL);
    sub_10001027C(v28, (uint64_t)v8, &qword_1002DE930);
    swift_beginAccess(v28, v73, 33LL, 0LL);
    sub_10000FF48((uint64_t)v11, v28);
    swift_endAccess(v73);
    sub_100013DC8((uint64_t)v8);
    sub_100006060((uint64_t)v11, &qword_1002DE930);
    sub_100006060((uint64_t)v8, &qword_1002DE930);
    uint64_t v29 = v66;
    uint64_t v30 = v67;
    (*(void (**)(char *, void, uint64_t))(v66 + 104))(v5, enum case for CornerStyle.continuous(_:), v67);
    id v31 = [v1 contentView];
    CornerStyle.apply(withRadius:to:)(v31, 12.0);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
    uint64_t v32 = &v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
    __n128 v34 = *(__n128 *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
    v78[0] = *(__n128 *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
    __n128 v33 = v78[0];
    v78[1] = v34;
    char v79 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
    *(void *)uint64_t v32 = 0x4020000000000000LL;
    *((void *)v32 + 1) = 0x4039000000000000LL;
    v32[16] = 0;
    *((void *)v32 + 3) = 0LL;
    _BYTE v32[32] = 1;
    sub_1000690F4((uint64_t)v78, v33, v34);
    v73[0] = xmmword_100233760;
    v73[1] = xmmword_100233770;
    char v74 = 0;
    uint64_t v75 = 0LL;
    uint64_t v76 = 0LL;
    char v77 = 1;
    sub_10006779C(v73);
    id v35 = [(id)objc_opt_self(UIColor) blackColor];
    id v36 = [v35 CGColor];

    uint64_t v37 = &v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
    uint64_t v38 = *(void **)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
    uint64_t v39 = *(void **)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
    id v40 = *(void **)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
    *(void *)uint64_t v37 = v36;
    *(int64x2_t *)(v37 + 8) = vdupq_n_s64(1uLL);
    id v41 = v38;
    sub_10000AAF8(v39);
    sub_10000AAF8(v40);
    id v42 = v36;

    sub_10000AB08(v39);
    sub_10000AB08(v40);
    sub_100069248(v38, v39, (unint64_t)v40);

    sub_10000AB08(v39);
    sub_10000AB08(v40);
    double v43 = &v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
    v44.n128_u32[0] = *(_DWORD *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
    int v45 = *(_DWORD *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
    unsigned __int8 v46 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
    char v47 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
    *(_DWORD *)double v43 = 1048576000;
    *((_DWORD *)v43 + 1) = 1051931443;
    v43[8] = 0;
    uint64_t v48 = *((unsigned int *)v43 + 3);
    *((_DWORD *)v43 + 3) = 0;
    v43[16] = 1;
    unsigned __int8 v69 = v46;
    char v68 = v47;
    sub_1000693B0(v45, v46 | (unint64_t)(v48 << 32), v47, v44);
    char v49 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
    v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 1;
    if ((v49 & 1) == 0) {
      sub_1000678F0(v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state]);
    }
  }

  else
  {
    if (v17 != enum case for PrivacyTypeStyle.intermediateDetailPage(_:)
      && v17 != enum case for PrivacyTypeStyle.detailPage(_:))
    {
      id result = (id)_diagnoseUnexpectedEnumCase<A>(type:)(v12, v12);
      __break(1u);
      return result;
    }

    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for CornerStyle.continuous(_:), v2);
    id v51 = [v1 contentView];
    CornerStyle.apply(withRadius:to:)(v51, 0.0);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    int v53 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
    v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 0;
    if (v53 == 1) {
      sub_1000678F0(v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state]);
    }
    uint64_t v54 = *(void *)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_titleLabel];
    if (qword_1002DC6E0 != -1) {
      swift_once(&qword_1002DC6E0, sub_100071788);
    }
    uint64_t v55 = type metadata accessor for FontUseCase(0LL, v52);
    uint64_t v56 = sub_1000061F4(v55, (uint64_t)qword_1002EF0F0);
    uint64_t v57 = *(void *)(v55 - 8);
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
    v58(v11, v56, v55);
    uint64_t v59 = *(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56);
    v59(v11, 0LL, 1LL, v55);
    uint64_t v60 = v54 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase;
    swift_beginAccess(v54 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase, v73, 0LL, 0LL);
    sub_10001027C(v60, (uint64_t)v8, &qword_1002DE930);
    swift_beginAccess(v60, v78, 33LL, 0LL);
    sub_10000FF48((uint64_t)v11, v60);
    swift_endAccess(v78);
    sub_100013DC8((uint64_t)v8);
    sub_100006060((uint64_t)v11, &qword_1002DE930);
    sub_100006060((uint64_t)v8, &qword_1002DE930);
    uint64_t v61 = *(void *)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_detailLabel];
    if (qword_1002DC6F0 != -1) {
      swift_once(&qword_1002DC6F0, sub_1000717B8);
    }
    uint64_t v62 = sub_1000061F4(v55, (uint64_t)qword_1002EF120);
    v58(v11, v62, v55);
    v59(v11, 0LL, 1LL, v55);
    uint64_t v63 = v61 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase;
    swift_beginAccess(v61 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase, v78, 0LL, 0LL);
    sub_10001027C(v63, (uint64_t)v8, &qword_1002DE930);
    swift_beginAccess(v63, v71, 33LL, 0LL);
    sub_10000FF48((uint64_t)v11, v63);
    swift_endAccess(v71);
    sub_100013DC8((uint64_t)v8);
    sub_100006060((uint64_t)v11, &qword_1002DE930);
    sub_100006060((uint64_t)v8, &qword_1002DE930);
  }

  sub_100020CC8();
  sub_10006734C(v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state], 0LL);
  return [v1 setNeedsLayout];
}

uint64_t sub_100021D8C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  __chkstk_darwin(v2);
  uint64_t v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for PrivacyTypeStyle(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for PrivacyTypeLayout.Metrics(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v35 = v10;
  uint64_t v11 = type metadata accessor for PrivacyTypeLayout(0LL);
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v38 = v11;
  __chkstk_darwin(v11);
  id v36 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v55.receiver = v0;
  v55.super_class = ObjectType;
  objc_msgSendSuper2(&v55, "layoutSubviews");
  uint64_t v13 = *(void *)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_artwork];
  uint64_t v14 = &v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style], v54, 0LL, 0LL);
  unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v15(v7, v14, v4);
  swift_retain(v13);
  double v16 = sub_100020FE8();
  id v17 = [v0 traitCollection];
  sub_10002210C(v13, (uint64_t)v7, (uint64_t)v17, (uint64_t)v10, v16);
  swift_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v53 = 0LL;
  memset(v52, 0, sizeof(v52));
  uint64_t v51 = 0LL;
  memset(v50, 0, sizeof(v50));
  uint64_t v49 = 0LL;
  memset(v48, 0, sizeof(v48));
  uint64_t v18 = *(void **)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_iconView];
  v47[3] = type metadata accessor for ArtworkView(0LL);
  v47[4] = protocol witness table for UIView;
  v47[0] = v18;
  uint64_t v19 = *(void **)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_titleLabel];
  uint64_t v45 = type metadata accessor for DynamicTypeLabel(0LL);
  unsigned __int8 v46 = &protocol witness table for UILabel;
  v43[4] = &protocol witness table for UILabel;
  __n128 v44 = v19;
  uint64_t v20 = *(void **)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_detailLabel];
  v43[3] = v45;
  v43[0] = v20;
  uint64_t v21 = &v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews], &v42, 0LL, 0LL);
  uint64_t v22 = *(void *)v21;
  id v23 = v18;
  id v24 = v19;
  id v25 = v20;
  uint64_t v26 = swift_bridgeObjectRetain(v22);
  uint64_t v27 = sub_10005A1F0(v26);
  __n128 v28 = swift_bridgeObjectRelease(v22);
  ((void (*)(char *, char *, uint64_t, __n128))v15)(v7, v14, v4, v28);
  uint64_t v29 = v36;
  PrivacyTypeLayout.init(metrics:shadowView:backgroundView:separatorView:iconView:titleLabel:detailLabel:categoryViews:style:)( v35,  v52,  v50,  v48,  v47,  &v44,  v43,  v27,  v7);
  id v30 = [v0 contentView];
  [v30 frame];

  __n128 v31 = CGRect.subtracting(insets:)([v0 layoutMargins]);
  uint64_t v32 = v39;
  PrivacyTypeLayout.placeChildren(relativeTo:in:)(v0, v31);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v29, v38);
}

uint64_t sub_10002210C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  v33[1] = a3;
  uint64_t v34 = a2;
  uint64_t v8 = type metadata accessor for PrivacyTypeLayout.Metrics.HorizontalAlignment(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v33 - v13;
  uint64_t v15 = type metadata accessor for PrivacyTypeStyle(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC3B8 != -1) {
    swift_once(&qword_1002DC3B8, sub_100020940);
  }
  uint64_t v19 = type metadata accessor for PrivacyTypeLayout.Metrics(0LL);
  uint64_t v20 = sub_1000061F4(v19, (uint64_t)qword_1002EE5F0);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16LL))(a4, v20, v19);
  if (a1)
  {
    v33[0] = v8;
    __n128 v22 = swift_retain(a1);
    if ((dispatch thunk of Artwork.isLocalImage.getter(v22) & 1) != 0)
    {
      if (qword_1002DC3B0 != -1) {
        swift_once(&qword_1002DC3B0, sub_1000208F4);
      }
      uint64_t v23 = qword_1002DE8A0;
      if ((dispatch thunk of Artwork.isSystemImage.getter() & 1) != 0)
      {
        id v24 = (void *)static SystemImage.load(artwork:with:includePrivateImages:)(a1, v23, 1LL);
        if (!v24) {
          goto LABEL_15;
        }
      }

      else
      {
        if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) == 0) {
          goto LABEL_15;
        }
        type metadata accessor for BundleImage(0LL);
        id v24 = (void *)static BundleImage.load(artwork:with:)(a1, v23);
        if (!v24) {
          goto LABEL_15;
        }
      }

      uint64_t v25 = PrivacyTypeLayout.Metrics.iconSize.setter([v24 size]);
      v26.n128_u64[0] = UIImage.baselineOffsetFromBottom.getter(v25);
      if ((v27 & 1) != 0) {
        v26.n128_f64[0] = 0.0;
      }
      PrivacyTypeLayout.Metrics.iconBaseline.setter(v26);
    }

LABEL_15:
    swift_release(a1);
    uint64_t v8 = v33[0];
  }

  char v28 = UITraitCollection.prefersAccessibilityLayouts.getter(v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v34, v15);
  int v29 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v29 == enum case for PrivacyTypeStyle.productPage(_:))
  {
    id v30 = (unsigned int *)&enum case for PrivacyTypeLayout.Metrics.HorizontalAlignment.leading(_:);
    if ((v28 & 1) == 0) {
      id v30 = (unsigned int *)&enum case for PrivacyTypeLayout.Metrics.HorizontalAlignment.center(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v14, *v30, v8);
    PrivacyTypeLayout.Metrics.horizontalAlignment.setter(v14);
    id v36 = &type metadata for Double;
    uint64_t v37 = &protocol witness table for Double;
    v35[0] = 0x4056000000000000LL;
    PrivacyTypeLayout.Metrics.iconTopSpace.setter(v35);
    id v36 = &type metadata for Double;
    uint64_t v37 = &protocol witness table for Double;
    v35[0] = 0x4030000000000000LL;
    PrivacyTypeLayout.Metrics.regularBottomMargin.setter(v35);
    id v36 = &type metadata for Double;
    uint64_t v37 = &protocol witness table for Double;
    v35[0] = 0x4030000000000000LL;
    return PrivacyTypeLayout.Metrics.compactBottomMargin.setter(v35);
  }

  else if (v29 == enum case for PrivacyTypeStyle.intermediateDetailPage(_:) {
         || v29 == enum case for PrivacyTypeStyle.detailPage(_:))
  }
  {
    (*(void (**)(char *, void, uint64_t))(v9 + 104))( v12,  enum case for PrivacyTypeLayout.Metrics.HorizontalAlignment.leading(_:),  v8);
    PrivacyTypeLayout.Metrics.horizontalAlignment.setter(v12);
    id v36 = &type metadata for Double;
    uint64_t v37 = &protocol witness table for Double;
    v35[0] = 0x4052400000000000LL;
    PrivacyTypeLayout.Metrics.iconTopSpace.setter(v35);
    id v36 = &type metadata for Double;
    uint64_t v37 = &protocol witness table for Double;
    v35[0] = 0x403E000000000000LL;
    PrivacyTypeLayout.Metrics.regularBottomMargin.setter(v35);
    id v36 = &type metadata for Double;
    uint64_t v37 = &protocol witness table for Double;
    v35[0] = 0x403E000000000000LL;
    PrivacyTypeLayout.Metrics.compactBottomMargin.setter(v35);
    id v36 = &type metadata for CGFloat;
    uint64_t v37 = &protocol witness table for CGFloat;
    *(double *)id v35 = a5;
    return PrivacyTypeLayout.Metrics.maxTextWidth.setter(v35);
  }

  else
  {
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
    __break(1u);
  }

  return result;
}

      sub_100006060((uint64_t)v12, (uint64_t *)&unk_1002DF9D0);
      v54.origin.x = v22;
      v54.origin.y = v24;
      v54.size.width = v26;
      v54.size.height = v28;
      MidX = v30 * 0.5 + CGRectGetMinX(v54);
      goto LABEL_10;
    }

    if (v38 == enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.center(_:))
    {
      v53.origin.x = v22;
      v53.origin.y = v24;
      v53.size.width = v26;
      v53.size.height = v28;
      MidX = CGRectGetMidX(v53);
      goto LABEL_9;
    }

    if (v38 == enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.trailing(_:))
    {
      unsigned __int8 v46 = [v1 traitCollection];
      char v47 = [v46 layoutDirection];

      if (v47 != (id)1)
      {
        uint64_t v48 = [v1 traitCollection];
        uint64_t v49 = [v48 layoutDirection];

        if (v49 != (id)1)
        {
LABEL_18:
          sub_100006060((uint64_t)v12, (uint64_t *)&unk_1002DF9D0);
          v55.origin.x = v22;
          v55.origin.y = v24;
          v55.size.width = v26;
          v55.size.height = v28;
          MidX = CGRectGetMaxX(v55) + v30 * -0.5;
          goto LABEL_10;
        }

        goto LABEL_8;
      }

      goto LABEL_15;
    }

    (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v36);
  }

  else
  {
    double v43 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56LL))(v12, 1LL, 1LL, v43);
  }

    v24();
    goto LABEL_16;
  }

  double v87 = v16;
  id v30 = [v17 connectedBluetoothRemote];
  if (v30)
  {
    __n128 v31 = v30;
    uint64_t v32 = (char *)[v30 remoteType] - 1;

    if ((unint64_t)v32 <= 1)
    {
      v24();
LABEL_22:
      double v43 = (uint64_t)v87;
      return sub_100006060(v43, &qword_1002DFEA8);
    }
  }

  uint64_t v34 = v18;
  v45._uint64_t countAndFlagsBits = 0xD000000000000023LL;
  v45._object = (void *)0x8000000100245C30LL;
  v46._uint64_t countAndFlagsBits = 0LL;
  v46._object = (void *)0xE000000000000000LL;
  char v47 = localizedString(_:comment:)(v45, v46);
  object = v47._object;
  uint64_t countAndFlagsBits = v47._countAndFlagsBits;
  v48._uint64_t countAndFlagsBits = 0xD000000000000029LL;
  v48._object = (void *)0x8000000100245C60LL;
  v49._uint64_t countAndFlagsBits = 0LL;
  v49._object = (void *)0xE000000000000000LL;
  uint64_t v50 = localizedStringReferencingSiriRemote(_:comment:)(v48, v49);
  uint64_t v83 = v50._object;
  id v84 = v50._countAndFlagsBits;
  v51._object = (void *)0x8000000100245C90LL;
  v51._uint64_t countAndFlagsBits = 0xD000000000000020LL;
  v52._uint64_t countAndFlagsBits = 0LL;
  v52._object = (void *)0xE000000000000000LL;
  uint64_t v53 = localizedString(_:comment:)(v51, v52);
  uint64_t v54 = v53._countAndFlagsBits;
  objc_super v55 = v53._object;
  char v28 = v25;
LABEL_26:
  unsigned __int8 v69 = v91;
  char v68 = v92;
  uint64_t v70 = v88;
  sub_100006060((uint64_t)v87, &qword_1002DFEA8);
  id v71 = sub_1000031E8(&qword_1002DFEB0);
  uint64_t v72 = swift_allocObject(v71, 72LL, 7LL);
  *(_OWORD *)(v72 + sub_100015B48(v0 + 16) = xmmword_100233580;
  uint64_t v73 = swift_allocObject(&unk_100282E48, 32LL, 7LL);
  *(void *)(v73 + sub_100015B48(v0 + 16) = v24;
  *(void *)(v73 + 24) = v28;
  *(void *)(v72 + 32) = v54;
  *(void *)(v72 + 40) = v55;
  *(void *)(v72 + 48) = 0LL;
  *(void *)(v72 + 56) = sub_100061B54;
  *(void *)(v72 + 64) = v73;
  swift_retain_n(v28, 2LL);
  char v74 = swift_bridgeObjectRetain(v55);
  uint64_t v75 = v90;
  static ActionMetrics.notInstrumented.getter(v74);
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v70, enum case for AlertActionStyle.normal(_:), v69);
  uint64_t v76 = type metadata accessor for AlertAction(0LL);
  swift_allocObject(v76, *(unsigned int *)(v76 + 48), *(unsigned __int16 *)(v76 + 52));
  char v77 = AlertAction.init(title:message:isCancelable:cancelTitle:cancelAction:buttonActions:destructiveActionIndex:style:artwork:toastDuration:presentationStyle:actionMetrics:)( countAndFlagsBits,  object,  v84,  v83,  1LL,  0LL,  0LL,  0LL,  v72,  0LL,  1,  v70,  0LL,  0LL,  1,  0LL,  v75);
  double v78 = v34 + 80;
  char v79 = *(void *)(v34 + 16);
  uint64_t v81 = v93;
  double v80 = v94;
  (*(void (**)(char *, void, uint64_t))(v68 + 104))( v94,  enum case for ActionRunner.Origin.userInitiated(_:),  v93);
  dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v77, v78, v80, v79);
  swift_release(v28);
  swift_bridgeObjectRelease(v55);
  uint64_t v82 = swift_release(v77);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v68 + 8))(v80, v81, v82);
}

          __break(1u);
          goto LABEL_16;
        }
      }

      else
      {
        __break(1u);
      }

      __break(1u);
      goto LABEL_15;
    }
  }

  __break(1u);
}

      __break(1u);
    }
  }

  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

  id v24 = type metadata accessor for Artwork(0LL);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

  if (*((_BYTE *)v5 + OBJC_IVAR____TtC6Arcade17DynamicTypeButton_imageAlignment) == 1)
  {
    uint64_t v57 = [v5 traitCollection];
    uint64_t v58 = UITraitCollection.prefersRightToLeftLayouts.getter();

    uint64_t v59 = v63;
    if ((v58 & 1) != 0)
    {
      v72.origin.x = v23;
      v72.origin.y = v25;
      v72.size.width = v27;
      v72.size.height = v29;
      CGRectGetMinX(v72);
      [v5 imageEdgeInsets];
      v73.origin.x = v16;
      v73.origin.y = v18;
      v73.size.width = v20;
      v73.size.height = v59;
      CGRectGetWidth(v73);
    }

    else
    {
      v74.origin.x = v16;
      v74.origin.y = v18;
      v74.size.width = v20;
      v74.size.height = v63;
      CGRectGetMinX(v74);
      v75.size.height = v29;
      v75.origin.x = v23;
      v75.origin.y = v25;
      v75.size.width = v27;
      CGRectGetWidth(v75);
      [v5 imageEdgeInsets];
    }
  }

  if (*((_BYTE *)v5 + OBJC_IVAR____TtC6Arcade17DynamicTypeButton_imageAlignment) == 1)
  {
    v62.receiver = v5;
    v62.super_class = v14;
    objc_msgSendSuper2(&v62, "imageRectForContentRect:", a1, a2, a3, a4);
    uint64_t v45 = v44;
    char v47 = v46;
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v52 = [v5 traitCollection];
    uint64_t v53 = UITraitCollection.prefersRightToLeftLayouts.getter();

    uint64_t v54 = v45;
    objc_super v55 = v47;
    uint64_t v56 = v49;
    uint64_t v57 = v51;
    if ((v53 & 1) != 0)
    {
      CGRectGetMaxX(*(CGRect *)&v54);
      v66.origin.x = v16;
      v66.origin.y = v18;
      v66.size.width = v20;
      v66.size.height = v22;
      CGRectGetWidth(v66);
      [v5 imageEdgeInsets];
    }

    else
    {
      CGRectGetMinX(*(CGRect *)&v54);
      [v5 imageEdgeInsets];
    }
  }

  uint64_t v20 = [v3 standardUserDefaults];
  static String._unconditionallyBridgeFromObjectiveC(_:)(SSAutoPlayVideoSettingOff);
  __n128 v22 = v21;
  uint64_t v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  id v24 = String._bridgeToObjectiveC()();
  [v20 setObject:v23 forKey:v24];

  uint64_t v25 = [v3 standardUserDefaults];
  __n128 v26 = String._bridgeToObjectiveC()();
  [v25 setBool:1 forKey:v26];

  char v27 = [v3 standardUserDefaults];
  char v28 = String._bridgeToObjectiveC()();
  [v27 setBool:0 forKey:v28];
  int v29 = v53;
LABEL_22:

  char v47 = [v3 standardUserDefaults];
  uint64_t v48 = String._bridgeToObjectiveC()();
  [v47 setBool:v29 forKey:v48];

  uint64_t v49 = [v3 standardUserDefaults];
  uint64_t v50 = String._bridgeToObjectiveC()();
  [v49 setBool:v52 forKey:v50];

LABEL_23:
  sub_100115A68(v0);
}

    ++v11;
  }

  while (v9 != v11);
  swift_bridgeObjectRelease(a2);
  if (v6)
  {
    uint64_t v41 = (void *)objc_opt_self(&OBJC_CLASS___CABasicAnimation);
    swift_bridgeObjectRetain(a2);
    uint64_t v42 = 0LL;
    do
    {
      if (v64) {
        double v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v42, a2);
      }
      else {
        double v43 = *(id *)(a2 + 8 * v42 + 32);
      }
      __n128 v44 = v43;
      ++v42;
      uint64_t v45 = String._bridgeToObjectiveC()();
      unsigned __int8 v46 = [v41 animationWithKeyPath:v45];

      char v47 = [v44 layer];
      [v47 shadowOpacity];

      Class isa = Float._bridgeToObjectiveC()().super.super.isa;
      [v46 setFromValue:isa];

      uint64_t v49 = Float._bridgeToObjectiveC()().super.super.isa;
      [v46 setToValue:v49];

      uint64_t v50 = v46;
      [v62 inheritedAnimationDuration];
      [v50 setDuration:v51 * 0.5];

      uint64_t v52 = [v44 layer];
      *(float *)&uint64_t v53 = v3;
      [v52 setShadowOpacity:v53];

      uint64_t v54 = [v44 layer];
      objc_super v55 = String._bridgeToObjectiveC()();
      [v54 addAnimation:v50 forKey:v55];
    }

    while (v63 != v42);
  }

  else
  {
    swift_bridgeObjectRetain(a2);
    uint64_t v56 = 0LL;
    do
    {
      if (v64) {
        uint64_t v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v56, a2);
      }
      else {
        uint64_t v57 = *(id *)(a2 + 8 * v56 + 32);
      }
      uint64_t v58 = v57;
      ++v56;
      uint64_t v59 = [v57 layer];
      *(float *)&uint64_t v60 = v3;
      [v59 setShadowOpacity:v60];
    }

    while (v63 != v56);
  }

    goto LABEL_16;
  }

  if (!v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v6 = type metadata accessor for InsetCollectionViewControllerContentView();
  uint64_t v7 = swift_dynamicCastClass(v5, v6);
  if (!v7)
  {

    goto LABEL_14;
  }

  uint64_t v8 = 0;
LABEL_10:
  *(_BYTE *)(v7
           + OBJC_IVAR____TtC6ArcadeP33_46F848842F8214BA3C0F4A913BA0E21B40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = v8;

  uint64_t v12 = [v1 collectionViewLayout];
  uint64_t v10 = type metadata accessor for CollectionViewTableFlowLayout();
  uint64_t v11 = (void *)swift_dynamicCastClass(v12, v10);
  if (v11) {
    [v11 invalidateLayout];
  }
}

    uint64_t v4 = 0LL;
    goto LABEL_16;
  }

  if (*(void *)((v6 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    uint64_t v9 = *(void *)(v6 + 32);
    swift_retain(v9);
    goto LABEL_8;
  }

  __break(1u);
  return result;
}

    uint64_t v14 = 0x4044000000000000LL;
    goto LABEL_16;
  }

  uint64_t v14 = 0x404E000000000000LL;
LABEL_16:
  uint64_t v15 = *(double *)&v14;
LABEL_17:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v15;
}

uint64_t sub_100022524()
{
  uint64_t v1 = type metadata accessor for PrivacyTypeStyle(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style;
  swift_beginAccess(v8, v21, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v7, v8, v1);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for PrivacyTypeStyle.productPage(_:), v1);
  unint64_t v9 = sub_100023338();
  dispatch thunk of RawRepresentable.rawValue.getter(&v19, v1, v9);
  dispatch thunk of RawRepresentable.rawValue.getter(&v17, v1, v9);
  uint64_t v10 = v20;
  uint64_t v11 = v18;
  if (v19 == v17 && v20 == v18)
  {
    char v12 = 1;
    uint64_t v11 = v20;
  }

  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v17, v18, 0LL);
  }

  swift_bridgeObjectRelease(v10);
  __n128 v13 = swift_bridgeObjectRelease(v11);
  uint64_t v14 = *(void (**)(char *, uint64_t, __n128))(v2 + 8);
  v14(v5, v1, v13);
  ((void (*)(char *, uint64_t))v14)(v7, v1);
  return v12 & 1;
}

void sub_10002276C(char a1)
{
  uint64_t v3 = type metadata accessor for PrivacyTypeStyle(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = &v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style], v15, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v8 == enum case for PrivacyTypeStyle.productPage(_:))
  {
    id v9 = [v1 contentView];
    if (qword_1002DC448 != -1) {
      swift_once(&qword_1002DC448, sub_100049F68);
    }
    uint64_t v10 = (void *)qword_1002EE740;
    if (a1)
    {
      uint64_t v11 = qword_1002EE748;
      if (!qword_1002EE748) {
        uint64_t v11 = qword_1002EE740;
      }
      if (qword_1002EE750) {
        uint64_t v10 = (void *)qword_1002EE750;
      }
      if (a1 == 1) {
        uint64_t v10 = (void *)v11;
      }
    }

    id v12 = v10;
    [v9 setBackgroundColor:v12];
  }

  else
  {
    if (v8 != enum case for PrivacyTypeStyle.intermediateDetailPage(_:)
      && v8 != enum case for PrivacyTypeStyle.detailPage(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)(v3, v3);
      __break(1u);
      return;
    }

    id v9 = [v1 contentView];
    [v9 setBackgroundColor:0];
  }
}

double sub_10002292C@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xBFE8000000000000LL;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0LL;
  *(_BYTE *)(a1 + 48) = 1;
  return result;
}

id sub_100022950()
{
  uint64_t v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v9, "prepareForReuse");
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_titleLabel];
  id v3 = [v2 text];
  if (v3)
  {

    [v2 setText:0];
    [v1 setNeedsLayout];
  }

  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_detailLabel];
  id v5 = [v4 text];
  if (v5)
  {

    [v4 setText:0];
    [v1 setNeedsLayout];
  }

  v10.value.super.Class isa = 0LL;
  v10.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v10, v6);
  sub_100023194();
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categories];
  *(void *)&v1[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categories] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v7);
  return sub_1000212A0();
}

uint64_t sub_100022AA8(uint64_t a1)
{
  uint64_t v2 = v1;
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", a1);
  id v4 = [v1 traitCollection];
  int v5 = UITraitCollection.prefersAccessibilityLayouts.getter(v4);

  if (!a1) {
    return (uint64_t)sub_100020CC8();
  }
  id v7 = [v2 traitCollection];
  int v8 = UITraitCollection.prefersRightToLeftLayouts.getter() & 1;

  uint64_t result = UITraitCollection.prefersRightToLeftLayouts.getter();
  if ((result & 1) != v8) {
    return (uint64_t)sub_100020CC8();
  }
  return result;
}

uint64_t sub_100022D38()
{
  sub_100006060( v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_itemLayoutContext,  (uint64_t *)&unk_1002DDB60);
  swift_unknownObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_pageTraits));
  sub_100006060(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_pageGrid, &qword_1002E5A20);
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_artwork));
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews));
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categories));
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryReusePool;
  uint64_t v2 = sub_1000031E8(&qword_1002DE928);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style;
  uint64_t v4 = type metadata accessor for PrivacyTypeStyle(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
}

uint64_t sub_100022F4C()
{
  return type metadata accessor for PrivacyTypeCollectionViewCell(0LL);
}

uint64_t type metadata accessor for PrivacyTypeCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DE8F0;
  if (!qword_1002DE8F0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PrivacyTypeCollectionViewCell);
  }
  return result;
}

void sub_100022F90(uint64_t a1)
{
  v10[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100023098( 319LL,  (unint64_t *)&qword_1002DE900,  (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v10[3] = *(void *)(v2 - 8) + 64LL;
    v10[4] = "\b";
    sub_100023098( 319LL,  (unint64_t *)&unk_1002E59F0,  (uint64_t (*)(uint64_t))&type metadata accessor for PageGrid);
    if (v5 <= 0x3F)
    {
      v10[5] = *(void *)(v4 - 8) + 64LL;
      v10[6] = "\b";
      v10[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_1000230E4(319LL);
      if (v7 <= 0x3F)
      {
        v10[9] = *(void *)(v6 - 8) + 64LL;
        uint64_t v8 = type metadata accessor for PrivacyTypeStyle(319LL);
        if (v9 <= 0x3F)
        {
          v10[10] = *(void *)(v8 - 8) + 64LL;
          swift_updateClassMetadata2(a1, 256LL, 11LL, v10, a1 + 472);
        }
      }
    }
  }

void sub_100023098(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*a2)
  {
    uint64_t v5 = a3(255LL);
    unint64_t v6 = type metadata accessor for Optional(a1, v5);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }

void sub_1000230E4(uint64_t a1)
{
  if (!qword_1002DE910)
  {
    uint64_t v2 = sub_100003274(&qword_1002DE918);
    unint64_t v3 = sub_100023148();
    unint64_t v4 = type metadata accessor for ReusePool(a1, v2, v3);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_1002DE910);
    }
  }

unint64_t sub_100023148()
{
  unint64_t result = qword_1002DE920;
  if (!qword_1002DE920)
  {
    uint64_t v1 = sub_100003274(&qword_1002DE918);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DE920);
  }

  return result;
}

void sub_100023194()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews);
  swift_beginAccess(v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews, v17, 1LL, 0LL);
  uint64_t v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease(v2);
    uint64_t v14 = *v1;
    uint64_t *v1 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v14);
    return;
  }

  if (v2 < 0) {
    uint64_t v13 = *v1;
  }
  else {
    uint64_t v13 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v1);
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v4 = 0LL;
    uint64_t v5 = v0 + OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryReusePool;
    do
    {
      if ((v2 & 0xC000000000000001LL) != 0) {
        unint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      }
      else {
        unint64_t v6 = (char *)*(id *)(v2 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      ++v4;
      uint64_t v16 = v6;
      swift_beginAccess(v5, v15, 33LL, 0LL);
      uint64_t v8 = sub_1000031E8(&qword_1002DE928);
      ReusePool.recycle(_:)(&v16, v8);
      swift_endAccess(v15);
      uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category];
      *(void *)&v7[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category] = 0LL;
      swift_release(v9);
      sub_1000245F8(v10, v11);
      v18.value.super.Class isa = 0LL;
      v18.is_nil = 0;
      ArtworkView.setImage(image:animated:)(v18, v12);
      [v7 removeFromSuperview];
    }

    while (v3 != v4);
    goto LABEL_13;
  }

  __break(1u);
}

unint64_t sub_100023338()
{
  unint64_t result = qword_1002DE938;
  if (!qword_1002DE938)
  {
    uint64_t v1 = type metadata accessor for PrivacyTypeStyle(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PrivacyTypeStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1002DE938);
  }

  return result;
}

char *sub_100023380()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, v1);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000031E8(&qword_1002DE918);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = &v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_itemLayoutContext];
  uint64_t v10 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v9, 1LL, 1LL, v10);
  *(void *)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_pageTraits] = 0LL;
  uint64_t v11 = &v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_pageGrid];
  uint64_t v12 = type metadata accessor for PageGrid(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v11, 1LL, 1LL, v12);
  *(void *)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_artwork] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categories] = _swiftEmptyArrayStorage;
  uint64_t v13 = type metadata accessor for PrivacyCategoryView();
  uint64_t v14 = v0;
  ViewRecycler.init()(v13);
  unint64_t v15 = sub_100023148();
  ReusePool.init(recycler:limit:)(v8, 15LL, v6, v15);
  uint64_t v16 = &v14[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_style];
  uint64_t v17 = enum case for PrivacyTypeStyle.productPage(_:);
  uint64_t v18 = type metadata accessor for PrivacyTypeStyle(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104LL))(v16, v17, v18);
  *(void *)&v14[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_iconView] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002DC6D8 != -1) {
    swift_once(&qword_1002DC6D8, sub_100071770);
  }
  uint64_t v19 = sub_1000061F4(v2, (uint64_t)qword_1002EF0D8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v20(v5, v19, v2);
  *(void *)&v14[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_titleLabel] = sub_1000137B8( (uint64_t)v5,  0LL,  0LL,  1,  0);
  if (qword_1002DC6E8 != -1) {
    swift_once(&qword_1002DC6E8, sub_1000717A0);
  }
  uint64_t v21 = sub_1000061F4(v2, (uint64_t)qword_1002EF108);
  v20(v5, v21, v2);
  *(void *)&v14[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_detailLabel] = sub_1000137B8( (uint64_t)v5,  0LL,  0LL,  1,  0);
  *(void *)&v14[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_categoryViews] = _swiftEmptyArrayStorage;

  v50.receiver = v14;
  v50.super_class = ObjectType;
  __n128 v22 = (char *)objc_msgSendSuper2(&v50, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v23 = [v22 contentView];
  [v23 setClipsToBounds:0];

  id v24 = [v22 contentView];
  objc_msgSend( v24,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  uint64_t v25 = OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_iconView;
  __n128 v26 = *(void **)&v22[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_iconView];
  char v27 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v28 = v26;
  ArtworkView.backgroundColor.setter([v27 clearColor]);

  uint64_t v29 = qword_1002DC3B0;
  id v30 = *(id *)&v22[v25];
  if (v29 != -1) {
    swift_once(&qword_1002DC3B0, sub_1000208F4);
  }
  uint64_t v31 = qword_1002DE8A0;
  id v32 = (id)qword_1002DE8A0;
  ArtworkView.preferredSymbolConfiguration.setter(v31);

  __n128 v33 = *(void **)&v22[v25];
  sub_100010F30();
  id v34 = v33;
  id v35 = (void *)static UIColor.opacityA.getter();
  [v34 setTintColor:v35];

  id v36 = *(id *)&v22[v25];
  ArtworkView.adjustsImageWhenAncestorFocused.setter(0LL);

  id v37 = [v22 contentView];
  [v37 addSubview:*(void *)&v22[v25]];

  uint64_t v38 = OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_titleLabel;
  id v39 = *(id *)&v22[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_titleLabel];
  uint64_t v40 = (void *)static UIColor.opacityA.getter();
  [v39 setTextColor:v40];

  id v41 = [v22 contentView];
  [v41 addSubview:*(void *)&v22[v38]];

  uint64_t v42 = OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_detailLabel;
  id v43 = *(id *)&v22[OBJC_IVAR____TtC6Arcade29PrivacyTypeCollectionViewCell_detailLabel];
  __n128 v44 = (void *)static UIColor.opacityB.getter();
  [v43 setTextColor:v44];

  id v45 = [v22 contentView];
  [v45 addSubview:*(void *)&v22[v42]];

  sub_100020CC8();
  id v46 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v46 addObserver:v22 selector:"lowMemoryWarning:" name:UIApplicationDidReceiveMemoryWarningNotification object:0];

  return v22;
}

uint64_t destroy for DebugActionsGroup(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 16));
}

void *_s6Arcade17DebugActionsGroupVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

void *assignWithCopy for DebugActionsGroup(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[2];
  uint64_t v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

__n128 initializeWithTake for DebugActionsGroup(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for DebugActionsGroup(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease(a1[1]);
  uint64_t v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugActionsGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugActionsGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + sub_100015B48(v0 + 16) = 0LL;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for DebugActionsSuite()
{
  return &type metadata for DebugActionsSuite;
}

uint64_t type metadata accessor for FullScreenVideoViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade29FullScreenVideoViewController);
}

void sub_100023C48(uint64_t a1)
{
  uint64_t v2 = swift_unknownObjectWeakAssign(&v1[OBJC_IVAR____TtC6Arcade29FullScreenVideoViewController_videoView], a1);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = [v1 view];
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = [(id)objc_opt_self(UIColor) systemBlackColor];
      [v6 setBackgroundColor:v7];

      id v8 = [v1 view];
      if (v8)
      {
        uint64_t v9 = v8;
        [v4 frame];
        double v11 = v10;
        double v13 = v12;
        double v15 = v14;
        double v17 = v16;
        id v18 = [v4 superview];
        objc_msgSend(v9, "convertRect:fromView:", v18, v11, v13, v15, v17);
        CGFloat v20 = v19;
        CGFloat v22 = v21;
        CGFloat v24 = v23;
        CGFloat v26 = v25;

        id v27 = [v1 view];
        if (v27)
        {
          id v28 = v27;
          [v27 insertSubview:v4 atIndex:0];

          id v29 = v4;
          v33.origin.x = v20;
          v33.origin.y = v22;
          v33.size.width = v24;
          v33.size.height = v26;
          double MidX = CGRectGetMidX(v33);
          v34.origin.x = v20;
          v34.origin.y = v22;
          v34.size.width = v24;
          v34.size.height = v26;
          objc_msgSend(v29, "setCenter:", MidX, CGRectGetMidY(v34));

          id v31 = [v1 view];
          if (v31)
          {
            id v32 = v31;
            [v31 setNeedsLayout];

            return;
          }

          goto LABEL_11;
        }

LABEL_10:
        __break(1u);
LABEL_11:
        __break(1u);
        return;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
    goto LABEL_10;
  }

        swift_once(&qword_1002DC380, sub_100018F98);
        goto LABEL_20;
      }

      swift_release(v87);
      sub_100006060(v95, (uint64_t *)&unk_1002DF680);
      char v79 = v372;
      *v372 = v168;
      v144 = v79;
      v145 = v73;
      v146 = 5LL;
      goto LABEL_53;
    }

    if ((_DWORD)v81 == enum case for FlowPage.video(_:))
    {
      v107 = v399;
      double v87 = v394;
      FlowAction.pageUrl.getter();
      v169 = v409;
      v170 = v410;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v409 + 48))(v107, 1LL, v410) != 1)
      {
        v171 = *(void (**)(char *, char *, uint64_t))(v169 + 32);
        v172 = v397;
        v171(v397, v107, v170);
        v173 = type metadata accessor for Video(0LL);
        __chkstk_darwin(v173);
        v174 = v413;
        *(&v371 - 2) = v413;
        v176 = FlowAction.pageData<A>(as:or:)(&v415, v175, sub_10004374C, &v371 - 4, v175);
        v177 = v415;
        CGRect v96 = v411;
        if (v415)
        {
          v178 = Video.preview.getter(v176);
          swift_release(v177);
          swift_release(v87);
        }

        else
        {
          swift_release(v87);
          v178 = 0LL;
        }

        sub_100006060(v174, (uint64_t *)&unk_1002DF680);
        v198 = *(int *)(sub_1000031E8(&qword_1002DEF70) + 48);
        char v79 = v372;
        v171((char *)v372, v172, v170);
        *(uint64_t *)((char *)v79 + v198) = v178;
        v127 = v79;
        v128 = v73;
        v129 = 6LL;
        goto LABEL_26;
      }

  swift_bridgeObjectRelease_n(v2, 2LL);
  uint64_t v9 = *v1;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0) {
      double v17 = v9;
    }
    else {
      double v17 = v9 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v9);
    __n128 result = (void *)_CocoaArrayWrapper.endIndex.getter(v17);
    if (result) {
      goto LABEL_12;
    }
LABEL_27:
    swift_bridgeObjectRelease(v9);
    return _swiftEmptyArrayStorage;
  }

  double v10 = *(void *)((v9 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  __n128 result = (void *)swift_bridgeObjectRetain(v9);
  if (!v10) {
    goto LABEL_27;
  }
LABEL_12:
  if ((v9 & 0xC000000000000001LL) != 0)
  {
    double v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v9);
    goto LABEL_15;
  }

  if (*(void *)((v9 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    double v12 = *(id *)(v9 + 32);
LABEL_15:
    double v13 = v12;
    swift_bridgeObjectRelease(v9);
    double v14 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
    double v15 = swift_allocObject(v14, 40LL, 7LL);
    *(_OWORD *)(v15 + sub_100015B48(v0 + 16) = xmmword_100233570;
    *(void *)(v15 + 32) = v13;
    id v18 = v15;
    specialized Array._endMutation()(v15);
    return (void *)v18;
  }

  __break(1u);
  return result;
}

  double v23 = PrivacyDefinition.definition.getter(v21);
  double v25 = v24;
  CGFloat v26 = *(void **)&v6[OBJC_IVAR____TtC6Arcade35PrivacyDefinitionCollectionViewCell_definitionLabel];
  id v27 = [v26 text];
  if (!v27) {
    goto LABEL_16;
  }
  id v28 = v27;
  id v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  id v31 = v30;

  if (v29 == v23 && v31 == v25)
  {
    swift_bridgeObjectRelease_n(v25, 2LL);
    return;
  }

  id v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v23, v25, 0LL);
  swift_bridgeObjectRelease(v31);
  if ((v32 & 1) != 0)
  {
    swift_bridgeObjectRelease(v25);
  }

  else
  {
LABEL_16:
    CGRect v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setText:", v33, swift_bridgeObjectRelease(v25).n128_f64[0]);

    [v6 setNeedsLayout];
  }

  double v14 = swift_bridgeObjectRelease(v13);
  double v15 = MixedMediaLockup.trailers.getter(v14);
  double v13 = v15;
  if (!((unint64_t)v15 >> 62))
  {
    __n128 result = *(id *)((v15 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (result) {
      goto LABEL_12;
    }
LABEL_19:
    swift_bridgeObjectRelease(v13);
    double v17 = 0LL;
    goto LABEL_20;
  }

  if (v15 >= 0) {
    v15 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  __n128 result = (id)_CocoaArrayWrapper.endIndex.getter(v15);
  if (!result) {
    goto LABEL_19;
  }
LABEL_12:
  if ((v13 & 0xC000000000000001LL) == 0)
  {
    if (!*(void *)((v13 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
      return result;
    }

    double v17 = *(void *)(v13 + 32);
    swift_retain(v17);
    goto LABEL_15;
  }

  [v1 setText:v3];

  return [v0 setNeedsLayout];
}

  if (qword_1002DCDE0 != -1) {
    swift_once(&qword_1002DCDE0, sub_100152FB8);
  }
  id v35 = &type metadata for CGFloat;
  id v36 = &protocol witness table for CGFloat;
  CGRect v34 = qword_1002E8C48;
  if (qword_1002DCDD8 != -1) {
    swift_once(&qword_1002DCDD8, sub_100152FA8);
  }
  uint64_t v38 = &type metadata for CGFloat;
  id v39 = &protocol witness table for CGFloat;
  id v37 = qword_1002E8C40;
  if (qword_1002DCDE8 != -1) {
    swift_once(&qword_1002DCDE8, sub_100152FC8);
  }
  *(void *)&CGRect v33 = v13;
  *((void *)&v33 + 1) = v5;
  uint64_t v40 = xmmword_1002E8C50;
  id v41 = unk_1002E8C60;
  sub_100130F9C(&v33, v32);
  double v16 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_messageLabel);
  id v30 = type metadata accessor for DynamicTypeLabel(0LL);
  id v31 = &protocol witness table for UILabel;
  *(void *)&id v29 = v16;
  double v17 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade23ProductLockupBannerView_artworkView);
  id v27 = sub_100006028(0LL, (unint64_t *)&unk_1002E2160, &OBJC_CLASS___UIImageView_ptr);
  id v28 = &protocol witness table for UIImageView;
  *(void *)&CGFloat v26 = v17;
  id v18 = v16;
  double v19 = v17;
  sub_1001546B4((uint64_t)&v33);
  a1[3] = &type metadata for ProductLockupBannerViewLayout;
  a1[4] = sub_10013152C();
  CGFloat v20 = (_OWORD *)swift_allocObject(&unk_10028AFC0, 224LL, 7LL);
  *a1 = v20;
  double v21 = v32[5];
  v20[5] = v32[4];
  v20[6] = v21;
  CGFloat v22 = v32[7];
  v20[7] = v32[6];
  v20[8] = v22;
  double v23 = v32[1];
  v20[1] = v32[0];
  v20[2] = v23;
  CGFloat v24 = v32[3];
  v20[3] = v32[2];
  v20[4] = v24;
  sub_100009D90(&v29, (uint64_t)(v20 + 9));
  return sub_100009D90(&v26, (uint64_t)v20 + 184);
}

  swift_bridgeObjectRelease(a1);
  return 0LL;
}

int64x2_t sub_100023E8C()
{
  int64x2_t result = vdupq_n_s64(0x4044000000000000uLL);
  xmmword_1002EE640 = (__int128)result;
  return result;
}

void sub_100023EA0()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___UIImageSymbolConfiguration);
  uint64_t v1 = UIFontTextStyleCallout;
  id v2 = [v0 configurationWithTextStyle:v1 scale:2];

  qword_1002DE978 = (uint64_t)v2;
}

uint64_t sub_100023F0C()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for PrivacyCategoryLayout.Metrics(0LL);
  sub_10000FF90(v4, qword_1002EE650);
  uint64_t v26 = sub_1000061F4(v4, (uint64_t)qword_1002EE650);
  if (qword_1002DC3C0 != -1) {
    swift_once(&qword_1002DC3C0, sub_100023E8C);
  }
  *(void *)&void v37[3] = &type metadata for CGFloat;
  *(void *)&v37[4] = &protocol witness table for CGFloat;
  v37[0] = *(double *)&xmmword_1002EE640 + 14.0;
  if (qword_1002DC6F8 != -1) {
    swift_once(&qword_1002DC6F8, sub_1000717D0);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_1000061F4(v6, (uint64_t)qword_1002EF138);
  double v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v25(v3, v7, v6);
  uint64_t v8 = enum case for FontSource.useCase(_:);
  CGFloat v24 = (void (*)(char *))v1[13];
  v24(v3);
  uint64_t v23 = type metadata accessor for StaticDimension(0LL);
  v36[3] = v23;
  void v36[4] = &protocol witness table for StaticDimension;
  sub_100009D54(v36);
  CGRect v34 = (void *)v0;
  id v35 = &protocol witness table for FontSource;
  uint64_t v9 = sub_100009D54(v33);
  CGFloat v22 = (void (*)(void *, char *, uint64_t))v1[2];
  v22(v9, v3, v0);
  StaticDimension.init(_:scaledLike:)(v33, 32.0);
  double v21 = (void (*)(char *, uint64_t))v1[1];
  v21(v3, v0);
  __int128 v10 = xmmword_1002EE640;
  CGRect v34 = &type metadata for CGFloat;
  id v35 = &protocol witness table for CGFloat;
  v33[0] = *(double *)&xmmword_1002EE640 * 0.5;
  if (qword_1002DC700 != -1) {
    swift_once(&qword_1002DC700, sub_1000717E8);
  }
  uint64_t v20 = sub_1000061F4(v6, (uint64_t)qword_1002EF150);
  double v11 = v25;
  v25(v3, v20, v6);
  double v12 = (void (*)(char *, uint64_t, uint64_t))v24;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v3, v8, v0);
  uint64_t v13 = v23;
  double v32[3] = v23;
  v32[4] = &protocol witness table for StaticDimension;
  sub_100009D54(v32);
  id v30 = (void *)v0;
  id v31 = &protocol witness table for FontSource;
  double v14 = sub_100009D54(v29);
  double v15 = v22;
  v22(v14, v3, v0);
  StaticDimension.init(_:scaledLike:)(v29, 30.0);
  double v16 = v21;
  v21(v3, v0);
  id v30 = &type metadata for Double;
  id v31 = &protocol witness table for Double;
  v29[0] = 0LL;
  v11(v3, v20, v6);
  v12(v3, v8, v0);
  v28[3] = v13;
  v28[4] = &protocol witness table for StaticDimension;
  sub_100009D54(v28);
  v27[3] = v0;
  void v27[4] = &protocol witness table for FontSource;
  double v17 = sub_100009D54(v27);
  v15(v17, v3, v0);
  StaticDimension.init(_:scaledLike:)(v27, 16.0);
  v16(v3, v0);
  return PrivacyCategoryLayout.Metrics.init(textLeadingMargin:titleTopSpace:iconHorizontalCenterMargin:iconSize:dataTypesTopSpace:dataTypesBottomSpace:bottomMargin:)( v37,  v36,  v33,  v32,  v29,  v28,  *(double *)&v10,  *((double *)&v10 + 1));
}

char *sub_1000242A4(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v12 = type metadata accessor for FontUseCase(0LL, v11);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  double v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v5[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_dataTypesLabel] = 0LL;
  *(void *)&v5[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category] = 0LL;
  id v16 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0LL));
  double v17 = v5;
  id v18 = objc_msgSend(v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v17[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_iconView] = v18;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002DC6F8 != -1) {
    swift_once(&qword_1002DC6F8, sub_1000717D0);
  }
  uint64_t v19 = sub_1000061F4(v12, (uint64_t)qword_1002EF138);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v19, v12);
  *(void *)&v17[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_titleLabel] = sub_1000137B8((uint64_t)v15, 0LL, 0LL, 1, 1);

  v35.receiver = v17;
  v35.super_class = ObjectType;
  id v20 = objc_msgSendSuper2(&v35, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  CGFloat v24 = (char *)v20;
  objc_msgSend(v24, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  [v24 setClipsToBounds:0];
  uint64_t v25 = OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_iconView;
  uint64_t v26 = *(void **)&v24[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_iconView];
  [v24 addSubview:v26];
  id v27 = v26;
  ArtworkView.adjustsImageWhenAncestorFocused.setter(0LL);

  id v28 = *(void **)&v24[v25];
  sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  id v29 = v28;
  id v30 = (void *)static UIColor.opacityA.getter();
  [v29 setTintColor:v30];

  id v31 = *(void **)&v24[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_titleLabel];
  [v24 addSubview:v31];
  id v32 = v31;
  CGRect v33 = (void *)static UIColor.opacityA.getter();
  [v32 setTextColor:v33];

  return v24;
}

id sub_1000245F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *(void **)&v2[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_titleLabel];
  uint64_t v10 = OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category;
  NSString v11 = *(NSString *)&v2[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category];
  if (v11)
  {
    __n128 v12 = swift_retain(v11);
    PrivacyCategory.title.getter(v12);
    uint64_t v14 = v13;
    swift_release(v11);
    NSString v11 = String._bridgeToObjectiveC()();
    *(void *)&double v6 = swift_bridgeObjectRelease(v14).n128_u64[0];
  }

  objc_msgSend(v9, "setText:", v11, v6);

  uint64_t v15 = *(void *)&v3[v10];
  if (!v15) {
    goto LABEL_12;
  }
  __n128 v16 = swift_retain(*(void *)&v3[v10]);
  uint64_t v17 = PrivacyCategory.dataTypes.getter(v16);
  swift_release(v15);
  if (!*(void *)(v17 + 16))
  {
    swift_bridgeObjectRelease(v17);
LABEL_12:
    id v29 = *(void **)&v3[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_dataTypesLabel];
    if (v29) {
      [v29 setHidden:1];
    }
    return [v3 setNeedsLayout];
  }

  uint64_t v18 = OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_dataTypesLabel;
  uint64_t v19 = *(void **)&v3[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_dataTypesLabel];
  if (!v19)
  {
    type metadata accessor for DynamicTypeLabel(0LL);
    if (qword_1002DC700 != -1) {
      swift_once(&qword_1002DC700, sub_1000717E8);
    }
    uint64_t v20 = sub_1000061F4(v4, (uint64_t)qword_1002EF150);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v20, v4);
    double v21 = sub_1000137B8((uint64_t)v8, 0LL, 0LL, 1, 1);
    sub_1000256C0(v21);

    uint64_t v19 = *(void **)&v3[v18];
    if (!v19)
    {
      swift_bridgeObjectRelease(v17);
      id v28 = *(void **)&v3[v18];
      if (!v28) {
        return [v3 setNeedsLayout];
      }
      goto LABEL_10;
    }
  }

  v31[1] = v17;
  id v22 = v19;
  uint64_t v23 = sub_1000031E8(&qword_1002EAEC0);
  unint64_t v24 = sub_100008748();
  BidirectionalCollection<>.joined(separator:)(10LL, 0xE100000000000000LL, v23, v24);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease(v17);
  NSString v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setText:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

  id v28 = *(void **)&v3[v18];
  if (v28) {
LABEL_10:
  }
    [v28 setHidden:0];
  return [v3 setNeedsLayout];
}

uint64_t sub_100024878()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for PrivacyCategoryLayout(0LL);
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  double v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for PrivacyCategoryLayout.Metrics(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  NSString v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - v12;
  v37.receiver = v0;
  v37.super_class = ObjectType;
  id v28 = ObjectType;
  objc_msgSendSuper2(&v37, "layoutSubviews");
  uint64_t v14 = *(void *)&v0[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category];
  swift_retain(v14);
  sub_100024AC4(v15, (uint64_t)v13);
  __n128 v16 = swift_release(v14);
  (*(void (**)(char *, char *, uint64_t, __n128))(v8 + 16))(v11, v13, v7, v16);
  uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_iconView];
  v36[3] = type metadata accessor for ArtworkView(0LL);
  void v36[4] = protocol witness table for UIView;
  v36[0] = v17;
  uint64_t v18 = *(void **)&v0[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_titleLabel];
  uint64_t v19 = type metadata accessor for DynamicTypeLabel(0LL);
  void v35[3] = v19;
  v35[4] = &protocol witness table for UILabel;
  v35[0] = v18;
  uint64_t v20 = *(void **)&v0[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_dataTypesLabel];
  if (v20)
  {
    *((void *)&v33 + 1) = v19;
    CGRect v34 = &protocol witness table for UILabel;
    *(void *)&__int128 v32 = v20;
  }

  else
  {
    CGRect v34 = 0LL;
    __int128 v32 = 0u;
    __int128 v33 = 0u;
  }

  id v21 = v17;
  id v22 = v18;
  id v23 = v20;
  PrivacyCategoryLayout.init(metrics:iconView:titleLabel:dataTypesLabel:)(v11, v36, v35, &v32);
  __n128 v24 = LayoutMarginsAware<>.layoutFrame.getter(v28);
  PrivacyCategoryLayout.placeChildren(relativeTo:in:)(v0, v24);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v31);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

double sub_100024AC4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1002DC3D0 != -1) {
    swift_once(&qword_1002DC3D0, sub_100023F0C);
  }
  uint64_t v4 = type metadata accessor for PrivacyCategoryLayout.Metrics(0LL);
  uint64_t v5 = sub_1000061F4(v4, (uint64_t)qword_1002EE650);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, v5, v4);
  if (a1)
  {
    uint64_t v8 = PrivacyCategory.artwork.getter(v6);
    if ((dispatch thunk of Artwork.isLocalImage.getter(v9) & 1) != 0)
    {
      if (qword_1002DC3C8 != -1) {
        swift_once(&qword_1002DC3C8, sub_100023EA0);
      }
      uint64_t v10 = qword_1002DE978;
      if ((dispatch thunk of Artwork.isSystemImage.getter() & 1) != 0)
      {
        uint64_t v11 = static SystemImage.load(artwork:with:includePrivateImages:)(v8, v10, 1LL);
        goto LABEL_11;
      }

      if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) != 0)
      {
        type metadata accessor for BundleImage(0LL);
        uint64_t v11 = static BundleImage.load(artwork:with:)(v8, v10);
LABEL_11:
        id v12 = (id)v11;
        *(void *)&double result = swift_release(v8).n128_u64[0];
        if (v12)
        {
          PrivacyCategoryLayout.Metrics.iconSize.setter(objc_msgSend(v12, "size", result));
        }

        return result;
      }
    }

    *(void *)&double result = swift_release(v8).n128_u64[0];
  }

  return result;
}

uint64_t sub_100024C68(uint64_t a1, uint64_t a2)
{
  uint64_t v80 = type metadata accessor for PrivacyCategoryLayout(0LL);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v75 = (char *)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v74 = v4;
  __chkstk_darwin(v5);
  double v78 = (char *)v66 - v6;
  uint64_t v81 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v70 = *(void **)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v8 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v77 = type metadata accessor for PrivacyCategoryLayout.Metrics(0LL);
  uint64_t v82 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v72 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  id v12 = (char *)v66 - v11;
  double v13 = sub_100024AC4(a1, (uint64_t)v66 - v11);
  uint64_t v76 = v12;
  v14.n128_f64[0] = PrivacyCategoryLayout.Metrics.iconSize.getter(v13);
  double v15 = v14.n128_f64[0];
  double v17 = v16;
  uint64_t v18 = type metadata accessor for LayoutViewPlaceholder(0LL, v14);
  uint64_t v19 = *(unsigned int *)(v18 + 48);
  uint64_t v20 = *(unsigned __int16 *)(v18 + 52);
  uint64_t v69 = v18;
  swift_allocObject(v18, v19, v20);
  uint64_t v73 = LayoutViewPlaceholder.init(representing:)(v15, v17);
  sub_100006028(0LL, (unint64_t *)&qword_1002E0470, &OBJC_CLASS___UIFont_ptr);
  if (qword_1002DC6F8 != -1) {
    swift_once(&qword_1002DC6F8, sub_1000717D0);
  }
  uint64_t v22 = type metadata accessor for FontUseCase(0LL, v21);
  uint64_t v23 = sub_1000061F4(v22, (uint64_t)qword_1002EF138);
  uint64_t v24 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v23, a2);
  uint64_t v67 = a2;
  uint64_t v25 = (void *)v24;
  uint64_t v27 = PrivacyCategory.title.getter(v26);
  uint64_t v29 = v28;
  uint64_t v30 = type metadata accessor for Feature(0LL);
  v87[3] = v30;
  unint64_t v68 = sub_1000100C0();
  v87[4] = v68;
  uint64_t v31 = sub_100009D54(v87);
  v66[1] = a1;
  uint64_t v32 = enum case for Feature.measurement_with_labelplaceholder(_:);
  __int128 v33 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104LL);
  v33(v31, enum case for Feature.measurement_with_labelplaceholder(_:), v30);
  id v34 = v25;
  LOBYTE(v25) = isFeatureEnabled(_:)(v87);
  _s6Arcade17PillOverlayLayoutVwxx_0(v87);
  id v71 = v34;
  uint64_t v35 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v27,  v29,  v34,  4LL,  0LL,  0LL,  0LL,  0LL,  v25 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v87, v35);
  id v36 = (void (*)(char *, uint64_t))v70[1];
  v36(v8, v81);
  if (qword_1002DC700 != -1) {
    swift_once(&qword_1002DC700, sub_1000717E8);
  }
  uint64_t v37 = sub_1000061F4(v22, (uint64_t)qword_1002EF150);
  uint64_t v38 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v37, v67);
  uint64_t v40 = PrivacyCategory.dataTypes.getter(v39);
  v86[0] = v40;
  uint64_t v41 = sub_1000031E8(&qword_1002EAEC0);
  unint64_t v42 = sub_100008748();
  uint64_t v43 = BidirectionalCollection<>.joined(separator:)(10LL, 0xE100000000000000LL, v41, v42);
  uint64_t v45 = v44;
  swift_bridgeObjectRelease(v40);
  v86[3] = v30;
  v86[4] = v68;
  id v46 = sub_100009D54(v86);
  v33(v46, v32, v30);
  char v47 = v38;
  uint64_t v70 = v47;
  LOBYTE(v40) = isFeatureEnabled(_:)(v86);
  _s6Arcade17PillOverlayLayoutVwxx_0(v86);
  LOBYTE(v65) = v40 & 1;
  uint64_t v48 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v43,  v45,  v47,  4LL,  0LL,  0LL,  0LL,  0LL,  v65);
  LabelPlaceholderCompatibility.layoutTextView.getter(v86, v48);
  v36(v8, v81);
  uint64_t v49 = v72;
  objc_super v50 = v76;
  uint64_t v51 = v77;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v72, v76, v77);
  uint64_t v52 = v69;
  v85[3] = v69;
  v85[4] = &protocol witness table for LayoutViewPlaceholder;
  uint64_t v53 = v73;
  v85[0] = v73;
  sub_10001F010((uint64_t)v87, (uint64_t)v84);
  sub_10001F010((uint64_t)v86, (uint64_t)v83);
  swift_retain(v53);
  uint64_t v54 = v78;
  __n128 v55 = PrivacyCategoryLayout.init(metrics:iconView:titleLabel:dataTypesLabel:)(v49, v85, v84, v83);
  uint64_t v56 = v79;
  uint64_t v57 = v75;
  uint64_t v58 = v80;
  (*(void (**)(char *, char *, uint64_t, __n128))(v79 + 16))(v75, v54, v80, v55);
  uint64_t v59 = *(unsigned __int8 *)(v56 + 80);
  uint64_t v60 = (v59 + 16) & ~v59;
  uint64_t v61 = swift_allocObject(&unk_100281540, v60 + v74, v59 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v61 + v60, v57, v58);
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  uint64_t v62 = LayoutViewPlaceholder.init(measureWith:)(sub_100025668, v61);

  __n128 v63 = swift_release(v53);
  (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v54, v58, v63);
  _s6Arcade17PillOverlayLayoutVwxx_0(v86);
  _s6Arcade17PillOverlayLayoutVwxx_0(v87);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v50, v51);
  return v62;
}

double sub_10002523C(uint64_t a1, double a2, double a3)
{
  uint64_t v30 = a1;
  uint64_t v6 = type metadata accessor for PrivacyCategoryLayout(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for PrivacyCategoryLayout.Metrics(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  __n128 v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  double v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category);
  swift_retain(v17);
  sub_100024AC4(v18, (uint64_t)v16);
  __n128 v19 = swift_release(v17);
  (*(void (**)(char *, char *, uint64_t, __n128))(v11 + 16))(v14, v16, v10, v19);
  uint64_t v20 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_iconView);
  void v35[3] = type metadata accessor for ArtworkView(0LL);
  v35[4] = protocol witness table for UIView;
  v35[0] = v20;
  uint64_t v21 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_titleLabel);
  uint64_t v22 = type metadata accessor for DynamicTypeLabel(0LL);
  v34[3] = v22;
  void v34[4] = &protocol witness table for UILabel;
  v34[0] = v21;
  uint64_t v23 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_dataTypesLabel);
  if (v23)
  {
    *((void *)&v32 + 1) = v22;
    __int128 v33 = &protocol witness table for UILabel;
    *(void *)&__int128 v31 = v23;
  }

  else
  {
    __int128 v33 = 0LL;
    __int128 v31 = 0u;
    __int128 v32 = 0u;
  }

  id v24 = v20;
  id v25 = v21;
  id v26 = v23;
  PrivacyCategoryLayout.init(metrics:iconView:titleLabel:dataTypesLabel:)(v14, v35, v34, &v31);
  double v27 = PrivacyCategoryLayout.measurements(fitting:in:)(v30, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  return v27;
}

void sub_1000254C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5 + 16;
  if (a1) {
    uint64_t v6 = (objc_class *)[a1 imageWithRenderingMode:2];
  }
  else {
    uint64_t v6 = 0LL;
  }
  swift_beginAccess(v5, v11, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    id v9 = *(id *)(Strong + OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_iconView);

    v12.value.super.Class isa = v6;
    v12.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v12, v10);
  }
}

uint64_t type metadata accessor for PrivacyCategoryView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade19PrivacyCategoryView);
}

uint64_t sub_100025608()
{
  uint64_t v1 = type metadata accessor for PrivacyCategoryLayout(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100025668(uint64_t a1, double a2, double a3)
{
  return PrivacyCategoryLayout.measurements(fitting:in:)(a1, a2, a3);
}

id sub_1000256C0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_dataTypesLabel;
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_dataTypesLabel];
  if (v5)
  {
    [v5 removeFromSuperview];
    uint64_t v6 = *(void **)&v2[v4];
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  *(void *)&v2[v4] = a1;
  id v7 = a1;

  uint64_t v8 = *(void **)&v2[v4];
  if (v8)
  {
    sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
    id v9 = v8;
    Swift::Bool v10 = (void *)static UIColor.opacityB.getter();
    [v9 setTextColor:v10];

    [v2 addSubview:v9];
  }

  return [v2 setNeedsLayout];
}

uint64_t sub_100025794(void *a1, uint64_t a2)
{
  uint64_t result = (uint64_t)sub_1001E0158(a1, a2);
  uint64_t v3 = result;
  unint64_t v4 = *(void *)(result + 16);
  if (v4 < 2) {
    return v3;
  }
  unint64_t v5 = 0LL;
  unint64_t v6 = v4 >> 1;
  for (unint64_t i = v4 + 3; ; --i)
  {
    if (v5 == i - 4) {
      goto LABEL_5;
    }
    unint64_t v8 = *(void *)(v3 + 16);
    if (v5 >= v8) {
      break;
    }
    if (i - 4 >= v8) {
      goto LABEL_12;
    }
    uint64_t v9 = *(void *)(v3 + 8 * v5 + 32);
    uint64_t v10 = *(void *)(v3 + 8 * i);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native(v3);
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1001E07A4(v3);
      uint64_t v3 = result;
    }

    *(void *)(v3 + 8 * v5 + 32) = v10;
    *(void *)(v3 + 8 * i) = v9;
LABEL_5:
    if (v6 == ++v5) {
      return v3;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_100025850(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000LL) != 0 || (a1 & 0x4000000000000000LL) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8LL;
  swift_bridgeObjectRetain(a1);
  uint64_t v21 = v1 & 0xFFFFFFFFFFFFFF8LL;
LABEL_4:
  if ((v2 & 0x4000000000000000LL) == 0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease(v1);
    unint64_t v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }

  while (1)
  {
    swift_retain(v2);
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
    swift_release(v2);
    uint64_t v20 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1) {
      __break(1u);
    }
    unint64_t v4 = v20 >> 1;
LABEL_6:
    unint64_t v5 = 0LL;
    while (1)
    {
      unint64_t v8 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        uint64_t v9 = v21;
        if ((v21 & 0xC000000000000001LL) != 0)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v21);
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - (v5 + 1), v21);
        }

        else
        {
          if ((v5 & 0x8000000000000000LL) != 0) {
            goto LABEL_33;
          }
          unint64_t v10 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
          if (v5 >= v10) {
            goto LABEL_34;
          }
          id v11 = *(id *)(v21 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000LL) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v10) {
            goto LABEL_37;
          }
          uint64_t v12 = (uint64_t)v11;
          id v13 = *(id *)(v21 + 32 + 8 * v1);
        }

        id v14 = v13;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000LL) != 0)
        {
          uint64_t v9 = sub_1001E07A0(v21);
          uint64_t v21 = v9;
        }

        uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFF8LL) + 8 * v5;

        *(void *)(v15 + 32) = v14;
        specialized Array._endMutation()(v16);
        uint64_t v17 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000LL) != 0)
        {
          uint64_t v17 = sub_1001E07A0(v21);
          uint64_t v21 = v17;
        }

        if ((v1 & 0x8000000000000000LL) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8LL) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v6 = (v17 & 0xFFFFFFFFFFFFFF8LL) + 8 * v1;

        *(void *)(v6 + 32) = v12;
        specialized Array._endMutation()(v7);
      }

      unint64_t v5 = v8;
      if (v4 == v8) {
        return v21;
      }
    }

    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_1001E0228(v1);
    uint64_t v21 = v2;
    if ((v2 & 0x8000000000000000LL) == 0) {
      goto LABEL_4;
    }
  }

uint64_t sub_100025A68(uint64_t result)
{
  unint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0LL;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 40 * v2 - 8;
  for (uint64_t i = 4LL; ; i += 5LL)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    uint64_t result = sub_10001F010((uint64_t)&v1[i], (uint64_t)v10);
    if (v5 >= v8) {
      goto LABEL_14;
    }
    sub_10001F010((uint64_t)v1 + v6, (uint64_t)v9);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native(v1);
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1001E0820(v1);
      unint64_t v1 = (void *)result;
    }

    if (v3 >= v1[2]) {
      goto LABEL_15;
    }
    _s6Arcade17PillOverlayLayoutVwxx_0(&v1[i]);
    uint64_t result = sub_100009D90(v9, (uint64_t)&v1[i]);
    if (v5 >= v1[2]) {
      goto LABEL_16;
    }
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)((char *)v1 + v6));
    uint64_t result = sub_100009D90(v10, (uint64_t)v1 + v6);
LABEL_4:
    ++v3;
    --v5;
    v6 -= 40LL;
    if (v4 == v3) {
      return (uint64_t)v1;
    }
  }

  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_100025B98(void *a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1[2];
  if (v2 < 2) {
    return;
  }
  unint64_t v3 = 0LL;
  unint64_t v4 = v2 >> 1;
  for (unint64_t i = v2 + 3; ; --i)
  {
    unint64_t v6 = i - 4;
    if (v3 == i - 4) {
      goto LABEL_4;
    }
    unint64_t v7 = v1[2];
    if (v3 >= v7) {
      break;
    }
    if (v6 >= v7) {
      goto LABEL_13;
    }
    uint64_t v8 = v1[v3 + 4];
    uint64_t v9 = v1[i];
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0) {
      unint64_t v1 = sub_1001E0834(v1);
    }
    unint64_t v10 = &v1[v3];
    swift_bridgeObjectRelease(v10[4]);
    v10[4] = v9;
    if (v6 >= v1[2]) {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease(v1[i]);
    v1[i] = v8;
LABEL_4:
    if (v4 == ++v3) {
      return;
    }
  }

  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

uint64_t ArcadeWelcomeItemsViewLayout.Metrics.init(itemWidth:itemSpacing:)@<X0>( __int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100009D90(a2, a3 + 40);
}

void ArcadeWelcomeItemsViewLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = v3[10];
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = v11 + 32;
    uint64_t v35 = v11;
    swift_bridgeObjectRetain(v11);
    double v14 = 0.0;
    do
    {
      uint64_t v36 = v12;
      sub_10001F010(v13, (uint64_t)v37);
      uint64_t v15 = v4[3];
      uint64_t v16 = v4[4];
      sub_100005F8C(v4, v15);
      static Dimensions.defaultRoundingRule.getter();
      double v17 = AnyDimension.value(in:rounded:)(a1, v10, v15, v16);
      uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
      v18(v10, v7);
      uint64_t v19 = v10;
      uint64_t v20 = v4;
      uint64_t v21 = a1;
      uint64_t v22 = v8;
      uint64_t v23 = v7;
      uint64_t v25 = v38;
      uint64_t v24 = v39;
      sub_100005F8C(v37, v38);
      uint64_t v26 = *(void *)(v24 + 8);
      uint64_t v7 = v23;
      uint64_t v8 = v22;
      a1 = v21;
      unint64_t v4 = v20;
      unint64_t v10 = v19;
      dispatch thunk of Measurable.measurements(fitting:in:)(a1, v25, v26, v17, a3);
      uint64_t v28 = v36;
      if (v14 <= v27) {
        double v14 = v27;
      }
      _s6Arcade17PillOverlayLayoutVwxx_0(v37);
      v13 += 40LL;
      uint64_t v12 = v28 - 1;
    }

    while (v12);
    uint64_t v29 = v18;
    swift_bridgeObjectRelease(v35);
    if (*(void *)(v4[10] + 16LL))
    {
      uint64_t v30 = v4[3];
      uint64_t v31 = v4[4];
      sub_100005F8C(v4, v30);
      static Dimensions.defaultRoundingRule.getter();
      AnyDimension.value(in:rounded:)(a1, v19, v30, v31);
      v29(v19, v7);
      uint64_t v32 = v4[9];
      uint64_t v33 = v4[8];
      sub_100005F8C(v4 + 5, v33);
      static Dimensions.defaultRoundingRule.getter();
      AnyDimension.value(in:rounded:)(a1, v19, v33, v32);
      v29(v19, v7);
    }
  }

uint64_t ArcadeWelcomeItemsViewLayout.placeChildren(relativeTo:in:)@<X0>( void *a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v7 = v6;
  CGFloat v64 = a6;
  CGFloat v63 = a5;
  uint64_t v12 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!*(void *)(v6[10] + 16LL)) {
    return LayoutRect.init(representing:)(0.0, 0.0, 0.0, 0.0);
  }
  uint64_t v16 = v6[3];
  uint64_t v17 = v7[4];
  uint64_t v18 = sub_100005F8C(v7, v7[3]);
  static Dimensions.defaultRoundingRule.getter(v18);
  double v19 = AnyDimension.value(in:rounded:)(a1, v15, v16, v17);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v15, v12);
  uint64_t v22 = v7[8];
  uint64_t v21 = v7[9];
  uint64_t v23 = sub_100005F8C(v7 + 5, v22);
  static Dimensions.defaultRoundingRule.getter(v23);
  double v24 = AnyDimension.value(in:rounded:)(a1, v15, v22, v21);
  uint64_t v61 = v20;
  v20(v15, v12);
  id v25 = [a1 traitCollection];
  uint64_t v26 = [v25 layoutDirection];

  v56[1] = a2;
  uint64_t v62 = v12;
  if ((unint64_t)v26 + 1 >= 2)
  {
    if (v26 != (void *)1)
    {
LABEL_26:
      type metadata accessor for UITraitEnvironmentLayoutDirection(0LL);
      uint64_t v69 = v26;
      uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v55, &v69, v55, &type metadata for Int);
      __break(1u);
      return result;
    }

    uint64_t v29 = swift_bridgeObjectRetain(v7[10]);
    uint64_t v27 = sub_100025A68(v29);
  }

  else
  {
    uint64_t v27 = swift_bridgeObjectRetain(v7[10]);
  }

  unint64_t v30 = 0LL;
  uint64_t v59 = v27 + 32;
  uint64_t v60 = v27;
  unint64_t v31 = *(void *)(v27 + 16);
  uint64_t v58 = (__int128 *)&v65;
  uint64_t v57 = (uint64_t)&v66 + 8;
  double v32 = 0.0;
  double v33 = 0.0;
  if (v31) {
    goto LABEL_9;
  }
LABEL_8:
  __int128 v67 = 0u;
  __int128 v68 = 0u;
  unint64_t v30 = v31;
  __int128 v66 = 0u;
  while (1)
  {
    sub_1000263A0((uint64_t)&v66, (uint64_t)&v69);
    if (!v71) {
      break;
    }
    uint64_t v35 = v69;
    sub_100009D90(&v70, (uint64_t)&v66);
    uint64_t v37 = v7[3];
    uint64_t v36 = v7[4];
    uint64_t v38 = sub_100005F8C(v7, v37);
    static Dimensions.defaultRoundingRule.getter(v38);
    double v39 = AnyDimension.value(in:rounded:)(a1, v15, v37, v36);
    v61(v15, v62);
    v72.origin.x = a3;
    v72.origin.y = a4;
    v72.size.width = v63;
    v72.size.height = v64;
    double Height = CGRectGetHeight(v72);
    uint64_t v41 = *((void *)&v67 + 1);
    uint64_t v42 = v68;
    sub_100005F8C(&v66, *((uint64_t *)&v67 + 1));
    dispatch thunk of Measurable.measurements(fitting:in:)(a1, v41, *(void *)(v42 + 8), v39, Height);
    double v44 = v43;
    double v45 = -0.0;
    if (v35) {
      double v45 = v24;
    }
    double v46 = v32 + v45;
    uint64_t v47 = *((void *)&v67 + 1);
    uint64_t v48 = v68;
    uint64_t v26 = sub_100005F8C(&v66, *((uint64_t *)&v67 + 1));
    dispatch thunk of LayoutView.frame.setter(v47, v48);
    double v32 = v19 + v46;
    if (v33 <= v44) {
      double v33 = v44;
    }
    _s6Arcade17PillOverlayLayoutVwxx_0(&v66);
    if (v30 == v31) {
      goto LABEL_8;
    }
LABEL_9:
    if (v30 >= *(void *)(v60 + 16))
    {
      __break(1u);
      goto LABEL_26;
    }

    uint64_t v34 = v58;
    sub_10001F010(v59 + 40 * v30, (uint64_t)v58);
    *(void *)&__int128 v66 = v30;
    sub_100009D90(v34, v57);
    ++v30;
  }

  swift_bridgeObjectRelease(v60);
  v73.origin.x = a3;
  v73.origin.y = a4;
  CGFloat v49 = v63;
  v73.size.width = v63;
  CGFloat v50 = v64;
  v73.size.height = v64;
  double Width = CGRectGetWidth(v73);
  if (Width > v32) {
    double v52 = Width;
  }
  else {
    double v52 = v32;
  }
  v74.origin.x = a3;
  v74.origin.y = a4;
  v74.size.width = v49;
  v74.size.height = v50;
  double v53 = CGRectGetHeight(v74);
  if (v53 > v33) {
    double v54 = v53;
  }
  else {
    double v54 = v33;
  }
  return LayoutRect.init(representing:)(a3, a4, v52, v54);
}

uint64_t sub_1000263A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002DE9C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void sub_1000263EC(uint64_t a1, double a2, double a3)
{
}

double destroy for ArcadeWelcomeItemsViewLayout(void *a1)
{
  *(void *)&double result = swift_bridgeObjectRelease(a1[10]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for ArcadeWelcomeItemsViewLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRetain(v6);
  return a1;
}

void *assignWithCopy for ArcadeWelcomeItemsViewLayout(void *a1, void *a2)
{
  uint64_t v4 = a2[10];
  uint64_t v5 = a1[10];
  a1[10] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

void *sub_1000264E4(void *result, void *a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v9 = *(void *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        uint64_t v11 = *result;
        uint64_t v12 = *a2;
        swift_retain(*a2);
        double result = (void *)swift_release(v11);
        void *v3 = v12;
      }

      else
      {
        return (void *)(*(uint64_t (**)(void *, void *, void))(v9 + 24))(result, a2, result[3]);
      }
    }

    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      int v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        uint64_t v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v14 = *a2;
          void *v3 = *a2;
          swift_retain(v14);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(result, a2, v5);
        }

        return (void *)swift_release(v10);
      }

      else
      {
        (*(void (**)(_BYTE *, void *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v13 = *a2;
          void *v3 = *a2;
          swift_retain(v13);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v3, a2, v5);
        }

        return (void *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }

  return result;
}

__n128 initializeWithTake for ArcadeWelcomeItemsViewLayout(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + sub_100015B48(v0 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ArcadeWelcomeItemsViewLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + sub_100015B48(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  uint64_t v6 = *(void *)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArcadeWelcomeItemsViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcadeWelcomeItemsViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 88) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ArcadeWelcomeItemsViewLayout()
{
  return &type metadata for ArcadeWelcomeItemsViewLayout;
}

uint64_t destroy for ArcadeWelcomeItemsViewLayout.Metrics(void *a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 5);
}

uint64_t initializeWithCopy for ArcadeWelcomeItemsViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

void *assignWithCopy for ArcadeWelcomeItemsViewLayout.Metrics(void *a1, void *a2)
{
  return a1;
}

__n128 initializeWithTake for TVGridLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + sub_100015B48(v0 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ArcadeWelcomeItemsViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + sub_100015B48(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArcadeWelcomeItemsViewLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcadeWelcomeItemsViewLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0LL;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 80) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ArcadeWelcomeItemsViewLayout.Metrics()
{
  return &type metadata for ArcadeWelcomeItemsViewLayout.Metrics;
}

id sub_100026954()
{
  unint64_t v1 = v0;
  uint64_t v2 = *(void *)((char *)v0 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView);
  id v3 = *(id *)(v2 + OBJC_IVAR____TtC6Arcade12TVLockupView_titleLabel);
  Action.title.getter();
  if (v4)
  {
    uint64_t v5 = v4;
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }

  else
  {
    NSString v6 = 0LL;
  }

  [v3 setText:v6];

  [*(id *)(v2 + OBJC_IVAR____TtC6Arcade12TVLockupView_subtitleLabel) setHidden:1];
  [*(id *)(v2 + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView) setHidden:0];
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkOverlayView);
  if (v7)
  {
    int v8 = *(void **)(v7 + OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_pillView);
    if (v8) {
      [v8 setHidden:1];
    }
  }

  char v9 = *((_BYTE *)v1 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_isShowingSeeAll);
  *((_BYTE *)v1 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_isShowingSeeAll) = 1;
  if ((v9 & 1) == 0) {
    (*(void (**)(void, void))((swift_isaMask & *v1) + 0x1C8LL))( *((unsigned __int8 *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state),  0LL);
  }
  return [v1 setNeedsLayout];
}

uint64_t sub_100026AB8()
{
  uint64_t v0 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v0);
  uint64_t v2 = &v15[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, v3);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_1002DC6C0 != -1) {
    swift_once(&qword_1002DC6C0, sub_100071728);
  }
  uint64_t v8 = sub_1000061F4(v4, (uint64_t)qword_1002EF090);
  char v9 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, v8, v4);
  uint64_t v10 = (char *)objc_msgSend( objc_allocWithZone((Class)type metadata accessor for DynamicTypeButton(0)),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  v9(v2, (uint64_t)v7, v4);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v5 + 56))(v2, 0LL, 1LL, v4);
  uint64_t v11 = (uint64_t)&v10[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase];
  swift_beginAccess(&v10[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase], v15, 33LL, 0LL);
  uint64_t v12 = v10;
  sub_100014CB4((uint64_t)v2, v11);
  swift_endAccess(v15);
  sub_100100A48((uint64_t)v7);

  uint64_t result = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  qword_1002EE668 = (uint64_t)v12;
  return result;
}

void sub_100026C60(int a1, int a2, void *a3, int a4, int a5, id a6)
{
  uint64_t v7 = v6;
  id v9 = [a6 snapshotPageTraitEnvironment];
  uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyHeaderCollectionViewCell_pageTraits];
  *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyHeaderCollectionViewCell_pageTraits] = v9;
  swift_unknownObjectRetain(v9);
  swift_unknownObjectRelease(v10);
  [v7 setNeedsLayout];
  uint64_t v11 = swift_unknownObjectRelease(v9);
  uint64_t v12 = PrivacyHeader.bodyText.getter(v11);
  uint64_t v13 = *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyHeaderCollectionViewCell_bodyText];
  *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyHeaderCollectionViewCell_bodyText] = v12;
  swift_retain(v12);
  swift_release(v13);
  sub_100173F40();
  swift_release(v12);
  v7[OBJC_IVAR____TtC6Arcade31PrivacyHeaderCollectionViewCell_isDetailHeader] = PrivacyHeader.isDetailHeader.getter(v14) & 1;
  id v15 = sub_1001740BC();
  uint64_t v16 = PrivacyHeader.bodyActions.getter(v15);
  swift_retain(a3);
  size_t v17 = sub_100027C1C(v16, a3);
  swift_bridgeObjectRelease(v16);
  swift_release(a3);
  uint64_t v18 = *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyHeaderCollectionViewCell_actions];
  *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyHeaderCollectionViewCell_actions] = v17;
  swift_bridgeObjectRelease(v18);
  id v19 = sub_100174384();
  uint64_t v20 = PrivacyHeader.privacyTypes.getter(v19);
  uint64_t v21 = v20;
  if ((unint64_t)v20 >> 62)
  {
    if (v20 >= 0) {
      v20 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v20);
  }

  else
  {
    uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  swift_bridgeObjectRelease(v21);
  if (v22 < 1) {
    id v23 = 0LL;
  }
  else {
    id v23 = [objc_allocWithZone(UIFocusGuide) init];
  }
  double v24 = *(void **)&v7[OBJC_IVAR____TtC6Arcade31PrivacyHeaderCollectionViewCell_focusGuide];
  *(void *)&v7[OBJC_IVAR____TtC6Arcade31PrivacyHeaderCollectionViewCell_focusGuide] = v23;
  id v25 = v23;
  sub_100174D3C(v24);
}

id sub_100026E40(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, id *a8)
{
  return sub_100027E28(*a1, a2, a3, a5, a7, a8);
}

void sub_100026E54(void *a1, int a2, void *a3, int a4, int a5, void *a6)
{
}

uint64_t sub_100026E5C()
{
  return 0x4044000000000000LL;
}

uint64_t sub_100026E68()
{
  return sub_100003B6C( &qword_1002ECDD0,  (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyHeader,  (uint64_t)&protocol conformance descriptor for PrivacyHeader);
}

uint64_t sub_100026E94()
{
  return sub_100003B6C( (unint64_t *)&qword_1002DE398,  (uint64_t (*)(uint64_t))&type metadata accessor for NilState,  (uint64_t)&protocol conformance descriptor for NilState);
}

void *sub_100026EC0(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10002708C(a1, a2, a3, *v3);
  void *v3 = result;
  return result;
}

void *sub_100026EDC(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000273C0(a1, a2, a3, *v3, (uint64_t *)&unk_1002DE630, (uint64_t *)&unk_1002E27E0);
  void *v3 = result;
  return result;
}

char *sub_100026F08(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000271C4(a1, a2, a3, *v3);
  void *v3 = result;
  return result;
}

size_t sub_100026F24(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_100027AA8(a1, a2, a3, (void *)*v3, &qword_1002DEA28, &qword_1002DEA18);
  size_t *v3 = result;
  return result;
}

char *sub_100026F50(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1000272BC(a1, a2, a3, *v3);
  size_t *v3 = result;
  return result;
}

size_t sub_100026F6C(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_100027AA8(a1, a2, a3, (void *)*v3, &qword_1002E1900, &qword_1002DEA50);
  size_t *v3 = result;
  return result;
}

size_t sub_100026F98(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_100027AA8(a1, a2, a3, (void *)*v3, &qword_1002DEA68, (uint64_t *)&unk_1002E1A90);
  size_t *v3 = result;
  return result;
}

void *sub_100026FC4(void *a1, int64_t a2, char a3)
{
  size_t result = sub_1000273C0(a1, a2, a3, *v3, &qword_1002DEA58, &qword_1002DEA60);
  size_t *v3 = result;
  return result;
}

void *sub_100026FF0(void *a1, int64_t a2, char a3)
{
  size_t result = sub_1000274F8(a1, a2, a3, *v3);
  size_t *v3 = result;
  return result;
}

char *sub_10002700C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_100027618(a1, a2, a3, *v3);
  size_t *v3 = result;
  return result;
}

void *sub_100027028(void *a1, int64_t a2, char a3)
{
  size_t result = sub_100027810(a1, a2, a3, *v3);
  size_t *v3 = result;
  return result;
}

size_t sub_100027044(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_100027934(a1, a2, a3, (void *)*v3);
  size_t *v3 = result;
  return result;
}

size_t sub_100027060(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_100027AA8(a1, a2, a3, (void *)*v3, &qword_1002DEA40, (uint64_t *)&unk_1002DFC80);
  size_t *v3 = result;
  return result;
}

void *sub_10002708C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DEA38);
    uint64_t v11 = (void *)swift_allocObject(v10, 48 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[6 * v8 + 4]) {
      memmove(v11 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    uint64_t v14 = sub_1000031E8(&qword_1002DDA50);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v14);
  }

  swift_release(a4);
  return v11;
}

char *sub_1000271C4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002E9FE0);
    uint64_t v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  id v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8]) {
      memmove(v14, v15, 8 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v14, v15, 8 * v8);
  }

  swift_release(a4);
  return v11;
}

char *sub_1000272BC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002DE260);
    uint64_t v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  id v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8]) {
      memmove(v14, v15, 32 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, (char *)&type metadata for Any + 8);
  }

  swift_release(a4);
  return v11;
}

void *sub_1000273C0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v10 = a2;
  }

  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    uint64_t v13 = sub_1000031E8(a5);
    uint64_t v14 = (void *)swift_allocObject(v13, 40 * v12 + 32, 7LL);
    size_t v15 = j__malloc_size(v14);
    void v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }

  else
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
  }

  if ((v8 & 1) != 0)
  {
    if (v14 != a4 || v14 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v14 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0LL;
  }

  else
  {
    uint64_t v17 = sub_1000031E8(a6);
    swift_arrayInitWithCopy(v14 + 4, a4 + 4, v11, v17);
  }

  swift_release(a4);
  return v14;
}

void *sub_1000274F8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE728);
    uint64_t v11 = (void *)swift_allocObject(v10, 8 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4]) {
      memmove(v11 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    uint64_t v15 = sub_1000031E8(&qword_1002DE730);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v15);
  }

  swift_release(a4);
  return v11;
}

char *sub_100027618(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE720);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8]) {
      memmove(v14, v15, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v14, v15, 16 * v8);
  }

  swift_release(a4);
  return v11;
}

char *sub_100027710(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE678);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8]) {
      memmove(v14, v15, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for String);
  }

  swift_release(a4);
  return v11;
}

void *sub_100027810(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000031E8(&qword_1002DE668);
    uint64_t v11 = (void *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = &_swiftEmptyArrayStorage;
  }

  unint64_t v14 = (unint64_t)(v11 + 4);
  uint64_t v15 = a4 + 4;
  if ((v5 & 1) != 0)
  {
    if (v11 < a4 || v14 >= (unint64_t)&v15[2 * v8])
    {
      swift_arrayInitWithTakeFrontToBack( v14,  v15,  v8,  &type metadata for AttentionAwarenessTracker.AwarenessMonitorContainer);
    }

    else if (v11 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v14);
    }

    a4[2] = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for AttentionAwarenessTracker.AwarenessMonitorContainer);
  }

  swift_release(a4);
  return v11;
}

size_t sub_100027934(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_1000031E8(&qword_1002DEA48);
  uint64_t v11 = *(void *)(type metadata accessor for PageFacets.Facet.DisplayType(0LL) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (result - v14 == 0x8000000000000000LL && v12 == -1) {
    goto LABEL_29;
  }
  _OWORD v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  uint64_t v17 = type metadata accessor for PageFacets.Facet.DisplayType(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = (char *)v15 + v19;
  uint64_t v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(void *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }

    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v20);
    }

    a4[2] = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v20, v21, v8, v17);
  }

  swift_release(a4);
  return (size_t)v15;
}

size_t sub_100027AA8(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = result;
  if ((a3 & 1) != 0)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000LL < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }

      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v10 = a2;
  }

  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v13 = sub_1000031E8(a5);
  uint64_t v14 = *(void *)(sub_1000031E8(a6) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v18 = (void *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  size_t result = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (result - v17 == 0x8000000000000000LL && v15 == -1) {
    goto LABEL_29;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(result - v17) / v15);
LABEL_19:
  uint64_t v20 = sub_1000031E8(a6);
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  id v23 = (char *)v18 + v22;
  double v24 = (char *)a4 + v22;
  if ((v8 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(void *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23, v24, v11, v20);
    }

    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v23);
    }

    a4[2] = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v23, v24, v11, v20);
  }

  swift_release(a4);
  return (size_t)v18;
}

size_t sub_100027C1C(uint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v21 = *a2;
  unint64_t v22 = a2;
  uint64_t v20 = sub_1000031E8(&qword_1002DEA18);
  uint64_t v5 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  int64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (1)
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
    if (!v8) {
      return (size_t)v9;
    }
    double v24 = _swiftEmptyArrayStorage;
    size_t result = sub_100026F24(0LL, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v11 = 0LL;
    unint64_t v9 = v24;
    unint64_t v18 = v3;
    unint64_t v19 = a1 & 0xC000000000000001LL;
    uint64_t v12 = a1;
    while (v8 != v11)
    {
      if (v19)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1);
      }

      else
      {
        uint64_t v13 = *(void *)(a1 + 8 * v11 + 32);
        swift_retain(v13);
      }

      uint64_t v23 = v13;
      uint64_t v14 = type metadata accessor for Action(0LL);
      uint64_t v15 = sub_100003B6C( (unint64_t *)&qword_1002DEA20,  (uint64_t (*)(uint64_t))&type metadata accessor for Action,  (uint64_t)&protocol conformance descriptor for Action);
      ComponentModel.pairedWith<A>(objectGraph:)(v22, v14, v21, v15);
      swift_release(v13);
      double v24 = v9;
      unint64_t v3 = v9[2];
      unint64_t v16 = v9[3];
      if (v3 >= v16 >> 1)
      {
        sub_100026F24(v16 > 1, v3 + 1, 1);
        unint64_t v9 = v24;
      }

      ++v11;
      __int128 v9[2] = v3 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))( (unint64_t)v9 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
      + *(void *)(v5 + 72) * v3,
        v7,
        v20);
      a1 = v12;
      if (v8 == v11) {
        return (size_t)v9;
      }
    }

    __break(1u);
LABEL_15:
    if (a1 < 0) {
      uint64_t v17 = a1;
    }
    else {
      uint64_t v17 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
  }

  __break(1u);
  return result;
}

id sub_100027E28(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, id *a6)
{
  uint64_t v128 = type metadata accessor for PrivacyHeaderLayout.Metrics(0LL);
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  v129 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for PrivacyHeaderLayout(0LL);
  uint64_t v131 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v130 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v137 = sub_1000031E8(&qword_1002DE440);
  __chkstk_darwin(v137);
  uint64_t v140 = (uint64_t)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8(&qword_1002DE930);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v136 = (uint64_t)&v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v139 = (uint64_t)&v124 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v147 = (uint64_t)&v124 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v153 = (uint64_t)&v124 - v22;
  __chkstk_darwin(v21);
  v152 = (char *)&v124 - v23;
  uint64_t v24 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v124 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v154 = type metadata accessor for FontUseCase(0LL, v28);
  uint64_t v29 = *(void *)(v154 - 8);
  uint64_t v30 = __chkstk_darwin(v154);
  v133 = (char *)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = __chkstk_darwin(v30);
  v146 = (char *)&v124 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v134 = (char *)&v124 - v35;
  uint64_t v135 = a1;
  char v36 = PrivacyHeader.isDetailHeader.getter(v34);
  uint64_t v132 = v11;
  if ((v36 & 1) != 0)
  {
    if (qword_1002DC6B8 != -1) {
      swift_once(&qword_1002DC6B8, sub_100071710);
    }
    uint64_t v37 = qword_1002EF078;
  }

  else
  {
    if (qword_1002DC6B0 != -1) {
      swift_once(&qword_1002DC6B0, sub_1000716F8);
    }
    uint64_t v37 = qword_1002EF060;
  }

  uint64_t v38 = v154;
  uint64_t v39 = sub_1000061F4(v154, (uint64_t)v37);
  uint64_t v40 = v134;
  v145 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v145(v134, v39, v38);
  sub_100028C20();
  id v41 = objc_msgSend(a6, "traitCollection", swift_getObjectType(a6));
  uint64_t v42 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v40, v41);

  uint64_t v43 = PrivacyHeader.bodyText.getter();
  uint64_t v44 = LinkableText.styledText.getter();
  __n128 v45 = swift_release(v43);
  double v46 = (void *)dispatch thunk of StyledText.asAttributedString(using:)(v42, v45);
  swift_release(v44);
  uint64_t v47 = type metadata accessor for Feature(0LL);
  uint64_t v164 = v47;
  uint64_t v165 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  uint64_t v48 = sub_100009D54(&v163);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v47 - 8) + 104LL))( v48,  enum case for Feature.measurement_with_labelplaceholder(_:),  v47);
  id v126 = v46;
  id v49 = (id)v42;
  LOBYTE(v42) = isFeatureEnabled(_:)(&v163);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v163);
  id v125 = v49;
  uint64_t v50 = LabelPlaceholderCompatibility.init(attributedText:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v46,  v49,  4LL,  0LL,  0LL,  0LL,  0LL,  v42 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v163, v50);
  uint64_t v51 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  uint64_t v52 = PrivacyHeader.bodyActions.getter(v51);
  if ((unint64_t)v52 >> 62)
  {
LABEL_49:
    if (v52 < 0) {
      uint64_t v123 = v52;
    }
    else {
      uint64_t v123 = v52 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v53 = _CocoaArrayWrapper.endIndex.getter(v123);
  }

  else
  {
    uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  v138 = a6;
  if (v53)
  {
    unint64_t v150 = v52 & 0xC000000000000001LL;
    double v54 = _swiftEmptyArrayStorage;
    uint64_t v55 = 4LL;
    a6 = (id *)&OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey;
    uint64_t v149 = v29;
    uint64_t v144 = v52;
    uint64_t v143 = v53;
    while (1)
    {
      uint64_t v56 = v55 - 4;
      if (v150)
      {
        uint64_t v57 = specialized _ArrayBuffer._getElementSlowPath(_:)(v55 - 4, v52);
        uint64_t v58 = v55 - 3;
        if (__OFADD__(v56, 1LL)) {
          goto LABEL_48;
        }
      }

      else
      {
        uint64_t v57 = *(void *)(v52 + 8 * v55);
        swift_retain(v57);
        uint64_t v58 = v55 - 3;
        if (__OFADD__(v56, 1LL))
        {
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
      }

      Action.title.getter();
      if (!v59)
      {
        swift_release(v57);
        goto LABEL_13;
      }

      uint64_t v60 = v59;
      if (qword_1002DC3D8 != -1) {
        swift_once(&qword_1002DC3D8, sub_100026AB8);
      }
      uint64_t v151 = v57;
      id v61 = a6[205];
      NSString v62 = String._bridgeToObjectiveC()();
      objc_msgSend(v61, "setTitle:forState:", v62, 0, swift_bridgeObjectRelease(v60).n128_f64[0]);

      id v63 = a6[205];
      if (qword_1002DC6C0 != -1) {
        swift_once(&qword_1002DC6C0, sub_100071728);
      }
      uint64_t v64 = v154;
      uint64_t v65 = sub_1000061F4(v154, (uint64_t)qword_1002EF090);
      uint64_t v66 = (uint64_t)v152;
      __int128 v67 = (void (*)(uint64_t, uint64_t, uint64_t))v145;
      v145(v152, v65, v64);
      __int128 v68 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56);
      v68(v66, 0LL, 1LL, v64);
      id v148 = v63;
      uint64_t v69 = (uint64_t)v63 + OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase;
      swift_beginAccess(v69, v155, 0LL, 0LL);
      uint64_t v70 = v153;
      sub_100014CFC(v69, v153);
      swift_beginAccess(v69, &v160, 33LL, 0LL);
      sub_10000FF48(v66, v69);
      swift_endAccess(&v160);
      uint64_t v71 = v69;
      uint64_t v72 = v147;
      sub_100014CFC(v71, v147);
      CGRect v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
      if (v73(v72, 1LL, v64) != 1) {
        break;
      }
      sub_100006060(v72, &qword_1002DE930);
      a6 = (id *)&OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey;
      uint64_t v74 = v151;
LABEL_36:
      sub_100006060((uint64_t)v152, &qword_1002DE930);
      sub_100006060(v153, &qword_1002DE930);
      id v91 = [a6[205] titleLabel];
      double v92 = v91;
      if (v91)
      {
        id v93 = v91;
        id result = [v93 font];
        if (!result)
        {
          __break(1u);
          return result;
        }

        objc_super v95 = result;
        id v96 = [v138 traitCollection];
        id v97 = [v95 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v96];

        [v93 setFont:v97];
      }

      id v98 = objc_msgSend(a6[205], "sizeThatFits:", a2, a3);
      v101.n128_f64[0] = CGSize.adding(outsets:)(v98, 14.0, 40.0, 14.0, 40.0, v99, v100);
      double v102 = v101.n128_f64[0];
      double v104 = v103;
      uint64_t v105 = type metadata accessor for LayoutViewPlaceholder(0LL, v101);
      swift_allocObject(v105, *(unsigned int *)(v105 + 48), *(unsigned __int16 *)(v105 + 52));
      uint64_t v106 = LayoutViewPlaceholder.init(representing:)(v102, v104);
      swift_retain(v106);
      if ((swift_isUniquelyReferenced_nonNull_native(v54) & 1) == 0) {
        double v54 = sub_10001A374(0LL, v54[2] + 1LL, 1, v54);
      }
      unint64_t v108 = v54[2];
      unint64_t v107 = v54[3];
      if (v108 >= v107 >> 1) {
        double v54 = sub_10001A374((void *)(v107 > 1), v108 + 1, 1, v54);
      }
      v161 = (void *)v105;
      v162 = &protocol witness table for LayoutViewPlaceholder;
      *(void *)&__int128 v160 = v106;
      v54[2] = v108 + 1;
      sub_100009D90(&v160, (uint64_t)&v54[5 * v108 + 4]);
      swift_release(v74);
      swift_release(v106);

      uint64_t v29 = v149;
      uint64_t v52 = v144;
      uint64_t v53 = v143;
LABEL_13:
      ++v55;
      if (v58 == v53) {
        goto LABEL_45;
      }
    }

    uint64_t v141 = v58;
    v142 = v54;
    uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
    uint64_t v76 = (uint64_t)v146;
    uint64_t v77 = v154;
    v75((uint64_t)v146, v72, v154);
    uint64_t v78 = v139;
    v67(v139, v76, v77);
    v68(v78, 0LL, 1LL, v77);
    uint64_t v79 = v140;
    uint64_t v80 = v140 + *(int *)(v137 + 48);
    sub_100014CFC(v78, v140);
    sub_100014CFC(v70, v80);
    if (v73(v79, 1LL, v77) == 1)
    {
      sub_100006060(v78, &qword_1002DE930);
      unsigned int v81 = v73(v80, 1LL, v154);
      uint64_t v82 = v149;
      double v54 = v142;
      uint64_t v74 = v151;
      if (v81 == 1)
      {
        sub_100006060(v140, &qword_1002DE930);
        a6 = (id *)&OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey;
        (*(void (**)(char *, uint64_t))(v82 + 8))(v146, v154);
LABEL_35:
        uint64_t v58 = v141;
        goto LABEL_36;
      }
    }

    else
    {
      uint64_t v83 = v136;
      sub_100014CFC(v79, v136);
      if (v73(v80, 1LL, v154) != 1)
      {
        uint64_t v85 = v79;
        uint64_t v86 = v154;
        double v87 = v133;
        v75((uint64_t)v133, v80, v154);
        uint64_t v88 = sub_100003B6C( (unint64_t *)&qword_1002DE448,  (uint64_t (*)(uint64_t))&type metadata accessor for FontUseCase,  (uint64_t)&protocol conformance descriptor for FontUseCase);
        char v89 = dispatch thunk of static Equatable.== infix(_:_:)(v83, v87, v86, v88);
        uint64_t v82 = v149;
        double v90 = *(void (**)(char *, uint64_t))(v149 + 8);
        v90(v87, v86);
        sub_100006060(v139, &qword_1002DE930);
        v90((char *)v83, v86);
        sub_100006060(v85, &qword_1002DE930);
        double v54 = v142;
        a6 = (id *)&OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey;
        uint64_t v74 = v151;
        if ((v89 & 1) != 0)
        {
          v90(v146, v154);
          goto LABEL_35;
        }

        goto LABEL_32;
      }

      sub_100006060(v139, &qword_1002DE930);
      uint64_t v82 = v149;
      (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v83, v154);
      double v54 = v142;
      uint64_t v74 = v151;
    }

    sub_100006060(v140, &qword_1002DE440);
    a6 = (id *)&OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_artworkFetchKey;
LABEL_32:
    uint64_t v84 = (uint64_t)v146;
    sub_100100A48((uint64_t)v146);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v154);
    goto LABEL_35;
  }

  double v54 = _swiftEmptyArrayStorage;
LABEL_45:
  uint64_t v109 = v54;
  swift_bridgeObjectRelease(v52);
  Swift::Int v110 = v138;
  double v111 = PageTraitEnvironment.pageContentSize.getter();
  if (qword_1002DCF60 != -1) {
    swift_once(&qword_1002DCF60, sub_100173A4C);
  }
  uint64_t v112 = v128;
  uint64_t v113 = sub_1000061F4(v128, (uint64_t)qword_1002F11F8);
  uint64_t v114 = v129;
  (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v129, v113, v112);
  v161 = &type metadata for CGFloat;
  v162 = &protocol witness table for CGFloat;
  *(double *)&__int128 v160 = (v111 + -160.0) / 5.0 * 4.0 + 120.0;
  uint64_t v115 = PrivacyHeaderLayout.Metrics.maxTextWidth.setter(&v160);
  LOBYTE(v112) = PrivacyHeader.isDetailHeader.getter(v115);
  uint64_t v116 = v164;
  uint64_t v117 = v165;
  v118 = sub_100005F8C(&v163, v164);
  v161 = (void *)v116;
  v162 = *(void **)(v117 + 8);
  v119 = sub_100009D54(&v160);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v116 - 8) + 16LL))(v119, v118, v116);
  uint64_t v159 = 0LL;
  memset(v158, 0, sizeof(v158));
  uint64_t v157 = 0LL;
  memset(v156, 0, sizeof(v156));
  v120 = v130;
  PrivacyHeaderLayout.init(metrics:isDetailHeader:bodyLabel:supplementaryItemLabels:topSeparatorView:middleSeparatorView:actionButtons:)( v114,  v112 & 1,  &v160,  _swiftEmptyArrayStorage,  v158,  v156,  v109);
  uint64_t v121 = sub_100003B6C( &qword_1002DEA30,  (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyHeaderLayout,  (uint64_t)&protocol conformance descriptor for PrivacyHeaderLayout);
  uint64_t v122 = v132;
  dispatch thunk of Measurable.measurements(fitting:in:)(v110, v132, v121, a2, a3);

  (*(void (**)(char *, uint64_t))(v131 + 8))(v120, v122);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v134, v154);
  return (id)_s6Arcade17PillOverlayLayoutVwxx_0(&v163);
}

unint64_t sub_100028C20()
{
  unint64_t result = qword_1002E0470;
  if (!qword_1002E0470)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIFont);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002E0470);
  }

  return result;
}

ValueMetadata *type metadata accessor for ShowSettingsDebugAction()
{
  return &type metadata for ShowSettingsDebugAction;
}

void sub_100028C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v53 = a3;
  uint64_t v62 = a2;
  uint64_t v8 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  __chkstk_darwin(v8);
  uint64_t v50 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for FlowOrigin(0LL);
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for FlowAnimationBehavior(0LL);
  uint64_t v57 = *(void *)(v12 - 8);
  uint64_t v58 = v12;
  __chkstk_darwin(v12);
  uint64_t v56 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v54 = *(void *)(v14 - 8);
  uint64_t v55 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for FlowPage(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a5);
  uint64_t v49 = a1;
  uint64_t v30 = sub_10015F498(a1, 0LL, 0LL, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000011LL, 0x8000000100244840LL);
  id v31 = sub_100136C84(v53, a4, a5, v30);
  uint64_t v66 = 0LL;
  __int128 v64 = 0u;
  __int128 v65 = 0u;
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, enum case for FlowPage.viewController(_:), v26);
  uint64_t v32 = type metadata accessor for URL(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v25, 1LL, 1LL, v32);
  uint64_t v33 = type metadata accessor for ReferrerData(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v22, 1LL, 1LL, v33);
  v63[3] = type metadata accessor for DebugSettingsViewController(0LL);
  v63[0] = v31;
  id v34 = v31;
  static ActionMetrics.notInstrumented.getter();
  (*(void (**)(char *, void, uint64_t))(v54 + 104))( v16,  enum case for FlowPresentationContext.presentModal(_:),  v55);
  uint64_t v35 = v56;
  (*(void (**)(char *, void, uint64_t))(v57 + 104))(v56, enum case for FlowAnimationBehavior.infer(_:), v58);
  char v36 = v59;
  uint64_t v37 = (*(uint64_t (**)(char *, void, uint64_t))(v60 + 104))(v59, enum case for FlowOrigin.inapp(_:), v61);
  uint64_t v38 = static FlowActionPresentation.stackPush.getter(v37);
  uint64_t v40 = v39;
  uint64_t v41 = type metadata accessor for FlowAction(0LL);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  uint64_t v42 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)( &v64,  0LL,  0LL,  0LL,  v29,  v25,  0LL,  0LL,  v22,  v63,  v19,  v16,  v35,  v36,  0LL,  v38,  v40);
  uint64_t v43 = UIResponder.nearestActionRunner.getter();
  if (v43)
  {
    uint64_t v44 = v43;
    __int128 v64 = 0u;
    __int128 v65 = 0u;
    uint64_t v46 = v51;
    uint64_t v45 = v52;
    uint64_t v47 = v50;
    (*(void (**)(char *, void, uint64_t))(v51 + 104))( v50,  enum case for ActionRunner.Origin.userInitiated(_:),  v52);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v42, &v64, v47, v49);

    swift_release(v42);
    __n128 v48 = swift_release(v44);
    (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v47, v45, v48);
    sub_100029100((uint64_t)&v64);
  }

  else
  {
    swift_release(v42);
  }

uint64_t sub_1000290DC()
{
  return 0x73676E6974746553LL;
}

void sub_1000290F4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100029100(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002DF680);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_100029140()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC6Arcade15LockupMediaView_handlerKeys);
  swift_beginAccess(v0 + OBJC_IVAR____TtC6Arcade15LockupMediaView_handlerKeys, v22, 1LL, 0LL);
  uint64_t v2 = *v1;
  uint64_t v3 = *v1 + 56LL;
  uint64_t v4 = 1LL << *(_BYTE *)(*v1 + 32LL);
  uint64_t v5 = -1LL;
  if (v4 < 64) {
    uint64_t v5 = ~(-1LL << v4);
  }
  unint64_t v6 = v5 & *(void *)(*v1 + 56LL);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(*v1);
  int64_t v8 = 0LL;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }

    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1LL))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }

    if (v11 >= v7) {
      goto LABEL_21;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_21;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_21;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12) {
          break;
        }
      }
    }

LABEL_21:
  swift_release(v2);
  uint64_t v14 = *v1;
  void *v1 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v14);
  v23.value.super.Class isa = 0LL;
  v23.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v23, v15);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v0 + OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer)
           + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    uint64_t v17 = (void *)Strong;
    id v18 = *(id *)(Strong + qword_1002E70D0);
    ArtworkView.image.setter(0LL);

    uint64_t v19 = type metadata accessor for VideoView(0LL);
    uint64_t v20 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v17, 1LL, v19, v20);
  }

    swift_bridgeObjectRelease(v4);
    return 0LL;
  }

  Hasher.init(_seed:)(v25);
  unint64_t v10 = a1 + 16;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    unint64_t v12 = (void *)Strong;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v4);
    int64_t v13 = v12;
    NSObject.hash(into:)(v25);
  }

  else
  {
    Hasher._combine(_:)(0);
    swift_bridgeObjectRetain(v4);
  }

  uint64_t v14 = Hasher._finalize()();
  Swift::Bool v15 = -1LL << *(_BYTE *)(v4 + 32);
  uint64_t v16 = v14 & ~v15;
  if (((*(void *)(v4 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v17 = ~v15;
  while (1)
  {
    id v18 = (void *)swift_unknownObjectWeakLoadStrong(*(void *)(*(void *)(v4 + 48) + 8 * v16) + 16LL);
    uint64_t v19 = swift_unknownObjectWeakLoadStrong(v10);
    uint64_t v20 = (void *)v19;
    if (!v18)
    {
      if (!v19) {
        goto LABEL_18;
      }
      goto LABEL_13;
    }

    if (v19) {
      break;
    }
LABEL_13:

LABEL_14:
    uint64_t v16 = (v16 + 1) & v17;
    if (((*(void *)(v4 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) == 0) {
      goto LABEL_21;
    }
  }

  if (v18 != v20) {
    goto LABEL_14;
  }
LABEL_18:
  swift_bridgeObjectRelease(v4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  uint64_t v22 = *v2;
  v25[0] = *v2;
  *uint64_t v2 = 0x8000000000000000LL;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100029CCC();
    uint64_t v22 = v25[0];
  }

  unint64_t v9 = *(void *)(*(void *)(v22 + 48) + 8 * v16);
  sub_10002AA10(v16);
  UIImage_optional v23 = *v2;
  *uint64_t v2 = v25[0];
  swift_bridgeObjectRelease(v23);
  return v9;
}

    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    int64_t v7 = sub_10001A360(0LL, *(void *)(v7 + 16) + 1LL, 1, (void *)v7);
    uint64_t v27 = (void *)v7;
  }

  uint64_t v22 = v7;
LABEL_19:
  *(void *)&unint64_t result = swift_bridgeObjectRelease(v22).n128_u64[0];
  return result;
}

            __break(1u);
            goto LABEL_22;
          }

  if ((v26 & 0xC000000000000001LL) == 0)
  {
    if (!*(void *)((v26 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
      return;
    }

    uint64_t v29 = *(void *)(v26 + 32);
    swift_retain(v29);
    goto LABEL_24;
  }

    __break(1u);
LABEL_22:
    __break(1u);
  }

      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      return;
    }

    int64_t v8 = (v16 - 1) & v16;
    uint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }

  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

    int64_t v11 = (v18 - 1) & v18;
    uint64_t v14 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_6:
    Swift::Bool v15 = *(void *)(*(void *)(a1 + 48) + 8 * v14);
    uint64_t v16 = dispatch thunk of ShelfPresenter.shelf(for:)(v15, *(void *)(v8 + 608), *(void *)(v8 + 632));
    sub_100207E4C(v16, v15, v7);
    swift_release(v16);
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v21)
  {
LABEL_22:

    swift_release(a1);
    return;
  }

  id v18 = *(void *)(v20 + 8 * v19);
  if (v18)
  {
    unint64_t v12 = v19;
    goto LABEL_21;
  }

  while (1)
  {
    unint64_t v12 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v12 >= v21) {
      goto LABEL_22;
    }
    id v18 = *(void *)(v20 + 8 * v12);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }

  uint64_t v79 = ReviewsContainer.ratings.getter(v57);
  p_cache = (void **)(&OBJC_METACLASS____TtC6Arcade43ArticlePageHeaderCollectionElementsObserver + 16);
  if (v79)
  {
    uint64_t v82 = v79;
    uint64_t v83 = Ratings.status.getter(v80);
    if (v84)
    {
      uint64_t v85 = v84;
      if (String.count.getter(v83, v84) >= 1)
      {
        uint64_t v86 = *(char **)&v16[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_noRatingsView];
        double v87 = *(void **)&v86[OBJC_IVAR____TtC6Arcade20ProductNoRatingsView_statusLabel];
        uint64_t v88 = String._bridgeToObjectiveC()();
        p_cache = (void **)(&OBJC_METACLASS____TtC6Arcade43ArticlePageHeaderCollectionElementsObserver + 16);
        [v87 setText:v88];

        [v86 setNeedsLayout];
        swift_bridgeObjectRelease(v85);
        v80.n128_u64[0] = swift_release(v82).n128_u64[0];
        char v89 = 0LL;
        double v90 = 1LL;
        goto LABEL_28;
      }

      swift_bridgeObjectRelease(v85);
    }

    id v91 = *(void **)&v16[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_summaryView];
    double v92 = swift_getObjectType(v155);
    v146 = v92;
    id v93 = v91;
    swift_retain(v82);
    double v94 = v56;
    objc_super v95 = (uint64_t)v153;
    id v96 = v156;
    dispatch thunk of ComponentContainerDelegate.mutableState(ofItem:)(1LL, v92, v156);
    id v97 = (uint64_t)v154;
    Shelf.presentationHints.getter(v98);
    sub_10020E4D8(v82, v95, v162, v97, v93);

    __int128 v160 = *(void (**)(void, void))(v152 + 8);
    v160(v97, v94);
    double v99 = v147;
    v152 = *(void *)(v147 + 8);
    ((void (*)(uint64_t, uint64_t))v152)(v95, v157);
    double v100 = swift_release(v82);
    __n128 v101 = *(void **)&v16[OBJC_IVAR____TtC6Arcade20ReviewsContainerCell_histogramView];
    double v102 = type metadata accessor for Ratings(0LL, v100);
    v166[3] = v102;
    v166[4] = sub_10020F30C( (unint64_t *)&unk_1002EDDE0,  (uint64_t (*)(uint64_t))&type metadata accessor for Ratings);
    v166[0] = v82;
    swift_retain(v82);
    double v103 = v101;
    dispatch thunk of ComponentContainerDelegate.mutableState(ofItem:)(2LL, v146, v96);
    Shelf.presentationHints.getter(v104);
    sub_10001F010((uint64_t)v166, (uint64_t)v163);
    swift_dynamicCast(&v164, v163, v138, v102, 7LL);
    uint64_t v105 = v148;
    uint64_t v106 = v157;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v148, v95, v157);
    unint64_t v107 = type metadata accessor for NilState(0LL);
    unint64_t v108 = v149;
    WritableStateLens.init(_:)(v105, v107);
    sub_1001B8D08();
    (*(void (**)(char *, uint64_t))(v150 + 8))(v108, v151);
    uint64_t v109 = v164;
    Swift::Int v110 = v82;
    char v89 = 1LL;
    swift_release(v110);

    uint64_t v16 = v161;
    double v111 = swift_release(v109);
    uint64_t v112 = v97;
    p_cache = &OBJC_METACLASS____TtC6Arcade43ArticlePageHeaderCollectionElementsObserver.cache;
    ((void (*)(uint64_t, uint64_t, __n128))v160)(v112, v142, v111);
    ((void (*)(uint64_t, uint64_t))v152)(v95, v106);
    _s6Arcade17PillOverlayLayoutVwxx_0(v166);
    double v90 = 0LL;
  }

  else
  {
    char v89 = 1LL;
    double v90 = 1LL;
  }

void sub_10002939C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = a5 + 16;
  swift_beginAccess(a5 + 16, v17, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    unint64_t v12 = (void *)Strong;
    swift_beginAccess(Strong + OBJC_IVAR____TtC6Arcade15LockupMediaView_handlerKeys, v16, 33LL, 0LL);
    sub_10002A0AC(a6, (uint64_t)v18);
    swift_endAccess(v16);
  }

  else
  {
    uint64_t v19 = 0LL;
    memset(v18, 0, sizeof(v18));
  }

  sub_100006060((uint64_t)v18, (uint64_t *)&unk_1002DE600);
  if (a1)
  {
    swift_beginAccess(v10, v18, 0LL, 0LL);
    uint64_t v13 = swift_unknownObjectWeakLoadStrong(v10);
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      id v15 = a1;
      sub_1000AD7E0(v15, a7);
    }
  }

Swift::Int sub_1000294A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1000031E8(&qword_1002DE658);
    uint64_t v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    uint64_t v26 = v4;
    uint64_t v5 = __CocoaSet.makeIterator()(a1);
    uint64_t v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = type metadata accessor for FocusAvoidanceCollectionElementsObserver.FocusAvoidingContainer();
      do
      {
        v24[0] = v7;
        swift_dynamicCast(&v25, v24, (char *)&type metadata for Swift.AnyObject + 8, v8, 7LL);
        uint64_t v4 = v26;
        unint64_t v10 = *(void *)(v26 + 16);
        if (*(void *)(v26 + 24) <= v10)
        {
          sub_10001C5A0(v10 + 1);
          uint64_t v4 = v26;
        }

        uint64_t v11 = v25;
        Hasher.init(_seed:)(v24);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong(v11 + 16);
        if (Strong)
        {
          uint64_t v13 = (void *)Strong;
          Hasher._combine(_:)(1u);
          id v14 = v13;
          NSObject.hash(into:)(v24);
        }

        else
        {
          Hasher._combine(_:)(0);
        }

        Swift::Int result = Hasher._finalize()();
        uint64_t v16 = v4 + 56;
        uint64_t v17 = -1LL << *(_BYTE *)(v4 + 32);
        unint64_t v18 = result & ~v17;
        unint64_t v19 = v18 >> 6;
        if (((-1LL << v18) & ~*(void *)(v4 + 56 + 8 * (v18 >> 6))) != 0)
        {
          unint64_t v9 = __clz(__rbit64((-1LL << v18) & ~*(void *)(v4 + 56 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0LL;
        }

        else
        {
          char v20 = 0;
          unint64_t v21 = (unint64_t)(63 - v17) >> 6;
          do
          {
            if (++v19 == v21 && (v20 & 1) != 0)
            {
              __break(1u);
              return result;
            }

            BOOL v22 = v19 == v21;
            if (v19 == v21) {
              unint64_t v19 = 0LL;
            }
            v20 |= v22;
            uint64_t v23 = *(void *)(v16 + 8 * v19);
          }

          while (v23 == -1);
          unint64_t v9 = __clz(__rbit64(~v23)) + (v19 << 6);
        }

        *(void *)(v16 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v9;
        *(void *)(*(void *)(v4 + 48) + 8 * v9) = v11;
        ++*(void *)(v4 + 16);
        uint64_t v7 = __CocoaSet.Iterator.next()(result);
      }

      while (v7);
    }

    swift_release(v5);
  }

  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }

  return v4;
}

unint64_t sub_1000296D4(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    Hasher._combine(_:)(1u);
    id v6 = v5;
    NSObject.hash(into:)(v9);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  Swift::Int v7 = Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)(v7 & ~(-1LL << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1LL << *(_BYTE *)(a2 + 32)));
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_1000297A8()
{
  uint64_t v1 = v0;
  sub_1000031E8(&qword_1002DE688);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    uint64_t *v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + sub_100015B48(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }

void sub_10002993C()
{
  uint64_t v1 = v0;
  sub_1000031E8(&qword_1002DE610);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    uint64_t *v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + sub_100015B48(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }

void sub_100029B08()
{
  uint64_t v1 = v0;
  sub_1000031E8(&qword_1002DE6A0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    uint64_t *v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + sub_100015B48(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }

void sub_100029CB8()
{
}

void sub_100029CCC()
{
  uint64_t v1 = v0;
  sub_1000031E8(&qword_1002DE658);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    uint64_t *v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + sub_100015B48(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }

void sub_100029E74()
{
}

void sub_100029E88(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - v7;
  sub_1000031E8(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = static _SetStorage.copy(original:)(*v2);
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    swift_release(v9);
LABEL_30:
    *uint64_t v4 = v11;
    return;
  }

  uint64_t v28 = v4;
  unint64_t v12 = (void *)(v10 + 56);
  uint64_t v13 = v9 + 56;
  unint64_t v14 = (unint64_t)((1LL << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  int64_t v16 = 0LL;
  *(void *)(v11 + sub_100015B48(v0 + 16) = *(void *)(v9 + 16);
  uint64_t v17 = 1LL << *(_BYTE *)(v9 + 32);
  uint64_t v18 = -1LL;
  if (v17 < 64) {
    uint64_t v18 = ~(-1LL << v17);
  }
  unint64_t v19 = v18 & *(void *)(v9 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }

    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1LL))
    {
      __break(1u);
      goto LABEL_32;
    }

    if (v24 >= v20) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v20) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v13 + 8 * v16);
      if (!v25)
      {
        int64_t v16 = v24 + 2;
        if (v24 + 2 >= v20) {
          goto LABEL_28;
        }
        unint64_t v25 = *(void *)(v13 + 8 * v16);
        if (!v25) {
          break;
        }
      }
    }

LABEL_32:
  __break(1u);
}

    uint64_t v18 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v20 << 6);
    goto LABEL_33;
  }

  __break(1u);
}

  IndexPath.section.getter(v73);
  uint64_t v76 = v293;
  uint64_t v75 = v294;
  uint64_t v78 = dispatch thunk of ShelfPresenter.isShelfHidden(for:)(v77, v66, v293);
  if ((v78 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v289, v292);
    return 0.0;
  }

  v284 = v64;
  IndexPath.section.getter(v78);
  double v87 = dispatch thunk of ShelfPresenter.shelf(for:)(v86, v66, v76);
  uint64_t v88 = swift_unknownObjectRetain(v75);
  IndexPath.section.getter(v88);
  double v90 = v89;
  id v91 = (char *)v277;
  Shelf.contentType.getter(v89);
  double v92 = v292;
  v69(v74, v91, v292);
  id v93 = v72(v74, v92);
  double v94 = v93 == enum case for Shelf.ContentType.informationContainer(_:)
     || v93 == enum case for Shelf.ContentType.reviewsContainer(_:);
  objc_super v95 = v94;
  if (!v94) {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v74, v92);
  }
  id v96 = type metadata accessor for ShelfComponentContainerDelegate(0LL, v66, *(void *)(v281 + 88), v76);
  id v97 = *(void (**)(char *, uint64_t))(v35 + 8);
  v97(v91, v92);
  id v98 = v92;
  double v99 = v288;
  double v100 = v288[3];
  __n128 v101 = swift_allocObject(v96, 72LL, 7LL);
  *(void *)(v101 + sub_100015B48(v0 + 16) = v294;
  *(void *)(v101 + 24) = v90;
  *(_BYTE *)(v101 + 32) = v95;
  *(void *)(v101 + 40) = v100;
  v294 = *((_OWORD *)v99 + 2);
  *(_OWORD *)(v101 + 48) = v294;
  *(void *)(v101 + 64) = 0LL;
  swift_retain(v100);
  swift_unknownObjectRetain(v294);
  double v102 = (uint64_t)v289;
  double v103 = v287;
  sub_1000D2C54((uint64_t)v289, 1, v284, v287, (void *)v282);
  uint64_t v105 = v104;
  unint64_t v107 = v106;
  IndexPath.section.getter(v108);
  swift_retain(v101);
  swift_getWitnessTable(&unk_100238E70, v96);
  uint64_t v109 = sub_100195554(v105, v107, v87, v286, v103);
  swift_release(v87);
  swift_release_n(v101, 2LL);
  v97((char *)v102, v98);
  return v109;
}

  __break(1u);
}

          sub_100004624(v1);
          return (unint64_t)v3;
        }
      }
    }
  }

            uint64_t v30 = (v36 - 1) & v36;
            id v34 = __clz(__rbit64(v36)) + (v32 << 6);
          }
        }

        while (*(void *)(*(void *)(v26 + 48) + 8 * v34) != a2);
        uint64_t v38 = *(id *)(*(void *)(v26 + 56) + 8 * v34);
        swift_release(v26);
        uint64_t v39 = swift_getObjectType(v38);
        uint64_t v40 = swift_conformsToProtocol2(v39, &protocol descriptor for AnyComponentView);
        if (!v40) {
          goto LABEL_42;
        }
        uint64_t v41 = v40;
        uint64_t v42 = swift_getObjectType(v18);
        uint64_t v43 = v38;
        uint64_t v46 = v42;
        dispatch thunk of ComponentContainerDelegate.mutableState(ofItem:)(a2, v42, v47);
        uint64_t v44 = swift_getObjectType(v43);
        uint64_t v45 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v41 + 96))( v48,  v11,  v49,  v44,  v41);
        if ((v45 & 4) != 0)
        {
          objc_msgSend(v16, "setContentSize:", 0.0, 0.0);
          *((_BYTE *)v16 + *(void *)((swift_isaMask & *v16) + 0x98LL)) = 0;
          [v16 invalidateIntrinsicContentSize];
          [v16 setNeedsLayout];
        }

        if ((v45 & 1) != 0) {
          dispatch thunk of ComponentContainerDelegate.propagateSelection(ofItem:)(a2, v46, v47);
        }

        swift_release(v49);
        swift_unknownObjectRelease(v18);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }

      else
      {
      }
    }
  }

    uint64_t v9 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v8 << 6);
    goto LABEL_33;
  }

  __break(1u);
}

double sub_10002A0AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  Swift::Int v7 = *(void *)(*v3 + 40LL);
  swift_bridgeObjectRetain(*v3);
  Swift::Int v8 = AnyHashable._rawHashValue(seed:)(v7);
  uint64_t v9 = -1LL << *(_BYTE *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      sub_10001F054(*(void *)(v6 + 48) + 40 * v10, (uint64_t)v19);
      char v12 = static AnyHashable.== infix(_:_:)(v19, a1);
      sub_1000087D8((uint64_t)v19);
      if ((v12 & 1) != 0) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0) {
        goto LABEL_5;
      }
    }

    swift_bridgeObjectRelease(v6);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v15 = *v3;
    v19[0] = *v3;
    void *v3 = 0x8000000000000000LL;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10002993C();
      uint64_t v15 = v19[0];
    }

    uint64_t v16 = *(void *)(v15 + 48) + 40 * v10;
    __int128 v17 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v16;
    *(_OWORD *)(a2 + sub_100015B48(v0 + 16) = v17;
    *(void *)(a2 + 32) = *(void *)(v16 + 32);
    sub_10002A848(v10);
    uint64_t v18 = *v3;
    void *v3 = v19[0];
    *(void *)&double result = swift_bridgeObjectRelease(v18).n128_u64[0];
  }

  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v6);
    *(void *)(a2 + 32) = 0LL;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + sub_100015B48(v0 + 16) = 0u;
  }

  return result;
}

uint64_t sub_10002A20C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  if ((*v2 & 0xC000000000000001LL) != 0)
  {
    if (v4 < 0) {
      uint64_t v5 = *v2;
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*v2);
    __n128 v6 = swift_retain(a1);
    char v7 = __CocoaSet.contains(_:)(v6);
    swift_release(a1);
    if ((v7 & 1) != 0)
    {
      sub_10002A65C(v5, a1);
      uint64_t v9 = v8;
      swift_bridgeObjectRelease(v4);
      return v9;
    }

uint64_t sub_10002A410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for AdamId(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *v3;
  uint64_t v11 = *(void *)(*v3 + 40);
  uint64_t v13 = sub_100003B6C(&qword_1002DE6A8, v12, (uint64_t)&protocol conformance descriptor for AdamId);
  swift_bridgeObjectRetain(v10);
  uint64_t v34 = a1;
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  uint64_t v15 = -1LL << *(_BYTE *)(v10 + 32);
  unint64_t v16 = v14 & ~v15;
  if (((*(void *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) != 0)
  {
    uint64_t v32 = v3;
    uint64_t v33 = a2;
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v7 + 72);
    uint64_t v35 = v7;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      unint64_t v20 = v18 * v16;
      v19(v9, *(void *)(v10 + 48) + v18 * v16, v6);
      uint64_t v21 = sub_100003B6C( &qword_1002DE6B0,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  (uint64_t)&protocol conformance descriptor for AdamId);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v34, v6, v21);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v6);
      if ((v22 & 1) != 0) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v17;
      if (((*(void *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) == 0)
      {
        __n128 v23 = swift_bridgeObjectRelease(v10);
        uint64_t v24 = 1LL;
        a2 = v33;
        uint64_t v7 = v35;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1LL, v6, v23);
      }
    }

    swift_bridgeObjectRelease(v10);
    unint64_t v25 = v32;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v32);
    uint64_t v27 = *v25;
    uint64_t v36 = *v25;
    *unint64_t v25 = 0x8000000000000000LL;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100029E88((uint64_t (*)(void))&type metadata accessor for AdamId, &qword_1002DE6B8);
      uint64_t v27 = v36;
    }

    unint64_t v28 = *(void *)(v27 + 48) + v20;
    uint64_t v7 = v35;
    a2 = v33;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 32))(v33, v28, v6);
    sub_10002AC10(v16);
    uint64_t v29 = *v25;
    *unint64_t v25 = v36;
    __n128 v23 = swift_bridgeObjectRelease(v29);
    uint64_t v24 = 0LL;
  }

  else
  {
    __n128 v23 = swift_bridgeObjectRelease(v10);
    uint64_t v24 = 1LL;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1LL, v6, v23);
}

void sub_10002A65C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  __n128 v6 = swift_bridgeObjectRelease(*v3);
  uint64_t v7 = __CocoaSet.count.getter(a1, v6);
  uint64_t v8 = swift_unknownObjectRetain(a1);
  Swift::Int v9 = sub_1000294A0(v8, v7);
  Swift::Int v24 = v9;
  Hasher.init(_seed:)(v23);
  uint64_t v10 = a2 + 16;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    char v12 = (void *)Strong;
    Hasher._combine(_:)(1u);
    swift_retain(v9);
    id v13 = v12;
    NSObject.hash(into:)(v23);
  }

  else
  {
    Hasher._combine(_:)(0);
    swift_retain(v9);
  }

  uint64_t v14 = v23;
  Swift::Int v15 = Hasher._finalize()();
  uint64_t v16 = -1LL << *(_BYTE *)(v9 + 32);
  unint64_t v17 = v15 & ~v16;
  if (((*(void *)(v9 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v17) & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v18 = ~v16;
  do
  {
    uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong(*(void *)(*(void *)(v9 + 48) + 8 * v17) + 16LL);
    uint64_t v19 = swift_unknownObjectWeakLoadStrong(v10);
    unint64_t v20 = (void *)v19;
    if (!v14)
    {
      if (!v19) {
        goto LABEL_12;
      }
LABEL_7:

      goto LABEL_8;
    }

    if (!v19) {
      goto LABEL_7;
    }

    if (v14 == v20)
    {
LABEL_12:
      swift_release(v9);
      uint64_t v21 = *(void *)(*(void *)(v9 + 48) + 8 * v17);
      sub_10002AA10(v17);
      char v22 = (void *)swift_unknownObjectWeakLoadStrong(v10);
      uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong(v21 + 16);
      if (v22)
      {

        if (!v14) {
          goto LABEL_20;
        }

        if (v22 != v14)
        {
          __break(1u);
          goto LABEL_16;
        }
      }

      else
      {
LABEL_16:
        if (v14) {
          goto LABEL_21;
        }
      }

      Swift::Int *v3 = v24;
      return;
    }

void sub_10002A848(unint64_t a1)
{
  uint64_t v2 = v1;
  int64_t v3 = a1;
  uint64_t v4 = *v1;
  uint64_t v5 = *v1 + 56LL;
  uint64_t v6 = -1LL << *(_BYTE *)(*v1 + 32LL);
  unint64_t v7 = (a1 + 1) & ~v6;
  if (((1LL << v7) & *(void *)(v5 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v8 = ~v6;
    swift_retain(*v1);
    uint64_t v9 = _HashTable.previousHole(before:)(v3, v5, v8);
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1LL << v7)) != 0)
    {
      unint64_t v10 = (v9 + 1) & v8;
      do
      {
        sub_10001F054(*(void *)(v4 + 48) + 40 * v7, (uint64_t)v24);
        Swift::Int v13 = AnyHashable._rawHashValue(seed:)(*(void *)(v4 + 40));
        sub_1000087D8((uint64_t)v24);
        Swift::Int v14 = v13 & v8;
        if (v3 >= (uint64_t)v10)
        {
          if (v14 >= v10 && v3 >= v14)
          {
LABEL_16:
            uint64_t v17 = *(void *)(v4 + 48);
            unint64_t v18 = v17 + 40 * v3;
            uint64_t v19 = (__int128 *)(v17 + 40 * v7);
            if (v3 != v7 || (int64_t v3 = v7, v18 >= (unint64_t)v19 + 40))
            {
              __int128 v11 = *v19;
              __int128 v12 = v19[1];
              *(void *)(v18 + 32) = *((void *)v19 + 4);
              *(_OWORD *)unint64_t v18 = v11;
              *(_OWORD *)(v18 + sub_100015B48(v0 + 16) = v12;
              int64_t v3 = v7;
            }
          }
        }

        else if (v14 >= v10 || v3 >= v14)
        {
          goto LABEL_16;
        }

        unint64_t v7 = (v7 + 1) & v8;
      }

      while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v7) & 1) != 0);
    }

    *(void *)(v5 + (((unint64_t)v3 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) &= (-1LL << v3) - 1;
    swift_release(v4);
  }

  else
  {
    *(void *)(v5 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) &= (-1LL << a1) - 1;
  }

  uint64_t v20 = *v2;
  uint64_t v21 = *(void *)(*v2 + 16LL);
  BOOL v22 = __OFSUB__(v21, 1LL);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }

  else
  {
    *(void *)(v20 + sub_100015B48(v0 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }

unint64_t sub_10002AA10(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56LL;
  uint64_t v5 = -1LL << *(_BYTE *)(*v1 + 32LL);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1LL << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain(*v1);
    uint64_t v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
        Hasher.init(_seed:)(v22);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong(v10 + 16);
        if (Strong)
        {
          __int128 v12 = (void *)Strong;
          Hasher._combine(_:)(1u);
          swift_retain(v10);
          id v13 = v12;
          NSObject.hash(into:)(v22);
        }

        else
        {
          Hasher._combine(_:)(0);
          swift_retain(v10);
        }

        Swift::Int v14 = Hasher._finalize()();
        swift_release(v10);
        unint64_t v15 = v14 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v15 < v9) {
            goto LABEL_5;
          }
        }

        else if (v15 >= v9)
        {
          goto LABEL_14;
        }

        if (v2 >= (uint64_t)v15)
        {
LABEL_14:
          uint64_t v16 = *(void *)(v3 + 48);
          uint64_t v17 = (void *)(v16 + 8 * v2);
          unint64_t v18 = (void *)(v16 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
          {
            *uint64_t v17 = *v18;
            int64_t v2 = v6;
          }
        }

LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }

      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0);
    }

    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) &= (-1LL << v2) - 1;
    double result = swift_release(v3);
  }

  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) &= (-1LL << result) - 1;
  }

  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1LL);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }

  else
  {
    *(void *)(v3 + sub_100015B48(v0 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }

  return result;
}

        unint64_t v6 = (v6 + 1) & v7;
      }

      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0);
    }

    uint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    Swift::Int v24 = *v23;
    unint64_t v25 = (-1LL << v3) - 1;
  }

  else
  {
    uint64_t v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    unint64_t v25 = *v23;
    Swift::Int v24 = (-1LL << result) - 1;
  }

  *uint64_t v23 = v25 & v24;
  int64_t v26 = *(void *)(a2 + 16);
  uint64_t v27 = __OFSUB__(v26, 1LL);
  unint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }

  else
  {
    *(void *)(a2 + sub_100015B48(v0 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }

  return result;
}

  sub_100054AD0((uint64_t)a1, v24);
  Swift::Int v14 = v25;
  unint64_t v15 = v26;
  sub_100005F8C(v24, v25);
  a2 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v14, v15, a2, a3);
  _s6Arcade17PillOverlayLayoutVwxx_0(v24);
  return a2;
}

  uint64_t v8 = v3[2];
  unint64_t v9 = (v3[3] >> 1) - v8;
  uint64_t v10 = type metadata accessor for Dependency(0LL);
  if (v9 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  __int128 v11 = *(void *)(v10 - 8);
  __int128 v12 = (*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  swift_arrayInitWithCopy((char *)v3 + v12 + *(void *)(v11 + 72) * v8, a1 + v12, v2, v10);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    void *v1 = v3;
    return;
  }

  id v13 = v3[2];
  Swift::Int v14 = __OFADD__(v13, v2);
  unint64_t v15 = v13 + v2;
  if (!v14)
  {
    v3[2] = v15;
    goto LABEL_14;
  }

  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  unint64_t v9 = (uint64_t)&v3[5 * v8 + 4];
  uint64_t v10 = sub_1000031E8(&qword_1002DE700);
  swift_arrayInitWithCopy(v9, a1 + 32, v2, v10);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    void *v1 = v3;
    return;
  }

  __int128 v11 = v3[2];
  __int128 v12 = __OFADD__(v11, v2);
  id v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_14;
  }

      swift_release(v6);
LABEL_6:
      if (v3 == ++v4) {
        goto LABEL_19;
      }
    }
  }

  __break(1u);
}

  Swift::Int v14 = *(void **)&v0[OBJC_IVAR____TtC6Arcade27TopChartsPageViewController_activeViewController];
  if (!v14) {
    return;
  }
  unint64_t v15 = [v14 view];
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = v15;
  uint64_t v17 = [v0 view];
  if (!v17)
  {
LABEL_13:
    __break(1u);
    return;
  }

  unint64_t v18 = v17;
  [v17 bounds];
  BOOL v20 = v19;
  BOOL v22 = v21;
  Swift::Int v24 = v23;
  int64_t v26 = v25;

  objc_msgSend(v16, "setFrame:", v20, v22, v24, v26);
}

            unint64_t v15 = v33;
          }
        }

      ++v25;
      uint64_t v27 = v68;
      if (v25 == v68)
      {
        swift_bridgeObjectRelease(v26);
        return;
      }
    }
  }

  if (!*(void *)(*(void *)((char *)v2 + v4)
                  + OBJC_IVAR____TtCC6Arcade28HorizontalShelfContainerCellP33_1E6BB4DDCDAD15F8D7B4EECC014D169010DataSource_layout
                  + 72))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  return result;
}

  Swift::Int v14 = *(void **)&v0[OBJC_IVAR____TtC6Arcade35TopChartsDiffablePageViewController_activeViewController];
  if (!v14) {
    return;
  }
  unint64_t v15 = [v14 view];
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = v15;
  uint64_t v17 = [v0 view];
  if (!v17)
  {
LABEL_13:
    __break(1u);
    return;
  }

  unint64_t v18 = v17;
  [v17 bounds];
  BOOL v20 = v19;
  BOOL v22 = v21;
  Swift::Int v24 = v23;
  int64_t v26 = v25;

  objc_msgSend(v16, "setFrame:", v20, v22, v24, v26);
}

void sub_10002AC10(int64_t a1)
{
  uint64_t v3 = type metadata accessor for AdamId(0LL);
  uint64_t v32 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *v1;
  uint64_t v7 = *v1 + 56;
  uint64_t v8 = -1LL << *(_BYTE *)(*v1 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1LL << v9) & *(void *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v29 = v1;
    uint64_t v10 = ~v8;
    swift_retain(v6);
    uint64_t v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    uint64_t v31 = v7;
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1LL << v9)) != 0)
    {
      unint64_t v12 = (v11 + 1) & v10;
      uint64_t v13 = *(void *)(v32 + 72);
      uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      do
      {
        int64_t v14 = v13 * v9;
        v30(v5, *(void *)(v6 + 48) + v13 * v9, v3);
        uint64_t v15 = *(void *)(v6 + 40);
        uint64_t v16 = sub_100003B6C( &qword_1002DE6A8,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  (uint64_t)&protocol conformance descriptor for AdamId);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v3, v16);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v12)
        {
        }

        else if (v18 < v12 && a1 < (uint64_t)v18)
        {
          goto LABEL_6;
        }

        uint64_t v21 = *(void *)(v6 + 48);
        int64_t v22 = v13 * a1;
        unint64_t v23 = v21 + v13 * a1;
        uint64_t v24 = v21 + v14;
        if (v13 * a1 < v14 || v23 >= v24 + v13)
        {
          swift_arrayInitWithTakeFrontToBack(v23, v24, 1LL, v3);
        }

        else
        {
          a1 = v9;
          if (v22 == v14) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront(v23);
        }

        a1 = v9;
LABEL_6:
        unint64_t v9 = (v9 + 1) & v10;
      }

      while (((*(void *)(v31 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v9) & 1) != 0);
    }

    *(void *)(v31 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) &= (-1LL << a1) - 1;
    swift_release(v6);
    uint64_t v1 = v29;
  }

  else
  {
    *(void *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) &= (-1LL << a1) - 1;
  }

  uint64_t v25 = *v1;
  uint64_t v26 = *(void *)(*v1 + 16);
  BOOL v27 = __OFSUB__(v26, 1LL);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }

  else
  {
    *(void *)(v25 + sub_100015B48(v0 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
  }

void sub_10002AE8C(int64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v62 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000031E8((uint64_t *)&unk_1002DE5F0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = a4;
  uint64_t v64 = a5;
  sub_100029140();
  sub_10001E9B8(a1, 0LL, a3, a6, a7);
  uint64_t v19 = v18;
  sub_10001E9B8(0LL, a2, a3, a6, a7);
  uint64_t v21 = v20;
  if (v20[2])
  {
    uint64_t v22 = v20[4];
    uint64_t v23 = v20[5];
    swift_retain(v22);
    swift_retain(v23);
  }

  else
  {
    uint64_t v22 = 0LL;
    uint64_t v23 = 0LL;
  }

  swift_bridgeObjectRelease(v21);
  uint64_t v59 = *(void *)(v19 + 16);
  if (!v59)
  {
    swift_bridgeObjectRelease(v19);
    if (!v22) {
      return;
    }
    goto LABEL_12;
  }

  uint64_t v56 = v23;
  uint64_t v57 = v22;
  uint64_t v24 = 0LL;
  uint64_t v58 = v64 + OBJC_IVAR____TtC6Arcade15LockupMediaView_handlerKeys;
  uint64_t v25 = *(void **)(v64 + OBJC_IVAR____TtC6Arcade15LockupMediaView_imageView);
  uint64_t v55 = v19;
  uint64_t v26 = (uint64_t *)(v19 + 40);
  do
  {
    uint64_t v31 = *(v26 - 1);
    uint64_t v32 = *v26;
    swift_retain(v31);
    v68[0] = objc_msgSend(v25, "hash", swift_retain(v32).n128_f64[0]);
    uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    uint64_t v70 = v33;
    v34._uint64_t countAndFlagsBits = 45LL;
    v34._object = (void *)0xE100000000000000LL;
    String.append(_:)(v34);
    v68[0] = v24;
    v35._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    object = v35._object;
    String.append(_:)(v35);
    swift_bridgeObjectRelease(object);
    v68[0] = v69;
    v68[1] = v70;
    AnyHashable.init<A>(_:)(&v69, v68, &type metadata for String, &protocol witness table for String);
    sub_10001F054((uint64_t)&v69, (uint64_t)v66);
    swift_beginAccess(v58, v65, 33LL, 0LL);
    sub_10001B2BC((uint64_t)v68, (uint64_t)v66);
    swift_endAccess(v65);
    uint64_t v37 = sub_1000087D8((uint64_t)v68);
    Artwork.style.getter(v37);
    uint64_t v38 = type metadata accessor for Artwork.Style(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56LL))(v17, 0LL, 1LL, v38);
    uint64_t v39 = ArtworkView.style.setter(v17);
    uint64_t v40 = v60;
    uint64_t v41 = Artwork.crop.getter(v39);
    uint64_t v42 = Artwork.Crop.preferredContentMode.getter(v41);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v62);
    uint64_t v43 = ArtworkView.contentMode.setter(v42);
    uint64_t v44 = ArtworkLoaderConfig.size.getter(v43);
    uint64_t v45 = ArtworkView.imageSize.setter(v44);
    uint64_t v46 = Artwork.backgroundColor.getter(v45);
    if (!v46)
    {
      unint64_t v47 = sub_100010F30();
      uint64_t v46 = static UIColor.placeholderBackground.getter(v47);
    }

    ArtworkView.backgroundColor.setter(v46);
    sub_10001F054((uint64_t)&v69, (uint64_t)v68);
    uint64_t v27 = swift_allocObject(&unk_1002817D0, 24LL, 7LL);
    swift_unknownObjectWeakInit(v27 + 16, v64);
    sub_10001F054((uint64_t)&v69, (uint64_t)v66);
    uint64_t v28 = swift_allocObject(&unk_1002817F8, 72LL, 7LL);
    *(void *)(v28 + sub_100015B48(v0 + 16) = v27;
    __int128 v29 = v66[1];
    *(_OWORD *)(v28 + 24) = v66[0];
    *(_OWORD *)(v28 + 40) = v29;
    *(void *)(v28 + 56) = v67;
    *(void *)(v28 + 64) = v24;
    __n128 v30 = swift_retain(v27);
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v32,  2LL,  1LL,  v68,  sub_10001F0B8,  v28,  v30);
    swift_release(v32);
    swift_release(v31);
    swift_release(v28);
    sub_100006060((uint64_t)v68, (uint64_t *)&unk_1002DE600);
    sub_1000087D8((uint64_t)&v69);
    swift_release(v27);
    v26 += 2;
    ++v24;
  }

  while (v59 != v24);
  swift_bridgeObjectRelease(v55);
  uint64_t v22 = v57;
  uint64_t v23 = v56;
  if (v57)
  {
LABEL_12:
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v64 + OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer)
             + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (Strong)
    {
      uint64_t v49 = (void *)Strong;
      uint64_t v50 = *(void **)(Strong + qword_1002E70D0);
      sub_10001F108(v22, v23);
      id v51 = v50;
      sub_1000FB124();

      uint64_t v52 = type metadata accessor for VideoView(0LL);
      uint64_t v53 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v23, 2LL, 1LL, v49, v52, v53);
      sub_10001F134(v22, v23);
      swift_release(v23);
      swift_release(v22);
    }

    else
    {
      swift_release(v23);
      swift_release(v22);
    }
  }

void *sub_10002B41C(int64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 + 16);
  if (v7)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v7);
    uint64_t v8 = 40LL;
    do
    {
      uint64_t v9 = *(void *)(v6 + v8);
      swift_retain(v9);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      uint64_t v11 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      uint64_t v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
      specialized ContiguousArray._endMutation()(v12);
      v8 += 16LL;
      --v7;
    }

    while (v7);
    swift_bridgeObjectRelease(v6);
  }

  else
  {
    swift_bridgeObjectRelease(v5);
  }

  return _swiftEmptyArrayStorage;
}

uint64_t sub_10002B4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v72 = a2;
  uint64_t v5 = sub_1000031E8(&qword_1002DEA70);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v71 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v70 = (char *)&v66 - v8;
  uint64_t v9 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for VideoControls(0LL);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v66 - v16;
  uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __chkstk_darwin(v18);
  BOOL v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for VideoFillMode(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for VideoConfiguration(0LL);
  uint64_t v26 = __chkstk_darwin(v25);
  __int128 v29 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a1) {
    return sub_1001B2138();
  }
  uint64_t v68 = v27;
  uint64_t v69 = v26;
  uint64_t v30 = Trailers.videos.getter();
  uint64_t v31 = v30;
  if (!((unint64_t)v30 >> 62))
  {
    uint64_t result = *(void *)((v30 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (result) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }

  if (v30 >= 0) {
    v30 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v30);
  if (!result)
  {
LABEL_13:
    swift_bridgeObjectRelease(v31);
    return sub_1001B2138();
  }

LABEL_4:
  uint64_t v67 = v3;
  if ((v31 & 0xC000000000000001LL) != 0)
  {
    uint64_t v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v31);
  }

  else
  {
    if (!*(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
      return result;
    }

    uint64_t v33 = *(void *)(v31 + 32);
    swift_retain(v33);
  }

  __n128 v34 = swift_bridgeObjectRelease(v31);
  uint64_t v35 = (*(uint64_t (**)(char *, void, uint64_t, __n128))(v22 + 104))( v24,  enum case for VideoFillMode.scaleAspectFill(_:),  v21,  v34);
  uint64_t v36 = Video.preview.getter(v35);
  double v37 = Artwork.size.getter(v36);
  swift_release(v36);
  AspectRatio.init(_:_:)(v38, v37);
  uint64_t v39 = type metadata accessor for AspectRatio(0LL);
  uint64_t v40 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v20, 0LL, 1LL, v39);
  uint64_t v41 = Video.playbackControls.getter(v40);
  uint64_t v42 = Video.autoPlayPlaybackControls.getter(v41);
  char v43 = Video.canPlayFullScreen.getter(v42);
  char v44 = Video.allowsAutoPlay.getter();
  char v45 = Video.looping.getter();
  VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)( v24,  v20,  v17,  v15,  v43 & 1,  v44 & 1,  v45 & 1,  0LL,  0LL,  1);
  uint64_t v46 = type metadata accessor for VideoViewManager(0LL);
  uint64_t v47 = v72;
  __n128 v48 = BaseObjectGraph.inject<A>(_:)(v73, v46, v46);
  uint64_t v49 = v73[0];
  uint64_t v50 = Video.playbackId.getter(v73, v48);
  Video.videoUrl.getter(v50);
  uint64_t v51 = type metadata accessor for URL(0LL);
  uint64_t v52 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56LL))(v11, 0LL, 1LL, v51);
  uint64_t v53 = (uint64_t)v70;
  uint64_t v54 = Video.templateMediaEvent.getter(v52);
  uint64_t v55 = (uint64_t)v71;
  Video.templateClickEvent.getter(v54);
  uint64_t v56 = type metadata accessor for VideoView(0LL);
  uint64_t v57 = sub_100003B6C( (unint64_t *)&qword_1002DEA78,  type metadata accessor for VideoView,  (uint64_t)&unk_10023D670);
  uint64_t v58 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)( v73,  v11,  v29,  v53,  v55,  v47,  v56,  v57);
  sub_100006060(v55, &qword_1002DEA70);
  sub_100006060(v53, &qword_1002DEA70);
  sub_100006060((uint64_t)v11, (uint64_t *)&unk_1002E1810);
  sub_100006060((uint64_t)v73, (uint64_t *)&unk_1002DE600);
  uint64_t v59 = v67;
  uint64_t v60 = *(void *)&v67[OBJC_IVAR____TtC6Arcade15LockupMediaView_videoContainer];
  id v61 = v58;
  sub_1001B195C(v58);
  uint64_t v62 = v59;
  uint64_t v63 = *(void **)&v59[OBJC_IVAR____TtC6Arcade15LockupMediaView_imageView];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v60 + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  __int128 v65 = Strong;
  if (Strong) {

  }
  [v63 setHidden:v65 != 0];
  [v62 setNeedsLayout];
  swift_release(v33);
  swift_release(v49);

  return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v29, v69);
}

  if (a2)
  {
    if (a2 == 1)
    {
      if ((unint64_t)v6 > 6)
      {
        if (qword_1002DD128 != -1) {
          swift_once(&qword_1002DD128, sub_1001E39BC);
        }
        uint64_t v7 = &xmmword_1002F17E0;
      }

      else
      {
        if (qword_1002DD120 != -1) {
          swift_once(&qword_1002DD120, sub_1001E393C);
        }
        uint64_t v7 = &xmmword_1002F17A0;
      }
    }

    else if ((unint64_t)v6 > 6)
    {
      if (qword_1002DD138 != -1) {
        swift_once(&qword_1002DD138, sub_1001E3ABC);
      }
      uint64_t v7 = &xmmword_1002F1860;
    }

    else
    {
      if (qword_1002DD130 != -1) {
        swift_once(&qword_1002DD130, sub_1001E3A3C);
      }
      uint64_t v7 = &xmmword_1002F1820;
    }
  }

  else if ((unint64_t)v6 > 6)
  {
    if (qword_1002DD118 != -1) {
      swift_once(&qword_1002DD118, sub_1001E38BC);
    }
    uint64_t v7 = &xmmword_1002F1760;
  }

  else
  {
    if (qword_1002DD110 != -1) {
      swift_once(&qword_1002DD110, sub_1001E383C);
    }
    uint64_t v7 = &xmmword_1002F1720;
  }

  sub_100072D0C((uint64_t)v7, (uint64_t)v10);
  sub_100072D48((uint64_t)v10, (uint64_t)v11);
  *(void *)a3 = a1;
  sub_100072D48((uint64_t)v11, a3 + 8);
  uint64_t v8 = 1;
LABEL_34:
  *(_BYTE *)(a3 + 64) = v8;
}

  __int128 v29 =  [(id)objc_opt_self(UIAlertController) alertControllerWithTitle:v26 message:v25 preferredStyle:1];

  char v89 = v29;
  sub_10009A36C(v29);
  uint64_t result = HttpTemplateAction.parameters.getter(v30);
  uint64_t v32 = result;
  uint64_t v33 = 0LL;
  __n128 v34 = *(void *)(result + 16);
  uint64_t v79 = OBJC_IVAR____TtC6Arcade22HttpTemplateController_okAction;
  uint64_t v80 = OBJC_IVAR____TtC6Arcade22HttpTemplateController_hasRequiredParameters;
  uint64_t v82 = v83 + 7;
  uint64_t v83 = v34;
  uint64_t v84 = result;
  uint64_t v86 = v16;
  double v87 = v12;
  uint64_t v85 = v19;
  while (1)
  {
    if (v33 == v34)
    {
      uint64_t v35 = 1LL;
      uint64_t v33 = v34;
      goto LABEL_10;
    }

    if (v33 >= *(void *)(v32 + 16)) {
      break;
    }
    uint64_t v36 = &v81[*(int *)(v12 + 48)];
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))( v36,  v32 + ((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
    + *(void *)(v7 + 72) * v33,
      v6);
    double v37 = (char *)v16 + *(int *)(v12 + 48);
    char *v16 = v33;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v36, v6);
    uint64_t v35 = 0LL;
    ++v33;
LABEL_10:
    uint64_t v38 = v90;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v16, v35, 1LL, v12);
    sub_10009ABB8((uint64_t)v16, (uint64_t)v19);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v38 + 48))(v19, 1LL, v12) == 1)
    {
      swift_bridgeObjectRelease(v32);
      uint64_t v59 = v74[3];
      uint64_t v60 = v74[4];
      sub_100005F8C(v74, v59);
      id v61 = (uint64_t)v76;
      uint64_t v62 = v89;
      *uint64_t v76 = v89;
      swift_storeEnumTagMultiPayload(v61, v73, 11LL);
      uint64_t v63 = enum case for FlowPresentationContext.presentModal(_:);
      uint64_t v64 = type metadata accessor for FlowPresentationContext(0LL);
      __int128 v65 = (uint64_t)v77;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 104LL))(v77, v63, v64);
      uint64_t v66 = v65 + *(int *)(v75 + 20);
      uint64_t v67 = enum case for FlowAnimationBehavior.infer(_:);
      uint64_t v68 = type metadata accessor for FlowAnimationBehavior(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 104LL))(v66, v67, v68);
      uint64_t v69 = type metadata accessor for ReferrerData(0LL);
      uint64_t v70 = (uint64_t)v78;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56LL))(v78, 1LL, 1LL, v69);
      uint64_t v71 = *(void (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))(v60 + 16);
      uint64_t v72 = v62;
      v71(v61, v65, 0LL, 0LL, v70, v59, v60);

      sub_100006060(v70, &qword_1002E1FB0);
      sub_100046E64(v65, type metadata accessor for FlowPresentationHints);
      return sub_100046E64(v61, type metadata accessor for FlowDestination);
    }

    uint64_t v39 = *v19;
    uint64_t v40 = (char *)v19 + *(int *)(v12 + 48);
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v41(v11, v40, v6);
    uint64_t v42 = v6;
    char v43 = v88;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v88, v11, v42);
    char v44 = v7;
    char v45 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v46 = (v45 + 24) & ~v45;
    uint64_t v47 = v11;
    __n128 v48 = (v82 + v46) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v49 = swift_allocObject(&unk_100284F20, v48 + 8, v45 | 7);
    *(void *)(v49 + sub_100015B48(v0 + 16) = v39;
    uint64_t v50 = v43;
    uint64_t v6 = v42;
    v41((char *)(v49 + v46), v50, v42);
    uint64_t v51 = v91;
    *(void *)(v49 + v48) = v91;
    uint64_t v11 = v47;
    aBlock[4] = sub_10009AC74;
    id v93 = v49;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_10004FE30;
    aBlock[3] = &unk_100284F38;
    uint64_t v52 = _Block_copy(aBlock);
    uint64_t v53 = v93;
    uint64_t v54 = v51;
    *(void *)&uint64_t v55 = swift_release(v53).n128_u64[0];
    objc_msgSend(v89, "addTextFieldWithConfigurationHandler:", v52, v55);
    _Block_release(v52);
    if ((HttpTemplateParameter.isRequired.getter(v56) & 1) != 0)
    {
      uint64_t v57 = v91;
      v91[v80] = 1;
      uint64_t v58 = *(void **)&v57[v79];
      if (v58) {
        [v58 setEnabled:0];
      }
    }

    uint64_t v7 = v44;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v47, v42);
    uint64_t v16 = v86;
    uint64_t v12 = v87;
    uint64_t v32 = v84;
    uint64_t v19 = v85;
    __n128 v34 = v83;
  }

  __break(1u);
  return result;
}

      sub_100015B48((uint64_t)v46);
      v7 += 16LL;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n(v38, 2LL);
        break;
      }
    }
  }

  sub_100133C4C();
}

      sub_100015B48((uint64_t)v65);
      v7 += 16LL;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n(v54, 2LL);
        break;
      }
    }
  }

  sub_100133C4C();
}

  if ((a1 & 0xC000000000000001LL) != 0)
  {
    uint64_t v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
  }

  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }

    uint64_t v10 = *(id *)(a1 + 32);
  }

  uint64_t v31 = v10;
  *(void *)&uint64_t v11 = swift_bridgeObjectRelease(a1).n128_u64[0];
  uint64_t v12 = objc_msgSend(v31, "progress", v11);
  if (!v12)
  {
    if (qword_1002DC380 == -1)
    {
LABEL_11:
      uint64_t v18 = sub_1000061F4(v5, (uint64_t)qword_1002EE558);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
      uint64_t v19 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      BOOL v20 = type metadata accessor for LogMessage(0LL);
      uint64_t v21 = swift_allocObject( v19,  ((*(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL))
            + 3LL * *(void *)(*(void *)(v20 - 8) + 72LL),
              *(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL) | 7LL);
      *(_OWORD *)(v21 + sub_100015B48(v0 + 16) = xmmword_100232070;
      LogMessage.init(stringLiteral:)(0xD00000000000001DLL, 0x800000010024DEC0LL);
      uint64_t v33 = sub_100006028(0LL, (unint64_t *)&qword_1002E42B0, &OBJC_CLASS___NSNumber_ptr);
      v32[0] = a3;
      uint64_t v22 = a3;
      static LogMessage.traceableSensitive(_:)(v32);
      sub_100006060((uint64_t)v32, (uint64_t *)&unk_1002DF680);
      LogMessage.init(stringLiteral:)(0xD00000000000002BLL, 0x800000010024DF00LL);
      Logger.error(_:)(v21, v5, &protocol witness table for OSLogger);
      swift_bridgeObjectRelease(v21);

LABEL_22:
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v23);
      return;
    }

void sub_10002B9DC(uint64_t a1, double a2, double a3)
{
  if (qword_1002DCA08 != -1) {
    swift_once(&qword_1002DCA08, sub_1000ADF54);
  }
  uint64_t v6 = type metadata accessor for LockupMediaLayout.Metrics(0LL);
  uint64_t v7 = sub_1000061F4(v6, (uint64_t)qword_1002EFF48);
  uint64_t v8 = type metadata accessor for LockupMediaLayout(0LL);
  uint64_t v9 = sub_100003B6C( &qword_1002DEA80,  (uint64_t (*)(uint64_t))&type metadata accessor for LockupMediaLayout,  (uint64_t)&protocol conformance descriptor for LockupMediaLayout);
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v7, a1, v8, v9, a2, a3);
}

uint64_t sub_10002BA98()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10002BABC()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_10002BAE8()
{
  uint64_t v0 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v0);
  int64_t v2 = &v16[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, v3);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v8 = (objc_class *)type metadata accessor for HeaderButton(0LL);
  if (qword_1002DC568 != -1) {
    swift_once(&qword_1002DC568, sub_1000711B8);
  }
  uint64_t v9 = sub_1000061F4(v4, (uint64_t)qword_1002EECA0);
  uint64_t v10 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v10(v7, v9, v4);
  uint64_t v11 = (char *)objc_msgSend(objc_allocWithZone(v8), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10(v2, (uint64_t)v7, v4);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v5 + 56))(v2, 0LL, 1LL, v4);
  uint64_t v12 = (uint64_t)&v11[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase];
  swift_beginAccess(&v11[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase], v16, 33LL, 0LL);
  uint64_t v13 = v11;
  sub_100014CB4((uint64_t)v2, v12);
  swift_endAccess(v16);
  sub_100100A48((uint64_t)v7);

  uint64_t result = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  qword_1002DEA88 = (uint64_t)v13;
  return result;
}

void sub_10002BC98()
{
  qword_1002EE670 = 0x4024000000000000LL;
}

char *sub_10002BCA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v2);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  ObjCClassFromObject = (objc_class *)swift_getObjCClassFromObject(v1);
  if (qword_1002DC568 != -1) {
    swift_once(&qword_1002DC568, sub_1000711B8);
  }
  uint64_t v11 = sub_1000061F4(v6, (uint64_t)qword_1002EECA0);
  uint64_t v12 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
  v12(v9, v11, v6);
  uint64_t v13 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromObject), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12(v4, (uint64_t)v9, v6);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v7 + 56))(v4, 0LL, 1LL, v6);
  uint64_t v14 = (uint64_t)&v13[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase];
  swift_beginAccess(&v13[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase], v19, 33LL, 0LL);
  uint64_t v15 = v13;
  sub_100014CB4((uint64_t)v4, v14);
  swift_endAccess(v19);
  sub_100100A48((uint64_t)v9);

  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t ObjectType = swift_getObjectType(v1);
  swift_deallocPartialClassInstance( v1,  ObjectType,  *(unsigned int *)((swift_isaMask & *v1) + 0x30LL),  *(unsigned __int16 *)((swift_isaMask & *v1) + 0x34LL));
  return v15;
}

char *sub_10002BEB0(double a1, uint64_t a2, uint64_t a3, void *a4, char *a5)
{
  uint64_t v10 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
  v19(v18, (uint64_t)a5, v14, v16);
  BOOL v20 = (char *)objc_msgSend(objc_allocWithZone(v5), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  ((void (*)(char *, char *, uint64_t))v19)(v12, v18, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0LL, 1LL, v14);
  uint64_t v21 = (uint64_t)&v20[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase];
  swift_beginAccess(&v20[OBJC_IVAR____TtC6Arcade17DynamicTypeButton_fontUseCase], &v31, 33LL, 0LL);
  sub_100014CB4((uint64_t)v12, v21);
  swift_endAccess(&v31);
  sub_100100A48((uint64_t)v18);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v18, v14);
  uint64_t v23 = v20;
  if (a3)
  {
    NSString v25 = String._bridgeToObjectiveC()();
    *(void *)&double v24 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }

  else
  {
    NSString v25 = 0LL;
  }

  objc_msgSend(v20, "setTitle:forState:", v25, 0, v24);

  [v20 setImage:a4 forState:0];
  objc_msgSend(v20, "setContentEdgeInsets:", 0.0, a1, 0.0, 0.0);
  objc_msgSend(v20, "setImageEdgeInsets:", 0.0, -a1, 0.0, a1);
  CGAffineTransformMakeScale(&v31, -1.0, 1.0);
  [v20 setTransform:&v31];
  id v26 = [v20 titleLabel];
  if (v26)
  {
    uint64_t v27 = v26;
    CGAffineTransformMakeScale(&v31, -1.0, 1.0);
    [v27 setTransform:&v31];
  }

  id v28 = [v20 imageView];
  if (v28)
  {
    __int128 v29 = v28;
    CGAffineTransformMakeScale(&v31, -1.0, 1.0);
    [v29 setTransform:&v31];

    a4 = v29;
  }

  v22(a5, v14);
  return v20;
}

id sub_10002C244()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeaderButton(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10002C27C()
{
  return type metadata accessor for HeaderButton(0LL);
}

uint64_t type metadata accessor for HeaderButton(uint64_t a1)
{
  uint64_t result = qword_1002DEAB8;
  if (!qword_1002DEAB8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeaderButton);
  }
  return result;
}

uint64_t sub_10002C2C0(uint64_t a1)
{
  return swift_updateClassMetadata2(a1, 256LL, 0LL, v2, a1 + 368);
}

id sub_10002C2F4(double a1, double a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6)
{
  if (qword_1002DC3E0 != -1) {
    swift_once(&qword_1002DC3E0, sub_10002BAE8);
  }
  uint64_t v11 = (void *)qword_1002DEA88;
  if (a4) {
    a4 = String._bridgeToObjectiveC()();
  }
  [v11 setTitle:a4 forState:0];

  uint64_t v12 = (void *)qword_1002DEA88;
  [(id)qword_1002DEA88 setImage:a5 forState:0];
  id v13 = [v12 titleLabel];
  uint64_t v14 = v13;
  if (!v13) {
    goto LABEL_8;
  }
  id v15 = v13;
  id result = [v15 font];
  if (result)
  {
    uint64_t v17 = result;
    id v18 = [result _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:a6];

    [v15 setFont:v18];
LABEL_8:
    objc_msgSend((id)qword_1002DEA88, "sizeThatFits:", a1, a2);

    uint64_t v19 = (void *)qword_1002DEA88;
    [(id)qword_1002DEA88 setTitle:0 forState:0];
    return [v19 setImage:0 forState:0];
  }

  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for DebugSettingsSuite()
{
  return &type metadata for DebugSettingsSuite;
}

void sub_10002C4BC(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_10006734C(a1, a2);
  uint64_t v5 = *(_BYTE **)(v2 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView);
  v5[OBJC_IVAR____TtC6Arcade12TVLockupView_state] = v4;
  if (a2)
  {
    uint64_t v6 = swift_allocObject(&unk_100281900, 25LL, 7LL);
    *(void *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
    *(_BYTE *)(v6 + 24) = v4;
    v11[4] = sub_10002D8A8;
    uint64_t v12 = v6;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256LL;
    v11[2] = sub_100135408;
    v11[3] = &unk_100281918;
    uint64_t v7 = _Block_copy(v11);
    uint64_t v8 = v12;
    id v9 = a2;
    uint64_t v10 = v5;
    objc_msgSend(v9, "addCoordinatedAnimations:completion:", v7, 0, swift_release(v8).n128_f64[0]);
    _Block_release(v7);
  }

  else
  {
    sub_100163FC8(v4);
  }

void sub_10002C5B8(char a1)
{
  void (*v3)(void *__return_ptr);
  id v4;
  double v5;
  double v6;
  uint64_t v7;
  void v8[17];
  if (v1[OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_isShowingSeeAll] == 1)
  {
    uint64_t v3 = *(void (**)(void *__return_ptr))(swift_getObjectType(v1) + 520);
    char v4 = objc_retain(*(id *)(*(void *)&v1[OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView]
                           + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView));
    v3(v8);
    uint64_t v5 = *(double *)v8;
    uint64_t v6 = *(double *)&v8[1];
    sub_10002D7E8(v8);
    sub_10005C558(a1, v1, v5, v6);
    ArtworkView.image.setter(v7);
  }

void sub_10002C674(void *a1)
{
  uint64_t v2 = v1;
  id v3 = a1;
  if (a1)
  {
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView);
    uint64_t v5 = OBJC_IVAR____TtC6Arcade12TVLockupView_artworkOverlayView;
    uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkOverlayView);
    if (v6) {
      goto LABEL_4;
    }
    __int128 v25 = *(_OWORD *)(v4 + OBJC_IVAR____TtC6Arcade12TVLockupView_pillOverlayMetrics);
    uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC6Arcade12TVLockupView_pillOverlayMetrics + 16);
    uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC6Arcade12TVLockupView_pillOverlayMetrics + 24);
    id v9 = (objc_class *)type metadata accessor for ArtworkOverlayView();
    uint64_t v10 = (char *)objc_allocWithZone(v9);
    *(void *)&v10[OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_pillView] = 0LL;
    *(void *)&v10[OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_avatarShowcase] = 0LL;
    uint64_t v11 = &v10[OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_placeAvatarShowcaseBlock];
    *(void *)uint64_t v11 = 0LL;
    *((void *)v11 + 1) = 0LL;
    uint64_t v12 = &v10[OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_metrics];
    *(_OWORD *)uint64_t v12 = v25;
    *((void *)v12 + 2) = v7;
    *((void *)v12 + 3) = v8;
    v26.receiver = v10;
    v26.super_class = v9;
    id v13 = objc_msgSendSuper2(&v26, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend( v13,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);
    [v13 setAutoresizingMask:18];
    uint64_t v14 = *(void **)(v4 + v5);
    *(void *)(v4 + v5) = v13;
    id v15 = v13;
    sub_1001642F0(v14);

    uint64_t v6 = *(void **)(v4 + v5);
    if (v6)
    {
LABEL_4:
      objc_msgSend(v6, "setHidden:", 0, v25);
      uint64_t v16 = *(void *)(v4 + v5);
      if (v16)
      {
        uint64_t v17 = swift_allocObject(&unk_1002818D8, 24LL, 7LL);
        swift_unknownObjectWeakInit(v17 + 16, v2);
        id v18 = (void (**)())(v16 + OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_placeAvatarShowcaseBlock);
        uint64_t v19 = *(void *)(v16 + OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_placeAvatarShowcaseBlock);
        uint64_t v20 = *(void *)(v16 + OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_placeAvatarShowcaseBlock + 8);
        char *v18 = sub_10002D87C;
        v18[1] = (void (*)())v17;
        sub_10000D3D8(v19, v20);
      }
    }
  }

  if (v21)
  {
    uint64_t v22 = OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_avatarShowcase;
    uint64_t v23 = *(void **)&v21[OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_avatarShowcase];
    *(void *)&v21[OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_avatarShowcase] = v3;
    id v3 = v3;
    double v24 = v21;
    if (v23) {
      [v23 removeFromSuperview];
    }
    if (*(void *)&v21[v22]) {
      objc_msgSend(v24, "addSubview:");
    }
  }
}

void (*sub_10002C8A4(void *a1))(void **a1, char a2)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView);
  a1[1] = v1;
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkOverlayView);
  if (v4)
  {
    uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC6Arcade18ArtworkOverlayView_avatarShowcase);
    id v6 = v5;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *a1 = v5;
  return sub_10002C910;
}

void sub_10002C910(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if ((a2 & 1) != 0)
  {
    id v3 = v2;
    sub_10002C674(v2);
  }

  else
  {
    sub_10002C674(*a1);
  }

uint64_t sub_10002C964()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_isShowingSeeAll);
}

char *sub_10002C974(double a1, double a2, double a3, double a4)
{
  void (*v24)(void *__return_ptr);
  char *v25;
  char *v26;
  void *v27;
  char *v28;
  double v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  id v36;
  _BYTE v39[24];
  void v40[17];
  objc_super v41;
  uint64_t v5 = v4;
  uint64_t ObjectType = swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for CornerStyle(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  id v15 = &v5[OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_itemLayoutContext];
  uint64_t v16 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  uint64_t v17 = OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView;
  id v18 = objc_allocWithZone((Class)type metadata accessor for TVLockupView());
  uint64_t v19 = v5;
  *(void *)&v5[v17] = objc_msgSend(v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v19[OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_isShowingSeeAll] = 0;

  uint64_t v20 = (objc_class *)type metadata accessor for TVLockupCollectionViewCell(0LL);
  v41.receiver = v19;
  v41.super_class = v20;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v41, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v22 = OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView;
  uint64_t v23 = *(char **)&v21[OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView];
  double v24 = *(void (**)(void *__return_ptr))(ObjectType + 520);
  __int128 v25 = v21;
  v24(v40);
  objc_super v26 = &v23[OBJC_IVAR____TtC6Arcade12TVLockupView_metrics];
  swift_beginAccess(&v23[OBJC_IVAR____TtC6Arcade12TVLockupView_metrics], v39, 33LL, 0LL);
  sub_10002D81C(v40, v26);
  swift_endAccess(v39);
  [v23 setNeedsLayout];
  uint64_t v27 = sub_10002D7E8(v40);
  id v28 = *(char **)&v21[v22];
  __int128 v29 = (*(double (**)(void *))(ObjectType + 528))(v27);
  uint64_t v30 = &v28[OBJC_IVAR____TtC6Arcade12TVLockupView_pillOverlayMetrics];
  *(double *)uint64_t v30 = v29;
  *((void *)v30 + 1) = v31;
  *((void *)v30 + 2) = v32;
  *((void *)v30 + 3) = v33;
  (*(void (**)(_BYTE *, void, uint64_t))(v12 + 104))(v14, enum case for CornerStyle.continuous(_:), v11);
  __n128 v34 = v28;
  ArtworkView.setCorner(radius:style:)(v14, 20.0);
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);

  uint64_t v35 = [v25 contentView];
  uint64_t v36 = *(id *)&v21[v22];
  [v35 addSubview:v36];

  return v25;
}

void sub_10002CC1C()
{
}

void sub_10002CC74()
{
}

void sub_10002CCCC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    id v3 = (void *)Strong;
    uint64_t ObjectType = swift_getObjectType(Strong);
    uint64_t v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyAvatarShowcaseDisplaying);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0LL;
    }
    if (v5) {
      uint64_t v7 = v3;
    }
    else {
      uint64_t v7 = 0LL;
    }
    if (v7)
    {
      uint64_t v8 = swift_getObjectType(v7);
      dispatch thunk of AnyAvatarShowcaseDisplaying.placeAvatarShowcase()(v8, v6);
    }
  }

double sub_10002CDA8()
{
  double v2 = v1;
  double v4 = v3;
  double v6 = v5;
  CGFloat v8 = v7;
  if ([v0 isFocused])
  {
    CGFloat v36 = v6;
    CGFloat v37 = v4;
    CGFloat v38 = v2;
    id v9 = [v0 bounds];
    CGFloat v11 = v10;
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat rect1 = v16;
    uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView];
    char v18 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v9);
    id v19 = [v17 frame];
    CGFloat x = v20;
    CGFloat y = v22;
    CGFloat width = v24;
    CGFloat height = v26;
    if ((v18 & 1) != 0)
    {
      v54.origin.CGFloat x = ArtworkView.focusedFrame.getter(v19);
      v54.origin.CGFloat y = v28;
      v54.size.CGFloat width = v29;
      v54.size.CGFloat height = v30;
      v39.origin.CGFloat x = x;
      v39.origin.CGFloat y = y;
      v39.size.CGFloat width = width;
      v39.size.CGFloat height = height;
      CGRect v40 = CGRectUnion(v39, v54);
      CGFloat x = v40.origin.x;
      CGFloat y = v40.origin.y;
      CGFloat width = v40.size.width;
      CGFloat height = v40.size.height;
    }

    v41.origin.CGFloat x = v11;
    v41.origin.CGFloat y = v13;
    v41.size.CGFloat width = v15;
    v41.size.CGFloat height = rect1;
    v55.origin.CGFloat x = x;
    v55.origin.CGFloat y = y;
    v55.size.CGFloat width = width;
    v55.size.CGFloat height = height;
    if (CGRectEqualToRect(v41, v55))
    {
      return v38;
    }

    else
    {
      v42.origin.CGFloat x = v38;
      v42.size.CGFloat width = v36;
      v42.origin.CGFloat y = v37;
      v42.size.CGFloat height = v8;
      double MinX = CGRectGetMinX(v42);
      v43.origin.CGFloat x = x;
      v43.origin.CGFloat y = y;
      v43.size.CGFloat width = width;
      v43.size.CGFloat height = height;
      double v33 = MinX + CGRectGetMinX(v43);
      v44.origin.CGFloat x = v11;
      v44.origin.CGFloat y = v13;
      v44.size.CGFloat width = v15;
      v44.size.CGFloat height = rect1;
      double v34 = v33 - CGRectGetMinX(v44);
      v45.origin.CGFloat x = v38;
      v45.origin.CGFloat y = v37;
      v45.size.CGFloat width = v36;
      v45.size.CGFloat height = v8;
      CGRectGetMinY(v45);
      v46.origin.CGFloat x = x;
      v46.origin.CGFloat y = y;
      v46.size.CGFloat width = width;
      v46.size.CGFloat height = height;
      CGRectGetMinY(v46);
      v47.origin.CGFloat x = v11;
      v47.origin.CGFloat y = v13;
      v47.size.CGFloat width = v15;
      v47.size.CGFloat height = rect1;
      CGRectGetMinY(v47);
      v48.origin.CGFloat x = v38;
      v48.origin.CGFloat y = v37;
      v48.size.CGFloat width = v36;
      v48.size.CGFloat height = v8;
      CGRectGetWidth(v48);
      v49.origin.CGFloat y = y;
      v49.origin.CGFloat x = x;
      v49.size.CGFloat width = width;
      v49.size.CGFloat height = height;
      CGRectGetWidth(v49);
      v50.origin.CGFloat x = v11;
      v50.origin.CGFloat y = v13;
      v50.size.CGFloat width = v15;
      v50.size.CGFloat height = rect1;
      CGRectGetWidth(v50);
      v51.origin.CGFloat x = v38;
      v51.size.CGFloat width = v36;
      v51.origin.CGFloat y = v37;
      v51.size.CGFloat height = v8;
      CGRectGetHeight(v51);
      v52.origin.CGFloat y = y;
      v52.origin.CGFloat x = x;
      v52.size.CGFloat width = width;
      v52.size.CGFloat height = height;
      CGRectGetHeight(v52);
      v53.origin.CGFloat x = v11;
      v53.origin.CGFloat y = v13;
      v53.size.CGFloat width = v15;
      v53.size.CGFloat height = rect1;
      CGRectGetHeight(v53);
      return v34;
    }
  }

  return v2;
}

void sub_10002D140()
{
  double v1 = v0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TVLockupCollectionViewCell(0LL);
  objc_msgSendSuper2(&v5, "prepareForReuse");
  uint64_t v2 = *(void *)((char *)v0 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView);
  [*(id *)(v2 + OBJC_IVAR____TtC6Arcade12TVLockupView_titleLabel) setText:0];
  [*(id *)(v2 + OBJC_IVAR____TtC6Arcade12TVLockupView_subtitleLabel) setText:0];
  id v3 = *(id *)(v2 + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView);
  ArtworkView.image.setter(0LL);

  int v4 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_isShowingSeeAll);
  *((_BYTE *)v1 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_isShowingSeeAll) = 0;
  if (v4 == 1) {
    (*(void (**)(void, void))((swift_isaMask & *v1) + 0x1C8LL))( *((unsigned __int8 *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state),  0LL);
  }
}

void sub_10002D274(void *a1, char a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  CGFloat v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DCFD0 != -1) {
    swift_once(&qword_1002DCFD0, sub_100176398);
  }
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002DDB70);
  sub_1000061F4(v14, (uint64_t)qword_1002F1338);
  sub_1001AB114(a2, (uint64_t)v13);
  uint64_t v25 = a3;
  Conditional.evaluate(with:)(&v26, &v25, v10);
  CGFloat v15 = *(void (**)(char *, uint64_t))(v11 + 8);
  v15(v13, v10);
  id v16 = v26;
  [v26 setFill];
  objc_msgSend(a1, "fillRect:", 0.0, 0.0, a4, a5);
  if (qword_1002DCFD8 != -1) {
    swift_once(&qword_1002DCFD8, sub_1001766EC);
  }
  sub_1000061F4(v14, (uint64_t)qword_1002F1350);
  sub_1001AB114(a2, (uint64_t)v13);
  uint64_t v25 = a3;
  Conditional.evaluate(with:)(&v26, &v25, v10);
  v15(v13, v10);
  id v17 = v26;
  [v26 setFill];
  type metadata accessor for BundleImage(0LL);
  char v18 = (void *)static BundleImage.load(_:bundle:with:compatibleWith:)( 0x65726F4D656553LL,  0xE700000000000000LL,  0LL,  0LL,  0LL);
  [v18 size];
  double v20 = a4 * 0.5 - v19 * 0.5;
  [v18 size];
  double v22 = a5 * 0.5 - v21 * 0.5;
  [v18 size];
  objc_msgSend(v18, "drawInRect:", v20, v22, v23, v24);
}

void sub_10002D4F0()
{
}

id sub_10002D51C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVLockupCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10002D588()
{
  return type metadata accessor for TVLockupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for TVLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DEAF8;
  if (!qword_1002DEAF8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TVLockupCollectionViewCell);
  }
  return result;
}

void sub_10002D5CC(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[2] = &unk_1002345E0;
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 472);
  }

id sub_10002D650()
{
  return objc_retain(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView)
                           + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView));
}

double sub_10002D670()
{
  uint64_t ObjectType = swift_getObjectType(v0);
  (*(void (**)(double *__return_ptr))(ObjectType + 520))(&v4);
  double v2 = v4;
  sub_10002D7E8(&v4);
  return v2;
}

uint64_t sub_10002D6C4()
{
  return Artwork.Crop.preferredContentMode.getter();
}

void sub_10002D6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100234628, a3);
  sub_100073338(a1, a2, a3, WitnessTable);
}

void sub_10002D730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100234628, a3);
  sub_1000734F0(a1, a2, a3, WitnessTable);
}

unint64_t sub_10002D77C(uint64_t a1)
{
  unint64_t result = sub_10002D7A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10002D7A0()
{
  unint64_t result = qword_1002DEB10;
  if (!qword_1002DEB10)
  {
    uint64_t v1 = type metadata accessor for TVLockupCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_1002345F8, v1);
    atomic_store(result, (unint64_t *)&qword_1002DEB10);
  }

  return result;
}

void *sub_10002D7E8(void *a1)
{
  return a1;
}

void *sub_10002D81C(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_10002D858()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_10002D87C()
{
}

uint64_t sub_10002D884()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

id sub_10002D8A8()
{
  return sub_100163F88(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10002D8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002D8C4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10002D8CC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  double v7 = v6;
  uint64_t v101 = a1;
  uint64_t v111 = a2;
  uint64_t v108 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  double v104 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v103 = type metadata accessor for Baselines(0LL);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  double v100 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v110 = type metadata accessor for LayoutRect(0LL);
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  double v99 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  char v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v87 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0LL);
  uint64_t v112 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  double v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v79 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0LL);
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v21 = v80;
  __chkstk_darwin(v79);
  double v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v106 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  id v98 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_1000031E8((uint64_t *)&unk_1002E4D00);
  uint64_t v26 = *(void *)(type metadata accessor for _VerticalFlowLayout.Child(0LL) - 8);
  uint64_t v96 = *(void *)(v26 + 72);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = (v27 + 32) & ~v27;
  uint64_t v29 = swift_allocObject(v25, v28 + 2 * v96, v27 | 7);
  uint64_t v97 = v29;
  *(_OWORD *)(v29 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
  uint64_t v86 = v29 + v28;
  uint64_t v30 = v7[34];
  uint64_t v31 = v7[35];
  uint64_t v32 = sub_100005F8C(v7 + 31, v30);
  uint64_t v118 = v30;
  uint64_t v119 = *(void *)(v31 + 8);
  double v33 = sub_100009D54(&v117);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16LL))(v33, v32, v30);
  uint64_t v116 = 0LL;
  __int128 v114 = 0u;
  __int128 v115 = 0u;
  unsigned int v95 = enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:);
  double v94 = *(void (**)(char *))(v21 + 104);
  uint64_t v34 = v79;
  v94(v23);
  unsigned int v93 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:);
  double v92 = *(void (**)(char *))(v112 + 104);
  uint64_t v35 = v87;
  v92(v20);
  uint64_t v91 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
  uint64_t v82 = v16;
  uint64_t v36 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v37 = ((v36 + 32) & ~v36) + *(void *)(v16 + 72);
  uint64_t v81 = (v36 + 32) & ~v36;
  uint64_t v90 = v37;
  uint64_t v89 = v36 | 7;
  uint64_t v38 = swift_allocObject(v91, v37, v36 | 7);
  __int128 v88 = xmmword_100233580;
  *(_OWORD *)(v38 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v38);
  uint64_t v113 = v38;
  unint64_t v39 = sub_10002E158();
  unint64_t v85 = v39;
  uint64_t v40 = sub_1000031E8(&qword_1002E45E0);
  uint64_t v84 = v40;
  unint64_t v83 = sub_100003228();
  CGRect v41 = v18;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v113, v40, v83, v15, v39);
  uint64_t v42 = v86;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v117,  v23,  v20,  v7,  &v114,  v18);
  uint64_t v82 = *(void *)(v82 + 8);
  ((void (*)(char *, uint64_t))v82)(v18, v15);
  uint64_t v112 = *(void *)(v112 + 8);
  uint64_t v43 = v35;
  ((void (*)(char *, uint64_t))v112)(v20, v35);
  uint64_t v80 = *(void *)(v80 + 8);
  uint64_t v44 = v34;
  ((void (*)(char *, uint64_t))v80)(v23, v34);
  sub_10002E1A0((uint64_t)&v114);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v117);
  v96 += v42;
  uint64_t v45 = v7[39];
  uint64_t v46 = v7[40];
  CGRect v47 = sub_100005F8C(v7 + 36, v45);
  uint64_t v118 = v45;
  uint64_t v119 = *(void *)(v46 + 8);
  CGRect v48 = sub_100009D54(&v117);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16LL))(v48, v47, v45);
  uint64_t v116 = 0LL;
  __int128 v114 = 0u;
  __int128 v115 = 0u;
  ((void (*)(char *, void, uint64_t))v94)(v23, v95, v44);
  ((void (*)(char *, void, uint64_t))v92)(v20, v93, v43);
  uint64_t v49 = swift_allocObject(v91, v90, v89);
  *(_OWORD *)(v49 + swift_unknownObjectWeakDestroy(v0 + 16) = v88;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v49);
  uint64_t v113 = v49;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v113, v84, v83, v15, v85);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v117,  v23,  v20,  v7 + 5,  &v114,  v41);
  ((void (*)(char *, uint64_t))v82)(v41, v15);
  ((void (*)(char *, uint64_t))v112)(v20, v43);
  ((void (*)(char *, uint64_t))v80)(v23, v44);
  sub_10002E1A0((uint64_t)&v114);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v117);
  CGRect v50 = v98;
  _VerticalFlowLayout.init(expandChildrenToFit:children:)(0LL, v97);
  CGRect v51 = v99;
  uint64_t v52 = v101;
  _VerticalFlowLayout.placeChildren(relativeTo:in:)(v101, a3, a4, a5, a6);
  double v53 = sub_10002E1E0(v52);
  uint64_t v54 = LayoutRect.origin.getter();
  double v56 = v55;
  uint64_t v57 = LayoutRect.size.getter(v54);
  double v59 = v56 + v58;
  uint64_t v60 = v100;
  uint64_t v61 = LayoutRect.baselines.getter(v57);
  double v62 = Baselines.last.getter(v61);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v60, v103);
  double v63 = v59 - v62;
  uint64_t v64 = v7[13];
  uint64_t v65 = v7[14];
  sub_100005F8C(v7 + 10, v64);
  uint64_t v66 = v104;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v64, v65);
  double v67 = AnyDimension.value(in:rounded:)(v52, v66, v64, v65);
  uint64_t v68 = *(void (**)(char *, uint64_t))(v107 + 8);
  uint64_t v69 = v108;
  v68(v66, v108);
  CGFloat v70 = v63 + v67 - v53;
  uint64_t v71 = v7[23];
  uint64_t v72 = v7[24];
  sub_100005F8C(v7 + 20, v71);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v71, v72);
  double v73 = AnyDimension.value(in:rounded:)(v52, v66, v71, v72);
  v68(v66, v69);
  v120.origin.CGFloat x = a3;
  v120.origin.CGFloat y = a4;
  v120.size.CGFloat width = a5;
  v120.size.CGFloat height = a6;
  CGFloat v74 = v73 + CGRectGetMinX(v120);
  v121.origin.CGFloat x = a3;
  v121.origin.CGFloat y = a4;
  v121.size.CGFloat width = a5;
  v121.size.CGFloat height = a6;
  double v75 = CGRectGetWidth(v121) - (v73 + v73);
  v122.origin.CGFloat x = a3;
  v122.origin.CGFloat y = a4;
  v122.size.CGFloat width = a5;
  v122.size.CGFloat height = a6;
  CGFloat MaxY = CGRectGetMaxY(v122);
  sub_10002E270(v52, v74, v70, v75, MaxY - v70, a3, a4, a5, a6);
  LayoutRect.init(representing:)(a3, a4, a5, a6);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v51, v110);
  return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v50, v106);
}

unint64_t sub_10002E158()
{
  unint64_t result = qword_1002DD1C0;
  if (!qword_1002DD1C0)
  {
    uint64_t v1 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition, v1);
    atomic_store(result, (unint64_t *)&qword_1002DD1C0);
  }

  return result;
}

uint64_t sub_10002E1A0(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002E4D10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

double sub_10002E1E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 328);
  if (!*(void *)(v2 + 16)) {
    return 0.0;
  }
  sub_10001F010(v2 + 32, (uint64_t)v9);
  uint64_t v4 = v10;
  uint64_t v5 = v11;
  sub_100005F8C(v9, v10);
  dispatch thunk of Measurable.measurements(fitting:in:)(a1, v4, *(void *)(v5 + 8), 0.0, 0.0);
  double v7 = v6;
  _s6Arcade17PillOverlayLayoutVwxx_0(v9);
  return v7;
}

void sub_10002E270( uint64_t a1, CGFloat a2, CGFloat a3, double a4, double a5, double a6, double a7, double a8, CGFloat a9)
{
  uint64_t v10 = v9;
  CGFloat v110 = a9;
  double v103 = a7;
  double v104 = a8;
  double v102 = a6;
  CGFloat v107 = a2;
  CGFloat v108 = a3;
  uint64_t v14 = type metadata accessor for FloatingPointRoundingRule(0LL);
  *(double *)&uint64_t v15 = COERCE_DOUBLE(__chkstk_darwin(v14));
  uint64_t v18 = *(void *)(v9 + 328);
  double v19 = *(double *)(v18 + 16);
  BOOL v20 = v19 != 0.0 && *(void *)&v19 == *(void *)(*(void *)(v9 + 336) + 16LL);
  double v21 = 0.0;
  if (v20)
  {
    double v105 = v17;
    *(void *)&CGFloat v106 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    CGFloat v109 = *(double *)&v15;
    uint64_t v22 = v18 + 32;
    swift_bridgeObjectRetain(v18);
    double v23 = (char *)_swiftEmptyArrayStorage;
    CGFloat v101 = v19;
    do
    {
      sub_10001F010(v22, (uint64_t)&v119);
      uint64_t v24 = v121;
      uint64_t v25 = v122;
      sub_100005F8C(&v119, v121);
      double v26 = Measurable.measuredSize(fitting:in:)(a1, v24, *(void *)(v25 + 8), a4, a5);
      double v27 = v26;
      uint64_t v29 = v28;
      if (v21 < v26) {
        double v21 = v26;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0) {
        double v23 = sub_10001A140(0LL, *((void *)v23 + 2) + 1LL, 1, v23);
      }
      unint64_t v31 = *((void *)v23 + 2);
      unint64_t v30 = *((void *)v23 + 3);
      if (v31 >= v30 >> 1) {
        double v23 = sub_10001A140((char *)(v30 > 1), v31 + 1, 1, v23);
      }
      *((void *)v23 + 2) = v31 + 1;
      uint64_t v32 = &v23[16 * v31 + 32];
      *(double *)uint64_t v32 = v27;
      *((void *)v32 + 1) = v29;
      _s6Arcade17PillOverlayLayoutVwxx_0(&v119);
      v22 += 40LL;
      --*(void *)&v19;
    }

    while (v19 != 0.0);
    swift_bridgeObjectRelease(v18);
    uint64_t v33 = *(void *)(v10 + 224);
    uint64_t v34 = *(void *)(v10 + 232);
    sub_100005F8C((void *)(v10 + 200), v33);
    CGFloat v35 = v106;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v33, v34);
    double v36 = AnyDimension.value(in:rounded:)(a1, *(void *)&v35, v33, v34);
    double v100 = *(double *)(*(void *)&v105 + 8LL);
    CGFloat v37 = v109;
    (*(void (**)(void, void))&v100)(*(void *)&v35, *(void *)&v109);
    double v38 = sub_10002E1E0(a1);
    double v95 = v36;
    CGFloat v39 = v36 * (double)(*(void *)&v101 - 1LL) + v38;
    CGFloat v41 = v107;
    CGFloat v40 = v108;
    v124.origin.CGFloat x = v107;
    v124.origin.CGFloat y = v108;
    v124.size.CGFloat width = a4;
    v124.size.CGFloat height = a5;
    CGFloat MinX = CGRectGetMinX(v124);
    v125.origin.CGFloat x = v41;
    v125.origin.CGFloat y = v40;
    v125.size.CGFloat width = a4;
    v125.size.CGFloat height = a5;
    CGFloat MinY = CGRectGetMinY(v125);
    v126.origin.CGFloat x = v41;
    v126.origin.CGFloat y = v40;
    CGFloat v101 = a4;
    v126.size.CGFloat width = a4;
    double v105 = a5;
    v126.size.CGFloat height = a5;
    double Width = CGRectGetWidth(v126);
    v127.origin.CGFloat x = MinX;
    v127.origin.CGFloat y = MinY;
    v127.size.CGFloat width = v21;
    v127.size.CGFloat height = v39;
    double v45 = CGRectGetWidth(v127);
    uint64_t v46 = *(void *)(v10 + 144);
    uint64_t v47 = *(void *)(v10 + 152);
    sub_100005F8C((void *)(v10 + 120), v46);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v46, v47);
    double v48 = AnyDimension.value(in:rounded:)(a1, *(void *)&v35, v46, v47);
    (*(void (**)(void, void))&v100)(*(void *)&v35, *(void *)&v37);
    double v94 = Width - (v45 + v48);
    double v49 = *(double *)(v10 + 240);
    CGFloat v98 = MinX;
    CGFloat v99 = v39;
    v128.origin.CGFloat x = MinX;
    CGFloat v106 = MinY;
    v128.origin.CGFloat y = MinY;
    double v100 = v21;
    v128.size.CGFloat width = v21;
    v128.size.CGFloat height = v39;
    double v50 = CGRectGetMinY(v128);
    uint64_t v51 = *(void *)(v10 + 328);
    uint64_t v52 = *(void *)(v10 + 336);
    uint64_t v87 = v52 + 32;
    uint64_t v88 = v51 + 32;
    unint64_t v85 = (char *)&v111 + 8;
    uint64_t v86 = (uint64_t)v116 + 8;
    uint64_t v84 = (char *)v117 + 8;
    uint64_t v96 = (__int128 *)&v123;
    uint64_t v97 = (__int128 *)&v120;
    double v92 = v49 * 0.5;
    double v93 = v49;
    uint64_t v91 = v51;
    swift_bridgeObjectRetain(v51);
    uint64_t v89 = v52;
    swift_bridgeObjectRetain(v52);
    unint64_t v90 = 0LL;
    unint64_t v53 = 0LL;
LABEL_15:
    unint64_t v54 = *(void *)(v91 + 16);
    CGFloat v55 = v105;
    if (v53 == v54)
    {
      while (1)
      {
LABEL_19:
        memset(v117, 0, sizeof(v117));
        char v58 = 1;
        unint64_t v56 = v53;
        uint64_t v118 = 0LL;
LABEL_20:
        sub_10002E958((uint64_t)v117, (uint64_t)&v119);
        if (!v122)
        {
          swift_bridgeObjectRelease(v89);
          swift_bridgeObjectRelease(v91);
          CGFloat v78 = v107;
          CGFloat v77 = v108;
          v132.origin.CGFloat x = v107;
          v132.origin.CGFloat y = v108;
          CGFloat v79 = v101;
          v132.size.CGFloat width = v101;
          v132.size.CGFloat height = v55;
          CGFloat v110 = CGRectGetMinX(v132);
          v133.origin.CGFloat x = v78;
          v133.origin.CGFloat y = v77;
          v133.size.CGFloat width = v79;
          v133.size.CGFloat height = v55;
          CGFloat v80 = v55;
          CGRectGetMaxY(v133);
          CGFloat v81 = v98;
          CGFloat v82 = v99;
          v134.origin.CGFloat x = v98;
          v134.origin.CGFloat y = v106;
          CGFloat v83 = v100;
          v134.size.CGFloat width = v100;
          v134.size.CGFloat height = v99;
          CGRectGetHeight(v134);
          v135.origin.CGFloat x = v78;
          v135.origin.CGFloat y = v77;
          v135.size.CGFloat width = v79;
          v135.size.CGFloat height = v80;
          CGRectGetWidth(v135);
          v136.origin.CGFloat x = v81;
          v136.origin.CGFloat y = v106;
          v136.size.CGFloat width = v83;
          v136.size.CGFloat height = v82;
          CGRectGetHeight(v136);
          swift_bridgeObjectRelease(v23);
          return;
        }

        unint64_t v59 = v119;
        sub_100009D90(v97, (uint64_t)v117);
        sub_100009D90(v96, (uint64_t)&v117[2] + 8);
        sub_100009D90(v117, (uint64_t)&v111);
        sub_100009D90((__int128 *)((char *)&v117[2] + 8), (uint64_t)&v114);
        if ((v59 & 0x8000000000000000LL) != 0) {
          break;
        }
        if (v59 >= *((void *)v23 + 2)) {
          goto LABEL_29;
        }
        uint64_t v60 = (uint64_t)&v23[16 * v59 + 32];
        double v61 = *(double *)v60;
        CGFloat v109 = *(double *)(v60 + 8);
        v129.origin.CGFloat x = v98;
        v129.size.CGFloat height = v99;
        v129.origin.CGFloat y = v106;
        v129.size.CGFloat width = v100;
        CGFloat v62 = CGRectGetMaxX(v129) - v61;
        uint64_t v64 = v112;
        uint64_t v63 = v113;
        sub_100005F8C(&v111, v112);
        CGRect.withLayoutDirection(in:relativeTo:)(a1);
        dispatch thunk of LayoutView.frame.setter(v64, v63);
        v130.origin.CGFloat x = v107;
        v130.origin.CGFloat y = v108;
        v130.size.CGFloat width = v101;
        v130.size.CGFloat height = v55;
        CGRectGetMaxX(v130);
        v131.origin.CGFloat x = v62;
        v131.origin.CGFloat y = v50;
        v131.size.CGFloat width = v61;
        v131.size.CGFloat height = v109;
        floor(CGRectGetMidY(v131) - v92);
        uint64_t v65 = *((void *)&v115 + 1);
        uint64_t v66 = *(void *)&v116[0];
        sub_100005F8C(&v114, *((uint64_t *)&v115 + 1));
        CGRect.withLayoutDirection(in:relativeTo:)(a1);
        dispatch thunk of LayoutView.frame.setter(v65, v66);
        double v50 = v95 + v50;
        _s6Arcade17PillOverlayLayoutVwxx_0(&v114);
        _s6Arcade17PillOverlayLayoutVwxx_0(&v111);
        unint64_t v53 = v56;
        if ((v58 & 1) == 0) {
          goto LABEL_15;
        }
        CGFloat v55 = v105;
      }

      __break(1u);
LABEL_29:
      __break(1u);
    }

    else if (v53 < v54)
    {
      unint64_t v56 = v53 + 1;
      sub_10001F010(v88 + 40 * v53, (uint64_t)&v111);
      unint64_t v57 = *(void *)(v89 + 16);
      if (v90 == v57)
      {
        _s6Arcade17PillOverlayLayoutVwxx_0(&v111);
        unint64_t v53 = v56;
        goto LABEL_19;
      }

      if (v90 < v57)
      {
        unint64_t v67 = v90;
        uint64_t v68 = v87 + 40 * v90;
        sub_100009D90(&v111, (uint64_t)&v114);
        sub_10001F010(v68, v86);
        char v58 = 0;
        *(void *)&v117[0] = v67;
        __int128 v69 = v116[1];
        __int128 v70 = v116[2];
        uint64_t v72 = v84;
        uint64_t v71 = (__int128 *)v85;
        *((_OWORD *)v85 + 2) = v116[0];
        v71[3] = v69;
        v71[4] = v70;
        __int128 v73 = v115;
        __int128 *v71 = v114;
        v71[1] = v73;
        __int128 v74 = v71[3];
        v72[2] = v71[2];
        void v72[3] = v74;
        v72[4] = v71[4];
        __int128 v76 = *v71;
        __int128 v75 = v71[1];
        unint64_t v90 = v67 + 1;
        _OWORD *v72 = v76;
        v72[1] = v75;
        goto LABEL_20;
      }

      goto LABEL_31;
    }

    __break(1u);
LABEL_31:
    __break(1u);
  }

uint64_t sub_10002E958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002DEB18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

double destroy for TVProductRatingsHistogramCardLayout(void *a1)
{
  *(void *)&double result = swift_bridgeObjectRelease(a1[42]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for TVProductRatingsHistogramCardLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  __int128 v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  __int128 v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  __int128 v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  __int128 v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  *(void *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 240);
  __int128 v10 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 272) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 248, a2 + 248);
  uint64_t v11 = *(void *)(a2 + 312);
  uint64_t v12 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = v11;
  *(void *)(a1 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v12;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 288, a2 + 288);
  uint64_t v13 = *(void *)(a2 + 328);
  uint64_t v14 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = v13;
  *(void *)(a1 + 336) = v14;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  return a1;
}

void *assignWithCopy for TVProductRatingsHistogramCardLayout(void *a1, void *a2)
{
  a1[30] = a2[30];
  sub_1000264E4(a1 + 31, a2 + 31);
  sub_1000264E4(a1 + 36, a2 + 36);
  uint64_t v4 = a2[41];
  uint64_t v5 = a1[41];
  a1[41] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[42];
  uint64_t v7 = a1[42];
  a1[42] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

void *initializeWithTake for TVProductRatingsHistogramCardLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x158uLL);
}

uint64_t assignWithTake for TVProductRatingsHistogramCardLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 160));
  __int128 v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 200));
  *(_OWORD *)(a1 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 2swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 240);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 248));
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 280);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 288));
  __int128 v7 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v7;
  uint64_t v8 = *(void *)(a2 + 328);
  uint64_t v9 = *(void *)(a1 + 328);
  *(void *)(a1 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v8;
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = *(void *)(a1 + 336);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVProductRatingsHistogramCardLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 344)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVProductRatingsHistogramCardLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 344) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 344) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVProductRatingsHistogramCardLayout()
{
  return &type metadata for TVProductRatingsHistogramCardLayout;
}

uint64_t destroy for TVArticleCardTextLayout(void *a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 25);
}

uint64_t initializeWithCopy for TVProductRatingsHistogramCardLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  __int128 v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  __int128 v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  __int128 v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  __int128 v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  *(void *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 240);
  return a1;
}

void *assignWithCopy for TVProductRatingsHistogramCardLayout.Metrics(void *a1, void *a2)
{
  a1[30] = a2[30];
  return a1;
}

__n128 initializeWithTake for TVProductRatingsHistogramCardLayout.Metrics(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[1];
  __int128 v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  __int128 v5 = a2[4];
  __int128 v6 = a2[5];
  __int128 v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v6;
  __int128 v8 = a2[8];
  __int128 v9 = a2[9];
  __int128 v10 = a2[11];
  *(_OWORD *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  __int128 v12 = a2[13];
  __int128 v13 = a2[14];
  *(void *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *((void *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for TVProductRatingsHistogramCardLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 160));
  __int128 v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 200));
  *(_OWORD *)(a1 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 2swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 240);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVProductRatingsHistogramCardLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 248)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVProductRatingsHistogramCardLayout.Metrics( uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 248) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 248) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVProductRatingsHistogramCardLayout.Metrics()
{
  return &type metadata for TVProductRatingsHistogramCardLayout.Metrics;
}

double sub_10002F1A0()
{
  return 0.0;
}

id sub_10002F1AC()
{
  return sub_10002F2A8();
}

double sub_10002F1BC@<D0>(uint64_t a1@<X1>, void *a2@<X4>, uint64_t a3@<X8>)
{
  if (qword_1002DCC60 != -1) {
    swift_once(&qword_1002DCC60, sub_100126BE8);
  }
  swift_getObjectType(a2);
  sub_1001FE1B4(&xmmword_1002F0718, (uint64_t)a2);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  [a2 pageMarginInsets];
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v11;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
  *(void *)(a3 + 24) = v13;
  *(void *)(a3 + 32) = v7;
  *(void *)(a3 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v9;
  double result = 40.0;
  *(_OWORD *)(a3 + 48) = xmmword_1002346C0;
  *(_BYTE *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = a1;
  return result;
}

uint64_t sub_10002F27C()
{
  return sub_100003B6C( &qword_1002DEB20,  (uint64_t (*)(uint64_t))&type metadata accessor for LargeGameCenterPlayer,  (uint64_t)&protocol conformance descriptor for GameCenterPlayer);
}

id sub_10002F2A8()
{
  uint64_t v1 = v0;
  id v2 = *(id *)&v0[OBJC_IVAR____TtC6Arcade39LargeGameCenterPlayerCollectionViewCell_artworkView];
  v9.value.super.Class isa = 0LL;
  v9.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v9, v3);

  __int128 v4 = *(void **)&v1[OBJC_IVAR____TtC6Arcade39LargeGameCenterPlayerCollectionViewCell_alias];
  GameCenterPlayer.alias.getter();
  if (v5)
  {
    uint64_t v6 = v5;
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }

  else
  {
    NSString v7 = 0LL;
  }

  [v4 setText:v7];

  return [v1 setNeedsLayout];
}

double sub_10002F354( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100233C20, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

double sub_10002F3E8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  uint64_t v35 = a6;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  uint64_t v28 = a1;
  uint64_t v30 = sub_1000031E8(&qword_1002EB230);
  uint64_t v14 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, a8);
  uint64_t v29 = type metadata accessor for StateLens(0LL, AssociatedTypeWitness);
  uint64_t v18 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  BOOL v20 = (char *)&v28 - v19;
  uint64_t v21 = swift_getAssociatedTypeWitness(0LL, a8);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v28 - v23;
  sub_10001F010(v28, (uint64_t)v36);
  uint64_t v25 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  swift_dynamicCast(v24, v36, v25, v21, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v31, v30);
  StateLens.init(_:)(v16, AssociatedTypeWitness);
  double v26 = (*(double (**)(char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))(a8 + 48))( v24,  v32,  v20,  v33,  v34,  v35,  a7,  a8,  a9,  a10);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v29);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  return v26;
}

uint64_t sub_10002F5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100233C20, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_10002F65C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a6;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v23 = a1;
  uint64_t v25 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v10 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, a8);
  uint64_t v24 = type metadata accessor for WritableStateLens(0LL, AssociatedTypeWitness);
  uint64_t v14 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v17 = swift_getAssociatedTypeWitness(0LL, a8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  BOOL v20 = (char *)&v23 - v19;
  sub_10001F010(v23, (uint64_t)v31);
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  swift_dynamicCast(v20, v31, v21, v17, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v26, v25);
  WritableStateLens.init(_:)(v12, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 56))( v20,  v16,  v27,  v28,  v29,  v30,  a7,  a8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

uint64_t sub_10002F82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100233C20, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_10002F888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a3;
  uint64_t v25 = a2;
  uint64_t v22 = a1;
  uint64_t v24 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v7 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  UIImage_optional v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, a5);
  uint64_t v23 = type metadata accessor for WritableStateLens(0LL, AssociatedTypeWitness);
  uint64_t v11 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = swift_getAssociatedTypeWitness(0LL, a5);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v21 - v16;
  sub_10001F010(v22, (uint64_t)v27);
  uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  swift_dynamicCast(v17, v27, v18, v14, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v25, v24);
  WritableStateLens.init(_:)(v9, AssociatedTypeWitness);
  uint64_t v19 = (*(uint64_t (**)(char *, char *, uint64_t, uint64_t, uint64_t))(a5 + 64))(v17, v13, v26, a4, a5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v23);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v19;
}

double sub_10002FA54( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  return sub_100031A78( a1,  a9,  a10,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for PrivacyHeader,  (double (*)(uint64_t, char *, uint64_t, uint64_t, double, double))sub_100027E28);
}

double sub_10002FA84( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100031C30( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for PrivacyHeader,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100026C60);
}

uint64_t sub_10002FAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for PrivacyHeader);
}

double sub_10002FAC0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002346E0, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_10002FB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002346E0, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_10002FBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002346E0, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_10002FC2C( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10003479C(a1, a5, a2, a3, a7, a8);
}

double sub_10002FC3C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100031764( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for AchievementSummary,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_100045308);
}

uint64_t sub_10002FC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0( a1,  a2,  a3,  a4,  a5,  (uint64_t (*)(void))&type metadata accessor for AchievementSummary);
}

double sub_10002FC78( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = sub_1000031E8(&qword_1002EB230);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v17 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  BOOL v20 = &v28[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v28);
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v22 = type metadata accessor for EditorialCard(0LL);
  swift_dynamicCast(&v29, v28, v21, v22, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v16, a5, v13);
  uint64_t v23 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v16, v23);
  if (qword_1002DCE58 != -1) {
    swift_once(&qword_1002DCE58, sub_100164740);
  }
  uint64_t v24 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v25 = sub_1000061F4(v24, (uint64_t)qword_1002F0F28);
  swift_getObjectType(a8);
  double v26 = sub_100039674(v25, a8, a2, a3);
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
  swift_release(v29);
  return v26;
}

double sub_10002FE3C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100032D88( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for EditorialCard,  (void (*)(uint64_t, char *, uint64_t, uint64_t))sub_100049D88);
}

uint64_t sub_10002FE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for EditorialCard);
}

double sub_10002FE78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100235034, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_10002FF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100235034, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_10002FF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100235034, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_10002FFE4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100235334, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_100030078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100235334, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_1000300F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100235334, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100030150( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_100033E84( a1,  a5,  a2,  a3,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for FramedArtwork);
}

double sub_10003017C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100032D88( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for FramedArtwork,  (void (*)(uint64_t, char *, uint64_t, uint64_t))sub_10004E9A8);
}

uint64_t sub_1000301AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for FramedArtwork);
}

double sub_1000301B8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  return sub_1000315A4( a1,  a9,  a10,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for GameCenterReengagement,  (double (*)(uint64_t, char *, uint64_t, uint64_t, double, double))sub_1000740C0);
}

double sub_1000301E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v24 = a6;
  uint64_t v23 = a5;
  uint64_t v10 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v25);
  uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v19 = type metadata accessor for GameCenterReengagement(0LL);
  swift_dynamicCast(&v26, v25, v18, v19, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  uint64_t v20 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v13, v20);
  sub_100073914(v26, a3, a4, v23, v24);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(void *)&double result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_100030350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0( a1,  a2,  a3,  a4,  a5,  (uint64_t (*)(void))&type metadata accessor for GameCenterReengagement);
}

double sub_10003035C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100236238, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_1000303F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100236238, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_10003046C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100236238, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_1000304C8(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100033C1C(a1, a4, a2, a6, a7);
}

uint64_t sub_1000304D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v14 = sub_100005F8C(a1, v12);
  uint64_t ObjectType = swift_getObjectType(a6);
  return sub_100033038((uint64_t)v14, a2, a3, a4, a5, a6, v6, v12, ObjectType, v13);
}

uint64_t sub_10003056C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for ProductMedia);
}

double sub_100030578( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = sub_1000031E8(&qword_1002EB230);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v27[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v18 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = &v27[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v27);
  uint64_t v22 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v23 = type metadata accessor for SmallBreakout(0LL);
  swift_dynamicCast(&v28, v27, v22, v23, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
  uint64_t v24 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v17, v24);
  double v25 = sub_10008E944(a2, a3, (uint64_t)v21, a7, a8);
  (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v21, v18);
  swift_release(v28);
  return v25;
}

double sub_1000306F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10003224C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for SmallBreakout,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_10008EB14);
}

uint64_t sub_100030728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for SmallBreakout);
}

double sub_100030734(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12 = sub_1000031E8(&qword_1002EB230);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v16 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = &v25[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v25);
  uint64_t v20 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v21 = type metadata accessor for TextCard(0LL);
  swift_dynamicCast(&v26, v25, v20, v21, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, a4, v12);
  uint64_t v22 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v15, v22);
  double v23 = sub_10009EAF8(a2, (uint64_t)v19, a6, a7);
  (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v16);
  swift_release(v26);
  return v23;
}

double sub_1000308AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100031C30( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for TextCard,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10009DCD4);
}

uint64_t sub_1000308DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for TextCard);
}

double sub_1000308E8( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  return sub_100033244(a1, a5, a2, a3, a7, a8);
}

double sub_1000308F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100032D88( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for Action,  (void (*)(uint64_t, char *, uint64_t, uint64_t))sub_1000A42D4);
}

uint64_t sub_100030928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for Action);
}

double sub_100030934( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100237B24, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_1000309C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100237B24, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_100030A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100237B24, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100030AA0( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1000343B8(a1, a5, a2, a3, a7, a8);
}

double sub_100030AB0(uint64_t a1, uint64_t a2)
{
  return sub_100035250(a1, a2);
}

uint64_t sub_100030ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for PrivacyCategory);
}

double sub_100030AC8(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_10003403C(a1, a4, a2, a6, a7);
}

uint64_t sub_100030ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for TodayCard);
}

double sub_100030AE8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100032BB0( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  &qword_1002DCE38,  (uint64_t)&qword_1002F0E58,  (uint64_t)sub_100163448);
}

double sub_100030B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000355F0(a1, a2, a3);
}

uint64_t sub_100030B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for Lockup);
}

double sub_100030B44( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100032BB0( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  &qword_1002DCE28,  (uint64_t)&qword_1002F0D48,  (uint64_t)sub_1001633FC);
}

double sub_100030B80( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_100033894(a1, a5, a2, a3, a7, a8);
}

double sub_100030B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a5;
  uint64_t v8 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v12 = sub_1000031E8(&qword_1002DEB88);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v20);
  uint64_t v16 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v17 = type metadata accessor for Annotation(0LL);
  swift_dynamicCast(&v21, v20, v16, v17, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  WritableStateLens.init(_:)(v11, &_s5StateVN);
  sub_1000D5ED4(v21, (uint64_t)v15, a3);
  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
  *(void *)&double result = swift_release(v21).n128_u64[0];
  return result;
}

double sub_100030CF4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  return sub_100031A78( a1,  a9,  a10,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for PrivacyDefinition,  (double (*)(uint64_t, char *, uint64_t, uint64_t, double, double))sub_10010E5E4);
}

double sub_100030D24( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100031764( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for PrivacyDefinition,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_10010EB44);
}

uint64_t sub_100030D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0( a1,  a2,  a3,  a4,  a5,  (uint64_t (*)(void))&type metadata accessor for PrivacyDefinition);
}

double sub_100030D60( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C72C, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_100030DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C72C, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_100030E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C72C, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100030ECC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C894, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_100030F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C894, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_100030FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C894, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100031038( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023CC98, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_1000310CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023CC98, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_100031148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023CC98, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_1000311A4(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100034590(a1, a4, a2, a6, a7);
}

double sub_1000311B4(uint64_t a1, uint64_t a2)
{
  return sub_100035454(a1, a2);
}

uint64_t sub_1000311C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for ProductPageLink);
}

double sub_1000311CC(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  return sub_1000336B4(a1, a4, a2);
}

double sub_1000311D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10003224C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for VideoCard,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_100141A70);
}

uint64_t sub_100031208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for VideoCard);
}

double sub_100031214( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023E874, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_1000312A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023E874, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_100031324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023E874, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100031380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_1000031E8(&qword_1002EB230);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v14 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v23[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v23);
  uint64_t v18 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v19 = type metadata accessor for PosterLockup(0LL);
  swift_dynamicCast(&v24, v23, v18, v19, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  uint64_t v20 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v13, v20);
  double v21 = sub_10014CE6C(a2, a6);
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
  swift_release(v24);
  return v21;
}

double sub_1000314EC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10003224C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for PosterLockup,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_10014CFD8);
}

uint64_t sub_10003151C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for PosterLockup);
}

double sub_100031528(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_100033408(a1, a4, a2, a6, a7);
}

double sub_100031538( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100031764( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for Paragraph,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_10017343C);
}

uint64_t sub_100031568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for Paragraph);
}

double sub_100031574( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  return sub_1000315A4( a1,  a9,  a10,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for PrivacyType,  (double (*)(uint64_t, char *, uint64_t, uint64_t, double, double))sub_1001A5958);
}

double sub_1000315A4( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(void), double (*a12)(uint64_t, char *, uint64_t, uint64_t, double, double))
{
  uint64_t v32 = a8;
  uint64_t v31 = a12;
  uint64_t v17 = sub_1000031E8(&qword_1002EB230);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v33);
  uint64_t v25 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v26 = a11(0LL);
  swift_dynamicCast(&v34, v33, v25, v26, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a5, v17);
  uint64_t v27 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v20, v27);
  double v28 = v31(v34, v24, a7, v32, a2, a3);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  swift_release(v34);
  return v28;
}

double sub_100031734( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100031764( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for PrivacyType,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_1001A630C);
}

double sub_100031764( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), void (*a10)(uint64_t, char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v27 = a6;
  uint64_t v25 = a10;
  uint64_t v26 = a5;
  uint64_t v13 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v28);
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v22 = a9(0LL);
  swift_dynamicCast(&v29, v28, v21, v22, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  uint64_t v23 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v16, v23);
  v25(v29, v20, a4, v26, v27);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  *(void *)&double result = swift_release(v29).n128_u64[0];
  return result;
}

uint64_t sub_1000318D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for PrivacyType);
}

double sub_1000318DC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100240E2C, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_100031970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100240E2C, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_1000319EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100240E2C, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100031A48( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  return sub_100031A78( a1,  a9,  a10,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for PrivacyFooter,  (double (*)(uint64_t, char *, uint64_t, uint64_t, double, double))sub_1001BD308);
}

double sub_100031A78( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(void), double (*a12)(uint64_t, char *, uint64_t, uint64_t, double, double))
{
  uint64_t v30 = a12;
  uint64_t v31 = a8;
  uint64_t v17 = sub_1000031E8(&qword_1002EB230);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v32);
  uint64_t v25 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v26 = a11(0LL);
  swift_dynamicCast(&v33, v32, v25, v26, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a5, v17);
  uint64_t v27 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v20, v27);
  double v28 = v30(v33, v24, a7, v31, a2, a3);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  swift_release(v33);
  return v28;
}

double sub_100031C00( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100031C30( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for PrivacyFooter,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001BD138);
}

double sub_100031C30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), void (*a10)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v29 = a6;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v26 = a10;
  uint64_t v13 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v30);
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v22 = a9(0LL);
  swift_dynamicCast(&v31, v30, v21, v22, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  uint64_t v23 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v16, v23);
  v26(v31, v20, a3, v27, v28, v29);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  *(void *)&double result = swift_release(v31).n128_u64[0];
  return result;
}

uint64_t sub_100031DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for PrivacyFooter);
}

double sub_100031DAC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100241428, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_100031E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100241428, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_100031EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100241428, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100031F18( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100241D98, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_100031FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100241D98, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_100032028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100241D98, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100032084( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100241ED8, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_100032118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100241ED8, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_100032194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100241ED8, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_1000321F0( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_100033E84(a1, a5, a2, a3, a7, a8, (uint64_t (*)(void))&type metadata accessor for FramedVideo);
}

double sub_10003221C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10003224C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for FramedVideo,  (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_1001F071C);
}

double sub_10003224C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), void (*a10)(uint64_t, char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v27 = a5;
  uint64_t v25 = a10;
  uint64_t v26 = a4;
  uint64_t v13 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v28);
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v22 = a9(0LL);
  swift_dynamicCast(&v29, v28, v21, v22, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  uint64_t v23 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v16, v23);
  v25(v29, v20, a3, v26, v27);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  *(void *)&double result = swift_release(v29).n128_u64[0];
  return result;
}

uint64_t sub_1000323B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for FramedVideo);
}

double sub_1000323C4(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000031E8(&qword_1002EB230);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v20);
  uint64_t v15 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v16 = type metadata accessor for Brick(0LL);
  swift_dynamicCast(&v21, v20, v15, v16, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
  uint64_t v17 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v10, v17);
  if (qword_1002DCA60 != -1) {
    swift_once(&qword_1002DCA60, sub_1000BC758);
  }
  uint64_t v18 = type metadata accessor for AspectRatio(0LL);
  sub_1000061F4(v18, (uint64_t)qword_1002F0000);
  AspectRatio.height(fromWidth:)(a2);
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  swift_release(v21);
  return a2;
}

double sub_10003255C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100032D88( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for Brick,  (void (*)(uint64_t, char *, uint64_t, uint64_t))sub_1001F4774);
}

uint64_t sub_10003258C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100032EF0(a1, a2, a3, a4, a5, (uint64_t (*)(void))&type metadata accessor for Brick);
}

double sub_100032598( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002426D8, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_10003262C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002426D8, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_1000326A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002426D8, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100032704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1000341C0(a1, a3, a5, a6);
}

double sub_100032718( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100242AF4, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_1000327AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100242AF4, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_100032828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100242AF4, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100032884(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000031E8(&qword_1002EB230);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v20);
  uint64_t v15 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v16 = type metadata accessor for Brick(0LL);
  swift_dynamicCast(&v21, v20, v15, v16, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
  uint64_t v17 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v10, v17);
  double v18 = sub_100207C38(v21, a2);
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  swift_release(v21);
  return v18;
}

double sub_1000329F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_100035764(a1, a2, a4, a5, a6);
}

double sub_100032A08( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100242F94, a7);
  return sub_10002F3E8(a1, a2, a3, a4, a5, a6, a7, WitnessTable, a8, a9);
}

uint64_t sub_100032A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100242F94, a7);
  return sub_10002F65C(a1, a2, a3, a4, a5, a6, a7, WitnessTable);
}

uint64_t sub_100032B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100242F94, a4);
  return sub_10002F888(a1, a2, a3, a4, WitnessTable);
}

double sub_100032B74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100032BB0( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  &qword_1002DCE20,  (uint64_t)&xmmword_1002F0CC0,  (uint64_t)sub_1001631B8);
}

double sub_100032BB0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v29 = a10;
  uint64_t v14 = sub_1000031E8(&qword_1002EB230);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v30);
  uint64_t v22 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v23 = type metadata accessor for Lockup(0LL);
  swift_dynamicCast(&v31, v30, v22, v23, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a3, v14);
  uint64_t v24 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v17, v24);
  if (*a9 != -1LL) {
    swift_once(a9, a11);
  }
  uint64_t ObjectType = swift_getObjectType(a6);
  double v26 = sub_100132D00(v29, a6, ObjectType);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  swift_release(v31);
  return v26;
}

double sub_100032D48( uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100033A48(a1, a5, a2, a3, a7, a8);
}

double sub_100032D58( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100032D88( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  (uint64_t (*)(void))&type metadata accessor for Lockup,  (void (*)(uint64_t, char *, uint64_t, uint64_t))sub_100218AB4);
}

double sub_100032D88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), void (*a10)(uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v27 = a5;
  double v26 = a10;
  uint64_t v13 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v28);
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v22 = a9(0LL);
  swift_dynamicCast(&v29, v28, v21, v22, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  uint64_t v23 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v16, v23);
  v26(v29, v20, a4, v27);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  *(void *)&double result = swift_release(v29).n128_u64[0];
  return result;
}

uint64_t sub_100032EF0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v9 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v21);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v18 = a6(0LL);
  swift_dynamicCast(&v22, v21, v17, v18, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  uint64_t v19 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v12, v19);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
  swift_release(v22);
  return 3LL;
}

uint64_t sub_100033038( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v33 = a6;
  uint64_t v34 = a7;
  uint64_t v32 = a3;
  uint64_t v13 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  void v37[3] = a8;
  v37[4] = a10;
  uint64_t v21 = sub_100009D54(v37);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 16LL))(v21, a1, a8);
  sub_10001F010((uint64_t)v37, (uint64_t)v35);
  uint64_t v22 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v23 = type metadata accessor for ProductMedia(0LL);
  swift_dynamicCast(&v36, v35, v22, v23, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  uint64_t v24 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v16, v24);
  uint64_t v25 = type metadata accessor for ArtworkLoader(0LL);
  uint64_t v26 = v32;
  uint64_t v27 = inject(_:from:)(v25, v32);
  id v28 = [v33 snapshotPageTraitEnvironment];
  uint64_t v29 = sub_1000832EC();
  uint64_t v30 = v34;
  sub_10020F6B8(v29, v27, (uint64_t)v28, 3, v26);
  objc_msgSend(v30, "setNeedsLayout", swift_bridgeObjectRelease(v29).n128_f64[0]);
  swift_release(v27);
  swift_unknownObjectRelease(v28);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_release(v36);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v37);
}

double sub_100033244(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, char *a6)
{
  uint64_t v11 = sub_1000031E8(&qword_1002EB230);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = &v32[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v32);
  uint64_t v19 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v20 = type metadata accessor for Action(0LL);
  swift_dynamicCast(&v33, v32, v19, v20, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  uint64_t v21 = type metadata accessor for NilState(0LL);
  __n128 v22 = StateLens.init(_:)(v14, v21);
  uint64_t v23 = Action.artwork.getter(v22);
  uint64_t v24 = v23;
  if (v23)
  {
    swift_release(v23);
    int v25 = 0;
  }

  else
  {
    int v25 = 1;
  }

  uint64_t v26 = Action.title.getter(v23);
  uint64_t v28 = v27;
  double v29 = sub_1000A39DC(a6, v26, v27, v24 != 0, v25, a3, a4);
  __n128 v30 = swift_bridgeObjectRelease(v28);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v16 + 8))(v18, v15, v30);
  swift_release(v33);
  return v29;
}

double sub_100033408(uint64_t a1, uint64_t a2, __n128 a3, uint64_t a4, void *a5)
{
  double v6 = a3.n128_f64[0];
  uint64_t v9 = type metadata accessor for Paragraph.Style(0LL, a3);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000031E8(&qword_1002EB230);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v41 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v43);
  uint64_t v20 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v21 = type metadata accessor for Paragraph(0LL);
  swift_dynamicCast(&v44, v43, v20, v21, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  uint64_t v22 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v16, v22);
  uint64_t v23 = sub_100173010(v44, a5);
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;
  double v31 = v30;
  Paragraph.style.getter(v23);
  int v32 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  BOOL v33 = v32 == enum case for Paragraph.Style.article(_:) || v32 == enum case for Paragraph.Style.privacyDefinitions(_:);
  char v34 = !v33;
  if (v33)
  {
    swift_getObjectType(a5);
    double v36 = (PageTraitEnvironment.pageContentSize.getter() + -160.0) / 5.0 * 4.0 + 120.0;
  }

  else
  {
    uint64_t v35 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    double v36 = 0.0;
  }

  CGFloat v37 = (void *)Paragraph.text.getter(v35);
  swift_getObjectType(a5);
  double v38 = sub_1000369A0((uint64_t)v37, *(uint64_t *)&v36, v34, (uint64_t)a5, v25, v27, v29, v31, v6);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v42);
  swift_release(v44);
  return v38;
}

double sub_1000336B4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = type metadata accessor for VideoCardCollectionViewCell.Metrics(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = sub_1000031E8(&qword_1002EB230);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v22[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v22);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v18 = type metadata accessor for VideoCard(0LL);
  swift_dynamicCast(&v23, v22, v17, v18, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  uint64_t v19 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v12, v19);
  if (qword_1002DC958 != -1) {
    swift_once(&qword_1002DC958, sub_1000920E8);
  }
  uint64_t v20 = sub_1000061F4(v6, (uint64_t)qword_1002EF7E8);
  sub_100035AA8(v20, (uint64_t)v8);
  AspectRatio.height(fromWidth:)(a3);
  sub_100035AEC((uint64_t)v8);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
  swift_release(v23);
  return a3;
}

double sub_100033894(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v13 = sub_1000031E8(&qword_1002EB230);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8(&qword_1002DEB98);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v28);
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v22 = type metadata accessor for Annotation(0LL);
  swift_dynamicCast(&v29, v28, v21, v22, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  StateLens.init(_:)(v16, &_s5StateVN);
  uint64_t v23 = v29;
  unint64_t v24 = sub_100035A64();
  StateLens<A>.currentValue.getter(v28, v17, v24);
  LODWORD(v13) = LOBYTE(v28[0]);
  uint64_t ObjectType = swift_getObjectType(a6);
  double v26 = sub_1001AF418(v23, v13, a6, a3, a4, v7, ObjectType);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_release(v29);
  return v26;
}

double sub_100033A3C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5, double a6)
{
  return sub_100033E84(a1, a2, a5, a6, a3, a4, (uint64_t (*)(void))&type metadata accessor for FramedVideo);
}

double sub_100033A48(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1000031E8(&qword_1002EB230);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = &v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v27);
  uint64_t v19 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v20 = type metadata accessor for Lockup(0LL);
  swift_dynamicCast(&v28, v27, v19, v20, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  uint64_t v21 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v14, v21);
  swift_getObjectType(a6);
  if (qword_1002DCA30 != -1) {
    swift_once(&qword_1002DCA30, sub_1000B9E54);
  }
  uint64_t v22 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  uint64_t v23 = sub_1000061F4(v22, (uint64_t)qword_1002EFF78);
  sub_1000BBEDC(v23, a6, a3, a4);
  double v25 = v24;
  (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v15);
  swift_release(v28);
  return v25;
}

double sub_100033C1C(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a2;
  uint64_t v27 = a5;
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for AspectRatio(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8(&qword_1002EB230);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v18 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v30);
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v22 = type metadata accessor for ProductMedia(0LL);
  swift_dynamicCast(&v31, v30, v21, v22, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v28, v14);
  uint64_t v23 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v17, v23);
  sub_100082F48((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10) == 1)
  {
    sub_100034DEC((uint64_t)v9);
    double v24 = 0.0;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v25 = v27;
    swift_getObjectType(v27);
    double v24 = sub_10005F320(0.0, a3, (uint64_t)v13, v25, 3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }

  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v29);
  swift_release(v31);
  return v24;
}

double sub_100033E78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5, double a6)
{
  return sub_100033E84( a1,  a2,  a5,  a6,  a3,  a4,  (uint64_t (*)(void))&type metadata accessor for FramedArtwork);
}

double sub_100033E84( uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, void *a6, uint64_t (*a7)(void))
{
  uint64_t v13 = sub_1000031E8(&qword_1002EB230);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v17 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = &v34[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v34);
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v22 = a7(0LL);
  swift_dynamicCast(&v35, v34, v21, v22, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  uint64_t v23 = type metadata accessor for NilState(0LL);
  __n128 v24 = StateLens.init(_:)(v16, v23);
  uint64_t v25 = v35;
  double v26 = (void *)FramedMedia.caption.getter(v24);
  uint64_t v27 = FramedMedia.ordinal.getter();
  if (v28) {
    uint64_t v29 = v27;
  }
  else {
    uint64_t v29 = 0LL;
  }
  if (v28) {
    uint64_t v30 = v28;
  }
  else {
    uint64_t v30 = 0xE000000000000000LL;
  }
  double v31 = sub_100045840(v25, v26, v29, v30, a6, a3, a4);
  swift_bridgeObjectRelease(v30);

  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
  swift_release(v35);
  return v31;
}

double sub_10003403C(uint64_t a1, uint64_t a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_1000031E8(&qword_1002EB230);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v24);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v18 = type metadata accessor for TodayCard(0LL);
  swift_dynamicCast(&v25, v24, v17, v18, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  uint64_t v19 = type metadata accessor for NilState(0LL);
  objc_msgSend(a5, "pageMarginInsets", StateLens.init(_:)(v12, v19).n128_f64[0]);
  if (a3 - v20 - v21 < 0.0) {
    double v22 = 0.0;
  }
  else {
    double v22 = a3 - v20 - v21;
  }
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
  swift_release(v25);
  return v22;
}

double sub_1000341C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000031E8(&qword_1002EB230);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v21);
  uint64_t v15 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v16 = type metadata accessor for TodayCard(0LL);
  swift_dynamicCast(&v22, v21, v15, v16, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  uint64_t v17 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v10, v17);
  swift_getObjectType(a4);
  double v18 = (PageTraitEnvironment.pageContentSize.getter() + -80.0) / 3.0;
  if (qword_1002DCDA8 != -1) {
    swift_once(&qword_1002DCDA8, sub_1001500E0);
  }
  uint64_t v19 = type metadata accessor for AspectRatio(0LL);
  sub_1000061F4(v19, (uint64_t)qword_1002F0C10);
  AspectRatio.height(fromWidth:)(v18);
  if (qword_1002DCDB0 != -1) {
    swift_once(&qword_1002DCDB0, sub_100150130);
  }
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  swift_release(v22);
  return v18;
}

double sub_1000343B8(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, void *a6)
{
  uint64_t v11 = sub_1000031E8(&qword_1002EB230);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  double v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v29);
  uint64_t v19 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v20 = type metadata accessor for PrivacyCategory(0LL);
  swift_dynamicCast(&v30, v29, v19, v20, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  uint64_t v21 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v14, v21);
  uint64_t v22 = v30;
  type metadata accessor for PrivacyCategoryView();
  id v23 = [a6 traitCollection];
  uint64_t v24 = sub_100024C68(v22, (uint64_t)v23);

  v29[0] = v24;
  uint64_t v26 = type metadata accessor for LayoutViewPlaceholder(0LL, v25);
  dispatch thunk of Measurable.measurements(fitting:in:)( a6,  v26,  &protocol witness table for LayoutViewPlaceholder,  a3,  a4);
  __n128 v27 = swift_release(v24);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v27);
  swift_release(v30);
  return a3;
}

double sub_100034590(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  uint64_t v26 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v8 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000031E8(&qword_1002EB230);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  double v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v27);
  uint64_t v19 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v20 = type metadata accessor for ProductPageLink(0LL);
  swift_dynamicCast(&v28, v27, v19, v20, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  uint64_t v21 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v14, v21);
  if (qword_1002DCA58 != -1) {
    swift_once(&qword_1002DCA58, sub_1000BBFAC);
  }
  uint64_t v22 = type metadata accessor for StaticDimension(0LL);
  uint64_t v23 = sub_1000061F4(v22, (uint64_t)qword_1002EFFD8);
  static Dimensions.defaultRoundingRule.getter(v23);
  AnyDimension.value(in:rounded:)(v25, v10, v22, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  swift_release(v28);
  return a3;
}

double sub_10003479C(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a2;
  uint64_t v28 = a6;
  uint64_t v9 = type metadata accessor for AchievementSummaryLayout.Metrics(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000031E8(&qword_1002EB230);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v29);
  uint64_t v21 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v22 = type metadata accessor for AchievementSummary(0LL);
  swift_dynamicCast(&v30, v29, v21, v22, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v27, v13);
  uint64_t v23 = type metadata accessor for NilState(0LL);
  StateLens.init(_:)(v16, v23);
  if (qword_1002DCCB0 != -1) {
    swift_once(&qword_1002DCCB0, sub_100130140);
  }
  uint64_t v24 = sub_1000061F4(v9, (uint64_t)qword_1002F0878);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v24, v9);
  double v25 = static AchievementSummaryLayout.estimatedMeasurements(fitting:using:in:)(v12, v28, ceil(a3 * 0.5), a4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_release(v30);
  return v25;
}

double sub_1000349B0(uint64_t a1, uint64_t a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_1000031E8(&qword_1002EB230);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000031E8(&qword_1002DEB78);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v26);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v18 = type metadata accessor for ProductDescription(0LL);
  swift_dynamicCast(&v27, v26, v17, v18, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  StateLens.init(_:)(v12, &_s14descr100282211C5StateVN);
  uint64_t v19 = v27;
  unint64_t v20 = sub_100034DA8();
  StateLens<A>.currentValue.getter(v26, v13, v20);
  if (LOBYTE(v26[0]) == 2)
  {
    uint64_t v22 = ProductDescription.paragraph.getter(v21);
    char v23 = Paragraph.isCollapsed.getter(v22);
    swift_release(v22);
  }

  else
  {
    char v23 = v26[0] & 1;
  }

  double v24 = sub_1001327CC(a3, 1.79769313e308, v19, v23 & 1, a5);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  swift_release(v27);
  return v24;
}

double sub_100034B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v35 = a4;
  uint64_t v33 = a3;
  uint64_t v30 = a2;
  uint64_t v34 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  uint64_t v32 = *(void *)(v34 - 8);
  __n128 v9 = __chkstk_darwin(v34);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for UpsellBreakout.DisplayProperties(0LL, v9);
  uint64_t v12 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000031E8(&qword_1002EB230);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v36);
  uint64_t v23 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v24 = type metadata accessor for UpsellBreakout(0LL);
  swift_dynamicCast(&v37, v36, v23, v24, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v30, v15);
  uint64_t v25 = type metadata accessor for NilState(0LL);
  __n128 v26 = StateLens.init(_:)(v18, v25);
  uint64_t v27 = UpsellBreakout.displayProperties.getter(v26);
  UpsellBreakout.DisplayProperties.detailsPosition.getter(v27);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v31);
  double v28 = sub_1000E514C((uint64_t)v11, a5, a6, v33, v35);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v34);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  swift_release(v37);
  return v28;
}

unint64_t sub_100034DA8()
{
  unint64_t result = qword_1002DEB80;
  if (!qword_1002DEB80)
  {
    unint64_t result = swift_getWitnessTable(&unk_100235050, &_s14descr100282211C5StateVN);
    atomic_store(result, (unint64_t *)&qword_1002DEB80);
  }

  return result;
}

uint64_t sub_100034DEC(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

double sub_100034E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4 = v3;
  uint64_t v8 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v27);
  uint64_t v16 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v17 = type metadata accessor for TodayCard(0LL);
  swift_dynamicCast(&v28, v27, v16, v17, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v18 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v11, v18);
  uint64_t v19 = v28;
  uint64_t v20 = *(void **)&v4[OBJC_IVAR____TtC6Arcade32LargeStoryCardCollectionViewCell_mediaView];
  uint64_t v22 = TodayCard.media.getter(v21);
  uint64_t v23 = TodayCard.heroMedia.getter();
  sub_1000722A4(v22, v23, 2, (uint64_t)v27);
  sub_1001B6754(v27, a3);
  sub_100035420(v27);
  [v20 setNeedsLayout];
  if (qword_1002DCCF8 != -1) {
    swift_once(&qword_1002DCCF8, sub_100137BEC);
  }
  uint64_t v24 = type metadata accessor for ArticleCardTextView.Config(0LL);
  uint64_t v25 = sub_1000061F4(v24, (uint64_t)qword_1002F0A68);
  sub_100124344(v19, v25, 2);
  [v4 setNeedsLayout];
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(void *)&double result = swift_release(v28).n128_u64[0];
  return result;
}

double sub_100035040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4 = v3;
  uint64_t v8 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001F010(a1, (uint64_t)v27);
  uint64_t v16 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v17 = type metadata accessor for TodayCard(0LL);
  swift_dynamicCast(&v28, v27, v16, v17, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v18 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v11, v18);
  uint64_t v19 = v28;
  uint64_t v20 = *(void **)&v4[OBJC_IVAR____TtC6Arcade32SmallStoryCardCollectionViewCell_mediaView];
  uint64_t v22 = TodayCard.media.getter(v21);
  uint64_t v23 = TodayCard.heroMedia.getter();
  sub_1000722A4(v22, v23, 1, (uint64_t)v27);
  sub_1001B6754(v27, a3);
  sub_100035420(v27);
  [v20 setNeedsLayout];
  if (qword_1002DCCF0 != -1) {
    swift_once(&qword_1002DCCF0, sub_1001377DC);
  }
  uint64_t v24 = type metadata accessor for ArticleCardTextView.Config(0LL);
  uint64_t v25 = sub_1000061F4(v24, (uint64_t)qword_1002F0A50);
  sub_100124344(v19, v25, 1);
  [v4 setNeedsLayout];
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(void *)&double result = swift_release(v28).n128_u64[0];
  return result;
}

double sub_100035250(uint64_t a1, uint64_t a2)
{
  Swift::Bool v3 = v2;
  uint64_t v6 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v27);
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v15 = type metadata accessor for PrivacyCategory(0LL);
  swift_dynamicCast(&v28, v27, v14, v15, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v16 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v9, v16);
  uint64_t v17 = v28;
  uint64_t v18 = OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategory;
  uint64_t v19 = *(void *)&v3[OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategory];
  *(void *)&v3[OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategory] = v28;
  swift_retain_n(v17, 2LL);
  swift_release(v19);
  uint64_t v20 = *(void *)&v3[OBJC_IVAR____TtC6Arcade33PrivacyCategoryCollectionViewCell_privacyCategoryView];
  uint64_t v21 = *(void *)&v3[v18];
  uint64_t v22 = *(void *)(v20 + OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category);
  *(void *)(v20 + OBJC_IVAR____TtC6Arcade19PrivacyCategoryView_category) = v21;
  swift_retain_n(v21, 2LL);
  swift_release(v22);
  sub_1000245F8(v23, v24);
  objc_msgSend(v3, "setNeedsLayout", swift_release(v21).n128_f64[0]);
  __n128 v25 = swift_release(v17);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v11 + 8))(v13, v10, v25);
  *(void *)&double result = swift_release(v28).n128_u64[0];
  return result;
}

void *sub_100035420(void *a1)
{
  return a1;
}

double sub_100035454(uint64_t a1, uint64_t a2)
{
  Swift::Bool v3 = v2;
  uint64_t v6 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v23);
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v15 = type metadata accessor for ProductPageLink(0LL);
  swift_dynamicCast(&v24, v23, v14, v15, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v16 = type metadata accessor for NilState(0LL);
  uint64_t v17 = WritableStateLens.init(_:)(v9, v16);
  uint64_t v18 = *(void **)&v3[OBJC_IVAR____TtC6Arcade33ProductPageLinkCollectionViewCell_button];
  ProductPageLink.text.getter(v17);
  uint64_t v20 = v19;
  NSString v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setTitle:forState:", v21, 0, swift_bridgeObjectRelease(v20).n128_f64[0]);

  [v3 setNeedsLayout];
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  *(void *)&double result = swift_release(v24).n128_u64[0];
  return result;
}

double sub_1000355F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v19);
  uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v15 = type metadata accessor for Lockup(0LL);
  swift_dynamicCast(&v20, v19, v14, v15, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v16 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v9, v16);
  uint64_t v17 = inject(_:from:)(a3);
  sub_100118388();
  swift_unknownObjectRelease(v17);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  *(void *)&double result = swift_release(v20).n128_u64[0];
  return result;
}

double sub_100035764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002EA160);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v23);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v18 = type metadata accessor for Brick(0LL);
  swift_dynamicCast(&v24, v23, v17, v18, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  uint64_t v19 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v12, v19);
  uint64_t v20 = v24;
  id v21 = objc_msgSend(a5, "traitCollection", swift_retain(v24).n128_f64[0]);
  sub_100207864(v20, v21, v5);
  swift_release(v20);

  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
  *(void *)&double result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_1000358EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002EAD40);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v8 = sub_1000031E8(&qword_1002DEB88);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10001F010(a1, (uint64_t)v20);
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v13 = type metadata accessor for Annotation(0LL);
  swift_dynamicCast(&v21, v20, v12, v13, 7LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v14 = WritableStateLens.init(_:)(v7, &_s5StateVN);
  if (sub_1001AB370(v14, v15))
  {
    unint64_t v16 = sub_100035A64();
    WritableStateLens<A>.updateValue(_:)(sub_1000D5CE0, 0LL, v8, v16);
    uint64_t v17 = 3LL;
  }

  else
  {
    uint64_t v17 = 2LL;
  }

  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  swift_release(v21);
  return v17;
}

unint64_t sub_100035A64()
{
  unint64_t result = qword_1002DEB90;
  if (!qword_1002DEB90)
  {
    unint64_t result = swift_getWitnessTable(&unk_100238F28, &_s5StateVN);
    atomic_store(result, (unint64_t *)&qword_1002DEB90);
  }

  return result;
}

uint64_t sub_100035AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoCardCollectionViewCell.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100035AEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoCardCollectionViewCell.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100035B28()
{
  uint64_t v1 = type metadata accessor for TapToRate(0LL);
  if (swift_dynamicCastClass(v0, v1))
  {
    uint64_t v2 = type metadata accessor for ProductTapToRateContentView();
    Swift::Bool v3 = type metadata accessor for ProductTapToRateContentView;
    uint64_t v4 = (unint64_t *)&unk_1002DEBB8;
    uint64_t v5 = &unk_10023C934;
  }

  else
  {
    uint64_t v6 = type metadata accessor for ProductStarRatings();
    if (swift_dynamicCastClass(v0, v6))
    {
      uint64_t v2 = type metadata accessor for ProductStarRatingsContentView();
      Swift::Bool v3 = type metadata accessor for ProductStarRatingsContentView;
      uint64_t v4 = (unint64_t *)&unk_1002DEBB0;
      uint64_t v5 = &unk_1002430E8;
    }

    else
    {
      uint64_t v7 = type metadata accessor for ProductStarRatingsHistogram(0LL);
      if (swift_dynamicCastClass(v0, v7))
      {
        uint64_t v2 = type metadata accessor for ProductStarRatingsHistogramContentView();
        Swift::Bool v3 = type metadata accessor for ProductStarRatingsHistogramContentView;
        uint64_t v4 = (unint64_t *)&unk_1002DEBA8;
        uint64_t v5 = &unk_100233740;
      }

      else
      {
        uint64_t v8 = type metadata accessor for ProductNoRatings();
        if (!swift_dynamicCastClass(v0, v8)) {
          return 0LL;
        }
        uint64_t v2 = type metadata accessor for ProductNoRatingsContentView();
        Swift::Bool v3 = type metadata accessor for ProductNoRatingsContentView;
        uint64_t v4 = (unint64_t *)&unk_1002DEBA0;
        uint64_t v5 = &unk_1002395E4;
      }
    }
  }

  sub_100003B6C(v4, (uint64_t (*)(uint64_t))v3, (uint64_t)v5);
  return v2;
}

uint64_t sub_100035C48(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v13);
  }

  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    __int128 v15 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v15;
    uint64_t v8 = a3[6];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    swift_bridgeObjectRetain(v7);
    swift_unknownObjectRetain(v15);
    uint64_t v11 = sub_1000031E8(&qword_1002DEBC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
    uint64_t v12 = a3[8];
    *(_BYTE *)(a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_BYTE *)(a1 + v12) = *((_BYTE *)a2 + v12);
  }

  return a1;
}

uint64_t sub_100035D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1000031E8(&qword_1002DEBC0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
}

uint64_t sub_100035D70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  __int128 v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  swift_bridgeObjectRetain(v6);
  swift_unknownObjectRetain(v13);
  uint64_t v10 = sub_1000031E8(&qword_1002DEBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

void *sub_100035E18(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a1[2];
  a1[2] = v8;
  swift_unknownObjectRetain(v8);
  swift_unknownObjectRelease(v10);
  a1[3] = v9;
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  __int128 v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1000031E8(&qword_1002DEBC0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24LL))(v12, v13, v14);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_100035ED4(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000031E8(&qword_1002DEBC0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

void *sub_100035F58(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[3];
  uint64_t v9 = a1[2];
  a1[2] = a2[2];
  swift_unknownObjectRelease(v9);
  a1[3] = v8;
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000031E8(&qword_1002DEBC0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40LL))(v11, v12, v13);
  uint64_t v14 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  return a1;
}

uint64_t sub_100035FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100036004);
}

uint64_t sub_100036004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_1000031E8(&qword_1002DEBC0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( a1 + *(int *)(a3 + 24),  a2,  v8);
  }

uint64_t sub_100036084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100036090);
}

uint64_t sub_100036090(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = sub_1000031E8(&qword_1002DEBC0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v5 + *(int *)(a4 + 24),  a2,  a2,  v7);
  }

  return result;
}

uint64_t type metadata accessor for BoolDebugSetting(uint64_t a1)
{
  uint64_t result = qword_1002DEC20;
  if (!qword_1002DEC20) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BoolDebugSetting);
  }
  return result;
}

void sub_100036144(uint64_t a1)
{
  v4[0] = &unk_100234798;
  v4[1] = &unk_100234798;
  sub_1000361C4();
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(v2 - 8) + 64LL;
    void v4[3] = &unk_1002347B0;
    void v4[4] = &unk_1002347B0;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
  }

void sub_1000361C4()
{
  if (!qword_1002DEC30)
  {
    unint64_t v0 = type metadata accessor for PreferenceKey(0LL, &type metadata for Bool);
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002DEC30);
    }
  }

uint64_t sub_100036218()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_100036244(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_100036250(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000FF90(v2, qword_1002DEC70);
  uint64_t v3 = sub_1000061F4(v2, (uint64_t)qword_1002DEC70);
  if (qword_1002DC5D0 != -1) {
    swift_once(&qword_1002DC5D0, sub_100071448);
  }
  uint64_t v4 = sub_1000061F4(v2, (uint64_t)qword_1002EEDC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(v3, v4, v2);
}

char *sub_1000362E0(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v12 = type metadata accessor for FontUseCase(0LL, v11);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  __int128 v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v16 = &v5[OBJC_IVAR____TtC6Arcade27ParagraphCollectionViewCell_itemLayoutContext];
  uint64_t v17 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v16, 1LL, 1LL, v17);
  uint64_t v18 = &v5[OBJC_IVAR____TtC6Arcade27ParagraphCollectionViewCell_lineLengthLimit];
  *(void *)uint64_t v18 = 0LL;
  v18[8] = 1;
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v19 = qword_1002DC3F0;
  uint64_t v20 = v5;
  if (v19 != -1) {
    swift_once(&qword_1002DC3F0, sub_100036250);
  }
  uint64_t v21 = sub_1000061F4(v12, (uint64_t)qword_1002DEC70);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v21, v12);
  uint64_t v22 = sub_1000137B8((uint64_t)v15, 2LL, 0LL, 1, 0);
  *(void *)&v20[OBJC_IVAR____TtC6Arcade27ParagraphCollectionViewCell_textLabel] = v22;
  [v22 setNumberOfLines:0];
  uint64_t v23 = v22;
  [v23 setLineBreakMode:0];

  v28.receiver = v20;
  v28.super_class = ObjectType;
  uint64_t v24 = (char *)objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  id v25 = [v24 contentView];
  id v26 = *(id *)&v24[OBJC_IVAR____TtC6Arcade27ParagraphCollectionViewCell_textLabel];
  [v25 addSubview:v26];

  return v24;
}

id sub_100036524()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v8, "layoutSubviews");
  id v1 = [v0 contentView];
  [v1 frame];

  CGRect.subtracting(insets:)([v0 layoutMargins]);
  CGRectGetWidth(v9);
  id v2 = [v0 contentView];
  [v2 frame];

  CGRect.subtracting(insets:)([v0 layoutMargins]);
  CGRectGetMinX(v10);
  id v3 = [v0 contentView];
  [v3 frame];

  CGRect.subtracting(insets:)([v0 layoutMargins]);
  CGRectGetMinY(v11);
  id v4 = [v0 contentView];
  [v4 frame];

  CGRect.subtracting(insets:)([v0 layoutMargins]);
  CGRectGetHeight(v12);
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC6Arcade27ParagraphCollectionViewCell_textLabel];
  id v6 = [v0 contentView];
  [v6 frame];

  CGRect.subtracting(insets:)([v0 layoutMargins]);
  CGRect.withLayoutDirection(in:relativeTo:)(v0);
  return objc_msgSend(v5, "setFrame:");
}

uint64_t sub_10003685C()
{
  return sub_100006060( v0 + OBJC_IVAR____TtC6Arcade27ParagraphCollectionViewCell_itemLayoutContext,  (uint64_t *)&unk_1002DDB60);
}

uint64_t sub_1000368D8()
{
  return type metadata accessor for ParagraphCollectionViewCell(0LL);
}

uint64_t type metadata accessor for ParagraphCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DECC0;
  if (!qword_1002DECC0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ParagraphCollectionViewCell);
  }
  return result;
}

void sub_10003691C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10000A9D8(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    void v4[2] = "\t";
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 472);
  }

double sub_1000369A0( uint64_t a1, uint64_t a2, char a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t v16 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v27[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v20 = *(double *)&a2;
  if ((a3 & 1) != 0) {
    double v21 = a9 - (a6 + a8);
  }
  else {
    double v21 = v20;
  }
  uint64_t v22 = type metadata accessor for FontUseCase(0LL, v17);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56LL))(v19, 1LL, 1LL, v22);
  uint64_t v23 = type metadata accessor for Feature(0LL);
  v27[3] = v23;
  void v27[4] = sub_1000100C0();
  uint64_t v24 = sub_100009D54(v27);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104LL))( v24,  enum case for Feature.measurement_with_labelplaceholder(_:),  v23);
  LOBYTE(v23) = isFeatureEnabled(_:)(v27);
  _s6Arcade17PillOverlayLayoutVwxx_0(v27);
  static LabelPlaceholderCompatibility.measurements(attributedText:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)( a1,  v19,  4LL,  0LL,  0LL,  0LL,  0LL,  a4,  v21,  1.79769313e308,  v23 & 1);
  sub_100006060((uint64_t)v19, &qword_1002DE930);
  return a9;
}

double UIImageView.focusedFrame.getter()
{
  id v1 = [v0 _layeredImageContainer];
  if (!v1) {
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  if (([v1 isStackFocused] & 1) == 0 && !objc_msgSend(v2, "isPressed"))
  {

LABEL_6:
    [v0 frame];
    return v6;
  }

  id v3 = [v0 focusedFrameGuide];
  [v3 layoutFrame];
  double v5 = v4;

  return v5;
}

BOOL static TVBreakoutDetailsLayout.Alignment.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void TVBreakoutDetailsLayout.Alignment.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int TVBreakoutDetailsLayout.Alignment.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL sub_100036CE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_100036CFC()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100036D40()
{
}

Swift::Int sub_100036D68()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t ArcadeSubscribePageLayout.init(metrics:detailsPosition:contentView:detailsView:)@<X0>( uint64_t a1@<X0>, char a2@<W1>, __int128 *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v7 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a5 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a5 + 112) = v7;
  *(_OWORD *)(a5 + 128) = *(_OWORD *)(a1 + 128);
  *(void *)(a5 + 144) = *(void *)(a1 + 144);
  __int128 v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a5 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a5 + 48) = v8;
  __int128 v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a5 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a5 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v9;
  __int128 v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  *(_BYTE *)(a5 + 152) = a2 & 1;
  sub_100009D90(a3, a5 + 160);
  return sub_100009D90(a4, a5 + 200);
}

double TVAppShowcaseLayout.Metrics.lockupMargins.getter()
{
  return *(double *)v0;
}

void TVAppShowcaseLayout.Metrics.lockupMargins.setter(double a1, double a2, double a3, double a4)
{
  *double v4 = a1;
  v4[1] = a2;
  void v4[2] = a3;
  void v4[3] = a4;
}

uint64_t (*SmallGameCenterPlayerLayout.Metrics.avatarSize.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVAppShowcaseLayout.Metrics.lockupBottomSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 32, a1);
}

uint64_t TVAppShowcaseLayout.Metrics.lockupBottomSpace.setter(__int128 *a1)
{
  id v3 = (void *)(v1 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVAppShowcaseLayout.Metrics.lockupBottomSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t ArcadeSubscribePageLayout.Metrics.contentHeight.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100036EA4(v1 + 72, a1);
}

uint64_t sub_100036EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E4D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t ArcadeSubscribePageLayout.Metrics.contentHeight.setter(uint64_t a1)
{
  return sub_100036EF4(a1, v1 + 72);
}

uint64_t sub_100036EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E4D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t (*ArcadeSubscribePageLayout.Metrics.contentHeight.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t ArcadeSubscribePageLayout.Metrics.contentMargin.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 112, a1);
}

uint64_t ArcadeSubscribePageLayout.Metrics.contentMargin.setter(__int128 *a1)
{
  id v3 = (void *)(v1 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*ArcadeSubscribePageLayout.Metrics.contentMargin.modify())()
{
  return MotionEffects.rawValue.getter;
}

__n128 ArcadeSubscribePageLayout.Metrics.init(byCopying:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 112) = v2;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 128);
  *(void *)(a2 + 144) = *(void *)(a1 + 144);
  __int128 v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  __int128 v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v4;
  __n128 result = *(__n128 *)a1;
  __int128 v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  return result;
}

uint64_t ArcadeSubscribePageLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100036FE8(v1, a1);
}

uint64_t sub_100036FE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ArcadeSubscribePageLayout.detailsPosition.getter()
{
  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t TVProductAnnotationLayout.Metrics.bottomSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 160, a1);
}

uint64_t TVProductAnnotationLayout.ItemLayout.Metrics.listTextTopSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 200, a1);
}

  ;
}

uint64_t ArcadeSubscribePageLayout.placeChildren(relativeTo:in:)( uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  __int128 v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v16 = *(double *)(v5 + 8);
  double v48 = *(double *)(v5 + 24);
  uint64_t v17 = (void *)(v5 + 32);
  uint64_t v18 = *(void *)(v5 + 56);
  uint64_t v19 = *(void *)(v6 + 64);
  sub_100005F8C(v17, v18);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v18, v19);
  double v20 = AnyDimension.value(in:rounded:)(a1, v15, v18, v19);
  double v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v15, v12);
  sub_100036EA4(v6 + 72, (uint64_t)v50);
  uint64_t v22 = v51;
  if (v51)
  {
    double v23 = a2;
    double v24 = a3;
    double v25 = a4;
    double v26 = a5;
    uint64_t v27 = v52;
    sub_100005F8C(v50, v51);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22, v27);
    AnyDimension.value(in:rounded:)(a1, v15, v22, v27);
    v21(v15, v12);
    _s6Arcade17PillOverlayLayoutVwxx_0(v50);
  }

  else
  {
    sub_10002E1A0((uint64_t)v50);
    double v23 = a2;
    v53.origin.CGFloat x = a2;
    double v24 = a3;
    v53.origin.CGFloat y = a3;
    double v25 = a4;
    v53.size.CGFloat width = a4;
    double v26 = a5;
    v53.size.CGFloat height = a5;
    CGRectGetHeight(v53);
  }

  uint64_t v28 = *(void *)(v6 + 136);
  uint64_t v29 = *(void *)(v6 + 144);
  sub_100005F8C((void *)(v6 + 112), v28);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v28, v29);
  double v49 = AnyDimension.value(in:rounded:)(a1, v15, v28, v29);
  v21(v15, v12);
  double v30 = v23;
  double v31 = v24;
  double v32 = v25;
  double v33 = v26;
  if ((*(_BYTE *)(v6 + 152) & 1) != 0)
  {
    double MinX = v20 + v49 + CGRectGetMinX(*(CGRect *)&v30);
  }

  else
  {
    CGRectGetMaxX(*(CGRect *)&v30);
    v54.origin.CGFloat x = v23;
    v54.origin.CGFloat y = v24;
    v54.size.CGFloat width = v25;
    v54.size.CGFloat height = v26;
    double MinX = CGRectGetMinX(v54);
  }

  double v47 = v16 + MinX;
  v55.origin.CGFloat x = v23;
  v55.origin.CGFloat y = v24;
  v55.size.CGFloat width = v25;
  v55.size.CGFloat height = v26;
  CGRectGetMidY(v55);
  double v46 = v16;
  uint64_t v35 = *(void *)(v6 + 184);
  uint64_t v36 = *(void *)(v6 + 192);
  sub_100005F8C((void *)(v6 + 160), v35);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v35, v36);
  v56.origin.CGFloat x = v23;
  v56.origin.CGFloat y = v24;
  v56.size.CGFloat width = v25;
  v56.size.CGFloat height = v26;
  double v37 = CGRectGetWidth(v56) - v46 - v48 - v20 - v49;
  v57.origin.CGFloat x = v23;
  v57.origin.CGFloat y = v24;
  v57.size.CGFloat width = v25;
  v57.size.CGFloat height = v26;
  double Height = CGRectGetHeight(v57);
  CGFloat v39 = (void *)(v6 + 200);
  uint64_t v40 = *(void *)(v6 + 224);
  uint64_t v41 = *(void *)(v6 + 232);
  sub_100005F8C((void *)(v6 + 200), v40);
  dispatch thunk of Measurable.measurements(fitting:in:)(a1, v40, *(void *)(v41 + 8), v37, Height);
  v58.origin.CGFloat x = v23;
  v58.origin.CGFloat y = v24;
  v58.size.CGFloat width = v25;
  v58.size.CGFloat height = v26;
  CGRectGetMidY(v58);
  uint64_t v43 = *(void *)(v6 + 224);
  uint64_t v42 = *(void *)(v6 + 232);
  sub_100005F8C(v39, v43);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v43, v42);
  return LayoutRect.init(representing:)(v23, v24, v25, v26);
}

unint64_t sub_100037450()
{
  unint64_t result = qword_1002DECD0;
  if (!qword_1002DECD0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ArcadeSubscribePageLayout.DetailsPosition,  &type metadata for ArcadeSubscribePageLayout.DetailsPosition);
    atomic_store(result, (unint64_t *)&qword_1002DECD0);
  }

  return result;
}

uint64_t destroy for ArcadeSubscribePageLayout(void *a1)
{
  if (a1[12]) {
    _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 9);
  }
  _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 14);
  _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 20);
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 25);
}

uint64_t initializeWithCopy for ArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  __int128 v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  uint64_t v6 = (_OWORD *)(a1 + 72);
  __int128 v7 = (_OWORD *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 96);
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v8;
    *(void *)(a1 + 104) = v9;
    (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v6, v7);
  }

  else
  {
    __int128 v10 = *(_OWORD *)(a2 + 88);
    _OWORD *v6 = *v7;
    *(_OWORD *)(a1 + 88) = v10;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
  }

  __int128 v11 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 112, a2 + 112);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  __int128 v12 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 160, a2 + 160);
  __int128 v13 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 200, a2 + 200);
  return a1;
}

uint64_t assignWithCopy for ArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1000264E4((void *)(a1 + 32), (void *)(a2 + 32));
  uint64_t v4 = *(void *)(a2 + 96);
  if (!*(void *)(a1 + 96))
  {
    if (v4)
    {
      *(void *)(a1 + 96) = v4;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 72, a2 + 72);
      goto LABEL_8;
    }

__n128 initializeWithTake for TVArticleCardTextLayout(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[2];
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __int128 v4 = a2[3];
  __int128 v5 = a2[4];
  __int128 v6 = a2[6];
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __int128 v7 = a2[7];
  __int128 v8 = a2[8];
  __int128 v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  __int128 v11 = a2[12];
  __int128 v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for ArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 32));
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  if (*(void *)(a1 + 96)) {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 72));
  }
  __int128 v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 112));
  __int128 v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 160));
  __int128 v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 200));
  *(_OWORD *)(a1 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 2swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArcadeSubscribePageLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 240)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcadeSubscribePageLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 232) = 0LL;
    *(_OWORD *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscribePageLayout()
{
  return &type metadata for ArcadeSubscribePageLayout;
}

_BYTE *initializeBufferWithCopyOfBuffer for InteractionState(_BYTE *result, _BYTE *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FullScreenTransitionDirection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

uint64_t storeEnumTagSinglePayload for ArcadeSubscribePageLayout.DetailsPosition( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_100037978 + 4 * byte_100234835[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000379AC + 4 * byte_100234830[v4]))();
}

uint64_t sub_1000379AC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000379B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1000379BCLL);
  }
  return result;
}

uint64_t sub_1000379C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1000379D0LL);
  }
  *(_BYTE *)__n128 result = a2 + 1;
  return result;
}

uint64_t sub_1000379D4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000379DC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000379E8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1000379F0(_BYTE *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscribePageLayout.DetailsPosition()
{
  return &type metadata for ArcadeSubscribePageLayout.DetailsPosition;
}

uint64_t destroy for ArcadeSubscribePageLayout.Metrics(void *a1)
{
  if (a1[12]) {
    _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 9);
  }
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 14);
}

uint64_t initializeWithCopy for ArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  __int128 v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  unsigned int v6 = (_OWORD *)(a1 + 72);
  BOOL v7 = (_OWORD *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 96);
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v8;
    *(void *)(a1 + 104) = v9;
    (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v6, v7);
  }

  else
  {
    __int128 v10 = *(_OWORD *)(a2 + 88);
    _OWORD *v6 = *v7;
    *(_OWORD *)(a1 + 88) = v10;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
  }

  __int128 v11 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 112, a2 + 112);
  return a1;
}

uint64_t assignWithCopy for ArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1000264E4((void *)(a1 + 32), (void *)(a2 + 32));
  uint64_t v4 = *(void *)(a2 + 96);
  if (!*(void *)(a1 + 96))
  {
    if (v4)
    {
      *(void *)(a1 + 96) = v4;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 72, a2 + 72);
      goto LABEL_8;
    }

__n128 initializeWithTake for ArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  __int128 v7 = *(_OWORD *)(a2 + 112);
  __int128 v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 32));
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  if (*(void *)(a1 + 96)) {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 72));
  }
  __int128 v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 112));
  __int128 v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArcadeSubscribePageLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcadeSubscribePageLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 152) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscribePageLayout.Metrics()
{
  return &type metadata for ArcadeSubscribePageLayout.Metrics;
}

uint64_t sub_100037D24()
{
  uint64_t v0 = sub_1000031E8(&qword_1002DECF0);
  sub_10000FF90(v0, qword_1002EE698);
  sub_1000061F4(v0, (uint64_t)qword_1002EE698);
  uint64_t v1 = sub_1000031E8(&qword_1002DE250);
  return Conditional.init(_:)(sub_100037D98, 0LL, v1, &type metadata for CGFloat);
}

void sub_100037D98(id *a1@<X0>, double *a2@<X8>)
{
  id v3 = [*a1 traitCollection];
  id v4 = [v3 preferredContentSizeCategory];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityMedium);
  uint64_t v7 = v6;
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v5 == v8 && v7 == v9) {
    goto LABEL_13;
  }
  uint64_t v11 = v9;
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0LL);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityLarge);
  uint64_t v7 = v14;
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v13 == v15 && v7 == v16) {
    goto LABEL_13;
  }
  uint64_t v18 = v16;
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v7, v15, v16, 0LL);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v18);
  if ((v19 & 1) != 0)
  {
LABEL_14:

    double v25 = 2.0;
    goto LABEL_15;
  }

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraLarge);
  uint64_t v7 = v21;
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  uint64_t v24 = v22;
  if (v20 == v23 && v7 == v22)
  {
LABEL_13:
    swift_bridgeObjectRelease_n(v7, 2LL);
    goto LABEL_14;
  }

  char v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v7, v23, v22, 0LL);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v24);
  if ((v26 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraLarge);
  uint64_t v29 = v28;
  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  uint64_t v32 = v30;
  if (v27 == v31 && v29 == v30)
  {
    swift_bridgeObjectRelease_n(v29, 2LL);
LABEL_21:

LABEL_22:
    double v25 = 3.0;
    goto LABEL_15;
  }

  char v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0LL);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v32);
  if ((v33 & 1) != 0) {
    goto LABEL_21;
  }
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);
  uint64_t v36 = v35;
  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  uint64_t v39 = v37;
  if (v34 == v38 && v36 == v37)
  {

    swift_bridgeObjectRelease_n(v36, 2LL);
    goto LABEL_22;
  }

  char v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36, v38, v37, 0LL);

  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v39);
  double v25 = 1.0;
  if ((v40 & 1) != 0) {
    double v25 = 3.0;
  }
LABEL_15:
  *a2 = v25;
}

uint64_t TVFlowcaseItemLayout.init(metrics:artworkView:captionText:titleText:subtitleText:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v29 = a6;
  uint64_t v11 = type metadata accessor for Locale(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for TVFlowcaseItemLayout(0LL);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100038254(a1, (uint64_t)&v17[*(int *)(v18 + 32)]);
  sub_10001F010((uint64_t)a2, (uint64_t)v17);
  uint64_t v20 = static Locale.storefront.getter(v19);
  char v21 = Locale.hasExtraTallWritingSystem.getter(v20);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((v21 & 1) != 0)
  {
    uint64_t v22 = a3[3];
    uint64_t v23 = a3[4];
    sub_100005F8C(a3, v22);
    LayoutTextView.withLanguageAwareOutsets.getter(v22, v23);
    uint64_t v24 = a4[3];
    uint64_t v25 = a4[4];
    sub_100005F8C(a4, v24);
    LayoutTextView.withLanguageAwareOutsets.getter(v24, v25);
    uint64_t v26 = a5[3];
    uint64_t v27 = a5[4];
    sub_100005F8C(a5, v26);
    LayoutTextView.withLanguageAwareOutsets.getter(v26, v27);
    _s6Arcade17PillOverlayLayoutVwxx_0(a2);
    sub_1000382E0(a1);
    sub_100009D90(&v30, (uint64_t)(v17 + 120));
  }

  else
  {
    _s6Arcade17PillOverlayLayoutVwxx_0(a2);
    sub_1000382E0(a1);
    sub_10001F010((uint64_t)a3, (uint64_t)(v17 + 40));
    sub_10001F010((uint64_t)a4, (uint64_t)(v17 + 80));
    sub_10001F010((uint64_t)a5, (uint64_t)(v17 + 120));
  }

  sub_1000387A0((uint64_t)v17, v29, type metadata accessor for TVFlowcaseItemLayout);
  _s6Arcade17PillOverlayLayoutVwxx_0(a5);
  _s6Arcade17PillOverlayLayoutVwxx_0(a4);
  return _s6Arcade17PillOverlayLayoutVwxx_0(a3);
}

uint64_t type metadata accessor for TVFlowcaseItemLayout(uint64_t a1)
{
  return sub_1000382AC(a1, qword_1002DED88, (uint64_t)&nominal type descriptor for TVFlowcaseItemLayout);
}

uint64_t sub_100038254(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TVFlowcaseItemLayout.Metrics(uint64_t a1)
{
  return sub_1000382AC(a1, qword_1002DEE28, (uint64_t)&nominal type descriptor for TVFlowcaseItemLayout.Metrics);
}

uint64_t sub_1000382AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata(a1, a3);
  }
  return result;
}

uint64_t sub_1000382E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t TVProductAnnotationLayout.titleText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1, a1);
}

uint64_t TVProductAnnotationLayout.Metrics.detailSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 40, a1);
}

uint64_t TVProductAnnotationLayout.Metrics.backgroundVerticalOffset.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 120, a1);
}

uint64_t TVFlowcaseItemLayout.Metrics.init(captionSpace:titleSpace:subtitleSpace:textArtworkMargin:artworkAspectRatio:bottomSpace:textLayoutMargins:)@<X0>( __int128 *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, __int128 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16 = (int *)type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v17 = a8 + v16[10];
  sub_100009D90(a1, a8);
  sub_100009D90(a2, a8 + 40);
  sub_100009D90(a3, a8 + 80);
  sub_100009D90(a4, a8 + 120);
  uint64_t v18 = a8 + v16[8];
  uint64_t v19 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32LL))(v18, a5, v19);
  sub_100009D90(a6, a8 + v16[9]);
  return sub_10003844C(a7, v17);
}

uint64_t sub_10003844C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DECE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t TVProductAnnotationLayout.Metrics.titleSpace.setter(__int128 *a1)
{
  return sub_100009D90(a1, (uint64_t)v1);
}

uint64_t TVProductAnnotationLayout.Metrics.detailSpace.setter(__int128 *a1)
{
  id v3 = (void *)(v1 + 40);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVProductAnnotationLayout.Metrics.detailSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVProductAnnotationLayout.Metrics.linkLeadingSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 80, a1);
}

uint64_t TVProductAnnotationLayout.Metrics.linkLeadingSpace.setter(__int128 *a1)
{
  id v3 = (void *)(v1 + 80);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVProductAnnotationLayout.Metrics.linkLeadingSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVProductAnnotationLayout.Metrics.backgroundVerticalOffset.setter(__int128 *a1)
{
  id v3 = (void *)(v1 + 120);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVProductAnnotationLayout.Metrics.backgroundVerticalOffset.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVFlowcaseItemLayout.Metrics.artworkAspectRatio.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL) + 32);
  uint64_t v4 = type metadata accessor for AspectRatio(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t TVFlowcaseItemLayout.Metrics.artworkAspectRatio.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL) + 32);
  uint64_t v4 = type metadata accessor for AspectRatio(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(v3, a1, v4);
}

uint64_t (*TVFlowcaseItemLayout.Metrics.artworkAspectRatio.modify())(void)
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVFlowcaseItemLayout.Metrics.bottomSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  return sub_10001F010(v1 + *(int *)(v3 + 36), a1);
}

uint64_t TVFlowcaseItemLayout.Metrics.bottomSpace.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL) + 36));
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVFlowcaseItemLayout.Metrics.bottomSpace.modify())(void)
{
  return MotionEffects.rawValue.getter;
}

__n128 TVFlowcaseItemLayout.Metrics.textLayoutMargins.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL) + 40);
  char v4 = *(_BYTE *)(v3 + 32);
  __n128 result = *(__n128 *)v3;
  __int128 v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *(_BYTE *)(a1 + 32) = v4;
  return result;
}

uint64_t TVFlowcaseItemLayout.Metrics.textLayoutMargins.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL) + 40);
  return sub_10003844C(a1, v3);
}

uint64_t (*TVFlowcaseItemLayout.Metrics.textLayoutMargins.modify())(void)
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVFlowcaseItemLayout.Metrics.init(byCopying:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000387A0(a1, a2, type metadata accessor for TVFlowcaseItemLayout.Metrics);
}

uint64_t sub_1000387A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  return a2;
}

uint64_t TVFlowcaseItemLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TVFlowcaseItemLayout(0LL) + 32);
  return sub_100038254(v3, a1);
}

uint64_t TVFlowcaseItemLayout.metrics.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TVFlowcaseItemLayout(0LL) + 32);
  return sub_100038844(a1, v3);
}

uint64_t sub_100038844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t (*TVFlowcaseItemLayout.metrics.modify())(void)
{
  return MotionEffects.rawValue.getter;
}

double static TVFlowcaseItemLayout.estimatedMeasurements(fitting:using:in:)( uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_100039674(a1, a2, a3, a4);
}

void *TVFlowcaseItemLayout.placeChildren(relativeTo:in:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v7 = v6;
  uint64_t v155 = a2;
  uint64_t v150 = type metadata accessor for VerticalSplitLayout.Position(0LL);
  uint64_t v149 = *(void *)(v150 - 8);
  __n128 v13 = __chkstk_darwin(v150);
  v152 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v154 = type metadata accessor for VerticalSplitLayout(0LL, v13);
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v151 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1000031E8((uint64_t *)&unk_1002E2D70);
  __n128 v17 = __chkstk_darwin(v16);
  v142 = (char *)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v148 = type metadata accessor for AspectFitLayout(0LL, v17);
  uint64_t v147 = *(void *)(v148 - 8);
  __n128 v19 = __chkstk_darwin(v148);
  v146 = (char *)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v141 = type metadata accessor for VerticalStackLayout.ExclusionCondition(0LL, v19);
  uint64_t v138 = *(void *)(v141 - 8);
  __n128 v21 = __chkstk_darwin(v141);
  uint64_t v140 = (char *)&v127 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v160 = type metadata accessor for VerticalStackLayout.Child.Alignment(0LL, v21);
  uint64_t v137 = *(void *)(v160 - 8);
  __n128 v23 = __chkstk_darwin(v160);
  uint64_t v139 = (char *)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v159 = (void (*)(void))type metadata accessor for VerticalStackLayout.Alignment(0LL, v23);
  uint64_t v25 = *((void *)v159 - 1);
  __n128 v26 = __chkstk_darwin(v159);
  v161 = (char *)&v127 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v145 = type metadata accessor for VerticalStackLayout(0LL, v26);
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v143 = (char *)&v127 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v127 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v33 = v6 + 5;
  uint64_t v34 = v6[8];
  uint64_t v35 = v6[9];
  sub_100005F8C(v6 + 5, v34);
  dispatch thunk of LayoutTextView.numberOfLines.setter(1LL, v34, v35);
  if (qword_1002DC3F8 != -1) {
    swift_once(&qword_1002DC3F8, sub_100037D24);
  }
  uint64_t v36 = sub_1000031E8(&qword_1002DECF0);
  uint64_t v37 = sub_1000061F4(v36, (uint64_t)qword_1002EE698);
  static Dimensions.defaultRoundingRule.getter(v37);
  double v38 = Conditional<>.value(in:rounded:)(a1, v32);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  uint64_t v39 = v6[18];
  uint64_t v40 = v6[19];
  __n128 result = sub_100005F8C(v6 + 15, v39);
  if ((~*(void *)&v38 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }

  if (v38 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  if (v38 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    return result;
  }

  uint64_t v42 = (uint64_t)v6;
  uint64_t v156 = a1;
  dispatch thunk of LayoutTextView.numberOfLines.setter((uint64_t)v38, v39, v40);
  uint64_t v43 = v6[18];
  uint64_t v44 = v6[19];
  sub_100005F8C(v7 + 15, v7[18]);
  LOBYTE(v43) = dispatch thunk of LayoutView.hasContent.getter(v43, *(void *)(v44 + 8));
  uint64_t v45 = v7 + 15;
  uint64_t v46 = v7[13];
  uint64_t v47 = v7[14];
  sub_100005F8C(v7 + 10, v46);
  dispatch thunk of LayoutTextView.numberOfLines.setter(2LL, v46, v47);
  CGRect v136 = v7 + 15;
  if ((v43 & 1) != 0)
  {
    double v158 = a3;
    double v48 = a4;
    uint64_t v49 = v7[13];
    uint64_t v50 = v7[14];
    sub_100005F8C(v7 + 10, v49);
    double v51 = dispatch thunk of Measurable.measurements(fitting:in:)( v156,  v49,  *(void *)(*(void *)(v50 + 8) + 8LL),  a5,  a6);
    double v53 = v52;
    double v55 = v54;
    double v57 = v56;
    sub_100005F8C(v7 + 10, v7[13]);
    v170.var0 = v51;
    v170.var1 = v53;
    v170.var2 = v55;
    v170.var3 = v57;
    if (LayoutTextView.estimatedNumberOfLines(from:)(v170) < 2)
    {
      uint64_t v70 = v7[13];
      uint64_t v71 = v7[14];
      sub_100005F8C(v7 + 10, v70);
      dispatch thunk of LayoutTextView.numberOfLines.setter(1LL, v70, v71);
      uint64_t v58 = v7[18];
      uint64_t v72 = v7[19];
      sub_100005F8C(v45, v58);
      uint64_t v61 = *(void *)(v72 + 8);
      uint64_t v62 = 0LL;
    }

    else
    {
      uint64_t v58 = v7[18];
      uint64_t v59 = v7[19];
      sub_100005F8C(v45, v58);
      uint64_t v61 = *(void *)(v59 + 8);
      uint64_t v62 = 1LL;
    }

    dispatch thunk of LayoutView.isHidden.setter(v62, v58, v61, v60);
    uint64_t v73 = v7[13];
    uint64_t v74 = v7[14];
    sub_100005F8C(v7 + 10, v73);
    LayoutView.withMeasurements(_:)(v169, v73, *(void *)(v74 + 8), v51, v53, v55, v57);
    a4 = v48;
    a3 = v158;
  }

  else
  {
    uint64_t v63 = v7[18];
    uint64_t v64 = v7[19];
    sub_100005F8C(v45, v63);
    dispatch thunk of LayoutView.isHidden.setter(1LL, v63, *(void *)(v64 + 8), v65);
    uint64_t v66 = v7[13];
    uint64_t v67 = v7[14];
    uint64_t v68 = sub_100005F8C(v7 + 10, v66);
    v169[3] = v66;
    v169[4] = *(void *)(v67 + 8);
    __int128 v69 = sub_100009D54(v169);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 16LL))(v69, v68, v66);
  }

  (*(void (**)(char *, void, void (*)(void)))(v25 + 104))( v161,  enum case for VerticalStackLayout.Alignment.firstBaseline(_:),  v159);
  uint64_t v75 = sub_1000031E8(&qword_1002DECF8);
  uint64_t v76 = *(void *)(type metadata accessor for VerticalStackLayout.Child(0LL) - 8);
  uint64_t v133 = *(void *)(v76 + 72);
  uint64_t v77 = *(unsigned __int8 *)(v76 + 80);
  uint64_t v78 = (v77 + 32) & ~v77;
  uint64_t v134 = 2 * v133;
  uint64_t v79 = swift_allocObject(v75, v78 + 3 * v133, v77 | 7);
  uint64_t v135 = v79;
  *(_OWORD *)(v79 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
  uint64_t v80 = v79 + v78;
  uint64_t v81 = v7[8];
  uint64_t v82 = v7[9];
  CGFloat v83 = sub_100005F8C(v33, v81);
  uint64_t v166 = v81;
  v167 = *(void **)(v82 + 8);
  uint64_t v84 = sub_100009D54(&v165);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v81 - 8) + 16LL))(v84, v83, v81);
  uint64_t v157 = (char *)v7 + *(int *)(type metadata accessor for TVFlowcaseItemLayout(0LL) + 32);
  LODWORD(v158) = enum case for VerticalStackLayout.Child.Alignment.left(_:);
  uint64_t v85 = v137;
  uint64_t v159 = *(void (**)(void))(v137 + 104);
  uint64_t v86 = v139;
  v159(v139);
  v164[0] = _swiftEmptyArrayStorage;
  uint64_t v87 = sub_100003B6C( &qword_1002DED00,  (uint64_t (*)(uint64_t))&type metadata accessor for VerticalStackLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for VerticalStackLayout.ExclusionCondition);
  uint64_t v130 = v87;
  uint64_t v88 = sub_1000031E8(&qword_1002DED08);
  unint64_t v89 = sub_100039A20();
  unint64_t v90 = v140;
  uint64_t v131 = v88;
  unint64_t v132 = v89;
  uint64_t v91 = v141;
  dispatch thunk of SetAlgebra.init<A>(_:)(v164, v88, v89, v141, v87);
  uint64_t v127 = v80;
  double v92 = v157;
  static VerticalStackLayout.Child.make(forView:space:spaceMultiplier:alignment:excludeWhen:)( &v165,  v157,  v86,  v90,  1.0);
  CGRect v129 = *(void (**)(char *, uint64_t))(v138 + 8);
  v129(v90, v91);
  CGRect v128 = *(void (**)(char *, uint64_t))(v85 + 8);
  uint64_t v93 = v160;
  v128(v86, v160);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v165);
  ((void (*)(char *, void, uint64_t))v159)(v86, LODWORD(v158), v93);
  uint64_t v165 = _swiftEmptyArrayStorage;
  unint64_t v94 = v89;
  uint64_t v95 = v130;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v165, v88, v94, v91, v130);
  static VerticalStackLayout.Child.make(forView:space:spaceMultiplier:alignment:excludeWhen:)( v169,  v92 + 40,  v86,  v90,  1.0);
  uint64_t v96 = v129;
  v129(v90, v91);
  uint64_t v97 = v128;
  v128(v86, v93);
  uint64_t v137 = v127 + v134;
  uint64_t v138 = v42;
  uint64_t v98 = *(void *)(v42 + 144);
  uint64_t v99 = *(void *)(v42 + 152);
  double v100 = sub_100005F8C(v136, v98);
  uint64_t v166 = v98;
  v167 = *(void **)(v99 + 8);
  CGFloat v101 = sub_100009D54(&v165);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v98 - 8) + 16LL))(v101, v100, v98);
  double v102 = v157;
  ((void (*)(char *, void, uint64_t))v159)(v86, LODWORD(v158), v93);
  v164[0] = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(v164, v131, v132, v91, v95);
  static VerticalStackLayout.Child.make(forView:space:spaceMultiplier:alignment:excludeWhen:)( &v165,  v102 + 80,  v86,  v90,  v38);
  double v103 = v90;
  double v104 = v102;
  v96(v103, v91);
  v97(v86, v93);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v165);
  uint64_t v166 = type metadata accessor for ZeroDimension(0LL);
  v167 = &protocol witness table for ZeroDimension;
  sub_100009D54(&v165);
  static ZeroDimension.zero.getter();
  double v105 = v143;
  VerticalStackLayout.init(alignment:spacing:children:)(v161, &v165, v135);
  uint64_t v106 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  CGFloat v107 = &v104[*(int *)(v106 + 40)];
  if ((v107[32] & 1) != 0)
  {
    uint64_t v108 = v145;
    uint64_t v166 = v145;
    v167 = &protocol witness table for VerticalStackLayout;
    v168 = &protocol witness table for VerticalStackLayout;
    CGFloat v109 = sub_100009D54(&v165);
    uint64_t v110 = v144;
    (*(void (**)(void *, char *, uint64_t))(v144 + 16))(v109, v105, v108);
  }

  else
  {
    double v112 = *((double *)v107 + 2);
    double v111 = *((double *)v107 + 3);
    double v114 = *(double *)v107;
    double v113 = *((double *)v107 + 1);
    uint64_t v108 = v145;
    v164[3] = v145;
    v164[4] = &protocol witness table for VerticalStackLayout;
    v164[5] = &protocol witness table for VerticalStackLayout;
    __int128 v115 = sub_100009D54(v164);
    uint64_t v110 = v144;
    (*(void (**)(void *, char *, uint64_t))(v144 + 16))(v115, v105, v108);
    uint64_t v166 = type metadata accessor for InsetLayout(0LL);
    v167 = (void *)sub_100003B6C( &qword_1002DED18,  (uint64_t (*)(uint64_t))&type metadata accessor for InsetLayout,  (uint64_t)&protocol conformance descriptor for InsetLayout);
    v168 = (void *)sub_100003B6C( &qword_1002DED20,  (uint64_t (*)(uint64_t))&type metadata accessor for InsetLayout,  (uint64_t)&protocol conformance descriptor for InsetLayout);
    sub_100009D54(&v165);
    InsetLayout.init(sublayout:layoutMargins:)(v164, v114, v113, v112, v111);
  }

  uint64_t v116 = v156;
  sub_10001F010(v138, (uint64_t)v164);
  uint64_t v117 = &v104[*(int *)(v106 + 32)];
  uint64_t v118 = type metadata accessor for AspectRatio(0LL);
  uint64_t v119 = *(void *)(v118 - 8);
  uint64_t v120 = v142;
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v142, v117, v118);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v120, 0LL, 1LL, v118);
  uint64_t v121 = v146;
  AspectFitLayout.init(view:aspectRatio:anchorPoint:)(v164, v120, 0.5, 0.0);
  sub_100039A6C((uint64_t)&v165, (uint64_t)v164);
  uint64_t v122 = v148;
  v163[3] = v148;
  v163[4] = &protocol witness table for AspectFitLayout;
  v163[5] = &protocol witness table for AspectFitLayout;
  uint64_t v123 = sub_100009D54(v163);
  uint64_t v124 = v147;
  (*(void (**)(void *, char *, uint64_t))(v147 + 16))(v123, v121, v122);
  CGRect v125 = v152;
  (*(void (**)(char *, void, uint64_t))(v149 + 104))( v152,  enum case for VerticalSplitLayout.Position.top(_:),  v150);
  sub_10001F010((uint64_t)(v104 + 120), (uint64_t)v162);
  CGRect v126 = v151;
  VerticalSplitLayout.init(prioritySublayout:otherSublayout:priorityPosition:spacing:useLastBaseline:)( v164,  v163,  v125,  v162,  0LL);
  VerticalSplitLayout.placeChildren(relativeTo:in:)(v116, a3, a4, a5, a6);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v126, v154);
  (*(void (**)(char *, uint64_t))(v124 + 8))(v121, v122);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v165);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v105, v108);
  return (void *)_s6Arcade17PillOverlayLayoutVwxx_0(v169);
}

uint64_t sub_1000395F4(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10 = sub_100003B6C( &qword_1002DEE78,  type metadata accessor for TVFlowcaseItemLayout,  (uint64_t)&protocol conformance descriptor for TVFlowcaseItemLayout);
  return EstimatedMeasurable<>.measurements(fitting:in:)(a1, a2, v10, a3, a4, a5);
}

uint64_t sub_100039664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100038254(v2 + *(int *)(a1 + 32), a2);
}

double sub_100039674(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for StackMeasurable.Axis(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for StackMeasurable(0LL);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC3F8 != -1) {
    swift_once(&qword_1002DC3F8, sub_100037D24);
  }
  uint64_t v19 = sub_1000031E8(&qword_1002DECF0);
  sub_1000061F4(v19, (uint64_t)qword_1002EE698);
  static Dimensions.defaultRoundingRule.getter();
  uint64_t v32 = a2;
  double v20 = Conditional<>.value(in:rounded:)(a2, v18);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v21 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v22 = a1 + *(int *)(v21 + 40);
  double v23 = 0.0;
  if ((*(_BYTE *)(v22 + 32) & 1) == 0) {
    double v23 = *(double *)(v22 + 16) + *(double *)v22;
  }
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for StackMeasurable.Axis.vertical(_:), v8);
  uint64_t v24 = sub_1000031E8(&qword_1002E2170);
  uint64_t v25 = swift_allocObject(v24, 312LL, 7LL);
  *(_OWORD *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100234970;
  uint64_t v34 = &type metadata for CGFloat;
  uint64_t v35 = &protocol witness table for CGFloat;
  *(double *)char v33 = v23;
  uint64_t v26 = type metadata accessor for VerticalSpaceMeasurable(0LL);
  *(void *)(v25 + 56) = v26;
  *(void *)(v25 + 64) = &protocol witness table for VerticalSpaceMeasurable;
  sub_100009D54((void *)(v25 + 32));
  VerticalSpaceMeasurable.init(_:multiplier:)(v33, 1.0);
  sub_10001F010(a1, (uint64_t)v33);
  *(void *)(v25 + 96) = v26;
  *(void *)(v25 + 104) = &protocol witness table for VerticalSpaceMeasurable;
  sub_100009D54((void *)(v25 + 72));
  VerticalSpaceMeasurable.init(_:multiplier:)(v33, 1.0);
  sub_10001F010(a1 + 40, (uint64_t)v33);
  *(void *)(v25 + 136) = v26;
  *(void *)(v25 + 144) = &protocol witness table for VerticalSpaceMeasurable;
  sub_100009D54((void *)(v25 + 112));
  VerticalSpaceMeasurable.init(_:multiplier:)(v33, 1.0);
  sub_10001F010(a1 + 80, (uint64_t)v33);
  *(void *)(v25 + 176) = v26;
  *(void *)(v25 + 184) = &protocol witness table for VerticalSpaceMeasurable;
  sub_100009D54((void *)(v25 + 152));
  VerticalSpaceMeasurable.init(_:multiplier:)(v33, v20);
  sub_10001F010(a1 + 120, (uint64_t)v33);
  *(void *)(v25 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v26;
  *(void *)(v25 + 224) = &protocol witness table for VerticalSpaceMeasurable;
  sub_100009D54((void *)(v25 + 192));
  VerticalSpaceMeasurable.init(_:multiplier:)(v33, 1.0);
  double v27 = AspectRatio.height(fromWidth:)(a3);
  uint64_t v34 = &type metadata for CGFloat;
  uint64_t v35 = &protocol witness table for CGFloat;
  *(double *)char v33 = v27;
  *(void *)(v25 + 256) = v26;
  *(void *)(v25 + 264) = &protocol witness table for VerticalSpaceMeasurable;
  sub_100009D54((void *)(v25 + 232));
  VerticalSpaceMeasurable.init(_:multiplier:)(v33, 1.0);
  sub_10001F010(a1 + *(int *)(v21 + 36), (uint64_t)v33);
  *(void *)(v25 + 296) = v26;
  *(void *)(v25 + 304) = &protocol witness table for VerticalSpaceMeasurable;
  sub_100009D54((void *)(v25 + 272));
  VerticalSpaceMeasurable.init(_:multiplier:)(v33, 1.0);
  StackMeasurable.init(axis:skipEmptyChildren:children:)(v11, 1LL, v25);
  double v28 = StackMeasurable.measurements(fitting:in:)(v32, a3, a4);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v31);
  return v28;
}

unint64_t sub_100039A20()
{
  unint64_t result = qword_1002DED10;
  if (!qword_1002DED10)
  {
    uint64_t v1 = sub_100003274(&qword_1002DED08);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002DED10);
  }

  return result;
}

uint64_t sub_100039A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100039AB0()
{
  return sub_100003B6C( &qword_1002DED28,  type metadata accessor for TVFlowcaseItemLayout,  (uint64_t)&protocol conformance descriptor for TVFlowcaseItemLayout);
}

uint64_t initializeBufferWithCopyOfBuffer for TVFlowcaseItemLayout(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v29 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v29);
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    __int128 v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    __int128 v9 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 80, (uint64_t)(a2 + 10));
    __int128 v10 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(v4 + 144) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v4 + 120, (uint64_t)(a2 + 15));
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v12 = (_OWORD *)(v4 + v11);
    uint64_t v13 = (_OWORD *)((char *)a2 + v11);
    __int128 v14 = *(_OWORD *)((char *)v13 + 24);
    *(_OWORD *)(v4 + v11 + 24) = v14;
    (**(void (***)(uint64_t, _OWORD *))(v14 - 8))(v4 + v11, v13);
    __int128 v15 = v13[4];
    v12[4] = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))((uint64_t)v12 + 40, (uint64_t)v13 + 40);
    __int128 v16 = *(_OWORD *)((char *)v13 + 104);
    *(_OWORD *)((char *)v12 + 104) = v16;
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))((uint64_t)(v12 + 5), (uint64_t)(v13 + 5));
    __int128 v17 = v13[9];
    v12[9] = v17;
    (**(void (***)(uint64_t, uint64_t))(v17 - 8))((uint64_t)v12 + 120, (uint64_t)v13 + 120);
    uint64_t v18 = (int *)type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
    uint64_t v19 = v18[8];
    double v20 = (char *)v12 + v19;
    uint64_t v21 = (char *)v13 + v19;
    uint64_t v22 = type metadata accessor for AspectRatio(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16LL))(v20, v21, v22);
    uint64_t v23 = v18[9];
    __int128 v24 = *(_OWORD *)((char *)v13 + v23 + 24);
    *(_OWORD *)((char *)v12 + v23 + 24) = v24;
    (**(void (***)(void))(v24 - 8))();
    uint64_t v25 = v18[10];
    uint64_t v26 = (char *)v12 + v25;
    double v27 = (char *)v13 + v25;
    __int128 v28 = *((_OWORD *)v27 + 1);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v28;
    v26[32] = v27[32];
  }

  return v4;
}

uint64_t destroy for TVFlowcaseItemLayout(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)((char *)a1 + *(int *)(a2 + 32));
  _s6Arcade17PillOverlayLayoutVwxx_0(v4);
  _s6Arcade17PillOverlayLayoutVwxx_0(v4 + 5);
  _s6Arcade17PillOverlayLayoutVwxx_0(v4 + 10);
  _s6Arcade17PillOverlayLayoutVwxx_0(v4 + 15);
  uint64_t v5 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  __int128 v6 = (char *)v4 + *(int *)(v5 + 32);
  uint64_t v7 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
  return _s6Arcade17PillOverlayLayoutVwxx_0((void *)((char *)v4 + *(int *)(v5 + 36)));
}

_OWORD *initializeWithCopy for TVFlowcaseItemLayout(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  __int128 v7 = a2[4];
  a1[4] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  __int128 v8 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  __int128 v9 = a2[9];
  a1[9] = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  uint64_t v12 = (_OWORD *)((char *)a2 + v10);
  __int128 v13 = *(_OWORD *)((char *)v12 + 24);
  *(_OWORD *)((char *)a1 + v10 + 24) = v13;
  (**(void (***)(char *, _OWORD *))(v13 - 8))((char *)a1 + v10, v12);
  __int128 v14 = v12[4];
  v11[4] = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)v11 + 40, (uint64_t)v12 + 40);
  __int128 v15 = *(_OWORD *)((char *)v12 + 104);
  *(_OWORD *)((char *)v11 + 104) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))((uint64_t)(v11 + 5), (uint64_t)(v12 + 5));
  __int128 v16 = v12[9];
  v11[9] = v16;
  (**(void (***)(uint64_t, uint64_t))(v16 - 8))((uint64_t)v11 + 120, (uint64_t)v12 + 120);
  __int128 v17 = (int *)type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v18 = v17[8];
  uint64_t v19 = (char *)v11 + v18;
  double v20 = (char *)v12 + v18;
  uint64_t v21 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16LL))(v19, v20, v21);
  uint64_t v22 = v17[9];
  __int128 v23 = *(_OWORD *)((char *)v12 + v22 + 24);
  *(_OWORD *)((char *)v11 + v22 + 24) = v23;
  (**(void (***)(void))(v23 - 8))();
  uint64_t v24 = v17[10];
  uint64_t v25 = (char *)v11 + v24;
  uint64_t v26 = (char *)v12 + v24;
  __int128 v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  v25[32] = v26[32];
  return a1;
}

void *assignWithCopy for TVFlowcaseItemLayout(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(int *)(a3 + 32);
  __int128 v7 = (void *)((char *)a1 + v6);
  __int128 v8 = (void *)((char *)a2 + v6);
  sub_1000264E4((void *)((char *)a1 + v6), v8);
  sub_1000264E4(v7 + 5, v8 + 5);
  sub_1000264E4(v7 + 10, v8 + 10);
  sub_1000264E4(v7 + 15, v8 + 15);
  __int128 v9 = (int *)type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v10 = v9[8];
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = (char *)v8 + v10;
  uint64_t v13 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24LL))(v11, v12, v13);
  sub_1000264E4((void *)((char *)v7 + v9[9]), (void *)((char *)v8 + v9[9]));
  uint64_t v14 = v9[10];
  __int128 v15 = (char *)v7 + v14;
  __int128 v16 = (char *)v8 + v14;
  __int128 v17 = *(_OWORD *)v16;
  __int128 v18 = *((_OWORD *)v16 + 1);
  v15[32] = v16[32];
  *(_OWORD *)__int128 v15 = v17;
  *((_OWORD *)v15 + 1) = v18;
  return a1;
}

uint64_t initializeWithTake for TVFlowcaseItemLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 120);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  __int128 v9 = *(_OWORD *)(a2 + v6 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + v6);
  *(_OWORD *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *(void *)(v7 + 32) = *(void *)(a2 + v6 + 32);
  *(_OWORD *)(v7 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + v6 + 40);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)(a2 + v6 + 56);
  *(void *)(v7 + 72) = *(void *)(a2 + v6 + 72);
  __int128 v10 = *(_OWORD *)(a2 + v6 + 80);
  __int128 v11 = *(_OWORD *)(a2 + v6 + 96);
  *(void *)(v7 + 112) = *(void *)(a2 + v6 + 112);
  *(_OWORD *)(v7 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v10;
  *(_OWORD *)(v7 + 96) = v11;
  __int128 v12 = *(_OWORD *)(a2 + v6 + 120);
  __int128 v13 = *(_OWORD *)(a2 + v6 + 136);
  *(void *)(v7 + 152) = *(void *)(a2 + v6 + 152);
  *(_OWORD *)(v7 + 136) = v13;
  *(_OWORD *)(v7 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v12;
  uint64_t v14 = (int *)type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v15 = v14[8];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  uint64_t v18 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))(v16, v17, v18);
  uint64_t v19 = v14[9];
  uint64_t v20 = v7 + v19;
  uint64_t v21 = v8 + v19;
  __int128 v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  uint64_t v23 = v14[10];
  uint64_t v24 = v7 + v23;
  uint64_t v25 = v8 + v23;
  __int128 v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = v26;
  *(_BYTE *)(v24 + 32) = *(_BYTE *)(v25 + 32);
  return a1;
}

uint64_t assignWithTake for TVFlowcaseItemLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  __int128 v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + v8));
  __int128 v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v9 + 40));
  *(_OWORD *)(v9 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(v10 + 40);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
  *(void *)(v9 + 72) = *(void *)(v10 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v9 + 80));
  __int128 v12 = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 96) = v12;
  *(void *)(v9 + 112) = *(void *)(v10 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v9 + 120));
  *(_OWORD *)(v9 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(v10 + 120);
  *(_OWORD *)(v9 + 136) = *(_OWORD *)(v10 + 136);
  *(void *)(v9 + 152) = *(void *)(v10 + 152);
  __int128 v13 = (int *)type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v14 = v13[8];
  uint64_t v15 = v9 + v14;
  uint64_t v16 = v10 + v14;
  uint64_t v17 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40LL))(v15, v16, v17);
  uint64_t v18 = v13[9];
  uint64_t v19 = v9 + v18;
  uint64_t v20 = v10 + v18;
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v9 + v18));
  __int128 v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = v21;
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  uint64_t v22 = v13[10];
  uint64_t v23 = v9 + v22;
  uint64_t v24 = v10 + v22;
  *(_BYTE *)(v23 + 32) = *(_BYTE *)(v24 + 32);
  __int128 v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + swift_unknownObjectWeakDestroy(v0 + 16) = v25;
  return a1;
}

uint64_t getEnumTagSinglePayload for TVFlowcaseItemLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003A310);
}

uint64_t sub_10003A310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003A954(a1, a2, a3, type metadata accessor for TVFlowcaseItemLayout.Metrics);
}

uint64_t storeEnumTagSinglePayload for TVFlowcaseItemLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003A328);
}

uint64_t sub_10003A328(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10003A9E8(a1, a2, a3, a4, type metadata accessor for TVFlowcaseItemLayout.Metrics);
}

uint64_t sub_10003A334(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = "(";
  void v4[2] = "(";
  void v4[3] = "(";
  uint64_t result = type metadata accessor for TVFlowcaseItemLayout.Metrics(319LL);
  if (v3 <= 0x3F)
  {
    void v4[4] = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TVFlowcaseItemLayout.Metrics(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v21 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v21);
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    __int128 v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    __int128 v9 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 80, (uint64_t)(a2 + 10));
    __int128 v10 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(v4 + 144) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v4 + 120, (uint64_t)(a2 + 15));
    uint64_t v11 = a3[8];
    uint64_t v12 = v4 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = type metadata accessor for AspectRatio(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16LL))(v12, v13, v14);
    uint64_t v15 = a3[9];
    __int128 v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)(v4 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
    uint64_t v17 = a3[10];
    uint64_t v18 = v4 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    __int128 v20 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + swift_unknownObjectWeakDestroy(v0 + 16) = v20;
    *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
  }

  return v4;
}

uint64_t destroy for TVFlowcaseItemLayout.Metrics(void *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  return _s6Arcade17PillOverlayLayoutVwxx_0((void *)((char *)a1 + *(int *)(a2 + 36)));
}

_OWORD *initializeWithCopy for TVFlowcaseItemLayout.Metrics(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  __int128 v7 = a2[4];
  a1[4] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  __int128 v8 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  __int128 v9 = a2[9];
  a1[9] = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  uint64_t v10 = a3[8];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16LL))(v11, v12, v13);
  uint64_t v14 = a3[9];
  __int128 v15 = *(_OWORD *)((char *)a2 + v14 + 24);
  *(_OWORD *)((char *)a1 + v14 + 24) = v15;
  (**(void (***)(void))(v15 - 8))();
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  __int128 v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  v17[32] = v18[32];
  return a1;
}

void *assignWithCopy for TVFlowcaseItemLayout.Metrics(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a3[8];
  __int128 v7 = (char *)a1 + v6;
  __int128 v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24LL))(v7, v8, v9);
  sub_1000264E4((void *)((char *)a1 + a3[9]), (void *)((char *)a2 + a3[9]));
  uint64_t v10 = a3[10];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  __int128 v13 = *(_OWORD *)v12;
  __int128 v14 = *((_OWORD *)v12 + 1);
  v11[32] = v12[32];
  *(_OWORD *)uint64_t v11 = v13;
  *((_OWORD *)v11 + 1) = v14;
  return a1;
}

uint64_t initializeWithTake for TVFlowcaseItemLayout.Metrics(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  __int128 v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 120);
  uint64_t v11 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  __int128 v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + swift_unknownObjectWeakDestroy(v0 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  __int128 v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = v19;
  *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
  return a1;
}

uint64_t assignWithTake for TVFlowcaseItemLayout.Metrics(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  __int128 v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40LL))(v9, v10, v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + v12));
  __int128 v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  __int128 v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = v19;
  *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVFlowcaseItemLayout.Metrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003A948);
}

uint64_t sub_10003A948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003A954(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for AspectRatio);
}

uint64_t sub_10003A954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v5 = *(void *)(a1 + 24);
    if (v5 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }

  else
  {
    uint64_t v9 = a4(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48LL))( a1 + *(int *)(a3 + 32),  a2,  v9);
  }

uint64_t storeEnumTagSinglePayload for TVFlowcaseItemLayout.Metrics( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003A9DC);
}

uint64_t sub_10003A9DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10003A9E8(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for AspectRatio);
}

uint64_t sub_10003A9E8(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }

  else
  {
    uint64_t v8 = a5(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))( v6 + *(int *)(a4 + 32),  a2,  a2,  v8);
  }

  return result;
}

uint64_t sub_10003AA5C(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = "(";
  void v4[2] = "(";
  void v4[3] = "(";
  uint64_t result = type metadata accessor for AspectRatio(319LL);
  if (v3 <= 0x3F)
  {
    void v4[4] = *(void *)(result - 8) + 64LL;
    void v4[5] = "(";
    v4[6] = "!";
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

id sub_10003AAEC()
{
  uint64_t v1 = OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnMinYBySection;
  *(void *)&v0[v1] = sub_1000E8FBC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v2 = OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnOrigins;
  unint64_t v3 = v0;
  *(void *)&v0[v2] = sub_1000E6B34((uint64_t)_swiftEmptyArrayStorage);

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for ShelfDisplayingFlowLayout();
  id v4 = objc_msgSendSuper2(&v10, "init");
  uint64_t v5 = sub_100006028(0LL, (unint64_t *)&qword_1002DEEC8, &OBJC_CLASS___UICollectionReusableView_ptr);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
  id v7 = v4;
  NSString v8 = String._bridgeToObjectiveC()();
  [v7 registerClass:ObjCClassFromMetadata forDecorationViewOfKind:v8];

  return v7;
}

id sub_10003ACEC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v59 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v58 = (char *)&v52 - v13;
  uint64_t v14 = (objc_class *)type metadata accessor for ShelfDisplayingFlowLayout();
  v65.receiver = v4;
  v65.super_class = v14;
  id result = objc_msgSendSuper2(&v65, "layoutAttributesForElementsInRect:", a1, a2, a3, a4);
  if (!result) {
    return result;
  }
  uint64_t v16 = result;
  uint64_t v17 = sub_100006028(0LL, (unint64_t *)&qword_1002DEEC0, &OBJC_CLASS___UICollectionViewLayoutAttributes_ptr);
  uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  unint64_t v64 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0) {
      uint64_t v51 = v18;
    }
    else {
      uint64_t v51 = v18 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v18);
    id result = (id)_CocoaArrayWrapper.endIndex.getter(v51);
    uint64_t v19 = (uint64_t)result;
    if (result) {
      goto LABEL_4;
    }
LABEL_28:
    swift_bridgeObjectRelease(v18);
    uint64_t v50 = _swiftEmptyArrayStorage;
LABEL_29:
    uint64_t v61 = v18;
    sub_1000AD9F8((uint64_t)v50);
    return (id)v61;
  }

  uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  id result = (id)swift_bridgeObjectRetain(v18);
  if (!v19) {
    goto LABEL_28;
  }
LABEL_4:
  if (v19 >= 1)
  {
    __int128 v20 = v4;
    uint64_t v21 = &v4[OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnMinYBySection];
    unint64_t v22 = v18 & 0xC000000000000001LL;
    double v57 = &v4[OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnOrigins];
    swift_beginAccess(&v4[OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnOrigins], v63, 0LL, 0LL);
    double v52 = v21;
    swift_beginAccess(v21, v62, 0LL, 0LL);
    uint64_t v23 = 0LL;
    uint64_t v24 = &selRef_updateSearchResultsForSearchController_;
    __int128 v25 = &selRef_updateSearchResultsForSearchController_;
    unint64_t v55 = v18 & 0xC000000000000001LL;
    uint64_t v56 = 0x8000000100244AD0LL;
    uint64_t v54 = v18;
    uint64_t v53 = v19;
    while (1)
    {
      if (v22) {
        id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v18);
      }
      else {
        id v27 = *(id *)(v18 + 8 * v23 + 32);
      }
      __int128 v28 = v27;
      if ([v27 v24[234]]) {
        goto LABEL_9;
      }
      id v29 = [v28 v25[232]];
      uint64_t v30 = v58;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v29);

      uint64_t v31 = v20;
      id v32 = sub_10003B77C(0xD00000000000001FLL, v56);
      __n128 v60 = *(void (**)(char *, uint64_t))(v59 + 8);
      v60(v30, v9);
      if (v32)
      {
        id v33 = v32;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
        unint64_t v35 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v34 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v35 >= v34 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1LL);
        }
        uint64_t v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
        specialized Array._endMutation()(v36);

        uint64_t v19 = v53;
        uint64_t v18 = v54;
        unint64_t v22 = v55;
      }

      __int128 v20 = v31;
      __int128 v25 = &selRef_updateSearchResultsForSearchController_;
      id v37 = [v28 indexPath];
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v37);

      uint64_t v38 = *(void *)v57;
      if (*(void *)(*(void *)v57 + 16LL))
      {
        swift_bridgeObjectRetain(*(void *)v57);
        unint64_t v39 = sub_1000E87BC((uint64_t)v11);
        if ((v40 & 1) != 0)
        {
          uint64_t v41 = *(void *)(v38 + 56) + 16 * v39;
          double v42 = *(double *)v41;
          double v43 = *(double *)(v41 + 8);
          swift_bridgeObjectRelease(v38);
          uint64_t v45 = IndexPath.section.getter(v44);
          uint64_t v46 = *(void *)v52;
          if (*(void *)(*(void *)v52 + 16LL))
          {
            unint64_t v47 = sub_1000E878C(v45);
            if ((v48 & 1) != 0)
            {
              double v49 = v43 + *(double *)(*(void *)(v46 + 56) + 8 * v47);
              v60(v11, v9);
              [v28 frame];
              objc_msgSend(v28, "setFrame:", v42, v49);
              goto LABEL_8;
            }
          }
        }

        else
        {
          __n128 v26 = swift_bridgeObjectRelease(v38);
        }
      }

      ((void (*)(char *, uint64_t, __n128))v60)(v11, v9, v26);
LABEL_8:
      uint64_t v24 = &selRef_updateSearchResultsForSearchController_;
LABEL_9:
      ++v23;

      if (v19 == v23)
      {
        swift_bridgeObjectRelease(v18);
        uint64_t v50 = (void *)v64;
        goto LABEL_29;
      }
    }
  }

  __break(1u);
  return result;
}

id sub_10003B1A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (void *)IndexPath._bridgeToObjectiveC()();
  id v7 = (objc_class *)type metadata accessor for ShelfDisplayingFlowLayout();
  v16.receiver = v1;
  v16.super_class = v7;
  id v8 = objc_msgSendSuper2(&v16, "layoutAttributesForItemAtIndexPath:", v6);

  if (v8)
  {
    id v9 = [v8 indexPath];
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v9);

    uint64_t v10 = sub_10003BA7C((uint64_t)v5);
    double v12 = v11;
    char v14 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v14 & 1) == 0)
    {
      [v8 frame];
      objc_msgSend(v8, "setFrame:", *(double *)&v10, v12);
    }
  }

  return v8;
}

void *sub_10003B5F8(double a1, double a2, double a3, double a4)
{
  v19.receiver = v4;
  v19.super_class = (Class)type metadata accessor for ShelfDisplayingFlowLayout();
  id v9 = objc_msgSendSuper2(&v19, "invalidationContextForBoundsChange:", a1, a2, a3, a4);
  uint64_t v10 = objc_opt_self(&OBJC_CLASS___UICollectionViewFlowLayoutInvalidationContext);
  double v11 = (void *)swift_dynamicCastObjCClassUnconditional(v9, v10, 0LL, 0LL, 0LL);
  id v12 = [v4 collectionView];
  if (v12)
  {
    char v13 = v12;
    [v12 bounds];
    double v15 = v14;
    double v17 = v16;

    if (v15 != a3) {
      goto LABEL_6;
    }
  }

  else
  {
    double v17 = 0.0;
    if (a3 != 0.0)
    {
LABEL_6:
      [v11 setInvalidateFlowLayoutAttributes:1];
      [v11 setInvalidateFlowLayoutDelegateMetrics:1];
      return v11;
    }
  }

  if (v17 != a4) {
    goto LABEL_6;
  }
  return v11;
}

id sub_10003B77C(uint64_t a1, uint64_t a2)
{
  id v4 = [v2 collectionView];
  if (!v4) {
    return 0LL;
  }
  uint64_t v5 = v4;
  id v6 = [v2 collectionView];
  if (!v6) {
    goto LABEL_11;
  }
  id v7 = v6;
  id v8 = [v6 delegate];

  if (!v8) {
    goto LABEL_11;
  }
  uint64_t v36 = &OBJC_PROTOCOL____TtP6Arcade49UICollectionViewDelegateShelfDisplayingFlowLayout_;
  id v9 = (void *)swift_dynamicCastObjCProtocolConditional(v8, 1LL, &v36);
  if (!v9) {
    goto LABEL_14;
  }
  unsigned __int8 v10 = [v9 collectionView:v5 layout:v2 shouldProvideBackgroundAtSection:IndexPath.section.getter(v9)];
  swift_unknownObjectRelease(v8);
  if ((v10 & 1) == 0) {
    goto LABEL_11;
  }
  id v11 = [v2 collectionView];
  if (!v11) {
    goto LABEL_11;
  }
  id v12 = v11;
  id v8 = [v11 delegate];

  if (!v8) {
    goto LABEL_11;
  }
  unint64_t v35 = &OBJC_PROTOCOL____TtP6Arcade49UICollectionViewDelegateShelfDisplayingFlowLayout_;
  char v13 = (void *)swift_dynamicCastObjCProtocolConditional(v8, 1LL, &v35);
  if (!v13)
  {
LABEL_14:

    swift_unknownObjectRelease(v8);
    return 0LL;
  }

  [v13 collectionView:v5 layout:v2 insetForBackgroundAtSection:IndexPath.section.getter(v13)];
  double v15 = v14;
  double v17 = v16;
  swift_unknownObjectRelease(v8);
  uint64_t v18 = (void *)IndexPath._bridgeToObjectiveC()();
  v34.receiver = v2;
  v34.super_class = (Class)type metadata accessor for ShelfDisplayingFlowLayout();
  id v19 = objc_msgSendSuper2(&v34, "layoutAttributesForItemAtIndexPath:", v18);

  if (!v19)
  {
LABEL_11:

    return 0LL;
  }

  [v19 frame];
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  swift_bridgeObjectRetain(a2);
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v29 = (void *)IndexPath._bridgeToObjectiveC()();
  id v30 =  [(id)objc_opt_self(UICollectionViewLayoutAttributes) layoutAttributesForDecorationViewOfKind:v28 withIndexPath:v29];

  v37.origin.CGFloat x = v21;
  v37.origin.CGFloat y = v23;
  v37.size.CGFloat width = v25;
  v37.size.CGFloat height = v27;
  CGFloat v31 = CGRectGetMinY(v37) - v15;
  [v5 bounds];
  double Width = CGRectGetWidth(v38);
  v39.origin.CGFloat x = v21;
  v39.origin.CGFloat y = v23;
  v39.size.CGFloat width = v25;
  v39.size.CGFloat height = v27;
  objc_msgSend(v30, "setFrame:", 0.0, v31, Width, v17 + v15 + CGRectGetHeight(v39));
  [v30 setZIndex:-1];

  return v30;
}

uint64_t sub_10003BA7C(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = (void *)(v1 + OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnOrigins);
  swift_beginAccess(v1 + OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnOrigins, v15, 0LL, 0LL);
  uint64_t v5 = *v4;
  if (!*(void *)(*v4 + 16LL)) {
    return 0LL;
  }
  swift_bridgeObjectRetain(*v4);
  unint64_t v6 = sub_1000E87BC(a1);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 16 * v6);
  swift_bridgeObjectRelease(v5);
  uint64_t v10 = IndexPath.section.getter(v9);
  uint64_t v11 = v2 + OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnMinYBySection;
  swift_beginAccess(v2 + OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnMinYBySection, &v14, 0LL, 0LL);
  if (!*(void *)(*(void *)v11 + 16LL)) {
    return 0LL;
  }
  sub_1000E878C(v10);
  if ((v12 & 1) == 0) {
    return 0LL;
  }
  return v8;
}

void sub_10003BB80()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath(0LL);
  CGRect v126 = *(void **)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v124 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v108 - v5;
  unint64_t v7 = sub_1000E8FBC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = (unint64_t *)&v1[OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnMinYBySection];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnMinYBySection], v132, 1LL, 0LL);
  unint64_t v9 = *v8;
  *uint64_t v8 = v7;
  swift_bridgeObjectRelease(v9);
  unint64_t v10 = sub_1000E6B34((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v11 = (unint64_t *)&v1[OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnOrigins];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade25ShelfDisplayingFlowLayout_multiColumnOrigins], v131, 1LL, 0LL);
  unint64_t v12 = *v11;
  uint64_t v121 = v11;
  *uint64_t v11 = v10;
  id v125 = objc_msgSend(v1, "collectionView", swift_bridgeObjectRelease(v12).n128_f64[0]);
  if (!v125) {
    return;
  }
  id v13 = [v1 collectionView];
  if (!v13
    || (uint64_t v14 = v13, v15 = [v13 delegate], v14, !v15))
  {

    return;
  }

  uint64_t v130 = &OBJC_PROTOCOL____TtP6Arcade49UICollectionViewDelegateShelfDisplayingFlowLayout_;
  id v122 = (id)swift_dynamicCastObjCProtocolConditional(v15, 1LL, &v130);
  if (!v122) {
    goto LABEL_64;
  }
  unint64_t v16 = (unint64_t)[v125 numberOfSections];
  if ((v16 & 0x8000000000000000LL) != 0) {
    goto LABEL_75;
  }
  unint64_t v17 = v16;
  if (!v16)
  {
LABEL_64:

    id v107 = v15;
LABEL_66:
    swift_unknownObjectRelease(v107);
    return;
  }

  id v119 = v15;
  uint64_t v18 = 0LL;
  double left = UIEdgeInsetsZero.left;
  double right = UIEdgeInsetsZero.right;
  id v19 = &selRef_updateSearchResultsForSearchController_;
  double v20 = &selRef_updateSearchResultsForSearchController_;
  __int128 v120 = xmmword_1002339B0;
  CGFloat v21 = &selRef_updateSearchResultsForSearchController_;
  __int128 v115 = v1;
  uint64_t v118 = v2;
  uint64_t v110 = v8;
  unint64_t v109 = v16;
  while (v18 != v17)
  {
    uint64_t v123 = (uint64_t)objc_msgSend(v122, v20[215], v125, v1, v18);
    if (v123 < 2) {
      goto LABEL_11;
    }
    id v23 = v122;
    unsigned __int8 v24 = [v122 respondsToSelector:"collectionView:layout:insetForSectionAtIndex:"];
    double v114 = right;
    double v113 = left;
    if ((v24 & 1) != 0)
    {
      [v23 collectionView:v125 layout:v1 insetForSectionAtIndex:v18];
      double v113 = v25;
      double v114 = v26;
    }

    CGFloat v27 = v23;
    id v28 = v125;
    [v27 collectionView:v125 layout:v1 multiColumnMarginAt:v18];
    double v30 = v29;
    unint64_t v31 = (unint64_t)[v28 numberOfItemsInSection:v18];
    if ((v31 & 0x8000000000000000LL) != 0) {
      goto LABEL_72;
    }
    unint64_t v32 = v31;
    if (v31)
    {
      uint64_t v33 = 0LL;
      uint64_t v116 = v123 - 1;
      double v34 = 0.0;
      double v35 = 1.79769313e308;
      double v36 = 0.0;
      id v37 = v122;
      CGRect v38 = &selRef_updateSearchResultsForSearchController_;
      unint64_t v117 = v31;
      while (v32 != v33)
      {
        uint64_t v39 = sub_1000031E8((uint64_t *)&unk_1002E9FE0);
        uint64_t v40 = swift_allocObject(v39, 48LL, 7LL);
        *(_OWORD *)(v40 + swift_unknownObjectWeakDestroy(v0 + 16) = v120;
        *(void *)(v40 + 32) = v18;
        *(void *)(v40 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v33;
        IndexPath.init(arrayLiteral:)();
        if (objc_msgSend(v37, v38[217], v21[220]))
        {
          uint64_t v41 = v18;
          id v42 = v119;
          swift_unknownObjectRetain(v119);
          double v43 = v1;
          uint64_t v44 = v21;
          uint64_t v45 = (void *)IndexPath._bridgeToObjectiveC()();
          objc_msgSend(v37, v44[220], v125, v43, v45);
          double v47 = v46;
          double v49 = v48;
          swift_unknownObjectRelease(v42);

          uint64_t v50 = IndexPath.item.getter() / v123;
          uint64_t v51 = IndexPath.item.getter();
          if (v50)
          {
            double v52 = 0.0;
            if (v50 >= 1)
            {
              uint64_t v53 = v38[217];
              id v54 = v122;
              if (objc_msgSend(v122, v53, "collectionView:layout:minimumLineSpacingForSectionAtIndex:"))
              {
                id v55 = v119;
                uint64_t v56 = swift_unknownObjectRetain(v119);
                uint64_t v57 = IndexPath.section.getter(v56);
                [v54 collectionView:v125 layout:v43 minimumLineSpacingForSectionAtIndex:v57];
                double v52 = v58;
                swift_unknownObjectRelease(v55);
              }
            }
          }

          else
          {
            uint64_t v59 = (void *)IndexPath._bridgeToObjectiveC()();
            __n128 v60 = (objc_class *)type metadata accessor for ShelfDisplayingFlowLayout();
            v127.receiver = v43;
            v127.super_class = v60;
            id v61 = objc_msgSendSuper2(&v127, "layoutAttributesForItemAtIndexPath:", v59);

            double v52 = 0.0;
            if (v61)
            {
              [v61 frame];
              double MinY = CGRectGetMinY(v133);

              if (v35 >= MinY) {
                double v35 = MinY;
              }
            }
          }

          uint64_t v18 = v41;
          uint64_t v63 = v51 % v123;
          id v64 = v125;
          id v65 = [v125 traitCollection];
          char v66 = UITraitCollection.prefersRightToLeftLayouts.getter();

          if ((v66 & 1) != 0)
          {
            [v64 bounds];
            double v67 = CGRectGetWidth(v134) - v114 - v47 * (double)(v63 + 1) - v30 * (double)v63;
          }

          else
          {
            double v67 = v113 + (v30 + v47) * (double)v63;
          }

          uint64_t v68 = (void (*)(uint64_t, char *, uint64_t))v126[2];
          uint64_t v69 = (uint64_t)v124;
          v68((uint64_t)v124, v6, v2);
          uint64_t v70 = v121;
          swift_beginAccess(v121, v129, 33LL, 0LL);
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v70);
          CGRect v128 = (void *)*v70;
          uint64_t v72 = v128;
          *uint64_t v70 = 0x8000000000000000LL;
          unint64_t v74 = sub_1000E87BC(v69);
          uint64_t v75 = v72[2];
          BOOL v76 = (v73 & 1) == 0;
          uint64_t v77 = v75 + v76;
          if (__OFADD__(v75, v76)) {
            goto LABEL_69;
          }
          char v78 = v73;
          if (v72[3] >= v77)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1000B1414();
            }
          }

          else
          {
            sub_1000AF9F8(v77, isUniquelyReferenced_nonNull_native);
            unint64_t v79 = sub_1000E87BC((uint64_t)v124);
            if ((v78 & 1) != (v80 & 1)) {
              goto LABEL_76;
            }
            unint64_t v74 = v79;
          }

          unint64_t v32 = v117;
          double v81 = v36 + v52;
          uint64_t v82 = v128;
          if ((v78 & 1) != 0)
          {
            CGFloat v83 = (double *)(v128[7] + 16 * v74);
            *CGFloat v83 = v67;
            v83[1] = v81;
            uint64_t v2 = v118;
          }

          else
          {
            v128[(v74 >> 6) + 8] |= 1LL << v74;
            uint64_t v2 = v118;
            v68(v82[6] + v126[9] * v74, v124, v118);
            uint64_t v84 = (double *)(v82[7] + 16 * v74);
            *uint64_t v84 = v67;
            v84[1] = v81;
            uint64_t v85 = v82[2];
            BOOL v86 = __OFADD__(v85, 1LL);
            uint64_t v87 = v85 + 1;
            if (v86) {
              goto LABEL_70;
            }
            v82[2] = v87;
          }

          unint64_t v88 = *v121;
          *uint64_t v121 = (unint64_t)v82;
          __n128 v89 = swift_bridgeObjectRelease(v88);
          unint64_t v90 = (void (*)(uint64_t, uint64_t, __n128))v126[1];
          v90((uint64_t)v124, v2, v89);
          swift_endAccess(v129);
          if (v34 > v49 + v81) {
            double v91 = v34;
          }
          else {
            double v91 = v49 + v81;
          }
          ((void (*)(char *, uint64_t))v90)(v6, v2);
          if (v63 == v116) {
            double v34 = 0.0;
          }
          else {
            double v34 = v91;
          }
          if (v63 == v116) {
            double v36 = v91;
          }
          uint64_t v1 = v115;
          id v37 = v122;
          CGRect v38 = &selRef_updateSearchResultsForSearchController_;
          CGFloat v21 = &selRef_updateSearchResultsForSearchController_;
        }

        else
        {
          ((void (*)(char *, uint64_t))v126[1])(v6, v2);
        }

        if (v32 == ++v33) {
          goto LABEL_54;
        }
      }

      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      break;
    }

    double v35 = 1.79769313e308;
LABEL_54:
    double v92 = v110;
    swift_beginAccess(v110, v129, 33LL, 0LL);
    uint64_t v93 = swift_isUniquelyReferenced_nonNull_native(*v92);
    CGRect v128 = (void *)*v92;
    unint64_t v94 = v128;
    unint64_t *v92 = 0x8000000000000000LL;
    unint64_t v96 = sub_1000E878C(v18);
    uint64_t v97 = v94[2];
    BOOL v98 = (v95 & 1) == 0;
    uint64_t v99 = v97 + v98;
    if (__OFADD__(v97, v98)) {
      goto LABEL_73;
    }
    char v100 = v95;
    if (v94[3] >= v99)
    {
      unint64_t v17 = v109;
      id v19 = &selRef_updateSearchResultsForSearchController_;
      CGFloat v21 = &selRef_updateSearchResultsForSearchController_;
      if ((v93 & 1) != 0) {
        goto LABEL_60;
      }
      sub_1000B1288();
    }

    else
    {
      sub_1000AF750(v99, v93);
      unint64_t v101 = sub_1000E878C(v18);
      unint64_t v17 = v109;
      id v19 = &selRef_updateSearchResultsForSearchController_;
      if ((v100 & 1) != (v102 & 1)) {
        goto LABEL_77;
      }
      unint64_t v96 = v101;
    }

    CGFloat v21 = &selRef_updateSearchResultsForSearchController_;
LABEL_60:
    double v103 = v128;
    if ((v100 & 1) != 0)
    {
      *(double *)(v128[7] + 8 * v96) = v35;
    }

    else
    {
      v128[(v96 >> 6) + 8] |= 1LL << v96;
      uint64_t v104 = 8 * v96;
      *(void *)(v103[6] + v104) = v18;
      *(double *)(v103[7] + v104) = v35;
      uint64_t v105 = v103[2];
      BOOL v86 = __OFADD__(v105, 1LL);
      uint64_t v106 = v105 + 1;
      if (v86) {
        goto LABEL_74;
      }
      v103[2] = v106;
    }

    unint64_t v22 = *v92;
    unint64_t *v92 = (unint64_t)v103;
    swift_bridgeObjectRelease(v22);
    swift_endAccess(v129);
    uint64_t v2 = v118;
    double v20 = &selRef_updateSearchResultsForSearchController_;
LABEL_11:
    if (++v18 == v17)
    {

      id v107 = v119;
      goto LABEL_66;
    }
  }

  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v118);
  __break(1u);
LABEL_77:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

id sub_10003C548()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfDisplayingFlowLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfDisplayingFlowLayout()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade25ShelfDisplayingFlowLayout);
}

uint64_t UIResponder.nearestActionRunner.getter()
{
  unint64_t v1 = sub_10003C6CC();
  id v2 = v0;
  uint64_t v3 = sub_1000031E8(&qword_1002DEF38);
  if ((swift_dynamicCast(v10, &v12, v1, v3, 6LL) & 1) != 0)
  {
    sub_100009D90(v10, (uint64_t)v13);
    uint64_t v4 = v14;
    uint64_t v5 = v15;
    sub_100005F8C(v13, v14);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    _s6Arcade17PillOverlayLayoutVwxx_0(v13);
    if (v6) {
      return v6;
    }
  }

  else
  {
    uint64_t v11 = 0LL;
    memset(v10, 0, sizeof(v10));
    sub_10003C708((uint64_t)v10);
  }

  id v7 = [v2 nextResponder];
  if (!v7) {
    return 0LL;
  }
  uint64_t v8 = v7;
  uint64_t v6 = UIResponder.nearestActionRunner.getter();

  return v6;
}

unint64_t sub_10003C6CC()
{
  unint64_t result = qword_1002DEF30;
  if (!qword_1002DEF30)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIResponder);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DEF30);
  }

  return result;
}

uint64_t sub_10003C708(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8(&qword_1002DEF40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void *sub_10003C748(uint64_t a1)
{
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v2)
  {
    uint64_t v3 = 4LL;
    while (1)
    {
      uint64_t v5 = v3 - 4;
      if ((a1 & 0xC000000000000001LL) == 0) {
        break;
      }
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      uint64_t v7 = v3 - 3;
      if (__OFADD__(v5, 1LL)) {
        goto LABEL_15;
      }
LABEL_11:
      uint64_t v8 = ProductMediaItem.screenshot.getter();
      uint64_t v9 = swift_release(v6);
      if (v8)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
        unint64_t v11 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v10 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v11 >= v10 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1LL);
        }
        uint64_t v4 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v8);
        specialized Array._endMutation()(v4);
      }

      ++v3;
      if (v7 == v2) {
        goto LABEL_20;
      }
    }

    uint64_t v6 = *(void *)(a1 + 8 * v3);
    swift_retain(v6);
    uint64_t v7 = v3 - 3;
    if (!__OFADD__(v5, 1LL)) {
      goto LABEL_11;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    if (a1 < 0) {
      uint64_t v12 = a1;
    }
    else {
      uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v12);
  }

uint64_t sub_10003C8B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (void **)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - v8;
  sub_10000611C(v2, (uint64_t)&v22 - v8);
  switch(swift_getEnumCaseMultiPayload(v9, v4))
  {
    case 4u:
    case 0xEu:
      sub_10000609C((uint64_t)v9);
      unint64_t v10 = (unsigned int *)&enum case for FlowPresentationContext.select(_:);
      goto LABEL_6;
    case 0xBu:
      sub_10000611C((uint64_t)v9, (uint64_t)v6);
      unint64_t v11 = *v6;
      uint64_t v12 = type metadata accessor for ScreenshotsGalleryViewController();
      if (swift_dynamicCastClass(v11, v12))
      {

LABEL_5:
        sub_10000609C((uint64_t)v9);
        unint64_t v10 = (unsigned int *)&enum case for FlowPresentationContext.presentModal(_:);
        goto LABEL_6;
      }

      uint64_t v16 = objc_opt_self(&OBJC_CLASS___UIAlertController);
      if (swift_dynamicCastObjCClass(v11, v16)
        || (uint64_t v17 = type metadata accessor for ScrollingAlertViewController(), swift_dynamicCastClass(v11, v17)))
      {

LABEL_10:
        sub_10000609C((uint64_t)v9);
        unint64_t v10 = (unsigned int *)&enum case for FlowPresentationContext.presentModalBlur(_:);
LABEL_6:
        uint64_t v13 = *v10;
        uint64_t v14 = type metadata accessor for FlowPresentationContext(0LL);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104LL))(a1, v13, v14);
      }

      uint64_t v18 = type metadata accessor for RateProductViewController();
      uint64_t v19 = swift_dynamicCastClass(v11, v18);

      if (v19) {
        goto LABEL_10;
      }
LABEL_12:
      uint64_t v20 = enum case for FlowPresentationContext.presentModal(_:);
      uint64_t v21 = type metadata accessor for FlowPresentationContext(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104LL))(a1, v20, v21);
      return sub_10000609C((uint64_t)v9);
    case 0x21u:
      goto LABEL_5;
    default:
      goto LABEL_12;
  }

uint64_t type metadata accessor for FlowDestination(uint64_t a1)
{
  uint64_t result = qword_1002DF030;
  if (!qword_1002DF030) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FlowDestination);
  }
  return result;
}

uint64_t sub_10003CAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v412 = a3;
  uint64_t v413 = a2;
  uint64_t v4 = sub_1000031E8(&qword_1002DEF80);
  __chkstk_darwin(v4);
  v383 = (uint64_t *)((char *)&v371 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002E6FB0);
  __chkstk_darwin(v6);
  v390 = (uint64_t *)((char *)&v371 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v387 = type metadata accessor for AdamId(0LL);
  uint64_t v386 = *(void *)(v387 - 8);
  __chkstk_darwin(v387);
  v385 = (char *)&v371 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v408 = type metadata accessor for OSLogger(0LL);
  uint64_t v406 = *(void *)(v408 - 8);
  __chkstk_darwin(v408);
  v407 = (char *)&v371 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v10);
  v381 = (char *)&v371 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  v380 = (char *)&v371 - v13;
  __chkstk_darwin(v14);
  v378 = (char *)&v371 - v15;
  __chkstk_darwin(v16);
  uint64_t v379 = (uint64_t)&v371 - v17;
  __chkstk_darwin(v18);
  uint64_t v377 = (uint64_t)&v371 - v19;
  __chkstk_darwin(v20);
  v384 = (char *)&v371 - v21;
  __chkstk_darwin(v22);
  v404 = (char *)&v371 - v23;
  __chkstk_darwin(v24);
  v391 = (char *)&v371 - v25;
  __chkstk_darwin(v26);
  v392 = (char *)&v371 - v27;
  __chkstk_darwin(v28);
  uint64_t v396 = (uint64_t)&v371 - v29;
  __chkstk_darwin(v30);
  v395 = (char *)&v371 - v31;
  __chkstk_darwin(v32);
  v398 = (char *)&v371 - v33;
  __chkstk_darwin(v34);
  v399 = (char *)&v371 - v35;
  __chkstk_darwin(v36);
  v402 = (char *)&v371 - v37;
  __chkstk_darwin(v38);
  v401 = (char *)&v371 - v39;
  __chkstk_darwin(v40);
  id v42 = (char *)&v371 - v41;
  uint64_t v43 = type metadata accessor for URL(0LL);
  uint64_t v409 = *(void *)(v43 - 8);
  uint64_t v410 = v43;
  __chkstk_darwin(v43);
  v376 = (char *)&v371 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v45);
  v375 = (char *)&v371 - v46;
  __chkstk_darwin(v47);
  v374 = (char *)&v371 - v48;
  __chkstk_darwin(v49);
  v382 = (char *)&v371 - v50;
  __chkstk_darwin(v51);
  v403 = (char *)&v371 - v52;
  __chkstk_darwin(v53);
  v389 = (char *)&v371 - v54;
  __chkstk_darwin(v55);
  v388 = (char *)&v371 - v56;
  __chkstk_darwin(v57);
  v393 = (char *)&v371 - v58;
  __chkstk_darwin(v59);
  v397 = (char *)&v371 - v60;
  __chkstk_darwin(v61);
  uint64_t v63 = (char *)&v371 - v62;
  __chkstk_darwin(v64);
  v400 = (char *)&v371 - v65;
  __chkstk_darwin(v66);
  uint64_t v68 = (char *)&v371 - v67;
  uint64_t v69 = type metadata accessor for FlowPage(0LL);
  uint64_t v70 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v72 = (char *)&v371 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = type metadata accessor for FlowDestination(0LL);
  uint64_t v411 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v75 = (uint64_t *)((char *)&v371 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __n128 v77 = __chkstk_darwin(v76);
  unint64_t v79 = (uint64_t *)((char *)&v371 - v78);
  FlowAction.page.getter(v77);
  uint64_t v373 = v70;
  char v80 = *(uint64_t (**)(char *, uint64_t))(v70 + 88);
  uint64_t v405 = v69;
  uint64_t v81 = v80(v72, v69);
  if ((_DWORD)v81 != enum case for FlowPage.search(_:))
  {
    BOOL v86 = v75;
    v372 = v79;
    uint64_t v394 = a1;
    if ((_DWORD)v81 == enum case for FlowPage.product(_:))
    {
      uint64_t v87 = v394;
      FlowAction.pageUrl.getter();
      uint64_t v89 = v409;
      uint64_t v88 = v410;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v409 + 48))(v42, 1LL, v410) == 1)
      {
        uint64_t v90 = (uint64_t)v42;
        goto LABEL_19;
      }

      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v68, v42, v88);
      uint64_t v97 = sub_1000031E8(&qword_1002DEF78);
      uint64_t v98 = *(int *)(v97 + 48);
      uint64_t v99 = (uint64_t)v86;
      char v100 = (uint64_t *)((char *)v86 + *(int *)(v97 + 64));
      (*(void (**)(uint64_t *, char *, uint64_t))(v89 + 16))(v86, v68, v88);
      *(uint64_t *)((char *)v86 + v98) = 0LL;
      uint64_t v101 = type metadata accessor for ShelfBasedProductPage(0LL);
      __chkstk_darwin(v101);
      uint64_t v102 = v413;
      *(&v371 - 2) = v413;
      FlowAction.pageData<A>(as:or:)(v100, v103, sub_10004374C, &v371 - 4, v103);
      __n128 v104 = swift_release(v87);
      (*(void (**)(char *, uint64_t, __n128))(v89 + 8))(v68, v88, v104);
      sub_100006060(v102, (uint64_t *)&unk_1002DF680);
      swift_storeEnumTagMultiPayload(v99, v73, 0LL);
      uint64_t v85 = v99;
LABEL_12:
      unint64_t v79 = v372;
      goto LABEL_13;
    }

    if ((_DWORD)v81 == enum case for FlowPage.dynamicUI(_:))
    {
      uint64_t v91 = (uint64_t)v404;
      uint64_t v87 = v394;
      FlowAction.pageUrl.getter();
      uint64_t v92 = v409;
      uint64_t v93 = v410;
      int v94 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v409 + 48))(v91, 1LL, v410);
      uint64_t v95 = v413;
      if (v94 == 1)
      {
        sub_100006060(v91, (uint64_t *)&unk_1002E1810);
        goto LABEL_9;
      }

      id v122 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
      uint64_t v123 = v403;
      v122(v403, v91, v93);
      uint64_t v124 = type metadata accessor for DynamicUIRequestInfo(0LL);
      FlowAction.pageData<A>(as:or:)(&v415, v124, sub_10003F9F4, 0LL, v124);
      uint64_t v125 = v415;
      uint64_t v96 = v411;
      if (!v415)
      {
        if (qword_1002DC380 != -1) {
          swift_once(&qword_1002DC380, sub_100018F98);
        }
        uint64_t v150 = v408;
        uint64_t v151 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
        uint64_t v153 = v406;
        v152 = v407;
        (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v151, v150);
        uint64_t v154 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
        uint64_t v155 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
        uint64_t v156 = swift_allocObject( v154,  ((*(unsigned __int8 *)(v155 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))
               + 2LL * *(void *)(v155 + 72),
                 *(unsigned __int8 *)(v155 + 80) | 7LL);
        *(_OWORD *)(v156 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
        LogMessage.init(stringLiteral:)(0xD000000000000021LL, 0x8000000100244E50LL);
        uint64_t v416 = v405;
        sub_100009D54(&v415);
        FlowAction.page.getter(v157);
        static LogMessage.sensitive(_:)(&v415);
        sub_100006060((uint64_t)&v415, (uint64_t *)&unk_1002DF680);
        Logger.debug(_:)(v156, v150, &protocol witness table for OSLogger);
        swift_release(v87);
        __n128 v158 = swift_bridgeObjectRelease(v156);
        (*(void (**)(char *, uint64_t, __n128))(v153 + 8))(v152, v150, v158);
        (*(void (**)(char *, uint64_t, __n128))(v409 + 8))(v403, v410, v159);
        goto LABEL_22;
      }

      swift_release(v87);
      sub_100006060(v95, (uint64_t *)&unk_1002DF680);
      uint64_t v126 = *(int *)(sub_1000031E8(&qword_1002DEF48) + 48);
      unint64_t v79 = v372;
      v122((char *)v372, (uint64_t)v123, v93);
      *(uint64_t *)((char *)v79 + v126) = v125;
      objc_super v127 = v79;
      uint64_t v128 = v73;
      uint64_t v129 = 3LL;
LABEL_26:
      swift_storeEnumTagMultiPayload(v127, v128, v129);
      uint64_t v105 = v412;
      goto LABEL_15;
    }

    if ((_DWORD)v81 == enum case for FlowPage.webView(_:))
    {
      id v107 = v402;
      uint64_t v87 = v394;
      FlowAction.pageUrl.getter();
      uint64_t v108 = v409;
      uint64_t v109 = v410;
      swift_release(v87);
      sub_100006060(v413, (uint64_t *)&unk_1002DF680);
      uint64_t v143 = *(void (**)(char *, char *, uint64_t))(v108 + 32);
      v143(v63, v107, v109);
      unint64_t v79 = v372;
      v143((char *)v372, v63, v109);
      uint64_t v144 = v79;
      uint64_t v145 = v73;
      uint64_t v146 = 2LL;
LABEL_53:
      swift_storeEnumTagMultiPayload(v144, v145, v146);
      goto LABEL_14;
    }

    if ((_DWORD)v81 == enum case for FlowPage.unknown(_:))
    {
      uint64_t v130 = (uint64_t)v401;
      uint64_t v131 = v394;
      FlowAction.pageUrl.getter();
      uint64_t v133 = v409;
      uint64_t v132 = v410;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v409 + 48))(v130, 1LL, v410) == 1)
      {
        sub_100006060(v130, (uint64_t *)&unk_1002E1810);
        uint64_t v96 = v411;
        uint64_t v95 = v413;
        if (qword_1002DC380 != -1) {
          swift_once(&qword_1002DC380, sub_100018F98);
        }
        uint64_t v134 = v408;
        uint64_t v135 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
        uint64_t v137 = v406;
        CGRect v136 = v407;
        (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v135, v134);
        uint64_t v138 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
        uint64_t v139 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
        uint64_t v140 = swift_allocObject( v138,  ((*(unsigned __int8 *)(v139 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))
               + 2LL * *(void *)(v139 + 72),
                 *(unsigned __int8 *)(v139 + 80) | 7LL);
        *(_OWORD *)(v140 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
        LogMessage.init(stringLiteral:)(0x20676E697373694DLL, 0xEF726F66204C5255LL);
        uint64_t v416 = v405;
        sub_100009D54(&v415);
        FlowAction.page.getter(v141);
        static LogMessage.sensitive(_:)(&v415);
        sub_100006060((uint64_t)&v415, (uint64_t *)&unk_1002DF680);
        Logger.debug(_:)(v140, v134, &protocol witness table for OSLogger);
        swift_release(v131);
        __n128 v142 = swift_bridgeObjectRelease(v140);
        (*(void (**)(char *, uint64_t, __n128))(v137 + 8))(v136, v134, v142);
        goto LABEL_22;
      }

      uint64_t v160 = v400;
      (*(void (**)(char *, uint64_t, uint64_t))(v133 + 32))(v400, v130, v132);
      sub_1000031E8(&qword_1002DEFB8);
      uint64_t v161 = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v133 + 16))(v75, v160, v132);
      FlowAction.origin.getter(v161);
      __n128 v162 = swift_release(v131);
      (*(void (**)(char *, uint64_t, __n128))(v133 + 8))(v160, v132, v162);
      sub_100006060(v413, (uint64_t *)&unk_1002DF680);
      uint64_t v163 = v75;
      uint64_t v164 = v73;
      uint64_t v165 = 1LL;
      goto LABEL_40;
    }

    if ((_DWORD)v81 == enum case for FlowPage.viewController(_:))
    {
      uint64_t v147 = sub_100006028(0LL, (unint64_t *)&qword_1002E1820, &OBJC_CLASS___UIViewController_ptr);
      __chkstk_darwin(v147);
      uint64_t v95 = v413;
      *(&v371 - 2) = v413;
      uint64_t v87 = v394;
      FlowAction.pageData<A>(as:or:)(&v415, v148, sub_10004374C, &v371 - 4, v148);
      uint64_t v149 = v415;
      if (!v415)
      {
        uint64_t v96 = v411;
        if (qword_1002DC380 != -1) {
          swift_once(&qword_1002DC380, sub_100018F98);
        }
        uint64_t v110 = v408;
        uint64_t v179 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
        uint64_t v113 = v406;
        double v112 = v407;
        (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v179, v110);
        uint64_t v180 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
        uint64_t v181 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
        uint64_t v116 = swift_allocObject( v180,  ((*(unsigned __int8 *)(v181 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80))
               + 2LL * *(void *)(v181 + 72),
                 *(unsigned __int8 *)(v181 + 80) | 7LL);
        *(_OWORD *)(v116 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
        unint64_t v117 = 0xD000000000000026LL;
        unint64_t v118 = 0x8000000100244E20LL;
        goto LABEL_21;
      }

      swift_release(v87);
      sub_100006060(v95, (uint64_t *)&unk_1002DF680);
      unint64_t v79 = v372;
      uint64_t *v372 = v149;
      uint64_t v144 = v79;
      uint64_t v145 = v73;
      uint64_t v146 = 11LL;
      goto LABEL_53;
    }

    if ((_DWORD)v81 == enum case for FlowPage.gallery(_:))
    {
      uint64_t v166 = sub_1000031E8(&qword_1002DEFB0);
      __chkstk_darwin(v166);
      uint64_t v95 = v413;
      *(&v371 - 2) = v413;
      uint64_t v87 = v394;
      FlowAction.pageData<A>(as:or:)(&v415, v167, sub_10004374C, &v371 - 4, v167);
      uint64_t v168 = v415;
      if (!v415)
      {
LABEL_9:
        uint64_t v96 = v411;
        if (qword_1002DC380 == -1)
        {
LABEL_20:
          uint64_t v110 = v408;
          uint64_t v111 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
          uint64_t v113 = v406;
          double v112 = v407;
          (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v111, v110);
          uint64_t v114 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
          uint64_t v115 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
          uint64_t v116 = swift_allocObject( v114,  ((*(unsigned __int8 *)(v115 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))
                 + 2LL * *(void *)(v115 + 72),
                   *(unsigned __int8 *)(v115 + 80) | 7LL);
          *(_OWORD *)(v116 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
          unint64_t v117 = 0x20676E697373694DLL;
          unint64_t v118 = 0xEF726F66204C5255LL;
LABEL_21:
          LogMessage.init(stringLiteral:)(v117, v118);
          uint64_t v416 = v405;
          sub_100009D54(&v415);
          FlowAction.page.getter(v119);
          static LogMessage.sensitive(_:)(&v415);
          sub_100006060((uint64_t)&v415, (uint64_t *)&unk_1002DF680);
          Logger.debug(_:)(v116, v110, &protocol witness table for OSLogger);
          swift_release(v87);
          __n128 v120 = swift_bridgeObjectRelease(v116);
          (*(void (**)(char *, uint64_t, __n128))(v113 + 8))(v112, v110, v120);
LABEL_22:
          sub_100006060(v95, (uint64_t *)&unk_1002DF680);
          uint64_t v106 = 1LL;
          uint64_t v105 = v412;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v105, v106, 1LL, v73);
        }

LABEL_18:
      uint64_t v90 = (uint64_t)v107;
LABEL_19:
      sub_100006060(v90, (uint64_t *)&unk_1002E1810);
      uint64_t v96 = v411;
      uint64_t v95 = v413;
      if (qword_1002DC380 == -1) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }

    if ((_DWORD)v81 == enum case for FlowPage.page(_:))
    {
      uint64_t v182 = (uint64_t)v398;
      uint64_t v183 = v394;
      FlowAction.pageUrl.getter();
      uint64_t v184 = type metadata accessor for GenericPage(0LL);
      __chkstk_darwin(v184);
      uint64_t v185 = v413;
      *(&v371 - 2) = v413;
      FlowAction.pageData<A>(as:or:)(&v415, v186, sub_10004374C, &v371 - 4, v186);
      swift_release(v183);
      sub_100006060(v185, (uint64_t *)&unk_1002DF680);
      uint64_t v187 = v415;
      uint64_t v188 = sub_1000031E8(&qword_1002E8340);
      unint64_t v79 = v372;
      uint64_t v189 = (uint64_t)v372 + *(int *)(v188 + 48);
      uint64_t *v372 = v187;
      sub_10003FBFC(v182, v189, (uint64_t *)&unk_1002E1810);
      uint64_t v144 = v79;
      uint64_t v145 = v73;
      uint64_t v146 = 7LL;
      goto LABEL_53;
    }

    unint64_t v79 = v372;
    if ((_DWORD)v81 == enum case for FlowPage.searchChartsAndCategories(_:))
    {
LABEL_55:
      swift_release(v394);
      uint64_t v190 = v413;
LABEL_56:
      sub_100006060(v190, (uint64_t *)&unk_1002DF680);
LABEL_57:
      uint64_t v106 = 1LL;
      uint64_t v96 = v411;
      uint64_t v105 = v412;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v105, v106, 1LL, v73);
    }

    if ((_DWORD)v81 == enum case for FlowPage.topCharts(_:))
    {
      uint64_t v191 = (uint64_t)v398;
      uint64_t v192 = v394;
      FlowAction.pageUrl.getter();
      uint64_t v193 = type metadata accessor for TopChartsPage(0LL);
      __chkstk_darwin(v193);
      uint64_t v194 = v413;
      *(&v371 - 2) = v413;
      FlowAction.pageData<A>(as:or:)(&v415, v195, sub_10004374C, &v371 - 4, v195);
      swift_release(v192);
      sub_100006060(v194, (uint64_t *)&unk_1002DF680);
      uint64_t v196 = v415;
      uint64_t v197 = (uint64_t)v79 + *(int *)(sub_1000031E8(&qword_1002DEF58) + 48);
      uint64_t *v79 = v196;
      sub_10003FBFC(v191, v197, (uint64_t *)&unk_1002E1810);
      uint64_t v144 = v79;
      uint64_t v145 = v73;
      uint64_t v146 = 8LL;
      goto LABEL_53;
    }

    if ((_DWORD)v81 == enum case for FlowPage.updates(_:))
    {
      swift_release(v394);
      sub_100006060(v413, (uint64_t *)&unk_1002DF680);
      uint64_t v144 = v79;
      uint64_t v145 = v73;
      uint64_t v146 = 34LL;
      goto LABEL_53;
    }

    if ((_DWORD)v81 == enum case for FlowPage.today(_:))
    {
      uint64_t v199 = (uint64_t)v395;
      uint64_t v200 = v394;
      FlowAction.pageUrl.getter();
      uint64_t v201 = v409;
      uint64_t v202 = v410;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v409 + 48))(v199, 1LL, v410) != 1)
      {
        swift_release(v200);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        v216 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 32);
        v217 = v393;
        v216(v393, v199, v202);
        v216((char *)v79, (uint64_t)v217, v202);
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 12LL;
        goto LABEL_53;
      }

      sub_100006060(v199, (uint64_t *)&unk_1002E1810);
      if (qword_1002DC380 != -1) {
        swift_once(&qword_1002DC380, sub_100018F98);
      }
      uint64_t v203 = v408;
      uint64_t v204 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
      uint64_t v206 = v406;
      v205 = v407;
      (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v204, v203);
      uint64_t v207 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v208 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v209 = swift_allocObject( v207,  ((*(unsigned __int8 *)(v208 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))
             + 2LL * *(void *)(v208 + 72),
               *(unsigned __int8 *)(v208 + 80) | 7LL);
      *(_OWORD *)(v209 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
      LogMessage.init(stringLiteral:)(0x20676E697373694DLL, 0xEF726F66204C5255LL);
      uint64_t v416 = v405;
      sub_100009D54(&v415);
      goto LABEL_69;
    }

    if ((_DWORD)v81 == enum case for FlowPage.article(_:))
    {
      FlowAction.pageUrl.getter();
      uint64_t v212 = type metadata accessor for ArticlePage(0LL);
      FlowAction.pageData<A>(as:or:)(&v415, v212, sub_10003F9F4, 0LL, v212);
      uint64_t v213 = v415;
      sub_10001027C(v413, (uint64_t)&v415, (uint64_t *)&unk_1002DF680);
      if (v416)
      {
        uint64_t v214 = type metadata accessor for TodayCard(0LL);
        else {
          uint64_t v215 = 0LL;
        }
      }

      else
      {
        sub_100006060((uint64_t)&v415, (uint64_t *)&unk_1002DF680);
        uint64_t v215 = 0LL;
      }

      uint64_t v223 = ArticlePage.__allocating_init(copying:replacingCard:)(v213, v215);
      swift_release(v394);
      sub_100006060(v413, (uint64_t *)&unk_1002DF680);
      uint64_t v224 = sub_1000031E8(&qword_1002DEF68);
      unint64_t v79 = v372;
      uint64_t v225 = (uint64_t)v372 + *(int *)(v224 + 48);
      uint64_t *v372 = v223;
      sub_10003FBFC(v396, v225, (uint64_t *)&unk_1002E1810);
      uint64_t v144 = v79;
      uint64_t v145 = v73;
      uint64_t v146 = 13LL;
      goto LABEL_53;
    }

    if ((_DWORD)v81 == enum case for FlowPage.purchases(_:))
    {
      uint64_t v218 = sub_100006028(0LL, &qword_1002DEFA0, &OBJC_CLASS___AMSFamilyMember_ptr);
      uint64_t v219 = v394;
      FlowAction.pageData<A>(as:or:)(&v415, v218, sub_100043748, 0LL, v218);
      swift_release(v219);
      sub_100006060(v413, (uint64_t *)&unk_1002DF680);
      uint64_t *v75 = v415;
      uint64_t v163 = v75;
      uint64_t v164 = v73;
      uint64_t v165 = 14LL;
LABEL_40:
      swift_storeEnumTagMultiPayload(v163, v164, v165);
      uint64_t v85 = (uint64_t)v75;
      goto LABEL_12;
    }

    int v220 = v81;
    if ((_DWORD)v81 == enum case for FlowPage.inAppPurchaseInstall(_:))
    {
      v221 = v392;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v409 + 48))(v221, 1LL, v410) != 1)
      {
        uint64_t v232 = v410;
        v233 = *(void (**)(char *, char *, uint64_t))(v409 + 32);
        v234 = v388;
        v233(v388, v392, v410);
        uint64_t v235 = type metadata accessor for InAppPurchaseInstallPage(0LL);
        uint64_t v236 = v394;
        FlowAction.pageData<A>(as:or:)(&v415, v235, sub_10003F9F4, 0LL, v235);
        swift_release(v236);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        uint64_t v237 = v415;
        uint64_t v238 = *(int *)(sub_1000031E8(&qword_1002DEFA8) + 48);
        unint64_t v79 = v372;
        v233((char *)v372, v234, v232);
        *(uint64_t *)((char *)v79 + v238) = v237;
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 15LL;
        goto LABEL_53;
      }

      v222 = &v418;
      goto LABEL_87;
    }

    if ((_DWORD)v81 == enum case for FlowPage.writeReview(_:))
    {
      v226 = v391;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v409 + 48))(v226, 1LL, v410) != 1)
      {
        v242 = *(void (**)(char *, char *, uint64_t))(v409 + 32);
        v242(v389, v391, v410);
        v243 = v390;
        uint64_t v244 = v387;
        FlowAction.pageData<A>(as:or:)(v390, v387, sub_10003FA00, 0LL, v387);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v386 + 48))(v243, 1LL, v244) != 1)
        {
          swift_release(v394);
          sub_100006060(v413, (uint64_t *)&unk_1002DF680);
          v257 = *(void (**)(char *, char *, uint64_t))(v386 + 32);
          v258 = v385;
          uint64_t v259 = v387;
          v257(v385, (char *)v390, v387);
          uint64_t v260 = sub_1000031E8(&qword_1002DEF60);
          unint64_t v79 = v372;
          v261 = (char *)v372 + *(int *)(v260 + 48);
          v242((char *)v372, v389, v410);
          v257(v261, v258, v259);
          uint64_t v144 = v79;
          uint64_t v145 = v73;
          uint64_t v146 = 16LL;
          goto LABEL_53;
        }

        sub_100006060((uint64_t)v390, (uint64_t *)&unk_1002E6FB0);
        if (qword_1002DC380 != -1) {
          swift_once(&qword_1002DC380, sub_100018F98);
        }
        uint64_t v245 = v408;
        uint64_t v246 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
        uint64_t v248 = v406;
        v247 = v407;
        (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v246, v245);
        uint64_t v249 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
        uint64_t v250 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
        uint64_t v251 = swift_allocObject( v249,  ((*(unsigned __int8 *)(v250 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80))
               + 2LL * *(void *)(v250 + 72),
                 *(unsigned __int8 *)(v250 + 80) | 7LL);
        *(_OWORD *)(v251 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
        LogMessage.init(stringLiteral:)(0xD000000000000012LL, 0x8000000100244EA0LL);
        uint64_t v416 = v405;
        sub_100009D54(&v415);
        uint64_t v252 = v394;
        FlowAction.page.getter(v253);
        static LogMessage.sensitive(_:)(&v415);
        sub_100006060((uint64_t)&v415, (uint64_t *)&unk_1002DF680);
        Logger.debug(_:)(v251, v245, &protocol witness table for OSLogger);
        swift_release(v252);
        __n128 v254 = swift_bridgeObjectRelease(v251);
        (*(void (**)(char *, uint64_t, __n128))(v248 + 8))(v247, v245, v254);
        (*(void (**)(char *, uint64_t, __n128))(v409 + 8))(v389, v410, v255);
        goto LABEL_70;
      }

      v222 = &v417;
      goto LABEL_87;
    }

    if ((_DWORD)v81 == enum case for FlowPage.reviews(_:))
    {
      uint64_t v239 = type metadata accessor for ReviewsPage(0LL);
      __chkstk_darwin(v239);
      *(&v371 - 2) = v413;
      FlowAction.pageData<A>(as:or:)(&v415, v240, sub_10004374C, &v371 - 4, v240);
      uint64_t v241 = v415;
      if (v415)
      {
        swift_release(v394);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        unint64_t v79 = v372;
        uint64_t *v372 = v241;
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 17LL;
        goto LABEL_53;
      }

      if (qword_1002DC380 != -1) {
        swift_once(&qword_1002DC380, sub_100018F98);
      }
      uint64_t v203 = v408;
      uint64_t v263 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
      uint64_t v206 = v406;
      v205 = v407;
      (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v263, v203);
      uint64_t v264 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v265 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v209 = swift_allocObject( v264,  ((*(unsigned __int8 *)(v265 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v265 + 80))
             + 2LL * *(void *)(v265 + 72),
               *(unsigned __int8 *)(v265 + 80) | 7LL);
      *(_OWORD *)(v209 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
      unint64_t v230 = 0xD00000000000001DLL;
      v266 = "Missing reviews page data for";
      goto LABEL_107;
    }

    if ((_DWORD)v81 == enum case for FlowPage.account(_:))
    {
      uint64_t v256 = v394;
      FlowAction.pageUrl.getter();
      swift_release(v256);
      sub_100006060(v413, (uint64_t *)&unk_1002DF680);
      uint64_t v163 = v75;
      uint64_t v164 = v73;
      uint64_t v165 = 18LL;
      goto LABEL_40;
    }

    if ((_DWORD)v81 == enum case for FlowPage.finance(_:))
    {
      uint64_t v262 = v394;
      FlowAction.pageUrl.getter();
      swift_release(v262);
      sub_100006060(v413, (uint64_t *)&unk_1002DF680);
      uint64_t v163 = v75;
      uint64_t v164 = v73;
      uint64_t v165 = 19LL;
      goto LABEL_40;
    }

    if ((_DWORD)v81 == enum case for FlowPage.mso(_:))
    {
      v267 = v384;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v409 + 48))(v267, 1LL, v410) != 1)
      {
        uint64_t v271 = v410;
        v272 = *(void (**)(char *, char *, uint64_t))(v409 + 32);
        v273 = v382;
        v272(v382, v384, v410);
        uint64_t v274 = type metadata accessor for MSOContext(0LL);
        v275 = v383;
        uint64_t v276 = v394;
        FlowAction.pageData<A>(as:or:)(v383, v274, sub_10003F9F4, 0LL, v274);
        swift_release(v276);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        uint64_t v277 = sub_1000031E8(&qword_1002DEF98);
        unint64_t v79 = v372;
        uint64_t v278 = (uint64_t)v372 + *(int *)(v277 + 48);
        v272((char *)v372, v273, v271);
        sub_10003FBFC((uint64_t)v275, v278, &qword_1002DEF80);
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 20LL;
        goto LABEL_53;
      }

      v222 = &v415;
      goto LABEL_87;
    }

    if ((_DWORD)v81 == enum case for FlowPage.versionHistory(_:))
    {
      uint64_t v268 = type metadata accessor for GenericPage(0LL);
      __chkstk_darwin(v268);
      *(&v371 - 2) = v413;
      FlowAction.pageData<A>(as:or:)(&v415, v269, sub_10004374C, &v371 - 4, v269);
      uint64_t v270 = v415;
      if (v415)
      {
        swift_release(v394);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        unint64_t v79 = v372;
        uint64_t *v372 = v270;
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 21LL;
        goto LABEL_53;
      }

      if (qword_1002DC380 != -1) {
        swift_once(&qword_1002DC380, sub_100018F98);
      }
      uint64_t v203 = v408;
      uint64_t v286 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
      uint64_t v206 = v406;
      v205 = v407;
      (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v286, v203);
      uint64_t v287 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v288 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v209 = swift_allocObject( v287,  ((*(unsigned __int8 *)(v288 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v288 + 80))
             + 2LL * *(void *)(v288 + 72),
               *(unsigned __int8 *)(v288 + 80) | 7LL);
      *(_OWORD *)(v209 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
      unint64_t v230 = 0xD000000000000025LL;
      v266 = "Missing version history page data for";
      goto LABEL_107;
    }

    if ((_DWORD)v81 == enum case for FlowPage.onboarding(_:))
    {
      __chkstk_darwin(v81);
      *(&v371 - 2) = v413;
      FlowAction.pageData<A>(as:or:)( &v415,  &type metadata for OnboardingConfiguration,  sub_10004374C,  &v371 - 4,  &type metadata for OnboardingConfiguration);
      char v279 = v415;
      if (v415 != 2)
      {
        swift_release(v394);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        unint64_t v79 = v372;
        *(_BYTE *)v372 = v279 & 1;
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 22LL;
        goto LABEL_53;
      }

      if (qword_1002DC380 != -1) {
        swift_once(&qword_1002DC380, sub_100018F98);
      }
      uint64_t v203 = v408;
      uint64_t v280 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
      uint64_t v206 = v406;
      v205 = v407;
      (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v280, v203);
      uint64_t v281 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v282 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v209 = swift_allocObject( v281,  ((*(unsigned __int8 *)(v282 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v282 + 80))
             + 2LL * *(void *)(v282 + 72),
               *(unsigned __int8 *)(v282 + 80) | 7LL);
      *(_OWORD *)(v209 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
      unint64_t v230 = 0xD000000000000011LL;
      v266 = "Missing store for";
      goto LABEL_107;
    }

    if ((_DWORD)v81 == enum case for FlowPage.reviewDetail(_:))
    {
      uint64_t v283 = type metadata accessor for Review(0LL);
      __chkstk_darwin(v283);
      *(&v371 - 2) = v413;
      FlowAction.pageData<A>(as:or:)(&v415, v284, sub_10004374C, &v371 - 4, v284);
      uint64_t v285 = v415;
      if (v415)
      {
        swift_release(v394);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        unint64_t v79 = v372;
        uint64_t *v372 = v285;
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 23LL;
        goto LABEL_53;
      }

      if (qword_1002DC380 != -1) {
        swift_once(&qword_1002DC380, sub_100018F98);
      }
      uint64_t v203 = v408;
      uint64_t v298 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
      uint64_t v206 = v406;
      v205 = v407;
      (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v298, v203);
      uint64_t v299 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v300 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v209 = swift_allocObject( v299,  ((*(unsigned __int8 *)(v300 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v300 + 80))
             + 2LL * *(void *)(v300 + 72),
               *(unsigned __int8 *)(v300 + 80) | 7LL);
      *(_OWORD *)(v209 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
      unint64_t v230 = 0xD00000000000001DLL;
      v266 = "Missing review to present for";
      goto LABEL_107;
    }

    if ((_DWORD)v81 == enum case for FlowPage.editorsChoiceDetail(_:))
    {
      uint64_t v289 = type metadata accessor for EditorsChoice(0LL);
      __chkstk_darwin(v289);
      *(&v371 - 2) = v413;
      FlowAction.pageData<A>(as:or:)(&v415, v290, sub_10004374C, &v371 - 4, v290);
      uint64_t v291 = v415;
      if (v415)
      {
        swift_release(v394);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        unint64_t v79 = v372;
        uint64_t *v372 = v291;
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 24LL;
        goto LABEL_53;
      }

      if (qword_1002DC380 != -1) {
        swift_once(&qword_1002DC380, sub_100018F98);
      }
      uint64_t v203 = v408;
      uint64_t v305 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
      uint64_t v206 = v406;
      v205 = v407;
      (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v305, v203);
      uint64_t v306 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v307 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v209 = swift_allocObject( v306,  ((*(unsigned __int8 *)(v307 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v307 + 80))
             + 2LL * *(void *)(v307 + 72),
               *(unsigned __int8 *)(v307 + 80) | 7LL);
      *(_OWORD *)(v209 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
      unint64_t v230 = 0xD000000000000025LL;
      v266 = "Missing editors choice to present for";
      goto LABEL_107;
    }

    if ((_DWORD)v81 == enum case for FlowPage.arcade(_:))
    {
      uint64_t v292 = (uint64_t)v398;
      uint64_t v293 = v394;
      FlowAction.pageUrl.getter();
      uint64_t v294 = type metadata accessor for ArcadePage(0LL);
      FlowAction.pageData<A>(as:or:)(&v415, v294, sub_10003F9F4, 0LL, v294);
      uint64_t v295 = v415;
      sub_1000031E8(&qword_1002DDA20);
      uint64_t *v75 = v295;
      uint64_t v296 = v377;
      sub_10001027C(v292, v377, (uint64_t *)&unk_1002E1810);
      uint64_t v297 = v379;
      sub_10001027C(v292, v379, (uint64_t *)&unk_1002E1810);
      swift_retain(v295);
      ArcadePageUrls.init(subscriberUrl:nonSubscriberUrl:)(v296, v297);
      swift_release(v295);
      swift_release(v293);
      sub_100006060(v292, (uint64_t *)&unk_1002E1810);
      sub_100006060(v413, (uint64_t *)&unk_1002DF680);
      uint64_t v163 = v75;
      uint64_t v164 = v73;
      uint64_t v165 = 25LL;
      goto LABEL_40;
    }

    if ((_DWORD)v81 == enum case for FlowPage.arcadeSubscribe(_:))
    {
      uint64_t v301 = type metadata accessor for ArcadeSubscribePage(0LL);
      uint64_t v302 = v394;
      FlowAction.pageData<A>(as:or:)(&v415, v301, sub_10003F9F4, 0LL, v301);
      uint64_t v303 = v415;
      uint64_t v304 = *(int *)(sub_1000031E8(&qword_1002DEF50) + 48);
      FlowAction.pageUrl.getter();
      swift_release(v302);
      sub_100006060(v413, (uint64_t *)&unk_1002DF680);
      *(uint64_t *)((char *)v75 + v304) = v303;
      uint64_t v163 = v75;
      uint64_t v164 = v73;
      uint64_t v165 = 26LL;
      goto LABEL_40;
    }

    if ((_DWORD)v81 == enum case for FlowPage.upsellMarketingItem(_:))
    {
      uint64_t v308 = type metadata accessor for MarketingItemRequestInfo(0LL);
      FlowAction.pageData<A>(as:or:)(&v415, v308, sub_10003F9F4, 0LL, v308);
      uint64_t v309 = v415;
      if (v415)
      {
        swift_release(v394);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        unint64_t v79 = v372;
        uint64_t *v372 = v309;
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 27LL;
        goto LABEL_53;
      }

      if (qword_1002DC380 != -1) {
        swift_once(&qword_1002DC380, sub_100018F98);
      }
      uint64_t v203 = v408;
      uint64_t v312 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
      uint64_t v206 = v406;
      v205 = v407;
      (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v312, v203);
      uint64_t v313 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v314 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v209 = swift_allocObject( v313,  ((*(unsigned __int8 *)(v314 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v314 + 80))
             + 2LL * *(void *)(v314 + 72),
               *(unsigned __int8 *)(v314 + 80) | 7LL);
      *(_OWORD *)(v209 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
      unint64_t v230 = 0xD00000000000003BLL;
      v266 = "Missing marketing item request info for upsell presentation";
LABEL_107:
      unint64_t v231 = (unint64_t)(v266 - 32) | 0x8000000000000000LL;
LABEL_90:
      LogMessage.init(stringLiteral:)(v230, v231);
      uint64_t v416 = v405;
      sub_100009D54(&v415);
      uint64_t v200 = v394;
LABEL_69:
      FlowAction.page.getter(v210);
      static LogMessage.sensitive(_:)(&v415);
      sub_100006060((uint64_t)&v415, (uint64_t *)&unk_1002DF680);
      Logger.debug(_:)(v209, v203, &protocol witness table for OSLogger);
      swift_release(v200);
      __n128 v211 = swift_bridgeObjectRelease(v209);
      (*(void (**)(char *, uint64_t, __n128))(v206 + 8))(v205, v203, v211);
LABEL_70:
      uint64_t v190 = v413;
      goto LABEL_56;
    }

    if ((_DWORD)v81 == enum case for FlowPage.arcadeSeeAllGames(_:))
    {
      v310 = v378;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v409 + 48))(v310, 1LL, v410) != 1)
      {
        uint64_t v315 = v410;
        v316 = *(void (**)(char *, char *, uint64_t))(v409 + 32);
        v317 = v374;
        v316(v374, v378, v410);
        uint64_t v318 = type metadata accessor for ArcadeSeeAllGamesPage(0LL);
        uint64_t v319 = v394;
        FlowAction.pageData<A>(as:or:)(&v415, v318, sub_10003F9F4, 0LL, v318);
        swift_release(v319);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        uint64_t v320 = v415;
        uint64_t v321 = sub_1000031E8(&qword_1002DEF90);
        unint64_t v79 = v372;
        v322 = (char *)v372 + *(int *)(v321 + 48);
        uint64_t *v372 = v320;
        v316(v322, v317, v315);
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 28LL;
        goto LABEL_53;
      }

      v222 = &v410;
LABEL_87:
      sub_100006060(*(v222 - 32), (uint64_t *)&unk_1002E1810);
      if (qword_1002DC380 != -1) {
        swift_once(&qword_1002DC380, sub_100018F98);
      }
      uint64_t v203 = v408;
      uint64_t v227 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
      uint64_t v206 = v406;
      v205 = v407;
      (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v227, v203);
      uint64_t v228 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v229 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v209 = swift_allocObject( v228,  ((*(unsigned __int8 *)(v229 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v229 + 80))
             + 2LL * *(void *)(v229 + 72),
               *(unsigned __int8 *)(v229 + 80) | 7LL);
      *(_OWORD *)(v209 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
      unint64_t v230 = 0x20676E697373694DLL;
      unint64_t v231 = 0xEF726F66204C5255LL;
      goto LABEL_90;
    }

    if ((_DWORD)v81 == enum case for FlowPage.arcadeWelcome(_:))
    {
      v311 = v380;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v409 + 48))(v311, 1LL, v410) != 1)
      {
        uint64_t v335 = v410;
        v336 = *(void (**)(char *, char *, uint64_t))(v409 + 32);
        v337 = v375;
        v336(v375, v380, v410);
        uint64_t v338 = sub_1000031E8(&qword_1002DEF88);
        v339 = (char *)v75 + *(int *)(v338 + 48);
        v340 = (char *)v75 + *(int *)(v338 + 64);
        uint64_t v341 = type metadata accessor for ArcadeWelcomePage(0LL);
        uint64_t v342 = v394;
        FlowAction.pageData<A>(as:or:)(v75, v341, sub_10003F9F4, 0LL, v341);
        swift_release(v342);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        uint64_t v343 = enum case for ArcadeWelcomePage.ContentType.none(_:);
        uint64_t v344 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v344 - 8) + 104LL))(v339, v343, v344);
        v336(v340, v337, v335);
        uint64_t v163 = v75;
        uint64_t v164 = v73;
        uint64_t v165 = 29LL;
        goto LABEL_40;
      }

      v222 = &v412;
      goto LABEL_87;
    }

    if ((_DWORD)v81 != enum case for FlowPage.productMediaGallery(_:))
    {
      if ((_DWORD)v81 != enum case for FlowPage.privacyDetail(_:))
      {
        if ((_DWORD)v81 != enum case for FlowPage.privacyDefinitions(_:)
          && (_DWORD)v81 != enum case for FlowPage.appEventDetail(_:)
          && (_DWORD)v81 != enum case for FlowPage.textCardDetail(_:))
        {
          int v346 = enum case for FlowPage.annotationDetail(_:);
          swift_release(v394);
          sub_100006060(v413, (uint64_t *)&unk_1002DF680);
          if (v220 != v346) {
            (*(void (**)(char *, uint64_t))(v373 + 8))(v72, v405);
          }
          goto LABEL_57;
        }

        goto LABEL_55;
      }

      v345 = v381;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v409 + 48))(v345, 1LL, v410) != 1)
      {
        uint64_t v351 = v409;
        uint64_t v350 = v410;
        v352 = *(void (**)(char *, char *, uint64_t))(v409 + 32);
        v353 = v376;
        v352(v376, v381, v410);
        uint64_t v354 = type metadata accessor for GenericPage(0LL);
        uint64_t v355 = v394;
        FlowAction.pageData<A>(as:or:)(&v415, v354, sub_10003F9F4, 0LL, v354);
        swift_release(v355);
        sub_100006060(v413, (uint64_t *)&unk_1002DF680);
        uint64_t v356 = v415;
        uint64_t v357 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
        unint64_t v79 = v372;
        v358 = (char *)v372 + v357;
        uint64_t *v372 = v356;
        v352((char *)v79 + v357, v353, v350);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v351 + 56))(v358, 0LL, 1LL, v350);
        uint64_t v144 = v79;
        uint64_t v145 = v73;
        uint64_t v146 = 32LL;
        goto LABEL_53;
      }

      v222 = &v413;
      goto LABEL_87;
    }

    uint64_t v323 = type metadata accessor for ProductMediaGalleryPage(0LL);
    __chkstk_darwin(v323);
    *(&v371 - 2) = v413;
    v325 = FlowAction.pageData<A>(as:or:)(&v415, v324, sub_10004374C, &v371 - 4, v324);
    uint64_t v326 = v415;
    if (!v415)
    {
      if (qword_1002DC380 != -1) {
        swift_once(&qword_1002DC380, sub_100018F98);
      }
      uint64_t v203 = v408;
      uint64_t v347 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
      uint64_t v206 = v406;
      v205 = v407;
      (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v347, v203);
      uint64_t v348 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v349 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v209 = swift_allocObject( v348,  ((*(unsigned __int8 *)(v349 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80))
             + 2LL * *(void *)(v349 + 72),
               *(unsigned __int8 *)(v349 + 80) | 7LL);
      *(_OWORD *)(v209 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
      unint64_t v231 = 0x8000000100244D00LL;
      unint64_t v230 = 0xD00000000000001BLL;
      goto LABEL_90;
    }

    uint64_t v327 = ProductMediaGalleryPage.productMedia.getter(v325);
    uint64_t v328 = ProductMedia.items.getter(v327);
    swift_release(v327);
    uint64_t v329 = (uint64_t)sub_10003C748(v328);
    __n128 v330 = swift_bridgeObjectRelease(v328);
    uint64_t v331 = ProductMediaGalleryPage.selectedProductMediaItem.getter(v330);
    if (v331)
    {
      uint64_t v333 = v331;
      uint64_t v334 = ProductMediaItem.screenshot.getter(v332);
      swift_release(v333);
    }

    else
    {
      uint64_t v334 = 0LL;
    }

    if ((unint64_t)v329 >> 62)
    {
      if (v329 < 0) {
        uint64_t v359 = v329;
      }
      else {
        uint64_t v359 = v329 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v329);
      uint64_t v360 = _CocoaArrayWrapper.endIndex.getter(v359);
      swift_bridgeObjectRelease(v329);
      if (v360)
      {
LABEL_173:
        if (v334)
        {
          swift_release(v326);
          swift_release(v394);
          sub_100006060(v413, (uint64_t *)&unk_1002DF680);
          unint64_t v79 = v372;
          uint64_t *v372 = v334;
          v79[1] = v329;
          uint64_t v144 = v79;
          uint64_t v145 = v73;
          uint64_t v146 = 33LL;
          goto LABEL_53;
        }
      }
    }

    else if (*(void *)((v329 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      goto LABEL_173;
    }

    swift_bridgeObjectRelease(v329);
    if (qword_1002DC380 != -1) {
      swift_once(&qword_1002DC380, sub_100018F98);
    }
    uint64_t v361 = v408;
    uint64_t v362 = sub_1000061F4(v408, (uint64_t)qword_1002EE558);
    uint64_t v364 = v406;
    v363 = v407;
    (*(void (**)(char *, uint64_t, uint64_t))(v406 + 16))(v407, v362, v361);
    uint64_t v365 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v366 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v367 = swift_allocObject( v365,  ((*(unsigned __int8 *)(v366 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v366 + 80))
           + 2LL * *(void *)(v366 + 72),
             *(unsigned __int8 *)(v366 + 80) | 7LL);
    *(_OWORD *)(v367 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
    LogMessage.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100244D20LL);
    uint64_t v416 = v405;
    sub_100009D54(&v415);
    uint64_t v368 = v394;
    FlowAction.page.getter(v369);
    static LogMessage.sensitive(_:)(&v415);
    sub_100006060((uint64_t)&v415, (uint64_t *)&unk_1002DF680);
    Logger.debug(_:)(v367, v361, &protocol witness table for OSLogger);
    swift_release(v368);
    swift_bridgeObjectRelease(v367);
    swift_release(v326);
    __n128 v370 = swift_release(v334);
    (*(void (**)(char *, uint64_t, __n128))(v364 + 8))(v363, v361, v370);
    uint64_t v190 = v413;
    goto LABEL_56;
  }

  uint64_t v82 = type metadata accessor for SearchAction(0LL);
  __chkstk_darwin(v82);
  uint64_t v83 = v413;
  *(&v371 - 2) = v413;
  FlowAction.pageData<A>(as:or:)(&v415, v84, sub_10003FC40, &v371 - 4, v84);
  swift_release(a1);
  sub_100006060(v83, (uint64_t *)&unk_1002DF680);
  uint64_t *v75 = v415;
  swift_storeEnumTagMultiPayload(v75, v73, 4LL);
  uint64_t v85 = (uint64_t)v75;
LABEL_13:
  sub_1000060D8(v85, (uint64_t)v79);
LABEL_14:
  uint64_t v96 = v411;
  uint64_t v105 = v412;
LABEL_15:
  sub_1000060D8((uint64_t)v79, v105);
  uint64_t v106 = 0LL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v105, v106, 1LL, v73);
}

    uint64_t v12 = 0uLL;
    uint64_t v10 = (unint64_t)a1;
    uint64_t v11 = 3;
    goto LABEL_19;
  }

  if ((v5 & 1) != 0)
  {
    if (v7 != 0.0)
    {
      if (v8 == 0.0)
      {
        [a1 alphaOffset];
        uint64_t v19 = v15;

        uint64_t v12 = 0uLL;
        uint64_t v10 = v19;
        uint64_t v11 = 1;
        goto LABEL_19;
      }

      goto LABEL_18;
    }

    if (v8 == 0.0) {
      goto LABEL_18;
    }
LABEL_9:
    [a1 centerOffset];
    uint64_t v17 = v14;
    uint64_t v18 = v13;

    *(void *)&uint64_t v10 = v18;
    *((void *)&v10 + 1) = v17;
    uint64_t v12 = 0uLL;
    uint64_t v11 = 2;
    goto LABEL_19;
  }

  if (v7 != 0.0 || v8 != 0.0) {
    goto LABEL_18;
  }
  [a1 transform];

  uint64_t v16 = v22;
  uint64_t v12 = v21;
  uint64_t v10 = v20;
  uint64_t v11 = 0;
LABEL_20:
  *(_OWORD *)a2 = v10;
  *(_OWORD *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
  *(_OWORD *)(a2 + 32) = v16;
  *(_BYTE *)(a2 + 48) = v11;
}

  uint64_t v40 = [objc_allocWithZone(UIMotionEffectGroup) init];
  sub_100006028(0LL, &qword_1002E0160, &OBJC_CLASS___UIMotionEffect_ptr);
  uint64_t v41 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v40, "setMotionEffects:", v41, swift_bridgeObjectRelease(&_swiftEmptyArrayStorage).n128_f64[0]);

  return v40;
}

      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }

    __break(1u);
  }

  return result;
}

                __break(1u);
                goto LABEL_19;
              }

  swift_bridgeObjectRelease(v2);
  uint64_t v12 = *v1;
  char *v1 = (uint64_t)_swiftEmptyArrayStorage;
  *(void *)&uint64_t result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

  __break(1u);
}

  __break(1u);
}

  _StringGuts.grow(_:)(29LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  v31._uint64_t countAndFlagsBits = a1;
  v31._object = a2;
  String.append(_:)(v31);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000001BLL,  0x8000000100248F50LL,  "Arcade/ShelfDataSource.swift",  28LL,  2LL,  888LL,  0);
  __break(1u);
  return result;
}

  swift_bridgeObjectRelease(a2);
  return 0LL;
}

  __break(1u);
  return result;
}

    uint64_t v24 = 0LL;
LABEL_19:
    objc_msgSend(v2, "setTitle:", v24, v22);

    uint64_t v26 = [v2 view];
    if (v26)
    {
      uint64_t v27 = v26;
      [v26 bounds];
      uint64_t v29 = v28;
      uint64_t v31 = v30;

      uint64_t v32 = sub_100003B6C( &qword_1002E58E8,  type metadata accessor for GenericDiffablePageViewController,  (uint64_t)&unk_100237438);
      ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(ObjectType, v32, v29, v31);
    }

    else
    {
      __break(1u);
    }
  }

      __break(1u);
      goto LABEL_19;
    }

    (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
    uint64_t v38 = *v11;
    sub_10000D3D8(v11[1], v11[2]);
    uint64_t v39 = *(void **)&v2[qword_1002EF830];
    swift_errorRetain(v38);
    uint64_t v40 = sub_100180B68(v38, v39);
    swift_errorRelease(v38);
    uint64_t v41 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
    id v42 = v40;
    uint64_t v43 = (void *)OverlayViewController.init(overlayView:)();
    uint64_t v44 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
    uint64_t v45 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
    uint64_t v46 = v45;
    static ViewControllerContainment.remove(_:)(v45);

    uint64_t v47 = *(void **)&v2[v44];
    *(void *)&v2[v44] = v43;
    uint64_t v48 = v43;

    uint64_t v49 = *(void **)&v2[v44];
    uint64_t v50 = v49;
    uint64_t v51 = [v2 view];
    if (v51)
    {
      uint64_t v52 = v51;
      [v51 bounds];
      uint64_t v54 = v53;
      uint64_t v56 = v55;
      uint64_t v58 = v57;
      uint64_t v60 = v59;

      uint64_t v98 = v54;
      uint64_t v99 = v56;
      char v100 = v58;
      uint64_t v101 = v60;
      uint64_t v102 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v49, v2, &v98);

      swift_errorRelease(v38);
      return;
    }

      __break(1u);
      goto LABEL_19;
    }

    (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
    uint64_t v38 = *v11;
    sub_10000D3D8(v11[1], v11[2]);
    uint64_t v39 = *(void **)&v2[qword_1002EF830];
    swift_errorRetain(v38);
    uint64_t v40 = sub_1001813FC(v38, v39);
    swift_errorRelease(v38);
    uint64_t v41 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
    id v42 = v40;
    uint64_t v43 = (void *)OverlayViewController.init(overlayView:)(v42);
    uint64_t v44 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
    uint64_t v45 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
    uint64_t v46 = v45;
    static ViewControllerContainment.remove(_:)(v45);

    uint64_t v47 = *(void **)&v2[v44];
    *(void *)&v2[v44] = v43;
    uint64_t v48 = v43;

    uint64_t v49 = *(void **)&v2[v44];
    uint64_t v50 = v49;
    uint64_t v51 = [v2 view];
    if (v51)
    {
      uint64_t v52 = v51;
      [v51 bounds];
      uint64_t v54 = v53;
      uint64_t v56 = v55;
      uint64_t v58 = v57;
      uint64_t v60 = v59;

      uint64_t v98 = v54;
      uint64_t v99 = v56;
      char v100 = v58;
      uint64_t v101 = v60;
      uint64_t v102 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v49, v2, &v98);

      swift_errorRelease(v38);
      return;
    }

      __break(1u);
      goto LABEL_19;
    }

    (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
    uint64_t v38 = *v11;
    sub_10000D3D8(v11[1], v11[2]);
    uint64_t v39 = *(void **)&v2[qword_1002EF830];
    swift_errorRetain(v38);
    uint64_t v40 = sub_100181C90(v38, v39);
    swift_errorRelease(v38);
    uint64_t v41 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
    id v42 = v40;
    uint64_t v43 = (void *)OverlayViewController.init(overlayView:)(v42);
    uint64_t v44 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
    uint64_t v45 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
    uint64_t v46 = v45;
    static ViewControllerContainment.remove(_:)(v45);

    uint64_t v47 = *(void **)&v2[v44];
    *(void *)&v2[v44] = v43;
    uint64_t v48 = v43;

    uint64_t v49 = *(void **)&v2[v44];
    uint64_t v50 = v49;
    uint64_t v51 = [v2 view];
    if (v51)
    {
      uint64_t v52 = v51;
      [v51 bounds];
      uint64_t v54 = v53;
      uint64_t v56 = v55;
      uint64_t v58 = v57;
      uint64_t v60 = v59;

      uint64_t v98 = v54;
      uint64_t v99 = v56;
      char v100 = v58;
      uint64_t v101 = v60;
      uint64_t v102 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v49, v2, &v98);

      swift_errorRelease(v38);
      return;
    }

      __break(1u);
      goto LABEL_19;
    }

    (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
    uint64_t v38 = *v11;
    sub_10000D3D8(v11[1], v11[2]);
    uint64_t v39 = *(void **)&v2[qword_1002EF830];
    swift_errorRetain(v38);
    uint64_t v40 = sub_1001820E0(v38, v39);
    swift_errorRelease(v38);
    uint64_t v41 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
    id v42 = v40;
    uint64_t v43 = (void *)OverlayViewController.init(overlayView:)(v42);
    uint64_t v44 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
    uint64_t v45 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
    uint64_t v46 = v45;
    static ViewControllerContainment.remove(_:)(v45);

    uint64_t v47 = *(void **)&v2[v44];
    *(void *)&v2[v44] = v43;
    uint64_t v48 = v43;

    uint64_t v49 = *(void **)&v2[v44];
    uint64_t v50 = v49;
    uint64_t v51 = [v2 view];
    if (v51)
    {
      uint64_t v52 = v51;
      [v51 bounds];
      uint64_t v54 = v53;
      uint64_t v56 = v55;
      uint64_t v58 = v57;
      uint64_t v60 = v59;

      uint64_t v98 = v54;
      uint64_t v99 = v56;
      char v100 = v58;
      uint64_t v101 = v60;
      uint64_t v102 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v49, v2, &v98);

      swift_errorRelease(v38);
      return;
    }

      __break(1u);
      goto LABEL_19;
    }

    (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
    uint64_t v38 = *v11;
    sub_10000D3D8(v11[1], v11[2]);
    uint64_t v39 = *(void *)&v2[qword_1002EF830];
    swift_errorRetain(v38);
    uint64_t v40 = sub_100182530(v38, v39);
    swift_errorRelease(v38);
    uint64_t v41 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
    id v42 = v40;
    uint64_t v43 = (void *)OverlayViewController.init(overlayView:)(v42);
    uint64_t v44 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
    uint64_t v45 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
    uint64_t v46 = v45;
    static ViewControllerContainment.remove(_:)(v45);

    uint64_t v47 = *(void **)&v2[v44];
    *(void *)&v2[v44] = v43;
    uint64_t v48 = v43;

    uint64_t v49 = *(void **)&v2[v44];
    uint64_t v50 = v49;
    uint64_t v51 = [v2 view];
    if (v51)
    {
      uint64_t v52 = v51;
      [v51 bounds];
      uint64_t v54 = v53;
      uint64_t v56 = v55;
      uint64_t v58 = v57;
      uint64_t v60 = v59;

      uint64_t v98 = v54;
      uint64_t v99 = v56;
      char v100 = v58;
      uint64_t v101 = v60;
      uint64_t v102 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v49, v2, &v98);

      swift_errorRelease(v38);
      return;
    }

      __break(1u);
      goto LABEL_19;
    }

    (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
    uint64_t v38 = *v11;
    sub_10000D3D8(v11[1], v11[2]);
    uint64_t v39 = *(void **)&v2[qword_1002EF830];
    swift_errorRetain(v38);
    uint64_t v40 = sub_100182974(v38, v39);
    swift_errorRelease(v38);
    uint64_t v41 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
    id v42 = v40;
    uint64_t v43 = (void *)OverlayViewController.init(overlayView:)(v42);
    uint64_t v44 = OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController;
    uint64_t v45 = *(void **)&v2[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_overlayViewController];
    uint64_t v46 = v45;
    static ViewControllerContainment.remove(_:)(v45);

    uint64_t v47 = *(void **)&v2[v44];
    *(void *)&v2[v44] = v43;
    uint64_t v48 = v43;

    uint64_t v49 = *(void **)&v2[v44];
    uint64_t v50 = v49;
    uint64_t v51 = [v2 view];
    if (v51)
    {
      uint64_t v52 = v51;
      [v51 bounds];
      uint64_t v54 = v53;
      uint64_t v56 = v55;
      uint64_t v58 = v57;
      uint64_t v60 = v59;

      uint64_t v98 = v54;
      uint64_t v99 = v56;
      char v100 = v58;
      uint64_t v101 = v60;
      uint64_t v102 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v49, v2, &v98);

      swift_errorRelease(v38);
      return;
    }

  uint64_t v51 = *(char **)&v30[OBJC_IVAR____TtC6Arcade30HeroCarouselCollectionViewCell_focusedCarouselItemView];
  if (!v51)
  {

    swift_release(v100);
    return;
  }

  uint64_t v52 = OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem;
  uint64_t v53 = *(void *)&v51[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem];
  if (!v53)
  {
    (*(void (**)(char *, uint64_t, uint64_t, char *))(v18 + 56))(v9, 1LL, 1LL, v17);
    goto LABEL_24;
  }

  uint64_t v54 = v51;
  uint64_t v55 = swift_retain(v53);
  HeroCarouselItem.impressionMetrics.getter(v55);
  uint64_t v56 = swift_release(v53);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t, char *, __n128))(v18 + 48);
  if (v57(v9, 1LL, v17, v56) == 1)
  {

LABEL_24:
    uint64_t v58 = v100;

    swift_release(v58);
    uint64_t v59 = (uint64_t)v9;
LABEL_33:
    sub_100006060(v59, (uint64_t *)&unk_1002E5350);
    return;
  }

  uint64_t v60 = v98;
  uint64_t v61 = v9;
  uint64_t v62 = v17;
  uint64_t v97 = *(void (**)(char *, char *, char *))(v18 + 32);
  v97(v98, v61, v17);
  [v54 frame];
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v71 = [v54 superview];
  objc_msgSend(v30, "convertRect:fromView:", v71, v64, v66, v68, v70);

  ImpressionsCalculator.addElement(_:at:)(v60);
  uint64_t v99 = v54;
  uint64_t v72 = *(void **)&v54[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayView];
  uint64_t v73 = *(void *)&v51[v52];
  if (!v73)
  {
    uint64_t v90 = v72;
    goto LABEL_31;
  }

  uint64_t v74 = v72;
  uint64_t v75 = swift_retain(v73);
  uint64_t v76 = HeroCarouselItem.overlay.getter(v75);
  __n128 v77 = swift_release(v73);
  if (!v76)
  {
LABEL_31:
    unint64_t v79 = v102;
    uint64_t v82 = v62;
    (*(void (**)(char *, uint64_t, uint64_t, char *, __n128))(v18 + 56))(v102, 1LL, 1LL, v62, v77);
    goto LABEL_32;
  }

  uint64_t v78 = v102;
  HeroCarouselItemOverlay.impressionMetrics.getter(v77);
  unint64_t v79 = v78;
  char v80 = swift_release(v76);
  uint64_t v81 = v78;
  uint64_t v82 = v62;
  if (v57(v81, 1LL, v62, v80) == 1)
  {
LABEL_32:

    uint64_t v91 = swift_release(v100);
    (*(void (**)(char *, char *, __n128))(v18 + 8))(v98, v82, v91);
    uint64_t v59 = (uint64_t)v79;
    goto LABEL_33;
  }

  uint64_t v83 = v101;
  uint64_t v84 = ((uint64_t (*)(char *, char *, char *))v97)(v101, v79, v62);
  uint64_t v85 = v103;
  BOOL v86 = v98;
  ImpressionMetrics.id.getter(v84);
  memset(v108, 0, sizeof(v108));
  uint64_t v109 = 1;
  uint64_t v87 = v100;
  uint64_t v88 = ImpressionsCalculator.childCalculator(for:viewBounds:)(v85, v108);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v85, v105);
  if (v88)
  {
    [v74 frame];
    uint64_t v89 = v99;
    objc_msgSend(v30, "convertRect:fromCoordinateSpace:", v99);
    ImpressionsCalculator.addElement(_:at:)(v83);

    swift_release(v88);
  }

  else
  {
  }

  uint64_t v92 = swift_release(v87);
  uint64_t v93 = *(void (**)(char *, char *, __n128))(v18 + 8);
  v93(v83, v82, v92);
  ((void (*)(char *, char *))v93)(v86, v82);
}

  if (qword_1002DCBD0 != -1) {
    swift_once(&qword_1002DCBD0, sub_100102E50);
  }
  uint64_t v51 = type metadata accessor for StaticDimension(0LL);
  uint64_t v52 = sub_1000061F4(v51, (uint64_t)qword_1002F0588);
  uint64_t v53 = v66;
  void v66[3] = v51;
  v53[4] = &protocol witness table for StaticDimension;
  uint64_t v54 = sub_100009D54(v53);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16LL))(v54, v52, v51);
  sub_100006060(v30, &qword_1002EA1B0);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v34);
  return sub_100006060(v35, &qword_1002E2080);
}

double sub_10003F9F4@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void sub_10003FA00(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = (char *)&type metadata for () + 8;
}

BOOL sub_10003FA14()
{
  uint64_t v1 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_10000611C(v0, (uint64_t)v3);
  BOOL v4 = 0LL;
  switch(swift_getEnumCaseMultiPayload(v3, v1))
  {
    case 0u:
      uint64_t v5 = sub_1000031E8(&qword_1002DEF78);
      swift_release(*(void *)((char *)v3 + *(int *)(v5 + 48)));
      uint64_t v6 = *(int *)(v5 + 64);
      goto LABEL_8;
    case 3u:
      uint64_t v7 = &qword_1002DEF48;
      goto LABEL_7;
    case 6u:
      uint64_t v7 = &qword_1002DEF70;
LABEL_7:
      uint64_t v6 = *(int *)(sub_1000031E8(v7) + 48);
LABEL_8:
      swift_release(*(void *)((char *)v3 + v6));
      goto LABEL_14;
    case 8u:
      swift_release(*v3);
      uint64_t v8 = &qword_1002DEF58;
      goto LABEL_12;
    case 9u:
    case 0xAu:
    case 0x17u:
    case 0x18u:
    case 0x1Bu:
      sub_10000609C((uint64_t)v3);
      goto LABEL_18;
    case 0xBu:
      uint64_t v9 = (void *)*v3;
      uint64_t v10 = type metadata accessor for ScreenshotsGalleryViewController();
      BOOL v4 = swift_dynamicCastClass(v9, v10) != 0;

      return v4;
    case 0xDu:
      swift_release(*v3);
      uint64_t v8 = &qword_1002DEF68;
LABEL_12:
      uint64_t v11 = (uint64_t)v3 + *(int *)(sub_1000031E8(v8) + 48);
      goto LABEL_17;
    case 0x10u:
      uint64_t v12 = (char *)v3 + *(int *)(sub_1000031E8(&qword_1002DEF60) + 48);
      uint64_t v13 = type metadata accessor for AdamId(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8LL))(v12, v13);
LABEL_14:
      uint64_t v14 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v14 - 8) + 8LL))(v3, v14);
      goto LABEL_18;
    case 0x13u:
      goto LABEL_16;
    case 0x16u:
      return v4;
    case 0x1Au:
      uint64_t v15 = sub_1000031E8(&qword_1002DEF50);
      swift_release(*(void *)((char *)v3 + *(int *)(v15 + 48)));
LABEL_16:
      uint64_t v11 = (uint64_t)v3;
LABEL_17:
      sub_100006060(v11, (uint64_t *)&unk_1002E1810);
LABEL_18:
      BOOL v4 = 0LL;
      break;
    default:
      sub_10000609C((uint64_t)v3);
      BOOL v4 = 1LL;
      break;
  }

  return v4;
}

uint64_t sub_10003FBFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000031E8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003FC40@<X0>(uint64_t a1@<X8>)
{
  return sub_10001027C(*(void *)(v1 + 16), a1, (uint64_t *)&unk_1002DF680);
}

char *sub_10003FC64(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = &v14[(v6 + 16LL) & ~(unint64_t)v6];
    swift_retain(v14);
  }

  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v8 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v8 - 8) + 16LL))(a1, a2, v8);
        uint64_t v9 = sub_1000031E8(&qword_1002DEF78);
        uint64_t v10 = *(int *)(v9 + 48);
        uint64_t v11 = *(uint64_t *)((char *)a2 + v10);
        *(void *)&a1[v10] = v11;
        uint64_t v12 = *(int *)(v9 + 64);
        uint64_t v13 = *(uint64_t *)((char *)a2 + v12);
        *(void *)&a1[v12] = v13;
        swift_retain(v11);
        swift_retain(v13);
        swift_storeEnumTagMultiPayload(a1, a3, 0LL);
        break;
      case 1u:
        uint64_t v16 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v16 - 8) + 16LL))(a1, a2, v16);
        uint64_t v17 = *(int *)(sub_1000031E8(&qword_1002DEFB8) + 48);
        uint64_t v18 = &a1[v17];
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = type metadata accessor for FlowOrigin(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v18, v19, v20);
        swift_storeEnumTagMultiPayload(a1, a3, 1LL);
        break;
      case 2u:
        uint64_t v21 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v21 - 8) + 16LL))(a1, a2, v21);
        swift_storeEnumTagMultiPayload(a1, a3, 2LL);
        break;
      case 3u:
        uint64_t v22 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v22 - 8) + 16LL))(a1, a2, v22);
        uint64_t v23 = *(int *)(sub_1000031E8(&qword_1002DEF48) + 48);
        uint64_t v24 = *(uint64_t *)((char *)a2 + v23);
        *(void *)&a1[v23] = v24;
        swift_retain(v24);
        swift_storeEnumTagMultiPayload(a1, a3, 3LL);
        break;
      case 4u:
        uint64_t v25 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v25);
        swift_storeEnumTagMultiPayload(a1, a3, 4LL);
        break;
      case 5u:
        uint64_t v26 = *a2;
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain(v26);
        swift_storeEnumTagMultiPayload(a1, a3, 5LL);
        break;
      case 6u:
        uint64_t v27 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v27 - 8) + 16LL))(a1, a2, v27);
        uint64_t v28 = *(int *)(sub_1000031E8(&qword_1002DEF70) + 48);
        uint64_t v29 = *(uint64_t *)((char *)a2 + v28);
        *(void *)&a1[v28] = v29;
        swift_retain(v29);
        swift_storeEnumTagMultiPayload(a1, a3, 6LL);
        break;
      case 7u:
        uint64_t v30 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v30);
        uint64_t v31 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
        uint64_t v32 = &a1[v31];
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = type metadata accessor for URL(0LL);
        uint64_t v35 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1LL, v34))
        {
          uint64_t v36 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0LL, 1LL, v34);
        }

        swift_storeEnumTagMultiPayload(a1, a3, 7LL);
        break;
      case 8u:
        uint64_t v37 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v37);
        uint64_t v38 = *(int *)(sub_1000031E8(&qword_1002DEF58) + 48);
        uint64_t v39 = &a1[v38];
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = type metadata accessor for URL(0LL);
        uint64_t v42 = *(void *)(v41 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1LL, v41))
        {
          uint64_t v43 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0LL, 1LL, v41);
        }

        swift_storeEnumTagMultiPayload(a1, a3, 8LL);
        break;
      case 9u:
        uint64_t v44 = *a2;
        uint64_t v45 = a2[1];
        *(void *)a1 = v44;
        *((void *)a1 + 1) = v45;
        swift_retain(v44);
        uint64_t v46 = v45;
        swift_storeEnumTagMultiPayload(a1, a3, 9LL);
        break;
      case 0xAu:
        uint64_t v47 = *a2;
        uint64_t v48 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v48;
        uint64_t v50 = a2[2];
        uint64_t v49 = a2[3];
        *((void *)a1 + 2) = v50;
        *((void *)a1 + 3) = v49;
        swift_bridgeObjectRetain(v47);
        swift_bridgeObjectRetain(v50);
        swift_retain(v49);
        swift_storeEnumTagMultiPayload(a1, a3, 10LL);
        break;
      case 0xBu:
        uint64_t v51 = *a2;
        *(void *)a1 = *a2;
        uint64_t v52 = v51;
        swift_storeEnumTagMultiPayload(a1, a3, 11LL);
        break;
      case 0xCu:
        uint64_t v53 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v53 - 8) + 16LL))(a1, a2, v53);
        swift_storeEnumTagMultiPayload(a1, a3, 12LL);
        break;
      case 0xDu:
        uint64_t v54 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v54);
        uint64_t v55 = *(int *)(sub_1000031E8(&qword_1002DEF68) + 48);
        uint64_t v56 = &a1[v55];
        uint64_t v57 = (char *)a2 + v55;
        uint64_t v58 = type metadata accessor for URL(0LL);
        uint64_t v59 = *(void *)(v58 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1LL, v58))
        {
          uint64_t v60 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0LL, 1LL, v58);
        }

        swift_storeEnumTagMultiPayload(a1, a3, 13LL);
        break;
      case 0xEu:
        uint64_t v61 = *a2;
        *(void *)a1 = *a2;
        uint64_t v62 = v61;
        swift_storeEnumTagMultiPayload(a1, a3, 14LL);
        break;
      case 0xFu:
        uint64_t v63 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v63 - 8) + 16LL))(a1, a2, v63);
        uint64_t v64 = *(int *)(sub_1000031E8(&qword_1002DEFA8) + 48);
        uint64_t v65 = *(uint64_t *)((char *)a2 + v64);
        *(void *)&a1[v64] = v65;
        swift_retain(v65);
        swift_storeEnumTagMultiPayload(a1, a3, 15LL);
        break;
      case 0x10u:
        uint64_t v66 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v66 - 8) + 16LL))(a1, a2, v66);
        uint64_t v67 = *(int *)(sub_1000031E8(&qword_1002DEF60) + 48);
        uint64_t v68 = &a1[v67];
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = type metadata accessor for AdamId(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16LL))(v68, v69, v70);
        swift_storeEnumTagMultiPayload(a1, a3, 16LL);
        break;
      case 0x11u:
        uint64_t v71 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v71);
        swift_storeEnumTagMultiPayload(a1, a3, 17LL);
        break;
      case 0x12u:
        uint64_t v72 = type metadata accessor for URL(0LL);
        uint64_t v73 = *(void *)(v72 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v73 + 48))(a2, 1LL, v72))
        {
          uint64_t v74 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(a1, a2, *(void *)(*(void *)(v74 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char **, uint64_t))(v73 + 16))(a1, a2, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(a1, 0LL, 1LL, v72);
        }

        swift_storeEnumTagMultiPayload(a1, a3, 18LL);
        break;
      case 0x13u:
        uint64_t v75 = type metadata accessor for URL(0LL);
        uint64_t v76 = *(void *)(v75 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v76 + 48))(a2, 1LL, v75))
        {
          uint64_t v77 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(a1, a2, *(void *)(*(void *)(v77 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char **, uint64_t))(v76 + 16))(a1, a2, v75);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(a1, 0LL, 1LL, v75);
        }

        swift_storeEnumTagMultiPayload(a1, a3, 19LL);
        break;
      case 0x14u:
        uint64_t v78 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v78 - 8) + 16LL))(a1, a2, v78);
        uint64_t v79 = *(int *)(sub_1000031E8(&qword_1002DEF98) + 48);
        char v80 = &a1[v79];
        uint64_t v81 = (char *)a2 + v79;
        uint64_t v82 = type metadata accessor for MSOContext(0LL);
        uint64_t v83 = *(void *)(v82 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1LL, v82))
        {
          uint64_t v84 = sub_1000031E8(&qword_1002DEF80);
          memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v81, v82);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0LL, 1LL, v82);
        }

        swift_storeEnumTagMultiPayload(a1, a3, 20LL);
        break;
      case 0x15u:
        uint64_t v85 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v85);
        swift_storeEnumTagMultiPayload(a1, a3, 21LL);
        break;
      case 0x17u:
        BOOL v86 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v86);
        swift_storeEnumTagMultiPayload(a1, a3, 23LL);
        break;
      case 0x18u:
        uint64_t v87 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v87);
        swift_storeEnumTagMultiPayload(a1, a3, 24LL);
        break;
      case 0x19u:
        uint64_t v88 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v88);
        uint64_t v89 = *(int *)(sub_1000031E8(&qword_1002DDA20) + 48);
        uint64_t v90 = &a1[v89];
        uint64_t v91 = (char *)a2 + v89;
        uint64_t v92 = type metadata accessor for ArcadePageUrls(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16LL))(v90, v91, v92);
        swift_storeEnumTagMultiPayload(a1, a3, 25LL);
        break;
      case 0x1Au:
        uint64_t v93 = type metadata accessor for URL(0LL);
        uint64_t v94 = *(void *)(v93 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v94 + 48))(a2, 1LL, v93))
        {
          uint64_t v95 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(a1, a2, *(void *)(*(void *)(v95 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char **, uint64_t))(v94 + 16))(a1, a2, v93);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(a1, 0LL, 1LL, v93);
        }

        uint64_t v124 = *(int *)(sub_1000031E8(&qword_1002DEF50) + 48);
        uint64_t v125 = *(uint64_t *)((char *)a2 + v124);
        *(void *)&a1[v124] = v125;
        swift_retain(v125);
        swift_storeEnumTagMultiPayload(a1, a3, 26LL);
        break;
      case 0x1Bu:
        uint64_t v96 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v96);
        swift_storeEnumTagMultiPayload(a1, a3, 27LL);
        break;
      case 0x1Cu:
        uint64_t v97 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v97);
        uint64_t v98 = *(int *)(sub_1000031E8(&qword_1002DEF90) + 48);
        uint64_t v99 = &a1[v98];
        char v100 = (char *)a2 + v98;
        uint64_t v101 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16LL))(v99, v100, v101);
        swift_storeEnumTagMultiPayload(a1, a3, 28LL);
        break;
      case 0x1Du:
        uint64_t v102 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v102);
        uint64_t v103 = sub_1000031E8(&qword_1002DEF88);
        uint64_t v104 = *(int *)(v103 + 48);
        uint64_t v105 = &a1[v104];
        uint64_t v106 = (char *)a2 + v104;
        uint64_t v107 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16LL))(v105, v106, v107);
        uint64_t v108 = *(int *)(v103 + 64);
        uint64_t v109 = &a1[v108];
        uint64_t v110 = (char *)a2 + v108;
        uint64_t v111 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16LL))(v109, v110, v111);
        swift_storeEnumTagMultiPayload(a1, a3, 29LL);
        break;
      case 0x1Eu:
        double v112 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v112;
        swift_bridgeObjectRetain(v112);
        swift_storeEnumTagMultiPayload(a1, a3, 30LL);
        break;
      case 0x1Fu:
        uint64_t v113 = *a2;
        *(void *)a1 = *a2;
        uint64_t v114 = v113;
        swift_storeEnumTagMultiPayload(a1, a3, 31LL);
        break;
      case 0x20u:
        uint64_t v115 = *a2;
        *(void *)a1 = *a2;
        swift_retain(v115);
        uint64_t v116 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
        unint64_t v117 = &a1[v116];
        unint64_t v118 = (char *)a2 + v116;
        uint64_t v119 = type metadata accessor for URL(0LL);
        uint64_t v120 = *(void *)(v119 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 1LL, v119))
        {
          uint64_t v121 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v117, v118, *(void *)(*(void *)(v121 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v117, v118, v119);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v117, 0LL, 1LL, v119);
        }

        swift_storeEnumTagMultiPayload(a1, a3, 32LL);
        break;
      case 0x21u:
        id v122 = *a2;
        uint64_t v123 = a2[1];
        *(void *)a1 = v122;
        *((void *)a1 + 1) = v123;
        swift_retain(v122);
        swift_bridgeObjectRetain(v123);
        swift_storeEnumTagMultiPayload(a1, a3, 33LL);
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        break;
    }
  }

  return a1;
}

double sub_100040800(void *a1, uint64_t a2)
{
  uint64_t v2 = a1;
  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      uint64_t v7 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v7 - 8) + 8LL))(v2, v7);
      uint64_t v8 = sub_1000031E8(&qword_1002DEF78);
      swift_release(*(void *)((char *)v2 + *(int *)(v8 + 48)));
      uint64_t v9 = *(int *)(v8 + 64);
      goto LABEL_27;
    case 1u:
      uint64_t v10 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v10 - 8) + 8LL))(v2, v10);
      uint64_t v2 = (void *)((char *)v2 + *(int *)(sub_1000031E8(&qword_1002DEFB8) + 48));
      uint64_t v11 = type metadata accessor for FlowOrigin(0LL);
      goto LABEL_33;
    case 2u:
    case 0xCu:
      goto LABEL_32;
    case 3u:
      uint64_t v12 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v12 - 8) + 8LL))(v2, v12);
      uint64_t v13 = &qword_1002DEF48;
      goto LABEL_26;
    case 4u:
    case 0x11u:
    case 0x15u:
    case 0x17u:
    case 0x18u:
    case 0x1Bu:
      uint64_t v4 = *v2;
      goto LABEL_28;
    case 5u:
      *(void *)&double result = swift_bridgeObjectRelease(*v2).n128_u64[0];
      return result;
    case 6u:
      uint64_t v14 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v14 - 8) + 8LL))(v2, v14);
      uint64_t v13 = &qword_1002DEF70;
      goto LABEL_26;
    case 7u:
    case 0x20u:
      swift_release(*v2);
      int v6 = &qword_1002E8340;
      goto LABEL_15;
    case 8u:
      swift_release(*v2);
      int v6 = &qword_1002DEF58;
      goto LABEL_15;
    case 9u:
      swift_release(*v2);
      uint64_t v5 = (void *)v2[1];
      goto LABEL_12;
    case 0xAu:
      swift_bridgeObjectRelease(*v2);
      swift_bridgeObjectRelease(v2[2]);
      uint64_t v4 = v2[3];
      goto LABEL_28;
    case 0xBu:
    case 0xEu:
    case 0x1Fu:
      uint64_t v5 = (void *)*v2;
LABEL_12:

      return result;
    case 0xDu:
      swift_release(*v2);
      int v6 = &qword_1002DEF68;
LABEL_15:
      uint64_t v2 = (void *)((char *)v2 + *(int *)(sub_1000031E8(v6) + 48));
      goto LABEL_16;
    case 0xFu:
      uint64_t v21 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v21 - 8) + 8LL))(v2, v21);
      uint64_t v13 = &qword_1002DEFA8;
      goto LABEL_26;
    case 0x10u:
      uint64_t v22 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v22 - 8) + 8LL))(v2, v22);
      uint64_t v2 = (void *)((char *)v2 + *(int *)(sub_1000031E8(&qword_1002DEF60) + 48));
      uint64_t v11 = type metadata accessor for AdamId(0LL);
      goto LABEL_33;
    case 0x12u:
    case 0x13u:
LABEL_16:
      uint64_t v15 = type metadata accessor for URL(0LL);
      goto LABEL_17;
    case 0x14u:
      uint64_t v23 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v23 - 8) + 8LL))(v2, v23);
      uint64_t v2 = (void *)((char *)v2 + *(int *)(sub_1000031E8(&qword_1002DEF98) + 48));
      uint64_t v15 = type metadata accessor for MSOContext(0LL);
LABEL_17:
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)(v15 - 8);
      uint64_t v18 = *(void (**)(void *, uint64_t))(v17 + 8);
      uint64_t v19 = v2;
      uint64_t v20 = v16;
      goto LABEL_34;
    case 0x19u:
      swift_release(*v2);
      uint64_t v2 = (void *)((char *)v2 + *(int *)(sub_1000031E8(&qword_1002DDA20) + 48));
      uint64_t v11 = type metadata accessor for ArcadePageUrls(0LL);
      goto LABEL_33;
    case 0x1Au:
      uint64_t v24 = type metadata accessor for URL(0LL);
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v13 = &qword_1002DEF50;
LABEL_26:
      uint64_t v9 = *(int *)(sub_1000031E8(v13) + 48);
LABEL_27:
      uint64_t v4 = *(void *)((char *)v2 + v9);
LABEL_28:
      *(void *)&double result = swift_release(v4).n128_u64[0];
      return result;
    case 0x1Cu:
      swift_release(*v2);
      uint64_t v26 = *(int *)(sub_1000031E8(&qword_1002DEF90) + 48);
      goto LABEL_31;
    case 0x1Du:
      swift_release(*v2);
      uint64_t v27 = sub_1000031E8(&qword_1002DEF88);
      uint64_t v28 = (char *)v2 + *(int *)(v27 + 48);
      uint64_t v29 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8LL))(v28, v29);
      uint64_t v26 = *(int *)(v27 + 64);
LABEL_31:
      uint64_t v2 = (void *)((char *)v2 + v26);
LABEL_32:
      uint64_t v11 = type metadata accessor for URL(0LL);
LABEL_33:
      uint64_t v20 = v11;
      uint64_t v18 = *(void (**)(void *, uint64_t))(*(void *)(v11 - 8) + 8LL);
      uint64_t v19 = v2;
LABEL_34:
      v18(v19, v20);
      return result;
    case 0x1Eu:
      goto LABEL_36;
    case 0x21u:
      swift_release(*v2);
LABEL_36:
      *(void *)&double result = swift_bridgeObjectRelease(v2[1]).n128_u64[0];
      break;
    default:
      return result;
  }

  return result;
}

void **sub_100040BA8(void **a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      uint64_t v6 = type metadata accessor for URL(0LL);
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      uint64_t v7 = sub_1000031E8(&qword_1002DEF78);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = *(void **)((char *)a2 + v8);
      *(void **)((char *)a1 + v8) = v9;
      uint64_t v10 = *(int *)(v7 + 64);
      uint64_t v11 = *(void **)((char *)a2 + v10);
      *(void **)((char *)a1 + v1_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v11;
      swift_retain(v9);
      swift_retain(v11);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 0LL;
      goto LABEL_60;
    case 1u:
      uint64_t v15 = type metadata accessor for URL(0LL);
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v15 - 8) + 16LL))(a1, a2, v15);
      uint64_t v16 = *(int *)(sub_1000031E8(&qword_1002DEFB8) + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for FlowOrigin(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v17, v18, v19);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 1LL;
      goto LABEL_60;
    case 2u:
      uint64_t v20 = type metadata accessor for URL(0LL);
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v20 - 8) + 16LL))(a1, a2, v20);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 2LL;
      goto LABEL_60;
    case 3u:
      uint64_t v21 = type metadata accessor for URL(0LL);
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v21 - 8) + 16LL))(a1, a2, v21);
      uint64_t v22 = *(int *)(sub_1000031E8(&qword_1002DEF48) + 48);
      uint64_t v23 = *(void **)((char *)a2 + v22);
      *(void **)((char *)a1 + v22) = v23;
      swift_retain(v23);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 3LL;
      goto LABEL_60;
    case 4u:
      uint64_t v24 = *a2;
      *a1 = *a2;
      swift_retain(v24);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 4LL;
      goto LABEL_60;
    case 5u:
      uint64_t v25 = *a2;
      *a1 = *a2;
      swift_bridgeObjectRetain(v25);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 5LL;
      goto LABEL_60;
    case 6u:
      uint64_t v26 = type metadata accessor for URL(0LL);
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v26 - 8) + 16LL))(a1, a2, v26);
      uint64_t v27 = *(int *)(sub_1000031E8(&qword_1002DEF70) + 48);
      uint64_t v28 = *(void **)((char *)a2 + v27);
      *(void **)((char *)a1 + v27) = v28;
      swift_retain(v28);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 6LL;
      goto LABEL_60;
    case 7u:
      uint64_t v29 = *a2;
      *a1 = *a2;
      swift_retain(v29);
      uint64_t v30 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      uint64_t v33 = type metadata accessor for URL(0LL);
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1LL, v33))
      {
        uint64_t v35 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0LL, 1LL, v33);
      }

      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 7LL;
      goto LABEL_60;
    case 8u:
      uint64_t v36 = *a2;
      *a1 = *a2;
      swift_retain(v36);
      uint64_t v37 = *(int *)(sub_1000031E8(&qword_1002DEF58) + 48);
      uint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      uint64_t v40 = type metadata accessor for URL(0LL);
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1LL, v40))
      {
        uint64_t v42 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0LL, 1LL, v40);
      }

      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 8LL;
      goto LABEL_60;
    case 9u:
      uint64_t v43 = *a2;
      uint64_t v44 = a2[1];
      *a1 = v43;
      a1[1] = v44;
      swift_retain(v43);
      id v45 = v44;
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 9LL;
      goto LABEL_60;
    case 0xAu:
      uint64_t v46 = *a2;
      uint64_t v47 = a2[1];
      *a1 = *a2;
      a1[1] = v47;
      uint64_t v49 = a2[2];
      uint64_t v48 = a2[3];
      a1[2] = v49;
      a1[3] = v48;
      swift_bridgeObjectRetain(v46);
      swift_bridgeObjectRetain(v49);
      swift_retain(v48);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 10LL;
      goto LABEL_60;
    case 0xBu:
      uint64_t v50 = *a2;
      *a1 = *a2;
      id v51 = v50;
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 11LL;
      goto LABEL_60;
    case 0xCu:
      uint64_t v52 = type metadata accessor for URL(0LL);
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v52 - 8) + 16LL))(a1, a2, v52);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 12LL;
      goto LABEL_60;
    case 0xDu:
      uint64_t v53 = *a2;
      *a1 = *a2;
      swift_retain(v53);
      uint64_t v54 = *(int *)(sub_1000031E8(&qword_1002DEF68) + 48);
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      uint64_t v57 = type metadata accessor for URL(0LL);
      uint64_t v58 = *(void *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1LL, v57))
      {
        uint64_t v59 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0LL, 1LL, v57);
      }

      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 13LL;
      goto LABEL_60;
    case 0xEu:
      uint64_t v60 = *a2;
      *a1 = *a2;
      id v61 = v60;
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 14LL;
      goto LABEL_60;
    case 0xFu:
      uint64_t v62 = type metadata accessor for URL(0LL);
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v62 - 8) + 16LL))(a1, a2, v62);
      uint64_t v63 = *(int *)(sub_1000031E8(&qword_1002DEFA8) + 48);
      uint64_t v64 = *(void **)((char *)a2 + v63);
      *(void **)((char *)a1 + v63) = v64;
      swift_retain(v64);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 15LL;
      goto LABEL_60;
    case 0x10u:
      uint64_t v65 = type metadata accessor for URL(0LL);
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v65 - 8) + 16LL))(a1, a2, v65);
      uint64_t v66 = *(int *)(sub_1000031E8(&qword_1002DEF60) + 48);
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      uint64_t v69 = type metadata accessor for AdamId(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16LL))(v67, v68, v69);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 16LL;
      goto LABEL_60;
    case 0x11u:
      uint64_t v70 = *a2;
      *a1 = *a2;
      swift_retain(v70);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 17LL;
      goto LABEL_60;
    case 0x12u:
      uint64_t v71 = type metadata accessor for URL(0LL);
      uint64_t v72 = *(void *)(v71 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v72 + 48))(a2, 1LL, v71))
      {
        uint64_t v73 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(a1, a2, *(void *)(*(void *)(v73 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void **, void **, uint64_t))(v72 + 16))(a1, a2, v71);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v72 + 56))(a1, 0LL, 1LL, v71);
      }

      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 18LL;
      goto LABEL_60;
    case 0x13u:
      uint64_t v74 = type metadata accessor for URL(0LL);
      uint64_t v75 = *(void *)(v74 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v75 + 48))(a2, 1LL, v74))
      {
        uint64_t v76 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(a1, a2, *(void *)(*(void *)(v76 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void **, void **, uint64_t))(v75 + 16))(a1, a2, v74);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v75 + 56))(a1, 0LL, 1LL, v74);
      }

      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 19LL;
      goto LABEL_60;
    case 0x14u:
      uint64_t v77 = type metadata accessor for URL(0LL);
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v77 - 8) + 16LL))(a1, a2, v77);
      uint64_t v78 = *(int *)(sub_1000031E8(&qword_1002DEF98) + 48);
      uint64_t v79 = (char *)a1 + v78;
      char v80 = (char *)a2 + v78;
      uint64_t v81 = type metadata accessor for MSOContext(0LL);
      uint64_t v82 = *(void *)(v81 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1LL, v81))
      {
        uint64_t v83 = sub_1000031E8(&qword_1002DEF80);
        memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v79, v80, v81);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0LL, 1LL, v81);
      }

      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 20LL;
      goto LABEL_60;
    case 0x15u:
      uint64_t v84 = *a2;
      *a1 = *a2;
      swift_retain(v84);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 21LL;
      goto LABEL_60;
    case 0x17u:
      uint64_t v85 = *a2;
      *a1 = *a2;
      swift_retain(v85);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 23LL;
      goto LABEL_60;
    case 0x18u:
      BOOL v86 = *a2;
      *a1 = *a2;
      swift_retain(v86);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 24LL;
      goto LABEL_60;
    case 0x19u:
      uint64_t v87 = *a2;
      *a1 = *a2;
      swift_retain(v87);
      uint64_t v88 = *(int *)(sub_1000031E8(&qword_1002DDA20) + 48);
      uint64_t v89 = (char *)a1 + v88;
      uint64_t v90 = (char *)a2 + v88;
      uint64_t v91 = type metadata accessor for ArcadePageUrls(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16LL))(v89, v90, v91);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 25LL;
      goto LABEL_60;
    case 0x1Au:
      uint64_t v92 = type metadata accessor for URL(0LL);
      uint64_t v93 = *(void *)(v92 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v93 + 48))(a2, 1LL, v92))
      {
        uint64_t v94 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(a1, a2, *(void *)(*(void *)(v94 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void **, void **, uint64_t))(v93 + 16))(a1, a2, v92);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v93 + 56))(a1, 0LL, 1LL, v92);
      }

      uint64_t v123 = *(int *)(sub_1000031E8(&qword_1002DEF50) + 48);
      uint64_t v124 = *(void **)((char *)a2 + v123);
      *(void **)((char *)a1 + v123) = v124;
      swift_retain(v124);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 26LL;
      goto LABEL_60;
    case 0x1Bu:
      uint64_t v95 = *a2;
      *a1 = *a2;
      swift_retain(v95);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 27LL;
      goto LABEL_60;
    case 0x1Cu:
      uint64_t v96 = *a2;
      *a1 = *a2;
      swift_retain(v96);
      uint64_t v97 = *(int *)(sub_1000031E8(&qword_1002DEF90) + 48);
      uint64_t v98 = (char *)a1 + v97;
      uint64_t v99 = (char *)a2 + v97;
      uint64_t v100 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16LL))(v98, v99, v100);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 28LL;
      goto LABEL_60;
    case 0x1Du:
      uint64_t v101 = *a2;
      *a1 = *a2;
      swift_retain(v101);
      uint64_t v102 = sub_1000031E8(&qword_1002DEF88);
      uint64_t v103 = *(int *)(v102 + 48);
      uint64_t v104 = (char *)a1 + v103;
      uint64_t v105 = (char *)a2 + v103;
      uint64_t v106 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16LL))(v104, v105, v106);
      uint64_t v107 = *(int *)(v102 + 64);
      uint64_t v108 = (char *)a1 + v107;
      uint64_t v109 = (char *)a2 + v107;
      uint64_t v110 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16LL))(v108, v109, v110);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 29LL;
      goto LABEL_60;
    case 0x1Eu:
      uint64_t v111 = a2[1];
      *a1 = *a2;
      a1[1] = v111;
      swift_bridgeObjectRetain(v111);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 30LL;
      goto LABEL_60;
    case 0x1Fu:
      double v112 = *a2;
      *a1 = *a2;
      id v113 = v112;
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 31LL;
      goto LABEL_60;
    case 0x20u:
      uint64_t v114 = *a2;
      *a1 = *a2;
      swift_retain(v114);
      uint64_t v115 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
      uint64_t v116 = (char *)a1 + v115;
      unint64_t v117 = (char *)a2 + v115;
      uint64_t v118 = type metadata accessor for URL(0LL);
      uint64_t v119 = *(void *)(v118 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v117, 1LL, v118))
      {
        uint64_t v120 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v116, v117, v118);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v116, 0LL, 1LL, v118);
      }

      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 32LL;
      goto LABEL_60;
    case 0x21u:
      uint64_t v121 = *a2;
      id v122 = a2[1];
      *a1 = v121;
      a1[1] = v122;
      swift_retain(v121);
      swift_bridgeObjectRetain(v122);
      uint64_t v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 33LL;
LABEL_60:
      swift_storeEnumTagMultiPayload(v12, v13, v14);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      break;
  }

  return a1;
}

void **sub_10004169C(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000609C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v6 = type metadata accessor for URL(0LL);
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
        uint64_t v7 = sub_1000031E8(&qword_1002DEF78);
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v9 = *(void **)((char *)a2 + v8);
        *(void **)((char *)a1 + v8) = v9;
        uint64_t v10 = *(int *)(v7 + 64);
        uint64_t v11 = *(void **)((char *)a2 + v10);
        *(void **)((char *)a1 + v1_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v11;
        swift_retain(v9);
        swift_retain(v11);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 0LL;
        goto LABEL_61;
      case 1u:
        uint64_t v15 = type metadata accessor for URL(0LL);
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v15 - 8) + 16LL))(a1, a2, v15);
        uint64_t v16 = *(int *)(sub_1000031E8(&qword_1002DEFB8) + 48);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = type metadata accessor for FlowOrigin(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v17, v18, v19);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 1LL;
        goto LABEL_61;
      case 2u:
        uint64_t v20 = type metadata accessor for URL(0LL);
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v20 - 8) + 16LL))(a1, a2, v20);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 2LL;
        goto LABEL_61;
      case 3u:
        uint64_t v21 = type metadata accessor for URL(0LL);
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v21 - 8) + 16LL))(a1, a2, v21);
        uint64_t v22 = *(int *)(sub_1000031E8(&qword_1002DEF48) + 48);
        uint64_t v23 = *(void **)((char *)a2 + v22);
        *(void **)((char *)a1 + v22) = v23;
        swift_retain(v23);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 3LL;
        goto LABEL_61;
      case 4u:
        uint64_t v24 = *a2;
        *a1 = *a2;
        swift_retain(v24);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 4LL;
        goto LABEL_61;
      case 5u:
        uint64_t v25 = *a2;
        *a1 = *a2;
        swift_bridgeObjectRetain(v25);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 5LL;
        goto LABEL_61;
      case 6u:
        uint64_t v26 = type metadata accessor for URL(0LL);
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v26 - 8) + 16LL))(a1, a2, v26);
        uint64_t v27 = *(int *)(sub_1000031E8(&qword_1002DEF70) + 48);
        uint64_t v28 = *(void **)((char *)a2 + v27);
        *(void **)((char *)a1 + v27) = v28;
        swift_retain(v28);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 6LL;
        goto LABEL_61;
      case 7u:
        uint64_t v29 = *a2;
        *a1 = *a2;
        swift_retain(v29);
        uint64_t v30 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = type metadata accessor for URL(0LL);
        uint64_t v34 = *(void *)(v33 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1LL, v33))
        {
          uint64_t v35 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0LL, 1LL, v33);
        }

        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 7LL;
        goto LABEL_61;
      case 8u:
        uint64_t v36 = *a2;
        *a1 = *a2;
        swift_retain(v36);
        uint64_t v37 = *(int *)(sub_1000031E8(&qword_1002DEF58) + 48);
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v40 = type metadata accessor for URL(0LL);
        uint64_t v41 = *(void *)(v40 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1LL, v40))
        {
          uint64_t v42 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0LL, 1LL, v40);
        }

        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 8LL;
        goto LABEL_61;
      case 9u:
        uint64_t v43 = *a2;
        *a1 = *a2;
        uint64_t v44 = a2[1];
        a1[1] = v44;
        swift_retain(v43);
        id v45 = v44;
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 9LL;
        goto LABEL_61;
      case 0xAu:
        uint64_t v46 = *a2;
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v47 = a2[2];
        a1[2] = v47;
        uint64_t v48 = a2[3];
        a1[3] = v48;
        swift_bridgeObjectRetain(v46);
        swift_bridgeObjectRetain(v47);
        swift_retain(v48);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 10LL;
        goto LABEL_61;
      case 0xBu:
        uint64_t v49 = *a2;
        *a1 = *a2;
        id v50 = v49;
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 11LL;
        goto LABEL_61;
      case 0xCu:
        uint64_t v51 = type metadata accessor for URL(0LL);
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16LL))(a1, a2, v51);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 12LL;
        goto LABEL_61;
      case 0xDu:
        uint64_t v52 = *a2;
        *a1 = *a2;
        swift_retain(v52);
        uint64_t v53 = *(int *)(sub_1000031E8(&qword_1002DEF68) + 48);
        uint64_t v54 = (char *)a1 + v53;
        uint64_t v55 = (char *)a2 + v53;
        uint64_t v56 = type metadata accessor for URL(0LL);
        uint64_t v57 = *(void *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1LL, v56))
        {
          uint64_t v58 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0LL, 1LL, v56);
        }

        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 13LL;
        goto LABEL_61;
      case 0xEu:
        uint64_t v59 = *a2;
        *a1 = *a2;
        id v60 = v59;
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 14LL;
        goto LABEL_61;
      case 0xFu:
        uint64_t v61 = type metadata accessor for URL(0LL);
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v61 - 8) + 16LL))(a1, a2, v61);
        uint64_t v62 = *(int *)(sub_1000031E8(&qword_1002DEFA8) + 48);
        uint64_t v63 = *(void **)((char *)a2 + v62);
        *(void **)((char *)a1 + v62) = v63;
        swift_retain(v63);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 15LL;
        goto LABEL_61;
      case 0x10u:
        uint64_t v64 = type metadata accessor for URL(0LL);
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v64 - 8) + 16LL))(a1, a2, v64);
        uint64_t v65 = *(int *)(sub_1000031E8(&qword_1002DEF60) + 48);
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        uint64_t v68 = type metadata accessor for AdamId(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16LL))(v66, v67, v68);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 16LL;
        goto LABEL_61;
      case 0x11u:
        uint64_t v69 = *a2;
        *a1 = *a2;
        swift_retain(v69);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 17LL;
        goto LABEL_61;
      case 0x12u:
        uint64_t v70 = type metadata accessor for URL(0LL);
        uint64_t v71 = *(void *)(v70 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v71 + 48))(a2, 1LL, v70))
        {
          uint64_t v72 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(a1, a2, *(void *)(*(void *)(v72 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void **, void **, uint64_t))(v71 + 16))(a1, a2, v70);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v71 + 56))(a1, 0LL, 1LL, v70);
        }

        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 18LL;
        goto LABEL_61;
      case 0x13u:
        uint64_t v73 = type metadata accessor for URL(0LL);
        uint64_t v74 = *(void *)(v73 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v74 + 48))(a2, 1LL, v73))
        {
          uint64_t v75 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(a1, a2, *(void *)(*(void *)(v75 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void **, void **, uint64_t))(v74 + 16))(a1, a2, v73);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v74 + 56))(a1, 0LL, 1LL, v73);
        }

        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 19LL;
        goto LABEL_61;
      case 0x14u:
        uint64_t v76 = type metadata accessor for URL(0LL);
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v76 - 8) + 16LL))(a1, a2, v76);
        uint64_t v77 = *(int *)(sub_1000031E8(&qword_1002DEF98) + 48);
        uint64_t v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        uint64_t v80 = type metadata accessor for MSOContext(0LL);
        uint64_t v81 = *(void *)(v80 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1LL, v80))
        {
          uint64_t v82 = sub_1000031E8(&qword_1002DEF80);
          memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v79, v80);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0LL, 1LL, v80);
        }

        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 20LL;
        goto LABEL_61;
      case 0x15u:
        uint64_t v83 = *a2;
        *a1 = *a2;
        swift_retain(v83);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 21LL;
        goto LABEL_61;
      case 0x17u:
        uint64_t v84 = *a2;
        *a1 = *a2;
        swift_retain(v84);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 23LL;
        goto LABEL_61;
      case 0x18u:
        uint64_t v85 = *a2;
        *a1 = *a2;
        swift_retain(v85);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 24LL;
        goto LABEL_61;
      case 0x19u:
        BOOL v86 = *a2;
        *a1 = *a2;
        swift_retain(v86);
        uint64_t v87 = *(int *)(sub_1000031E8(&qword_1002DDA20) + 48);
        uint64_t v88 = (char *)a1 + v87;
        uint64_t v89 = (char *)a2 + v87;
        uint64_t v90 = type metadata accessor for ArcadePageUrls(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16LL))(v88, v89, v90);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 25LL;
        goto LABEL_61;
      case 0x1Au:
        uint64_t v91 = type metadata accessor for URL(0LL);
        uint64_t v92 = *(void *)(v91 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v92 + 48))(a2, 1LL, v91))
        {
          uint64_t v93 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(a1, a2, *(void *)(*(void *)(v93 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void **, void **, uint64_t))(v92 + 16))(a1, a2, v91);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v92 + 56))(a1, 0LL, 1LL, v91);
        }

        uint64_t v122 = *(int *)(sub_1000031E8(&qword_1002DEF50) + 48);
        uint64_t v123 = *(void **)((char *)a2 + v122);
        *(void **)((char *)a1 + v122) = v123;
        swift_retain(v123);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 26LL;
        goto LABEL_61;
      case 0x1Bu:
        uint64_t v94 = *a2;
        *a1 = *a2;
        swift_retain(v94);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 27LL;
        goto LABEL_61;
      case 0x1Cu:
        uint64_t v95 = *a2;
        *a1 = *a2;
        swift_retain(v95);
        uint64_t v96 = *(int *)(sub_1000031E8(&qword_1002DEF90) + 48);
        uint64_t v97 = (char *)a1 + v96;
        uint64_t v98 = (char *)a2 + v96;
        uint64_t v99 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16LL))(v97, v98, v99);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 28LL;
        goto LABEL_61;
      case 0x1Du:
        uint64_t v100 = *a2;
        *a1 = *a2;
        swift_retain(v100);
        uint64_t v101 = sub_1000031E8(&qword_1002DEF88);
        uint64_t v102 = *(int *)(v101 + 48);
        uint64_t v103 = (char *)a1 + v102;
        uint64_t v104 = (char *)a2 + v102;
        uint64_t v105 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16LL))(v103, v104, v105);
        uint64_t v106 = *(int *)(v101 + 64);
        uint64_t v107 = (char *)a1 + v106;
        uint64_t v108 = (char *)a2 + v106;
        uint64_t v109 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16LL))(v107, v108, v109);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 29LL;
        goto LABEL_61;
      case 0x1Eu:
        *a1 = *a2;
        uint64_t v110 = a2[1];
        a1[1] = v110;
        swift_bridgeObjectRetain(v110);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 30LL;
        goto LABEL_61;
      case 0x1Fu:
        uint64_t v111 = *a2;
        *a1 = *a2;
        id v112 = v111;
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 31LL;
        goto LABEL_61;
      case 0x20u:
        id v113 = *a2;
        *a1 = *a2;
        swift_retain(v113);
        uint64_t v114 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
        uint64_t v115 = (char *)a1 + v114;
        uint64_t v116 = (char *)a2 + v114;
        uint64_t v117 = type metadata accessor for URL(0LL);
        uint64_t v118 = *(void *)(v117 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1LL, v117))
        {
          uint64_t v119 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v115, v116, v117);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0LL, 1LL, v117);
        }

        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 32LL;
        goto LABEL_61;
      case 0x21u:
        uint64_t v120 = *a2;
        *a1 = *a2;
        uint64_t v121 = a2[1];
        a1[1] = v121;
        swift_retain(v120);
        swift_bridgeObjectRetain(v121);
        uint64_t v12 = a1;
        uint64_t v13 = a3;
        uint64_t v14 = 33LL;
LABEL_61:
        swift_storeEnumTagMultiPayload(v12, v13, v14);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
        break;
    }
  }

  return a1;
}

void *sub_1000421C8(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      uint64_t v6 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      uint64_t v7 = sub_1000031E8(&qword_1002DEF78);
      *(void *)((char *)a1 + *(int *)(v7 + 48)) = *(void *)((char *)a2 + *(int *)(v7 + 48));
      *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 0LL;
      goto LABEL_46;
    case 1u:
      uint64_t v11 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32LL))(a1, a2, v11);
      uint64_t v12 = *(int *)(sub_1000031E8(&qword_1002DEFB8) + 48);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for FlowOrigin(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32LL))(v13, v14, v15);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 1LL;
      goto LABEL_46;
    case 2u:
      uint64_t v16 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 32LL))(a1, a2, v16);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 2LL;
      goto LABEL_46;
    case 3u:
      uint64_t v17 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32LL))(a1, a2, v17);
      uint64_t v18 = sub_1000031E8(&qword_1002DEF48);
      *(void *)((char *)a1 + *(int *)(v18 + 48)) = *(void *)((char *)a2 + *(int *)(v18 + 48));
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 3LL;
      goto LABEL_46;
    case 6u:
      uint64_t v19 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32LL))(a1, a2, v19);
      uint64_t v20 = sub_1000031E8(&qword_1002DEF70);
      *(void *)((char *)a1 + *(int *)(v20 + 48)) = *(void *)((char *)a2 + *(int *)(v20 + 48));
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 6LL;
      goto LABEL_46;
    case 7u:
      *a1 = *a2;
      uint64_t v21 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = type metadata accessor for URL(0LL);
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1LL, v24))
      {
        uint64_t v26 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0LL, 1LL, v24);
      }

      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 7LL;
      goto LABEL_46;
    case 8u:
      *a1 = *a2;
      uint64_t v27 = *(int *)(sub_1000031E8(&qword_1002DEF58) + 48);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = type metadata accessor for URL(0LL);
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1LL, v30))
      {
        uint64_t v32 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0LL, 1LL, v30);
      }

      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 8LL;
      goto LABEL_46;
    case 0xCu:
      uint64_t v33 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32LL))(a1, a2, v33);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 12LL;
      goto LABEL_46;
    case 0xDu:
      *a1 = *a2;
      uint64_t v34 = *(int *)(sub_1000031E8(&qword_1002DEF68) + 48);
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = type metadata accessor for URL(0LL);
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1LL, v37))
      {
        uint64_t v39 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0LL, 1LL, v37);
      }

      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 13LL;
      goto LABEL_46;
    case 0xFu:
      uint64_t v40 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 32LL))(a1, a2, v40);
      uint64_t v41 = sub_1000031E8(&qword_1002DEFA8);
      *(void *)((char *)a1 + *(int *)(v41 + 48)) = *(void *)((char *)a2 + *(int *)(v41 + 48));
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 15LL;
      goto LABEL_46;
    case 0x10u:
      uint64_t v42 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 32LL))(a1, a2, v42);
      uint64_t v43 = *(int *)(sub_1000031E8(&qword_1002DEF60) + 48);
      uint64_t v44 = (char *)a1 + v43;
      id v45 = (char *)a2 + v43;
      uint64_t v46 = type metadata accessor for AdamId(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32LL))(v44, v45, v46);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 16LL;
      goto LABEL_46;
    case 0x12u:
      uint64_t v47 = type metadata accessor for URL(0LL);
      uint64_t v48 = *(void *)(v47 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v48 + 48))(a2, 1LL, v47))
      {
        uint64_t v49 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void *, void *, uint64_t))(v48 + 32))(a1, a2, v47);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(a1, 0LL, 1LL, v47);
      }

      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 18LL;
      goto LABEL_46;
    case 0x13u:
      uint64_t v50 = type metadata accessor for URL(0LL);
      uint64_t v51 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v51 + 48))(a2, 1LL, v50))
      {
        uint64_t v52 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void *, void *, uint64_t))(v51 + 32))(a1, a2, v50);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(a1, 0LL, 1LL, v50);
      }

      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 19LL;
      goto LABEL_46;
    case 0x14u:
      uint64_t v53 = type metadata accessor for URL(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 32LL))(a1, a2, v53);
      uint64_t v54 = *(int *)(sub_1000031E8(&qword_1002DEF98) + 48);
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      uint64_t v57 = type metadata accessor for MSOContext(0LL);
      uint64_t v58 = *(void *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1LL, v57))
      {
        uint64_t v59 = sub_1000031E8(&qword_1002DEF80);
        memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0LL, 1LL, v57);
      }

      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 20LL;
      goto LABEL_46;
    case 0x19u:
      *a1 = *a2;
      uint64_t v60 = *(int *)(sub_1000031E8(&qword_1002DDA20) + 48);
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      uint64_t v63 = type metadata accessor for ArcadePageUrls(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32LL))(v61, v62, v63);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 25LL;
      goto LABEL_46;
    case 0x1Au:
      uint64_t v64 = type metadata accessor for URL(0LL);
      uint64_t v65 = *(void *)(v64 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v65 + 48))(a2, 1LL, v64))
      {
        uint64_t v66 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(a1, a2, *(void *)(*(void *)(v66 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void *, void *, uint64_t))(v65 + 32))(a1, a2, v64);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(a1, 0LL, 1LL, v64);
      }

      uint64_t v86 = sub_1000031E8(&qword_1002DEF50);
      *(void *)((char *)a1 + *(int *)(v86 + 48)) = *(void *)((char *)a2 + *(int *)(v86 + 48));
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 26LL;
      goto LABEL_46;
    case 0x1Cu:
      *a1 = *a2;
      uint64_t v67 = *(int *)(sub_1000031E8(&qword_1002DEF90) + 48);
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      uint64_t v70 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32LL))(v68, v69, v70);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 28LL;
      goto LABEL_46;
    case 0x1Du:
      *a1 = *a2;
      uint64_t v71 = sub_1000031E8(&qword_1002DEF88);
      uint64_t v72 = *(int *)(v71 + 48);
      uint64_t v73 = (char *)a1 + v72;
      uint64_t v74 = (char *)a2 + v72;
      uint64_t v75 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32LL))(v73, v74, v75);
      uint64_t v76 = *(int *)(v71 + 64);
      uint64_t v77 = (char *)a1 + v76;
      uint64_t v78 = (char *)a2 + v76;
      uint64_t v79 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32LL))(v77, v78, v79);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 29LL;
      goto LABEL_46;
    case 0x20u:
      *a1 = *a2;
      uint64_t v80 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
      uint64_t v81 = (char *)a1 + v80;
      uint64_t v82 = (char *)a2 + v80;
      uint64_t v83 = type metadata accessor for URL(0LL);
      uint64_t v84 = *(void *)(v83 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1LL, v83))
      {
        uint64_t v85 = sub_1000031E8((uint64_t *)&unk_1002E1810);
        memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v81, v82, v83);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0LL, 1LL, v83);
      }

      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 32LL;
LABEL_46:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      break;
  }

  return a1;
}

void *sub_100042AD4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000609C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v6 = type metadata accessor for URL(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
        uint64_t v7 = sub_1000031E8(&qword_1002DEF78);
        *(void *)((char *)a1 + *(int *)(v7 + 48)) = *(void *)((char *)a2 + *(int *)(v7 + 48));
        *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 0LL;
        goto LABEL_47;
      case 1u:
        uint64_t v11 = type metadata accessor for URL(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32LL))(a1, a2, v11);
        uint64_t v12 = *(int *)(sub_1000031E8(&qword_1002DEFB8) + 48);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = type metadata accessor for FlowOrigin(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32LL))(v13, v14, v15);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 1LL;
        goto LABEL_47;
      case 2u:
        uint64_t v16 = type metadata accessor for URL(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 32LL))(a1, a2, v16);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 2LL;
        goto LABEL_47;
      case 3u:
        uint64_t v17 = type metadata accessor for URL(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32LL))(a1, a2, v17);
        uint64_t v18 = sub_1000031E8(&qword_1002DEF48);
        *(void *)((char *)a1 + *(int *)(v18 + 48)) = *(void *)((char *)a2 + *(int *)(v18 + 48));
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 3LL;
        goto LABEL_47;
      case 6u:
        uint64_t v19 = type metadata accessor for URL(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32LL))(a1, a2, v19);
        uint64_t v20 = sub_1000031E8(&qword_1002DEF70);
        *(void *)((char *)a1 + *(int *)(v20 + 48)) = *(void *)((char *)a2 + *(int *)(v20 + 48));
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 6LL;
        goto LABEL_47;
      case 7u:
        *a1 = *a2;
        uint64_t v21 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = type metadata accessor for URL(0LL);
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1LL, v24))
        {
          uint64_t v26 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0LL, 1LL, v24);
        }

        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 7LL;
        goto LABEL_47;
      case 8u:
        *a1 = *a2;
        uint64_t v27 = *(int *)(sub_1000031E8(&qword_1002DEF58) + 48);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for URL(0LL);
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1LL, v30))
        {
          uint64_t v32 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0LL, 1LL, v30);
        }

        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 8LL;
        goto LABEL_47;
      case 0xCu:
        uint64_t v33 = type metadata accessor for URL(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32LL))(a1, a2, v33);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 12LL;
        goto LABEL_47;
      case 0xDu:
        *a1 = *a2;
        uint64_t v34 = *(int *)(sub_1000031E8(&qword_1002DEF68) + 48);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = type metadata accessor for URL(0LL);
        uint64_t v38 = *(void *)(v37 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1LL, v37))
        {
          uint64_t v39 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0LL, 1LL, v37);
        }

        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 13LL;
        goto LABEL_47;
      case 0xFu:
        uint64_t v40 = type metadata accessor for URL(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 32LL))(a1, a2, v40);
        uint64_t v41 = sub_1000031E8(&qword_1002DEFA8);
        *(void *)((char *)a1 + *(int *)(v41 + 48)) = *(void *)((char *)a2 + *(int *)(v41 + 48));
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 15LL;
        goto LABEL_47;
      case 0x10u:
        uint64_t v42 = type metadata accessor for URL(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 32LL))(a1, a2, v42);
        uint64_t v43 = *(int *)(sub_1000031E8(&qword_1002DEF60) + 48);
        uint64_t v44 = (char *)a1 + v43;
        id v45 = (char *)a2 + v43;
        uint64_t v46 = type metadata accessor for AdamId(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32LL))(v44, v45, v46);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 16LL;
        goto LABEL_47;
      case 0x12u:
        uint64_t v47 = type metadata accessor for URL(0LL);
        uint64_t v48 = *(void *)(v47 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v48 + 48))(a2, 1LL, v47))
        {
          uint64_t v49 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v48 + 32))(a1, a2, v47);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(a1, 0LL, 1LL, v47);
        }

        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 18LL;
        goto LABEL_47;
      case 0x13u:
        uint64_t v50 = type metadata accessor for URL(0LL);
        uint64_t v51 = *(void *)(v50 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v51 + 48))(a2, 1LL, v50))
        {
          uint64_t v52 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v51 + 32))(a1, a2, v50);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(a1, 0LL, 1LL, v50);
        }

        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 19LL;
        goto LABEL_47;
      case 0x14u:
        uint64_t v53 = type metadata accessor for URL(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 32LL))(a1, a2, v53);
        uint64_t v54 = *(int *)(sub_1000031E8(&qword_1002DEF98) + 48);
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (char *)a2 + v54;
        uint64_t v57 = type metadata accessor for MSOContext(0LL);
        uint64_t v58 = *(void *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1LL, v57))
        {
          uint64_t v59 = sub_1000031E8(&qword_1002DEF80);
          memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0LL, 1LL, v57);
        }

        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 20LL;
        goto LABEL_47;
      case 0x19u:
        *a1 = *a2;
        uint64_t v60 = *(int *)(sub_1000031E8(&qword_1002DDA20) + 48);
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = type metadata accessor for ArcadePageUrls(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32LL))(v61, v62, v63);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 25LL;
        goto LABEL_47;
      case 0x1Au:
        uint64_t v64 = type metadata accessor for URL(0LL);
        uint64_t v65 = *(void *)(v64 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v65 + 48))(a2, 1LL, v64))
        {
          uint64_t v66 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(a1, a2, *(void *)(*(void *)(v66 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v65 + 32))(a1, a2, v64);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(a1, 0LL, 1LL, v64);
        }

        uint64_t v86 = sub_1000031E8(&qword_1002DEF50);
        *(void *)((char *)a1 + *(int *)(v86 + 48)) = *(void *)((char *)a2 + *(int *)(v86 + 48));
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 26LL;
        goto LABEL_47;
      case 0x1Cu:
        *a1 = *a2;
        uint64_t v67 = *(int *)(sub_1000031E8(&qword_1002DEF90) + 48);
        uint64_t v68 = (char *)a1 + v67;
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32LL))(v68, v69, v70);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 28LL;
        goto LABEL_47;
      case 0x1Du:
        *a1 = *a2;
        uint64_t v71 = sub_1000031E8(&qword_1002DEF88);
        uint64_t v72 = *(int *)(v71 + 48);
        uint64_t v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)a2 + v72;
        uint64_t v75 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32LL))(v73, v74, v75);
        uint64_t v76 = *(int *)(v71 + 64);
        uint64_t v77 = (char *)a1 + v76;
        uint64_t v78 = (char *)a2 + v76;
        uint64_t v79 = type metadata accessor for URL(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32LL))(v77, v78, v79);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 29LL;
        goto LABEL_47;
      case 0x20u:
        *a1 = *a2;
        uint64_t v80 = *(int *)(sub_1000031E8(&qword_1002E8340) + 48);
        uint64_t v81 = (char *)a1 + v80;
        uint64_t v82 = (char *)a2 + v80;
        uint64_t v83 = type metadata accessor for URL(0LL);
        uint64_t v84 = *(void *)(v83 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1LL, v83))
        {
          uint64_t v85 = sub_1000031E8((uint64_t *)&unk_1002E1810);
          memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v81, v82, v83);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0LL, 1LL, v83);
        }

        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 32LL;
LABEL_47:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
        break;
    }
  }

  return a1;
}

uint64_t sub_1000433F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48LL))();
}

uint64_t sub_1000433FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56LL))();
}

uint64_t sub_10004340C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

void sub_10004341C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    swift_getTupleTypeLayout3(v32, v4, "\b", "\b");
    v33[0] = v32;
    uint64_t v5 = type metadata accessor for FlowOrigin(319LL);
    if (v6 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v31, v4, *(void *)(v5 - 8) + 64LL);
      v33[1] = v31;
      void v33[2] = v4;
      swift_getTupleTypeLayout2(v30, v4, (char *)&value witness table for Builtin.NativeObject + 64);
      void v33[3] = v30;
      v33[4] = "\b";
      void v33[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_getTupleTypeLayout2(v29, v4, "\b");
      v33[6] = v29;
      sub_100023098(319LL, &qword_1002DF040, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
      if (v8 <= 0x3F)
      {
        uint64_t v9 = *(void *)(v7 - 8) + 64LL;
        swift_getTupleTypeLayout2(v28, "\b", v9);
        v33[7] = v28;
        swift_getTupleTypeLayout2(v27, "\b", v9);
        v33[8] = v27;
        void v33[9] = &unk_100234D00;
        v33[10] = &unk_100234D18;
        v33[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v33[12] = v4;
        swift_getTupleTypeLayout2(v26, "\b", v9);
        v33[13] = v26;
        v33[14] = "\b";
        swift_getTupleTypeLayout2(v25, v4, "\b");
        v33[15] = v25;
        uint64_t v10 = type metadata accessor for AdamId(319LL);
        if (v11 <= 0x3F)
        {
          swift_getTupleTypeLayout2(v24, v4, *(void *)(v10 - 8) + 64LL);
          v33[16] = v24;
          v33[17] = (char *)&value witness table for Builtin.NativeObject + 64;
          v33[18] = v9;
          v33[19] = v9;
          sub_100023098( 319LL,  (unint64_t *)&unk_1002DF048,  (uint64_t (*)(uint64_t))&type metadata accessor for MSOContext);
          if (v13 <= 0x3F)
          {
            swift_getTupleTypeLayout2(v23, v4, *(void *)(v12 - 8) + 64LL);
            v33[20] = v23;
            v33[21] = (char *)&value witness table for Builtin.NativeObject + 64;
            v33[22] = &unk_100234D30;
            v33[23] = (char *)&value witness table for Builtin.NativeObject + 64;
            v33[24] = (char *)&value witness table for Builtin.NativeObject + 64;
            uint64_t v14 = type metadata accessor for ArcadePageUrls(319LL);
            if (v15 <= 0x3F)
            {
              swift_getTupleTypeLayout2(v22, "\b", *(void *)(v14 - 8) + 64LL);
              v33[25] = v22;
              swift_getTupleTypeLayout2(v21, v9, "\b");
              v33[26] = v21;
              v33[27] = (char *)&value witness table for Builtin.NativeObject + 64;
              swift_getTupleTypeLayout2(v20, "\b", v4);
              v33[28] = v20;
              uint64_t v16 = type metadata accessor for ArcadeWelcomePage.ContentType(319LL);
              if (v17 <= 0x3F)
              {
                swift_getTupleTypeLayout3(v19, "\b", *(void *)(v16 - 8) + 64LL, v4);
                v33[29] = v19;
                v33[30] = &unk_100234D48;
                v33[31] = (char *)&value witness table for Builtin.UnknownObject + 64;
                swift_getTupleTypeLayout2(v18, "\b", v9);
                v33[32] = v18;
                v33[33] = &unk_100234D00;
                swift_initEnumMetadataMultiPayload(a1, 256LL, 34LL, v33);
              }
            }
          }
        }
      }
    }
  }

char *sub_100043750(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = qword_1002DF078;
  uint64_t v6 = type metadata accessor for ProductBackgroundUberView();
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6));
  unint64_t v8 = v2;
  *(void *)&v2[v5] = [v7 init];
  *(void *)&v8[qword_1002DF080] = 0LL;
  *(void *)&v8[qword_1002DF088] = 0LL;
  v8[qword_1002EE6B0] = 0;

  swift_retain(a1);
  swift_retain(a2);
  uint64_t v9 = sub_1001EDBE8(a1, a2);
  uint64_t v10 = *(void **)&v9[qword_1002EF838];
  unint64_t v11 = v9;
  id v12 = v10;
  uint64_t v13 = sub_10004387C();
  uint64_t v14 = sub_100003B6C( &qword_1002DF510,  type metadata accessor for ProductTopLockupCollectionElementsObserver,  (uint64_t)&unk_10023E068);
  CompoundScrollObserver.addChild(_:)(v13, v14);

  swift_release(v13);
  swift_release(a1);
  swift_release(a2);
  return v11;
}

uint64_t sub_10004387C()
{
  uint64_t v1 = qword_1002DF088;
  uint64_t v2 = *(void *)(v0 + qword_1002DF088);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + qword_1002DF088);
  }

  else
  {
    uint64_t v4 = type metadata accessor for ProductTopLockupCollectionElementsObserver(0LL);
    uint64_t v3 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    swift_unknownObjectWeakInit(v3 + 16, 0LL);
    swift_unknownObjectWeakInit(v3 + 24, 0LL);
    uint64_t v5 = v3 + OBJC_IVAR____TtC6Arcade42ProductTopLockupCollectionElementsObserver_productTopLockupIndexPath;
    uint64_t v6 = type metadata accessor for IndexPath(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v5, 1LL, 1LL, v6);
    *(void *)(v3 + OBJC_IVAR____TtC6Arcade42ProductTopLockupCollectionElementsObserver_productTopLockupMaxY) = 0LL;
    *(void *)(v3 + OBJC_IVAR____TtC6Arcade42ProductTopLockupCollectionElementsObserver_preferredVerticalContentOffset) = 0LL;
    swift_unknownObjectWeakAssign(v3 + 16, v0);
    uint64_t v7 = *(void *)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v7);
    uint64_t v2 = 0LL;
  }

  swift_retain(v2);
  return v3;
}

id sub_10004396C()
{
  uint64_t v1 = qword_1002DF080;
  uint64_t v2 = *(void **)(v0 + qword_1002DF080);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1002DF080);
  }

  else
  {
    id v4 = [(id)objc_opt_self(UIBlurEffect) effectWithStyle:5005];
    id v5 = [objc_allocWithZone(UIVisualEffectView) initWithEffect:v4];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0LL;
  }

  id v7 = v2;
  return v3;
}

id sub_100043A18()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v34.receiver = v0;
  v34.super_class = ObjectType;
  objc_msgSendSuper2(&v34, "viewDidLoad", v4);
  id result = [v0 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v8 = result;
  [result setDecelerationRate:UIScrollViewDecelerationRateFast];

  uint64_t v9 = *(void **)&v0[qword_1002DF078];
  id result = [v0 view];
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }

  uint64_t v10 = result;
  [result bounds];
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;

  objc_msgSend(v9, "setFrame:", v12, v14, v16, v18);
  id result = [v0 view];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  uint64_t v19 = result;
  [result insertSubview:v9 atIndex:0];

  id v20 = sub_10004396C();
  id result = [v0 view];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }

  uint64_t v21 = result;
  [result bounds];
  double v23 = v22;
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;

  objc_msgSend(v20, "setFrame:", v23, v25, v27, v29);
  id result = [v0 view];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v30 = result;
  id v31 = sub_10004396C();
  [v30 insertSubview:v31 above:v9];

  id result = [v0 collectionView];
  if (result)
  {
    uint64_t v32 = result;
    memset(v33, 0, sizeof(v33));
    static AutomationSemantics.page(name:id:)(0x50746375646F7270LL, 0xEB00000000656761LL, v33);
    sub_100006060((uint64_t)v33, (uint64_t *)&unk_1002DF680);
    UIView.setAutomationSemantics(_:)(v6);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }

LABEL_13:
  __break(1u);
  return result;
}

  *(void *)&double v13 = swift_bridgeObjectRelease(v7).n128_u64[0];
  if (*(void *)&v1[v2]) {
    [v1 addSubview:v13];
  }
  objc_msgSend(v1, "setNeedsLayout", v13);
}

  swift_bridgeObjectRelease(v5);
  double v12 = *(void *)(v2 + v4);
  *(void *)(v2 + v4) = a1;
  swift_bridgeObjectRelease(v12);
  double v13 = *(void *)(v2 + v4);
  if (!((unint64_t)v13 >> 62))
  {
    double v14 = *(void *)((v13 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    id result = swift_bridgeObjectRetain(*(void *)(v2 + v4));
    if (v14) {
      goto LABEL_15;
    }
    return swift_bridgeObjectRelease(v13);
  }

  if (v13 < 0) {
    uint64_t v19 = *(void *)(v2 + v4);
  }
  else {
    uint64_t v19 = v13 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)(v2 + v4));
  id result = _CocoaArrayWrapper.endIndex.getter(v19);
  double v14 = result;
  if (!result) {
    return swift_bridgeObjectRelease(v13);
  }
LABEL_15:
  if (v14 >= 1)
  {
    double v15 = 0LL;
    double v16 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_detailsContainerView);
    do
    {
      if ((v13 & 0xC000000000000001LL) != 0) {
        double v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13);
      }
      else {
        double v17 = *(id *)(v13 + 8 * v15 + 32);
      }
      double v18 = v17;
      ++v15;
      [v16 addSubview:v17];
    }

    while (v14 != v15);
    return swift_bridgeObjectRelease(v13);
  }

    __break(1u);
    goto LABEL_14;
  }

  swift_bridgeObjectRelease(v6);
  double v12 = *v5;
  *uint64_t v5 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v12);
  if (!((unint64_t)a1 >> 62))
  {
    double v13 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v13) {
      goto LABEL_15;
    }
LABEL_34:
    objc_msgSend(v39, "setNeedsLayout", swift_bridgeObjectRelease(a1).n128_f64[0]);
    return;
  }

  if (a1 < 0) {
    uint64_t v36 = a1;
  }
  else {
    uint64_t v36 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a1);
  double v13 = _CocoaArrayWrapper.endIndex.getter(v36);
  if (!v13) {
    goto LABEL_34;
  }
LABEL_15:
  double v14 = type metadata accessor for ArcadeWelcomeItemView();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v14);
  if (v13 >= 1)
  {
    double v15 = 0LL;
    uint64_t v37 = a1 & 0xC000000000000001LL;
    double v16 = a1;
    do
    {
      if (v37)
      {
        double v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, a1);
      }

      else
      {
        double v17 = *(void *)(a1 + 8 * v15 + 32);
        swift_retain(v17);
      }

      double v18 = (char *)[objc_allocWithZone(ObjCClassFromMetadata) init];
      uint64_t v19 = *(void **)&v18[OBJC_IVAR____TtC6Arcade21ArcadeWelcomeItemView_headlineLabel];
      ArcadeWelcomeItem.headline.getter();
      if (v20)
      {
        double v22 = v20;
        double v23 = String._bridgeToObjectiveC()();
        *(void *)&uint64_t v21 = swift_bridgeObjectRelease(v22).n128_u64[0];
      }

      else
      {
        double v23 = 0LL;
      }

      objc_msgSend(v19, "setText:", v23, v21);

      double v24 = *(void **)&v18[OBJC_IVAR____TtC6Arcade21ArcadeWelcomeItemView_bodyLabel];
      ArcadeWelcomeItem.body.getter();
      if (v25)
      {
        double v27 = v25;
        double v28 = String._bridgeToObjectiveC()();
        *(void *)&double v26 = swift_bridgeObjectRelease(v27).n128_u64[0];
      }

      else
      {
        double v28 = 0LL;
      }

      objc_msgSend(v24, "setText:", v28, v26);

      double v29 = ArcadeWelcomeItem.artwork.getter();
      uint64_t v30 = *(void *)&v18[OBJC_IVAR____TtC6Arcade21ArcadeWelcomeItemView_artwork];
      *(void *)&v18[OBJC_IVAR____TtC6Arcade21ArcadeWelcomeItemView_artwork] = v29;
      swift_release(v30);
      id v31 = *(void *)&v18[OBJC_IVAR____TtC6Arcade21ArcadeWelcomeItemView_artworkLoader];
      *(void *)&v18[OBJC_IVAR____TtC6Arcade21ArcadeWelcomeItemView_artworkLoader] = a2;
      swift_release(v31);
      objc_msgSend(v18, "setNeedsLayout", swift_retain(a2).n128_f64[0]);
      [v39 addSubview:v18];
      swift_beginAccess(v5, v40, 33LL, 0LL);
      uint64_t v32 = v18;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
      objc_super v34 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      uint64_t v33 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v34 >= v33 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1LL);
      }
      ++v15;
      uint64_t v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v32);
      specialized Array._endMutation()(v35);
      swift_endAccess(v40);

      swift_release(v17);
      a1 = v16;
    }

    while (v13 != v15);
    goto LABEL_34;
  }

  swift_bridgeObjectRelease(v4);
  double v11 = *(void *)&v1[v3];
  *(void *)&v1[v3] = a1;
  swift_bridgeObjectRelease(v11);
  double v12 = *(void *)&v1[v3];
  if (!((unint64_t)v12 >> 62))
  {
    double v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    id result = swift_bridgeObjectRetain(*(void *)&v1[v3]);
    if (v13) {
      goto LABEL_15;
    }
    return swift_bridgeObjectRelease(v12);
  }

  if (v12 < 0) {
    double v17 = *(void *)&v1[v3];
  }
  else {
    double v17 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)&v1[v3]);
  id result = _CocoaArrayWrapper.endIndex.getter(v17);
  double v13 = result;
  if (!result) {
    return swift_bridgeObjectRelease(v12);
  }
LABEL_15:
  if (v13 >= 1)
  {
    for (uint64_t j = 0LL; j != v13; ++j)
    {
      if ((v12 & 0xC000000000000001LL) != 0) {
        double v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v12);
      }
      else {
        double v15 = *(id *)(v12 + 8 * j + 32);
      }
      double v16 = v15;
      [v1 addSubview:v15];
    }

    return swift_bridgeObjectRelease(v12);
  }

  swift_bridgeObjectRelease(v4);
  double v11 = *(void *)&v1[v3];
  *(void *)&v1[v3] = a1;
  swift_bridgeObjectRelease(v11);
  double v12 = *(void *)&v1[v3];
  if (!((unint64_t)v12 >> 62))
  {
    double v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    id result = (id)swift_bridgeObjectRetain(*(void *)&v1[v3]);
    if (v13) {
      goto LABEL_15;
    }
LABEL_25:
    swift_bridgeObjectRelease(v12);
    return [v1 setNeedsLayout];
  }

  if (v12 < 0) {
    double v17 = *(void *)&v1[v3];
  }
  else {
    double v17 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)&v1[v3]);
  id result = (id)_CocoaArrayWrapper.endIndex.getter(v17);
  double v13 = (uint64_t)result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_15:
  if (v13 >= 1)
  {
    for (uint64_t j = 0LL; j != v13; ++j)
    {
      if ((v12 & 0xC000000000000001LL) != 0) {
        double v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v12);
      }
      else {
        double v15 = *(id *)(v12 + 8 * j + 32);
      }
      double v16 = v15;
      [v1 addSubview:v15];
    }

    goto LABEL_25;
  }

  swift_bridgeObjectRelease(v5);
  double v11 = *v4;
  *double v4 = a1;
  swift_bridgeObjectRelease(v11);
  double v12 = *v4;
  id v31 = *v4;
  double v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  double v12 = swift_bridgeObjectRetain(v12);
  uint64_t v33 = v13;
  if (v13)
  {
    do
    {
      double v14 = 0LL;
      uint64_t v32 = (id)v2;
      uint64_t v30 = v31 + 32;
      while (1)
      {
        if ((v31 & 0xC000000000000001LL) != 0)
        {
          double v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v31);
        }

        else
        {
          if (v14 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8LL) + 0x10)) {
            goto LABEL_37;
          }
          double v12 = (uint64_t)*(id *)(v30 + 8 * v14);
        }

        double v17 = (char *)v12;
        double v18 = __OFADD__(v14, 1LL);
        uint64_t v19 = v14 + 1;
        if (v18) {
          break;
        }
        uint64_t v35 = v19;
        v39.receiver = (id)v2;
        v39.super_class = ObjectType;
        id v20 = objc_msgSendSuper2(&v39, "overrideUserInterfaceStyle");
        uint64_t v21 = (objc_class *)type metadata accessor for InformationColumnView();
        v38.receiver = v17;
        v38.super_class = v21;
        objc_msgSendSuper2(&v38, "setOverrideUserInterfaceStyle:", v20);
        uint64_t v2 = *(void *)&v17[OBJC_IVAR____TtC6Arcade21InformationColumnView_annotations];
        if ((unint64_t)v2 >> 62)
        {
          if (v2 < 0) {
            double v28 = *(void *)&v17[OBJC_IVAR____TtC6Arcade21InformationColumnView_annotations];
          }
          else {
            double v28 = v2 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain(*(void *)&v17[OBJC_IVAR____TtC6Arcade21InformationColumnView_annotations]);
          double v12 = _CocoaArrayWrapper.endIndex.getter(v28);
          double v22 = v12;
          if (!v12) {
            goto LABEL_16;
          }
        }

        else
        {
          double v22 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
          double v12 = swift_bridgeObjectRetain(*(void *)&v17[OBJC_IVAR____TtC6Arcade21InformationColumnView_annotations]);
          if (!v22) {
            goto LABEL_16;
          }
        }

        if (v22 < 1) {
          goto LABEL_36;
        }
        double v23 = 0LL;
        do
        {
          if ((v2 & 0xC000000000000001LL) != 0) {
            double v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v2);
          }
          else {
            double v24 = *(id *)(v2 + 8 * v23 + 32);
          }
          double v25 = v24;
          ++v23;
          v37.receiver = v17;
          v37.super_class = v21;
          double v26 = objc_msgSendSuper2(&v37, "overrideUserInterfaceStyle", v30);
          double v27 = (objc_class *)type metadata accessor for AnnotationCollectionViewCell(0LL);
          v36.receiver = v25;
          v36.super_class = v27;
          objc_msgSendSuper2(&v36, "setOverrideUserInterfaceStyle:", v26);
          sub_1001AF9B8(0);
        }

        while (v22 != v23);
LABEL_16:
        *(void *)&double v15 = swift_bridgeObjectRelease(v2).n128_u64[0];
        uint64_t v2 = (uint64_t)v32;
        double v16 = objc_msgSend(v32, "contentView", v15);
        [v16 addSubview:v17];

        double v14 = v35;
        if (v35 == v33) {
          goto LABEL_42;
        }
      }

      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      if (v12 < 0) {
        double v29 = v12;
      }
      else {
        double v29 = v12 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v12);
      double v12 = _CocoaArrayWrapper.endIndex.getter(v29);
      uint64_t v33 = v12;
    }

    while (v12);
  }

  if (a2 < 0) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a2);
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a2);
  if (!v3) {
    return 0LL;
  }
LABEL_3:
  double v4 = type metadata accessor for Artwork(0LL);
  for (unint64_t i = 0LL; ; ++i)
  {
    if ((a2 & 0xC000000000000001LL) != 0)
    {
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
    }

    else
    {
      uint64_t v6 = *(void *)(a2 + 8 * i + 32);
      swift_retain(v6);
    }

    double v12 = v6;
    id v7 = sub_100003B6C( &qword_1002E4840,  (uint64_t (*)(uint64_t))&type metadata accessor for Artwork,  (uint64_t)&protocol conformance descriptor for Artwork);
    unint64_t v8 = dispatch thunk of static Equatable.== infix(_:_:)(&v12, &v13, v4, v7);
    swift_release(v6);
    if ((v8 & 1) != 0) {
      break;
    }
    uint64_t v9 = i + 1;
    if (__OFADD__(i, 1LL))
    {
      __break(1u);
      goto LABEL_13;
    }

    if (v9 == v3) {
      return 0LL;
    }
  }

  return i;
}

  swift_bridgeObjectRelease(a3);
  return v18;
}

  swift_bridgeObjectRelease_n(v19, 2LL);
  double v26 = *v18;
  char *v18 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v26);
  double v27 = v81;
  sub_10001027C(v82, v81, (uint64_t *)&unk_1002EB788);
  double v29 = v76;
  double v28 = v77;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v27, 1LL, v77) == 1)
  {
    sub_100006060(v27, (uint64_t *)&unk_1002EB788);
    double v15 = (char *)OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_areButtonsEnabled;
    uint64_t v19 = (uint64_t)v86;
    v86[OBJC_IVAR____TtC6Arcade20PageFacetsHeaderView_areButtonsEnabled] = 0;
    uint64_t v21 = *v18;
    if (!((unint64_t)*v18 >> 62))
    {
      uint64_t v30 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(*v18);
      if (v30)
      {
LABEL_16:
        if (v30 >= 1)
        {
          for (uint64_t j = 0LL; j != v30; ++j)
          {
            if ((v21 & 0xC000000000000001LL) != 0) {
              uint64_t v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v21);
            }
            else {
              uint64_t v32 = *(id *)(v21 + 8 * j + 32);
            }
            uint64_t v33 = v32;
            [v32 setEnabled:v15[v19]];
          }

          goto LABEL_46;
        }

        __break(1u);
        goto LABEL_53;
      }

  swift_bridgeObjectRelease(v4);
  double v11 = *(void *)&v1[v3];
  *(void *)&v1[v3] = a1;
  swift_bridgeObjectRelease(v11);
  double v12 = *(void *)&v1[v3];
  if (!((unint64_t)v12 >> 62))
  {
    double v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    id result = (id)swift_bridgeObjectRetain(*(void *)&v1[v3]);
    if (v13) {
      goto LABEL_15;
    }
    return objc_msgSend(v1, "setNeedsLayout", swift_bridgeObjectRelease(v12).n128_f64[0]);
  }

  if (v12 < 0) {
    double v17 = *(void *)&v1[v3];
  }
  else {
    double v17 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)&v1[v3]);
  id result = (id)_CocoaArrayWrapper.endIndex.getter(v17);
  double v13 = (uint64_t)result;
  if (!result) {
    return objc_msgSend(v1, "setNeedsLayout", swift_bridgeObjectRelease(v12).n128_f64[0]);
  }
LABEL_15:
  if (v13 >= 1)
  {
    for (uint64_t j = 0LL; j != v13; ++j)
    {
      if ((v12 & 0xC000000000000001LL) != 0) {
        double v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v12);
      }
      else {
        double v15 = *(id *)(v12 + 8 * j + 32);
      }
      double v16 = v15;
      [v1 addSubview:v15];
    }

    return objc_msgSend(v1, "setNeedsLayout", swift_bridgeObjectRelease(v12).n128_f64[0]);
  }

void sub_100043CD4(void *a1)
{
  id v1 = a1;
  sub_100043A18();
}

void sub_100043D08()
{
  v26.receiver = v0;
  v26.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v26, "viewWillLayoutSubviews");
  id v1 = *(void **)&v0[qword_1002DF078];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }

  uint64_t v3 = v2;
  [v2 bounds];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  objc_msgSend(v1, "setFrame:", v5, v7, v9, v11);
  id v12 = sub_10004396C();
  id v13 = [v0 view];
  if (!v13)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }

  double v14 = v13;
  [v13 bounds];
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;

  objc_msgSend(v12, "setFrame:", v16, v18, v20, v22);
  id v23 = [v0 view];
  if (!v23)
  {
LABEL_10:
    __break(1u);
    return;
  }

  double v24 = v23;
  if (v0[qword_1002EE6B0]) {
    uint64_t v25 = 2LL;
  }
  else {
    uint64_t v25 = 1LL;
  }
  [v23 setOverrideUserInterfaceStyle:v25];
}

void sub_100043E80(void *a1)
{
  id v1 = a1;
  sub_100043D08();
}

uint64_t sub_100043EB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType(v1);
  __int128 v28 = xmmword_1002339B0;
  uint64_t v4 = sub_100003B6C( &qword_1002DF540,  type metadata accessor for ProductDiffablePageViewController,  (uint64_t)&unk_100237438);
  uint64_t v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  void v29[3] = swift_getObjectType(v5);
  v29[0] = v5;
  uint64_t v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v30[3] = swift_getObjectType(v6);
  v30[0] = v6;
  sub_100008364((uint64_t)v29, (uint64_t)v26);
  sub_100008364((uint64_t)v26, (uint64_t)v25);
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002E1D80);
  uint64_t v8 = sub_1000031E8(&qword_1002DE740);
  if ((swift_dynamicCast(&v27, v25, v7, v8, 6LL) & 1) == 0) {
    __int128 v27 = 0uLL;
  }
  _s6Arcade17PillOverlayLayoutVwxx_0(v26);
  if ((void)v27)
  {
    __int128 v23 = v27;
    double v9 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0) {
      double v9 = sub_10001A5A0(0LL, _swiftEmptyArrayStorage[2] + 1LL, 1, _swiftEmptyArrayStorage);
    }
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      double v9 = sub_10001A5A0((void *)(v10 > 1), v11 + 1, 1, v9);
    }
    __int128 v9[2] = v11 + 1;
    *(_OWORD *)&v9[2 * v11 + 4] = v23;
  }

  else
  {
    double v9 = _swiftEmptyArrayStorage;
  }

  sub_100008364((uint64_t)v30, (uint64_t)v26);
  sub_100008364((uint64_t)v26, (uint64_t)v25);
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002E1D80);
  uint64_t v13 = sub_1000031E8(&qword_1002DE740);
  if ((swift_dynamicCast(&v27, v25, v12, v13, 6LL) & 1) == 0) {
    __int128 v27 = 0uLL;
  }
  _s6Arcade17PillOverlayLayoutVwxx_0(v26);
  if ((void)v27)
  {
    __int128 v24 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0) {
      double v9 = sub_10001A5A0(0LL, v9[2] + 1LL, 1, v9);
    }
    unint64_t v15 = v9[2];
    unint64_t v14 = v9[3];
    __int128 v16 = v24;
    if (v15 >= v14 >> 1)
    {
      double v22 = sub_10001A5A0((void *)(v14 > 1), v15 + 1, 1, v9);
      __int128 v16 = v24;
      double v9 = v22;
    }

    __int128 v9[2] = v15 + 1;
    *(_OWORD *)&v9[2 * v15 + 4] = v16;
  }

  swift_arrayDestroy(v29, v28, (char *)&type metadata for Any + 8);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v26, ObjectType, v4);
  uint64_t v17 = *(void *)(v1 + qword_1002EF848);
  uint64_t v18 = type metadata accessor for ProductPageLayoutSectionProvider(0LL);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  sub_10001F010((uint64_t)v26, (uint64_t)v25);
  __n128 v19 = swift_retain(v17);
  uint64_t v20 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)( v25,  v9,  v17,  0LL,  v19);
  uint64_t result = _s6Arcade17PillOverlayLayoutVwxx_0(v26);
  a1[3] = v18;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = v20;
  return result;
}

unint64_t sub_1000441D8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for ProductPageShelfLayoutSpacingProvider;
  unint64_t result = sub_100044FF0();
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_100044208()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_objectGraph);
  uint64_t v2 = type metadata accessor for ProductPageShelfSupplementaryProvider();
  uint64_t v3 = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  sub_100003B6C( &qword_1002DF530,  (uint64_t (*)(uint64_t))type metadata accessor for ProductPageShelfSupplementaryProvider,  (uint64_t)&unk_10023C268);
  swift_retain(v1);
  return v3;
}

uint64_t sub_100044288()
{
  uint64_t v1 = sub_1000031E8(&qword_1002E1D90);
  uint64_t v2 = swift_allocObject(v1, 80LL, 7LL);
  *(_OWORD *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
  *(void *)(v2 + 32) = sub_1000BF2B0();
  *(void *)(v2 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v3;
  uint64_t v4 = sub_10004387C();
  uint64_t v5 = sub_100003B6C( &qword_1002DF520,  type metadata accessor for ProductTopLockupCollectionElementsObserver,  (uint64_t)&unk_10023E0C0);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = v5;
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade30UberedCollectionViewController_artworkLoader);
  uint64_t v7 = type metadata accessor for ProductMediaCollectionElementsObserver();
  uint64_t v8 = swift_allocObject(v7, 32LL, 7LL);
  swift_unknownObjectWeakInit(v8 + 16, 0LL);
  swift_unknownObjectWeakAssign(v9, v0);
  *(void *)(v8 + 24) = v6;
  uint64_t v10 = sub_100003B6C( &qword_1002DF528,  (uint64_t (*)(uint64_t))type metadata accessor for ProductMediaCollectionElementsObserver,  (uint64_t)&unk_10023F2F8);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = v10;
  uint64_t v11 = type metadata accessor for CompoundCollectionElementsObserver(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  swift_retain(v6);
  return CompoundCollectionElementsObserver.init(children:)(v2);
}

void sub_10004439C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000031E8(&qword_1002DF518);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_1001792EC(a1);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4) == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    uint64_t v8 = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = *v7;
    uint64_t v10 = ShelfBasedProductPage.uber.getter(v8);
    sub_100212A64(v10, *(void *)&v1[OBJC_IVAR____TtC6Arcade29StoreCollectionViewController_objectGraph], v11);
    swift_release(v9);
    __n128 v13 = swift_release(v10);
  }

  else
  {
    uint64_t v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  }

  char v14 = ProductDiffablePagePresenter.hasDarkUserInterfaceStyle.getter(v12, v13);
  uint64_t v15 = qword_1002EE6B0;
  int v16 = v1[qword_1002EE6B0];
  v1[qword_1002EE6B0] = v14 & 1;
  if (((((v14 & 1) == 0) ^ v16) & 1) == 0)
  {
    id v17 = [v1 view];
    if (v17)
    {
      uint64_t v18 = v17;
      if (v2[v15]) {
        uint64_t v19 = 2LL;
      }
      else {
        uint64_t v19 = 1LL;
      }
      [v17 setOverrideUserInterfaceStyle:v19];
    }

    else
    {
      __break(1u);
    }
  }

void sub_100044530(uint64_t a1)
{
  v23.receiver = v1;
  v23.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v23, "scrollViewDidScroll:", a1);
  id v3 = [v1 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }

  uint64_t v4 = v3;
  [v3 bounds];
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;

  v24.origin.CGFloat x = v6;
  v24.origin.CGFloat y = v8;
  v24.size.CGFloat width = v10;
  v24.size.CGFloat height = v12;
  double Height = CGRectGetHeight(v24);
  id v14 = [v1 collectionView];
  if (!v14)
  {
LABEL_7:
    __break(1u);
    return;
  }

  uint64_t v15 = v14;
  double v16 = Height * 0.75;
  [v14 contentOffset];
  double v18 = v17;

  double v19 = v18 / v16;
  id v20 = sub_10004396C();
  double v21 = v20;
  double v22 = 0.0;
  if (v19 >= 0.0) {
    double v22 = v19;
  }
  objc_msgSend(v20, "setAlpha:", fmin(v22, 1.0));
}

void sub_100044650(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_100044530((uint64_t)v4);
}

void sub_1000446A4(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10004387C();
  sub_10013CEBC(a1, a2);
  swift_release(v8);
  uint64_t v9 = sub_10004387C();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v9 + 24);
  if (!Strong)
  {
    swift_release(v9);
    goto LABEL_15;
  }

  double v11 = (void *)Strong;
  id v12 = [a2 nextFocusedView];
  if (!v12)
  {
    swift_release(v9);

    goto LABEL_15;
  }

  __n128 v13 = v12;
  unsigned __int8 v14 = [v12 isDescendantOfView:v11];
  swift_release(v9);

  if ((v14 & 1) == 0
    || (uint64_t v15 = *(void *)(v4 + qword_1002DF078),
        uint64_t v16 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer,
        (double v17 = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong( *(void *)(v15 + OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer)
                                  + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view)) != 0LL)
    && (int v18 = v17[qword_1002F0800], v17, v18 == 1))
  {
LABEL_15:
    uint64_t v26 = *(void *)(v4 + qword_1002DF078);
    uint64_t v27 = OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer;
    __int128 v28 = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong( *(void *)(v26 + OBJC_IVAR____TtC6Arcade25ProductBackgroundUberView_videoContainer)
                             + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (v28)
    {
      int v29 = v28[qword_1002F0800];

      if (!v29) {
        return;
      }
    }

    double v19 = (_BYTE *)swift_unknownObjectWeakLoadStrong(*(void *)(v26 + v27) + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (!v19) {
      return;
    }
    v19[qword_1002F0800] = 0;
    if (v19[qword_1002F0818] != 1)
    {
      id v31 = v19;
      sub_10012A580();
      double v19 = v31;
    }

void sub_1000449E0(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = a1;
  sub_1000446A4(v8, v9, v10);
}

void sub_100044A64(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v9 = a1;
  uint64_t v7 = sub_10004387C();
  uint64_t v8 = *(void *)(v7
                 + OBJC_IVAR____TtC6Arcade42ProductTopLockupCollectionElementsObserver_preferredVerticalContentOffset);
  swift_release(v7);
  *(void *)(a4 + 8) = v8;
}

uint64_t sub_100044AD4(uint64_t a1)
{
  uint64_t v30 = type metadata accessor for URL(0LL);
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002E8330);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v8);
  id v10 = (uint64_t *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v11);
  __n128 v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v29 - v15;
  __chkstk_darwin(v17);
  double v19 = (char *)&v29 - v18;
  sub_10000611C(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v8) != 7)
  {
    sub_10000609C((uint64_t)v10);
LABEL_9:
    char v25 = 0;
    return v25 & 1;
  }

  swift_release(*v10);
  uint64_t v20 = sub_1000031E8(&qword_1002E8340);
  uint64_t v21 = sub_100044F60((uint64_t)v10 + *(int *)(v20 + 48), (uint64_t)v19);
  DiffablePagePresenter.pageUrl.getter(v21);
  uint64_t v22 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_100044FA8((uint64_t)v16, (uint64_t)v7);
  sub_100044FA8((uint64_t)v19, v22);
  objc_super v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  uint64_t v24 = v30;
  if (v23((uint64_t)v7, 1LL, v30) != 1)
  {
    sub_100044FA8((uint64_t)v7, (uint64_t)v13);
    if (v23(v22, 1LL, v24) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v22, v24);
      uint64_t v27 = sub_100003B6C( (unint64_t *)&unk_1002EA720,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      char v25 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v4, v24, v27);
      __int128 v28 = *(void (**)(char *, uint64_t))(v2 + 8);
      v28(v4, v24);
      sub_100006060((uint64_t)v16, (uint64_t *)&unk_1002E1810);
      sub_100006060((uint64_t)v19, (uint64_t *)&unk_1002E1810);
      v28(v13, v24);
      sub_100006060((uint64_t)v7, (uint64_t *)&unk_1002E1810);
      return v25 & 1;
    }

    sub_100006060((uint64_t)v16, (uint64_t *)&unk_1002E1810);
    sub_100006060((uint64_t)v19, (uint64_t *)&unk_1002E1810);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v24);
    goto LABEL_8;
  }

  sub_100006060((uint64_t)v16, (uint64_t *)&unk_1002E1810);
  sub_100006060((uint64_t)v19, (uint64_t *)&unk_1002E1810);
  if (v23(v22, 1LL, v24) != 1)
  {
LABEL_8:
    sub_100006060((uint64_t)v7, (uint64_t *)&unk_1002E8330);
    goto LABEL_9;
  }

  sub_100006060((uint64_t)v7, (uint64_t *)&unk_1002E1810);
  char v25 = 1;
  return v25 & 1;
}

uint64_t sub_100044E3C()
{
  return swift_release(*(void *)(v0 + qword_1002DF088));
}

uint64_t sub_100044E78(uint64_t a1)
{
  return swift_release(*(void *)(a1 + qword_1002DF088));
}

uint64_t type metadata accessor for ProductDiffablePageViewController(uint64_t a1)
{
  uint64_t result = qword_1002DF0B8;
  if (!qword_1002DF0B8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductDiffablePageViewController);
  }
  return result;
}

uint64_t sub_100044EFC(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = "\b";
  v2[2] = "\b";
  v2[3] = &unk_100234DB0;
  return swift_initClassMetadata2(a1, 256LL, 4LL, v2, a1 + 1016);
}

uint64_t sub_100044F54()
{
  return type metadata accessor for ProductDiffablePageViewController(0LL);
}

uint64_t sub_100044F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100044FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_100044FF0()
{
  unint64_t result = qword_1002DF538;
  if (!qword_1002DF538)
  {
    unint64_t result = swift_getWitnessTable(&unk_100241FF8, &type metadata for ProductPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_1002DF538);
  }

  return result;
}

uint64_t sub_100045034()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100045058()
{
}

uint64_t sub_100045060(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100045070(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

double sub_100045078( double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = type metadata accessor for AchievementSummaryLayout.Metrics(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DCCB0 != -1) {
    swift_once(&qword_1002DCCB0, sub_100130140);
  }
  uint64_t v15 = sub_1000061F4(v11, (uint64_t)qword_1002F0878);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  double v16 = static AchievementSummaryLayout.estimatedMeasurements(fitting:using:in:)(v14, a8, ceil(a1 * 0.5), a2);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v16;
}

id sub_100045174(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_100045308(*a1, a2, a4, a5, a6);
}

double sub_100045188@<D0>(uint64_t a1@<X1>, void *a2@<X4>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10 = type metadata accessor for AchievementSummaryLayout.Metrics(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DCCB0 != -1) {
    swift_once(&qword_1002DCCB0, sub_100130140);
  }
  uint64_t v14 = sub_1000061F4(v10, (uint64_t)qword_1002F0878);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  swift_getObjectType(a2);
  double v15 = static AchievementSummaryLayout.estimatedMeasurements(fitting:using:in:)(v13, a2, a4, a5);
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t, double))(v11 + 8))(v13, v10, v15);
  double v18 = (PageTraitEnvironment.pageContentSize.getter() + -80.0) / 3.0;
  [a2 pageMarginInsets];
  *(void *)a3 = v19;
  *(void *)(a3 + 8) = v20;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v21;
  *(void *)(a3 + 24) = v22;
  *(double *)(a3 + 32) = v18;
  *(void *)(a3 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v17;
  double result = 40.0;
  *(_OWORD *)(a3 + 48) = xmmword_1002346C0;
  *(_BYTE *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = a1;
  return result;
}

uint64_t sub_1000452DC()
{
  return sub_100003B6C( &qword_1002DF548,  (uint64_t (*)(uint64_t))&type metadata accessor for AchievementSummary,  (uint64_t)&protocol conformance descriptor for AchievementSummary);
}

id sub_100045308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = type metadata accessor for AchievementGroupView.Size(0LL);
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v68 = v8;
  __chkstk_darwin(v8);
  uint64_t v69 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000031E8(&qword_1002DF598);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Achievement(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v66 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v70 = (char *)&v65 - v18;
  uint64_t v19 = *(void **)&v5[OBJC_IVAR____TtC6Arcade40AchievementSummaryCardCollectionViewCell_numberCompletedLabel];
  Swift::Int v20 = AchievementSummary.completedAchievements.getter(v17);
  v21._object = (void *)0x8000000100244FF0LL;
  v21._uint64_t countAndFlagsBits = 0xD000000000000032LL;
  v22._uint64_t countAndFlagsBits = 0LL;
  v22._object = (void *)0xE000000000000000LL;
  object = localizedStringWithCount(_:count:comment:)(v21, v20, v22)._object;
  NSString v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setText:", v24, swift_bridgeObjectRelease(object).n128_f64[0]);

  id v25 = [a5 traitCollection];
  LOBYTE(v24) = UITraitCollection.prefersRightToLeftLayouts.getter();

  uint64_t v26 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40AchievementSummaryCardCollectionViewCell_outOfTotalLabel];
  Swift::Int v27 = ((uint64_t (*)(void))AchievementSummary.totalAchievements.getter)();
  v28._uint64_t countAndFlagsBits = 0xD000000000000034LL;
  v28._object = (void *)0x8000000100245030LL;
  v29._uint64_t countAndFlagsBits = 0LL;
  v29._object = (void *)0xE000000000000000LL;
  Swift::String v30 = localizedStringWithCount(_:count:comment:)(v28, v27, v29);
  else {
    uint64_t v31 = 799703266LL;
  }
  unint64_t v71 = v31 & 0xFFFF0000FFFFFFFFLL | 0x2000000000LL;
  unint64_t v72 = 0xA500000000000000LL;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v30._object);
  unint64_t v32 = v72;
  swift_bridgeObjectRetain(v72);
  v33._uint64_t countAndFlagsBits = 11305186LL;
  v33._object = (void *)0xA300000000000000LL;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v32);
  unint64_t v34 = v72;
  NSString v35 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "setText:", v35, swift_bridgeObjectRelease(v34).n128_f64[0]);

  uint64_t v36 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40AchievementSummaryCardCollectionViewCell_completedLabel];
  AchievementSummary.completedText.getter();
  uint64_t v38 = v37;
  NSString v39 = String._bridgeToObjectiveC()();
  objc_msgSend(v36, "setText:", v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

  uint64_t v40 = AchievementSummary.achievements.getter();
  uint64_t v41 = v40;
  if (*(void *)(v40 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))( v12,  v40 + ((*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)),  v13);
    uint64_t v42 = 0LL;
  }

  else
  {
    uint64_t v42 = 1LL;
  }

  uint64_t v43 = v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v42, 1LL, v13);
  __n128 v44 = swift_bridgeObjectRelease(v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48))(v12, 1LL, v13, v44) == 1)
  {
    sub_100045800((uint64_t)v12);
    uint64_t v45 = OBJC_IVAR____TtC6Arcade40AchievementSummaryCardCollectionViewCell_achievementGroupView;
    uint64_t v46 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40AchievementSummaryCardCollectionViewCell_achievementGroupView];
    if (v46)
    {
      [v46 removeFromSuperview];
      uint64_t v47 = *(void **)&v6[v45];
    }

    else
    {
      uint64_t v47 = 0LL;
    }

    *(void *)&v6[v45] = 0LL;

    uint64_t v57 = *(void **)&v6[v45];
    if (v57)
    {
      id v58 = v57;
      id v59 = [v6 contentView];
      [v59 addSubview:v58];
    }
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v43, v12, v13);
    uint64_t v48 = v66;
    uint64_t v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 16))(v66, v43, v13);
    BOOL v50 = AchievementSummary.totalAchievements.getter(v49) > 1;
    uint64_t v51 = v69;
    (*(void (**)(char *, void, uint64_t))(v67 + 104))( v69,  enum case for AchievementGroupView.Size.tv(_:),  v68);
    id v52 = objc_allocWithZone((Class)type metadata accessor for AchievementGroupView(0LL));
    uint64_t v53 = (void *)AchievementGroupView.init(visibleModel:showSecondCard:cardSize:)(v48, v50, v51);
    uint64_t v54 = OBJC_IVAR____TtC6Arcade40AchievementSummaryCardCollectionViewCell_achievementGroupView;
    uint64_t v55 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40AchievementSummaryCardCollectionViewCell_achievementGroupView];
    if (v55)
    {
      [v55 removeFromSuperview];
      uint64_t v56 = *(void **)&v6[v54];
    }

    else
    {
      uint64_t v56 = 0LL;
    }

    *(void *)&v6[v54] = v53;
    id v60 = v53;

    uint64_t v61 = *(void **)&v6[v54];
    if (v61)
    {
      id v62 = v61;
      id v63 = [v6 contentView];
      [v63 addSubview:v62];
    }

    else
    {
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v43, v13);
  }

  return [v6 setNeedsLayout];
}

uint64_t sub_100045800(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8(&qword_1002DF598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

double sub_100045840(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, double a6, double a7)
{
  uint64_t v89 = a4;
  uint64_t v88 = a3;
  id v86 = a2;
  uint64_t v93 = type metadata accessor for TVFramedMediaLayout(0LL);
  __chkstk_darwin(v93);
  uint64_t v13 = (void *)((char *)v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v91 = type metadata accessor for FramedMediaCaptionViewLayout.Metrics(0LL);
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v92 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for FramedMediaCaptionViewLayout(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v87 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v85 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  Swift::Int v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for TVFramedMediaLayout.Metrics(0LL);
  __chkstk_darwin(v21);
  objc_super v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v7 + 632))(a1);
  if (!v24) {
    return 0.0;
  }
  uint64_t v25 = v24;
  uint64_t v81 = v18;
  uint64_t ObjectType = swift_getObjectType(a5);
  id v27 = [a5 traitCollection];
  uint64_t v79 = v25;
  double v28 = Artwork.size.getter(v27);
  AspectRatio.init(_:_:)(v29, v28);
  if (qword_1002DC408 != -1) {
    swift_once(&qword_1002DC408, sub_100045FA8);
  }
  uint64_t v82 = v16;
  uint64_t v83 = v15;
  uint64_t v30 = qword_1002DF5A0;
  uint64_t v31 = (uint64_t *)&v23[*(int *)(v21 + 20)];
  v31[3] = (uint64_t)&type metadata for CGFloat;
  v31[4] = (uint64_t)&protocol witness table for CGFloat;
  *uint64_t v31 = v30;
  uint64_t v80 = v23;
  uint64_t v84 = (uint64_t)a5;
  uint64_t v78 = ObjectType;
  v32.n128_f64[0] = sub_1000812BC((uint64_t)v23, (uint64_t)a5, a6, a7);
  double v33 = v32.n128_f64[0];
  double v35 = v34;
  uint64_t v36 = type metadata accessor for LayoutViewPlaceholder(0LL, v32);
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  uint64_t v77 = LayoutViewPlaceholder.init(representing:)(v33, v35);
  uint64_t v38 = sub_100006028(0LL, (unint64_t *)&qword_1002E0470, &OBJC_CLASS___UIFont_ptr);
  if (qword_1002DC810 != -1) {
    swift_once(&qword_1002DC810, sub_100071BD4);
  }
  uint64_t v76 = type metadata accessor for FontUseCase(0LL, v37);
  uint64_t v39 = sub_1000061F4(v76, (uint64_t)qword_1002EF480);
  v75[1] = v38;
  uint64_t v40 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v39, v27);
  uint64_t v41 = type metadata accessor for Feature(0LL);
  v98[3] = v41;
  uint64_t v42 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  id v94 = v27;
  uint64_t v43 = v42;
  v98[4] = v42;
  __n128 v44 = sub_100009D54(v98);
  uint64_t v45 = enum case for Feature.measurement_with_labelplaceholder(_:);
  uint64_t v46 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104LL);
  v46(v44, enum case for Feature.measurement_with_labelplaceholder(_:), v41);
  id v47 = (id)v40;
  LOBYTE(v4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = isFeatureEnabled(_:)(v98);
  _s6Arcade17PillOverlayLayoutVwxx_0(v98);
  id v48 = v86;
  id v49 = v86;
  id v86 = v47;
  uint64_t v50 = LabelPlaceholderCompatibility.init(attributedText:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v48,  v47,  4LL,  0LL,  0LL,  2LL,  0LL,  v40 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v98, v50);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v85 + 8);
  uint64_t v52 = v87;
  v51(v20, v87);
  if (qword_1002DC818 != -1) {
    swift_once(&qword_1002DC818, sub_100071BEC);
  }
  uint64_t v53 = sub_1000061F4(v76, (uint64_t)qword_1002EF498);
  uint64_t v54 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v53, v94);
  v97[3] = v41;
  v97[4] = v43;
  uint64_t v55 = sub_100009D54(v97);
  v46(v55, v45, v41);
  id v56 = (id)v54;
  LOBYTE(v54) = isFeatureEnabled(_:)(v97);
  _s6Arcade17PillOverlayLayoutVwxx_0(v97);
  uint64_t v57 = v89;
  swift_bridgeObjectRetain(v89);
  uint64_t v58 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v88,  v57,  v56,  4LL,  0LL,  0LL,  1LL,  0LL,  v54 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v97, v58);
  v51(v20, v52);
  double v59 = a7 - v35;
  if (qword_1002DD0A8 != -1) {
    swift_once(&qword_1002DD0A8, sub_1001BE500);
  }
  uint64_t v60 = v91;
  uint64_t v61 = sub_1000061F4(v91, (uint64_t)qword_1002F15B0);
  id v62 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v92, v61, v60);
  sub_10001F010((uint64_t)v98, (uint64_t)v96);
  sub_10001F010((uint64_t)v97, (uint64_t)v95);
  id v63 = v81;
  FramedMediaCaptionViewLayout.init(metrics:captionTextView:ordinalTextView:)(v62, v96, v95);
  uint64_t v64 = sub_100003B6C( &qword_1002DF5F8,  (uint64_t (*)(uint64_t))&type metadata accessor for FramedMediaCaptionViewLayout,  (uint64_t)&protocol conformance descriptor for FramedMediaCaptionViewLayout);
  uint64_t v65 = v84;
  uint64_t v66 = v83;
  double v67 = dispatch thunk of Measurable.measurements(fitting:in:)(v84, v83, v64, v33, v59);
  double v69 = v68;
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  uint64_t v70 = LayoutViewPlaceholder.init(representing:)(v67, v69);
  uint64_t v71 = (uint64_t)v80;
  sub_100046E20((uint64_t)v80, (uint64_t)v13 + *(int *)(v93 + 24));
  void v13[3] = v36;
  v13[4] = (uint64_t)&protocol witness table for LayoutViewPlaceholder;
  uint64_t v72 = v77;
  uint64_t *v13 = v77;
  v13[8] = v36;
  v13[9] = (uint64_t)&protocol witness table for LayoutViewPlaceholder;
  v13[5] = v70;
  swift_retain(v72);
  swift_retain(v70);
  double v73 = sub_100081458(v65, v13, v33, a7);

  swift_release(v72);
  swift_release(v70);
  swift_release(v79);

  sub_100046E64((uint64_t)v13, type metadata accessor for TVFramedMediaLayout);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v63, v66);
  _s6Arcade17PillOverlayLayoutVwxx_0(v97);
  _s6Arcade17PillOverlayLayoutVwxx_0(v98);
  sub_100046E64(v71, type metadata accessor for TVFramedMediaLayout.Metrics);
  return v73;
}

id sub_100045F70()
{
  id result = [(id)objc_opt_self(UIColor) secondarySystemBackgroundColor];
  qword_1002EE6B8 = (uint64_t)result;
  return result;
}

void sub_100045FA8()
{
  qword_1002DF5A0 = 0x4095E00000000000LL;
}

void *sub_100045FBC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_captionView;
  uint64_t v10 = type metadata accessor for FramedMediaCaptionView();
  id v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10));
  uint64_t v12 = v4;
  *(void *)&v4[v9] = [v11 init];
  uint64_t v13 = &v12[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_itemLayoutContext];
  uint64_t v14 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v13, 1LL, 1LL, v14);
  v12[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_isFullWidthStyle] = 0;
  v12[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_hasCaption] = 0;
  uint64_t v15 = &v12[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_preferredArtworkSize];
  *(void *)uint64_t v15 = 0LL;
  *((void *)v15 + 1) = 0LL;

  v28.receiver = v12;
  v28.super_class = (Class)type metadata accessor for FramedMediaCollectionViewCell(0LL);
  uint64_t v16 = objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v17 = v16;
  int v18 = *((unsigned __int8 *)v16 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled);
  *((_BYTE *)v16 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled) = 1;
  if (v18 == 1)
  {
    uint64_t v19 = v16;
  }

  else
  {
    char v20 = (*(uint64_t (**)(void))((swift_isaMask & *v16) + 0x98LL))();
    uint64_t v21 = v17;
    sub_1000678F0(v20);
  }

  id v22 = [v17 contentView];
  [v22 addSubview:*(void *)((char *)v17 + OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_captionView)];

  id v23 = [v17 setClipsToBounds:1];
  uint64_t v24 = (*(uint64_t (**)(id))((swift_isaMask & *v17) + 0x260LL))(v23);
  if (v24)
  {
    uint64_t v25 = (void *)v24;
    id v26 = [v17 contentView];
    [v26 addSubview:v25];
  }

  return v17;
}

id sub_1000461EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CornerStyle(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int v6 = v1[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_isFullWidthStyle];
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for CornerStyle.continuous(_:), v2);
  if (v6 == 1)
  {
    CornerStyle.apply(withRadius:to:)(v1, 0.0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    [*(id *)&v1[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_captionView] setBackgroundColor:0];
    uint64_t v7 = &v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
    __n128 v9 = *(__n128 *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
    __n128 v54 = *(__n128 *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
    __n128 v8 = v54;
    __n128 v55 = v9;
    char v56 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
    *(void *)uint64_t v7 = 0LL;
    *((void *)v7 + 1) = 0LL;
    v7[16] = 1;
    *((void *)v7 + 3) = 0LL;
    v7[32] = 1;
    sub_1000690F4((uint64_t)&v54, v8, v9);
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    char v50 = 1;
    uint64_t v51 = 0LL;
    uint64_t v52 = 0LL;
    char v53 = 1;
    sub_10006779C(&v48);
    uint64_t v10 = &v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
    id v11 = *(void **)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
    uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
    uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
    *(_OWORD *)uint64_t v10 = xmmword_100234E10;
    *((void *)v10 + 2) = 1LL;
    id v14 = v11;
    sub_10000AAF8(v12);
    sub_10000AAF8(v13);

    sub_10000AB08(v12);
    sub_10000AB08(v13);
    sub_100069248(v11, v12, (unint64_t)v13);

    sub_10000AB08(v12);
    sub_10000AB08(v13);
    uint64_t v15 = &v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
    v16.n128_u32[0] = *(_DWORD *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
    int v17 = *(_DWORD *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
    unsigned __int8 v18 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
    char v19 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
    *(void *)uint64_t v15 = 0LL;
    v15[8] = 1;
    uint64_t v20 = *((unsigned int *)v15 + 3);
    *((_DWORD *)v15 + 3) = 0;
    v15[16] = 1;
    LOBYTE(v47) = v18;
    LOBYTE(v46) = v19;
    sub_1000693B0(v17, v18 | (unint64_t)(v20 << 32), v19, v16);
    id v21 = [v1 layer];
    [v21 setBorderColor:0];

    id v22 = [v1 layer];
    [v22 setBorderWidth:0.0];
  }

  else
  {
    CornerStyle.apply(withRadius:to:)(v1, 12.0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    id v23 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_captionView];
    if (qword_1002DC400 != -1) {
      swift_once(&qword_1002DC400, sub_100045F70);
    }
    [v23 setBackgroundColor:qword_1002EE6B8];
    uint64_t v24 = &v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
    __n128 v26 = *(__n128 *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
    __n128 v54 = *(__n128 *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
    __n128 v25 = v54;
    __n128 v55 = v26;
    char v56 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
    *(void *)uint64_t v24 = 0x4020000000000000LL;
    *((void *)v24 + 1) = 0x4039000000000000LL;
    v24[16] = 0;
    *((void *)v24 + 3) = 0LL;
    _BYTE v24[32] = 1;
    sub_1000690F4((uint64_t)&v54, v25, v26);
    __int128 v48 = xmmword_100233760;
    __int128 v49 = xmmword_100233770;
    char v50 = 0;
    uint64_t v51 = 0LL;
    uint64_t v52 = 0LL;
    char v53 = 1;
    sub_10006779C(&v48);
    id v27 = [(id)objc_opt_self(UIColor) blackColor];
    id v28 = [v27 CGColor];

    uint64_t v29 = &v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
    uint64_t v30 = *(void **)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
    uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
    __n128 v32 = *(void **)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
    *(void *)uint64_t v29 = v28;
    *(int64x2_t *)(v29 + 8) = vdupq_n_s64(1uLL);
    id v33 = v30;
    sub_10000AAF8(v31);
    sub_10000AAF8(v32);
    id v34 = v28;

    sub_10000AB08(v31);
    sub_10000AB08(v32);
    sub_100069248(v30, v31, (unint64_t)v32);

    sub_10000AB08(v31);
    sub_10000AB08(v32);
    double v35 = &v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
    v36.n128_u32[0] = *(_DWORD *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
    int v37 = *(_DWORD *)&v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
    unsigned __int8 v38 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
    char v39 = v1[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
    *(_DWORD *)double v35 = 1048576000;
    *((_DWORD *)v35 + 1) = 1051931443;
    v35[8] = 0;
    uint64_t v40 = *((unsigned int *)v35 + 3);
    *((_DWORD *)v35 + 3) = 0;
    v35[16] = 1;
    LOBYTE(v47) = v38;
    LOBYTE(v46) = v39;
    sub_1000693B0(v37, v38 | (unint64_t)(v40 << 32), v39, v36);
    id v41 = [v1 layer];
    if (qword_1002DCF90 != -1) {
      swift_once(&qword_1002DCF90, sub_100175D08);
    }
    uint64_t v42 = sub_1000031E8((uint64_t *)&unk_1002DE240);
    sub_1000061F4(v42, (uint64_t)qword_1002F1298);
    uint64_t v46 = v1;
    Conditional.evaluate(with:)(&v47, &v46, v42);
    id v43 = v47;
    id v44 = [v47 CGColor];

    [v41 setBorderColor:v44];
    id v22 = [v1 layer];
    if (qword_1002DCF68 != -1) {
      swift_once(&qword_1002DCF68, sub_100175A44);
    }
    [v22 setBorderWidth:*(double *)&qword_1002F1250];
  }

  return [v1 setNeedsLayout];
}

uint64_t sub_10004675C()
{
  return 0LL;
}

uint64_t sub_100046764()
{
  uint64_t v1 = type metadata accessor for LayoutRect(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for TVFramedMediaLayout(0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (id *)((char *)&v25.receiver - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = type metadata accessor for TVFramedMediaLayout.Metrics(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v11 = (objc_class *)type metadata accessor for FramedMediaCollectionViewCell(0LL);
  v25.receiver = v0;
  v25.super_class = v11;
  id v12 = objc_msgSendSuper2(&v25, "layoutSubviews");
  uint64_t result = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x260LL))(v12);
  if (result)
  {
    id v14 = (void *)result;
    AspectRatio.init(_:_:)( result,  *(double *)((char *)v0 + OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_preferredArtworkSize));
    if (qword_1002DC408 != -1) {
      swift_once(&qword_1002DC408, sub_100045FA8);
    }
    uint64_t v15 = qword_1002DF5A0;
    __n128 v16 = (uint64_t *)&v10[*(int *)(v8 + 20)];
    v16[3] = (uint64_t)&type metadata for CGFloat;
    void v16[4] = (uint64_t)&protocol witness table for CGFloat;
    uint64_t *v16 = v15;
    sub_100046E20((uint64_t)v10, (uint64_t)v7 + *(int *)(v5 + 24));
    v7[3] = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
    v7[4] = protocol witness table for UIView;
    *uint64_t v7 = v14;
    int v17 = *(void **)((char *)v0 + OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_captionView);
    v7[8] = type metadata accessor for FramedMediaCaptionView();
    v7[9] = protocol witness table for UIView;
    v7[5] = v17;
    id v18 = v14;
    id v19 = v17;
    id v20 = [v0 contentView];
    [v20 frame];

    *(void *)&CGFloat v21 = CGRect.subtracting(insets:)([v0 layoutMargins]).n128_u64[0];
    TVFramedMediaLayout.placeChildren(relativeTo:in:)((uint64_t)v0, v21, v22, v23, v24);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_100046E64((uint64_t)v7, type metadata accessor for TVFramedMediaLayout);
    return sub_100046E64((uint64_t)v10, type metadata accessor for TVFramedMediaLayout.Metrics);
  }

  return result;
}

uint64_t sub_100046A2C()
{
  return sub_100006060( v0 + OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_itemLayoutContext,  (uint64_t *)&unk_1002DDB60);
}

id sub_100046A64()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FramedMediaCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100046ADC()
{
  return type metadata accessor for FramedMediaCollectionViewCell(0LL);
}

uint64_t type metadata accessor for FramedMediaCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DF5D8;
  if (!qword_1002DF5D8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FramedMediaCollectionViewCell);
  }
  return result;
}

void sub_100046B20(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10000A9D8(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    void v4[2] = &unk_100234E50;
    void v4[3] = &unk_100234E50;
    void v4[4] = &unk_100234E68;
    swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 472);
  }

double sub_100046BB0(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100046BD0(a2, a3, a1, a5, a6);
}

double sub_100046BBC()
{
  return *(double *)(v0 + OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_preferredArtworkSize);
}

double sub_100046BD0(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v32 = a5;
  uint64_t v31 = type metadata accessor for TVFramedMediaLayout.Metrics(0LL);
  __n128 v10 = __chkstk_darwin(v31);
  id v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = Shelf.items.getter(v10);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v30 = v13;
    uint64_t v15 = v13 + 32;
    do
    {
      sub_10001F010(v15, (uint64_t)v35);
      uint64_t v16 = sub_1000031E8((uint64_t *)&unk_1002EA170);
      uint64_t v17 = type metadata accessor for FramedMedia(0LL);
      if ((swift_dynamicCast(v33, v35, v16, v17, 6LL) & 1) != 0)
      {
        uint64_t v18 = *(void *)&v33[0];
        uint64_t v19 = (*(uint64_t (**)(void))(v6 + 632))(*(void *)&v33[0]);
        if (v19)
        {
          uint64_t v20 = v19;
          double v21 = Artwork.size.getter(v19);
          AspectRatio.init(_:_:)(v22, v21);
          if (qword_1002DC408 != -1) {
            swift_once(&qword_1002DC408, sub_100045FA8);
          }
          uint64_t v23 = qword_1002DF5A0;
          double v24 = (uint64_t *)&v12[*(int *)(v31 + 20)];
          void v24[3] = (uint64_t)&type metadata for CGFloat;
          v24[4] = (uint64_t)&protocol witness table for CGFloat;
          *double v24 = v23;
          swift_getObjectType(a4);
          double v25 = sub_1000812BC((uint64_t)v12, a4, a1, a2);
          uint64_t v27 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v25, v26);
          uint64_t v34 = 0LL;
          memset(v33, 0, sizeof(v33));
          ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v27,  0LL,  1LL,  v33,  0LL,  0LL,  (__n128)0);
          swift_release(v18);
          swift_release(v20);
          swift_release(v27);
          sub_100006060((uint64_t)v33, (uint64_t *)&unk_1002DE600);
          sub_100046E64((uint64_t)v12, type metadata accessor for TVFramedMediaLayout.Metrics);
        }

        else
        {
          swift_release(v18);
        }
      }

      v15 += 40LL;
      --v14;
    }

    while (v14);
    *(void *)&double result = swift_bridgeObjectRelease(v30).n128_u64[0];
  }

  else
  {
    *(void *)&double result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }

  return result;
}

uint64_t sub_100046E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVFramedMediaLayout.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100046E64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

uint64_t sub_100046EA0(uint64_t a1)
{
  return sub_100046FE8(0.4, 10.0, 15.0, a1, qword_1002EE6E0);
}

uint64_t sub_100046EC0(uint64_t a1)
{
  return sub_100046F08(0.2, 12.0, 7.0, a1, qword_1002EE6F8);
}

uint64_t sub_100046EDC(uint64_t a1)
{
  return sub_100046F08(0.3, 50.0, 35.0, a1, qword_1002EE710);
}

uint64_t sub_100046F08(double a1, double a2, double a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for Shadow(0LL);
  sub_10000FF90(v9, a5);
  sub_1000061F4(v9, (uint64_t)a5);
  id v10 = [(id)objc_opt_self(UIColor) blackColor];
  id v11 = [v10 colorWithAlphaComponent:a1];

  return Shadow.init(color:blurRadius:offset:)(v11, a2, 0.0, a3);
}

uint64_t sub_100046FC8(uint64_t a1)
{
  return sub_100046FE8(0.40047, 1.0, 0.0, a1, qword_1002EE728);
}

uint64_t sub_100046FE8(Swift::Float a1, double a2, double a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for Shadow(0LL);
  sub_10000FF90(v9, a5);
  sub_1000061F4(v9, (uint64_t)a5);
  sub_100010F30();
  v10.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, a1).super.isa;
  return Shadow.init(color:blurRadius:offset:)(v10.super.isa, a2, 0.0, a3);
}

BOOL UITraitCollection.prefersDarkInterfaceStyle.getter()
{
  return [v0 userInterfaceStyle] == (id)2;
}

unint64_t sub_1000470A4()
{
  unint64_t result = qword_1002DF600;
  if (!qword_1002DF600)
  {
    uint64_t v1 = type metadata accessor for TitledButtonStackCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100234E88, v1);
    atomic_store(result, (unint64_t *)&qword_1002DF600);
  }

  return result;
}

uint64_t sub_1000470EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Shelf.items.getter();
  *a1 = result;
  return result;
}

double sub_100047118(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a2;
  uint64_t v2 = sub_1000031E8(&qword_1002DEB70);
  uint64_t v62 = *(void *)(v2 - 8);
  uint64_t v63 = v2;
  __chkstk_darwin(v2);
  double v59 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v56 = type metadata accessor for PageGrid(0LL);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v5 = (uint64_t *)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  __chkstk_darwin(v6);
  uint64_t v52 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8(&qword_1002EB230);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  __chkstk_darwin(v8);
  __n128 v54 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  id v12 = (char *)&v51 - v11;
  uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = __chkstk_darwin(v17);
  double v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v19);
  ReadOnlyLens.value.getter(v66, v17);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  uint64_t KeyPath = swift_getKeyPath(&unk_100234ED8, v22);
  ItemLayoutContext.subscript.getter(v16);
  swift_release(KeyPath);
  uint64_t v25 = swift_getKeyPath(&unk_100234F08, v24);
  ReadOnlyLens.subscript.getter(v25, v13);
  __n128 v26 = swift_release(v25);
  (*(void (**)(void *, uint64_t, __n128))(v14 + 8))(v16, v13, v26);
  __n128 v27 = swift_bridgeObjectRelease(v65[1]);
  ItemLayoutContext.state.getter(v27);
  uint64_t v28 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v29 = swift_dynamicCastClassUnconditional(v53, v28, 0LL, 0LL, 0LL);
  uint64_t v30 = v52;
  ItemLayoutContext.componentLayoutOptions.getter(v29);
  uint64_t v32 = swift_getKeyPath(&unk_100234F38, v31);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(v32);
  double v34 = PageGrid.componentMeasuringSize(spanning:)(v33, 1.0);
  double v36 = v35;
  (*(void (**)(void *, uint64_t))(v55 + 8))(v5, v56);
  id v37 = sub_100147A04();
  sub_10001F010((uint64_t)v66, (uint64_t)v64);
  uint64_t v38 = sub_1000031E8((uint64_t *)&unk_1002EA170);
  uint64_t v39 = type metadata accessor for TitledButtonStack(0LL);
  swift_dynamicCast(v65, v64, v38, v39, 7LL);
  uint64_t v41 = v57;
  uint64_t v40 = v58;
  uint64_t v42 = v54;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v12, v58);
  uint64_t v43 = type metadata accessor for NilState(0LL);
  id v44 = v59;
  StateLens.init(_:)(v42, v43);
  double v45 = sub_1000AAD88(v34, v36, v65[0], (uint64_t)v37);
  double v47 = v46;
  (*(void (**)(char *, uint64_t, double))(v62 + 8))(v44, v63, v45);
  uint64_t v48 = v65[0];
  swift_unknownObjectRelease(v37);
  __n128 v49 = swift_release(v48);
  (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v30, v61, v49);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v40);
  _s6Arcade17PillOverlayLayoutVwxx_0(v66);
  return v47;
}

uint64_t sub_100047518@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Shelf.items.getter();
  *a1 = result;
  return result;
}

void sub_100047544(void *a1)
{
  uint64_t v3 = type metadata accessor for TextDetailCollectionViewCell();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v3);
  uint64_t v5 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  uint64_t v7 = v6;

  NSString v8 = String._bridgeToObjectiveC()();
  objc_msgSend( a1,  "registerClass:forCellWithReuseIdentifier:",  ObjCClassFromMetadata,  v8,  swift_bridgeObjectRelease(v7).n128_f64[0]);

  uint64_t v9 = type metadata accessor for TitleHeaderView(0LL);
  uint64_t v10 = (objc_class *)swift_getObjCClassFromMetadata(v9);
  uint64_t v11 = UICollectionElementKindSectionHeader;
  id v12 = NSStringFromClass(v10);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  uint64_t v14 = v13;

  NSString v15 = String._bridgeToObjectiveC()();
  objc_msgSend( a1,  "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:",  v10,  v11,  v15,  swift_bridgeObjectRelease(v14).n128_f64[0]);

  id v16 = [objc_allocWithZone(UICollectionViewFlowLayout) init];
  [v16 setMinimumInteritemSpacing:0.0];
  [v16 setMinimumLineSpacing:12.0];
  [a1 setCollectionViewLayout:v16];
  id v17 = String._bridgeToObjectiveC()();
  [a1 setAccessibilityIdentifier:v17];
}

uint64_t sub_100047E1C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v41 = type metadata accessor for DispatchTime(0LL);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v38 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)&v37 - v6;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for IndexPath(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = swift_allocObject(&unk_100281F30, 24LL, 7LL);
  __n128 v14 = swift_unknownObjectWeakInit(v13 + 16, v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))( (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v10,  v14);
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = (v15 + 24) & ~v15;
  uint64_t v17 = swift_allocObject(&unk_100281F58, v16 + v12, v15 | 7);
  *(void *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))( v17 + v16,  (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v10);
  aBlock[4] = sub_100048DB0;
  uint64_t v44 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100135408;
  aBlock[3] = &unk_100281F70;
  uint64_t v18 = _Block_copy(aBlock);
  uint64_t v42 = _swiftEmptyArrayStorage;
  unint64_t v19 = sub_100048DF8();
  swift_retain(v13);
  uint64_t v20 = sub_1000031E8((uint64_t *)&unk_1002DF660);
  unint64_t v21 = sub_100048E40();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v42, v20, v21, v7, v19);
  uint64_t v22 = type metadata accessor for DispatchWorkItem(0LL);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  uint64_t v23 = DispatchWorkItem.init(flags:block:)(v9, v18);
  uint64_t v24 = v44;
  swift_release(v13);
  swift_release(v24);
  uint64_t v25 = OBJC_IVAR____TtC6Arcade33PurchasesMasterCollectionDelegate_showDetailsWorkItem;
  uint64_t v26 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade33PurchasesMasterCollectionDelegate_showDetailsWorkItem);
  swift_retain(v23);
  if (v26)
  {
    swift_retain(v26);
    dispatch thunk of DispatchWorkItem.cancel()(v27);
    swift_release(v26);
    uint64_t v28 = *(void *)(v2 + v25);
  }

  else
  {
    uint64_t v28 = 0LL;
  }

  *(void *)(v2 + v25) = v23;
  swift_release(v28);
  unint64_t v29 = sub_100048E8C();
  uint64_t v30 = (void *)static OS_dispatch_queue.main.getter(v29);
  uint64_t v31 = v38;
  static DispatchTime.now()();
  uint64_t v32 = v40;
  + infix(_:_:)(v31, 0.2);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v39 + 8);
  double v34 = v31;
  uint64_t v35 = v41;
  v33(v34, v41);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v32, v23);
  swift_release(v23);

  return ((uint64_t (*)(char *, uint64_t))v33)(v32, v35);
}

uint64_t sub_1000481B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0LL, 0LL);
  uint64_t result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    uint64_t v5 = (void *)result;
    uint64_t v6 = *(void *)(result + OBJC_IVAR____TtC6Arcade33PurchasesMasterCollectionDelegate_presenter);
    swift_retain(v6);

    TVPurchasesPagePresenter.didSelectItem(at:)(a2);
    return swift_release(v6);
  }

  return result;
}

uint64_t type metadata accessor for PurchasesMasterCollectionDelegate()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade33PurchasesMasterCollectionDelegate);
}

double sub_1000482B4(void *a1)
{
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  objc_msgSend(a1, "bounds", v4);
  *(void *)&v15.origin.CGFloat x = CGRect.subtracting(insets:)([a1 contentInset]).n128_u64[0];
  double Width = CGRectGetWidth(v15);
  id v8 = [a1 traitCollection];
  if (qword_1002DCDF0 != -1) {
    swift_once(&qword_1002DCDF0, sub_100154724);
  }
  uint64_t v9 = type metadata accessor for StaticDimension(0LL);
  uint64_t v10 = sub_1000061F4(v9, (uint64_t)qword_1002E8CF0);
  static Dimensions.defaultRoundingRule.getter(v10);
  StaticDimension.value(compatibleWith:rounded:)(v8, v6);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v6, v2);
  if (qword_1002DCDF8 != -1) {
    swift_once(&qword_1002DCDF8, sub_100154738);
  }
  uint64_t v12 = sub_1000061F4(v9, (uint64_t)qword_1002E8D08);
  static Dimensions.defaultRoundingRule.getter(v12);
  StaticDimension.value(compatibleWith:rounded:)(v8, v6);
  v11(v6, v2);

  return Width;
}

void sub_10004846C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for TextDetailCollectionViewCell();
  uint64_t v9 = swift_dynamicCastClass(a1, v8);
  if (!v9) {
    return;
  }
  uint64_t v10 = (char *)v9;
  id v11 = a1;
  TVPurchasesPagePresenter.data(at:)(v35, a2);
  uint64_t v12 = *(void **)&v10[OBJC_IVAR____TtC6Arcade28TextDetailCollectionViewCell_titleLabel];
  sub_100048EC8((uint64_t)v35, (uint64_t)&v45);
  uint64_t v13 = v46;
  uint64_t v31 = v5;
  uint64_t v32 = v4;
  if (v46)
  {
    uint64_t v14 = v47;
    uint64_t v15 = v48;
    id v16 = v12;
    sub_100048F10(v35);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v14);
    NSString v17 = String._bridgeToObjectiveC()();
    *(void *)&double v18 = swift_bridgeObjectRelease(v13).n128_u64[0];
  }

  else
  {
    id v19 = v12;
    NSString v17 = 0LL;
  }

  objc_msgSend(v12, "setText:", v17, v18, v31, v32);

  [v12 setEnablesMarqueeWhenAncestorFocused:1];
  uint64_t v20 = *(void **)&v10[OBJC_IVAR____TtC6Arcade28TextDetailCollectionViewCell_subtitleLabel];
  sub_100048EC8((uint64_t)v35, (uint64_t)&v41);
  uint64_t v21 = v42;
  if (!v42)
  {
    id v27 = v20;
    goto LABEL_9;
  }

  uint64_t v22 = v43;
  uint64_t v23 = v44;
  sub_100048F10(v35);
  id v24 = v20;
  swift_bridgeObjectRelease(v21);
  unint64_t v25 = swift_bridgeObjectRelease(v23).n128_u64[0];
  if (!v22)
  {
LABEL_9:
    NSString v26 = 0LL;
    goto LABEL_10;
  }

  NSString v26 = String._bridgeToObjectiveC()();
  unint64_t v25 = swift_bridgeObjectRelease(v22).n128_u64[0];
LABEL_10:
  objc_msgSend(v20, "setText:", v26, *(double *)&v25);

  sub_100048EC8((uint64_t)v35, (uint64_t)&v36);
  if (v37)
  {
    uint64_t v29 = v38;
    uint64_t v28 = v39;
    uint64_t v30 = v40;
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v29);
    if (v30)
    {
      memset(v34, 0, 32);
      memset(v33, 0, sizeof(v33));
      static AutomationSemantics.menuItem(_:id:parentId:)(v28, v30, v34, v33);
      swift_bridgeObjectRelease(v30);
      sub_100006060((uint64_t)v33, (uint64_t *)&unk_1002DF680);
      sub_100006060((uint64_t)v34, (uint64_t *)&unk_1002DF680);
      UIView.setAutomationSemantics(_:)(v7);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
    }
  }

  [v10 setNeedsLayout];
}

id sub_100048704(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v6 == a2 && v7 == a3) {
    goto LABEL_7;
  }
  uint64_t v9 = v7;
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v6, v7, 0LL);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) == 0)
  {
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100245270LL,  "Arcade/PurchasesMasterCollectionDelegate.swift",  46LL,  2LL,  117LL,  0);
    __break(1u);
LABEL_7:
    swift_bridgeObjectRelease(a3);
  }

  NSString v11 = String._bridgeToObjectiveC()();
  uint64_t v12 = type metadata accessor for TitleHeaderView(0LL);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
  uint64_t v14 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  uint64_t v16 = v15;

  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  double v18 = (void *)IndexPath._bridgeToObjectiveC()();
  id v19 = [a1 dequeueReusableSupplementaryViewOfKind:v11 withReuseIdentifier:v17 forIndexPath:v18];

  return v19;
}

void sub_100048874(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TitleHeaderView.Style(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v9 == a2 && v10 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }

  else
  {
    uint64_t v12 = v10;
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v9, v10, 0LL);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) == 0) {
      return;
    }
  }

  uint64_t v14 = type metadata accessor for TitleHeaderView(0LL);
  uint64_t v15 = (void *)swift_dynamicCastClassUnconditional(a1, v14, 0LL, 0LL, 0LL);
  uint64_t v16 = qword_1002DCF28;
  id v17 = a1;
  if (v16 != -1) {
    swift_once(&qword_1002DCF28, sub_1001698B0);
  }
  uint64_t v18 = sub_1000061F4(v6, (uint64_t)qword_1002F1180);
  sub_10000D57C(v18, (uint64_t)v8);
  (*(void (**)(char *))((swift_isaMask & *v15) + 0x190LL))(v8);
  id v19 = *(id *)((char *)v15 + OBJC_IVAR____TtC6Arcade15TitleHeaderView_titleLabel);
  Swift::Int v20 = IndexPath.section.getter(v19);
  Swift::String_optional v22 = TVPurchasesPagePresenter.title(for:)(v20);
  if (v22.value._object)
  {
    NSString v23 = String._bridgeToObjectiveC()();
    *(void *)&double v21 = swift_bridgeObjectRelease(v22.value._object).n128_u64[0];
  }

  else
  {
    NSString v23 = 0LL;
  }

  objc_msgSend(v19, "setText:", v23, v21);

  objc_msgSend(v15, "setLayoutMargins:", 0.0, 20.0, 0.0, 20.0);
}

uint64_t sub_100048A6C(void *a1, void *a2)
{
  uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002DF650);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for IndexPath(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&double v16 = __chkstk_darwin(v15).n128_u64[0];
  uint64_t v18 = (char *)&v28 - v17;
  id v19 = objc_msgSend(a2, "nextFocusedIndexPath", v16);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1LL, 1LL, v11);
    return sub_100006060((uint64_t)v10, (uint64_t *)&unk_1002DF650);
  }

  Swift::Int v20 = v19;
  uint64_t v28 = v2;
  id v29 = a1;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v19);

  double v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v21(v10, v14, v11);
  Swift::String_optional v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v22(v10, 0LL, 1LL, v11);
  NSString v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v23(v10, 1LL, v11) == 1) {
    return sub_100006060((uint64_t)v10, (uint64_t *)&unk_1002DF650);
  }
  v21(v18, v10, v11);
  id v24 = [a2 previouslyFocusedIndexPath];
  if (!v24)
  {
    v22(v7, 1LL, 1LL, v11);
    goto LABEL_9;
  }

  unint64_t v25 = v24;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v24);

  v21(v7, v14, v11);
  v22(v7, 0LL, 1LL, v11);
  if (v23(v7, 1LL, v11) == 1)
  {
LABEL_9:
    sub_100006060((uint64_t)v7, (uint64_t *)&unk_1002DF650);
    goto LABEL_10;
  }

  sub_100006060((uint64_t)v7, (uint64_t *)&unk_1002DF650);
  [v29 selectItemAtIndexPath:0 animated:0 scrollPosition:0];
LABEL_10:
  id v27 = (void *)IndexPath._bridgeToObjectiveC()();
  [v29 selectItemAtIndexPath:v27 animated:0 scrollPosition:0];

  sub_100047E1C((uint64_t)v18);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v11);
}

uint64_t sub_100048D18()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100048D3C()
{
  uint64_t v1 = type metadata accessor for IndexPath(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100048DB0()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for IndexPath(0LL) - 8) + 80LL);
  return sub_1000481B0(*(void *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100048DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100048DF0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_100048DF8()
{
  unint64_t result = qword_1002E42E0;
  if (!qword_1002E42E0)
  {
    uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1002E42E0);
  }

  return result;
}

unint64_t sub_100048E40()
{
  unint64_t result = qword_1002E42F0;
  if (!qword_1002E42F0)
  {
    uint64_t v1 = sub_100003274((uint64_t *)&unk_1002DF660);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002E42F0);
  }

  return result;
}

unint64_t sub_100048E8C()
{
  unint64_t result = qword_1002DF670;
  if (!qword_1002DF670)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_dispatch_queue);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DF670);
  }

  return result;
}

uint64_t sub_100048EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002DF678);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100048F10(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100048F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_bridgeObjectRetain(a6);
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }

  return result;
}

double UIView.firstBaselineFromTop.getter()
{
  return CGRectGetMaxY(v2);
}

double UIView.lastBaselineFromBottom.getter()
{
  return 0.0;
}

double UIView.lastBaselineMaxY.getter()
{
  double MaxY = CGRectGetMaxY(v4);
  [v0 lastBaselineFromBottom];
  return MaxY - v2;
}

id UILabel.firstBaselineFromTop.getter()
{
  return [v0 _firstBaselineOffsetFromTop];
}

id UILabel.lastBaselineFromBottom.getter()
{
  return [v0 _baselineOffsetFromBottom];
}

void sub_1000490C8(uint64_t a1)
{
  double v2 = v1;
  if (a1 >= 1)
  {
    [v2 setLineSpacing:a1];
    CGRect v4 = NSBaselineOffsetAttributeName;
    id v5 = [v2 font];
    if (v5)
    {
      uint64_t v6 = v5;
      [v5 lineHeight];
      double v8 = v7;

      id v9 = [objc_allocWithZone(NSNumber) initWithDouble:(double)a1 - v8];
      unint64_t v10 = sub_10000870C();
      *((void *)&v35 + 1) = v10;
      *(void *)&__int128 v34 = v9;
      id v11 = [v2 _defaultAttributes];
      if (v11)
      {
        uint64_t v12 = v11;
        type metadata accessor for Key(0LL);
        uint64_t v14 = v13;
        unint64_t v15 = sub_1000495EC();
        uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v12,  v14,  (char *)&type metadata for Any + 8,  v15);

        uint64_t v33 = v16;
        if (v10)
        {
          sub_1000086FC(&v34, v32);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
          uint64_t v31 = v16;
          sub_1000B0D10(v32, v4, isUniquelyReferenced_nonNull_native);
          uint64_t v18 = v16;
          uint64_t v33 = v16;

          unint64_t v19 = swift_bridgeObjectRelease(0x8000000000000000LL).n128_u64[0];
          if (v16)
          {
LABEL_6:
            v20.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
            unint64_t v19 = swift_bridgeObjectRelease(v18).n128_u64[0];
LABEL_12:
            objc_msgSend(v2, "_setDefaultAttributes:", v20.super.isa, *(double *)&v19, v31);

            return;
          }
        }

        else
        {
          sub_100029100((uint64_t)&v34);
          sub_100049634((uint64_t)v4, v32);

          sub_100029100((uint64_t)v32);
          uint64_t v18 = v33;
          if (v33) {
            goto LABEL_6;
          }
        }

        v20.super.Class isa = 0LL;
        goto LABEL_12;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
    goto LABEL_17;
  }

  [v1 setLineSpacing:0];
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  double v21 = NSBaselineOffsetAttributeName;
  id v22 = [v1 _defaultAttributes];
  if (!v22)
  {
LABEL_17:
    __break(1u);
    return;
  }

  NSString v23 = v22;
  type metadata accessor for Key(0LL);
  uint64_t v25 = v24;
  unint64_t v26 = sub_1000495EC();
  uint64_t v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v23, v25, (char *)&type metadata for Any + 8, v26);

  uint64_t v33 = v27;
  sub_100029100((uint64_t)&v34);
  sub_100049634((uint64_t)v21, v32);

  sub_100029100((uint64_t)v32);
  uint64_t v29 = v33;
  if (v33)
  {
    v30.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(void *)&double v28 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }

  else
  {
    v30.super.Class isa = 0LL;
  }

  objc_msgSend(v2, "_setDefaultAttributes:", v30.super.isa, v28);
}

double UIButton.lastBaselineFromBottom.getter()
{
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  objc_msgSend(v0, "contentRectForBounds:");
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  v28.origin.CGFloat x = v2;
  v28.origin.CGFloat y = v4;
  v28.size.CGFloat width = v6;
  v28.size.CGFloat height = v8;
  double Height = CGRectGetHeight(v28);
  v29.origin.CGFloat x = v10;
  v29.origin.CGFloat y = v12;
  v29.size.CGFloat width = v14;
  v29.size.CGFloat height = v16;
  double MaxY = CGRectGetMaxY(v29);
  id v19 = [v0 titleLabel];
  if (v19)
  {
    NSDictionary v20 = v19;
    [v19 _baselineOffsetFromBottom];
    double v22 = v21;
  }

  else
  {
    double v22 = 0.0;
  }

  double v23 = vabdd_f64(Height, MaxY);
  [v0 contentEdgeInsets];
  double v25 = v24;
  [v0 titleEdgeInsets];
  return v23 + v22 + v25 + v26;
}

double UIImageView.lastBaselineFromBottom.getter()
{
  id v1 = [v0 image];
  if (!v1) {
    return 0.0;
  }
  CGFloat v2 = v1;
  double v3 = COERCE_DOUBLE(UIImage.baselineOffsetFromBottom.getter());
  char v5 = v4;

  double result = v3;
  if ((v5 & 1) != 0) {
    return 0.0;
  }
  return result;
}

unint64_t sub_1000495EC()
{
  unint64_t result = qword_1002DD7B0;
  if (!qword_1002DD7B0)
  {
    type metadata accessor for Key(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023351C, v1);
    atomic_store(result, (unint64_t *)&qword_1002DD7B0);
  }

  return result;
}

double sub_100049634@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double v3 = v2;
  uint64_t v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  unint64_t v7 = sub_1000E868C(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v10 = *v3;
    uint64_t v13 = *v3;
    uint64_t *v3 = 0x8000000000000000LL;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000B1648();
      uint64_t v10 = v13;
    }

    sub_1000086FC((_OWORD *)(*(void *)(v10 + 56) + 32 * v7), a2);
    sub_100049718(v7, v10);
    uint64_t v11 = *v3;
    uint64_t *v3 = v10;
    *(void *)&double result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }

  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }

  return result;
}

unint64_t sub_100049718(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1LL << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        uint64_t v13 = v12;
        Hasher.init(_seed:)(v29);
        id v14 = v10;
        String.hash(into:)(v29, v11, v13);
        Swift::Int v15 = Hasher._finalize()();

        double result = swift_bridgeObjectRelease(v13);
        unint64_t v16 = v15 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v16 < v8) {
            goto LABEL_5;
          }
        }

        else if (v16 >= v8)
        {
          goto LABEL_11;
        }

        if (v3 >= (uint64_t)v16)
        {
LABEL_11:
          uint64_t v17 = *(void *)(a2 + 48);
          uint64_t v18 = (void *)(v17 + 8 * v3);
          id v19 = (void *)(v17 + 8 * v6);
          if (v3 != v6 || v18 >= v19 + 1) {
            void *v18 = *v19;
          }
          uint64_t v20 = *(void *)(a2 + 56);
          double v21 = (_OWORD *)(v20 + 32 * v3);
          double v22 = (_OWORD *)(v20 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v21 >= v22 + 2))
          {
            __int128 v9 = v22[1];
            *double v21 = *v22;
            v21[1] = v9;
            int64_t v3 = v6;
          }
        }

uint64_t sub_100049908()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int64_t v3 = (UIFontTextStyle *)((char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000FF90(v4, qword_1002DF690);
  sub_1000061F4(v4, (uint64_t)qword_1002DF690);
  UIFontTextStyle *v3 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, void, uint64_t))(v1 + 104))( v3,  enum case for FontSource.textStyle(_:),  v0);
  void v9[3] = v0;
  v9[4] = &protocol witness table for FontSource;
  uint64_t v5 = sub_100009D54(v9);
  (*(void (**)(void *, UIFontTextStyle *, uint64_t))(v1 + 16))(v5, v3, v0);
  unint64_t v6 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v9, 24.0);
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v1 + 8))(v3, v0);
}

double sub_100049A10( double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (qword_1002DCE58 != -1) {
    swift_once(&qword_1002DCE58, sub_100164740);
  }
  uint64_t v11 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v12 = sub_1000061F4(v11, (uint64_t)qword_1002F0F28);
  swift_getObjectType(a8);
  return sub_100039674(v12, a8, a1, a2);
}

id sub_100049A98()
{
  return sub_100049D88();
}

uint64_t sub_100049AA8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  if ((a1 & 1) != 0)
  {
    swift_getObjectType(a2);
    a4 = (PageTraitEnvironment.pageContentSize.getter() + -40.0) * 0.5;
  }

  if (qword_1002DCE58 != -1) {
    swift_once(&qword_1002DCE58, sub_100164740);
  }
  uint64_t v6 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  sub_1000061F4(v6, (uint64_t)qword_1002F0F28);
  double v7 = AspectRatio.height(fromWidth:)(a4);
  ComponentPrefetchSizing.init(size:contentMode:)(5LL, a4, v7);
  uint64_t v8 = type metadata accessor for ComponentPrefetchSizing(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(a3, 0LL, 1LL, v8);
}

uint64_t sub_100049B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC430 != -1) {
    swift_once(&qword_1002DC430, sub_100049908);
  }
  uint64_t v8 = type metadata accessor for StaticDimension(0LL);
  uint64_t v9 = sub_1000061F4(v8, (uint64_t)qword_1002DF690);
  static Dimensions.defaultRoundingRule.getter(v9);
  double v10 = AnyDimension.value(in:rounded:)(a3, v7, v8, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(void *)&v10;
}

double sub_100049C74@<D0>(uint64_t a1@<X1>, void *a2@<X4>, uint64_t a3@<X8>)
{
  double v6 = PageTraitEnvironment.pageContentSize.getter();
  if (qword_1002DCE58 != -1) {
    swift_once(&qword_1002DCE58, sub_100164740);
  }
  uint64_t v7 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  uint64_t v8 = sub_1000061F4(v7, (uint64_t)qword_1002F0F28);
  double v9 = sub_100039674(v8, (uint64_t)a2, (v6 + -40.0) * 0.5, 1.79769313e308);
  uint64_t v11 = v10;
  [a2 pageMarginInsets];
  *(void *)a3 = v12;
  *(void *)(a3 + 8) = v13;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
  *(void *)(a3 + 24) = v15;
  *(double *)(a3 + 32) = v9;
  *(void *)(a3 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v11;
  double result = 40.0;
  *(_OWORD *)(a3 + 48) = xmmword_1002346C0;
  *(_BYTE *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = a1;
  return result;
}

uint64_t sub_100049D5C()
{
  return sub_100003B6C( &qword_1002DF6A8,  (uint64_t (*)(uint64_t))&type metadata accessor for EditorialCard,  (uint64_t)&protocol conformance descriptor for EditorialCard);
}

id sub_100049D88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade31EditorialCardCollectionViewCell_captionLabel];
  EditorialCard.caption.getter();
  if (v3)
  {
    uint64_t v4 = v3;
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
  }

  else
  {
    NSString v5 = 0LL;
  }

  [v2 setText:v5];

  double v6 = *(void **)&v0[OBJC_IVAR____TtC6Arcade31EditorialCardCollectionViewCell_titleLabel];
  EditorialCard.title.getter();
  if (v7)
  {
    uint64_t v8 = v7;
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
  }

  else
  {
    NSString v9 = 0LL;
  }

  [v6 setText:v9];

  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC6Arcade31EditorialCardCollectionViewCell_subtitleLabel];
  EditorialCard.subtitle.getter();
  if (v11)
  {
    uint64_t v12 = v11;
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
  }

  else
  {
    NSString v13 = 0LL;
  }

  [v10 setText:v13];

  return [v1 setNeedsLayout];
}

UIColor sub_100049EA0(uint64_t a1)
{
  return sub_100049ED4(0.5, 0.2, a1, (UIColor *)&qword_1002DF6F8);
}

UIColor sub_100049EB8(uint64_t a1)
{
  return sub_100049ED4(0.9, 0.4, a1, (UIColor *)&qword_1002DF700);
}

UIColor sub_100049ED4(double a1, double a2, uint64_t a3, UIColor *a4)
{
  result.super.Class isa = UIColor.init(light:dark:)( (UIColor)[objc_allocWithZone(UIColor) initWithWhite:1.0 alpha:a1],  (UIColor)objc_msgSend(objc_allocWithZone(UIColor), "initWithWhite:alpha:", 1.0, a2)).super.isa;
  a4->super.Class isa = result.super.isa;
  return result;
}

id sub_100049F68()
{
  if (qword_1002DC438 != -1) {
    swift_once(&qword_1002DC438, sub_100049EA0);
  }
  uint64_t v0 = qword_1002DC440;
  id v1 = (id)qword_1002DF6F8;
  uint64_t v2 = (uint64_t)v1;
  if (v0 != -1)
  {
    swift_once(&qword_1002DC440, sub_100049EB8);
    id v1 = (id)qword_1002DF6F8;
  }

  id v5 = v1;
  qword_1002EE740 = v2;
  qword_1002EE748 = qword_1002DF700;
  qword_1002EE750 = (uint64_t)v1;
  id v3 = (id)qword_1002DF700;
  return v5;
}

void *sub_10004A018(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for CornerStyle(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  NSString v13 = (objc_class *)type metadata accessor for CardCollectionViewCell();
  v38.receiver = v4;
  v38.super_class = v13;
  uint64_t v14 = objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  id v15 = [v14 contentView];
  [v15 setClipsToBounds:1];

  (*(void (**)(_BYTE *, void, uint64_t))(v10 + 104))(v12, enum case for CornerStyle.continuous(_:), v9);
  id v16 = [v14 contentView];

  CornerStyle.apply(withRadius:to:)(v16, 12.0);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v17 = (char *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius;
  __n128 v19 = *(__n128 *)((char *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16);
  v44[0] = *(_OWORD *)((char *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius);
  __n128 v18 = (__n128)v44[0];
  v44[1] = v19;
  char v45 = *((_BYTE *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32);
  *(void *)uint64_t v17 = 0x4020000000000000LL;
  *((void *)v17 + 1) = 0x4039000000000000LL;
  v17[16] = 0;
  *((void *)v17 + 3) = 0LL;
  v17[32] = 1;
  sub_1000690F4((uint64_t)v44, v18, v19);
  v39[0] = xmmword_100233760;
  v39[1] = xmmword_100233770;
  char v40 = 0;
  uint64_t v41 = 0LL;
  uint64_t v42 = 0LL;
  char v43 = 1;
  sub_10006779C(v39);
  id v20 = [(id)objc_opt_self(UIColor) blackColor];
  id v21 = [v20 CGColor];

  double v22 = (char *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor;
  double v23 = *(void **)((char *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor);
  uint64_t v24 = *(void **)((char *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8);
  uint64_t v25 = *(void **)((char *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16);
  *(void *)double v22 = v21;
  *(int64x2_t *)(v22 + 8) = vdupq_n_s64(1uLL);
  id v26 = v23;
  sub_10000AAF8(v24);
  sub_10000AAF8(v25);
  id v27 = v21;

  sub_10000AB08(v24);
  sub_10000AB08(v25);
  sub_100069248(v23, v24, (unint64_t)v25);

  sub_10000AB08(v24);
  sub_10000AB08(v25);
  uint64_t v28 = (char *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity;
  v29.n128_u32[0] = *(_DWORD *)((char *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity);
  int v30 = *(_DWORD *)((char *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4);
  unsigned __int8 v31 = *((_BYTE *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8);
  char v32 = *((_BYTE *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16);
  *(_DWORD *)uint64_t v28 = 1048576000;
  *((_DWORD *)v28 + 1) = 1051931443;
  v28[8] = 0;
  uint64_t v33 = *((unsigned int *)v28 + 3);
  *((_DWORD *)v28 + 3) = 0;
  v28[16] = 1;
  v37[8] = v31;
  v37[0] = v32;
  sub_1000693B0(v30, v31 | (unint64_t)(v33 << 32), v32, v29);
  char v34 = *((_BYTE *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled);
  *((_BYTE *)v14 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled) = 1;
  if ((v34 & 1) == 0)
  {
    char v35 = (*(uint64_t (**)(void))((swift_isaMask & *v14) + 0x98LL))();
    sub_1000678F0(v35);
  }

  return v14;
}

id sub_10004A42C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CardCollectionViewCell()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade22CardCollectionViewCell);
}

void sub_10004A480(char a1)
{
  id v6 = [v1 contentView];
  if (qword_1002DC448 != -1) {
    swift_once(&qword_1002DC448, sub_100049F68);
  }
  id v3 = (void *)qword_1002EE740;
  if (a1)
  {
    uint64_t v4 = qword_1002EE748;
    if (!qword_1002EE748) {
      uint64_t v4 = qword_1002EE740;
    }
    if (qword_1002EE750) {
      id v3 = (void *)qword_1002EE750;
    }
    if (a1 == 1) {
      id v3 = (void *)v4;
    }
  }

  id v5 = v3;
  [v6 setBackgroundColor:v5];
}

void sub_10004A53C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10004A548(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  char v3 = v2 == 2;
  int v4 = *a2;
  if (v4 != 2) {
    char v3 = 0;
  }
  if (v2 != 2 && v4 != 2) {
    char v3 = ((v2 & 1) == 0) ^ v4;
  }
  return v3 & 1;
}

_BYTE *sub_10004A580(_BYTE *result)
{
  *UIColor result = 0;
  return result;
}

void sub_10004A588(uint64_t *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9 = *a1;
  uint64_t v10 = sub_1000031E8(&qword_1002DEB78);
  unint64_t v11 = sub_100034DA8();
  StateLens<A>.currentValue.getter(&v15, v10, v11);
  if (v15 == 2)
  {
    uint64_t v13 = ProductDescription.paragraph.getter(v12);
    char v14 = Paragraph.isCollapsed.getter();
    swift_release(v13);
  }

  else
  {
    char v14 = v15 & 1;
  }

  sub_1001327CC(a2, 1.79769313e308, v9, v14 & 1, a7);
}

void sub_10004A63C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
}

uint64_t sub_10004A650()
{
  uint64_t v1 = sub_1000031E8(&qword_1002DF790);
  unint64_t v2 = sub_100034DA8();
  WritableStateLens<A>.updateValue(_:)(sub_10004A580, 0LL, v1, v2);
  [v0 setNeedsFocusUpdate];
  return 3LL;
}

uint64_t sub_10004A6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DCBC0 != -1) {
    swift_once(&qword_1002DCBC0, sub_100102E30);
  }
  uint64_t v8 = type metadata accessor for StaticDimension(0LL);
  uint64_t v9 = sub_1000061F4(v8, (uint64_t)qword_1002F0558);
  static Dimensions.defaultRoundingRule.getter(v9);
  double v10 = AnyDimension.value(in:rounded:)(a3, v7, v8, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(void *)&v10;
}

uint64_t sub_10004A7B8()
{
  return sub_100003B6C( &qword_1002DF730,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductDescription,  (uint64_t)&protocol conformance descriptor for ProductDescription);
}

unint64_t sub_10004A7EC()
{
  unint64_t result = qword_1002DF780;
  if (!qword_1002DF780)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002350B0, &_s14descr100282211C5StateVN);
    atomic_store(result, (unint64_t *)&qword_1002DF780);
  }

  return result;
}

unint64_t sub_10004A834()
{
  unint64_t result = qword_1002DF788;
  if (!qword_1002DF788)
  {
    unint64_t result = swift_getWitnessTable(&unk_100235088, &_s14descr100282211C5StateVN);
    atomic_store(result, (unint64_t *)&qword_1002DF788);
  }

  return result;
}

uint64_t sub_10004A878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

double sub_10004A898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0LL);
  uint64_t v11 = v10;
  uint64_t v12 = sub_100003B6C( (unint64_t *)&qword_1002DD7B0,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_10023351C);
  uint64_t v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, v11, (char *)&type metadata for Any + 8, v12);
  v9(v13, a3, a4, a5);
  *(void *)&double result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

void sub_10004A938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v9 = sub_1000031E8((uint64_t *)&unk_1002DE270);
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v13 = objc_msgSend(v6, "contentView", v10);
  [v13 frame];

  CGRect.subtracting(insets:)([v6 layoutMargins]);
  double v15 = v14;
  v17.n128_f64[0] = sub_1001327CC(v16, 1.79769313e308, a1, 0, a5);
  double v19 = v18;
  uint64_t v20 = ProductDescription.paragraph.getter(v17);
  uint64_t v21 = sub_1000031E8(&qword_1002DF790);
  unint64_t v22 = sub_100034DA8();
  double v23 = WritableStateLens<A>.currentValue.getter(&aBlock, v21, v22);
  if (aBlock == 2)
  {
    uint64_t v24 = Paragraph.isCollapsed.getter(v23);
    uint64_t v54 = v20;
    uint64_t v55 = v6;
    if ((v24 & 1) == 0)
    {
LABEL_8:
      uint64_t v42 = (void *)Paragraph.text.getter(v24);
      id v43 = [a5 traitCollection];
      id v44 = [objc_allocWithZone(NSMutableAttributedString) initWithAttributedString:v42];
      id v45 = [v42 length];
      uint64_t v46 = swift_allocObject(&unk_1002820A8, 33LL, 7LL);
      *(void *)(v46 + swift_unknownObjectWeakDestroy(v0 + 16) = v43;
      *(void *)(v46 + 24) = v44;
      *(_BYTE *)(v46 + 32) = 1;
      uint64_t v47 = swift_allocObject(&unk_1002820D0, 32LL, 7LL);
      *(void *)(v47 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10004AEB0;
      *(void *)(v47 + 24) = v46;
      uint64_t v60 = sub_10004AECC;
      uint64_t v61 = v47;
      aBlock = _NSConcreteStackBlock;
      uint64_t v57 = 1107296256LL;
      uint64_t v58 = sub_10004A898;
      double v59 = &unk_1002820E8;
      uint64_t v48 = _Block_copy(&aBlock);
      uint64_t v49 = v61;
      id v50 = v43;
      id v51 = v44;
      swift_retain(v47);
      objc_msgSend( v42,  "enumerateAttributesInRange:options:usingBlock:",  0,  v45,  0x100000,  v48,  swift_release(v49).n128_f64[0]);
      _Block_release(v48);
      LOBYTE(v48) = swift_isEscapingClosureAtFileLocation(v47, "", 133LL, 29LL, 92LL, 1LL);

      swift_release(v46);
      swift_release(v47);
      if ((v48 & 1) == 0)
      {
        char v35 = v55;
        id v36 = v51;
        uint64_t v37 = v54;
        v52.n128_f64[0] = Paragraph.alignment.getter();
        uint64_t v53 = type metadata accessor for Paragraph.Alignment(0LL, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56LL))(v12, 0LL, 1LL, v53);
        char v40 = v51;
        char v41 = 0;
        goto LABEL_10;
      }

      goto LABEL_12;
    }
  }

  else
  {
    uint64_t v24 = aBlock & 1;
    uint64_t v54 = v20;
    uint64_t v55 = v6;
  }

  if (v15 >= v19) {
    goto LABEL_8;
  }
  uint64_t v25 = (void *)Paragraph.collapsedText.getter();
  id v26 = [a5 traitCollection];
  id v27 = [objc_allocWithZone(NSMutableAttributedString) initWithAttributedString:v25];
  id v28 = [v25 length];
  uint64_t v29 = swift_allocObject(&unk_100282120, 33LL, 7LL);
  *(void *)(v29 + swift_unknownObjectWeakDestroy(v0 + 16) = v26;
  *(void *)(v29 + 24) = v27;
  *(_BYTE *)(v29 + 32) = 1;
  uint64_t v30 = swift_allocObject(&unk_100282148, 32LL, 7LL);
  *(void *)(v30 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10004B0CC;
  *(void *)(v30 + 24) = v29;
  uint64_t v60 = sub_10004B0D0;
  uint64_t v61 = v30;
  aBlock = _NSConcreteStackBlock;
  uint64_t v57 = 1107296256LL;
  uint64_t v58 = sub_10004A898;
  double v59 = &unk_100282160;
  unsigned __int8 v31 = _Block_copy(&aBlock);
  uint64_t v32 = v61;
  id v33 = v26;
  id v34 = v27;
  swift_retain(v30);
  objc_msgSend( v25,  "enumerateAttributesInRange:options:usingBlock:",  0,  v28,  0x100000,  v31,  swift_release(v32).n128_f64[0]);
  _Block_release(v31);
  LOBYTE(v32) = swift_isEscapingClosureAtFileLocation(v30, "", 133LL, 29LL, 92LL, 1LL);

  swift_release(v29);
  swift_release(v30);
  if ((v32 & 1) == 0)
  {
    char v35 = v55;
    id v36 = v34;
    uint64_t v37 = v54;
    v38.n128_f64[0] = Paragraph.alignment.getter();
    uint64_t v39 = type metadata accessor for Paragraph.Alignment(0LL, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v12, 0LL, 1LL, v39);
    char v40 = v34;
    char v41 = 1;
LABEL_10:
    sub_100016A60(v40, v41, 0, (uint64_t)v12);

    sub_10004AF04((uint64_t)v12);
    [v35 setNeedsLayout];
    swift_release(v37);
    return;
  }

  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t sub_10004AE84()
{
  return swift_deallocObject(v0, 33LL, 7LL);
}

void sub_10004AEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10004AEBC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10004AECC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10004AEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004AEFC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10004AF04(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002DE270);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10004AF44()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t _s14descr100282211C5StateVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

uint64_t _s14descr100282211C5StateVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_10004B04C + 4 * byte_10023501D[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10004B080 + 4 * asc_100235018[v4]))();
}

uint64_t sub_10004B080(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004B088(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10004B090LL);
  }
  return result;
}

uint64_t sub_10004B09C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10004B0A4LL);
  }
  *(_BYTE *)double result = a2 + 2;
  return result;
}

uint64_t sub_10004B0A8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004B0B0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr100282211C5StateVMa()
{
  return &_s14descr100282211C5StateVN;
}

double sub_10004B0E0()
{
  return 0.07;
}

double sub_10004B0EC()
{
  return 0.15;
}

void sub_10004B0FC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void (*v13)(void *__return_ptr, uint64_t, uint64_t);
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  char v20;
  double v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  void aBlock[5];
  void *v28;
  void v29[5];
  void v30[5];
  void v31[5];
  _BYTE v32[32];
  char v33;
  _BYTE v34[40];
  CGRect v35;
  CGRect v36;
  sub_10004B630(a1, (uint64_t)v31);
  CGFloat v9 = *(double *)v31;
  CGFloat v10 = *(double *)&v31[1];
  CGFloat v11 = *(double *)&v31[2];
  CGFloat v12 = *(double *)&v31[3];
  id v13 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 8);
  v13(v29, a3, a4);
  double v14 = *(double *)v29;
  double v15 = *(double *)&v29[1];
  double v16 = *(double *)&v29[2];
  __n128 v17 = *(double *)&v29[3];
  sub_10004B630(a1, (uint64_t)v34);
  if ((v34[32] & 1) != 0)
  {
    sub_10004B630((uint64_t)v29, (uint64_t)v32);
    if ((v33 & 1) != 0) {
      return;
    }
  }

  else
  {
    sub_10004B630((uint64_t)v29, (uint64_t)v32);
    if ((v33 & 1) == 0)
    {
      v35.origin.CGFloat x = v9;
      v35.origin.CGFloat y = v10;
      v35.size.CGFloat width = v11;
      v35.size.CGFloat height = v12;
      v36.origin.CGFloat x = v14;
      v36.origin.CGFloat y = v15;
      v36.size.CGFloat width = v16;
      v36.size.CGFloat height = v17;
      if (CGRectEqualToRect(v35, v36)) {
        return;
      }
    }
  }

  v13(v30, a3, a4);
  double v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a4 + 32);
  double v19 = v18(v30, a3, a4) & 1;
  uint64_t v20 = v18((void *)a1, a3, a4);
  if (v19 == (v20 & 1))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a3, a4);
    return;
  }

  if (a2)
  {
    if (a2 == 1)
    {
      if ((v20 & 1) != 0) {
        return;
      }
    }

    else if ((v20 & 1) == 0)
    {
      return;
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a3, a4);
    [v4 setNeedsLayout];
    [v4 layoutIfNeeded];
    return;
  }

  if ((v20 & 1) != 0) {
    uint64_t v21 = 0.07;
  }
  else {
    uint64_t v21 = 0.15;
  }
  unint64_t v22 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  double v23 = (void *)swift_allocObject(&unk_100282268, 73LL, 7LL);
  _OWORD v23[2] = a3;
  v23[3] = a4;
  v23[4] = v4;
  sub_10004B630(a1, (uint64_t)(v23 + 5));
  aBlock[4] = sub_10004B69C;
  id v28 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100135408;
  aBlock[3] = &unk_100282280;
  uint64_t v24 = _Block_copy(aBlock);
  uint64_t v25 = v28;
  id v26 = v4;
  swift_release(v25);
  [v22 animateWithDuration:4 delay:v24 options:0 animations:v21 completion:0.0];
  _Block_release(v24);
}

void sub_10004B380(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = 0LL;
  if ((v25 & 1) != 0) {
    goto LABEL_4;
  }
  CGFloat v7 = *(double *)v24;
  CGFloat v8 = *(double *)&v24[1];
  CGFloat v9 = *(double *)&v24[2];
  CGFloat v10 = *(double *)&v24[3];
  [v3 frame];
  v28.origin.double x = v11;
  v28.origin.double y = v12;
  v28.size.double width = v13;
  v28.size.double height = v14;
  v26.origin.double x = v7;
  v26.origin.double y = v8;
  v26.size.double width = v9;
  v26.size.double height = v10;
  CGRect v27 = CGRectIntersection(v26, v28);
  double x = v27.origin.x;
  double y = v27.origin.y;
  double width = v27.size.width;
  double height = v27.size.height;
  if (CGRectGetHeight(v27) <= COERCE_DOUBLE(1LL))
  {
LABEL_4:
    char v23 = 1;
    uint64_t v19 = 0LL;
    uint64_t v20 = 0LL;
    uint64_t v21 = 0LL;
  }

  else
  {
    objc_msgSend(a2, "convertRect:toCoordinateSpace:", v3, x, y, width, height);
    uint64_t v6 = v22;
    char v23 = 0;
  }

  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v19;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v20;
  *(void *)(a3 + 24) = v21;
  *(_BYTE *)(a3 + 32) = v23;
}

void sub_10004B488( uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, double a7, double a8, double a9)
{
  if ((v28 & 1) == 0)
  {
    *(double *)CGRect v26 = a6;
    *(double *)&v26[8] = a7;
    *(double *)&v26[16] = a8;
    *(double *)&v26[24] = a9;
    v29.size.double height = a5;
    CGFloat v18 = *(double *)v27;
    CGFloat v17 = *(double *)&v27[1];
    CGFloat v19 = *(double *)&v27[2];
    CGFloat v20 = *(double *)&v27[3];
    v29.origin.double x = a2;
    v29.origin.double y = a3;
    v29.size.double width = a4;
    CGFloat rect = v29.size.height;
    double MaxX = CGRectGetMaxX(v29);
    v30.origin.double x = v18;
    v30.origin.double y = v17;
    v30.size.double width = v19;
    v30.size.double height = v20;
    if (CGRectGetMinX(v30) < MaxX) {
      goto LABEL_4;
    }
    v31.origin.double x = a2;
    v31.origin.double y = a3;
    v31.size.double width = a4;
    v31.size.double height = rect;
    double MinX = CGRectGetMinX(v31);
    v32.origin.double x = v18;
    v32.origin.double y = v17;
    v32.size.double width = v19;
    v32.size.double height = v20;
    if (CGRectGetMaxX(v32) < MinX)
    {
LABEL_4:
      double MaxY = CGRectGetMaxY(*(CGRect *)v26);
      v33.origin.double x = v18;
      v33.origin.double y = v17;
      v33.size.double width = v19;
      v33.size.double height = v20;
      if (CGRectGetMinY(v33) < MaxY)
      {
        double v24 = CGRectGetMaxY(*(CGRect *)v26);
        v34.origin.double y = v17;
        v34.origin.double x = v18;
        v34.size.double width = v19;
        v34.size.double height = v20;
        if (v24 <= CGRectGetMaxY(v34) + COERCE_DOUBLE(1LL))
        {
          CGRectGetMaxY(*(CGRect *)v26);
          v35.origin.double x = v18;
          v35.origin.double y = v17;
          v35.size.double width = v19;
          v35.size.double height = v20;
          CGRectGetMinY(v35);
        }
      }
    }
  }

uint64_t sub_10004B630(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002E9700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004B678()
{
  return swift_deallocObject(v0, 73LL, 7LL);
}

id sub_10004B69C()
{
  __int16 v1 = (void *)v0[4];
  (*(void (**)(void *, void))(v0[3] + 16LL))(v0 + 5, v0[2]);
  [v1 setNeedsLayout];
  return [v1 layoutIfNeeded];
}

uint64_t sub_10004B6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004B6F8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_10004B704()
{
  unint64_t result = qword_1002DF798;
  if (!qword_1002DF798)
  {
    uint64_t v1 = type metadata accessor for PrivacyCategoryCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100235110, v1);
    atomic_store(result, (unint64_t *)&qword_1002DF798);
  }

  return result;
}

double sub_10004B750(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v41 = type metadata accessor for PageGrid(0LL);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  int v3 = (char **)((char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  __chkstk_darwin(v4);
  id v36 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = sub_1000031E8(&qword_1002EB230);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  CGFloat v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  CGFloat v11 = (char **)((char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  double v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v45, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t KeyPath = swift_getKeyPath(&unk_100235160, v17);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  uint64_t v20 = swift_getKeyPath(&unk_100235190, v19);
  ReadOnlyLens.subscript.getter(v20, v8);
  __n128 v21 = swift_release(v20);
  (*(void (**)(void *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
  __n128 v22 = swift_bridgeObjectRelease(v44);
  ItemLayoutContext.state.getter(v22);
  uint64_t v23 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v24 = swift_dynamicCastClassUnconditional(v37, v23, 0LL, 0LL, 0LL);
  uint64_t v25 = (uint64_t)v36;
  ItemLayoutContext.componentLayoutOptions.getter(v24);
  uint64_t v27 = swift_getKeyPath(&unk_1002351C0, v26);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v27);
  double v29 = PageGrid.componentMeasuringSize(spanning:)(v28, 1.0);
  double v31 = v30;
  (*(void (**)(void *, uint64_t))(v39 + 8))(v3, v41);
  id v32 = sub_100147A04();
  sub_1000343B8((uint64_t)v45, (uint64_t)v7, v29, v31, v25, v32);
  double v34 = v33;
  swift_unknownObjectRelease(v32);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v25, v43);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v40);
  _s6Arcade17PillOverlayLayoutVwxx_0(v45);
  return v34;
}

double sub_10004BA54()
{
  double result = 265.0;
  xmmword_1002EE760 = xmmword_1002351F0;
  return result;
}

double sub_10004BA68()
{
  double result = 14.0;
  xmmword_1002DF7A0 = xmmword_100235200;
  *(_OWORD *)&qword_1002DF7B0 = xmmword_100235200;
  return result;
}

uint64_t sub_10004BA80()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000FF90(v4, qword_1002DF7C0);
  sub_1000061F4(v4, (uint64_t)qword_1002DF7C0);
  if (qword_1002DC648 != -1) {
    swift_once(&qword_1002DC648, sub_1000715C0);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_1000061F4(v6, (uint64_t)qword_1002EEF28);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v3, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  v11[3] = v0;
  v11[4] = &protocol witness table for FontSource;
  uint64_t v8 = sub_100009D54(v11);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  StaticDimension.init(_:scaledLike:)(v11, 18.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10004BBCC()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000FF90(v4, qword_1002DF7D8);
  sub_1000061F4(v4, (uint64_t)qword_1002DF7D8);
  if (qword_1002DC638 != -1) {
    swift_once(&qword_1002DC638, sub_100071584);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_1000061F4(v6, (uint64_t)qword_1002EEEF8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v3, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  v11[3] = v0;
  v11[4] = &protocol witness table for FontSource;
  uint64_t v8 = sub_100009D54(v11);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  StaticDimension.init(_:scaledLike:)(v11, 8.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

char *sub_10004BD18(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v99 = type metadata accessor for SystemImage(0LL);
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v100 = type metadata accessor for CornerStyle(0LL);
  uint64_t v11 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for FontUseCase(0LL, v14);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  CGFloat v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_ratingLabel;
  uint64_t v20 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v21 = qword_1002DC630;
  __n128 v22 = v5;
  if (v21 != -1) {
    swift_once(&qword_1002DC630, sub_10007156C);
  }
  uint64_t v23 = sub_1000061F4(v15, (uint64_t)qword_1002EEEE0);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v24(v18, v23, v15);
  *(void *)&v5[v19] = sub_1000137B8((uint64_t)v18, 1LL, 0LL, 1, 0);
  uint64_t v25 = OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_outOfRatingLabel;
  if (qword_1002DC638 != -1) {
    swift_once(&qword_1002DC638, sub_100071584);
  }
  uint64_t v26 = sub_1000061F4(v15, (uint64_t)qword_1002EEEF8);
  v24(v18, v26, v15);
  uint64_t v101 = (objc_class *)v20;
  *(void *)&v22[v25] = sub_1000137B8((uint64_t)v18, 2LL, 0LL, 1, 0);
  uint64_t v27 = OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_starRatingView;
  *(void *)&v22[v27] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for StarRatingView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);

  uint64_t v28 = (objc_class *)type metadata accessor for ProductRatingsSummaryCardView();
  v106.receiver = v22;
  v106.super_class = v28;
  double v29 = (char *)objc_msgSendSuper2(&v106, "initWithFrame:", a1, a2, a3, a4);
  id v30 = [v29 contentView];
  id v31 = [v30 layer];

  [v31 setAllowsGroupBlending:0];
  id v32 = [v29 contentView];
  [v32 setClipsToBounds:1];

  uint64_t v33 = v100;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for CornerStyle.continuous(_:), v100);
  id v34 = [v29 contentView];
  CornerStyle.apply(withRadius:to:)(v34, 12.0);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v33);
  CGRect v35 = &v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  __int128 v36 = *(_OWORD *)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
  v112[0] = *(_OWORD *)&v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  v112[1] = v36;
  char v113 = v29[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)CGRect v35 = 0x4020000000000000LL;
  *((void *)v35 + 1) = 0x4039000000000000LL;
  v35[16] = 0;
  *((void *)v35 + 3) = 0LL;
  v35[32] = 1;
  uint64_t v37 = v29;
  sub_1000690F4((uint64_t)v112, v38, v39);

  v107[0] = xmmword_100233760;
  v107[1] = xmmword_100233770;
  char v108 = 0;
  uint64_t v109 = 0LL;
  uint64_t v110 = 0LL;
  char v111 = 1;
  uint64_t v40 = v37;
  sub_10006779C(v107);

  uint64_t v41 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v42 = v40;
  id v43 = [v41 blackColor];
  id v44 = [v43 CGColor];

  id v45 = &v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v46 = *(void **)&v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v47 = *(void **)&v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
  uint64_t v48 = *(void **)&v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
  *(void *)id v45 = v44;
  *(int64x2_t *)(v45 + 8) = vdupq_n_s64(1uLL);
  id v49 = v46;
  sub_10000AAF8(v47);
  sub_10000AAF8(v48);
  id v50 = v44;

  sub_10000AB08(v47);
  sub_10000AB08(v48);
  sub_100069248(v46, v47, (unint64_t)v48);

  sub_10000AB08(v47);
  sub_10000AB08(v48);

  id v51 = &v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v52 = *(_DWORD *)&v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v5_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_DWORD *)&v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v27) = v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
  char v53 = v42[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)id v51 = 1048576000;
  *((_DWORD *)v51 + 1) = 1051931443;
  v51[8] = 0;
  uint64_t v54 = *((unsigned int *)v51 + 3);
  *((_DWORD *)v51 + 3) = 0;
  v51[16] = 1;
  uint64_t v55 = v42;
  char v105 = v27;
  char v104 = v53;
  v56.n128_u32[0] = v52;
  sub_1000693B0((int)v50, v27 | (unint64_t)(v54 << 32), v53, v56);

  char v57 = v55[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
  v55[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v57 & 1) == 0)
  {
    char v58 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v55) + 0x98LL))();
    double v59 = v55;
    sub_1000678F0(v58);
  }

  uint64_t v60 = OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_ratingLabel;
  uint64_t v61 = *(_BYTE **)&v55[OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_ratingLabel];
  int v62 = v61[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v61[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  uint64_t v63 = v101;
  if (v62 != 1)
  {
    uint64_t v64 = v61;
    id v65 = [v64 traitCollection];
    char v66 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v66 & 1) != 0) {
      uint64_t v67 = 2LL;
    }
    else {
      uint64_t v67 = 0LL;
    }
    v103.receiver = v64;
    v103.super_class = v63;
    objc_msgSendSuper2(&v103, "setTextAlignment:", v67);
  }

  double v68 = *(void **)&v55[v60];
  sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  id v69 = v68;
  uint64_t v70 = (void *)static UIColor.opacityA.getter();
  [v69 setTextColor:v70];

  id v71 = [v55 contentView];
  [v71 addSubview:*(void *)&v55[v60]];

  uint64_t v72 = OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_outOfRatingLabel;
  double v73 = *(_BYTE **)&v55[OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_outOfRatingLabel];
  int v74 = v73[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v73[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v74 != 1)
  {
    uint64_t v75 = v73;
    id v76 = [v75 traitCollection];
    char v77 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v77 & 1) != 0) {
      uint64_t v78 = 2LL;
    }
    else {
      uint64_t v78 = 0LL;
    }
    v102.receiver = v75;
    v102.super_class = v63;
    objc_msgSendSuper2(&v102, "setTextAlignment:", v78);
  }

  id v79 = *(id *)&v55[v72];
  uint64_t v80 = (void *)static UIColor.opacityB.getter();
  [v79 setTextColor:v80];

  id v81 = [v55 contentView];
  [v81 addSubview:*(void *)&v55[v72]];

  uint64_t v82 = OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_starRatingView;
  uint64_t v83 = *(_BYTE **)&v55[OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_starRatingView];
  int v84 = v83[OBJC_IVAR____TtC6Arcade14StarRatingView_starSize];
  v83[OBJC_IVAR____TtC6Arcade14StarRatingView_starSize] = 0;
  if (v84 == 1)
  {
    uint64_t v85 = v98;
    id v86 = v97;
    uint64_t v87 = v99;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v97, enum case for SystemImage.starFill(_:), v99);
    sub_100006028(0LL, (unint64_t *)&qword_1002DDB10, &OBJC_CLASS___UIImageSymbolConfiguration_ptr);
    uint64_t v88 = v83;
    uint64_t v89 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)( UIFontTextStyleCallout,  0LL,  1LL,  1LL,  0LL);
    uint64_t v90 = (void *)static SystemImage.load(_:with:)(v86, v89);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
    id v91 = [v90 imageWithRenderingMode:2];

    uint64_t v92 = *(void **)&v88[OBJC_IVAR____TtC6Arcade14StarRatingView_starGlyph];
    *(void *)&v88[OBJC_IVAR____TtC6Arcade14StarRatingView_starGlyph] = v91;

    [v88 setNeedsDisplay];
  }

  id v93 = [v55 contentView];
  id v94 = *(id *)&v55[v82];
  [v93 addSubview:v94];

  return v55;
}

id sub_10004C5F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (objc_class *)type metadata accessor for ProductRatingsSummaryCardView();
  v63.receiver = v0;
  v63.super_class = v6;
  objc_msgSendSuper2(&v63, "layoutSubviews");
  id v7 = [v0 contentView];
  [v7 frame];

  *(void *)&double v8 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  if (qword_1002DC458 != -1) {
    swift_once(&qword_1002DC458, sub_10004BA68);
  }
  v64.origin.CGFloat x = sub_10000AA6C(v8, v10, v12, v14, *(double *)&xmmword_1002DF7A0, *((double *)&xmmword_1002DF7A0 + 1));
  CGFloat x = v64.origin.x;
  CGFloat y = v64.origin.y;
  double width = v64.size.width;
  double height = v64.size.height;
  CGFloat MinY = CGRectGetMinY(v64);
  uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_ratingLabel];
  objc_msgSend(v19, "measurementsWithFitting:in:", v1, width, height);
  double v21 = v20;
  uint64_t v59 = v23;
  double v60 = v22;
  uint64_t v24 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_outOfRatingLabel];
  objc_msgSend(v24, "measurementsWithFitting:in:", v1, width, height);
  double v26 = v25;
  uint64_t v61 = v27;
  uint64_t v54 = v28;
  if (qword_1002DC468 != -1) {
    swift_once(&qword_1002DC468, sub_10004BBCC);
  }
  uint64_t v29 = type metadata accessor for StaticDimension(0LL);
  uint64_t v30 = sub_1000061F4(v29, (uint64_t)qword_1002DF7D8);
  static Dimensions.defaultRoundingRule.getter(v30);
  double v31 = AnyDimension.value(in:rounded:)(v1, v5, v29, &protocol witness table for StaticDimension);
  id v32 = *(void (**)(char *, uint64_t))(v3 + 8);
  v32(v5, v2);
  double v56 = v26 + v21 + v31;
  double v57 = v31;
  v65.origin.CGFloat x = x;
  v65.origin.CGFloat y = y;
  v65.size.double width = width;
  v65.size.double height = height;
  CGFloat v33 = CGRectGetWidth(v65);
  double v58 = v26;
  double v55 = v33;
  v66.origin.CGFloat x = x;
  v66.origin.CGFloat y = y;
  v66.size.double width = width;
  v66.size.double height = height;
  CGFloat v34 = x;
  CGFloat MinX = CGRectGetMinX(v66);
  CGFloat v36 = v21;
  CGFloat v37 = MinY;
  CGFloat v38 = v60;
  double v39 = CGRect.withLayoutDirection(in:relativeTo:)(v1);
  objc_msgSend(v19, "setFrame:", v39, v54);
  v67.origin.CGFloat x = MinX;
  v67.origin.CGFloat y = v37;
  v67.size.double width = v36;
  v67.size.double height = v38;
  CGRectGetMaxY(v67);
  if (v56 >= v55)
  {
    v69.origin.CGFloat x = v34;
    v69.origin.CGFloat y = y;
    v69.size.double width = width;
    v69.size.double height = height;
    CGRectGetMinX(v69);
  }

  else
  {
    v68.origin.CGFloat x = MinX;
    v68.origin.CGFloat y = MinY;
    v68.size.double width = v36;
    v68.size.double height = v38;
    CGRectGetMaxX(v68);
  }

  CGFloat v40 = v34;
  [v24 setFrame:CGRect.withLayoutDirection(in:relativeTo:)(v1)];
  if (qword_1002DC460 != -1) {
    swift_once(&qword_1002DC460, sub_10004BA80);
  }
  uint64_t v41 = sub_1000061F4(v29, (uint64_t)qword_1002DF7C0);
  static Dimensions.defaultRoundingRule.getter(v41);
  double v42 = AnyDimension.value(in:rounded:)(v1, v5, v29, &protocol witness table for StaticDimension);
  v32(v5, v2);
  [v24 frame];
  double v43 = v42 + CGRectGetMaxY(v70);
  id v44 = *(void **)&v1[OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_starRatingView];
  objc_msgSend(v44, "sizeThatFits:", width, height);
  double v46 = v45;
  double v48 = v47;
  v71.origin.CGFloat x = v40;
  v71.origin.CGFloat y = y;
  v71.size.double width = width;
  v71.size.double height = height;
  double v49 = CGRectGetMidX(v71) + v46 * -0.5;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for FloatingPointRoundingRule.down(_:), v2);
  double v50 = CGPoint.rounded(_:)(v5, v49, v43);
  double v52 = v51;
  v32(v5, v2);
  return objc_msgSend(v44, "setFrame:", v50, v52, v46, v48);
}

double sub_10004CB48()
{
  return 50.0;
}

double sub_10004CB54()
{
  return 8.0;
}

void sub_10004CC30(char a1)
{
  id v6 = [v1 contentView];
  if (qword_1002DCFB0 != -1) {
    swift_once(&qword_1002DCFB0, sub_100176094);
  }
  uint64_t v3 = (void *)qword_1002F12D8;
  if (a1)
  {
    uint64_t v4 = qword_1002F12E0;
    if (!qword_1002F12E0) {
      uint64_t v4 = qword_1002F12D8;
    }
    if (qword_1002F12E8) {
      uint64_t v3 = (void *)qword_1002F12E8;
    }
    if (a1 == 1) {
      uint64_t v3 = (void *)v4;
    }
  }

  id v5 = v3;
  [v6 setBackgroundColor:v5];
}

char *sub_10004CCEC(float a1)
{
  id v3 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
  *(float *)&double v4 = a1;
  v21.value.super.super.Class isa = (Class)[v3 initWithFloat:v4];
  Class isa = v21.value.super.super.isa;
  v21.is_nil = 1;
  object = localizedStringForDecimal(_:_:)(v21, v6).value._object;

  if (!object)
  {
    Float.description.getter(a1);
    object = v8;
  }

  double v9 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_ratingLabel);
  uint64_t v10 = sub_1000031E8(&qword_1002DF830);
  uint64_t inited = swift_initStackObject(v10, v20);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
  *(void *)(inited + 64) = &type metadata for Int;
  *(void *)(inited + 32) = NSKernAttributeName;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = -1LL;
  double v12 = NSKernAttributeName;
  unint64_t v13 = sub_1000E68C8(inited);
  id v14 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  type metadata accessor for Key(0LL);
  sub_1000495EC();
  Class v16 = Dictionary._bridgeToObjectiveC()().super.isa;
  id v17 = objc_msgSend(v14, "initWithString:attributes:", v15, v16, swift_bridgeObjectRelease(v13).n128_f64[0]);

  [v9 setAttributedText:v17];
  double result = *(char **)(v1 + OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_starRatingView);
  double v19 = *(double *)&result[OBJC_IVAR____TtC6Arcade14StarRatingView_rating];
  *(double *)&result[OBJC_IVAR____TtC6Arcade14StarRatingView_rating] = a1;
  if (v19 != a1) {
    return (char *)[result setNeedsDisplay];
  }
  return result;
}

void sub_10004CEB4()
{
}

id sub_10004CEF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductRatingsSummaryCardView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProductRatingsSummaryCardView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade29ProductRatingsSummaryCardView);
}

uint64_t AccountSignInLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10004CF94(v1, a1);
}

uint64_t sub_10004CF94(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  __int128 v5 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a2 + 40, a1 + 40);
  return a2;
}

double AccountSignInLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  return sub_10004D748(a1, v3, a2, a3);
}

uint64_t sub_10004D03C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  id v7 = v6;
  uint64_t v101 = a2;
  uint64_t v13 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Class v16 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v17 = v6 + 10;
  uint64_t v18 = v6[13];
  uint64_t v19 = v7[14];
  sub_100005F8C(v17, v18);
  double v20 = Measurable.measuredSize(fitting:in:)(a1, v18, *(void *)(v19 + 8), a5, a6);
  CGFloat v113 = v21;
  v114.origin.CGFloat x = a3;
  v114.origin.CGFloat y = a4;
  v114.size.double width = a5;
  v114.size.double height = a6;
  CGFloat v22 = CGRectGetMidX(v114) - v20 * 0.5;
  v115.origin.CGFloat x = a3;
  v115.origin.CGFloat y = a4;
  CGFloat v104 = a4;
  v115.size.double width = a5;
  v115.size.double height = a6;
  CGFloat MinY = CGRectGetMinY(v115);
  uint64_t v24 = v7[13];
  uint64_t v25 = v7[14];
  sub_100005F8C(v17, v24);
  CGFloat v109 = v22;
  CGFloat v110 = a3;
  double v26 = a6;
  CGFloat v106 = MinY;
  CGFloat v111 = v20;
  CGFloat v27 = v113;
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v24, v25);
  uint64_t v28 = v7[18];
  uint64_t v29 = v7[19];
  sub_100005F8C(v7 + 15, v28);
  double v112 = Measurable.measuredSize(fitting:in:)(a1, v28, *(void *)(v29 + 8), a5, v26);
  CGFloat v108 = v30;
  v116.origin.CGFloat x = a3;
  double v31 = v104;
  v116.origin.CGFloat y = v104;
  v116.size.double width = a5;
  v116.size.double height = v26;
  double v107 = CGRectGetMidX(v116) - v112 * 0.5;
  v117.origin.CGFloat x = v22;
  v117.origin.CGFloat y = MinY;
  v117.size.double width = v20;
  v117.size.double height = v27;
  double MaxY = CGRectGetMaxY(v117);
  uint64_t v33 = v7[3];
  uint64_t v34 = v7[4];
  sub_100005F8C(v7, v33);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v33, v34);
  double v35 = AnyDimension.value(in:rounded:)(a1, v16, v33, v34);
  CGFloat v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  v36(v16, v13);
  double v102 = MaxY + v35;
  uint64_t v37 = v7[18];
  uint64_t v38 = v7[19];
  sub_100005F8C(v7 + 15, v37);
  CGFloat v39 = v110;
  CGFloat v40 = v31;
  double v41 = v26;
  CGFloat v103 = v26;
  CGFloat v42 = v107;
  CGFloat v43 = v108;
  CGFloat v44 = v112;
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v37, v38);
  uint64_t v45 = v7[23];
  uint64_t v46 = v7[24];
  sub_100005F8C(v7 + 20, v45);
  double v94 = dispatch thunk of Measurable.measurements(fitting:in:)( a1,  v45,  *(void *)(*(void *)(v46 + 8) + 8LL),  a5,  v41);
  double v97 = v47;
  double v99 = v48;
  double v105 = v49;
  v118.origin.CGFloat x = v39;
  v118.origin.CGFloat y = v40;
  v118.size.double width = a5;
  CGFloat v100 = a5;
  v118.size.double height = v41;
  double v50 = CGRectGetMidX(v118) - v94 * 0.5;
  v119.origin.CGFloat x = v42;
  CGFloat v51 = v102;
  v119.origin.CGFloat y = v102;
  v119.size.double width = v44;
  v119.size.double height = v43;
  double v52 = CGRectGetMaxY(v119);
  char v53 = v7 + 5;
  uint64_t v54 = v7[8];
  uint64_t v55 = v7[9];
  sub_100005F8C(v7 + 5, v54);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v54, v55);
  double v56 = AnyDimension.value(in:rounded:)(a1, v16, v54, v55);
  v36(v16, v13);
  CGFloat v98 = v52 + v56;
  uint64_t v57 = v7[23];
  uint64_t v58 = v7[24];
  sub_100005F8C(v7 + 20, v57);
  double v59 = v94;
  double v60 = v97;
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v57, *(void *)(v58 + 8));
  v120.origin.CGFloat x = v109;
  v120.origin.CGFloat y = v106;
  v120.size.double width = v111;
  v120.size.double height = v113;
  double Height = CGRectGetHeight(v120);
  uint64_t v62 = v7[3];
  uint64_t v63 = v7[4];
  sub_100005F8C(v7, v62);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v62, v63);
  double v64 = AnyDimension.value(in:rounded:)(a1, v16, v62, v63);
  v36(v16, v13);
  double v65 = Height + v64;
  CGFloat v67 = v107;
  CGFloat v66 = v108;
  v121.origin.CGFloat x = v107;
  CGFloat v68 = v51;
  v121.origin.CGFloat y = v51;
  v121.size.double width = v112;
  v121.size.double height = v108;
  double v69 = v65 + CGRectGetHeight(v121);
  uint64_t v70 = v7[8];
  uint64_t v71 = v7[9];
  sub_100005F8C(v53, v70);
  CGFloat v72 = v60;
  double v99 = v69 + AnyDimension.topMargin(from:in:)(a1, v70, v71, v59, v60, v99, v105);
  v122.origin.CGFloat x = v50;
  CGFloat v73 = v98;
  v122.origin.CGFloat y = v98;
  v122.size.double width = v59;
  v122.size.double height = v72;
  double MinX = CGRectGetMinX(v122);
  v123.origin.CGFloat x = v67;
  v123.origin.CGFloat y = v68;
  v123.size.double width = v112;
  v123.size.double height = v66;
  double v75 = CGRectGetMinX(v123);
  v124.origin.CGFloat x = v50;
  v124.origin.CGFloat y = v73;
  v124.size.double width = v59;
  v124.size.double height = v72;
  double v76 = CGRectGetMinX(v124);
  if (v75 >= MinX) {
    double v77 = MinX;
  }
  else {
    double v77 = v75;
  }
  if (v76 >= v77) {
    double v76 = v77;
  }
  double v96 = v76;
  CGFloat v78 = v109;
  v125.origin.CGFloat x = v109;
  CGFloat v79 = v106;
  v125.origin.CGFloat y = v106;
  CGFloat v80 = v111;
  v125.size.double width = v111;
  CGFloat v81 = v113;
  v125.size.double height = v113;
  double v95 = CGRectGetMinY(v125);
  v126.origin.CGFloat x = v78;
  v126.origin.CGFloat y = v79;
  CGFloat v82 = v79;
  v126.size.double width = v80;
  v126.size.double height = v81;
  double Width = CGRectGetWidth(v126);
  v127.origin.CGFloat x = v107;
  v127.size.double height = v108;
  v127.origin.CGFloat y = v102;
  v127.size.double width = v112;
  double v84 = CGRectGetWidth(v127);
  v128.origin.CGFloat x = v50;
  v128.origin.CGFloat y = v73;
  CGFloat v85 = v73;
  v128.size.double width = v59;
  v128.size.double height = v72;
  double v86 = CGRectGetWidth(v128);
  if (Width > v84) {
    double v87 = Width;
  }
  else {
    double v87 = v84;
  }
  if (v87 > v86) {
    double v88 = v87;
  }
  else {
    double v88 = v86;
  }
  v129.origin.CGFloat x = v110;
  v129.size.double height = v103;
  v129.origin.CGFloat y = v104;
  v129.size.double width = v100;
  double v89 = CGRectGetMinY(v129);
  v130.origin.CGFloat x = v109;
  v130.origin.CGFloat y = v82;
  v130.size.double width = v111;
  v130.size.double height = v113;
  double v90 = v89 + CGRectGetMaxY(v130);
  v131.origin.CGFloat x = v50;
  v131.origin.CGFloat y = v85;
  v131.size.double width = v59;
  v131.size.double height = v72;
  CGFloat v91 = CGRectGetMaxY(v131);
  return LayoutRect.init(x:y:width:height:firstBaseline:lastBaseline:)(v96, v95, v88, v99, v90, v91 - v105);
}

uint64_t AccountSignInLayout.placeChildren(relativeTo:in:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  double v13 = sub_10004D748(a1, v6, a5, a6);
  double v15 = v14;
  v19.origin.CGFloat x = a3;
  v19.origin.CGFloat y = a4;
  v19.size.double width = a5;
  v19.size.double height = a6;
  CGFloat v16 = CGRectGetMidX(v19) - v13 * 0.5;
  v20.origin.CGFloat x = a3;
  v20.origin.CGFloat y = a4;
  v20.size.double width = a5;
  v20.size.double height = a6;
  CGFloat v17 = CGRectGetMidY(v20) - v15 * 0.5;
  return sub_10004D03C(a1, a2, v16, v17, v13, v15);
}

double sub_10004D748(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v50 = a1;
  uint64_t v46 = type metadata accessor for StackMeasurable.Axis(0LL);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  CGFloat v43 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v49 = type metadata accessor for StackMeasurable(0LL);
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  double v47 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for VerticalMarginsMeasurable(0LL);
  uint64_t v45 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  double v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  double v14 = (char *)&v43 - v13;
  __chkstk_darwin(v15);
  CGFloat v17 = (char *)&v43 - v16;
  uint64_t v18 = a2[13];
  uint64_t v19 = a2[14];
  CGRect v20 = sub_100005F8C(a2 + 10, v18);
  uint64_t v56 = v18;
  uint64_t v57 = *(void *)(v19 + 8);
  double v21 = sub_100009D54(v55);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16LL))(v21, v20, v18);
  uint64_t v22 = type metadata accessor for ZeroDimension(0LL);
  v54[3] = v22;
  v54[4] = &protocol witness table for ZeroDimension;
  sub_100009D54(v54);
  static ZeroDimension.zero.getter();
  uint64_t v52 = v22;
  char v53 = &protocol witness table for ZeroDimension;
  sub_100009D54(v51);
  static ZeroDimension.zero.getter();
  VerticalMarginsMeasurable.init(child:topMargin:bottomMargin:skipIfEmpty:shouldMeasureToBaseline:)( v55,  v54,  v51,  1LL,  0LL);
  uint64_t v24 = a2[18];
  uint64_t v23 = a2[19];
  uint64_t v25 = sub_100005F8C(a2 + 15, v24);
  uint64_t v56 = v24;
  uint64_t v57 = *(void *)(v23 + 8);
  double v26 = sub_100009D54(v55);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16LL))(v26, v25, v24);
  sub_10001F010((uint64_t)a2, (uint64_t)v54);
  uint64_t v52 = v22;
  char v53 = &protocol witness table for ZeroDimension;
  sub_100009D54(v51);
  static ZeroDimension.zero.getter();
  VerticalMarginsMeasurable.init(child:topMargin:bottomMargin:skipIfEmpty:shouldMeasureToBaseline:)( v55,  v54,  v51,  1LL,  0LL);
  uint64_t v28 = a2[23];
  uint64_t v27 = a2[24];
  uint64_t v29 = sub_100005F8C(a2 + 20, v28);
  uint64_t v56 = v28;
  uint64_t v57 = *(void *)(*(void *)(v27 + 8) + 8LL);
  double v30 = sub_100009D54(v55);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16LL))(v30, v29, v28);
  sub_10001F010((uint64_t)(a2 + 5), (uint64_t)v54);
  uint64_t v52 = v22;
  char v53 = &protocol witness table for ZeroDimension;
  sub_100009D54(v51);
  static ZeroDimension.zero.getter();
  VerticalMarginsMeasurable.init(child:topMargin:bottomMargin:skipIfEmpty:shouldMeasureToBaseline:)( v55,  v54,  v51,  1LL,  1LL);
  double v31 = v43;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))( v43,  enum case for StackMeasurable.Axis.vertical(_:),  v46);
  uint64_t v32 = sub_1000031E8(&qword_1002E2170);
  uint64_t v33 = swift_allocObject(v32, 152LL, 7LL);
  *(_OWORD *)(v33 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
  *(void *)(v33 + 56) = v9;
  *(void *)(v33 + 64) = &protocol witness table for VerticalMarginsMeasurable;
  uint64_t v34 = sub_100009D54((void *)(v33 + 32));
  uint64_t v35 = v45;
  CGFloat v36 = *(void (**)(void *, char *, uint64_t))(v45 + 16);
  v36(v34, v17, v9);
  *(void *)(v33 + 96) = v9;
  *(void *)(v33 + 104) = &protocol witness table for VerticalMarginsMeasurable;
  uint64_t v37 = sub_100009D54((void *)(v33 + 72));
  v36(v37, v14, v9);
  *(void *)(v33 + 136) = v9;
  *(void *)(v33 + 144) = &protocol witness table for VerticalMarginsMeasurable;
  uint64_t v38 = sub_100009D54((void *)(v33 + 112));
  v36(v38, v11, v9);
  CGFloat v39 = v47;
  StackMeasurable.init(axis:skipEmptyChildren:children:)(v31, 1LL, v33);
  double v40 = StackMeasurable.measurements(fitting:in:)(v50, a3, a4);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v39, v49);
  double v41 = *(void (**)(char *, uint64_t))(v35 + 8);
  v41(v11, v9);
  v41(v14, v9);
  v41(v17, v9);
  return v40;
}

uint64_t destroy for TVArcadeWelcomeLayout.Metrics(void *a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 20);
}

_OWORD *initializeWithCopy for TVArcadeWelcomeLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  __int128 v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  __int128 v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  __int128 v8 = *(_OWORD *)((char *)a2 + 184);
  *(_OWORD *)((char *)a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
  return a1;
}

void *assignWithCopy for TVArcadeWelcomeLayout.Metrics(void *a1, void *a2)
{
  return a1;
}

__n128 initializeWithTake for TVArcadeWelcomeLayout.Metrics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v2 = *(_OWORD *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __int128 v5 = *(_OWORD *)(a2 + 80);
  __int128 v6 = *(_OWORD *)(a2 + 96);
  __int128 v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  __int128 v9 = *(_OWORD *)(a2 + 160);
  __int128 v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for TVArcadeWelcomeLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 160));
  __int128 v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVArcadeWelcomeLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVArcadeWelcomeLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for AccountSignInLayout()
{
  return &type metadata for AccountSignInLayout;
}

ValueMetadata *type metadata accessor for AccountSignInLayout.Metrics()
{
  return &type metadata for AccountSignInLayout.Metrics;
}

id sub_10004DF00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UpsellBreakoutCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10004DF34()
{
  return type metadata accessor for UpsellBreakoutCollectionViewCell(0LL);
}

uint64_t type metadata accessor for UpsellBreakoutCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DF860;
  if (!qword_1002DF860) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UpsellBreakoutCollectionViewCell);
  }
  return result;
}

uint64_t sub_10004DF78(uint64_t a1)
{
  return swift_updateClassMetadata2(a1, 256LL, 0LL, v2, a1 + 712);
}

double sub_10004DFAC( double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for UpsellBreakout.DisplayProperties(0LL, v14);
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = __chkstk_darwin(v17);
  double v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = UpsellBreakout.displayProperties.getter(v19);
  UpsellBreakout.DisplayProperties.detailsPosition.getter(v22);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  double v23 = sub_1000E514C((uint64_t)v16, a1, a2, a7, a8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v23;
}

uint64_t sub_10004E0D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10004E2D8(*a1, a2, a3, a4, a5);
}

double sub_10004E0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000031E8(&qword_1002E9470);
  uint64_t v4 = type metadata accessor for UpsellBreakout(0LL);
  if (swift_dynamicCast(&v9, v10, v3, v4, 6LL))
  {
    uint64_t v6 = v9;
    uint64_t v7 = UpsellBreakout.video.getter();
    uint64_t v8 = UpsellBreakout.artwork.getter();
    sub_1000E4AA0(v7, v8, a2);
    swift_release(v6);
    swift_release(v8);
    *(void *)&double result = swift_release(v7).n128_u64[0];
  }

  return result;
}

void sub_10004E194(uint64_t a1, uint64_t a2, char a3)
{
  __int128 v5 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_artworkView);
  uint64_t v6 = type metadata accessor for ArtworkView(0LL);
  uint64_t v7 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  id v8 = v5;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v8, 1LL, v6, v7);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v3 + OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_videoContainer)
           + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (Strong)
  {
    id v12 = (id)Strong;
    uint64_t v10 = type metadata accessor for VideoView(0LL);
    uint64_t v11 = sub_100003B6C(&qword_1002E7D80, type metadata accessor for VideoView, (uint64_t)&unk_10023FEA8);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v12, a3 & 1, v10, v11);
  }

uint64_t sub_10004E2AC()
{
  return sub_100003B6C( &qword_1002DF870,  (uint64_t (*)(uint64_t))&type metadata accessor for UpsellBreakout,  (uint64_t)&protocol conformance descriptor for UpsellBreakout);
}

uint64_t sub_10004E2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v80 = a5;
  uint64_t v82 = a3;
  uint64_t v81 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  CGFloat v78 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  uint64_t v6 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v83 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v72 - v9;
  __n128 v12 = __chkstk_darwin(v11);
  __n128 v14 = (char *)&v72 - v13;
  uint64_t v15 = type metadata accessor for UpsellBreakout.DisplayProperties(0LL, v12);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  double v77 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v72 - v19;
  __chkstk_darwin(v21);
  double v23 = (char *)&v72 - v22;
  double v75 = (void (*)(char *, uint64_t))type metadata accessor for BreakoutDetailsView.Config(0LL);
  __chkstk_darwin(v75);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  uint64_t v73 = (uint64_t)&v72 - v27;
  __n128 v29 = __chkstk_darwin(v28);
  double v76 = (id *)((char *)&v72 - v30);
  uint64_t v31 = UpsellBreakout.displayProperties.getter(v29);
  UpsellBreakout.DisplayProperties.detailsPosition.getter(v31);
  uint64_t v32 = v84;
  uint64_t v33 = v23;
  uint64_t v34 = v15;
  int v74 = *(void (**)(char *, uint64_t))(v16 + 8);
  v74(v33, v15);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v14, v32);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v10, v32) == enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:))
  {
    if (qword_1002DCAE8 != -1) {
      swift_once(&qword_1002DCAE8, sub_1000DE988);
    }
    uint64_t v35 = qword_1002F0340;
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v32);
    if (qword_1002DCAF0 != -1) {
      swift_once(&qword_1002DCAF0, sub_1000DEBF8);
    }
    uint64_t v35 = qword_1002F0358;
  }

  uint64_t v36 = sub_1000061F4((uint64_t)v75, (uint64_t)v35);
  sub_10004E80C(v36, (uint64_t)v25);
  uint64_t v37 = v73;
  sub_10004E850((uint64_t)v25, v73);
  double v75 = *(void (**)(char *, uint64_t))(v6 + 8);
  v75(v14, v32);
  uint64_t v38 = v76;
  sub_10004E80C(v37, (uint64_t)v76);
  uint64_t v40 = UpsellBreakout.displayProperties.getter(v39);
  uint64_t v41 = UpsellBreakout.DisplayProperties.badgeColor.getter(v40);
  CGFloat v42 = v74;
  v74(v20, v34);

  v38[2] = (id)v41;
  uint64_t v44 = UpsellBreakout.displayProperties.getter(v43);
  uint64_t v45 = UpsellBreakout.DisplayProperties.titleColor.getter(v44);
  v42(v20, v34);

  void v38[3] = (id)v45;
  uint64_t v47 = UpsellBreakout.displayProperties.getter(v46);
  uint64_t v48 = UpsellBreakout.DisplayProperties.descriptionColor.getter(v47);
  v42(v20, v34);

  v38[4] = (id)v48;
  uint64_t v50 = UpsellBreakout.displayProperties.getter(v49);
  uint64_t v51 = UpsellBreakout.DisplayProperties.callToActionColor.getter(v50);
  uint64_t v72 = v34;
  v42(v20, v34);

  v38[5] = (id)v51;
  uint64_t v52 = sub_10004E894(v37);
  uint64_t v73 = UpsellBreakout.details.getter(v52);
  uint64_t v54 = UpsellBreakout.displayProperties.getter(v53);
  uint64_t v55 = (uint64_t)v83;
  UpsellBreakout.DisplayProperties.detailsPosition.getter(v54);
  uint64_t v56 = ((uint64_t (*)(char *, uint64_t))v42)(v20, v34);
  uint64_t v57 = v78;
  static Shelf.PresentationHints.isFirstShelf.getter(v56);
  uint64_t v58 = sub_100003B6C( &qword_1002EA0E0,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints,  (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  uint64_t v59 = v81;
  LODWORD(v8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = dispatch thunk of SetAlgebra.isSuperset(of:)(v57, v81, v58);
  uint64_t v60 = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v57, v59);
  uint64_t v61 = UpsellBreakout.offerButtonAction.getter(v60);
  uint64_t v62 = UpsellBreakout.offerDisplayProperties.getter();
  uint64_t v63 = UpsellBreakout.video.getter();
  uint64_t v64 = UpsellBreakout.artwork.getter();
  double v65 = v77;
  uint64_t v67 = UpsellBreakout.displayProperties.getter(v66);
  CGFloat v68 = (void *)UpsellBreakout.DisplayProperties.backgroundColor.getter(v67);
  v42(v65, v72);
  uint64_t v69 = v73;
  sub_1000E5394(v73, (uint64_t)v38, v55, v80 & 1, v61, v62, v63, v64, v68, v82);
  swift_release(v69);

  swift_release(v64);
  swift_release(v63);
  swift_release(v62);
  __n128 v70 = swift_release(v61);
  ((void (*)(uint64_t, uint64_t, __n128))v75)(v55, v84, v70);
  return sub_10004E894((uint64_t)v38);
}

uint64_t sub_10004E80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004E850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004E894(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

double sub_10004E8D0( uint64_t *a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  double v10 = a2.n128_f64[0];
  uint64_t v11 = *a1;
  __n128 v12 = (void *)FramedMedia.caption.getter(a2);
  uint64_t v13 = FramedMedia.ordinal.getter();
  if (v14) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = 0LL;
  }
  if (v14) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = 0xE000000000000000LL;
  }
  double v17 = sub_100045840(v11, v12, v15, v16, a8, v10, a3);
  swift_bridgeObjectRelease(v16);

  return v17;
}

id sub_10004E96C()
{
  return sub_10004E9A8();
}

uint64_t sub_10004E97C()
{
  return sub_100003B6C( &qword_1002DF8C0,  (uint64_t (*)(uint64_t))&type metadata accessor for FramedArtwork,  (uint64_t)&protocol conformance descriptor for FramedMedia);
}

id sub_10004E9A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AspectRatio(0LL);
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v36 - v6;
  uint64_t v8 = *(char **)&v0[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_captionView];
  double v10 = (void *)FramedMedia.caption.getter(v9);
  FramedMedia.ordinal.getter();
  uint64_t v12 = v11;
  [*(id *)&v8[OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_captionLabel] setAttributedText:v10];
  uint64_t v13 = *(void **)&v8[OBJC_IVAR____TtC6Arcade22FramedMediaCaptionView_ordinalLabel];
  if (v12) {
    NSString v14 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v14 = 0LL;
  }
  [v13 setText:v14];

  [v8 setNeedsLayout];
  __n128 v15 = swift_bridgeObjectRelease(v12);
  uint64_t v16 = (void *)FramedMedia.caption.getter(v15);
  uint64_t v17 = (uint64_t)[v16 length];

  v1[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_hasCaption] = v17 > 0;
  v1[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_isFullWidthStyle] = FramedMedia.isFullWidth.getter( [v8 setHidden:v17 < 1]) & 1;
  id v18 = sub_1000461EC();
  uint64_t v19 = FramedArtwork.artwork.getter(v18);
  if (v19)
  {
    uint64_t v21 = v19;
    id v22 = [v1 contentView];
    [v22 frame];

    CGRect.subtracting(insets:)([v1 layoutMargins]);
    double v24 = v23;
    double v26 = v25;
    double v28 = Artwork.size.getter(v27);
    AspectRatio.init(_:_:)(v29, v28);
    __n128 v31 = AspectRatio.init(_:_:)(v30, v24);
    v32.n128_f64[0] = AspectRatio.horizontalFraction.getter(v31);
    if (AspectRatio.horizontalFraction.getter(v32) >= v32.n128_f64[0]) {
      double v26 = AspectRatio.height(fromWidth:)(v24);
    }
    else {
      double v24 = AspectRatio.width(fromHeight:)(v26);
    }
    uint64_t v33 = *(void (**)(char *, uint64_t))(v37 + 8);
    v33(v5, v2);
    v33(v7, v2);
    uint64_t v34 = (double *)&v1[OBJC_IVAR____TtC6Arcade29FramedMediaCollectionViewCell_preferredArtworkSize];
    double *v34 = v24;
    v34[1] = v26;
    *(void *)&double v20 = swift_release(v21).n128_u64[0];
  }

  return objc_msgSend(v1, "setNeedsLayout", v20);
}

char *sub_10004EC84(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_focusGuide;
  id v10 = objc_allocWithZone(&OBJC_CLASS___UIFocusGuide);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem] = 0LL;
  uint64_t v12 = OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_contentBackgroundView;
  uint64_t v13 = type metadata accessor for HeroCarouselItemBackgroundView();
  *(void *)&v11[v12] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)) init];
  uint64_t v14 = OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayView;
  uint64_t v15 = type metadata accessor for CarouselItemButtonOverlay(0LL);
  *(void *)&v11[v14] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)) init];
  *(void *)&v11[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayBottomInset] = 0LL;

  v33.receiver = v11;
  v33.super_class = (Class)type metadata accessor for HeroCarouselItemView();
  id v16 = objc_msgSendSuper2(&v33, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  double v20 = (char *)v16;
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  [v20 setClipsToBounds:1];
  id v21 = [v20 contentView];
  [v21 addSubview:*(void *)&v20[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_contentBackgroundView]];

  id v22 = [v20 contentView];
  uint64_t v23 = OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayView;
  [v22 addSubview:*(void *)&v20[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayView]];

  id v24 = [v20 contentView];
  uint64_t v25 = OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_focusGuide;
  [v24 addLayoutGuide:*(void *)&v20[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_focusGuide]];

  double v26 = *(void **)&v20[v23];
  id v27 = *(id *)&v20[v25];
  Class isa = (Class)[v26 preferredFocusEnvironments];
  if (!isa)
  {
    uint64_t v30 = sub_1000031E8((uint64_t *)&unk_1002DF9C0);
    uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0LL, v30);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    *(void *)&double v29 = swift_bridgeObjectRelease(v31).n128_u64[0];
  }

  objc_msgSend(v27, "setPreferredFocusEnvironments:", isa, v29);

  return v20;
}

id sub_10004EFD8()
{
  v29.receiver = v0;
  v29.super_class = (Class)type metadata accessor for HeroCarouselItemView();
  objc_msgSendSuper2(&v29, "layoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_contentBackgroundView];
  [v0 bounds];
  objc_msgSend(v1, "setBounds:", 0.0, 0.0);
  [v0 bounds];
  double MidX = CGRectGetMidX(v30);
  [v0 bounds];
  objc_msgSend(v1, "setCenter:", MidX, CGRectGetMidY(v31));
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayView];
  [v0 bounds];
  [v0 bounds];
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  id v8 = [v0 traitCollection];
  uint64_t v9 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  id v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = &v10[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)uint64_t v11 = v5;
  *((void *)v11 + 1) = v7;
  *(void *)&v10[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_traitCollection] = v8;
  v28.receiver = v10;
  v28.super_class = v9;

  CGRect.subtracting(insets:)(v12);
  objc_msgSend(v3, "sizeThatFits:", v13, v14);
  objc_msgSend(v3, "setBounds:", 0.0, 0.0, v15, v16);
  [v3 setCenter:sub_10004F260()];
  uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_focusGuide];
  id v18 = [v0 contentView];
  [v18 bounds];
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;

  return objc_msgSend(v17, "_setManualLayoutFrame:", v20, v22, v24, v26);
}

double sub_10004F260()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002DF9D0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  uint64_t v12 = (char *)&v50 - v11;
  objc_msgSend(v0, "bounds", v10);
  [v0 bounds];
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  id v17 = [v0 traitCollection];
  id v18 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  double v19 = (char *)objc_allocWithZone(v18);
  double v20 = &v19[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)double v20 = v14;
  *((void *)v20 + 1) = v16;
  *(void *)&v19[OBJC_IVAR____TtC6Arcade28SnapshotPageTraitEnvironment_traitCollection] = v17;
  v50.receiver = v19;
  v50.super_class = v18;

  *(void *)&CGFloat v22 = CGRect.subtracting(insets:)(v21).n128_u64[0];
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  [*(id *)&v1[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayView] bounds];
  double v30 = v29;
  uint64_t v31 = *(void *)&v1[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem];
  if (v31
    && (__n128 v32 = swift_retain(*(void *)&v1[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem]),
        uint64_t v33 = HeroCarouselItem.overlay.getter(v32),
        __n128 v34 = swift_release(v31),
        v33))
  {
    HeroCarouselItemOverlay.displayOptions.getter(v34);
    __n128 v35 = swift_release(v33);
    HeroCarouselItemOverlay.DisplayOptions.horizontalPlacement.getter(v35);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v36 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0LL);
    uint64_t v37 = *(void *)(v36 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v12, 0LL, 1LL, v36);
    sub_10004FBC8((uint64_t)v12, (uint64_t)v8);
    int v38 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v8, v36);
    if (v38 == enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:))
    {
      id v39 = [v1 traitCollection];
      id v40 = [v39 layoutDirection];

      if (v40 == (id)1)
      {
        id v41 = [v1 traitCollection];
        id v42 = [v41 layoutDirection];

        if (v42 == (id)1) {
          goto LABEL_18;
        }
        goto LABEL_8;
      }

void sub_10004F6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem);
  *(void *)(v3 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem) = a1;
  swift_retain(a1);
  swift_release(v6);
  sub_10012EC9C(a1, a2);
  uint64_t v8 = HeroCarouselItem.overlay.getter(v7);
  if (v8)
  {
    uint64_t v10 = v8;
    sub_100065158(v8);
    __n128 v9 = swift_release(v10);
  }

  uint64_t v11 = dispatch thunk of HeroCarouselItem.clickAction.getter(v9);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = *(char **)(v3 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayView);
    uint64_t v14 = swift_allocObject(&unk_100282558, 24LL, 7LL);
    swift_unknownObjectWeakInit(v14 + 16, v3);
    uint64_t v15 = (void (*)())swift_allocObject(&unk_100282580, 40LL, 7LL);
    *((void *)v15 + 2) = v14;
    *((void *)v15 + 3) = v12;
    *((void *)v15 + 4) = a2;
    uint64_t v16 = (void (**)())&v13[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_selectionHandler];
    uint64_t v17 = *(void *)&v13[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_selectionHandler];
    uint64_t v18 = *(void *)&v13[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_selectionHandler + 8];
    void *v16 = sub_10004FAD4;
    v16[1] = v15;
    swift_retain(a2);
    uint64_t v19 = v17;
    uint64_t v20 = v18;
  }

  else
  {
    uint64_t v13 = *(char **)(v3 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayView);
    uint64_t v21 = &v13[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_selectionHandler];
    uint64_t v19 = *(void *)&v13[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_selectionHandler];
    uint64_t v20 = *(void *)&v13[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_selectionHandler + 8];
    *(void *)uint64_t v21 = 0LL;
    *((void *)v21 + 1) = 0LL;
  }

  sub_10000D3D8(v19, v20);
  CGFloat v22 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_focusGuide);
  Class v23 = (Class)[v13 preferredFocusEnvironments];
  if (!v23)
  {
    uint64_t v24 = sub_1000031E8((uint64_t *)&unk_1002DF9C0);
    uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0LL, v24);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v25);
    Class v23 = isa;
  }

  Class v27 = v23;
  objc_msgSend(v22, "setPreferredFocusEnvironments:");
}

void sub_10004F8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  __n128 v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a1 += 16LL;
  swift_beginAccess(a1, v15, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    uint64_t v12 = UIResponder.nearestActionRunner.getter();

    if (v12)
    {
      memset(v14, 0, sizeof(v14));
      (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v6);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, v14, v9, a3);
      __n128 v13 = swift_release(v12);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v13);
      sub_100006060((uint64_t)v14, (uint64_t *)&unk_1002DF680);
    }
  }

id sub_10004F9D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeroCarouselItemView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HeroCarouselItemView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade20HeroCarouselItemView);
}

uint64_t sub_10004FA7C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10004FAA0()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_10004FAD4()
{
}

void sub_10004FAE0()
{
  uint64_t v1 = OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_focusGuide;
  *(void *)&v0[v1] = [objc_allocWithZone(UIFocusGuide) init];
  *(void *)&v0[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_heroCarouselItem] = 0LL;
  uint64_t v2 = OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_contentBackgroundView;
  uint64_t v3 = type metadata accessor for HeroCarouselItemBackgroundView();
  *(void *)&v0[v2] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)) init];
  uint64_t v4 = OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayView;
  uint64_t v5 = type metadata accessor for CarouselItemButtonOverlay(0LL);
  *(void *)&v0[v4] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)) init];
  *(void *)&v0[OBJC_IVAR____TtC6Arcade20HeroCarouselItemView_overlayBottomInset] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/HeroCarouselItemView.swift",  33LL,  2LL,  60LL,  0);
  __break(1u);
}

uint64_t sub_10004FBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DF9D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_10004FC10(uint64_t a1)
{
  uint64_t v2 = (void *)v1[2];
  if (v2)
  {
    id v7 = v2;
    if ([v7 isFocused] && objc_msgSend(v7, "isDescendantOfView:", a1))
    {
      uint64_t v4 = (void (*)(id, __n128))v1[3];
      if (v4)
      {
        uint64_t v5 = v1[4];
        __n128 v6 = swift_retain(v5);
        v4(v7, v6);
        sub_10000D3D8((uint64_t)v4, v5);
      }
    }
  }

uint64_t sub_10004FCA8()
{
  sub_10000D3D8(*(void *)(v0 + 24), *(void *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

uint64_t type metadata accessor for FocusAvoidanceScrollObserver()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade28FocusAvoidanceScrollObserver);
}

void sub_10004FCF4(UIScrollView in)
{
}

void sub_10004FCFC(UIScrollView in)
{
}

void sub_10004FD08(UIScrollView in, Swift::Bool willDecelerate)
{
}

void sub_10004FD10(UIScrollView in)
{
}

uint64_t sub_10004FD18(uint64_t a1, uint64_t a2)
{
  return ScrollObserver.willEndDragging(in:with:targetContentOffset:)(a1, a2, *v2);
}

uint64_t sub_10004FD20(uint64_t a1, uint64_t a2)
{
  return ScrollObserver.didScroll(visibleItems:layoutEnvironment:contentOffset:)(a1, a2, *v2);
}

ValueMetadata *type metadata accessor for DebugSettingsDataSource()
{
  return &type metadata for DebugSettingsDataSource;
}

uint64_t sub_10004FD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v18 = a5;
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002DFA90);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t ObjectType = swift_getObjectType(*(void *)(a2 + 16));
  uint64_t v14 = type metadata accessor for StringDebugSetting(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2 + *(int *)(v14 + 24), v8);
  v19[0] = a3;
  v19[1] = a4;
  swift_bridgeObjectRetain(a4);
  uint64_t v15 = Preferences.subscript.setter(v19, v11, ObjectType, &type metadata for String, v12);
  return v18(v15);
}

void sub_10004FE30(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4();
  swift_release(v3);
}

uint64_t sub_10004FE80( uint64_t a1, uint64_t a2, void (**a3)(char *, void, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v117 = a5;
  uint64_t v115 = a4;
  uint64_t v137 = a3;
  uint64_t v110 = a2;
  uint64_t v124 = type metadata accessor for OSLogger(0LL);
  uint64_t v122 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  CGRect v121 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v109 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  double v107 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v130 = type metadata accessor for FlowOrigin(0LL);
  uint64_t v128 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v132 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v126 = type metadata accessor for FlowAnimationBehavior(0LL);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  CGRect v131 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v119 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  CGRect v129 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v13);
  CGRect v127 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v15);
  CGRect v123 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v17);
  CGRect v120 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v114 = type metadata accessor for FlowPage(0LL);
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  CGRect v116 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  CGRect v136 = (void *)type metadata accessor for IndexPath(0LL);
  uint64_t v135 = (void *)*(v136 - 1);
  uint64_t v20 = v135[8];
  __chkstk_darwin(v136);
  double v112 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for StringDebugSetting(0LL);
  __chkstk_darwin(v21);
  uint64_t v134 = (uint64_t)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v107 - v24;
  uint64_t v133 = sub_1000031E8(&qword_1002DEBC0);
  CGFloat v26 = *(void (***)(char *, void, uint64_t))(v133 - 8);
  __chkstk_darwin(v133);
  CGFloat v28 = (char *)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for BoolDebugSetting(0LL);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v107 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v32);
  __n128 v34 = (char *)&v107 - v33;
  uint64_t v138 = a1;
  unint64_t v36 = IndexPath.section.getter(v35);
  if ((v36 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }

  if (v36 >= *(void *)(a6 + 16))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  uint64_t v111 = a6;
  uint64_t v37 = *(void *)(a6 + 24 * v36 + 48);
  uint64_t v38 = swift_bridgeObjectRetain(v37);
  unint64_t v39 = IndexPath.row.getter(v38);
  if ((v39 & 0x8000000000000000LL) != 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  if (v39 >= *(void *)(v37 + 16))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    swift_once(&qword_1002DC370, sub_100018F58);
    goto LABEL_16;
  }

  sub_10001F010(v37 + 40 * v39 + 32, (uint64_t)&v144);
  swift_bridgeObjectRelease(v37);
  sub_10001F010((uint64_t)&v144, (uint64_t)&v143);
  uint64_t v40 = sub_1000031E8(&qword_1002DFA88);
  if (swift_dynamicCast(v34, &v143, v40, v29, 0LL))
  {
    sub_1000387A0((uint64_t)v34, (uint64_t)v31, type metadata accessor for BoolDebugSetting);
    uint64_t v41 = *((void *)v31 + 3);
    uint64_t ObjectType = swift_getObjectType(*((void *)v31 + 2));
    uint64_t v43 = &v31[*(int *)(v29 + 24)];
    Preferences.subscript.getter(&v140, v43, ObjectType, &type metadata for Bool, v41);
    else {
      char v44 = v140 & 1;
    }
    char v80 = v44 ^ 1;
    ((void (**)(char *, char *, uint64_t))v26)[2](v28, v43, v133);
    LOBYTE(v14_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v80;
    Preferences.subscript.setter(&v140, v28, ObjectType, &type metadata for Bool, v41);
    uint64_t v81 = sub_1000031E8(&qword_1002ECC00);
    uint64_t v82 = v135;
    uint64_t v83 = *((unsigned __int8 *)v135 + 80);
    uint64_t v84 = (v83 + 32) & ~v83;
    uint64_t v85 = swift_allocObject(v81, v84 + v135[9], v83 | 7);
    *(_OWORD *)(v85 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    ((void (*)(uint64_t, uint64_t, void *))v82[2])(v85 + v84, v138, v136);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    *(void *)&double v87 = swift_bridgeObjectRelease(v85).n128_u64[0];
    CGFloat v26 = v137;
    objc_msgSend(v137, "reloadRowsAtIndexPaths:withRowAnimation:", isa, 0, v87);

    uint64_t v88 = v145;
    uint64_t v89 = v146;
    sub_100005F8C(&v144, v145);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v89 + 16))(v88, v89) & 1) != 0)
    {
      id v90 = [(id)objc_opt_self(ASKRebootstrapCoordinator) sharedCoordinator];
      [v90 notify];
    }

    sub_100046E64((uint64_t)v31, type metadata accessor for BoolDebugSetting);
    goto LABEL_19;
  }

  int v45 = swift_dynamicCast(v25, &v143, v40, v21, 0LL);
  CGFloat v26 = v137;
  if (v45)
  {
    uint64_t v46 = v134;
    sub_1000387A0((uint64_t)v25, v134, type metadata accessor for StringDebugSetting);
    id v47 = v135;
    id v48 = v112;
    id v49 = v136;
    ((void (*)(char *, uint64_t, void *))v135[2])(v112, v138, v136);
    sub_10001F010((uint64_t)&v144, (uint64_t)&v140);
    uint64_t v50 = *((unsigned __int8 *)v47 + 80);
    uint64_t v51 = (v50 + 24) & ~v50;
    unint64_t v52 = (v20 + v51 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v53 = (v52 + 31) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v54 = swift_allocObject(&unk_1002826D0, v53 + 40, v50 | 7);
    *(void *)(v54 + swift_unknownObjectWeakDestroy(v0 + 16) = v26;
    ((void (*)(uint64_t, char *, void *))v47[4])(v54 + v51, v48, v49);
    CGRect v55 = (void *)(v54 + v52);
    uint64_t v56 = v117;
    void *v55 = v115;
    v55[1] = v56;
    uint64_t v57 = v111;
    v55[2] = v111;
    sub_100009D90(&v140, v54 + v53);
    CGRect v136 = v26;
    swift_bridgeObjectRetain(v56);
    swift_bridgeObjectRetain(v57);
    id v58 = sub_100050DA8(v46, (uint64_t)sub_100050D50, v54);
    swift_release(v54);
    uint64_t v142 = 0LL;
    __int128 v140 = 0u;
    __int128 v141 = 0u;
    uint64_t v59 = v116;
    (*(void (**)(char *, void, uint64_t))(v113 + 104))( v116,  enum case for FlowPage.viewController(_:),  v114);
    uint64_t v60 = type metadata accessor for URL(0LL);
    uint64_t v61 = v120;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56LL))(v120, 1LL, 1LL, v60);
    uint64_t v62 = type metadata accessor for ReferrerData(0LL);
    uint64_t v63 = v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56LL))(v123, 1LL, 1LL, v62);
    v139[3] = sub_10005103C();
    v139[0] = v58;
    uint64_t v135 = v58;
    uint64_t v64 = v127;
    static ActionMetrics.notInstrumented.getter();
    double v65 = v129;
    (*(void (**)(char *, void, uint64_t))(v118 + 104))( v129,  enum case for FlowPresentationContext.presentModal(_:),  v119);
    __n128 v66 = v131;
    (*(void (**)(char *, void, uint64_t))(v125 + 104))( v131,  enum case for FlowAnimationBehavior.infer(_:),  v126);
    uint64_t v67 = v132;
    uint64_t v68 = (*(uint64_t (**)(char *, void, uint64_t))(v128 + 104))( v132,  enum case for FlowOrigin.inapp(_:),  v130);
    uint64_t v69 = static FlowActionPresentation.stackPush.getter(v68);
    uint64_t v71 = v70;
    uint64_t v72 = type metadata accessor for FlowAction(0LL);
    swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
    uint64_t v73 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)( &v140,  0LL,  0LL,  0LL,  v59,  v61,  0LL,  0LL,  v63,  v139,  v64,  v65,  v66,  v67,  0LL,  v69,  v71);
    uint64_t v74 = UIResponder.nearestActionRunner.getter();
    if (v74)
    {
      uint64_t v75 = v74;
      __int128 v140 = 0u;
      __int128 v141 = 0u;
      uint64_t v76 = v108;
      double v77 = v107;
      uint64_t v78 = v109;
      (*(void (**)(char *, void, uint64_t))(v108 + 104))( v107,  enum case for ActionRunner.Origin.userInitiated(_:),  v109);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v73, &v140, v77, v110);

      swift_release(v73);
      __n128 v79 = swift_release(v75);
      (*(void (**)(char *, uint64_t, __n128))(v76 + 8))(v77, v78, v79);
      sub_100029100((uint64_t)&v140);
      sub_100046E64(v134, type metadata accessor for StringDebugSetting);
    }

    else
    {
      sub_100046E64(v134, type metadata accessor for StringDebugSetting);
      swift_release(v73);
    }

    goto LABEL_19;
  }

  if (qword_1002DC370 != -1) {
    goto LABEL_24;
  }
LABEL_16:
  uint64_t v91 = v124;
  uint64_t v92 = sub_1000061F4(v124, (uint64_t)qword_1002EE528);
  uint64_t v93 = v122;
  double v94 = v121;
  (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v121, v92, v91);
  uint64_t v95 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v96 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v97 = swift_allocObject( v95,  ((*(unsigned __int8 *)(v96 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))
        + 2LL * *(void *)(v96 + 72),
          *(unsigned __int8 *)(v96 + 80) | 7LL);
  *(_OWORD *)(v97 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
  LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100245530LL);
  uint64_t v98 = v145;
  double v99 = sub_100005F8C(&v144, v145);
  *((void *)&v141 + 1) = v98;
  CGFloat v100 = sub_100009D54(&v140);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v98 - 8) + 16LL))(v100, v99, v98);
  static LogMessage.safe(_:)(&v140);
  sub_100029100((uint64_t)&v140);
  Logger.warning(_:)(v97, v91, &protocol witness table for OSLogger);
  __n128 v101 = swift_bridgeObjectRelease(v97);
  (*(void (**)(char *, uint64_t, __n128))(v93 + 8))(v94, v91, v101);
  uint64_t v102 = v145;
  uint64_t v103 = v146;
  sub_100005F8C(&v144, v145);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v103 + 16))(v102, v103) & 1) != 0)
  {
    id v104 = [(id)objc_opt_self(ASKRebootstrapCoordinator) sharedCoordinator];
    [v104 notify];
  }

void sub_100050AAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9 = sub_1000031E8(&qword_1002ECC00);
  uint64_t v10 = type metadata accessor for IndexPath(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  uint64_t v14 = swift_allocObject(v9, v13 + *(void *)(v11 + 72), v12 | 7);
  *(_OWORD *)(v14 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14 + v13, a2, v10);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "reloadRowsAtIndexPaths:withRowAnimation:", isa, 0, swift_bridgeObjectRelease(v14).n128_f64[0]);

  uint64_t v16 = a6[3];
  uint64_t v17 = a6[4];
  sub_100005F8C(a6, v16);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17) & 1) != 0)
  {
    id v18 = [(id)objc_opt_self(ASKRebootstrapCoordinator) sharedCoordinator];
    [v18 notify];
  }

uint64_t sub_100050C00()
{
  return *(void *)(*(void *)(v0 + 16) + 16LL);
}

unint64_t sub_100050C0C(unint64_t result)
{
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (*(void *)(v2 + 16) > result) {
      return *(void *)(*(void *)(v2 + 24 * result + 48) + 16LL);
    }
  }

  __break(1u);
  return result;
}

unint64_t sub_100050C3C(unint64_t result)
{
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (*(void *)(v2 + 16) > result)
    {
      uint64_t v3 = v2 + 24 * result;
      uint64_t v4 = *(void *)(v3 + 32);
      swift_bridgeObjectRetain(*(void *)(v3 + 40));
      return v4;
    }
  }

  __break(1u);
  return result;
}

unint64_t sub_100050C8C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100051220(a1, a3, *(void *)(v3 + 16));
}

uint64_t sub_100050C98(uint64_t a1, uint64_t a2, void (**a3)(char *, void, uint64_t))
{
  return sub_10004FE80(a1, a2, a3, *v3, v3[1], v3[2]);
}

uint64_t sub_100050CA4()
{
  uint64_t v1 = type metadata accessor for IndexPath(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8LL;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v6 + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + v6 + 16));
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 40, v5);
}

void sub_100050D50()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  sub_100050AAC( *(void **)(v0 + 16),  v0 + v2,  *(void *)(v0 + v3),  *(void *)(v0 + v3 + 8),  *(void *)(v0 + v3 + 16),  (void *)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8LL)));
}

id sub_100050DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StringDebugSetting(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain(v9);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  id v11 =  [(id)objc_opt_self(UIAlertController) alertControllerWithTitle:v10 message:0 preferredStyle:0];

  uint64_t v12 = *(void *)(a1 + *(int *)(v6 + 32));
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v39 = v8 + 7;
    id v40 = (id)objc_opt_self(&OBJC_CLASS___UIAlertAction);
    swift_bridgeObjectRetain(v12);
    uint64_t v36 = v12;
    uint64_t v37 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    uint64_t v14 = (uint64_t *)(v12 + 40);
    uint64_t v41 = a1;
    uint64_t v42 = v7;
    uint64_t v38 = a3;
    do
    {
      uint64_t v15 = *v14;
      uint64_t v43 = *(v14 - 1);
      uint64_t v16 = a1;
      uint64_t v17 = v37;
      sub_100051078(v16, v37);
      uint64_t v18 = *(unsigned __int8 *)(v7 + 80);
      id v19 = v11;
      uint64_t v20 = (v18 + 16) & ~v18;
      uint64_t v21 = v13;
      unint64_t v22 = (v39 + v20) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v23 = a2;
      unint64_t v24 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v25 = swift_allocObject(&unk_1002826F8, v24 + 16, v18 | 7);
      uint64_t v26 = v25 + v20;
      id v11 = v19;
      sub_1000387A0(v17, v26, type metadata accessor for StringDebugSetting);
      uint64_t v27 = (void *)(v25 + v22);
      uint64_t v28 = v21;
      uint64_t v7 = v42;
      void *v27 = v43;
      v27[1] = v15;
      uint64_t v29 = (void *)(v25 + v24);
      a2 = v23;
      uint64_t v30 = v38;
      a1 = v41;
      void *v29 = a2;
      v29[1] = v30;
      swift_bridgeObjectRetain_n(v15, 2LL);
      swift_retain(v30);
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      aBlock[4] = sub_1000511A4;
      uint64_t v45 = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_10004FE30;
      aBlock[3] = &unk_100282710;
      uint64_t v32 = _Block_copy(aBlock);
      *(void *)&double v33 = swift_release(v45).n128_u64[0];
      id v34 = objc_msgSend(v40, "actionWithTitle:style:handler:", v31, 0, v32, v33);
      _Block_release(v32);

      [v11 addAction:v34];
      v14 += 2;
      uint64_t v13 = v28 - 1;
    }

    while (v13);
    swift_bridgeObjectRelease(v36);
  }

  return v11;
}

unint64_t sub_10005103C()
{
  unint64_t result = qword_1002E1820;
  if (!qword_1002E1820)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIViewController);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002E1820);
  }

  return result;
}

uint64_t sub_100051078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StringDebugSetting(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000510BC()
{
  uint64_t v1 = (int *)type metadata accessor for StringDebugSetting(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v8 = v0 + v4;
  swift_bridgeObjectRelease(*(void *)(v0 + v4 + 8));
  swift_unknownObjectRelease(*(void *)(v8 + 16));
  uint64_t v9 = v8 + v1[6];
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002DFA90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL))(v9, v10);
  swift_bridgeObjectRelease(*(void *)(v8 + v1[7] + 8));
  swift_bridgeObjectRelease(*(void *)(v8 + v1[8]));
  swift_bridgeObjectRelease(*(void *)(v0 + v6 + 8));
  swift_release(*(void *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_1000511A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StringDebugSetting(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_10004FD38( a1,  v1 + v4,  *(void *)(v1 + v5),  *(void *)(v1 + v5 + 8),  *(uint64_t (**)(uint64_t))(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t sub_100051208(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100051218(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_100051220(uint64_t a1, void *a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  unint64_t v6 = (void *)IndexPath._bridgeToObjectiveC()();
  id v7 = [a2 dequeueReusableCellWithIdentifier:v5 forIndexPath:v6];

  uint64_t v8 = type metadata accessor for DebugSettingTableViewCell();
  uint64_t v9 = swift_dynamicCastClassUnconditional(v7, v8, 0LL, 0LL, 0LL);
  unint64_t result = IndexPath.section.getter(v9);
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }

  if (result >= *(void *)(a3 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }

  uint64_t v11 = *(void *)(a3 + 24 * result + 48);
  uint64_t v12 = swift_bridgeObjectRetain(v11);
  unint64_t result = IndexPath.row.getter(v12);
  if ((result & 0x8000000000000000LL) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }

  if (result < *(void *)(v11 + 16))
  {
    sub_10001F010(v11 + 40 * result + 32, (uint64_t)v13);
    swift_bridgeObjectRelease(v11);
    sub_1000A8874(v13);
    _s6Arcade17PillOverlayLayoutVwxx_0(v13);
    return v9;
  }

LABEL_9:
  __break(1u);
  return result;
}

  __break(1u);
}

        swift_release(v12);
LABEL_10:
        ++v7;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
        uint64_t v10 = v30[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
        uint64_t v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v13);
        specialized ContiguousArray._endMutation()(v11);
        if (v3 == v7) {
          return v30;
        }
      }
    }

    __break(1u);
LABEL_32:
    __break(1u);
  }

  return result;
}

    uint64_t v36 = 0;
LABEL_14:
    uint64_t v41 = sub_100147A04();
    uint64_t KeyPath = swift_getKeyPath(&unk_1002391F0, v42);
    ItemLayoutContext.subscript.getter(v6);
    swift_release(KeyPath);
    uint64_t v45 = PageGrid.componentMeasuringSize(spanning:)(v44, 1.0);
    (*(void (**)(void *, uint64_t, double))(v52 + 8))(v6, v53, v45);
    uint64_t v46 = type metadata accessor for ObjectGraph(0LL);
    id v47 = swift_dynamicCastClassUnconditional(v54, v46, 0LL, 0LL, 0LL);
    uint64_t ObjectType = swift_getObjectType(v41);
    sub_1001BACA0(v26, v36 & 1, v41, v47, v55, ObjectType);
    swift_release(v26);
    return (void *)swift_unknownObjectRelease(v41);
  }

  return result;
}

  __break(1u);
  return result;
}

  if ((v26 & 0xC000000000000001LL) != 0)
  {
    uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v26);
  }

  else
  {
    if (!*(void *)((v26 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
      goto LABEL_36;
    }

    uint64_t v11 = *(void *)(v26 + 32);
    swift_retain(v11);
  }

  unint64_t v24 = swift_bridgeObjectRelease(v26);
LABEL_18:
  if (((*(uint64_t (**)(__n128))(ObjectType + 576))(v24) & 1) == 0)
  {
LABEL_29:
    uint64_t v29 = 0LL;
    goto LABEL_30;
  }

  uint64_t v28 = MixedMediaLockup.trailers.getter(v27);
  uint64_t v26 = v28;
  if (!((unint64_t)v28 >> 62))
  {
    if (*(void *)((v28 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_21;
    }
    goto LABEL_28;
  }

  if (v28 >= 0) {
    v28 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  if (!_CocoaArrayWrapper.endIndex.getter(v28))
  {
LABEL_28:
    v27.n128_u64[0] = swift_bridgeObjectRelease(v26).n128_u64[0];
    goto LABEL_29;
  }

  __break(1u);
}

    uint64_t v29 = 0LL;
    goto LABEL_17;
  }

  uint64_t v16 = a3;
  uint64_t v17 = a2;
  uint64_t v18 = TodayCard.overlay.getter(v15);
  if (v18)
  {
    uint64_t v20 = v18;
    uint64_t v21 = type metadata accessor for TodayCardThreeLineOverlay(0LL);
    unint64_t v22 = swift_dynamicCastClass(v20, v21);
    if (v22)
    {
      TodayCardThreeLineOverlay.heading.getter(v22);
      unint64_t v24 = v23;
      id v19 = swift_release(v20);
      if (v24)
      {
LABEL_13:
        swift_release(v13);
        goto LABEL_14;
      }
    }

    else
    {
      id v19 = swift_release(v20);
    }
  }

  uint64_t v30 = TodayCard.heading.getter(v19);
  uint64_t v29 = v31;
  if (v31)
  {
    v57[0] = v30;
    v57[1] = v31;
    v56[0] = 10LL;
    v56[1] = 0xE100000000000000LL;
    v55[0] = 32LL;
    v55[1] = 0xE100000000000000LL;
    uint64_t v32 = sub_100008794();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v56,  v55,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v32,  v32,  v32);
    unint64_t v24 = v33;
    swift_bridgeObjectRelease(0LL);
    swift_bridgeObjectRelease(v29);
    goto LABEL_13;
  }

  swift_bridgeObjectRelease(0LL);
LABEL_16:
  uint64_t v28 = swift_release(v13).n128_u64[0];
LABEL_17:
  objc_msgSend(v12, "setText:", v29, *(double *)&v28, v54);

  id v34 = *(void **)&v4[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_titleLabel];
  sub_1001249C0();
  if (v35)
  {
    uint64_t v37 = v35;
    uint64_t v38 = String._bridgeToObjectiveC()();
    *(void *)&uint64_t v36 = swift_bridgeObjectRelease(v37).n128_u64[0];
  }

  else
  {
    uint64_t v38 = 0LL;
  }

  objc_msgSend(v34, "setText:", v38, v36);

  uint64_t v39 = *(void **)&v4[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_descriptionLabel];
  sub_100124B74();
  if (v40)
  {
    uint64_t v42 = v40;
    uint64_t v43 = String._bridgeToObjectiveC()();
    *(void *)&uint64_t v41 = swift_bridgeObjectRelease(v42).n128_u64[0];
  }

  else
  {
    uint64_t v43 = 0LL;
  }

  objc_msgSend(v39, "setText:", v43, v41);

  if (v16 == 2)
  {
    char v44 = sub_100003B6C( &qword_1002E6E00,  type metadata accessor for ArticleCardTextView.Config,  (uint64_t)&unk_10023DDA0);
    Copyable.copyWithOverrides(in:)(sub_100124CE8, a1, v54, v44);
  }

  else
  {
    sub_1000DB86C(v17, (uint64_t)v11);
  }

  uint64_t v45 = (uint64_t)&v4[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_config];
  swift_beginAccess(&v4[OBJC_IVAR____TtC6Arcade19ArticleCardTextView_config], v57, 33LL, 0LL);
  sub_100124CA4((uint64_t)v11, v45);
  swift_endAccess(v57);
  sub_100138950();
  sub_1000DB8B0((uint64_t)v11);
  return [v4 setNeedsLayout];
}
}

        __break(1u);
        return result;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
    goto LABEL_9;
  }

  return result;
}

    uint64_t v9 = 0LL;
    goto LABEL_10;
  }

  if (!v5) {
    goto LABEL_9;
  }
  type metadata accessor for ArtworkView(0LL);
  unint64_t v6 = v5;
  id v7 = a1;
  uint64_t v8 = static NSObject.== infix(_:_:)(v7, v6);

  uint64_t v9 = *(void **)&v1[v4];
  if ((v8 & 1) == 0 && v9) {
    goto LABEL_8;
  }
LABEL_10:
  *(void *)&v2[v4] = a1;
  uint64_t v11 = a1;

  uint64_t v12 = *(void **)&v2[v4];
  if (!v12)
  {

    uint64_t v16 = v5;
    goto LABEL_17;
  }

  uint64_t v18 = *(id *)&v2[v4];
  if (!v5)
  {
    uint64_t v17 = v12;
    uint64_t v13 = 0LL;
    goto LABEL_16;
  }

  type metadata accessor for ArtworkView(0LL);
  uint64_t v13 = v5;
  uint64_t v14 = v18;
  uint64_t v15 = static NSObject.== infix(_:_:)(v13, v14);

  if ((v15 & 1) == 0)
  {
LABEL_16:
    [v2 addSubview:v18];
    [v2 setNeedsLayout];

    uint64_t v16 = v18;
    goto LABEL_17;
  }

  uint64_t v16 = v14;
LABEL_17:
}

void sub_100051358(void *a1)
{
  id v9 = a1;
  sub_1001B195C(a1);
  id v3 = [(id)objc_opt_self(UIFocusSystem) focusSystemForEnvironment:v1];
  if (v3)
  {
    unint64_t v4 = v3;
    id v5 = [v3 focusedItem];

    if (v5)
    {
      uint64_t v6 = objc_opt_self(&OBJC_CLASS___UIView);
      uint64_t v7 = swift_dynamicCastObjCClass(v5, v6);
      if (v7)
      {
        uint64_t v8 = (void *)v7;
        swift_unknownObjectRetain(v5);
        sub_100051674(v8, 0LL);
        swift_unknownObjectRelease(v5);
      }

      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_10005143C()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    __int128 v19 = 0u;
    __int128 v20 = 0u;
LABEL_19:
    sub_100006060((uint64_t)&v19, (uint64_t *)&unk_1002DF680);
    return;
  }

  uint64_t v1 = v0;
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIFocusUpdateContextKey);
  uint64_t v17 = v2;
  AnyHashable.init<A>(_:)(v18, &v16, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v1 + 16) && (unint64_t v3 = sub_1000E8534((uint64_t)v18), (v4 & 1) != 0))
  {
    sub_100008364(*(void *)(v1 + 56) + 32 * v3, (uint64_t)&v19);
  }

  else
  {
    __int128 v19 = 0u;
    __int128 v20 = 0u;
  }

  swift_bridgeObjectRelease(v1);
  sub_1000087D8((uint64_t)v18);
  if (!*((void *)&v20 + 1)) {
    goto LABEL_19;
  }
  uint64_t v5 = sub_100006028(0LL, &qword_1002DFAF0, &OBJC_CLASS___UIFocusUpdateContext_ptr);
  uint64_t v6 = (void *)v18[0];
  uint64_t v7 = Notification.userInfo.getter();
  if (!v7)
  {
    __int128 v19 = 0u;
    __int128 v20 = 0u;
LABEL_18:

    goto LABEL_19;
  }

  uint64_t v8 = v7;
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIFocusUpdateAnimationCoordinatorKey);
  uint64_t v17 = v9;
  AnyHashable.init<A>(_:)(v18, &v16, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v8 + 16) && (unint64_t v10 = sub_1000E8534((uint64_t)v18), (v11 & 1) != 0))
  {
    sub_100008364(*(void *)(v8 + 56) + 32 * v10, (uint64_t)&v19);
  }

  else
  {
    __int128 v19 = 0u;
    __int128 v20 = 0u;
  }

  swift_bridgeObjectRelease(v8);
  sub_1000087D8((uint64_t)v18);
  if (!*((void *)&v20 + 1)) {
    goto LABEL_18;
  }
  uint64_t v12 = sub_100006028(0LL, &qword_1002DFAF8, &OBJC_CLASS___UIFocusAnimationCoordinator_ptr);
  if ((swift_dynamicCast(v18, &v19, (char *)&type metadata for Any + 8, v12, 6LL) & 1) != 0)
  {
    uint64_t v13 = (void *)v18[0];
    id v14 = [v6 nextFocusedView];
    id v15 = v13;
    sub_100051674(v14, v13);
  }

  else
  {
  }

void sub_100051674(void *a1, void *a2)
{
  if (a1)
  {
    id v24 = a1;
    id v4 = [v2 window];

    if (v4)
    {
      [v2 bounds];
      if (v6 != 0.0 || v5 != 0.0)
      {
        [v24 bounds];
        if (v8 != 0.0 || v7 != 0.0)
        {
          [v2 bounds];
          CGFloat v10 = v9;
          CGFloat v12 = v11;
          CGFloat v14 = v13;
          CGFloat v16 = v15;
          [v24 bounds];
          objc_msgSend(v2, "convertRect:fromCoordinateSpace:", v24);
          v26.origin.CGFloat x = v17;
          v26.origin.CGFloat y = v18;
          v26.size.double width = v19;
          v26.size.double height = v20;
          v25.origin.CGFloat x = v10;
          v25.origin.CGFloat y = v12;
          v25.size.double width = v14;
          v25.size.double height = v16;
          if (CGRectContainsRect(v25, v26))
          {
            uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)&v2[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_videoContainer] + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
            if (Strong)
            {
              unint64_t v22 = (void *)Strong;
              sub_100128F18(1, a2);
            }

            goto LABEL_14;
          }
        }
      }
    }
  }

  uint64_t v23 = (_BYTE *)swift_unknownObjectWeakLoadStrong( *(void *)&v2[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_videoContainer] + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
  if (!v23) {
    return;
  }
  v23[qword_1002F0800] = 0;
  if ((v23[qword_1002F0818] & 1) == 0)
  {
    id v24 = v23;
    sub_10012A580();
LABEL_14:
    uint64_t v23 = v24;
  }
}

void sub_100051838()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_detailsView);
  unint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_offerButton);
  if (v3)
  {
    id v4 = *(id *)(v2 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_offerButton);
  }

  else
  {
    double v5 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_callToActionButton);
    if (!v5) {
      goto LABEL_11;
    }
    id v4 = v5;
    unint64_t v3 = 0LL;
  }

  id v6 = v3;
  id v7 = v4;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  unint64_t v9 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v8 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v9 >= v8 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1LL);
  }
  uint64_t v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
  specialized Array._endMutation()(v10);

  double v11 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade19BreakoutDetailsView_callToActionButton);
  if (v11)
  {
    id v12 = v11;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    unint64_t v14 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v13 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v14 >= v13 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1LL);
    }
    uint64_t v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
    specialized Array._endMutation()(v15);
  }

uint64_t sub_1000519D8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v64 = a3;
  uint64_t v63 = type metadata accessor for LargeHeroBreakoutLayout.DetailsVerticalPostion(0LL);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v61 = &v52[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v59 = &v52[-v7];
  uint64_t v60 = (void *)type metadata accessor for BreakoutDetailsLayout.DetailDimension(0LL);
  uint64_t v66 = *(v60 - 1);
  __chkstk_darwin(v60);
  id v58 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v9);
  uint64_t v67 = (double *)&v52[-v10];
  uint64_t v11 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  id v12 = *(void **)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v57 = &v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v14);
  CGFloat v16 = &v52[-v15];
  __chkstk_darwin(v17);
  CGFloat v19 = &v52[-v18];
  __n128 v21 = __chkstk_darwin(v20);
  uint64_t v23 = &v52[-v22];
  uint64_t v56 = (void (*)(_BYTE *, uint64_t, uint64_t, __n128))v12[2];
  v56(&v52[-v22], a1, v11, v21);
  uint64_t v24 = enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:);
  CGRect v55 = (void (*)(_BYTE *, uint64_t, uint64_t))v12[13];
  v55(v19, enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:), v11);
  unint64_t v25 = sub_100052F50();
  double v65 = v23;
  dispatch thunk of RawRepresentable.rawValue.getter(&v73, v11, v25);
  dispatch thunk of RawRepresentable.rawValue.getter(&v69, v11, v25);
  uint64_t v26 = v74;
  uint64_t v27 = v70;
  if (v73 == v69 && v74 == v70)
  {
    swift_bridgeObjectRelease_n(v74, 2LL);
    uint64_t v28 = (void (*)(_BYTE *, uint64_t))v12[1];
    v28(v19, v11);
    double v29 = 1.0;
    uint64_t v30 = v60;
  }

  else
  {
    int v53 = a2;
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v74, v69, v70, 0LL);
    swift_bridgeObjectRelease(v26);
    __n128 v32 = swift_bridgeObjectRelease(v27);
    uint64_t v28 = (void (*)(_BYTE *, uint64_t))v12[1];
    ((void (*)(_BYTE *, uint64_t, __n128))v28)(v19, v11, v32);
    if ((v31 & 1) != 0)
    {
      double v29 = 1.0;
      uint64_t v30 = v60;
      LOBYTE(a2) = v53;
    }

    else
    {
      double v33 = v67;
      *((void *)v67 + 3) = &type metadata for Double;
      *((void *)v33 + 4) = &protocol witness table for Double;
      double v29 = 440.0;
      uint64_t v30 = v60;
      LOBYTE(a2) = v53;
    }
  }

  *uint64_t v67 = v29;
  id v34 = v30;
  (*(void (**)(void))(v66 + 104))();
  v55(v16, v24, v11);
  dispatch thunk of RawRepresentable.rawValue.getter(&v73, v11, v25);
  dispatch thunk of RawRepresentable.rawValue.getter(&v69, v11, v25);
  uint64_t v35 = v74;
  uint64_t v36 = v70;
  uint64_t v60 = v28;
  if (v73 == v69 && v74 == v70)
  {
    swift_bridgeObjectRelease_n(v74, 2LL);
    v28(v16, v11);
    uint64_t v37 = (unsigned int *)&enum case for LargeHeroBreakoutLayout.DetailsVerticalPostion.bottom(_:);
  }

  else
  {
    unsigned __int8 v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v74, v69, v70, 0LL);
    swift_bridgeObjectRelease(v35);
    __n128 v39 = swift_bridgeObjectRelease(v36);
    ((void (*)(_BYTE *, uint64_t, __n128))v28)(v16, v11, v39);
    else {
      uint64_t v37 = (unsigned int *)&enum case for LargeHeroBreakoutLayout.DetailsVerticalPostion.center(_:);
    }
  }

  uint64_t v40 = v11;
  uint64_t v54 = v11;
  uint64_t v41 = v62;
  uint64_t v42 = v59;
  uint64_t v43 = v63;
  (*(void (**)(_BYTE *, void, uint64_t))(v62 + 104))(v59, *v37, v63);
  uint64_t v75 = &type metadata for Double;
  uint64_t v76 = &protocol witness table for Double;
  uint64_t v72 = &protocol witness table for Double;
  uint64_t v73 = 0LL;
  if ((a2 & 1) != 0) {
    double v44 = 880.0;
  }
  else {
    double v44 = 630.0;
  }
  uint64_t v71 = &type metadata for Double;
  uint64_t v69 = 0LL;
  uint64_t v45 = v57;
  uint64_t v46 = v65;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v56)(v57, v65, v40);
  uint64_t v48 = v66;
  id v47 = v67;
  id v49 = v58;
  (*(void (**)(_BYTE *, double *, void *))(v66 + 16))(v58, v67, v34);
  uint64_t v50 = v61;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v41 + 16))(v61, v42, v43);
  v68[3] = &type metadata for CGFloat;
  v68[4] = &protocol witness table for CGFloat;
  *(double *)uint64_t v68 = v44;
  LargeHeroBreakoutLayout.Metrics.init(headerSpace:headerMaxWidth:detailPosition:detailsWidth:detailsVerticalPostion:layoutMargins:height:)( &v73,  &v69,  v45,  v49,  v50,  v68,  0.0,  80.0,  45.0,  80.0);
  (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v42, v43);
  ((void (*)(_BYTE *, uint64_t))v60)(v46, v54);
  return (*(uint64_t (**)(double *, void *))(v48 + 8))(v47, v34);
}

char *sub_100051F48(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v12 = &v4[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_itemLayoutContext];
  uint64_t v13 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v12, 1LL, 1LL, v13);
  v4[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_isFeatured] = 0;
  uint64_t v14 = OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_focusGuide;
  id v15 = objc_allocWithZone(&OBJC_CLASS___UIFocusGuide);
  CGFloat v16 = v4;
  *(void *)&v4[v14] = [v15 init];
  uint64_t v17 = OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_videoContainer;
  uint64_t v18 = (objc_class *)type metadata accessor for VideoViewContainer();
  CGFloat v19 = (char *)objc_allocWithZone(v18);
  swift_unknownObjectWeakInit(&v19[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view], 0LL);
  *(void *)&v19[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v20, 0LL);
  v38.receiver = v19;
  v38.super_class = v18;
  *(void *)&v16[v17] = objc_msgSendSuper2(&v38, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v21 = OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_artworkView;
  type metadata accessor for ArtworkView(0LL);
  *(void *)&v16[v21] = static ArtworkView.plainArtworkView.getter();
  *(void *)&v16[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_backgroundArtwork] = 0LL;
  uint64_t v22 = OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_detailsView;
  if (qword_1002DCAE8 != -1) {
    swift_once(&qword_1002DCAE8, sub_1000DE988);
  }
  uint64_t v23 = sub_1000061F4(v9, (uint64_t)qword_1002F0340);
  sub_10004E80C(v23, (uint64_t)v11);
  id v24 = objc_allocWithZone((Class)type metadata accessor for BreakoutDetailsView(0LL));
  *(void *)&v16[v22] = sub_1000DF0D4((uint64_t)v11);
  unint64_t v25 = &v16[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_detailPosition];
  uint64_t v26 = enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:);
  uint64_t v27 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104LL))(v25, v26, v27);

  uint64_t v28 = (objc_class *)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  v37.receiver = v16;
  v37.super_class = v28;
  double v29 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  id v30 = [v29 contentView];
  [v30 addSubview:*(void *)&v29[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_videoContainer]];

  id v31 = [v29 contentView];
  [v31 addSubview:*(void *)&v29[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_artworkView]];

  id v32 = [v29 contentView];
  [v32 addSubview:*(void *)&v29[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_detailsView]];

  double v33 = *(void **)&v29[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_focusGuide];
  [v33 _setAutomaticallyDisableWhenIntersectingFocus:1];
  id v34 = [v29 contentView];
  [v34 addLayoutGuide:v33];

  id v35 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v35 addObserver:v29 selector:"didUpdateFocusWithNotification:" name:UIFocusDidUpdateNotification object:0];

  return v29;
}

uint64_t sub_100052428()
{
  uint64_t result = (uint64_t)sub_1000DDF44();
  uint64_t v1 = result;
  if (!((unint64_t)result >> 62))
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease(v1);
    goto LABEL_19;
  }

  if (result >= 0) {
    result &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(result);
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0LL; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      }

      else
      {
        uint64_t v4 = *(void *)(v1 + 8 * i + 32);
        swift_unknownObjectRetain(v4);
      }

      uint64_t v5 = objc_opt_self(&OBJC_CLASS___UIView);
      uint64_t v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
      if (v6 && (id v7 = [v6 isFocused], (v7 & 1) != 0))
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
        uint64_t v8 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
        uint64_t v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v4);
        specialized ContiguousArray._endMutation()(v9);
      }

      else
      {
        swift_unknownObjectRelease(v4);
      }
    }

    swift_bridgeObjectRelease(v1);
LABEL_19:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000LL) == 0)
    {
      uint64_t v10 = _swiftEmptyArrayStorage[2];
LABEL_21:
      swift_release(_swiftEmptyArrayStorage);
      return v10 == 0;
    }

void sub_1000525C8()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  objc_msgSendSuper2(&v8, "didMoveToWindow");
  id v1 = [(id)objc_opt_self(UIFocusSystem) focusSystemForEnvironment:v0];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 focusedItem];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = objc_opt_self(&OBJC_CLASS___UIView);
      uint64_t v6 = swift_dynamicCastObjCClass(v4, v5);
      if (v6)
      {
        id v7 = (void *)v6;
        swift_unknownObjectRetain(v4);
        sub_100051674(v7, 0LL);

        swift_unknownObjectRelease_n(v4, 2LL);
        return;
      }

      swift_unknownObjectRelease(v4);
    }
  }

uint64_t sub_100052778()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for LargeHeroBreakoutLayout.Metrics(0LL);
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = type metadata accessor for LargeHeroBreakoutLayout(0LL, v11);
  uint64_t v37 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  id v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  CGFloat v16 = (objc_class *)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  v44.receiver = v1;
  v44.super_class = v16;
  objc_msgSendSuper2(&v44, "layoutSubviews");
  uint64_t v17 = &v1[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_detailPosition];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_detailPosition], v43, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v17, v6);
  sub_1000519D8( (uint64_t)v9,  v1[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_isFeatured],  (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v18 = *(char **)&v1[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_videoContainer];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v18[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);

  if (!Strong) {
    uint64_t v18 = *(char **)&v1[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_artworkView];
  }
  uint64_t v20 = v18;
  v42[3] = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
  v42[4] = protocol witness table for UIView;
  uint64_t v41 = 0LL;
  v42[0] = v20;
  memset(v40, 0, sizeof(v40));
  uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_detailsView];
  v39[3] = type metadata accessor for BreakoutDetailsView(0LL);
  v39[4] = protocol witness table for UIView;
  v39[0] = v21;
  id v22 = v21;
  LargeHeroBreakoutLayout.init(metrics:backgroundMediaView:headerLabel:detailsView:)(v13, v42, v40, v39, v23);
  id v24 = [v1 contentView];
  [v24 bounds];
  double v26 = v25;
  double v28 = v27;
  double v30 = v29;
  double v32 = v31;

  LargeHeroBreakoutLayout.placeChildren(relativeTo:in:)(v1, v26, v28, v30, v32);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  double v33 = *(void **)&v1[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_focusGuide];
  id v34 = [v1 contentView];
  [v34 frame];

  objc_msgSend( v33,  "_setManualLayoutFrame:",  CGRect.subtracting(insets:)(objc_msgSend(v1, "layoutMargins")).n128_f64[0]);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v15, v38);
}

void sub_100052B00()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v6 = (objc_class *)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  v12.receiver = v0;
  v12.super_class = v6;
  objc_msgSendSuper2(&v12, "prepareForReuse");
  sub_1000DE0D8();
  [v0 setBackgroundColor:0];
  (*(void (**)(_BYTE *, void, uint64_t))(v3 + 104))( v5,  enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:),  v2);
  uint64_t v7 = &v0[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_detailPosition];
  swift_beginAccess(v7, v11, 33LL, 0LL);
  (*(void (**)(char *, _BYTE *, uint64_t))(v3 + 24))(v7, v5, v2);
  swift_endAccess(v11);
  [v1 setNeedsLayout];
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  sub_1001B2138();
  uint64_t v8 = OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_artworkView;
  id v9 = *(id *)&v1[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_artworkView];
  ArtworkView.image.setter(0LL);

  [*(id *)&v1[v8] setHidden:1];
  sub_100051838();
}

uint64_t sub_100052CA4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_detailPosition;
  uint64_t v2 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
}

id sub_100052D48()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100052E24()
{
  return type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
}

uint64_t type metadata accessor for LargeBreakoutCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DFAD0;
  if (!qword_1002DFAD0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LargeBreakoutCollectionViewCell);
  }
  return result;
}

void sub_100052E68(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = &unk_1002354C0;
    void v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    _OWORD v6[5] = &unk_1002354D8;
    v6[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t v4 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(319LL);
    if (v5 <= 0x3F)
    {
      v6[7] = *(void *)(v4 - 8) + 64LL;
      swift_updateClassMetadata2(a1, 256LL, 8LL, v6, a1 + 472);
    }
  }

uint64_t sub_100052F18()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*v0 + OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_videoContainer)
         + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
}

id sub_100052F3C()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_videoContainer);
}

unint64_t sub_100052F50()
{
  unint64_t result = qword_1002DFAE8;
  if (!qword_1002DFAE8)
  {
    uint64_t v1 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(255LL);
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for BreakoutDetailsDisplayProperties.DetailPosition,  v1);
    atomic_store(result, (unint64_t *)&qword_1002DFAE8);
  }

  return result;
}

void sub_100052F98(uint64_t a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  objc_msgSendSuper2(&v7, "setBackgroundColor:", a1);
  unint64_t v3 = *(char **)&v1[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_videoContainer];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);

  if (!Strong) {
    unint64_t v3 = *(char **)&v1[OBJC_IVAR____TtC6Arcade31LargeBreakoutCollectionViewCell_artworkView];
  }
  unint64_t v5 = v3;
  id v6 = [v1 backgroundColor];
  [v5 setBackgroundColor:v6];
}

uint64_t TVProductAnnotationLayout.init(metrics:titleText:summaryText:detailViews:linkText:backgroundView:isExpanded:)@<X0>( uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  __int128 v14 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(a8 + 336) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a8 + 352) = v14;
  *(void *)(a8 + 368) = *(void *)(a1 + 192);
  __int128 v15 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a8 + 272) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a8 + 288) = v15;
  __int128 v16 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a8 + 304) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a8 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v16;
  __int128 v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a8 + 208) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a8 + 224) = v17;
  __int128 v18 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a8 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a8 + 256) = v18;
  __int128 v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a8 + 176) = *(_OWORD *)a1;
  *(_OWORD *)(a8 + 192) = v19;
  sub_100009D90(a2, a8);
  sub_100009D90(a3, a8 + 40);
  *(void *)(a8 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = a4;
  sub_10003FBFC(a5, a8 + 88, (uint64_t *)&unk_1002EAEB0);
  uint64_t result = sub_10003FBFC(a6, a8 + 128, &qword_1002E2020);
  *(_BYTE *)(a8 + 168) = a7;
  return result;
}

uint64_t TVProductAnnotationLayout.detailViews.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 80));
}

uint64_t TVProductAnnotationLayout.linkText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001027C(v1 + 88, a1, (uint64_t *)&unk_1002EAEB0);
}

uint64_t TVProductAnnotationLayout.backgroundView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001027C(v1 + 128, a1, &qword_1002E2020);
}

uint64_t TVProductAnnotationLayout.isExpanded.getter()
{
  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t TVProductAnnotationLayout.Metrics.init(titleSpace:detailSpace:linkLeadingSpace:backgroundVerticalOffset:bottomSpace:)@<X0>( __int128 *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X8>)
{
  return sub_100009D90(a5, a6 + 160);
}

uint64_t TVProductAnnotationLayout.Metrics.bottomSpace.setter(__int128 *a1)
{
  unint64_t v3 = (void *)(v1 + 160);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVProductAnnotationLayout.Metrics.bottomSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

_OWORD *TVProductAnnotationLayout.metrics.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_10005322C((_OWORD *)(v1 + 176), a1);
}

_OWORD *sub_10005322C(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

double TVProductAnnotationLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  return sub_1000562C8(a1, v3, a2, a3);
}

uint64_t sub_1000532A4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v56 = a2;
  uint64_t v57 = a1;
  double v10 = a3.n128_f64[0];
  uint64_t v11 = type metadata accessor for VerticalStackLayout.Child.Alignment(0LL, a3);
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  __n128 v12 = __chkstk_darwin(v11);
  __int128 v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for VerticalStackLayout.ExclusionCondition(0LL, v12);
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = __chkstk_darwin(v15);
  __int128 v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for VerticalStackLayout.Alignment(0LL, v17);
  uint64_t v21 = *(void *)(v20 - 8);
  __n128 v22 = __chkstk_darwin(v20);
  id v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = v24;
  uint64_t v25 = type metadata accessor for VerticalStackLayout(0LL, v22);
  uint64_t v54 = *(void *)(v25 - 8);
  uint64_t v55 = v25;
  __n128 v26 = __chkstk_darwin(v25);
  double v28 = (char *)&v49 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t, __n128))(v21 + 104))( v24,  enum case for VerticalStackLayout.Alignment.firstBaseline(_:),  v20,  v26);
  uint64_t v29 = sub_1000031E8(&qword_1002DECF8);
  uint64_t v30 = *(void *)(type metadata accessor for VerticalStackLayout.Child(0LL) - 8);
  uint64_t v31 = *(void *)(v30 + 72);
  uint64_t v32 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = (v32 + 32) & ~v32;
  uint64_t v34 = swift_allocObject(v29, v33 + v31, v32 | 7);
  __int128 v49 = xmmword_100233580;
  *(_OWORD *)(v34 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
  uint64_t v50 = v34 + v33;
  uint64_t v35 = v6[3];
  uint64_t v36 = v6[4];
  uint64_t v37 = sub_100005F8C(v6, v35);
  uint64_t v60 = v35;
  uint64_t v61 = *(void **)(v36 + 8);
  uint64_t v38 = sub_100009D54(v59);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16LL))(v38, v37, v35);
  __n128 v39 = v6 + 22;
  uint64_t v40 = sub_1000031E8(&qword_1002DFB08);
  uint64_t v41 = swift_allocObject( v40,  ((*(unsigned __int8 *)(v16 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))
        + *(void *)(v16 + 72),
          *(unsigned __int8 *)(v16 + 80) | 7LL);
  *(_OWORD *)(v41 + swift_unknownObjectWeakDestroy(v0 + 16) = v49;
  static VerticalStackLayout.ExclusionCondition.isHidden.getter();
  uint64_t v58 = v41;
  uint64_t v42 = sub_100003B6C( &qword_1002DED00,  (uint64_t (*)(uint64_t))&type metadata accessor for VerticalStackLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for VerticalStackLayout.ExclusionCondition);
  uint64_t v43 = sub_1000031E8(&qword_1002DED08);
  uint64_t v44 = sub_100057730((unint64_t *)&qword_1002DED10, &qword_1002DED08);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v58, v43, v44, v15, v42);
  uint64_t v46 = v52;
  uint64_t v45 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))( v14,  enum case for VerticalStackLayout.Child.Alignment.left(_:),  v53);
  static VerticalStackLayout.Child.make(forView:space:spaceMultiplier:alignment:excludeWhen:)(v59, v39, v14, v19, 1.0);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v45);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  _s6Arcade17PillOverlayLayoutVwxx_0(v59);
  uint64_t v60 = type metadata accessor for ZeroDimension(0LL);
  uint64_t v61 = &protocol witness table for ZeroDimension;
  id v47 = sub_100009D54(v59);
  static ZeroDimension.zero.getter(v47);
  VerticalStackLayout.init(alignment:spacing:children:)(v51, v59, v34);
  VerticalStackLayout.placeChildren(relativeTo:in:)(v57, v10, a4, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v28, v55);
}

uint64_t sub_10005360C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v72 = a1;
  double v10 = a3.n128_f64[0];
  uint64_t v71 = a2;
  uint64_t v69 = type metadata accessor for VerticalStackLayout.Child.Alignment(0LL, a3);
  uint64_t v67 = *(void *)(v69 - 8);
  __n128 v11 = __chkstk_darwin(v69);
  uint64_t v64 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = type metadata accessor for VerticalStackLayout.ExclusionCondition(0LL, v11);
  uint64_t v62 = *(void *)(v63 - 8);
  __n128 v13 = __chkstk_darwin(v63);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for VerticalStackLayout.Alignment(0LL, v13);
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = __chkstk_darwin(v16);
  uint64_t v66 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v70 = type metadata accessor for VerticalStackLayout(0LL, v18);
  uint64_t v68 = *(void *)(v70 - 8);
  __n128 v20 = __chkstk_darwin(v70);
  double v65 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for AppStore.HorizontalPairLayout.Edge(0LL, v20);
  uint64_t v23 = *(void *)(v22 - 8);
  __n128 v24 = __chkstk_darwin(v22);
  __n128 v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = type metadata accessor for AppStore.HorizontalPairLayout(0LL, v24);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v61 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001027C(v6 + 88, (uint64_t)&v76, (uint64_t *)&unk_1002EAEB0);
  if (!v77)
  {
    sub_100006060((uint64_t)&v76, (uint64_t *)&unk_1002EAEB0);
    goto LABEL_5;
  }

  sub_100009D90(&v76, (uint64_t)&v79);
  if ((*(_BYTE *)(v6 + 168) & 1) != 0)
  {
    _s6Arcade17PillOverlayLayoutVwxx_0(&v79);
LABEL_5:
    uint64_t v31 = v66;
    (*(void (**)(char *, void, uint64_t))(v17 + 104))( v66,  enum case for VerticalStackLayout.Alignment.firstBaseline(_:),  v16);
    uint64_t v32 = sub_1000031E8(&qword_1002DECF8);
    uint64_t v33 = type metadata accessor for VerticalStackLayout.Child(0LL);
    uint64_t v34 = swift_allocObject( v32,  ((*(unsigned __int8 *)(*(void *)(v33 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v33 - 8) + 80LL))
          + *(void *)(*(void *)(v33 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v33 - 8) + 80LL) | 7LL);
    __int128 v61 = xmmword_100233580;
    *(_OWORD *)(v34 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    uint64_t v35 = *(void *)(v6 + 64);
    uint64_t v36 = *(void *)(v6 + 72);
    uint64_t v37 = sub_100005F8C((void *)(v6 + 40), v35);
    uint64_t v80 = v35;
    uint64_t v81 = *(void **)(v36 + 8);
    uint64_t v38 = sub_100009D54(&v79);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16LL))(v38, v37, v35);
    uint64_t v39 = v6 + 216;
    uint64_t v40 = sub_1000031E8(&qword_1002DFB08);
    uint64_t v41 = v62;
    uint64_t v42 = swift_allocObject( v40,  ((*(unsigned __int8 *)(v62 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))
          + *(void *)(v62 + 72),
            *(unsigned __int8 *)(v62 + 80) | 7LL);
    *(_OWORD *)(v42 + swift_unknownObjectWeakDestroy(v0 + 16) = v61;
    static VerticalStackLayout.ExclusionCondition.isHidden.getter();
    *(void *)&__int128 v76 = v42;
    uint64_t v43 = sub_100003B6C( &qword_1002DED00,  (uint64_t (*)(uint64_t))&type metadata accessor for VerticalStackLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for VerticalStackLayout.ExclusionCondition);
    uint64_t v44 = sub_1000031E8(&qword_1002DED08);
    uint64_t v45 = sub_100057730((unint64_t *)&qword_1002DED10, &qword_1002DED08);
    uint64_t v46 = v63;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v76, v44, v45, v63, v43);
    uint64_t v47 = v67;
    uint64_t v48 = v64;
    uint64_t v49 = v69;
    (*(void (**)(char *, void, uint64_t))(v67 + 104))( v64,  enum case for VerticalStackLayout.Child.Alignment.left(_:),  v69);
    static VerticalStackLayout.Child.make(forView:space:spaceMultiplier:alignment:excludeWhen:)( &v79,  v39,  v48,  v15,  1.0);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v46);
    _s6Arcade17PillOverlayLayoutVwxx_0(&v79);
    uint64_t v80 = type metadata accessor for ZeroDimension(0LL);
    uint64_t v81 = &protocol witness table for ZeroDimension;
    uint64_t v50 = sub_100009D54(&v79);
    static ZeroDimension.zero.getter(v50);
    uint64_t v51 = v65;
    VerticalStackLayout.init(alignment:spacing:children:)(v31, &v79, v34);
    VerticalStackLayout.placeChildren(relativeTo:in:)(v72, v10, a4, a5, a6);
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v51, v70);
  }

  uint64_t v53 = *(void *)(v6 + 64);
  uint64_t v54 = *(void *)(v6 + 72);
  uint64_t v55 = sub_100005F8C((void *)(v6 + 40), v53);
  uint64_t v77 = v53;
  uint64_t v78 = *(void *)(v54 + 8);
  uint64_t v56 = sub_100009D54(&v76);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16LL))(v56, v55, v53);
  uint64_t v57 = v80;
  uint64_t v58 = v81;
  uint64_t v59 = sub_100005F8C(&v79, v80);
  void v75[3] = v57;
  v75[4] = v58[1];
  uint64_t v60 = sub_100009D54(v75);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 16LL))(v60, v59, v57);
  (*(void (**)(char *, void, uint64_t))(v23 + 104))( v26,  enum case for AppStore.HorizontalPairLayout.Edge.leading(_:),  v22);
  sub_10001F010(v6 + 216, (uint64_t)v74);
  sub_10001F010(v6 + 256, (uint64_t)v73);
  AppStore.HorizontalPairLayout.init(leadingView:trailingView:priorityView:alignmentSpace:interViewSpacing:)( &v76,  v75,  v26,  v74,  v73);
  AppStore.HorizontalPairLayout.placeChildren(relativeTo:in:)(v72, v10, a4, a5, a6);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  return _s6Arcade17PillOverlayLayoutVwxx_0(&v79);
}

void sub_100053BCC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = type metadata accessor for LayoutRect(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v64 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v62 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v75 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0LL);
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v73 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0LL);
  uint64_t v81 = *(void *)(v18 - 8);
  uint64_t v82 = v18;
  __chkstk_darwin(v18);
  uint64_t v72 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v71 = type metadata accessor for _VerticalFlowLayout.Child(0LL);
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = *(void *)(v5 + 80);
  if (*(_BYTE *)(v5 + 168) == 1)
  {
    uint64_t v60 = v14;
    uint64_t v61 = v12;
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v58 = v11;
      uint64_t v59 = a1;
      uint64_t v68 = v5 + 216;
      uint64_t v24 = v22 + 32;
      unsigned int v67 = enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:);
      unsigned int v66 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:);
      uint64_t v57 = v22;
      swift_bridgeObjectRetain(v22);
      uint64_t v25 = _swiftEmptyArrayStorage;
      __int128 v65 = xmmword_100233580;
      uint64_t v69 = v21;
      __n128 v26 = v72;
      uint64_t v27 = v73;
      uint64_t v28 = v76;
      do
      {
        uint64_t v79 = v25;
        uint64_t v80 = v23;
        sub_10001F010(v24, (uint64_t)&v86);
        uint64_t v30 = v87;
        uint64_t v29 = v88;
        sub_100005F8C(&v86, v87);
        dispatch thunk of LayoutView.isHidden.setter(0LL, v30, v29, v31);
        uint64_t v85 = 0LL;
        memset(v84, 0, sizeof(v84));
        (*(void (**)(char *, void, uint64_t))(v81 + 104))(v26, v67, v82);
        uint64_t v32 = v74;
        (*(void (**)(char *, void, uint64_t))(v74 + 104))(v27, v66, v28);
        uint64_t v33 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
        uint64_t v34 = v77;
        uint64_t v35 = swift_allocObject( v33,  ((*(unsigned __int8 *)(v77 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))
              + *(void *)(v77 + 72),
                *(unsigned __int8 *)(v77 + 80) | 7LL);
        *(_OWORD *)(v35 + swift_unknownObjectWeakDestroy(v0 + 16) = v65;
        static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v35);
        uint64_t v83 = v35;
        uint64_t v36 = sub_100003B6C( (unint64_t *)&qword_1002DD1C0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
        uint64_t v37 = sub_1000031E8(&qword_1002E45E0);
        uint64_t v38 = sub_100057730((unint64_t *)&qword_1002DD1D0, &qword_1002E45E0);
        uint64_t v39 = v75;
        uint64_t v40 = v37;
        uint64_t v41 = v78;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v83, v40, v38, v78, v36);
        static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v86,  v26,  v27,  v68,  v84,  v39);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v39, v41);
        uint64_t v42 = *(void (**)(char *, uint64_t))(v32 + 8);
        uint64_t v25 = v79;
        v42(v27, v28);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v26, v82);
        sub_100006060((uint64_t)v84, (uint64_t *)&unk_1002E4D10);
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0) {
          uint64_t v25 = (void *)sub_100019F28(0LL, v25[2] + 1LL, 1, v25);
        }
        unint64_t v44 = v25[2];
        unint64_t v43 = v25[3];
        uint64_t v45 = v69;
        uint64_t v46 = v80;
        if (v44 >= v43 >> 1) {
          uint64_t v25 = (void *)sub_100019F28(v43 > 1, v44 + 1, 1, v25);
        }
        v25[2] = v44 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))( (unint64_t)v25 + ((*(unsigned __int8 *)(v70 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))
        + *(void *)(v70 + 72) * v44,
          v45,
          v71);
        _s6Arcade17PillOverlayLayoutVwxx_0(&v86);
        v24 += 40LL;
        uint64_t v23 = v46 - 1;
      }

      while (v23);
      swift_bridgeObjectRelease(v57);
      a1 = v59;
      uint64_t v11 = v58;
    }

    else
    {
      uint64_t v25 = _swiftEmptyArrayStorage;
    }

    uint64_t v55 = v62;
    _VerticalFlowLayout.init(expandChildrenToFit:children:)(0LL, v25);
    uint64_t v56 = v60;
    _VerticalFlowLayout.placeChildren(relativeTo:in:)(a1, a2, a3, a4, a5);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v56, v11);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v55, v64);
  }

  else
  {
    uint64_t v47 = *(void *)(v22 + 16);
    if (v47)
    {
      uint64_t v48 = v22 + 32;
      uint64_t v49 = *(void *)(v5 + 80);
      swift_bridgeObjectRetain(v22);
      do
      {
        sub_10001F010(v48, (uint64_t)&v86);
        uint64_t v50 = v87;
        uint64_t v51 = v88;
        sub_100005F8C(&v86, v87);
        dispatch thunk of LayoutView.isHidden.setter(1LL, v50, v51, v52);
        uint64_t v53 = v87;
        uint64_t v54 = v88;
        sub_100005F8C(&v86, v87);
        dispatch thunk of LayoutView.frame.setter(v53, v54);
        _s6Arcade17PillOverlayLayoutVwxx_0(&v86);
        v48 += 40LL;
        --v47;
      }

      while (v47);
      swift_bridgeObjectRelease(v49);
    }
  }

uint64_t TVProductAnnotationLayout.placeChildren(relativeTo:in:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v7 = v6;
  uint64_t v56 = a2;
  uint64_t v57 = type metadata accessor for LayoutRect(0LL);
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v52 - v16;
  uint64_t v18 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = (void *)(v6 + 296);
  uint64_t v23 = *(void *)(v6 + 320);
  uint64_t v24 = *(void *)(v7 + 328);
  sub_100005F8C(v22, v23);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v23, v24);
  AnyDimension.value(in:rounded:)(a1, v21, v23, v24);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_10001027C(v7 + 128, (uint64_t)v58, &qword_1002E2020);
  uint64_t v25 = v59;
  if (v59)
  {
    uint64_t v26 = v60;
    sub_100005F8C(v58, v59);
    dispatch thunk of LayoutView.frame.setter(v25, v26);
    _s6Arcade17PillOverlayLayoutVwxx_0(v58);
  }

  else
  {
    sub_100006060((uint64_t)v58, &qword_1002E2020);
  }

  v27.n128_f64[0] = a3;
  sub_1000532A4(a1, (uint64_t)v17, v27, a4, a5, a6);
  v61.origin.CGFloat x = a3;
  v61.origin.CGFloat y = a4;
  v61.size.double width = a5;
  v61.size.double height = a6;
  CGFloat MinX = CGRectGetMinX(v61);
  uint64_t v28 = LayoutRect.origin.getter();
  LayoutRect.size.getter(v28);
  v62.origin.CGFloat x = a3;
  v62.origin.CGFloat y = a4;
  v62.size.double width = a5;
  v62.size.double height = a6;
  CGRectGetWidth(v62);
  v63.origin.CGFloat x = a3;
  v63.origin.CGFloat y = a4;
  v63.size.double width = a5;
  v63.size.double height = a6;
  CGRectGetMaxY(v63);
  uint64_t v29 = LayoutRect.origin.getter();
  double v54 = a6;
  LayoutRect.size.getter(v29);
  v30.n128_f64[0] = CGRect.withLayoutDirection(in:relativeTo:)(a1);
  CGFloat v31 = v30.n128_f64[0];
  CGFloat v33 = v32;
  CGFloat v35 = v34;
  CGFloat v37 = v36;
  sub_10005360C(a1, (uint64_t)v14, v30, v32, v34, v36);
  v64.origin.CGFloat x = v31;
  v64.origin.CGFloat y = v33;
  v64.size.double width = v35;
  v64.size.double height = v37;
  CGFloat MinX = CGRectGetMinX(v64);
  uint64_t v38 = LayoutRect.origin.getter();
  double v39 = a5;
  double v41 = v40;
  LayoutRect.size.getter(v38);
  double v52 = v41 + v42;
  v65.origin.CGFloat x = v31;
  v65.origin.CGFloat y = v33;
  v65.size.double width = v35;
  v65.size.double height = v37;
  CGRectGetWidth(v65);
  v66.origin.CGFloat x = v31;
  v66.origin.CGFloat y = v33;
  v66.size.double width = v35;
  v66.size.double height = v37;
  CGRectGetMaxY(v66);
  uint64_t v43 = LayoutRect.origin.getter();
  LayoutRect.size.getter(v43);
  double v44 = v54;
  double v45 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
  sub_100053BCC(a1, v45, v46, v47, v48);
  LayoutRect.init(representing:)(a3, a4, v39, v44);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v55 + 8);
  uint64_t v50 = v57;
  v49(v14, v57);
  return ((uint64_t (*)(char *, uint64_t))v49)(v17, v50);
}

uint64_t TVProductAnnotationLayout.ItemLayout.Metrics.listTextTopSpace.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 200);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVProductAnnotationLayout.ItemLayout.Metrics.listTextTopSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVProductAnnotationLayout.ItemLayout.Metrics.bottomSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 240, a1);
}

uint64_t TVProductAnnotationLayout.ItemLayout.Metrics.bottomSpace.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 240);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVProductAnnotationLayout.ItemLayout.Metrics.bottomSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVProductAnnotationLayout.ItemLayout.Metrics.lastItemBottomSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 280, a1);
}

uint64_t TVProductAnnotationLayout.ItemLayout.Metrics.lastItemBottomSpace.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 280);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVProductAnnotationLayout.ItemLayout.Metrics.lastItemBottomSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVProductAnnotationLayout.ItemLayout.Metrics.horizontalPairTextSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 320, a1);
}

uint64_t TVProductAnnotationLayout.ItemLayout.Metrics.horizontalPairTextSpace.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 320);
  _s6Arcade17PillOverlayLayoutVwxx_0(v3);
  return sub_100009D90(a1, (uint64_t)v3);
}

uint64_t (*TVProductAnnotationLayout.ItemLayout.Metrics.horizontalPairTextSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVProductAnnotationLayout.ItemLayout.Metrics.init(headingTopSpace:headingArtworkTopSpace:headingArtworkBottomSpace:textTopSpace:subTextTopSpace:listTextTopSpace:bottomSpace:lastItemBottomSpace:horizontalPairTextSpace:)@<X0>( __int128 *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, __int128 *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, __int128 *a10)
{
  return sub_100009D90(a10, a9 + 320);
}

uint64_t TVProductAnnotationLayout.ItemLayout.init(metrics:headingText:headingArtwork:text:subText:listText:isLastItem:)@<X0>( void *__src@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, char a7@<W6>, _BYTE *a8@<X8>)
{
  uint64_t result = sub_100009D90(a6, (uint64_t)(a8 + 520));
  a8[560] = a7;
  return result;
}

uint64_t TVProductAnnotationLayout.ItemLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10005663C(v1, a1);
}

uint64_t TVProductAnnotationLayout.ItemLayout.headingText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 360, a1);
}

uint64_t TVProductAnnotationLayout.ItemLayout.headingArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 400, a1);
}

uint64_t TVProductAnnotationLayout.ItemLayout.text.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 440, a1);
}

uint64_t TVProductAnnotationLayout.ItemLayout.subText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 480, a1);
}

uint64_t TVProductAnnotationLayout.ItemLayout.listText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F010(v1 + 520, a1);
}

uint64_t TVProductAnnotationLayout.ItemLayout.isLastItem.getter()
{
  return *(unsigned __int8 *)(v0 + 560);
}

double TVProductAnnotationLayout.ItemLayout.measurements(fitting:in:)(void *a1, double a2, double a3)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v8 = v3 + 45;
  uint64_t v10 = v3[48];
  uint64_t v9 = v3[49];
  sub_100005F8C(v8, v10);
  LOBYTE(v9) = dispatch thunk of LayoutView.hasContent.getter(v10, *(void *)(v9 + 8));
  sub_100056670(v4, (uint64_t)v31);
  if ((v9 & 1) != 0)
  {
    sub_1000566A4(v31);
    sub_100056670(v4, (uint64_t)v27);
LABEL_4:
    sub_1000566A4(v27);
    goto LABEL_5;
  }

  uint64_t v11 = v33;
  uint64_t v12 = v34;
  sub_100005F8C(v32, v33);
  char v13 = dispatch thunk of LayoutView.hasContent.getter(v11, v12);
  sub_1000566A4(v31);
  sub_100056670(v4, (uint64_t)v27);
  if ((v13 & 1) != 0) {
    goto LABEL_4;
  }
  uint64_t v17 = v29;
  uint64_t v18 = v30;
  sub_100005F8C(v28, v29);
  LOBYTE(v18) = dispatch thunk of LayoutView.hasContent.getter(v17, *(void *)(v18 + 8));
  sub_1000566A4(v27);
  if ((v18 & 1) == 0)
  {
    id v19 = [a1 traitCollection];
    char v20 = UITraitCollection.prefersAccessibilityLayouts.getter(v19);

    if ((v20 & 1) == 0)
    {
      uint64_t v21 = (void *)(v4 + 440);
      uint64_t v23 = *(void *)(v4 + 464);
      uint64_t v22 = *(void *)(v4 + 472);
      sub_100005F8C(v21, v23);
      dispatch thunk of Measurable.measurements(fitting:in:)(a1, v23, *(void *)(*(void *)(v22 + 8) + 8LL), a2, a3);
      return a2;
    }
  }

uint64_t sub_100054AD0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)v2;
  uint64_t v181 = a2;
  uint64_t v5 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v188 = *(void *)(v5 - 8);
  uint64_t v189 = v5;
  __chkstk_darwin(v5);
  uint64_t v187 = (char *)&v175 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v186 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0LL);
  uint64_t v195 = *(void *)(v186 - 8);
  __chkstk_darwin(v186);
  uint64_t v185 = (char *)&v175 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0LL);
  uint64_t v196 = *(void *)(v8 - 8);
  uint64_t v197 = v8;
  __chkstk_darwin(v8);
  uint64_t v193 = (char *)&v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for _VerticalFlowLayout.Child(0LL);
  uint64_t v190 = *(void *)(v10 - 8);
  uint64_t v191 = v10;
  __chkstk_darwin(v10);
  uint64_t v178 = (char *)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v177 = (char *)&v175 - v13;
  __chkstk_darwin(v14);
  uint64_t v180 = (char *)&v175 - v15;
  __chkstk_darwin(v16);
  uint64_t v179 = (char *)&v175 - v17;
  __chkstk_darwin(v18);
  v176 = (char *)&v175 - v19;
  uint64_t v192 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v20 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  uint64_t v22 = (char *)&v175 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(_BYTE *)(v2 + 560) == 1)
  {
    uint64_t v23 = (void *)(v2 + 280);
    uint64_t v24 = *(void *)(v2 + 304);
    uint64_t v25 = v3[39];
    sub_100005F8C(v23, v3[38]);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v24, v25);
    uint64_t v26 = a1;
    __n128 v27 = v22;
    uint64_t v28 = v24;
    uint64_t v29 = v25;
  }

  else
  {
    uint64_t v30 = (void *)(v2 + 240);
    uint64_t v31 = *(void *)(v2 + 264);
    uint64_t v32 = v3[34];
    sub_100005F8C(v30, v3[33]);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v31, v32);
    uint64_t v26 = a1;
    __n128 v27 = v22;
    uint64_t v28 = v31;
    uint64_t v29 = v32;
  }

  double v33 = AnyDimension.value(in:rounded:)(v26, v27, v28, v29);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v35 = v192;
  v34(v22, v192);
  v212[3] = &type metadata for CGFloat;
  v212[4] = &protocol witness table for CGFloat;
  *(double *)uint64_t v212 = v33;
  uint64_t v36 = v3[53];
  uint64_t v37 = v3[54];
  sub_100005F8C(v3 + 50, v36);
  char v38 = dispatch thunk of LayoutView.hasContent.getter(v36, v37);
  uint64_t v182 = v22;
  uint64_t v183 = a1;
  uint64_t v184 = v34;
  if ((v38 & 1) != 0)
  {
    sub_10001F010((uint64_t)(v3 + 50), (uint64_t)v198);
    (*(void (**)(char *, void, uint64_t))(v196 + 104))( v193,  enum case for _VerticalFlowLayout.Child.Placement.top(_:),  v197);
    uint64_t v39 = v3[8];
    uint64_t v40 = v3[9];
    sub_100005F8C(v3 + 5, v39);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v39, v40);
    double v41 = AnyDimension.value(in:rounded:)(a1, v22, v39, v40);
    v34(v22, v35);
    __n128 v210 = &type metadata for CGFloat;
    __n128 v211 = &protocol witness table for CGFloat;
    *(double *)uint64_t v209 = v41;
    uint64_t v42 = v3[13];
    uint64_t v43 = v3[14];
    sub_100005F8C(v3 + 10, v42);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v42, v43);
    double v44 = AnyDimension.value(in:rounded:)(a1, v22, v42, v43);
    v34(v22, v35);
    *((void *)&v207 + 1) = &type metadata for CGFloat;
    uint64_t v208 = &protocol witness table for CGFloat;
    *(double *)&__int128 v206 = v44;
    uint64_t v45 = v195;
    double v46 = v185;
    uint64_t v47 = v186;
    (*(void (**)(char *, void, uint64_t))(v195 + 104))( v185,  enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:),  v186);
    uint64_t v48 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
    uint64_t v49 = v188;
    uint64_t v50 = swift_allocObject( v48,  ((*(unsigned __int8 *)(v188 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80))
          + *(void *)(v188 + 72),
            *(unsigned __int8 *)(v188 + 80) | 7LL);
    *(_OWORD *)(v50 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v50);
    v205[0] = v50;
    uint64_t v51 = sub_100003B6C( (unint64_t *)&qword_1002DD1C0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
    uint64_t v52 = sub_1000031E8(&qword_1002E45E0);
    uint64_t v53 = sub_100057730((unint64_t *)&qword_1002DD1D0, &qword_1002E45E0);
    double v54 = v187;
    uint64_t v55 = v189;
    dispatch thunk of SetAlgebra.init<A>(_:)(v205, v52, v53, v189, v51);
    uint64_t v56 = v176;
    uint64_t v57 = v193;
    static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v198,  v193,  v46,  v209,  &v206,  v54);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v54, v55);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    (*(void (**)(char *, uint64_t))(v196 + 8))(v57, v197);
    _s6Arcade17PillOverlayLayoutVwxx_0(v198);
    sub_100006060((uint64_t)&v206, (uint64_t *)&unk_1002E4D10);
    _s6Arcade17PillOverlayLayoutVwxx_0(v209);
    uint64_t v58 = (void *)sub_100019F28(0LL, 1LL, 1, _swiftEmptyArrayStorage);
    unint64_t v60 = v58[2];
    unint64_t v59 = v58[3];
    if (v60 >= v59 >> 1) {
      uint64_t v58 = (void *)sub_100019F28(v59 > 1, v60 + 1, 1, v58);
    }
    v58[2] = v60 + 1;
    unint64_t v61 = (*(unsigned __int8 *)(v190 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
    uint64_t v194 = v58;
    (*(void (**)(char *, char *, uint64_t))(v190 + 32))( (char *)v58 + v61 + *(void *)(v190 + 72) * v60,  v56,  v191);
  }

  else
  {
    uint64_t v194 = _swiftEmptyArrayStorage;
  }

  uint64_t v63 = v3[48];
  uint64_t v62 = v3[49];
  sub_100005F8C(v3 + 45, v63);
  if ((dispatch thunk of LayoutView.hasContent.getter(v63, *(void *)(v62 + 8)) & 1) != 0)
  {
    uint64_t v64 = v3[48];
    uint64_t v65 = v3[49];
    CGRect v66 = sub_100005F8C(v3 + 45, v64);
    uint64_t v199 = v64;
    uint64_t v200 = *(void **)(v65 + 8);
    unsigned int v67 = sub_100009D54(v198);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v64 - 8) + 16LL))(v67, v66, v64);
    uint64_t v68 = v3[3];
    uint64_t v69 = v3[4];
    sub_100005F8C(v3, v68);
    uint64_t v70 = v182;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v68, v69);
    double v71 = AnyDimension.value(in:rounded:)(v183, v70, v68, v69);
    v184(v70, v192);
    __n128 v210 = &type metadata for CGFloat;
    __n128 v211 = &protocol witness table for CGFloat;
    *(double *)uint64_t v209 = v71;
    uint64_t v208 = 0LL;
    __int128 v206 = 0u;
    __int128 v207 = 0u;
    uint64_t v72 = v193;
    (*(void (**)(char *, void, uint64_t))(v196 + 104))( v193,  enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:),  v197);
    uint64_t v74 = v185;
    uint64_t v73 = v186;
    (*(void (**)(char *, void, uint64_t))(v195 + 104))( v185,  enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:),  v186);
    uint64_t v75 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
    uint64_t v76 = v188;
    uint64_t v77 = swift_allocObject( v75,  ((*(unsigned __int8 *)(v188 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80))
          + *(void *)(v188 + 72),
            *(unsigned __int8 *)(v188 + 80) | 7LL);
    *(_OWORD *)(v77 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v77);
    v205[0] = v77;
    uint64_t v78 = sub_100003B6C( (unint64_t *)&qword_1002DD1C0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
    uint64_t v79 = sub_1000031E8(&qword_1002E45E0);
    uint64_t v80 = sub_100057730((unint64_t *)&qword_1002DD1D0, &qword_1002E45E0);
    uint64_t v81 = v187;
    uint64_t v82 = v189;
    dispatch thunk of SetAlgebra.init<A>(_:)(v205, v79, v80, v189, v78);
    static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v198,  v72,  v74,  v209,  &v206,  v81);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v81, v82);
    (*(void (**)(char *, uint64_t))(v195 + 8))(v74, v73);
    (*(void (**)(char *, uint64_t))(v196 + 8))(v72, v197);
    sub_100006060((uint64_t)&v206, (uint64_t *)&unk_1002E4D10);
    _s6Arcade17PillOverlayLayoutVwxx_0(v209);
    _s6Arcade17PillOverlayLayoutVwxx_0(v198);
    uint64_t v83 = v194;
    if ((swift_isUniquelyReferenced_nonNull_native(v194) & 1) == 0) {
      uint64_t v83 = (void *)sub_100019F28(0LL, v83[2] + 1LL, 1, v83);
    }
    unint64_t v85 = v83[2];
    unint64_t v84 = v83[3];
    uint64_t v86 = v184;
    if (v85 >= v84 >> 1) {
      uint64_t v83 = (void *)sub_100019F28(v84 > 1, v85 + 1, 1, v83);
    }
    v83[2] = v85 + 1;
    unint64_t v87 = (*(unsigned __int8 *)(v190 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
    uint64_t v194 = v83;
    (*(void (**)(char *, char *, uint64_t))(v190 + 32))( (char *)v83 + v87 + *(void *)(v190 + 72) * v85,  v179,  v191);
  }

  else
  {
    uint64_t v86 = v184;
  }

  uint64_t v89 = v3[58];
  uint64_t v88 = v3[59];
  sub_100005F8C(v3 + 55, v89);
  if ((dispatch thunk of LayoutView.hasContent.getter(v89, *(void *)(v88 + 8)) & 1) != 0)
  {
    uint64_t v91 = v3[63];
    uint64_t v90 = v3[64];
    sub_100005F8C(v3 + 60, v91);
    LOBYTE(v9_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = dispatch thunk of LayoutView.hasContent.getter(v91, *(void *)(v90 + 8));
    sub_100056670((uint64_t)v3, (uint64_t)v198);
    if ((v90 & 1) != 0)
    {
      sub_1000566A4(v198);
    }

    else
    {
      uint64_t v92 = v202;
      uint64_t v93 = v203;
      sub_100005F8C(v201, v202);
      LOBYTE(v93) = dispatch thunk of LayoutView.hasContent.getter(v92, *(void *)(v93 + 8));
      sub_1000566A4(v198);
      if ((v93 & 1) == 0)
      {
        sub_10001F010((uint64_t)v212, (uint64_t)v209);
        goto LABEL_22;
      }
    }

    __n128 v210 = (void *)type metadata accessor for ZeroDimension(0LL);
    __n128 v211 = &protocol witness table for ZeroDimension;
    sub_100009D54(v209);
    static ZeroDimension.zero.getter();
LABEL_22:
    uint64_t v94 = v3[58];
    uint64_t v95 = v3[59];
    uint64_t v96 = sub_100005F8C(v3 + 55, v94);
    uint64_t v199 = v94;
    uint64_t v200 = *(void **)(v95 + 8);
    uint64_t v97 = sub_100009D54(v198);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 16LL))(v97, v96, v94);
    uint64_t v98 = v3[18];
    uint64_t v99 = v3[19];
    sub_100005F8C(v3 + 15, v98);
    CGFloat v100 = v182;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v98, v99);
    double v101 = AnyDimension.value(in:rounded:)(v183, v100, v98, v99);
    v86(v100, v192);
    *((void *)&v207 + 1) = &type metadata for CGFloat;
    uint64_t v208 = &protocol witness table for CGFloat;
    *(double *)&__int128 v206 = v101;
    sub_10001F010((uint64_t)v209, (uint64_t)v205);
    uint64_t v102 = v193;
    (*(void (**)(char *, void, uint64_t))(v196 + 104))( v193,  enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:),  v197);
    id v104 = v185;
    uint64_t v103 = v186;
    (*(void (**)(char *, void, uint64_t))(v195 + 104))( v185,  enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:),  v186);
    uint64_t v105 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
    uint64_t v106 = v188;
    uint64_t v107 = swift_allocObject( v105,  ((*(unsigned __int8 *)(v188 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80))
           + *(void *)(v188 + 72),
             *(unsigned __int8 *)(v188 + 80) | 7LL);
    *(_OWORD *)(v107 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v107);
    uint64_t v204 = v107;
    uint64_t v108 = sub_100003B6C( (unint64_t *)&qword_1002DD1C0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
    uint64_t v109 = sub_1000031E8(&qword_1002E45E0);
    uint64_t v110 = sub_100057730((unint64_t *)&qword_1002DD1D0, &qword_1002E45E0);
    uint64_t v111 = v187;
    uint64_t v112 = v189;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v204, v109, v110, v189, v108);
    static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v198,  v102,  v104,  &v206,  v205,  v111);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v111, v112);
    (*(void (**)(char *, uint64_t))(v195 + 8))(v104, v103);
    (*(void (**)(char *, uint64_t))(v196 + 8))(v102, v197);
    sub_100006060((uint64_t)v205, (uint64_t *)&unk_1002E4D10);
    _s6Arcade17PillOverlayLayoutVwxx_0(&v206);
    _s6Arcade17PillOverlayLayoutVwxx_0(v198);
    uint64_t v113 = v194;
    if ((swift_isUniquelyReferenced_nonNull_native(v194) & 1) == 0) {
      uint64_t v113 = (void *)sub_100019F28(0LL, v113[2] + 1LL, 1, v113);
    }
    unint64_t v115 = v113[2];
    unint64_t v114 = v113[3];
    uint64_t v86 = v184;
    if (v115 >= v114 >> 1) {
      uint64_t v113 = (void *)sub_100019F28(v114 > 1, v115 + 1, 1, v113);
    }
    v113[2] = v115 + 1;
    unint64_t v116 = (*(unsigned __int8 *)(v190 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
    uint64_t v194 = v113;
    (*(void (**)(char *, char *, uint64_t))(v190 + 32))( (char *)v113 + v116 + *(void *)(v190 + 72) * v115,  v180,  v191);
    _s6Arcade17PillOverlayLayoutVwxx_0(v209);
  }

  uint64_t v118 = v3[63];
  uint64_t v117 = v3[64];
  sub_100005F8C(v3 + 60, v118);
  if ((dispatch thunk of LayoutView.hasContent.getter(v118, *(void *)(v117 + 8)) & 1) != 0)
  {
    uint64_t v119 = v3[68];
    uint64_t v120 = v3[69];
    sub_100005F8C(v3 + 65, v119);
    if ((dispatch thunk of LayoutView.hasContent.getter(v119, *(void *)(v120 + 8)) & 1) != 0)
    {
      uint64_t v199 = type metadata accessor for ZeroDimension(0LL);
      uint64_t v200 = &protocol witness table for ZeroDimension;
      sub_100009D54(v198);
      static ZeroDimension.zero.getter();
    }

    else
    {
      sub_10001F010((uint64_t)v212, (uint64_t)v198);
    }

    uint64_t v121 = v3[63];
    uint64_t v122 = v3[64];
    CGRect v123 = sub_100005F8C(v3 + 60, v121);
    __n128 v210 = (void *)v121;
    __n128 v211 = *(void **)(v122 + 8);
    uint64_t v124 = sub_100009D54(v209);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 16LL))(v124, v123, v121);
    uint64_t v125 = v3[23];
    uint64_t v126 = v3[24];
    sub_100005F8C(v3 + 20, v125);
    CGRect v127 = v182;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v125, v126);
    double v128 = AnyDimension.value(in:rounded:)(v183, v127, v125, v126);
    v86(v127, v192);
    *((void *)&v207 + 1) = &type metadata for CGFloat;
    uint64_t v208 = &protocol witness table for CGFloat;
    *(double *)&__int128 v206 = v128;
    sub_10001F010((uint64_t)v198, (uint64_t)v205);
    CGRect v129 = v193;
    (*(void (**)(char *, void, uint64_t))(v196 + 104))( v193,  enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:),  v197);
    CGRect v131 = v185;
    uint64_t v130 = v186;
    (*(void (**)(char *, void, uint64_t))(v195 + 104))( v185,  enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:),  v186);
    uint64_t v132 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
    uint64_t v133 = v188;
    uint64_t v134 = swift_allocObject( v132,  ((*(unsigned __int8 *)(v188 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80))
           + *(void *)(v188 + 72),
             *(unsigned __int8 *)(v188 + 80) | 7LL);
    *(_OWORD *)(v134 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v134);
    uint64_t v204 = v134;
    uint64_t v135 = sub_100003B6C( (unint64_t *)&qword_1002DD1C0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
    uint64_t v136 = sub_1000031E8(&qword_1002E45E0);
    uint64_t v137 = sub_100057730((unint64_t *)&qword_1002DD1D0, &qword_1002E45E0);
    uint64_t v138 = v187;
    uint64_t v139 = v189;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v204, v136, v137, v189, v135);
    __int128 v140 = v177;
    static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v209,  v129,  v131,  &v206,  v205,  v138);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v138, v139);
    (*(void (**)(char *, uint64_t))(v195 + 8))(v131, v130);
    (*(void (**)(char *, uint64_t))(v196 + 8))(v129, v197);
    sub_100006060((uint64_t)v205, (uint64_t *)&unk_1002E4D10);
    _s6Arcade17PillOverlayLayoutVwxx_0(&v206);
    _s6Arcade17PillOverlayLayoutVwxx_0(v209);
    __int128 v141 = v194;
    if ((swift_isUniquelyReferenced_nonNull_native(v194) & 1) == 0) {
      __int128 v141 = (void *)sub_100019F28(0LL, v141[2] + 1LL, 1, v141);
    }
    unint64_t v143 = v141[2];
    unint64_t v142 = v141[3];
    uint64_t v86 = v184;
    if (v143 >= v142 >> 1) {
      __int128 v141 = (void *)sub_100019F28(v142 > 1, v143 + 1, 1, v141);
    }
    v141[2] = v143 + 1;
    unint64_t v144 = (*(unsigned __int8 *)(v190 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
    uint64_t v194 = v141;
    (*(void (**)(char *, char *, uint64_t))(v190 + 32))( (char *)v141 + v144 + *(void *)(v190 + 72) * v143,  v140,  v191);
    _s6Arcade17PillOverlayLayoutVwxx_0(v198);
  }

  uint64_t v145 = v3[68];
  uint64_t v146 = v3[69];
  sub_100005F8C(v3 + 65, v145);
  if ((dispatch thunk of LayoutView.hasContent.getter(v145, *(void *)(v146 + 8)) & 1) != 0)
  {
    uint64_t v147 = v3[68];
    uint64_t v148 = v3[69];
    uint64_t v149 = sub_100005F8C(v3 + 65, v147);
    uint64_t v199 = v147;
    uint64_t v200 = *(void **)(v148 + 8);
    uint64_t v150 = sub_100009D54(v198);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v147 - 8) + 16LL))(v150, v149, v147);
    uint64_t v151 = v3 + 25;
    uint64_t v152 = v3[28];
    uint64_t v153 = v3[29];
    sub_100005F8C(v151, v152);
    uint64_t v154 = v182;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v152, v153);
    double v155 = AnyDimension.value(in:rounded:)(v183, v154, v152, v153);
    v86(v154, v192);
    __n128 v210 = &type metadata for CGFloat;
    __n128 v211 = &protocol witness table for CGFloat;
    *(double *)uint64_t v209 = v155;
    sub_10001F010((uint64_t)v212, (uint64_t)&v206);
    uint64_t v156 = v193;
    (*(void (**)(char *, void, uint64_t))(v196 + 104))( v193,  enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:),  v197);
    uint64_t v157 = v195;
    __n128 v159 = v185;
    uint64_t v158 = v186;
    (*(void (**)(char *, void, uint64_t))(v195 + 104))( v185,  enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:),  v186);
    uint64_t v160 = sub_1000031E8((uint64_t *)&unk_1002E45D0);
    uint64_t v161 = v188;
    uint64_t v162 = swift_allocObject( v160,  ((*(unsigned __int8 *)(v188 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80))
           + *(void *)(v188 + 72),
             *(unsigned __int8 *)(v188 + 80) | 7LL);
    *(_OWORD *)(v162 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v162);
    v205[0] = v162;
    uint64_t v163 = sub_100003B6C( (unint64_t *)&qword_1002DD1C0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
    uint64_t v164 = sub_1000031E8(&qword_1002E45E0);
    uint64_t v165 = sub_100057730((unint64_t *)&qword_1002DD1D0, &qword_1002E45E0);
    uint64_t v166 = v187;
    uint64_t v167 = v189;
    dispatch thunk of SetAlgebra.init<A>(_:)(v205, v164, v165, v189, v163);
    uint64_t v168 = v178;
    static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v198,  v156,  v159,  v209,  &v206,  v166);
    (*(void (**)(char *, uint64_t))(v161 + 8))(v166, v167);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v159, v158);
    (*(void (**)(char *, uint64_t))(v196 + 8))(v156, v197);
    sub_100006060((uint64_t)&v206, (uint64_t *)&unk_1002E4D10);
    _s6Arcade17PillOverlayLayoutVwxx_0(v209);
    _s6Arcade17PillOverlayLayoutVwxx_0(v198);
    uint64_t v169 = v194;
    if ((swift_isUniquelyReferenced_nonNull_native(v194) & 1) == 0) {
      uint64_t v169 = (void *)sub_100019F28(0LL, v169[2] + 1LL, 1, v169);
    }
    unint64_t v171 = v169[2];
    unint64_t v170 = v169[3];
    if (v171 >= v170 >> 1) {
      uint64_t v169 = (void *)sub_100019F28(v170 > 1, v171 + 1, 1, v169);
    }
    v169[2] = v171 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v190 + 32))( (unint64_t)v169 + ((*(unsigned __int8 *)(v190 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80))
    + *(void *)(v190 + 72) * v171,
      v168,
      v191);
  }

  else
  {
    uint64_t v169 = v194;
  }

  uint64_t v172 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v173 = v181;
  v181[3] = v172;
  v173[4] = sub_100003B6C( &qword_1002E4D20,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout);
  v173[5] = sub_100003B6C( &qword_1002DFB00,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout);
  sub_100009D54(v173);
  _VerticalFlowLayout.init(expandChildrenToFit:children:)(0LL, v169);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v212);
}

uint64_t TVProductAnnotationLayout.ItemLayout.placeChildren(relativeTo:in:)@<X0>( void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v7 = v6;
  double v67 = COERCE_DOUBLE(type metadata accessor for FloatingPointRoundingRule(0LL));
  uint64_t v65 = *(void *)(*(void *)&v67 - 8LL);
  __n128 v14 = __chkstk_darwin(*(void *)&v67);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for AppStore.HorizontalPairLayout.Edge(0LL, v14);
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = __chkstk_darwin(v17);
  uint64_t v63 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v66 = COERCE_DOUBLE(type metadata accessor for AppStore.HorizontalPairLayout(0LL, v19));
  uint64_t v64 = *(void *)(*(void *)&v66 - 8LL);
  __chkstk_darwin(*(void *)&v66);
  uint64_t v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = v6 + 45;
  uint64_t v25 = v6[48];
  uint64_t v24 = v6[49];
  sub_100005F8C(v23, v25);
  LOBYTE(v24) = dispatch thunk of LayoutView.hasContent.getter(v25, *(void *)(v24 + 8));
  sub_100056670((uint64_t)v7, (uint64_t)v80);
  if ((v24 & 1) != 0)
  {
    sub_1000566A4(v80);
    sub_100056670((uint64_t)v7, (uint64_t)v76);
LABEL_4:
    sub_1000566A4(v76);
LABEL_5:
    sub_100054AD0((uint64_t)a1, v69);
    uint64_t v29 = v70;
    uint64_t v30 = v71;
    sub_100005F8C(v69, v70);
    dispatch thunk of Layout.placeChildren(relativeTo:in:)(a1, v29, v30, a3, a4, a5, a6);
    return _s6Arcade17PillOverlayLayoutVwxx_0(v69);
  }

  uint64_t v26 = v82;
  uint64_t v68 = a2;
  uint64_t v27 = v83;
  sub_100005F8C(v81, v82);
  char v28 = dispatch thunk of LayoutView.hasContent.getter(v26, v27);
  sub_1000566A4(v80);
  sub_100056670((uint64_t)v7, (uint64_t)v76);
  if ((v28 & 1) != 0) {
    goto LABEL_4;
  }
  uint64_t v32 = v78;
  uint64_t v33 = v79;
  sub_100005F8C(v77, v78);
  LOBYTE(v33) = dispatch thunk of LayoutView.hasContent.getter(v32, *(void *)(v33 + 8));
  sub_1000566A4(v76);
  if ((v33 & 1) != 0) {
    goto LABEL_5;
  }
  id v34 = [a1 traitCollection];
  char v35 = UITraitCollection.prefersAccessibilityLayouts.getter(v34);

  if ((v35 & 1) != 0) {
    goto LABEL_5;
  }
  uint64_t v37 = v7[63];
  uint64_t v36 = v7[64];
  uint64_t v62 = v7 + 60;
  sub_100005F8C(v7 + 60, v37);
  LOBYTE(v37) = dispatch thunk of LayoutView.hasContent.getter(v37, *(void *)(v36 + 8));
  uint64_t v38 = v7[58];
  uint64_t v39 = v7[59];
  unint64_t v60 = v7 + 55;
  uint64_t v61 = v38;
  uint64_t v40 = sub_100005F8C(v7 + 55, v38);
  if ((v37 & 1) != 0)
  {
    uint64_t v41 = v61;
    uint64_t v70 = v61;
    uint64_t v71 = *(void *)(v39 + 8);
    uint64_t v42 = sub_100009D54(v69);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16LL))(v42, v40, v41);
    uint64_t v43 = v7[63];
    uint64_t v44 = v7[64];
    uint64_t v45 = sub_100005F8C(v62, v43);
    void v75[3] = v43;
    v75[4] = *(void *)(v44 + 8);
    double v46 = sub_100009D54(v75);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16LL))(v46, v45, v43);
    uint64_t v47 = v63;
    (*(void (**)(char *, void, uint64_t))(v18 + 104))( v63,  enum case for AppStore.HorizontalPairLayout.Edge.trailing(_:),  v17);
    uint64_t v74 = 0LL;
    memset(v73, 0, sizeof(v73));
    uint64_t v48 = v7[43];
    uint64_t v49 = v7[44];
    sub_100005F8C(v7 + 40, v48);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v48, v49);
    double v50 = AnyDimension.value(in:rounded:)(a1, v16, v48, v49);
    (*(void (**)(char *, double))(v65 + 8))(v16, COERCE_DOUBLE(*(void *)&v67));
    void v72[3] = &type metadata for CGFloat;
    v72[4] = &protocol witness table for CGFloat;
    *(double *)uint64_t v72 = v50;
    AppStore.HorizontalPairLayout.init(leadingView:trailingView:priorityView:alignmentSpace:interViewSpacing:)( v69,  v75,  v47,  v73,  v72);
    AppStore.HorizontalPairLayout.placeChildren(relativeTo:in:)(a1, a3, a4, a5, a6);
    return (*(uint64_t (**)(char *, double))(v64 + 8))(v22, COERCE_DOUBLE(*(void *)&v66));
  }

  else
  {
    double v51 = dispatch thunk of Measurable.measurements(fitting:in:)( a1,  v61,  *(void *)(*(void *)(v39 + 8) + 8LL),  a5,  a6);
    double v53 = v52;
    double v66 = v55;
    double v67 = v54;
    v84.origin.CGFloat x = a3;
    v84.origin.CGFloat y = a4;
    v84.size.double width = a5;
    v84.size.double height = a6;
    CGRectGetMinX(v84);
    v85.origin.CGFloat x = a3;
    v85.origin.CGFloat y = a4;
    v85.size.double width = a5;
    v85.size.double height = a6;
    CGRectGetMinY(v85);
    uint64_t v56 = v7[58];
    uint64_t v57 = v7[59];
    sub_100005F8C(v60, v56);
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v56, *(void *)(v57 + 8));
    uint64_t v59 = v7[63];
    uint64_t v58 = v7[64];
    sub_100005F8C(v62, v59);
    dispatch thunk of LayoutView.frame.setter(v59, *(void *)(v58 + 8));
    return LayoutRect.init(origin:measurements:)(a3, a4, v51, v53, v67, v66);
  }

double sub_1000562C8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for StackMeasurable.Axis(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for StackMeasurable(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t, __n128))(v9 + 104))( v11,  enum case for StackMeasurable.Axis.vertical(_:),  v8,  v14);
  StackMeasurable.init(axis:skipEmptyChildren:children:)(v11, 1LL, _swiftEmptyArrayStorage);
  uint64_t v18 = *(void *)(a2 + 24);
  uint64_t v17 = *(void *)(a2 + 32);
  sub_100005F8C((void *)a2, v18);
  if ((dispatch thunk of LayoutView.isHidden.getter(v18, *(void *)(v17 + 8)) & 1) == 0)
  {
    sub_10001F010(a2 + 176, (uint64_t)v35);
    uint64_t v37 = type metadata accessor for VerticalSpaceMeasurable(0LL);
    uint64_t v38 = &protocol witness table for VerticalSpaceMeasurable;
    sub_100009D54(v36);
    VerticalSpaceMeasurable.init(_:multiplier:)(v35, 1.0);
    StackMeasurable.addChild(_:)(v36);
    _s6Arcade17PillOverlayLayoutVwxx_0(v36);
  }

  if (*(_BYTE *)(a2 + 168) == 1)
  {
    uint64_t v19 = *(void *)(a2 + 80);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v30 = v13;
      uint64_t v31 = v12;
      uint64_t v32 = a1;
      uint64_t v21 = (void *)(v19 + 32);
      uint64_t v29 = v19;
      swift_bridgeObjectRetain(v19);
      do
      {
        uint64_t v22 = v21[3];
        uint64_t v23 = v21[4];
        uint64_t v24 = sub_100005F8C(v21, v22);
        void v35[3] = v22;
        v35[4] = *(void *)(v23 + 8);
        uint64_t v25 = sub_100009D54(v35);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16LL))(v25, v24, v22);
        sub_10001F010(a2 + 216, (uint64_t)v34);
        void v33[3] = type metadata accessor for ZeroDimension(0LL);
        v33[4] = &protocol witness table for ZeroDimension;
        sub_100009D54(v33);
        static ZeroDimension.zero.getter();
        uint64_t v37 = type metadata accessor for VerticalMarginsMeasurable(0LL);
        uint64_t v38 = &protocol witness table for VerticalMarginsMeasurable;
        sub_100009D54(v36);
        VerticalMarginsMeasurable.init(child:topMargin:bottomMargin:skipIfEmpty:shouldMeasureToBaseline:)( v35,  v34,  v33,  0LL,  0LL);
        StackMeasurable.addChild(_:)(v36);
        _s6Arcade17PillOverlayLayoutVwxx_0(v36);
        v21 += 5;
        --v20;
      }

      while (v20);
      swift_bridgeObjectRelease(v29);
      a1 = v32;
      uint64_t v12 = v31;
      uint64_t v13 = v30;
    }
  }

  else
  {
    sub_10001F010(a2 + 216, (uint64_t)v35);
    uint64_t v37 = type metadata accessor for VerticalSpaceMeasurable(0LL);
    uint64_t v38 = &protocol witness table for VerticalSpaceMeasurable;
    sub_100009D54(v36);
    VerticalSpaceMeasurable.init(_:multiplier:)(v35, 1.0);
    StackMeasurable.addChild(_:)(v36);
    _s6Arcade17PillOverlayLayoutVwxx_0(v36);
  }

  sub_10001F010(a2 + 336, (uint64_t)v35);
  uint64_t v37 = type metadata accessor for VerticalSpaceMeasurable(0LL);
  uint64_t v38 = &protocol witness table for VerticalSpaceMeasurable;
  sub_100009D54(v36);
  VerticalSpaceMeasurable.init(_:multiplier:)(v35, 1.0);
  StackMeasurable.addChild(_:)(v36);
  _s6Arcade17PillOverlayLayoutVwxx_0(v36);
  double v26 = StackMeasurable.measurements(fitting:in:)(a1, a3, a4);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v26;
}

uint64_t sub_10005663C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100056670(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1000566A4(void *a1)
{
  return a1;
}

uint64_t destroy for TVProductAnnotationLayout(void *a1)
{
  if (a1[14]) {
    _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 11);
  }
  if (a1[19]) {
    _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 16);
  }
  _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 22);
  _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 27);
  _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 37);
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 42);
}

uint64_t initializeWithCopy for TVProductAnnotationLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain(v6);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v7;
    *(void *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 88, a2 + 88, v7);
  }

  else
  {
    __int128 v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    *(void *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 120);
  }

  uint64_t v10 = (_OWORD *)(a1 + 128);
  uint64_t v11 = (_OWORD *)(a2 + 128);
  uint64_t v12 = *(void *)(a2 + 152);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = v12;
    *(void *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }

  else
  {
    __int128 v14 = *(_OWORD *)(a2 + 144);
    _OWORD *v10 = *v11;
    *(_OWORD *)(a1 + 144) = v14;
    *(void *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 160);
  }

  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  __int128 v15 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 176, a2 + 176);
  __int128 v16 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v16;
  (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 216, a2 + 216);
  uint64_t v17 = *(void *)(a2 + 280);
  uint64_t v18 = *(void *)(a2 + 288);
  *(void *)(a1 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v17;
  *(void *)(a1 + 288) = v18;
  (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 256, a2 + 256);
  __int128 v19 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v19;
  (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 296, a2 + 296);
  uint64_t v20 = *(void *)(a2 + 360);
  uint64_t v21 = *(void *)(a2 + 368);
  *(void *)(a1 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v20;
  *(void *)(a1 + 368) = v21;
  (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 336, a2 + 336);
  return a1;
}

uint64_t assignWithCopy for TVProductAnnotationLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 80);
  uint64_t v5 = *(void *)(a1 + 80);
  *(void *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v4;
  swift_bridgeObjectRetain(v4);
  __n128 v6 = swift_bridgeObjectRelease(v5);
  uint64_t v7 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v7)
    {
      sub_1000264E4((void *)(a1 + 88), (void *)(a2 + 88));
      goto LABEL_8;
    }

    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 88));
  }

  else if (v7)
  {
    *(void *)(a1 + 112) = v7;
    *(void *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 120);
    (**(void (***)(uint64_t, uint64_t, __n128))(v7 - 8))(a1 + 88, a2 + 88, v6);
    goto LABEL_8;
  }

  __int128 v8 = *(_OWORD *)(a2 + 88);
  __int128 v9 = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 88) = v8;
  *(_OWORD *)(a1 + 104) = v9;
LABEL_8:
  uint64_t v10 = *(void *)(a2 + 152);
  if (!*(void *)(a1 + 152))
  {
    if (v10)
    {
      *(void *)(a1 + 152) = v10;
      *(void *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 160);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 128, a2 + 128);
      goto LABEL_15;
    }

void *initializeWithTake for TVProductAnnotationLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x178uLL);
}

uint64_t assignWithTake for TVProductAnnotationLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  uint64_t v6 = *(void *)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v5;
  swift_bridgeObjectRelease(v6);
  if (*(void *)(a1 + 112)) {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 88));
  }
  __int128 v7 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v7;
  *(void *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 120);
  if (*(void *)(a1 + 152)) {
    _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 128));
  }
  __int128 v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(void *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(void *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 176));
  __int128 v9 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v9;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 216));
  *(_OWORD *)(a1 + 2swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 256));
  __int128 v10 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v10;
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 296));
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 336));
  __int128 v11 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v11;
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVProductAnnotationLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 376)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVProductAnnotationLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 376) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 376) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVProductAnnotationLayout()
{
  return &type metadata for TVProductAnnotationLayout;
}

uint64_t destroy for TVProductAnnotationLayout.Metrics(void *a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 20);
}

ValueMetadata *type metadata accessor for TVProductAnnotationLayout.Metrics()
{
  return &type metadata for TVProductAnnotationLayout.Metrics;
}

uint64_t destroy for TVProductAnnotationLayout.ItemLayout(void *a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 65);
}

uint64_t initializeWithCopy for TVProductAnnotationLayout.ItemLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  __int128 v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  __int128 v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  __int128 v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  __int128 v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  uint64_t v10 = *(void *)(a2 + 264);
  uint64_t v11 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = v10;
  *(void *)(a1 + 272) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 240, a2 + 240);
  __int128 v12 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 304) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 280, a2 + 280);
  uint64_t v13 = *(void *)(a2 + 344);
  uint64_t v14 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = v13;
  *(void *)(a1 + 352) = v14;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 320, a2 + 320);
  __int128 v15 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 384) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 360, a2 + 360);
  uint64_t v16 = *(void *)(a2 + 424);
  uint64_t v17 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = v16;
  *(void *)(a1 + 432) = v17;
  (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 400, a2 + 400);
  __int128 v18 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 464) = v18;
  (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 440, a2 + 440);
  uint64_t v19 = *(void *)(a2 + 504);
  uint64_t v20 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = v19;
  *(void *)(a1 + 512) = v20;
  (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 480, a2 + 480);
  __int128 v21 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 544) = v21;
  (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1 + 520, a2 + 520);
  *(_BYTE *)(a1 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_BYTE *)(a2 + 560);
  return a1;
}

uint64_t assignWithCopy for TVProductAnnotationLayout.ItemLayout(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_BYTE *)(a2 + 560);
  return a1;
}

void *initializeWithTake for TVProductAnnotationLayout.ItemLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x231uLL);
}

uint64_t assignWithTake for TVProductAnnotationLayout.ItemLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 160));
  __int128 v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 200));
  *(_OWORD *)(a1 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 2swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 240));
  __int128 v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 280));
  __int128 v8 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v8;
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 320));
  __int128 v9 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v9;
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 360));
  __int128 v10 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v10;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 400));
  __int128 v11 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 4swift_unknownObjectWeakDestroy(v0 + 16) = v11;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 440));
  __int128 v12 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v12;
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 480));
  __int128 v13 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v13;
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 520));
  __int128 v14 = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 536) = v14;
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(_BYTE *)(a1 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_BYTE *)(a2 + 560);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVProductAnnotationLayout.ItemLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 561)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVProductAnnotationLayout.ItemLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 552) = 0LL;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 561) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 561) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVProductAnnotationLayout.ItemLayout()
{
  return &type metadata for TVProductAnnotationLayout.ItemLayout;
}

uint64_t destroy for TVProductAnnotationLayout.ItemLayout.Metrics(void *a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 40);
}

uint64_t initializeWithCopy for TVProductAnnotationLayout.ItemLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  __int128 v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  __int128 v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  __int128 v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  __int128 v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  uint64_t v10 = *(void *)(a2 + 264);
  uint64_t v11 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = v10;
  *(void *)(a1 + 272) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 240, a2 + 240);
  __int128 v12 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 304) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 280, a2 + 280);
  uint64_t v13 = *(void *)(a2 + 344);
  uint64_t v14 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = v13;
  *(void *)(a1 + 352) = v14;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 320, a2 + 320);
  return a1;
}

void *assignWithCopy for TVProductAnnotationLayout.ItemLayout.Metrics(void *a1, void *a2)
{
  return a1;
}

void *initializeWithTake for TVBreakoutDetailsLayout.Metrics(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x168uLL);
}

uint64_t assignWithTake for TVProductAnnotationLayout.ItemLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 160));
  __int128 v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 200));
  *(_OWORD *)(a1 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 2swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 240));
  __int128 v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 280));
  __int128 v8 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v8;
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 320));
  __int128 v9 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v9;
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVProductAnnotationLayout.ItemLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 360)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVProductAnnotationLayout.ItemLayout.Metrics( uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVProductAnnotationLayout.ItemLayout.Metrics()
{
  return &type metadata for TVProductAnnotationLayout.ItemLayout.Metrics;
}

uint64_t sub_100057730(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_100003274(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t TVAppShowcaseLayout.init(metrics:lockupView:mediaCollectionView:)@<X0>( uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  __int128 v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a4 + 112) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a4 + 128) = v6;
  *(void *)(a4 + 144) = *(void *)(a1 + 64);
  __int128 v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a4 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 96) = v7;
  sub_100009D90(a2, a4);
  return sub_100009D90(a3, a4 + 40);
}

uint64_t TVAppShowcaseLayout.Metrics.init(lockupMargins:lockupBottomSpace:)@<X0>( __int128 *a1@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *a2 = a3;
  a2[1] = a4;
  a2[2] = a5;
  a2[3] = a6;
  return sub_100009D90(a1, (uint64_t)(a2 + 4));
}

_OWORD *TVAppShowcaseLayout.metrics.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1000577D8((_OWORD *)(v1 + 80), a1);
}

_OWORD *sub_1000577D8(_OWORD *a1, _OWORD *a2)
{
  __int128 v3 = a1[1];
  *a2 = *a1;
  a2[1] = v3;
  __int128 v4 = *(_OWORD *)((char *)a1 + 56);
  *(_OWORD *)((char *)a2 + 56) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))((uint64_t)(a2 + 2), (uint64_t)(a1 + 2));
  return a2;
}

double TVAppShowcaseLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void *)(v3 + 24);
  uint64_t v12 = *(void *)(v3 + 32);
  sub_100005F8C((void *)v3, v11);
  dispatch thunk of Measurable.measurements(fitting:in:)(a1, v11, *(void *)(v12 + 8), a2, a3);
  uint64_t v13 = *(void *)(v3 + 64);
  uint64_t v14 = *(void *)(v3 + 72);
  sub_100005F8C((void *)(v3 + 40), v13);
  dispatch thunk of Measurable.measurements(fitting:in:)(a1, v13, *(void *)(v14 + 8), a2, a3);
  sub_1000577D8((_OWORD *)(v3 + 80), &v19);
  uint64_t v15 = v21;
  uint64_t v16 = v22;
  sub_100005F8C(v20, v21);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v15, v16);
  AnyDimension.value(in:rounded:)(a1, v10, v15, v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  _s6Arcade17PillOverlayLayoutVwxx_0(v20);
  return a2;
}

uint64_t TVAppShowcaseLayout.placeChildren(relativeTo:in:)( uint64_t a1, CGFloat a2, CGFloat a3, double a4, double a5)
{
  __int128 v6 = (void *)v5;
  double v58 = a5;
  double v59 = a4;
  uint64_t v12 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v16 = *(double *)(v5 + 80);
  double v17 = *(double *)(v5 + 88);
  CGFloat v62 = a2;
  CGFloat v63 = a3;
  double v18 = sub_10000AA6C(a2, a3, a4, a5, v16, v17);
  CGFloat v66 = v19;
  CGFloat v67 = v18;
  CGFloat v20 = v19;
  double v22 = v21;
  double v24 = v23;
  uint64_t v25 = *(void *)(v5 + 24);
  uint64_t v26 = *(void *)(v5 + 32);
  sub_100005F8C((void *)v5, v25);
  CGFloat v57 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v25, *(void *)(v26 + 8), v22, v24);
  double v28 = v27;
  v72.origin.CGFloat x = v18;
  v72.origin.CGFloat y = v20;
  v72.size.double width = v22;
  CGFloat v64 = v22;
  CGFloat v65 = v24;
  v72.size.double height = v24;
  CGFloat MinX = CGRectGetMinX(v72);
  v73.origin.CGFloat x = v18;
  v73.origin.CGFloat y = v20;
  v73.size.double width = v22;
  v73.size.double height = v24;
  CGFloat MinY = CGRectGetMinY(v73);
  uint64_t v31 = *(void *)(v5 + 24);
  uint64_t v32 = *(void *)(v5 + 32);
  sub_100005F8C(v6, v6[3]);
  double v33 = v59;
  double v34 = v58;
  CGFloat v35 = v57;
  double v61 = v28;
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v31, v32);
  sub_1000577D8((_OWORD *)(v5 + 80), &v68);
  uint64_t v36 = v70;
  uint64_t v37 = v71;
  sub_100005F8C(v69, v70);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v36, v37);
  double v38 = AnyDimension.value(in:rounded:)(a1, v15, v36, v37);
  double v60 = v38;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  _s6Arcade17PillOverlayLayoutVwxx_0(v69);
  v74.origin.CGFloat x = MinX;
  v74.origin.CGFloat y = MinY;
  v74.size.double width = v35;
  v74.size.double height = v28;
  CGFloat v57 = v38 + CGRectGetMaxY(v74);
  uint64_t v39 = v6 + 5;
  uint64_t v40 = v6[8];
  uint64_t v41 = v6[9];
  sub_100005F8C(v6 + 5, v40);
  double v42 = v33;
  CGFloat v43 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v40, *(void *)(v41 + 8), v33, v34);
  CGFloat v45 = v44;
  CGFloat v46 = v62;
  v75.origin.CGFloat x = v62;
  CGFloat v47 = v63;
  v75.origin.CGFloat y = v63;
  v75.size.double width = v42;
  v75.size.double height = v34;
  CGFloat v48 = CGRectGetMinX(v75);
  uint64_t v50 = v6[8];
  uint64_t v49 = v6[9];
  sub_100005F8C(v39, v50);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v50, v49);
  v76.origin.CGFloat x = v46;
  v76.origin.CGFloat y = v47;
  v76.size.double width = v42;
  v76.size.double height = v34;
  double v51 = CGRectGetMinX(v76);
  v77.origin.CGFloat y = v66;
  v77.origin.CGFloat x = v67;
  v77.size.double width = v64;
  v77.size.double height = v65;
  double v52 = CGRectGetMinY(v77);
  double v53 = v61 + v60;
  v78.origin.CGFloat x = v48;
  v78.origin.CGFloat y = v57;
  v78.size.double width = v43;
  v78.size.double height = v45;
  CGFloat Height = CGRectGetHeight(v78);
  return LayoutRect.init(representing:)(v51, v52, v42, v53 + Height);
}

uint64_t destroy for TVAppShowcaseLayout(void *a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0(a1 + 14);
}

_OWORD *initializeWithCopy for TVAppShowcaseLayout(_OWORD *a1, _OWORD *a2)
{
  __int128 v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  __int128 v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  __int128 v7 = *(_OWORD *)((char *)a2 + 136);
  *(_OWORD *)((char *)a1 + 136) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 7), (uint64_t)(a2 + 7));
  return a1;
}

void *assignWithCopy for TVAppShowcaseLayout(void *a1, void *a2)
{
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  sub_1000264E4(a1 + 14, a2 + 14);
  return a1;
}

uint64_t assignWithTake for TVAppShowcaseLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 112));
  __int128 v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVAppShowcaseLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVAppShowcaseLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 152) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVAppShowcaseLayout()
{
  return &type metadata for TVAppShowcaseLayout;
}

uint64_t destroy for TVAppShowcaseLayout.Metrics(uint64_t a1)
{
  return _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 32));
}

_OWORD *initializeWithCopy for TVAppShowcaseLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  __int128 v4 = *(_OWORD *)((char *)a2 + 56);
  *(_OWORD *)((char *)a1 + 56) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  return a1;
}

void *assignWithCopy for TVAppShowcaseLayout.Metrics(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1000264E4(a1 + 4, a2 + 4);
  return a1;
}

__n128 initializeWithTake for PillOverlayLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  return result;
}

uint64_t assignWithTake for TVAppShowcaseLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  _s6Arcade17PillOverlayLayoutVwxx_0((void *)(a1 + 32));
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVAppShowcaseLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVAppShowcaseLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 72) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVAppShowcaseLayout.Metrics()
{
  return &type metadata for TVAppShowcaseLayout.Metrics;
}

void *sub_100058110()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6Arcade31FramedArtworkCollectionViewCell_artworkView);
  id v2 = v1;
  return v1;
}

uint64_t sub_1000581A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FramedArtwork(0LL);
  uint64_t result = swift_dynamicCastClass(a1, v2);
  if (result) {
    return FramedArtwork.artwork.getter();
  }
  return result;
}

void sub_100058288()
{
}

uint64_t sub_1000582A8()
{
  return type metadata accessor for FramedArtworkCollectionViewCell(0LL);
}

uint64_t type metadata accessor for FramedArtworkCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DFB38;
  if (!qword_1002DFB38) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FramedArtworkCollectionViewCell);
  }
  return result;
}

id sub_1000582EC()
{
  return *(id *)(v0 + OBJC_IVAR____TtC6Arcade31FramedArtworkCollectionViewCell_artworkView);
}

void sub_100058300(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade31FramedArtworkCollectionViewCell_artworkView);
  uint64_t v5 = type metadata accessor for ArtworkView(0LL);
  uint64_t v6 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  id v7 = v4;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v7, a2, v5, v6);
}

uint64_t sub_100058390(uint64_t a1)
{
  uint64_t result = sub_100003B6C( &qword_1002DFB48,  type metadata accessor for FramedArtworkCollectionViewCell,  (uint64_t)&unk_100235720);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000583CC(double a1, double a2)
{
  v7[3] = &type metadata for Double;
  v7[4] = &protocol witness table for Double;
  v6[4] = &protocol witness table for Double;
  v7[0] = 0x403E000000000000LL;
  v6[3] = &type metadata for Double;
  v6[0] = 0x4044000000000000LL;
  void v5[3] = &type metadata for Double;
  v5[4] = &protocol witness table for Double;
  void v4[4] = &protocol witness table for Double;
  v5[0] = 0x4044000000000000LL;
  void v4[3] = &type metadata for Double;
  v3[4] = &protocol witness table for Double;
  v4[0] = 0x4035000000000000LL;
  v3[3] = &type metadata for Double;
  v3[0] = 0x4032000000000000LL;
  return PosterLockupLayout.Metrics.init(headingTopSpace:logoMargin:titleTopSpace:offerButtonTopSpace:footerTopSpace:footerBottomSpace:)( v7,  v6,  v5,  v4,  v3,  a2 * 0.175,  a1 * 0.1,  a2 * 0.225);
}

void sub_100058474(uint64_t a1, uint64_t a2)
{
  __int128 v3 = v2;
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = &v3[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitle];
  unint64_t v9 = *(void *)&v3[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitle + 8];
  if (v9)
  {
    if ((v9 & 0x2000000000000000LL) != 0 ? HIBYTE(v9) & 0xF : *(void *)v8 & 0xFFFFFFFFFFFFLL)
    {
      type metadata accessor for DynamicTypeLabel(0LL);
      if (qword_1002DC5A0 != -1) {
        swift_once(&qword_1002DC5A0, sub_1000712FC);
      }
      uint64_t v11 = sub_1000061F4(v4, (uint64_t)qword_1002EED30);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
      uint64_t v12 = sub_1000137B8((uint64_t)v7, 0LL, 0LL, 1, 0);
      uint64_t v14 = *((void *)v8 + 1);
      if (v14)
      {
        swift_bridgeObjectRetain(*((void *)v8 + 1));
        NSString v15 = String._bridgeToObjectiveC()();
        *(void *)&double v13 = swift_bridgeObjectRelease(v14).n128_u64[0];
      }

      else
      {
        NSString v15 = 0LL;
      }

      objc_msgSend(v12, "setText:", v15, v13);

      sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
      double v16 = v12;
      double v17 = (void *)static UIColor.primaryText.getter();
      [v16 setTextColor:v17];

      [v16 setTextAlignment:1];
      id v18 = [v3 contentView];
      [v18 addSubview:v16];

      double v19 = *(void **)&v3[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitleView];
      *(void *)&v3[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitleView] = v16;
    }
  }

void sub_100058670()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_videoView;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);

  uint64_t v4 = *(char **)(v1 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_videoContainer);
  if (Strong)
  {
    uint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong(v2);
    sub_1001B195C(v5);
    uint64_t v6 = *(char **)(v1 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_mediaView);
    uint64_t v7 = OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_videoContainer;
    uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_videoContainer];
    *(void *)&v6[OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_videoContainer] = v4;
    unint64_t v9 = v4;
    uint64_t v10 = v6;

    uint64_t v11 = *(void **)&v6[v7];
    id v17 = v11;
    sub_100059E20(v11);
  }

  else
  {
    uint64_t v12 = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view]);
    if (v12)
    {
      double v13 = v12;
      id v14 = [v12 superview];

      if (v14)
      {
        sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
        NSString v15 = v4;
        id v16 = v14;
        LOBYTE(v14) = static NSObject.== infix(_:_:)(v16, v15);
      }
    }

    else
    {
      LOBYTE(v14) = 0;
    }

    sub_1001B1AE8(0LL, v14 & 1);
  }

char *sub_1000587E8(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = type metadata accessor for CornerStyle(0LL);
  uint64_t v88 = *(void *)(v10 - 8);
  uint64_t v89 = v10;
  __chkstk_darwin(v10);
  unint64_t v87 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = type metadata accessor for WordmarkView.Alignment(0LL);
  uint64_t v12 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  id v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000031E8(&qword_1002E45B0);
  __chkstk_darwin(v15);
  id v17 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v18 = &v4[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_itemLayoutContext];
  uint64_t v19 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v18, 1LL, 1LL, v19);
  *(void *)&v5[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_headingView] = 0LL;
  *(void *)&v5[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_epicHeaderView] = 0LL;
  uint64_t v20 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitleColor;
  uint64_t v86 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  double v21 = v5;
  *(void *)&v5[v20] = static UIColor.primaryText.getter();
  double v22 = &v21[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_title];
  *(void *)double v22 = 0LL;
  *((void *)v22 + 1) = 0LL;
  double v23 = &v21[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitle];
  *(void *)double v23 = 0LL;
  *((void *)v23 + 1) = 0LL;
  uint64_t v24 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_offerButton;
  uint64_t v25 = type metadata accessor for OfferButton();
  *(void *)&v21[v24] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v25)) init];
  *(void *)&v21[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_footerView] = 0LL;
  uint64_t v26 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_mediaView;
  *(void *)&v21[v26] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for MediaView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *(void *)&v21[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_video] = 0LL;
  uint64_t v27 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_videoContainer;
  double v28 = (objc_class *)type metadata accessor for VideoViewContainer();
  uint64_t v29 = (char *)objc_allocWithZone(v28);
  swift_unknownObjectWeakInit(&v29[OBJC_IVAR____TtC6Arcade18VideoViewContainer_view], 0LL);
  *(void *)&v29[OBJC_IVAR____TtC6Arcade18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v30, 0LL);
  v92.receiver = v29;
  v92.super_class = v28;
  *(void *)&v21[v27] = objc_msgSendSuper2(&v92, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit(&v21[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_videoView], 0LL);
  *(void *)&v21[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_epicHeadingArtwork] = 0LL;
  *(void *)&v21[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_artwork] = 0LL;
  uint64_t v31 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_artworkView;
  type metadata accessor for ArtworkView(0LL);
  *(void *)&v21[v31] = static ArtworkView.plainArtworkView.getter();
  uint64_t v32 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_wordmark;
  uint64_t v33 = enum case for Wordmark.arcade(_:);
  uint64_t v34 = type metadata accessor for Wordmark(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v17, v33, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v17, 0LL, 1LL, v34);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))( v14,  enum case for WordmarkView.Alignment.center(_:),  v84);
  *((void *)&v99 + 1) = &type metadata for Double;
  CGFloat v100 = &protocol witness table for Double;
  *(void *)&__int128 v98 = 0x4032000000000000LL;
  id v36 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0LL));
  *(void *)&v21[v32] = WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)( v17,  &v98,  v14,  0.0,  0.0,  0.0,  0.0);
  uint64_t v37 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_gradientView;
  *(void *)&v21[v37] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for GradientView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *(void *)&v21[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitleView] = 0LL;

  v91.receiver = v21;
  v91.super_class = ObjectType;
  double v38 = (char *)objc_msgSendSuper2(&v91, "initWithFrame:", a1, a2, a3, a4);
  id v39 = [v38 contentView];
  objc_msgSend( v39,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  id v40 = [v38 contentView];
  [v40 _setCornerRadius:5.0];

  id v41 = [v38 contentView];
  [v41 setClipsToBounds:1];

  id v42 = [v38 contentView];
  CGFloat v43 = (void *)static UIColor.placeholderBackground.getter();
  [v42 setBackgroundColor:v43];

  id v44 = [v38 contentView];
  id v45 = [v44 layer];

  [v45 setAllowsGroupBlending:0];
  CGFloat v47 = v87;
  uint64_t v46 = v88;
  uint64_t v48 = v89;
  (*(void (**)(char *, void, uint64_t))(v88 + 104))(v87, enum case for CornerStyle.continuous(_:), v89);
  id v49 = [v38 contentView];
  CornerStyle.apply(withRadius:to:)(v49, 12.0);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  uint64_t v50 = &v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  __int128 v51 = *(_OWORD *)&v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
  v104[0] = *(_OWORD *)&v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  v104[1] = v51;
  char v105 = v38[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)uint64_t v50 = 0x4020000000000000LL;
  *((void *)v50 + 1) = 0x4039000000000000LL;
  v50[16] = 0;
  *((void *)v50 + 3) = 0LL;
  v50[32] = 1;
  double v52 = v38;
  sub_1000690F4((uint64_t)v104, v53, v54);

  __int128 v98 = xmmword_100233760;
  __int128 v99 = xmmword_100233770;
  LOBYTE(v10_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0;
  uint64_t v101 = 0LL;
  uint64_t v102 = 0LL;
  char v103 = 1;
  double v55 = v52;
  sub_10006779C(&v98);

  uint64_t v56 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  CGFloat v57 = v55;
  id v58 = [v56 blackColor];
  id v59 = [v58 CGColor];

  double v60 = &v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  double v61 = *(void **)&v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  CGFloat v62 = *(void **)&v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
  CGFloat v63 = *(void **)&v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
  *(void *)double v60 = v59;
  *(int64x2_t *)(v60 + 8) = vdupq_n_s64(1uLL);
  id v64 = v61;
  sub_10000AAF8(v62);
  sub_10000AAF8(v63);
  id v65 = v59;

  sub_10000AB08(v62);
  sub_10000AB08(v63);
  sub_100069248(v61, v62, (unint64_t)v63);

  sub_10000AB08(v62);
  sub_10000AB08(v63);

  CGFloat v66 = &v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(a4) = *(_DWORD *)&v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v65) = *(_DWORD *)&v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v62) = v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v63) = v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)CGFloat v66 = 1048576000;
  *((_DWORD *)v66 + 1) = 1051931443;
  v66[8] = 0;
  uint64_t v67 = *((unsigned int *)v66 + 3);
  *((_DWORD *)v66 + 3) = 0;
  v66[16] = 1;
  __int128 v68 = v57;
  LOBYTE(v93) = (_BYTE)v62;
  v90[48] = (_BYTE)v63;
  v69.n128_u32[0] = LODWORD(a4);
  sub_1000693B0((int)v65, v62 | (unint64_t)(v67 << 32), (char)v63, v69);

  uint64_t v70 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_gradientView;
  uint64_t v71 = *(void **)&v68[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_gradientView];
  uint64_t v72 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t inited = swift_initStackObject(v72, v90);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339A0;
  id v74 = objc_allocWithZone(&OBJC_CLASS___UIColor);
  id v75 = v71;
  *(void *)(inited + 32) = [v74 initWithWhite:0.0 alpha:0.0];
  id v76 = [objc_allocWithZone(UIColor) initWithWhite:0.0 alpha:0.15];
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v76;
  uint64_t v93 = inited;
  specialized Array._endMutation()(v76);
  sub_10011DD80(v93);

  CGRect v77 = *(void **)&v68[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_wordmark];
  uint64_t v93 = 0xBFE8000000000000LL;
  __int128 v94 = 0u;
  __int128 v95 = 0u;
  uint64_t v96 = 0LL;
  char v97 = 1;
  id v78 = v77;
  sub_1000661C8((uint64_t)&v93);

  id v79 = [v68 contentView];
  [v79 addSubview:*(void *)&v68[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_mediaView]];

  id v80 = [v68 contentView];
  [v80 addSubview:*(void *)&v68[v70]];

  id v81 = [v68 contentView];
  id v82 = *(id *)&v68[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_offerButton];
  [v81 addSubview:v82];

  return v68;
}

uint64_t sub_1000590EC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  __n128 v4 = __chkstk_darwin(v3);
  id v45 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for PosterLockupLayout.Metrics(0LL, v4);
  __n128 v7 = __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for PosterLockupLayout(0LL, v7);
  uint64_t v49 = *(void *)(v10 - 8);
  uint64_t v50 = v10;
  *(void *)&double v11 = __chkstk_darwin(v10).n128_u64[0];
  uint64_t v48 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v67.receiver = v1;
  v67.super_class = ObjectType;
  objc_msgSendSuper2(&v67, "layoutSubviews", v11);
  [v1 bounds];
  id v44 = v9;
  sub_1000583CC(v13, v14);
  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_gradientView];
  void v66[3] = type metadata accessor for GradientView();
  v66[4] = protocol witness table for UIView;
  v66[0] = v15;
  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_mediaView];
  v65[3] = type metadata accessor for MediaView();
  v65[4] = protocol witness table for UIView;
  v65[0] = v16;
  id v17 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_headingView];
  if (v17)
  {
    *((void *)&v63 + 1) = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
    id v64 = protocol witness table for UIView;
    *(void *)&__int128 v62 = v17;
  }

  else
  {
    id v64 = 0LL;
    __int128 v62 = 0u;
    __int128 v63 = 0u;
  }

  id v18 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_epicHeaderView];
  if (v18)
  {
    *((void *)&v60 + 1) = type metadata accessor for ArtworkView(0LL);
    double v61 = protocol witness table for UIView;
    *(void *)&__int128 v59 = v18;
  }

  else
  {
    double v61 = 0LL;
    __int128 v59 = 0u;
    __int128 v60 = 0u;
  }

  uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitleView];
  if (v19)
  {
    *((void *)&v57 + 1) = type metadata accessor for DynamicTypeLabel(0LL);
    id v58 = &protocol witness table for UILabel;
    *(void *)&__int128 v56 = v19;
  }

  else
  {
    id v58 = 0LL;
    __int128 v56 = 0u;
    __int128 v57 = 0u;
  }

  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_offerButton];
  void v55[3] = type metadata accessor for OfferButton();
  v55[4] = protocol witness table for UIView;
  v55[0] = v20;
  double v21 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_footerView];
  if (v21)
  {
    *((void *)&v53 + 1) = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
    __n128 v54 = protocol witness table for UIView;
    *(void *)&__int128 v52 = v21;
  }

  else
  {
    __n128 v54 = 0LL;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
  }

  id v22 = v19;
  id v23 = v20;
  id v24 = v21;
  v15;
  id v25 = v16;
  id v26 = v17;
  id v27 = v18;
  double v28 = v48;
  PosterLockupLayout.init(metrics:gradient:poster:header:logoArt:fallbackTitle:offerButton:footer:)( v44,  v66,  v65,  &v62,  &v59,  &v56,  v55,  &v52);
  id v29 = [v1 contentView];
  [v29 bounds];
  double v31 = v30;
  double v33 = v32;
  double v35 = v34;
  double v37 = v36;

  double v38 = v45;
  PosterLockupLayout.placeChildren(relativeTo:in:)(v1, v31, v33, v35, v37);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v47);
  uint64_t v39 = sub_1000031E8(&qword_1002DE648);
  uint64_t inited = swift_initStackObject(v39, &v51);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
  [v1 bounds];
  CGFloat v41 = CGRectGetHeight(v68) + -88.0;
  [v1 bounds];
  *(CGFloat *)(inited + 32) = v41 / CGRectGetHeight(v69);
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0x3FF0000000000000LL;
  sub_10011DF7C(inited);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v28, v50);
}

void sub_1000594E4(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_10006734C(a1, a2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_videoView);
  if (Strong)
  {
    id v6 = (id)Strong;
    sub_100128F18(v4, a2);
  }

void sub_10005955C()
{
  v19.receiver = v0;
  v19.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v19, "prepareForReuse");
  uint64_t v1 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_headingView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_headingView];
  if (v2)
  {
    [v2 removeFromSuperview];
    uint64_t v3 = *(void **)&v0[v1];
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  *(void *)&v0[v1] = 0LL;

  char v4 = *(void **)&v0[v1];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v0 contentView];
    [v6 addSubview:v5];
  }

  sub_10005A048(0LL);
  __n128 v7 = *(void **)&v0[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitleView];
  if (v7) {
    [v7 removeFromSuperview];
  }
  uint64_t v8 = &v0[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitle];
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitle + 8];
  *(void *)uint64_t v8 = 0LL;
  *((void *)v8 + 1) = 0LL;
  swift_bridgeObjectRelease(v9);
  sub_100058474(v10, v11);
  uint64_t v12 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_footerView;
  double v13 = *(void **)&v0[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_footerView];
  if (v13)
  {
    [v13 removeFromSuperview];
    double v14 = *(void **)&v0[v12];
  }

  else
  {
    double v14 = 0LL;
  }

  *(void *)&v0[v12] = 0LL;

  uint64_t v15 = *(void **)&v0[v12];
  if (v15)
  {
    id v16 = v15;
    id v17 = [v0 contentView];
    [v17 addSubview:v16];
  }

  uint64_t v18 = *(void *)&v0[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_video];
  *(void *)&v0[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_video] = 0LL;
  swift_release(v18);
  swift_unknownObjectWeakAssign(&v0[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_videoView], 0LL);
  sub_100058670();
  sub_100059F74(0LL);
}

void sub_100059784()
{
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_title + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_fallbackTitle + 8));

  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_video));
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_videoView);
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_epicHeadingArtwork));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_artwork));
}

uint64_t sub_1000599FC()
{
  return type metadata accessor for PosterLockupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for PosterLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DFB90;
  if (!qword_1002DFB90) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PosterLockupCollectionViewCell);
  }
  return result;
}

void sub_100059A40(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    void v4[2] = "\b";
    void v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[4] = &unk_1002357C8;
    void v4[5] = &unk_1002357C8;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[7] = "\b";
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = "\b";
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = &unk_1002357E0;
    v4[12] = "\b";
    v4[13] = "\b";
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[17] = "\b";
    swift_updateClassMetadata2(a1, 256LL, 18LL, v4, a1 + 472);
  }

id sub_100059AEC()
{
  return *(id *)(v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_artworkView);
}

double sub_100059AFC()
{
  return v1;
}

uint64_t sub_100059B24()
{
  return swift_unknownObjectWeakLoadStrong(*v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_videoView);
}

id sub_100059B38()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_videoContainer);
}

void sub_100059B4C(uint64_t a1, uint64_t a2)
{
}

void sub_100059B58()
{
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v6, "layoutSubviews");
  double v1 = *(void **)&v0[OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_contentView];
  if (v1)
  {
    id v2 = v1;
    [v0 bounds];
    objc_msgSend(v2, "setFrame:");
  }

  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_videoContainer];
  if (v3)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC6Arcade18VideoViewContainer_view);
    if (Strong)
    {
      id v5 = (void *)Strong;
      [v0 bounds];
      objc_msgSend(v5, "setFrame:");
    }
  }

uint64_t type metadata accessor for MediaView()
{
  return objc_opt_self(&OBJC_CLASS____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView);
}

unint64_t sub_100059DB4(uint64_t a1)
{
  unint64_t result = sub_100059DD8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100059DD8()
{
  unint64_t result = qword_1002DFBE0;
  if (!qword_1002DFBE0)
  {
    uint64_t v1 = type metadata accessor for PosterLockupCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100235804, v1);
    atomic_store(result, (unint64_t *)&qword_1002DFBE0);
  }

  return result;
}

void sub_100059E20(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_contentView;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_contentView];
  *(void *)&v1[OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_contentView] = a1;
  id v4 = a1;

  id v5 = [v1 subviews];
  uint64_t v6 = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v7);
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v7);
    if (!v8) {
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v8) {
      goto LABEL_13;
    }
  }

  if (v8 < 1)
  {
    __break(1u);
    return;
  }

  for (uint64_t i = 0LL; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001LL) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
    }
    else {
      id v10 = *(id *)(v7 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    [v10 removeFromSuperview];
  }

void sub_100059F74(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_artwork;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_artwork);
  *(void *)(v1 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_artwork) = a1;
  swift_retain(a1);
  swift_release(v3);
  if (*(void *)(v1 + v2))
  {
    id v4 = *(char **)(v1 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_mediaView);
    id v5 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_artworkView);
    uint64_t v6 = OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_artworkView;
    uint64_t v7 = *(void **)&v4[OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_artworkView];
    *(void *)&v4[OBJC_IVAR____TtC6ArcadeP33_486D9B92CCE6B7E2CFCE4CE9AB6D9CFD9MediaView_artworkView] = v5;
    id v8 = v5;
    uint64_t v9 = v4;

    id v10 = *(void **)&v4[v6];
    id v11 = v10;
    sub_100059E20(v10);
  }

void sub_10005A048(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_epicHeaderView;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_epicHeaderView];
  if (v4)
  {
    [v4 removeFromSuperview];
    id v5 = *(void **)&v1[v3];
  }

  else
  {
    id v5 = 0LL;
  }

  *(void *)&v1[v3] = a1;
  id v6 = a1;

  uint64_t v7 = *(void **)&v1[v3];
  if (v7)
  {
    id v8 = v7;
    id v9 = [v1 contentView];
    [v9 insertSubview:v8 above:*(void *)&v1[OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_mediaView]];
  }

uint64_t sub_10005A10C(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  (uint64_t (*)(void))type metadata accessor for StarRatingView,  (uint64_t)&protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
}

uint64_t sub_10005A130(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  (uint64_t (*)(void))type metadata accessor for ProgressBarView,  (uint64_t)&protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
}

uint64_t sub_10005A154(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v4 = a1;
    }
    else {
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002DF9C0);
    uint64_t v6 = _bridgeCocoaArray<A>(_:)(v4, v5);
    swift_bridgeObjectRelease(a1);
    return v6;
  }

  else
  {
    uint64_t v2 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
    return a1;
  }

uint64_t sub_10005A1CC(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  type metadata accessor for AnnotationCollectionViewCell,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
}

uint64_t sub_10005A1F0(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  (uint64_t (*)(void))type metadata accessor for PrivacyCategoryView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
}

void *sub_10005A214(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v15 = a1;
    }
    else {
      uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return v3;
  }
  objc_super v19 = _swiftEmptyArrayStorage;
  unint64_t result = sub_100026EDC(0LL, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000LL) == 0)
  {
    uint64_t v3 = v19;
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      uint64_t v5 = 0LL;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        objc_super v19 = v3;
        unint64_t v9 = v3[2];
        unint64_t v8 = v3[3];
        if (v9 >= v8 >> 1)
        {
          sub_100026EDC((void *)(v8 > 1), v9 + 1, 1);
          uint64_t v3 = v19;
        }

        ++v5;
        uint64_t v17 = type metadata accessor for LayoutViewPlaceholder(0LL, v7);
        uint64_t v18 = &protocol witness table for LayoutViewPlaceholder;
        *(void *)&__int128 v16 = v6;
        v3[2] = v9 + 1;
        sub_100009D90(&v16, (uint64_t)&v3[5 * v9 + 4]);
      }

      while (v2 != v5);
    }

    else
    {
      id v10 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v11 = *v10;
        objc_super v19 = v3;
        unint64_t v12 = v3[2];
        unint64_t v13 = v3[3];
        __n128 v14 = swift_retain(v11);
        if (v12 >= v13 >> 1)
        {
          sub_100026EDC((void *)(v13 > 1), v12 + 1, 1);
          uint64_t v3 = v19;
        }

        uint64_t v17 = type metadata accessor for LayoutViewPlaceholder(0LL, v14);
        uint64_t v18 = &protocol witness table for LayoutViewPlaceholder;
        *(void *)&__int128 v16 = v11;
        v3[2] = v12 + 1;
        sub_100009D90(&v16, (uint64_t)&v3[5 * v12 + 4]);
        ++v10;
        --v2;
      }

      while (v2);
    }

    return v3;
  }

  __break(1u);
  return result;
}

uint64_t sub_10005A3DC(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  (uint64_t (*)(void))sub_100018D98,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
}

uint64_t sub_10005A400(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026FC4,  type metadata accessor for DynamicTypeLabel,  (uint64_t)&protocol witness table for UILabel,  (void (*)(void *, unint64_t *))sub_100009D90);
}

uint64_t sub_10005A424(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  type metadata accessor for DynamicTypeButton,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
}

uint64_t sub_10005A448(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  (uint64_t (*)(void))type metadata accessor for ArcadeWelcomeItemView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
}

uint64_t sub_10005A46C(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  (uint64_t (*)(void))&type metadata accessor for ArtworkView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
}

uint64_t sub_10005A490(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  (uint64_t (*)(void))type metadata accessor for StarView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
}

uint64_t sub_10005A4B4(uint64_t a1)
{
  return sub_10005A4D8( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  (uint64_t (*)(void))_s8ItemViewCMa,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
}

uint64_t sub_10005A4D8( uint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t), uint64_t (*a3)(void), uint64_t a4, void (*a5)(void *, unint64_t *))
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v22 = a1;
    }
    else {
      uint64_t v22 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v11 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (!v10) {
    return (uint64_t)v11;
  }
  id v27 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t result = ((uint64_t (*)(void, uint64_t, void))a2)(0LL, v10 & ~(v10 >> 63), 0LL);
  if ((v10 & 0x8000000000000000LL) == 0)
  {
    id v23 = a2;
    uint64_t v11 = v27;
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      uint64_t v13 = 0LL;
      do
      {
        uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
        id v27 = v11;
        unint64_t v16 = v11[2];
        unint64_t v15 = v11[3];
        if (v16 >= v15 >> 1)
        {
          v23(v15 > 1, v16 + 1, 1LL);
          uint64_t v11 = v27;
        }

        ++v13;
        uint64_t v25 = a3(0LL);
        uint64_t v26 = a4;
        v24[0] = v14;
        v11[2] = v16 + 1;
        a5(v24, &v11[5 * v16 + 4]);
      }

      while (v10 != v13);
    }

    else
    {
      uint64_t v17 = (void **)(a1 + 32);
      do
      {
        uint64_t v18 = *v17;
        id v27 = v11;
        unint64_t v19 = v11[2];
        unint64_t v20 = v11[3];
        id v21 = v18;
        if (v19 >= v20 >> 1)
        {
          v23(v20 > 1, v19 + 1, 1LL);
          uint64_t v11 = v27;
        }

        uint64_t v25 = a3(0LL);
        uint64_t v26 = a4;
        v24[0] = v21;
        v11[2] = v19 + 1;
        a5(v24, &v11[5 * v19 + 4]);
        ++v17;
        --v10;
      }

      while (v10);
    }

    return (uint64_t)v11;
  }

  __break(1u);
  return result;
}

void *sub_10005A6AC(uint64_t a1)
{
  uint64_t v16 = sub_1000031E8(&qword_1002DE6C8);
  uint64_t v2 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000031E8((uint64_t *)&unk_1002DFC80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_100027060(0LL, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    uint64_t v10 = v17;
    do
    {
      sub_10005BCFC(v11, (uint64_t)v4);
      swift_dynamicCast(v8, v4, v16, v5, 7LL);
      if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      {
        sub_100027060(0LL, v10[2] + 1LL, 1);
        uint64_t v10 = v17;
      }

      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_100027060(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v17;
      }

      __int128 v10[2] = v14 + 1;
      sub_10005BD44( (uint64_t)v8,  (uint64_t)v10 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
      + *(void *)(v6 + 72) * v14);
      v11 += v12;
      --v9;
    }

    while (v9);
  }

  return v10;
}

uint64_t sub_10005A9C8()
{
  uint64_t v0 = type metadata accessor for AnnotationImagesLayout.Metrics(0LL);
  sub_10000FF90(v0, qword_1002EE828);
  sub_1000061F4(v0, (uint64_t)qword_1002EE828);
  return AnnotationImagesLayout.Metrics.init(horizontalSpacing:verticalSpacing:artworkSize:)(6.0, 6.0, 30.0, 30.0);
}

id sub_10005AB60(void *a1)
{
  uint64_t v3 = sub_1000031E8(&qword_1002DFC40);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v1[OBJC_IVAR____TtC6Arcade20AnnotationImagesView_imageViews] = _swiftEmptyArrayStorage;
  uint64_t v6 = type metadata accessor for AnnotationImagesView.AnnotationImageView();
  uint64_t v7 = v1;
  ViewRecycler.init()(v6);
  unint64_t v8 = sub_10005B95C();
  ReusePool.init(recycler:limit:)(v5, 10LL, v3, v8);

  int64_t v9 = (objc_class *)type metadata accessor for AnnotationImagesView(0LL);
  v17.receiver = v7;
  v17.super_class = v9;
  id v10 = objc_msgSendSuper2(&v17, "initWithCoder:", a1);
  id v11 = v10;
  if (v10)
  {
    double left = UIEdgeInsetsZero.left;
    double bottom = UIEdgeInsetsZero.bottom;
    double right = UIEdgeInsetsZero.right;
    id v15 = v10;
    objc_msgSend(v15, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  }

  return v11;
}

void sub_10005ACD8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t *)&v1[OBJC_IVAR____TtC6Arcade20AnnotationImagesView_imageViews];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade20AnnotationImagesView_imageViews], v22, 0LL, 0LL);
  uint64_t v5 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10) == a1) {
      return;
    }
LABEL_3:
    uint64_t v6 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
      if (v6 < 0) {
        uint64_t v11 = *v4;
      }
      else {
        uint64_t v11 = v6 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(*v4);
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v6);
      if (v12 > a1) {
        goto LABEL_5;
      }
    }

    else if (*(void *)((v6 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a1)
    {
LABEL_5:
      swift_beginAccess(v4, v20, 33LL, 0LL);
      uint64_t v7 = (void *)sub_1001DF5C4();
      swift_endAccess(v20);
      if (!v7)
      {
        __break(1u);
        return;
      }

      [v7 removeFromSuperview];
      id v21 = v7;
      swift_beginAccess(&v2[OBJC_IVAR____TtC6Arcade20AnnotationImagesView_imageViewReusePool], v20, 33LL, 0LL);
      uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002DFC90);
      ReusePool.recycle(_:)(&v21, v8);
      swift_endAccess(v20);

      goto LABEL_19;
    }

    swift_beginAccess(&v2[OBJC_IVAR____TtC6Arcade20AnnotationImagesView_imageViewReusePool], v20, 33LL, 0LL);
    uint64_t v13 = sub_1000031E8((uint64_t *)&unk_1002DFC90);
    ReusePool.dequeue(or:)(&v21, sub_10005AF44, 0LL, v13);
    swift_endAccess(v20);
    unint64_t v14 = v21;
    swift_beginAccess(v4, v20, 33LL, 0LL);
    id v15 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    unint64_t v16 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v16 >= v17 >> 1)
    {
      unint64_t v19 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v16 + 1, 1LL);
      unint64_t v16 = v19;
    }

    uint64_t v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
    specialized Array._endMutation()(v18);
    swift_endAccess(v20);
    [v2 addSubview:v15];

LABEL_19:
    sub_10005ACD8(a1);
    return;
  }

  if (v5 < 0) {
    uint64_t v9 = *v4;
  }
  else {
    uint64_t v9 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v4);
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v5);
  if (v10 != a1) {
    goto LABEL_3;
  }
}

id sub_10005AF44@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AnnotationImagesView.AnnotationImageView();
  id result = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)) init];
  *a1 = result;
  return result;
}

uint64_t sub_10005AF80()
{
  uint64_t v1 = type metadata accessor for LayoutRect(0LL);
  uint64_t v21 = *(void *)(v1 - 8);
  uint64_t v22 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for AnnotationImagesLayout.Metrics(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for AnnotationImagesLayout(0LL, v6);
  uint64_t v9 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = (objc_class *)type metadata accessor for AnnotationImagesView(0LL);
  v24.receiver = v0;
  v24.super_class = v12;
  objc_msgSendSuper2(&v24, "layoutSubviews");
  uint64_t v13 = &v0[OBJC_IVAR____TtC6Arcade20AnnotationImagesView_imageViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6Arcade20AnnotationImagesView_imageViews], v23, 0LL, 0LL);
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = swift_bridgeObjectRetain(*(void *)v13);
  uint64_t v16 = sub_10005A4D8( v15,  (void (*)(BOOL, unint64_t, uint64_t))sub_100026EDC,  (uint64_t (*)(void))type metadata accessor for AnnotationImagesView.AnnotationImageView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_100009D90);
  swift_bridgeObjectRelease(v14);
  if (qword_1002DC470 != -1) {
    swift_once(&qword_1002DC470, sub_10005A9C8);
  }
  uint64_t v17 = sub_1000061F4(v4, (uint64_t)qword_1002EE828);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v17, v4);
  AnnotationImagesLayout.init(views:metrics:)(v16, v8);
  __n128 v18 = LayoutMarginsAware<>.layoutFrame.getter(v12);
  AnnotationImagesLayout.placeChildren(relativeTo:in:)(v0, v18);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v20);
}

void sub_10005B2E8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v6 = (void *)((unint64_t)a1 >> 62);
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
LABEL_3:
  sub_10005ACD8(v7);
  uint64_t v8 = (uint64_t *)&v1[OBJC_IVAR____TtC6Arcade20AnnotationImagesView_imageViews];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade20AnnotationImagesView_imageViews], v38, 0LL, 0LL);
  uint64_t v9 = *v8;
  if (!v6)
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(v9);
    if (v10) {
      goto LABEL_5;
    }
LABEL_30:
    swift_bridgeObjectRelease(v9);
    unint64_t v25 = swift_bridgeObjectRelease(a1).n128_u64[0];
LABEL_46:
    objc_msgSend(v1, "invalidateIntrinsicContentSize", *(double *)&v25);
    [v1 setNeedsLayout];
    return;
  }

  if (a1 < 0) {
    uint64_t v24 = a1;
  }
  else {
    uint64_t v24 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v9);
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v24);
  if (!v10) {
    goto LABEL_30;
  }
LABEL_5:
  unint64_t v33 = a1 & 0xC000000000000001LL;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
    if (!((unint64_t)v9 >> 62))
    {
LABEL_8:
      uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (v12)
      {
LABEL_9:
        double v28 = v1;
        unint64_t v13 = 0LL;
        uint64_t v34 = type metadata accessor for BundleImage(0LL);
        unint64_t v35 = v9 & 0xC000000000000001LL;
        uint64_t v31 = v9 + 32;
        uint64_t v32 = v9 & 0xFFFFFFFFFFFFFF8LL;
        uint64_t v29 = a1 + 40;
        uint64_t v30 = a1 & 0xFFFFFFFFFFFFFF8LL;
        uint64_t v14 = v10 - 1;
        while (1)
        {
          if (v35)
          {
            id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v9);
          }

          else
          {
            if (v13 >= *(void *)(v32 + 16)) {
              goto LABEL_34;
            }
            id v15 = *(id *)(v31 + 8 * v13);
          }

          uint64_t v16 = v15;
          uint64_t v17 = (void *)static BundleImage.load(artwork:with:)(v11, 0LL);
          if (!v17)
          {
            swift_release(v11);

            swift_bridgeObjectRelease(v9);
            swift_bridgeObjectRelease(a1);
            return;
          }

          __n128 v6 = v17;
          [v17 size];
          if (qword_1002DC470 != -1) {
            swift_once(&qword_1002DC470, sub_10005A9C8);
          }
          uint64_t v18 = type metadata accessor for AnnotationImagesLayout.Metrics(0LL);
          sub_1000061F4(v18, (uint64_t)qword_1002EE828);
          uint64_t v19 = AnnotationImagesLayout.Metrics.artworkSize.getter();
          uint64_t v20 = Artwork.crop.getter(v19);
          uint64_t v1 = (char *)Artwork.Crop.preferredContentMode.getter(v20);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v37);
          double v21 = CGSize.fitting(_:mode:)(v1);
          objc_msgSend(v16, "setFrame:", 0.0, 0.0, v21, v22);
          [v16 setImage:v6];
          swift_release(v11);

          if (v14 == v13)
          {
            swift_bridgeObjectRelease(v9);
            unint64_t v25 = swift_bridgeObjectRelease(a1).n128_u64[0];
            uint64_t v1 = v28;
            goto LABEL_46;
          }

          unint64_t v23 = v13 + 1;
          if (v33)
          {
            uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13 + 1, a1);
            if (__OFADD__(v23, 1LL)) {
              goto LABEL_33;
            }
          }

          else
          {
            if (v23 >= *(void *)(v30 + 16)) {
              goto LABEL_35;
            }
            uint64_t v11 = *(void *)(v29 + 8 * v13);
            swift_retain(v11);
            if (__OFADD__(v23, 1LL))
            {
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
LABEL_35:
              __break(1u);
LABEL_36:
              if (a1 < 0) {
                uint64_t v26 = a1;
              }
              else {
                uint64_t v26 = a1 & 0xFFFFFFFFFFFFFF8LL;
              }
              swift_bridgeObjectRetain(a1);
              uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v26);
              swift_bridgeObjectRelease(a1);
              goto LABEL_3;
            }
          }

          if (v12 == ++v13)
          {
            swift_bridgeObjectRelease(v9);
            swift_bridgeObjectRelease(a1);
            unint64_t v25 = swift_release(v11).n128_u64[0];
            uint64_t v1 = v28;
            goto LABEL_46;
          }
        }
      }

      goto LABEL_45;
    }

LABEL_41:
    if (v9 < 0) {
      __n128 v6 = (void *)v9;
    }
    else {
      __n128 v6 = (void *)(v9 & 0xFFFFFFFFFFFFFF8LL);
    }
    swift_bridgeObjectRetain(v9);
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v9);
    if (v12) {
      goto LABEL_9;
    }
LABEL_45:
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(a1);
    unint64_t v25 = swift_release(v11).n128_u64[0];
    goto LABEL_46;
  }

  if (*(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    swift_retain(v11);
    goto LABEL_41;
  }

  __break(1u);
}

  __break(1u);
}

  swift_release(v8);
  char *v3 = v10;
}

                      __break(1u);
LABEL_42:
                      __break(1u);
                      return;
                    }

                    uint64_t v32 = v37;
                  }
                }
              }
            }

    id v80 = (v97 - 1) & v97;
    CGRect v127 = (void (*)(void))v98;
    CGRect v85 = __clz(__rbit64(v97)) + (v98 << 6);
LABEL_26:
    unint64_t v87 = v119;
    (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))( v119,  *((void *)v86 + 6) + *(void *)(v82 + 72) * v85,  v9);
    uint64_t v88 = v9;
    uint64_t v89 = v126;
    (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v126, v87, v88);
    uint64_t v90 = *((void *)v123 + 1);
    uint64_t ObjectType = swift_getObjectType(*(void *)v123);
    uint64_t v93 = v121;
    objc_super v92 = v122;
    (*(void (**)(char *, void, uint64_t))(v121 + 104))(v83, v118, v122);
    dispatch thunk of AppStateController.setWaiting(for:installationType:)(v89, v83, ObjectType, v90);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v83, v92);
    __int128 v94 = v89;
    uint64_t v9 = v88;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v94, v88);
    id v81 = v127;
  }

  __int128 v99 = (char *)v81 + 4;
  char v97 = *(void *)&v115[8 * (void)v99];
  if (v97)
  {
    __int128 v98 = (int64_t)v81 + 4;
    goto LABEL_41;
  }

  while (1)
  {
    __int128 v98 = (int64_t)(v99 + 1);
    if (__OFADD__(v99, 1LL)) {
      break;
    }
    if (v98 >= v116) {
      goto LABEL_42;
    }
    char v97 = *(void *)&v115[8 * v98];
    ++v99;
    if (v97) {
      goto LABEL_41;
    }
  }

id sub_10005B7B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnnotationImagesView(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005B838()
{
  return type metadata accessor for AnnotationImagesView(0LL);
}

uint64_t type metadata accessor for AnnotationImagesView(uint64_t a1)
{
  uint64_t result = qword_1002DFC28;
  if (!qword_1002DFC28) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnotationImagesView);
  }
  return result;
}

void sub_10005B87C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10005B8F8(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 80);
  }

void sub_10005B8F8(uint64_t a1)
{
  if (!qword_1002DFC38)
  {
    uint64_t v2 = sub_100003274(&qword_1002DFC40);
    unint64_t v3 = sub_10005B95C();
    unint64_t v4 = type metadata accessor for ReusePool(a1, v2, v3);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_1002DFC38);
    }
  }

unint64_t sub_10005B95C()
{
  unint64_t result = qword_1002DFC48;
  if (!qword_1002DFC48)
  {
    uint64_t v1 = sub_100003274(&qword_1002DFC40);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DFC48);
  }

  return result;
}

uint64_t type metadata accessor for AnnotationImagesView.AnnotationImageView()
{
  return objc_opt_self(&OBJC_CLASS____TtCC6Arcade20AnnotationImagesViewP33_C39E15B5937E13109ACE3EB2A37F38ED19AnnotationImageView);
}

void sub_10005B9C8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v35 = a1;
    }
    else {
      uint64_t v35 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    uint64_t v39 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v11);
    if (v11 < 0)
    {
      __break(1u);
      return;
    }

    uint64_t v36 = a2;
    type metadata accessor for BundleImage(0LL);
    uint64_t v13 = 0LL;
    do
    {
      if ((a1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
      }

      else
      {
        uint64_t v19 = *(void *)(a1 + 8 * v13 + 32);
        swift_retain(v19);
      }

      uint64_t v20 = (void *)static BundleImage.load(artwork:with:)(v19, 0LL);
      if (v20)
      {
        double v22 = v20;
        [v20 size];
        if (qword_1002DC470 != -1) {
          swift_once(&qword_1002DC470, sub_10005A9C8);
        }
        uint64_t v23 = type metadata accessor for AnnotationImagesLayout.Metrics(0LL);
        sub_1000061F4(v23, (uint64_t)qword_1002EE828);
        uint64_t v24 = AnnotationImagesLayout.Metrics.artworkSize.getter();
        uint64_t v25 = Artwork.crop.getter(v24);
        uint64_t v26 = Artwork.Crop.preferredContentMode.getter(v25);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v38);
        v27.n128_f64[0] = CGSize.fitting(_:mode:)(v26);
        double v28 = v27.n128_f64[0];
        double v30 = v29;
        uint64_t v31 = type metadata accessor for LayoutViewPlaceholder(0LL, v27);
        swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
        uint64_t v15 = LayoutViewPlaceholder.init(representing:)(v28, v30);
        swift_release(v19);
      }

      else
      {
        uint64_t v14 = type metadata accessor for LayoutViewPlaceholder(0LL, v21);
        swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
        uint64_t v15 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
        swift_release(v19);
      }

      ++v13;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      uint64_t v17 = v39[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      uint64_t v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized ContiguousArray._endMutation()(v18);
    }

    while (v11 != v13);
    uint64_t v12 = v39;
    a2 = v36;
  }

  uint64_t v32 = sub_10005A214((uint64_t)v12);
  swift_bridgeObjectRelease(v12);
  if (qword_1002DC470 != -1) {
    swift_once(&qword_1002DC470, sub_10005A9C8);
  }
  uint64_t v33 = type metadata accessor for AnnotationImagesLayout.Metrics(0LL);
  uint64_t v34 = sub_1000061F4(v33, (uint64_t)qword_1002EE828);
  static AnnotationImagesLayout.measurements(for:fitting:metrics:in:)(v32, v34, a2, a3, a4);
  swift_bridgeObjectRelease(v32);
}

uint64_t sub_10005BCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002DE6C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005BD44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DFC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005BD8C()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  sub_10000FF90(v0, qword_1002DFCA0);
  sub_1000061F4(v0, (uint64_t)qword_1002DFCA0);
  unint64_t v1 = sub_100010F30();
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.15).super.isa;
  id v3 = [(id)objc_opt_self(UIColor) blackColor];
  v6[0] = sub_1000031E8(&qword_1002DE250);
  v6[1] = v1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002358E8, v6);
  Class v7 = isa;
  id v8 = v3;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v8, &v7, v1);
}

char *sub_10005BE6C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for ArtworkView.AppStoreStackedConfiguration(0LL);
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  __chkstk_darwin(v9);
  __int128 v53 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v52 - v12;
  uint64_t v14 = sub_1000031E8(&qword_1002DFCF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002DE5F0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = (objc_class *)type metadata accessor for FamilyMemberCollectionViewCell(0LL);
  v56.receiver = v4;
  v56.super_class = v20;
  __n128 v21 = (char *)objc_msgSendSuper2(&v56, "initWithFrame:", a1, a2, a3, a4);
  double v22 = v21;
  char v23 = v21[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
  v21[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 0;
  if ((v23 & 1) != 0)
  {
    char v24 = v21[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state];
    uint64_t v25 = v21;
    sub_1000678F0(v24);
  }

  else
  {
    uint64_t v26 = v21;
  }

  uint64_t v27 = OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView;
  id v28 = objc_retain(*(id *)(*(void *)&v22[OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView]
                          + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView));
  ArtworkView.adjustsImageWhenAncestorFocused.setter(1LL);

  id v29 = *(id *)(*(void *)&v22[v27] + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView);
  ArtworkView.contentMode.setter(2LL);

  double v30 = *(void **)(*(void *)&v22[v27] + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView);
  uint64_t v31 = enum case for Artwork.Style.round(_:);
  uint64_t v32 = type metadata accessor for Artwork.Style(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v19, v31, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v19, 0LL, 1LL, v32);
  id v34 = v30;
  ArtworkView.style.setter(v19);

  uint64_t v35 = qword_1002DC418;
  id v36 = *(id *)(*(void *)&v22[v27] + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView);
  if (v35 != -1) {
    swift_once(&qword_1002DC418, sub_100046EC0);
  }
  uint64_t v37 = type metadata accessor for Shadow(0LL);
  uint64_t v38 = sub_1000061F4(v37, (uint64_t)qword_1002EE6F8);
  uint64_t v39 = *(void *)(v37 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v16, v38, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v16, 0LL, 1LL, v37);
  ArtworkView.shadow.setter(v16);

  if (qword_1002DC420 != -1) {
    swift_once(&qword_1002DC420, sub_100046EDC);
  }
  sub_1000061F4(v37, (uint64_t)qword_1002EE710);
  id v40 = (void *)Shadow.color.getter();
  [v40 alphaComponent];
  double v42 = v41;

  uint64_t v43 = Shadow.offset.getter();
  double v45 = v44;
  double v46 = Shadow.blurRadius.getter(v43);
  ArtworkView.AppStoreStackedConfiguration.init(defaultFocusedShadowOpacity:defaultFocusedShadowVerticalOffset:defaultFocusedShadowRadius:allowsNonOpaqueShadow:)( 1LL,  v42,  v45,  v46);
  id v47 = *(id *)(*(void *)&v22[v27] + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView);

  uint64_t v49 = v53;
  uint64_t v48 = v54;
  uint64_t v50 = v55;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v53, v13, v55);
  ArtworkView.stackedConfiguration.setter(v49);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v50);
  return v22;
}

_OWORD *sub_10005C244@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1002DCE30 != -1) {
    swift_once(&qword_1002DCE30, sub_100163420);
  }
  return sub_100008954(qword_1002F0DD0, a1);
}

void sub_10005C294(char a1)
{
  void (*v8)(void *__return_ptr);
  id v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void v26[17];
  char *v27;
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType(v1);
  uint64_t v5 = sub_1000031E8(&qword_1002DFCF0);
  __chkstk_darwin(v5);
  Class v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (v2[OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_isShowingSeeAll] == 1)
  {
    id v8 = *(void (**)(void *__return_ptr))(ObjectType + 520);
    uint64_t v9 = objc_retain(*(id *)(*(void *)&v2[OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView]
                           + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView));
    v8(v26);
    uint64_t v10 = *(double *)v26;
    uint64_t v11 = *(double *)&v26[1];
    sub_10002D7E8(v26);
    sub_10005C558(a1, v2, v10, v11);
    ArtworkView.image.setter(v12);
  }

  uint64_t v13 = *(void *)&v2[OBJC_IVAR____TtC6Arcade26TVLockupCollectionViewCell_lockupView];
  uint64_t v14 = OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView;
  uint64_t v15 = qword_1002DC478;
  uint64_t v16 = *(id *)(v13 + OBJC_IVAR____TtC6Arcade12TVLockupView_artworkView);
  if (v15 != -1) {
    swift_once(&qword_1002DC478, sub_10005BD8C);
  }
  uint64_t v17 = sub_1000031E8((uint64_t *)&unk_1002DE240);
  sub_1000061F4(v17, (uint64_t)qword_1002DFCA0);
  uint64_t v27 = v2;
  Conditional.evaluate(with:)(v26, &v27, v17);
  ArtworkView.borderColor.setter(v26[0]);

  uint64_t v18 = *(void **)(v13 + v14);
  if (a1 == 1)
  {
    uint64_t v19 = type metadata accessor for Shadow(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v7, 1LL, 1LL, v19);
    uint64_t v20 = v18;
  }

  else
  {
    __n128 v21 = qword_1002DC418;
    double v22 = v18;
    if (v21 != -1) {
      swift_once(&qword_1002DC418, sub_100046EC0);
    }
    char v23 = type metadata accessor for Shadow(0LL);
    char v24 = sub_1000061F4(v23, (uint64_t)qword_1002EE6F8);
    uint64_t v25 = *(void *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v7, v24, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v7, 0LL, 1LL, v23);
  }

  ArtworkView.shadow.setter(v7);
}

id sub_10005C4DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FamilyMemberCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005C514()
{
  return type metadata accessor for FamilyMemberCollectionViewCell(0LL);
}

uint64_t type metadata accessor for FamilyMemberCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DFCE0;
  if (!qword_1002DFCE0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FamilyMemberCollectionViewCell);
  }
  return result;
}

void sub_10005C558(char a1, void *a2, double a3, double a4)
{
  id v8 = objc_msgSend(objc_allocWithZone(UIGraphicsImageRenderer), "initWithSize:", a3, a4);
  uint64_t v9 = swift_allocObject(&unk_100282C78, 48LL, 7LL);
  *(_BYTE *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(double *)(v9 + 32) = a3;
  *(double *)(v9 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = a4;
  uint64_t v10 = swift_allocObject(&unk_100282CA0, 32LL, 7LL);
  *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10005C6F8;
  *(void *)(v10 + 24) = v9;
  v14[4] = sub_10005C718;
  uint64_t v15 = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256LL;
  _OWORD v14[2] = sub_1001770E0;
  v14[3] = &unk_100282CB8;
  uint64_t v11 = _Block_copy(v14);
  uint64_t v12 = v15;
  id v13 = a2;
  swift_retain(v10);
  objc_msgSend(v8, "imageWithActions:", v11, swift_release(v12).n128_f64[0]);

  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(v10, "", 135LL, 171LL, 31LL, 1LL);
  swift_release(v9);
  swift_release(v10);
}

uint64_t sub_10005C6D4()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_10005C6F8(void *a1)
{
}

uint64_t sub_10005C708()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10005C718(uint64_t a1)
{
  return sub_1001770C0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10005C720(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C730(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10005C73C()
{
  return 16LL;
}

__n128 sub_10005C748(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10005C758()
{
  return 16LL;
}

__n128 sub_10005C764(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

id sub_10005C770(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  *(void *)&v3[OBJC_IVAR____TtC6Arcade18AvatarShowcaseView_artworkLoader] = 0LL;
  *(void *)&v3[OBJC_IVAR____TtC6Arcade18AvatarShowcaseView_maxPlayersToShow] = a1;
  uint64_t v6 = &v3[OBJC_IVAR____TtC6Arcade18AvatarShowcaseView_layoutConfiguration];
  uint64_t v7 = type metadata accessor for AvatarShowcaseLayoutConfiguration(0LL, a2);
  uint64_t v8 = *(void *)(v7 - 8);
  v9.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  double v10 = AvatarShowcaseLayoutConfiguration.visibleWidth.getter(v9) * (double)a1;
  uint64_t v11 = AvatarShowcaseLayoutConfiguration.overlappedWidth.getter();
  double v13 = v10 + v12;
  double v14 = AvatarShowcaseLayoutConfiguration.width.getter(v11);
  v20.receiver = v3;
  v20.super_class = (Class)type metadata accessor for AvatarShowcaseView(0LL);
  id v15 = objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, v13, v14);
  uint64_t v16 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v17 = v15;
  id v18 = [v16 clearColor];
  [v17 setBackgroundColor:v18];

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return v17;
}

void sub_10005C920(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1000031E8(&qword_1002DFCF0);
  __chkstk_darwin(v6);
  uint64_t v70 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for CornerStyle(0LL);
  uint64_t v71 = *(void *)(v8 - 8);
  uint64_t v72 = v8;
  __chkstk_darwin(v8);
  double v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10005CF04();
  swift_retain(a2);
  sub_10005D1D8(v11);
  uint64_t v69 = a2;
  __n128 v12 = swift_release(a2);
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
LABEL_3:
  if (*(void *)&v3[OBJC_IVAR____TtC6Arcade18AvatarShowcaseView_maxPlayersToShow] >= v13) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = *(void *)&v3[OBJC_IVAR____TtC6Arcade18AvatarShowcaseView_maxPlayersToShow];
  }
  double v15 = AvatarShowcaseLayoutConfiguration.visibleWidth.getter(v12) * (double)v14;
  double v16 = v15 + AvatarShowcaseLayoutConfiguration.overlappedWidth.getter();
  [v3 frame];
  double v18 = v17;
  double v20 = v19;
  [v3 frame];
  objc_msgSend(v3, "setFrame:", v18, v20, v16);
  if (v14 < 0)
  {
    __break(1u);
LABEL_57:
    __break(1u);
    return;
  }

  if (v14)
  {
    unint64_t v66 = a1 & 0xC000000000000001LL;
    if ((a1 & 0xC000000000000001LL) != 0 || (unint64_t)(v14 - 1) < *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      uint64_t v21 = type metadata accessor for ArtworkView(0LL);
      uint64_t v68 = sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
      uint64_t v22 = 0LL;
      unsigned int v67 = enum case for CornerStyle.arc(_:);
      uint64_t v64 = v14;
      uint64_t v65 = a1;
      while (1)
      {
        uint64_t v32 = v21;
        uint64_t v33 = (void *)static ArtworkView.plainArtworkView.getter();
        double v34 = ((double (*)(void))AvatarShowcaseLayoutConfiguration.width.getter)();
        double v35 = (v34 - AvatarShowcaseLayoutConfiguration.overlappedWidth.getter()) * (double)v22;
        double v36 = ((double (*)(void))AvatarShowcaseLayoutConfiguration.width.getter)();
        objc_msgSend( v33,  "setFrame:",  v35,  0.0,  v36,  ((double (*)(void))AvatarShowcaseLayoutConfiguration.width.getter)());
        uint64_t v37 = ArtworkView.roundedCorners.setter(-1LL);
        uint64_t v38 = static UIColor.placeholderBackground.getter(v37);
        uint64_t v39 = ArtworkView.backgroundColor.setter(v38);
        double v40 = floor(AvatarShowcaseLayoutConfiguration.width.getter(v39) * 0.5);
        uint64_t v42 = v71;
        uint64_t v41 = v72;
        (*(void (**)(char *, void, uint64_t))(v71 + 104))(v10, v67, v72);
        ArtworkView.setCorner(radius:style:)(v10, v40);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v41);
        if (qword_1002DC428 != -1) {
          swift_once(&qword_1002DC428, sub_100046FC8);
        }
        uint64_t v43 = type metadata accessor for Shadow(0LL);
        uint64_t v44 = sub_1000061F4(v43, (uint64_t)qword_1002EE728);
        uint64_t v45 = *(void *)(v43 - 8);
        double v46 = v70;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v70, v44, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v46, 0LL, 1LL, v43);
        ArtworkView.shadow.setter(v46);
        id v47 = [v3 traitCollection];
        LOBYTE(v45) = UITraitCollection.prefersRightToLeftLayouts.getter();

        id v48 = [v3 subviews];
        uint64_t v49 = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
        uint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, v49);

        unint64_t v51 = (unint64_t)v50 >> 62;
        if ((v45 & 1) != 0)
        {
          if (v51)
          {
            if (v50 < 0) {
              uint64_t v59 = v50;
            }
            else {
              uint64_t v59 = v50 & 0xFFFFFFFFFFFFFF8LL;
            }
            swift_bridgeObjectRetain(v50);
            uint64_t v52 = _CocoaArrayWrapper.endIndex.getter(v59);
            swift_bridgeObjectRelease(v50);
            if (!v52) {
              goto LABEL_11;
            }
          }

          else
          {
            uint64_t v52 = *(void *)((v50 & 0xFFFFFFFFFFFFF8LL) + 0x10);
            if (!v52) {
              goto LABEL_11;
            }
          }

          unint64_t v53 = v52 - 1;
          if (__OFSUB__(v52, 1LL))
          {
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            if (a1 < 0) {
              uint64_t v62 = a1;
            }
            else {
              uint64_t v62 = a1 & 0xFFFFFFFFFFFFFF8LL;
            }
            swift_bridgeObjectRetain(a1);
            uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v62);
            __n128 v12 = swift_bridgeObjectRelease(a1);
            goto LABEL_3;
          }

          if ((v50 & 0xC000000000000001LL) == 0)
          {
            if ((v53 & 0x8000000000000000LL) != 0) {
              goto LABEL_49;
            }
            if (v53 >= *(void *)((v50 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
              goto LABEL_50;
            }
            uint64_t v54 = *(void **)(v50 + 8 * v53 + 32);
            goto LABEL_29;
          }
        }

        else
        {
          if (v51)
          {
            if (v50 < 0) {
              uint64_t v60 = v50;
            }
            else {
              uint64_t v60 = v50 & 0xFFFFFFFFFFFFFF8LL;
            }
            swift_bridgeObjectRetain(v50);
            uint64_t v61 = _CocoaArrayWrapper.endIndex.getter(v60);
            swift_bridgeObjectRelease(v50);
            if (!v61)
            {
LABEL_11:
              objc_msgSend(v3, "addSubview:", v33, swift_bridgeObjectRelease(v50).n128_f64[0]);
              id v23 = 0LL;
              if (!v66) {
                goto LABEL_34;
              }
              goto LABEL_12;
            }
          }

          else if (!*(void *)((v50 & 0xFFFFFFFFFFFFF8LL) + 0x10))
          {
            goto LABEL_11;
          }

          if ((v50 & 0xC000000000000001LL) == 0)
          {
            if (!*(void *)((v50 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
              goto LABEL_51;
            }
            uint64_t v54 = *(void **)(v50 + 32);
LABEL_29:
            id v55 = v54;
            goto LABEL_30;
          }

          unint64_t v53 = 0LL;
        }

        id v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v53, v50);
LABEL_30:
        objc_super v56 = v55;
        swift_bridgeObjectRelease(v50);
        id v23 = v56;
        id v57 = [v3 traitCollection];
        char v58 = UITraitCollection.prefersRightToLeftLayouts.getter();

        if ((v58 & 1) != 0) {
          [v3 insertSubview:v33 aboveSubview:v23];
        }
        else {
          [v3 insertSubview:v33 belowSubview:v23];
        }

        if (!v66)
        {
LABEL_34:
          uint64_t v25 = *(void *)(a1 + 8 * v22 + 32);
          swift_retain(v25);
          goto LABEL_13;
        }

void sub_10005CF04()
{
  id v1 = [v0 subviews];
  uint64_t v2 = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease(v3);
    return;
  }

  if (v3 < 0) {
    uint64_t v8 = v3;
  }
  else {
    uint64_t v8 = v3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v3);
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v3);
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0LL; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001LL) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      }
      else {
        id v6 = *(id *)(v3 + 8 * i + 32);
      }
      uint64_t v7 = v6;
      [v6 removeFromSuperview];
    }

    goto LABEL_13;
  }

  __break(1u);
}

id sub_10005D044()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AvatarShowcaseView(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005D0C8()
{
  return type metadata accessor for AvatarShowcaseView(0LL);
}

uint64_t type metadata accessor for AvatarShowcaseView(uint64_t a1)
{
  uint64_t result = qword_1002DFD28;
  if (!qword_1002DFD28) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AvatarShowcaseView);
  }
  return result;
}

uint64_t sub_10005D10C(uint64_t a1, uint64_t a2)
{
  v5[0] = (char *)&value witness table for Builtin.Int64 + 64;
  uint64_t result = type metadata accessor for AvatarShowcaseLayoutConfiguration(319LL, a2);
  if (v4 <= 0x3F)
  {
    v5[1] = *(void *)(result - 8) + 64LL;
    v5[2] = "\b";
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 3LL, v5, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

id sub_10005D190(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for AvatarShowcaseView(0LL));
  return sub_10005C770(a1, a2);
}

void sub_10005D1D8(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC6Arcade18AvatarShowcaseView_artworkLoader;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6Arcade18AvatarShowcaseView_artworkLoader];
  *(void *)&v2[OBJC_IVAR____TtC6Arcade18AvatarShowcaseView_artworkLoader] = a1;
  swift_retain(a1);
  swift_release(v4);
  uint64_t v5 = *(void *)&v2[v3];
  if (!v5) {
    return;
  }
  id v6 = objc_msgSend(v2, "subviews", swift_retain(*(void *)&v2[v3]).n128_f64[0]);
  uint64_t v7 = sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0) {
      uint64_t v17 = v8;
    }
    else {
      uint64_t v17 = v8 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v8);
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v8);
    if (v9) {
      goto LABEL_4;
    }
LABEL_17:
    swift_release(v5);
    swift_bridgeObjectRelease(v8);
    return;
  }

  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v9) {
    goto LABEL_17;
  }
LABEL_4:
  if (v9 >= 1)
  {
    for (uint64_t i = 0LL; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001LL) != 0) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
      }
      else {
        id v11 = *(id *)(v8 + 8 * i + 32);
      }
      __n128 v12 = v11;
      uint64_t v13 = type metadata accessor for ArtworkView(0LL);
      uint64_t v14 = swift_dynamicCastClass(v12, v13);
      if (v14)
      {
        uint64_t v15 = v14;
        unint64_t v16 = sub_10005D36C();
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v15, 1LL, v13, v16);
      }
    }

    goto LABEL_17;
  }

  __break(1u);
}

unint64_t sub_10005D36C()
{
  unint64_t result = qword_1002DE5E0;
  if (!qword_1002DE5E0)
  {
    uint64_t v1 = type metadata accessor for ArtworkView(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ArtworkView, v1);
    atomic_store(result, (unint64_t *)&qword_1002DE5E0);
  }

  return result;
}

double sub_10005D3B4()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC7B8 != -1) {
    swift_once(&qword_1002DC7B8, sub_100071AC8);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_1000061F4(v5, (uint64_t)qword_1002EF378);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL);
  v7(v4, v6, v5);
  uint64_t v8 = enum case for FontSource.useCase(_:);
  uint64_t v9 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v9(v4, enum case for FontSource.useCase(_:), v0);
  uint64_t v10 = type metadata accessor for StaticDimension(0LL);
  uint64_t v32 = v10;
  uint64_t v33 = &protocol witness table for StaticDimension;
  sub_100009D54(&v31);
  uint64_t v29 = v0;
  uint64_t v30 = &protocol witness table for FontSource;
  id v11 = sub_100009D54(&v28);
  __n128 v12 = (void (*)(void *, char *, uint64_t))v1[2];
  v12(v11, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v28, 48.0);
  uint64_t v13 = (void (*)(char *, uint64_t))v1[1];
  v13(v4, v0);
  if (qword_1002DC7D8 != -1) {
    swift_once(&qword_1002DC7D8, sub_100071B28);
  }
  uint64_t v14 = sub_1000061F4(v5, (uint64_t)qword_1002EF3D8);
  v7(v4, v14, v5);
  v9(v4, v8, v0);
  uint64_t v29 = v10;
  uint64_t v30 = &protocol witness table for StaticDimension;
  sub_100009D54(&v28);
  uint64_t v26 = v0;
  uint64_t v27 = &protocol witness table for FontSource;
  uint64_t v15 = sub_100009D54(&v25);
  v12(v15, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v25, 66.0);
  v13(v4, v0);
  if (qword_1002DC7C0 != -1) {
    swift_once(&qword_1002DC7C0, sub_100071AE0);
  }
  uint64_t v16 = sub_1000061F4(v5, (uint64_t)qword_1002EF390);
  v7(v4, v16, v5);
  v9(v4, v8, v0);
  uint64_t v26 = v10;
  uint64_t v27 = &protocol witness table for StaticDimension;
  sub_100009D54(&v25);
  uint64_t v23 = v0;
  uint64_t v24 = &protocol witness table for FontSource;
  uint64_t v17 = sub_100009D54(&v22);
  v12(v17, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v22, 28.0);
  v13(v4, v0);
  if (qword_1002DC7C8 != -1) {
    swift_once(&qword_1002DC7C8, sub_100071AF8);
  }
  uint64_t v18 = sub_1000061F4(v5, (uint64_t)qword_1002EF3A8);
  v7(v4, v18, v5);
  v9(v4, v8, v0);
  uint64_t v23 = v10;
  uint64_t v24 = &protocol witness table for StaticDimension;
  sub_100009D54(&v22);
  v21[3] = v0;
  v21[4] = &protocol witness table for FontSource;
  double v19 = sub_100009D54(v21);
  v12(v19, v4, v0);
  StaticDimension.init(_:scaledLike:)(v21, 60.0);
  v13(v4, v0);
  qword_1002EE908 = (uint64_t)&type metadata for Double;
  unk_1002EE910 = &protocol witness table for Double;
  qword_1002EE8F0 = 0LL;
  qword_1002EE930 = (uint64_t)&type metadata for Double;
  unk_1002EE938 = &protocol witness table for Double;
  qword_1002EE918 = 0LL;
  qword_1002EE958 = (uint64_t)&type metadata for Double;
  unk_1002EE960 = &protocol witness table for Double;
  qword_1002EE940 = 0x4042800000000000LL;
  sub_100009D90(&v31, (uint64_t)&unk_1002EE850);
  sub_100009D90(&v28, (uint64_t)&unk_1002EE878);
  sub_100009D90(&v25, (uint64_t)&unk_1002EE8A0);
  sub_100009D90(&v22, (uint64_t)&unk_1002EE8C8);
  double result = 0.0;
  xmmword_1002EE968 = xmmword_1002359C0;
  unk_1002EE978 = xmmword_1002359C0;
  return result;
}

char *sub_10005D7B4(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v12 = type metadata accessor for FontUseCase(0LL, v11);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = (uint64_t)v4 + OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_metrics;
  uint64_t v17 = qword_1002DC480;
  uint64_t v18 = v5;
  if (v17 != -1) {
    swift_once(&qword_1002DC480, sub_10005D3B4);
  }
  sub_10005E500((uint64_t)&unk_1002EE850, v16);
  double v19 = &v18[OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_itemLayoutContext];
  uint64_t v20 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v19, 1LL, 1LL, v20);
  uint64_t v21 = OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_titleLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002DC7B8 != -1) {
    swift_once(&qword_1002DC7B8, sub_100071AC8);
  }
  uint64_t v22 = sub_1000061F4(v12, (uint64_t)qword_1002EF378);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v23(v15, v22, v12);
  *(void *)&v18[v21] = sub_1000137B8((uint64_t)v15, 1LL, 0LL, 1, 1);
  uint64_t v24 = OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_subtitleLabel;
  if (qword_1002DC7C0 != -1) {
    swift_once(&qword_1002DC7C0, sub_100071AE0);
  }
  uint64_t v25 = sub_1000061F4(v12, (uint64_t)qword_1002EF390);
  v23(v15, v25, v12);
  *(void *)&v18[v24] = sub_1000137B8((uint64_t)v15, 1LL, 0LL, 1, 1);
  uint64_t v26 = OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_bodyTextView;
  type metadata accessor for CollapsedTextView();
  if (qword_1002DC7C8 != -1) {
    swift_once(&qword_1002DC7C8, sub_100071AF8);
  }
  uint64_t v27 = sub_1000061F4(v12, (uint64_t)qword_1002EF3A8);
  v23(v15, v27, v12);
  *(void *)&v18[v26] = sub_10000DD98((uint64_t)v15);
  *(void *)&v18[OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_editorsChoiceView] = 0LL;
  __int128 v28 = &v18[OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_actionClosure];
  *(void *)__int128 v28 = 0LL;
  *((void *)v28 + 1) = 0LL;

  v50.receiver = v18;
  v50.super_class = ObjectType;
  uint64_t v29 = (char *)objc_msgSendSuper2(&v50, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v30 = OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_bodyTextView;
  __int128 v31 = *(char **)&v29[OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_bodyTextView];
  uint64_t v32 = *(void **)&v31[OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel];
  uint64_t v33 = v29;
  double v34 = v31;
  id v35 = [v32 textContainer];
  [v35 setMaximumNumberOfLines:5];

  uint64_t v36 = OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_titleLabel;
  uint64_t v37 = *(void **)&v33[OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_titleLabel];
  sub_100006028(0LL, (unint64_t *)&qword_1002DE940, &OBJC_CLASS___UIColor_ptr);
  id v38 = v37;
  uint64_t v39 = (void *)static UIColor.primaryText.getter();
  [v38 setTextColor:v39];

  id v40 = [v33 contentView];
  [v40 addSubview:*(void *)&v33[v36]];

  uint64_t v41 = OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_subtitleLabel;
  id v42 = *(id *)&v33[OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_subtitleLabel];
  uint64_t v43 = (void *)static UIColor.secondaryText.getter(v42);
  [v42 setTextColor:v43];

  id v44 = [v33 contentView];
  [v44 addSubview:*(void *)&v33[v41]];

  uint64_t v45 = (char *)*(id *)&v29[v30];
  double v46 = (void *)static UIColor.primaryText.getter();
  [*(id *)&v45[OBJC_IVAR____TtC6Arcade17CollapsedTextView_textLabel] setTextColor:v46];

  id v47 = [v33 contentView];
  id v48 = *(id *)&v29[v30];
  [v47 addSubview:v48];

  return v33;
}

void *sub_10005DC3C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for FontSource(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = __chkstk_darwin(v5).n128_u64[0];
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v61.receiver = v1;
  v61.super_class = ObjectType;
  objc_msgSendSuper2(&v61, "layoutSubviews", v7);
  if (qword_1002DC480 != -1) {
    swift_once(&qword_1002DC480, sub_10005D3B4);
  }
  sub_10005E500((uint64_t)&unk_1002EE850, (uint64_t)v57);
  id v10 = [v1 traitCollection];
  double v11 = sub_10005E37C(5LL, (uint64_t)v10);

  uint64_t v45 = &type metadata for CGFloat;
  double v46 = &protocol witness table for CGFloat;
  *(double *)&__int128 v44 = v11;
  _s6Arcade17PillOverlayLayoutVwxx_0(v60);
  sub_100009D90(&v44, (uint64_t)v60);
  id v12 = [v1 traitCollection];
  sub_100006028(0LL, (unint64_t *)&qword_1002E0470, &OBJC_CLASS___UIFont_ptr);
  if (qword_1002DC7C8 != -1) {
    swift_once(&qword_1002DC7C8, sub_100071AF8);
  }
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = sub_1000061F4(v14, (uint64_t)qword_1002EF3A8);
  uint64_t v16 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v15, v12);
  double v17 = UIFont.estimatedFirstBaseline.getter();

  uint64_t v45 = &type metadata for CGFloat;
  double v46 = &protocol witness table for CGFloat;
  *(double *)&__int128 v44 = v17;
  _s6Arcade17PillOverlayLayoutVwxx_0(v59);
  sub_100009D90(&v44, (uint64_t)v59);
  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_subtitleLabel];
  if (objc_msgSend(v18, "jet_isTextExtraTall"))
  {
    if (qword_1002DC7C0 != -1) {
      swift_once(&qword_1002DC7C0, sub_100071AE0);
    }
    uint64_t v19 = sub_1000061F4(v14, (uint64_t)qword_1002EF390);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16LL))(v9, v19, v14);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for FontSource.useCase(_:), v5);
    uint64_t v45 = (void *)type metadata accessor for StaticDimension(0LL);
    double v46 = &protocol witness table for StaticDimension;
    sub_100009D54(&v44);
    v43[3] = v5;
    v43[4] = &protocol witness table for FontSource;
    uint64_t v20 = sub_100009D54(v43);
    (*(void (**)(void *, char *, uint64_t))(v6 + 16))(v20, v9, v5);
    StaticDimension.init(_:scaledLike:)(v43, 32.0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    _s6Arcade17PillOverlayLayoutVwxx_0(v58);
    sub_100009D90(&v44, (uint64_t)v58);
  }

  sub_10005E500((uint64_t)v57, (uint64_t)v43);
  uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_editorsChoiceView];
  if (v21)
  {
    *((void *)&v41 + 1) = type metadata accessor for EditorsChoiceView();
    id v42 = protocol witness table for UIView;
    *(void *)&__int128 v40 = v21;
  }

  else
  {
    id v42 = 0LL;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
  }

  uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_titleLabel];
  uint64_t v48 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v49 = &protocol witness table for UILabel;
  id v47 = v22;
  uint64_t v51 = v48;
  uint64_t v52 = &protocol witness table for UILabel;
  objc_super v50 = v18;
  uint64_t v23 = *(void **)&v1[OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_bodyTextView];
  uint64_t v24 = type metadata accessor for CollapsedTextView();
  id v55 = protocol witness table for UIView;
  uint64_t v54 = v24;
  unint64_t v53 = v23;
  memcpy(v56, v43, sizeof(v56));
  sub_10005E53C((uint64_t)&v40, (uint64_t)&v44);
  id v25 = v21;
  id v26 = v22;
  id v27 = v18;
  id v28 = v23;
  id v29 = [v1 contentView];
  [v29 frame];

  *(void *)&double v30 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  __int128 v31 = v37;
  TextCardLayout.placeChildren(relativeTo:in:)((uint64_t)v1, v30, v32, v33, v34);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v39);
  sub_10005E584(&v44);
  return sub_10005E4CC(v57);
}

void sub_10005E100(uint64_t a1, void *a2)
{
  int v3 = a1;
  sub_10006734C(a1, a2);
  if (v3 == 2)
  {
    uint64_t v4 = *(void (**)(__n128))(v2 + OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_actionClosure);
    if (v4)
    {
      uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_actionClosure + 8);
      __n128 v6 = swift_retain(v5);
      v4(v6);
      sub_10000D3D8((uint64_t)v4, v5);
    }
  }

uint64_t sub_10005E190()
{
  return sub_10000D3D8( *(void *)(v0 + OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_actionClosure),  *(void *)(v0 + OBJC_IVAR____TtC6Arcade26TextCardCollectionViewCell_actionClosure + 8));
}

uint64_t sub_10005E29C()
{
  return type metadata accessor for TextCardCollectionViewCell(0LL);
}

uint64_t type metadata accessor for TextCardCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DFD68;
  if (!qword_1002DFD68) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TextCardCollectionViewCell);
  }
  return result;
}

void sub_10005E2E0(uint64_t a1)
{
  v4[0] = &unk_100235A00;
  sub_10000A9D8(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    void v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[5] = &unk_100235A18;
    v4[6] = &unk_100235A30;
    swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 472);
  }

double sub_10005E37C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = static Locale.storefront.getter(v6);
  double v10 = Locale.paragraphLineHeightMultiple.getter(v9);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_100006028(0LL, (unint64_t *)&qword_1002E0470, &OBJC_CLASS___UIFont_ptr);
  if (qword_1002DC7C8 != -1) {
    swift_once(&qword_1002DC7C8, sub_100071AF8);
  }
  if (v10 <= 0.0) {
    double v12 = 1.0;
  }
  else {
    double v12 = v10;
  }
  uint64_t v13 = type metadata accessor for FontUseCase(0LL, v11);
  uint64_t v14 = sub_1000061F4(v13, (uint64_t)qword_1002EF3A8);
  uint64_t v15 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v14, a2);
  [v15 lineHeight];
  double v17 = v12 * (v16 * (double)a1);
  [v15 leading];
  double v19 = v18;

  return v17 + v12 * (((double)a1 + -1.0) * v19);
}

void *sub_10005E4CC(void *a1)
{
  return a1;
}

uint64_t sub_10005E500(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10005E53C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002E2020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void *sub_10005E584(void *a1)
{
  return a1;
}

uint64_t sub_10005E5B8(uint64_t a1)
{
  return sub_10005E5D8(0.0, a1, qword_1002EE9B8);
}

uint64_t sub_10005E5C8(uint64_t a1)
{
  return sub_10005E5D8(17.0, a1, qword_1002EE9D0);
}

uint64_t sub_10005E5D8(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = type metadata accessor for FontSource(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (UIFontTextStyle *)((char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = type metadata accessor for StaticDimension(0LL);
  sub_10000FF90(v9, a3);
  sub_1000061F4(v9, (uint64_t)a3);
  *uint64_t v8 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, void, uint64_t))(v6 + 104))( v8,  enum case for FontSource.textStyle(_:),  v5);
  v14[3] = v5;
  v14[4] = &protocol witness table for FontSource;
  double v10 = sub_100009D54(v14);
  (*(void (**)(void *, UIFontTextStyle *, uint64_t))(v6 + 16))(v10, v8, v5);
  uint64_t v11 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v14, a1);
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v6 + 8))(v8, v5);
}

char *sub_10005E6E8(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  double v10 = &v4[OBJC_IVAR____TtC6Arcade30ProductMediaCollectionViewCell_itemLayoutContext];
  uint64_t v11 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v10, 1LL, 1LL, v11);
  *(void *)&v4[OBJC_IVAR____TtC6Arcade30ProductMediaCollectionViewCell_bottomAccessoryView] = 0LL;
  id v12 = objc_allocWithZone((Class)type metadata accessor for ProductMediaCollectionView());
  uint64_t v13 = v4;
  id v14 = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v13[OBJC_IVAR____TtC6Arcade30ProductMediaCollectionViewCell_mediaCollectionView] = v14;

  v22.receiver = v13;
  v22.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  [v15 setClipsToBounds:0];
  id v16 = [v15 contentView];
  [v16 setInsetsLayoutMarginsFromSafeArea:0];

  id v17 = [v15 contentView];
  [v17 _setSafeAreaInsetsFrozen:1];

  id v18 = [v15 contentView];
  objc_msgSend( v18,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  id v19 = [v15 contentView];
  id v20 = *(id *)&v15[OBJC_IVAR____TtC6Arcade30ProductMediaCollectionViewCell_mediaCollectionView];
  [v19 addSubview:v20];

  return v15;
}

id sub_10005E900()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v31.receiver = v1;
  v31.super_class = ObjectType;
  objc_msgSendSuper2(&v31, "layoutSubviews", v5);
  uint64_t v8 = OBJC_IVAR____TtC6Arcade30ProductMediaCollectionViewCell_bottomAccessoryView;
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30ProductMediaCollectionViewCell_bottomAccessoryView];
  if (v9)
  {
    id v10 = v9;
    [v10 frame];
    double v30 = v11;
    double v13 = v12;
    if (qword_1002DC488 != -1) {
      swift_once(&qword_1002DC488, sub_10005E5B8);
    }
    uint64_t v14 = type metadata accessor for StaticDimension(0LL);
    uint64_t v15 = sub_1000061F4(v14, (uint64_t)qword_1002EE9B8);
    static Dimensions.defaultRoundingRule.getter(v15);
    double v16 = AnyDimension.value(in:rounded:)(v1, v7, v14, &protocol witness table for StaticDimension);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }

  else
  {
    double v16 = 0.0;
    double v13 = 0.0;
    double v30 = 0.0;
  }

  id v17 = [v1 contentView];
  [v17 frame];

  *(void *)&v32.origin.CGFloat x = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  double MinX = CGRectGetMinX(v32);
  id v19 = [v1 contentView];
  [v19 frame];

  *(void *)&v33.origin.CGFloat x = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  double MinY = CGRectGetMinY(v33);
  id v21 = [v1 contentView];
  [v21 frame];

  *(void *)&v34.origin.CGFloat x = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  double Width = CGRectGetWidth(v34);
  id v23 = [v1 contentView];
  [v23 frame];

  *(void *)&v35.origin.CGFloat x = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  CGFloat v24 = CGRectGetHeight(v35) - (v16 + v13);
  id v25 = [v1 contentView];
  [v25 frame];

  *(void *)&v36.origin.CGFloat x = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  double v26 = CGRectGetMinX(v36);
  v37.origin.CGFloat x = MinX;
  v37.origin.CGFloat y = MinY;
  v37.size.double width = Width;
  v37.size.double height = v24;
  double MaxY = CGRectGetMaxY(v37);
  objc_msgSend( *(id *)&v1[OBJC_IVAR____TtC6Arcade30ProductMediaCollectionViewCell_mediaCollectionView],  "setFrame:",  MinX,  MinY,  Width,  v24);
  id result = *(id *)&v1[v8];
  if (result) {
    return objc_msgSend(result, "setFrame:", v26, v16 + MaxY, v30, v13);
  }
  return result;
}

void sub_10005ED18(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  int v6 = a1;
  uint64_t v7 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10006734C(a1, a2);
  if (v6)
  {
    if (qword_1002DC490 != -1) {
      swift_once(&qword_1002DC490, sub_10005E5C8);
    }
    uint64_t v11 = type metadata accessor for StaticDimension(0LL);
    uint64_t v12 = sub_1000061F4(v11, (uint64_t)qword_1002EE9D0);
    static Dimensions.defaultRoundingRule.getter(v12);
    CGFloat v13 = AnyDimension.value(in:rounded:)(v3, v10, v11, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    CGAffineTransformMakeTranslation(&aBlock, 0.0, v13);
    double a = aBlock.a;
    CGFloat b = aBlock.b;
    CGFloat c = aBlock.c;
    double d = aBlock.d;
    tCGFloat x = aBlock.tx;
    tCGFloat y = aBlock.ty;
  }

  else
  {
    double d = 1.0;
    tCGFloat y = 0.0;
    tCGFloat x = 0.0;
    CGFloat c = 0.0;
    CGFloat b = 0.0;
    double a = 1.0;
  }

  id v20 = *(void **)(v3 + OBJC_IVAR____TtC6Arcade30ProductMediaCollectionViewCell_bottomAccessoryView);
  if (a2)
  {
    if (v20)
    {
      id v21 = (double *)swift_allocObject(&unk_100282D48, 80LL, 7LL);
      *((void *)v21 + 2) = a2;
      *((void *)v21 + 3) = v20;
      v21[4] = a;
      void v21[5] = b;
      v21[6] = c;
      v21[7] = d;
      v21[8] = tx;
      v21[9] = ty;
      *(void *)&aBlock.tCGFloat x = sub_10005F714;
      *(void *)&aBlock.tCGFloat y = v21;
      *(void *)&aBlock.double a = _NSConcreteStackBlock;
      *(void *)&aBlock.CGFloat b = 1107296256LL;
      *(void *)&aBlock.CGFloat c = sub_100135408;
      *(void *)&aBlock.double d = &unk_100282D60;
      objc_super v22 = _Block_copy(&aBlock);
      CGFloat v23 = aBlock.ty;
      id v24 = a2;
      id v25 = v20;
      id v26 = v24;
      id v27 = v25;
      objc_msgSend(v26, "addCoordinatedAnimations:completion:", v22, 0, swift_release(*(void *)&v23).n128_f64[0]);
      _Block_release(v22);
    }
  }

  else if (v20)
  {
    aBlock.double a = a;
    aBlock.CGFloat b = b;
    aBlock.CGFloat c = c;
    aBlock.double d = d;
    aBlock.tCGFloat x = tx;
    aBlock.tCGFloat y = ty;
    [v20 setTransform:&aBlock];
  }

void sub_10005EF70(void *a1, void *a2, _OWORD *a3)
{
  int v6 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  [a1 _activeAnimationDuration];
  double v8 = v7;
  uint64_t v9 = swift_allocObject(&unk_100282D98, 72LL, 7LL);
  __int128 v10 = a3[1];
  *(_OWORD *)(v9 + 24) = *a3;
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  *(_OWORD *)(v9 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v10;
  *(_OWORD *)(v9 + 56) = a3[2];
  v14[4] = sub_10005F75C;
  uint64_t v15 = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256LL;
  _OWORD v14[2] = sub_100135408;
  v14[3] = &unk_100282DB0;
  uint64_t v11 = _Block_copy(v14);
  uint64_t v12 = v15;
  id v13 = a2;
  swift_release(v12);
  [v6 animateWithDuration:v11 animations:v8];
  _Block_release(v11);
}

void sub_10005F070(void *a1, void *a2)
{
  v14.receiver = v2;
  v14.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v14, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  id v5 = [a1 nextFocusedView];
  if (v5)
  {
    int v6 = v5;
    uint64_t v7 = type metadata accessor for VideoCollectionViewCell();
    uint64_t v8 = swift_dynamicCastClass(v6, v7);

    if (v8) {
      goto LABEL_5;
    }
  }

  id v9 = [a1 nextFocusedView];
  if (v9
    && (__int128 v10 = v9,
        uint64_t v11 = type metadata accessor for ScreenshotCollectionViewCell(),
        uint64_t v12 = swift_dynamicCastClass(v10, v11),
        v10,
        v12))
  {
LABEL_5:
    uint64_t v13 = 1LL;
  }

  else
  {
    uint64_t v13 = 0LL;
  }

  *((_BYTE *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state) = v13;
  sub_10005ED18(v13, a2);
}

void sub_10005F1D4()
{
}

uint64_t sub_10005F258()
{
  return type metadata accessor for ProductMediaCollectionViewCell(0LL);
}

uint64_t type metadata accessor for ProductMediaCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002DFDA0;
  if (!qword_1002DFDA0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductMediaCollectionViewCell);
  }
  return result;
}

void sub_10005F29C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[2] = "\b";
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 472);
  }

double sub_10005F320(double a1, double a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  double v13 = dbl_100235AA0[a5];
  double v14 = PageTraitEnvironment.pageContentSize.getter();
  double v15 = floor(AspectRatio.height(fromWidth:)((v14 + (v13 + -1.0) * -40.0) / v13));
  uint64_t v16 = sub_1000031E8(&qword_1002DE648);
  uint64_t inited = (char *)swift_initStackObject(v16, v33);
  *((_OWORD *)inited + 1) = xmmword_100233580;
  *((double *)inited + 4) = v15;
  if (a1 >= COERCE_DOUBLE(1LL))
  {
    if (qword_1002DC488 != -1) {
      swift_once(&qword_1002DC488, sub_10005E5B8);
    }
    uint64_t v19 = type metadata accessor for StaticDimension(0LL);
    sub_1000061F4(v19, (uint64_t)qword_1002EE9B8);
    static Dimensions.defaultRoundingRule.getter();
    double v20 = AnyDimension.value(in:rounded:)(a4, v12, v19, &protocol witness table for StaticDimension);
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    int64_t v21 = *((void *)inited + 2);
    int64_t v22 = v21 + 2;
    if (__OFADD__(v21, 2LL))
    {
      __break(1u);
    }

    else
    {
      unint64_t v23 = *((void *)inited + 3);
      unint64_t v24 = v23 >> 1;
    }

    if (v21 <= v22) {
      int64_t v30 = v21 + 2;
    }
    else {
      int64_t v30 = v21;
    }
    uint64_t inited = sub_10001A388((char *)1, v30, 1, inited);
    int64_t v21 = *((void *)inited + 2);
    unint64_t v23 = *((void *)inited + 3);
    unint64_t v24 = v23 >> 1;
LABEL_7:
    int64_t v25 = v21 + 1;
    if (v24 <= v21)
    {
      uint64_t inited = sub_10001A388((char *)(v23 > 1), v21 + 1, 1, inited);
      unint64_t v23 = *((void *)inited + 3);
      unint64_t v24 = v23 >> 1;
    }

    *((void *)inited + 2) = v25;
    *(double *)&inited[8 * v21 + 32] = a1;
    int64_t v26 = v21 + 2;
    *((void *)inited + 2) = v26;
    *(double *)&inited[8 * v25 + 32] = v20;
    unint64_t v18 = *((void *)inited + 2);
    if (!v18) {
      goto LABEL_25;
    }
    goto LABEL_12;
  }

  unint64_t v18 = 1LL;
LABEL_12:
  if (v18 >= 2)
  {
    uint64_t v29 = 0LL;
    uint64_t v27 = v18 & 0x7FFFFFFFFFFFFFFELL;
    double v28 = 0.0;
    do
    {
      double v28 = v28 + *(double *)&inited[8 * v29 + 32] + *(double *)&inited[8 * v29 + 40];
      v29 += 2LL;
    }

    while (v27 != v29);
    goto LABEL_24;
  }

  uint64_t v27 = 0LL;
  double v28 = 0.0;
  do
  {
    double v31 = *(double *)&inited[8 * v27++ + 32];
    double v28 = v28 + v31;
LABEL_24:
    ;
  }

  while (v18 != v27);
LABEL_25:
  swift_bridgeObjectRelease(inited);
  return a2;
}

id sub_10005F640(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6Arcade30ProductMediaCollectionViewCell_bottomAccessoryView;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC6Arcade30ProductMediaCollectionViewCell_bottomAccessoryView];
  if (v4)
  {
    [v4 removeFromSuperview];
    id v5 = *(void **)&v1[v3];
  }

  else
  {
    id v5 = 0LL;
  }

  *(void *)&v1[v3] = a1;
  id v6 = a1;

  uint64_t v7 = *(void **)&v1[v3];
  if (v7)
  {
    id v8 = v7;
    id v9 = [v1 contentView];
    [v9 addSubview:v8];
  }

  return [v1 setNeedsLayout];
}

uint64_t sub_10005F6E8()
{
  return swift_deallocObject(v0, 80LL, 7LL);
}

void sub_10005F714()
{
}

uint64_t sub_10005F720(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005F730(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10005F738()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

id sub_10005F75C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  __int128 v2 = *(_OWORD *)(v0 + 40);
  v4[0] = *(_OWORD *)(v0 + 24);
  v4[1] = v2;
  void v4[2] = *(_OWORD *)(v0 + 56);
  return [v1 setTransform:v4];
}

double sub_10005F7A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000031E8(&qword_1002DFEA8);
  __n128 v3 = __chkstk_darwin(v2);
  id v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((OfferAlertAction.shouldCheckForAvailableDiskSpace.getter(v3) & 1) == 0)
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t isUniquelyReferenced_nonNull_native = OfferAlertAction.checkRestrictionsForContentRating.getter();
    if ((v13 & 1) != 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }

  uint64_t v6 = swift_allocObject(&unk_100283078, 32LL, 7LL);
  *(void *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100061CF8;
  *(void *)(v6 + 24) = v0;
  swift_retain(v0);
  uint64_t v7 = sub_10001A954(0LL, 1LL, 1, _swiftEmptyArrayStorage);
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  if (v9 >= v8 >> 1) {
    uint64_t v7 = sub_10001A954((void *)(v8 > 1), v9 + 1, 1, v7);
  }
  void v7[2] = v9 + 1;
  uint64_t v10 = &v7[2 * v9];
  v10[4] = sub_100061D30;
  v10[5] = v6;
  uint64_t isUniquelyReferenced_nonNull_native = OfferAlertAction.checkRestrictionsForContentRating.getter();
  if ((v12 & 1) == 0)
  {
LABEL_7:
    uint64_t v14 = swift_allocObject(&unk_100283050, 32LL, 7LL);
    *(void *)(v14 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100061CF4;
    *(void *)(v14 + 24) = v0;
    swift_retain(v0);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_10001A954(0LL, v7[2] + 1LL, 1, v7);
      uint64_t v7 = (void *)isUniquelyReferenced_nonNull_native;
    }

    unint64_t v16 = v7[2];
    unint64_t v15 = v7[3];
    if (v16 >= v15 >> 1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_10001A954((void *)(v15 > 1), v16 + 1, 1, v7);
      uint64_t v7 = (void *)isUniquelyReferenced_nonNull_native;
    }

    void v7[2] = v16 + 1;
    id v17 = &v7[2 * v16];
    v17[4] = sub_100061D30;
    v17[5] = v14;
  }

double sub_10005FBD8(uint64_t *a1, void (*a2)(uint64_t (*)(), uint64_t, __n128))
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject(&unk_1002830A0, 32LL, 7LL);
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  __n128 v6 = swift_retain(v3);
  a2(sub_100061B54, v5, v6);
  *(void *)&double result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_10005FC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  unint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for ActionRunner.Origin.userInitiated(_:),  v5);
  dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a3, a2 + 80, v8, *(void *)(a2 + 16));
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10005FD00(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 1 != a3)
  {
    if ((uint64_t)(a4 >> 1) <= a3)
    {
      __break(1u);
    }

    else
    {
      uint64_t v7 = result;
      uint64_t v8 = a2 + 16 * a3;
      uint64_t v10 = *(void (**)(void *))v8;
      uint64_t v9 = *(void *)(v8 + 8);
      uint64_t v11 = a3 + 1;
      char v12 = (void *)swift_allocObject(&unk_100282F38, 56LL, 7LL);
      _OWORD v12[2] = v4;
      v12[3] = v7;
      v12[4] = a2;
      v12[5] = v11;
      v12[6] = a4;
      uint64_t v13 = swift_allocObject(&unk_100282F60, 32LL, 7LL);
      *(void *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100061C64;
      *(void *)(v13 + 24) = v12;
      v14[0] = sub_100061D34;
      v14[1] = v13;
      swift_unknownObjectRetain_n(v7, 2LL);
      swift_retain(v9);
      swift_retain(v4);
      swift_retain(v12);
      v10(v14);
      swift_unknownObjectRelease(v7);
      swift_release(v9);
      swift_release(v12);
      return swift_release(v13);
    }
  }

  return result;
}

uint64_t sub_10005FE08(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a5 >> 1 != a4)
  {
    if ((uint64_t)(a5 >> 1) <= a4)
    {
      __break(1u);
    }

    else
    {
      v17[10] = v5;
      v17[11] = v6;
      uint64_t v10 = result;
      uint64_t v11 = a3 + 16 * a4;
      uint64_t v13 = *(void (**)(void *))v11;
      uint64_t v12 = *(void *)(v11 + 8);
      uint64_t v14 = a4 + 1;
      unint64_t v15 = (void *)swift_allocObject(&unk_100282F88, 56LL, 7LL);
      _OWORD v15[2] = v10;
      v15[3] = a2;
      v15[4] = a3;
      void v15[5] = v14;
      void v15[6] = a5;
      uint64_t v16 = swift_allocObject(&unk_100282FB0, 32LL, 7LL);
      *(void *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100061C64;
      *(void *)(v16 + 24) = v15;
      v17[0] = sub_100061D34;
      v17[1] = v16;
      swift_unknownObjectRetain_n(a2, 2LL);
      swift_retain(v12);
      swift_retain(v10);
      swift_retain(v15);
      v13(v17);
      swift_unknownObjectRelease(a2);
      swift_release(v12);
      swift_release(v15);
      return swift_release(v16);
    }
  }

  return result;
}

uint64_t sub_10005FF10(uint64_t (*a1)(void))
{
  uint64_t v2 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for AlertActionStyle(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v13 = [(id)objc_opt_self(TVSCacheDelete) sharedInstance];
  if (v13)
  {
    uint64_t v14 = v13;
    if ([v13 synchronouslyFetchApplicationsState] == (id)2)
    {
      uint64_t v37 = v2;
      v15._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      v15._object = (void *)0x8000000100245E20LL;
      v16._uint64_t countAndFlagsBits = 0LL;
      v16._object = (void *)0xE000000000000000LL;
      Swift::String v17 = localizedString(_:comment:)(v15, v16);
      v18._object = (void *)0x8000000100245E40LL;
      v18._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v19._uint64_t countAndFlagsBits = 0LL;
      v19._object = (void *)0xE000000000000000LL;
      Swift::String v20 = localizedString(_:comment:)(v18, v19);
      object = v20._object;
      uint64_t countAndFlagsBits = v20._countAndFlagsBits;
      v21._uint64_t countAndFlagsBits = 0xD000000000000021LL;
      v21._object = (void *)0x8000000100245E60LL;
      v22._uint64_t countAndFlagsBits = 0LL;
      v22._object = (void *)0xE000000000000000LL;
      Swift::String v23 = localizedString(_:comment:)(v21, v22);
      unint64_t v33 = v23._object;
      uint64_t v34 = v23._countAndFlagsBits;
      uint64_t v24 = sub_1000031E8(&qword_1002DFEB0);
      uint64_t v25 = swift_allocObject(v24, 72LL, 7LL);
      *(_OWORD *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
      *(Swift::String *)(v25 + 32) = v17;
      *(void *)(v25 + 48) = 0LL;
      *(void *)(v25 + 56) = sub_10005F7A4;
      *(void *)(v25 + 64) = 0LL;
      uint64_t v26 = swift_bridgeObjectRetain(v17._object);
      static ActionMetrics.notInstrumented.getter(v26);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for AlertActionStyle.normal(_:), v6);
      uint64_t v27 = type metadata accessor for AlertAction(0LL);
      swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
      uint64_t v28 = AlertAction.init(title:message:isCancelable:cancelTitle:cancelAction:buttonActions:destructiveActionIndex:style:artwork:toastDuration:presentationStyle:actionMetrics:)( countAndFlagsBits,  object,  v34,  v33,  1LL,  0LL,  0LL,  0LL,  v25,  0LL,  1,  v9,  0LL,  0LL,  1,  0LL,  v12);
      uint64_t v29 = v37;
      uint64_t v30 = v38 + 80;
      uint64_t v31 = *(void *)(v38 + 16);
      (*(void (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for ActionRunner.Origin.userInitiated(_:),  v37);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v28, v30, v5, v31);
      swift_bridgeObjectRelease(v17._object);
      swift_release(v28);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v29);
    }
  }

  return a1();
}

uint64_t sub_1000601F8()
{
  uint64_t v0 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for URL(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  URL.init(string:)(0xD000000000000016LL, 0x8000000100245E90LL);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v8 = [(id)objc_opt_self(LSApplicationWorkspace) defaultWorkspace];
  if (v8)
  {
    uint64_t v10 = v8;
    URL._bridgeToObjectiveC()(v9);
    uint64_t v12 = v11;
    [v10 openSensitiveURL:v11 withOptions:0];
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100060358(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = [(id)objc_opt_self(PBSRestrictionsSettings) sharedInstance];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = OfferAlertAction.checkRestrictionsForContentRating.getter();
    if ((v9 & 1) == 0)
    {
      uint64_t v10 = v8;
      id v11 = [(id)objc_opt_self(PBSRestrictionService) sharedInstance];
      uint64_t v12 = sub_1000031E8(&qword_1002DFEB8);
      uint64_t v13 = Promise.__allocating_init()();
      uint64_t v30 = sub_100061CFC;
      uint64_t v31 = v13;
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 1107296256LL;
      _OWORD v28[2] = sub_100061A50;
      uint64_t v29 = &unk_100282E60;
      uint64_t v14 = _Block_copy(v28);
      uint64_t v15 = v31;
      swift_retain(v13);
      id v16 =  objc_msgSend( v11,  "validateRestrictionForSetting:allowInteraction:withCompletion:",  0,  1,  v14,  swift_release(v15).n128_f64[0]);
      _Block_release(v14);
      _bridgeAnyObjectToAny(_:)(v28, v16);
      swift_unknownObjectRelease(v16);
      _s6Arcade17PillOverlayLayoutVwxx_0(v28);
      Swift::String v17 = (void *)swift_allocObject(&unk_100282E98, 40LL, 7LL);
      v17[2] = v7;
      v17[3] = v11;
      v17[4] = v10;
      uint64_t v29 = (void *)type metadata accessor for SyncTaskScheduler(0LL);
      uint64_t v30 = (uint64_t (*)(uint64_t))&protocol witness table for SyncTaskScheduler;
      sub_100009D54(v28);
      id v18 = v7;
      id v19 = v11;
      SyncTaskScheduler.init()();
      uint64_t v20 = sub_100061B94( (unint64_t *)&unk_1002DFEC0,  &qword_1002DFEB8,  (uint64_t)&protocol conformance descriptor for Promise<A>);
      uint64_t v21 = Promise.flatMap<A>(on:_:)(v28, sub_100061B88, v17, v12, v20);
      swift_release(v13);
      swift_release(v17);
      _s6Arcade17PillOverlayLayoutVwxx_0(v28);
      uint64_t v22 = swift_allocObject(&unk_100282EC0, 24LL, 7LL);
      swift_weakInit(v22 + 16, v3);
      Swift::String v23 = (void *)swift_allocObject(&unk_100282EE8, 40LL, 7LL);
      _OWORD v23[2] = v22;
      v23[3] = a1;
      v23[4] = a2;
      unint64_t v24 = sub_100048E8C();
      swift_retain(a2);
      uint64_t v26 = static OS_dispatch_queue.main.getter(v25);
      uint64_t v29 = (void *)v24;
      uint64_t v30 = (uint64_t (*)(uint64_t))&protocol witness table for OS_dispatch_queue;
      v28[0] = v26;
      Promise.then(perform:orCatchError:on:)(sub_100061C24, v23, sub_100060A28, 0LL, v28);

      swift_release(v21);
      swift_release(v23);
      return _s6Arcade17PillOverlayLayoutVwxx_0(v28);
    }
  }

  return a1();
}

uint64_t sub_100060628(uint64_t *a1, id a2, void *a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  if (*a1
    || [a2 restrictionsEnabled] && objc_msgSend(a2, "allowsPurchaseAndRental") == (id)2)
  {
    sub_1000031E8(&qword_1002DFEB8);
    v14[0] = v4;
    return Promise.__allocating_init(value:)(v14);
  }

  else
  {
    id v9 = [objc_allocWithZone(NSNumber) initWithInteger:a4];
    sub_1000031E8(&qword_1002DFEB8);
    uint64_t v5 = Promise.__allocating_init()();
    v14[4] = sub_100061C30;
    uint64_t v15 = v5;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256LL;
    void v14[2] = sub_100061A50;
    v14[3] = &unk_100282F00;
    uint64_t v10 = _Block_copy(v14);
    uint64_t v11 = v15;
    swift_retain(v5);
    id v12 =  objc_msgSend( a3,  "validateRestrictionForContentType:withRating:allowInteraction:withCompletion:",  3,  v9,  1,  v10,  swift_release(v11).n128_f64[0]);
    _Block_release(v10);
    _bridgeAnyObjectToAny(_:)(v14, v12);
    swift_unknownObjectRelease(v12);
    _s6Arcade17PillOverlayLayoutVwxx_0(v14);
  }

  return v5;
}

uint64_t sub_1000607A4(uint64_t *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t countAndFlagsBits = a3;
  uint64_t v5 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AlertActionStyle(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  id v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = *a1;
  a2 += 16LL;
  swift_beginAccess(a2, v30, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(a2);
  if (result)
  {
    uint64_t v17 = result;
    if ((unint64_t)(v15 - 1) >= 2)
    {
      if (!v15) {
        countAndFlagsBits();
      }
    }

    else
    {
      v18._object = (void *)0x8000000100245DD0LL;
      v18._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v19._uint64_t countAndFlagsBits = 0LL;
      v19._object = (void *)0xE000000000000000LL;
      Swift::String v20 = localizedString(_:comment:)(v18, v19);
      object = v20._object;
      uint64_t countAndFlagsBits = (void (*)(void))v20._countAndFlagsBits;
      v21._uint64_t countAndFlagsBits = 0xD000000000000020LL;
      v21._object = (void *)0x8000000100245DF0LL;
      v22._uint64_t countAndFlagsBits = 0LL;
      v22._object = (void *)0xE000000000000000LL;
      Swift::String v23 = localizedString(_:comment:)(v21, v22);
      static ActionMetrics.notInstrumented.getter();
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for AlertActionStyle.normal(_:), v9);
      uint64_t v24 = type metadata accessor for AlertAction(0LL);
      swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
      uint64_t v25 = AlertAction.init(title:message:isCancelable:cancelTitle:cancelAction:buttonActions:destructiveActionIndex:style:artwork:toastDuration:presentationStyle:actionMetrics:)( countAndFlagsBits,  object,  v23._countAndFlagsBits,  v23._object,  1LL,  0LL,  0LL,  0LL,  &_swiftEmptyArrayStorage,  0LL,  1,  v12,  0LL,  0LL,  1,  0LL,  v14);
      uint64_t v26 = *(void *)(v17 + 16);
      (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for ActionRunner.Origin.userInitiated(_:),  v5);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v25, v17 + 80, v8, v26);
      swift_release(v25);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }

    return swift_release(v17);
  }

  return result;
}

uint64_t sub_100060A28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OSLogger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC370 != -1) {
    swift_once(&qword_1002DC370, sub_100018F58);
  }
  uint64_t v6 = sub_1000061F4(v2, (uint64_t)qword_1002EE528);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v8 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v9 = swift_allocObject( v7,  ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
       + 2LL * *(void *)(v8 + 72),
         *(unsigned __int8 *)(v8 + 80) | 7LL);
  *(_OWORD *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
  LogMessage.init(stringLiteral:)(0xD00000000000002ELL, 0x8000000100245DA0LL);
  swift_getErrorValue(a1, v17, &v15);
  uint64_t v10 = v15;
  uint64_t v11 = v16;
  v18[3] = v16;
  id v12 = sub_100009D54(v18);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v12, v10, v11);
  static LogMessage.safe(_:)(v18);
  sub_100006060((uint64_t)v18, (uint64_t *)&unk_1002DF680);
  Logger.error(_:)(v9, v2, &protocol witness table for OSLogger);
  __n128 v13 = swift_bridgeObjectRelease(v9);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v13);
}

uint64_t sub_100060BD8(void (*a1)(void), uint64_t a2)
{
  uint64_t v95 = a2;
  uint64_t v96 = a1;
  uint64_t v3 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v92 = *(void *)(v3 - 8);
  uint64_t v93 = v3;
  __chkstk_darwin(v3);
  __int128 v94 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v91 = type metadata accessor for AlertActionStyle(0LL);
  uint64_t v5 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000031E8(&qword_1002DFEA8);
  __chkstk_darwin(v11);
  __n128 v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v83 - v15;
  uint64_t v17 = (void *)objc_opt_self(&OBJC_CLASS___TVSBluetoothRemoteUtilities);
  uint64_t v18 = v2;
  OfferAlertAction.remoteControllerRequirement.getter([v17 startConnectionMonitoring]);
  uint64_t v19 = type metadata accessor for ControllerRequirement(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1LL, v19);
  uint64_t v23 = v95;
  Swift::String v22 = v96;
  if (v21 == 1) {
    goto LABEL_2;
  }
  uint64_t v89 = v5;
  uint64_t v90 = v10;
  uint64_t v88 = v7;
  uint64_t v24 = v96;
  uint64_t v25 = v95;
  sub_100061B0C((uint64_t)v16, (uint64_t)v13);
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v13, v19);
  if (v26 == enum case for ControllerRequirement.siriRemoteOrControllerRequired(_:))
  {
    id v27 = [(id)objc_opt_self(TVSPreferences) sharedAppleTVServicesPreferences];
    uint64_t v28 = v23;
    if (v27)
    {
      uint64_t v29 = v27;
      if ([v27 BOOLForKey:TVSBluetoothDefaultsKeyHasPairedGameController defaultValue:0])
      {
LABEL_6:

        goto LABEL_15;
      }

      unint64_t v87 = v16;
      id v56 = [v17 connectedBluetoothRemote];
      if (v56)
      {
        id v57 = v56;
        char v58 = (char *)[v56 remoteType] - 1;

        if ((unint64_t)v58 <= 1)
        {
          v24();

          goto LABEL_22;
        }
      }

      uint64_t v34 = v18;
      v59._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
      v59._object = (void *)0x8000000100245CC0LL;
      v60._uint64_t countAndFlagsBits = 0LL;
      v60._object = (void *)0xE000000000000000LL;
      Swift::String v61 = localizedString(_:comment:)(v59, v60);
      object = v61._object;
      uint64_t countAndFlagsBits = v61._countAndFlagsBits;
      v62._uint64_t countAndFlagsBits = 0xD000000000000040LL;
      v62._object = (void *)0x8000000100245D00LL;
      v63._uint64_t countAndFlagsBits = 0LL;
      v63._object = (void *)0xE000000000000000LL;
      Swift::String v64 = localizedStringReferencingSiriRemote(_:comment:)(v62, v63);
      uint64_t v83 = v64._object;
      uint64_t v84 = v64._countAndFlagsBits;
      unint64_t v41 = 0xD000000000000037LL;
      id v42 = "TV_SIRI_REMOTE_REQUIRED_OR_CONTROLLER_OPTIONAL_CONTINUE";
      goto LABEL_25;
    }

    goto LABEL_15;
  }

  if (v26 != enum case for ControllerRequirement.siriRemoteRequired(_:))
  {
    if (v26 != enum case for ControllerRequirement.controllerRequired(_:))
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v19);
      Swift::String v22 = v24;
LABEL_2:
      v22();
LABEL_16:
      uint64_t v43 = (uint64_t)v16;
      return sub_100006060(v43, &qword_1002DFEA8);
    }

    id v33 = [(id)objc_opt_self(TVSPreferences) sharedAppleTVServicesPreferences];
    uint64_t v28 = v23;
    if (v33)
    {
      uint64_t v29 = v33;
      if ([v33 BOOLForKey:TVSBluetoothDefaultsKeyHasPairedGameController defaultValue:0]) {
        goto LABEL_6;
      }
      uint64_t v34 = v18;
      unint64_t v87 = v16;
      v35._uint64_t countAndFlagsBits = 0xD000000000000022LL;
      v35._object = (void *)0x8000000100245BA0LL;
      v36._uint64_t countAndFlagsBits = 0LL;
      v36._object = (void *)0xE000000000000000LL;
      Swift::String v37 = localizedString(_:comment:)(v35, v36);
      object = v37._object;
      uint64_t countAndFlagsBits = v37._countAndFlagsBits;
      v38._uint64_t countAndFlagsBits = 0xD000000000000028LL;
      v38._object = (void *)0x8000000100245BD0LL;
      v39._uint64_t countAndFlagsBits = 0LL;
      v39._object = (void *)0xE000000000000000LL;
      Swift::String v40 = localizedString(_:comment:)(v38, v39);
      uint64_t v83 = v40._object;
      uint64_t v84 = v40._countAndFlagsBits;
      unint64_t v41 = 0xD000000000000025LL;
      id v42 = "TV_CONTROLLER_REQUIRED_ALERT_CONTINUE";
LABEL_25:
      unint64_t v65 = (unint64_t)(v42 - 32) | 0x8000000000000000LL;
      v66._uint64_t countAndFlagsBits = 0LL;
      v66._object = (void *)0xE000000000000000LL;
      Swift::String v67 = localizedString(_:comment:)(*(Swift::String *)&v41, v66);
      uint64_t v54 = v67._countAndFlagsBits;
      id v55 = v67._object;

      goto LABEL_26;
    }

uint64_t sub_100061258(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v81 = a1;
  uint64_t v5 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v82 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v82);
  uint64_t v9 = (uint64_t *)((char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  Action.title.getter(v10);
  uint64_t v12 = v11;
  OfferAlertAction.message.getter();
  uint64_t v14 = v13;
  if (v12)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    if (v14)
    {
LABEL_3:
      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
      goto LABEL_6;
    }
  }

  else
  {
    NSString v15 = 0LL;
    if (v13) {
      goto LABEL_3;
    }
  }

  NSString v16 = 0LL;
LABEL_6:
  id v17 =  [(id)objc_opt_self(UIAlertController) alertControllerWithTitle:v15 message:v16 preferredStyle:1];

  if ((OfferAlertAction.isCancelable.getter() & 1) != 0)
  {
    uint64_t v18 = OfferAlertAction.completionAction.getter();
    swift_release(v18);
    if (v18)
    {
      uint64_t v19 = 0x435F4E4F49544341LL;
      unint64_t v20 = 0xED00004C45434E41LL;
    }

    else
    {
      uint64_t v19 = 0x4F5F4E4F49544341LL;
      unint64_t v20 = 0xE90000000000004BLL;
    }

    v21._uint64_t countAndFlagsBits = 0LL;
    v21._object = (void *)0xE000000000000000LL;
    object = localizedString(_:comment:)(*(Swift::String *)&v19, v21)._object;
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    id v24 =  [(id)objc_opt_self(UIAlertAction) actionWithTitle:v23 style:1 handler:0];

    [v17 addAction:v24];
    [v17 setPreferredAction:v24];
  }

  uint64_t v25 = OfferAlertAction.completionAction.getter();
  if (v25)
  {
    uint64_t v26 = v25;
    Action.title.getter(v25);
    uint64_t v28 = v27;
    uint64_t v29 = swift_allocObject(&unk_100282DF8, 32LL, 7LL);
    *(void *)(v29 + swift_unknownObjectWeakDestroy(v0 + 16) = v81;
    *(void *)(v29 + 24) = a2;
    swift_retain(a2);
    if (v28)
    {
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
    }

    else
    {
      NSString v30 = 0LL;
    }

    aBlock[4] = sub_10004AECC;
    uint64_t v84 = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_10004FE30;
    aBlock[3] = &unk_100282E10;
    uint64_t v31 = _Block_copy(aBlock);
    swift_release(v84);
    id v32 =  [(id)objc_opt_self(UIAlertAction) actionWithTitle:v30 style:0 handler:v31];
    _Block_release(v31);

    [v17 addAction:v32];
    [v17 setPreferredAction:v32];
    swift_release(v26);
  }

  uint64_t v33 = OfferAlertAction.footerMessage.getter();
  if (v34)
  {
    uint64_t v35 = v33;
    uint64_t v36 = v34;
    Swift::String v37 = sub_100019F48(0LL, 1LL, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v39 = *((void *)v37 + 2);
    unint64_t v38 = *((void *)v37 + 3);
    if (v39 >= v38 >> 1) {
      Swift::String v37 = sub_100019F48((char *)(v38 > 1), v39 + 1, 1, v37);
    }
    *((void *)v37 + 2) = v39 + 1;
    Swift::String v40 = &v37[16 * v39];
    *((void *)v40 + 4) = v35;
    *((void *)v40 + 5) = v36;
  }

  else
  {
    Swift::String v37 = (char *)_swiftEmptyArrayStorage;
  }

  if ((OfferAlertAction.shouldIncludeActiveAccountInFooterMessage.getter() & 1) != 0)
  {
    id v41 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
    id v42 = objc_msgSend(v41, "ams_activeiTunesAccount");

    if (v42)
    {
      id v43 = [v42 username];

      if (v43)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
        uint64_t v45 = v44;

        Swift::String v46 = (void *)objc_opt_self(&OBJC_CLASS___AKUsernameFormatter);
        NSString v47 = String._bridgeToObjectiveC()();
        id v48 = objc_msgSend(v46, "formattedUsernameFromUsername:", v47, swift_bridgeObjectRelease(v45).n128_f64[0]);

        if (v48)
        {
          uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
          uint64_t v51 = v50;

          uint64_t v52 = static AppleAccountBranding.localizedString(_:)(0xD000000000000024LL, 0x8000000100245B70LL);
          uint64_t v54 = v53;
          uint64_t v55 = sub_1000031E8(&qword_1002E1AA0);
          uint64_t v56 = swift_allocObject(v55, 72LL, 7LL);
          *(_OWORD *)(v56 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
          *(void *)(v56 + 56) = &type metadata for String;
          *(void *)(v56 + 64) = sub_100061A8C();
          *(void *)(v56 + 32) = v49;
          *(void *)(v56 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v51;
          uint64_t v57 = String.init(format:_:)(v52, v54, v56);
          uint64_t v59 = v58;
          swift_bridgeObjectRelease(v54);
          if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0) {
            Swift::String v37 = sub_100019F48(0LL, *((void *)v37 + 2) + 1LL, 1, v37);
          }
          unint64_t v61 = *((void *)v37 + 2);
          unint64_t v60 = *((void *)v37 + 3);
          if (v61 >= v60 >> 1) {
            Swift::String v37 = sub_100019F48((char *)(v60 > 1), v61 + 1, 1, v37);
          }
          *((void *)v37 + 2) = v61 + 1;
          Swift::String v62 = &v37[16 * v61];
          *((void *)v62 + 4) = v57;
          *((void *)v62 + 5) = v59;
        }
      }
    }
  }

  if (*((void *)v37 + 2))
  {
    id v63 = [(id)objc_opt_self(UIFont) preferredFontForTextStyle:UIFontTextStyleCaption2];
    aBlock[0] = v37;
    v64._object = (void *)0x8000000100245B40LL;
    v64._uint64_t countAndFlagsBits = 0xD000000000000020LL;
    v65._uint64_t countAndFlagsBits = 0LL;
    v65._object = (void *)0xE000000000000000LL;
    Swift::String v66 = localizedString(_:comment:)(v64, v65);
    uint64_t v67 = sub_1000031E8(&qword_1002EAEC0);
    uint64_t v68 = sub_100061B94( (unint64_t *)&qword_1002E0010,  &qword_1002EAEC0,  (uint64_t)&protocol conformance descriptor for [A]);
    BidirectionalCollection<>.joined(separator:)(v66._countAndFlagsBits, v66._object, v67, v68);
    uint64_t v70 = v69;
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v66._object);
    NSString v71 = String._bridgeToObjectiveC()();
    objc_msgSend(v17, "setMessage:", v71, swift_bridgeObjectRelease(v70).n128_f64[0]);
  }

  else
  {
    swift_bridgeObjectRelease(v37);
  }

  uint64_t v72 = v3 + 3;
  uint64_t v74 = v3[6];
  uint64_t v73 = v3[7];
  sub_100005F8C(v72, v74);
  *uint64_t v9 = v17;
  swift_storeEnumTagMultiPayload(v9, v82, 11LL);
  uint64_t v75 = qword_1002DCE78;
  id v76 = v17;
  if (v75 != -1) {
    swift_once(&qword_1002DCE78, sub_1001665C8);
  }
  uint64_t v77 = type metadata accessor for FlowPresentationHints(0LL);
  uint64_t v78 = sub_1000061F4(v77, (uint64_t)qword_1002F0F70);
  uint64_t v79 = type metadata accessor for ReferrerData(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56LL))(v7, 1LL, 1LL, v79);
  (*(void (**)(void *, uint64_t, void, void, char *, uint64_t, uint64_t))(v73 + 16))( v9,  v78,  0LL,  0LL,  v7,  v74,  v73);

  sub_100006060((uint64_t)v7, &qword_1002E1FB0);
  return sub_10000609C((uint64_t)v9);
}

uint64_t sub_1000619E4()
{
  return swift_deallocClassInstance(v0, 112LL, 7LL);
}

uint64_t type metadata accessor for OfferAlertController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade20OfferAlertController);
}

uint64_t sub_100061A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

unint64_t sub_100061A8C()
{
  unint64_t result = qword_1002DFEA0;
  if (!qword_1002DFEA0)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1002DFEA0);
  }

  return result;
}

uint64_t sub_100061AD0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100061AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100061B04(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100061B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002DFEA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100061B54()
{
  return sub_1001EDBC8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100061B5C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100061B88(uint64_t *a1)
{
  return sub_100060628(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100061B94(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = sub_100003274(a2);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_100061BD4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100061BF8()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100061C24(uint64_t *a1)
{
  return sub_1000607A4(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_100061C30(uint64_t a1)
{
  uint64_t v2 = a1;
  return Promise.resolve(_:)(&v2);
}

uint64_t sub_100061C54()
{
  return sub_100061C98((void (*)(void))&_swift_unknownObjectRelease, 56LL);
}

uint64_t sub_100061C68()
{
  return sub_100061C98((void (*)(void))&_swift_unknownObjectRelease, 56LL);
}

uint64_t sub_100061C78()
{
  return sub_10005FE08( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(void *)(v0 + 48));
}

uint64_t sub_100061C88()
{
  return sub_100061C98((void (*)(void))&_swift_release, 32LL);
}

uint64_t sub_100061C98(void (*a1)(void), uint64_t a2)
{
  return swift_deallocObject(v2, a2, 7LL);
}

uint64_t sub_100061CDC(uint64_t a1)
{
  return sub_10005FC44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

double sub_100061CE8(uint64_t *a1)
{
  return sub_10005FBD8(a1, *(void (**)(uint64_t (*)(), uint64_t, __n128))(v1 + 16));
}

double sub_100061D38()
{
  double result = 0.0;
  xmmword_1002DFED0 = xmmword_100235B20;
  *(_OWORD *)&qword_1002DFEE0 = xmmword_100235B20;
  return result;
}

void sub_100061D50()
{
  qword_1002DFEF0 = 0x4079A00000000000LL;
}

uint64_t sub_100061D64(uint64_t a1)
{
  return sub_100061DD4(50.0, a1, qword_1002DFEF8, (void **)&UIFontTextStyleCaption2);
}

uint64_t sub_100061D80(uint64_t a1)
{
  return sub_100061DD4(40.0, a1, qword_1002DFF10, (void **)&UIFontTextStyleCallout);
}

uint64_t sub_100061D9C(uint64_t a1)
{
  return sub_100061DD4(38.0, a1, qword_1002DFF28, (void **)&UIFontTextStyleCaption1);
}

uint64_t sub_100061DB8(uint64_t a1)
{
  return sub_100061DD4(38.0, a1, qword_1002DFF40, (void **)&UIFontTextStyleCaption1);
}

uint64_t sub_100061DD4(double a1, uint64_t a2, uint64_t *a3, void **a4)
{
  uint64_t v7 = type metadata accessor for FontSource(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for StaticDimension(0LL);
  sub_10000FF90(v11, a3);
  sub_1000061F4(v11, (uint64_t)a3);
  uint64_t v12 = *a4;
  *(void *)uint64_t v10 = *a4;
  *((UIFontWeight *)v10 + 1) = UIFontWeightBold;
  uint64_t v13 = enum case for FontUseCase.preferredFontDerivative(_:);
  uint64_t v15 = type metadata accessor for FontUseCase(0LL, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104LL))(v10, v13, v15);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for FontSource.useCase(_:), v7);
  void v20[3] = v7;
  v20[4] = &protocol witness table for FontSource;
  NSString v16 = sub_100009D54(v20);
  (*(void (**)(void *, char *, uint64_t))(v8 + 16))(v16, v10, v7);
  id v17 = v12;
  StaticDimension.init(_:scaledLike:)(v20, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100061F1C()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000FF90(v4, qword_1002DFF58);
  sub_1000061F4(v4, (uint64_t)qword_1002DFF58);
  *(void *)uint64_t v3 = UIFontTextStyleCaption1;
  *((_DWORD *)v3 + 2) = 2;
  uint64_t v5 = enum case for FontUseCase.preferredFont(_:);
  uint64_t v7 = type metadata accessor for FontUseCase(0LL, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104LL))(v3, v5, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  v12[3] = v0;
  v12[4] = &protocol witness table for FontSource;
  uint64_t v8 = sub_100009D54(v12);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  uint64_t v9 = UIFontTextStyleCaption1;
  StaticDimension.init(_:scaledLike:)(v12, 43.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

char *sub_100062060(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_1000031E8(&qword_1002DE930);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (UIFontWeight *)((char *)&v114 - v13);
  uint64_t v15 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0LL);
  __chkstk_darwin(v15);
  id v17 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  Swift::String v21 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0LL);
  __n128 v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, __n128))(v26 + 104))( v25,  enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.leading(_:),  v23);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))( v21,  enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:),  v18);
  uint64_t v27 = v4;
  HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.init()();
  HeroCarouselItemOverlay.DisplayOptions.init(textAlignment:horizontalPlacement:textColorOverrides:isOverDarkContent:)( v25,  v21,  v17,  1LL);
  uint64_t v28 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_materialBackground;
  *(void *)&v27[v28] = [objc_allocWithZone(UIVisualEffectView) init];
  uint64_t v29 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_button;
  *(void *)&v27[v29] = [(id)objc_opt_self(UIButton) buttonWithType:1];
  uint64_t v30 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_badgeLabel;
  uint64_t v31 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v31);
  *(void *)&v27[v30] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v33 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_titleLabel;
  *(void *)&v27[v33] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v34 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_descriptionLabel;
  *(void *)&v27[v34] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v35 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_callToActionLabel;
  *(void *)&v27[v35] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v36 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_focusGuide;
  *(void *)&v27[v36] = [objc_allocWithZone(UIFocusGuide) init];
  Swift::String v37 = &v27[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_selectionHandler];
  *(void *)Swift::String v37 = 0LL;
  *((void *)v37 + 1) = 0LL;

  unint64_t v38 = (objc_class *)type metadata accessor for CarouselItemButtonOverlay(0LL);
  v132.receiver = v27;
  v132.super_class = v38;
  id v39 = objc_msgSendSuper2(&v132, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v43 = (char *)v39;
  objc_msgSend(v43, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  [v43 setOverrideUserInterfaceStyle:2];
  uint64_t v44 = *(void **)&v43[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_materialBackground];
  uint64_t v45 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_materialBackground;
  uint64_t v121 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_materialBackground;
  uint64_t v123 = sub_1000031E8((uint64_t *)&unk_1002DE0F0);
  uint64_t v46 = swift_allocObject(v123, 40LL, 7LL);
  __int128 v122 = xmmword_100233570;
  *(_OWORD *)(v46 + swift_weakDestroy(v0 + 16) = xmmword_100233570;
  NSString v47 = (void *)objc_opt_self(&OBJC_CLASS___UIBlurEffect);
  id v48 = v44;
  id v49 = [v47 effectWithStyle:5002];
  *(void *)(v46 + 32) = v49;
  v131[0] = v46;
  specialized Array._endMutation()(v49);
  uint64_t v50 = v131[0];
  sub_100006028(0LL, &qword_1002E3320, &OBJC_CLASS___UIVisualEffect_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v48, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v50).n128_f64[0]);

  [*(id *)&v43[v45] _setContinuousCornerRadius:12.0];
  uint64_t v52 = *(void **)&v43[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_button];
  uint64_t v53 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_button;
  uint64_t v120 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_button;
  uint64_t v54 = (void *)objc_opt_self(&OBJC_CLASS___UIFont);
  UIFontTextStyle v117 = UIFontTextStyleCallout;
  id v55 = v52;
  id v56 = [v54 _preferredFontForTextStyle:UIFontTextStyleCallout weight:UIFontWeightBold];
  [v55 _setFont:v56];

  uint64_t v57 = *(void **)&v43[v53];
  sub_100006028(0LL, (unint64_t *)&unk_1002E0020, &OBJC_CLASS___UIAction_ptr);
  uint64_t v58 = swift_allocObject(&unk_1002831A0, 24LL, 7LL);
  swift_unknownObjectWeakInit(v58 + 16, v43);
  id v59 = v57;
  unint64_t v60 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( 0LL,  0xE000000000000000LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1000658F0,  v58);
  [v59 addAction:v60 forControlEvents:0x2000];

  uint64_t v61 = *(void *)&v43[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_badgeLabel];
  uint64_t v62 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_badgeLabel;
  *(void *)uint64_t v14 = UIFontTextStyleCaption2;
  v14[1] = UIFontWeightBold;
  uint64_t v63 = enum case for FontUseCase.preferredFontDerivative(_:);
  unsigned int v126 = enum case for FontUseCase.preferredFontDerivative(_:);
  uint64_t v65 = type metadata accessor for FontUseCase(0LL, v64);
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v67 = *(void (**)(UIFontWeight *, uint64_t, uint64_t))(v66 + 104);
  v67(v14, v63, v65);
  unint64_t v115 = v67;
  uint64_t v125 = *(void (**)(UIFontWeight *, void, uint64_t, uint64_t))(v66 + 56);
  v125(v14, 0LL, 1LL, v65);
  uint64_t v68 = v61 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase;
  swift_beginAccess(v61 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase, v131, 0LL, 0LL);
  sub_100014CFC(v68, (uint64_t)v11);
  swift_beginAccess(v68, v130, 33LL, 0LL);
  uint64_t v69 = UIFontTextStyleCaption2;
  sub_10000FF48((uint64_t)v14, v68);
  swift_endAccess(v130);
  sub_100013DC8((uint64_t)v11);
  sub_1000658F8((uint64_t)v14);
  sub_1000658F8((uint64_t)v11);
  uint64_t v70 = v62;
  uint64_t v119 = v62;
  NSString v71 = *(void **)&v43[v62];
  [v71 setNumberOfLines:1];
  uint64_t v72 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v124 = v72;
  id v73 = v71;
  id v74 = [v72 secondaryLabelColor];
  [v73 setTextColor:v74];

  id v75 = [*(id *)&v43[v70] layer];
  uint64_t v116 = kCAFilterPlusL;
  objc_msgSend(v75, "setCompositingFilter:");

  uint64_t v76 = *(void *)&v43[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_titleLabel];
  uint64_t v77 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_titleLabel;
  uint64_t v118 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_titleLabel;
  UIFontTextStyle v78 = v117;
  *(void *)uint64_t v14 = v117;
  v14[1] = UIFontWeightBold;
  uint64_t v79 = v126;
  v67(v14, v126, v65);
  id v80 = v125;
  v125(v14, 0LL, 1LL, v65);
  uint64_t v81 = v76 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase;
  swift_beginAccess(v76 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase, v130, 0LL, 0LL);
  sub_100014CFC(v81, (uint64_t)v11);
  swift_beginAccess(v81, v129, 33LL, 0LL);
  uint64_t v82 = v78;
  sub_10000FF48((uint64_t)v14, v81);
  swift_endAccess(v129);
  sub_100013DC8((uint64_t)v11);
  sub_1000658F8((uint64_t)v14);
  sub_1000658F8((uint64_t)v11);
  uint64_t v83 = *(void **)&v43[v77];
  [v83 setNumberOfLines:1];
  id v84 = v83;
  id v85 = v124;
  id v86 = [v124 labelColor];
  [v84 setTextColor:v86];

  UIFontTextStyle v117 = (UIFontTextStyle)OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_descriptionLabel;
  uint64_t v87 = *(void *)&v43[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_descriptionLabel];
  *(void *)uint64_t v14 = UIFontTextStyleCaption1;
  v14[1] = UIFontWeightRegular;
  uint64_t v88 = v79;
  uint64_t v89 = v115;
  v115(v14, v88, v65);
  v80(v14, 0LL, 1LL, v65);
  uint64_t v90 = v87 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase;
  swift_beginAccess(v87 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase, v129, 0LL, 0LL);
  sub_100014CFC(v90, (uint64_t)v11);
  swift_beginAccess(v90, v128, 33LL, 0LL);
  uint64_t v91 = UIFontTextStyleCaption1;
  sub_10000FF48((uint64_t)v14, v90);
  swift_endAccess(v128);
  sub_100013DC8((uint64_t)v11);
  sub_1000658F8((uint64_t)v14);
  sub_1000658F8((uint64_t)v11);
  UIFontTextStyle v92 = v117;
  uint64_t v93 = *(UIFontTextStyle)((char *)v117 + (void)v43);
  [v93 setNumberOfLines:1];
  id v94 = v93;
  id v95 = [v85 secondaryLabelColor];
  [v94 setTextColor:v95];

  UIFontTextStyle v96 = v92;
  id v97 = [*(id *)((char *)v92 + (void)v43) layer];
  [v97 setCompositingFilter:v116];

  uint64_t v98 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_callToActionLabel;
  uint64_t v99 = *(void *)&v43[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_callToActionLabel];
  *(void *)uint64_t v14 = v91;
  v14[1] = UIFontWeightRegular;
  v89(v14, v126, v65);
  v125(v14, 0LL, 1LL, v65);
  uint64_t v100 = v99 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase;
  swift_beginAccess(v99 + OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_fontUseCase, v128, 0LL, 0LL);
  sub_100014CFC(v100, (uint64_t)v11);
  swift_beginAccess(v100, v127, 33LL, 0LL);
  uint64_t v101 = v91;
  sub_10000FF48((uint64_t)v14, v100);
  swift_endAccess(v127);
  sub_100013DC8((uint64_t)v11);
  sub_1000658F8((uint64_t)v14);
  sub_1000658F8((uint64_t)v11);
  uint64_t v102 = *(void **)&v43[v98];
  [v102 setNumberOfLines:1];
  id v103 = v102;
  id v104 = [v124 labelColor];
  [v103 setTextColor:v104];

  [v43 addSubview:*(void *)&v43[v121]];
  char v105 = *(void **)&v43[v120];
  [v43 addSubview:v105];
  [v43 addSubview:*(void *)&v43[v119]];
  [v43 addSubview:*(void *)&v43[v118]];
  [v43 addSubview:*(UIFontTextStyle)((char *)v96 + (void)v43)];
  [v43 addSubview:*(void *)&v43[v98]];
  sub_100064170();
  uint64_t v106 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_focusGuide;
  uint64_t v107 = *(void **)&v43[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_focusGuide];
  uint64_t v108 = swift_allocObject(v123, 40LL, 7LL);
  *(_OWORD *)(v108 + swift_weakDestroy(v0 + 16) = v122;
  *(void *)(v108 + 32) = v105;
  v127[0] = v108;
  specialized Array._endMutation()(v108);
  uint64_t v109 = v127[0];
  id v110 = v107;
  id v111 = v105;
  sub_1000031E8((uint64_t *)&unk_1002DF9C0);
  Class v112 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v110, "setPreferredFocusEnvironments:", v112, swift_bridgeObjectRelease(v109).n128_f64[0]);

  [v43 addLayoutGuide:*(void *)&v43[v106]];
  return v43;
}

void sub_100062C64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void (**)(void))(Strong + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_selectionHandler);
    uint64_t v6 = *(void *)(Strong + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_selectionHandler + 8);
    sub_100017A40((uint64_t)v5, v6);

    if (v5)
    {
      v5();
      sub_10000D3D8((uint64_t)v5, v6);
    }
  }

uint64_t sub_100062D34()
{
  uint64_t v1 = (objc_class *)type metadata accessor for CarouselItemButtonOverlay(0LL);
  v16.receiver = v0;
  v16.super_class = v1;
  objc_msgSendSuper2(&v16, "layoutSubviews");
  [*(id *)&v0[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_materialBackground] setFrame:LayoutMarginsAware<>.layoutFrame.getter(v1).n128_f64[0]];
  sub_100062F10(0, v13);
  uint64_t v2 = v14;
  uint64_t v3 = v15;
  sub_100005F8C(v13, v14);
  *(void *)&double v4 = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  id v11 = [v0 traitCollection];
  dispatch thunk of Placeable.place(at:with:)(v11, v2, v3, v4, v6, v8, v10);

  [*(id *)&v0[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_focusGuide] _setManualLayoutFrame:LayoutMarginsAware<>.layoutFrame.getter(v1).n128_f64[0]];
  return _s6Arcade17PillOverlayLayoutVwxx_0(v13);
}

uint64_t sub_100062F10@<X0>(int a1@<W0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  int v146 = a1;
  uint64_t v148 = a2;
  uint64_t ObjectType = swift_getObjectType(v2);
  uint64_t v129 = type metadata accessor for HorizontalStack(0LL);
  uint64_t v127 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  unsigned int v126 = (char *)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v6 = __chkstk_darwin(v5);
  double v128 = (char *)&v126 - v7;
  uint64_t v131 = type metadata accessor for Pin.Edge(0LL, v6);
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  objc_super v132 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v145 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0LL);
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v150 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v151 = (char *)&v126 - v11;
  uint64_t v147 = type metadata accessor for VerticalStack(0LL);
  uint64_t v153 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  uint64_t v135 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v126 - v14;
  __chkstk_darwin(v16);
  unint64_t v142 = (char *)&v126 - v17;
  __chkstk_darwin(v18);
  uint64_t v149 = (char *)&v126 - v19;
  uint64_t v155 = type metadata accessor for StaticDimension(0LL);
  uint64_t v157 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  unint64_t v143 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v139 = v20;
  __chkstk_darwin(v21);
  uint64_t v156 = (char *)&v126 - v22;
  uint64_t v23 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v126 - v28;
  uint64_t v30 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0LL);
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  __int128 v140 = (char *)&v126 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v126 - v34;
  uint64_t v36 = &v3[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_displayOptions];
  swift_beginAccess(&v3[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_displayOptions], v166, 0LL, 0LL);
  Swift::String v37 = *(double (**)(char *, char *, uint64_t))(v31 + 16);
  uint64_t v138 = v36;
  uint64_t v137 = v37;
  uint64_t v38 = ((uint64_t (*)(char *, char *, uint64_t))v37)(v35, v36, v30);
  HeroCarouselItemOverlay.DisplayOptions.textAlignment.getter(v38);
  id v39 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v141 = v30;
  uint64_t v136 = v39;
  v39(v35, v30);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))( v26,  enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.center(_:),  v23);
  uint64_t v40 = sub_100003B6C( &qword_1002DFFE8,  (uint64_t (*)(uint64_t))&type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment,  (uint64_t)&protocol conformance descriptor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment);
  dispatch thunk of RawRepresentable.rawValue.getter(&v163, v23, v40);
  dispatch thunk of RawRepresentable.rawValue.getter(&v160, v23, v40);
  uint64_t v41 = *((void *)&v163 + 1);
  uint64_t v42 = *((void *)&v160 + 1);
  if (v163 == v160)
  {
    swift_bridgeObjectRelease_n(*((void *)&v163 + 1), 2LL);
    id v43 = *(void (**)(char *, uint64_t))(v24 + 8);
    v43(v26, v23);
    v43(v29, v23);
LABEL_4:
    uint64_t v47 = qword_1002DC4C0;
    id v134 = *(id *)&v3[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_callToActionLabel];
    BOOL v48 = v47 == -1;
    uint64_t v49 = v155;
    uint64_t v50 = v157;
    uint64_t v51 = v156;
    if (!v48) {
      swift_once(&qword_1002DC4C0, sub_100061DB8);
    }
    uint64_t v52 = qword_1002DFF40;
    goto LABEL_10;
  }

  char v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v163, *((void *)&v163 + 1), v160, *((void *)&v160 + 1), 0LL);
  swift_bridgeObjectRelease(v41);
  __n128 v45 = swift_bridgeObjectRelease(v42);
  uint64_t v46 = *(void (**)(char *, uint64_t, __n128))(v24 + 8);
  v46(v26, v23, v45);
  ((void (*)(char *, uint64_t))v46)(v29, v23);
  if ((v44 & 1) != 0) {
    goto LABEL_4;
  }
  uint64_t v53 = qword_1002DC4B8;
  id v134 = *(id *)&v3[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_descriptionLabel];
  BOOL v48 = v53 == -1;
  uint64_t v49 = v155;
  uint64_t v50 = v157;
  uint64_t v51 = v156;
  if (!v48) {
    swift_once(&qword_1002DC4B8, sub_100061D9C);
  }
  uint64_t v52 = qword_1002DFF28;
LABEL_10:
  uint64_t v54 = sub_1000061F4(v49, (uint64_t)v52);
  uint64_t v133 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  v133(v51, v54, v49);
  id v55 = v135;
  VerticalStack.init(with:)(0LL, 0LL);
  id v56 = *(void **)&v3[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_badgeLabel];
  uint64_t v57 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v164 = v57;
  uint64_t v165 = &protocol witness table for UILabel;
  *(void *)&__int128 v163 = v56;
  uint64_t v58 = swift_allocObject(&unk_100283100, 32LL, 7LL);
  uint64_t v59 = ObjectType;
  *(void *)(v58 + swift_weakDestroy(v0 + 16) = v3;
  *(void *)(v58 + 24) = v59;
  id v60 = v56;
  uint64_t v61 = v3;
  VerticalStack.adding(_:with:)(&v163, sub_100065008, v58);
  __n128 v62 = swift_release(v58);
  uint64_t v63 = *(void (**)(char *, uint64_t, __n128))(v153 + 8);
  uint64_t v64 = v147;
  v63(v55, v147, v62);
  uint64_t v65 = v63;
  uint64_t v152 = v63;
  _s6Arcade17PillOverlayLayoutVwxx_0(&v163);
  uint64_t v66 = *(void **)&v61[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_titleLabel];
  uint64_t v164 = v57;
  uint64_t v165 = &protocol witness table for UILabel;
  *(void *)&__int128 v163 = v66;
  uint64_t v67 = swift_allocObject(&unk_100283128, 32LL, 7LL);
  *(void *)(v67 + swift_weakDestroy(v0 + 16) = v61;
  *(void *)(v67 + 24) = v59;
  uint64_t v135 = v61;
  id v68 = v66;
  uint64_t v69 = v142;
  VerticalStack.adding(_:with:)(&v163, sub_100065038, v67);
  __n128 v70 = swift_release(v67);
  v65(v15, v64, v70);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v163);
  uint64_t v164 = v57;
  uint64_t v165 = &protocol witness table for UILabel;
  NSString v71 = v134;
  *(void *)&__int128 v163 = v134;
  uint64_t v72 = v143;
  uint64_t v73 = v155;
  v133(v143, (uint64_t)v156, v155);
  uint64_t v74 = v157;
  uint64_t v75 = *(unsigned __int8 *)(v157 + 80);
  uint64_t v76 = (v75 + 24) & ~v75;
  unint64_t v77 = (v139 + v76 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v78 = swift_allocObject(&unk_100283150, v77 + 8, v75 | 7);
  uint64_t v79 = v135;
  *(void *)(v78 + swift_weakDestroy(v0 + 16) = v135;
  id v80 = v72;
  uint64_t v81 = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v78 + v76, v80, v73);
  *(void *)(v78 + v77) = ObjectType;
  unint64_t v143 = v71;
  uint64_t v82 = v79;
  uint64_t v83 = v149;
  VerticalStack.adding(_:with:)(&v163, sub_1000650E8, v78);
  __n128 v84 = swift_release(v78);
  v152(v69, v64, v84);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v163);
  id v85 = v140;
  uint64_t v86 = v141;
  v87.n128_f64[0] = v137(v140, v138, v141);
  HeroCarouselItemOverlay.DisplayOptions.horizontalPlacement.getter(v87);
  v136(v85, v86);
  uint64_t v88 = v144;
  uint64_t v89 = v145;
  (*(void (**)(char *, void, uint64_t))(v144 + 104))( v150,  enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.trailing(_:),  v145);
  uint64_t v90 = sub_100003B6C( &qword_1002DFFF0,  (uint64_t (*)(uint64_t))&type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement,  (uint64_t)&protocol conformance descriptor for HeroCarouselItemOverlay.DisplayOptions.Placement);
  dispatch thunk of RawRepresentable.rawValue.getter(&v163, v89, v90);
  dispatch thunk of RawRepresentable.rawValue.getter(&v160, v89, v90);
  uint64_t v91 = *((void *)&v163 + 1);
  uint64_t v92 = *((void *)&v160 + 1);
  uint64_t v93 = v157;
  id v94 = v156;
  if (v163 == v160)
  {
    swift_bridgeObjectRelease_n(*((void *)&v163 + 1), 2LL);
    id v95 = *(void (**)(char *, uint64_t))(v88 + 8);
    v95(v150, v89);
    v95(v151, v89);
LABEL_13:
    uint64_t v99 = *(void **)&v82[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_button];
    uint64_t v161 = sub_100006028(0LL, &qword_1002DFFF8, &OBJC_CLASS___UIButton_ptr);
    uint64_t v162 = &protocol witness table for UIButton;
    *(void *)&__int128 v160 = v99;
    id v100 = v99;
    if ((v146 & 1) != 0) {
      uint64_t v101 = static Center.Axis.neither.getter(v100);
    }
    else {
      uint64_t v101 = static Center.Axis.vertical.getter(v100);
    }
    uint64_t v102 = v101;
    uint64_t v164 = type metadata accessor for Center(0LL);
    uint64_t v165 = &protocol witness table for Center;
    sub_100009D54(&v163);
    Center.init(_:filling:)(&v160, v102);
    id v103 = v132;
    (*(void (**)(char *, void, uint64_t))(v130 + 104))(v132, enum case for Pin.Edge.trailingEdge(_:), v131);
    uint64_t v161 = v81;
    uint64_t v162 = &protocol witness table for VerticalStack;
    id v104 = sub_100009D54(&v160);
    (*(void (**)(void *, char *, uint64_t))(v153 + 16))(v104, v83, v81);
    v158[3] = type metadata accessor for Margins(0LL);
    v158[4] = &protocol witness table for Margins;
    sub_100009D54(v158);
    Margins.init(insets:child:)(&v160, 0.0, 0.0, 0.0, 40.0);
    uint64_t v161 = type metadata accessor for Pin(0LL);
    uint64_t v162 = &protocol witness table for Pin;
    sub_100009D54(&v160);
    Pin.init(_:to:of:)(&v163, v103, v158);
    sub_100009D90(&v160, (uint64_t)&v163);
    goto LABEL_20;
  }

  char v96 = _stringCompareWithSmolCheck(_:_:expecting:)(v163, *((void *)&v163 + 1), v160, *((void *)&v160 + 1), 0LL);
  swift_bridgeObjectRelease(v91);
  __n128 v97 = swift_bridgeObjectRelease(v92);
  uint64_t v98 = *(void (**)(char *, uint64_t, __n128))(v88 + 8);
  v98(v150, v89, v97);
  ((void (*)(char *, uint64_t))v98)(v151, v89);
  if ((v96 & 1) != 0) {
    goto LABEL_13;
  }
  char v105 = v126;
  HorizontalStack.init(with:)(0LL, 0LL);
  uint64_t v106 = *(void **)&v82[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_button];
  uint64_t v161 = sub_100006028(0LL, &qword_1002DFFF8, &OBJC_CLASS___UIButton_ptr);
  uint64_t v162 = &protocol witness table for UIButton;
  *(void *)&__int128 v160 = v106;
  uint64_t v107 = qword_1002DC4A0;
  id v108 = v106;
  if (v107 != -1) {
    swift_once(&qword_1002DC4A0, sub_100061D50);
  }
  uint64_t v109 = MeasurementRange.init(minimum:maximum:)(qword_1002DFEF0, 0LL, 0LL, 1LL);
  MeasurementRange.init(minimum:maximum:)(0LL, 1LL, 0LL, 1LL);
  char v111 = v110;
  char v113 = v112;
  uint64_t v164 = type metadata accessor for Constrain(0LL);
  uint64_t v165 = &protocol witness table for Constrain;
  sub_100009D54(&v163);
  LOBYTE(v158[0]) = v111 & 1;
  char v159 = v113 & 1;
  Constrain.init(_:width:height:)(&v160, v109);
  uint64_t v114 = swift_allocObject(&unk_100283178, 32LL, 7LL);
  *(_BYTE *)(v114 + swift_weakDestroy(v0 + 16) = v146 & 1;
  *(void *)(v114 + 24) = ObjectType;
  unint64_t v115 = v128;
  HorizontalStack.adding(_:with:)(&v163, sub_10006514C, v114);
  __n128 v116 = swift_release(v114);
  UIFontTextStyle v117 = *(void (**)(char *, uint64_t, __n128))(v127 + 8);
  uint64_t v118 = v129;
  v117(v105, v129, v116);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v163);
  uint64_t v164 = v81;
  uint64_t v165 = &protocol witness table for VerticalStack;
  uint64_t v119 = sub_100009D54(&v163);
  uint64_t v83 = v149;
  (*(void (**)(void *, char *, uint64_t))(v153 + 16))(v119, v149, v81);
  uint64_t v161 = v118;
  uint64_t v162 = &protocol witness table for HorizontalStack;
  sub_100009D54(&v160);
  HorizontalStack.adding(_:with:)(&v163, 0LL, 0LL);
  ((void (*)(char *, uint64_t))v117)(v115, v118);
  _s6Arcade17PillOverlayLayoutVwxx_0(&v163);
  sub_100009D90(&v160, (uint64_t)&v163);
  uint64_t v93 = v157;
  id v94 = v156;
LABEL_20:
  if (qword_1002DC498 != -1) {
    swift_once(&qword_1002DC498, sub_100061D38);
  }
  __int128 v120 = xmmword_1002DFED0;
  double v121 = *(double *)&qword_1002DFEE0;
  double v122 = unk_1002DFEE8;
  sub_10001F010((uint64_t)&v163, (uint64_t)&v160);
  uint64_t v123 = type metadata accessor for Margins(0LL);
  id v124 = v148;
  v148[3] = v123;
  v124[4] = &protocol witness table for Margins;
  sub_100009D54(v124);
  Margins.init(insets:child:)(&v160, *(double *)&v120, *((double *)&v120 + 1), v121, v122);

  _s6Arcade17PillOverlayLayoutVwxx_0(&v163);
  ((void (*)(char *, uint64_t))v152)(v83, v81);
  return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v94, v155);
}

uint64_t sub_100063CF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a6;
  uint64_t v9 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = a2 + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_displayOptions;
  swift_beginAccess(v17, v32, 0LL, 0LL);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  HeroCarouselItemOverlay.DisplayOptions.textAlignment.getter(v18);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v20 = HeroCarouselItemOverlay.DisplayOptions.TextAlignment.verticalStackAlignment.getter(v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v21 = VerticalStack.Properties.alignment.setter(v20);
  uint64_t v22 = static VerticalStack.Edge.top.getter(v21);
  uint64_t v23 = VerticalStack.Edge.init(rawValue:)(0LL);
  uint64_t v24 = VerticalStack.Edge.init(rawValue:)(v23);
  if (VerticalStack.Edge.init(rawValue:)(v24 & v22) != v22) {
    uint64_t v23 = VerticalStack.Edge.init(rawValue:)(v23 | v22);
  }
  VerticalStack.Properties.edgesAlignedToBaseline.setter(v23);
  if (*a4 != -1LL) {
    swift_once(a4, v30);
  }
  uint64_t v25 = type metadata accessor for StaticDimension(0LL);
  uint64_t v26 = sub_1000061F4(v25, a5);
  v31[3] = v25;
  v31[4] = &protocol witness table for StaticDimension;
  uint64_t v27 = sub_100009D54(v31);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16LL))(v27, v26, v25);
  return VerticalStack.Properties.topSpacing.setter(v31);
}

uint64_t sub_100063EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = a2 + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_displayOptions;
  swift_beginAccess(v13, v32, 0LL, 0LL);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  HeroCarouselItemOverlay.DisplayOptions.textAlignment.getter(v14);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = HeroCarouselItemOverlay.DisplayOptions.TextAlignment.verticalStackAlignment.getter(v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = VerticalStack.Properties.alignment.setter(v16);
  uint64_t v18 = static VerticalStack.Edge.top.getter(v17);
  uint64_t v19 = static VerticalStack.Edge.bottom.getter();
  uint64_t v20 = VerticalStack.Edge.init(rawValue:)(0LL);
  uint64_t v21 = VerticalStack.Edge.init(rawValue:)(v20);
  if (VerticalStack.Edge.init(rawValue:)(v21 & v18) != v18) {
    uint64_t v20 = VerticalStack.Edge.init(rawValue:)(v20 | v18);
  }
  uint64_t v22 = VerticalStack.Edge.init(rawValue:)(v20);
  if (VerticalStack.Edge.init(rawValue:)(v22 & v19) != v19) {
    uint64_t v20 = VerticalStack.Edge.init(rawValue:)(v20 | v19);
  }
  VerticalStack.Properties.edgesAlignedToBaseline.setter(v20);
  uint64_t v23 = type metadata accessor for StaticDimension(0LL);
  uint64_t v30 = v23;
  uint64_t v31 = &protocol witness table for StaticDimension;
  uint64_t v24 = sub_100009D54(v29);
  uint64_t v25 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16LL);
  v25(v24, a3, v23);
  VerticalStack.Properties.topSpacing.setter(v29);
  if (qword_1002DC4C8 != -1) {
    swift_once(&qword_1002DC4C8, sub_100061F1C);
  }
  uint64_t v26 = sub_1000061F4(v23, (uint64_t)qword_1002DFF58);
  uint64_t v30 = v23;
  uint64_t v31 = &protocol witness table for StaticDimension;
  uint64_t v27 = sub_100009D54(v29);
  v25(v27, v26, v23);
  return VerticalStack.Properties.bottomSpacing.setter(v29);
}

uint64_t sub_100064118(uint64_t a1, char a2)
{
  _OWORD v4[3] = &type metadata for CGFloat;
  void v4[4] = &protocol witness table for CGFloat;
  v4[0] = 0x4044000000000000LL;
  uint64_t result = HorizontalStack.Properties.trailingSpacing.setter(v4);
  if ((a2 & 1) == 0) {
    return HorizontalStack.Properties.alignment.setter(1LL);
  }
  return result;
}

id sub_100064170()
{
  uint64_t v1 = v0;
  uint64_t v70 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0LL);
  uint64_t v61 = *(void *)(v70 - 8);
  uint64_t v2 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v67 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v65 = (char *)&v60 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v63 = (char *)&v60 - v7;
  __chkstk_darwin(v6);
  id v60 = (char *)&v60 - v8;
  uint64_t v69 = (void *)type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0LL);
  uint64_t v9 = *(v69 - 1);
  __chkstk_darwin(v69);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v66 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v64 = (char *)&v60 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  __n128 v62 = (char *)&v60 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v60 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v60 - v23;
  uint64_t v25 = &v1[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_displayOptions];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_displayOptions], v71, 0LL, 0LL);
  uint64_t v26 = *(uint64_t (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v27 = v26(v24, v25, v12);
  HeroCarouselItemOverlay.DisplayOptions.textAlignment.getter(v27);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v13 + 8);
  v28(v24, v12);
  id v29 = [v1 traitCollection];
  uint64_t v30 = HeroCarouselItemOverlay.DisplayOptions.TextAlignment.textAlignment(with:)();

  (*(void (**)(char *, void *))(v9 + 8))(v11, v69);
  uint64_t v68 = v30;
  uint64_t v69 = v1;
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_badgeLabel];
  [v31 setTextAlignment:v30];
  uint64_t v32 = v25;
  uint64_t v33 = v26;
  uint64_t v34 = v26(v22, v25, v12);
  uint64_t v35 = v60;
  HeroCarouselItemOverlay.DisplayOptions.textColorOverrides.getter(v34);
  uint64_t v36 = (uint64_t (*)(char *, uint64_t))v28;
  uint64_t v37 = ((uint64_t (*)(char *, uint64_t))v28)(v22, v12);
  uint64_t v38 = v35;
  id v39 = (id)HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.badgeColor.getter(v37);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v61 + 8);
  v40(v38, v70);
  if (!v39) {
    id v39 = [(id)objc_opt_self(UIColor) secondaryLabelColor];
  }
  [v31 setTextColor:v39];

  uint64_t v41 = *(void **)((char *)v69 + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_titleLabel);
  [v41 setTextAlignment:v68];
  uint64_t v42 = v62;
  uint64_t v43 = v33(v62, v32, v12);
  char v44 = v63;
  HeroCarouselItemOverlay.DisplayOptions.textColorOverrides.getter(v43);
  uint64_t v45 = v36(v42, v12);
  id v46 = (id)HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.titleColor.getter(v45);
  v40(v44, v70);
  if (!v46) {
    id v46 = [(id)objc_opt_self(UIColor) labelColor];
  }
  [v41 setTextColor:v46];

  uint64_t v47 = *(void **)((char *)v69 + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_descriptionLabel);
  [v47 setTextAlignment:v68];
  BOOL v48 = v64;
  uint64_t v49 = v33(v64, v32, v12);
  uint64_t v50 = v65;
  HeroCarouselItemOverlay.DisplayOptions.textColorOverrides.getter(v49);
  uint64_t v51 = v36(v48, v12);
  id v52 = (id)HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.descriptionColor.getter(v51);
  v40(v50, v70);
  if (!v52) {
    id v52 = [(id)objc_opt_self(UIColor) secondaryLabelColor];
  }
  [v47 setTextColor:v52];

  uint64_t v53 = *(void **)((char *)v69 + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_callToActionLabel);
  [v53 setTextAlignment:v68];
  uint64_t v54 = v66;
  uint64_t v55 = v33(v66, v32, v12);
  id v56 = v67;
  HeroCarouselItemOverlay.DisplayOptions.textColorOverrides.getter(v55);
  uint64_t v57 = v36(v54, v12);
  id v58 = (id)HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.callToActionColor.getter(v57);
  v40(v56, v70);
  if (!v58) {
    id v58 = [(id)objc_opt_self(UIColor) labelColor];
  }
  [v53 setTextColor:v58];

  return [v69 setNeedsLayout];
}

id sub_100064680(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0LL;
  }
  id v4 = objc_allocWithZone(&OBJC_CLASS___NSTextAttachment);
  swift_bridgeObjectRetain(a2);
  id v5 = [v4 init];
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_callToActionLabel);
  id result = [v6 font];
  if (result)
  {
    uint64_t v8 = result;
    id v9 =  [(id)objc_opt_self(UIImageSymbolConfiguration) configurationWithFont:result scale:1];

    id v10 = v9;
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [(id)objc_opt_self(UIImage) systemImageNamed:v11 withConfiguration:v10];

    if (!v12)
    {
      id v15 = 0LL;
      goto LABEL_8;
    }

    id v13 = [v12 imageWithRenderingMode:2];

    id result = [v6 textColor];
    if (result)
    {
      uint64_t v14 = result;
      id v15 = [v13 imageWithTintColor:result];

LABEL_8:
      [v5 setImage:v15];
      id v17 = objc_allocWithZone(&OBJC_CLASS___NSMutableAttributedString);
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a2);
      id v16 = [v17 initWithString:v18];

      id v19 = [(id)objc_opt_self(NSAttributedString) attributedStringWithAttachment:v5];
      [v16 appendAttributedString:v19];

      return v16;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_10006493C()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_callToActionLabel), "text"));
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    uint64_t v5 = v4;
  }

  else
  {
    uint64_t v3 = 0LL;
    uint64_t v5 = 0LL;
  }

  v41[0] = v3;
  v41[1] = v5;
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_badgeLabel), "text"));
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v10 = v9;
  }

  else
  {
    uint64_t v8 = 0LL;
    uint64_t v10 = 0LL;
  }

  v41[2] = v8;
  v41[3] = v10;
  id v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                              + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_titleLabel), "text"));
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    uint64_t v15 = v14;
  }

  else
  {
    uint64_t v13 = 0LL;
    uint64_t v15 = 0LL;
  }

  uint64_t v42 = v13;
  uint64_t v43 = v15;
  id v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                              + OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_descriptionLabel), "text"));
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    uint64_t v20 = v19;

    uint64_t v44 = v18;
    uint64_t v45 = v20;
    if (v5) {
      goto LABEL_12;
    }
LABEL_17:
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
    if (!v10) {
      goto LABEL_23;
    }
    goto LABEL_18;
  }

  uint64_t v44 = 0LL;
  uint64_t v45 = 0LL;
  if (!v5) {
    goto LABEL_17;
  }
LABEL_12:
  swift_bridgeObjectRetain(v5);
  uint64_t v21 = sub_100019F48(0LL, 1LL, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v23 = *((void *)v21 + 2);
  unint64_t v22 = *((void *)v21 + 3);
  if (v23 >= v22 >> 1) {
    uint64_t v21 = sub_100019F48((char *)(v22 > 1), v23 + 1, 1, v21);
  }
  *((void *)v21 + 2) = v23 + 1;
  uint64_t v24 = &v21[16 * v23];
  *((void *)v24 + 4) = v3;
  *((void *)v24 + 5) = v5;
  if (v10)
  {
LABEL_18:
    swift_bridgeObjectRetain(v10);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0) {
      uint64_t v21 = sub_100019F48(0LL, *((void *)v21 + 2) + 1LL, 1, v21);
    }
    unint64_t v26 = *((void *)v21 + 2);
    unint64_t v25 = *((void *)v21 + 3);
    if (v26 >= v25 >> 1) {
      uint64_t v21 = sub_100019F48((char *)(v25 > 1), v26 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v26 + 1;
    uint64_t v27 = &v21[16 * v26];
    *((void *)v27 + 4) = v8;
    *((void *)v27 + 5) = v10;
    uint64_t v13 = v42;
    uint64_t v15 = v43;
  }

LABEL_23:
  if (v15)
  {
    swift_bridgeObjectRetain(v15);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0) {
      uint64_t v21 = sub_100019F48(0LL, *((void *)v21 + 2) + 1LL, 1, v21);
    }
    unint64_t v29 = *((void *)v21 + 2);
    unint64_t v28 = *((void *)v21 + 3);
    if (v29 >= v28 >> 1) {
      uint64_t v21 = sub_100019F48((char *)(v28 > 1), v29 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v29 + 1;
    uint64_t v30 = &v21[16 * v29];
    *((void *)v30 + 4) = v13;
    *((void *)v30 + 5) = v15;
  }

  uint64_t v31 = v45;
  if (v45)
  {
    uint64_t v32 = v44;
    swift_bridgeObjectRetain(v45);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0) {
      uint64_t v21 = sub_100019F48(0LL, *((void *)v21 + 2) + 1LL, 1, v21);
    }
    unint64_t v34 = *((void *)v21 + 2);
    unint64_t v33 = *((void *)v21 + 3);
    if (v34 >= v33 >> 1) {
      uint64_t v21 = sub_100019F48((char *)(v33 > 1), v34 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v34 + 1;
    uint64_t v35 = &v21[16 * v34];
    *((void *)v35 + 4) = v32;
    *((void *)v35 + 5) = v31;
  }

  uint64_t v36 = sub_1000031E8((uint64_t *)&unk_1002E0000);
  swift_arrayDestroy(v41, 4LL, v36);
  uint64_t v37 = sub_1000031E8(&qword_1002EAEC0);
  unint64_t v38 = sub_100008748();
  uint64_t v39 = BidirectionalCollection<>.joined(separator:)(8236LL, 0xE200000000000000LL, v37, v38);
  swift_bridgeObjectRelease(v21);
  return v39;
}

                __break(1u);
                goto LABEL_24;
              }

    uint64_t v14 = (v23 - 1) & v23;
    uint64_t v21 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    unint64_t v25 = *(void *)(v8 + 56);
    unint64_t v26 = v8;
    uint64_t v27 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    unint64_t v29 = *v27;
    unint64_t v28 = v27[1];
    uint64_t v30 = *(void *)(v6 + 72);
    uint64_t v31 = v25 + v30 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 32))(v46, v31, v47, v16);
    }

    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v46, v31, v47, v16);
      swift_bridgeObjectRetain(v28);
    }

    Hasher.init(_seed:)(v48);
    String.hash(into:)(v48, v29, v28);
    uint64_t v32 = Hasher._finalize()();
    unint64_t v33 = -1LL << *(_BYTE *)(v10 + 32);
    unint64_t v34 = v32 & ~v33;
    uint64_t v35 = v34 >> 6;
    if (((-1LL << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      uint64_t v18 = __clz(__rbit64((-1LL << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v36 = 0;
      uint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }

        unint64_t v38 = v35 == v37;
        if (v35 == v37) {
          uint64_t v35 = 0LL;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }

      while (v39 == -1);
      uint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }

    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *uint64_t v19 = v29;
    v19[1] = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v10 + 56) + v30 * v18, v46, v47);
    ++*(void *)(v10 + 16);
    uint64_t v8 = v26;
  }

  uint64_t v24 = v22 + 2;
  if (v24 < v43)
  {
    unint64_t v23 = v44[v24];
    if (!v23)
    {
      while (1)
      {
        id v17 = v24 + 1;
        if (__OFADD__(v24, 1LL)) {
          goto LABEL_43;
        }
        if (v17 >= v43) {
          goto LABEL_36;
        }
        unint64_t v23 = v44[v17];
        ++v24;
        if (v23) {
          goto LABEL_23;
        }
      }
    }

    id v17 = v24;
    goto LABEL_23;
  }

      swift_once(&qword_1002DC378, sub_100018F7C);
      goto LABEL_17;
    }

    unint64_t v23 = v16;
    uint64_t v49 = v5;
    uint64_t v51 = (id)objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v24 = swift_allocObject(&unk_100286660, 32LL, 7LL);
    *(void *)(v24 + swift_weakDestroy(v0 + 16) = v52;
    *(void *)(v24 + 24) = v15;
    unint64_t v25 = swift_allocObject(&unk_100286688, 32LL, 7LL);
    *(void *)(v25 + swift_weakDestroy(v0 + 16) = sub_1000D58E4;
    *(void *)(v25 + 24) = v24;
    uint64_t v50 = v24;
    id v58 = sub_100061B54;
    uint64_t v59 = v25;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v55 = 1107296256LL;
    id v56 = sub_100209610;
    uint64_t v57 = &unk_1002866A0;
    unint64_t v26 = _Block_copy(&aBlock);
    uint64_t v27 = v59;
    id v52 = v52;
    swift_retain(v25);
    *(void *)&unint64_t v28 = swift_release(v27).n128_u64[0];
    objc_msgSend(v51, "performWithoutAnimation:", v26, v28);
    _Block_release(v26);
    LOBYTE(v26) = swift_isEscapingClosureAtFileLocation(v25, "", 123LL, 323LL, 44LL, 1LL);
    swift_release(v25);
    if ((v26 & 1) != 0)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }

    if (__OFSUB__(v23, v15))
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }

    if (v23 - (uint64_t)v15 < 2)
    {
      swift_release(v50);

      return;
    }

    unint64_t v29 = v15 + 1;
    uint64_t v30 = sub_100003B6C( &qword_1002E8300,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet,  (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of SetAlgebra.init()(v4, v30);
    if (v29 != (char *)v23)
    {
      if ((uint64_t)v29 >= v23)
      {
        __break(1u);
        return;
      }

      do
      {
        uint64_t v53 = v29;
        dispatch thunk of SetAlgebra.insert(_:)(&aBlock, &v53, v4, v30);
        ++v29;
      }

      while ((char *)v23 != v29);
    }

    uint64_t v31 = v49;
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
    v32(v13, v10, v4);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v7, v13, v4);
    unint64_t v33 = *(unsigned __int8 *)(v31 + 80);
    unint64_t v34 = (v33 + 24) & ~v33;
    uint64_t v35 = swift_allocObject(&unk_1002866D8, v34 + v6, v33 | 7);
    uint64_t v36 = v52;
    *(void *)(v35 + swift_weakDestroy(v0 + 16) = v52;
    v32((char *)(v35 + v34), v7, v4);
    uint64_t v37 = swift_allocObject(&unk_100286700, 32LL, 7LL);
    *(void *)(v37 + swift_weakDestroy(v0 + 16) = sub_1000D5988;
    *(void *)(v37 + 24) = v35;
    id v58 = sub_100061D34;
    uint64_t v59 = v37;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v55 = 1107296256LL;
    id v56 = sub_100209610;
    uint64_t v57 = &unk_100286718;
    unint64_t v38 = _Block_copy(&aBlock);
    uint64_t v39 = v59;
    uint64_t v40 = v36;
    swift_retain(v37);
    *(void *)&uint64_t v41 = swift_release(v39).n128_u64[0];
    objc_msgSend(v51, "performWithoutAnimation:", v38, v41);
    _Block_release(v38);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v4);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v37, "", 123LL, 331LL, 48LL, 1LL);
    swift_release(v35);
    swift_release(v50);
    swift_release(v37);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
      goto LABEL_16;
    }
  }

    sub_1000F01AC((uint64_t)v65);
  }

  return LayoutRect.init(representing:)(a2, a3, a4, a5);
}

      swift_once(&qword_1002DC378, sub_100018F7C);
      goto LABEL_17;
    }

    unint64_t v25 = v17;
    uint64_t v53 = v12;
    uint64_t v54 = v4;
    unint64_t v26 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v27 = swift_allocObject(&unk_10028A5A0, 32LL, 7LL);
    *(void *)(v27 + swift_weakDestroy(v0 + 16) = v56;
    *(void *)(v27 + 24) = v14;
    unint64_t v28 = swift_allocObject(&unk_10028A5C8, 32LL, 7LL);
    *(void *)(v28 + swift_weakDestroy(v0 + 16) = sub_1001456B4;
    *(void *)(v28 + 24) = v27;
    uint64_t v55 = v27;
    __n128 v62 = sub_100061D34;
    uint64_t v63 = v28;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256LL;
    id v60 = sub_100209610;
    uint64_t v61 = &unk_10028A5E0;
    unint64_t v29 = _Block_copy(&aBlock);
    uint64_t v30 = v63;
    id v56 = v56;
    swift_retain(v28);
    *(void *)&uint64_t v31 = swift_release(v30).n128_u64[0];
    id v52 = v26;
    objc_msgSend(v26, "performWithoutAnimation:", v29, v31);
    _Block_release(v29);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v28, "", 123LL, 323LL, 44LL, 1LL);
    swift_release(v28);
    if ((v29 & 1) != 0)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }

    if (__OFSUB__(v25, v14))
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }

    if (v25 - (uint64_t)v14 <= 1)
    {
      swift_release(v55);

      return;
    }

    uint64_t v32 = v14 + 1;
    unint64_t v33 = sub_100003B6C( &qword_1002E8300,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet,  (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of SetAlgebra.init()(v3, v33);
    if (v32 != (char *)v25)
    {
      if ((uint64_t)v32 >= v25)
      {
        __break(1u);
        return;
      }

      do
      {
        uint64_t v57 = v32;
        dispatch thunk of SetAlgebra.insert(_:)(&aBlock, &v57, v3, v33);
        ++v32;
      }

      while ((char *)v25 != v32);
    }

    uint64_t v35 = v53;
    unint64_t v34 = v54;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v36(v53, v9, v3);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v6, v35, v3);
    uint64_t v37 = *(unsigned __int8 *)(v34 + 80);
    unint64_t v38 = (v37 + 24) & ~v37;
    uint64_t v39 = swift_allocObject(&unk_10028A618, v38 + v5, v37 | 7);
    uint64_t v40 = v56;
    *(void *)(v39 + swift_weakDestroy(v0 + 16) = v56;
    v36((char *)(v39 + v38), v6, v3);
    uint64_t v41 = swift_allocObject(&unk_10028A640, 32LL, 7LL);
    *(void *)(v41 + swift_weakDestroy(v0 + 16) = sub_10014533C;
    *(void *)(v41 + 24) = v39;
    __n128 v62 = sub_100061D34;
    uint64_t v63 = v41;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256LL;
    id v60 = sub_100209610;
    uint64_t v61 = &unk_10028A658;
    uint64_t v42 = _Block_copy(&aBlock);
    uint64_t v43 = v63;
    uint64_t v44 = v40;
    swift_retain(v41);
    *(void *)&uint64_t v45 = swift_release(v43).n128_u64[0];
    objc_msgSend(v52, "performWithoutAnimation:", v42, v45);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v3);
    id v46 = swift_isEscapingClosureAtFileLocation(v41, "", 123LL, 331LL, 48LL, 1LL);
    swift_release(v39);
    swift_release(v55);
    swift_release(v41);
    if ((v46 & 1) != 0)
    {
      __break(1u);
      goto LABEL_16;
    }
  }

      swift_once(&qword_1002DC378, sub_100018F7C);
      goto LABEL_17;
    }

    unint64_t v25 = v17;
    uint64_t v53 = v12;
    uint64_t v54 = v4;
    unint64_t v26 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v27 = swift_allocObject(&unk_10028A0F0, 32LL, 7LL);
    *(void *)(v27 + swift_weakDestroy(v0 + 16) = v56;
    *(void *)(v27 + 24) = v14;
    unint64_t v28 = swift_allocObject(&unk_10028A118, 32LL, 7LL);
    *(void *)(v28 + swift_weakDestroy(v0 + 16) = sub_100145320;
    *(void *)(v28 + 24) = v27;
    uint64_t v55 = v27;
    __n128 v62 = sub_100061D34;
    uint64_t v63 = v28;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256LL;
    id v60 = sub_100209610;
    uint64_t v61 = &unk_10028A130;
    unint64_t v29 = _Block_copy(&aBlock);
    uint64_t v30 = v63;
    id v56 = v56;
    swift_retain(v28);
    *(void *)&uint64_t v31 = swift_release(v30).n128_u64[0];
    id v52 = v26;
    objc_msgSend(v26, "performWithoutAnimation:", v29, v31);
    _Block_release(v29);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v28, "", 123LL, 323LL, 44LL, 1LL);
    swift_release(v28);
    if ((v29 & 1) != 0)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }

    if (__OFSUB__(v25, v14))
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }

    if (v25 - (uint64_t)v14 <= 1)
    {
      swift_release(v55);

      return;
    }

    uint64_t v32 = v14 + 1;
    unint64_t v33 = sub_100003B6C( &qword_1002E8300,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet,  (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of SetAlgebra.init()(v3, v33);
    if (v32 != (char *)v25)
    {
      if ((uint64_t)v32 >= v25)
      {
        __break(1u);
        return;
      }

      do
      {
        uint64_t v57 = v32;
        dispatch thunk of SetAlgebra.insert(_:)(&aBlock, &v57, v3, v33);
        ++v32;
      }

      while ((char *)v25 != v32);
    }

    uint64_t v35 = v53;
    unint64_t v34 = v54;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v36(v53, v9, v3);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v6, v35, v3);
    uint64_t v37 = *(unsigned __int8 *)(v34 + 80);
    unint64_t v38 = (v37 + 24) & ~v37;
    uint64_t v39 = swift_allocObject(&unk_10028A168, v38 + v5, v37 | 7);
    uint64_t v40 = v56;
    *(void *)(v39 + swift_weakDestroy(v0 + 16) = v56;
    v36((char *)(v39 + v38), v6, v3);
    uint64_t v41 = swift_allocObject(&unk_10028A190, 32LL, 7LL);
    *(void *)(v41 + swift_weakDestroy(v0 + 16) = sub_10014533C;
    *(void *)(v41 + 24) = v39;
    __n128 v62 = sub_100061D34;
    uint64_t v63 = v41;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256LL;
    id v60 = sub_100209610;
    uint64_t v61 = &unk_10028A1A8;
    uint64_t v42 = _Block_copy(&aBlock);
    uint64_t v43 = v63;
    uint64_t v44 = v40;
    swift_retain(v41);
    *(void *)&uint64_t v45 = swift_release(v43).n128_u64[0];
    objc_msgSend(v52, "performWithoutAnimation:", v42, v45);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v3);
    id v46 = swift_isEscapingClosureAtFileLocation(v41, "", 123LL, 331LL, 48LL, 1LL);
    swift_release(v39);
    swift_release(v55);
    swift_release(v41);
    if ((v46 & 1) != 0)
    {
      __break(1u);
      goto LABEL_16;
    }
  }

      swift_once(&qword_1002DC378, sub_100018F7C);
      goto LABEL_17;
    }

    unint64_t v25 = v17;
    uint64_t v53 = v12;
    uint64_t v54 = v4;
    unint64_t v26 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v27 = swift_allocObject(&unk_10028A348, 32LL, 7LL);
    *(void *)(v27 + swift_weakDestroy(v0 + 16) = v56;
    *(void *)(v27 + 24) = v14;
    unint64_t v28 = swift_allocObject(&unk_10028A370, 32LL, 7LL);
    *(void *)(v28 + swift_weakDestroy(v0 + 16) = sub_1001456B4;
    *(void *)(v28 + 24) = v27;
    uint64_t v55 = v27;
    __n128 v62 = sub_100061D34;
    uint64_t v63 = v28;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256LL;
    id v60 = sub_100209610;
    uint64_t v61 = &unk_10028A388;
    unint64_t v29 = _Block_copy(&aBlock);
    uint64_t v30 = v63;
    id v56 = v56;
    swift_retain(v28);
    *(void *)&uint64_t v31 = swift_release(v30).n128_u64[0];
    id v52 = v26;
    objc_msgSend(v26, "performWithoutAnimation:", v29, v31);
    _Block_release(v29);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v28, "", 123LL, 323LL, 44LL, 1LL);
    swift_release(v28);
    if ((v29 & 1) != 0)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }

    if (__OFSUB__(v25, v14))
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }

    if (v25 - (uint64_t)v14 <= 1)
    {
      swift_release(v55);

      return;
    }

    uint64_t v32 = v14 + 1;
    unint64_t v33 = sub_100003B6C( &qword_1002E8300,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet,  (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of SetAlgebra.init()(v3, v33);
    if (v32 != (char *)v25)
    {
      if ((uint64_t)v32 >= v25)
      {
        __break(1u);
        return;
      }

      do
      {
        uint64_t v57 = v32;
        dispatch thunk of SetAlgebra.insert(_:)(&aBlock, &v57, v3, v33);
        ++v32;
      }

      while ((char *)v25 != v32);
    }

    uint64_t v35 = v53;
    unint64_t v34 = v54;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v36(v53, v9, v3);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v6, v35, v3);
    uint64_t v37 = *(unsigned __int8 *)(v34 + 80);
    unint64_t v38 = (v37 + 24) & ~v37;
    uint64_t v39 = swift_allocObject(&unk_10028A3C0, v38 + v5, v37 | 7);
    uint64_t v40 = v56;
    *(void *)(v39 + swift_weakDestroy(v0 + 16) = v56;
    v36((char *)(v39 + v38), v6, v3);
    uint64_t v41 = swift_allocObject(&unk_10028A3E8, 32LL, 7LL);
    *(void *)(v41 + swift_weakDestroy(v0 + 16) = sub_10014533C;
    *(void *)(v41 + 24) = v39;
    __n128 v62 = sub_100061D34;
    uint64_t v63 = v41;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256LL;
    id v60 = sub_100209610;
    uint64_t v61 = &unk_10028A400;
    uint64_t v42 = _Block_copy(&aBlock);
    uint64_t v43 = v63;
    uint64_t v44 = v40;
    swift_retain(v41);
    *(void *)&uint64_t v45 = swift_release(v43).n128_u64[0];
    objc_msgSend(v52, "performWithoutAnimation:", v42, v45);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v3);
    id v46 = swift_isEscapingClosureAtFileLocation(v41, "", 123LL, 331LL, 48LL, 1LL);
    swift_release(v39);
    swift_release(v55);
    swift_release(v41);
    if ((v46 & 1) != 0)
    {
      __break(1u);
      goto LABEL_16;
    }
  }

        __break(1u);
        goto LABEL_24;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
    goto LABEL_23;
  }

    id v16 = (v22 - 1) & v22;
    uint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))( v12,  *(void *)(a1 + 48) + *(void *)(v7 + 72) * v20,  v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_10002A410((uint64_t)v9, (uint64_t)v5);
    sub_100006060((uint64_t)v5, (uint64_t *)&unk_1002E6FB0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  unint64_t v23 = v21 + 4;
  if (v23 >= v17)
  {
LABEL_24:
    swift_release(a1);
    return;
  }

  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    uint64_t v18 = v23;
    goto LABEL_23;
  }

  while (1)
  {
    uint64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1LL)) {
      break;
    }
    if (v18 >= v17) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }

  id v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0LL]) {
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  }
  return 1LL;
}

id sub_100064E18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarouselItemButtonOverlay(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100064F10()
{
  return type metadata accessor for CarouselItemButtonOverlay(0LL);
}

uint64_t type metadata accessor for CarouselItemButtonOverlay(uint64_t a1)
{
  uint64_t result = qword_1002DFFD8;
  if (!qword_1002DFFD8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CarouselItemButtonOverlay);
  }
  return result;
}

uint64_t sub_100064F54(uint64_t a1)
{
  uint64_t result = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    _OWORD v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = &unk_100235B60;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 9LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100064FE4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100065008(uint64_t a1)
{
  return sub_100063CF8( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  &qword_1002DC4A8,  (uint64_t)qword_1002DFEF8,  (uint64_t)sub_100061D64);
}

uint64_t sub_100065038(uint64_t a1)
{
  return sub_100063CF8( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  &qword_1002DC4B0,  (uint64_t)qword_1002DFF10,  (uint64_t)sub_100061D80);
}

uint64_t sub_100065068()
{
  uint64_t v1 = type metadata accessor for StaticDimension(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1000650E8(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for StaticDimension(0LL) - 8) + 80LL);
  return sub_100063EDC(a1, *(void *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10006513C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10006514C(uint64_t a1)
{
  return sub_100064118(a1, *(_BYTE *)(v1 + 16));
}

id sub_100065158(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0LL);
  uint64_t v63 = *(void **)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v65 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v64 = (char *)v61 - v7;
  __chkstk_darwin(v8);
  uint64_t v69 = (char *)v61 - v9;
  __chkstk_darwin(v10);
  uint64_t v68 = (char *)v61 - v11;
  uint64_t v12 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0LL);
  uint64_t v13 = *(void **)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)v61 - v18;
  HeroCarouselItemOverlay.displayOptions.getter(v17);
  uint64_t v20 = &v1[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_displayOptions];
  swift_beginAccess(v20, &v73, 33LL, 0LL);
  uint64_t v21 = (void (*)(char *, char *, uint64_t))v13[3];
  uint64_t v70 = v20;
  v21(v20, v19, v12);
  swift_endAccess(&v73);
  sub_100064170();
  uint64_t v67 = (uint64_t (*)(char *, uint64_t))v13[1];
  uint64_t v22 = v67(v19, v12);
  unint64_t v23 = *(void **)&v2[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_button];
  HeroCarouselItemOverlay.buttonTitle.getter(v22);
  uint64_t v25 = v24;
  NSString v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setTitle:forState:", v26, 0, swift_bridgeObjectRelease(v25).n128_f64[0]);

  uint64_t v27 = *(void **)&v2[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_badgeLabel];
  HeroCarouselItemOverlay.badgeText.getter();
  if (v28)
  {
    uint64_t v30 = v28;
    NSString v31 = String._bridgeToObjectiveC()();
    *(void *)&double v29 = swift_bridgeObjectRelease(v30).n128_u64[0];
  }

  else
  {
    NSString v31 = 0LL;
  }

  objc_msgSend(v27, "setText:", v31, v29);

  uint64_t v32 = *(void **)&v2[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_titleLabel];
  HeroCarouselItemOverlay.titleText.getter();
  if (v33)
  {
    uint64_t v35 = v33;
    NSString v36 = String._bridgeToObjectiveC()();
    *(void *)&double v34 = swift_bridgeObjectRelease(v35).n128_u64[0];
  }

  else
  {
    NSString v36 = 0LL;
  }

  objc_msgSend(v32, "setText:", v36, v34);

  id v66 = *(id *)&v2[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_descriptionLabel];
  HeroCarouselItemOverlay.descriptionText.getter();
  v61[1] = a1;
  if (v37)
  {
    uint64_t v39 = v37;
    NSString v40 = String._bridgeToObjectiveC()();
    *(void *)&double v38 = swift_bridgeObjectRelease(v39).n128_u64[0];
  }

  else
  {
    NSString v40 = 0LL;
  }

  uint64_t v41 = v63;
  objc_msgSend(v66, "setText:", v40, v38);

  uint64_t v63 = (void *)v13[2];
  uint64_t v42 = ((uint64_t (*)(char *, char *, uint64_t))v63)(v15, v70, v12);
  HeroCarouselItemOverlay.DisplayOptions.textAlignment.getter(v42);
  v67(v15, v12);
  uint64_t v43 = enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.center(_:);
  __n128 v62 = (void (*)(char *, uint64_t, uint64_t))v41[13];
  v62(v69, enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.center(_:), v4);
  uint64_t v44 = sub_100003B6C( &qword_1002DFFE8,  (uint64_t (*)(uint64_t))&type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment,  (uint64_t)&protocol conformance descriptor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment);
  dispatch thunk of RawRepresentable.rawValue.getter(&v73, v4, v44);
  dispatch thunk of RawRepresentable.rawValue.getter(&v71, v4, v44);
  uint64_t v45 = v74;
  uint64_t v46 = v72;
  if (v73 == v71 && v74 == v72)
  {
    char v47 = 1;
    uint64_t v46 = v74;
  }

  else
  {
    char v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v74, v71, v72, 0LL);
  }

  swift_bridgeObjectRelease(v45);
  __n128 v48 = swift_bridgeObjectRelease(v46);
  uint64_t v49 = (void (*)(char *, uint64_t, __n128))v41[1];
  v49(v69, v4, v48);
  ((void (*)(char *, uint64_t))v49)(v68, v4);
  id v50 = [v66 setHidden:v47 & 1];
  uint64_t v51 = *(void **)&v2[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_callToActionLabel];
  uint64_t v52 = HeroCarouselItemOverlay.callToActionText.getter(v50);
  uint64_t v54 = v53;
  id v55 = sub_100064680(v52, v53);
  objc_msgSend(v51, "setAttributedText:", v55, swift_bridgeObjectRelease(v54).n128_f64[0]);

  uint64_t v56 = ((uint64_t (*)(char *, char *, uint64_t))v63)(v19, v70, v12);
  uint64_t v57 = v64;
  HeroCarouselItemOverlay.DisplayOptions.textAlignment.getter(v56);
  v67(v19, v12);
  id v58 = v65;
  v62(v65, v43, v4);
  uint64_t v59 = sub_100003B6C( (unint64_t *)&unk_1002E0030,  (uint64_t (*)(uint64_t))&type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment,  (uint64_t)&protocol conformance descriptor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment);
  LOBYTE(v55) = dispatch thunk of static Equatable.== infix(_:_:)(v57, v58, v4, v59);
  ((void (*)(char *, uint64_t))v49)(v58, v4);
  ((void (*)(char *, uint64_t))v49)(v57, v4);
  [v51 setHidden:(v55 & 1) == 0];
  return [v2 setNeedsLayout];
}

void sub_100065658()
{
  uint64_t v1 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0LL);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0LL);
  __n128 v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, __n128))(v12 + 104))( v11,  enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.leading(_:),  v9);
  uint64_t v13 = (*(uint64_t (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:),  v4);
  HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.init()(v13);
  HeroCarouselItemOverlay.DisplayOptions.init(textAlignment:horizontalPlacement:textColorOverrides:isOverDarkContent:)( v11,  v7,  v3,  1LL);
  uint64_t v14 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_materialBackground;
  *(void *)&v0[v14] = [objc_allocWithZone(UIVisualEffectView) init];
  uint64_t v15 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_button;
  *(void *)&v0[v15] = [(id)objc_opt_self(UIButton) buttonWithType:1];
  uint64_t v16 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_badgeLabel;
  uint64_t v17 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v17);
  *(void *)&v0[v16] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v19 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_titleLabel;
  *(void *)&v0[v19] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v20 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_descriptionLabel;
  *(void *)&v0[v20] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v21 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_callToActionLabel;
  *(void *)&v0[v21] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v22 = OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_focusGuide;
  *(void *)&v0[v22] = [objc_allocWithZone(UIFocusGuide) init];
  unint64_t v23 = &v0[OBJC_IVAR____TtC6Arcade25CarouselItemButtonOverlay_selectionHandler];
  *(void *)unint64_t v23 = 0LL;
  *((void *)v23 + 1) = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/CarouselItemButtonOverlay.swift",  38LL,  2LL,  105LL,  0);
  __break(1u);
}

uint64_t sub_1000658CC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000658F0(uint64_t a1)
{
}

uint64_t sub_1000658F8(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8(&qword_1002DE930);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for OnboardingConfiguration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_100065988 + 4 * byte_100235B95[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000659BC + 4 * byte_100235B90[v4]))();
}

uint64_t sub_1000659BC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000659C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1000659CCLL);
  }
  return result;
}

uint64_t sub_1000659D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1000659E0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1000659E4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000659EC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingConfiguration()
{
  return &type metadata for OnboardingConfiguration;
}

unint64_t sub_100065A0C()
{
  unint64_t result = qword_1002E0040;
  if (!qword_1002E0040)
  {
    unint64_t result = swift_getWitnessTable(&unk_100235C28, &type metadata for OnboardingConfiguration);
    atomic_store(result, (unint64_t *)&qword_1002E0040);
  }

  return result;
}

uint64_t sub_100065A50()
{
  uint64_t v0 = type metadata accessor for OSLogger.Subsystem(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OSLogger(0LL);
  sub_10000FF90(v4, qword_1002EEA08);
  sub_1000061F4(v4, (uint64_t)qword_1002EEA08);
  if (qword_1002DD0D8 != -1) {
    swift_once(&qword_1002DD0D8, sub_1001DF564);
  }
  uint64_t v5 = sub_1000061F4(v0, (uint64_t)qword_1002F1690);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSLogger.init(subsystem:category:)(v3, 0xD000000000000017LL, 0x8000000100235BB0LL);
}

uint64_t sub_100065B50()
{
  qword_1002EEA28 = 0LL;
  return swift_unknownObjectWeakInit(&unk_1002EEA20, 0LL);
}

uint64_t sub_100065B64()
{
  return swift_unknownObjectWeakInit(&unk_1002EEA30, 0LL);
}

NSString sub_100065B74()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002EEA38 = (uint64_t)result;
  return result;
}

uint64_t sub_100065BA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OSLogger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC4D0 != -1) {
    swift_once(&qword_1002DC4D0, sub_100065A50);
  }
  uint64_t v6 = sub_1000061F4(v2, (uint64_t)qword_1002EEA08);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v8 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v9 = swift_allocObject( v7,  ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
       + 2LL * *(void *)(v8 + 72),
         *(unsigned __int8 *)(v8 + 80) | 7LL);
  *(_OWORD *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
  LogMessage.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100246000LL);
  uint64_t v10 = (void *)_convertErrorToNSError(_:)(a1);
  id v11 = (id)AMSLogableError();

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  uint64_t v14 = v13;

  v17[3] = &type metadata for String;
  v17[0] = v12;
  v17[1] = v14;
  static LogMessage.safe(_:)(v17);
  sub_100029100((uint64_t)v17);
  Logger.error(_:)(v9, v2, &protocol witness table for OSLogger);
  __n128 v15 = swift_bridgeObjectRelease(v9);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
}

uint64_t sub_100065D60(uint64_t a1)
{
  Boolean keyExistsAndHasValidFormat = 0;
  if (qword_1002DC4E8 != -1) {
    swift_once(&qword_1002DC4E8, sub_100065B74);
  }
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue( (CFStringRef)qword_1002EEA38,  kCFPreferencesCurrentApplication,  &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    BOOL v3 = AppIntegerValue < 4;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    return 1LL;
  }
  uint64_t v5 = type metadata accessor for ASKBagContract(0LL);
  uint64_t v6 = inject(_:from:)(v5, a1);
  char v7 = ASKBagContract.isArcadeSupported.getter();
  swift_release(v6);
  if ((v7 & 1) != 0) {
    uint64_t v8 = &off_10027FE80;
  }
  else {
    uint64_t v8 = &off_10027FEC0;
  }
  uint64_t v9 = (uint64_t *)&unk_10027FE90;
  if ((v7 & 1) == 0) {
    uint64_t v9 = (uint64_t *)&unk_10027FED0;
  }
  uint64_t v10 = *v9;
  if (*v9)
  {
    id v11 = (void *)objc_opt_self(&OBJC_CLASS___AMSAcknowledgePrivacyTask);
    if ((v7 & 1) != 0) {
      uint64_t v12 = &off_10027FE80;
    }
    else {
      uint64_t v12 = &off_10027FEC0;
    }
    uint64_t v13 = v10 - 1;
    uint64_t v14 = v12 + 5;
    do
    {
      uint64_t v15 = v13;
      uint64_t v16 = *v14;
      swift_bridgeObjectRetain(*v14);
      NSString v17 = String._bridgeToObjectiveC()();
      id v4 = objc_msgSend( v11,  "acknowledgementNeededForPrivacyIdentifier:",  v17,  swift_bridgeObjectRelease(v16).n128_f64[0]);

      uint64_t v13 = v15 - 1;
      v14 += 2;
    }

    while (v15);
  }

  else
  {
    id v4 = 0LL;
  }

  swift_bridgeObjectRelease(v8);
  return (uint64_t)v4;
}

void sub_100065F00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v6 = sub_100048E8C();
  *uint64_t v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  uint64_t v7 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
  {
    uint64_t v7 = (uint64_t)[objc_allocWithZone(NSNumber) initWithInteger:4];
    if (qword_1002DC4E8 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_1002DC4E8, sub_100065B74);
LABEL_3:
  CFPreferencesSetAppValue((CFStringRef)qword_1002EEA38, (CFPropertyListRef)v7, kCFPreferencesCurrentApplication);

  uint64_t v8 = type metadata accessor for ASKBagContract(0LL);
  uint64_t v9 = inject(_:from:)(v8, a1);
  char v10 = ASKBagContract.isArcadeSupported.getter();
  swift_release(v9);
  if ((v10 & 1) != 0) {
    id v11 = &off_10027FE80;
  }
  else {
    id v11 = &off_10027FEC0;
  }
  uint64_t v12 = sub_10020C120((uint64_t)v11);
  swift_bridgeObjectRelease(v11);
  id v13 = objc_allocWithZone(&OBJC_CLASS___AMSAcknowledgePrivacyTask);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  id v15 = objc_msgSend(v13, "initWithPrivacyIdentifiers:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

  id v16 = [v15 acknowledgePrivacy];
  aBlock[4] = sub_100065BA8;
  void aBlock[5] = 0LL;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_10004FE30;
  aBlock[3] = &unk_100283250;
  NSString v17 = _Block_copy(aBlock);
  [v16 addErrorBlock:v17];
  _Block_release(v17);

  if (qword_1002DC4D8 != -1) {
    swift_once(&qword_1002DC4D8, sub_100065B50);
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(&unk_1002EEA20);
  if (Strong)
  {
    uint64_t v19 = Strong;
    uint64_t v20 = qword_1002EEA28;
    uint64_t ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20);

    swift_unknownObjectRelease(v19);
  }

  else
  {
  }

uint64_t sub_1000661B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000661C0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_1000661C8(uint64_t a1)
{
  uint64_t v31 = v37[1];
  uint64_t v32 = (void *)v37[0];
  uint64_t v3 = v37[4];
  uint64_t v29 = v37[3];
  uint64_t v30 = v37[2];
  uint64_t v4 = v37[5];
  char v28 = v38;
  id v25 = v1;
  id v5 = [v1 _idleModeLayoutAttributes];
  if (v5)
  {
    unint64_t v6 = v5;
    id v7 = [objc_allocWithZone((Class)ASUIIdleModeLayoutAttributes) init];
    [v6 centerOffset];
    objc_msgSend(v7, "setCenterOffset:");
    id v8 = v7;
    [v6 transform];
    [v8 setTransform:v50];

    id v9 = v8;
    [v6 alphaOffset];
    objc_msgSend(v9, "setAlphaOffset:");

    id v10 = v9;
    objc_msgSend(v10, "setWantsDimmingOverlay:", objc_msgSend(v6, "wantsDimmingOverlay"));

    sub_100066BDC(v10, (uint64_t)v33);
    uint64_t v12 = (void *)v33[0];
    uint64_t v11 = v33[1];
    __int128 v26 = v34;
    __int128 v27 = v35;
    int v13 = v36;
  }

  else
  {
    uint64_t v12 = 0LL;
    uint64_t v11 = 0LL;
    __int128 v26 = 0uLL;
    __int128 v27 = 0uLL;
    int v13 = 255;
  }

  sub_100010014(a1, (uint64_t)v39);
  if (v39[48] == 255)
  {
    if (v13 == 255) {
      return;
    }
    sub_100010098(v32, v31, v30, v29, v3, v4, v28);
    sub_100010098(v12, v11, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v13);
    uint64_t v19 = 0LL;
  }

  else
  {
    sub_10001005C((uint64_t)v39, (uint64_t)v40);
    uint64_t v24 = v4;
    if (v13 == 255)
    {
      uint64_t v18 = v29;
      uint64_t v20 = v4;
      uint64_t v21 = v4;
      char v14 = v28;
      sub_1000668CC(v32, v31, v30, v29, v3, v20, v28);
      sub_100010098(v32, v31, v30, v29, v3, v21, v28);
      sub_100010098(v12, v11, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), 255);
    }

    else
    {
      uint64_t v23 = v3;
      v50[0] = v12;
      v50[1] = v11;
      __int128 v51 = v26;
      __int128 v52 = v27;
      char v53 = v13;
      v48[0] = v32;
      v48[1] = v31;
      v48[2] = v30;
      v48[3] = v29;
      v48[4] = v3;
      v48[5] = v4;
      char v14 = v28;
      char v49 = v28;
      sub_100066DB4(a1, (void (*)(void, void, void, void, void, void, void))sub_100066BC8);
      sub_100066DB4(a1, (void (*)(void, void, void, void, void, void, void))sub_100066BC8);
      sub_1000668E0((uint64_t)v48);
      char v16 = v15;
      char v17 = v13;
      uint64_t v18 = v29;
      sub_100010098(v12, v11, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v17);
      sub_100066DB4(a1, (void (*)(void, void, void, void, void, void, void))sub_100010098);
      sub_100066DB4(a1, (void (*)(void, void, void, void, void, void, void))sub_100010098);
      if ((v16 & 1) != 0)
      {
        sub_100066DB4(a1, (void (*)(void, void, void, void, void, void, void))sub_100010098);
        return;
      }
    }

    uint64_t v41 = v32;
    uint64_t v42 = v31;
    uint64_t v43 = v30;
    uint64_t v44 = v18;
    uint64_t v45 = v3;
    uint64_t v46 = v24;
    char v47 = v14;
    sub_1000668CC(v32, v31, v30, v18, v3, v24, v14);
    sub_1000665AC();
    uint64_t v19 = v22;
    sub_100066DB4(a1, (void (*)(void, void, void, void, void, void, void))sub_100010098);
  }

  objc_msgSend(v25, "_setIdleModeLayoutAttributes:", v19, v23);
  sub_100066DB4(a1, (void (*)(void, void, void, void, void, void, void))sub_100010098);
}

void sub_10006659C()
{
  qword_1002EEA40 = 0x4034000000000000LL;
}

void sub_1000665AC()
{
  __asm { BR              X10 }

id sub_1000665FC()
{
  __int128 v5 = *(_OWORD *)(v0 - 88);
  __int128 v6 = *(_OWORD *)(v0 - 104);
  uint64_t v1 = *(void *)(v0 - 72);
  uint64_t v2 = *(void *)(v0 - 64);
  id v3 = [objc_allocWithZone((Class)ASUIIdleModeLayoutAttributes) init];
  v7[0] = v6;
  v7[1] = v5;
  uint64_t v8 = v1;
  uint64_t v9 = v2;
  [v3 setTransform:v7];
  return v3;
}

uint64_t sub_10006670C(uint64_t a1, uint64_t a2)
{
  return v3 & 1;
}

void sub_100066754(uint64_t a1@<X8>)
{
  id v3 = [v1 _idleModeLayoutAttributes];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [objc_allocWithZone((Class)ASUIIdleModeLayoutAttributes) init];
    [v4 centerOffset];
    objc_msgSend(v5, "setCenterOffset:");
    id v6 = v5;
    [v4 transform];
    [v6 setTransform:v16];

    id v7 = v6;
    [v4 alphaOffset];
    objc_msgSend(v7, "setAlphaOffset:");

    id v8 = v7;
    objc_msgSend(v8, "setWantsDimmingOverlay:", objc_msgSend(v4, "wantsDimmingOverlay"));

    sub_100066BDC(v8, (uint64_t)v16);
    __int128 v14 = v16[1];
    __int128 v15 = v16[0];
    __int128 v13 = v16[2];
    char v9 = v17;

    __int128 v11 = v13;
    __int128 v10 = v14;
    __int128 v12 = v15;
  }

  else
  {
    __int128 v12 = 0uLL;
    char v9 = -1;
    __int128 v10 = 0uLL;
    __int128 v11 = 0uLL;
  }

  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  *(_OWORD *)(a1 + 32) = v11;
  *(_BYTE *)(a1 + 48) = v9;
}

id sub_1000668CC(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 == 3) {
    return result;
  }
  return result;
}

void sub_1000668E0(uint64_t a1)
{
  __asm { BR              X10 }

uint64_t sub_100066930()
{
  __int128 v2 = v8;
  *(_OWORD *)(v1 - 144) = v7;
  *(_OWORD *)(v1 - 128) = v2;
  *(_OWORD *)(v1 - 112) = v9;
  sub_10001005C(v0, (uint64_t)v5);
  if (v6)
  {
    char v3 = 0;
  }

  else
  {
    v10[0] = v5[0];
    v10[1] = v5[1];
    __int128 v10[2] = v5[2];
    char v3 = static CGAffineTransform.== infix(_:_:)(v1 - 144, v10);
  }

  return v3 & 1;
}

id sub_100066BC8(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1) {
    return sub_1000668CC(result, a2, a3, a4, a5, a6, a7);
  }
  return result;
}

void sub_100066BDC(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4 = [a1 wantsDimmingOverlay];
  [a1 transform];
  v23[0] = v24;
  v23[1] = v25;
  _OWORD v23[2] = v26;
  __int128 v24 = 0x3FF0000000000000uLL;
  *(void *)&__int128 v25 = 0LL;
  *((void *)&v25 + 1) = 0x3FF0000000000000LL;
  __int128 v26 = 0uLL;
  char v5 = static CGAffineTransform.== infix(_:_:)(v23, &v24);
  [a1 alphaOffset];
  double v7 = v6;
  [a1 centerOffset];
  if (v9 != 0.0)
  {
    if (v4 & 1 | ((v5 & 1) == 0) || v7 != 0.0) {
      goto LABEL_18;
    }
    goto LABEL_9;
  }

  if ((v4 & 1) != 0)
  {
    if ((v5 & 1) != 0 && v7 == 0.0 && v8 == 0.0)
    {

      __int128 v10 = 0uLL;
      char v11 = 4;
      __int128 v12 = 0uLL;
LABEL_19:
      __int128 v16 = 0uLL;
      goto LABEL_20;
    }

uint64_t sub_100066DB4( uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

void destroy for IdleModeConfiguration(uint64_t a1)
{
}

uint64_t initializeWithCopy for IdleModeConfiguration(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(_BYTE *)(a2 + 48);
  sub_1000668CC(*(id *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for IdleModeConfiguration(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(_BYTE *)(a2 + 48);
  sub_1000668CC(*(id *)a2, v4, v5, v6, v7, v8, v9);
  __int128 v10 = *(void **)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v8;
  char v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1000100AC(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 initializeWithTake for IdleModeConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for IdleModeConfiguration(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 48);
  __int128 v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  __int128 v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1000100AC(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdleModeConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdleModeConfiguration( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 49) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 49) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 48) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_100067018(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_100067030(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0LL;
    LOBYTE(a2) = 4;
  }

  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IdleModeConfiguration()
{
  return &type metadata for IdleModeConfiguration;
}

void sub_100067068(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v2 = a1;
    }
    else {
      uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = __CocoaSet.makeIterator()(v2);
    uint64_t v4 = sub_100006028(0LL, (unint64_t *)&qword_1002DD600, &OBJC_CLASS___UIPress_ptr);
    unint64_t v5 = sub_10006B6B4();
    uint64_t v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    uint64_t v1 = v27[0];
    uint64_t v25 = v27[1];
    uint64_t v7 = v27[2];
    uint64_t v8 = v27[3];
    unint64_t v9 = v27[4];
  }

  else
  {
    uint64_t v10 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    uint64_t v6 = (void *)swift_bridgeObjectRetain(a1);
    uint64_t v8 = 0LL;
  }

  int64_t v24 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    uint64_t v17 = v8;
    if ((v1 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v21 = __CocoaSet.Iterator.next()(v6);
    if (!v21) {
      goto LABEL_34;
    }
    uint64_t v22 = v21;
    uint64_t v26 = v21;
    uint64_t v23 = sub_100006028(0LL, (unint64_t *)&qword_1002DD600, &OBJC_CLASS___UIPress_ptr);
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v23, 7LL);
    id v15 = v28;
    swift_unknownObjectRelease(v22);
    if (!v15) {
      goto LABEL_34;
    }
LABEL_13:
    id v16 = [v15 type];

    if (v16 == (id)4) {
      goto LABEL_34;
    }
  }

  if (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v8 << 6);
LABEL_12:
    id v15 = *(id *)(*(void *)(v1 + 48) + 8 * v14);
    if (!v15) {
      goto LABEL_34;
    }
    goto LABEL_13;
  }

  int64_t v18 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v18 >= v24) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v8;
    if (!v19)
    {
      uint64_t v8 = v17 + 2;
      if (v17 + 2 >= v24) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v8);
      if (!v19)
      {
        uint64_t v8 = v17 + 3;
        if (v17 + 3 >= v24) {
          goto LABEL_34;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v8);
        if (!v19)
        {
          uint64_t v8 = v17 + 4;
          if (v17 + 4 >= v24) {
            goto LABEL_34;
          }
          unint64_t v19 = *(void *)(v25 + 8 * v8);
          if (!v19)
          {
            uint64_t v8 = v17 + 5;
            if (v17 + 5 >= v24) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v25 + 8 * v8);
            if (!v19)
            {
              uint64_t v20 = v17 + 6;
              while (v24 != v20)
              {
                unint64_t v19 = *(void *)(v25 + 8 * v20++);
                if (v19)
                {
                  uint64_t v8 = v20 - 1;
                  goto LABEL_31;
                }
              }

void sub_10006734C(uint64_t a1, void *a2)
{
  char v5 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x150LL))() & (a1 == 1);
  if (a2)
  {
    CGFloat v6 = COERCE_DOUBLE(swift_allocObject(&unk_100283520, 26LL, 7LL));
    *(void *)(*(void *)&v6 + 16LL) = v2;
    *(_BYTE *)(*(void *)&v6 + 24LL) = v5;
    *(_BYTE *)(*(void *)&v6 + 25LL) = a1;
    *(void *)&aBlock.tCGFloat x = sub_10006B914;
    aBlock.tCGFloat y = v6;
    *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
    *(void *)&aBlock.CGFloat b = 1107296256LL;
    *(void *)&aBlock.CGFloat c = sub_100135408;
    *(void *)&aBlock.double d = &unk_100283538;
    uint64_t v7 = _Block_copy(&aBlock);
    tCGFloat y = aBlock.ty;
    id v9 = a2;
    uint64_t v10 = v2;
    swift_release(*(void *)&ty);
    [v9 addCoordinatedAnimations:v7 completion:0];
    _Block_release(v7);
  }

  else
  {
    char v12 = *((_BYTE *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_hasTiltMotionEffectsAttached);
    *((_BYTE *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_hasTiltMotionEffectsAttached) = v5;
    sub_1000694FC(v12);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, void))((swift_isaMask & *v2) + 0x1C8LL))(a1, 0LL);
  }

  if (((*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xC8LL))(v11) & 1) != 0)
  {
    if (a2)
    {
      CGFloat v13 = COERCE_DOUBLE(swift_allocObject(&unk_1002834D0, 25LL, 7LL));
      *(void *)(*(void *)&v13 + 16LL) = v2;
      *(_BYTE *)(*(void *)&v13 + 24LL) = a1;
      *(void *)&aBlock.tCGFloat x = sub_10006B8C8;
      aBlock.tCGFloat y = v13;
      *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
      *(void *)&aBlock.CGFloat b = 1107296256LL;
      *(void *)&aBlock.CGFloat c = sub_100135408;
      *(void *)&aBlock.double d = &unk_1002834E8;
      unint64_t v14 = _Block_copy(&aBlock);
      CGFloat v15 = aBlock.ty;
      id v16 = a2;
      uint64_t v17 = v2;
      swift_release(*(void *)&v15);
      [v16 addCoordinatedAnimations:v14 completion:0];
      _Block_release(v14);
    }

    else
    {
      id v18 = [v2 window];

      if (v18)
      {
        unint64_t v19 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
        CGFloat v20 = COERCE_DOUBLE(swift_allocObject(&unk_100283480, 25LL, 7LL));
        *(void *)(*(void *)&v20 + 16LL) = v2;
        *(_BYTE *)(*(void *)&v20 + 24LL) = a1;
        *(void *)&aBlock.tCGFloat x = sub_10006BB90;
        aBlock.tCGFloat y = v20;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256LL;
        *(void *)&aBlock.CGFloat c = sub_100135408;
        *(void *)&aBlock.double d = &unk_100283498;
        uint64_t v21 = _Block_copy(&aBlock);
        CGFloat v22 = aBlock.ty;
        uint64_t v23 = v2;
        swift_release(*(void *)&v22);
        [v19 animateWithDuration:v21 animations:0.07];
        _Block_release(v21);
      }

      else
      {
        sub_1000678F0(a1);
      }
    }
  }

  if ((_BYTE)a1)
  {
    char v24 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xB8LL))();
    __int128 v25 = 0uLL;
    if ((v24 & 1) != 0)
    {
      [v2 bounds];
      if (v26 > v27) {
        double v28 = v26;
      }
      else {
        double v28 = v27;
      }
      if (v28 <= 0.0)
      {
        CGFloat v32 = 0.0;
        char v29 = 0;
        __int128 v31 = xmmword_100235CC0;
        CGFloat a = 1.0;
        __int128 v25 = 0uLL;
      }

      else
      {
        if (qword_1002DC4F0 != -1)
        {
          double v33 = v28;
          swift_once(&qword_1002DC4F0, sub_10006659C);
          double v28 = v33;
        }

        CGAffineTransformMakeScale( &aBlock,  (v28 + *(double *)&qword_1002EEA40) / v28,  (v28 + *(double *)&qword_1002EEA40) / v28);
        char v29 = 0;
        CGFloat a = aBlock.a;
        __int128 v25 = *(_OWORD *)&aBlock.b;
        __int128 v31 = *(_OWORD *)&aBlock.d;
        CGFloat v32 = aBlock.ty;
      }
    }

    else
    {
      CGFloat a = 0.0;
      CGFloat v32 = 0.0;
      char v29 = -1;
      __int128 v31 = 0uLL;
    }
  }

  else
  {
    (*(void (**)(double *__return_ptr))((swift_isaMask & *v2) + 0xC0LL))(&v34);
    CGFloat a = v34;
    __int128 v25 = v35;
    __int128 v31 = v36;
    CGFloat v32 = v37;
    char v29 = v38;
  }

  aBlock.CGFloat a = a;
  *(_OWORD *)&aBlock.CGFloat b = v25;
  *(_OWORD *)&aBlock.double d = v31;
  aBlock.tCGFloat y = v32;
  char v40 = v29;
  sub_1000661C8((uint64_t)&aBlock);
}

uint64_t sub_100067730()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state);
}

uint64_t sub_100067740(uint64_t result)
{
  *(_BYTE *)(v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state) = result;
  return result;
}

double sub_100067750@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 48) = 4;
  return result;
}

uint64_t sub_100067768()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled);
}

id sub_100067778()
{
  return [v0 layer];
}

void sub_10006779C(_OWORD *a1)
{
  uint64_t v2 = (char *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset;
  __int128 v3 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset + 16);
  v19[0] = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset);
  v19[1] = v3;
  v20[0] = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset + 32);
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v1
                                           + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset
                                           + 41);
  __int128 v4 = a1[1];
  *(_OWORD *)uint64_t v2 = *a1;
  *((_OWORD *)v2 + 1) = v4;
  *((_OWORD *)v2 + 2) = a1[2];
  *(_OWORD *)(v2 + 41) = *(_OWORD *)((char *)a1 + 41);
  if (!sub_10006829C((double *)v19, (uint64_t)a1)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC8LL))() & 1) != 0)
  {
    id v18 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE0LL))();
    double v5 = *(double *)v2;
    double v6 = *((double *)v2 + 1);
    double v7 = *((double *)v2 + 2);
    double v8 = *((double *)v2 + 3);
    int v9 = v2[32];
    double v10 = *((double *)v2 + 5);
    double v11 = *((double *)v2 + 6);
    int v12 = v2[56];
    int v13 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v1) + 0x98LL))();
    if (v13)
    {
      if (v9) {
        double v16 = v5;
      }
      else {
        double v16 = v7;
      }
      if (v9) {
        double v17 = v6;
      }
      else {
        double v17 = v8;
      }
      if (v12) {
        double v14 = v5;
      }
      else {
        double v14 = v10;
      }
      if (v12) {
        double v15 = v6;
      }
      else {
        double v15 = v11;
      }
      if (v13 == 1) {
        double v5 = v16;
      }
      else {
        double v5 = v14;
      }
      if (v13 == 1) {
        double v6 = v17;
      }
      else {
        double v6 = v15;
      }
    }

    objc_msgSend(v18, "setShadowOffset:", v5, v6, v14, v15);
  }

void sub_1000678F0(char a1)
{
  uint64_t v2 = v1;
  __int128 v4 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  if ([v4 areAnimationsEnabled]
    && ([v4 inheritedAnimationDuration], v5 > COERCE_DOUBLE(1)))
  {
    double v6 = (char *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius;
    double v7 = *(double *)((char *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius);
    if (a1)
    {
      double v8 = v6 + 16;
      int v9 = (double *)(v6 + 8);
      double v10 = v6 + 32;
      double v11 = (double *)(v6 + 24);
      if (a1 == 1) {
        double v11 = v9;
      }
      else {
        double v8 = v10;
      }
      if (!*v8) {
        double v7 = *v11;
      }
    }

    NSString v12 = String._bridgeToObjectiveC()();
    int v13 = (void *)objc_opt_self(&OBJC_CLASS___CABasicAnimation);
    id v14 = [v13 animationWithKeyPath:v12];

    double v15 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0xE0LL);
    double v16 = (void *)v15();
    [v16 shadowRadius];

    Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v14 setFromValue:isa];

    Class v18 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v14 setToValue:v18];

    unint64_t v19 = (void *)v15();
    [v19 setShadowRadius:v7];

    id v20 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    unint64_t v22 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v21 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v22 >= v21 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1LL);
    }
    uint64_t v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
    specialized Array._endMutation()(v23);
    char v24 = (double *)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset);
    double v25 = *(double *)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset);
    double v26 = *(double *)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset + 8);
    if (a1)
    {
      if (a1 == 1)
      {
        double v28 = v24[2];
        double v27 = v24[3];
        int v29 = *((unsigned __int8 *)v24 + 32);
      }

      else
      {
        double v28 = v24[5];
        double v27 = v24[6];
        int v29 = *((unsigned __int8 *)v24 + 56);
      }

      if (!v29)
      {
        double v25 = v28;
        double v26 = v27;
      }
    }

    NSString v60 = String._bridgeToObjectiveC()();
    id v61 = [v13 animationWithKeyPath:v60];

    __n128 v62 = (void *)v15();
    [v62 shadowOffset];

    Class v63 = CGSize._bridgeToObjectiveC()().super.isa;
    [v61 setFromValue:v63];

    Class v64 = CGSize._bridgeToObjectiveC()().super.isa;
    [v61 setToValue:v64];

    uint64_t v65 = (void *)v15();
    objc_msgSend(v65, "setShadowOffset:", v25, v26);

    id v66 = v61;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v66);
    unint64_t v68 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v67 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v68 >= v67 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1LL);
    }
    uint64_t v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v66);
    specialized Array._endMutation()(v69);
    uint64_t v70 = (char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity;
    int v71 = *(_DWORD *)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity);
    if (a1)
    {
      uint64_t v72 = v70 + 8;
      uint64_t v73 = (int *)(v70 + 4);
      uint64_t v74 = v70 + 16;
      uint64_t v75 = (int *)(v70 + 12);
      if (a1 == 1) {
        uint64_t v75 = v73;
      }
      else {
        uint64_t v72 = v74;
      }
      if (!*v72) {
        int v71 = *v75;
      }
    }

    NSString v76 = String._bridgeToObjectiveC()();
    id v77 = [v13 animationWithKeyPath:v76];

    uint64_t v78 = (void *)v15();
    [v78 shadowOpacity];

    Class v79 = Float._bridgeToObjectiveC()().super.super.isa;
    [v77 setFromValue:v79];

    Class v80 = Float._bridgeToObjectiveC()().super.super.isa;
    [v77 setToValue:v80];

    uint64_t v81 = (void *)v15();
    LODWORD(v82) = v71;
    [v81 setShadowOpacity:v82];

    id v83 = v77;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v83);
    unint64_t v85 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v84 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v85 >= v84 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v84 > 1, v85 + 1, 1LL);
    }
    uint64_t v86 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v85, v83);
    specialized Array._endMutation()(v86);
    __n128 v87 = (char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor;
    uint64_t v88 = *(void **)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor);
    if (a1)
    {
      uint64_t v89 = (void *)(a1 == 1 ? *((void *)v87 + 1) : *((void *)v87 + 2));
    }

    id v90 = v88;
    NSString v91 = String._bridgeToObjectiveC()();
    id v92 = [v13 animationWithKeyPath:v91];

    uint64_t v93 = (void *)v15();
    id v94 = [v93 shadowColor];

    [v92 setFromValue:v94];
    id v95 = (void *)((uint64_t (*)(id))v15)([v92 setToValue:v90]);
    [v95 setShadowColor:v90];

    id v96 = v92;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
    unint64_t v98 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v97 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v98 >= v97 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v98 + 1, 1LL);
    }
    uint64_t v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v96);
    specialized Array._endMutation()(v99);
    id v100 = [objc_allocWithZone(CAAnimationGroup) init];
    [v4 inheritedAnimationDuration];
    [v100 setDuration:v101 * 0.5];
    sub_100006028(0LL, &qword_1002E0168, &OBJC_CLASS___CAAnimation_ptr);
    Class v102 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v100, "setAnimations:", v102, swift_bridgeObjectRelease(&_swiftEmptyArrayStorage).n128_f64[0]);

    id v103 = (void *)v15();
    id v104 = String._bridgeToObjectiveC()();
    [v103 addAnimation:v100 forKey:v104];

    uint64_t v59 = v104;
  }

  else
  {
    uint64_t v30 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE0LL);
    __int128 v31 = (void *)v30();
    CGFloat v32 = v31;
    double v33 = (char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius;
    double v34 = *(double *)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius);
    if (a1)
    {
      __int128 v35 = v33 + 16;
      __int128 v36 = (double *)(v33 + 8);
      double v37 = v33 + 32;
      char v38 = (double *)(v33 + 24);
      if (a1 == 1) {
        char v38 = v36;
      }
      else {
        __int128 v35 = v37;
      }
      if (!*v35) {
        double v34 = *v38;
      }
    }

    [v31 setShadowRadius:v34];

    uint64_t v39 = (void *)v30();
    char v40 = v39;
    uint64_t v41 = (double *)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset);
    double v42 = *(double *)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset);
    double v43 = *(double *)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset + 8);
    if (a1)
    {
      if (a1 == 1)
      {
        double v45 = v41[2];
        double v44 = v41[3];
        int v46 = *((unsigned __int8 *)v41 + 32);
      }

      else
      {
        double v45 = v41[5];
        double v44 = v41[6];
        int v46 = *((unsigned __int8 *)v41 + 56);
      }

      if (!v46)
      {
        double v42 = v45;
        double v43 = v44;
      }
    }

    objc_msgSend(v39, "setShadowOffset:", v42, v43);

    char v47 = (void *)v30();
    __n128 v48 = v47;
    char v49 = (char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity;
    LODWORD(v5_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_DWORD *)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity);
    if (a1)
    {
      __int128 v51 = v49 + 8;
      __int128 v52 = v49 + 4;
      char v53 = v49 + 16;
      uint64_t v54 = v49 + 12;
      if (a1 == 1) {
        uint64_t v54 = v52;
      }
      else {
        __int128 v51 = v53;
      }
      if (!*v51) {
        LODWORD(v5_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *v54;
      }
    }

    [v47 setShadowOpacity:v50];

    id v105 = (id)v30();
    id v55 = (char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor;
    uint64_t v56 = *(void **)((char *)v2 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor);
    if (a1)
    {
      uint64_t v57 = (void *)(a1 == 1 ? *((void *)v55 + 1) : *((void *)v55 + 2));
    }

    id v58 = v56;
    [v105 setShadowColor:v58];

    uint64_t v59 = v105;
  }
}

uint64_t static MotionEffects.pan.getter()
{
  return 12LL;
}

double sub_100068208()
{
  return 10.0;
}

double sub_100068210()
{
  return 60.0;
}

id sub_10006821C()
{
  uint64_t v1 = OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell____lazy_storage___tiltMotionEffectGroup;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell____lazy_storage___tiltMotionEffectGroup);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell____lazy_storage___tiltMotionEffectGroup);
  }

  else
  {
    id v4 = sub_10006994C(v0);
    double v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0LL;
  }

  id v6 = v2;
  return v3;
}

void *MotionEffects.verticalPan.unsafeMutableAddressor()
{
  return &static MotionEffects.verticalPan;
}

BOOL sub_100068288(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL sub_10006829C(double *a1, uint64_t a2)
{
  double v4 = *a1;
  double v5 = a1[1];
  sub_10006BA00((uint64_t)(a1 + 2), (uint64_t)v16);
  sub_10006BA00((uint64_t)(a1 + 5), (uint64_t)v15);
  double v8 = *(double *)(a2 + 16);
  double v7 = *(double *)(a2 + 24);
  char v9 = *(_BYTE *)(a2 + 32);
  double v11 = *(double *)(a2 + 40);
  double v10 = *(double *)(a2 + 48);
  uint64_t v12 = *(unsigned __int8 *)(a2 + 56);
  sub_10006BA00((uint64_t)v16, (uint64_t)v17);
  if ((v17[16] & 1) != 0)
  {
    if ((v9 & 1) == 0) {
      return 0LL;
    }
  }

  else
  {
    sub_10006BA00((uint64_t)v16, (uint64_t)v18);
    if ((v9 & 1) != 0 || v18[0] != v8 || v18[1] != v7) {
      return 0LL;
    }
  }

  sub_10006BA00((uint64_t)v15, (uint64_t)v18);
  if ((v19 & 1) == 0)
  {
    sub_10006BA00((uint64_t)v15, (uint64_t)v14);
    if ((v12 & 1) != 0) {
      return 0LL;
    }
    return v14[1] == v10 && v14[0] == v11;
  }

  return v12;
}

BOOL sub_100068394(void *a1, void *a2, unint64_t a3, void *a4, void *a5, unint64_t a6)
{
  if (a1)
  {
    if (!a4) {
      return 0LL;
    }
    type metadata accessor for CGColor(0LL);
    uint64_t v13 = v12;
    unint64_t v14 = sub_10006B66C();
    if ((static _CFObject.== infix(_:_:)(a1, a4, v13, v14) & 1) == 0) {
      return 0LL;
    }
  }

  else if (a4)
  {
    return 0LL;
  }

  if (a2 == (void *)1)
  {
    return 0LL;
  }

  if (!a2)
  {
    if (!a5) {
      goto LABEL_8;
    }
    return 0LL;
  }

  if (!a5) {
    return 0LL;
  }
  type metadata accessor for CGColor(0LL);
  uint64_t v22 = v21;
  sub_10000AAF8(a2);
  sub_10000AAF8(a5);
  id v23 = a1;
  sub_10000AAF8((id)a3);
  id v24 = a4;
  sub_10000AAF8((id)a6);
  unint64_t v25 = sub_10006B66C();
  LOBYTE(v22) = static _CFObject.== infix(_:_:)(a2, a5, v22, v25);

  sub_10000AB08(a5);
  sub_10000AB08((id)a6);

  sub_10000AB08((id)a3);
  sub_10000AB08(a2);
  if ((v22 & 1) == 0) {
    return 0LL;
  }
LABEL_8:
  BOOL result = a6 == 1 && a3 == 1;
  if (a3 != 1 && a6 != 1)
  {
    BOOL result = (a3 | a6) == 0;
    if (a3)
    {
      if (a6)
      {
        type metadata accessor for CGColor(0LL);
        uint64_t v17 = v16;
        sub_10000AAF8(a2);
        sub_10000AAF8(a5);
        id v18 = a1;
        sub_10000AAF8((id)a3);
        id v19 = a4;
        sub_10000AAF8((id)a6);
        unint64_t v20 = sub_10006B66C();
        LOBYTE(v17) = static _CFObject.== infix(_:_:)(a3, a6, v17, v20);

        sub_10000AB08(a5);
        sub_10000AB08((id)a6);

        sub_10000AB08(a2);
        sub_10000AB08((id)a3);
        return v17 & 1;
      }
    }
  }

  return result;
}

uint64_t sub_10006858C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v89 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  id v83 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Optional(0LL, v9);
  uint64_t v88 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v82 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v86 = (char *)&v78 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0LL, v10, v10, 0LL, 0LL);
  uint64_t v87 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  unint64_t v85 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  id v90 = (char *)&v78 - v16;
  uint64_t v19 = type metadata accessor for InteractionStateful(0LL, a3, v17, v18);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v96 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  id v94 = (char *)&v78 - v23;
  __chkstk_darwin(v24);
  double v26 = (char *)&v78 - v25;
  __chkstk_darwin(v27);
  int v29 = (char *)&v78 - v28;
  uint64_t v84 = a4;
  LOBYTE(a4) = dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, a3, a4);
  uint64_t v30 = *(void (**)(char *))(v20 + 16);
  uint64_t v31 = a1;
  CGFloat v32 = v26;
  uint64_t v92 = v31;
  v30(v29);
  uint64_t v93 = a2;
  NSString v91 = v30;
  ((void (*)(char *, uint64_t, uint64_t))v30)(v26, a2, v19);
  if ((a4 & 1) == 0)
  {
    char v47 = *(void (**)(char *, uint64_t))(v20 + 8);
    v47(v26, v19);
    v47(v29, v19);
    double v50 = v94;
    __int128 v52 = v96;
LABEL_10:
    uint64_t v57 = (void (*)(char *, uint64_t, uint64_t))v91;
    ((void (*)(char *, uint64_t, uint64_t))v91)(v50, v92, v19);
    v57(v52, v93, v19);
    goto LABEL_11;
  }

  uint64_t v81 = v20;
  uint64_t v33 = *(int *)(v19 + 28);
  double v34 = &v26[v33];
  __int128 v35 = v90;
  __int128 v36 = &v90[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v37 = v88;
  char v38 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
  v38(v90, &v29[v33], v10);
  Class v80 = v36;
  uint64_t v39 = v34;
  uint64_t v40 = v89;
  v38(v36, v39, v10);
  uint64_t v41 = v32;
  double v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
  unsigned int v43 = v42(v35, 1LL, a3);
  double v44 = v35;
  Class v79 = v38;
  if (v43 != 1)
  {
    char v53 = v42;
    uint64_t v54 = v86;
    v38(v86, v44, v10);
    id v55 = v80;
    uint64_t v78 = v53;
    if (v53(v80, 1LL, a3) != 1)
    {
      NSString v60 = v83;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v83, v55, a3);
      LODWORD(v8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = dispatch thunk of static Equatable.== infix(_:_:)(v54, v60, a3, v84);
      uint64_t v61 = v37;
      __n128 v62 = *(void (**)(char *, uint64_t))(v40 + 8);
      v62(v60, a3);
      uint64_t v63 = v10;
      char v47 = *(void (**)(char *, uint64_t))(v81 + 8);
      v47(v41, v19);
      Class v64 = v29;
      uint64_t v49 = v63;
      v47(v64, v19);
      v62(v54, a3);
      __n128 v48 = *(void (**)(char *, uint64_t))(v61 + 8);
      v48(v90, v63);
      double v50 = v94;
      uint64_t v65 = (void (*)(char *, uint64_t, uint64_t))v91;
      ((void (*)(char *, uint64_t, uint64_t))v91)(v94, v92, v19);
      __int128 v52 = v96;
      v65(v96, v93, v19);
LABEL_11:
      v47(v52, v19);
      v47(v50, v19);
      goto LABEL_12;
    }

    char v47 = *(void (**)(char *, uint64_t))(v81 + 8);
    v47(v41, v19);
    v47(v29, v19);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v54, a3);
    double v50 = v94;
    __int128 v52 = v96;
    uint64_t v56 = v90;
    goto LABEL_9;
  }

  double v45 = v35;
  uint64_t v46 = v10;
  char v47 = *(void (**)(char *, uint64_t))(v81 + 8);
  v47(v41, v19);
  v47(v29, v19);
  if (v42(v80, 1LL, a3) != 1)
  {
    double v50 = v94;
    __int128 v52 = v96;
    uint64_t v56 = v45;
LABEL_9:
    (*(void (**)(char *, uint64_t))(v87 + 8))(v56, TupleTypeMetadata2);
    goto LABEL_10;
  }

  uint64_t v78 = v42;
  __n128 v48 = *(void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v49 = v46;
  v48(v45, v46);
  double v50 = v94;
  __int128 v51 = (void (*)(char *, uint64_t, uint64_t))v91;
  ((void (*)(char *, uint64_t, uint64_t))v91)(v94, v92, v19);
  __int128 v52 = v96;
  v51(v96, v93, v19);
LABEL_15:
  id v94 = (char *)v48;
  uint64_t v66 = *(int *)(v19 + 32);
  unint64_t v67 = &v52[v66];
  unint64_t v68 = v85;
  uint64_t v69 = &v85[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v70 = v79;
  v79(v85, &v50[v66], v49);
  int v71 = v67;
  uint64_t v72 = v70;
  v70(v69, v71, v49);
  uint64_t v73 = v78;
  if (v78(v68, 1LL, a3) == 1)
  {
    v47(v52, v19);
    v47(v50, v19);
    if (v73(v69, 1LL, a3) == 1)
    {
      ((void (*)(char *, uint64_t))v94)(v68, v49);
      char v58 = 1;
      return v58 & 1;
    }
  }

  else
  {
    uint64_t v74 = v82;
    v72(v82, v68, v49);
    if (v73(v69, 1LL, a3) != 1)
    {
      uint64_t v75 = v89;
      NSString v76 = v83;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v83, v69, a3);
      char v58 = dispatch thunk of static Equatable.== infix(_:_:)(v74, v76, a3, v84);
      id v77 = *(void (**)(char *, uint64_t))(v75 + 8);
      v77(v76, a3);
      v47(v96, v19);
      v47(v50, v19);
      v77(v74, a3);
      ((void (*)(char *, uint64_t))v94)(v68, v49);
      return v58 & 1;
    }

    v47(v96, v19);
    v47(v50, v19);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v74, a3);
  }

  (*(void (**)(char *, uint64_t))(v87 + 8))(v68, TupleTypeMetadata2);
LABEL_12:
  char v58 = 0;
  return v58 & 1;
}

uint64_t sub_100068C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006858C(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

void *MotionEffects.horizontalTilt.unsafeMutableAddressor()
{
  return &static MotionEffects.horizontalTilt;
}

void *MotionEffects.verticalTilt.unsafeMutableAddressor()
{
  return &static MotionEffects.verticalTilt;
}

void *MotionEffects.horizontalPan.unsafeMutableAddressor()
{
  return &static MotionEffects.horizontalPan;
}

uint64_t static MotionEffects.horizontalPan.getter()
{
  return 4LL;
}

void *MotionEffects.pan.unsafeMutableAddressor()
{
  return &static MotionEffects.pan;
}

void *MotionEffects.horizontalPanAndTilt.unsafeMutableAddressor()
{
  return &static MotionEffects.horizontalPanAndTilt;
}

uint64_t static MotionEffects.horizontalPanAndTilt.getter()
{
  return 5LL;
}

void *MotionEffects.verticalPanAndTilt.unsafeMutableAddressor()
{
  return &static MotionEffects.verticalPanAndTilt;
}

uint64_t static MotionEffects.verticalPanAndTilt.getter()
{
  return 10LL;
}

BOOL MotionEffects.requiresPerspectiveMatrix.getter(char a1)
{
  return (a1 & 3) != 0LL;
}

unint64_t sub_100068C8C()
{
  unint64_t result = qword_1002E0048;
  if (!qword_1002E0048)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for MotionEffects, &type metadata for MotionEffects);
    atomic_store(result, (unint64_t *)&qword_1002E0048);
  }

  return result;
}

unint64_t sub_100068CD4()
{
  unint64_t result = qword_1002E0050;
  if (!qword_1002E0050)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for MotionEffects, &type metadata for MotionEffects);
    atomic_store(result, (unint64_t *)&qword_1002E0050);
  }

  return result;
}

unint64_t sub_100068D1C()
{
  unint64_t result = qword_1002E0058;
  if (!qword_1002E0058)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for MotionEffects, &type metadata for MotionEffects);
    atomic_store(result, (unint64_t *)&qword_1002E0058);
  }

  return result;
}

unint64_t sub_100068D64()
{
  unint64_t result = qword_1002E0060;
  if (!qword_1002E0060)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for MotionEffects, &type metadata for MotionEffects);
    atomic_store(result, (unint64_t *)&qword_1002E0060);
  }

  return result;
}

ValueMetadata *type metadata accessor for MotionEffects()
{
  return &type metadata for MotionEffects;
}

void *sub_100068DB8(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state] = 0;
  v4[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  *(void *)uint64_t v9 = 0x4039000000000000LL;
  *((void *)v9 + 1) = 0LL;
  v9[16] = 1;
  *((void *)v9 + _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 3) = 0LL;
  v9[32] = 1;
  uint64_t v10 = &v4[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset];
  *(_OWORD *)uint64_t v10 = xmmword_100233770;
  *((void *)v10 + 2) = 0LL;
  *((void *)v10 + _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 3) = 0LL;
  v10[32] = 1;
  *((void *)v10 + 5) = 0LL;
  *((void *)v10 + 6) = 0LL;
  v10[56] = 1;
  uint64_t v11 = &v4[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  uint64_t v12 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v13 = v4;
  id v14 = [v12 blackColor];
  id v15 = [v14 CGColor];

  *uint64_t v11 = 0LL;
  v11[1] = v15;
  v11[2] = 1LL;
  uint64_t v16 = &v13[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  *(void *)uint64_t v16 = 0x3EB3333300000000LL;
  v16[8] = 0;
  *((_DWORD *)v16 + _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 3) = 0;
  v16[16] = 1;
  v13[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_hasTiltMotionEffectsAttached] = 0;
  *(void *)&v13[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell____lazy_storage___tiltMotionEffectGroup] = 0LL;
  uint64_t v17 = OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_focusGuideExtension;
  *(void *)&v13[v17] = [objc_allocWithZone(UIFocusGuide) init];

  v30.receiver = v13;
  v30.super_class = (Class)type metadata accessor for BaseCollectionViewCell();
  id v18 = objc_msgSendSuper2(&v30, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  uint64_t v22 = v18;
  objc_msgSend(v22, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  id v23 = [v22 contentView];
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  id v24 = [v22 contentView];
  [v24 _setSafeAreaInsetsFrozen:1];

  id v25 = [v22 contentView];
  [v25 setInsetsLayoutMarginsFromSafeArea:0];

  [v22 setInsetsLayoutMarginsFromSafeArea:0];
  id v26 = [v22 _setSafeAreaInsetsFrozen:1];
  uint64_t v27 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v22) + 0xE0LL))(v26);
  [v27 setShadowPathIsBounds:1];

  unsigned __int8 v28 = [v22 isFocused];
  *((_BYTE *)v22 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state) = v28;
  (*(void (**)(void))((swift_isaMask & *v22) + 0xB0LL))();

  return v22;
}

void sub_1000690F4(uint64_t a1, __n128 a2, __n128 a3)
{
  double v4 = (char *)v3 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius;
  a2.n128_u64[0] = *(void *)((char *)v3 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius);
  a3.n128_u64[0] = *(void *)a1;
  char v5 = v4[16];
  a2.n128_u64[0] = *((void *)v4 + 3);
  char v6 = v4[32];
  a3.n128_u64[0] = *(void *)(a1 + 24);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if (!v4[16]) {
      goto LABEL_14;
    }
  }

  else
  {
    if ((v5 & 1) != 0) {
      goto LABEL_14;
    }
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    if ((v4[32] & 1) != 0) {
      return;
    }
    goto LABEL_14;
  }

  if (a3.n128_f64[0] != a2.n128_f64[0]) {
    char v6 = 1;
  }
  if ((v6 & 1) != 0)
  {
LABEL_14:
    if (((*(uint64_t (**)(__n128, __n128))((swift_isaMask & *v3) + 0xC8LL))(a2, a3) & 1) != 0)
    {
      id v15 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xE0LL))();
      double v7 = *(double *)v4;
      double v8 = *((double *)v4 + 1);
      int v9 = v4[16];
      double v10 = *((double *)v4 + 3);
      int v11 = v4[32];
      int v12 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v3) + 0x98LL))();
      if (v12)
      {
        if (v9) {
          double v14 = v7;
        }
        else {
          double v14 = v8;
        }
        if (v11) {
          double v13 = v7;
        }
        else {
          double v13 = v10;
        }
        if (v12 == 1) {
          double v7 = v14;
        }
        else {
          double v7 = v13;
        }
      }

      objc_msgSend(v15, "setShadowRadius:", v7, v13);
    }
  }

void sub_100069248(void *a1, void *a2, unint64_t a3)
{
  double v7 = (char *)v3 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor;
  double v8 = *(void **)((char *)v3 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor);
  int v9 = *(void **)((char *)v3 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8);
  double v10 = *(void **)((char *)v3 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16);
  id v11 = v8;
  sub_10000AAF8(v9);
  sub_10000AAF8(v10);
  LOBYTE(a_s6Arcade17PillOverlayLayoutVwxx_0(v0 + 3) = sub_100068394(a1, a2, a3, v8, v9, (unint64_t)v10);

  sub_10000AB08(v9);
  sub_10000AB08(v10);
  if ((a3 & 1) == 0 && ((*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xC8LL))() & 1) != 0)
  {
    id v19 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xE0LL))();
    int v12 = *(void **)v7;
    double v13 = (void *)*((void *)v7 + 1);
    double v14 = (void *)*((void *)v7 + 2);
    int v15 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v3) + 0x98LL))();
    if (v15)
    {
      else {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v17 = v14;
      }
      if (v15 == 1) {
        int v12 = v16;
      }
      else {
        int v12 = v17;
      }
    }

    id v18 = v12;
    [v19 setShadowColor:v18];
  }

void sub_1000693B0(int a1, uint64_t a2, char a3, __n128 a4)
{
  char v5 = (char *)v4 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity;
  char v6 = v5[8];
  a4.n128_u32[0] = *((_DWORD *)v5 + 3);
  char v7 = v5[16];
  if ((a2 & 1) != 0)
  {
    if (!v5[8]) {
      goto LABEL_14;
    }
  }

  else
  {
    if ((v6 & 1) != 0) {
      goto LABEL_14;
    }
  }

  if ((a3 & 1) != 0)
  {
    if ((v5[16] & 1) != 0) {
      return;
    }
    goto LABEL_14;
  }

  if ((v7 & 1) != 0)
  {
LABEL_14:
    if (((*(uint64_t (**)(__n128))((swift_isaMask & *v4) + 0xC8LL))(a4) & 1) != 0)
    {
      id v17 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v4) + 0xE0LL))();
      float v8 = *(float *)v5;
      float v9 = *((float *)v5 + 1);
      int v10 = v5[8];
      float v11 = *((float *)v5 + 3);
      int v12 = v5[16];
      int v13 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v4) + 0x98LL))();
      if (v13)
      {
        if (v10) {
          float v16 = v8;
        }
        else {
          float v16 = v9;
        }
        if (v12) {
          *(float *)&double v15 = v8;
        }
        else {
          *(float *)&double v15 = v11;
        }
        if (v13 == 1) {
          float v8 = v16;
        }
        else {
          float v8 = *(float *)&v15;
        }
      }

      *(float *)&double v14 = v8;
      objc_msgSend(v17, "setShadowOpacity:", v14, v15);
    }
  }

void sub_1000694FC(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_hasTiltMotionEffectsAttached;
  int v3 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_hasTiltMotionEffectsAttached);
  if (v3 != (a1 & 1))
  {
    id v4 = sub_10006821C();
    char v5 = &selRef_addMotionEffect_;
    if (!v3) {
      char v5 = &selRef_removeMotionEffect_;
    }
    objc_msgSend(v1, *v5, v4);

    if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x158LL))() & 3) != 0)
    {
      if (*((_BYTE *)v1 + v2))
      {
        [v1 bounds];
        double Width = CGRectGetWidth(v46);
        double v7 = (*(double (**)(void))((swift_isaMask & *v1) + 0x170LL))();
        double v8 = 1.0;
        if (Width > COERCE_DOUBLE(1LL) && v7 > COERCE_DOUBLE(1LL)) {
          double v8 = (Width + v7) / Width;
        }
        CATransform3DMakeScale(&a, v8, v8, 1.0);
        __int128 v41 = *(_OWORD *)&a.m13;
        __int128 v42 = *(_OWORD *)&a.m11;
        __int128 v39 = *(_OWORD *)&a.m23;
        __int128 v40 = *(_OWORD *)&a.m21;
        __int128 v37 = *(_OWORD *)&a.m33;
        __int128 v38 = *(_OWORD *)&a.m31;
        __int128 v36 = *(_OWORD *)&a.m41;
        CGFloat m43 = a.m43;
        CGFloat m44 = a.m44;
        CATransform3DMakeTranslation(&a, 0.0, 0.0, 1000.0);
        __int128 v12 = *(_OWORD *)&a.m11;
        __int128 v13 = *(_OWORD *)&a.m13;
        __int128 v14 = *(_OWORD *)&a.m21;
        __int128 v15 = *(_OWORD *)&a.m23;
        __int128 v16 = *(_OWORD *)&a.m31;
        __int128 v17 = *(_OWORD *)&a.m33;
        __int128 v18 = *(_OWORD *)&a.m41;
        __int128 v19 = *(_OWORD *)&a.m43;
        *(_OWORD *)&a.m11 = v42;
        *(_OWORD *)&a.m13 = v41;
        *(_OWORD *)&a.m21 = v40;
        *(_OWORD *)&a.m23 = v39;
        *(_OWORD *)&a.m31 = v38;
        *(_OWORD *)&a.m33 = v37;
        *(_OWORD *)&a.m41 = v36;
        a.CGFloat m43 = m43;
        a.CGFloat m44 = m44;
        *(_OWORD *)&b.m11 = v12;
        *(_OWORD *)&b.m13 = v13;
        *(_OWORD *)&b.m21 = v14;
        *(_OWORD *)&b.m23 = v15;
        *(_OWORD *)&b.m31 = v16;
        *(_OWORD *)&b.m33 = v17;
        *(_OWORD *)&b.m41 = v18;
        *(_OWORD *)&b.CGFloat m43 = v19;
        CATransform3DConcat(&aBlock, &a, &b);
        *(_OWORD *)&a.m11 = *(_OWORD *)&aBlock.m11;
        *(_OWORD *)&a.m13 = *(_OWORD *)&aBlock.m13;
        *(_OWORD *)&a.m21 = *(_OWORD *)&aBlock.m21;
        *(_OWORD *)&a.m23 = *(_OWORD *)&aBlock.m23;
        *(_OWORD *)&a.m31 = *(_OWORD *)&aBlock.m31;
        a.m33 = aBlock.m33;
        a.m34 = -0.00111111111;
        *(_OWORD *)&a.m41 = *(_OWORD *)&aBlock.m41;
        *(_OWORD *)&a.CGFloat m43 = *(_OWORD *)&aBlock.m43;
      }

      else
      {
        __int128 v24 = *(_OWORD *)&CATransform3DIdentity.m33;
        *(_OWORD *)&a.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
        *(_OWORD *)&a.m33 = v24;
        __int128 v25 = *(_OWORD *)&CATransform3DIdentity.m43;
        *(_OWORD *)&a.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
        *(_OWORD *)&a.CGFloat m43 = v25;
        __int128 v26 = *(_OWORD *)&CATransform3DIdentity.m13;
        *(_OWORD *)&a.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
        *(_OWORD *)&a.m13 = v26;
        __int128 v27 = *(_OWORD *)&CATransform3DIdentity.m23;
        *(_OWORD *)&a.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
        *(_OWORD *)&a.m23 = v27;
      }

      sub_10006B9EC((uint64_t)&a);
    }

    else
    {
      if (*((_BYTE *)v1 + v2))
      {
        [v1 bounds];
        double v20 = CGRectGetWidth(v47);
        double v21 = (*(double (**)(void))((swift_isaMask & *v1) + 0x170LL))();
        double v22 = 1.0;
        if (v20 > COERCE_DOUBLE(1LL) && v21 > COERCE_DOUBLE(1LL)) {
          double v22 = (v20 + v21) / v20;
        }
        CGAffineTransformMakeScale((CGAffineTransform *)&a, v22, v22);
      }

      else
      {
        a.m11 = 1.0;
        a.m12 = 0.0;
        a.m13 = 0.0;
        a.m14 = 1.0;
        a.m21 = 0.0;
        a.CGFloat m22 = 0.0;
      }

      sub_10006B97C((uint64_t)&a);
    }

    sub_10006B984((uint64_t)&a, (uint64_t)&b);
    sub_10006B984((uint64_t)&b, (uint64_t)&a);
    unsigned __int8 v28 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
    [v28 inheritedAnimationDuration];
    if (v29 <= COERCE_DOUBLE(1LL))
    {
      double v31 = 0.07;
    }

    else
    {
      [v28 inheritedAnimationDuration];
      double v31 = v30;
    }

    CGFloat v32 = COERCE_DOUBLE(swift_allocObject(&unk_100283570, 160LL, 7LL));
    sub_10006B984((uint64_t)&a, *(void *)&v32 + 16LL);
    *(void *)(*(void *)&v32 + 152LL) = v1;
    *(void *)&aBlock.m21 = sub_10006B9E0;
    aBlock.CGFloat m22 = v32;
    *(void *)&aBlock.m11 = _NSConcreteStackBlock;
    *(void *)&aBlock.m12 = 1107296256LL;
    *(void *)&aBlock.m13 = sub_100135408;
    *(void *)&aBlock.m14 = &unk_100283588;
    uint64_t v33 = _Block_copy(&aBlock);
    CGFloat m22 = aBlock.m22;
    __int128 v35 = v1;
    swift_release(*(void *)&m22);
    [v28 animateWithDuration:v33 animations:v31];
    _Block_release(v33);
  }

id sub_1000698AC(uint64_t a1, void *a2)
{
  int v3 = sub_10006B9F8((uint64_t)v23);
  id v4 = (__int128 *)MotionEffects.rawValue.getter(v23);
  if (v3 == 1)
  {
    __int128 v5 = v4[1];
    __int128 v6 = v4[2];
    __int128 v7 = v4[3];
    __int128 v8 = v4[4];
    __int128 v9 = v4[5];
    __int128 v10 = v4[6];
    __int128 v11 = v4[7];
    __int128 v15 = *v4;
    __int128 v16 = v5;
    __int128 v17 = v6;
    __int128 v18 = v7;
    __int128 v19 = v8;
    __int128 v20 = v9;
    __int128 v21 = v10;
    __int128 v22 = v11;
    return [a2 setTransform3D:&v15];
  }

  else
  {
    __int128 v13 = v4[1];
    __int128 v14 = v4[2];
    __int128 v15 = *v4;
    __int128 v16 = v13;
    __int128 v17 = v14;
    return [a2 setTransform:&v15];
  }

id sub_10006994C(void *a1)
{
  char v2 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x158LL))();
  char v3 = v2;
  if ((v2 & 1) != 0)
  {
    id v4 = objc_allocWithZone(&OBJC_CLASS___UIInterpolatingMotionEffect);
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v4 initWithKeyPath:v5 type:0];

    Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v6 setMinimumRelativeValue:isa];

    Class v8 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v6 setMaximumRelativeValue:v8];

    id v9 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
    unint64_t v11 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v10 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v11 >= v10 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1LL);
    }
    uint64_t v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
    specialized Array._endMutation()(v12);

    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }

  else if ((v2 & 2) == 0)
  {
    goto LABEL_3;
  }

  id v13 = objc_allocWithZone(&OBJC_CLASS___UIInterpolatingMotionEffect);
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 initWithKeyPath:v14 type:1];

  Class v16 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v15 setMinimumRelativeValue:v16];

  Class v17 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v15 setMaximumRelativeValue:v17];

  id v18 = v15;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
  unint64_t v20 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v19 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v20 >= v19 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1LL);
  }
  uint64_t v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
  specialized Array._endMutation()(v21);

  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }

id sub_100069E18(void *a1)
{
  char v2 = v1;
  id v4 = [a1 previouslyFocusedView];
  id v5 = [a1 nextFocusedView];
  id v6 = v5;
  if (v4)
  {
    if (v5)
    {
      sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
      id v7 = v4;
      char v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) == 0) {
        goto LABEL_9;
      }
      return 0LL;
    }

    id v6 = v4;
  }

  else if (!v5)
  {
    return 0LL;
  }

LABEL_9:
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for BaseCollectionViewCell();
  return objc_msgSendSuper2(&v10, "shouldUpdateFocusInContext:", a1);
}

void sub_100069F50(void *a1, uint64_t a2)
{
  char v3 = v2;
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for BaseCollectionViewCell();
  objc_msgSendSuper2(&v17, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  id v6 = [a1 nextFocusedView];
  if (v6)
  {
    id v7 = v6;
    sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
    char v8 = v3;
    id v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v8);

    if ((v7 & 1) != 0)
    {
      uint64_t v10 = 1LL;
LABEL_7:
      uint64_t v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xA0LL))(v10);
      uint64_t v16 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x98LL))(v15);
      (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0xB0LL))(v16, a2);
      return;
    }
  }

  id v11 = [a1 previouslyFocusedView];
  if (v11)
  {
    uint64_t v12 = v11;
    sub_100006028(0LL, (unint64_t *)&qword_1002DF5F0, &OBJC_CLASS___UIView_ptr);
    id v13 = v3;
    id v14 = v12;
    LOBYTE(v12) = static NSObject.== infix(_:_:)(v14, v13);

    if ((v12 & 1) != 0)
    {
      uint64_t v10 = 0LL;
      goto LABEL_7;
    }
  }

void sub_10006A1A4()
{
  if (((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x150LL))() & 1) != 0
    && [v0 isFocused]
    && (*((_BYTE *)v0 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_hasTiltMotionEffectsAttached) & 1) == 0)
  {
    [v0 bounds];
    double Width = CGRectGetWidth(v16);
    (*(void (**)(void))((swift_isaMask & *v0) + 0x170LL))();
    BOOL v3 = Width <= COERCE_DOUBLE(1LL) || v2 <= COERCE_DOUBLE(1LL);
    double v4 = 1.0;
    if (!v3) {
      double v4 = (Width + v2) / Width;
    }
    [v0 frame];
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    [v0 frame];
    double v13 = 1.0 - v4;
    CGFloat v14 = v13 * CGRectGetWidth(v17) * 0.5;
    [v0 frame];
    CGFloat v15 = v13 * CGRectGetHeight(v18) * 0.5;
    v19.origin.CGFloat x = v6;
    v19.origin.CGFloat y = v8;
    v19.size.double width = v10;
    v19.size.double height = v12;
    CGRectInset(v19, v14, v15);
  }

  else
  {
    [v0 frame];
  }

void sub_10006A590(uint64_t a1, uint64_t a2)
{
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for BaseCollectionViewCell();
  objc_msgSendSuper2(&v10, "pressesEnded:withEvent:", isa, a2);

  if (((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x1D0LL))() & 1) != 0)
  {
    sub_100067068(a1);
    if ((v6 & 1) != 0)
    {
      id v7 = [v2 isFocused];
      uint64_t v8 = (*(uint64_t (**)(id))((swift_isaMask & *v2) + 0xA0LL))(v7);
      uint64_t v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x98LL))(v8);
      (*(void (**)(uint64_t, void))((swift_isaMask & *v2) + 0xB0LL))(v9, 0LL);
    }
  }

id sub_10006A728()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseCollectionViewCell()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade22BaseCollectionViewCell);
}

uint64_t sub_10006A7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24LL);
}

uint64_t sub_10006A7E8(uint64_t a1)
{
  uint64_t v2 = swift_checkMetadataState(319LL, *(void *)(a1 + 16));
  uint64_t v3 = v2;
  if (v4 <= 0x3F)
  {
    uint64_t v8 = *(void *)(v2 - 8) + 64LL;
    uint64_t v5 = type metadata accessor for Optional(319LL, v2);
    uint64_t v3 = v5;
    if (v6 <= 0x3F)
    {
      uint64_t v9 = *(void *)(v5 - 8) + 64LL;
      uint64_t v10 = v9;
      swift_initStructMetadata(a1, 0LL, 3LL, &v8, a1 + 24);
      return 0LL;
    }
  }

  return v3;
}

uint64_t *sub_10006A880(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = ~(unint64_t)v8;
  uint64_t v11 = v7 + v8;
  if (*(_DWORD *)(v6 + 84)) {
    size_t v12 = *(void *)(v6 + 64);
  }
  else {
    size_t v12 = v7 + 1;
  }
  int v14 = v8 & 0x100000;
  if (v9 > 7 || v14 != 0 || v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v17 + ((v9 + 16) & v10));
    swift_retain(v17);
  }

  else
  {
    CGRect v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v18(a1, a2, *(void *)(a3 + 16));
    unint64_t v23 = (unint64_t)v4 + v11;
    CGRect v19 = (void *)(((unint64_t)v4 + v11) & v10);
    unint64_t v20 = (unint64_t)a2 + v11;
    id v24 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v24(v20 & v10, 1LL, v5))
    {
      memcpy(v19, (const void *)(v20 & v10), v12);
    }

    else
    {
      v18((uint64_t *)v19, (uint64_t *)(v20 & v10), v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0LL, 1LL, v5);
    }

    uint64_t v21 = (void *)(((v23 | v9) + v12) & v10);
    if (v24(((v20 | v9) + v12) & v10, 1LL, v5))
    {
      memcpy(v21, (const void *)(((v20 | v9) + v12) & v10), v12);
    }

    else
    {
      v18((uint64_t *)v21, (uint64_t *)(((v20 | v9) + v12) & v10), v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v21, 0LL, 1LL, v5);
    }
  }

  return v4;
}

uint64_t sub_10006AA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v13(a1, v3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + v5;
  uint64_t v7 = ~v5;
  uint64_t v8 = (v6 + a1) & ~v5;
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v9(v8, 1LL, v3)) {
    v13(v8, v3);
  }
  uint64_t v10 = v6 + v8;
  if (!*(_DWORD *)(v4 + 84)) {
    ++v10;
  }
  uint64_t v11 = v10 & v7;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v10 & v7, 1LL, v3);
  if (!(_DWORD)result) {
    return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11, v3);
  }
  return result;
}

uint64_t sub_10006AB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  size_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = a1;
  size_t v10 = v8 + v9 + a1;
  uint64_t v11 = ~v9;
  size_t v12 = v8 + v9 + a2;
  unint64_t v20 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v6 + 48);
  CGRect v19 = (void (*)(void *, const void *, uint64_t))v7;
  if (v20(v12 & ~v9, 1LL, v5))
  {
    int v13 = *(_DWORD *)(v6 + 84);
    if (v13) {
      size_t v14 = v8;
    }
    else {
      size_t v14 = v8 + 1;
    }
    memcpy((void *)(v10 & ~v9), (const void *)(v12 & ~v9), v14);
  }

  else
  {
    v7(v10 & ~v9, v12 & ~v9, v5);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v6 + 56))(v10 & ~v9, 0LL, 1LL, v5);
    int v13 = *(_DWORD *)(v6 + 84);
  }

  if (v13) {
    size_t v15 = v8;
  }
  else {
    size_t v15 = v8 + 1;
  }
  CGRect v16 = (void *)(((v10 | v9) + v15) & v11);
  uint64_t v17 = (const void *)(((v12 | v9) + v15) & v11);
  if (v20((size_t)v17, 1LL, v5))
  {
    memcpy(v16, v17, v15);
  }

  else
  {
    v19(v16, v17, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0LL, 1LL, v5);
  }

  return v21;
}

uint64_t sub_10006AC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v21(a1, a2, v5);
  size_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = a1;
  size_t v9 = v7 + v8 + a1;
  uint64_t v22 = ~v8;
  size_t v10 = v7 + v8 + a2;
  uint64_t v11 = *(uint64_t (**)(size_t, uint64_t, uint64_t))(v6 + 48);
  int v12 = v11(v9 & ~v8, 1LL, v5);
  int v13 = v11(v10 & ~v8, 1LL, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(size_t, size_t, uint64_t))(v6 + 16))(v9 & ~v8, v10 & ~v8, v5);
      (*(void (**)(size_t, void, uint64_t, uint64_t))(v6 + 56))(v9 & ~v8, 0LL, 1LL, v5);
      goto LABEL_10;
    }
  }

  else
  {
    if (!v13)
    {
      v21(v9 & ~v8, v10 & ~v8, v5);
      goto LABEL_10;
    }

    (*(void (**)(size_t, uint64_t))(v6 + 8))(v9 & ~v8, v5);
  }

  if (*(_DWORD *)(v6 + 84)) {
    size_t v14 = v7;
  }
  else {
    size_t v14 = v7 + 1;
  }
  memcpy((void *)(v9 & ~v8), (const void *)(v10 & ~v8), v14);
LABEL_10:
  if (*(_DWORD *)(v6 + 84)) {
    size_t v15 = v7;
  }
  else {
    size_t v15 = v7 + 1;
  }
  CGRect v16 = (void *)(((v9 | v8) + v15) & v22);
  uint64_t v17 = (const void *)(((v10 | v8) + v15) & v22);
  int v18 = v11((size_t)v16, 1LL, v5);
  int v19 = v11((size_t)v17, 1LL, v5);
  if (!v18)
  {
    if (!v19)
    {
      v21((uint64_t)v16, (uint64_t)v17, v5);
      return v23;
    }

    (*(void (**)(void *, uint64_t))(v6 + 8))(v16, v5);
    goto LABEL_18;
  }

  if (v19)
  {
LABEL_18:
    memcpy(v16, v17, v15);
    return v23;
  }

  (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v16, v17, v5);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0LL, 1LL, v5);
  return v23;
}

uint64_t sub_10006AE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  size_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = a1;
  size_t v10 = v8 + v9 + a1;
  uint64_t v11 = ~v9;
  size_t v12 = v8 + v9 + a2;
  unint64_t v20 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v6 + 48);
  int v19 = (void (*)(void *, const void *, uint64_t))v7;
  if (v20(v12 & ~v9, 1LL, v5))
  {
    int v13 = *(_DWORD *)(v6 + 84);
    if (v13) {
      size_t v14 = v8;
    }
    else {
      size_t v14 = v8 + 1;
    }
    memcpy((void *)(v10 & ~v9), (const void *)(v12 & ~v9), v14);
  }

  else
  {
    v7(v10 & ~v9, v12 & ~v9, v5);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v6 + 56))(v10 & ~v9, 0LL, 1LL, v5);
    int v13 = *(_DWORD *)(v6 + 84);
  }

  if (v13) {
    size_t v15 = v8;
  }
  else {
    size_t v15 = v8 + 1;
  }
  CGRect v16 = (void *)(((v10 | v9) + v15) & v11);
  uint64_t v17 = (const void *)(((v12 | v9) + v15) & v11);
  if (v20((size_t)v17, 1LL, v5))
  {
    memcpy(v16, v17, v15);
  }

  else
  {
    v19(v16, v17, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0LL, 1LL, v5);
  }

  return v21;
}

uint64_t sub_10006AFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v21(a1, a2, v5);
  size_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = a1;
  size_t v9 = v7 + v8 + a1;
  uint64_t v22 = ~v8;
  size_t v10 = v7 + v8 + a2;
  uint64_t v11 = *(uint64_t (**)(size_t, uint64_t, uint64_t))(v6 + 48);
  int v12 = v11(v9 & ~v8, 1LL, v5);
  int v13 = v11(v10 & ~v8, 1LL, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(size_t, size_t, uint64_t))(v6 + 32))(v9 & ~v8, v10 & ~v8, v5);
      (*(void (**)(size_t, void, uint64_t, uint64_t))(v6 + 56))(v9 & ~v8, 0LL, 1LL, v5);
      goto LABEL_10;
    }
  }

  else
  {
    if (!v13)
    {
      v21(v9 & ~v8, v10 & ~v8, v5);
      goto LABEL_10;
    }

    (*(void (**)(size_t, uint64_t))(v6 + 8))(v9 & ~v8, v5);
  }

  if (*(_DWORD *)(v6 + 84)) {
    size_t v14 = v7;
  }
  else {
    size_t v14 = v7 + 1;
  }
  memcpy((void *)(v9 & ~v8), (const void *)(v10 & ~v8), v14);
LABEL_10:
  if (*(_DWORD *)(v6 + 84)) {
    size_t v15 = v7;
  }
  else {
    size_t v15 = v7 + 1;
  }
  CGRect v16 = (void *)(((v9 | v8) + v15) & v22);
  uint64_t v17 = (const void *)(((v10 | v8) + v15) & v22);
  int v18 = v11((size_t)v16, 1LL, v5);
  int v19 = v11((size_t)v17, 1LL, v5);
  if (!v18)
  {
    if (!v19)
    {
      v21((uint64_t)v16, (uint64_t)v17, v5);
      return v23;
    }

    (*(void (**)(void *, uint64_t))(v6 + 8))(v16, v5);
    goto LABEL_18;
  }

  if (v19)
  {
LABEL_18:
    memcpy(v16, v17, v15);
    return v23;
  }

  (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v16, v17, v5);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0LL, 1LL, v5);
  return v23;
}

uint64_t sub_10006B1AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5) {
    uint64_t v7 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v7 = v6 + 1;
  }
  if (!a2) {
    return 0LL;
  }
  unsigned int v8 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_21;
  }
  uint64_t v9 = ((v7
       + *(unsigned __int8 *)(v4 + 80)
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      int v11 = *(_DWORD *)(a1 + v9);
      if (!v11) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }

    if (v12 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9)) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }

    if (v12 < 2)
    {
LABEL_21:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0LL;
    }
  }

  int v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9)) {
    goto LABEL_21;
  }
LABEL_14:
  int v13 = (v11 - 1) << v10;
  if (!(_DWORD)v9) {
    return v5 + v13 + 1;
  }
  return ((uint64_t (*)(void))((char *)&loc_10006B280 + 4 * byte_100235CD0[(v9 - 1)]))();
}

void sub_10006B2D0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8LL);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9) & ~v9;
  if (!v7) {
    ++v8;
  }
  size_t v11 = ((v8 + v9 + v10) & ~v9) + v8;
  BOOL v12 = a3 >= v7;
  unsigned int v13 = a3 - v7;
  if (v13 != 0 && v12)
  {
    if (v11 <= 3)
    {
      unsigned int v16 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
      if (HIWORD(v16))
      {
        unsigned int v14 = &dword_100000004;
      }

      else if (v16 >= 0x100)
      {
        unsigned int v14 = 2;
      }

      else
      {
        unsigned int v14 = v16 > 1;
      }
    }

    else
    {
      unsigned int v14 = &_mh_execute_header.magic + 1;
    }
  }

  else
  {
    unsigned int v14 = 0;
  }

  if (v7 < a2)
  {
    unsigned int v15 = ~v7 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        int v17 = v15 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }

        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }

        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }

    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v15;
    }

    __asm { BR              X10 }
  }

  __asm { BR              X11 }

uint64_t type metadata accessor for InteractionStateful(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006BA48(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InteractionStateful);
}

uint64_t getEnumTagSinglePayload for InteractionState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

uint64_t storeEnumTagSinglePayload for InteractionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_10006B58C + 4 * byte_100235CE3[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10006B5C0 + 4 * byte_100235CDE[v4]))();
}

uint64_t sub_10006B5C0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006B5C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10006B5D0LL);
  }
  return result;
}

uint64_t sub_10006B5DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10006B5E4LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_10006B5E8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006B5F0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10006B5FC(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for InteractionState()
{
  return &type metadata for InteractionState;
}

unint64_t sub_10006B618()
{
  unint64_t result = qword_1002E0158;
  if (!qword_1002E0158)
  {
    unint64_t result = swift_getWitnessTable(&unk_100235F74, &type metadata for InteractionState);
    atomic_store(result, (unint64_t *)&qword_1002E0158);
  }

  return result;
}

id sub_10006B65C()
{
  return *(id *)(v0 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_focusGuideExtension);
}

unint64_t sub_10006B66C()
{
  unint64_t result = qword_1002E98F0;
  if (!qword_1002E98F0)
  {
    type metadata accessor for CGColor(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023245C, v1);
    atomic_store(result, (unint64_t *)&qword_1002E98F0);
  }

  return result;
}

unint64_t sub_10006B6B4()
{
  unint64_t result = qword_1002E18F0;
  if (!qword_1002E18F0)
  {
    uint64_t v1 = sub_100006028(255LL, (unint64_t *)&qword_1002DD600, &OBJC_CLASS___UIPress_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1002E18F0);
  }

  return result;
}

void sub_10006B70C()
{
  v0[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state] = 0;
  v0[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  *(void *)uint64_t v1 = 0x4039000000000000LL;
  *((void *)v1 + 1) = 0LL;
  v1[16] = 1;
  *((void *)v1 + _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 3) = 0LL;
  v1[32] = 1;
  int v2 = &v0[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOffset];
  *(_OWORD *)int v2 = xmmword_100233770;
  *((void *)v2 + 2) = 0LL;
  *((void *)v2 + _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 3) = 0LL;
  v2[32] = 1;
  *((void *)v2 + 5) = 0LL;
  *((void *)v2 + 6) = 0LL;
  _BYTE v2[56] = 1;
  int v3 = &v0[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  id v4 = [(id)objc_opt_self(UIColor) blackColor];
  id v5 = [v4 CGColor];

  void *v3 = 0LL;
  v3[1] = v5;
  v3[2] = 1LL;
  unsigned int v6 = &v0[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  *(void *)unsigned int v6 = 0x3EB3333300000000LL;
  void v6[8] = 0;
  *((_DWORD *)v6 + _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 3) = 0;
  v6[16] = 1;
  v0[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_hasTiltMotionEffectsAttached] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell____lazy_storage___tiltMotionEffectGroup] = 0LL;
  uint64_t v7 = OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_focusGuideExtension;
  *(void *)&v0[v7] = [objc_allocWithZone(UIFocusGuide) init];

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/BaseCollectionViewCell.swift",  35LL,  2LL,  157LL,  0);
  __break(1u);
}

uint64_t sub_10006B88C()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

uint64_t sub_10006B8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006B8C0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_10006B8C8()
{
}

uint64_t sub_10006B8F0()
{
  return swift_deallocObject(v0, 26LL, 7LL);
}

uint64_t sub_10006B914()
{
  uint64_t v1 = *(void **)(v0 + 16);
  char v2 = *((_BYTE *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_hasTiltMotionEffectsAttached);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 25);
  *((_BYTE *)v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_hasTiltMotionEffectsAttached) = *(_BYTE *)(v0 + 24);
  sub_1000694FC(v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v1) + 0x1C8LL))(v3, 1LL);
}

uint64_t sub_10006B97C(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

uint64_t sub_10006B984(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  __int128 v2 = *(_OWORD *)(a1 + 16);
  __int128 v3 = *(_OWORD *)(a1 + 32);
  __int128 v4 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 64) = v4;
  *(_OWORD *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(_OWORD *)(a2 + 32) = v3;
  __int128 v5 = *(_OWORD *)(a1 + 80);
  __int128 v6 = *(_OWORD *)(a1 + 96);
  __int128 v7 = *(_OWORD *)(a1 + 112);
  *(_BYTE *)(a2 + 128) = *(_BYTE *)(a1 + 128);
  *(_OWORD *)(a2 + 96) = v6;
  *(_OWORD *)(a2 + 112) = v7;
  *(_OWORD *)(a2 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v5;
  return a2;
}

uint64_t sub_10006B9BC()
{
  return swift_deallocObject(v0, 160LL, 7LL);
}

id sub_10006B9E0()
{
  return sub_1000698AC(v0 + 16, *(void **)(v0 + 152));
}

uint64_t sub_10006B9EC(uint64_t result)
{
  *(_BYTE *)(result + 128) = 1;
  return result;
}

uint64_t sub_10006B9F8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 128);
}

uint64_t sub_10006BA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002E0170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006BA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[0] = a2;
  v6[1] = a3;
  void v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

__n128 initializeWithCopy for BaseCollectionViewCell.Transform(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v2 = *(_OWORD *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  __int128 v6 = *(_OWORD *)(a2 + 96);
  __int128 v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BaseCollectionViewCell.Transform(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 129)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 128);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BaseCollectionViewCell.Transform( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0LL;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 129) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 129) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 128) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_10006BB58(uint64_t result, char a2)
{
  *(_BYTE *)(result + 128) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BaseCollectionViewCell.Transform()
{
  return &type metadata for BaseCollectionViewCell.Transform;
}

UIColor sub_10006BB94()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v1 = [v0 whiteColor];
  id v2 = [v1 colorWithAlphaComponent:0.7];

  id v3 = [v0 whiteColor];
  id v4 = [v3 colorWithAlphaComponent:0.8];

  Class isa = UIColor.init(light:dark:)((UIColor)v2, (UIColor)v4).super.isa;
  id v6 = [v0 blackColor];
  id v7 = [v6 colorWithAlphaComponent:0.8];

  id v8 = [v0 blackColor];
  id v9 = [v8 colorWithAlphaComponent:0.8];

  Class v10 = UIColor.init(light:dark:)((UIColor)v7, (UIColor)v9).super.isa;
  id v11 = [v0 blackColor];
  id v12 = [v11 colorWithAlphaComponent:0.8];

  id v13 = [v0 blackColor];
  id v14 = [v13 colorWithAlphaComponent:0.8];

  result.super.Class isa = UIColor.init(light:dark:)((UIColor)v12, (UIColor)v14).super.isa;
  qword_1002E0178 = (uint64_t)isa;
  qword_1002E0180 = (uint64_t)v10;
  qword_1002E0188 = (uint64_t)result.super.isa;
  return result;
}

UIColor sub_10006BD74()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v1 = [v0 clearColor];
  sub_100010F30();
  id v2 = [v0 whiteColor];
  id v3 = [v2 colorWithAlphaComponent:0.9];

  id v4 = [v0 whiteColor];
  id v5 = [v4 colorWithAlphaComponent:0.9];

  Class isa = UIColor.init(light:dark:)((UIColor)v3, (UIColor)v5).super.isa;
  id v7 = [v0 whiteColor];
  id v8 = [v7 colorWithAlphaComponent:0.9];

  id v9 = [v0 whiteColor];
  id v10 = [v9 colorWithAlphaComponent:0.9];

  result.super.Class isa = UIColor.init(light:dark:)((UIColor)v8, (UIColor)v10).super.isa;
  qword_1002E0190 = (uint64_t)v1;
  qword_1002E0198 = (uint64_t)isa;
  qword_1002E01A0 = (uint64_t)result.super.isa;
  return result;
}

id sub_10006BEEC()
{
  id result = [(id)objc_opt_self(UIBlurEffect) effectWithStyle:5002];
  qword_1002E01A8 = (uint64_t)result;
  return result;
}

char *sub_10006BF28(uint64_t a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v1);
  uint64_t v5 = OBJC_IVAR____TtC6Arcade12SearchButton_backgroundEffectView;
  uint64_t v6 = qword_1002DC508;
  id v7 = v2;
  if (v6 != -1) {
    swift_once(&qword_1002DC508, sub_10006BEEC);
  }
  *(void *)&v2[v5] = [objc_allocWithZone(UIVisualEffectView) initWithEffect:qword_1002E01A8];
  uint64_t v8 = OBJC_IVAR____TtC6Arcade12SearchButton_imageView;
  *(void *)&v7[v8] = objc_msgSend(objc_allocWithZone(UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v7[OBJC_IVAR____TtC6Arcade12SearchButton_objectGraph] = a1;
  swift_retain(a1);

  v52.receiver = v7;
  v52.super_class = ObjectType;
  id v9 = (char *)objc_msgSendSuper2(&v52, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = OBJC_IVAR____TtC6Arcade12SearchButton_backgroundEffectView;
  id v11 = *(void **)&v9[OBJC_IVAR____TtC6Arcade12SearchButton_backgroundEffectView];
  id v12 = v9;
  id v13 = [v11 layer];
  [v13 setAllowsGroupBlending:0];

  [v12 setBackgroundView:*(void *)&v9[v10]];
  id v14 = [v12 layer];
  [v14 setCornerRadius:35.0];

  id v15 = [v12 layer];
  [v15 setMaskedCorners:UIRectCorner.caCornerMask.getter(-1)];

  [v12 setClipsToBounds:1];
  unsigned int v16 = &v12[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  __int128 v17 = *(_OWORD *)&v12[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 16];
  v58[0] = *(_OWORD *)&v12[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius];
  v58[1] = v17;
  char v59 = v12[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)unsigned int v16 = 0x4020000000000000LL;
  *((void *)v16 + 1) = 0x4039000000000000LL;
  v16[16] = 0;
  *((void *)v16 + _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 3) = 0LL;
  v16[32] = 1;
  int v18 = v12;
  sub_1000690F4((uint64_t)v58, v19, v20);

  v53[0] = xmmword_100233760;
  v53[1] = xmmword_100233770;
  char v54 = 0;
  uint64_t v55 = 0LL;
  uint64_t v56 = 0LL;
  char v57 = 1;
  uint64_t v21 = v18;
  sub_10006779C(v53);

  uint64_t v22 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v23 = v21;
  id v24 = [v22 blackColor];
  id v25 = [v24 CGColor];

  Class v26 = &v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  id v27 = *(void **)&v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor];
  unint64_t v28 = *(void **)&v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 8];
  unint64_t v29 = *(void **)&v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowColor + 16];
  *(void *)Class v26 = v25;
  *(int64x2_t *)(v26 + 8) = vdupq_n_s64(1uLL);
  id v30 = v27;
  sub_10000AAF8(v28);
  sub_10000AAF8(v29);
  id v31 = v25;

  sub_10000AB08(v28);
  sub_10000AB08(v29);
  sub_100069248(v27, v28, (unint64_t)v29);

  sub_10000AB08(v28);
  sub_10000AB08(v29);

  NSString v32 = &v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v33 = *(_DWORD *)&v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v31) = *(_DWORD *)&v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v28) = v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v29) = v23[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)NSString v32 = 0;
  *((_DWORD *)v32 + 1) = 1051931443;
  v32[8] = 0;
  uint64_t v34 = *((unsigned int *)v32 + 3);
  *((_DWORD *)v32 + _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 3) = 0;
  v32[16] = 1;
  Class v35 = v23;
  LOBYTE(v51) = (_BYTE)v28;
  LOBYTE(v5_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = (_BYTE)v29;
  v36.n128_u32[0] = v33;
  sub_1000693B0((int)v31, v28 | (unint64_t)(v34 << 32), (char)v29, v36);

  char v39 = v35[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled];
  v35[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v39 & 1) == 0)
  {
    char v40 = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *(void *)v35) + 0x98LL))(v37, v38);
    Class v41 = v35;
    sub_1000678F0(v40);
  }

  uint64_t v42 = OBJC_IVAR____TtC6Arcade12SearchButton_imageView;
  unsigned int v43 = *(void **)&v35[OBJC_IVAR____TtC6Arcade12SearchButton_imageView];
  type metadata accessor for BundleImage(0LL);
  id v44 = v43;
  double v45 = (void *)static BundleImage.load(_:bundle:with:compatibleWith:)( 0x6349686372616553LL,  0xEA00000000006E6FLL,  0LL,  0LL,  0LL);
  objc_msgSend(v44, "setImage:", v45, v50, v51);

  id v46 = [*(id *)&v35[v42] layer];
  [v46 setCompositingFilter:kCAFilterPlusD];

  id v47 = [*(id *)&v9[v10] contentView];
  id v48 = *(id *)&v35[v42];
  [v47 addSubview:v48];

  swift_release(a1);
  return v35;
}

double sub_10006C434(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t ObjectType = swift_getObjectType(v1);
  uint64_t v3 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  __chkstk_darwin(v3);
  uint64_t v50 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for FlowOrigin(0LL);
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  __chkstk_darwin(v5);
  uint64_t v56 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for FlowAnimationBehavior(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v55 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v14);
  unsigned int v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v17);
  __n128 v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_1000031E8((uint64_t *)&unk_1002E1810);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for FlowPage(0LL);
  *(void *)&double result = __chkstk_darwin(v23).n128_u64[0];
  id v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (v2 == 2 && v57[OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state] != 2)
  {
    uint64_t v61 = 0LL;
    __int128 v59 = 0u;
    __int128 v60 = 0u;
    (*(void (**)(char *, void))(v24 + 104))(v27, enum case for FlowPage.search(_:));
    uint64_t v28 = type metadata accessor for URL(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56LL))(v22, 1LL, 1LL, v28);
    uint64_t v29 = type metadata accessor for ReferrerData(0LL);
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))( v19,  1LL,  1LL,  v29);
    memset(v58, 0, sizeof(v58));
    static ActionMetrics.notInstrumented.getter(v30);
    (*(void (**)(char *, void, uint64_t))(v11 + 104))( v13,  enum case for FlowPresentationContext.presentModal(_:),  v10);
    id v31 = v55;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v55, enum case for FlowAnimationBehavior.infer(_:), v7);
    NSString v32 = v56;
    uint64_t v33 = (*(uint64_t (**)(char *, void, uint64_t))(v53 + 104))(v56, enum case for FlowOrigin.inapp(_:), v54);
    uint64_t v34 = static FlowActionPresentation.stackPush.getter(v33);
    uint64_t v36 = v35;
    uint64_t v37 = type metadata accessor for FlowAction(0LL);
    swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
    uint64_t v38 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)( &v59,  0LL,  0LL,  0LL,  v27,  v22,  0LL,  0LL,  v19,  v58,  v16,  v13,  v31,  v32,  0LL,  v34,  v36);
    uint64_t v39 = UIResponder.nearestActionRunner.getter();
    if (v39)
    {
      uint64_t v40 = v39;
      Class v41 = v50;
      *((void *)&v60 + 1) = ObjectType;
      uint64_t v42 = v57;
      *(void *)&__int128 v59 = v57;
      uint64_t v43 = *(void *)&v57[OBJC_IVAR____TtC6Arcade12SearchButton_objectGraph];
      uint64_t v45 = v51;
      uint64_t v44 = v52;
      (*(void (**)(char *, void, uint64_t))(v51 + 104))( v50,  enum case for ActionRunner.Origin.userInitiated(_:),  v52);
      id v46 = v42;
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v38, &v59, v41, v43);
      swift_release(v38);
      __n128 v47 = swift_release(v40);
      (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v41, v44, v47);
      sub_100029100((uint64_t)&v59);
    }

    else
    {
      *(void *)&double result = swift_release(v38).n128_u64[0];
    }
  }

  return result;
}

uint64_t sub_10006C854()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state);
}

double sub_10006C868(char a1)
{
  unsigned __int8 v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC6Arcade22BaseCollectionViewCell_state) = a1;
  return sub_10006C434(v2);
}

void sub_10006C884()
{
  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v10, "layoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6Arcade12SearchButton_imageView];
  [v0 bounds];
  objc_msgSend(v1, "sizeThatFits:", v2, v3);
  double v5 = v4;
  double v7 = v6;
  [v0 bounds];
  CGFloat v8 = CGRectGetMidX(v11) - v5 * 0.5;
  [v0 bounds];
  objc_msgSend(v1, "setFrame:", v8, CGRectGetMidY(v12) - v7 * 0.5, v5, v7);
  id v9 = [v0 layer];
  [v0 bounds];
  [v9 setCornerRadius:CGRectGetHeight(v13) * 0.5];
}

void sub_10006CACC(char a1)
{
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC6Arcade12SearchButton_backgroundEffectView), "contentView"));
  if (qword_1002DC500 != -1) {
    swift_once(&qword_1002DC500, sub_10006BD74);
  }
  double v4 = (void *)qword_1002E0190;
  if (a1)
  {
    uint64_t v5 = qword_1002E0198;
    if (!qword_1002E0198) {
      uint64_t v5 = qword_1002E0190;
    }
    if (qword_1002E01A0) {
      double v4 = (void *)qword_1002E01A0;
    }
    if (a1 == 1) {
      double v4 = (void *)v5;
    }
  }

  id v6 = v4;
  [v3 setBackgroundColor:v6];

  double v7 = *(void **)(v1 + OBJC_IVAR____TtC6Arcade12SearchButton_imageView);
  if (qword_1002DC4F8 != -1) {
    swift_once(&qword_1002DC4F8, sub_10006BB94);
  }
  CGFloat v8 = (void *)qword_1002E0178;
  if (a1)
  {
    uint64_t v9 = qword_1002E0180;
    if (!qword_1002E0180) {
      uint64_t v9 = qword_1002E0178;
    }
    if (qword_1002E0188) {
      CGFloat v8 = (void *)qword_1002E0188;
    }
    if (a1 == 1) {
      CGFloat v8 = (void *)v9;
    }
  }

  id v10 = v8;
  [v7 setTintColor:v10];
}

void sub_10006CC48()
{
}

uint64_t type metadata accessor for SearchButton()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade12SearchButton);
}

uint64_t type metadata accessor for ArtworkDisplayingViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade31ArtworkDisplayingViewController);
}

void sub_10006CE84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  __chkstk_darwin(v10);
  CGRect v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for MetricsData(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(_BYTE *)(v3 + 16) != 1 || *(_BYTE *)(v3 + 17) == 1)
  {
    static AppEnterMetricsEvent.makeData(enterKind:)(a1, v15);
    uint64_t v18 = inject(_:from:)(a2);
    static MetricsFieldsContext.emptyContext.getter(v18);
    uint64_t v19 = MetricsPipeline.process(_:using:)(v17, v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    unint64_t v20 = sub_100048E8C();
    swift_retain(v3);
    uint64_t v22 = static OS_dispatch_queue.main.getter(v21);
    v26[3] = v20;
    v26[4] = &protocol witness table for OS_dispatch_queue;
    v26[0] = v22;
    Promise.always(on:perform:)(v26, sub_10006D860, v3);
    swift_release(v19);
    swift_release(v3);
    _s6Arcade17PillOverlayLayoutVwxx_0(v26);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }

void sub_10006D04C(uint64_t a1, void *a2)
{
  id v76 = a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v69 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v74 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v73 = v6;
  __chkstk_darwin(v6);
  int v71 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = type metadata accessor for DispatchTime(0LL);
  uint64_t v8 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  id v77 = (char *)&v58 - v12;
  uint64_t v70 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v13 = *(void *)(v70 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v70);
  __chkstk_darwin(v15);
  uint64_t v75 = (char *)&v58 - v16;
  uint64_t v17 = type metadata accessor for MetricsData(0LL);
  uint64_t v18 = *(void *)(*(void *)(v17 - 8) + 64LL);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v68 = v2;
  if ((*(_BYTE *)(v2 + 17) & 1) == 0)
  {
    uint64_t v66 = v8;
    uint64_t v24 = a1;
    uint64_t v25 = (char *)&v58 - v22;
    uint64_t v61 = v21;
    uint64_t v60 = v23;
    NSString v26 = String._bridgeToObjectiveC()();
    uint64_t v67 = v4;
    id v27 = v26;
    uint64_t v28 = v13;
    id v62 = [v76 beginBackgroundTaskWithName:v26 expirationHandler:0];

    uint64_t v65 = v25;
    static AppExitMetricsEvent.makeData()();
    uint64_t v29 = v75;
    inject(_:from:)(v24);
    unint64_t v30 = sub_100048E8C();
    uint64_t v64 = static OS_dispatch_queue.main.getter(v30);
    static DispatchTime.now()();
    + infix(_:_:)(v10, 0.5);
    uint64_t v66 = *(void *)(v66 + 8);
    ((void (*)(char *, uint64_t))v66)(v10, v78);
    id v31 = *(void (**)(char *, char *))(v28 + 16);
    __int128 v59 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    uint64_t v32 = v70;
    v31(v59, v29);
    uint64_t v33 = v60;
    uint64_t v34 = v25;
    uint64_t v35 = v61;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v19, v34, v61);
    uint64_t v36 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v63 = v28;
    uint64_t v37 = (v36 + 16) & ~v36;
    uint64_t v38 = *(unsigned __int8 *)(v33 + 80);
    uint64_t v39 = (v14 + v38 + v37) & ~v38;
    unint64_t v40 = (v18 + v39 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    char v58 = v19;
    unint64_t v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v43 = swift_allocObject(&unk_1002837D8, v42 + 8, v36 | v38 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v43 + v37, v59, v32);
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v43 + v39, v58, v35);
    id v44 = v76;
    *(void *)(v43 + v4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v76;
    *(void *)(v43 + v41) = v62;
    uint64_t v45 = v68;
    *(void *)(v43 + v42) = v68;
    aBlock[4] = sub_10006D75C;
    uint64_t v80 = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100135408;
    aBlock[3] = &unk_1002837F0;
    id v46 = _Block_copy(aBlock);
    uint64_t v47 = v80;
    id v48 = v44;
    swift_retain(v45);
    __n128 v49 = swift_release(v47);
    uint64_t v50 = v71;
    static DispatchQoS.unspecified.getter(v49);
    aBlock[0] = _swiftEmptyArrayStorage;
    unint64_t v51 = sub_100048DF8();
    uint64_t v52 = sub_1000031E8((uint64_t *)&unk_1002DF660);
    unint64_t v53 = sub_100048E40();
    uint64_t v54 = v74;
    uint64_t v55 = v67;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v52, v53, v67, v51);
    uint64_t v56 = v77;
    char v57 = (void *)v64;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v77, v50, v54, v46);
    _Block_release(v46);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v54, v55);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v50, v73);
    ((void (*)(char *, uint64_t))v66)(v56, v78);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v75, v32);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v65, v35);
  }

uint64_t sub_10006D514(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static MetricsFieldsContext.emptyContext.getter(v13);
  uint64_t v14 = MetricsPipeline.process(_:using:)(a2, v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v15 = (void *)swift_allocObject(&unk_100283828, 40LL, 7LL);
  _OWORD v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  unint64_t v16 = sub_100048E8C();
  id v17 = a3;
  swift_retain(a5);
  uint64_t v19 = static OS_dispatch_queue.main.getter(v18);
  void v22[3] = v16;
  v22[4] = &protocol witness table for OS_dispatch_queue;
  v22[0] = v19;
  Promise.always(on:perform:)(v22, sub_10006D82C, v15);
  swift_release(v14);
  swift_release(v15);
  return _s6Arcade17PillOverlayLayoutVwxx_0(v22);
}

uint64_t sub_10006D640()
{
  return swift_deallocClassInstance(v0, 18LL, 7LL);
}

uint64_t type metadata accessor for AppEnterExitEventWatchdoge()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade26AppEnterExitEventWatchdoge);
}

uint64_t sub_10006D670()
{
  uint64_t v1 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for MetricsData(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v13 = v3 | v8 | 7;
  unint64_t v10 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v11 = (((v10 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  swift_release(*(void *)(v0 + v11));
  return swift_deallocObject(v0, v11 + 8, v13);
}

uint64_t sub_10006D75C()
{
  uint64_t v1 = *(void *)(type metadata accessor for MetricsPipeline(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for MetricsData(0LL) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_10006D514( v0 + v2,  v0 + v5,  *(void **)(v0 + v6),  *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_10006D7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006D7F8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10006D800()
{
  swift_release(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

id sub_10006D82C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  id result = [*(id *)(v0 + 16) endBackgroundTask:*(void *)(v0 + 24)];
  *(_BYTE *)(v1 + 17) = 1;
  return result;
}

void sub_10006D860()
{
  *(_WORD *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = 1;
}

char *sub_10006D86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v14 = OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_compoundScrollObserver;
  id v15 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0LL));
  unint64_t v16 = v7;
  *(void *)&v7[v14] = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_objectGraph] = a6;
  *(void *)&v16[OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_presenter] = a1;
  id v17 = &v16[OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_appStateController];
  *(void *)id v17 = a2;
  *((void *)v17 + 1) = a3;
  *(void *)&v16[OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_artworkLoader] = a5;
  swift_retain(a6);
  swift_retain(a1);
  swift_unknownObjectRetain(a2);
  id v18 = objc_msgSend(a7, "snapshotPageTraitEnvironment", swift_retain(a5).n128_f64[0]);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits] = v18;
  uint64_t v19 = type metadata accessor for ArtworkIconFetcher(0LL);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  __n128 v20 = swift_retain(a6);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_artworkIconFetcher] = ArtworkIconFetcher.init(objectGraph:)(v20);
  uint64_t v21 = sub_1000031E8(&qword_1002E0370);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  swift_retain(a1);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_infiniteScrollObserver] = InfiniteScrollObserver.init(paginatedPresenter:triggerDistance:)(v22, 500.0);
  *(void *)&v16[OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_impressionsCalculator] = a4;
  swift_retain(a4);

  v37.receiver = v16;
  v37.super_class = (Class)type metadata accessor for SearchResultsCollectionViewDelegate();
  id v23 = objc_msgSendSuper2(&v37, "init");
  uint64_t v24 = type metadata accessor for ImpressionsScrollObserver(0LL);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  swift_retain(a4);
  uint64_t v25 = (char *)v23;
  uint64_t v26 = ImpressionsScrollObserver.init(_:)(a4);
  uint64_t v27 = OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_compoundScrollObserver;
  id v28 = *(id *)&v25[OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_compoundScrollObserver];
  CompoundScrollObserver.addChild(_:)(v26, &protocol witness table for ImpressionsScrollObserver);

  uint64_t v29 = *(void **)&v25[v27];
  uint64_t v30 = *(void *)&v25[OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_infiniteScrollObserver];
  unint64_t v31 = sub_10006EBA8();
  id v32 = v29;
  swift_retain(v30);
  CompoundScrollObserver.addChild(_:)(v33, v31);
  swift_release(v26);

  swift_release(v30);
  swift_release(a1);
  swift_unknownObjectRelease(a2);
  swift_release(a4);
  swift_release(a5);
  swift_release(a6);
  swift_unknownObjectRelease(a7);
  return v25;
}

uint64_t sub_10006DB18( void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, char *))
{
  uint64_t v11 = type metadata accessor for IndexPath(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  id v15 = a3;
  id v16 = a4;
  id v17 = a1;
  a6(v16, v14);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_10006DE78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsCollectionViewDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchResultsCollectionViewDelegate()
{
  return objc_opt_self(&OBJC_CLASS____TtC6Arcade35SearchResultsCollectionViewDelegate);
}

uint64_t sub_10006DF70( uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v12 = sub_1000031E8((uint64_t *)&unk_1002E5350);
  __n128 v13 = __chkstk_darwin(v12);
  id v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for ImpressionMetrics(0LL, v13);
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = __chkstk_darwin(v16);
  __n128 v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v24[1] = a1;
  uint64_t v21 = ((uint64_t (*)(void, __n128))a4)(0LL, v18);
  uint64_t v22 = sub_100003B6C(a5, a4, a6);
  dispatch thunk of ViewModel.impressionMetrics.getter(v21, v22);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
  if (*(void *)(a3 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_impressionsCalculator))
  {
    [a2 frame];
    ImpressionsCalculator.addElement(_:at:)(v20);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
}

uint64_t sub_10006E0E0( uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10 = sub_1000031E8((uint64_t *)&unk_1002E5350);
  __n128 v11 = __chkstk_darwin(v10);
  __n128 v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for ImpressionMetrics(0LL, v11);
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = __chkstk_darwin(v14);
  __n128 v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v22[1] = a1;
  uint64_t v19 = ((uint64_t (*)(void, __n128))a3)(0LL, v16);
  uint64_t v20 = sub_100003B6C(a4, a3, a5);
  dispatch thunk of ViewModel.impressionMetrics.getter(v19, v20);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  if (*(void *)(a2 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_impressionsCalculator)) {
    ImpressionsCalculator.removeElement(_:)(v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

void sub_10006E23C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = dispatch thunk of SearchResultsPresenter.result(at:)(a2);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = type metadata accessor for ContentSearchResultCollectionViewCell();
    uint64_t v8 = swift_dynamicCastClass(a1, v7);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      uint64_t v10 = type metadata accessor for AppSearchResult(0LL);
      if (swift_dynamicCastClass(v6, v10))
      {
        id v11 = a1;
        swift_retain_n(v6, 2LL);
        id v12 = v11;
        uint64_t v13 = AppSearchResult.lockup.getter(v12);
        uint64_t v14 = OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits;
        uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits);
        uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_objectGraph);
        swift_unknownObjectRetain(v15);
        sub_100113E38(v13, v16, v9);
        swift_release(v13);
        uint64_t v17 = swift_unknownObjectRelease(v15);
        uint64_t v18 = AppSearchResult.lockup.getter(v17);
        uint64_t v19 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_artworkLoader);
        uint64_t v20 = *(void **)(v3 + v14);
        swift_unknownObjectRetain(v20);
        sub_10011367C(v18, v19, v20);
        swift_release(v18);
        uint64_t v21 = swift_unknownObjectRelease(v20);
        uint64_t v22 = AppSearchResult.lockup.getter(v21);
        sub_10006DF70( v22,  v12,  v3,  (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup,  &qword_1002E0380,  (uint64_t)&protocol conformance descriptor for Lockup);
        swift_release(v22);

LABEL_8:
        swift_release_n(v6, 2LL);
LABEL_13:
        swift_release(v6);
        return;
      }
    }

    uint64_t v23 = type metadata accessor for EditorialSearchResultCollectionViewCell();
    uint64_t v24 = swift_dynamicCastClass(a1, v23);
    if (v24)
    {
      uint64_t v25 = (_BYTE *)v24;
      uint64_t v26 = type metadata accessor for EditorialSearchResult(0LL);
      uint64_t v27 = swift_dynamicCastClass(v6, v26);
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits;
        uint64_t v30 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits);
        swift_getObjectType(v30);
        uint64_t v31 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_objectGraph);
        id v32 = a1;
        swift_retain_n(v6, 2LL);
        id v33 = v32;
        swift_unknownObjectRetain(v30);
        sub_1001C8F20(v28, v31, v25);
        swift_unknownObjectRelease(v30);
        uint64_t v34 = *(void *)(v3 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_artworkLoader);
        uint64_t v35 = *(void *)(v3 + v29);
        swift_unknownObjectRetain(v35);
        sub_1001C981C(v28, v34);
        swift_unknownObjectRelease(v35);
        swift_retain(v6);
        sub_10006DF70( v28,  v33,  v3,  (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult,  &qword_1002E0388,  (uint64_t)&protocol conformance descriptor for SearchResult);

        swift_release(v6);
        goto LABEL_8;
      }
    }

    uint64_t v36 = type metadata accessor for BundleSearchResult(0LL);
    if (swift_dynamicCastClass(v6, v36))
    {
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x80000001002464A0LL,  "Arcade/SearchResultsCollectionViewDelegate.swift",  48LL,  2LL,  160LL,  0);
    }

    else
    {
      uint64_t v37 = type metadata accessor for AdvertsSearchResult();
      if (swift_dynamicCastClass(v6, v37))
      {
        unint64_t v39 = 0xD00000000000002ELL;
        uint64_t v41 = 163LL;
        unint64_t v40 = "SearchResult.adverts is not supported on tvOS.";
      }

      else
      {
        uint64_t v38 = type metadata accessor for InAppPurchaseSearchResult();
        if (!swift_dynamicCastClass(v6, v38)) {
          goto LABEL_13;
        }
        unint64_t v39 = 0xD000000000000034LL;
        uint64_t v41 = 166LL;
        unint64_t v40 = "SearchResult.inAppPurchase is not supported on tvOS.";
      }

      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v39,  (unint64_t)(v40 - 32) | 0x8000000000000000LL,  "Arcade/SearchResultsCollectionViewDelegate.swift",  48LL,  2LL,  v41,  0);
    }

    __break(1u);
  }

double sub_10006E60C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = dispatch thunk of SearchResultsPresenter.result(at:)(a2);
  if (v5)
  {
    uint64_t v7 = v5;
    uint64_t v8 = type metadata accessor for ContentSearchResultCollectionViewCell();
    uint64_t v9 = swift_dynamicCastClass(a1, v8);
    if (v9 && (uint64_t v10 = v9, v11 = type metadata accessor for AppSearchResult(0LL), swift_dynamicCastClass(v7, v11)))
    {
      id v28 = a1;
      sub_100029140();
      uint64_t v12 = *(void *)(v10 + OBJC_IVAR____TtC6Arcade37ContentSearchResultCollectionViewCell_lockupView);
      uint64_t v13 = OBJC_IVAR____TtC6Arcade15SmallLockupView_artworkView;
      id v14 = *(id *)(v12 + OBJC_IVAR____TtC6Arcade15SmallLockupView_artworkView);
      v29.value.super.Class isa = 0LL;
      v29.is_nil = 0;
      ArtworkView.setImage(image:animated:)(v29, v15);

      uint64_t v16 = *(void **)(v12 + v13);
      uint64_t v17 = type metadata accessor for ArtworkView(0LL);
      uint64_t v18 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
      id v19 = v16;
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v19, 1LL, v17, v18);

      uint64_t v21 = AppSearchResult.lockup.getter(v20);
      sub_10006E0E0( v21,  v3,  (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup,  &qword_1002E0380,  (uint64_t)&protocol conformance descriptor for Lockup);
      swift_release(v21);
      swift_release(v7);
    }

    else
    {
      uint64_t v22 = type metadata accessor for EditorialSearchResultCollectionViewCell();
      if (swift_dynamicCastClass(a1, v22)
        && (uint64_t v23 = type metadata accessor for EditorialSearchResult(0LL), (v24 = swift_dynamicCastClass(v7, v23)) != 0))
      {
        uint64_t v25 = v24;
        id v26 = a1;
        swift_retain_n(v7, 2LL);
        id v27 = v26;
        sub_1001C8B90();
        swift_retain(v7);
        sub_10006E0E0( v25,  v2,  (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult,  &qword_1002E0388,  (uint64_t)&protocol conformance descriptor for SearchResult);

        swift_release_n(v7, 4LL);
      }

      else
      {
        *(void *)&double result = swift_release(v7).n128_u64[0];
      }
    }
  }

  return result;
}

void sub_10006E888(uint64_t a1)
{
  uint64_t v2 = v1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v31 = a1;
    }
    else {
      uint64_t v31 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v31);
    if (v4) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease(a1);
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return;
  }

  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v4) {
    goto LABEL_22;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v5 = 0LL;
    uint64_t v6 = OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits;
    unint64_t v32 = a1 & 0xC000000000000001LL;
    while (1)
    {
      if (v32)
      {
        uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      }

      else
      {
        uint64_t v18 = *(void *)(a1 + 8 * v5 + 32);
        *(void *)&double v19 = swift_retain(v18).n128_u64[0];
      }

      id v20 = objc_msgSend(*(id *)(v2 + v6), "traitCollection", v19, v32);
      id v21 = [v20 horizontalSizeClass];

      uint64_t v22 = *(void *)(v2 + v6);
      swift_getObjectType(v22);
      if (v21 == (id)1) {
        double v23 = 2.0;
      }
      else {
        double v23 = 3.0;
      }
      swift_unknownObjectRetain(v22);
      double v24 = PageTraitEnvironment.pageContentSize.getter();
      swift_unknownObjectRelease(v22);
      double v25 = (v24 + (v23 + -1.0) * -40.0) / v23;
      uint64_t v26 = type metadata accessor for AppSearchResult(0LL);
      if (swift_dynamicCastClass(v18, v26))
      {
        type metadata accessor for ContentSearchResultCollectionViewCell();
        uint64_t v7 = *(void *)(v2 + v6);
        swift_getObjectType(v7);
        uint64_t v8 = swift_unknownObjectRetain(v7);
        double v9 = sub_100113A14(v8, v25, 1.79769313e308);
        double v11 = v10;
        swift_unknownObjectRelease(v7);
        swift_retain(v18);
        uint64_t v13 = AppSearchResult.lockup.getter(v12);
        id v14 = *(void **)(v2 + v6);
        uint64_t v15 = swift_unknownObjectRetain(v14);
        id v16 = (id)ASKDeviceTypeGetCurrent(v15);
        uint64_t v17 = (uint64_t)sub_1001140E0(v13, v14, v9, v11);
        swift_release(v13);
        swift_unknownObjectRelease(v14);
      }

      else
      {
        uint64_t v27 = type metadata accessor for EditorialSearchResult(0LL);
        if (!swift_dynamicCastClass(v18, v27)) {
          goto LABEL_7;
        }
        type metadata accessor for EditorialSearchResultCollectionViewCell();
        uint64_t v28 = *(void *)(v2 + v6);
        swift_getObjectType(v28);
        uint64_t v29 = swift_unknownObjectRetain(v28);
        double v30 = sub_1001C8ED4(v29, v25, 1.79769313e308);
        swift_unknownObjectRelease(v28);
        swift_retain(v18);
        uint64_t v17 = sub_1001C9DF0(v30);
      }

      sub_1000ADA04(v17);
      swift_release(v18);
LABEL_7:
      ++v5;
      swift_release(v18);
      if (v4 == v5) {
        goto LABEL_22;
      }
    }
  }

  __break(1u);
}

unint64_t sub_10006EBA8()
{
  unint64_t result = qword_1002E0378;
  if (!qword_1002E0378)
  {
    uint64_t v1 = sub_100003274(&qword_1002E0370);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for InfiniteScrollObserver<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002E0378);
  }

  return result;
}

double sub_10006EBF4()
{
  uint64_t v1 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for StaticDimension(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = __chkstk_darwin(v5).n128_u64[0];
  double v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits;
  objc_msgSend( *(id *)(v0 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits),  "pageMarginInsets",  v7);
  if (qword_1002DCBD0 != -1) {
    swift_once(&qword_1002DCBD0, sub_100102E50);
  }
  uint64_t v11 = sub_1000061F4(v5, (uint64_t)qword_1002F0588);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v11, v5);
  uint64_t v12 = *(void *)(v0 + v10);
  uint64_t v13 = swift_unknownObjectRetain(v12);
  static Dimensions.defaultRoundingRule.getter(v13);
  double v14 = AnyDimension.value(in:rounded:)(v12, v4, v5, &protocol witness table for StaticDimension);
  swift_unknownObjectRelease(v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v14;
}

double sub_10006ED84(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits;
  id v5 =  [*(id *)(v1 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits) traitCollection];
  id v6 = [v5 horizontalSizeClass];

  uint64_t v7 = *(void *)(v2 + v4);
  swift_getObjectType(v7);
  if (v6 == (id)1) {
    double v8 = 2.0;
  }
  else {
    double v8 = 3.0;
  }
  swift_unknownObjectRetain(v7);
  double v9 = PageTraitEnvironment.pageContentSize.getter();
  swift_unknownObjectRelease(v7);
  double v10 = (v9 + (v8 + -1.0) * -40.0) / v8;
  uint64_t v11 = type metadata accessor for AppSearchResult(0LL);
  if (swift_dynamicCastClass(a1, v11))
  {
    type metadata accessor for ContentSearchResultCollectionViewCell();
    uint64_t v12 = *(void *)(v2 + v4);
    swift_getObjectType(v12);
    uint64_t v13 = swift_unknownObjectRetain(v12);
    double v14 = sub_100113A14(v13, v10, 1.79769313e308);
  }

  else
  {
    uint64_t v15 = type metadata accessor for EditorialSearchResult(0LL);
    if (!swift_dynamicCastClass(a1, v15)) {
      return 0.0;
    }
    type metadata accessor for EditorialSearchResultCollectionViewCell();
    uint64_t v12 = *(void *)(v2 + v4);
    swift_getObjectType(v12);
    uint64_t v16 = swift_unknownObjectRetain(v12);
    double v14 = sub_1001C8ED4(v16, v10, 1.79769313e308);
  }

  double v17 = v14;
  swift_unknownObjectRelease(v12);
  return v17;
}

double sub_10006EF20(void *a1, uint64_t a2)
{
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___UICollectionViewFlowLayout);
  double v6 = 0.0;
  if (swift_dynamicCastObjCClass(a1, v5))
  {
    id v7 = a1;
    uint64_t v8 = dispatch thunk of SearchResultsPresenter.result(at:)(a2);
    if (v8)
    {
      uint64_t v9 = v8;
      [*(id *)(v2 + OBJC_IVAR____TtC6Arcade35SearchResultsCollectionViewDelegate_pageTraits) pageContainerSize];
      double v6 = sub_10006ED84(v9);

      swift_release(v9);
    }

    else
    {
    }
  }

  return v6;
}

uint64_t sub_10006EFE4(uint64_t a1)
{
  uint64_t v2 = sub_1000031E8((uint64_t *)&unk_1002E5350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10006F024()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002DC678 != -1) {
    swift_once(&qword_1002DC678, sub_100071650);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_1000061F4(v5, (uint64_t)qword_1002EEFB8);
  uint64_t v41 = *(void (**)(char *))(*(void *)(v5 - 8) + 16LL);
  uint64_t v7 = v6;
  v41(v4);
  unsigned int v38 = enum case for FontSource.useCase(_:);
  unint64_t v39 = (void (*)(char *))v1[13];
  v39(v4);
  uint64_t v65 = type metadata accessor for StaticDimension(0LL);
  uint64_t v66 = &protocol witness table for StaticDimension;
  uint64_t v8 = v65;
  uint64_t v36 = v65;
  sub_100009D54(&v64);
  uint64_t v62 = v0;
  uint64_t v63 = &protocol witness table for FontSource;
  uint64_t v9 = sub_100009D54(&v61);
  double v10 = (void (*)(void *, char *, uint64_t))v1[2];
  v10(v9, v4, v0);
  unint64_t v42 = v10;
  StaticDimension.init(_:scaledLike:)(&v61, 20.0);
  unint64_t v40 = (void (*)(char *, uint64_t))v1[1];
  v40(v4, v0);
  uint64_t v11 = v7;
  uint64_t v12 = (void (*)(char *, uint64_t, uint64_t))v41;
  ((void (*)(char *, uint64_t, uint64_t))v41)(v4, v7, v5);
  uint64_t v13 = v38;
  double v14 = (void (*)(char *, uint64_t, uint64_t))v39;
  ((void (*)(char *, void, uint64_t))v39)(v4, v38, v0);
  uint64_t v62 = v8;
  uint64_t v63 = &protocol witness table for StaticDimension;
  sub_100009D54(&v61);
  uint64_t v59 = v0;
  uint64_t v60 = &protocol witness table for FontSource;
  uint64_t v15 = sub_100009D54(&v58);
  v10(v15, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v58, 12.0);
  uint64_t v16 = v40;
  v40(v4, v0);
  uint64_t v35 = v5;
  v12(v4, v11, v5);
  v14(v4, v13, v0);
  uint64_t v17 = v36;
  uint64_t v59 = v36;
  uint64_t v60 = &protocol witness table for StaticDimension;
  sub_100009D54(&v58);
  uint64_t v56 = v0;
  char v57 = &protocol witness table for FontSource;
  uint64_t v18 = sub_100009D54(&v55);
  v42(v18, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v55, 0.0);
  v16(v4, v0);
  if (qword_1002DC670 != -1) {
    swift_once(&qword_1002DC670, sub_100071638);
  }
  uint64_t v19 = v35;
  uint64_t v37 = sub_1000061F4(v35, (uint64_t)qword_1002EEFA0);
  id v20 = (void (*)(char *, uint64_t, uint64_t))v41;
  ((void (*)(char *, uint64_t, uint64_t))v41)(v4, v37, v19);
  id v21 = (void (*)(char *, uint64_t, uint64_t))v39;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v4, v13, v0);
  uint64_t v56 = v17;
  uint64_t v22 = v17;
  char v57 = &protocol witness table for StaticDimension;
  sub_100009D54(&v55);
  uint64_t v53 = v0;
  uint64_t v54 = &protocol witness table for FontSource;
  double v23 = sub_100009D54(&v52);
  v42(v23, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v52, 32.0);
  double v24 = v40;
  v40(v4, v0);
  uint64_t v25 = v37;
  v20(v4, v37, v19);
  v21(v4, v13, v0);
  uint64_t v53 = v22;
  uint64_t v54 = &protocol witness table for StaticDimension;
  sub_100009D54(&v52);
  uint64_t v50 = v0;
  unint64_t v51 = &protocol witness table for FontSource;
  uint64_t v26 = sub_100009D54(&v49);
  uint64_t v27 = v42;
  v42(v26, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v49, 20.0);
  v24(v4, v0);
  uint64_t v28 = v25;
  uint64_t v29 = (void (*)(char *, uint64_t, uint64_t))v41;
  ((void (*)(char *, uint64_t, uint64_t))v41)(v4, v28, v19);
  v21(v4, v13, v0);
  uint64_t v30 = v36;
  uint64_t v50 = v36;
  unint64_t v51 = &protocol witness table for StaticDimension;
  sub_100009D54(&v49);
  uint64_t v47 = v0;
  id v48 = &protocol witness table for FontSource;
  uint64_t v31 = sub_100009D54(&v46);
  v27(v31, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v46, 50.0);
  v24(v4, v0);
  v29(v4, v37, v19);
  v21(v4, v38, v0);
  uint64_t v47 = v30;
  id v48 = &protocol witness table for StaticDimension;
  sub_100009D54(&v46);
  uint64_t v44 = v0;
  uint64_t v45 = &protocol witness table for FontSource;
  unint64_t v32 = sub_100009D54(&v43);
  v27(v32, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v43, 32.0);
  v24(v4, v0);
  uint64_t v44 = type metadata accessor for ZeroDimension(0LL);
  uint64_t v45 = &protocol witness table for ZeroDimension;
  sub_100009D54(&v43);
  static ZeroDimension.zero.getter();
  qword_1002EEBA0 = (uint64_t)&type metadata for Double;
  unk_1002EEBA8 = &protocol witness table for Double;
  qword_1002EEB88 = 0x4028000000000000LL;
  sub_100009D90(&v64, (uint64_t)&unk_1002EEA48);
  sub_100009D90(&v61, (uint64_t)&unk_1002EEA70);
  sub_100009D90(&v58, (uint64_t)&unk_1002EEA98);
  sub_100009D90(&v55, (uint64_t)&unk_1002EEAC0);
  sub_100009D90(&v52, (uint64_t)&unk_1002EEAE8);
  sub_100009D90(&v49, (uint64_t)&unk_1002EEB10);
  sub_100009D90(&v46, (uint64_t)&unk_1002EEB38);
  return sub_100009D90(&v43, (uint64_t)&unk_1002EEB60);
}

char *sub_10006F5C8(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, v10);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  double v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_headingArtworkView;
  uint64_t v16 = type metadata accessor for AnnotationImagesView(0LL);
  id v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16));
  uint64_t v18 = v4;
  *(void *)&v4[v15] = [v17 init];
  uint64_t v19 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_headingTextLabel;
  id v20 = (objc_class *)type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002DC678 != -1) {
    swift_once(&qword_1002DC678, sub_100071650);
  }
  uint64_t v21 = sub_1000061F4(v11, (uint64_t)qword_1002EEFB8);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v22(v14, v21, v11);
  *(void *)&v18[v19] = sub_1000137B8((uint64_t)v14, 2LL, 0LL, 1, 0);
  uint64_t v23 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_textLabel;
  if (qword_1002DC670 != -1) {
    swift_once(&qword_1002DC670, sub_100071638);
  }
  uint64_t v24 = sub_1000061F4(v11, (uint64_t)qword_1002EEFA0);
  v22(v14, v24, v11);
  *(void *)&v18[v23] = sub_1000137B8((uint64_t)v14, 2LL, 0LL, 1, 0);
  uint64_t v25 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_subTextLabel;
  v22(v14, v24, v11);
  *(void *)&v18[v25] = sub_1000137B8((uint64_t)v14, 2LL, 0LL, 1, 0);
  uint64_t v26 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_listTextLabel;
  v22(v14, v24, v11);
  *(void *)&v18[v26] = sub_1000137B8((uint64_t)v14, 2LL, 0LL, 1, 0);
  v18[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_isLastItem] = 0;

  v65.receiver = v18;
  v65.super_class = ObjectType;
  id v27 = objc_msgSendSuper2(&v65, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  uint64_t v31 = (char *)v27;
  objc_msgSend(v31, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  [v31 addSubview:*(void *)&v31[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_headingArtworkView]];
  uint64_t v32 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_headingTextLabel;
  id v33 = *(unsigned __int8 **)&v31[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_headingTextLabel];
  [v33 setNumberOfLines:0];
  int v34 = v33[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v33[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v34 != 1)
  {
    uint64_t v35 = v33;
    id v36 = [v35 traitCollection];
    char v37 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v37 & 1) != 0) {
      uint64_t v38 = 2LL;
    }
    else {
      uint64_t v38 = 0LL;
    }
    v64.receiver = v35;
    v64.super_class = v20;
    objc_msgSendSuper2(&v64, "setTextAlignment:", v38);
  }

  [v31 addSubview:*(void *)&v31[v32]];
  uint64_t v39 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_textLabel;
  unint64_t v40 = *(unsigned __int8 **)&v31[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_textLabel];
  [v40 setNumberOfLines:0];
  int v41 = v40[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v40[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v41 != 1)
  {
    unint64_t v42 = v40;
    id v43 = [v42 traitCollection];
    char v44 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v44 & 1) != 0) {
      uint64_t v45 = 2LL;
    }
    else {
      uint64_t v45 = 0LL;
    }
    v63.receiver = v42;
    v63.super_class = v20;
    objc_msgSendSuper2(&v63, "setTextAlignment:", v45);
  }

  [v31 addSubview:*(void *)&v31[v39]];
  uint64_t v46 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_subTextLabel;
  uint64_t v47 = *(unsigned __int8 **)&v31[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_subTextLabel];
  [v47 setNumberOfLines:1];
  int v48 = v47[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v47[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v48 != 1)
  {
    __int128 v49 = v47;
    id v50 = [v49 traitCollection];
    char v51 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v51 & 1) != 0) {
      uint64_t v52 = 2LL;
    }
    else {
      uint64_t v52 = 0LL;
    }
    v62.receiver = v49;
    v62.super_class = v20;
    objc_msgSendSuper2(&v62, "setTextAlignment:", v52);
  }

  [v31 addSubview:*(void *)&v31[v46]];
  uint64_t v53 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_listTextLabel;
  uint64_t v54 = *(unsigned __int8 **)&v31[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_listTextLabel];
  [v54 setNumberOfLines:0];
  int v55 = v54[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment];
  v54[OBJC_IVAR____TtC6Arcade16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v55 != 1)
  {
    uint64_t v56 = v54;
    id v57 = [v56 traitCollection];
    char v58 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v58 & 1) != 0) {
      uint64_t v59 = 2LL;
    }
    else {
      uint64_t v59 = 0LL;
    }
    v61.receiver = v56;
    v61.super_class = v20;
    objc_msgSendSuper2(&v61, "setTextAlignment:", v59);
  }

  [v31 addSubview:*(void *)&v31[v53]];

  return v31;
}

id sub_10006FB28@<X0>(uint64_t a1@<X8>)
{
  if (qword_1002DC510 != -1) {
    swift_once(&qword_1002DC510, sub_10006F024);
  }
  sub_10005663C((uint64_t)&unk_1002EEA48, a1);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_headingTextLabel);
  uint64_t v4 = type metadata accessor for DynamicTypeLabel(0LL);
  *(void *)(a1 + 384) = v4;
  *(void *)(a1 + 392) = &protocol witness table for UILabel;
  *(void *)(a1 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v3;
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_headingArtworkView);
  *(void *)(a1 + 424) = type metadata accessor for AnnotationImagesView(0LL);
  *(void *)(a1 + 432) = protocol witness table for UIView;
  *(void *)(a1 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v5;
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_textLabel);
  *(void *)(a1 + 464) = v4;
  *(void *)(a1 + 472) = &protocol witness table for UILabel;
  *(void *)(a1 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v6;
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_subTextLabel);
  *(void *)(a1 + 504) = v4;
  *(void *)(a1 + 512) = &protocol witness table for UILabel;
  *(void *)(a1 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v7;
  id v13 = *(id *)(v1 + OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_listTextLabel);
  *(void *)(a1 + 544) = v4;
  *(void *)(a1 + 552) = &protocol witness table for UILabel;
  *(void *)(a1 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v13;
  *(_BYTE *)(a1 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = *(_BYTE *)(v1 + OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_isLastItem);
  id v8 = v3;
  id v9 = v5;
  id v10 = v6;
  id v11 = v7;
  return v13;
}

uint64_t sub_10006FDE4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = swift_allocObject(&unk_100283850, 48LL, 7LL);
  *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v7 + 24) = v3;
  *(_BYTE *)(v7 + 32) = a2;
  *(void *)(v7 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v3;
  uint64_t v9 = type metadata accessor for LayoutViewPlaceholder(0LL, v8);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  swift_retain(a1);
  uint64_t result = LayoutViewPlaceholder.init(measureWith:)(sub_100070E84, v7);
  a3[3] = v9;
  a3[4] = (uint64_t)&protocol witness table for LayoutViewPlaceholder;
  *a3 = result;
  return result;
}

double sub_10006FE80(void *a1, uint64_t a2, double a3, double a4, uint64_t a5, int a6)
{
  int v97 = a6;
  uint64_t v101 = a2;
  uint64_t v102 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v99 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  id v96 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  id v95 = (char *)&v86 - v11;
  __chkstk_darwin(v12);
  uint64_t v93 = (char *)&v86 - v13;
  __chkstk_darwin(v14);
  uint64_t v89 = (char *)&v86 - v15;
  sub_100006028(0LL, (unint64_t *)&qword_1002E0470, &OBJC_CLASS___UIFont_ptr);
  if (qword_1002DC678 != -1) {
    swift_once(&qword_1002DC678, sub_100071650);
  }
  uint64_t v17 = type metadata accessor for FontUseCase(0LL, v16);
  uint64_t v18 = sub_1000061F4(v17, (uint64_t)qword_1002EEFB8);
  swift_getObjectType(a1);
  id v19 = [a1 traitCollection];
  id v91 = (id)static UIFont.preferredFont(forUseWith:compatibleWith:)(v18, v19);

  if (qword_1002DC670 != -1) {
    swift_once(&qword_1002DC670, sub_100071638);
  }
  uint64_t v20 = sub_1000061F4(v17, (uint64_t)qword_1002EEFA0);
  id v21 = [a1 traitCollection];
  id v90 = (id)static UIFont.preferredFont(forUseWith:compatibleWith:)(v20, v21);

  uint64_t v22 = v101;
  uint64_t v23 = AnnotationItem.headingArtworkItems.getter();
  sub_10005B9C8(v23, (uint64_t)a1, a3, a4);
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;
  double v31 = v30;
  __n128 v32 = swift_bridgeObjectRelease(v23);
  id v33 = a1;
  uint64_t v34 = type metadata accessor for LayoutViewPlaceholder(0LL, v32);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  uint64_t v35 = LayoutViewPlaceholder.init(measurements:)(v25, v27, v29, v31);
  uint64_t v36 = AnnotationItem.headingArtworkItems.getter();
  uint64_t v37 = type metadata accessor for Artwork(0LL);
  LOBYTE(v2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = Array.isNotEmpty.getter(v36, v37);
  __n128 v38 = swift_bridgeObjectRelease(v36);
  uint64_t v100 = v35;
  LayoutViewPlaceholder.hasContent.setter(v20 & 1, v38);
  char v39 = sub_10007082C(v22, v33);
  id v94 = v33;
  id v92 = sub_1000708D0(v22, v33);
  if (qword_1002DC510 != -1) {
    swift_once(&qword_1002DC510, sub_10006F024);
  }
  uint64_t v88 = v39 & 1;
  uint64_t v40 = sub_10005663C((uint64_t)&unk_1002EEA48, (uint64_t)v110);
  uint64_t v41 = AnnotationItem.heading.getter(v40);
  uint64_t v43 = v42;
  uint64_t v44 = type metadata accessor for Feature(0LL);
  v111[3] = v44;
  uint64_t v45 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  v111[4] = v45;
  uint64_t v46 = sub_100009D54(v111);
  unsigned int v98 = enum case for Feature.measurement_with_labelplaceholder(_:);
  uint64_t v47 = *(void (**)(void *))(*(void *)(v44 - 8) + 104LL);
  v47(v46);
  uint64_t v87 = (void (*)(void *, void, uint64_t))v47;
  id v48 = v91;
  id v91 = v48;
  char v49 = isFeatureEnabled(_:)(v111);
  _s6Arcade17PillOverlayLayoutVwxx_0(v111);
  char v83 = v49 & 1;
  id v50 = v89;
  uint64_t v51 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v41,  v43,  v48,  4LL,  0LL,  0LL,  0LL,  0LL,  v83);
  LabelPlaceholderCompatibility.layoutTextView.getter(v109, v51);
  uint64_t v99 = *(void *)(v99 + 8);
  ((void (*)(char *, uint64_t))v99)(v50, v102);
  uint64_t v107 = v34;
  id v108 = &protocol witness table for LayoutViewPlaceholder;
  *(void *)&__int128 v106 = v100;
  __n128 v52 = swift_retain(v100);
  uint64_t v53 = AnnotationItem.text.getter(v52);
  uint64_t v55 = v54;
  v111[3] = v44;
  uint64_t v86 = v45;
  v111[4] = v45;
  uint64_t v56 = sub_100009D54(v111);
  uint64_t v57 = v98;
  ((void (*)(void *, void, uint64_t))v47)(v56, v98, v44);
  id v58 = v90;
  LOBYTE(v5_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = isFeatureEnabled(_:)(v111);
  _s6Arcade17PillOverlayLayoutVwxx_0(v111);
  LOBYTE(v84) = v50 & 1;
  uint64_t v59 = v93;
  uint64_t v60 = v88;
  uint64_t v61 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v53,  v55,  v58,  4LL,  0LL,  0LL,  v88,  0LL,  v84);
  LabelPlaceholderCompatibility.layoutTextView.getter(v105, v61);
  uint64_t v62 = v102;
  uint64_t v63 = ((uint64_t (*)(char *, uint64_t))v99)(v59, v102);
  uint64_t v64 = AnnotationItem.subText.getter(v63);
  uint64_t v66 = v65;
  v111[3] = v44;
  v111[4] = v45;
  uint64_t v67 = sub_100009D54(v111);
  uint64_t v68 = v57;
  uint64_t v69 = v87;
  v87(v67, v68, v44);
  id v70 = v58;
  LOBYTE(v45) = isFeatureEnabled(_:)(v111);
  _s6Arcade17PillOverlayLayoutVwxx_0(v111);
  LOBYTE(v85) = v45 & 1;
  int v71 = v95;
  uint64_t v72 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v64,  v66,  v70,  4LL,  0LL,  0LL,  v60,  0LL,  v85);
  LabelPlaceholderCompatibility.layoutTextView.getter(v104, v72);
  uint64_t v73 = (void (*)(char *, uint64_t))v99;
  ((void (*)(char *, uint64_t))v99)(v71, v62);
  v111[3] = v44;
  v111[4] = v86;
  uint64_t v74 = sub_100009D54(v111);
  v69(v74, v98, v44);
  id v75 = v92;
  id v76 = v92;
  id v77 = v70;
  LOBYTE(v64) = isFeatureEnabled(_:)(v111);
  _s6Arcade17PillOverlayLayoutVwxx_0(v111);
  uint64_t v78 = v64 & 1;
  Class v79 = v96;
  uint64_t v80 = LabelPlaceholderCompatibility.init(attributedText:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v75,  v77,  4LL,  0LL,  0LL,  0LL,  0LL,  v78);
  LabelPlaceholderCompatibility.layoutTextView.getter(v103, v80);
  v73(v79, v62);
  memcpy(v111, v110, sizeof(v111));
  sub_100009D90(v109, (uint64_t)&v112);
  sub_100009D90(&v106, (uint64_t)&v113);
  sub_100009D90(v105, (uint64_t)&v114);
  sub_100009D90(v104, (uint64_t)&v115);
  sub_100009D90(v103, (uint64_t)v116);
  v116[40] = v97 & 1;
  double v81 = TVProductAnnotationLayout.ItemLayout.measurements(fitting:in:)(v94, a3, 1.79769313e308);

  swift_release(v100);
  sub_1000566A4(v111);
  return v81;
}

id sub_100070554(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_headingTextLabel];
  AnnotationItem.heading.getter(a1);
  if (v7)
  {
    uint64_t v9 = v7;
    NSString v10 = String._bridgeToObjectiveC()();
    *(void *)&double v8 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }

  else
  {
    NSString v10 = 0LL;
  }

  objc_msgSend(v6, "setText:", v10, v8);

  uint64_t v11 = AnnotationItem.headingArtworkItems.getter();
  sub_10005B2E8(v11);
  __n128 v12 = swift_bridgeObjectRelease(v11);
  uint64_t v13 = *(void **)&v3[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_textLabel];
  AnnotationItem.text.getter(v12);
  if (v14)
  {
    uint64_t v16 = v14;
    NSString v17 = String._bridgeToObjectiveC()();
    *(void *)&double v15 = swift_bridgeObjectRelease(v16).n128_u64[0];
  }

  else
  {
    NSString v17 = 0LL;
  }

  objc_msgSend(v13, "setText:", v17, v15);

  AnnotationItem.heading.getter(v18);
  uint64_t v20 = v19;
  unint64_t v22 = swift_bridgeObjectRelease(v19).n128_u64[0];
  if (v20
    || (AnnotationItem.listText.getter(v21), v24 = v23, unint64_t v22 = swift_bridgeObjectRelease(v23).n128_u64[0], v24)
    || (id v25 = objc_msgSend(v3, "traitCollection", *(double *)&v22),
        char v26 = UITraitCollection.prefersAccessibilityLayouts.getter(v25),
        v25,
        (v26 & 1) != 0)
    || (AnnotationItem.subText.getter(v27), !v28))
  {
    uint64_t v29 = 0LL;
    unsigned int v30 = 0;
  }

  else
  {
    unint64_t v22 = swift_bridgeObjectRelease(v28).n128_u64[0];
    uint64_t v29 = 1LL;
    unsigned int v30 = 1;
  }

  id v31 = objc_msgSend(v13, "setNumberOfLines:", v29, *(double *)&v22);
  __n128 v32 = *(void **)&v3[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_subTextLabel];
  AnnotationItem.subText.getter(v31);
  if (v33)
  {
    uint64_t v35 = v33;
    NSString v36 = String._bridgeToObjectiveC()();
    *(void *)&double v34 = swift_bridgeObjectRelease(v35).n128_u64[0];
  }

  else
  {
    NSString v36 = 0LL;
  }

  objc_msgSend(v32, "setText:", v36, v34);

  [v32 setNumberOfLines:v30];
  if (v30) {
    uint64_t v37 = 2LL;
  }
  else {
    uint64_t v37 = 1LL;
  }
  sub_1000146AC((id)v37);
  __n128 v38 = *(void **)&v3[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_listTextLabel];
  id v39 = sub_1000708D0(a1, v3);
  [v38 setAttributedText:v39];

  v3[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_isLastItem] = a2 & 1;
  return [v3 setNeedsLayout];
}

uint64_t _s8ItemViewCMa()
{
  return objc_opt_self(&OBJC_CLASS____TtCC6Arcade28AnnotationCollectionViewCell8ItemView);
}

uint64_t sub_10007082C(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = swift_bridgeObjectRelease(v3);
  if (v4) {
    return 0LL;
  }
  AnnotationItem.listText.getter(v5);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease(v6);
  if (v7) {
    return 0LL;
  }
  id v8 = [a2 traitCollection];
  char v9 = UITraitCollection.prefersAccessibilityLayouts.getter();

  if ((v9 & 1) != 0) {
    return 0LL;
  }
  AnnotationItem.subText.getter();
  if (!v10) {
    return 0LL;
  }
  swift_bridgeObjectRelease(v10);
  return 1LL;
}

id sub_1000708D0(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Locale(0LL);
  uint64_t v56 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v55 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v54 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for FontSource(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for StaticDimension(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = AnnotationItem.listText.getter(v15);
  if (!v17) {
    return 0LL;
  }
  uint64_t v51 = v16;
  uint64_t v50 = v3;
  uint64_t v52 = v17;
  char v49 = a2;
  id v18 = [a2 traitCollection];
  char v19 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if ((v19 & 1) != 0)
  {
    uint64_t v21 = v52;
    v60[0] = v51;
    v60[1] = v52;
    v58[0] = 161644770LL;
    v58[1] = 0xA400000000000000LL;
    v57[0] = 0x208F80E2A280E2LL;
    v57[1] = 0xA700000000000000LL;
    unint64_t v22 = sub_100008794();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v58,  v57,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v22,  v22,  v22);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease(v21);
    id v25 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
    char v26 = String._bridgeToObjectiveC()();
    id v27 = objc_msgSend(v25, "initWithString:", v26, swift_bridgeObjectRelease(v24).n128_f64[0]);
  }

  else
  {
    if (qword_1002DC670 != -1) {
      swift_once(&qword_1002DC670, sub_100071638);
    }
    uint64_t v28 = type metadata accessor for FontUseCase(0LL, v20);
    uint64_t v29 = sub_1000061F4(v28, (uint64_t)qword_1002EEFA0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16LL))(v10, v29, v28);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for FontSource.useCase(_:), v7);
    v60[3] = v7;
    v60[4] = &protocol witness table for FontSource;
    unsigned int v30 = sub_100009D54(v60);
    (*(void (**)(void *, char *, uint64_t))(v8 + 16))(v30, v10, v7);
    StaticDimension.init(_:scaledLike:)(v60, 12.0);
    uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    static Dimensions.defaultRoundingRule.getter(v31);
    double v32 = AnyDimension.value(in:rounded:)(v49, v6, v11, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v6, v54);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    id v33 = [objc_allocWithZone(NSMutableParagraphStyle) init];
    [v33 setFirstLineHeadIndent:0.0];
    [v33 setHeadIndent:v32];
    [v33 setDefaultTabInterval:v32];
    sub_100006028(0LL, &qword_1002E03E8, &OBJC_CLASS___NSTextTab_ptr);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v33 setTabStops:isa];

    [v33 setParagraphSpacing:0.0];
    uint64_t v35 = v55;
    uint64_t v37 = static Locale.storefront.getter(v36);
    double v38 = Locale.paragraphLineHeightMultiple.getter(v37);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v50);
    [v33 setLineHeightMultiple:v38];
    uint64_t v39 = sub_1000031E8(&qword_1002DF830);
    uint64_t inited = swift_initStackObject(v39, v59);
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    *(void *)(inited + 32) = NSParagraphStyleAttributeName;
    *(void *)(inited + 64) = sub_100006028(0LL, &qword_1002EB340, &OBJC_CLASS___NSMutableParagraphStyle_ptr);
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v33;
    uint64_t v41 = NSParagraphStyleAttributeName;
    id v42 = v33;
    unint64_t v43 = sub_1000E68C8(inited);
    id v44 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
    uint64_t v45 = v52;
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v45);
    type metadata accessor for Key(0LL);
    sub_100003B6C( (unint64_t *)&qword_1002DD7B0,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_10023351C);
    char v26 = Dictionary._bridgeToObjectiveC()().super.isa;
    id v27 = objc_msgSend(v44, "initWithString:attributes:", v46, v26, swift_bridgeObjectRelease(v43).n128_f64[0]);
  }

  return v27;
}

uint64_t sub_100070E60()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

double sub_100070E84(void *a1, double a2, double a3)
{
  return sub_10006FE80(a1, *(void *)(v3 + 16), a2, a3, *(void *)(v3 + 24), *(unsigned __int8 *)(v3 + 32));
}

void sub_100070E94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_headingArtworkView;
  uint64_t v9 = type metadata accessor for AnnotationImagesView(0LL);
  *(void *)&v3[v8] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)) init];
  uint64_t v10 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_headingTextLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002DC678 != -1) {
    swift_once(&qword_1002DC678, sub_100071650);
  }
  uint64_t v11 = sub_1000061F4(v4, (uint64_t)qword_1002EEFB8);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v7, v11, v4);
  *(void *)&v3[v10] = sub_1000137B8((uint64_t)v7, 2LL, 0LL, 1, 0);
  uint64_t v13 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_textLabel;
  if (qword_1002DC670 != -1) {
    swift_once(&qword_1002DC670, sub_100071638);
  }
  uint64_t v14 = sub_1000061F4(v4, (uint64_t)qword_1002EEFA0);
  v12(v7, v14, v4);
  *(void *)&v3[v13] = sub_1000137B8((uint64_t)v7, 2LL, 0LL, 1, 0);
  uint64_t v15 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_subTextLabel;
  v12(v7, v14, v4);
  *(void *)&v3[v15] = sub_1000137B8((uint64_t)v7, 2LL, 0LL, 1, 0);
  uint64_t v16 = OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_listTextLabel;
  v12(v7, v14, v4);
  *(void *)&v3[v16] = sub_1000137B8((uint64_t)v7, 2LL, 0LL, 1, 0);
  v3[OBJC_IVAR____TtCC6Arcade28AnnotationCollectionViewCell8ItemView_isLastItem] = 0;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100243980LL,  "Arcade/AnnotationCollectionViewCell+ItemView.swift",  50LL,  2LL,  71LL,  0);
  __break(1u);
}

id sub_1000710C0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEBB0, &UIFontTextStyleSubtitle1, 0);
}

id sub_1000710D8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEBC8, (id *)&UIFontTextStyleCaption2, 2);
}

id sub_1000710F0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEBE0, (id *)&UIFontTextStyleTitle1, 2);
}

id sub_100071108(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEBF8, (id *)&UIFontTextStyleCallout, 0x8000);
}

id sub_100071120(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEC10, (id *)&UIFontTextStyleHeadline, 2);
}

id sub_100071138(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EEC28, (id *)&UIFontTextStyleBody, (uint64_t *)&UIFontWeightBold);
}

id sub_100071154(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EEC40, (id *)&UIFontTextStyleTitle1, (uint64_t *)&UIFontWeightBold);
}

id sub_100071170(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEC58, (id *)&UIFontTextStyleCallout, 0);
}

id sub_100071188(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEC70, (id *)&UIFontTextStyleHeadline, 0);
}

id sub_1000711A0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEC88, (id *)&UIFontTextStyleCallout, 0);
}

id sub_1000711B8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EECA0, (id *)&UIFontTextStyleBody, 0);
}

id sub_1000711D0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EECB8, (id *)&UIFontTextStyleCallout, 0x8000);
}

id sub_1000711E8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EECD0, (id *)&UIFontTextStyleCaption1, 2);
}

id sub_100071200(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EECE8, (id *)&UIFontTextStyleCallout, 32770);
}

id sub_100071218(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EED00, (id *)&UIFontTextStyleCallout, 0x8000);
}

id sub_100071230(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EED18, (id *)&UIFontTextStyleCaption1, 32770);
}

uint64_t sub_100071248(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000FF90(v2, qword_1002E03F0);
  uint64_t v3 = sub_1000061F4(v2, (uint64_t)qword_1002E03F0);
  uint64_t v4 = swift_allocObject(&unk_100283880, 24LL, 7LL);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x4045000000000000LL;
  *(void *)uint64_t v3 = 0xD000000000000019LL;
  *(void *)(v3 + 8) = 0x80000001002465B0LL;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100071FBC;
  *(void *)(v3 + 24) = v4;
  *(UIFontWeight *)(v3 + 32) = UIFontWeightBold;
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104LL))( v3,  enum case for FontUseCase.systemFont(_:),  v2);
}

uint64_t sub_1000712FC(uint64_t a1)
{
  return sub_100071374(a1, qword_1002EED30, &qword_1002DC598, (uint64_t)qword_1002E03F0, (uint64_t)sub_100071248);
}

id sub_100071320(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EED48, (id *)&UIFontTextStyleCaption2, 2);
}

id sub_100071338(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EED60, (id *)&UIFontTextStyleCaption1, 2);
}

uint64_t sub_100071350(uint64_t a1)
{
  return sub_100071374(a1, qword_1002EED78, &qword_1002DC518, (uint64_t)qword_1002EEBB0, (uint64_t)sub_1000710C0);
}

uint64_t sub_100071374(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000FF90(v9, a2);
  uint64_t v10 = sub_1000061F4(v9, (uint64_t)a2);
  if (*a3 != -1LL) {
    swift_once(a3, a5);
  }
  uint64_t v11 = sub_1000061F4(v9, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16LL))(v10, v11, v9);
}

uint64_t sub_10007140C(uint64_t a1)
{
  return sub_100071374(a1, qword_1002EED90, &qword_1002DC5B8, (uint64_t)qword_1002EED78, (uint64_t)sub_100071350);
}

id sub_100071430(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEDA8, (id *)&UIFontTextStyleHeadline, 0);
}

id sub_100071448(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEDC0, (id *)&UIFontTextStyleBody, 0);
}

id sub_100071460(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEDD8, (id *)&UIFontTextStyleCaption1, 2);
}

id sub_100071478(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEDF0, (id *)&UIFontTextStyleCallout, 0);
}

id sub_100071490(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEE08, (id *)&UIFontTextStyleTitle1, 2);
}

id sub_1000714A8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEE20, (id *)&UIFontTextStyleBody, 2);
}

id sub_1000714C0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEE38, (id *)&UIFontTextStyleBody, 0);
}

id sub_1000714D8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEE50, (id *)&UIFontTextStyleBody, 0);
}

id sub_1000714F0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEE68, (id *)&UIFontTextStyleBody, 0);
}

id sub_100071508(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEE80, (id *)&UIFontTextStyleCallout, 0);
}

id sub_100071520(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEE98, (id *)&UIFontTextStyleBody, 0);
}

id sub_100071538(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EEEB0, (id *)&UIFontTextStyleCaption1, (uint64_t *)&UIFontWeightMedium);
}

id sub_100071554(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEEC8, (id *)&UIFontTextStyleBody, 0);
}

id sub_10007156C(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEEE0, (id *)&UIFontTextStyleTitle1, 2);
}

id sub_100071584(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEEF8, (id *)&UIFontTextStyleCaption2, 0);
}

uint64_t sub_10007159C(uint64_t a1)
{
  return sub_100071374(a1, qword_1002EEF10, &qword_1002DC5D0, (uint64_t)qword_1002EEDC0, (uint64_t)sub_100071448);
}

id sub_1000715C0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEF28, (id *)&UIFontTextStyleCaption2, 0);
}

id sub_1000715D8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEF40, (id *)&UIFontTextStyleCallout, 2);
}

id sub_1000715F0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEF58, (id *)&UIFontTextStyleCallout, 2);
}

id sub_100071608(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEF70, (id *)&UIFontTextStyleCaption2, 0);
}

id sub_100071620(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEF88, (id *)&UIFontTextStyleBody, 0x8000);
}

id sub_100071638(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEFA0, (id *)&UIFontTextStyleCaption2, 0);
}

id sub_100071650(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEFB8, (id *)&UIFontTextStyleCaption2, 2);
}

id sub_100071668(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEFD0, (id *)&UIFontTextStyleTitle3, 2);
}

id sub_100071680(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EEFE8, (id *)&UIFontTextStyleCallout, 0);
}

id sub_100071698(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF000, (id *)&UIFontTextStyleCallout, 0);
}

id sub_1000716B0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF018, (id *)&UIFontTextStyleBody, 0);
}

id sub_1000716C8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF030, (id *)&UIFontTextStyleBody, 0);
}

id sub_1000716E0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF048, (id *)&UIFontTextStyleCallout, 0);
}

id sub_1000716F8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF060, (id *)&UIFontTextStyleCaption1, 0);
}

id sub_100071710(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF078, (id *)&UIFontTextStyleBody, 0);
}

id sub_100071728(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF090, (id *)&UIFontTextStyleBody, 2);
}

id sub_100071740(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF0A8, (id *)&UIFontTextStyleCaption1, 0);
}

id sub_100071758(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF0C0, (id *)&UIFontTextStyleBody, 2);
}

id sub_100071770(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF0D8, (id *)&UIFontTextStyleCallout, 2);
}

id sub_100071788(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF0F0, (id *)&UIFontTextStyleHeadline, 2);
}

id sub_1000717A0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF108, (id *)&UIFontTextStyleCaption2, 0);
}

id sub_1000717B8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF120, (id *)&UIFontTextStyleCallout, 0);
}

id sub_1000717D0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF138, (id *)&UIFontTextStyleCaption2, 0x8000);
}

id sub_1000717E8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF150, (id *)&UIFontTextStyleCaption2, 0);
}

id sub_100071800(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF168, (id *)&UIFontTextStyleCaption2, 32770);
}

id sub_100071818(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF180, (id *)&UIFontTextStyleCaption2, 0x8000);
}

id sub_100071830(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF198, (id *)&UIFontTextStyleCallout, 0);
}

uint64_t sub_100071848(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000FF90(v2, qword_1002EF1B0);
  uint64_t v3 = sub_1000061F4(v2, (uint64_t)qword_1002EF1B0);
  uint64_t v4 = swift_allocObject(&unk_1002838A8, 24LL, 7LL);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x4032000000000000LL;
  strcpy((char *)v3, "inAppPurchase");
  *(_WORD *)(v3 + 14) = -4864;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100071FE4;
  *(void *)(v3 + 24) = v4;
  *(UIFontWeight *)(v3 + 32) = UIFontWeightRegular;
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104LL))( v3,  enum case for FontUseCase.systemFont(_:),  v2);
}

id sub_100071904(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF1C8, (id *)&UIFontTextStyleCaption2, 2);
}

id sub_10007191C(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF1E0, (id *)&UIFontTextStyleBody, 0);
}

id sub_100071934(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF1F8, (id *)&UIFontTextStyleCaption1, 2);
}

id sub_10007194C(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF210, (id *)&UIFontTextStyleBody, 0);
}

id sub_100071964(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF228, (id *)&UIFontTextStyleTitle2, 0);
}

id sub_10007197C(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF240, (id *)&UIFontTextStyleBody, 2);
}

id sub_100071994(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF258, (id *)&UIFontTextStyleCaption2, 0);
}

id sub_1000719AC(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF270, (id *)&UIFontTextStyleCallout, 0);
}

id sub_1000719C4(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF288, (id *)&UIFontTextStyleHeadline, 0);
}

id sub_1000719DC(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF2A0, (id *)&UIFontTextStyleCaption1, 0);
}

id sub_1000719F4(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF2B8, (id *)&UIFontTextStyleHeadline, 0);
}

id sub_100071A0C(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF2D0, (id *)&UIFontTextStyleCaption2, (uint64_t *)&UIFontWeightSemibold);
}

id sub_100071A28(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF2E8, (id *)&UIFontTextStyleCallout, (uint64_t *)&UIFontWeightSemibold);
}

id sub_100071A44(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF300, (id *)&UIFontTextStyleFootnote, 0);
}

id sub_100071A5C(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF318, (id *)&UIFontTextStyleCaption2, (uint64_t *)&UIFontWeightSemibold);
}

id sub_100071A78(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF330, (id *)&UIFontTextStyleTitle3, (uint64_t *)&UIFontWeightSemibold);
}

id sub_100071A94(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF348, (id *)&UIFontTextStyleCallout, 0);
}

id sub_100071AAC(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF360, (id *)&UIFontTextStyleCallout, (uint64_t *)&UIFontWeightSemibold);
}

id sub_100071AC8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF378, (id *)&UIFontTextStyleCallout, 2);
}

id sub_100071AE0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF390, (id *)&UIFontTextStyleCaption2, 0);
}

id sub_100071AF8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF3A8, (id *)&UIFontTextStyleCaption1, 0);
}

id sub_100071B10(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF3C0, (id *)&UIFontTextStyleCaption1, 0);
}

id sub_100071B28(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF3D8, (id *)&UIFontTextStyleCallout, 2);
}

id sub_100071B40(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF3F0, (id *)&UIFontTextStyleCaption2, 2);
}

id sub_100071B58(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF408, (id *)&UIFontTextStyleCallout, 2);
}

id sub_100071B70(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF420, (id *)&UIFontTextStyleCaption1, 0);
}

id sub_100071B88(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF438, (id *)&UIFontTextStyleCaption2, (uint64_t *)&UIFontWeightSemibold);
}

id sub_100071BA4(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF450, (id *)&UIFontTextStyleTitle3, 0);
}

id sub_100071BBC(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF468, (id *)&UIFontTextStyleCallout, 0);
}

id sub_100071BD4(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF480, (id *)&UIFontTextStyleSubheadline, 0);
}

uint64_t sub_100071BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000FF90(v2, qword_1002EF498);
  uint64_t v3 = sub_1000061F4(v2, (uint64_t)qword_1002EF498);
  uint64_t v4 = swift_allocObject(&unk_1002838D0, 24LL, 7LL);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x4040000000000000LL;
  *(void *)uint64_t v3 = 0xD000000000000012LL;
  *(void *)(v3 + 8) = 0x80000001002465D0LL;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100071FE4;
  *(void *)(v3 + 24) = v4;
  *(UIFontWeight *)(v3 + 32) = UIFontWeightHeavy;
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104LL))( v3,  enum case for FontUseCase.systemFont(_:),  v2);
}

id sub_100071CA0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF4B0, (id *)&UIFontTextStyleBody, 0);
}

id sub_100071CB8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF4C8, (id *)&UIFontTextStyleTitle1, 2);
}

id sub_100071CD0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF4E0, (id *)&UIFontTextStyleBody, 0);
}

id sub_100071CE8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF4F8, (id *)&UIFontTextStyleHeadline, 2);
}

id sub_100071D00(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF510, (id *)&UIFontTextStyleTitle1, 2);
}

uint64_t sub_100071D18(uint64_t a1)
{
  return sub_100071374(a1, qword_1002EF528, &qword_1002DC518, (uint64_t)qword_1002EEBB0, (uint64_t)sub_1000710C0);
}

id sub_100071D3C(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF540, (id *)&UIFontTextStyleCaption2, 0);
}

id sub_100071D54(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF558, (id *)&UIFontTextStyleTitle1, 2);
}

id sub_100071D6C(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF570, (id *)&UIFontTextStyleHeadline, 0);
}

id sub_100071D84(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF588, (id *)&UIFontTextStyleCallout, 0);
}

id sub_100071D9C(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF5A0, (id *)&UIFontTextStyleCaption2, (uint64_t *)&UIFontWeightBold);
}

id sub_100071DB8(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF5B8, (id *)&UIFontTextStyleTitle2, 0);
}

id sub_100071DD0(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF5D0, (id *)&UIFontTextStyleBody, 0);
}

id sub_100071DE8(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF5E8, (id *)&UIFontTextStyleCallout, (uint64_t *)&UIFontWeightBold);
}

id sub_100071E04(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF600, (id *)&UIFontTextStyleCallout, 2);
}

id sub_100071E1C(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF618, (id *)&UIFontTextStyleCaption1, (uint64_t *)&UIFontWeightSemibold);
}

id sub_100071E38(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF630, (id *)&UIFontTextStyleFootnote, 2);
}

id sub_100071E50(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF648, (id *)&UIFontTextStyleCaption2, (uint64_t *)&UIFontWeightSemibold);
}

id sub_100071E6C(uint64_t a1)
{
  return sub_100071E84(a1, qword_1002EF660, (id *)&UIFontTextStyleFootnote, 0);
}

id sub_100071E84(uint64_t a1, uint64_t *a2, id *a3, int a4)
{
  uint64_t v7 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000FF90(v7, a2);
  uint64_t v8 = sub_1000061F4(v7, (uint64_t)a2);
  id v10 = *a3;
  *(void *)uint64_t v8 = *a3;
  *(_DWORD *)(v8 + 8) = a4;
  (*(void (**)(void))(*(void *)(v7 - 8) + 104LL))();
  return v10;
}

id sub_100071F08(uint64_t a1)
{
  return sub_100071F24(a1, qword_1002EF678, (id *)&UIFontTextStyleCaption2, (uint64_t *)&UIFontWeightSemibold);
}

id sub_100071F24(uint64_t a1, uint64_t *a2, id *a3, uint64_t *a4)
{
  uint64_t v7 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000FF90(v7, a2);
  uint64_t v8 = (void *)sub_1000061F4(v7, (uint64_t)a2);
  id v11 = *a3;
  uint64_t v9 = *a4;
  *uint64_t v8 = *a3;
  v8[1] = v9;
  (*(void (**)(void))(*(void *)(v7 - 8) + 104LL))();
  return v11;
}

uint64_t sub_100071FAC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

double sub_100071FBC()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_100071FC4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100071FD4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t ArtworkLoader.fetchIcon(config:fallbackConfig:forReason:closestMatch:handlerKey:completionHandler:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject(&unk_1002838F8, 24LL, 7LL);
  swift_weakInit(v14 + 16, v7);
  uint64_t v15 = (void *)swift_allocObject(&unk_100283920, 56LL, 7LL);
  _OWORD v15[2] = a6;
  v15[3] = a7;
  v15[4] = v14;
  void v15[5] = a2;
  void v15[6] = a3;
  sub_100017A40(a6, a7);
  swift_retain(v14);
  swift_retain(a2);
  ArtworkLoader.fetchArtworkFromCache(using:forReason:closestMatch:completionHandler:)(a1, a3, 1LL, sub_100072218, v15);
  swift_release(v14);
  __n128 v16 = swift_release(v15);
  return ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( a1,  2LL,  0LL,  a5,  a6,  a7,  v16);
}

uint64_t sub_1000720E0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100072104( uint64_t a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void, uint64_t, void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a4)
  {
    uint64_t v12 = a7 + 16;
    swift_beginAccess(a7 + 16, v16, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(v12);
    if (Strong)
    {
      uint64_t v14 = Strong;
      uint64_t v15 = swift_allocObject(&unk_100283948, 32LL, 7LL);
      *(void *)(v15 + swift_weakDestroy(v0 + 16) = a5;
      *(void *)(v15 + 24) = a6;
      sub_100017A40((uint64_t)a5, a6);
      ArtworkLoader.fetchArtworkFromCache(using:forReason:closestMatch:completionHandler:)( a8,  a9,  1LL,  sub_100072270,  v15);
      swift_release(v14);
      swift_release(v15);
    }
  }

  else if (a5)
  {
    a5(a1, a2 & 1, a3, 0LL);
  }

uint64_t sub_1000721DC()
{
  if (v0[2]) {
    swift_release(v0[3]);
  }
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 56LL, 7LL);
}

void sub_100072218(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_100072244()
{
  if (*(void *)(v0 + 16)) {
    swift_release(*(void *)(v0 + 24));
  }
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100072270(uint64_t result, char a2, uint64_t a3, uint64_t a4)
{
  if (!a4)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, void))(v4 + 16);
    if (v5) {
      return v5(result, a2 & 1, a3, 0LL);
    }
  }

  return result;
}

void sub_1000722A4(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1;
  uint64_t v10 = a1;
  if (a3 != 1)
  {
    a1 = a2;
    uint64_t v10 = a2;
    if (!a2)
    {
      swift_retain(v8);
      a1 = 0LL;
      uint64_t v10 = v8;
    }
  }

  swift_retain(a1);
  uint64_t v11 = type metadata accessor for TodayCardMediaBrandedSingleApp(0LL);
  if (swift_dynamicCastClass(v10, v11))
  {
    __n128 v12 = swift_retain(v10);
    uint64_t v13 = TodayCardMediaBrandedSingleApp.artworks.getter(v12);
    uint64_t v14 = v13;
    if ((unint64_t)v13 >> 62)
    {
      if (v13 >= 0) {
        v13 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      if (_CocoaArrayWrapper.endIndex.getter(v13))
      {
LABEL_7:
        if ((v14 & 0xC000000000000001LL) == 0)
        {
          if (*(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10))
          {
LABEL_9:
            uint64_t v15 = *(void *)(v14 + 32);
            swift_retain(v15);
LABEL_10:
            swift_release(v10);
            swift_release(a2);
LABEL_51:
            swift_bridgeObjectRelease(v14);
            swift_release(v10);
            swift_release(v8);
            if (v15)
            {
              char v31 = 0;
            }

            else
            {
              memset((char *)v47 + 8, 0, 56);
              char v31 = 3;
            }

            *(void *)&v47[0] = v15;
            goto LABEL_55;
          }

          __break(1u);
          goto LABEL_58;
        }

LABEL_56:
        uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v14);
        goto LABEL_10;
      }
    }

    else if (*(void *)((v13 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      goto LABEL_7;
    }

    __break(1u);
    goto LABEL_57;
  }

  else {
    __n128 v29 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
  }
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (v30 > a3) {
    goto LABEL_14;
  }
}

    uint64_t v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v50);
    goto LABEL_35;
  }

  sub_100006060(v43, &qword_1002EAAB8);
  swift_bridgeObjectRelease(v125);
  uint64_t v56 = (uint64_t)v25;
LABEL_46:
  sub_100006060(v56, &qword_1002EAAB8);
}

LABEL_50:
    swift_release(v10);
    swift_release(a2);
    uint64_t v15 = 0LL;
    goto LABEL_51;
  }

  uint64_t v16 = type metadata accessor for TodayCardMediaList();
  if (swift_dynamicCastClass(v10, v16))
  {
    __n128 v17 = swift_retain(v10);
    uint64_t v18 = TodayCardMediaList.lockups.getter(v17);
LABEL_17:
    uint64_t v23 = v18;
    uint64_t v24 = sub_100072880(v18);
    swift_bridgeObjectRelease(v23);
    sub_100072A30((uint64_t)v24, a3, a4);
LABEL_18:
    swift_release_n(v10, 2LL);
    swift_release(v8);
    swift_release(a2);
    return;
  }

  uint64_t v19 = type metadata accessor for TodayCardMediaMultiAppFallback();
  if (swift_dynamicCastClass(v10, v19))
  {
    __n128 v20 = swift_retain(v10);
    uint64_t v18 = TodayCardMediaMultiAppFallback.lockups.getter(v20);
    goto LABEL_17;
  }

  uint64_t v21 = type metadata accessor for TodayCardMediaRiver();
  if (swift_dynamicCastClass(v10, v21))
  {
    __n128 v22 = swift_retain(v10);
    uint64_t v18 = TodayCardMediaRiver.lockups.getter(v22);
    goto LABEL_17;
  }

  uint64_t v25 = type metadata accessor for TodayCardMediaArtwork();
  if (swift_dynamicCastClass(v10, v25))
  {
    __n128 v26 = swift_retain(v10);
    uint64_t v27 = TodayCardMediaArtwork.artworks.getter(v26);
    uint64_t v14 = v27;
    if ((unint64_t)v27 >> 62)
    {
      if (v27 >= 0) {
        v27 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      if (!_CocoaArrayWrapper.endIndex.getter(v27)) {
        goto LABEL_50;
      }
    }

    else if (!*(void *)((v27 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      goto LABEL_50;
    }

    if ((v14 & 0xC000000000000001LL) != 0) {
      goto LABEL_56;
    }
    if (*(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_9;
    }
    __break(1u);
  }

  uint64_t v28 = type metadata accessor for TodayCardMediaAppIcon();
  if (swift_dynamicCastClass(v10, v28))
  {
    if (a3)
    {
      __n128 v29 = swift_retain(v10);
      uint64_t v30 = TodayCardMediaAppIcon.icon.getter(v29);
      swift_release(v8);
      swift_release_n(v10, 2LL);
      swift_release(a2);
      char v31 = 0;
      *(void *)&v47[0] = v30;
    }

    else
    {
      swift_release(v10);
      swift_release(v8);
      swift_release(a2);
      char v31 = 3;
      memset(v47, 0, sizeof(v47));
    }

      uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v14);
LABEL_30:
      __n128 v22 = swift_bridgeObjectRelease(v14);
      goto LABEL_35;
    }
  }

  else if (*(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    goto LABEL_27;
  }

  __n128 v22 = swift_bridgeObjectRelease(v14);
  uint64_t v4 = 0LL;
LABEL_35:
  uint64_t v23 = MixedMediaLockup.trailers.getter(v22);
  uint64_t v14 = v23;
  if (!((unint64_t)v23 >> 62))
  {
    uint64_t result = *(void **)((v23 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (result) {
      goto LABEL_37;
    }
LABEL_44:
    swift_bridgeObjectRelease(v14);
    uint64_t v25 = 0LL;
    goto LABEL_45;
  }

  if (v23 >= 0) {
    v23 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter(v23);
  if (!result) {
    goto LABEL_44;
  }
LABEL_37:
  if ((v14 & 0xC000000000000001LL) != 0)
  {
LABEL_52:
    uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v14);
    goto LABEL_40;
  }

  if (*(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    uint64_t v25 = *(void *)(v14 + 32);
    swift_retain(v25);
LABEL_40:
    swift_bridgeObjectRelease(v14);
LABEL_45:
    type metadata accessor for LockupMediaView();
    __n128 v26 = sub_10002B41C(v4, v25, a2, a4, a3);
    swift_release(v4);
    swift_release(v25);
    sub_1000ADA04((uint64_t)v26);
    return _swiftEmptyArrayStorage;
  }

  __break(1u);
  return result;
}

LABEL_55:
    char v48 = v31;
    sub_100072CD0((uint64_t)v47, a4);
    return;
  }

  uint64_t v32 = type metadata accessor for TodayCardMediaGrid();
  if (swift_dynamicCastClass(v10, v32))
  {
    __n128 v33 = swift_retain(v10);
    uint64_t v18 = TodayCardMediaGrid.lockups.getter(v33);
    goto LABEL_17;
  }

  uint64_t v34 = type metadata accessor for TodayCardMediaVideo(0LL);
  if (swift_dynamicCastClass(v10, v34))
  {
    __n128 v35 = swift_retain(v10);
    uint64_t v36 = TodayCardMediaVideo.videos.getter(v35);
    uint64_t v37 = v36;
    if ((unint64_t)v36 >> 62)
    {
      if (v36 >= 0) {
        v36 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      if (_CocoaArrayWrapper.endIndex.getter(v36)) {
        goto LABEL_34;
      }
    }

    else if (*(void *)((v36 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
LABEL_34:
      if ((v37 & 0xC000000000000001LL) != 0)
      {
        uint64_t v38 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v37);
LABEL_37:
        swift_bridgeObjectRelease(v37);
        if (a3)
        {
          if (v38)
          {
            *(void *)&v47[0] = v38;
            char v39 = 2;
LABEL_70:
            char v48 = v39;
            sub_100072CD0((uint64_t)v47, a4);
            swift_release_n(v10, 2LL);
            swift_release(v8);
            swift_release(a2);
            return;
          }

LABEL_69:
          memset(v47, 0, sizeof(v47));
          char v39 = 3;
          goto LABEL_70;
        }

      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }

      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }

LABEL_68:
        swift_release(v38);
        goto LABEL_69;
      }

      if (*(void *)((v37 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        uint64_t v38 = *(void *)(v37 + 32);
        swift_retain(v38);
        goto LABEL_37;
      }

      __break(1u);
LABEL_73:
      if (v5 < 0) {
        uint64_t v44 = v5;
      }
      else {
        uint64_t v44 = v5 & 0xFFFFFFFFFFFFFF8LL;
      }
      if (!_CocoaArrayWrapper.endIndex.getter(v44)) {
        goto LABEL_77;
      }
      goto LABEL_43;
    }

    swift_bridgeObjectRelease(v37);
    if (a3) {
      goto LABEL_69;
    }
    uint64_t v38 = 0LL;
    goto LABEL_68;
  }

  uint64_t v40 = type metadata accessor for TodayCardMediaHero();
  uint64_t v41 = swift_dynamicCastClass(v10, v40);
  if (!v41)
  {
LABEL_58:
    swift_release(v10);
    swift_release(v8);
    swift_release(a2);
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + swift_weakDestroy(v0 + 16) = 0u;
    *(_BYTE *)(a4 + 64) = 3;
    return;
  }

  uint64_t v37 = v41;
  __n128 v42 = swift_retain(v10);
  uint64_t v5 = TodayCardMediaHero.artworks.getter(v42);
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
LABEL_77:
    __n128 v43 = swift_bridgeObjectRelease(v5);
    uint64_t v4 = 0LL;
    goto LABEL_78;
  }

    __break(1u);
    goto LABEL_69;
  }

  uint64_t v157 = 0LL;
  uint64_t v158 = v260;
  uint64_t v150 = v258;
LABEL_33:
  v261 = a17;
  if (!v158) {
    goto LABEL_40;
  }
  uint64_t v161 = v157;
  swift_retain(v158);
  dispatch thunk of Artwork.systemImageName.getter(v162);
  if (!v163) {
    goto LABEL_37;
  }
  uint64_t v164 = v163;
  uint64_t v165 = (void *)objc_opt_self(&OBJC_CLASS___UIImageSymbolConfiguration);
  uint64_t v166 = [v165 configurationWithFont:v265];
  uint64_t v167 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v164);
  uint64_t v168 = [(id)objc_opt_self(UIImage) _systemImageNamed:v167 withConfiguration:v166];

  uint64_t v158 = v260;
  if (v168)
  {
    [v168 size];
    unint64_t v170 = v169.n128_f64[0];
    uint64_t v172 = v171;
    uint64_t v173 = type metadata accessor for LayoutViewPlaceholder(0LL, v169);
    swift_allocObject(v173, *(unsigned int *)(v173 + 48), *(unsigned __int16 *)(v173 + 52));
    uint64_t v174 = (char *)LayoutViewPlaceholder.init(representing:)(v170, v172);
    swift_release(v158);
  }

  else
  {
LABEL_37:
    swift_retain(v158);
    uint64_t v177 = sub_100171BF4(v176, v259, v264);
    uint64_t v179 = v178;
    uint64_t v180 = swift_release(v158);
    uint64_t v181 = type metadata accessor for LayoutViewPlaceholder(0LL, v180);
    swift_allocObject(v181, *(unsigned int *)(v181 + 48), *(unsigned __int16 *)(v181 + 52));
    uint64_t v174 = (char *)LayoutViewPlaceholder.init(representing:)(v177, v179);
    uint64_t v175 = swift_release(v158);
  }

  uint64_t v123 = (uint64_t)v279;
  uint64_t v157 = v161;
  id v105 = v271;
  if (v174)
  {
    *((void *)&v289 + 1) = type metadata accessor for LayoutViewPlaceholder(0LL, v175);
    uint64_t v290 = &protocol witness table for LayoutViewPlaceholder;
    *(void *)&uint64_t v288 = v174;
  }

  else
  {
LABEL_40:
    uint64_t v174 = 0LL;
    uint64_t v290 = 0LL;
    uint64_t v288 = 0u;
    uint64_t v289 = 0u;
  }

  uint64_t v182 = type metadata accessor for Feature(0LL);
  uint64_t v286 = v182;
  uint64_t v287 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  uint64_t v183 = sub_100009D54(v285);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v182 - 8) + 104LL))( v183,  enum case for Feature.measurement_with_labelplaceholder(_:),  v182);
  swift_bridgeObjectRetain(v124);
  uint64_t v184 = v265;
  uint64_t v265 = v174;
  swift_retain(v174);
  LOBYTE(v182) = isFeatureEnabled(_:)(v285);
  _s6Arcade17PillOverlayLayoutVwxx_0(v285);
  LOBYTE(v228) = v182 & 1;
  uint64_t v185 = v268;
  uint64_t v263 = v184;
  uint64_t v186 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v150,  v124,  v184,  4LL,  0LL,  v157,  v261,  0LL,  v228);
  LabelPlaceholderCompatibility.layoutTextView.getter(v285, v186);
  (*(void (**)(char *, uint64_t))(v269 + 8))(v185, v270);
  uint64_t v187 = v267;
  sub_100166DD4((uint64_t)&v288, v285);
  _s6Arcade17PillOverlayLayoutVwxx_0(v285);
  sub_100006060((uint64_t)&v288, &qword_1002E2020);
  uint64_t v188 = *(_BYTE *)(v105 + v262[8]);
  uint64_t v189 = sub_1000031E8((uint64_t *)&unk_1002EDA40);
  uint64_t v190 = *(void *)(v245 + 72);
  uint64_t v191 = *(unsigned __int8 *)(v245 + 80);
  uint64_t v192 = (v191 + 32) & ~v191;
  uint64_t v193 = swift_allocObject(v189, v192 + 3 * v190, v191 | 7);
  *(_OWORD *)(v193 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
  uint64_t v271 = v193;
  uint64_t v194 = v193 + v192;
  sub_10001027C((uint64_t)v273, v193 + v192, (uint64_t *)&unk_1002E9710);
  uint64_t v270 = v194;
  if ((v188 & 1) != 0)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v194 + v190, v187, v32);
    v266((char *)(v194 + v190), 0LL, 1LL, v32);
    sub_10001027C((uint64_t)v274, v194 + 2 * v190, (uint64_t *)&unk_1002E9710);
    uint64_t v195 = (char *)_swiftEmptyArrayStorage;
    uint64_t v196 = 3LL;
    do
    {
      uint64_t v197 = v281;
      sub_10001027C(v194, v281, (uint64_t *)&unk_1002E9710);
      sub_10003FBFC(v197, v123, (uint64_t *)&unk_1002E9710);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v123, 1LL, v32) == 1)
      {
        sub_100006060(v123, (uint64_t *)&unk_1002E9710);
      }

      else
      {
        uint64_t v198 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
        uint64_t v199 = v277;
        v198(v277, v123, v32);
        v198(v283, (uint64_t)v199, v32);
        if ((swift_isUniquelyReferenced_nonNull_native(v195) & 1) == 0) {
          uint64_t v195 = (char *)sub_10001A238(0LL, *((void *)v195 + 2) + 1LL, 1, v195);
        }
        uint64_t v201 = *((void *)v195 + 2);
        uint64_t v200 = *((void *)v195 + 3);
        if (v201 >= v200 >> 1) {
          uint64_t v195 = (char *)sub_10001A238(v200 > 1, v201 + 1, 1, v195);
        }
        *((void *)v195 + 2) = v201 + 1;
        v198( &v195[((*(unsigned __int8 *)(v33 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))
              + *(void *)(v33 + 72) * v201],
          (uint64_t)v283,
          v32);
        uint64_t v123 = (uint64_t)v279;
      }

      v194 += v190;
      --v196;
    }

    while (v196);
  }

  else
  {
    sub_10001027C((uint64_t)v274, v194 + v190, (uint64_t *)&unk_1002E9710);
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v194 + 2 * v190, v187, v32);
    v266((char *)(v194 + 2 * v190), 0LL, 1LL, v32);
    uint64_t v195 = (char *)_swiftEmptyArrayStorage;
    uint64_t v202 = 3LL;
    uint64_t v203 = v194;
    uint64_t v204 = (uint64_t)v278;
    do
    {
      v205 = v280;
      sub_10001027C(v203, v280, (uint64_t *)&unk_1002E9710);
      sub_10003FBFC(v205, v204, (uint64_t *)&unk_1002E9710);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v204, 1LL, v32) == 1)
      {
        sub_100006060(v204, (uint64_t *)&unk_1002E9710);
      }

      else
      {
        __int128 v206 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
        __int128 v207 = v276;
        v206(v276, v204, v32);
        v206(v282, (uint64_t)v207, v32);
        if ((swift_isUniquelyReferenced_nonNull_native(v195) & 1) == 0) {
          uint64_t v195 = (char *)sub_10001A238(0LL, *((void *)v195 + 2) + 1LL, 1, v195);
        }
        uint64_t v209 = *((void *)v195 + 2);
        uint64_t v208 = *((void *)v195 + 3);
        if (v209 >= v208 >> 1) {
          uint64_t v195 = (char *)sub_10001A238(v208 > 1, v209 + 1, 1, v195);
        }
        *((void *)v195 + 2) = v209 + 1;
        v206( &v195[((*(unsigned __int8 *)(v33 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))
              + *(void *)(v33 + 72) * v209],
          (uint64_t)v282,
          v32);
        uint64_t v204 = (uint64_t)v278;
      }

      v203 += v190;
      --v202;
    }

    while (v202);
  }

  __n128 v210 = v271;
  swift_setDeallocating(v271);
  swift_arrayDestroy(v270, *(void *)(v210 + 16), v246);
  __n128 v211 = swift_deallocClassInstance(v210, 32LL, 7LL);
  if (a11 == 0.0 && a12 == 0.0)
  {
    uint64_t v290 = 0LL;
    uint64_t v288 = 0u;
    uint64_t v289 = 0u;
  }

  else
  {
    uint64_t v212 = type metadata accessor for LayoutViewPlaceholder(0LL, v211);
    swift_allocObject(v212, *(unsigned int *)(v212 + 48), *(unsigned __int16 *)(v212 + 52));
    uint64_t v213 = LayoutViewPlaceholder.init(representing:)(a11, a12);
    *((void *)&v289 + 1) = v212;
    uint64_t v290 = &protocol witness table for LayoutViewPlaceholder;
    *(void *)&uint64_t v288 = v213;
  }

  uint64_t v214 = v264;
  uint64_t v215 = v244;
  v216 = v243;
  v217 = v242;
  uint64_t v218 = v241;
  uint64_t v219 = v240;
  sub_10001027C((uint64_t)&v288, (uint64_t)v285, &qword_1002E2020);
  v284[3] = &type metadata for CGFloat;
  v284[4] = &protocol witness table for CGFloat;
  v284[0] = 0x4030000000000000LL;
  int v220 = v249;
  (*(void (**)(char *, void, uint64_t))(v247 + 104))( v249,  enum case for TitleHeaderLayout.AccessoryVerticalAlignment.lastBaseline(_:),  v248);
  v221 = *(void (**)(char *, void, uint64_t))(v219 + 104);
  v222 = v251;
  v221(v251, enum case for TitleHeaderLayout.AccessoryHorizontalAlignment.rightJustified(_:), v250);
  (*(void (**)(char *, void, uint64_t))(v252 + 104))( v217,  enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:),  v218);
  TitleHeaderLayout.init(accessoryView:accessoryMargin:accessoryVerticalAlignment:accessoryHorizontalAlignment:children:childrenHorizontalAlignment:allowsAccessibilityLayouts:)( v285,  v284,  v220,  v222,  v195,  v217,  1LL);
  uint64_t v223 = CGSize.subtracting(insets:)(a13, a14, a15, a16, v254, v255);
  uint64_t v225 = v224;
  v226 = sub_100003B6C( (unint64_t *)&unk_1002E9720,  (uint64_t (*)(uint64_t))&type metadata accessor for TitleHeaderLayout,  (uint64_t)&protocol conformance descriptor for TitleHeaderLayout);
  v285[0] = dispatch thunk of Measurable.measurements(fitting:in:)(v214, v215, v226, v223, v225);
  v285[1] = v227;
  CGSize.add(outsets:)(a13, a14, a15, a16);
  swift_release(v265);

  (*(void (**)(char *, uint64_t))(v253 + 8))(v216, v215);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v267, v32);
  sub_100046E64(v275, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100006060((uint64_t)v274, (uint64_t *)&unk_1002E9710);
  sub_100006060((uint64_t)v273, (uint64_t *)&unk_1002E9710);
  return (id)sub_100006060((uint64_t)&v288, &qword_1002E2020);
}

    __break(1u);
    goto LABEL_69;
  }

  uint64_t v154 = 0LL;
  uint64_t v155 = v255;
  uint64_t v147 = v253;
LABEL_33:
  uint64_t v256 = a17;
  if (!v155) {
    goto LABEL_40;
  }
  uint64_t v158 = v154;
  char v159 = swift_retain(v155);
  dispatch thunk of Artwork.systemImageName.getter(v159);
  if (!v160) {
    goto LABEL_37;
  }
  uint64_t v161 = v160;
  uint64_t v162 = (void *)objc_opt_self(&OBJC_CLASS___UIImageSymbolConfiguration);
  __int128 v163 = [v162 configurationWithFont:v260];
  uint64_t v164 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v161);
  uint64_t v165 = [(id)objc_opt_self(UIImage) _systemImageNamed:v164 withConfiguration:v163];

  uint64_t v155 = v255;
  if (v165)
  {
    [v165 size];
    uint64_t v167 = v166.n128_f64[0];
    uint64_t v169 = v168;
    unint64_t v170 = type metadata accessor for LayoutViewPlaceholder(0LL, v166);
    swift_allocObject(v170, *(unsigned int *)(v170 + 48), *(unsigned __int16 *)(v170 + 52));
    unint64_t v171 = (char *)LayoutViewPlaceholder.init(representing:)(v167, v169);
    swift_release(v155);
  }

  else
  {
LABEL_37:
    uint64_t v173 = swift_retain(v155);
    uint64_t v174 = sub_100171BF4(v173, v254, v259);
    v176 = v175;
    uint64_t v177 = swift_release(v155);
    uint64_t v178 = type metadata accessor for LayoutViewPlaceholder(0LL, v177);
    swift_allocObject(v178, *(unsigned int *)(v178 + 48), *(unsigned __int16 *)(v178 + 52));
    unint64_t v171 = (char *)LayoutViewPlaceholder.init(representing:)(v174, v176);
    uint64_t v172 = swift_release(v155);
  }

  __int128 v120 = (uint64_t)v274;
  uint64_t v154 = v158;
  uint64_t v102 = v266;
  if (v171)
  {
    *((void *)&v284 + 1) = type metadata accessor for LayoutViewPlaceholder(0LL, v172);
    uint64_t v285 = &protocol witness table for LayoutViewPlaceholder;
    *(void *)&uint64_t v283 = v171;
  }

  else
  {
LABEL_40:
    unint64_t v171 = 0LL;
    uint64_t v285 = 0LL;
    uint64_t v283 = 0u;
    uint64_t v284 = 0u;
  }

  uint64_t v179 = type metadata accessor for Feature(0LL);
  uint64_t v281 = v179;
  uint64_t v282 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  uint64_t v180 = sub_100009D54(v280);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v179 - 8) + 104LL))( v180,  enum case for Feature.measurement_with_labelplaceholder(_:),  v179);
  swift_bridgeObjectRetain(v121);
  uint64_t v181 = v260;
  uint64_t v260 = v171;
  swift_retain(v171);
  LOBYTE(v179) = isFeatureEnabled(_:)(v280);
  _s6Arcade17PillOverlayLayoutVwxx_0(v280);
  LOBYTE(v225) = v179 & 1;
  uint64_t v182 = v263;
  v258 = v181;
  uint64_t v183 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v147,  v121,  v181,  4LL,  0LL,  v154,  v256,  0LL,  v225);
  LabelPlaceholderCompatibility.layoutTextView.getter(v280, v183);
  (*(void (**)(char *, uint64_t))(v264 + 8))(v182, v265);
  uint64_t v184 = v262;
  sub_100166DD4((uint64_t)&v283, v280);
  _s6Arcade17PillOverlayLayoutVwxx_0(v280);
  sub_100006060((uint64_t)&v283, &qword_1002E2020);
  uint64_t v185 = *(_BYTE *)(v102 + v257[8]);
  uint64_t v186 = sub_1000031E8((uint64_t *)&unk_1002EDA40);
  uint64_t v187 = *(void *)(v240 + 72);
  uint64_t v188 = *(unsigned __int8 *)(v240 + 80);
  uint64_t v189 = (v188 + 32) & ~v188;
  uint64_t v190 = swift_allocObject(v186, v189 + 3 * v187, v188 | 7);
  *(_OWORD *)(v190 + swift_weakDestroy(v0 + 16) = xmmword_100232070;
  v266 = v190;
  uint64_t v191 = v190 + v189;
  sub_10001027C((uint64_t)v268, v190 + v189, (uint64_t *)&unk_1002E9710);
  uint64_t v265 = v191;
  if ((v185 & 1) != 0)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v191 + v187, v184, v30);
    v261((char *)(v191 + v187), 0LL, 1LL, v30);
    sub_10001027C((uint64_t)v269, v191 + 2 * v187, (uint64_t *)&unk_1002E9710);
    uint64_t v192 = (char *)_swiftEmptyArrayStorage;
    uint64_t v193 = 3LL;
    do
    {
      uint64_t v194 = v276;
      sub_10001027C(v191, v276, (uint64_t *)&unk_1002E9710);
      sub_1002060A0(v194, v120);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v120, 1LL, v30) == 1)
      {
        sub_100006060(v120, (uint64_t *)&unk_1002E9710);
      }

      else
      {
        uint64_t v195 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
        uint64_t v196 = v272;
        v195(v272, v120, v30);
        v195(v278, (uint64_t)v196, v30);
        if ((swift_isUniquelyReferenced_nonNull_native(v192) & 1) == 0) {
          uint64_t v192 = (char *)sub_10001A238(0LL, *((void *)v192 + 2) + 1LL, 1, v192);
        }
        uint64_t v198 = *((void *)v192 + 2);
        uint64_t v197 = *((void *)v192 + 3);
        if (v198 >= v197 >> 1) {
          uint64_t v192 = (char *)sub_10001A238(v197 > 1, v198 + 1, 1, v192);
        }
        *((void *)v192 + 2) = v198 + 1;
        v195( &v192[((*(unsigned __int8 *)(v31 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))
              + *(void *)(v31 + 72) * v198],
          (uint64_t)v278,
          v30);
        __int128 v120 = (uint64_t)v274;
      }

      v191 += v187;
      --v193;
    }

    while (v193);
  }

  else
  {
    sub_10001027C((uint64_t)v269, v191 + v187, (uint64_t *)&unk_1002E9710);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v191 + 2 * v187, v184, v30);
    v261((char *)(v191 + 2 * v187), 0LL, 1LL, v30);
    uint64_t v192 = (char *)_swiftEmptyArrayStorage;
    uint64_t v199 = 3LL;
    uint64_t v200 = v191;
    uint64_t v201 = (uint64_t)v273;
    do
    {
      uint64_t v202 = v275;
      sub_10001027C(v200, v275, (uint64_t *)&unk_1002E9710);
      sub_1002060A0(v202, v201);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v201, 1LL, v30) == 1)
      {
        sub_100006060(v201, (uint64_t *)&unk_1002E9710);
      }

      else
      {
        uint64_t v203 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
        uint64_t v204 = v271;
        v203(v271, v201, v30);
        v203(v277, (uint64_t)v204, v30);
        if ((swift_isUniquelyReferenced_nonNull_native(v192) & 1) == 0) {
          uint64_t v192 = (char *)sub_10001A238(0LL, *((void *)v192 + 2) + 1LL, 1, v192);
        }
        __int128 v206 = *((void *)v192 + 2);
        v205 = *((void *)v192 + 3);
        if (v206 >= v205 >> 1) {
          uint64_t v192 = (char *)sub_10001A238(v205 > 1, v206 + 1, 1, v192);
        }
        *((void *)v192 + 2) = v206 + 1;
        v203( &v192[((*(unsigned __int8 *)(v31 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))
              + *(void *)(v31 + 72) * v206],
          (uint64_t)v277,
          v30);
        uint64_t v201 = (uint64_t)v273;
      }

      v200 += v187;
      --v199;
    }

    while (v199);
  }

  __int128 v207 = v266;
  swift_setDeallocating(v266);
  swift_arrayDestroy(v265, *(void *)(v207 + 16), v241);
  swift_deallocClassInstance(v207, 32LL, 7LL);
  if (a11 == 0.0 && a12 == 0.0)
  {
    uint64_t v285 = 0LL;
    uint64_t v283 = 0u;
    uint64_t v284 = 0u;
  }

  else
  {
    uint64_t v209 = type metadata accessor for LayoutViewPlaceholder(0LL, v208);
    swift_allocObject(v209, *(unsigned int *)(v209 + 48), *(unsigned __int16 *)(v209 + 52));
    __n128 v210 = LayoutViewPlaceholder.init(representing:)(a11, a12);
    *((void *)&v284 + 1) = v209;
    uint64_t v285 = &protocol witness table for LayoutViewPlaceholder;
    *(void *)&uint64_t v283 = v210;
  }

  __n128 v211 = v259;
  uint64_t v212 = v239;
  uint64_t v213 = v238;
  uint64_t v214 = v237;
  uint64_t v215 = v236;
  v216 = v235;
  sub_10001027C((uint64_t)&v283, (uint64_t)v280, &qword_1002E2020);
  v279[3] = &type metadata for CGFloat;
  v279[4] = &protocol witness table for CGFloat;
  v279[0] = 0x4030000000000000LL;
  v217 = v244;
  (*(void (**)(char *, void, uint64_t))(v242 + 104))( v244,  enum case for TitleHeaderLayout.AccessoryVerticalAlignment.lastBaseline(_:),  v243);
  uint64_t v218 = *(void (**)(char *, void, uint64_t))(v216 + 104);
  uint64_t v219 = v246;
  v218(v246, enum case for TitleHeaderLayout.AccessoryHorizontalAlignment.rightJustified(_:), v245);
  (*(void (**)(char *, void, uint64_t))(v247 + 104))( v214,  enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:),  v215);
  TitleHeaderLayout.init(accessoryView:accessoryMargin:accessoryVerticalAlignment:accessoryHorizontalAlignment:children:childrenHorizontalAlignment:allowsAccessibilityLayouts:)( v280,  v279,  v217,  v219,  v192,  v214,  1LL);
  int v220 = CGSize.subtracting(insets:)(a13, a14, a15, a16, v249, v250);
  v222 = v221;
  uint64_t v223 = sub_100003B6C( (unint64_t *)&unk_1002E9720,  (uint64_t (*)(uint64_t))&type metadata accessor for TitleHeaderLayout,  (uint64_t)&protocol conformance descriptor for TitleHeaderLayout);
  v280[0] = dispatch thunk of Measurable.measurements(fitting:in:)(v211, v212, v223, v220, v222);
  v280[1] = v224;
  CGSize.add(outsets:)(a13, a14, a15, a16);
  swift_release(v260);

  (*(void (**)(char *, uint64_t))(v248 + 8))(v213, v212);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v262, v30);
  sub_100046E64(v270, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100006060((uint64_t)v269, (uint64_t *)&unk_1002E9710);
  sub_100006060((uint64_t)v268, (uint64_t *)&unk_1002E9710);
  return (id)sub_100006060((uint64_t)&v283, &qword_1002E2020);
}

void *sub_100072880(uint64_t a1)
{
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain(a1);
    if (v2) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease(a1);
    return &_swiftEmptyArrayStorage;
  }

  if (a1 < 0) {
    uint64_t v19 = a1;
  }
  else {
    uint64_t v19 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a1);
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter(v19);
  uint64_t v2 = (uint64_t)result;
  if (!result) {
    goto LABEL_21;
  }
LABEL_3:
  if (v2 >= 1)
  {
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      for (uint64_t i = 0LL; i != v2; ++i)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        uint64_t v7 = Lockup.icon.getter(v6);
        uint64_t v8 = swift_unknownObjectRelease(v6);
        if (v7)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
          unint64_t v10 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v9 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v10 >= v9 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1LL);
          }
          uint64_t v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v7);
          specialized Array._endMutation()(v5);
        }
      }
    }

    else
    {
      for (uint64_t j = 0LL; j != v2; ++j)
      {
        uint64_t v13 = *(void *)(a1 + 8 * j + 32);
        uint64_t v14 = swift_retain(v13);
        uint64_t v15 = Lockup.icon.getter(v14);
        uint64_t v16 = swift_release(v13);
        if (v15)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
          unint64_t v18 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v17 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v18 >= v17 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1LL);
          }
          uint64_t v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v15);
          specialized Array._endMutation()(v12);
        }
      }
    }

    goto LABEL_21;
  }

  __break(1u);
  return result;
}

void sub_100072A30(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (!a1) {
    goto LABEL_33;
  }
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0) {
      uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v9 = a1;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(a1);
    if (v6 >= 1) {
      goto LABEL_4;
    }
    goto LABEL_32;
  }

  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  if (v6 < 1)
  {
LABEL_32:
    swift_bridgeObjectRelease(a1);
LABEL_33:
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + swift_weakDestroy(v0 + 16) = 0u;
    char v8 = 3;
    goto LABEL_34;
  }

uint64_t sub_100072C50@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = result;
  if (a3 <= 1u)
  {
    uint64_t result = swift_release(a2);
    if (v5)
    {
LABEL_3:
      *(void *)a4 = v5;
      *(_BYTE *)(a4 + 64) = 0;
      return result;
    }

    goto LABEL_7;
  }

  if (!a2)
  {
    if (result) {
      goto LABEL_3;
    }
LABEL_7:
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + swift_weakDestroy(v0 + 16) = 0u;
    char v7 = 3;
    goto LABEL_8;
  }

  uint64_t result = swift_release(result);
  *(void *)a4 = a2;
  char v7 = 2;
LABEL_8:
  *(_BYTE *)(a4 + 64) = v7;
  return result;
}

uint64_t sub_100072CD0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100072D0C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100072D48(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_100072D88()
{
  unint64_t result = qword_1002E0408;
  if (!qword_1002E0408)
  {
    uint64_t v1 = type metadata accessor for ProductDescriptionCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_1002360B8, v1);
    atomic_store(result, (unint64_t *)&qword_1002E0408);
  }

  return result;
}

double sub_100072DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v39 = type metadata accessor for PageGrid(0LL);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v3 = (char **)((char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v34 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = sub_1000031E8(&qword_1002EB230);
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  char v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char **)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v43, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t KeyPath = swift_getKeyPath(&unk_100236108, v17);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  uint64_t v20 = swift_getKeyPath(&unk_100236138, v19);
  ReadOnlyLens.subscript.getter(v20, v8);
  __n128 v21 = swift_release(v20);
  (*(void (**)(void *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
  __n128 v22 = swift_bridgeObjectRelease(v42);
  ItemLayoutContext.state.getter(v22);
  uint64_t v23 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v24 = swift_dynamicCastClassUnconditional(v35, v23, 0LL, 0LL, 0LL);
  uint64_t v25 = (uint64_t)v34;
  ItemLayoutContext.componentLayoutOptions.getter(v24);
  uint64_t v27 = swift_getKeyPath(&unk_100236168, v26);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v27);
  double v29 = PageGrid.componentMeasuringSize(spanning:)(v28, 1.0);
  (*(void (**)(void *, uint64_t))(v37 + 8))(v3, v39);
  id v30 = sub_100147A04();
  sub_1000349B0((uint64_t)v43, (uint64_t)v7, v29, v25, v30);
  double v32 = v31;
  swift_unknownObjectRelease(v30);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v25, v41);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v38);
  _s6Arcade17PillOverlayLayoutVwxx_0(v43);
  return v32;
}

uint64_t sub_1000730D0()
{
  uint64_t v0 = type metadata accessor for Bag.Profile(0LL);
  sub_10000FF90(v0, qword_1002EF690);
  sub_1000061F4(v0, (uint64_t)qword_1002EF690);
  return Bag.Profile.init(name:version:)(0x656461637241LL, 0xE600000000000000LL, 49LL, 0xE100000000000000LL);
}

uint64_t sub_100073130()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC6Arcade28ScreenshotCollectionViewCell_artworkView);
  char v2 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v1);

  return v2 & 1;
}

uint64_t sub_100073170()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for CornerStyle(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_lazilyCreatedArtworkView;
  char v7 = *(void **)&v0[OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_lazilyCreatedArtworkView];
  if (v7)
  {
    id v8 = *(id *)&v0[OBJC_IVAR____TtC6Arcade24ActionCollectionViewCell_lazilyCreatedArtworkView];
  }

  else
  {
    type metadata accessor for ArtworkView(0LL);
    uint64_t v9 = (void *)static ArtworkView.plainArtworkView.getter();
    id v10 = [(id)objc_opt_self(UIColor) clearColor];
    ArtworkView.backgroundColor.setter(v10);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for CornerStyle.arc(_:), v2);
    ArtworkView.setCorner(radius:style:)(v5, 0.0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v11 = *(void **)&v1[v6];
    id v12 = v9;
    if (v11)
    {
      [v11 removeFromSuperview];
      uint64_t v11 = *(void **)&v1[v6];
    }

    *(void *)&v1[v6] = v9;
    id v8 = v9;

    uint64_t v13 = *(void **)&v1[v6];
    if (v13)
    {
      id v14 = v13;
      id v15 = [v1 contentView];
      [v15 addSubview:v14];
    }

    else
    {
    }
  }

  char v16 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v7);

  return v16 & 1;
}

uint64_t sub_100073304(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(a2 + 16))();
  char v3 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v2);

  return v3 & 1;
}

void sub_100073338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    swift_retain(a1);
    Artwork.crop.getter(v11);
    uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 48))(v10, a3, a4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    double v13 = (*(double (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    double v15 = v14;
    char v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
    uint64_t v17 = Artwork.config(_:mode:prefersLayeredImage:)(v12, v16 & 1, v13, v15);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
    uint64_t v19 = (void *)v18(a3, a4);
    sub_1000FB124();

    uint64_t v20 = (void *)v18(a3, a4);
    ArtworkView.contentMode.setter(v12);

    __n128 v21 = (void *)v18(a3, a4);
    uint64_t v22 = type metadata accessor for ArtworkView(0LL);
    unint64_t v23 = sub_10005D36C();
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v17, 2LL, 1LL, v21, v22, v23);
    swift_release(a1);
    swift_release(v17);
  }

void sub_1000734F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v5 = type metadata accessor for ArtworkView(0LL);
  unint64_t v6 = sub_10005D36C();
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v7, a2, v5, v6);
}

uint64_t sub_100073564()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC6Arcade31FramedArtworkCollectionViewCell_artworkView);
  char v2 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v1);

  return v2 & 1;
}

uint64_t sub_1000735A4()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC6Arcade30PosterLockupCollectionViewCell_artworkView);
  char v2 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v1);

  return v2 & 1;
}

uint64_t sub_1000735E8()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC6Arcade29SmallLockupCollectionViewCell_artworkView);
  char v2 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v1);

  return v2 & 1;
}

uint64_t sub_100073628()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC6Arcade23BrickCollectionViewCell_artworkView);
  char v2 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v1);

  return v2 & 1;
}

uint64_t sub_100073668()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC6Arcade31SmallBreakoutCollectionViewCell_iconView);
  char v2 = ArtworkView.adjustsImageWhenAncestorFocused.getter(v1);

  return v2 & 1;
}

unint64_t sub_1000736B0(unint64_t result)
{
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }

  if (*(void *)(*(void *)(v1 + 16) + 16LL) <= result) {
LABEL_5:
  }
    __break(1u);
  return result;
}

id sub_1000736DC(int a1, id a2)
{
  return [a2 estimatedSectionFooterHeight];
}

CGFloat sub_1000736EC()
{
  return UITableViewAutomaticDimension;
}

double sub_1000736FC(uint64_t a1, id a2)
{
  if (a1 < 1) {
    return 0.0;
  }
  [a2 estimatedSectionHeaderHeight];
  return result;
}

double sub_10007372C(uint64_t a1, double a2, uint64_t a3, void *a4)
{
  uint64_t v7 = GameCenterReengagement.lockup.getter();
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = [a4 traitCollection];
    id v10 = [v9 userInterfaceIdiom];

    if (v10 == (id)2)
    {
      swift_release(v8);
    }

    else
    {
      type metadata accessor for SmallLockupView();
      if (qword_1002DC9E0 != -1) {
        swift_once(&qword_1002DC9E0, sub_1000AC068);
      }
      sub_10001F61C(&xmmword_1002EFDA0, &v13);
      *((void *)&v17 + 1) = &type metadata for Double;
      *(void *)&__int128 v18 = &protocol witness table for Double;
      v16.i64[0] = 0LL;
      _s6Arcade17PillOverlayLayoutVwxx_0((void *)v15 + 1);
      sub_100009D90((__int128 *)v16.i8, (uint64_t)v15 + 8);
      int64x2_t v13 = vdupq_n_s64(0x4048000000000000uLL);
      *((void *)&v17 + 1) = &type metadata for Double;
      *(void *)&__int128 v18 = &protocol witness table for Double;
      v16.i64[0] = 0x4028000000000000LL;
      _s6Arcade17PillOverlayLayoutVwxx_0(v14);
      sub_100009D90((__int128 *)v16.i8, (uint64_t)v14);
      __int128 v24 = v15[0];
      __int128 v25 = v15[1];
      __int128 v26 = v15[2];
      __int128 v20 = v14[3];
      __int128 v21 = v14[4];
      __int128 v22 = v14[5];
      __int128 v23 = v14[6];
      int64x2_t v16 = v13;
      __int128 v17 = v14[0];
      __int128 v18 = v14[1];
      __int128 v19 = v14[2];
      swift_getObjectType(a1);
      sub_1000AD290(&v16, a1, a2);
      a2 = v11;
      sub_10001F6A0(&v16);
      swift_release(v8);
    }
  }

  return a2;
}

void sub_100073914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v6 = v5;
  uint64_t v9 = sub_1000031E8(&qword_1002DF598);
  __chkstk_darwin(v9);
  double v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v12 = [a5 snapshotPageTraitEnvironment];
  uint64_t v13 = *(void *)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_pageTraits];
  *(void *)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_pageTraits] = v12;
  swift_unknownObjectRetain(v12);
  swift_unknownObjectRelease(v13);
  [v6 setNeedsLayout];
  uint64_t v14 = swift_unknownObjectRelease(v12);
  double v15 = (void *)GameCenterReengagement.backgroundColor.getter(v14);
  [v6 setBackgroundColor:v15];

  GameCenterReengagement.badgeGlyph.getter();
  if (v16)
  {
    uint64_t v17 = v16;
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }

  else
  {
    NSString v18 = 0LL;
  }

  id v19 = [(id)objc_opt_self(UIImage) _systemImageNamed:v18];

  __int128 v20 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_badgeGlyph];
  if (v19)
  {
    [v20 setImage:v19];
  }

  else
  {
    id v21 = [v20 setImage:0];
  }

  __int128 v22 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_badge];
  GameCenterReengagement.badge.getter(v21);
  if (v23)
  {
    uint64_t v25 = v23;
    NSString v26 = String._bridgeToObjectiveC()();
    *(void *)&double v24 = swift_bridgeObjectRelease(v25).n128_u64[0];
  }

  else
  {
    NSString v26 = 0LL;
  }

  objc_msgSend(v22, "setText:", v26, v24);

  uint64_t v27 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_title];
  GameCenterReengagement.title.getter(v28);
  uint64_t v30 = v29;
  NSString v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setText:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  double v32 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_subtitle];
  GameCenterReengagement.subtitle.getter(v33);
  if (v34)
  {
    uint64_t v36 = v34;
    NSString v37 = String._bridgeToObjectiveC()();
    *(void *)&double v35 = swift_bridgeObjectRelease(v36).n128_u64[0];
  }

  else
  {
    NSString v37 = 0LL;
  }

  objc_msgSend(v32, "setText:", v37, v35);

  uint64_t v38 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_heroContent];
  GameCenterReengagement.achievement.getter();
  uint64_t v39 = type metadata accessor for Achievement(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v11, 0LL, 1LL, v39);
  uint64_t v40 = AchievementCard.model.setter(v11);
  uint64_t v41 = dispatch thunk of GameCenterReengagement.clickAction.getter(v40);
  if (v41)
  {
    uint64_t v42 = v41;
    __n128 v43 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_button];
    uint64_t v44 = swift_allocObject(&unk_100283A18, 24LL, 7LL);
    swift_unknownObjectWeakInit(v44 + 16, v6);
    uint64_t v45 = (void *)swift_allocObject(&unk_100283A40, 40LL, 7LL);
    v45[2] = v44;
    v45[3] = v42;
    v45[4] = a2;
    swift_retain(v44);
    swift_retain(a2);
    __n128 v46 = swift_retain(v42);
    dispatch thunk of ImageAlignedButton.primaryActionHandler.setter(sub_1000740B4, v45, v46);
    swift_release(v44);
    Action.title.getter(v47);
    if (v48)
    {
      uint64_t v50 = v48;
      NSString v51 = String._bridgeToObjectiveC()();
      *(void *)&double v49 = swift_bridgeObjectRelease(v50).n128_u64[0];
    }

    else
    {
      NSString v51 = 0LL;
    }

    objc_msgSend(v43, "setTitle:forState:", v51, 0, v49);
    swift_release(v42);
  }

  else
  {
    [*(id *)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_button] setHidden:1];
  }

  uint64_t v52 = dispatch thunk of GameCenterReengagement.heroAction.getter([v38 removeAllGestureRecognizers]);
  if (v52)
  {
    uint64_t v53 = v52;
    uint64_t v54 = (objc_class *)type metadata accessor for TapActionGestureRecognizer();
    uint64_t v55 = (char *)objc_allocWithZone(v54);
    *(void *)&v55[OBJC_IVAR____TtC6Arcade26TapActionGestureRecognizer_action] = v53;
    *(void *)&v55[OBJC_IVAR____TtC6Arcade26TapActionGestureRecognizer_objectGraph] = a2;
    v70.receiver = v55;
    v70.super_class = v54;
    swift_retain(a2);
    *(void *)&double v56 = swift_retain(v53).n128_u64[0];
    id v57 = objc_msgSendSuper2(&v70, "initWithTarget:action:", 0, 0, v56);
    [v57 addTarget:v57 action:"execute"];
    [v38 addGestureRecognizer:v57];
    swift_release(v53);
  }

  uint64_t v58 = GameCenterReengagement.backgroundArtwork.getter();
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = *(void **)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_backgroundImage];
    [v60 setHidden:0];
    [v6 frame];
    double v62 = ceil(v61 / 3.0);
    id v63 = [v6 frame];
    uint64_t v65 = Artwork.config(using:)(v63, v62, ceil(v64 / 3.0));
    sub_1000FB124();
    uint64_t v66 = type metadata accessor for ArtworkLoader(0LL);
    uint64_t v67 = inject(_:from:)(v66, a2);
    uint64_t v68 = type metadata accessor for ArtworkView(0LL);
    uint64_t v69 = sub_100003B6C( (unint64_t *)&qword_1002DE5E0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v65, 2LL, 1LL, v60, v68, v69);
    swift_release(v59);
    swift_release(v65);
    swift_release(v67);
  }

  else
  {
    [*(id *)&v6[OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_backgroundImage] setHidden:1];
  }

void sub_100073EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    id v12 = (void *)Strong;
    uint64_t v13 = UIResponder.nearestActionRunner.getter();

    if (v13)
    {
      swift_beginAccess(v10, v19, 0LL, 0LL);
      uint64_t v14 = swift_unknownObjectWeakLoadStrong(v10);
      if (v14)
      {
        double v15 = (void *)v14;
        id v16 = *(id *)(v14 + OBJC_IVAR____TtC6Arcade40GameCenterReengagementCollectionViewCell_button);

        *((void *)&v21 + 1) = type metadata accessor for DynamicTypeButton(0LL);
        *(void *)&__int128 v20 = v16;
      }

      else
      {
        __int128 v20 = 0u;
        __int128 v21 = 0u;
      }

      (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v6);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, &v20, v9, a3);
      __n128 v17 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v17);
      sub_100029100((uint64_t)&v20);
    }
  }

double sub_100074004( uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1000740C0(*a1, a2, a3, a5, a7, a8);
}

void sub_100074018(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
}

uint64_t sub_100074030()
{
  return sub_100003B6C( (unint64_t *)&unk_1002E0410,  (uint64_t (*)(uint64_t))&type metadata accessor for GameCenterReengagement,  (uint64_t)&protocol conformance descriptor for GameCenterReengagement);
}

uint64_t sub_10007405C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100074080()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1000740B4()
{
}

double sub_1000740C0(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = type metadata accessor for GameCenterReengagementLayout.Metrics(0LL);
  __chkstk_darwin(v10);
  uint64_t v72 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for GameCenterReengagementLayout(0LL);
  uint64_t v74 = *(void *)(v12 - 8);
  uint64_t v75 = v12;
  __chkstk_darwin(v12);
  uint64_t v73 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v82 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v14 = *(void *)(v82 - 8);
  uint64_t v15 = __chkstk_darwin(v82);
  __n128 v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = GameCenterReengagement.badge.getter(v15);
  uint64_t v20 = v19;
  unint64_t v22 = sub_100028C20();
  if (qword_1002DC870 != -1) {
    swift_once(&qword_1002DC870, sub_100071D9C);
  }
  uint64_t v80 = type metadata accessor for FontUseCase(0LL, v21);
  uint64_t v23 = sub_1000061F4(v80, (uint64_t)qword_1002EF5A0);
  id v24 = [a6 traitCollection];
  id v81 = a6;
  id v25 = v24;
  uint64_t v26 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v23, v24);

  uint64_t v27 = type metadata accessor for Feature(0LL);
  v93[3] = v27;
  uint64_t v79 = sub_100003B6C( (unint64_t *)&qword_1002DE560,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  v93[4] = v79;
  uint64_t v28 = sub_100009D54(v93);
  uint64_t v29 = *(void (**)(void))(*(void *)(v27 - 8) + 104LL);
  unsigned int v78 = enum case for Feature.measurement_with_labelplaceholder(_:);
  id v77 = (void (*)(void *, void, uint64_t))v29;
  v29(v28);
  char v30 = isFeatureEnabled(_:)(v93);
  _s6Arcade17PillOverlayLayoutVwxx_0(v93);
  uint64_t v31 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v18,  v20,  v26,  4LL,  0LL,  0LL,  0LL,  0LL,  v30 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v93, v31);
  unint64_t v76 = v22;
  double v32 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
  uint64_t v33 = v32(v17, v82);
  uint64_t v34 = GameCenterReengagement.title.getter(v33);
  uint64_t v36 = v35;
  if (qword_1002DC878 != -1) {
    swift_once(&qword_1002DC878, sub_100071DB8);
  }
  uint64_t v37 = sub_1000061F4(v80, (uint64_t)qword_1002EF5B8);
  id v38 = [v81 traitCollection];
  uint64_t v39 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v37, v38);

  v92[3] = v27;
  v92[4] = v79;
  uint64_t v40 = sub_100009D54(v92);
  v77(v40, v78, v27);
  LOBYTE(v38) = isFeatureEnabled(_:)(v92);
  _s6Arcade17PillOverlayLayoutVwxx_0(v92);
  LOBYTE(v69) = v38 & 1;
  uint64_t v41 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v34,  v36,  v39,  4LL,  0LL,  0LL,  0LL,  0LL,  v69);
  LabelPlaceholderCompatibility.layoutTextView.getter(v92, v41);
  uint64_t v42 = v32(v17, v82);
  uint64_t v43 = a1;
  uint64_t v44 = GameCenterReengagement.subtitle.getter(v42);
  uint64_t v46 = v45;
  if (qword_1002DC880 != -1) {
    swift_once(&qword_1002DC880, sub_100071DD0);
  }
  uint64_t v47 = sub_1000061F4(v80, (uint64_t)qword_1002EF5D0);
  id v48 = v81;
  id v49 = [v81 traitCollection];
  uint64_t v50 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v47, v49);

  v91[3] = v27;
  v91[4] = v79;
  NSString v51 = sub_100009D54(v91);
  v77(v51, v78, v27);
  LOBYTE(v49) = isFeatureEnabled(_:)(v91);
  _s6Arcade17PillOverlayLayoutVwxx_0(v91);
  LOBYTE(v7_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v49 & 1;
  uint64_t v52 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v44,  v46,  v50,  4LL,  0LL,  0LL,  0LL,  0LL,  v70);
  LabelPlaceholderCompatibility.layoutTextView.getter(v91, v52);
  v53.n128_f64[0] = ((double (*)(char *, uint64_t))v32)(v17, v82);
  uint64_t v54 = type metadata accessor for LayoutViewPlaceholder(0LL, v53);
  swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  uint64_t v55 = LayoutViewPlaceholder.init(measurements:)(a2, 255.0, 255.0, 0.0);
  double v56 = (void *)swift_allocObject(&unk_100283A68, 40LL, 7LL);
  void v56[2] = v43;
  v56[3] = v48;
  v56[4] = v71;
  swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  swift_retain(v43);
  swift_unknownObjectRetain(v48);
  uint64_t v57 = LayoutViewPlaceholder.init(measureWith:)(sub_10007476C, v56);
  uint64_t v58 = v72;
  sub_10015A8F8(v48, v72);
  uint64_t v90 = 0LL;
  memset(v89, 0, sizeof(v89));
  sub_10001F010((uint64_t)v93, (uint64_t)v88);
  sub_10001F010((uint64_t)v92, (uint64_t)v87);
  sub_10001F010((uint64_t)v91, (uint64_t)v86);
  v85[3] = v54;
  v85[4] = &protocol witness table for LayoutViewPlaceholder;
  v85[0] = v55;
  id v59 = objc_msgSend(v48, "traitCollection", swift_retain(v55).n128_f64[0]);
  double v60 = static Separator.thickness(compatibleWith:)();

  swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  uint64_t v61 = LayoutViewPlaceholder.init(representing:)(a2, v60);
  v84[3] = v54;
  v84[4] = &protocol witness table for LayoutViewPlaceholder;
  v83[4] = &protocol witness table for LayoutViewPlaceholder;
  v84[0] = v61;
  v83[3] = v54;
  v83[0] = v57;
  __n128 v62 = swift_retain(v57);
  id v63 = v73;
  GameCenterReengagementLayout.init(metrics:badgeGlyph:badgeLabel:titleLabel:subtitleLabel:heroContent:separator:footer:)( v58,  v89,  v88,  v87,  v86,  v85,  v84,  v83,  v62);
  uint64_t v64 = sub_100003B6C( &qword_1002E0480,  (uint64_t (*)(uint64_t))&type metadata accessor for GameCenterReengagementLayout,  (uint64_t)&protocol conformance descriptor for GameCenterReengagementLayout);
  uint64_t v65 = v75;
  double v66 = dispatch thunk of Measurable.measurements(fitting:in:)(v48, v75, v64, a2, a3);
  swift_release(v55);
  __n128 v67 = swift_release(v57);
  (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v63, v65, v67);
  _s6Arcade17PillOverlayLayoutVwxx_0(v91);
  _s6Arcade17PillOverlayLayoutVwxx_0(v92);
  _s6Arcade17PillOverlayLayoutVwxx_0(v93);
  return v66;
}

uint64_t sub_100074740()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

double sub_10007476C(uint64_t a1, double a2)
{
  return sub_10007372C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

double sub_100074778()
{
  if (qword_1002DC450 != -1) {
    swift_once(&qword_1002DC450, sub_10004BA54);
  }
  return *(double *)&xmmword_1002EE760;
}

id sub_1000747BC()
{
  return sub_1000747F8();
}

uint64_t sub_1000747CC()
{
  return sub_100003B6C( (unint64_t *)&unk_1002EDDE0,  (uint64_t (*)(uint64_t))&type metadata accessor for Ratings,  (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
}

id sub_1000747F8()
{
  uint64_t v1 = v0;
  float v2 = Ratings.ratingAverage.getter();
  sub_10004CCEC(v2);
  char v3 = *(void **)&v0[OBJC_IVAR____TtC6Arcade29ProductRatingsSummaryCardView_outOfRatingLabel];
  v4._object = (void *)0x80000001002465F0LL;
  v4._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  v5._uint64_t countAndFlagsBits = 0LL;
  v5._object = (void *)0xE000000000000000LL;
  object = localizedStringWithCount(_:count:comment:)(v4, 5LL, v5)._object;
  NSString v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setText:", v7, swift_bridgeObjectRelease(object).n128_f64[0]);

  return [v1 setNeedsLayout];
}

double sub_10007489C(uint64_t isEscapingClosureAtFileLocation)
{
  float v2 = (void *)type metadata accessor for IndexPath(0LL);
  uint64_t v3 = *(v2 - 1);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v7 = (int64_t)_swiftEmptyArrayStorage;
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (!isEscapingClosureAtFileLocation) {
    goto LABEL_15;
  }
  id v8 = objc_msgSend((id)isEscapingClosureAtFileLocation, "numberOfSections", v4);
  int64_t v7 = (int64_t)v8 - 1;
  if (__OFSUB__(v8, 1LL))
  {
    __break(1u);
    goto LABEL_21;
  }

  uint64_t v9 = dispatch thunk of BaseShelfPresenter.sectionCount.getter(v8);
  int64_t v10 = v7 - 1;
  if (v7 < 1 || v7 == v9)
  {
    int64_t v7 = (int64_t)_swiftEmptyArrayStorage;
    goto LABEL_15;
  }

  uint64_t v12 = dispatch thunk of BaseShelfPresenter.numberOfRows(for:)(v7 - 1);
  BOOL v13 = __OFSUB__(v12, 1LL);
  uint64_t v14 = v12 - 1;
  if (v13) {
    goto LABEL_22;
  }
  int64_t v7 = (int64_t)_swiftEmptyArrayStorage;
  if (v14 < 0) {
    goto LABEL_15;
  }
  IndexPath.init(item:section:)(v14, v10);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
  uint64_t v27 = _swiftEmptyArrayStorage;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_23;
  }
  while (1)
  {
    unint64_t v17 = *(void *)(v7 + 16);
    unint64_t v16 = *(void *)(v7 + 24);
    if (v17 >= v16 >> 1)
    {
      int64_t v7 = sub_10001A360(v16 > 1, v17 + 1, 1, (void *)v7);
      uint64_t v27 = (void *)v7;
    }

    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = v17 + 1;
    (*(void (**)(unint64_t, char *, void *))(v3 + 32))( v7 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
    + *(void *)(v3 + 72) * v17,
      v6,
      v2);
    int64_t v7 = (int64_t)v27;
LABEL_15:
    sub_100142E04((void *)isEscapingClosureAtFileLocation);
    if (!*(void *)(v7 + 16)) {
      break;
    }
    float v2 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v18 = swift_allocObject(&unk_100283B18, 32LL, 7LL);
    *(void *)(v18 + swift_unknownObjectWeakDestroy(v0 + 16) = isEscapingClosureAtFileLocation;
    *(void *)(v18 + 24) = &v27;
    uint64_t v19 = swift_allocObject(&unk_100283B40, 32LL, 7LL);
    *(void *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100074E70;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = sub_100061B54;
    int64_t v26 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100209610;
    aBlock[3] = &unk_100283B58;
    uint64_t v6 = (char *)_Block_copy(aBlock);
    int64_t v7 = v26;
    id v20 = (id)isEscapingClosureAtFileLocation;
    swift_retain(v19);
    objc_msgSend(v2, "performWithoutAnimation:", v6, swift_release(v7).n128_f64[0]);
    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v19, "", 139LL, 39LL, 40LL, 1LL);
    swift_release(v19);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      uint64_t v21 = v27;
      swift_release(v18);
      int64_t v22 = (int64_t)v21;
      goto LABEL_19;
    }

void sub_100074B54(void *a1, uint64_t *a2)
{
  if (a1)
  {
    uint64_t v3 = *a2;
    type metadata accessor for IndexPath(0LL);
    swift_bridgeObjectRetain(v3);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v3);
    [a1 reloadItemsAtIndexPaths:isa];
  }

void sub_100074BCC(uint64_t a1, void *a2)
{
  uint64_t v4 = IndexPath.section.getter(a1);
  uint64_t v5 = dispatch thunk of BaseShelfPresenter.sectionCount.getter(v4);
  if (__OFSUB__(v5, 1LL))
  {
    __break(1u);
  }

  else if (v4 == v5 - 1)
  {
    sub_100074C48(a1, a2);
  }

void sub_100074C48(uint64_t a1, void *a2)
{
  uint64_t v3 = IndexPath.section.getter(a1);
  uint64_t v4 = type metadata accessor for TopChartSegmentPresenter(0LL);
  unint64_t v5 = sub_100074E04();
  uint64_t v6 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v3, v4, v5);
  uint64_t v7 = IndexPath.section.getter(v6);
  id v8 = [a2 traitCollection];
  uint64_t v9 = sub_100180354(v7, v8);

  if (__OFSUB__(v6, 1LL))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (!v9)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  if (v6 == 0x8000000000000001LL && v9 == -1) {
    goto LABEL_12;
  }
  uint64_t v10 = (v6 - 1) % v9;
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1LL)) {
    goto LABEL_10;
  }
  IndexPath.item.getter();
  if (__OFSUB__(v6, v11))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }

uint64_t sub_100074D50()
{
  return swift_deallocClassInstance(v0, 104LL, 7LL);
}

uint64_t type metadata accessor for TopChartSegmentDataSource(uint64_t a1)
{
  uint64_t result = qword_1002E04F8;
  if (!qword_1002E04F8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TopChartSegmentDataSource);
  }
  return result;
}

uint64_t sub_100074DD0(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 256LL, 0LL, v2, a1 + 528);
}

unint64_t sub_100074E04()
{
  unint64_t result = qword_1002E8320;
  if (!qword_1002E8320)
  {
    uint64_t v1 = type metadata accessor for TopChartSegmentPresenter(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for BaseShelfPresenter, v1);
    atomic_store(result, (unint64_t *)&qword_1002E8320);
  }

  return result;
}

uint64_t sub_100074E4C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_100074E70()
{
}

uint64_t sub_100074E78()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100074E88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100074E98(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_100074EA4()
{
  unint64_t result = qword_1002E0730;
  if (!qword_1002E0730)
  {
    uint64_t v1 = type metadata accessor for FramedVideoCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100236290, v1);
    atomic_store(result, (unint64_t *)&qword_1002E0730);
  }

  return result;
}

double sub_100074EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v42 = type metadata accessor for PageGrid(0LL);
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v3 = (uint64_t *)((char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = sub_1000031E8(&qword_1002EB230);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000031E8((uint64_t *)&unk_1002E1E50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = sub_1000031E8(&qword_1002E1D40);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v46, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002362E0, v17);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  uint64_t v20 = swift_getKeyPath(&unk_100236310, v19);
  ReadOnlyLens.subscript.getter(v20, v8);
  __n128 v21 = swift_release(v20);
  (*(void (**)(void *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
  __n128 v22 = swift_bridgeObjectRelease(v45);
  ItemLayoutContext.state.getter(v22);
  uint64_t v23 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v24 = swift_dynamicCastClassUnconditional(v38, v23, 0LL, 0LL, 0LL);
  uint64_t v25 = (uint64_t)v37;
  ItemLayoutContext.componentLayoutOptions.getter(v24);
  uint64_t v27 = swift_getKeyPath(&unk_100236340, v26);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v27);
  double v29 = PageGrid.componentMeasuringSize(spanning:)(v28, 1.0);
  double v31 = v30;
  (*(void (**)(void *, uint64_t))(v40 + 8))(v3, v42);
  id v32 = sub_100147A04();
  sub_100033A3C((uint64_t)v46, (uint64_t)v7, v25, v32, v29, v31);
  double v34 = v33;
  swift_unknownObjectRelease(v32);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v25, v44);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v41);
  _s6Arcade17PillOverlayLayoutVwxx_0(v46);
  return v34;
}

uint64_t type metadata accessor for FlowActionRunner(uint64_t a1)
{
  uint64_t result = qword_1002E0740;
  if (!qword_1002E0740) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FlowActionRunner);
  }
  return result;
}

uint64_t sub_100075234(uint64_t a1)
{
  uint64_t v2 = "\b";
  return swift_initClassMetadata2(a1, 0LL, 1LL, &v2, a1 + qword_1002EF6A8);
}

void *sub_10007527C()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[qword_1002E0738]);
  uint64_t v3 = Strong;
  if (Strong)
  {
    id v4 = [Strong nextResponder];

    if (!v4) {
      return 0LL;
    }
    uint64_t v3 = (void *)UIResponder.nearestActionRunner.getter();

    if (v3 && v3 == v1)
    {
      if (qword_1002DC380 != -1) {
        swift_once(&qword_1002DC380, sub_100018F98);
      }
      uint64_t v5 = type metadata accessor for OSLogger(0LL);
      sub_1000061F4(v5, (uint64_t)qword_1002EE558);
      uint64_t v6 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
      uint64_t v7 = type metadata accessor for LogMessage(0LL);
      uint64_t v8 = swift_allocObject( v6,  ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL))
           + 3LL * *(void *)(*(void *)(v7 - 8) + 72LL),
             *(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) | 7LL);
      *(_OWORD *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
      LogMessage.init(stringLiteral:)(0xD000000000000046LL, 0x80000001002467A0LL);
      LogMessage.init(stringLiteral:)(0xD000000000000039LL, 0x80000001002467F0LL);
      LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100246830LL);
      Logger.error(_:)(v8, v5, &protocol witness table for OSLogger);
      swift_release(v1);
      swift_bridgeObjectRelease(v8);
      return 0LL;
    }
  }

  return v3;
}

double sub_100075434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v91 = a2;
  uint64_t v89 = a3;
  uint64_t v88 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v90 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v5 = &v85[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = type metadata accessor for NavigationTab(0LL);
  unint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v85[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = type metadata accessor for FlowPage(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v85[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v14);
  unint64_t v16 = &v85[-v15];
  uint64_t v17 = type metadata accessor for FlowAction(0LL);
  uint64_t v18 = a1;
  uint64_t v19 = swift_dynamicCastClass(a1, v17);
  if (v19)
  {
    uint64_t v20 = v19;
    swift_retain_n(v18, 2LL);
    uint64_t v21 = v20;
    FlowAction.page.getter(v22);
    (*(void (**)(_BYTE *, void, uint64_t))(v11 + 104))(v13, enum case for FlowPage.arcadeWelcome(_:), v10);
    unint64_t v23 = sub_100078E1C();
    dispatch thunk of RawRepresentable.rawValue.getter(&v94, v10, v23);
    dispatch thunk of RawRepresentable.rawValue.getter(&v93, v10, v23);
    uint64_t v24 = *((void *)&v94 + 1);
    uint64_t v25 = *((void *)&v93 + 1);
    uint64_t v26 = v18;
    if (v94 == v93)
    {
      swift_bridgeObjectRelease_n(*((void *)&v94 + 1), 2LL);
      uint64_t v27 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
      v27(v13, v10);
      v27(v16, v10);
      swift_release(v26);
    }

    else
    {
      char v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v94, *((void *)&v94 + 1), v93, *((void *)&v93 + 1), 0LL);
      swift_bridgeObjectRelease(v24);
      __n128 v40 = swift_bridgeObjectRelease(v25);
      uint64_t v41 = *(void (**)(_BYTE *, uint64_t, __n128))(v11 + 8);
      v41(v13, v10, v40);
      ((void (*)(_BYTE *, uint64_t))v41)(v16, v10);
      swift_release(v26);
      if ((v39 & 1) == 0)
      {
        sub_100078548(v21, v91);
        uint64_t v42 = v26;
        goto LABEL_16;
      }
    }

    sub_100077250(v21, v91);
    uint64_t v42 = v26;
LABEL_16:
    *(void *)&double result = swift_release(v42).n128_u64[0];
    return result;
  }

  uint64_t v28 = v92;
  unint64_t v87 = v7;
  uint64_t v29 = v90;
  uint64_t v30 = type metadata accessor for TabChangeAction(0LL);
  if (swift_dynamicCastClass(v18, v30))
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v28 + qword_1002E0738);
    if (Strong)
    {
      id v32 = (void *)Strong;
      swift_retain(v18);
      sub_100082D00((uint64_t)&v94);

      uint64_t v33 = *((void *)&v95 + 1);
      if (*((void *)&v95 + 1))
      {
        double v34 = v96;
        sub_100005F8C(&v94, *((uint64_t *)&v95 + 1));
        uint64_t v35 = TabChangeAction.navigationTab.getter();
        char v36 = TabChangeAction.popToRoot.getter(v35);
        uint64_t v37 = TabChangeAction.actions.getter();
        (*((void (**)(_BYTE *, void, uint64_t, uint64_t, uint64_t, void *))v34 + 3))( v9,  v36 & 1,  v37,  v89,  v33,  v34);
        __n128 v38 = swift_bridgeObjectRelease(v37);
        (*(void (**)(_BYTE *, uint64_t, __n128))(v87 + 8))(v9, v6, v38);
        _s6Arcade17PillOverlayLayoutVwxx_0(&v94);
LABEL_15:
        uint64_t v42 = v18;
        goto LABEL_16;
      }
    }

    else
    {
      id v96 = 0LL;
      __int128 v94 = 0u;
      __int128 v95 = 0u;
      swift_retain(v18);
    }

    sub_100006060((uint64_t)&v94, (uint64_t *)&unk_1002E1800);
    goto LABEL_15;
  }

  uint64_t v43 = type metadata accessor for OfferAlertAction(0LL);
  uint64_t v44 = swift_dynamicCastClass(v18, v43);
  uint64_t v45 = v18;
  if (v44)
  {
    uint64_t v46 = v44;
    swift_retain(v18);
    sub_100076B3C(v46, v91, v89);
LABEL_20:
    *(void *)&double result = swift_release(v45).n128_u64[0];
    return result;
  }

  uint64_t v48 = type metadata accessor for AlertAction(0LL);
  uint64_t v49 = swift_dynamicCastClass(v18, v48);
  uint64_t v50 = v91;
  uint64_t v51 = v89;
  if (v49)
  {
    uint64_t v52 = v49;
    swift_retain(v45);
    sub_100076424(v52, v50, v51);
    goto LABEL_20;
  }

  uint64_t v53 = type metadata accessor for AdTransparencyAction(0LL);
  if (!swift_dynamicCastClass(v45, v53))
  {
    uint64_t v54 = type metadata accessor for CompoundAction();
    if (swift_dynamicCastClass(v45, v54))
    {
      __n128 v55 = swift_retain(v45);
      uint64_t v56 = CompoundAction.actions.getter(v55);
      uint64_t v57 = v56;
      if ((unint64_t)v56 >> 62)
      {
        if (v56 >= 0) {
          v56 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        uint64_t v58 = _CocoaArrayWrapper.endIndex.getter(v56);
        id v59 = v5;
        if (v58) {
          goto LABEL_25;
        }
      }

      else
      {
        uint64_t v58 = *(void *)((v56 & 0xFFFFFFFFFFFFF8LL) + 0x10);
        id v59 = v5;
        if (v58)
        {
LABEL_25:
          if (v58 >= 1)
          {
            uint64_t v60 = 0LL;
            unint64_t v87 = v57 & 0xC000000000000001LL;
            unsigned int v86 = enum case for ActionRunner.Origin.userInitiated(_:);
            uint64_t v61 = v57;
            uint64_t v62 = v88;
            do
            {
              uint64_t v65 = v58;
              if (v87)
              {
                uint64_t v63 = specialized _ArrayBuffer._getElementSlowPath(_:)(v60, v57);
              }

              else
              {
                uint64_t v63 = *(void *)(v57 + 8 * v60 + 32);
                swift_retain(v63);
              }

              ++v60;
              (*(void (**)(_BYTE *, void, uint64_t))(v29 + 104))(v59, v86, v62);
              dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v63, v91, v5, v89);
              __n128 v64 = swift_release(v63);
              id v59 = v5;
              (*(void (**)(_BYTE *, uint64_t, __n128))(v29 + 8))(v5, v62, v64);
              uint64_t v58 = v65;
              uint64_t v57 = v61;
            }

            while (v65 != v60);
            swift_release(v45);
            *(void *)&double result = swift_bridgeObjectRelease(v61).n128_u64[0];
            return result;
          }

          __break(1u);
LABEL_50:
          swift_once(&qword_1002DC380, sub_100018F98);
LABEL_44:
          uint64_t v81 = type metadata accessor for OSLogger(0LL);
          sub_1000061F4(v81, (uint64_t)qword_1002EE558);
          uint64_t v82 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
          uint64_t v83 = type metadata accessor for LogMessage(0LL);
          uint64_t v84 = swift_allocObject( v82,  ((*(unsigned __int8 *)(*(void *)(v83 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v83 - 8) + 80LL))
                + 3LL * *(void *)(*(void *)(v83 - 8) + 72LL),
                  *(unsigned __int8 *)(*(void *)(v83 - 8) + 80LL) | 7LL);
          *(_OWORD *)(v84 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
          LogMessage.init(stringLiteral:)(0xD000000000000046LL, 0x80000001002467A0LL);
          LogMessage.init(stringLiteral:)(0xD000000000000039LL, 0x80000001002467F0LL);
          LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100246830LL);
          Logger.error(_:)(v84, v81, &protocol witness table for OSLogger);
          swift_release(v92);
          *(void *)&double result = swift_bridgeObjectRelease(v84).n128_u64[0];
          return result;
        }
      }

      swift_release(v45);
      *(void *)&double result = swift_bridgeObjectRelease(v57).n128_u64[0];
      return result;
    }

    uint64_t v66 = type metadata accessor for ScrollingAlertAction(0LL);
    if (swift_dynamicCastClass(v45, v66))
    {
      swift_retain(v45);
      sub_10007896C();
      goto LABEL_20;
    }

    uint64_t v67 = type metadata accessor for GameCenterPlayerProfileAction(0LL);
    if (swift_dynamicCastClass(v45, v67))
    {
      swift_retain(v45);
      sub_100078B94();
      goto LABEL_20;
    }

    uint64_t v68 = type metadata accessor for GameCenterAchievementsAction(0LL);
    uint64_t v69 = swift_dynamicCastClass(v45, v68);
    if (v69)
    {
      uint64_t v70 = v69;
      type metadata accessor for GameCenter(0LL);
      unint64_t v71 = sub_100048E8C();
      swift_retain(v45);
      uint64_t v73 = static OS_dispatch_queue.main.getter(v72);
      *((void *)&v95 + 1) = v71;
      id v96 = &protocol witness table for OS_dispatch_queue;
      *(void *)&__int128 v94 = v73;
      uint64_t v74 = swift_allocObject(&unk_100283C60, 32LL, 7LL);
      uint64_t v75 = v92;
      *(void *)(v74 + swift_unknownObjectWeakDestroy(v0 + 16) = v70;
      *(void *)(v74 + 24) = v75;
      swift_retain(v45);
      __n128 v76 = swift_retain(v75);
      static GameCenter.withLocalPlayer(on:_:)(&v94, sub_100078E14, v74, v76);
      swift_release(v74);
      _s6Arcade17PillOverlayLayoutVwxx_0(&v94);
      uint64_t v42 = v45;
      goto LABEL_16;
    }

    id v77 = (void *)swift_unknownObjectWeakLoadStrong(v92 + qword_1002E0738);
    if (v77)
    {
      unsigned int v78 = v77;
      id v79 = [v77 nextResponder];

      if (v79)
      {
        uint64_t v80 = UIResponder.nearestActionRunner.getter();

        if (v80)
        {
          if (v80 != v92)
          {
            dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(v45, v91, v89);
            *(void *)&double result = swift_release(v80).n128_u64[0];
            return result;
          }

          if (qword_1002DC380 == -1) {
            goto LABEL_44;
          }
          goto LABEL_50;
        }
      }
    }
  }

  return result;
}

double sub_100075C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + qword_1002E0738);
  if (Strong)
  {
    uint64_t v10 = Strong;
    id v11 = [Strong nextResponder];

    if (v11)
    {
      uint64_t v12 = UIResponder.nearestActionRunner.getter();

      if (v12)
      {
        if (v12 == v4)
        {
          if (qword_1002DC380 != -1) {
            swift_once(&qword_1002DC380, sub_100018F98);
          }
          uint64_t v13 = type metadata accessor for OSLogger(0LL);
          sub_1000061F4(v13, (uint64_t)qword_1002EE558);
          uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
          uint64_t v15 = type metadata accessor for LogMessage(0LL);
          uint64_t v16 = swift_allocObject( v14,  ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL))
                + 3LL * *(void *)(*(void *)(v15 - 8) + 72LL),
                  *(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) | 7LL);
          *(_OWORD *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100232070;
          LogMessage.init(stringLiteral:)(0xD000000000000046LL, 0x80000001002467A0LL);
          LogMessage.init(stringLiteral:)(0xD000000000000039LL, 0x80000001002467F0LL);
          LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100246830LL);
          Logger.error(_:)(v16, v13, &protocol witness table for OSLogger);
          swift_release(v4);
          *(void *)&double result = swift_bridgeObjectRelease(v16).n128_u64[0];
        }

        else
        {
          dispatch thunk of ActionRunner.send(metricsData:from:asPartOf:)(a1, a2, a3);
          *(void *)&double result = swift_release(v12).n128_u64[0];
        }
      }
    }
  }

  return result;
}

uint64_t sub_100075E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v41 = a7;
  uint64_t v42 = a6;
  uint64_t v43 = a3;
  uint64_t v11 = sub_1000031E8(&qword_1002E1FB0);
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for FamilyCircleLookupResult(0LL, v12);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for FlowDestination(0LL);
  __n128 v20 = __chkstk_darwin(v19);
  __n128 v22 = (uint64_t *)((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v23 = a5 + 16;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v18, a1, v15, v20);
  if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v18, v15) == enum case for FamilyCircleLookupResult.inFamily(_:))
  {
    uint64_t v24 = sub_1000031E8(&qword_1002DEF88);
    uint64_t v25 = (char *)v22 + *(int *)(v24 + 48);
    uint64_t v26 = (char *)v22 + *(int *)(v24 + 64);
    *__n128 v22 = a2;
    uint64_t v27 = enum case for ArcadeWelcomePage.ContentType.familyOrganizer(_:);
    uint64_t v28 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104LL))(v25, v27, v28);
    uint64_t v29 = type metadata accessor for URL(0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16LL))(v26, v43, v29);
    swift_storeEnumTagMultiPayload(v22, v19, 29LL);
    swift_retain(a2);
  }

  else
  {
    sub_100077AEC(a4, (uint64_t)v22, type metadata accessor for FlowDestination);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }

  swift_beginAccess(v23, v44, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v23);
  if (!Strong) {
    return sub_100046E64((uint64_t)v22, type metadata accessor for FlowDestination);
  }
  uint64_t v31 = Strong;
  uint64_t v32 = swift_unknownObjectWeakLoadStrong(Strong + qword_1002E0738);
  if (v32)
  {
    uint64_t v33 = (void *)v32;
    sub_100082D00((uint64_t)&v45);
    swift_release(v31);

    uint64_t v34 = *((void *)&v46 + 1);
    if (*((void *)&v46 + 1))
    {
      uint64_t v35 = v47;
      char v36 = sub_100005F8C(&v45, *((uint64_t *)&v46 + 1));
      uint64_t v37 = FlowAction.referrerUrl.getter(v36);
      uint64_t v39 = v38;
      FlowAction.referrerData.getter(v37);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v35 + 16))( v22,  v42,  v37,  v39,  v14,  v34,  v35);
      swift_bridgeObjectRelease(v39);
      sub_100006060((uint64_t)v14, &qword_1002E1FB0);
      sub_100046E64((uint64_t)v22, type metadata accessor for FlowDestination);
      return _s6Arcade17PillOverlayLayoutVwxx_0(&v45);
    }
  }

  else
  {
    uint64_t v47 = 0LL;
    __int128 v45 = 0u;
    __int128 v46 = 0u;
    swift_release(v31);
  }

  sub_100046E64((uint64_t)v22, type metadata accessor for FlowDestination);
  return sub_100006060((uint64_t)&v45, (uint64_t *)&unk_1002E1800);
}

uint64_t sub_100076148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = *a5;
  uint64_t v10 = type metadata accessor for OSLogger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a2 += 16LL;
  swift_beginAccess(a2, v40, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v18 = Strong;
    uint64_t v19 = swift_unknownObjectWeakLoadStrong(Strong + qword_1002E0738);
    if (v19)
    {
      __n128 v20 = (void *)v19;
      sub_100082D00((uint64_t)&v41);
      swift_release(v18);

      uint64_t v21 = *((void *)&v42 + 1);
      if (*((void *)&v42 + 1))
      {
        uint64_t v39 = v9;
        uint64_t v22 = v43;
        uint64_t v38 = sub_100005F8C(&v41, *((uint64_t *)&v42 + 1));
        uint64_t v23 = FlowAction.referrerUrl.getter(v38);
        uint64_t v36 = a4;
        uint64_t v37 = v23;
        uint64_t v24 = a3;
        uint64_t v26 = v25;
        FlowAction.referrerData.getter(v23);
        uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v22 + 16);
        uint64_t v28 = v22;
        uint64_t v9 = v39;
        v27(v24, v36, v37, v26, v16, v21, v28);
        swift_bridgeObjectRelease(v26);
        sub_100006060((uint64_t)v16, &qword_1002E1FB0);
        _s6Arcade17PillOverlayLayoutVwxx_0(&v41);
        goto LABEL_7;
      }
    }

    else
    {
      uint64_t v43 = 0LL;
      __int128 v41 = 0u;
      __int128 v42 = 0u;
      swift_release(v18);
    }

    sub_100006060((uint64_t)&v41, (uint64_t *)&unk_1002E1800);
  }

uint64_t sub_100076424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v56 = a2;
  uint64_t v7 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v7);
  uint64_t v51 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v50 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v50);
  uint64_t v10 = (uint64_t *)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  Action.title.getter(v11);
  uint64_t v13 = v12;
  AlertAction.message.getter();
  uint64_t v15 = v14;
  if (v13)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    if (v15)
    {
LABEL_3:
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      goto LABEL_6;
    }
  }

  else
  {
    NSString v16 = 0LL;
    if (v14) {
      goto LABEL_3;
    }
  }

  NSString v17 = 0LL;
LABEL_6:
  id v59 =  [(id)objc_opt_self(UIAlertController) alertControllerWithTitle:v16 message:v17 preferredStyle:1];

  uint64_t v60 = AlertAction.buttonActions.getter();
  uint64_t v18 = (uint64_t (*)())&_ss27_diagnoseUnexpectedEnumCase4types5NeverOxm_tlF_ptr;
  uint64_t v58 = *(void *)(v60 + 16);
  if (v58)
  {
    if ((AlertAction.isCancelable.getter() & 1) == 0) {
      goto LABEL_13;
    }
    AlertAction.cancelTitle.getter();
    if (object) {
      goto LABEL_12;
    }
    uint64_t v20 = 0x435F4E4F49544341LL;
    unint64_t v21 = 0xED00004C45434E41LL;
  }

  else
  {
    uint64_t v20 = 0x4F5F4E4F49544341LL;
    unint64_t v21 = 0xE90000000000004BLL;
  }

  v22._uint64_t countAndFlagsBits = 0LL;
  v22._object = (void *)0xE000000000000000LL;
  object = localizedString(_:comment:)(*(Swift::String *)&v20, v22)._object;
LABEL_12:
  uint64_t v23 = object;
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  NSString v16 = [(id)objc_opt_self(UIAlertAction) actionWithTitle:v24 style:1 handler:0];

  NSString v17 = v59;
  [v59 addAction:v16];
  [v17 setPreferredAction:v16];

  if (v58)
  {
LABEL_13:
    uint64_t v54 = a1;
    uint64_t v55 = a3;
    uint64_t v57 = v4;
    uint64_t v52 = v10;
    id v53 = (id)objc_opt_self(&OBJC_CLASS___UIAlertAction);
    unint64_t v25 = 0LL;
    uint64_t v26 = (uint64_t *)(v60 + 64);
    while (v25 < *(void *)(v60 + 16))
    {
      uint64_t v31 = *(v26 - 4);
      NSString v17 = (NSString)*(v26 - 3);
      NSString v16 = (NSString)*(v26 - 2);
      uint64_t v32 = *(v26 - 1);
      uint64_t v33 = *v26;
      if (v32)
      {
        uint64_t v10 = (void *)swift_allocObject(&unk_100283CD8, 32LL, 7LL);
        __int128 v10[2] = v32;
        v10[3] = v33;
        uint64_t v18 = sub_100061B54;
      }

      else
      {
        uint64_t v18 = 0LL;
        uint64_t v10 = 0LL;
      }

      swift_retain(v16);
      swift_bridgeObjectRetain(v17);
      uint64_t v34 = sub_100017A40(v32, v33);
      BOOL v36 = v25 == AlertAction.destructiveActionIndex.getter(v34) && (v35 & 1) == 0;
      uint64_t v37 = 2LL;
      if (!v36) {
        uint64_t v37 = 0LL;
      }
      uint64_t v61 = v37;
      sub_100077A80(v56, (uint64_t)v66);
      uint64_t v38 = (void *)swift_allocObject(&unk_100283C88, 104LL, 7LL);
      v38[2] = v31;
      void v38[3] = v17;
      v38[4] = v16;
      v38[5] = v18;
      uint64_t v39 = v57;
      v38[6] = v10;
      __int128 v38[7] = v39;
      sub_100078E64((uint64_t)v66, (uint64_t)(v38 + 8));
      uint64_t v40 = v55;
      v38[12] = v55;
      if (v17)
      {
        swift_bridgeObjectRetain(v17);
        swift_retain(v16);
        sub_100017A40((uint64_t)v18, (uint64_t)v10);
        swift_retain(v39);
        swift_retain(v40);
        NSString v27 = String._bridgeToObjectiveC()();
      }

      else
      {
        swift_retain(v16);
        sub_100017A40((uint64_t)v18, (uint64_t)v10);
        swift_retain(v39);
        swift_retain(v40);
        NSString v27 = 0LL;
      }

      ++v25;
      __n128 v64 = sub_100078F08;
      uint64_t v65 = v38;
      *(void *)&__int128 aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256LL;
      *(void *)&__int128 v63 = sub_10004FE30;
      *((void *)&v63 + 1) = &unk_100283CA0;
      uint64_t v28 = _Block_copy(&aBlock);
      *(void *)&double v29 = swift_release(v65).n128_u64[0];
      id v30 = objc_msgSend(v53, "actionWithTitle:style:handler:", v27, v61, v28, v29);
      _Block_release(v28);

      [v59 addAction:v30];
      swift_release(v16);
      swift_bridgeObjectRelease(v17);

      sub_10000D3D8((uint64_t)v18, (uint64_t)v10);
      v26 += 5;
      if (v58 == v25)
      {
        swift_bridgeObjectRelease(v60);
        uint64_t v10 = v52;
        uint64_t v4 = v57;
        goto LABEL_29;
      }
    }

    __break(1u);
    goto LABEL_36;
  }

  swift_bridgeObjectRelease(v60);
LABEL_29:
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v4 + qword_1002E0738);
  if (Strong)
  {
    __int128 v42 = (void *)Strong;
    sub_100082D00((uint64_t)&aBlock);

    NSString v16 = (NSString)*((void *)&v63 + 1);
    if (*((void *)&v63 + 1))
    {
      NSString v17 = v64;
      sub_100005F8C(&aBlock, *((uint64_t *)&v63 + 1));
      id v43 = v59;
      void *v10 = v59;
      swift_storeEnumTagMultiPayload(v10, v50, 11LL);
      uint64_t v44 = qword_1002DCE78;
      uint64_t v18 = (uint64_t (*)())v43;
      if (v44 == -1)
      {
LABEL_32:
        uint64_t v45 = type metadata accessor for FlowPresentationHints(0LL);
        uint64_t v46 = sub_1000061F4(v45, (uint64_t)qword_1002F0F70);
        uint64_t v47 = type metadata accessor for ReferrerData(0LL);
        uint64_t v48 = (uint64_t)v51;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v51, 1LL, 1LL, v47);
        (*((void (**)(void *, uint64_t, void, void, uint64_t, NSString, NSString))v17 + 2))( v10,  v46,  0LL,  0LL,  v48,  v16,  v17);

        sub_100006060(v48, &qword_1002E1FB0);
        sub_100046E64((uint64_t)v10, type metadata accessor for FlowDestination);
        return _s6Arcade17PillOverlayLayoutVwxx_0(&aBlock);
      }

LABEL_36:
      swift_once(&qword_1002DCE78, sub_1001665C8);
      goto LABEL_32;
    }
  }

  else
  {
    __n128 v64 = 0LL;
    __int128 aBlock = 0u;
    __int128 v63 = 0u;
  }

  return sub_100006060((uint64_t)&aBlock, (uint64_t *)&unk_1002E1800);
}

  swift_bridgeObjectRelease(v23);
  if (qword_1002DC978 != -1) {
    swift_once(&qword_1002DC978, sub_10009B454);
  }
  uint64_t v31 = *(double *)&qword_1002EFBD0;
  CGAffineTransformMakeTranslation(&v34, 0.0, v6 * *(double *)&qword_1002EFBD0);
  [v21 setTransform:&v34];
  uint64_t v32 = *(void **)(v33 + OBJC_IVAR____TtC6Arcade31ProductLockupCollectionViewCell_headerContainerView);
  [v32 setAlpha:v6];
  CGAffineTransformMakeTranslation(&v34, 0.0, (v6 + -1.0) * v31);
  [v32 setTransform:&v34];
}

  swift_release(v8);
  uint64_t v3 = v42;
  if ((v45 & 1) != 0)
  {
    uint64_t v40 = 1LL << *(_BYTE *)(v8 + 32);
    if (v40 >= 64) {
      bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
    }
    else {
      char *v44 = -1LL << v40;
    }
    *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  }

  __break(1u);
}

  double v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v26);
LABEL_24:
  v27.n128_u64[0] = swift_bridgeObjectRelease(v26).n128_u64[0];
LABEL_30:
  id v30 = objc_msgSend(v3, "contentView", v27.n128_f64[0]);
  [v30 frame];

  CGRect.subtracting(insets:)([v3 layoutMargins]);
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  if (qword_1002DCA08 != -1) {
    swift_once(&qword_1002DCA08, sub_1000ADF54);
  }
  char v35 = type metadata accessor for LockupMediaLayout.Metrics(0LL);
  BOOL v36 = sub_1000061F4(v35, (uint64_t)qword_1002EFF48);
  uint64_t v37 = type metadata accessor for LockupMediaLayout(0LL);
  uint64_t v38 = sub_100003B6C( &qword_1002DEA80,  (uint64_t (*)(uint64_t))&type metadata accessor for LockupMediaLayout,  (uint64_t)&protocol conformance descriptor for LockupMediaLayout);
  uint64_t v39 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)( v36,  v3,  v37,  v38,  v32,  v34);
  __int128 v41 = v40;
  __int128 v42 = *(id *)&v3[OBJC_IVAR____TtC6Arcade34MixedMediaLockupCollectionViewCell_mediaView];
  sub_10001E428(v11, v29, v3, a2, (uint64_t)v42, v39, v41);
  swift_release(v9);

  swift_release(v29);
  swift_release(v11);
}

  if (v7 < 0) {
    NSString v24 = v7;
  }
  else {
    NSString v24 = v7 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v7);
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v7);
  uint64_t v11 = v10 + v8;
  if (__OFADD__(v10, v8)) {
    goto LABEL_41;
  }
LABEL_8:
  uint64_t v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *uint64_t v4 = v7;
  uint64_t v10 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000LL) == 0 && (v7 & 0x4000000000000000LL) == 0)
  {
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8LL;
    if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1LL;
  }

  uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain(v7);
  uint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1LL, v7);
  swift_bridgeObjectRelease(*v4);
  *uint64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8LL;
LABEL_18:
  uint64_t v15 = (void *)(v13 + 32 + 8 * v6);
  NSString v16 = sub_1000031E8((uint64_t *)&unk_1002DF9C0);
  NSString v17 = (char *)swift_arrayDestroy(v15, v9, v16);
  if (!v8)
  {
LABEL_27:
    *uint64_t v15 = v3;
    specialized Array._endMutation()(v17);
    return;
  }

  if (!((unint64_t)v7 >> 62))
  {
    uint64_t v18 = *(void *)(v13 + 16);
    uint64_t v19 = v18 - v5;
    if (!__OFSUB__(v18, v5)) {
      goto LABEL_21;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }

  if (v7 < 0) {
    uint64_t v26 = v7;
  }
  else {
    uint64_t v26 = v13;
  }
  swift_bridgeObjectRetain(v7);
  NSString v27 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v7);
  uint64_t v19 = v27 - v5;
  if (__OFSUB__(v27, v5)) {
    goto LABEL_51;
  }
LABEL_21:
  NSString v17 = (char *)(v15 + 1);
  uint64_t v20 = (char *)(v13 + 32 + 8 * v5);
  if (v15 + 1 != (void *)v20 || v17 >= &v20[8 * v19]) {
    NSString v17 = (char *)memmove(v17, v20, 8 * v19);
  }
  if ((unint64_t)v7 >> 62)
  {
LABEL_52:
    if (v7 < 0) {
      uint64_t v28 = v7;
    }
    else {
      uint64_t v28 = v13;
    }
    swift_bridgeObjectRetain(v7);
    double v29 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v7);
    Swift::String v22 = v29 + v8;
    if (!__OFADD__(v29, v8)) {
      goto LABEL_26;
    }
    goto LABEL_57;
  }

  unint64_t v21 = *(void *)(v13 + 16);
  Swift::String v22 = v21 + v8;
  if (!__OFADD__(v21, v8))
  {
LABEL_26:
    *(void *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = v22;
    goto LABEL_27;
  }

  if (v5 < 0) {
    unint64_t v21 = v5;
  }
  else {
    unint64_t v21 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v5);
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  uint64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6)) {
    goto LABEL_41;
  }
LABEL_8:
  uint64_t v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  void *v3 = v5;
  uint64_t v8 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000LL) == 0 && (v5 & 0x4000000000000000LL) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8LL;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1LL;
  }

  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain(v5);
  uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1LL, v5);
  swift_bridgeObjectRelease(*v3);
  void *v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8LL;
LABEL_18:
  uint64_t v13 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v14 = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
  {
LABEL_27:
    specialized Array._endMutation()(v14);
    return;
  }

  if (!((unint64_t)v5 >> 62))
  {
    uint64_t v15 = *(void *)(v11 + 16);
    NSString v16 = v15 - v2;
    if (!__OFSUB__(v15, v2)) {
      goto LABEL_21;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }

  if (v5 < 0) {
    uint64_t v23 = v5;
  }
  else {
    uint64_t v23 = v11;
  }
  swift_bridgeObjectRetain(v5);
  NSString v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v5);
  NSString v16 = v24 - v2;
  if (__OFSUB__(v24, v2)) {
    goto LABEL_51;
  }
LABEL_21:
  NSString v17 = (const void *)(v11 + 32 + 8 * v2);
  if ((unint64_t)v5 >> 62)
  {
LABEL_52:
    if (v5 < 0) {
      unint64_t v25 = v5;
    }
    else {
      unint64_t v25 = v11;
    }
    swift_bridgeObjectRetain(v5);
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v5);
    uint64_t v19 = v26 + v6;
    if (!__OFADD__(v26, v6)) {
      goto LABEL_26;
    }
    goto LABEL_57;
  }

  uint64_t v18 = *(void *)(v11 + 16);
  uint64_t v19 = v18 + v6;
  if (!__OFADD__(v18, v6))
  {
LABEL_26:
    *(void *)(v11 + swift_unknownObjectWeakDestroy(v0 + 16) = v19;
    goto LABEL_27;
  }

        unint64_t v25 = 0LL;
        double v29 = 1LL;
      }
    }
  }

  uint64_t v39 = v33;
  uint64_t v40 = ~v37;
  __int128 v41 = *(void *)(v8 + 72);
  __int128 v42 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v42(v10, *(void *)(v39 + 48) + v41 * v38, v7);
    id v43 = sub_100003B6C( &qword_1002DE6B0,  (uint64_t (*)(uint64_t))&type metadata accessor for AdamId,  (uint64_t)&protocol conformance descriptor for AdamId);
    uint64_t v44 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v63, v7, v43);
    uint64_t v45 = *(void (**)(char *, uint64_t))(v8 + 8);
    v45(v10, v7);
    if ((v44 & 1) != 0) {
      break;
    }
    uint64_t v38 = (v38 + 1) & v40;
    if (((*(void *)&v62[(v38 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v38) & 1) == 0) {
      goto LABEL_34;
    }
  }

  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v45)(v63, v7);
  uint64_t v47 = *(_BYTE *)(v39 + 32);
  uint64_t v48 = v47 & 0x3F;
  uint64_t v49 = (1LL << v47) + 63;
  uint64_t v50 = v49 >> 6;
  uint64_t v51 = 8 * (v49 >> 6);
  if (v48 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v49 >> 6), 8LL), (_DWORD)isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v57 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0LL), v62, v51);
    sub_1001D2DEC((unint64_t *)((char *)&v57 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0LL)), v50, v39, v38, &v64);
    id v53 = v52;
    swift_release(v39);
    sub_100004624(v64);
  }

  else
  {
    uint64_t v55 = (void *)swift_slowAlloc(v51, -1LL);
    memcpy(v55, v62, v51);
    sub_1001D2DEC((unint64_t *)v55, v50, v39, v38, &v64);
    id v53 = v56;
    swift_release(v39);
    sub_100004624(v64);
    swift_slowDealloc(v55, -1LL, -1LL);
  }

  return (void *)v53;
}

void sub_100076A24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a2[2];
  uint64_t v8 = (void (*)(__n128))a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (v8)
  {
    __n128 v15 = swift_retain(v9);
    v8(v15);
    sub_10000D3D8((uint64_t)v8, v9);
  }

  else if (v7)
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v11 + 104))( v14,  enum case for ActionRunner.Origin.userInitiated(_:),  v10,  v12);
    swift_retain(v7);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v16, a4, v14, a5);
    __n128 v17 = swift_release(v7);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v17);
  }

double sub_100076B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3 + qword_1002E0738);
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    sub_100082D00((uint64_t)&v20);

    if (*((void *)&v21 + 1))
    {
      sub_100009D90(&v20, (uint64_t)v23);
      sub_10001F010((uint64_t)v23, (uint64_t)&v20);
      sub_100077A80(a2, (uint64_t)v19);
      uint64_t v10 = type metadata accessor for ObjectGraph(0LL);
      uint64_t v11 = swift_dynamicCastClassUnconditional(a3, v10, 0LL, 0LL, 0LL);
      uint64_t v12 = type metadata accessor for OfferAlertController();
      uint64_t v13 = (void *)swift_allocObject(v12, 112LL, 7LL);
      _OWORD v13[2] = v11;
      sub_100009D90(&v20, (uint64_t)(v13 + 3));
      v13[8] = v4;
      v13[9] = a1;
      sub_100078E64((uint64_t)v19, (uint64_t)(v13 + 10));
      swift_retain(a1);
      swift_retain(a3);
      swift_retain(v4);
      sub_10005F7A8();
      swift_release(v13);
      _s6Arcade17PillOverlayLayoutVwxx_0(v23);
      return result;
    }
  }

  else
  {
    uint64_t v22 = 0LL;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
  }

  sub_100006060((uint64_t)&v20, (uint64_t *)&unk_1002E1800);
  if (qword_1002DC380 != -1) {
    swift_once(&qword_1002DC380, sub_100018F98);
  }
  uint64_t v15 = type metadata accessor for OSLogger(0LL);
  sub_1000061F4(v15, (uint64_t)qword_1002EE558);
  uint64_t v16 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v17 = type metadata accessor for LogMessage(0LL);
  uint64_t v18 = swift_allocObject( v16,  ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL))
        + *(void *)(*(void *)(v17 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v18 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
  LogMessage.init(stringLiteral:)(0xD00000000000005ELL, 0x8000000100246850LL);
  Logger.error(_:)(v18, v15, &protocol witness table for OSLogger);
  *(void *)&double result = swift_bridgeObjectRelease(v18).n128_u64[0];
  return result;
}

double sub_100076D44(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    type metadata accessor for GameCenter(0LL);
    id v5 = a1;
    uint64_t v6 = GameCenterAchievementsAction.bundleId.getter();
    uint64_t v8 = v7;
    uint64_t v9 = static GameCenter.fetchGameRecord(for:with:)(v5, v6, v7);
    swift_bridgeObjectRelease(v8);
    unint64_t v10 = sub_100048E8C();
    swift_retain(a3);
    v17[3] = v10;
    void v17[4] = &protocol witness table for OS_dispatch_queue;
    v17[0] = static OS_dispatch_queue.main.getter(v11);
    Promise.then(perform:orCatchError:on:)(sub_100078DE0, a3, sub_1000770E8, 0LL, v17);

    swift_release(v9);
    swift_release(a3);
    _s6Arcade17PillOverlayLayoutVwxx_0(v17);
  }

  else
  {
    if (qword_1002DC380 != -1) {
      swift_once(&qword_1002DC380, sub_100018F98);
    }
    uint64_t v13 = type metadata accessor for OSLogger(0LL);
    sub_1000061F4(v13, (uint64_t)qword_1002EE558);
    uint64_t v14 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v15 = type metadata accessor for LogMessage(0LL);
    uint64_t v16 = swift_allocObject( v14,  ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL))
          + *(void *)(*(void *)(v15 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
    LogMessage.init(stringLiteral:)(0xD000000000000056LL, 0x80000001002466C0LL);
    Logger.error(_:)(v16, v13, &protocol witness table for OSLogger);
    *(void *)&double result = swift_bridgeObjectRelease(v16).n128_u64[0];
  }

  return result;
}

uint64_t sub_100076F0C(void **a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (void *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v10 = *a1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a2 + qword_1002E0738);
  if (!Strong)
  {
    uint64_t v23 = 0LL;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    return sub_100006060((uint64_t)&v21, (uint64_t *)&unk_1002E1800);
  }

  uint64_t v12 = (void *)Strong;
  sub_100082D00((uint64_t)&v21);

  uint64_t v13 = *((void *)&v22 + 1);
  if (!*((void *)&v22 + 1)) {
    return sub_100006060((uint64_t)&v21, (uint64_t *)&unk_1002E1800);
  }
  uint64_t v14 = v23;
  sub_100005F8C(&v21, *((uint64_t *)&v22 + 1));
  *uint64_t v9 = v10;
  swift_storeEnumTagMultiPayload(v9, v7, 31LL);
  uint64_t v15 = qword_1002DCE78;
  id v16 = v10;
  if (v15 != -1) {
    swift_once(&qword_1002DCE78, sub_1001665C8);
  }
  uint64_t v17 = type metadata accessor for FlowPresentationHints(0LL);
  uint64_t v18 = sub_1000061F4(v17, (uint64_t)qword_1002F0F70);
  uint64_t v19 = type metadata accessor for ReferrerData(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v6, 1LL, 1LL, v19);
  (*(void (**)(void *, uint64_t, void, void, char *, uint64_t, uint64_t))(v14 + 16))( v9,  v18,  0LL,  0LL,  v6,  v13,  v14);
  sub_100006060((uint64_t)v6, &qword_1002E1FB0);
  sub_100046E64((uint64_t)v9, type metadata accessor for FlowDestination);
  return _s6Arcade17PillOverlayLayoutVwxx_0(&v21);
}

double sub_1000770E8()
{
  if (qword_1002DC380 != -1) {
    swift_once(&qword_1002DC380, sub_100018F98);
  }
  uint64_t v0 = type metadata accessor for OSLogger(0LL);
  sub_1000061F4(v0, (uint64_t)qword_1002EE558);
  uint64_t v1 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v2 = type metadata accessor for LogMessage(0LL);
  uint64_t v3 = swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80LL))
       + *(void *)(*(void *)(v2 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v2 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100233580;
  LogMessage.init(stringLiteral:)(0xD000000000000055LL, 0x8000000100246720LL);
  Logger.error(_:)(v3, v0, &protocol witness table for OSLogger);
  *(void *)&double result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

void sub_1000771D0()
{
}

uint64_t sub_1000771FC()
{
  return swift_unknownObjectWeakDestroy(v0 + qword_1002E0738);
}

uint64_t sub_10007720C()
{
  uint64_t v0 = ActionRunner.deinit();
  swift_unknownObjectWeakDestroy(v0 + qword_1002E0738);
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t sub_100077248()
{
  return type metadata accessor for FlowActionRunner(0LL);
}

void sub_100077250(uint64_t a1, uint64_t a2)
{
  uint64_t v96 = a2;
  uint64_t v3 = type metadata accessor for OSLogger(0LL);
  uint64_t v93 = *(void *)(v3 - 8);
  __n128 v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for FamilyCircleLookupTask(0LL, v4);
  uint64_t v87 = *(void *)(v7 - 8);
  uint64_t v88 = v7;
  __chkstk_darwin(v7);
  uint64_t v92 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = type metadata accessor for FlowPresentationHints(0LL);
  uint64_t v86 = *(void *)(v84 - 8);
  uint64_t v9 = *(void *)(v86 + 64);
  __chkstk_darwin(v84);
  uint64_t v90 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v100 = (uint64_t)&v82 - v11;
  uint64_t v12 = type metadata accessor for URL(0LL);
  uint64_t v98 = *(void *)(v12 - 8);
  uint64_t v99 = v12;
  uint64_t v13 = *(void *)(v98 + 64);
  __chkstk_darwin(v12);
  int v85 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  __int128 v95 = (char *)&v82 - v15;
  uint64_t v16 = sub_1000031E8(&qword_1002EAAF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for FlowDestination(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  __chkstk_darwin(v19);
  uint64_t v89 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  __int128 v94 = (uint64_t *)((char *)&v82 - v23);
  __chkstk_darwin(v24);
  uint64_t v26 = (uint64_t *)((char *)&v82 - v25);
  __chkstk_darwin(v27);
  uint64_t v97 = (uint64_t)&v82 - v28;
  sub_100077A80(v96, (uint64_t)v102);
  swift_retain(a1);
  uint64_t v101 = a1;
  sub_10003CAC4(v29, (uint64_t)v102, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1LL, v19) == 1)
  {
    sub_100006060((uint64_t)v18, &qword_1002EAAF0);
  }

  else
  {
    uint64_t v30 = (uint64_t)v18;
    uint64_t v31 = v97;
    sub_1000387A0(v30, v97, type metadata accessor for FlowDestination);
    sub_100077AEC(v31, (uint64_t)v26, type metadata accessor for FlowDestination);
    if (swift_getEnumCaseMultiPayload(v26, v19) == 29)
    {
      uint64_t v96 = *v26;
      uint64_t v32 = sub_1000031E8(&qword_1002DEF88);
      uint64_t v33 = (char *)v26 + *(int *)(v32 + 48);
      uint64_t v34 = (char *)v26 + *(int *)(v32 + 64);
      uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
      v83(v95, v34, v99);
      uint64_t v35 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
      uint64_t v36 = *(void *)(v35 - 8);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v35);
      uint64_t v37 = v101;
      __n128 v38 = swift_retain(v101);
      v39.n128_f64[0] = FlowAction.presentationContext.getter(v38);
      FlowAction.animationBehavior.getter(v39);
      __n128 v40 = swift_release(v37);
      __int128 v41 = v94;
      __int128 v42 = (char *)v94 + *(int *)(v32 + 48);
      id v43 = (char *)v94 + *(int *)(v32 + 64);
      uint64_t v44 = v96;
      void *v94 = v96;
      uint64_t v84 = v20;
      uint64_t v45 = (uint64_t)v41;
      (*(void (**)(char *, void, uint64_t, __n128))(v36 + 104))( v42,  enum case for ArcadeWelcomePage.ContentType.createNewFamily(_:),  v35,  v40);
      uint64_t v46 = v99;
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
      uint64_t v48 = v95;
      v47(v43, v95, v99);
      swift_storeEnumTagMultiPayload(v45, v19, 29LL);
      __n128 v49 = swift_retain(v44);
      uint64_t v50 = FamilyCircleLookupTask.init()(v49);
      uint64_t v93 = FamilyCircleLookupTask.perform()(v50);
      uint64_t v82 = swift_allocObject(&unk_100283BE8, 24LL, 7LL);
      swift_weakInit(v82 + 16, v91);
      uint64_t v51 = v85;
      v47(v85, v48, v46);
      sub_100077AEC(v45, v89, type metadata accessor for FlowDestination);
      sub_100077AEC(v100, v90, type metadata accessor for FlowPresentationHints);
      uint64_t v52 = *(unsigned __int8 *)(v98 + 80);
      uint64_t v53 = (v52 + 24) & ~v52;
      uint64_t v54 = *(unsigned __int8 *)(v84 + 80);
      uint64_t v55 = (v13 + v54 + v53) & ~v54;
      unint64_t v56 = (v21 + v55 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v57 = *(unsigned __int8 *)(v86 + 80);
      uint64_t v58 = (v57 + v56 + 8) & ~v57;
      uint64_t v86 = v54 | v57 | 7;
      uint64_t v84 = v9 + 7;
      unint64_t v59 = (v9 + 7 + v58) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v60 = swift_allocObject(&unk_100283C10, v59 + 8, v86 | v52);
      *(void *)(v60 + swift_unknownObjectWeakDestroy(v0 + 16) = v96;
      v83((char *)(v60 + v53), v51, v99);
      uint64_t v61 = v60 + v55;
      uint64_t v62 = v89;
      sub_1000387A0(v89, v61, type metadata accessor for FlowDestination);
      *(void *)(v60 + v56) = v82;
      uint64_t v63 = v60 + v58;
      uint64_t v64 = v90;
      sub_1000387A0(v90, v63, type metadata accessor for FlowPresentationHints);
      uint64_t v65 = v101;
      *(void *)(v60 + v59) = v101;
      uint64_t v66 = swift_allocObject(&unk_100283BE8, 24LL, 7LL);
      swift_weakInit(v66 + 16, v91);
      sub_100077AEC((uint64_t)v94, v62, type metadata accessor for FlowDestination);
      sub_100077AEC(v100, v64, type metadata accessor for FlowPresentationHints);
      uint64_t v67 = (v54 + 24) & ~v54;
      uint64_t v68 = (v21 + v57 + v67) & ~v57;
      unint64_t v69 = (v84 + v68) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v70 = swift_allocObject(&unk_100283C38, v69 + 8, v86);
      *(void *)(v70 + swift_unknownObjectWeakDestroy(v0 + 16) = v66;
      sub_1000387A0(v62, v70 + v67, type metadata accessor for FlowDestination);
      sub_1000387A0(v64, v70 + v68, type metadata accessor for FlowPresentationHints);
      *(void *)(v70 + v69) = v65;
      unint64_t v71 = sub_100048E8C();
      swift_retain_n(v65, 2LL);
      uint64_t v72 = v96;
      swift_retain(v96);
      swift_retain(v66);
      uint64_t v74 = static OS_dispatch_queue.main.getter(v73);
      uint64_t v103 = v71;
      id v104 = &protocol witness table for OS_dispatch_queue;
      v102[0] = v74;
      uint64_t v75 = v93;
      Promise.then(perform:orCatchError:on:)(sub_100077F9C, v60, sub_1000784C8, v70, v102);
      swift_release(v72);
      swift_release(v75);
      swift_release(v60);
      swift_release(v70);
      _s6Arcade17PillOverlayLayoutVwxx_0(v102);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v92, v88);
      sub_100046E64((uint64_t)v94, type metadata accessor for FlowDestination);
      sub_100046E64(v100, type metadata accessor for FlowPresentationHints);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v95, v99);
      sub_100046E64(v97, type metadata accessor for FlowDestination);
      swift_release(v66);
      return;
    }

    sub_100046E64(v97, type metadata accessor for FlowDestination);
    sub_100046E64((uint64_t)v26, type metadata accessor for FlowDestination);
  }

  if (qword_1002DC380 != -1) {
    swift_once(&qword_1002DC380, sub_100018F98);
  }
  uint64_t v76 = sub_1000061F4(v3, (uint64_t)qword_1002EE558);
  uint64_t v77 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v6, v76, v3);
  uint64_t v78 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
  uint64_t v79 = type metadata accessor for LogMessage(0LL);
  uint64_t v80 = swift_allocObject( v78,  ((*(unsigned __int8 *)(*(void *)(v79 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v79 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v79 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v79 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v80 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002339B0;
  LogMessage.init(stringLiteral:)(0xD000000000000020LL, 0x8000000100246660LL);
  uint64_t v103 = type metadata accessor for FlowAction(0LL);
  v102[0] = v101;
  swift_retain(v101);
  static LogMessage.traceableSensitive(_:)(v102);
  sub_100006060((uint64_t)v102, (uint64_t *)&unk_1002DF680);
  Logger.error(_:)(v80, v3, &protocol witness table for OSLogger);
  __n128 v81 = swift_bridgeObjectRelease(v80);
  (*(void (**)(char *, uint64_t, __n128))(v77 + 8))(v6, v3, v81);
}

uint64_t sub_100077A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DF680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100077AC8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100077AEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  return a2;
}

uint64_t sub_100077B30()
{
  uint64_t v1 = type metadata accessor for URL(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for FlowDestination(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v37 = *(void *)(v7 + 64);
  uint64_t v38 = type metadata accessor for FlowPresentationHints(0LL);
  uint64_t v10 = *(void *)(v38 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v36 = *(void *)(v10 + 64);
  __n128 v12 = swift_release(*(void *)(v0 + 16));
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 8);
  v13(v0 + v4, v1, v12);
  uint64_t v14 = (char *)(v0 + v9);
  switch(swift_getEnumCaseMultiPayload(v0 + v9, v6))
  {
    case 0u:
      ((void (*)(uint64_t, uint64_t))v13)(v0 + v9, v1);
      uint64_t v16 = sub_1000031E8(&qword_1002DEF78);
      swift_release(*(void *)&v14[*(int *)(v16 + 48)]);
      uint64_t v17 = *(int *)(v16 + 64);
      goto LABEL_28;
    case 1u:
      ((void (*)(uint64_t, uint64_t))v13)(v0 + v9, v1);
      uint64_t v18 = &v14[*(int *)(sub_1000031E8(&qword_1002DEFB8) + 48)];
      uint64_t v19 = type metadata accessor for FlowOrigin(0LL);
      goto LABEL_23;
    case 2u:
    case 0xCu:
      goto LABEL_16;
    case 3u:
      ((void (*)(uint64_t, uint64_t))v13)(v0 + v9, v1);
      uint64_t v20 = &qword_1002DEF48;
      goto LABEL_27;
    case 4u:
    case 0x11u:
    case 0x15u:
    case 0x17u:
    case 0x18u:
    case 0x1Bu:
      swift_release(*(void *)v14);
      break;
    case 5u:
      uint64_t v21 = *(void *)v14;
      goto LABEL_33;
    case 6u:
      ((void (*)(uint64_t, uint64_t))v13)(v0 + v9, v1);
      uint64_t v20 = &qword_1002DEF70;
      goto LABEL_27;
    case 7u:
    case 0x20u:
      swift_release(*(void *)v14);
      uint64_t v15 = &qword_1002E8340;
      goto LABEL_14;
    case 8u:
      swift_release(*(void *)v14);
      uint64_t v15 = &qword_1002DEF58;
      goto LABEL_14;
    case 9u:
      swift_release(*(void *)v14);

      break;
    case 0xAu:
      swift_bridgeObjectRelease(*(void *)v14);
      swift_bridgeObjectRelease(*((void *)v14 + 2));
      swift_release(*((void *)v14 + 3));
      break;
    case 0xBu:
    case 0xEu:
    case 0x1Fu:

      break;
    case 0xDu:
      swift_release(*(void *)v14);
      uint64_t v15 = &qword_1002DEF68;
LABEL_14:
      v14 += *(int *)(sub_1000031E8(v15) + 48);
      goto LABEL_15;
    case 0xFu:
      ((void (*)(uint64_t, uint64_t))v13)(v0 + v9, v1);
      uint64_t v20 = &qword_1002DEFA8;
      goto LABEL_27;
    case 0x10u:
      ((void (*)(uint64_t, uint64_t))v13)(v0 + v9, v1);
      uint64_t v18 = &v14[*(int *)(sub_1000031E8(&qword_1002DEF60) + 48)];
      uint64_t v19 = type metadata accessor for AdamId(0LL);
      goto LABEL_23;
    case 0x12u:
    case 0x13u:
LABEL_15:
LABEL_16:
      uint64_t v22 = v14;
LABEL_17:
      ((void (*)(char *, uint64_t))v13)(v22, v1);
      break;
    case 0x14u:
      ((void (*)(uint64_t, uint64_t))v13)(v0 + v9, v1);
      uint64_t v23 = &v14[*(int *)(sub_1000031E8(&qword_1002DEF98) + 48)];
      uint64_t v24 = type metadata accessor for MSOContext(0LL);
      uint64_t v25 = *(void *)(v24 - 8);
      break;
    case 0x19u:
      swift_release(*(void *)v14);
      uint64_t v18 = &v14[*(int *)(sub_1000031E8(&qword_1002DDA20) + 48)];
      uint64_t v19 = type metadata accessor for ArcadePageUrls(0LL);
LABEL_23:
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8LL))(v18, v19);
      break;
    case 0x1Au:
      uint64_t v20 = &qword_1002DEF50;
LABEL_27:
      uint64_t v17 = *(int *)(sub_1000031E8(v20) + 48);
LABEL_28:
      swift_release(*(void *)&v14[v17]);
      break;
    case 0x1Cu:
      swift_release(*(void *)v14);
      uint64_t v22 = &v14[*(int *)(sub_1000031E8(&qword_1002DEF90) + 48)];
      goto LABEL_17;
    case 0x1Du:
      swift_release(*(void *)v14);
      uint64_t v26 = sub_1000031E8(&qword_1002DEF88);
      uint64_t v27 = &v14[*(int *)(v26 + 48)];
      uint64_t v28 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8LL))(v27, v28);
      uint64_t v22 = &v14[*(int *)(v26 + 64)];
      goto LABEL_17;
    case 0x1Eu:
      goto LABEL_32;
    case 0x21u:
      swift_release(*(void *)v14);
LABEL_32:
      uint64_t v21 = *((void *)v14 + 1);
LABEL_33:
      swift_bridgeObjectRelease(v21);
      break;
    default:
      break;
  }

  unint64_t v29 = (v37 + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v30 = (v29 + v11 + 8) & ~v11;
  unint64_t v31 = (v36 + v30 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + v29));
  uint64_t v32 = type metadata accessor for FlowPresentationContext(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8LL))(v0 + v30, v32);
  uint64_t v33 = v0 + v30 + *(int *)(v38 + 20);
  uint64_t v34 = type metadata accessor for FlowAnimationBehavior(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8LL))(v33, v34);
  swift_release(*(void *)(v0 + v31));
  return swift_deallocObject(v0, v31 + 8, v3 | v8 | v11 | 7);
}

uint64_t sub_100077F9C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for FlowDestination(0LL) - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v9 = *(void *)(type metadata accessor for FlowPresentationHints(0LL) - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_100075E38( a1,  *(void *)(v1 + 16),  v1 + v4,  v1 + v7,  *(void *)(v1 + v8),  v1 + v10,  *(void *)(v1 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_100078058()
{
  uint64_t v1 = type metadata accessor for FlowDestination(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for FlowPresentationHints(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  swift_release(*(void *)(v0 + 16));
  unint64_t v10 = (void *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      uint64_t v12 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL))(v0 + v4, v12);
      uint64_t v13 = sub_1000031E8(&qword_1002DEF78);
      swift_release(*(void *)((char *)v10 + *(int *)(v13 + 48)));
      uint64_t v14 = *(int *)(v13 + 64);
      goto LABEL_26;
    case 1u:
      uint64_t v15 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v0 + v4, v15);
      unint64_t v10 = (void *)((char *)v10 + *(int *)(sub_1000031E8(&qword_1002DEFB8) + 48));
      uint64_t v16 = type metadata accessor for FlowOrigin(0LL);
      goto LABEL_31;
    case 2u:
    case 0xCu:
      goto LABEL_30;
    case 3u:
      uint64_t v17 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8LL))(v0 + v4, v17);
      uint64_t v18 = &qword_1002DEF48;
      goto LABEL_25;
    case 4u:
    case 0x11u:
    case 0x15u:
    case 0x17u:
    case 0x18u:
    case 0x1Bu:
      swift_release(*v10);
      break;
    case 5u:
      uint64_t v19 = *v10;
      goto LABEL_34;
    case 6u:
      uint64_t v20 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8LL))(v0 + v4, v20);
      uint64_t v18 = &qword_1002DEF70;
      goto LABEL_25;
    case 7u:
    case 0x20u:
      swift_release(*v10);
      uint64_t v11 = &qword_1002E8340;
      goto LABEL_14;
    case 8u:
      swift_release(*v10);
      uint64_t v11 = &qword_1002DEF58;
      goto LABEL_14;
    case 9u:
      swift_release(*v10);

      break;
    case 0xAu:
      swift_bridgeObjectRelease(*v10);
      swift_bridgeObjectRelease(v10[2]);
      swift_release(v10[3]);
      break;
    case 0xBu:
    case 0xEu:
    case 0x1Fu:

      break;
    case 0xDu:
      swift_release(*v10);
      uint64_t v11 = &qword_1002DEF68;
LABEL_14:
      unint64_t v10 = (void *)((char *)v10 + *(int *)(sub_1000031E8(v11) + 48));
      goto LABEL_15;
    case 0xFu:
      uint64_t v24 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8LL))(v0 + v4, v24);
      uint64_t v18 = &qword_1002DEFA8;
      goto LABEL_25;
    case 0x10u:
      uint64_t v25 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8LL))(v0 + v4, v25);
      unint64_t v10 = (void *)((char *)v10 + *(int *)(sub_1000031E8(&qword_1002DEF60) + 48));
      uint64_t v16 = type metadata accessor for AdamId(0LL);
      goto LABEL_31;
    case 0x12u:
    case 0x13u:
LABEL_15:
      uint64_t v21 = type metadata accessor for URL(0LL);
      goto LABEL_16;
    case 0x14u:
      uint64_t v26 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8LL))(v0 + v4, v26);
      unint64_t v10 = (void *)((char *)v10 + *(int *)(sub_1000031E8(&qword_1002DEF98) + 48));
      uint64_t v21 = type metadata accessor for MSOContext(0LL);
LABEL_16:
      uint64_t v22 = v21;
      uint64_t v23 = *(void *)(v21 - 8);
      break;
    case 0x19u:
      swift_release(*v10);
      unint64_t v10 = (void *)((char *)v10 + *(int *)(sub_1000031E8(&qword_1002DDA20) + 48));
      uint64_t v16 = type metadata accessor for ArcadePageUrls(0LL);
      goto LABEL_31;
    case 0x1Au:
      uint64_t v27 = type metadata accessor for URL(0LL);
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v18 = &qword_1002DEF50;
LABEL_25:
      uint64_t v14 = *(int *)(sub_1000031E8(v18) + 48);
LABEL_26:
      swift_release(*(void *)((char *)v10 + v14));
      break;
    case 0x1Cu:
      swift_release(*v10);
      uint64_t v29 = *(int *)(sub_1000031E8(&qword_1002DEF90) + 48);
      goto LABEL_29;
    case 0x1Du:
      swift_release(*v10);
      uint64_t v30 = sub_1000031E8(&qword_1002DEF88);
      unint64_t v31 = (char *)v10 + *(int *)(v30 + 48);
      uint64_t v32 = type metadata accessor for ArcadeWelcomePage.ContentType(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8LL))(v31, v32);
      uint64_t v29 = *(int *)(v30 + 64);
LABEL_29:
      unint64_t v10 = (void *)((char *)v10 + v29);
LABEL_30:
      uint64_t v16 = type metadata accessor for URL(0LL);
LABEL_31:
      (*(void (**)(void *, uint64_t))(*(void *)(v16 - 8) + 8LL))(v10, v16);
      break;
    case 0x1Eu:
      goto LABEL_33;
    case 0x21u:
      swift_release(*v10);
LABEL_33:
      uint64_t v19 = v10[1];
LABEL_34:
      swift_bridgeObjectRelease(v19);
      break;
    default:
      break;
  }

  uint64_t v33 = (v4 + v5 + v8) & ~v8;
  unint64_t v34 = (v9 + v33 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v35 = v0 + v33;
  uint64_t v36 = type metadata accessor for FlowPresentationContext(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8LL))(v35, v36);
  uint64_t v37 = v35 + *(int *)(v6 + 20);
  uint64_t v38 = type metadata accessor for FlowAnimationBehavior(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8LL))(v37, v38);
  swift_release(*(void *)(v0 + v34));
  return swift_deallocObject(v0, v34 + 8, v3 | v8 | 7);
}

uint64_t sub_1000784C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FlowDestination(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for FlowPresentationHints(0LL) - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_100076148( a1,  *(void *)(v1 + 16),  v1 + v4,  v1 + v7,  *(uint64_t **)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_100078548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OSLogger(0LL);
  uint64_t v41 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v7);
  __n128 v39 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for FlowPresentationHints(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000031E8(&qword_1002EAAF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for FlowDestination(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100077A80(a2, (uint64_t)&v42);
  swift_retain(a1);
  sub_10003CAC4(v19, (uint64_t)&v42, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15) == 1)
  {
    sub_100006060((uint64_t)v14, &qword_1002EAAF0);
    if (qword_1002DC380 != -1) {
      swift_once(&qword_1002DC380, sub_100018F98);
    }
    uint64_t v20 = sub_1000061F4(v4, (uint64_t)qword_1002EE558);
    uint64_t v21 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v6, v20, v4);
    uint64_t v22 = sub_1000031E8((uint64_t *)&unk_1002E1A80);
    uint64_t v23 = type metadata accessor for LogMessage(0LL);
    uint64_t v24 = swift_allocObject( v22,  ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v23 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v24 + swift_weakDestroy(v0 + 16) = xmmword_1002339B0;
    LogMessage.init(stringLiteral:)(0xD000000000000020LL, 0x8000000100246660LL);
    *((void *)&v43 + 1) = type metadata accessor for FlowAction(0LL);
    *(void *)&__int128 v42 = a1;
    swift_retain(a1);
    static LogMessage.traceableSensitive(_:)(&v42);
    sub_100006060((uint64_t)&v42, (uint64_t *)&unk_1002DF680);
    Logger.error(_:)(v24, v4, &protocol witness table for OSLogger);
    __n128 v25 = swift_bridgeObjectRelease(v24);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v21 + 8))(v6, v4, v25);
  }

  else
  {
    sub_1000387A0((uint64_t)v14, (uint64_t)v18, type metadata accessor for FlowDestination);
    __n128 v27 = swift_retain(a1);
    v28.n128_f64[0] = FlowAction.presentationContext.getter(v27);
    FlowAction.animationBehavior.getter(v28);
    swift_release(a1);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v40 + qword_1002E0738);
    if (Strong)
    {
      uint64_t v30 = (void *)Strong;
      sub_100082D00((uint64_t)&v42);

      uint64_t v31 = *((void *)&v43 + 1);
      if (*((void *)&v43 + 1))
      {
        uint64_t v32 = v44;
        uint64_t v33 = sub_100005F8C(&v42, *((uint64_t *)&v43 + 1));
        uint64_t v34 = FlowAction.referrerUrl.getter(v33);
        uint64_t v36 = v35;
        uint64_t v37 = (uint64_t)v39;
        FlowAction.referrerData.getter(v34);
        (*(void (**)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 16))( v18,  v11,  v34,  v36,  v37,  v31,  v32);
        swift_bridgeObjectRelease(v36);
        sub_100006060(v37, &qword_1002E1FB0);
        sub_100046E64((uint64_t)v11, type metadata accessor for FlowPresentationHints);
        sub_100046E64((uint64_t)v18, type metadata accessor for FlowDestination);
        return _s6Arcade17PillOverlayLayoutVwxx_0(&v42);
      }
    }

    else
    {
      uint64_t v44 = 0LL;
      __int128 v42 = 0u;
      __int128 v43 = 0u;
    }

    sub_100046E64((uint64_t)v11, type metadata accessor for FlowPresentationHints);
    sub_100046E64((uint64_t)v18, type metadata accessor for FlowDestination);
    return sub_100006060((uint64_t)&v42, (uint64_t *)&unk_1002E1800);
  }

uint64_t sub_10007896C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char **)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = Action.title.getter(v8);
  if (v10) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = 0LL;
  }
  if (v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 0xE000000000000000LL;
  }
  uint64_t v13 = ScrollingAlertAction.message.getter(v9);
  id v14 = objc_allocWithZone((Class)type metadata accessor for ScrollingAlertViewController());
  uint64_t v15 = sub_100087748(v11, v12, v13);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1 + qword_1002E0738);
  if (!Strong)
  {
    uint64_t v28 = 0LL;
    __int128 v26 = 0u;
    __int128 v27 = 0u;
    goto LABEL_13;
  }

  uint64_t v17 = (void *)Strong;
  sub_100082D00((uint64_t)&v26);

  uint64_t v18 = *((void *)&v27 + 1);
  if (!*((void *)&v27 + 1))
  {
LABEL_13:

    return sub_100006060((uint64_t)&v26, (uint64_t *)&unk_1002E1800);
  }

  uint64_t v19 = v28;
  sub_100005F8C(&v26, *((uint64_t *)&v27 + 1));
  *uint64_t v7 = v15;
  swift_storeEnumTagMultiPayload(v7, v5, 11LL);
  uint64_t v20 = qword_1002DCE78;
  uint64_t v21 = v15;
  if (v20 != -1) {
    swift_once(&qword_1002DCE78, sub_1001665C8);
  }
  uint64_t v22 = type metadata accessor for FlowPresentationHints(0LL);
  uint64_t v23 = sub_1000061F4(v22, (uint64_t)qword_1002F0F70);
  uint64_t v24 = type metadata accessor for ReferrerData(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v4, 1LL, 1LL, v24);
  (*(void (**)(char **, uint64_t, void, void, char *, uint64_t, uint64_t))(v19 + 16))( v7,  v23,  0LL,  0LL,  v4,  v18,  v19);

  sub_100006060((uint64_t)v4, &qword_1002E1FB0);
  sub_100046E64((uint64_t)v7, type metadata accessor for FlowDestination);
  return _s6Arcade17PillOverlayLayoutVwxx_0(&v26);
}

uint64_t sub_100078B94()
{
  uint64_t v1 = sub_1000031E8(&qword_1002E1FB0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for FlowPresentationHints(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (void *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v0 + qword_1002E0738);
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    sub_100082D00((uint64_t)&v22);

    uint64_t v12 = *((void *)&v23 + 1);
    if (*((void *)&v23 + 1))
    {
      uint64_t v13 = v24;
      sub_100005F8C(&v22, *((uint64_t *)&v23 + 1));
      *uint64_t v9 = GameCenterPlayerProfileAction.playerId.getter();
      v9[1] = v14;
      swift_storeEnumTagMultiPayload(v9, v7, 30LL);
      uint64_t v15 = enum case for FlowPresentationContext.presentModal(_:);
      uint64_t v16 = type metadata accessor for FlowPresentationContext(0LL);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104LL))(v6, v15, v16);
      uint64_t v17 = &v6[*(int *)(v4 + 20)];
      uint64_t v18 = enum case for FlowAnimationBehavior.always(_:);
      uint64_t v19 = type metadata accessor for FlowAnimationBehavior(0LL);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104LL))(v17, v18, v19);
      uint64_t v20 = type metadata accessor for ReferrerData(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v3, 1LL, 1LL, v20);
      (*(void (**)(void *, char *, void, void, char *, uint64_t, uint64_t))(v13 + 16))( v9,  v6,  0LL,  0LL,  v3,  v12,  v13);
      sub_100006060((uint64_t)v3, &qword_1002E1FB0);
      sub_100046E64((uint64_t)v6, type metadata accessor for FlowPresentationHints);
      sub_100046E64((uint64_t)v9, type metadata accessor for FlowDestination);
      return _s6Arcade17PillOverlayLayoutVwxx_0(&v22);
    }
  }

  else
  {
    uint64_t v24 = 0LL;
    __int128 v22 = 0u;
    __int128 v23 = 0u;
  }

  return sub_100006060((uint64_t)&v22, (uint64_t *)&unk_1002E1800);
}

uint64_t sub_100078DE0(void **a1)
{
  return sub_100076F0C(a1, v1);
}

uint64_t sub_100078DE8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

double sub_100078E14(void *a1)
{
  return sub_100076D44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_100078E1C()
{
  unint64_t result = qword_1002E0790[0];
  if (!qword_1002E0790[0])
  {
    uint64_t v1 = type metadata accessor for FlowPage(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for FlowPage, v1);
    atomic_store(result, qword_1002E0790);
  }

  return result;
}

uint64_t sub_100078E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000031E8((uint64_t *)&unk_1002DF680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100078EAC()
{
  if (v0[5]) {
    swift_release(v0[6]);
  }
  swift_release(v0[7]);
  if (v0[11]) {
    _s6Arcade17PillOverlayLayoutVwxx_0(v0 + 8);
  }
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104LL, 7LL);
}

void sub_100078F08(uint64_t a1)
{
  __int128 v2 = *(_OWORD *)(v1 + 32);
  v4[0] = *(_OWORD *)(v1 + 16);
  v4[1] = v2;
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 48);
  sub_100076A24(a1, v4, v3, v1 + 64, *(void *)(v1 + 96));
}

uint64_t sub_100078F40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002ELL,  0x8000000100244960LL,  "Arcade/TVLockupCollectionViewCell.swift",  39LL,  2LL,  43LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100078F50(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100078F58()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100078F80(uint64_t a1)
{
  uint64_t v2 = swift_checkMetadataState(319LL, *(void *)(a1 + 80));
  uint64_t v3 = v2;
  if (v4 <= 0x3F)
  {
    v11[0] = *(void *)(v2 - 8) + 64LL;
    v11[1] = &unk_100236468;
    v11[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v11[3] = &unk_100236480;
    v11[4] = &unk_100236480;
    void v11[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v11[6] = &unk_100236468;
    v11[7] = &unk_100236480;
    v11[8] = &unk_100236498;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, *(void *)(a1 + 88));
    uint64_t v6 = type metadata accessor for ViewRecycler(255LL, AssociatedTypeWitness);
    uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v6);
    uint64_t v8 = type metadata accessor for ReusePool(319LL, v6, WitnessTable);
    uint64_t v3 = v8;
    if (v9 <= 0x3F)
    {
      v11[9] = *(void *)(v8 - 8) + 64LL;
      v11[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v11[11] = &unk_1002364B0;
      v11[12] = &unk_1002364B0;
      return swift_initClassMetadata2(a1, 0LL, 13LL, v11, a1 + 96);
    }
  }

  return v3;
}

void sub_1000790B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_10007CE50();
}

  ;
}

id sub_1000790D8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  id v2 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v2 removeObserver:v0];

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, "dealloc");
}

id sub_100079158(void *a1)
{
  id v1 = a1;
  return sub_1000790D8();
}

double sub_10007917C(char *a1)
{
  id v2 = (void *)(swift_isaMask & *(void *)a1);
  (*(void (**)(char *, void))(*(void *)(v2[10] - 8LL) + 8LL))(&a1[v2[12]], v2[10]);
  id v3 = (uint64_t *)&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x68LL)];
  sub_10000D3D8(*v3, v3[1]);

  swift_unknownObjectRelease(*(void *)&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x90LL)]);
  objc_super v4 = &a1[*(void *)((swift_isaMask & *(void *)a1) + 0xA8LL)];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, v2[11]);
  uint64_t v6 = type metadata accessor for ViewRecycler(255LL, AssociatedTypeWitness);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v6);
  uint64_t v8 = type metadata accessor for ReusePool(0LL, v6, WitnessTable);
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8LL))(v4, v8);
  *(void *)&double result = swift_bridgeObjectRelease(*(void *)&a1[*(void *)((swift_isaMask & *(void *)a1) + 0xB0LL)]).n128_u64[0];
  return result;
}

uint64_t sub_1000792B0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_isaMask;
  uint64_t result = (uint64_t)[v0 isTracking];
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)[v0 isDragging];
    if ((result & 1) == 0)
    {
      swift_beginAccess((char *)v0 + *(void *)((swift_isaMask & *v0) + 0xA8), v7, 33LL, 0LL);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, *(void *)((v2 & v1) + 0x58));
      uint64_t v5 = type metadata accessor for ViewRecycler(255LL, AssociatedTypeWitness);
      uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v5);
      type metadata accessor for ReusePool(0LL, v5, WitnessTable);
      ReusePool.drain()();
      return swift_endAccess(v7);
    }
  }

  return result;
}

uint64_t sub_100079394(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Notification(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  id v9 = a1;
  sub_1000792B0();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_100079430(char a1)
{
  *((_BYTE *)v1 + *(void *)((swift_isaMask & *v1) + 0x98LL)) = a1;
  [v1 invalidateIntrinsicContentSize];
  return [v1 setNeedsLayout];
}

void sub_10007949C(uint64_t a1, double a2)
{
  void (*v27)(double *__return_ptr, uint64_t, uint64_t);
  double v28;
  double v29;
  double v30;
  double v31;
  double Width;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  double v44[10];
  void v45[10];
  void v46[10];
  CGRect v47;
  CGRect v48;
  id v3 = v2;
  __int128 v43 = a1;
  uint64_t v5 = swift_isaMask & *v2;
  uint64_t v6 = *(void *)(v5 + 0x50);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v41 - v11;
  [v3 frame];
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  uint64_t v21 = (char *)v3 + *(void *)((swift_isaMask & *v3) + 0x60LL);
  __int128 v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v22(v12, v21, v6);
  uint64_t v23 = *(void *)(v5 + 88);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 32);
  uint64_t v25 = v24(v6, v23);
  __int128 v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  v26(v12, v6);
  if (v25 >= 1)
  {
    v47.origin.CGFloat x = v14;
    v47.origin.CGFloat y = v16;
    v47.size.double width = v18;
    v47.size.double height = v20;
    if (!CGRectIsEmpty(v47))
    {
      v22(v12, v21, v6);
      __int128 v27 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v23 + 24);
      v27(v44, v6, v23);
      v26(v12, v6);
      uint64_t v28 = v44[4] + v44[6];
      v22(v12, v21, v6);
      v27((double *)v45, v6, v23);
      v26(v12, v6);
      __int128 v42 = v45[9];
      v22(v12, v21, v6);
      v27((double *)v46, v6, v23);
      v26(v12, v6);
      uint64_t v29 = *(double *)&v46[3];
      uint64_t v30 = 0.0;
      if (a2 >= 0.0) {
        uint64_t v30 = a2;
      }
      uint64_t v31 = v30 + *(double *)&v46[1];
      v48.origin.CGFloat x = v14;
      v48.origin.CGFloat y = v16;
      v48.size.double width = v18;
      v48.size.double height = v20;
      double Width = CGRectGetWidth(v48);
      uint64_t v33 = floor(v31 / v28);
      if ((~*(void *)&v33 & 0x7FF0000000000000LL) != 0)
      {
        if (v33 > -9.22337204e18)
        {
          if (v33 < 9.22337204e18)
          {
            uint64_t v34 = floor((v31 + Width - v29) / v28);
            if ((~*(void *)&v34 & 0x7FF0000000000000LL) != 0)
            {
              if (v34 > -9.22337204e18)
              {
                if (v34 < 9.22337204e18)
                {
                  uint64_t v35 = (uint64_t)v33;
                  uint64_t v36 = (uint64_t)v34;
                  if ((v43 & 1) != 0)
                  {
                    uint64_t v37 = *(void *)((char *)v3 + *(void *)((swift_isaMask & *v3) + 0x70LL));
                    uint64_t v38 = __OFSUB__(v35, v37);
                    v35 -= v37;
                    if (v38)
                    {
LABEL_26:
                      __break(1u);
                      goto LABEL_27;
                    }

                    uint64_t v38 = __OFADD__(v36, v37);
                    v36 += v37;
                    if (v38)
                    {
LABEL_27:
                      __break(1u);
                      return;
                    }
                  }

                  if ((unsigned __int128)(v35 * (__int128)v42) >> 64 == (v35 * v42) >> 63)
                  {
                    __n128 v39 = v21;
                    uint64_t v40 = v42;
                    v22(v10, v39, v6);
                    v24(v6, v23);
                    v26(v10, v6);
                    goto LABEL_25;
                  }

id sub_100079834(void *a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  id v3 = [v1 traitCollection];
  id v4 = [v3 layoutDirection];

  if (!a1 || (id result = [a1 layoutDirection], v4 != result))
  {
    BOOL v6 = [v1 effectiveUserInterfaceLayoutDirection] == (id)1;
    id v7 = [v1 layer];
    [v7 setFlipsHorizontalAxis:v6];

    objc_msgSend(v1, "setContentSize:", 0.0, 0.0);
    *((_BYTE *)v1 + *(void *)((swift_isaMask & *v1) + 0x98LL)) = 1;
    [v1 invalidateIntrinsicContentSize];
    return [v1 setNeedsLayout];
  }

  return result;
}

void sub_100079970(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_100079834(a3);
}

id sub_1000799C8(void *a1)
{
  id v1 = a1;
  id v2 = sub_1000799F8();

  return v2;
}

id sub_1000799F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "semanticContentAttribute");
}

void sub_100079A2C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a1;
  sub_100079A6C(a3);
}

id sub_100079A6C(id a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v1);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  id v4 = objc_msgSendSuper2(&v9, "semanticContentAttribute");
  v8.receiver = v1;
  v8.super_class = ObjectType;
  id result = objc_msgSendSuper2(&v8, "setSemanticContentAttribute:", a1);
  if (v4 != a1)
  {
    BOOL v6 = [v1 effectiveUserInterfaceLayoutDirection] == (id)1;
    id v7 = [v1 layer];
    [v7 setFlipsHorizontalAxis:v6];

    objc_msgSend(v1, "setContentSize:", 0.0, 0.0);
    *((_BYTE *)v1 + *(void *)((swift_isaMask & *v1) + 0x98LL)) = 1;
    [v1 invalidateIntrinsicContentSize];
    return [v1 setNeedsLayout];
  }

  return result;
}

void sub_100079B7C(uint64_t a1, char a2)
{
  id v3 = (char *)v2 + *(void *)((swift_isaMask & *v2) + 0xB8LL);
  uint64_t v4 = *(void *)v3;
  *(void *)id v3 = a1;
  v3[8] = a2 & 1;
  sub_10007B620(v4);
}

double sub_100079BB8(void *a1)
{
  id v1 = a1;
  double v2 = sub_100079BF8((uint64_t)v1);

  return v2;
}

CGFloat sub_100079BF8(uint64_t a1)
{
  double v2 = (void *)(swift_isaMask & *(void *)v1);
  uint64_t v3 = v2[10];
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  BOOL v6 = (char *)v8 - v5;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v8 - v5, &v1[v2[12]], v3);
  (*(void (**)(void *__return_ptr, uint64_t))(v2[11] + 24LL))(v8, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return UIViewNoIntrinsicMetric;
}

CGFloat sub_100079CFC(uint64_t a1, CGFloat Width)
{
  uint64_t v4 = swift_isaMask & *(void *)v2;
  uint64_t v5 = *(void *)(v4 + 0x50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  objc_super v8 = (char *)v20 - v7;
  uint64_t v9 = v4;
  if (Width < COERCE_DOUBLE(1LL))
  {
    id v10 = [(id)objc_opt_self(UIScreen) mainScreen];
    [v10 bounds];
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;

    v21.origin.CGFloat x = v12;
    v21.origin.CGFloat y = v14;
    v21.size.double width = v16;
    v21.size.double height = v18;
    double Width = CGRectGetWidth(v21);
    uint64_t v9 = swift_isaMask & *(void *)v2;
  }

  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v2[*(void *)(v9 + 96)], v5);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v4 + 88) + 24LL))(v20, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return Width;
}

double sub_100079E98(void *a1, CGFloat a2)
{
  id v3 = a1;
  double v4 = sub_100079CFC((uint64_t)v3, a2);

  return v4;
}

uint64_t sub_100079EE8(uint64_t a1)
{
  double v2 = (void *)(swift_isaMask & *v1);
  uint64_t v3 = v2[10];
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)v14 - v5;
  uint64_t v7 = (char *)v1 + v2[12];
  objc_super v8 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v8((char *)v14 - v5, v7, v3);
  uint64_t v9 = v2[11];
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v3, v9);
  double v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v8(v6, v7, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 24))(v14, v3, v9);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v11)(v6, v3);
  double v13 = ceil((double)v10 / (double)v14[9]);
  if ((~*(void *)&v13 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }

  if (v13 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }

  if (v13 < 9.22337204e18) {
    return (uint64_t)v13;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_10007A03C(uint64_t a1)
{
  void (*v16)(double *__return_ptr, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  void v32[10];
  void v33[10];
  void v34[10];
  void v35[10];
  void v36[10];
  double v37[10];
  void v38[10];
  void v39[10];
  void v40[11];
  double v2 = v1;
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = *(void *)(v3 + 0x50);
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(a1).n128_u64[0];
  objc_super v8 = (char *)&v32[-1] - v7;
  id result = objc_msgSend(v1, "contentSize", v6);
  if (v11 == 0.0 && v10 == 0.0)
  {
    double v12 = (double)sub_100079EE8((uint64_t)result);
    double v13 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x60LL);
    CGFloat v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v8, v13, v4);
    uint64_t v15 = *(void *)(v3 + 88);
    CGFloat v16 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v15 + 24);
    v16((double *)v32, v4, v15);
    double v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    CGFloat v18 = (double)v32[9];
    v14(v8, v13, v4);
    v16((double *)v33, v4, v15);
    v17(v8, v4);
    double v19 = *(double *)&v33[1];
    v14(v8, v13, v4);
    v16((double *)v34, v4, v15);
    v17(v8, v4);
    CGFloat v20 = v19 + *(double *)&v34[3] + 0.0;
    v14(v8, v13, v4);
    v16((double *)v35, v4, v15);
    v17(v8, v4);
    CGRect v21 = v20 + *(double *)&v35[4] * v12;
    v14(v8, v13, v4);
    v16((double *)v36, v4, v15);
    v17(v8, v4);
    __int128 v22 = v21 + (v12 + -1.0) * *(double *)&v36[6];
    v14(v8, v13, v4);
    v16(v37, v4, v15);
    v17(v8, v4);
    uint64_t v23 = v37[0];
    v14(v8, v13, v4);
    v16((double *)v38, v4, v15);
    v17(v8, v4);
    uint64_t v24 = v23 + *(double *)&v38[2] + 0.0;
    v14(v8, v13, v4);
    v16((double *)v39, v4, v15);
    v17(v8, v4);
    uint64_t v25 = v24 + *(double *)&v39[5] * v18;
    v14(v8, v13, v4);
    v16((double *)v40, v4, v15);
    v17(v8, v4);
    id result = sub_10007A3D0((uint64_t)objc_msgSend(v1, "setContentSize:", v22, v25 + (v18 + -1.0) * *(double *)&v40[7]));
    __int128 v26 = (double *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0xA0LL));
    if (((_BYTE)v26[2] & 1) == 0)
    {
      id result = objc_msgSend(v2, "setContentOffset:", *v26, v26[1]);
      *__int128 v26 = 0.0;
      v26[1] = 0.0;
      *((_BYTE *)v26 + swift_weakDestroy(v0 + 16) = 1;
      __int128 v27 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x90LL));
      uint64_t v28 = *v27;
      if (*v27)
      {
        uint64_t v29 = v27[1];
        uint64_t ObjectType = swift_getObjectType(*v27);
        swift_unknownObjectRetain(v28);
        dispatch thunk of ScrollObserver.didScroll(in:)(v2, ObjectType, v29);
        return (id)swift_unknownObjectRelease(v28);
      }
    }
  }

  return result;
}

id sub_10007A3D0(uint64_t a1)
{
  void (*v11)(void *__return_ptr, uint64_t, uint64_t);
  void (*v12)(_BYTE *, uint64_t);
  double v13;
  double Width;
  id result;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t WitnessTable;
  uint64_t v31;
  _BYTE v32[24];
  void v33[10];
  void v34[9];
  uint64_t v35;
  CGRect v36;
  double v2 = v1;
  uint64_t v3 = (void *)(swift_isaMask & *v1);
  uint64_t v4 = v3[10];
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = &v32[-v6];
  objc_super v8 = (char *)v2 + v3[12];
  uint64_t v9 = *(void (**)(_BYTE *, char *, uint64_t))(v5 + 16);
  v9(&v32[-v6], v8, v4);
  uint64_t v10 = v3[11];
  double v11 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 24);
  v11(v33, v4, v10);
  double v12 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v12(v7, v4);
  double v13 = *(double *)&v33[4] + *(double *)&v33[6];
  [v2 frame];
  double Width = CGRectGetWidth(v36);
  id result = [v2 contentInset];
  double v17 = ceil((Width - v16) / v13);
  if ((~*(void *)&v17 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }

  if (v17 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  if (v17 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  CGFloat v18 = (uint64_t)v17;
  double v19 = *(uint64_t *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x70));
  if (*((_BYTE *)v2 + *(void *)((swift_isaMask & *v2) + 0x78)) == 1)
  {
    CGFloat v20 = __OFADD__(v18, v19);
    CGRect v21 = v18 + v19;
    if (!v20)
    {
      if (v21 + 0x4000000000000000LL >= 0)
      {
        __int128 v22 = 2 * v21;
        v9(v7, v8, v4);
        v11(v34, v4, v10);
        id result = (id)((uint64_t (*)(_BYTE *, uint64_t))v12)(v7, v4);
        uint64_t v23 = v22 * v35;
        if ((unsigned __int128)(v22 * (__int128)v35) >> 64 == (v22 * v35) >> 63)
        {
          uint64_t v24 = *v2;
          uint64_t v25 = swift_isaMask;
LABEL_13:
          swift_beginAccess((char *)v2 + *(void *)((v25 & v24) + 0xA8), v32, 33LL, 0LL);
          uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, v10);
          uint64_t v29 = type metadata accessor for ViewRecycler(255LL, AssociatedTypeWitness);
          uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v29);
          uint64_t v31 = type metadata accessor for ReusePool(0LL, v29, WitnessTable);
          ReusePool.limit.setter(v23, v31);
          return (id)swift_endAccess(v32);
        }

        goto LABEL_19;
      }

uint64_t sub_10007A6B0(uint64_t a1)
{
  void (*v14)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void v19[10];
  void v20[10];
  void v21[9];
  uint64_t v22;
  void v23[9];
  uint64_t v24;
  void v25[10];
  void v26[10];
  void v27[8];
  char v28;
  void v29[9];
  uint64_t v30;
  void v31[7];
  uint64_t v3 = (void *)(swift_isaMask & *v1);
  uint64_t v4 = v3[10];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = __chkstk_darwin(a1);
  objc_super v8 = (char *)&v16 - v7;
  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v9 = (char *)v1 + v3[12];
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v10(v8, v9, v4);
  uint64_t v11 = v3[11];
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v4, v11);
  double v13 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t result = v13(v8, v4);
  if (v12 <= a1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  CGFloat v18 = a1;
  v10(v8, v9, v4);
  CGFloat v14 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 24);
  v14(v19, v4, v11);
  v13(v8, v4);
  v10(v8, v9, v4);
  v14(v20, v4, v11);
  v13(v8, v4);
  v10(v8, v9, v4);
  v14(v21, v4, v11);
  uint64_t result = v13(v8, v4);
  uint64_t v15 = v22;
  if (!v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  v10(v8, v9, v4);
  v14(v23, v4, v11);
  uint64_t result = v13(v8, v4);
  if (!v24)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  CGFloat v16 = v18 / v15;
  double v17 = v18 % v24;
  if (v18 / v15 >= 1)
  {
    v10(v8, v9, v4);
    v14(v25, v4, v11);
    v13(v8, v4);
  }

  if (v17)
  {
    v10(v8, v9, v4);
    v14(v26, v4, v11);
    v13(v8, v4);
  }

  v10(v8, v9, v4);
  v14(v27, v4, v11);
  uint64_t result = v13(v8, v4);
  if ((v28 & 1) != 0)
  {
    v10(v8, v9, v4);
    v14(v29, v4, v11);
    uint64_t result = v13(v8, v4);
    if (v30)
    {
      if ((v18 + 1) % v30)
      {
        v10(v8, v9, v4);
        v14(v31, v4, v11);
        return v13(v8, v4);
      }

      return result;
    }

void sub_10007AA10()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = *(void *)((swift_isaMask & *v1) + 0x50LL);
  uint64_t v61 = *(void *)(v3 - 8);
  __chkstk_darwin(ObjectType);
  uint64_t v60 = (char *)&v53 - v4;
  uint64_t v6 = *(void *)(v5 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL, v6);
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  *(void *)&double v7 = __chkstk_darwin(AssociatedTypeWitness).n128_u64[0];
  unint64_t v56 = (char *)&v53 - v8;
  v71.receiver = v1;
  v71.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v71, "layoutSubviews", v7);
  sub_10007A03C((uint64_t)v9);
  [v1 contentOffset];
  uint64_t v65 = *(void *)((swift_isaMask & *v1) + 0x80LL);
  sub_10007949C(*((unsigned __int8 *)v1 + v65), v10);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0xB0LL));
  swift_beginAccess(v15, v70, 0LL, 0LL);
  uint64_t v64 = v15;
  uint64_t v16 = *v15;
  uint64_t v59 = v6;
  uint64_t v62 = v3;
  uint64_t v17 = swift_getAssociatedTypeWitness(0LL, v6);
  uint64_t v18 = swift_bridgeObjectRetain(v16);
  uint64_t v63 = v17;
  _NativeDictionary.makeIterator()(v72, v18, &type metadata for Int, v17, &protocol witness table for Int);
  uint64_t v20 = v72[0];
  uint64_t v19 = v72[1];
  uint64_t v21 = v72[3];
  unint64_t v22 = v72[4];
  uint64_t v66 = *(void *)((swift_isaMask & *v1) + 0x98LL);
  int64_t v23 = (unint64_t)(v72[2] + 64LL) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v21 << 6);
      goto LABEL_20;
    }

    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1LL))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }

    if (v26 >= v23) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v19 + 8 * v26);
    uint64_t v28 = v21 + 1;
    if (!v27)
    {
      uint64_t v28 = v21 + 2;
      if (v21 + 2 >= v23) {
        goto LABEL_28;
      }
      unint64_t v27 = *(void *)(v19 + 8 * v28);
      if (!v27)
      {
        uint64_t v28 = v21 + 3;
        if (v21 + 3 >= v23) {
          goto LABEL_28;
        }
        unint64_t v27 = *(void *)(v19 + 8 * v28);
        if (!v27)
        {
          uint64_t v28 = v21 + 4;
          if (v21 + 4 >= v23) {
            goto LABEL_28;
          }
          unint64_t v27 = *(void *)(v19 + 8 * v28);
          if (!v27)
          {
            uint64_t v28 = v21 + 5;
            if (v21 + 5 >= v23) {
              goto LABEL_28;
            }
            unint64_t v27 = *(void *)(v19 + 8 * v28);
            if (!v27) {
              break;
            }
          }
        }
      }
    }