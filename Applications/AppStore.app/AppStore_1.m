id sub_10007D76C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  void (*v9)(_BYTE *, char *, uint64_t);
  uint64_t v10;
  void (*v11)(void *__return_ptr, uint64_t, uint64_t);
  void (*v12)(_BYTE *, uint64_t);
  double v13;
  double Width;
  id result;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t WitnessTable;
  uint64_t v31;
  _BYTE v32[24];
  void v33[10];
  void v34[9];
  uint64_t v35;
  CGRect v36;
  v2 = v1;
  v3 = (void *)(swift_isaMask & *v1);
  v4 = v3[10];
  v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = &v32[-v6];
  v8 = (char *)v2 + v3[12];
  v9 = *(void (**)(_BYTE *, char *, uint64_t))(v5 + 16);
  v9(&v32[-v6], v8, v4);
  v10 = v3[11];
  v11 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 24);
  v11(v33, v4, v10);
  v12 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v12(v7, v4);
  v13 = *(double *)&v33[4] + *(double *)&v33[6];
  [v2 frame];
  Width = CGRectGetWidth(v36);
  result = [v2 contentInset];
  v17 = ceil((Width - v16) / v13);
  if ((~*(void *)&v17 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }

  if (v17 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  if (v17 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  v18 = (uint64_t)v17;
  v19 = *(uint64_t *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x70));
  if (*((_BYTE *)v2 + *(void *)((swift_isaMask & *v2) + 0x78)) == 1)
  {
    v20 = __OFADD__(v18, v19);
    v21 = v18 + v19;
    if (!v20)
    {
      if (v21 + 0x4000000000000000LL >= 0)
      {
        v22 = 2 * v21;
        v9(v7, v8, v4);
        v11(v34, v4, v10);
        result = (id)((uint64_t (*)(_BYTE *, uint64_t))v12)(v7, v4);
        v23 = v22 * v35;
        if ((unsigned __int128)(v22 * (__int128)v35) >> 64 == (v22 * v35) >> 63)
        {
          v24 = *v2;
          v25 = swift_isaMask;
LABEL_13:
          swift_beginAccess((char *)v2 + *(void *)((v25 & v24) + 0xA8), v32, 33LL, 0LL);
          AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, v10);
          v29 = type metadata accessor for ViewRecycler(255LL, AssociatedTypeWitness);
          WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v29);
          v31 = type metadata accessor for ReusePool(0LL, v29, WitnessTable);
          ReusePool.limit.setter(v23, v31);
          return (id)swift_endAccess(v32);
        }

        goto LABEL_19;
      }

uint64_t sub_10007DA4C(uint64_t a1)
{
  void (*v14)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void v19[10];
  void v20[10];
  void v21[9];
  uint64_t v22;
  void v23[9];
  uint64_t v24;
  void v25[10];
  void v26[10];
  void v27[8];
  char v28;
  void v29[9];
  uint64_t v30;
  void v31[7];
  v3 = (void *)(swift_isaMask & *v1);
  uint64_t v4 = v3[10];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = __chkstk_darwin(a1);
  v8 = (char *)&v16 - v7;
  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }

  v9 = (char *)v1 + v3[12];
  v10 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v10(v8, v9, v4);
  uint64_t v11 = v3[11];
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v4, v11);
  v13 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t result = v13(v8, v4);
  if (v12 <= a1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  v18 = a1;
  v10(v8, v9, v4);
  v14 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 24);
  v14(v19, v4, v11);
  v13(v8, v4);
  v10(v8, v9, v4);
  v14(v20, v4, v11);
  v13(v8, v4);
  v10(v8, v9, v4);
  v14(v21, v4, v11);
  uint64_t result = v13(v8, v4);
  v15 = v22;
  if (!v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  v10(v8, v9, v4);
  v14(v23, v4, v11);
  uint64_t result = v13(v8, v4);
  if (!v24)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  v16 = v18 / v15;
  v17 = v18 % v24;
  if (v18 / v15 >= 1)
  {
    v10(v8, v9, v4);
    v14(v25, v4, v11);
    v13(v8, v4);
  }

  if (v17)
  {
    v10(v8, v9, v4);
    v14(v26, v4, v11);
    v13(v8, v4);
  }

  v10(v8, v9, v4);
  v14(v27, v4, v11);
  uint64_t result = v13(v8, v4);
  if ((v28 & 1) != 0)
  {
    v10(v8, v9, v4);
    v14(v29, v4, v11);
    uint64_t result = v13(v8, v4);
    if (v30)
    {
      if ((v18 + 1) % v30)
      {
        v10(v8, v9, v4);
        v14(v31, v4, v11);
        return v13(v8, v4);
      }

      return result;
    }

void sub_10007DDAC()
{
  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = *(void *)((swift_isaMask & *v1) + 0x50LL);
  uint64_t v61 = *(void *)(v3 - 8);
  __chkstk_darwin(ObjectType);
  v60 = (char *)&v53 - v4;
  uint64_t v6 = *(void *)(v5 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL, v6);
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  *(void *)&double v7 = __chkstk_darwin(AssociatedTypeWitness).n128_u64[0];
  v56 = (char *)&v53 - v8;
  v71.receiver = v1;
  v71.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v71, "layoutSubviews", v7);
  sub_10007D3D8((uint64_t)v9);
  [v1 contentOffset];
  uint64_t v65 = *(void *)((swift_isaMask & *v1) + 0x80LL);
  sub_10007C838(*((unsigned __int8 *)v1 + v65), v10);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  v15 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0xB0LL));
  swift_beginAccess(v15, v70, 0LL, 0LL);
  v64 = v15;
  uint64_t v16 = *v15;
  uint64_t v59 = v6;
  uint64_t v62 = v3;
  uint64_t v17 = swift_getAssociatedTypeWitness(0LL, v6);
  uint64_t v18 = swift_bridgeObjectRetain(v16);
  uint64_t v63 = v17;
  _NativeDictionary.makeIterator()(v72, v18, &type metadata for Int, v17, &protocol witness table for Int);
  uint64_t v20 = v72[0];
  uint64_t v19 = v72[1];
  uint64_t v21 = v72[3];
  unint64_t v22 = v72[4];
  uint64_t v66 = *(void *)((swift_isaMask & *v1) + 0x98LL);
  int64_t v23 = (unint64_t)(v72[2] + 64LL) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v21 << 6);
      goto LABEL_20;
    }

    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1LL))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }

    if (v26 >= v23) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v19 + 8 * v26);
    uint64_t v28 = v21 + 1;
    if (!v27)
    {
      uint64_t v28 = v21 + 2;
      if (v21 + 2 >= v23) {
        goto LABEL_28;
      }
      unint64_t v27 = *(void *)(v19 + 8 * v28);
      if (!v27)
      {
        uint64_t v28 = v21 + 3;
        if (v21 + 3 >= v23) {
          goto LABEL_28;
        }
        unint64_t v27 = *(void *)(v19 + 8 * v28);
        if (!v27)
        {
          uint64_t v28 = v21 + 4;
          if (v21 + 4 >= v23) {
            goto LABEL_28;
          }
          unint64_t v27 = *(void *)(v19 + 8 * v28);
          if (!v27)
          {
            uint64_t v28 = v21 + 5;
            if (v21 + 5 >= v23) {
              goto LABEL_28;
            }
            unint64_t v27 = *(void *)(v19 + 8 * v28);
            if (!v27) {
              break;
            }
          }
        }
      }
    }

LABEL_28:
  swift_release(v20);
  uint64_t v34 = v63;
  v33 = v64;
  if (v12 == v14)
  {
LABEL_29:
    *((_BYTE *)v1 + v66) = 0;
    return;
  }

  if (v14 < v12) {
    goto LABEL_40;
  }
  if (v12 < v14)
  {
    v55 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x60LL);
    uint64_t v54 = v14;
    do
    {
      swift_beginAccess(v33, v69, 32LL, 0LL);
      uint64_t v37 = *v33;
      uint64_t v67 = v12;
      Dictionary.subscript.getter(&v68, &v67, v37, &type metadata for Int, v34, &protocol witness table for Int);
      v38 = v68;
      swift_endAccess(v69);

      if (v38)
      {
        swift_beginAccess(v33, v69, 32LL, 0LL);
        uint64_t v35 = *v33;
        uint64_t v67 = v12;
        Dictionary.subscript.getter(&v68, &v67, v35, &type metadata for Int, v34, &protocol witness table for Int);
        v36 = v68;
        swift_endAccess(v69);
        sub_10007E4AC(v36, v12);
      }

      else
      {
        id v39 = sub_10007E62C(v12);
        v40 = v39;
        if (*((_BYTE *)v1 + v65) == 1)
        {
          uint64_t v41 = v61;
          uint64_t v42 = v62;
          v43 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
          v44 = v60;
          v45 = v55;
          v43(v60, v55, v62);
          uint64_t v46 = v59;
          v47 = v56;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 40))(v12, v42, v59);
          v48 = *(void (**)(char *, uint64_t))(v41 + 8);
          v48(v44, v42);
          v43(v44, v45, v42);
          v49 = *(void (**)(char *, uint64_t, void *, uint64_t, uint64_t))(v46 + 56);
          uint64_t v50 = v46;
          v33 = v64;
          v49(v47, v12, v40, v42, v50);
          v48(v44, v42);
          uint64_t v34 = v63;
          id v51 = v40;
          sub_10007E4AC(v40, v12);

          v52 = v47;
          uint64_t v14 = v54;
          (*(void (**)(char *, uint64_t))(v57 + 8))(v52, AssociatedTypeWitness);
        }

        else
        {
        }
      }

      ++v12;
    }

    while (v14 != v12);
    goto LABEL_29;
  }

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  *(void *)(v1 + v34) = v38;

  uint64_t v54 = *(void **)(v1 + v34);
  if (v54)
  {
    [v54 setContentHorizontalAlignment:0];
    v55 = *(void **)(v1 + v34);
    if (v55)
    {
      v56 = qword_1002E07D0;
      v58 = v55;
      if (v56 != -1) {
        swift_once(&qword_1002E07D0, sub_100073064);
      }
      uint64_t v59 = type metadata accessor for FontUseCase(0LL, v57);
      v60 = sub_10000A634(v59, (uint64_t)qword_1002F32C8);
      uint64_t v61 = *(void *)(v59 - 8);
      uint64_t v62 = (uint64_t)v133;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v133, v60, v59);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v62, 0LL, 1LL, v59);
      uint64_t v63 = (uint64_t)&v58[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase];
      swift_beginAccess(&v58[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase], v146, 0LL, 0LL);
      v64 = v134;
      sub_100013460(v63, v134);
      swift_beginAccess(v63, v141, 33LL, 0LL);
      sub_10000DBBC(v62, v63);
      swift_endAccess(v141);
      sub_10010EA18(v64);
      sub_1000077E0(v62, &qword_1002E25C0);
      sub_1000077E0(v64, &qword_1002E25C0);

      v2 = v135;
    }
  }

  id v51 = (void **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
  v52 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
  if (v52)
  {
    uint64_t v3 = v33;
LABEL_35:
    [v52 removeFromSuperview];
    uint64_t v53 = *v51;
    goto LABEL_36;
  }

  uint64_t v53 = 0LL;
  uint64_t v3 = v33;
LABEL_36:
  *id v51 = 0LL;

  v131 = OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView;
  uint64_t v65 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView);
  if (v65)
  {
    uint64_t v66 = (void *)v19[2];
    if (v66)
    {
      uint64_t v67 = v65;
      v68 = v66;
    }

    else
    {
      v69 = v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
      swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle, v145, 0LL, 0LL);
      v70 = v132;
      (*((void (**)(char *, uint64_t, uint64_t))v3 + 2))(v132, v69, v2);
      objc_super v71 = v65;
      v68 = (void *)sub_10007250C();
      (*((void (**)(char *, uint64_t))v3 + 1))(v70, v2);
      uint64_t v66 = 0LL;
    }

    v72 = v66;
    [v65 setTintColor:v68];
  }

  v73 = *(char **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel);
  v74 = (void *)v19[2];
  if (v74)
  {
    v75 = (void *)v19[2];
  }

  else
  {
    v76 = v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle, v144, 0LL, 0LL);
    v77 = v132;
    (*((void (**)(char *, uint64_t, uint64_t))v3 + 2))(v132, v76, v2);
    v75 = (void *)sub_10007250C();
    (*((void (**)(char *, uint64_t))v3 + 1))(v77, v2);
    v74 = 0LL;
  }

  v78 = v74;
  [v73 setTextColor:v75];

  v136 = *(char **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_titleLabel);
  v79 = v1;
  v80 = (void *)v19[3];
  if (v80)
  {
    v81 = (id)v19[3];
  }

  else
  {
    v126 = v21;
    v82 = v79 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
    swift_beginAccess(v79 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle, v143, 0LL, 0LL);
    v83 = (void (*)(char *, uint64_t, uint64_t))*((void *)v3 + 2);
    v84 = v130;
    v83(v130, v82, v2);
    v85 = v127;
    v83(v127, (uint64_t)v84, v2);
    v86 = (*((uint64_t (**)(char *, uint64_t))v3 + 11))(v85, v2);
    if (v86 == enum case for BreakoutDetails.BackgroundStyle.material(_:)
      || v86 == enum case for BreakoutDetails.BackgroundStyle.dark(_:))
    {
      v81 = [(id)objc_opt_self(UIColor) whiteColor];
      (*((void (**)(char *, uint64_t))v3 + 1))(v130, v2);
      uint64_t v21 = v126;
    }

    else
    {
      uint64_t v21 = v126;
      if (v86 != enum case for BreakoutDetails.BackgroundStyle.light(_:)) {
        goto LABEL_68;
      }
      v81 = [(id)objc_opt_self(UIColor) blackColor];
      (*((void (**)(char *, uint64_t))v3 + 1))(v130, v2);
    }
  }

  v87 = v80;
  [v136 setTextColor:v81];

  v88 = v137;
  v89 = *(char **)(v137 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_descriptionLabel);
  v90 = (void *)v19[4];
  if (v90)
  {
    v91 = (void *)v19[4];
  }

  else
  {
    v92 = v137 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
    swift_beginAccess(v137 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle, &v142, 0LL, 0LL);
    v93 = v132;
    (*((void (**)(char *, uint64_t, uint64_t))v3 + 2))(v132, v92, v2);
    v91 = (void *)sub_100072514();
    (*((void (**)(char *, uint64_t))v3 + 1))(v93, v2);
    v90 = 0LL;
  }

  v132 = v3;
  v94 = v90;
  v130 = v89;
  [v89 setTextColor:v91];

  v96 = *(void **)(v88 + v131);
  if (v96)
  {
    v97 = *(void *)((char *)v19 + *(int *)(v21 + 52));
    v141[3] = &type metadata for CGFloat;
    v141[4] = &protocol witness table for CGFloat;
    v141[0] = v97;
    v98 = v96;
    WordmarkView.referenceLineHeight.setter(v141);
  }

  v99 = (char *)v19 + *(int *)(v21 + 40);
  v100 = type metadata accessor for FontUseCase(0LL, v95);
  v101 = *(void *)(v100 - 8);
  v102 = v21;
  v103 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  v104 = (uint64_t)v133;
  v103(v133, v99, v100);
  v105 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56);
  v105(v104, 0LL, 1LL, v100);
  v106 = (uint64_t)&v73[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v73[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase], v141, 0LL, 0LL);
  v107 = (char *)v19;
  v108 = v134;
  sub_100013460(v106, v134);
  swift_beginAccess(v106, v140, 33LL, 0LL);
  sub_10000DBBC(v104, v106);
  swift_endAccess(v140);
  sub_10001252C(v108);
  sub_1000077E0(v104, &qword_1002E25C0);
  sub_1000077E0(v108, &qword_1002E25C0);
  v103((char *)v104, &v107[*(int *)(v102 + 44)], v100);
  v105(v104, 0LL, 1LL, v100);
  v109 = &v136[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v136[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase], v140, 0LL, 0LL);
  sub_100013460((uint64_t)v109, v108);
  swift_beginAccess(v109, v139, 33LL, 0LL);
  sub_10000DBBC(v104, (uint64_t)v109);
  swift_endAccess(v139);
  sub_10001252C(v108);
  sub_1000077E0(v104, &qword_1002E25C0);
  sub_1000077E0(v108, &qword_1002E25C0);
  v103((char *)v104, &v107[*(int *)(v102 + 48)], v100);
  v105(v104, 0LL, 1LL, v100);
  v110 = (uint64_t)&v130[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v130[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase], v139, 0LL, 0LL);
  sub_100013460(v110, v108);
  swift_beginAccess(v110, v138, 33LL, 0LL);
  sub_10000DBBC(v104, v110);
  swift_endAccess(v138);
  sub_10001252C(v108);
  sub_1000077E0(v104, &qword_1002E25C0);
  sub_1000077E0(v108, &qword_1002E25C0);
  v111 = v137;
  v112 = *(void **)(v137 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
  if (v112)
  {
    v113 = *(id *)(v137 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
    v114 = v135;
    v2 = (uint64_t)v132;
  }

  else
  {
    v115 = *(void **)(v137 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton);
    v114 = v135;
    v2 = (uint64_t)v132;
    if (!v115) {
      return;
    }
    v113 = v115;
  }

  v116 = v111 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
  swift_beginAccess(v116, v138, 0LL, 0LL);
  v117 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v118 = v129;
  v117(v129, v116, v114);
  v119 = v128;
  v117(v128, (uint64_t)v118, v114);
  v120 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v119, v114);
  v121 = 2LL;
  if (v120 != enum case for BreakoutDetails.BackgroundStyle.material(_:)
    && v120 != enum case for BreakoutDetails.BackgroundStyle.dark(_:))
  {
    if (v120 == enum case for BreakoutDetails.BackgroundStyle.light(_:))
    {
      v121 = 1LL;
      goto LABEL_64;
    }

    v124 = v112;
    _diagnoseUnexpectedEnumCase<A>(type:)(v114, v114);
    __break(1u);
LABEL_68:
    _diagnoseUnexpectedEnumCase<A>(type:)(v2, v2);
    __break(1u);
    return;
  }

  swift_bridgeObjectRelease(v21);
LABEL_29:
  uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore38ProductStarRatingsHistogramContentView_progressBarViews);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0) {
      uint64_t v37 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore38ProductStarRatingsHistogramContentView_progressBarViews);
    }
    else {
      uint64_t v37 = v21 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)(v1
                                       + OBJC_IVAR____TtC8AppStore38ProductStarRatingsHistogramContentView_progressBarViews));
    int64_t v23 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (!v23) {
      goto LABEL_41;
    }
LABEL_31:
    if (v23 >= 1)
    {
      uint64_t v34 = 0LL;
      do
      {
        if ((v21 & 0xC000000000000001LL) != 0) {
          uint64_t v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v21);
        }
        else {
          uint64_t v35 = (char *)*(id *)(v21 + 8 * v34 + 32);
        }
        v36 = v35;
        ++v34;
        *(void *)&v35[OBJC_IVAR____TtC8AppStore15ProgressBarView_percentage] = 0LL;
        [v35 setNeedsDisplay];
      }

      while (v23 != v34);
      goto LABEL_41;
    }

    __break(1u);
    goto LABEL_45;
  }

  int64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(*(void *)(v1
                                     + OBJC_IVAR____TtC8AppStore38ProductStarRatingsHistogramContentView_progressBarViews));
  if (v23) {
    goto LABEL_31;
  }
LABEL_41:
  *(void *)&v31 = swift_bridgeObjectRelease(v21).n128_u64[0];
LABEL_42:
  objc_msgSend((id)v1, "setNeedsLayout", v31);
  swift_release(v4);
}

  objc_msgSend( *(id *)&v16[OBJC_IVAR____TtC8AppStore20ReviewsContainerCell_summaryView],  "setHidden:",  v90,  v80.n128_f64[0]);
  cache = (char *)v81[2].cache;
  [*(id *)&cache[(void)v16] setHidden:v90];
  v114 = *(void **)&v16[OBJC_IVAR____TtC8AppStore20ReviewsContainerCell_noRatingsView];
  [v114 setHidden:v89];
  v115 = [v159 snapshotPageTraitEnvironment];
  v116 = *(void *)&v16[OBJC_IVAR____TtC8AppStore20ReviewsContainerCell_pageTraits];
  *(void *)&v16[OBJC_IVAR____TtC8AppStore20ReviewsContainerCell_pageTraits] = v115;
  swift_unknownObjectRetain(v115);
  objc_msgSend(v16, "setNeedsLayout", swift_unknownObjectRelease(v116).n128_f64[0]);
  swift_unknownObjectRelease(v115);
  v117 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
  inited = swift_initStackObject(v117, v165);
  *(_OWORD *)(inited + 16) = xmmword_100236DC0;
  v119 = *(void **)&cache[(void)v16];
  *(void *)(inited + 32) = v119;
  *(void *)(inited + 40) = v114;
  v166[0] = _swiftEmptyArrayStorage;
  v120 = v119;
  v121 = v114;
  v122 = [v120 isHidden];
  if ((v122 & 1) != 0)
  {
  }

  else
  {
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v122);
    v123 = *(void *)(v166[0] + 16LL);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v123);
    v124 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v123, v120);
    specialized ContiguousArray._endMutation()(v124);
  }

  v125 = v121;
  v126 = [v125 isHidden];
  if ((_DWORD)v126)
  {
    swift_release(inited);
  }

  else
  {
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v126);
    v127 = *(void *)(v166[0] + 16LL);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v127);
    v128 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v127, v125);
    specialized ContiguousArray._endMutation()(v128);
    swift_release(inited);
  }

  uint64_t v14 = v141;
  uint64_t v28 = v166[0];
  if ((v166[0] & 0x8000000000000000LL) != 0 || (v166[0] & 0x4000000000000000LL) != 0)
  {
LABEL_42:
    swift_bridgeObjectRetain(v28);
    v135 = _CocoaArrayWrapper.endIndex.getter(v134);
    swift_release(v28);
    if (v135) {
      goto LABEL_37;
    }
LABEL_43:
    v136 = swift_release(v28);
    (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v162, v140, v136);
    swift_unknownObjectRelease(v139);
    swift_release(v158);
    return;
  }

  if (!*(void *)(v166[0] + 16LL)) {
    goto LABEL_43;
  }
LABEL_37:
  if ((v28 & 0xC000000000000001LL) != 0)
  {
    v129 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v28);
    goto LABEL_40;
  }

  if (*(void *)(v28 + 16))
  {
    v129 = *(id *)(v28 + 32);
LABEL_40:
    v130 = v129;
    v131 = objc_msgSend(v16, "contentView", swift_release(v28).n128_f64[0]);
    v132 = v130;
    sub_1002170CC(v132, v131);
    swift_unknownObjectRelease(v139);

    v133 = swift_release(v158);
    (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v162, v140, v133);
    return;
  }

  __break(1u);
}

void sub_10007E2D4(uint64_t a1)
{
  v2 = v1;
  uint64_t v3 = (void *)(swift_isaMask & *(void *)v1);
  uint64_t v4 = v3[10];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = &v18[-v7 - 8];
  uint64_t v19 = v6;
  swift_beginAccess(&v1[v3[22]], v18, 33LL, 0LL);
  uint64_t v9 = v3[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, v9);
  uint64_t v11 = type metadata accessor for Dictionary( 0LL,  &type metadata for Int,  AssociatedTypeWitness,  &protocol witness table for Int);
  Dictionary.removeValue(forKey:)(&v20, &v19, v11);
  swift_endAccess(v18);
  uint64_t v12 = v20;
  if (v20)
  {
    swift_beginAccess(&v1[*(void *)((swift_isaMask & *(void *)v1) + 0xA8LL)], v18, 33LL, 0LL);
    uint64_t v13 = type metadata accessor for ViewRecycler(255LL, AssociatedTypeWitness);
    uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v13);
    uint64_t v15 = type metadata accessor for ReusePool(0LL, v13, WitnessTable);
    char v16 = ReusePool.recycle(_:)(&v20, v15);
    swift_endAccess(v18);
    if ((v16 & 1) != 0)
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v5 + 16))( v8,  &v2[*(void *)((swift_isaMask & *(void *)v2) + 0x60LL)],  v4);
      (*(void (**)(void *, uint64_t, uint64_t))(v9 + 64))(v12, v4, v9);

      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
    }

    else
    {
    }
  }

void sub_10007E4AC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_isaMask & *(void *)v3;
  uint64_t v7 = *(void *)(v6 + 0x50);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(a1);
  double v10 = (char *)&v21 - v9;
  if (v11)
  {
    uint64_t ObjectType = swift_getObjectType(a1);
    uint64_t v13 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FocusExtendableItem);
    uint64_t v14 = v13 ? v13 : 0LL;
    uint64_t v15 = v13 ? a1 : 0LL;
    if (v15)
    {
      uint64_t v16 = swift_getObjectType(v15);
      uint64_t v24 = a2;
      uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
      id v18 = a1;
      uint64_t v22 = v16;
      id v23 = v18;
      uint64_t v19 = (void *)v17(v16, v14);
      [v19 setEnabled:0];

      (*(void (**)(char *, char *, uint64_t))(v8 + 16))( v10,  &v3[*(void *)((swift_isaMask & *(void *)v3) + 0x60LL)],  v7);
      uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)(v6 + 88) + 32LL))(v7);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      if (__OFADD__(v24, 1LL))
      {
        __break(1u);
      }

      else
      {
        if (v20 == v24 + 1) {
          sub_1000E8264(v15, v3, v22, v14);
        }
      }
    }
  }

id sub_10007E62C(uint64_t a1)
{
  v2 = v1;
  uint64_t v4 = (void *)(swift_isaMask & *(void *)v1);
  uint64_t v5 = v4[10];
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v28 - v7;
  swift_beginAccess(&v1[v4[21]], &v35, 33LL, 0LL);
  uint64_t v9 = v4[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, v9);
  uint64_t v11 = type metadata accessor for ViewRecycler(255LL, AssociatedTypeWitness);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v11);
  uint64_t v13 = type metadata accessor for ReusePool(0LL, v11, WitnessTable);
  ReusePool.dequeue()(v34, v13);
  __n128 v14 = swift_endAccess(&v35);
  uint64_t v15 = *(void **)&v34[0];
  if (!*(void *)&v34[0])
  {
    (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 16))( v8,  &v2[*(void *)((swift_isaMask & *(void *)v2) + 0x60LL)],  v5,  v14);
    uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v5, v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    [v2 addSubview:v15];
  }

  id v16 = v15;
  [v16 transform];
  v34[0] = v35;
  v34[1] = v36;
  v34[2] = v37;
  __int128 v35 = 0x3FF0000000000000uLL;
  *(void *)&__int128 v36 = 0LL;
  *((void *)&v36 + 1) = 0x3FF0000000000000LL;
  __int128 v37 = 0uLL;
  if ((static CGAffineTransform.== infix(_:_:)(v34, &v35) & 1) != 0)
  {
    uint64_t v17 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
    id v18 = protocol witness table for UIView;
    uint64_t v32 = v17;
    v33 = protocol witness table for UIView;
    v31.receiver = v16;
  }

  else
  {
    UIView.withUntransformedFrame.getter(&v31);

    uint64_t v17 = v32;
    id v18 = v33;
  }

  sub_1000112B0(&v31, v17);
  sub_10007DA4C(a1);
  dispatch thunk of LayoutView.frame.setter(v17, v18, v19);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v31);
  [v16 setAutoresizingMask:0];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:1];
  id v20 = v16;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  v31.receiver = v2;
  v31.super_class = ObjectType;
  objc_msgSend(v20, "setSemanticContentAttribute:", objc_msgSendSuper2(&v31, "semanticContentAttribute"));

  id v22 = v20;
  BOOL v23 = [v22 effectiveUserInterfaceLayoutDirection] == (id)1;
  id v24 = [v22 layer];
  [v24 setFlipsHorizontalAxis:v23];

  uint64_t v29 = a1;
  id v30 = v22;
  swift_beginAccess(&v2[*(void *)((swift_isaMask & *(void *)v2) + 0xB0LL)], &v31, 33LL, 0LL);
  uint64_t v25 = type metadata accessor for Dictionary( 0LL,  &type metadata for Int,  AssociatedTypeWitness,  &protocol witness table for Int);
  id v26 = v22;
  Dictionary.subscript.setter(&v30, &v29, v25);
  swift_endAccess(&v31);
  return v26;
}

void sub_10007E988(void *a1)
{
  id v1 = a1;
  sub_10007DDAC();
}

void sub_10007E9BC(uint64_t a1)
{
  v2 = v1;
  uint64_t v3 = (void *)(swift_isaMask & *v1);
  uint64_t v4 = v3[10];
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&aBlock[-1] - v8;
  double v10 = (char *)v2 + v3[24];
  *(void *)double v10 = v11;
  v10[8] = v12 & 1;
  uint64_t v13 = (char *)v2 + *(void *)((*v6 & *v2) + 0xB8LL);
  if ((v13[8] & 1) == 0)
  {
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = (char *)v2 + *(void *)((*v6 & *v2) + 0x60LL);
    id v16 = *(void (**)(char *, char *, uint64_t, __n128))(v5 + 16);
    v16(v9, v15, v4, v7);
    uint64_t v17 = v3[11];
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 32))(v4, v17);
    double v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v9, v4);
    if (v14 < v18)
    {
      id v20 = [v2 layer];
      id v21 = [v20 animationKeys];

      if (v21
        && (uint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for String),
            v21,
            uint64_t v23 = *(void *)(v22 + 16),
            swift_bridgeObjectRelease(v22),
            v23))
      {
        uint64_t v24 = 131076LL;
      }

      else
      {
        uint64_t v24 = 4LL;
      }

      sub_10007DA4C(v14);
      double v26 = v25;
      double v28 = v27;
      double v30 = v29;
      double v32 = v31;
      ((void (*)(char *, char *, uint64_t))v16)(v9, v15, v4);
      (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(v17 + 24))(v48, v4, v17);
      v19(v9, v4);
      double v33 = CGRect.adding(outsets:)(v48[0], v48[1], v48[2], v48[3], v26, v28, v30, v32);
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      uint64_t v39 = v38;
      v40 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
      uint64_t v41 = (double *)swift_allocObject(&unk_100288718, 56LL, 7LL);
      *((void *)v41 + 2) = v2;
      v41[3] = v33;
      *((void *)v41 + 4) = v35;
      *((void *)v41 + 5) = v37;
      *((void *)v41 + 6) = v39;
      aBlock[4] = sub_1000801B8;
      v47 = v41;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_100140110;
      aBlock[3] = &unk_100288730;
      uint64_t v42 = _Block_copy(aBlock);
      v43 = v47;
      v44 = v2;
      swift_release(v43);
      [v40 animateWithDuration:v24 delay:v42 options:0 animations:0.33 completion:0.0];
      _Block_release(v42);
    }
  }

uint64_t sub_10007EC78()
{
  id v1 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0xB8LL);
  if (v1[8] == 1) {
    return *(void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0xC0LL));
  }
  else {
    return *(void *)v1;
  }
}

Class sub_10007ECC0(void *a1)
{
  id v1 = a1;
  v2 = sub_10007ED14();

  sub_1000038E8((uint64_t *)&unk_1002E3880);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2);
  return isa;
}

void *sub_10007ED14()
{
  id v1 = v0;
  v2 = (void *)(swift_isaMask & *v0);
  uint64_t v3 = v2[10];
  uint64_t v4 = v2[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL, v4);
  __chkstk_darwin(AssociatedTypeWitness);
  __n128 v7 = (char *)&v32 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  __n128 v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = (char *)v1 + v2[23];
  if (v15[8] == 1)
  {
    uint64_t v15 = (char *)v1 + v2[24];
    if ((v15[8] & 1) != 0) {
      return _swiftEmptyArrayStorage;
    }
  }

  uint64_t v33 = v11;
  uint64_t v34 = v10;
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = (char *)v1 + v2[12];
  uint64_t v18 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
  v18(v14, v17, v3, v12);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  id v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v14, v3);
  if (v16 >= v19) {
    return _swiftEmptyArrayStorage;
  }
  id v21 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0xB0LL));
  swift_beginAccess(v21, v37, 32LL, 0LL);
  uint64_t v22 = *v21;
  uint64_t v35 = v16;
  uint64_t v23 = swift_getAssociatedTypeWitness(0LL, v4);
  Dictionary.subscript.getter(&v36, &v35, v22, &type metadata for Int, v23, &protocol witness table for Int);
  uint64_t v24 = v36;
  if (v36)
  {
    swift_endAccess(v37);
    uint64_t v25 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
    uint64_t v26 = swift_allocObject(v25, 40LL, 7LL);
    *(_OWORD *)(v26 + 16) = xmmword_100236BD0;
    *(void *)(v26 + 32) = v24;
  }

  else
  {
    swift_endAccess(v37);
    id v28 = sub_10007E62C(v16);
    int v29 = *((unsigned __int8 *)v1 + *(void *)((swift_isaMask & *v1) + 0x80LL));
    id v30 = v28;
    if (v29 == 1)
    {
      ((void (*)(char *, char *, uint64_t))v18)(v14, v17, v3);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v16, v3, v4);
      v20(v14, v3);
      ((void (*)(char *, char *, uint64_t))v18)(v14, v17, v3);
      (*(void (**)(char *, uint64_t, id, uint64_t, uint64_t))(v4 + 56))(v7, v16, v30, v3, v4);
      v20(v14, v3);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v34);
    }

    uint64_t v31 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
    uint64_t v26 = swift_allocObject(v31, 40LL, 7LL);
    *(_OWORD *)(v26 + 16) = xmmword_100236BD0;
    *(void *)(v26 + 32) = v30;
  }

  v37[0] = v26;
  specialized Array._endMutation()(v26);
  return (void *)v37[0];
}

void sub_10007F010(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = *(void *)((swift_isaMask & *v4) + 0x50LL);
  uint64_t v57 = *(void *)(v10 - 8);
  __chkstk_darwin(ObjectType);
  uint64_t v54 = (char *)&v51 - v11;
  uint64_t v13 = *(void *)(v12 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL, v13);
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v56 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v16 = (char *)&v51 - v15;
  sub_10007F450(v17, a1, a2, a3, a4);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  v58 = v4;
  v63.receiver = v4;
  v63.super_class = ObjectType;
  id v22 = objc_msgSendSuper2(&v63, "focusItemsInRect:", a1, a2, a3, a4);
  uint64_t v23 = sub_1000038E8((uint64_t *)&unk_1002E4E00);
  uint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

  uint64_t v64 = v24;
  if (v19 == v21) {
    return;
  }
  if (v21 < v19)
  {
    __break(1u);
    goto LABEL_19;
  }

  if (v19 >= v21)
  {
LABEL_19:
    __break(1u);
    return;
  }

  uint64_t v59 = v16;
  uint64_t v25 = (void *)((char *)v58 + *(void *)((swift_isaMask & *v58) + 0xB0LL));
  v52 = (char *)v58 + *(void *)((swift_isaMask & *v58) + 0x60LL);
  uint64_t v53 = v21;
  do
  {
    swift_beginAccess(v25, v62, 32LL, 0LL);
    uint64_t v27 = *v25;
    uint64_t v60 = v19;
    uint64_t v28 = swift_getAssociatedTypeWitness(0LL, v13);
    Dictionary.subscript.getter(&v61, &v60, v27, &type metadata for Int, v28, &protocol witness table for Int);
    id v29 = v61;
    if (v61)
    {
      objc_msgSend(v61, "frame", swift_endAccess(v62).n128_f64[0]);
      v67.origin.x = v30;
      v67.origin.y = v31;
      v67.size.width = v32;
      v67.size.height = v33;
      v65.origin.x = a1;
      v65.origin.y = a2;
      v65.size.width = a3;
      v65.size.height = a4;
      if (CGRectIntersectsRect(v65, v67))
      {
        id v29 = v29;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        unint64_t v35 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v34 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v35 >= v34 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1LL);
        }
        uint64_t v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v29);
        specialized Array._endMutation()(v26);
      }
    }

    else
    {
      swift_endAccess(v62);
      id v36 = sub_10007E62C(v19);
      uint64_t v37 = v57;
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
      uint64_t v39 = v54;
      v40 = v52;
      v38(v54, v52, v10);
      uint64_t v41 = v59;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(v19, v10, v13);
      uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
      v42(v39, v10);
      v38(v39, v40, v10);
      (*(void (**)(char *, uint64_t, id, uint64_t, uint64_t))(v13 + 56))(v41, v19, v36, v10, v13);
      v42(v39, v10);
      [v36 frame];
      v68.origin.x = v43;
      v68.origin.y = v44;
      v68.size.width = v45;
      v68.size.height = v46;
      v66.origin.x = a1;
      v66.origin.y = a2;
      v66.size.width = a3;
      v66.size.height = a4;
      if (CGRectIntersectsRect(v66, v68))
      {
        id v47 = v36;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
        unint64_t v49 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v48 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        uint64_t v21 = v53;
        if (v49 >= v48 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1LL);
        }
        uint64_t v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
        specialized Array._endMutation()(v50);

        (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v56);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v56);

        uint64_t v21 = v53;
      }
    }

    ++v19;
  }

  while (v21 != v19);
}

void sub_10007F450(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  void (*v33)(double *__return_ptr, uint64_t, uint64_t);
  double v34;
  uint64_t v35;
  double v36;
  double v37;
  char *v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  double v42[10];
  void v43[11];
  CGRect v44;
  CGRect v45;
  CGRect v46;
  uint64_t v6 = v5;
  uint64_t v11 = swift_isaMask & *v5;
  uint64_t v12 = *(void *)(v11 + 0x50);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(a1);
  uint64_t v16 = (char *)&v42[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v42[-1] - v17;
  [v6 frame];
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  uint64_t v27 = (char *)v6 + *(void *)((swift_isaMask & *v6) + 0x60LL);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v28(v18, v27, v12);
  uint64_t v29 = *(void *)(v11 + 88);
  CGFloat v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 32);
  uint64_t v31 = v30(v12, v29);
  CGFloat v32 = *(void (**)(char *, uint64_t))(v13 + 8);
  v32(v18, v12);
  if (v31 >= 1)
  {
    v44.origin.x = v20;
    v44.origin.y = v22;
    v44.size.width = v24;
    v44.size.height = v26;
    if (!CGRectIsEmpty(v44))
    {
      v28(v18, v27, v12);
      CGFloat v33 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v29 + 24);
      v33(v42, v12, v29);
      v32(v18, v12);
      unint64_t v34 = v42[4] + v42[6];
      v28(v18, v27, v12);
      v33((double *)v43, v12, v29);
      v32(v18, v12);
      unint64_t v35 = v43[9];
      v45.origin.x = a2;
      v45.origin.y = a3;
      v45.size.width = a4;
      v45.size.height = a5;
      id v36 = ceil(CGRectGetMinX(v45) / v34);
      if ((~*(void *)&v36 & 0x7FF0000000000000LL) != 0)
      {
        if (v36 > -9.22337204e18)
        {
          if (v36 < 9.22337204e18)
          {
            v46.origin.x = a2;
            v46.origin.y = a3;
            v46.size.width = a4;
            v46.size.height = a5;
            uint64_t v37 = floor(CGRectGetMaxX(v46) / v34);
            if ((~*(void *)&v37 & 0x7FF0000000000000LL) != 0)
            {
              if (v37 > -9.22337204e18)
              {
                if (v37 < 9.22337204e18)
                {
                  if ((unsigned __int128)((uint64_t)v36 * (__int128)v35) >> 64 == ((uint64_t)v36 * v35) >> 63)
                  {
                    uint64_t v38 = v16;
                    uint64_t v39 = (void (*)(uint64_t, uint64_t))v30;
                    v40 = (uint64_t)v37;
                    v28(v38, v27, v12);
                    v39(v12, v29);
                    v32(v38, v12);
LABEL_20:
                    __break(1u);
                    return;
                  }

LABEL_16:
            __break(1u);
            goto LABEL_17;
          }

  swift_bridgeObjectRelease_n(v23, 2LL);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_delegate);
  if (Strong)
  {
    CGFloat v30 = Strong;
    ArcadeSeeAllGamesDiffablePagePresenter.beingBatchFacetUpdates()();
    swift_unknownObjectRelease(v30);
  }

  uint64_t v31 = &v20[OBJC_IVAR____TtC8AppStoreP33_AE4AB5AC2158F15A99DD367B65D1B63820FacetAlertController_facetAlertDelegate];
  *((void *)v31 + 1) = &off_10028B0B8;
  swift_unknownObjectWeakAssign(v31, v2);
  sub_1000881A8((uint64_t)v41);
  CGFloat v32 = v42;
  if (!v42) {
    goto LABEL_23;
  }
  CGFloat v33 = v43;
  sub_1000112B0(v41, v42);
  char *v8 = v20;
  swift_storeEnumTagMultiPayload(v8, v40, 11LL);
  unint64_t v34 = qword_1002E0E78;
  unint64_t v35 = v20;
  if (v34 != -1) {
    swift_once(&qword_1002E0E78, sub_10016D734);
  }
  id v36 = type metadata accessor for FlowPresentationHints(0LL);
  uint64_t v37 = sub_10000A634(v36, (uint64_t)qword_1002F4FA0);
  uint64_t v38 = type metadata accessor for ReferrerData(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56LL))(v6, 1LL, 1LL, v38);
  (*(void (**)(void *, uint64_t, void, void, char *, uint64_t, uint64_t))(v33 + 16))( v8,  v37,  0LL,  0LL,  v6,  v32,  v33);
  sub_1000077E0((uint64_t)v6, &qword_1002E6600);
  sub_100011CF0((uint64_t)v8);
  _s8AppStore17PillOverlayLayoutVwxx_0(v41);
  uint64_t v39 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetAlertController);
  *(void *)(v2 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetAlertController) = v35;
}

  CGFloat v32 = *(void (**)(char *, uint64_t))(v37 + 8);
  v32(v26, v20);
  v32(v25, v20);
  return v31 & 1;
}

  uint64_t v15 = swift_bridgeObjectRelease(v14);
  uint64_t v16 = MixedMediaLockup.trailers.getter(v15);
  uint64_t v14 = v16;
  if (!((unint64_t)v16 >> 62))
  {
    if (*(void *)((v16 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_18;
    }
LABEL_24:
    uint64_t v17 = 0LL;
    goto LABEL_25;
  }

  if (v16 >= 0) {
    v16 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  if (!_CocoaArrayWrapper.endIndex.getter(v16)) {
    goto LABEL_24;
  }
LABEL_18:
  if ((v14 & 0xC000000000000001LL) != 0)
  {
LABEL_48:
    uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v14);
    goto LABEL_25;
  }

  if (!*(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    __break(1u);
    goto LABEL_50;
  }

  uint64_t v17 = *(void *)(v14 + 32);
  swift_retain(v17);
LABEL_25:
  swift_bridgeObjectRelease(v14);
  swift_getObjectType(a2);
  sub_100029D00((uint64_t)a2, a3, a4);
  a4 = v18;
  a3 = v19;
  swift_release(v17);
  swift_release(v4);
  double v21 = MixedMediaLockup.screenshots.getter(v20);
  uint64_t v14 = v21;
  if ((unint64_t)v21 >> 62)
  {
    if (v21 >= 0) {
      v21 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v21))
    {
LABEL_27:
      if ((v14 & 0xC000000000000001LL) == 0)
      {
        if (!*(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10))
        {
          __break(1u);
          goto LABEL_52;
        }

        uint64_t v4 = *(void *)(v14 + 32);
        swift_retain(v4);
        goto LABEL_30;
      }

  CGFloat v26 = 0;
  return v26 & 1;
}

  __break(1u);
  return result;
}

  CGFloat v33 = *(void (**)(char *, uint64_t))(v38 + 8);
  v33(v27, v8);
  v33(v19, v8);
  return v32 & 1;
}

Class sub_10007F768(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9 = a1;
  sub_10007F010(a2, a3, a4, a5);
  uint64_t v11 = v10;

  sub_1000038E8((uint64_t *)&unk_1002E4E00);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  return isa;
}

id sub_10007F7EC(void *a1)
{
  v2 = v1;
  uint64_t ObjectType = swift_getObjectType(v1);
  uint64_t v5 = *v1;
  uint64_t v6 = swift_isaMask;
  id v7 = [a1 nextFocusedView];
  if (!v7 || (uint64_t v8 = v7, v9 = [v7 isDescendantOfView:v2], v8, !v9))
  {
    v20.receiver = v2;
    uint64_t v15 = &v20;
LABEL_8:
    v15->super_class = (Class)ObjectType;
    return -[objc_super shouldUpdateFocusInContext:](v15, "shouldUpdateFocusInContext:", a1, v19);
  }

  id v10 = [a1 previouslyFocusedView];
  id v11 = [a1 nextFocusedView];
  uint64_t v12 = v11;
  if (!v10)
  {
    if (!v11) {
      return 0LL;
    }
    goto LABEL_12;
  }

  if (!v11)
  {
    uint64_t v12 = v10;
LABEL_12:

    goto LABEL_13;
  }

  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
  id v13 = v10;
  char v14 = static NSObject.== infix(_:_:)(v13, v12);

  if ((v14 & 1) != 0) {
    return 0LL;
  }
LABEL_13:
  id v17 = [a1 nextFocusedView];
  char v18 = sub_100080468(v17, *(void *)((v6 & v5) + 0x50), *(void *)((v6 & v5) + 0x58));

  if ((v18 & 1) != 0)
  {
    double v19 = v2;
    uint64_t v15 = (objc_super *)&v19;
    goto LABEL_8;
  }

  return 0LL;
}

uint64_t sub_10007F980(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  LOBYTE(a1) = sub_10007F7EC(v4);

  return a1 & 1;
}

void sub_10007F9CC(void *a1, uint64_t a2)
{
  v14.receiver = v2;
  v14.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v14, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  id v5 = [a1 nextFocusedView];
  if (v5)
  {
    uint64_t v6 = v5;
    unsigned int v7 = [v5 isDescendantOfView:v2];

    if (v7)
    {
      id v8 = [a1 nextFocusedView];
      uint64_t v9 = sub_10007FAC0(v8);
      char v11 = v10;

      uint64_t v12 = (char *)v2 + *(void *)((swift_isaMask & *v2) + 0xB8LL);
      uint64_t v13 = *(void *)v12;
      *(void *)uint64_t v12 = v9;
      v12[8] = v11 & 1;
      sub_10007E9BC(v13);
    }
  }

uint64_t sub_10007FAC0(void *a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v3 = (void *)(swift_isaMask & *v1);
  id v4 = (void *)((char *)v1 + v3[22]);
  uint64_t v5 = swift_beginAccess(v4, v32, 0LL, 0LL);
  uint64_t v30 = (uint64_t)&v30;
  uint64_t v31 = *v4;
  uint64_t v6 = v31;
  __chkstk_darwin(v5);
  uint64_t v7 = v3[10];
  uint64_t v8 = v3[11];
  uint64_t v27 = v7;
  uint64_t v28 = v8;
  id v29 = a1;
  __chkstk_darwin(v9);
  uint64_t v23 = v7;
  uint64_t v24 = v8;
  double v25 = sub_10008059C;
  uint64_t v26 = v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, v8);
  uint64_t v12 = type metadata accessor for Dictionary( 0LL,  &type metadata for Int,  AssociatedTypeWitness,  &protocol witness table for Int);
  swift_bridgeObjectRetain(v6);
  id v13 = a1;
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v12);
  Sequence.first(where:)(&v33, sub_1000805EC, v22, v12, WitnessTable);
  swift_bridgeObjectRelease(v31);
  id v15 = v34;
  if (!v34)
  {
    uint64_t v31 = *v4;
    __chkstk_darwin(v31);
    uint64_t v27 = v7;
    uint64_t v28 = v8;
    id v29 = v13;
    __chkstk_darwin(v17);
    uint64_t v23 = v7;
    uint64_t v24 = v8;
    double v25 = sub_100080620;
    uint64_t v26 = v18;
    swift_bridgeObjectRetain(v19);
    Sequence.first(where:)(&v33, sub_100080644, v22, v12, WitnessTable);
    uint64_t v20 = v31;

    swift_bridgeObjectRelease(v20);
    if (v34)
    {
      uint64_t v16 = v33;

      return v16;
    }

    return 0LL;
  }

  uint64_t v16 = v33;

  return v16;
}

void sub_10007FD18(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_10007F9CC(v6, (uint64_t)v7);
}

void sub_10007FD80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v36 = a2;
  uint64_t v5 = *(void *)((swift_isaMask & *v2) + 0x50LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  id v8 = (char *)&v30 - v7;
  uint64_t v10 = *(void *)(v9 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL, v10);
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  objc_super v14 = (char *)&v30 - v13;
  sub_100066CB4(a1);
  if ((v15 & 1) != 0)
  {
    CGFloat v32 = v14;
    uint64_t v33 = v12;
    uint64_t v34 = AssociatedTypeWitness;
    uint64_t v35 = a1;
    uint64_t v16 = swift_isaMask & *v3;
    uint64_t v17 = (char *)v3 + *(void *)(v16 + 0xB8);
    if ((v17[8] & 1) == 0)
    {
      uint64_t v18 = (char *)v3 + *(void *)((swift_isaMask & *v3) + 0x68LL);
      uint64_t v19 = *(void (**)(char *, uint64_t))v18;
      if (*(void *)v18)
      {
        uint64_t v31 = *(void *)v17;
        uint64_t v20 = *((void *)v18 + 1);
        double v21 = (char *)v3 + *(void *)(v16 + 96);
        uint64_t v22 = v6;
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
        uint64_t v24 = v8;
        v23(v8, v21, v5);
        uint64_t v25 = v10;
        uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 40);
        __n128 v27 = swift_retain(v20);
        uint64_t v29 = v31;
        uint64_t v28 = v32;
        v26(v31, v5, v25, v27);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v5);
        v19(v28, v29);
        sub_10000A450((uint64_t)v19, v20);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v34);
      }
    }

    sub_10007FF70(v3, v35, v36);
  }

  else
  {
    sub_10007FF70(v3, a1, v36);
  }

void sub_10007FF70(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_isaMask & *a1;
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
  sub_10006B300();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  id v8 = (objc_class *)type metadata accessor for HorizontalShelfView(0LL, *(void *)(v5 + 80), *(void *)(v5 + 88), v7);
  v9.receiver = a1;
  v9.super_class = v8;
  objc_msgSendSuper2(&v9, "pressesEnded:withEvent:", isa, a3);
}

double sub_100080020(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
  unint64_t v8 = sub_10006B300();
  uint64_t v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v7, v8);
  id v10 = a4;
  id v11 = a1;
  sub_10007FD80(v9, (uint64_t)a4);

  *(void *)&double result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

void sub_1000800B0()
{
}

uint64_t type metadata accessor for HorizontalShelfView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006B694(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HorizontalShelfView);
}

uint64_t getEnumTagSinglePayload for HorizontalShelfLayout(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HorizontalShelfLayout( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0LL;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 80) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 80) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 64) = a2 + 1;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for HorizontalShelfLayout()
{
  return &type metadata for HorizontalShelfLayout;
}

uint64_t sub_100080194()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

id sub_1000801B8()
{
  return objc_msgSend( *(id *)(v0 + 16),  "scrollRectToVisible:animated:",  0,  *(double *)(v0 + 24),  *(double *)(v0 + 32),  *(double *)(v0 + 40),  *(double *)(v0 + 48));
}

uint64_t sub_1000801D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000801E4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_1000801EC()
{
  id v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL, *(void *)(v2 + 88));
  uint64_t v4 = type metadata accessor for ViewRecycler(0LL, AssociatedTypeWitness);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = (void *)((char *)v1 + *(void *)(v2 + 104));
  *uint64_t v7 = 0LL;
  v7[1] = 0LL;
  *(void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x70LL)) = 3LL;
  *((_BYTE *)v1 + *(void *)((swift_isaMask & *v1) + 0x78LL)) = 0;
  *((_BYTE *)v1 + *(void *)((swift_isaMask & *v1) + 0x80LL)) = 0;
  uint64_t v8 = *(void *)((swift_isaMask & *v1) + 0x88LL);
  id v9 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0LL));
  *(void *)((char *)v1 + v8) = CompoundScrollObserver.init(children:)(&_swiftEmptyArrayStorage);
  id v10 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x90LL));
  *id v10 = 0LL;
  v10[1] = 0LL;
  *((_BYTE *)v1 + *(void *)((swift_isaMask & *v1) + 0x98LL)) = 0;
  id v11 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0xA0LL);
  *(void *)id v11 = 0LL;
  *((void *)v11 + 1) = 0LL;
  v11[16] = 1;
  ViewRecycler.init()(AssociatedTypeWitness);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v4);
  ReusePool.init(recycler:limit:)(v6, 5LL, v4, WitnessTable);
  uint64_t v13 = *(void *)((swift_isaMask & *v1) + 0xB0LL);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0LL, &type metadata for Int, AssociatedTypeWitness, 0LL, 0LL);
  uint64_t v15 = static Array._allocateUninitialized(_:)(0LL, TupleTypeMetadata2);
  *(void *)((char *)v1 + v13) = Dictionary.init(dictionaryLiteral:)( v15,  &type metadata for Int,  AssociatedTypeWitness,  &protocol witness table for Int);
  uint64_t v16 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0xB8LL);
  *(void *)uint64_t v16 = 0LL;
  v16[8] = 1;
  uint64_t v17 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0xC0LL);
  *(void *)uint64_t v17 = 0LL;
  v17[8] = 1;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/HorizontalShelfView.swift",  34LL,  2LL,  245LL,  0);
  __break(1u);
}

unint64_t sub_100080468(void *a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL, a3);
  id v7 = a1;
  while (1)
  {
    uint64_t v9 = swift_dynamicCastUnknownClass(v7, AssociatedTypeWitness);
    unint64_t v8 = v9 != 0;
    if (v9) {
      break;
    }
    uint64_t v11 = type metadata accessor for HorizontalShelfView(0LL, a2, a3, v10);
    if (swift_dynamicCastClass(v7, v11)) {
      break;
    }
    uint64_t v12 = objc_opt_self(&OBJC_CLASS___UIControl);
    uint64_t v13 = (void *)swift_dynamicCastObjCClass(v7, v12);
    if (v13)
    {
    }

    unint64_t v8 = (unint64_t)[v7 superview];

    id v7 = (id)v8;
    if (!v8) {
      return v8;
    }
  }

  return v8;
}

void sub_100080570()
{
}

uint64_t sub_10008059C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 32);
  sub_10000DFD4(0LL, (unint64_t *)&unk_1002E4DF0, &OBJC_CLASS___NSObject_ptr);
  return static NSObject.== infix(_:_:)(a2, v4) & 1;
}

uint64_t sub_1000805EC(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 32))(*a1, a1[1]) & 1;
}

id sub_100080620(uint64_t a1, uint64_t a2)
{
  return [*(id *)(v2 + 32) isDescendantOfView:a2];
}

uint64_t sub_100080644(void *a1)
{
  return sub_1000805EC(a1) & 1;
}

void sub_10008065C()
{
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 safeAreaLayoutGuide];

    [v3 layoutFrame];
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1000806F8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType(v0);
  uint64_t v3 = sub_1000038E8(&qword_1002E5280);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_10012AD20();
  uint64_t v8 = SearchResultsDiffablePagePresenter.onShowNoResults.getter(v7);
  uint64_t v9 = sub_1000038E8(&qword_1002E5288);
  unint64_t v10 = sub_100080E00();
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v13, v9, v10);
  EventEmitter.addObserver<A>(on:target:method:)(v13, v1, sub_1000809B8, 0LL, v9, ObjectType, v10);
  swift_release(v8);
  _s8AppStore17PillOverlayLayoutVwxx_0(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_10008080C()
{
  uint64_t v1 = v0;
  id v2 = [v0 collectionView];
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 setHidden:1];
  }

  uint64_t v4 = SearchResultsUnavailableReason.title.getter();
  uint64_t v6 = v5;
  uint64_t v7 = SearchResultsUnavailableReason.message.getter();
  uint64_t v9 = v8;
  id v10 = objc_allocWithZone((Class)type metadata accessor for EmptyStateView(0LL));
  uint64_t v11 = sub_1000ECF34(v4, v6, v7, v9);
  id v12 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
  uint64_t v13 = (void *)OverlayViewController.init(overlayView:)(v11);
  uint64_t v14 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController];
  id v16 = v15;
  static ViewControllerContainment.remove(_:)(v15);

  uint64_t v17 = *(void **)&v1[v14];
  *(void *)&v1[v14] = v13;
  id v18 = v13;

  uint64_t v19 = *(void **)&v1[v14];
  id v31 = v19;
  id v20 = [v1 view];
  if (v20)
  {
    double v21 = v20;
    id v22 = [v20 safeAreaLayoutGuide];

    [v22 layoutFrame];
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    uint64_t v30 = v29;

    v32[0] = v24;
    v32[1] = v26;
    v32[2] = v28;
    v32[3] = v30;
    char v33 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v19, v1, v32);
  }

  else
  {
    __break(1u);
  }

void (*sub_1000809B8(void *a1))()
{
  *(void *)(swift_allocObject(&unk_100288768, 24LL, 7LL) + 16) = a1;
  id v2 = a1;
  return sub_100080E70;
}

void sub_100080A0C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1000038E8(&qword_1002E5278);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10017F98C(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  int v8 = enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[qword_1002F3618]);
  id v10 = Strong;
  if ((_DWORD)a1 != v8)
  {
    if (Strong)
    {
      id v33 = [Strong searchController];
      id v34 = [v33 searchBar];

      id v35 = [v34 searchField];
      if (v35)
      {
        id v36 = [v35 rightView];

        if (v36)
        {
          uint64_t v37 = objc_opt_self(&OBJC_CLASS___UIActivityIndicatorView);
          if (!swift_dynamicCastObjCClass(v36, v37))
          {
            swift_unknownObjectRelease(v10);

            goto LABEL_17;
          }

          sub_1001596EC(0LL);
        }
      }

      swift_unknownObjectRelease(v10);
    }

uint64_t sub_100080D5C()
{
  return sub_1000142AC(v0 + qword_1002F3618);
}

uint64_t sub_100080D6C(uint64_t a1)
{
  return sub_1000142AC(a1 + qword_1002F3618);
}

uint64_t type metadata accessor for SearchResultsDiffablePageViewController(uint64_t a1)
{
  uint64_t result = qword_1002E4E38;
  if (!qword_1002E4E38) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchResultsDiffablePageViewController);
  }
  return result;
}

uint64_t sub_100080DB8(uint64_t a1)
{
  id v2 = &unk_100239CE8;
  return swift_initClassMetadata2(a1, 256LL, 1LL, &v2, a1 + 1016);
}

uint64_t sub_100080DF8()
{
  return type metadata accessor for SearchResultsDiffablePageViewController(0LL);
}

unint64_t sub_100080E00()
{
  unint64_t result = qword_1002E5290;
  if (!qword_1002E5290)
  {
    uint64_t v1 = sub_100003974(&qword_1002E5288);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SyncEvent<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002E5290);
  }

  return result;
}

uint64_t sub_100080E4C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100080E70()
{
}

double sub_100080E90(uint64_t a1, double a2, uint64_t a3, void *a4)
{
  uint64_t v7 = GameCenterReengagement.lockup.getter();
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = [a4 traitCollection];
    id v10 = [v9 userInterfaceIdiom];

    if (v10 == (id)2)
    {
      swift_release(v8);
    }

    else
    {
      type metadata accessor for SmallLockupView();
      if (qword_1002E09F8 != -1) {
        swift_once(&qword_1002E09F8, sub_1000B1648);
      }
      sub_10001D844(&xmmword_1002F3D20, &v13);
      *((void *)&v17 + 1) = &type metadata for Double;
      *(void *)&__int128 v18 = &protocol witness table for Double;
      v16.i64[0] = 0LL;
      _s8AppStore17PillOverlayLayoutVwxx_0((void *)v15 + 1);
      sub_1000243BC((__int128 *)v16.i8, (uint64_t)v15 + 8);
      int64x2_t v13 = vdupq_n_s64(0x4048000000000000uLL);
      *((void *)&v17 + 1) = &type metadata for Double;
      *(void *)&__int128 v18 = &protocol witness table for Double;
      v16.i64[0] = 0x4028000000000000LL;
      _s8AppStore17PillOverlayLayoutVwxx_0(v14);
      sub_1000243BC((__int128 *)v16.i8, (uint64_t)v14);
      __int128 v24 = v15[0];
      __int128 v25 = v15[1];
      __int128 v26 = v15[2];
      __int128 v20 = v14[3];
      __int128 v21 = v14[4];
      __int128 v22 = v14[5];
      __int128 v23 = v14[6];
      int64x2_t v16 = v13;
      __int128 v17 = v14[0];
      __int128 v18 = v14[1];
      __int128 v19 = v14[2];
      swift_getObjectType(a1);
      sub_1000B2870(&v16, a1, a2);
      a2 = v11;
      sub_10001D8C8(&v16);
      swift_release(v8);
    }
  }

  return a2;
}

void sub_100081078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v9 = sub_1000038E8(&qword_1002E3250);
  __chkstk_darwin(v9);
  double v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v12 = [a5 snapshotPageTraitEnvironment];
  uint64_t v13 = *(void *)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_pageTraits];
  *(void *)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_pageTraits] = v12;
  swift_unknownObjectRetain(v12);
  swift_unknownObjectRelease(v13);
  [v6 setNeedsLayout];
  uint64_t v14 = swift_unknownObjectRelease(v12);
  uint64_t v15 = (void *)GameCenterReengagement.backgroundColor.getter(v14);
  [v6 setBackgroundColor:v15];

  GameCenterReengagement.badgeGlyph.getter();
  if (v16)
  {
    uint64_t v17 = v16;
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }

  else
  {
    NSString v18 = 0LL;
  }

  id v19 = [(id)objc_opt_self(UIImage) _systemImageNamed:v18];

  __int128 v20 = *(void **)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_badgeGlyph];
  if (v19)
  {
    [v20 setImage:v19];
  }

  else
  {
    id v21 = [v20 setImage:0];
  }

  __int128 v22 = *(void **)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_badge];
  GameCenterReengagement.badge.getter(v21);
  if (v23)
  {
    uint64_t v25 = v23;
    NSString v26 = String._bridgeToObjectiveC()();
    *(void *)&double v24 = swift_bridgeObjectRelease(v25).n128_u64[0];
  }

  else
  {
    NSString v26 = 0LL;
  }

  objc_msgSend(v22, "setText:", v26, v24);

  uint64_t v27 = *(void **)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_title];
  GameCenterReengagement.title.getter(v28);
  uint64_t v30 = v29;
  NSString v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setText:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  uint64_t v32 = *(void **)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_subtitle];
  GameCenterReengagement.subtitle.getter(v33);
  if (v34)
  {
    uint64_t v36 = v34;
    NSString v37 = String._bridgeToObjectiveC()();
    *(void *)&double v35 = swift_bridgeObjectRelease(v36).n128_u64[0];
  }

  else
  {
    NSString v37 = 0LL;
  }

  objc_msgSend(v32, "setText:", v37, v35);

  uint64_t v38 = *(void **)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_heroContent];
  GameCenterReengagement.achievement.getter();
  uint64_t v39 = type metadata accessor for Achievement(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v11, 0LL, 1LL, v39);
  uint64_t v40 = AchievementCard.model.setter(v11);
  uint64_t v41 = dispatch thunk of GameCenterReengagement.clickAction.getter(v40);
  if (v41)
  {
    uint64_t v42 = v41;
    CGFloat v43 = *(void **)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_button];
    uint64_t v44 = swift_allocObject(&unk_100288828, 24LL, 7LL);
    swift_unknownObjectWeakInit(v44 + 16, v6);
    CGFloat v45 = (void *)swift_allocObject(&unk_100288850, 40LL, 7LL);
    v45[2] = v44;
    v45[3] = v42;
    v45[4] = a2;
    swift_retain(v44);
    swift_retain(a2);
    __n128 v46 = swift_retain(v42);
    dispatch thunk of ImageAlignedButton.primaryActionHandler.setter(sub_100081818, v45, v46);
    swift_release(v44);
    Action.title.getter(v47);
    if (v48)
    {
      uint64_t v50 = v48;
      NSString v51 = String._bridgeToObjectiveC()();
      *(void *)&double v49 = swift_bridgeObjectRelease(v50).n128_u64[0];
    }

    else
    {
      NSString v51 = 0LL;
    }

    objc_msgSend(v43, "setTitle:forState:", v51, 0, v49);
    swift_release(v42);
  }

  else
  {
    [*(id *)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_button] setHidden:1];
  }

  uint64_t v52 = dispatch thunk of GameCenterReengagement.heroAction.getter([v38 removeAllGestureRecognizers]);
  if (v52)
  {
    uint64_t v53 = v52;
    uint64_t v54 = (objc_class *)type metadata accessor for TapActionGestureRecognizer();
    uint64_t v55 = (char *)objc_allocWithZone(v54);
    *(void *)&v55[OBJC_IVAR____TtC8AppStore26TapActionGestureRecognizer_action] = v53;
    *(void *)&v55[OBJC_IVAR____TtC8AppStore26TapActionGestureRecognizer_objectGraph] = a2;
    v70.receiver = v55;
    v70.super_class = v54;
    swift_retain(a2);
    *(void *)&double v56 = swift_retain(v53).n128_u64[0];
    id v57 = objc_msgSendSuper2(&v70, "initWithTarget:action:", 0, 0, v56);
    [v57 addTarget:v57 action:"execute"];
    [v38 addGestureRecognizer:v57];
    swift_release(v53);
  }

  uint64_t v58 = GameCenterReengagement.backgroundArtwork.getter();
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = *(void **)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_backgroundImage];
    [v60 setHidden:0];
    [v6 frame];
    double v62 = ceil(v61 / 3.0);
    id v63 = [v6 frame];
    uint64_t v65 = Artwork.config(using:)(v63, v62, ceil(v64 / 3.0));
    sub_1001092E4();
    uint64_t v66 = type metadata accessor for ArtworkLoader(0LL);
    uint64_t v67 = inject(_:from:)(v66, a2);
    uint64_t v68 = type metadata accessor for ArtworkView(0LL);
    uint64_t v69 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v65, 2LL, 1LL, v60, v68, v69);
    swift_release(v59);
    swift_release(v65);
    swift_release(v67);
  }

  else
  {
    [*(id *)&v6[OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_backgroundImage] setHidden:1];
  }

void sub_100081604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    id v12 = (void *)Strong;
    uint64_t v13 = UIResponder.nearestActionRunner.getter();

    if (v13)
    {
      swift_beginAccess(v10, v19, 0LL, 0LL);
      uint64_t v14 = swift_unknownObjectWeakLoadStrong(v10);
      if (v14)
      {
        uint64_t v15 = (void *)v14;
        id v16 = *(id *)(v14 + OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_button);

        *((void *)&v21 + 1) = type metadata accessor for DynamicTypeButton(0LL);
        *(void *)&__int128 v20 = v16;
      }

      else
      {
        __int128 v20 = 0u;
        __int128 v21 = 0u;
      }

      (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v6);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, &v20, v9, a3);
      __n128 v17 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v17);
      sub_100027424((uint64_t)&v20);
    }
  }

double sub_100081768( uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_100081824(*a1, a2, a3, a5, a7, a8);
}

void sub_10008177C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
}

uint64_t sub_100081794()
{
  return sub_100004288( (unint64_t *)&unk_1002E52A0,  (uint64_t (*)(uint64_t))&type metadata accessor for GameCenterReengagement,  (uint64_t)&protocol conformance descriptor for GameCenterReengagement);
}

uint64_t sub_1000817C0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000817E4()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_100081818()
{
}

double sub_100081824(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = type metadata accessor for GameCenterReengagementLayout.Metrics(0LL);
  __chkstk_darwin(v10);
  uint64_t v71 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for GameCenterReengagementLayout(0LL);
  uint64_t v73 = *(void *)(v12 - 8);
  uint64_t v74 = v12;
  __chkstk_darwin(v12);
  v72 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v81 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v14 = *(void *)(v81 - 8);
  uint64_t v15 = __chkstk_darwin(v81);
  __n128 v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = GameCenterReengagement.badge.getter(v15);
  uint64_t v20 = v19;
  unint64_t v22 = sub_100026F44();
  if (qword_1002E0890 != -1) {
    swift_once(&qword_1002E0890, sub_100073354);
  }
  uint64_t v79 = type metadata accessor for FontUseCase(0LL, v21);
  uint64_t v23 = sub_10000A634(v79, (uint64_t)qword_1002F3508);
  id v24 = [a6 traitCollection];
  id v80 = a6;
  id v25 = v24;
  uint64_t v26 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v23, v24);

  uint64_t v27 = type metadata accessor for Feature(0LL);
  v92[3] = v27;
  uint64_t v78 = sub_100004288( (unint64_t *)&qword_1002E21F0,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  v92[4] = v78;
  uint64_t v28 = sub_10000DD7C(v92);
  uint64_t v29 = *(void (**)(void))(*(void *)(v27 - 8) + 104LL);
  unsigned int v77 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v76 = (void (*)(void *, void, uint64_t))v29;
  v29(v28);
  char v30 = isFeatureEnabled(_:)(v92);
  _s8AppStore17PillOverlayLayoutVwxx_0(v92);
  uint64_t v31 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v18,  v20,  v26,  4LL,  0LL,  0LL,  0LL,  0LL,  v30 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v92, v31);
  unint64_t v75 = v22;
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
  uint64_t v33 = v32(v17, v81);
  uint64_t v34 = GameCenterReengagement.title.getter(v33);
  uint64_t v36 = v35;
  if (qword_1002E0898 != -1) {
    swift_once(&qword_1002E0898, sub_100073370);
  }
  uint64_t v37 = sub_10000A634(v79, (uint64_t)qword_1002F3520);
  id v38 = [v80 traitCollection];
  uint64_t v39 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v37, v38);

  v91[3] = v27;
  v91[4] = v78;
  uint64_t v40 = sub_10000DD7C(v91);
  v76(v40, v77, v27);
  LOBYTE(v38) = isFeatureEnabled(_:)(v91);
  _s8AppStore17PillOverlayLayoutVwxx_0(v91);
  LOBYTE(v68) = v38 & 1;
  uint64_t v41 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v34,  v36,  v39,  4LL,  0LL,  0LL,  0LL,  0LL,  v68);
  LabelPlaceholderCompatibility.layoutTextView.getter(v91, v41);
  uint64_t v42 = v32(v17, v81);
  uint64_t v43 = a1;
  uint64_t v44 = GameCenterReengagement.subtitle.getter(v42);
  uint64_t v46 = v45;
  if (qword_1002E08A0 != -1) {
    swift_once(&qword_1002E08A0, sub_100073388);
  }
  uint64_t v47 = sub_10000A634(v79, (uint64_t)qword_1002F3538);
  id v48 = v80;
  id v49 = [v80 traitCollection];
  uint64_t v50 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v47, v49);

  v90[3] = v27;
  v90[4] = v78;
  NSString v51 = sub_10000DD7C(v90);
  v76(v51, v77, v27);
  LOBYTE(v49) = isFeatureEnabled(_:)(v90);
  _s8AppStore17PillOverlayLayoutVwxx_0(v90);
  LOBYTE(v69) = v49 & 1;
  uint64_t v52 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v44,  v46,  v50,  4LL,  0LL,  0LL,  0LL,  0LL,  v69);
  LabelPlaceholderCompatibility.layoutTextView.getter(v90, v52);
  v32(v17, v81);
  uint64_t v53 = type metadata accessor for LayoutViewPlaceholder(0LL);
  swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
  uint64_t v54 = LayoutViewPlaceholder.init(measurements:)(a2, 255.0, 255.0, 0.0);
  uint64_t v55 = (void *)swift_allocObject(&unk_100288878, 40LL, 7LL);
  v55[2] = v43;
  v55[3] = v48;
  v55[4] = v70;
  swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
  swift_retain(v43);
  swift_unknownObjectRetain(v48);
  uint64_t v56 = LayoutViewPlaceholder.init(measureWith:)(sub_100081ED0, v55);
  uint64_t v57 = v71;
  sub_1001DB9C0(v48, v71);
  uint64_t v89 = 0LL;
  memset(v88, 0, sizeof(v88));
  sub_100011C30((uint64_t)v92, (uint64_t)v87);
  sub_100011C30((uint64_t)v91, (uint64_t)v86);
  sub_100011C30((uint64_t)v90, (uint64_t)v85);
  v84[3] = v53;
  v84[4] = &protocol witness table for LayoutViewPlaceholder;
  v84[0] = v54;
  id v58 = objc_msgSend(v48, "traitCollection", swift_retain(v54).n128_f64[0]);
  double v59 = static Separator.thickness(compatibleWith:)();

  swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
  uint64_t v60 = LayoutViewPlaceholder.init(representing:)(a2, v59);
  v83[3] = v53;
  v83[4] = &protocol witness table for LayoutViewPlaceholder;
  v82[4] = &protocol witness table for LayoutViewPlaceholder;
  v83[0] = v60;
  v82[3] = v53;
  v82[0] = v56;
  __n128 v61 = swift_retain(v56);
  double v62 = v72;
  GameCenterReengagementLayout.init(metrics:badgeGlyph:badgeLabel:titleLabel:subtitleLabel:heroContent:separator:footer:)( v57,  v88,  v87,  v86,  v85,  v84,  v83,  v82,  v61);
  uint64_t v63 = sub_100004288( &qword_1002E5310,  (uint64_t (*)(uint64_t))&type metadata accessor for GameCenterReengagementLayout,  (uint64_t)&protocol conformance descriptor for GameCenterReengagementLayout);
  uint64_t v64 = v74;
  double v65 = dispatch thunk of Measurable.measurements(fitting:in:)(v48, v74, v63, a2, a3);
  swift_release(v54);
  __n128 v66 = swift_release(v56);
  (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v62, v64, v66);
  _s8AppStore17PillOverlayLayoutVwxx_0(v90);
  _s8AppStore17PillOverlayLayoutVwxx_0(v91);
  _s8AppStore17PillOverlayLayoutVwxx_0(v92);
  return v65;
}

uint64_t sub_100081EA4()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

double sub_100081ED0(uint64_t a1, double a2)
{
  return sub_100080E90(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_100081EDC(void *a1)
{
  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType(a1);
  id v1 = v6.receiver;
  objc_msgSendSuper2(&v6, "viewDidLoad");
  id v2 = objc_msgSend(v1, "view", v6.receiver, v6.super_class);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = type metadata accessor for InsetCollectionViewControllerContentView();
    uint64_t v5 = swift_dynamicCastClass(v3, v4);
    if (v5)
    {
      *(_BYTE *)(v5
               + OBJC_IVAR____TtC8AppStoreP33_F9B20E6387F6F627D5761E6B0A83FE5540InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = 0;

      return;
    }
  }

  __break(1u);
}

unint64_t sub_100081F78@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for ArticlePageShelfLayoutSpacingProvider;
  unint64_t result = sub_100082CD4();
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_100081FA8()
{
  uint64_t v1 = sub_1000038E8(&qword_1002E62F0);
  uint64_t v2 = swift_allocObject(v1, 64LL, 7LL);
  *(_OWORD *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236DD0;
  uint64_t v3 = *(void *)(v0 + qword_1002F37C0);
  uint64_t v4 = type metadata accessor for ArticlePageHeaderCollectionElementsObserver();
  uint64_t v5 = swift_allocObject(v4, 24LL, 7LL);
  uint64_t v6 = swift_weakInit(v5 + 16, 0LL);
  swift_weakAssign(v6, v3);
  uint64_t v7 = sub_100004288( &qword_1002E57A0,  (uint64_t (*)(uint64_t))type metadata accessor for ArticlePageHeaderCollectionElementsObserver,  (uint64_t)&unk_100239A5C);
  *(void *)(v2 + 32) = v5;
  *(void *)(v2 + 40) = v7;
  *(void *)(v2 + 48) = sub_1000C4D78();
  *(void *)(v2 + 56) = v8;
  uint64_t v9 = type metadata accessor for CompoundCollectionElementsObserver(0LL);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v2);
}

unint64_t sub_100082088(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PageGrid.HorizontalMargins(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for PageGrid.Direction(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for PageGrid(0LL);
  uint64_t v42 = *(void *)(v14 - 8);
  uint64_t v43 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v44 = sub_100183A60();
  uint64_t v17 = ArticleDiffablePagePresenter.todayCard.getter();
  if (!v17) {
    return v44;
  }
  uint64_t v18 = v17;
  id v19 = [v2 tabBarController];

  if (v19)
  {
    swift_release(v18);
    return v44;
  }

  uint64_t v21 = (*(uint64_t (**)(char *, void, uint64_t))(v11 + 104))( v13,  enum case for PageGrid.Direction.vertical(_:),  v10);
  static PageGrid.HorizontalMargins.pageMargins.getter(v21);
  static PageGrid.singleColumn(direction:containerSize:horizontalMargins:)(v13, v9, a1, a2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v22 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v23 = v16;
  v22(v13, v10);
  type metadata accessor for ArticleHeaderView();
  id v24 = [v3 snapshotPageTraitEnvironment];
  double v25 = sub_1001A275C(v18, (uint64_t)v16, v24);
  uint64_t v26 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
  id v27 = [v26 fractionalWidthDimension:1.0];
  id v28 = [v26 absoluteDimension:v25];
  id v29 =  [(id)objc_opt_self(NSCollectionLayoutSize) sizeWithWidthDimension:v27 heightDimension:v28];

  static UICollectionReusableView.elementKind.getter();
  uint64_t v31 = v30;
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  id v33 =  [(id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem) boundarySupplementaryItemWithLayoutSize:v29 elementKind:v32 alignment:1];
  swift_unknownObjectRelease(v24);

  unint64_t v34 = v44;
  unint64_t v45 = v44;
  id v35 = v33;
  uint64_t v36 = swift_bridgeObjectRetain(v34);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
  unint64_t v38 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v37 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v38 >= v37 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1LL);
  }
  uint64_t v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v35);
  specialized Array._endMutation()(v39);
  unint64_t v40 = v45;

  swift_bridgeObjectRelease(v34);
  __n128 v41 = swift_release(v18);
  (*(void (**)(char *, uint64_t, __n128))(v42 + 8))(v23, v43, v41);
  return v40;
}

void sub_1000823DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PageGrid.HorizontalMargins(0LL);
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for PageGrid.Direction(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for PageGrid(0LL);
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  uint64_t v14 = *(void *)(v54 + 64);
  __chkstk_darwin(v13);
  NSString v51 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v53 = (char *)&v47 - v16;
  uint64_t v52 = type metadata accessor for ArticleHeaderView();
  uint64_t v17 = static UICollectionReusableView.elementKind.getter();
  uint64_t v19 = v18;
  if (v17 == a1 && v18 == a2)
  {
    __n128 v20 = swift_bridgeObjectRelease(a2);
  }

  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, a1, a2, 0LL);
    __n128 v20 = swift_bridgeObjectRelease(v19);
    if ((v21 & 1) == 0)
    {
      sub_1001818CC(a1, a2, a3);
      return;
    }
  }

  unint64_t v22 = v56;
  uint64_t v23 = ArticleDiffablePagePresenter.todayCard.getter(v20);
  if (v23)
  {
    uint64_t v48 = v23;
    (*(void (**)(char *, void, uint64_t))(v10 + 104))( v12,  enum case for PageGrid.Direction.vertical(_:),  v9);
    id v24 = [v22 collectionView];
    if (v24)
    {
      double v25 = v24;
      [v24 bounds];
      double v27 = v26;
      double v29 = v28;

      static PageGrid.HorizontalMargins.pageMargins.getter(v30);
      uint64_t v31 = v53;
      static PageGrid.singleColumn(direction:containerSize:horizontalMargins:)(v12, v8, v27, v29);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v50);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v32 = *(void *)&v22[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph];
      *(void *)(a3 + 24) = sub_1000038E8(&qword_1002E5790);
      *(void *)(a3 + 32) = sub_100082B7C();
      uint64_t v56 = (char *)sub_10000DD7C((void *)a3);
      uint64_t v33 = v52;
      uint64_t v34 = static UICollectionReusableView.elementKind.getter();
      uint64_t v49 = v35;
      uint64_t v50 = v34;
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v33);
      unint64_t v37 = NSStringFromClass(ObjCClassFromMetadata);
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      uint64_t v39 = v38;

      uint64_t v40 = v54;
      uint64_t v41 = v55;
      uint64_t v42 = v51;
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v31, v55);
      uint64_t v43 = *(unsigned __int8 *)(v40 + 80);
      uint64_t v44 = (v43 + 24) & ~v43;
      unint64_t v45 = (v14 + v44 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v46 = swift_allocObject(&unk_1002888B0, v45 + 8, v43 | 7);
      *(void *)(v46 + swift_unknownObjectWeakDestroy(v0 + 16) = v48;
      (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v46 + v44, v42, v41);
      *(void *)(v46 + v45) = v32;
      swift_retain(v32);
      ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)( v50,  v49,  v47,  v39,  sub_100082C58,  v46,  v33);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
    }

    else
    {
      __break(1u);
    }
  }

  else
  {
    *(void *)(a3 + 32) = 0LL;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  }

void sub_100082768(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType(v1);
  uint64_t v4 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = sub_1000038E8(&qword_1002E5778);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_10017FE3C(a1);
  (*(void (**)(void *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  if ((*(unsigned int (**)(void *, uint64_t))(v12 + 88))(v14, v11) == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(void *, uint64_t))(v12 + 96))(v14, v11);
    id v15 = objc_msgSend(v1, "view", swift_release(*v14).n128_f64[0]);
    if (!v15)
    {
      __break(1u);
      return;
    }

    uint64_t v16 = v15;
    [v15 bounds];
    double v18 = v17;
    double v20 = v19;

    uint64_t v21 = sub_100004288( &qword_1002E5788,  type metadata accessor for ArticleDiffablePageViewController,  (uint64_t)&unk_10023AA78);
    uint64_t v22 = ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(ObjectType, v21, v18, v20);
  }

  else
  {
    uint64_t v22 = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }

  ArticleDiffablePagePresenter.touchMode.getter(v22);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ArticlePage.TouchMode.pan(_:), v4);
  uint64_t v23 = sub_100004288( &qword_1002E5780,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
  dispatch thunk of RawRepresentable.rawValue.getter(&v42, v4, v23);
  dispatch thunk of RawRepresentable.rawValue.getter(&v40, v4, v23);
  uint64_t v24 = v43;
  uint64_t v25 = v41;
  if (v42 == v40 && v43 == v41)
  {
    swift_bridgeObjectRelease_n(v43, 2LL);
    double v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v7, v4);
    v26(v10, v4);
  }

  else
  {
    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v43, v40, v41, 0LL);
    swift_bridgeObjectRelease(v24);
    __n128 v28 = swift_bridgeObjectRelease(v25);
    double v29 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
    v29(v7, v4, v28);
    ((void (*)(char *, uint64_t))v29)(v10, v4);
    if ((v27 & 1) == 0) {
      return;
    }
  }

  id v30 = [v2 collectionView];
  if (v30)
  {
    uint64_t v31 = v30;
    id v32 = [v30 panGestureRecognizer];

    uint64_t v33 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
    uint64_t v34 = swift_allocObject(v33, 40LL, 7LL);
    *(_OWORD *)(v34 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
    id v35 = [objc_allocWithZone(NSNumber) initWithInteger:1];
    *(void *)(v34 + 32) = v35;
    uint64_t v42 = v34;
    specialized Array._endMutation()(v35);
    uint64_t v36 = v42;
    sub_1000076E0();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v32, "setAllowedTouchTypes:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);
  }

uint64_t type metadata accessor for ArticleDiffablePageViewController(uint64_t a1)
{
  uint64_t result = qword_1002E5340;
  if (!qword_1002E5340) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArticleDiffablePageViewController);
  }
  return result;
}

uint64_t sub_100082B40(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 256LL, 0LL, v2, a1 + 1016);
}

uint64_t sub_100082B74()
{
  return type metadata accessor for ArticleDiffablePageViewController(0LL);
}

unint64_t sub_100082B7C()
{
  unint64_t result = qword_1002E5798;
  if (!qword_1002E5798)
  {
    uint64_t v1 = sub_100003974(&qword_1002E5790);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ReusableSupplementaryRegistration<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002E5798);
  }

  return result;
}

uint64_t sub_100082BC8()
{
  uint64_t v1 = type metadata accessor for PageGrid(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

id sub_100082C58(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for PageGrid(0LL) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_1000C9D88( a1,  a2,  a3,  a4,  *(void *)(v4 + 16),  v4 + v10,  *(void *)(v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

unint64_t sub_100082CD4()
{
  unint64_t result = qword_1002E57A8;
  if (!qword_1002E57A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_100241168, &type metadata for ArticlePageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_1002E57A8);
  }

  return result;
}

uint64_t TVFramedMediaLayout.Metrics.init(mediaAspectRatio:mediaMaxHeight:)@<X0>( uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for TVFramedMediaLayout.Metrics(0LL) + 20);
  return sub_1000243BC(a2, v7);
}

uint64_t type metadata accessor for TVFramedMediaLayout.Metrics(uint64_t a1)
{
  return sub_100036A58(a1, qword_1002E58A0, (uint64_t)&nominal type descriptor for TVFramedMediaLayout.Metrics);
}

uint64_t TVFramedMediaLayout.init(metrics:mediaView:captionView:)@<X0>( uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for TVFramedMediaLayout(0LL);
  sub_100082DFC(a1, a4 + *(int *)(v8 + 24));
  sub_1000243BC(a2, a4);
  return sub_1000243BC(a3, a4 + 40);
}

uint64_t type metadata accessor for TVFramedMediaLayout(uint64_t a1)
{
  return sub_100036A58(a1, qword_1002E5808, (uint64_t)&nominal type descriptor for TVFramedMediaLayout);
}

uint64_t sub_100082DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVFramedMediaLayout.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t TVFramedMediaLayout.placeChildren(relativeTo:in:)( uint64_t a1, CGFloat a2, CGFloat a3, double a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = v5 + 5;
  uint64_t v13 = v5[8];
  uint64_t v14 = v5[9];
  sub_1000112B0(v5 + 5, v13);
  double v15 = 0.0;
  double v16 = 0.0;
  if ((dispatch thunk of LayoutView.isHidden.getter(v13, v14) & 1) == 0)
  {
    uint64_t v17 = v5[8];
    uint64_t v18 = v5[9];
    sub_1000112B0(v12, v17);
    dispatch thunk of Measurable.measurements(fitting:in:)(a1, v17, *(void *)(v18 + 8), a4, a5);
    double v16 = v19;
  }

  v37.origin.x = a2;
  v37.origin.y = a3;
  v37.size.width = a4;
  v37.size.height = a5;
  double Width = CGRectGetWidth(v37);
  v38.origin.x = a2;
  v38.origin.y = a3;
  v38.size.width = a4;
  v38.size.height = a5;
  double v21 = CGRectGetHeight(v38) - v16;
  if (v21 >= 0.0) {
    double v15 = v21;
  }
  uint64_t v22 = (uint64_t)v5 + *(int *)(type metadata accessor for TVFramedMediaLayout(0LL) + 24);
  swift_getObjectType(a1);
  sub_100083270(v22, a1, Width, v15);
  uint64_t v23 = v6[3];
  uint64_t v24 = v6[4];
  sub_1000112B0(v6, v23);
  v39.origin.x = a2;
  v39.origin.y = a3;
  v39.size.width = a4;
  v39.size.height = a5;
  CGRectGetWidth(v39);
  double v25 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v23, v24, v25);
  uint64_t v26 = v6[8];
  uint64_t v27 = v6[9];
  sub_1000112B0(v12, v26);
  uint64_t v28 = v6[3];
  uint64_t v29 = v6[4];
  sub_1000112B0(v6, v28);
  dispatch thunk of LayoutView.frame.getter(v28, v29);
  CGRectGetMaxY(v40);
  v41.origin.x = a2;
  v41.origin.y = a3;
  v41.size.width = a4;
  v41.size.height = a5;
  CGRectGetWidth(v41);
  v42.origin.x = a2;
  v42.origin.y = a3;
  v42.size.width = a4;
  v42.size.height = a5;
  CGRectGetHeight(v42);
  double v30 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v26, v27, v30);
  uint64_t v31 = v6[3];
  uint64_t v32 = v6[4];
  sub_1000112B0(v6, v31);
  dispatch thunk of LayoutView.frame.getter(v31, v32);
  CGRectGetHeight(v43);
  uint64_t v34 = v6[8];
  uint64_t v33 = v6[9];
  sub_1000112B0(v12, v34);
  dispatch thunk of LayoutView.frame.getter(v34, v33);
  CGRectGetHeight(v44);
  return LayoutRect.init(representing:)(v35);
}

uint64_t TVFramedMediaLayout.Metrics.mediaAspectRatio.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AspectRatio(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a1, v1, v3);
}

uint64_t TVFramedMediaLayout.Metrics.mediaAspectRatio.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AspectRatio(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40LL))(v1, a1, v3);
}

uint64_t TVFramedMediaLayout.Metrics.mediaMaxHeight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TVFramedMediaLayout.Metrics(0LL);
  return sub_100011C30(v1 + *(int *)(v3 + 20), a1);
}

uint64_t TVFramedMediaLayout.Metrics.mediaMaxHeight.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for TVFramedMediaLayout.Metrics(0LL) + 20));
  _s8AppStore17PillOverlayLayoutVwxx_0(v3);
  return sub_1000243BC(a1, (uint64_t)v3);
}

uint64_t (*TVFramedMediaLayout.Metrics.mediaMaxHeight.modify())(void)
{
  return MotionEffects.rawValue.getter;
}

uint64_t TVFramedMediaLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TVFramedMediaLayout(0LL) + 24);
  return sub_10002BDB0(v3, a1);
}

double TVFramedMediaLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  return sub_10008340C(a1, v3, a2, a3);
}

uint64_t sub_100083260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002BDB0(v2 + *(int *)(a1 + 24), a2);
}

double sub_100083270(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v24 = type metadata accessor for AspectRatio(0LL);
  uint64_t v8 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v15 = (void *)(a1 + *(int *)(type metadata accessor for TVFramedMediaLayout.Metrics(0LL) + 20));
  uint64_t v16 = v15[3];
  uint64_t v17 = v15[4];
  sub_1000112B0(v15, v16);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v16, v17);
  double v18 = AnyDimension.value(in:rounded:)(a2, v14, v16, v17);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v18 < a4) {
    a4 = v18;
  }
  __n128 v20 = AspectRatio.init(_:_:)(v19, a3);
  v21.n128_f64[0] = AspectRatio.horizontalFraction.getter(v20);
  if (AspectRatio.horizontalFraction.getter(v21) >= v21.n128_f64[0]) {
    AspectRatio.height(fromWidth:)(a3);
  }
  else {
    a3 = AspectRatio.width(fromHeight:)(a4);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  return a3;
}

double sub_10008340C(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for AspectRatio(0LL);
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = a2[8];
  uint64_t v16 = a2[9];
  sub_1000112B0(a2 + 5, v15);
  dispatch thunk of Measurable.measurements(fitting:in:)(a1, v15, *(void *)(v16 + 8), a3, a4);
  double v18 = v17;
  uint64_t v19 = a2[8];
  uint64_t v20 = a2[9];
  sub_1000112B0(a2 + 5, v19);
  char v21 = dispatch thunk of LayoutView.isHidden.getter(v19, v20);
  if (v18 >= a4) {
    double v22 = a4;
  }
  else {
    double v22 = v18;
  }
  if ((v21 & 1) != 0) {
    double v23 = 0.0;
  }
  else {
    double v23 = v22;
  }
  double v24 = a4 - v23;
  double v25 = (char *)a2 + *(int *)(type metadata accessor for TVFramedMediaLayout(0LL) + 24);
  uint64_t v26 = &v25[*(int *)(type metadata accessor for TVFramedMediaLayout.Metrics(0LL) + 20)];
  uint64_t v27 = *((void *)v26 + 3);
  uint64_t v28 = *((void *)v26 + 4);
  sub_1000112B0(v26, v27);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v27, v28);
  double v29 = AnyDimension.value(in:rounded:)(a1, v14, v27, v28);
  uint64_t v30 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v29 >= v24) {
    double v29 = v24;
  }
  __n128 v31 = AspectRatio.init(_:_:)(v30, a3);
  v32.n128_f64[0] = AspectRatio.horizontalFraction.getter(v31);
  if (AspectRatio.horizontalFraction.getter(v32) >= v32.n128_f64[0]) {
    v33.n128_f64[0] = AspectRatio.height(fromWidth:)(a3);
  }
  else {
    v33.n128_f64[0] = AspectRatio.width(fromHeight:)(v29);
  }
  (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v10, v36, v33);
  return a3;
}

uint64_t initializeBufferWithCopyOfBuffer for TVFramedMediaLayout(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v15 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v15);
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    __int128 v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for AspectRatio(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16LL))(v10, v11, v12);
    uint64_t v13 = *(int *)(type metadata accessor for TVFramedMediaLayout.Metrics(0LL) + 20);
    __int128 v14 = *(_OWORD *)(v11 + v13 + 24);
    *(_OWORD *)(v10 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
  }

  return v4;
}

uint64_t destroy for TVFramedMediaLayout(void *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  uint64_t v6 = &v4[*(int *)(type metadata accessor for TVFramedMediaLayout.Metrics(0LL) + 20)];
  return _s8AppStore17PillOverlayLayoutVwxx_0(v6);
}

uint64_t initializeWithCopy for TVFramedMediaLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  __int128 v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
  uint64_t v12 = *(int *)(type metadata accessor for TVFramedMediaLayout.Metrics(0LL) + 20);
  __int128 v13 = *(_OWORD *)(v10 + v12 + 24);
  *(_OWORD *)(v9 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  return a1;
}

void *assignWithCopy for TVFramedMediaLayout(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(int *)(a3 + 24);
  __int128 v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24LL))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for TVFramedMediaLayout.Metrics(0LL);
  sub_1000246CC(&v7[*(int *)(v10 + 20)], &v8[*(int *)(v10 + 20)]);
  return a1;
}

uint64_t initializeWithTake for TVFramedMediaLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a2 + v5;
  uint64_t v7 = a1 + v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))(v7, v6, v8);
  uint64_t v9 = *(int *)(type metadata accessor for TVFramedMediaLayout.Metrics(0LL) + 20);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = v6 + v9;
  __int128 v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  return a1;
}

uint64_t assignWithTake for TVFramedMediaLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for TVFramedMediaLayout.Metrics(0LL) + 20);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)v12);
  __int128 v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVFramedMediaLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100083A28);
}

uint64_t sub_100083A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for TVFramedMediaLayout.Metrics(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( a1 + *(int *)(a3 + 24),  a2,  v8);
  }

uint64_t storeEnumTagSinglePayload for TVFramedMediaLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100083AB0);
}

uint64_t sub_100083AB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for TVFramedMediaLayout.Metrics(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v5 + *(int *)(a4 + 24),  a2,  a2,  v7);
  }

  return result;
}

uint64_t sub_100083B24(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = "(";
  uint64_t result = type metadata accessor for TVFramedMediaLayout.Metrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TVFramedMediaLayout.Metrics( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v10);
  }

  else
  {
    uint64_t v7 = type metadata accessor for AspectRatio(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    __int128 v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
  }

  return a1;
}

uint64_t destroy for TVFramedMediaLayout.Metrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  return _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + *(int *)(a2 + 20)));
}

uint64_t initializeWithCopy for TVFramedMediaLayout.Metrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  __int128 v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  return a1;
}

uint64_t assignWithCopy for TVFramedMediaLayout.Metrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  sub_1000246CC((void *)(a1 + *(int *)(a3 + 20)), (void *)(a2 + *(int *)(a3 + 20)));
  return a1;
}

uint64_t initializeWithTake for TVFramedMediaLayout.Metrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __int128 v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  return a1;
}

uint64_t assignWithTake for TVFramedMediaLayout.Metrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + v7));
  __int128 v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVFramedMediaLayout.Metrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100083E3C);
}

uint64_t sub_100083E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TVFramedMediaLayout.Metrics( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100083EC8);
}

uint64_t sub_100083EC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AspectRatio(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_100083F44(uint64_t a1)
{
  uint64_t result = type metadata accessor for AspectRatio(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for DirectionalTextAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_100084000 + 4 * byte_100239E45[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100084034 + 4 * asc_100239E40[v4]))();
}

uint64_t sub_100084034(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10008403C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100084044LL);
  }
  return result;
}

uint64_t sub_100084050(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100084058LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_10008405C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100084064(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DirectionalTextAlignment()
{
  return &type metadata for DirectionalTextAlignment;
}

unint64_t sub_100084084()
{
  unint64_t result = qword_1002E58D8;
  if (!qword_1002E58D8)
  {
    unint64_t result = swift_getWitnessTable(&unk_100239EBC, &type metadata for DirectionalTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1002E58D8);
  }

  return result;
}

uint64_t sub_1000840C8@<X0>(uint64_t a1@<X8>)
{
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 objectForKey:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v8, v4);
    swift_unknownObjectRelease(v4);
  }

  else
  {
    memset(v8, 0, sizeof(v8));
  }

  sub_10007C200((uint64_t)v8, (uint64_t)v9);
  if (v10)
  {
  }

  else
  {
    sub_1000077E0((uint64_t)v9, (uint64_t *)&unk_1002E3500);
  }

  uint64_t v6 = type metadata accessor for StoreTab.Identifier(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(a1, 1LL, 1LL, v6);
}

uint64_t sub_1000841DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000038E8(&qword_1002EE920);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DF2C(a1, (uint64_t)v6, &qword_1002EE920);
  uint64_t v7 = type metadata accessor for StoreTab.Identifier(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1LL, v7) == 1)
  {
    sub_1000077E0((uint64_t)v6, &qword_1002EE920);
    NSString v9 = String._bridgeToObjectiveC()();
    [v2 removeObjectForKey:v9];
  }

  else
  {
    StoreTab.Identifier.rawValue.getter();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    NSString v9 = String._bridgeToObjectiveC()();
    [v2 setObject:v12 forKey:v9];
  }

  return sub_1000077E0(a1, &qword_1002EE920);
}

uint64_t sub_10008435C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000844B8(a1);
}

uint64_t sub_100084378(uint64_t a1)
{
  return sub_100084604(a1);
}

id sub_100084394()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v8, v2);
    swift_unknownObjectRelease(v2);
  }

  else
  {
    memset(v8, 0, sizeof(v8));
  }

  sub_10007C200((uint64_t)v8, (uint64_t)v9);
  if (!v10)
  {
    sub_1000077E0((uint64_t)v9, (uint64_t *)&unk_1002E3500);
    return 0LL;
  }

  unint64_t v3 = sub_1000076E0();
  id v4 = v7;
  id v5 = [v7 BOOLValue];

  return v5;
}

uint64_t sub_10008449C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000844B8(a1);
}

uint64_t sub_1000844B8@<X0>(uint64_t a1@<X8>)
{
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 objectForKey:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v11, v4);
    swift_unknownObjectRelease(v4);
  }

  else
  {
    memset(v11, 0, sizeof(v11));
  }

  sub_10007C200((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    unint64_t v5 = sub_1000076E0();
    if ((swift_dynamicCast(&v10, v12, (char *)&type metadata for Any + 8, v5, 6LL) & 1) != 0)
    {
      id v6 = v10;
      Date.init(timeIntervalSinceReferenceDate:)([v10 doubleValue]);

      uint64_t v7 = type metadata accessor for Date(0LL);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( a1,  0LL,  1LL,  v7);
    }
  }

  else
  {
    sub_1000077E0((uint64_t)v12, (uint64_t *)&unk_1002E3500);
  }

  uint64_t v9 = type metadata accessor for Date(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(a1, 1LL, 1LL, v9);
}

uint64_t sub_1000845E8(uint64_t a1)
{
  return sub_100084604(a1);
}

uint64_t sub_100084604(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1000038E8(&qword_1002E58E8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DF2C(a1, (uint64_t)v6, &qword_1002E58E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1LL, v7) == 1)
  {
    sub_1000077E0((uint64_t)v6, &qword_1002E58E8);
    NSString v11 = String._bridgeToObjectiveC()();
    [v2 removeObjectForKey:v11];

    return sub_1000077E0(a1, &qword_1002E58E8);
  }

  else
  {
    uint64_t v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    double v14 = Date.timeIntervalSinceReferenceDate.getter(v13);
    NSString v15 = String._bridgeToObjectiveC()();
    [v2 setDouble:v15 forKey:v14];

    sub_1000077E0(a1, &qword_1002E58E8);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

uint64_t sub_1000847AC(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1000038E8(&qword_1002E58E0);
  __n128 v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for TimeZone(0LL, v5);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  NSString v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DF2C(a1, (uint64_t)v7, &qword_1002E58E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1LL, v8) == 1)
  {
    sub_1000077E0((uint64_t)v7, &qword_1002E58E0);
    NSString v12 = String._bridgeToObjectiveC()();
    [v2 removeObjectForKey:v12];

    return sub_1000077E0(a1, &qword_1002E58E0);
  }

  else
  {
    uint64_t v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    TimeZone.identifier.getter(v14);
    uint64_t v16 = v15;
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    NSString v18 = String._bridgeToObjectiveC()();
    [v2 setObject:v17 forKey:v18];

    sub_1000077E0(a1, &qword_1002E58E0);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

id sub_100084970(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = &v3[OBJC_IVAR____TtC8AppStore33BaseCollectionCompositionalLayout_pendingPrepareObserver];
  *(void *)uint64_t v6 = 0LL;
  *((void *)v6 + 1) = 0LL;
  aBlock[4] = a1;
  uint64_t v19 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_10009B4B0;
  aBlock[3] = &unk_100288A28;
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = v19;
  swift_retain(a2);
  swift_release(v8);
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for BaseCollectionCompositionalLayout();
  id v9 = objc_msgSendSuper2(&v17, "initWithSectionProvider:configuration:", v7, a3);
  _Block_release(v7);
  uint64_t v10 = type metadata accessor for SectionBackgroundView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v10);
  id v12 = v9;
  static UICollectionReusableView.elementKind.getter();
  uint64_t v14 = v13;
  NSString v15 = String._bridgeToObjectiveC()();
  objc_msgSend( v12,  "registerClass:forDecorationViewOfKind:",  ObjCClassFromMetadata,  v15,  swift_bridgeObjectRelease(v14).n128_f64[0]);

  swift_release(a2);
  return v12;
}

id sub_100084DF8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseCollectionCompositionalLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseCollectionCompositionalLayout()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore33BaseCollectionCompositionalLayout);
}

uint64_t sub_100084E5C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_100084E80()
{
  return (id)(*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16LL))();
}

uint64_t sub_100084EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100084EB8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

id sub_100084EC0()
{
  id v0 = [objc_allocWithZone(NSMutableParagraphStyle) init];
  id result = [v0 setAlignment:1];
  qword_1002F3620 = (uint64_t)v0;
  return result;
}

id sub_100084F0C(id result, uint64_t a2, void *a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
      id result = (id)swift_bridgeObjectRetain(a2);
      break;
    case 2:
      swift_bridgeObjectRetain(a2);
      id result = a3;
      break;
    case 3:
      id v4 = result;
      swift_unknownObjectRetain(a2);
      id result = (id)swift_retain(v4);
      break;
    default:
      return result;
  }

  return result;
}

void destroy for Accessory(uint64_t a1)
{
}

void sub_100084FBC(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
      swift_bridgeObjectRelease(a2);
      break;
    case 2:
      swift_bridgeObjectRelease(a2);

      break;
    case 3:
      swift_release(a1);
      swift_unknownObjectRelease(a2);
      break;
    default:
      return;
  }

uint64_t initializeWithCopy for Accessory(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  __n128 v5 = *(void **)(a2 + 16);
  char v6 = *(_BYTE *)(a2 + 24);
  sub_100084F0C(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for Accessory(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  __n128 v5 = *(void **)(a2 + 16);
  char v6 = *(_BYTE *)(a2 + 24);
  sub_100084F0C(*(id *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  id v9 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  char v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_100084FBC(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for Accessory(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Accessory(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(_BYTE *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  char v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_100084FBC(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Accessory(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Accessory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
    *(_BYTE *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 25) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 25) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 24) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_10008520C(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_100085224(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 4;
  if (a2 >= 4)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
    LOBYTE(a2) = 4;
    *(void *)__n128 result = v2;
  }

  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Accessory()
{
  return &type metadata for Accessory;
}

unint64_t sub_100085254()
{
  unint64_t result = qword_1002E5980;
  if (!qword_1002E5980)
  {
    unint64_t result = swift_getWitnessTable(&unk_100239FA4, &type metadata for Accessory);
    atomic_store(result, (unint64_t *)&qword_1002E5980);
  }

  return result;
}

void sub_100085298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  __asm { BR              X10 }

void sub_1000852D8( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  if (v24)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v24);
    String.hash(into:)(v25, v27, v24);
    sub_100084FBC(v27, v24, v26, 0);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

void sub_1000853E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }

Swift::Int sub_100085430()
{
  if (v0)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v0);
    String.hash(into:)(&v4, v2, v0);
    sub_100084FBC(v2, v0, v1, 0);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  return Hasher._finalize()();
}

void sub_100085550(uint64_t a1)
{
}

void sub_100085574()
{
}

void sub_100085584(uint64_t a1)
{
}

void sub_100085594()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 24);
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }

Swift::Int sub_1000855D4()
{
  if (v0)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v0);
    String.hash(into:)(&v4, v1, v0);
    sub_100084FBC(v1, v0, v2, 0);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  return Hasher._finalize()();
}

void sub_1000856F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, a2);
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  __asm { BR              X10 }

id sub_1000857D4()
{
  id v1 = [objc_allocWithZone((Class)type metadata accessor for HeaderButton(0)) init];
  if (v0) {
    NSString v2 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v2 = 0LL;
  }
  [v1 setTitle:v2 forState:0];

  return v1;
}

void sub_100085AA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }

uint64_t sub_100085AD4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8) {
    return 0LL;
  }
  if (a2)
  {
    if (!a6) {
      return 0LL;
    }
    if (a1 != a5 || a2 != a6) {
      return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0LL);
    }
  }

  else if (a6)
  {
    sub_100084FBC(a1, 0LL, v8, 0);
    return 0LL;
  }

  return 1LL;
}

unint64_t sub_100085C0C()
{
  uint64_t v1 = *v0;
  if (!((unint64_t)*v0 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_3;
    }
    return 0LL;
  }

  if (v1 < 0) {
    uint64_t v5 = *v0;
  }
  else {
    uint64_t v5 = v1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v0);
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v5);
  swift_bridgeObjectRelease(v1);
  if (!v6) {
    return 0LL;
  }
LABEL_3:
  unint64_t result = sub_100086F40();
  if (!result)
  {
    uint64_t v3 = *v0;
    if ((unint64_t)*v0 >> 62)
    {
      if (v3 < 0) {
        uint64_t v7 = *v0;
      }
      else {
        uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(*v0);
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v3);
      unint64_t result = v8 - 1;
      if (!__OFSUB__(v8, 1LL)) {
        return sub_1000866A8(result);
      }
    }

    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t result = v4 - 1;
      if (!__OFSUB__(v4, 1LL)) {
        return sub_1000866A8(result);
      }
    }

    __break(1u);
  }

  return result;
}

void sub_100085CD4(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v4 = (void *)*v2;
  if (*(void *)(*v2 + 16LL))
  {
    if ((swift_isUniquelyReferenced_nonNull_native(*v2, a2) & 1) != 0)
    {
      uint64_t v5 = v4[2];
      if (v5)
      {
LABEL_4:
        uint64_t v6 = v5 - 1;
        sub_1000243BC((__int128 *)&v4[5 * v5 - 1], (uint64_t)v7);
        void v4[2] = v6;
        void *v2 = v4;
        sub_1000243BC(v7, (uint64_t)v8);
        sub_1000243BC(v8, a1);
        return;
      }
    }

    else
    {
      uint64_t v4 = sub_100086EF0(v4);
      uint64_t v5 = v4[2];
      if (v5) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  else
  {
    *(void *)(a1 + 32) = 0LL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  }

__n128 TVUpsellGridLayout.init(metrics:icons:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a3 + 32) = result;
  *(void *)(a3 + 48) = *(void *)(a1 + 48);
  *(void *)(a3 + 56) = a2;
  return result;
}

uint64_t TVUpsellGridLayout.Metrics.init(interItemSpacing:smallIconSize:)@<X0>( __int128 *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t result = sub_1000243BC(a1, a2);
  *(double *)(a2 + 40) = a3;
  *(double *)(a2 + 48) = a4;
  return result;
}

double TVUpsellGridLayout.Metrics.smallIconSize.getter()
{
  return *(double *)(v0 + 40);
}

void TVUpsellGridLayout.Metrics.smallIconSize.setter(double a1, double a2)
{
  *(double *)(v2 + 40) = a1;
  *(double *)(v2 + 48) = a2;
}

uint64_t TVUpsellGridLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100085DF0(v1, a1);
}

uint64_t sub_100085DF0(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  return a2;
}

uint64_t TVUpsellGridLayout.metrics.setter(__int128 *a1)
{
  return sub_100085E44(a1, v1);
}

uint64_t sub_100085E44(__int128 *a1, uint64_t a2)
{
  __int128 v4 = *a1;
  __int128 v5 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *(_OWORD *)(a2 + 40) = *(__int128 *)((char *)a1 + 40);
  return a2;
}

double static TVUpsellGridLayout.largeIconSize(using:in:)(uint64_t a1, uint64_t a2)
{
  return sub_1000878F4(a1, a2);
}

void static TVUpsellGridLayout.totalNumberOfIcons(fitting:using:in:)( uint64_t a1, uint64_t a2, double a3, double a4)
{
}

  ;
}

void TVUpsellGridLayout.placeChildren(relativeTo:in:)( uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v7 = v6;
  v87[1] = a2;
  *(double *)&uint64_t v13 = COERCE_DOUBLE(type metadata accessor for AspectRatio(0LL));
  double v103 = *(double *)(v13 - 8);
  double v104 = *(double *)&v13;
  __chkstk_darwin(v13);
  NSString v15 = (char *)v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v20 = *(double *)(v6 + 40);
  double v21 = *(double *)(v6 + 48);
  uint64_t v22 = *(void *)(v6 + 24);
  uint64_t v23 = *(void *)(v7 + 32);
  sub_1000112B0((void *)v7, v22);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22, v23);
  uint64_t v24 = v23;
  uint64_t v25 = v16;
  double v26 = AnyDimension.value(in:rounded:)(a1, v19, v22, v24);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  uint64_t v28 = v27(v19, v25);
  AspectRatio.init(_:_:)(v28, v20);
  double v98 = v21 + v21 + v26;
  CGFloat v99 = AspectRatio.width(fromHeight:)(v98);
  (*(void (**)(char *, double))(*(void *)&v103 + 8LL))(v15, COERCE_DOUBLE(*(void *)&v104));
  double v91 = *(double *)(v7 + 40);
  double v104 = *(double *)(v7 + 48);
  sub_100085DF0(v7, (uint64_t)&v116);
  uint64_t v29 = v117;
  uint64_t v30 = v118;
  sub_1000112B0(&v116, v117);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v29, v30);
  double v92 = AnyDimension.value(in:rounded:)(a1, v19, v29, v30);
  v27(v19, v25);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v116);
  uint64_t v31 = *(void *)(v7 + 56);
  swift_bridgeObjectRetain(v31);
  __n128 v33 = sub_100086B44(v32);
  swift_bridgeObjectRelease(v31);
  v115 = v33;
  v121.origin.x = a3;
  v121.origin.y = a4;
  v121.size.width = a5;
  CGFloat v34 = a6;
  v121.size.height = a6;
  double Height = CGRectGetHeight(v121);
  double v36 = *(double *)(v7 + 48);
  uint64_t v37 = *(void *)(v7 + 24);
  uint64_t v38 = *(void *)(v7 + 32);
  sub_1000112B0((void *)v7, v37);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v37, v38);
  double v39 = AnyDimension.value(in:rounded:)(a1, v19, v37, v38);
  v27(v19, v25);
  swift_getObjectType(a1);
  sub_100087CAC(v7, a1, Height * 0.5 - v36 * 0.5 - v39);
  if (*(void *)&v40 + 0x4000000000000000LL < 0) {
    goto LABEL_30;
  }
  double v103 = v40;
  CGFloat v41 = a4;
  CGFloat v42 = a3;
  v122.origin.x = a3;
  v122.origin.y = v41;
  v122.size.width = a5;
  CGFloat v105 = v34;
  v122.size.height = v34;
  double v43 = CGRectGetHeight(v122);
  uint64_t v44 = *(void *)(v7 + 24);
  uint64_t v45 = *(void *)(v7 + 32);
  sub_1000112B0((void *)v7, v44);
  uint64_t v93 = v25;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v44, v45);
  double v46 = AnyDimension.value(in:rounded:)(a1, v19, v44, v45);
  v27(v19, v93);
  sub_100087CAC(v7, a1, v43 * 0.5 - v46 * 0.5);
  if (v47 + 0x4000000000000000LL < 0)
  {
LABEL_31:
    __break(1u);
  }

  else
  {
    uint64_t v49 = v47;
    sub_100085CD4((uint64_t)&v116, v48);
    if (v117)
    {
      v90 = (void (*)(char *, uint64_t))v27;
      sub_1000243BC(&v116, (uint64_t)v112);
      v123.origin.x = a3;
      v123.origin.y = v41;
      v123.size.width = a5;
      CGFloat v50 = v105;
      v123.size.height = v105;
      CGFloat v51 = CGRectGetMaxX(v123) - v99;
      v124.origin.x = v42;
      v124.origin.y = v41;
      v124.size.width = a5;
      v124.size.height = v50;
      CGFloat v52 = CGRectGetMidY(v124) + v98 * -0.5;
      uint64_t v53 = v113;
      uint64_t v54 = v114;
      sub_1000112B0(v112, v113);
      CGFloat v96 = v52;
      CGFloat v97 = v51;
      double v55 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
      dispatch thunk of LayoutView.frame.setter(v53, v54, v55);
      v125.origin.x = v42;
      v125.origin.y = v41;
      v125.size.width = a5;
      v125.size.height = v50;
      double MaxX = CGRectGetMaxX(v125);
      v126.origin.x = v42;
      v126.origin.y = v41;
      v126.size.width = a5;
      v126.size.height = v50;
      CGFloat MinX = CGRectGetMinX(v126);
      double v59 = v92;
      if (MinX < MaxX)
      {
        uint64_t v60 = 0LL;
        double v89 = v104 + v92;
        uint64_t v88 = (2LL * *(void *)&v103) | 1;
        uint64_t v61 = 2 * v49;
        do
        {
          if (v60) {
            double v62 = v91;
          }
          else {
            double v62 = v99;
          }
          uint64_t v63 = v88;
          if ((v60 & 0x8000000000000001LL) != 1) {
            uint64_t v63 = v61;
          }
          CGFloat v64 = v89 * (double)v63 - v59;
          v127.origin.x = v42;
          v127.origin.y = v41;
          v127.size.width = a5;
          v127.size.height = v50;
          double v104 = (CGRectGetHeight(v127) - v64) * 0.5;
          double v94 = MaxX;
          CGFloat v65 = MaxX - v62;
          sub_100085DF0(v7, (uint64_t)&v116);
          CGFloat v66 = v119;
          double v67 = v120;
          uint64_t v68 = v117;
          uint64_t v69 = v118;
          sub_1000112B0(&v116, v117);
          j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v68, v69);
          double v95 = AnyDimension.value(in:rounded:)(a1, v19, v68, v69);
          v90(v19, v93);
          CGFloat v101 = v65;
          CGFloat v102 = v64;
          v128.origin.x = v65;
          v128.origin.y = v104;
          double v103 = v62;
          v128.size.width = v62;
          v128.size.height = v64;
          double MinY = CGRectGetMinY(v128);
          v129.origin.x = v42;
          v129.origin.y = v41;
          v129.size.width = a5;
          v129.size.height = v105;
          if (MinY < CGRectGetMaxY(v129))
          {
            double v100 = v67 + v95;
            do
            {
              v132.origin.x = v101;
              v132.size.height = v102;
              v132.size.width = v103;
              v132.origin.y = v104;
              CGFloat v73 = CGRectGetMinX(v132);
              CGFloat v74 = v73;
              if (!v60
                && (double v75 = MinY,
                    CGFloat v76 = v66,
                    double v77 = v67,
                    v135.origin.y = v96,
                    v135.origin.x = v97,
                    v135.size.height = v98,
                    v135.size.width = v99,
                    CGRectIntersectsRect(*(CGRect *)&v73, v135)))
              {
                v130.origin.y = v96;
                v130.origin.x = v97;
                v130.size.height = v98;
                v130.size.width = v99;
                double MinY = v95 + CGRectGetMaxY(v130);
                double v71 = a5;
                CGFloat v72 = v105;
              }

              else
              {
                v133.origin.x = v42;
                v133.origin.y = v41;
                v133.size.width = a5;
                v133.size.height = v105;
                v136.origin.x = v74;
                v136.origin.y = MinY;
                v136.size.width = v66;
                v136.size.height = v67;
                if (!CGRectIntersectsRect(v133, v136)) {
                  break;
                }
                uint64_t v79 = v115;
                if (!v115[2]) {
                  break;
                }
                if ((swift_isUniquelyReferenced_nonNull_native(v115, v78) & 1) != 0)
                {
                  uint64_t v80 = v79[2];
                  if (!v80) {
                    goto LABEL_28;
                  }
                }

                else
                {
                  uint64_t v79 = sub_100086EF0(v79);
                  uint64_t v80 = v79[2];
                  if (!v80)
                  {
LABEL_28:
                    __break(1u);
LABEL_29:
                    __break(1u);
LABEL_30:
                    __break(1u);
                    goto LABEL_31;
                  }
                }

                uint64_t v81 = v80 - 1;
                sub_1000243BC((__int128 *)&v79[5 * v80 - 1], (uint64_t)v106);
                v79[2] = v81;
                v115 = v79;
                sub_1000243BC(v106, (uint64_t)v107);
                sub_1000243BC(v107, (uint64_t)v108);
                sub_1000243BC(v108, (uint64_t)v109);
                uint64_t v82 = v110;
                uint64_t v83 = v111;
                sub_1000112B0(v109, v110);
                double v71 = a5;
                CGFloat v72 = v105;
                double v84 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
                dispatch thunk of LayoutView.frame.setter(v82, v83, v84);
                double MinY = v100 + MinY;
                _s8AppStore17PillOverlayLayoutVwxx_0(v109);
              }

              v131.origin.x = v42;
              v131.origin.y = v41;
              v131.size.width = v71;
              v131.size.height = v72;
              a5 = v71;
            }

            while (MinY < CGRectGetMaxY(v131));
          }

          sub_100087E34(&v116);
          if (__OFADD__(v60++, 1LL)) {
            goto LABEL_29;
          }
          double v59 = v92;
          double MaxX = v94 - (v92 + v103);
          v134.origin.x = v42;
          v134.origin.y = v41;
          v134.size.width = a5;
          CGFloat v50 = v105;
          v134.size.height = v105;
        }

        while (CGRectGetMinX(v134) < MaxX);
      }

      LayoutRect.init(representing:)(v57);
      swift_bridgeObjectRelease(v115);
      _s8AppStore17PillOverlayLayoutVwxx_0(v112);
    }

    else
    {
      uint64_t v86 = sub_100087DF4((uint64_t)&v116);
      static LayoutRect.zero.getter(v86);
      swift_bridgeObjectRelease(v115);
    }
  }

uint64_t sub_1000866A8(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  uint64_t *v1 = v3;
  if (!(_DWORD)result || v3 < 0 || (v3 & 0x4000000000000000LL) != 0)
  {
    uint64_t result = sub_100086E88(v3);
    uint64_t v3 = result;
    uint64_t *v1 = result;
  }

  unint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  if (v5 <= a1)
  {
    __break(1u);
  }

  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = (v3 & 0xFFFFFFFFFFFFFF8LL) + 8 * a1 + 32;
    uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8LL) + 8 * a1 + 0x20);
    id v9 = memmove((void *)v7, (const void *)(v7 + 8), 8 * (v5 - 1 - a1));
    *(void *)((*v1 & 0xFFFFFFFFFFFFF8LL) + 0x10) = v6;
    specialized Array._endMutation()(v9);
    return v8;
  }

  return result;
}

void *sub_10008673C(uint64_t a1)
{
  return sub_100086848(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1000B805C);
}

void *sub_100086748(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_1000038E8(&qword_1002E26C0);
  uint64_t v4 = swift_allocObject(v3, 48 * v1 + 32, 7LL);
  size_t v5 = j__malloc_size((const void *)v4);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  *(void *)(v4 + 24) = 2 * ((uint64_t)(v5 - 32) / 48);
  unint64_t v6 = sub_100087178(&v9, (_OWORD *)(v4 + 32), v1, a1);
  uint64_t v7 = v9;
  swift_bridgeObjectRetain(a1);
  sub_100004D40(v7);
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }

  return (void *)v4;
}

void *sub_10008683C(uint64_t a1)
{
  return sub_100086848(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1000B820C);
}

void *sub_100086848(uint64_t a1, uint64_t (*a2)(void *, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      unint64_t v6 = _swiftEmptyArrayStorage;
    }

    else
    {
      uint64_t v5 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
      unint64_t v6 = (void *)swift_allocObject(v5, 8 * v4 + 32, 7LL);
      int64_t v7 = j__malloc_size(v6);
      uint64_t v8 = v7 - 32;
      if (v7 < 32) {
        uint64_t v8 = v7 - 25;
      }
      v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }

    swift_bridgeObjectRetain(a1);
    uint64_t v9 = a2(v6 + 4, v4, a1);
    a2 = v10;
    swift_bridgeObjectRelease(v9);
    __break(1u);
LABEL_10:
    if (a1 < 0) {
      uint64_t v11 = a1;
    }
    else {
      uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }

  return v6;
}

void sub_100086948(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_14;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      if (v4 != a3) {
        goto LABEL_10;
      }
    }

    else
    {
      uint64_t v8 = sub_1000038E8(&qword_1002E5988);
      uint64_t v9 = *(void *)(type metadata accessor for AdamId(0LL) - 8);
      uint64_t v10 = *(void *)(v9 + 72);
      uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
      uint64_t v12 = (v11 + 32) & ~v11;
      uint64_t v13 = (void *)swift_allocObject(v8, v12 + v10 * v5, v11 | 7);
      size_t v14 = j__malloc_size(v13);
      if (!v10)
      {
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        return;
      }

      if (v14 - v12 == 0x8000000000000000LL && v10 == -1) {
        goto LABEL_16;
      }
      v13[2] = v5;
      v13[3] = 2 * ((uint64_t)(v14 - v12) / v10);
      if (v4 != a3)
      {
LABEL_10:
        uint64_t v16 = type metadata accessor for AdamId(0LL);
        swift_arrayInitWithCopy( (char *)v13 + ((*(unsigned __int8 *)(*(void *)(v16 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80LL)),  a2 + *(void *)(*(void *)(v16 - 8) + 72LL) * a3,  v5,  v16);
        return;
      }
    }

    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

void sub_100086A68(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }

  if (v5)
  {
    if (v5 <= 0)
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        uint64_t v12 = type metadata accessor for Artwork(0LL);
        swift_arrayInitWithCopy(v9 + 4, a2 + 8 * a3, v5, v12);
        return;
      }
    }

    else
    {
      uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
      uint64_t v9 = (void *)swift_allocObject(v8, 8 * v5 + 32, 7LL);
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }

    __break(1u);
    goto LABEL_11;
  }

void *sub_100086B44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_1000038E8((uint64_t *)&unk_1002E22C0);
  unint64_t v4 = (void *)swift_allocObject(v3, 40 * v1 + 32, 7LL);
  size_t v5 = j__malloc_size(v4);
  void v4[2] = v1;
  void v4[3] = 2 * ((uint64_t)(v5 - 32) / 40);
  uint64_t v6 = sub_1000873C4(&v9, (uint64_t)(v4 + 4), v1, a1);
  uint64_t v7 = v9;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v7);
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }

  return v4;
}

int64_t *sub_100086C0C(int64_t *result, int64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }

  else
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      uint64_t v6 = _swiftEmptyArrayStorage;
    }

    else
    {
      uint64_t v5 = sub_1000038E8((uint64_t *)&unk_1002EE350);
      uint64_t v6 = (int64_t *)swift_allocObject(v5, 8 * v2 + 32, 7LL);
      int64_t v7 = j__malloc_size(v6);
      uint64_t v8 = v7 - 32;
      if (v7 < 32) {
        uint64_t v8 = v7 - 25;
      }
      v6[2] = v2;
      v6[3] = 2 * (v8 >> 3);
    }

    uint64_t result = sub_100086FAC(v9, v6 + 4, v2, v4, a2);
  }

  __break(1u);
  return result;
}

void *sub_100086CD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_1000038E8((uint64_t *)&unk_1002EE350);
  int64_t v4 = (void *)swift_allocObject(v3, 8 * v1 + 32, 7LL);
  int64_t v5 = j__malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 25;
  }
  void v4[2] = v1;
  void v4[3] = 2 * (v6 >> 3);
  int64_t v7 = sub_1000874A0(&v10, v4 + 4, v1, a1);
  uint64_t v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_100004D40(v8);
  if (v7 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }

  return v4;
}

void *sub_100086DB4(void *result, uint64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v3 = v2 + 1;
  if (__OFADD__(v2, 1LL))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  if (v2 == -1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = (uint64_t)result;
  if (v3 <= 0)
  {
    int64_t v7 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v6 = sub_1000038E8((uint64_t *)&unk_1002EE350);
    int64_t v7 = (void *)swift_allocObject(v6, 8 * v3 + 32, 7LL);
    int64_t v8 = j__malloc_size(v7);
    uint64_t v9 = v8 - 32;
    if (v8 < 32) {
      uint64_t v9 = v8 - 25;
    }
    __int128 v7[2] = v3;
    v7[3] = 2 * (v9 >> 3);
  }

  uint64_t result = (void *)sub_1000870EC((uint64_t)&v10, (uint64_t)(v7 + 4), v3, v5, a2);
  if (result == (void *)v3) {
    return v7;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_100086E88(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v4 = a1;
    }
    else {
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0LL, v2, 0LL, a1);
}

void *sub_100086EF0(void *a1)
{
  return sub_1000183E4(0LL, a1[2], 0, a1);
}

void *sub_100086F04(void *a1)
{
  return sub_100018BF0(0LL, a1[2], 0, a1);
}

char *sub_100086F18(uint64_t a1)
{
  return sub_100018D10(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_100086F2C(void *a1)
{
  return sub_10001930C(0LL, a1[2], 0, a1);
}

uint64_t sub_100086F40()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v0);
  uint64_t *v0 = v1;
  if (!(_DWORD)result || v1 < 0 || (v1 & 0x4000000000000000LL) != 0)
  {
    uint64_t result = sub_100086E88(v1);
    uint64_t v1 = result;
    uint64_t *v0 = result;
  }

  uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8LL) + 8 * v5 + 0x20);
    *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
    specialized Array._endMutation()(result);
    return v6;
  }

  else
  {
    __break(1u);
  }

  return result;
}

int64_t *sub_100086FAC( int64_t *result, int64_t *a2, uint64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    int64_t v5 = a4;
LABEL_7:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }

  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0LL;
    goto LABEL_6;
  }

  if (a5 < a4) {
    goto LABEL_32;
  }
  int64_t v6 = a5 - a4;
  if (a5 > a4)
  {
    int64_t v5 = a4 + 1;
    *a2 = a4;
    if (a3 == 1) {
      goto LABEL_7;
    }
    if (v5 == a5)
    {
      a3 = 1LL;
      int64_t v5 = a5;
      goto LABEL_7;
    }

    unint64_t v7 = v6 - 2;
    if (v7 >= ~a4 + a5) {
      unint64_t v7 = ~a4 + a5;
    }
    unint64_t v8 = v7 + 1;
    if (v8 >= 5)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4LL;
      }
      unint64_t v12 = v8 - v11;
      int64_t v13 = v5 + v8 - v11;
      uint64_t v10 = &a2[v8 - v11];
      uint64_t v9 = v12 + 2;
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_100237A70);
      NSString v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        int64x2_t *v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4LL;
      }

      while (v12);
      int64_t v5 = v13;
    }

    else
    {
      uint64_t v9 = 2LL;
      uint64_t v10 = a2;
    }

    uint64_t v17 = v10 + 1;
    while (v5 < a5)
    {
      int64_t v18 = v5 + 1;
      *uint64_t v17 = v5;
      if (a3 == v9)
      {
        ++v5;
        goto LABEL_7;
      }

      ++v9;
      ++v17;
      ++v5;
      if (a5 == v18)
      {
        int64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
    }

    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_1000870EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    BOOL v7 = 0;
    a3 = 0LL;
    goto LABEL_14;
  }

  if (!a3)
  {
    BOOL v7 = 0;
LABEL_14:
    uint64_t v8 = a4;
LABEL_15:
    *(void *)uint64_t result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
    *(_BYTE *)(result + 24) = v7;
    return a3;
  }

  if (a3 < 0) {
    goto LABEL_17;
  }
  uint64_t v5 = 0LL;
  uint64_t v6 = a4;
  while (1)
  {
    BOOL v7 = v6 == a5;
    if (v6 != a5) {
      break;
    }
    uint64_t v8 = 0LL;
LABEL_8:
    *(void *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5) {
      goto LABEL_15;
    }
    ++v5;
    BOOL v9 = v6 == a5;
    uint64_t v6 = v8;
    if (v9)
    {
      BOOL v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }

  uint64_t v8 = v6 + 1;
  if (!__OFADD__(v6, 1LL)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

void *sub_100087178(void *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1LL << -(char)v6);
  }
  else {
    uint64_t v7 = -1LL;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0LL;
    uint64_t v12 = 0LL;
LABEL_37:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v12;
  }

  if (!a3)
  {
    int64_t v11 = 0LL;
    uint64_t v12 = 0LL;
    goto LABEL_37;
  }

  if (a3 < 0) {
    goto LABEL_39;
  }
  uint64_t v10 = a2;
  uint64_t v23 = -1LL << *(_BYTE *)(a4 + 32);
  uint64_t v24 = result;
  int64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  int64_t v25 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    int64_t v18 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_100007338(*(void *)(a4 + 56) + 32 * v14, (uint64_t)&v27);
    *(void *)&__int128 v26 = v20;
    *((void *)&v26 + 1) = v19;
    __int128 v22 = v27;
    __int128 v21 = v28;
    __int128 v30 = v27;
    __int128 v31 = v28;
    __int128 v29 = v26;
    *uint64_t v10 = v26;
    v10[1] = v22;
    v10[2] = v21;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain(v19);
      uint64_t v12 = a3;
      goto LABEL_36;
    }

    v10 += 3;
    uint64_t result = (void *)swift_bridgeObjectRetain(v19);
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1LL)) {
      break;
    }
    if (v15 >= v25) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      int64_t v17 = v11 + 2;
      ++v11;
      if (v15 + 1 >= v25) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v17);
      if (v16) {
        goto LABEL_14;
      }
      int64_t v11 = v15 + 1;
      if (v15 + 2 >= v25) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v5 + 8 * (v15 + 2));
      if (v16)
      {
        v15 += 2LL;
      }

      else
      {
        int64_t v11 = v15 + 2;
        if (v15 + 3 >= v25) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v5 + 8 * (v15 + 3));
        if (!v16)
        {
          int64_t v17 = v15 + 4;
          int64_t v11 = v15 + 3;
          if (v15 + 4 < v25)
          {
            unint64_t v16 = *(void *)(v5 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v15 = v17 + 1;
                if (__OFADD__(v17, 1LL)) {
                  goto LABEL_40;
                }
                if (v15 >= v25)
                {
                  int64_t v11 = v25 - 1;
                  goto LABEL_35;
                }

                unint64_t v16 = *(void *)(v5 + 8 * v15);
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }

uint64_t sub_1000873C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  if (a2)
  {
    if (a3)
    {
      if ((a3 & 0x8000000000000000LL) == 0)
      {
        if (!v6)
        {
LABEL_17:
          uint64_t v11 = 0LL;
          goto LABEL_14;
        }

        uint64_t v8 = a2;
        uint64_t v9 = 0LL;
        uint64_t v10 = a4 + 40 * v6 - 8;
        while (v6 + v9 <= *(void *)(a4 + 16))
        {
          sub_100011C30(v10, v8);
          if (a3 + v9 == 1)
          {
            uint64_t v11 = v6 + v9 - 1;
            goto LABEL_13;
          }

          v8 += 40LL;
          --v9;
          v10 -= 40LL;
          uint64_t v11 = v6 + v9;
          if (!(v6 + v9)) {
            goto LABEL_14;
          }
        }

        __break(1u);
      }

      __break(1u);
      goto LABEL_17;
    }

    uint64_t v11 = *(void *)(a4 + 16);
LABEL_13:
    uint64_t v6 = a3;
  }

  else
  {
    uint64_t v11 = *(void *)(a4 + 16);
    uint64_t v6 = 0LL;
  }

void *sub_1000874A0(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1LL;
  uint64_t v6 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0LL;
    a3 = 0LL;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }

  if (!a3)
  {
    int64_t v8 = 0LL;
    goto LABEL_35;
  }

  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }

  int64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }

  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1LL))
  {
    __break(1u);
    goto LABEL_37;
  }

  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2LL;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0LL;
    int64_t v8 = v13;
    goto LABEL_34;
  }

  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }

  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }

  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0LL;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }

  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0LL;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }

  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0LL;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }

    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }

LABEL_38:
  __break(1u);
  return result;
}

  __break(1u);
}

        __break(1u);
        goto LABEL_39;
      }

  swift_bridgeObjectRelease(v80);
  v87 = *(void *)&v62[OBJC_IVAR____TtC8AppStore38ProductStarRatingsHistogramContentView_progressBarViews];
  if (!((unint64_t)v87 >> 62))
  {
    uint64_t v88 = *(void *)((v87 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(*(void *)&v62[OBJC_IVAR____TtC8AppStore38ProductStarRatingsHistogramContentView_progressBarViews]);
    if (v88) {
      goto LABEL_40;
    }
LABEL_50:
    swift_bridgeObjectRelease(v87);
    objc_msgSend(v62, "setLayoutMargins:", 20.0, 20.0, 20.0, 20.0);

    return (uint64_t)v62;
  }

  if (v87 < 0) {
    double v92 = *(void *)&v62[OBJC_IVAR____TtC8AppStore38ProductStarRatingsHistogramContentView_progressBarViews];
  }
  else {
    double v92 = v87 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)&v62[OBJC_IVAR____TtC8AppStore38ProductStarRatingsHistogramContentView_progressBarViews]);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v92);
  uint64_t v88 = result;
  if (!result) {
    goto LABEL_50;
  }
LABEL_40:
  if (v88 >= 1)
  {
    for (j = 0LL; j != v88; ++j)
    {
      if ((v87 & 0xC000000000000001LL) != 0) {
        v90 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v87);
      }
      else {
        v90 = *(id *)(v87 + 8 * j + 32);
      }
      double v91 = v90;
      [v62 addSubview:v90];
    }

    goto LABEL_50;
  }

  double v59 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E34F0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v60 = (void *)static OS_dispatch_queue.main.getter(v59);
  uint64_t v61 = (void *)swift_allocObject(&unk_100291028, 40LL, 7LL);
  double v62 = v76;
  v61[2] = v76;
  v61[3] = v53;
  uint64_t v63 = v77;
  v61[4] = v77;
  aBlock[4] = sub_1001A8A54;
  CGFloat v97 = v61;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100140110;
  aBlock[3] = &unk_100291040;
  CGFloat v64 = _Block_copy(aBlock);
  CGFloat v65 = v97;
  swift_bridgeObjectRetain(v62);
  CGFloat v66 = v53;
  swift_retain(v63);
  double v67 = swift_release(v65);
  uint64_t v68 = v78;
  static DispatchQoS.unspecified.getter(v67);
  aBlock[0] = _swiftEmptyArrayStorage;
  uint64_t v69 = sub_100004288( (unint64_t *)&qword_1002E8BF0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v70 = sub_1000038E8((uint64_t *)&unk_1002E34E0);
  double v71 = sub_10004899C();
  CGFloat v72 = v81;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v70, v71, v9, v69);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v68, v72, v64);
  _Block_release(v64);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v72, v9);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v68, v80);
}

void sub_100087634(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100087A4C(a1, a2, a3);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  sub_1000112B0((void *)a1, v13);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v13, v14);
  double v15 = AnyDimension.value(in:rounded:)(a2, v11, v13, v14);
  unint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  double v17 = a4 * 0.5;
  sub_100087CAC(a1, a2, a4 * 0.5 - v15 * 0.5);
  if (v18 + 0x4000000000000000LL < 0)
  {
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v19 = 2 * v18 - 1;
  if (__OFSUB__(2 * v18, 1LL))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  if (v12 < 2) {
    return;
  }
  uint64_t v33 = 2 * v18;
  uint64_t v34 = v12;
  double v20 = *(double *)(a1 + 48);
  uint64_t v21 = *(void *)(a1 + 24);
  uint64_t v22 = *(void *)(a1 + 32);
  sub_1000112B0((void *)a1, v21);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v21, v22);
  double v23 = AnyDimension.value(in:rounded:)(a2, v11, v21, v22);
  v16(v11, v8);
  sub_100087CAC(a1, a2, v17 + v20 * -0.5 - v23);
  if (v24 + 0x4000000000000000LL < 0) {
    goto LABEL_18;
  }
  double v25 = (double)(v34 - 1) * 0.5;
  double v26 = ceil(v25);
  if ((~*(void *)&v26 & 0x7FF0000000000000LL) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  if (v26 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }

  if (v26 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  double v27 = floor(v25);
  if ((~*(void *)&v27 & 0x7FF0000000000000LL) == 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  if (v27 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }

  if (v27 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }

  uint64_t v28 = (2 * v24) | 1;
  uint64_t v29 = v28 * (uint64_t)v26;
  if ((unsigned __int128)(v28 * (__int128)(uint64_t)v26) >> 64 != v29 >> 63)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }

  BOOL v30 = __OFADD__(v19, v29);
  uint64_t v31 = v19 + v29;
  if (v30)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }

  uint64_t v32 = v33 * (uint64_t)v27;
  if ((unsigned __int128)(v33 * (__int128)(uint64_t)v27) >> 64 != v32 >> 63)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }

  if (__OFADD__(v31, v32)) {
LABEL_28:
  }
    __break(1u);
}

double sub_1000878F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AspectRatio(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v12 = *(double *)(a1 + 40);
  double v13 = *(double *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  sub_1000112B0((void *)a1, v14);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v14, v15);
  double v16 = AnyDimension.value(in:rounded:)(a2, v11, v14, v15);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  AspectRatio.init(_:_:)(v17, v12);
  double v18 = AspectRatio.width(fromHeight:)(v13 + v13 + v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v18;
}

uint64_t sub_100087A4C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = 0LL;
  if (a3 <= COERCE_DOUBLE(1LL)) {
    return v14;
  }
  double v15 = *(double *)(a1 + 40);
  double v16 = *(double *)(a1 + 48) + *(double *)(a1 + 48);
  uint64_t v32 = v6;
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 32);
  sub_1000112B0((void *)a1, v17);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v17, v18);
  double v19 = AnyDimension.value(in:rounded:)(a2, v13, v17, v18);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  uint64_t v21 = v20(v13, v10);
  AspectRatio.init(_:_:)(v21, v15);
  double v22 = AspectRatio.width(fromHeight:)(v16 + v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v32);
  uint64_t v23 = *(void *)(a1 + 24);
  uint64_t v24 = *(void *)(a1 + 32);
  sub_1000112B0((void *)a1, v23);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v23, v24);
  double v25 = AnyDimension.value(in:rounded:)(a2, v13, v23, v24);
  uint64_t result = v20(v13, v10);
  double v27 = a3 - (v22 + v25);
  if (v27 <= 0.0) {
    return 1LL;
  }
  double v28 = v15 + v25;
  if (v15 + v25 >= v27) {
    return 2LL;
  }
  double v29 = floor(v27 / v28);
  if ((~*(void *)&v29 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }

  if (v29 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  if (v29 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v14 = (uint64_t)v29 + 1;
  if (!__OFADD__((uint64_t)v29, 1LL))
  {
    if (v25 >= fmod(v27, v28)) {
      return v14;
    }
    if (!__OFADD__(v14++, 1LL)) {
      return v14;
    }
    __break(1u);
    return 1LL;
  }

void sub_100087CAC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v10 = *(double *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  sub_1000112B0((void *)a1, v11);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v11, v12);
  double v13 = AnyDimension.value(in:rounded:)(a2, v9, v11, v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  double v14 = floor(a3 / (v10 + v13));
  if ((~*(void *)&v14 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }

  if (v14 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }

  if (v14 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }

  uint64_t v15 = (uint64_t)v14;
  if (v13 < fmod(a3, v10 + v13) && __OFADD__(v15, 1LL)) {
    goto LABEL_10;
  }
}

uint64_t sub_100087DF4(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002E6680);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void *sub_100087E34(void *a1)
{
  return a1;
}

double destroy for TVUpsellGridLayout(void *a1)
{
  *(void *)&double result = swift_bridgeObjectRelease(a1[7]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for TVUpsellGridLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain(v5);
  return a1;
}

void *assignWithCopy for TVUpsellGridLayout(void *a1, void *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  uint64_t v4 = a2[7];
  uint64_t v5 = a1[7];
  a1[7] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

__n128 initializeWithTake for TVUpsellGridLayout(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TVUpsellGridLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVUpsellGridLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVUpsellGridLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 64) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVUpsellGridLayout()
{
  return &type metadata for TVUpsellGridLayout;
}

uint64_t initializeWithCopy for TVUpsellGridLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

void *assignWithCopy for TVUpsellGridLayout.Metrics(void *a1, void *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

__n128 initializeWithTake for TVUpsellGridLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TVUpsellGridLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVUpsellGridLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVUpsellGridLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 56) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVUpsellGridLayout.Metrics()
{
  return &type metadata for TVUpsellGridLayout.Metrics;
}

double sub_1000881A8@<D0>(uint64_t a1@<X8>)
{
  unint64_t v3 = sub_10003AE88();
  id v4 = v1;
  uint64_t v5 = sub_1000038E8(&qword_1002E5990);
  if ((swift_dynamicCast(&v11, &v14, v3, v5, 6LL) & 1) != 0)
  {
    sub_1000243BC(&v11, (uint64_t)v15);
    uint64_t v6 = v16;
    uint64_t v7 = v17;
    sub_1000112B0(v15, v16);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v7 + 16))(&v11, v6, v7);
    if (*((void *)&v12 + 1))
    {
      sub_1000243BC(&v11, a1);
      _s8AppStore17PillOverlayLayoutVwxx_0(v15);
      return result;
    }

    sub_1000077E0((uint64_t)&v11, (uint64_t *)&unk_1002E5E90);
    _s8AppStore17PillOverlayLayoutVwxx_0(v15);
  }

  else
  {
    uint64_t v13 = 0LL;
    __int128 v11 = 0u;
    __int128 v12 = 0u;
    sub_1000077E0((uint64_t)&v11, &qword_1002E5998);
  }

  id v9 = [v4 nextResponder];
  if (v9)
  {
    double v10 = v9;
    sub_1000881A8();
  }

  else
  {
    *(void *)(a1 + 32) = 0LL;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  }

  return result;
}

id sub_1000882E4(uint64_t a1, uint64_t a2)
{
  return sub_10008830C( a1,  a2,  &OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeLabel,  &OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeText);
}

id sub_1000882F8(uint64_t a1, uint64_t a2)
{
  return sub_10008830C( a1,  a2,  &OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleLabel,  &OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleText);
}

id sub_10008830C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = *(void **)&v4[*a3];
  [v8 setHidden:1];
  id v9 = &v4[*a4];
  uint64_t v10 = *((void *)v9 + 1);
  *(void *)id v9 = a1;
  *((void *)v9 + 1) = a2;
  swift_bridgeObjectRelease(v10);
  unint64_t v11 = *((void *)v9 + 1);
  if (v11)
  {
    uint64_t v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000LL) == 0) {
      uint64_t v12 = *(void *)v9 & 0xFFFFFFFFFFFFLL;
    }
    if (v12)
    {
      swift_bridgeObjectRetain(*((void *)v9 + 1));
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v11);
      [v8 setText:v13];

      [v8 setHidden:0];
    }
  }

  return [v4 setNeedsLayout];
}

char *sub_1000883EC(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for CornerStyle(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = &v4[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_itemLayoutContext];
  uint64_t v16 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  uint64_t v17 = OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeLabel;
  uint64_t v18 = (objc_class *)type metadata accessor for DynamicTypeLabel(0LL);
  id v19 = objc_allocWithZone(v18);
  uint64_t v20 = v5;
  *(void *)&v5[v17] = objc_msgSend(v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v21 = &v20[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeText];
  *(void *)uint64_t v21 = 0LL;
  *((void *)v21 + 1) = 0LL;
  double v22 = &v20[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleText];
  *(void *)double v22 = 0LL;
  *((void *)v22 + 1) = 0LL;
  uint64_t v23 = &v20[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext];
  uint64_t v25 = type metadata accessor for ChartOrCategoryBrickContext(0LL, v24);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v23, 1LL, 1LL, v25);
  type metadata accessor for ArtworkView(0LL);
  *(void *)&v20[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_artworkView] = static ArtworkView.plainArtworkView.getter();
  id v26 = objc_msgSend(objc_allocWithZone(v18), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v27 = OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleLabel;
  *(void *)&v20[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleLabel] = v26;
  id v28 = v26;
  sub_100012AD8(1);

  id v29 = *(id *)&v5[v17];
  sub_100012AD8(1);

  id v30 = *(id *)&v20[v27];
  [v30 setLineBreakMode:0];

  v51.receiver = v20;
  v51.super_class = ObjectType;
  id v31 = objc_msgSendSuper2(&v51, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v32 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v33 = (char *)v31;
  id v34 = [v32 clearColor];
  [v33 setBackgroundColor:v34];

  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  objc_msgSend(v33, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  id v38 = [v33 contentView];
  objc_msgSend(v38, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  id v39 = [v33 contentView];
  [v39 addSubview:*(void *)&v33[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_artworkView]];

  id v40 = [v33 contentView];
  [v40 addSubview:*(void *)&v33[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleLabel]];

  id v41 = [v33 contentView];
  uint64_t v42 = OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeLabel;
  [v41 addSubview:*(void *)&v33[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeLabel]];

  id v43 = [*(id *)&v33[v42] layer];
  [v43 setCompositingFilter:kCAFilterPlusL];

  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for CornerStyle.continuous(_:), v11);
  id v44 = [v33 contentView];
  CornerStyle.apply(withRadius:to:)(v44, 12.0);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v45 = [v33 contentView];
  [v45 setClipsToBounds:1];

  uint64_t v46 = sub_1000038E8((uint64_t *)&unk_1002E5A50);
  uint64_t v47 = swift_allocObject(v46, 48LL, 7LL);
  *(_OWORD *)(v47 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  *(void *)(v47 + 32) = type metadata accessor for UITraitLegibilityWeight(0LL);
  *(void *)(v47 + 40) = &protocol witness table for UITraitLegibilityWeight;
  __n128 v48 = v33;
  uint64_t v49 = UIView.registerForTraitChanges<A>(_:handler:)(v47, sub_10008A0F0, 0LL, ObjectType);
  swift_unknownObjectRelease(v49);
  swift_bridgeObjectRelease(v47);

  return v48;
}

uint64_t sub_1000888B4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v37 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout(0LL);
  uint64_t v36 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  unint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = type metadata accessor for LayoutRect(0LL);
  uint64_t v34 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000038E8(&qword_1002E5A38);
  __n128 v7 = __chkstk_darwin(v6);
  id v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ChartOrCategoryBrickContext(0LL, v7);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&double v15 = __chkstk_darwin(v14).n128_u64[0];
  uint64_t v17 = (char *)&v32 - v16;
  v44.receiver = v0;
  v44.super_class = ObjectType;
  objc_msgSendSuper2(&v44, "layoutSubviews", v15);
  uint64_t v18 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext], v43, 0LL, 0LL);
  sub_10000DF2C(v18, (uint64_t)v9, &qword_1002E5A38);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v9, v10);
  uint64_t v20 = sub_100088C2C();
  __n128 v21 = swift_release(v20);
  (*(void (**)(char *, char *, uint64_t, __n128))(v11 + 16))(v13, v17, v10, v21);
  double v22 = *(void **)&v0[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeLabel];
  uint64_t v41 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v42 = &protocol witness table for UILabel;
  void v39[4] = &protocol witness table for UILabel;
  id v40 = v22;
  uint64_t v23 = *(void **)&v0[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleLabel];
  v39[3] = v41;
  v39[0] = v23;
  uint64_t v33 = v5;
  __n128 v24 = *(void **)&v0[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_artworkView];
  uint64_t v25 = type metadata accessor for ArtworkView(0LL);
  v38[4] = protocol witness table for UIView;
  v38[3] = v25;
  v38[0] = v24;
  memset(v45, 0, sizeof(v45));
  char v46 = 1;
  id v26 = v22;
  id v27 = v23;
  id v28 = v24;
  ChartOrCategoryBrickCollectionViewCellLayout.init(context:badgeTextView:titleTextView:artworkView:textExclusionRect:)( v13,  &v40,  v39,  v38,  v45);
  id v29 = [v0 contentView];
  [v29 frame];

  __n128 v30 = CGRect.subtracting(insets:)([v0 layoutMargins]);
  id v31 = v33;
  ChartOrCategoryBrickCollectionViewCellLayout.placeChildren(relativeTo:in:)(v0, v30);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v3, v37);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v10);
}

uint64_t sub_100088C2C()
{
  uint64_t v1 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v59 = *(void *)(v1 - 8);
  uint64_t v60 = v1;
  __chkstk_darwin(v1);
  id v58 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout.Metrics(0LL);
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  __chkstk_darwin(v3);
  uint64_t v61 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for AspectRatio(0LL);
  uint64_t v66 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  __chkstk_darwin(v5);
  CGFloat v65 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v8 = __chkstk_darwin(v7);
  CGFloat v64 = (char *)&v58 - v9;
  uint64_t v10 = type metadata accessor for ChartOrCategoryBrickStyle(0LL, v8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000038E8(&qword_1002E5A38);
  __n128 v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for ChartOrCategoryBrickContext(0LL, v15);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  __n128 v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v68 = v0;
  uint64_t v22 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext], v69, 0LL, 0LL);
  sub_10000DF2C(v22, (uint64_t)v17, &qword_1002E5A38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1LL, v18) == 1)
  {
    sub_1000077E0((uint64_t)v17, &qword_1002E5A38);
    return 0LL;
  }

  uint64_t v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
  uint64_t v24 = ChartOrCategoryBrickContext.currentArtwork.getter(v23);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    return 0LL;
  }

  uint64_t v25 = v24;
  ChartOrCategoryBrickContext.style.getter(v24);
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v26 == enum case for ChartOrCategoryBrickStyle.tile(_:)
    || v26 == enum case for ChartOrCategoryBrickStyle.pill(_:))
  {
    id v40 = [v68 frame];
    double v42 = v41;
    double v44 = v43;
    double v45 = Artwork.size.getter(v40);
    char v46 = v64;
    AspectRatio.init(_:_:)(v47, v45);
    __n128 v48 = v65;
    __n128 v50 = AspectRatio.init(_:_:)(v49, v42);
    v51.n128_f64[0] = AspectRatio.horizontalFraction.getter(v50);
    if (v51.n128_f64[0] >= AspectRatio.horizontalFraction.getter(v51)) {
      double v44 = AspectRatio.height(fromWidth:)(v42);
    }
    else {
      double v42 = AspectRatio.width(fromHeight:)(v44);
    }
    uint64_t v52 = v67;
    uint64_t v53 = *(void (**)(char *, uint64_t))(v66 + 8);
    v53(v48, v67);
    uint64_t v54 = ((uint64_t (*)(char *, uint64_t))v53)(v46, v52);
    uint64_t v55 = Artwork.contentMode.getter(v54);
    uint64_t v39 = Artwork.config(_:mode:prefersLayeredImage:)(v55, 0LL, v42, v44);
  }

  else
  {
    if (v26 != enum case for ChartOrCategoryBrickStyle.round(_:))
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      swift_release(v25);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return 0LL;
    }

    id v27 = v61;
    uint64_t v28 = ChartOrCategoryBrickContext.layoutMetrics.getter();
    double v29 = COERCE_DOUBLE(ChartOrCategoryBrickCollectionViewCellLayout.Metrics.artworkSize.getter(v28));
    double v31 = v30;
    char v33 = v32;
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v27, v63);
    if ((v33 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      swift_release(v25);
      return 0LL;
    }

    double v35 = v31;
    uint64_t v36 = v58;
    uint64_t v37 = Artwork.crop.getter(v34);
    uint64_t v38 = Artwork.Crop.preferredContentMode.getter(v37);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v36, v60);
    uint64_t v39 = Artwork.config(_:mode:prefersLayeredImage:)(v38, 0LL, v29, v35);
  }

  sub_1001092E4();
  __n128 v56 = swift_release(v25);
  (*(void (**)(char *, uint64_t, __n128))(v19 + 8))(v21, v18, v56);
  return v39;
}

uint64_t sub_1000891D0(__n128 a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for ChartOrCategoryBrickStyle(0LL, a1);
  uint64_t v102 = *(void *)(v3 - 8);
  uint64_t v103 = v3;
  __chkstk_darwin(v3);
  CGFloat v101 = (char *)v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  double v100 = (char *)v86 - v6;
  uint64_t v7 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v7);
  uint64_t v99 = (uint64_t)v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v10 = __chkstk_darwin(v9);
  CGFloat v97 = (char *)v86 - v11;
  uint64_t v98 = type metadata accessor for ChartOrCategoryBrickContext.LabelMetrics(0LL, v10);
  CGFloat v96 = *(void (**)(char *, uint64_t))(v98 - 8);
  __n128 v12 = __chkstk_darwin(v98);
  uint64_t v14 = (char *)v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v95 = type metadata accessor for ChartOrCategoryBrickContext.BrickLabelMetrics(0LL, v12);
  __n128 v15 = *(uint64_t (**)(char *, uint64_t))(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v17 = (char *)v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1000038E8(&qword_1002E5A38);
  __n128 v19 = __chkstk_darwin(v18);
  __n128 v21 = (char *)v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for ChartOrCategoryBrickContext(0LL, v19);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int v26 = &v2[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(&v2[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext], v110, 0LL, 0LL);
  uint64_t v27 = (uint64_t)v26;
  uint64_t v28 = v22;
  sub_10000DF2C(v27, (uint64_t)v21, &qword_1002E5A38);
  uint64_t v88 = v23;
  double v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  double v31 = v25;
  uint64_t v89 = v28;
  v30(v25, v21, v28);
  id v32 = [v2 traitCollection];
  uint64_t v33 = UITraitCollection.modifyingTraits(_:)(sub_100089B14, 0LL);

  uint64_t v93 = v15;
  uint64_t v34 = *(char **)&v2[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleLabel];
  double v35 = (void *)sub_10000EA38();
  uint64_t v36 = (void *)static UIColor.primaryText.getter();
  id v37 = [v36 resolvedColorWithTraitCollection:v33];

  [v34 setTextColor:v37];
  v90 = v2;
  uint64_t v38 = *(char **)&v2[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeLabel];
  v86[1] = v35;
  uint64_t v39 = (void *)static UIColor.tertiaryText.getter();
  v87 = (void *)v33;
  id v40 = [v39 resolvedColorWithTraitCollection:v33];

  double v41 = v38;
  double v94 = v38;
  [v38 setTextColor:v40];

  uint64_t v42 = ((uint64_t (*)(void))ChartOrCategoryBrickContext.labels.getter)();
  ChartOrCategoryBrickContext.BrickLabelMetrics.title.getter(v42);
  double v43 = (uint64_t (*)(char *, uint64_t))*((void *)v93 + 1);
  uint64_t v44 = v95;
  uint64_t v45 = v43(v17, v95);
  char v46 = v43;
  uint64_t v47 = ChartOrCategoryBrickContext.LabelMetrics.numberOfLines.getter(v45);
  __n128 v48 = (void (*)(char *, uint64_t))*((void *)v96 + 1);
  uint64_t v49 = v98;
  v48(v14, v98);
  id v50 = [v34 setNumberOfLines:v47];
  double v92 = v31;
  uint64_t v51 = ChartOrCategoryBrickContext.labels.getter(v50);
  ChartOrCategoryBrickContext.BrickLabelMetrics.badge.getter(v51);
  uint64_t v52 = v46(v17, v44);
  uint64_t v93 = v46;
  uint64_t v53 = ChartOrCategoryBrickContext.LabelMetrics.numberOfLines.getter(v52);
  CGFloat v96 = v48;
  v48(v14, v49);
  uint64_t v54 = ChartOrCategoryBrickContext.labels.getter([v41 setNumberOfLines:v53]);
  ChartOrCategoryBrickContext.BrickLabelMetrics.title.getter(v54);
  uint64_t v55 = v46(v17, v44);
  uint64_t v56 = (uint64_t)v97;
  ChartOrCategoryBrickContext.LabelMetrics.fontUseCase.getter(v55);
  v48(v14, v49);
  uint64_t v58 = type metadata accessor for FontUseCase(0LL, v57);
  double v91 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56LL);
  v91(v56, 0LL, 1LL, v58);
  uint64_t v59 = (uint64_t)&v34[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v34[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase], v109, 0LL, 0LL);
  uint64_t v60 = v99;
  sub_10000DF2C(v59, v99, &qword_1002E25C0);
  swift_beginAccess(v59, v108, 33LL, 0LL);
  sub_10000DBBC(v56, v59);
  swift_endAccess(v108);
  v86[0] = v34;
  sub_10001252C(v60);
  sub_1000077E0(v56, &qword_1002E25C0);
  uint64_t v61 = sub_1000077E0(v60, &qword_1002E25C0);
  uint64_t v62 = v92;
  uint64_t v63 = ChartOrCategoryBrickContext.labels.getter(v61);
  ChartOrCategoryBrickContext.BrickLabelMetrics.badge.getter(v63);
  uint64_t v64 = v93(v17, v44);
  ChartOrCategoryBrickContext.LabelMetrics.fontUseCase.getter(v64);
  v96(v14, v49);
  v91(v56, 0LL, 1LL, v58);
  uint64_t v65 = v103;
  uint64_t v66 = &v94[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v94[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase], v108, 0LL, 0LL);
  sub_10000DF2C((uint64_t)v66, v60, &qword_1002E25C0);
  swift_beginAccess(v66, &v106, 33LL, 0LL);
  sub_10000DBBC(v56, (uint64_t)v66);
  swift_endAccess(&v106);
  sub_10001252C(v60);
  sub_1000077E0(v56, &qword_1002E25C0);
  uint64_t v67 = sub_1000077E0(v60, &qword_1002E25C0);
  id v68 = v100;
  uint64_t v69 = v62;
  ChartOrCategoryBrickContext.style.getter(v67);
  double v71 = v101;
  uint64_t v70 = v102;
  (*(void (**)(char *, void, uint64_t))(v102 + 104))( v101,  enum case for ChartOrCategoryBrickStyle.round(_:),  v65);
  uint64_t v72 = sub_100004288( (unint64_t *)&unk_1002E5A40,  (uint64_t (*)(uint64_t))&type metadata accessor for ChartOrCategoryBrickStyle,  (uint64_t)&protocol conformance descriptor for ChartOrCategoryBrickStyle);
  dispatch thunk of RawRepresentable.rawValue.getter(&v106, v65, v72);
  dispatch thunk of RawRepresentable.rawValue.getter(&v104, v65, v72);
  uint64_t v73 = v107;
  uint64_t v74 = v105;
  if (v106 == v104 && v107 == v105)
  {
    swift_bridgeObjectRelease_n(v107, 2LL);
    double v75 = *(void (**)(char *, uint64_t))(v70 + 8);
    v75(v71, v65);
    uint64_t v76 = ((uint64_t (*)(char *, uint64_t))v75)(v68, v65);
    double v77 = v90;
    uint64_t v78 = v89;
    uint64_t v79 = v88;
    uint64_t v80 = v87;
LABEL_7:
    double v84 = (void *)static UIColor.secondaryText.getter(v76);
    [v86[0] setTextColor:v84];

    v85 = (void *)static UIColor.tertiaryText.getter();
    [v94 setTextColor:v85];

    goto LABEL_8;
  }

  char v81 = _stringCompareWithSmolCheck(_:_:expecting:)(v106, v107, v104, v105, 0LL);
  swift_bridgeObjectRelease(v73);
  __n128 v82 = swift_bridgeObjectRelease(v74);
  uint64_t v83 = *(void (**)(char *, uint64_t, __n128))(v70 + 8);
  v83(v71, v65, v82);
  uint64_t v76 = ((uint64_t (*)(char *, uint64_t))v83)(v68, v65);
  double v77 = v90;
  uint64_t v78 = v89;
  uint64_t v79 = v88;
  uint64_t v80 = v87;
  if ((v81 & 1) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  [v77 setNeedsLayout];

  return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v69, v78);
}

uint64_t sub_100089B14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  sub_10008AC58(a1, v1);
  return UIMutableTraits.userInterfaceStyle.setter(2LL, v1, v2);
}

uint64_t sub_100089B50@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  return sub_100111038(a2);
}

uint64_t sub_100089B9C()
{
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeText
                                      + 8));
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleText
                                      + 8));
  return sub_1000077E0( v0 + OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext,  &qword_1002E5A38);
}

uint64_t sub_100089CD8()
{
  return type metadata accessor for ChartOrCategoryBrickCollectionViewCell(0LL);
}

uint64_t type metadata accessor for ChartOrCategoryBrickCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E59F8;
  if (!qword_1002E59F8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChartOrCategoryBrickCollectionViewCell);
  }
  return result;
}

void sub_100089D1C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = &unk_10023A0B8;
    v6[5] = &unk_10023A0B8;
    sub_100021268( 319LL,  &qword_1002E5A10,  (uint64_t (*)(uint64_t))&type metadata accessor for ChartOrCategoryBrickContext);
    if (v5 <= 0x3F)
    {
      v6[6] = *(void *)(v4 - 8) + 64LL;
      swift_updateClassMetadata2(a1, 256LL, 7LL, v6, a1 + 472);
    }
  }

double sub_100089DE4()
{
  uint64_t v1 = sub_100088C2C();
  if (v1)
  {
    uint64_t v3 = v1;
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_artworkView);
    uint64_t v5 = type metadata accessor for ArtworkView(0LL);
    uint64_t v6 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v3, 2LL, 1LL, v4, v5, v6);
    *(void *)&double result = swift_release(v3).n128_u64[0];
  }

  return result;
}

uint64_t sub_100089E7C(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_artworkView);
  v8.value.super.Class isa = 0LL;
  v8.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v8, a3);
  uint64_t v5 = type metadata accessor for ArtworkView(0LL);
  uint64_t v6 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  return ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v4, 1LL, v5, v6);
}

uint64_t sub_100089EF8()
{
  return sub_100004288( &qword_1002E5A18,  type metadata accessor for ChartOrCategoryBrickCollectionViewCell,  (uint64_t)&unk_10023A0D0);
}

uint64_t sub_100089F24(uint64_t a1, void *a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1000038E8(&qword_1002E5A38);
  __chkstk_darwin(v10);
  __n128 v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v27[3] = a4;
  v27[4] = a5;
  uint64_t v13 = sub_10000DD7C(v27);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16LL))(v13, a1, a4);
  sub_100011C30((uint64_t)v27, (uint64_t)v26);
  sub_100011C30((uint64_t)v27, (uint64_t)v25);
  uint64_t v14 = swift_allocObject(&unk_100288C78, 56LL, 7LL);
  sub_1000243BC(v25, v14 + 16);
  v15.n128_f64[0] = ChartOrCategoryBrickContext.init(model:fontStyles:in:)(v26, sub_10008AC04, v14, a2);
  uint64_t v16 = type metadata accessor for ChartOrCategoryBrickContext(0LL, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v12, 0LL, 1LL, v16);
  uint64_t v17 = (uint64_t)&a3[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(&a3[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext], v26, 33LL, 0LL);
  sub_10008AC10((uint64_t)v12, v17);
  __n128 v18 = swift_endAccess(v26);
  sub_1000891D0(v18);
  uint64_t v19 = dispatch thunk of ChartOrCategoryBrick.brickTitle.getter(a4, a5);
  sub_10008830C( v19,  v20,  &OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleLabel,  &OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_titleText);
  uint64_t v21 = dispatch thunk of ChartOrCategoryBrick.brickBadge.getter(a4, a5);
  sub_10008830C( v21,  v22,  &OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeLabel,  &OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_badgeText);
  [a3 setNeedsLayout];
  return _s8AppStore17PillOverlayLayoutVwxx_0(v27);
}

id sub_10008A0F0(void *a1)
{
  return [a1 setNeedsLayout];
}

uint64_t sub_10008A0FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000038E8(&qword_1002E5A20);
  ItemLayoutContext.typedModel<A>(as:)(&v9, v2, v2);
  if (!v10) {
    return sub_1000077E0((uint64_t)&v9, (uint64_t *)&unk_1002E5A28);
  }
  sub_1000243BC(&v9, (uint64_t)v11);
  id v3 = sub_10014DB80();
  id v4 = [v3 traitCollection];
  swift_unknownObjectRelease(v3);
  uint64_t v5 = v12;
  uint64_t v6 = v13;
  uint64_t v7 = sub_1000112B0(v11, v12);
  sub_100089F24((uint64_t)v7, v4, v1, v5, v6);

  return _s8AppStore17PillOverlayLayoutVwxx_0(v11);
}

double sub_10008A1C4()
{
  uint64_t v132 = type metadata accessor for LabelPlaceholder(0LL);
  uint64_t v130 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  CGRect v131 = (char *)&v121 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v136 = type metadata accessor for FontUseCase(0LL, v1);
  CGRect v126 = *(uint64_t (**)(char *, uint64_t))(v136 - 8);
  __n128 v2 = __chkstk_darwin(v136);
  CGRect v128 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v140 = (void *)type metadata accessor for ChartOrCategoryBrickContext.LabelMetrics(0LL, v2);
  CGRect v125 = (void *)*(v140 - 1);
  __n128 v4 = __chkstk_darwin(v140);
  CGRect v129 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v139 = type metadata accessor for ChartOrCategoryBrickContext.BrickLabelMetrics(0LL, v4);
  uint64_t v124 = *(void *)(v139 - 8);
  __n128 v6 = __chkstk_darwin(v139);
  UIImage_optional v8 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v143 = type metadata accessor for DynamicTextAppearance(0LL, v6);
  uint64_t v137 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  CGRect v127 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  v138 = (char *)&v121 - v11;
  __chkstk_darwin(v12);
  v149 = (char *)&v121 - v13;
  __chkstk_darwin(v14);
  v142 = (char *)&v121 - v15;
  uint64_t v16 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout(0LL);
  uint64_t v145 = *(void *)(v16 - 8);
  uint64_t v146 = v16;
  __n128 v17 = __chkstk_darwin(v16);
  v144 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for ChartOrCategoryBrickStyle(0LL, v17);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for PageGrid(0LL);
  uint64_t v147 = *(void *)(v23 - 8);
  __n128 v24 = __chkstk_darwin(v23);
  int v26 = (void (**)(char *, void *))((char *)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v27 = type metadata accessor for ChartOrCategoryBrickContext(0LL, v24);
  uint64_t v148 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  v141 = (char *)&v121 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29);
  double v31 = (char *)&v121 - v30;
  uint64_t v32 = sub_1000038E8(&qword_1002E5A20);
  ItemLayoutContext.typedModel<A>(as:)(&v156, v32, v32);
  if (!*((void *)&v157 + 1))
  {
    sub_1000077E0((uint64_t)&v156, (uint64_t *)&unk_1002E5A28);
    return 0.0;
  }

  uint64_t v134 = v23;
  uint64_t v135 = v27;
  sub_1000243BC(&v156, (uint64_t)v159);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023A150, v33);
  ItemLayoutContext.subscript.getter(v152);
  swift_release(KeyPath);
  uint64_t v35 = v152[0];
  sub_100011C30((uint64_t)v159, (uint64_t)&v156);
  sub_100011C30((uint64_t)v159, (uint64_t)&v153);
  uint64_t v36 = swift_allocObject(&unk_100288C50, 56LL, 7LL);
  sub_1000243BC(&v153, v36 + 16);
  ChartOrCategoryBrickContext.init(model:fontStyles:in:)(&v156, sub_10008AC04, v36, v35);
  uint64_t v38 = swift_getKeyPath(&unk_10023A188, v37);
  ItemLayoutContext.subscript.getter(&v156);
  swift_release(v38);
  uint64_t v133 = v156;
  uint64_t v40 = swift_getKeyPath(&unk_10023A1B8, v39);
  ItemLayoutContext.subscript.getter(v26);
  swift_release(v40);
  double v41 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  double v43 = v42;
  ChartOrCategoryBrickContext.style.getter(v44);
  int v45 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v22, v19);
  char v46 = v26;
  if (v45 == enum case for ChartOrCategoryBrickStyle.tile(_:)
    || v45 == enum case for ChartOrCategoryBrickStyle.pill(_:))
  {
    uint64_t v110 = v31;
    uint64_t v111 = v148;
    v112 = v141;
    uint64_t v113 = v31;
    uint64_t v114 = v135;
    (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v141, v113, v135);
    uint64_t v158 = 0LL;
    __int128 v156 = 0u;
    __int128 v157 = 0u;
    uint64_t v155 = 0LL;
    __int128 v154 = 0u;
    __int128 v153 = 0u;
    uint64_t v115 = type metadata accessor for LayoutViewPlaceholder(0LL);
    swift_allocObject(v115, *(unsigned int *)(v115 + 48), *(unsigned __int16 *)(v115 + 52));
    uint64_t v116 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
    v152[3] = v115;
    v152[4] = &protocol witness table for LayoutViewPlaceholder;
    v152[0] = v116;
    memset(v151, 0, 32);
    v151[32] = 1;
    uint64_t v117 = v144;
    ChartOrCategoryBrickCollectionViewCellLayout.init(context:badgeTextView:titleTextView:artworkView:textExclusionRect:)( v112,  &v156,  &v153,  v152,  v151);
    uint64_t v118 = v133;
    ChartOrCategoryBrickCollectionViewCellLayout.measurements(fitting:in:)(v133, v41, v43);
    double v107 = v119;
    swift_unknownObjectRelease(v118);
    (*(void (**)(char *, uint64_t))(v145 + 8))(v117, v146);
    (*(void (**)(void *, uint64_t))(v147 + 8))(v46, v134);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v110, v114);
    goto LABEL_8;
  }

  if (v45 != enum case for ChartOrCategoryBrickStyle.round(_:))
  {
    swift_unknownObjectRelease(v133);
    (*(void (**)(void *, uint64_t))(v147 + 8))(v26, v134);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v31, v135);
    _s8AppStore17PillOverlayLayoutVwxx_0(v159);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    return 0.0;
  }

  uint64_t v47 = v138;
  uint64_t v48 = ((uint64_t (*)(void))DynamicTextAppearance.init())();
  uint64_t v49 = ChartOrCategoryBrickContext.labels.getter(v48);
  id v50 = v129;
  ChartOrCategoryBrickContext.BrickLabelMetrics.title.getter(v49);
  CGRect v122 = *(uint64_t (**)(char *, uint64_t))(v124 + 8);
  uint64_t v51 = v139;
  uint64_t v52 = v122(v8, v139);
  uint64_t v53 = v128;
  ChartOrCategoryBrickContext.LabelMetrics.fontUseCase.getter(v52);
  CGRect v123 = v31;
  CGRect v121 = (void (*)(char *, void *))v125[1];
  v121(v50, v140);
  DynamicTextAppearance.withFontUseCase(_:)(v53);
  uint64_t v124 = *((void *)v126 + 1);
  ((void (*)(char *, uint64_t))v124)(v53, v136);
  uint64_t v54 = *(uint64_t (**)(char *, uint64_t))(v137 + 8);
  CGRect v125 = v46;
  uint64_t v55 = v143;
  uint64_t v56 = v54(v47, v143);
  CGRect v126 = v54;
  uint64_t v57 = ChartOrCategoryBrickContext.labels.getter(v56);
  ChartOrCategoryBrickContext.BrickLabelMetrics.title.getter(v57);
  uint64_t v58 = v122;
  uint64_t v59 = v122(v8, v51);
  uint64_t v60 = ChartOrCategoryBrickContext.LabelMetrics.numberOfLines.getter(v59);
  uint64_t v61 = v140;
  uint64_t v62 = v121;
  v121(v50, v140);
  uint64_t v63 = v60;
  uint64_t v64 = v149;
  DynamicTextAppearance.withNumberOfLines(_:)(v63);
  uint64_t v65 = v54(v64, v55);
  uint64_t v66 = v127;
  uint64_t v67 = DynamicTextAppearance.init()(v65);
  uint64_t v68 = ChartOrCategoryBrickContext.labels.getter(v67);
  ChartOrCategoryBrickContext.BrickLabelMetrics.badge.getter(v68);
  uint64_t v69 = v58(v8, v139);
  ChartOrCategoryBrickContext.LabelMetrics.fontUseCase.getter(v69);
  v62(v50, v61);
  uint64_t v70 = v138;
  DynamicTextAppearance.withFontUseCase(_:)(v53);
  ((void (*)(char *, uint64_t))v124)(v53, v136);
  uint64_t v71 = v143;
  uint64_t v72 = v126;
  uint64_t v73 = v126(v66, v143);
  uint64_t v74 = v123;
  uint64_t v75 = ChartOrCategoryBrickContext.labels.getter(v73);
  ChartOrCategoryBrickContext.BrickLabelMetrics.badge.getter(v75);
  uint64_t v76 = v58(v8, v139);
  uint64_t v77 = ChartOrCategoryBrickContext.LabelMetrics.numberOfLines.getter(v76);
  v62(v50, v140);
  DynamicTextAppearance.withNumberOfLines(_:)(v77);
  uint64_t v78 = v70;
  uint64_t v79 = v72(v70, v71);
  ChartOrCategoryBrickContext.model.getter(&v156, v79);
  uint64_t v80 = *((void *)&v157 + 1);
  uint64_t v81 = v158;
  sub_1000112B0(&v156, *((uint64_t *)&v157 + 1));
  uint64_t v82 = dispatch thunk of ChartOrCategoryBrick.brickTitle.getter(v80, v81);
  uint64_t v84 = v83;
  v140 = *(void **)(v137 + 16);
  uint64_t v85 = v71;
  ((void (*)(char *, char *, uint64_t))v140)(v78, v142, v71);
  uint64_t v86 = LabelPlaceholder.Options.init(rawValue:)(0LL);
  v87 = v131;
  LabelPlaceholder.init(_:with:where:)(v82, v84, v78, v86);
  uint64_t v88 = _s8AppStore17PillOverlayLayoutVwxx_0(&v156);
  LabelPlaceholder.layoutTextView.getter(&v156, v88);
  uint64_t v89 = *(uint64_t (**)(char *, uint64_t))(v130 + 8);
  uint64_t v90 = v132;
  uint64_t v91 = v89(v87, v132);
  ChartOrCategoryBrickContext.model.getter(&v153, v91);
  uint64_t v92 = *((void *)&v154 + 1);
  uint64_t v93 = v155;
  sub_1000112B0(&v153, *((uint64_t *)&v154 + 1));
  uint64_t v94 = dispatch thunk of ChartOrCategoryBrick.brickBadge.getter(v92, v93);
  uint64_t v96 = v95;
  ((void (*)(char *, char *, uint64_t))v140)(v78, v149, v85);
  uint64_t v97 = LabelPlaceholder.Options.init(rawValue:)(0LL);
  LabelPlaceholder.init(_:with:where:)(v94, v96, v78, v97);
  uint64_t v98 = _s8AppStore17PillOverlayLayoutVwxx_0(&v153);
  LabelPlaceholder.layoutTextView.getter(&v153, v98);
  v89(v87, v90);
  uint64_t v99 = v148;
  double v100 = v141;
  uint64_t v101 = v135;
  (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v141, v74, v135);
  sub_100011C30((uint64_t)&v153, (uint64_t)v152);
  sub_100011C30((uint64_t)&v156, (uint64_t)v151);
  uint64_t v102 = type metadata accessor for LayoutViewPlaceholder(0LL);
  swift_allocObject(v102, *(unsigned int *)(v102 + 48), *(unsigned __int16 *)(v102 + 52));
  uint64_t v103 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v150[3] = v102;
  v150[4] = &protocol witness table for LayoutViewPlaceholder;
  v150[0] = v103;
  memset(v160, 0, 32);
  v160[32] = 1;
  uint64_t v104 = v144;
  ChartOrCategoryBrickCollectionViewCellLayout.init(context:badgeTextView:titleTextView:artworkView:textExclusionRect:)( v100,  v152,  v151,  v150,  v160);
  uint64_t v105 = v133;
  ChartOrCategoryBrickCollectionViewCellLayout.measurements(fitting:in:)(v133, v41, v43);
  double v107 = v106;
  swift_unknownObjectRelease(v105);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v104, v146);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v153);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v156);
  uint64_t v108 = v143;
  v109 = (void (*)(char *, uint64_t))v126;
  v126(v149, v143);
  v109(v142, v108);
  (*(void (**)(void *, uint64_t))(v147 + 8))(v125, v134);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v74, v101);
LABEL_8:
  _s8AppStore17PillOverlayLayoutVwxx_0(v159);
  return v107;
}

uint64_t sub_10008ABE0()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_10008AC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E5A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008AC58(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }

  return result;
}

uint64_t sub_10008AC80(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v3 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v56 = type metadata accessor for AspectRatio(0LL);
  uint64_t v6 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  UIImage_optional v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - v11;
  uint64_t v13 = type metadata accessor for ChartOrCategoryBrickContext(0LL, v10);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000038E8(&qword_1002E5A20);
  ItemLayoutContext.typedModel<A>(as:)(&v59, v17, v17);
  if (!v60) {
    return sub_1000077E0((uint64_t)&v59, (uint64_t *)&unk_1002E5A28);
  }
  uint64_t v53 = v14;
  uint64_t v54 = v13;
  sub_1000243BC(&v59, (uint64_t)v61);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023A150, v18);
  ItemLayoutContext.subscript.getter(&v58);
  swift_release(KeyPath);
  uint64_t v20 = v58;
  sub_100011C30((uint64_t)v61, (uint64_t)&v59);
  sub_100011C30((uint64_t)v61, (uint64_t)v57);
  uint64_t v21 = swift_allocObject(&unk_100288CA0, 56LL, 7LL);
  sub_1000243BC(v57, v21 + 16);
  ChartOrCategoryBrickContext.init(model:fontStyles:in:)(&v59, sub_10008AC04, v21, v20);
  uint64_t v22 = _swiftEmptyArrayStorage;
  *(void *)&__int128 v59 = _swiftEmptyArrayStorage;
  double v23 = sub_10008A1C4();
  uint64_t v25 = ChartOrCategoryBrickContext.currentArtwork.getter(v24);
  if (v25)
  {
    uint64_t v26 = v25;
    double v27 = Artwork.size.getter(v25);
    AspectRatio.init(_:_:)(v28, v27);
    __n128 v30 = AspectRatio.init(_:_:)(v29, 1.79769313e308);
    v31.n128_f64[0] = AspectRatio.horizontalFraction.getter(v30);
    double v32 = v31.n128_f64[0];
    double v33 = AspectRatio.horizontalFraction.getter(v31);
    uint64_t v52 = a2;
    if (v33 >= v32)
    {
      double v34 = 1.79769313e308;
      double v23 = AspectRatio.height(fromWidth:)(1.79769313e308);
    }

    else
    {
      double v34 = AspectRatio.width(fromHeight:)(v23);
    }

    uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
    uint64_t v37 = v8;
    uint64_t v38 = v56;
    uint64_t v39 = v36(v37, v56);
    uint64_t v40 = Artwork.crop.getter(v39);
    uint64_t v41 = Artwork.Crop.preferredContentMode.getter(v40);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v55);
    uint64_t v42 = Artwork.config(_:mode:prefersLayeredImage:)(v41, 0LL, v34, v23);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
    unint64_t v44 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v43 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v44 >= v43 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1LL);
    }
    uint64_t v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
    specialized Array._endMutation()(v45);
    __n128 v46 = swift_release(v26);
    ((void (*)(char *, uint64_t, __n128))v36)(v12, v38, v46);
    uint64_t v22 = (void *)v59;
  }

  uint64_t v47 = type metadata accessor for ArtworkLoaderConfig(0LL);
  uint64_t v48 = swift_bridgeObjectRetain(v22);
  LOBYTE(v47) = Array.isNotEmpty.getter(v48, v47);
  swift_bridgeObjectRelease(v22);
  uint64_t v49 = v59;
  uint64_t v50 = v53;
  if ((v47 & 1) != 0) {
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v59);
  }
  __n128 v51 = swift_bridgeObjectRelease(v49);
  (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v16, v54, v51);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v61);
}

uint64_t sub_10008B018@<X0>(void *a1@<X8>)
{
  return sub_100111038(a1);
}

double sub_10008B06C( double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10008B2E0(a1, a2, a5, a7, a8);
}

id sub_10008B07C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10008B4B0(*a1, a2, a3);
}

__n128 sub_10008B084@<Q0>(uint64_t a1@<X1>, void *a2@<X4>, uint64_t a3@<X8>, double a4@<D0>)
{
  __int128 v5 = v7[3];
  *(_OWORD *)(a3 + 32) = v7[2];
  *(_OWORD *)(a3 + 48) = v5;
  *(_OWORD *)(a3 + 64) = v7[4];
  __n128 result = (__n128)v7[1];
  *(_OWORD *)a3 = v7[0];
  *(__n128 *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  return result;
}

uint64_t sub_10008B0D4()
{
  return sub_100004288( &qword_1002E5A60,  (uint64_t (*)(uint64_t))&type metadata accessor for SmallBreakout,  (uint64_t)&protocol conformance descriptor for SmallBreakout);
}

uint64_t sub_10008B100@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SmallBreakoutLayout.Metrics(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001E64E4();
  uint64_t v16 = type metadata accessor for SmallBreakoutLayout(0LL);
  uint64_t v17 = sub_100004288( &qword_1002E5AB8,  (uint64_t (*)(uint64_t))&type metadata accessor for SmallBreakoutLayout,  (uint64_t)&protocol conformance descriptor for SmallBreakoutLayout);
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)( v15,  a2,  v16,  v17,  a4,  1.79769313e308);
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (qword_1002E0BE0 != -1) {
    swift_once(&qword_1002E0BE0, sub_100110BD8);
  }
  uint64_t v20 = type metadata accessor for StaticDimension(0LL);
  sub_10000A634(v20, (uint64_t)qword_1002F4540);
  id v21 = [a2 traitCollection];
  static Dimensions.defaultRoundingRule.getter(v21);
  double v22 = StaticDimension.value(compatibleWith:rounded:)(v21, v11);

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(void *)a3 = 0LL;
  *(void *)(a3 + 8) = 0LL;
  *(double *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v22;
  *(void *)(a3 + 24) = 0LL;
  *(double *)(a3 + 32) = a4;
  *(void *)(a3 + 40) = v19;
  *(void *)(a3 + 48) = 0LL;
  *(void *)(a3 + 56) = 0LL;
  *(_BYTE *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = a1;
  return result;
}

double sub_10008B2E0(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for SmallBreakoutLayout.Metrics(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SmallBreakoutLayout(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001E64E4();
  if (qword_1002E10D8 != -1) {
    swift_once(&qword_1002E10D8, sub_1001E66CC);
  }
  double v15 = *(double *)&qword_1002F5758;
  double v16 = *(double *)&qword_1002F5760;
  uint64_t v17 = type metadata accessor for LayoutViewPlaceholder(0LL);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  uint64_t v18 = LayoutViewPlaceholder.init(representing:)(v15, v16);
  v24[3] = v17;
  v24[4] = &protocol witness table for LayoutViewPlaceholder;
  v24[0] = v18;
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  uint64_t v19 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v23[3] = v17;
  v23[4] = &protocol witness table for LayoutViewPlaceholder;
  v23[0] = v19;
  SmallBreakoutLayout.init(metrics:iconView:detailsView:)(v10, v24, v23);
  uint64_t v20 = sub_100004288( &qword_1002E5AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for SmallBreakoutLayout,  (uint64_t)&protocol conformance descriptor for SmallBreakoutLayout);
  double v21 = dispatch thunk of Measurable.measurements(fitting:in:)(a5, v11, v20, a1, a2);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v21;
}

id sub_10008B4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v3);
  if (qword_1002E0B38 != -1) {
    swift_once(&qword_1002E0B38, sub_1000F0674);
  }
  uint64_t v6 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  uint64_t v7 = sub_10000A634(v6, (uint64_t)qword_1002F4338);
  uint64_t v8 = SmallBreakout.details.getter();
  sub_1000FC8E0(v7, v8, 0LL, 0LL, 0LL, a3);
  __n128 v9 = swift_release(v8);
  id v10 = (id)SmallBreakout.backgroundColor.getter(v9);
  if (!v10) {
    id v10 = [(id)objc_opt_self(UIColor) clearColor];
  }
  uint64_t v11 = v10;
  v17.receiver = v3;
  v17.super_class = ObjectType;
  objc_msgSendSuper2(&v17, "setBackgroundColor:", v10);
  uint64_t v12 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31SmallBreakoutCollectionViewCell_iconView];
  v16.receiver = v3;
  v16.super_class = ObjectType;
  id v13 = v12;
  id v14 = objc_msgSendSuper2(&v16, "backgroundColor");
  ArtworkView.backgroundColor.setter(v14);

  return objc_msgSend(v3, "setNeedsLayout", v16.receiver, v16.super_class);
}

uint64_t sub_10008B624()
{
  return sub_100004288( &qword_1002E5AC0,  type metadata accessor for MixedMediaLockupCollectionViewCell,  (uint64_t)&unk_10023A210);
}

double sub_10008B658(char a1, uint64_t a2, uint64_t a3, void *a4, double a5, double a6)
{
  uint64_t v59 = a3;
  uint64_t v54 = a2;
  uint64_t v58 = type metadata accessor for MixedMediaLockupLayout(0LL);
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  id v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000038E8(&qword_1002E8670);
  __n128 v15 = __chkstk_darwin(v14);
  objc_super v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v56 = type metadata accessor for MixedMediaLockupLayout.Metrics(0LL, v15);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  double v22 = (char *)&v51 - v21;
  if (qword_1002E0A20 != -1) {
    swift_once(&qword_1002E0A20, sub_1000B4060);
  }
  uint64_t v23 = type metadata accessor for LockupMediaLayout.Metrics(0LL);
  uint64_t v24 = sub_10000A634(v23, (uint64_t)qword_1002F3ED0);
  uint64_t v25 = type metadata accessor for LockupMediaLayout(0LL);
  uint64_t v26 = sub_100004288( &qword_1002E2718,  (uint64_t (*)(uint64_t))&type metadata accessor for LockupMediaLayout,  (uint64_t)&protocol conformance descriptor for LockupMediaLayout);
  double v27 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v24, a4, v25, v26, a5, a6);
  double v29 = v28;
  uint64_t v30 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v17, 1LL, 1LL, v30);
  sub_1000CD2A0(a4, 1, a1 & 1, (uint64_t)v17, (uint64_t)v22);
  sub_1000077E0((uint64_t)v17, &qword_1002E8670);
  uint64_t v31 = type metadata accessor for LayoutViewPlaceholder(0LL);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  uint64_t v32 = LayoutViewPlaceholder.init(measureWith:)(sub_10011B718, 0LL);
  uint64_t v33 = v59;
  if (v59 || (a1 & 1) != 0)
  {
    sub_100026F44();
    uint64_t v34 = qword_1002E0778;
    swift_bridgeObjectRetain(v33);
    if (v34 != -1) {
      swift_once(&qword_1002E0778, sub_100072F4C);
    }
    uint64_t v36 = type metadata accessor for FontUseCase(0LL, v35);
    uint64_t v37 = sub_10000A634(v36, (uint64_t)qword_1002F31C0);
    id v38 = [a4 traitCollection];
    uint64_t v39 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v37, v38);

    uint64_t v40 = type metadata accessor for Feature(0LL);
    *((void *)&v64 + 1) = v40;
    uint64_t v65 = sub_100004288( (unint64_t *)&qword_1002E21F0,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
    uint64_t v41 = sub_10000DD7C(&v63);
    (*(void (**)(void *, void, uint64_t))(*(void *)(v40 - 8) + 104LL))( v41,  enum case for Feature.measurement_with_labelplaceholder(_:),  v40);
    LOBYTE(v40) = isFeatureEnabled(_:)(&v63);
    _s8AppStore17PillOverlayLayoutVwxx_0(&v63);
    uint64_t v42 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v54,  v59,  v39,  4LL,  0LL,  0LL,  0LL,  0LL,  v40 & 1);
    LabelPlaceholderCompatibility.layoutTextView.getter(v62, v42);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v53);
    sub_10008C004((uint64_t)v62, (uint64_t)&v63);
  }

  else
  {
    uint64_t v65 = 0LL;
    __int128 v63 = 0u;
    __int128 v64 = 0u;
  }

  uint64_t v43 = v55;
  uint64_t v44 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v19, v22, v56);
  v62[3] = v31;
  v62[4] = &protocol witness table for LayoutViewPlaceholder;
  v62[0] = v32;
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  swift_retain(v32);
  uint64_t v45 = LayoutViewPlaceholder.init(representing:)(v27, v29);
  v61[3] = v31;
  v61[4] = &protocol witness table for LayoutViewPlaceholder;
  v61[0] = v45;
  sub_10008BFBC((uint64_t)&v63, (uint64_t)v60);
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)(v19, v62, v61, v60);
  uint64_t v46 = sub_100004288( &qword_1002E5AC8,  (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockupLayout,  (uint64_t)&protocol conformance descriptor for MixedMediaLockupLayout);
  uint64_t v47 = v58;
  double v48 = dispatch thunk of Measurable.measurements(fitting:in:)(a4, v58, v46, a5, a6);
  __n128 v49 = swift_release(v32);
  (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v11, v47, v49);
  sub_1000077E0((uint64_t)&v63, &qword_1002E3980);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v44);
  return v48;
}

double sub_10008BB8C()
{
  uint64_t v0 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v32 - v5;
  uint64_t v7 = type metadata accessor for PageGrid(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ShelfLayoutContext.contentPageGrid.getter(v11);
  double v12 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  double v14 = v13;
  __n128 v15 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v16 = v15(v10, v7);
  uint64_t v17 = ShelfLayoutContext.shelfPresentationHints.getter(v16);
  static Shelf.PresentationHints.showSupplementaryText.getter(v17);
  uint64_t v18 = sub_100004288( &qword_1002E36A0,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints,  (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  LOBYTE(v8) = dispatch thunk of SetAlgebra.isSuperset(of:)(v3, v0, v18);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v1 + 8);
  v19(v3, v0);
  uint64_t v20 = ((uint64_t (*)(char *, uint64_t))v19)(v6, v0);
  uint64_t v21 = ShelfLayoutContext.contentPageGrid.getter(v20);
  double v22 = PageGrid.containerWidth.getter(v21);
  uint64_t v23 = v15(v10, v7);
  uint64_t v24 = ShelfLayoutContext.traitCollection.getter(v23);
  uint64_t v25 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  uint64_t v26 = (char *)objc_allocWithZone(v25);
  double v27 = (double *)&v26[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *double v27 = v22;
  v27[1] = 1.79769313e308;
  *(void *)&v26[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v24;
  v33.receiver = v26;
  v33.super_class = v25;
  id v28 = objc_msgSendSuper2(&v33, "init");
  sub_10008B658(v8 & 1, 0LL, 0LL, v28, v12, v14);
  double v30 = v29;

  return v30;
}

double sub_10008BDB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PageGrid(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)&v29[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v8);
  ReadOnlyLens.value.getter(v29, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v11 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
  uint64_t v12 = type metadata accessor for MixedMediaLockup(0LL);
  uint64_t v13 = v28;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(v1 + 728))(v28);
  unint64_t v16 = v15;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023A290, v15);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(KeyPath);
  double v18 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  double v20 = v19;
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v21 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000LL) == 0) {
    uint64_t v21 = v14 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v22 = v21 != 0;
  if (v16) {
    int v23 = v22;
  }
  else {
    int v23 = 0;
  }
  id v24 = sub_10014DB80();
  swift_getObjectType(v24);
  sub_10011BAF0(v23, v14, v16, v24, v18, v20);
  double v26 = v25;
  swift_unknownObjectRelease(v24);
  swift_release(v13);
  swift_bridgeObjectRelease(v16);
  return v26;
}

uint64_t sub_10008BFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E3980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008C004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E3980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void sub_10008C04C(void *a1)
{
  id v9 = a1;
  sub_1001AE1BC(a1);
  id v3 = [(id)objc_opt_self(UIFocusSystem) focusSystemForEnvironment:v1];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 focusedItem];

    if (v5)
    {
      uint64_t v6 = objc_opt_self(&OBJC_CLASS___UIView);
      uint64_t v7 = swift_dynamicCastObjCClass(v5, v6);
      if (v7)
      {
        __n128 v8 = (void *)v7;
        swift_unknownObjectRetain(v5);
        sub_10008C130(v8, 0LL);
        swift_unknownObjectRelease(v5);
      }

      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_10008C130(void *a1, void *a2)
{
  if (a1)
  {
    id v24 = a1;
    id v4 = [v2 window];

    if (v4)
    {
      [v2 bounds];
      if (v6 != 0.0 || v5 != 0.0)
      {
        [v24 bounds];
        if (v8 != 0.0 || v7 != 0.0)
        {
          [v2 bounds];
          CGFloat v10 = v9;
          CGFloat v12 = v11;
          CGFloat v14 = v13;
          CGFloat v16 = v15;
          [v24 bounds];
          objc_msgSend(v2, "convertRect:fromCoordinateSpace:", v24);
          v26.origin.x = v17;
          v26.origin.y = v18;
          v26.size.width = v19;
          v26.size.height = v20;
          v25.origin.x = v10;
          v25.origin.y = v12;
          v25.size.width = v14;
          v25.size.height = v16;
          if (CGRectContainsRect(v25, v26))
          {
            uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)&v2[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_videoContainer] + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
            if (Strong)
            {
              BOOL v22 = (void *)Strong;
              sub_100139C18(1, a2);
            }

            goto LABEL_14;
          }
        }
      }
    }
  }

  int v23 = (_BYTE *)swift_unknownObjectWeakLoadStrong( *(void *)&v2[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_videoContainer] + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
  if (!v23) {
    return;
  }
  v23[qword_1002F4818] = 0;
  if ((v23[qword_1002F4830] & 1) == 0)
  {
    id v24 = v23;
    sub_10013B280();
LABEL_14:
    int v23 = v24;
  }
}

void sub_10008C2F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailsView);
  id v3 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
  if (v3)
  {
    id v4 = *(id *)(v2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
  }

  else
  {
    double v5 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton);
    if (!v5) {
      goto LABEL_11;
    }
    id v4 = v5;
    id v3 = 0LL;
  }

  id v6 = v3;
  id v7 = v4;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  unint64_t v9 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v8 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v9 >= v8 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1LL);
  }
  uint64_t v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
  specialized Array._endMutation()(v10);

  double v11 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton);
  if (v11)
  {
    id v12 = v11;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    unint64_t v14 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v13 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v14 >= v13 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1LL);
    }
    uint64_t v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
    specialized Array._endMutation()(v15);
  }

uint64_t sub_10008C494@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v64 = a3;
  uint64_t v63 = type metadata accessor for LargeHeroBreakoutLayout.DetailsVerticalPostion(0LL);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v61 = &v52[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v59 = &v52[-v7];
  uint64_t v60 = (void *)type metadata accessor for BreakoutDetailsLayout.DetailDimension(0LL);
  uint64_t v66 = *(v60 - 1);
  __chkstk_darwin(v60);
  uint64_t v58 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v9);
  uint64_t v67 = (double *)&v52[-v10];
  uint64_t v11 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  id v12 = *(void **)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v57 = &v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v14);
  CGFloat v16 = &v52[-v15];
  __chkstk_darwin(v17);
  CGFloat v19 = &v52[-v18];
  __n128 v21 = __chkstk_darwin(v20);
  int v23 = &v52[-v22];
  uint64_t v56 = (void (*)(_BYTE *, uint64_t, uint64_t, __n128))v12[2];
  v56(&v52[-v22], a1, v11, v21);
  uint64_t v24 = enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:);
  uint64_t v55 = (void (*)(_BYTE *, uint64_t, uint64_t))v12[13];
  v55(v19, enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:), v11);
  unint64_t v25 = sub_10008D9C0();
  uint64_t v65 = v23;
  dispatch thunk of RawRepresentable.rawValue.getter(&v73, v11, v25);
  dispatch thunk of RawRepresentable.rawValue.getter(&v69, v11, v25);
  uint64_t v26 = v74;
  uint64_t v27 = v70;
  if (v73 == v69 && v74 == v70)
  {
    swift_bridgeObjectRelease_n(v74, 2LL);
    uint64_t v28 = (void (*)(_BYTE *, uint64_t))v12[1];
    v28(v19, v11);
    double v29 = 1.0;
    double v30 = v60;
  }

  else
  {
    int v53 = a2;
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v74, v69, v70, 0LL);
    swift_bridgeObjectRelease(v26);
    __n128 v32 = swift_bridgeObjectRelease(v27);
    uint64_t v28 = (void (*)(_BYTE *, uint64_t))v12[1];
    ((void (*)(_BYTE *, uint64_t, __n128))v28)(v19, v11, v32);
    if ((v31 & 1) != 0)
    {
      double v29 = 1.0;
      double v30 = v60;
      LOBYTE(a2) = v53;
    }

    else
    {
      objc_super v33 = v67;
      *((void *)v67 + 3) = &type metadata for Double;
      *((void *)v33 + 4) = &protocol witness table for Double;
      double v29 = 440.0;
      double v30 = v60;
      LOBYTE(a2) = v53;
    }
  }

  *uint64_t v67 = v29;
  uint64_t v34 = v30;
  (*(void (**)(void))(v66 + 104))();
  v55(v16, v24, v11);
  dispatch thunk of RawRepresentable.rawValue.getter(&v73, v11, v25);
  dispatch thunk of RawRepresentable.rawValue.getter(&v69, v11, v25);
  uint64_t v35 = v74;
  uint64_t v36 = v70;
  uint64_t v60 = v28;
  if (v73 == v69 && v74 == v70)
  {
    swift_bridgeObjectRelease_n(v74, 2LL);
    v28(v16, v11);
    uint64_t v37 = (unsigned int *)&enum case for LargeHeroBreakoutLayout.DetailsVerticalPostion.bottom(_:);
  }

  else
  {
    unsigned __int8 v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v74, v69, v70, 0LL);
    swift_bridgeObjectRelease(v35);
    __n128 v39 = swift_bridgeObjectRelease(v36);
    ((void (*)(_BYTE *, uint64_t, __n128))v28)(v16, v11, v39);
    else {
      uint64_t v37 = (unsigned int *)&enum case for LargeHeroBreakoutLayout.DetailsVerticalPostion.center(_:);
    }
  }

  uint64_t v40 = v11;
  uint64_t v54 = v11;
  uint64_t v41 = v62;
  uint64_t v42 = v59;
  uint64_t v43 = v63;
  (*(void (**)(_BYTE *, void, uint64_t))(v62 + 104))(v59, *v37, v63);
  uint64_t v75 = &type metadata for Double;
  uint64_t v76 = &protocol witness table for Double;
  uint64_t v72 = &protocol witness table for Double;
  uint64_t v73 = 0LL;
  if ((a2 & 1) != 0) {
    double v44 = 880.0;
  }
  else {
    double v44 = 630.0;
  }
  uint64_t v71 = &type metadata for Double;
  uint64_t v69 = 0LL;
  uint64_t v45 = v57;
  uint64_t v46 = v65;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v56)(v57, v65, v40);
  uint64_t v48 = v66;
  uint64_t v47 = v67;
  __n128 v49 = v58;
  (*(void (**)(_BYTE *, double *, void *))(v66 + 16))(v58, v67, v34);
  uint64_t v50 = v61;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v41 + 16))(v61, v42, v43);
  v68[3] = &type metadata for CGFloat;
  v68[4] = &protocol witness table for CGFloat;
  *(double *)uint64_t v68 = v44;
  LargeHeroBreakoutLayout.Metrics.init(headerSpace:headerMaxWidth:detailPosition:detailsWidth:detailsVerticalPostion:layoutMargins:height:)( &v73,  &v69,  v45,  v49,  v50,  v68,  0.0,  80.0,  45.0,  80.0);
  (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v42, v43);
  ((void (*)(_BYTE *, uint64_t))v60)(v46, v54);
  return (*(uint64_t (**)(double *, void *))(v48 + 8))(v47, v34);
}

char *sub_10008CA04(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v12 = &v4[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_itemLayoutContext];
  uint64_t v13 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v12, 1LL, 1LL, v13);
  v4[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_isFeatured] = 0;
  uint64_t v14 = OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_focusGuide;
  id v15 = objc_allocWithZone(&OBJC_CLASS___UIFocusGuide);
  CGFloat v16 = v4;
  *(void *)&v4[v14] = [v15 init];
  uint64_t v17 = OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_videoContainer;
  uint64_t v18 = (objc_class *)type metadata accessor for VideoViewContainer();
  CGFloat v19 = (char *)objc_allocWithZone(v18);
  swift_unknownObjectWeakInit(&v19[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view], 0LL);
  *(void *)&v19[OBJC_IVAR____TtC8AppStore18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v20, 0LL);
  v38.receiver = v19;
  v38.super_class = v18;
  *(void *)&v16[v17] = objc_msgSendSuper2(&v38, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v21 = OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_artworkView;
  type metadata accessor for ArtworkView(0LL);
  *(void *)&v16[v21] = static ArtworkView.plainArtworkView.getter();
  *(void *)&v16[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_backgroundArtwork] = 0LL;
  uint64_t v22 = OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailsView;
  if (qword_1002E0B30 != -1) {
    swift_once(&qword_1002E0B30, sub_1000F0404);
  }
  uint64_t v23 = sub_10000A634(v9, (uint64_t)qword_1002F4320);
  sub_10004B5C4(v23, (uint64_t)v11);
  id v24 = objc_allocWithZone((Class)type metadata accessor for BreakoutDetailsView(0LL));
  *(void *)&v16[v22] = sub_1000F0B50((uint64_t)v11);
  unint64_t v25 = &v16[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailPosition];
  uint64_t v26 = enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:);
  uint64_t v27 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104LL))(v25, v26, v27);

  uint64_t v28 = (objc_class *)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  v37.receiver = v16;
  v37.super_class = v28;
  double v29 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  id v30 = [v29 contentView];
  [v30 addSubview:*(void *)&v29[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_videoContainer]];

  id v31 = [v29 contentView];
  [v31 addSubview:*(void *)&v29[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_artworkView]];

  id v32 = [v29 contentView];
  [v32 addSubview:*(void *)&v29[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailsView]];

  objc_super v33 = *(void **)&v29[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_focusGuide];
  [v33 _setAutomaticallyDisableWhenIntersectingFocus:1];
  id v34 = [v29 contentView];
  id v35 = v33;
  [v34 addLayoutGuide:v35];

  return v29;
}

uint64_t sub_10008CEA4()
{
  uint64_t result = (uint64_t)sub_1000EF9C0();
  uint64_t v1 = result;
  if (!((unint64_t)result >> 62))
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease(v1);
    goto LABEL_19;
  }

  if (result >= 0) {
    result &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(result);
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0LL; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      }

      else
      {
        uint64_t v4 = *(void *)(v1 + 8 * i + 32);
        swift_unknownObjectRetain(v4);
      }

      uint64_t v5 = objc_opt_self(&OBJC_CLASS___UIView);
      uint64_t v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
      if (v6 && (id v7 = [v6 isFocused], (v7 & 1) != 0))
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
        uint64_t v8 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
        uint64_t v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v4);
        specialized ContiguousArray._endMutation()(v9);
      }

      else
      {
        swift_unknownObjectRelease(v4);
      }
    }

    swift_bridgeObjectRelease(v1);
LABEL_19:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000LL) == 0)
    {
      uint64_t v10 = _swiftEmptyArrayStorage[2];
LABEL_21:
      swift_release(_swiftEmptyArrayStorage);
      return v10 == 0;
    }

void sub_10008D044()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  objc_msgSendSuper2(&v8, "didMoveToWindow");
  id v1 = [(id)objc_opt_self(UIFocusSystem) focusSystemForEnvironment:v0];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 focusedItem];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = objc_opt_self(&OBJC_CLASS___UIView);
      uint64_t v6 = swift_dynamicCastObjCClass(v4, v5);
      if (v6)
      {
        id v7 = (void *)v6;
        swift_unknownObjectRetain(v4);
        sub_10008C130(v7, 0LL);

        swift_unknownObjectRelease_n(v4, 2LL);
        return;
      }

      swift_unknownObjectRelease(v4);
    }
  }

uint64_t sub_10008D208()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for LargeHeroBreakoutLayout.Metrics(0LL);
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = type metadata accessor for LargeHeroBreakoutLayout(0LL, v11);
  uint64_t v37 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  id v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  CGFloat v16 = (objc_class *)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  v44.receiver = v1;
  v44.super_class = v16;
  objc_msgSendSuper2(&v44, "layoutSubviews");
  uint64_t v17 = &v1[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailPosition];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailPosition], v43, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v17, v6);
  sub_10008C494( (uint64_t)v9,  v1[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_isFeatured],  (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v18 = *(char **)&v1[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_videoContainer];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v18[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view]);

  if (!Strong) {
    uint64_t v18 = *(char **)&v1[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_artworkView];
  }
  uint64_t v20 = v18;
  v42[3] = sub_100016FF8();
  v42[4] = protocol witness table for UIView;
  uint64_t v41 = 0LL;
  v42[0] = v20;
  memset(v40, 0, sizeof(v40));
  uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailsView];
  v39[3] = type metadata accessor for BreakoutDetailsView(0LL);
  void v39[4] = protocol witness table for UIView;
  v39[0] = v21;
  id v22 = v21;
  LargeHeroBreakoutLayout.init(metrics:backgroundMediaView:headerLabel:detailsView:)(v13, v42, v40, v39, v23);
  id v24 = [v1 contentView];
  [v24 bounds];
  double v26 = v25;
  double v28 = v27;
  double v30 = v29;
  double v32 = v31;

  LargeHeroBreakoutLayout.placeChildren(relativeTo:in:)(v1, v26, v28, v30, v32);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_super v33 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_focusGuide];
  id v34 = [v1 contentView];
  [v34 frame];

  objc_msgSend( v33,  "_setManualLayoutFrame:",  CGRect.subtracting(insets:)(objc_msgSend(v1, "layoutMargins")).n128_f64[0]);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v15, v38);
}

void sub_10008D580()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v6 = (objc_class *)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  v12.receiver = v0;
  v12.super_class = v6;
  objc_msgSendSuper2(&v12, "prepareForReuse");
  sub_1000EFB54();
  [v0 setBackgroundColor:0];
  (*(void (**)(_BYTE *, void, uint64_t))(v3 + 104))( v5,  enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:),  v2);
  uint64_t v7 = &v0[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailPosition];
  swift_beginAccess(v7, v11, 33LL, 0LL);
  (*(void (**)(char *, _BYTE *, uint64_t))(v3 + 24))(v7, v5, v2);
  objc_msgSend(v1, "setNeedsLayout", swift_endAccess(v11).n128_f64[0]);
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  sub_1001AE998();
  uint64_t v8 = OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_artworkView;
  id v9 = *(id *)&v1[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_artworkView];
  ArtworkView.image.setter(0LL);

  [*(id *)&v1[v8] setHidden:1];
  sub_10008C2F4();
}

uint64_t sub_10008D724()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailPosition;
  uint64_t v2 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
}

id sub_10008D7C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10008D894()
{
  return type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
}

uint64_t type metadata accessor for LargeBreakoutCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E5B00;
  if (!qword_1002E5B00) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LargeBreakoutCollectionViewCell);
  }
  return result;
}

void sub_10008D8D8(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = &unk_10023A2F0;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[5] = &unk_10023A308;
    v6[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t v4 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(319LL);
    if (v5 <= 0x3F)
    {
      void v6[7] = *(void *)(v4 - 8) + 64LL;
      swift_updateClassMetadata2(a1, 256LL, 8LL, v6, a1 + 472);
    }
  }

uint64_t sub_10008D988()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*v0 + OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_videoContainer)
         + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
}

id sub_10008D9AC()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_videoContainer);
}

unint64_t sub_10008D9C0()
{
  unint64_t result = qword_1002E5B18;
  if (!qword_1002E5B18)
  {
    uint64_t v1 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(255LL);
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for BreakoutDetailsDisplayProperties.DetailPosition,  v1);
    atomic_store(result, (unint64_t *)&qword_1002E5B18);
  }

  return result;
}

void sub_10008DA08(uint64_t a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for LargeBreakoutCollectionViewCell(0LL);
  objc_msgSendSuper2(&v7, "setBackgroundColor:", a1);
  unint64_t v3 = *(char **)&v1[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_videoContainer];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view]);

  if (!Strong) {
    unint64_t v3 = *(char **)&v1[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_artworkView];
  }
  unint64_t v5 = v3;
  id v6 = [v1 backgroundColor];
  [v5 setBackgroundColor:v6];
}

uint64_t sub_10008DAC8()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (UIFontTextStyle *)((char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v4, qword_1002E5B20);
  sub_10000A634(v4, (uint64_t)qword_1002E5B20);
  UIFontTextStyle *v3 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, void, uint64_t))(v1 + 104))( v3,  enum case for FontSource.textStyle(_:),  v0);
  int64_t v9[3] = v0;
  v9[4] = &protocol witness table for FontSource;
  unint64_t v5 = sub_10000DD7C(v9);
  (*(void (**)(void *, UIFontTextStyle *, uint64_t))(v1 + 16))(v5, v3, v0);
  id v6 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v9, 42.0);
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10008DBD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AspectRatio(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_10008DF78();
  uint64_t v7 = v6;
  if (*(void *)(v6 + 16))
  {
    uint64_t v8 = *(void *)(v6 + 32);
    int v9 = *(char *)(v6 + 48);
    j__swift_retain(v8);
    swift_bridgeObjectRelease(v7);
    swift_retain(v8);
    if (v9 < 0)
    {
      double v16 = Artwork.size.getter(v10);
      AspectRatio.init(_:_:)(v17, v16);
    }

    else
    {
      uint64_t v11 = Video.preview.getter(v10);
      double v12 = Artwork.size.getter(v11);
      AspectRatio.init(_:_:)(v13, v12);
      swift_release(v11);
    }

    j__swift_release(v8);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
    j__swift_release(v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(a1, 0LL, 1LL, v2);
  }

  else
  {
    __n128 v14 = swift_bridgeObjectRelease(v6);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56))(a1, 1LL, 1LL, v2, v14);
  }

double sub_10008DD3C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = sub_1000038E8((uint64_t *)&unk_1002E71C0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for AspectRatio(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10008DBD4((uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12) == 1)
  {
    sub_100034770((uint64_t)v11);
    return 0.0;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    swift_getObjectType(a7);
    double v16 = sub_10005B324(0.0, a1, (uint64_t)v15, a7, 3);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  return v16;
}

uint64_t sub_10008DE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v10 = type metadata accessor for ArtworkLoader(0LL);
  uint64_t v11 = inject(_:from:)(v10, a3);
  id v12 = [a6 snapshotPageTraitEnvironment];
  uint64_t v13 = sub_10008DF78();
  sub_10021438C(v13, v11, (uint64_t)v12, 3, a3);
  objc_msgSend(v7, "setNeedsLayout", swift_bridgeObjectRelease(v13).n128_f64[0]);
  swift_release(v11);
  return swift_unknownObjectRelease(v12);
}

uint64_t sub_10008DF4C()
{
  return sub_100004288( &qword_1002E5B38,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductMedia,  (uint64_t)&protocol conformance descriptor for ProductMedia);
}

uint64_t sub_10008DF78()
{
  uint64_t result = ProductMedia.items.getter();
  uint64_t v1 = result;
  if (!((unint64_t)result >> 62))
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t v4 = (char *)_swiftEmptyArrayStorage;
LABEL_26:
    swift_bridgeObjectRelease(v1);
    return (uint64_t)v4;
  }

  if (result >= 0) {
    result &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(result);
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v3 = 0LL;
    uint64_t v4 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      }

      else
      {
        uint64_t v6 = *(void *)(v1 + 8 * v3 + 32);
        __n128 v7 = swift_retain(v6);
      }

      uint64_t v8 = ProductMediaItem.video.getter(v7);
      if (v8)
      {
        uint64_t v9 = v8;
        __n128 v10 = swift_retain(v8);
        uint64_t v11 = ProductMedia.platform.getter(v10);
        uint64_t v12 = MediaPlatform.deviceCornerRadiusFactor.getter();
        char v14 = v13;
        __n128 v15 = swift_release(v11);
        if ((swift_isUniquelyReferenced_nonNull_native(v4, v15) & 1) == 0) {
          uint64_t v4 = sub_1000182BC(0LL, *((void *)v4 + 2) + 1LL, 1, v4);
        }
        unint64_t v17 = *((void *)v4 + 2);
        unint64_t v16 = *((void *)v4 + 3);
        if (v17 >= v16 >> 1) {
          uint64_t v4 = sub_1000182BC((char *)(v16 > 1), v17 + 1, 1, v4);
        }
        *((void *)v4 + 2) = v17 + 1;
        uint64_t v18 = &v4[24 * v17];
        *((void *)v18 + 4) = v9;
        *((void *)v18 + 5) = v12;
        v18[48] = v14 & 1;
        swift_release(v9);
      }

      uint64_t v19 = ProductMediaItem.screenshot.getter(v8);
      if (v19)
      {
        uint64_t v20 = v19;
        __n128 v21 = swift_retain(v19);
        if ((swift_isUniquelyReferenced_nonNull_native(v4, v21) & 1) == 0) {
          uint64_t v4 = sub_1000182BC(0LL, *((void *)v4 + 2) + 1LL, 1, v4);
        }
        unint64_t v23 = *((void *)v4 + 2);
        unint64_t v22 = *((void *)v4 + 3);
        if (v23 >= v22 >> 1) {
          uint64_t v4 = sub_1000182BC((char *)(v22 > 1), v23 + 1, 1, v4);
        }
        *((void *)v4 + 2) = v23 + 1;
        id v24 = &v4[24 * v23];
        *((void *)v24 + 4) = v20;
        *((void *)v24 + 5) = 0LL;
        v24[48] = 0x80;
        swift_release(v6);
        uint64_t v5 = v20;
      }

      else
      {
        uint64_t v5 = v6;
      }

      swift_release(v5);
      ++v3;
    }

    while (v2 != v3);
    goto LABEL_26;
  }

  __break(1u);
  return result;
}

void sub_10008E1C0()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_mediaCollectionView);
  id v2 = [v1 visibleCells];
  unint64_t v3 = sub_1000776A8();
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0) {
      uint64_t v26 = v4;
    }
    else {
      uint64_t v26 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v4);
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v4);
    if (v5) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease(v4);
    return;
  }

  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v5) {
    goto LABEL_23;
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v6 = 0LL;
    uint64_t v27 = OBJC_IVAR____TtC8AppStore26ProductMediaCollectionView_activeDataSource;
    while (1)
    {
      if ((v4 & 0xC000000000000001LL) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      }
      else {
        id v7 = *(id *)(v4 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      uint64_t v9 = type metadata accessor for ScreenshotCollectionViewCell();
      uint64_t v10 = swift_dynamicCastClass(v8, v9);
      if (v10)
      {
        uint64_t v11 = *(char **)&v1[v27];
        if (v11)
        {
          v28[3] = v9;
          v28[0] = v10;
          uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtCC8AppStore26ProductMediaCollectionViewP33_0E179C36DF45FA959D0DE1D46AEBE85510DataSource_artworkLoader];
          uint64_t v13 = *(void *)&v11[OBJC_IVAR____TtCC8AppStore26ProductMediaCollectionViewP33_0E179C36DF45FA959D0DE1D46AEBE85510DataSource_objectGraph];
          id v14 = v8;
          __n128 v15 = v11;
          tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v28, v12, v13, 1LL);
          _s8AppStore17PillOverlayLayoutVwxx_0(v28);

          goto LABEL_6;
        }
      }

      else
      {
        uint64_t v16 = type metadata accessor for VideoCollectionViewCell();
        uint64_t v17 = swift_dynamicCastClass(v8, v16);
        if (v17)
        {
          uint64_t v18 = v1;
          uint64_t v19 = *(void **)&v1[v27];
          if (v19
            && (uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v17 + OBJC_IVAR____TtC8AppStore23VideoCollectionViewCell_videoContainer)
                         + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view)) != 0)
          {
            __n128 v21 = (void *)Strong;
            uint64_t v22 = type metadata accessor for VideoView(0LL);
            uint64_t v23 = sub_100004288(&qword_1002EC3E0, type metadata accessor for VideoView, (uint64_t)&unk_1002439AC);
            id v24 = v8;
            id v25 = v19;
            ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v21, 1LL, v22, v23);

            uint64_t v1 = v18;
          }

          else
          {

            uint64_t v1 = v18;
          }

          goto LABEL_6;
        }
      }

LABEL_6:
      if (v5 == ++v6)
      {
        swift_bridgeObjectRelease(v4);
        return;
      }
    }
  }

  __break(1u);
}

void *sub_10008E464()
{
  uint64_t v0 = sub_10008DF78();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    unint64_t v3 = (char *)(v0 + 48);
    do
    {
      uint64_t v10 = *((void *)v3 - 2);
      int v11 = *v3;
      swift_retain(v10);
      if (v11 < 0)
      {
        swift_retain(v10);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        unint64_t v15 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v14 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v15 >= v14 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1LL);
        }
        unint64_t v7 = v15;
        uint64_t v8 = v10;
      }

      else
      {
        uint64_t v4 = Video.preview.getter(v12);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
        unint64_t v6 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v5 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v6 >= v5 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1LL);
        }
        unint64_t v7 = v6;
        uint64_t v8 = v4;
      }

      uint64_t v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v8);
      v3 += 24;
      specialized Array._endMutation()(v9);
      j__swift_release(v10);
      --v2;
    }

    while (v2);
    swift_bridgeObjectRelease(v1);
    return _swiftEmptyArrayStorage;
  }

  else
  {
    swift_bridgeObjectRelease(v0);
    return _swiftEmptyArrayStorage;
  }

unint64_t sub_10008E5C8()
{
  unint64_t result = qword_1002E5B88;
  if (!qword_1002E5B88)
  {
    uint64_t v1 = type metadata accessor for LargeHeroBreakoutCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023A390, v1);
    atomic_store(result, (unint64_t *)&qword_1002E5B88);
  }

  return result;
}

double sub_10008E614(uint64_t a1)
{
  uint64_t v36 = type metadata accessor for PageGrid(0LL);
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  unint64_t v3 = (uint64_t *)((char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v40 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  unint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  uint64_t v35 = *(void *)(v37 - 8);
  __n128 v6 = __chkstk_darwin(v37);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for BreakoutDetailsDisplayProperties(0LL, v6);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = a1;
  ItemLayoutContext.item.getter(v15);
  ReadOnlyLens.value.getter(v42, v13);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v18 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
  uint64_t v19 = type metadata accessor for LargeHeroBreakout(0LL);
  uint64_t v21 = v41;
  uint64_t v22 = LargeHeroBreakout.detailsDisplayProperties.getter(v20);
  BreakoutDetailsDisplayProperties.position.getter(v22);
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  ItemLayoutContext.componentLayoutOptions.getter(v23);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023A3E0, v24);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(KeyPath);
  double v26 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  double v28 = v27;
  (*(void (**)(void *, uint64_t))(v34 + 8))(v3, v36);
  id v29 = sub_10014DB80();
  sub_1000E71FC((uint64_t)v8, v26, v28, (uint64_t)v5, (uint64_t)v29);
  double v31 = v30;
  swift_release(v21);
  swift_unknownObjectRelease(v29);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v40);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v37);
  return v31;
}

void sub_10008E8DC(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8AppStore34AppTrailerLockupCollectionViewCell_avatarShowcase;
  unint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC8AppStore34AppTrailerLockupCollectionViewCell_avatarShowcase];
  *(void *)&v1[OBJC_IVAR____TtC8AppStore34AppTrailerLockupCollectionViewCell_avatarShowcase] = a1;
  id v4 = a1;
  if (v3) {
    [v3 removeFromSuperview];
  }
  if (*(void *)&v1[v2]) {
    objc_msgSend(v1, "addSubview:");
  }
}

void (*sub_10008E950(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = OBJC_IVAR____TtC8AppStore34AppTrailerLockupCollectionViewCell_avatarShowcase;
  a1[1] = v1;
  a1[2] = v2;
  unint64_t v3 = *(void **)(v1 + v2);
  *a1 = v3;
  id v4 = v3;
  return sub_10008E994;
}

void sub_10008E994(uint64_t a1, char a2)
{
  uint64_t v2 = *(char **)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  id v4 = *(void **)a1;
  id v6 = *(id *)&v2[v3];
  *(void *)&v2[v3] = *(void *)a1;
  if ((a2 & 1) != 0)
  {
    id v5 = v4;
    if (v6)
    {
      [v6 removeFromSuperview];
      id v4 = *(void **)&v2[v3];
    }

    if (v4) {
      [v2 addSubview:v4];
    }
  }

  else
  {
    id v5 = v4;
    if (v6)
    {
      [v6 removeFromSuperview];
      id v4 = *(void **)&v2[v3];
    }

    if (v4) {
      [v2 addSubview:v4];
    }
  }
}

void sub_10008EB40()
{
}

uint64_t sub_10008EB60()
{
  return type metadata accessor for AppTrailerLockupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for AppTrailerLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E5BB8;
  if (!qword_1002E5BB8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppTrailerLockupCollectionViewCell);
  }
  return result;
}

uint64_t sub_10008EBA4(uint64_t a1)
{
  uint64_t v2 = "\b";
  return swift_updateClassMetadata2(a1, 256LL, 1LL, &v2, a1 + 792);
}

unint64_t sub_10008EBE4()
{
  unint64_t result = qword_1002E23F0;
  if (!qword_1002E23F0)
  {
    uint64_t v1 = type metadata accessor for AppTrailerLockupCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023765C, v1);
    atomic_store(result, (unint64_t *)&qword_1002E23F0);
  }

  return result;
}

uint64_t sub_10008EC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - v9;
  ShelfLayoutContext.shelf.getter(v11);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023A460, v12);
  ReadOnlyLens.subscript.getter(&v28, KeyPath, v4);
  __n128 v14 = swift_release(KeyPath);
  __n128 v15 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
  v15(v10, v4, v14);
  unint64_t v16 = v29;
  swift_bridgeObjectRelease(v29);
  ShelfLayoutContext.shelf.getter(v17);
  uint64_t v19 = swift_getKeyPath(&unk_10023A490, v18);
  ReadOnlyLens.subscript.getter(&v28, v19, v4);
  __n128 v20 = swift_release(v19);
  v15(v7, v4, v20);
  unint64_t v21 = v29;
  if (v29)
  {
    uint64_t v22 = v28;
    swift_bridgeObjectRelease(v29);
    if ((v21 & 0x2000000000000000LL) != 0) {
      uint64_t v23 = HIBYTE(v21) & 0xF;
    }
    else {
      uint64_t v23 = v22 & 0xFFFFFFFFFFFFLL;
    }
    if ((sub_10008EF40(a1) & 1) == 0)
    {
      if (v23)
      {
        if (v16)
        {
          if (qword_1002E0F10 != -1) {
            swift_once(&qword_1002E0F10, sub_100170F3C);
          }
          uint64_t v24 = qword_1002F5168;
        }

        else
        {
          if (qword_1002E0F08 != -1) {
            swift_once(&qword_1002E0F08, sub_100170F18);
          }
          uint64_t v24 = qword_1002F5150;
        }

        goto LABEL_29;
      }

      goto LABEL_12;
    }

    if (v23)
    {
      if (qword_1002E0F20 != -1) {
        swift_once(&qword_1002E0F20, sub_100171204);
      }
      uint64_t v24 = qword_1002F5198;
      goto LABEL_29;
    }
  }

  else if ((sub_10008EF40(a1) & 1) == 0)
  {
LABEL_12:
    if (v16)
    {
      if (qword_1002E0F00 != -1) {
        swift_once(&qword_1002E0F00, sub_100170CC0);
      }
      uint64_t v24 = qword_1002F5138;
    }

    else
    {
      if (qword_1002E0EF8 != -1) {
        swift_once(&qword_1002E0EF8, sub_100170C9C);
      }
      uint64_t v24 = qword_1002F5120;
    }

    goto LABEL_29;
  }

  if (qword_1002E0F18 != -1) {
    swift_once(&qword_1002E0F18, sub_1001711E0);
  }
  uint64_t v24 = qword_1002F5180;
LABEL_29:
  uint64_t v25 = type metadata accessor for TitleHeaderView.Style(0LL);
  uint64_t v26 = sub_10000A634(v25, (uint64_t)v24);
  return sub_10000A64C(v26, a2);
}

uint64_t sub_10008EEF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Shelf.subtitle.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10008EF18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Shelf.subtitle.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10008EF40(uint64_t a1)
{
  uint64_t v112 = sub_1000038E8(&qword_1002E5BC8);
  __chkstk_darwin(v112);
  uint64_t v114 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v116 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v3 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v110 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000038E8(&qword_1002E5BD0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v102 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v102 - v12;
  uint64_t v109 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v113 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  double v106 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  double v107 = (char *)&v102 - v16;
  __chkstk_darwin(v17);
  uint64_t v108 = (char *)&v102 - v18;
  __chkstk_darwin(v19);
  unint64_t v21 = (char *)&v102 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v102 - v23;
  __chkstk_darwin(v25);
  double v27 = (void **)((char *)&v102 - v26);
  __chkstk_darwin(v28);
  double v30 = (void **)((char *)&v102 - v29);
  __chkstk_darwin(v31);
  uint64_t v117 = (char *)&v102 - v32;
  __chkstk_darwin(v33);
  uint64_t v35 = (void ***)((char *)&v102 - v34);
  __chkstk_darwin(v36);
  uint64_t v115 = (char *)&v102 - v37;
  uint64_t v111 = a1;
  ShelfLayoutContext.surroundingShelves.getter(v10, v7);
  sub_1000077E0((uint64_t)v7, &qword_1002E5BD0);
  sub_10008F750((uint64_t)v10, (uint64_t)v13);
  uint64_t v38 = v116;
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 48))(v13, 1LL) != 1)
  {
    uint64_t v102 = v27;
    uint64_t v103 = v30;
    uint64_t v104 = v21;
    uint64_t v105 = v24;
    uint64_t KeyPath = swift_getKeyPath(&unk_10023A4C0, v39);
    ReadOnlyLens.subscript.getter(v35, KeyPath, v38);
    __n128 v43 = swift_release(KeyPath);
    objc_super v44 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
    v44(v13, v38, v43);
    uint64_t v45 = (void *)v113;
    uint64_t v46 = v115;
    uint64_t v47 = v35;
    uint64_t v48 = v109;
    uint64_t v49 = (*(uint64_t (**)(char *, void *, uint64_t))(v113 + 32))(v115, v47, v109);
    uint64_t v50 = v110;
    ShelfLayoutContext.shelf.getter(v49);
    uint64_t v52 = swift_getKeyPath(&unk_10023A4C0, v51);
    int v53 = v117;
    ReadOnlyLens.subscript.getter(v117, v52, v38);
    __n128 v54 = swift_release(v52);
    v44(v50, v38, v54);
    uint64_t v55 = v114;
    uint64_t v56 = &v114[*(int *)(v112 + 48)];
    uint64_t v57 = (void (*)(void **, char *, uint64_t))v45[2];
    v57((void **)v114, v53, v48);
    uint64_t v116 = (uint64_t)v56;
    v57((void **)v56, v46, v48);
    uint64_t v58 = (uint64_t (*)(char *, uint64_t))v45[11];
    int v59 = v58(v55, v48);
    uint64_t v60 = v46;
    uint64_t v61 = v57;
    uint64_t v62 = v48;
    if (v59 == enum case for ShelfBackground.color(_:))
    {
      int v63 = v59;
      uint64_t v64 = v60;
      uint64_t v65 = v103;
      v61(v103, v55, v48);
      uint64_t v66 = (void (*)(void **, uint64_t))v45[12];
      v66(v65, v48);
      uint64_t v67 = *v65;
      uint64_t v68 = sub_1000038E8(&qword_1002E5BD8);
      uint64_t v69 = (char *)v65 + *(int *)(v68 + 48);
      if (v58((char *)v116, v62) == v63)
      {
        uint64_t v112 = (uint64_t)v69;
        uint64_t v71 = v61;
        uint64_t v72 = v55;
        uint64_t v73 = v102;
        uint64_t v74 = v71;
        v71(v102, (char *)v116, v62);
        v66(v73, v62);
        uint64_t v75 = *v73;
        uint64_t v76 = (char *)v73 + *(int *)(v68 + 48);
        sub_10000EA38();
        LOBYTE(v73) = static NSObject.== infix(_:_:)(v67, v75);

        uint64_t v60 = v64;
        int v53 = v117;
        if ((v73 & 1) == 0)
        {
          uint64_t v98 = *(double (**)(char *, uint64_t))(v113 + 8);
          v98(v117, v62);
          v99.n128_f64[0] = v98(v60, v62);
          uint64_t v100 = type metadata accessor for ShelfBackgroundStyle(0LL, v99);
          uint64_t v101 = *(void (**)(char *, uint64_t))(*(void *)(v100 - 8) + 8LL);
          v101(v76, v100);
          v101((char *)v112, v100);
          v98((char *)v116, v62);
          v98(v72, v62);
          return 1LL;
        }

        uint64_t v78 = type metadata accessor for ShelfBackgroundStyle(0LL, v77);
        uint64_t v79 = *(void (**)(char *, uint64_t))(*(void *)(v78 - 8) + 8LL);
        v79(v76, v78);
        v79((char *)v112, v78);
        uint64_t v45 = (void *)v113;
        uint64_t v61 = v74;
      }

      else
      {
        uint64_t v80 = type metadata accessor for ShelfBackgroundStyle(0LL, v70);
        (*(void (**)(char *, uint64_t))(*(void *)(v80 - 8) + 8LL))(v69, v80);

        uint64_t v60 = v64;
        int v53 = v117;
        uint64_t v45 = (void *)v113;
      }
    }

    uint64_t v81 = (void (*)(char *, char *, uint64_t))v61;
    uint64_t v82 = (void (*)(char *))v45[13];
    uint64_t v83 = v45;
    uint64_t v84 = v105;
    LODWORD(v113) = enum case for ShelfBackground.none(_:);
    v82(v105);
    unint64_t v85 = sub_10008F79C();
    char v86 = dispatch thunk of static Equatable.== infix(_:_:)(v53, v84, v62, v85);
    v87 = (void (*)(char *, uint64_t))v83[1];
    v87(v84, v62);
    uint64_t v88 = v104;
    v81(v104, v60, v62);
    uint64_t v112 = v85;
    if ((v86 & 1) != 0)
    {
      v87(v88, v62);
      uint64_t v89 = v108;
      v81(v108, v53, v62);
      uint64_t v90 = v107;
      v81(v107, v60, v62);
    }

    else
    {
      ((void (*)(char *, void, uint64_t))v82)(v84, v113, v62);
      char v91 = static ShelfBackground.== infix(_:_:)(v88, v84);
      v87(v84, v62);
      v87(v88, v62);
      uint64_t v89 = v108;
      v81(v108, v53, v62);
      uint64_t v90 = v107;
      v81(v107, v60, v62);
      if ((v91 & 1) != 0)
      {
        v87(v90, v62);
        v87(v89, v62);
        v87(v53, v62);
        v87(v115, v62);
        uint64_t v92 = v114;
LABEL_14:
        v87((char *)v116, v62);
        v87(v92, v62);
        return 1LL;
      }
    }

    uint64_t v93 = v113;
    ((void (*)(char *, void, uint64_t))v82)(v84, v113, v62);
    char v94 = static ShelfBackground.== infix(_:_:)(v89, v84);
    v87(v84, v62);
    uint64_t v95 = v106;
    v81(v106, v90, v62);
    if ((v94 & 1) != 0)
    {
      ((void (*)(char *, uint64_t, uint64_t))v82)(v84, v93, v62);
      char v96 = dispatch thunk of static Equatable.== infix(_:_:)(v95, v84, v62, v112);
      v87(v84, v62);
      v87(v95, v62);
      v87(v90, v62);
      v87(v89, v62);
      v87(v117, v62);
      v87(v115, v62);
      uint64_t v92 = v114;
      if ((v96 & 1) == 0) {
        goto LABEL_14;
      }
    }

    else
    {
      v87(v95, v62);
      v87(v90, v62);
      v87(v89, v62);
      v87(v117, v62);
      v87(v115, v62);
      uint64_t v92 = v114;
    }

    uint64_t v40 = &qword_1002E5BC8;
    uint64_t v41 = (uint64_t)v92;
    goto LABEL_17;
  }

  uint64_t v40 = &qword_1002E5BD0;
  uint64_t v41 = (uint64_t)v13;
LABEL_17:
  sub_1000077E0(v41, v40);
  return 0LL;
}

uint64_t sub_10008F750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E5BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_10008F79C()
{
  unint64_t result = qword_1002EE4F0;
  if (!qword_1002EE4F0)
  {
    uint64_t v1 = type metadata accessor for ShelfBackground(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ShelfBackground, v1);
    atomic_store(result, (unint64_t *)&qword_1002EE4F0);
  }

  return result;
}

uint64_t sub_10008F7E4()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  sub_10000DC04(v0, qword_1002E5BE0);
  sub_10000A634(v0, (uint64_t)qword_1002E5BE0);
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v2 = [v1 blackColor];
  id v3 = [v1 whiteColor];
  v7[0] = sub_1000038E8(&qword_1002E1E40);
  uint64_t v4 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  v7[1] = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023A548, v7);
  id v8 = v2;
  id v9 = v3;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v9, &v8, v4);
}

uint64_t sub_10008F8D8(uint64_t a1)
{
  return sub_10008F900(155.0, a1, qword_1002E5BF8);
}

uint64_t sub_10008F8F0(uint64_t a1)
{
  return sub_10008F900(15.0, a1, qword_1002E5C10);
}

uint64_t sub_10008F900(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = type metadata accessor for FontSource(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v9, a3);
  sub_10000A634(v9, (uint64_t)a3);
  if (qword_1002E0768 != -1) {
    swift_once(&qword_1002E0768, sub_100072F1C);
  }
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, v10);
  uint64_t v12 = sub_10000A634(v11, (uint64_t)qword_1002F3190);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v8, v12, v11);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v16[3] = v5;
  v16[4] = &protocol witness table for FontSource;
  uint64_t v13 = sub_10000DD7C(v16);
  (*(void (**)(void *, char *, uint64_t))(v6 + 16))(v13, v8, v5);
  StaticDimension.init(_:scaledLike:)(v16, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_10008FA54()
{
  double result = 30.0;
  xmmword_1002E5C28 = xmmword_10023A4F0;
  *(_OWORD *)&qword_1002E5C38 = xmmword_10023A4F0;
  return result;
}

double sub_10008FA6C()
{
  double result = 30.0;
  xmmword_1002E5C48 = xmmword_10023A4F0;
  *(_OWORD *)&qword_1002E5C58 = xmmword_10023A500;
  return result;
}

void sub_10008FA8C()
{
  qword_1002E5C80 = (uint64_t)&type metadata for Double;
  unk_1002E5C88 = &protocol witness table for Double;
  qword_1002E5C68 = 0x408D700000000000LL;
}

char *sub_10008FAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a1;
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_titleLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v11 = qword_1002E0768;
  uint64_t v12 = v3;
  if (v11 != -1) {
    swift_once(&qword_1002E0768, sub_100072F1C);
  }
  uint64_t v13 = sub_10000A634(v6, (uint64_t)qword_1002F3190);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v14(v9, v13, v6);
  *(void *)&v3[v10] = sub_100011F1C((uint64_t)v9, 3LL, 0LL, 1, 0);
  uint64_t v15 = OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_messageTextView;
  type metadata accessor for DynamicTypeTextView(0LL);
  if (qword_1002E05F0 != -1) {
    swift_once(&qword_1002E05F0, sub_100072A00);
  }
  uint64_t v16 = sub_10000A634(v6, (uint64_t)qword_1002F2D28);
  v14(v9, v16, v6);
  *(void *)&v12[v15] = sub_1001078E0((uint64_t)v9, 0LL, 0LL, 1);
  uint64_t v17 = a3;
  *(void *)&v12[OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_message] = a3;
  swift_retain(a3);

  uint64_t v18 = (objc_class *)type metadata accessor for ScrollingAlertViewController();
  v39.receiver = v12;
  v39.super_class = v18;
  uint64_t v19 = (char *)objc_msgSendSuper2(&v39, "initWithNibName:bundle:", 0, 0, v37);
  uint64_t v20 = *(void **)&v19[OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_titleLabel];
  unint64_t v21 = v19;
  [v20 setTextAlignment:1];
  id v22 = v20;
  NSString v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setText:", v23, swift_bridgeObjectRelease(a2).n128_f64[0]);

  uint64_t v24 = OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_messageTextView;
  uint64_t v25 = *(void **)&v21[OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_messageTextView];
  [v25 setTextAlignment:4];
  [v25 setSelectable:1];
  [v25 setUserInteractionEnabled:1];
  [v25 setScrollEnabled:1];
  [v25 setAlwaysBounceVertical:1];
  id v26 = [v25 panGestureRecognizer];
  uint64_t v27 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
  uint64_t v28 = swift_allocObject(v27, 40LL, 7LL);
  *(_OWORD *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
  id v29 = [objc_allocWithZone(NSNumber) initWithInteger:1];
  *(void *)(v28 + 32) = v29;
  uint64_t v38 = v28;
  specialized Array._endMutation()(v29);
  uint64_t v30 = v38;
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E8BB0, &OBJC_CLASS___NSNumber_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "setAllowedTouchTypes:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

  uint64_t v32 = qword_1002E0908;
  id v33 = *(id *)&v21[v24];
  if (v32 != -1) {
    swift_once(&qword_1002E0908, sub_10008FA54);
  }
  objc_msgSend(v33, "setTextContainerInset:", xmmword_1002E5C28, *(double *)&qword_1002E5C38, unk_1002E5C40);

  uint64_t v34 = qword_1002E0910;
  id v35 = *(id *)&v21[v24];
  if (v34 != -1) {
    swift_once(&qword_1002E0910, sub_10008FA6C);
  }
  objc_msgSend(v35, "_setGradientMaskLengths:", xmmword_1002E5C48, *(double *)&qword_1002E5C58, unk_1002E5C60);

  swift_release(v17);
  return v21;
}

void sub_10008FEE4()
{
  uint64_t v1 = v0;
  v30.receiver = v0;
  v30.super_class = (Class)type metadata accessor for ScrollingAlertViewController();
  objc_msgSendSuper2(&v30, "viewDidLoad");
  id v2 = [v0 view];
  if (!v2)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  id v3 = v2;
  id v4 = [(id)objc_opt_self(UIColor) clearColor];
  [v3 setBackgroundColor:v4];

  id v5 = [v1 view];
  if (!v5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }

  uint64_t v6 = v5;
  [v5 setInsetsLayoutMarginsFromSafeArea:0];

  id v7 = [v1 view];
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v8 = v7;
  objc_msgSend( v7,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  id v9 = [v1 view];
  if (!v9)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v10 = v9;
  [v9 setOverrideUserInterfaceStyle:2];

  id v11 = [v1 view];
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v12 = v11;
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_messageTextView];
  [v11 addSubview:v13];

  id v14 = [v1 view];
  if (v14)
  {
    uint64_t v15 = v14;
    [v14 addSubview:*(void *)&v1[OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_titleLabel]];

    sub_1000908A8();
    uint64_t v17 = (void *)Paragraph.text.getter(v16);
    id v18 = [v1 traitCollection];
    id v19 = [objc_allocWithZone(NSMutableAttributedString) initWithAttributedString:v17];
    id v20 = [v17 length];
    uint64_t v21 = swift_allocObject(&unk_100288F68, 33LL, 7LL);
    *(void *)(v21 + swift_unknownObjectWeakDestroy(v0 + 16) = v18;
    *(void *)(v21 + 24) = v19;
    *(_BYTE *)(v21 + 32) = 1;
    uint64_t v22 = swift_allocObject(&unk_100288F90, 32LL, 7LL);
    *(void *)(v22 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10004AC34;
    *(void *)(v22 + 24) = v21;
    void v28[4] = sub_100090CE0;
    uint64_t v29 = v22;
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 1107296256LL;
    v28[2] = sub_10004A3F4;
    v28[3] = &unk_100288FA8;
    NSString v23 = _Block_copy(v28);
    uint64_t v24 = v29;
    id v25 = v18;
    id v26 = v19;
    swift_retain(v22);
    objc_msgSend( v17,  "enumerateAttributesInRange:options:usingBlock:",  0,  v20,  0x100000,  v23,  swift_release(v24).n128_f64[0]);
    _Block_release(v23);
    LOBYTE(v20) = swift_isEscapingClosureAtFileLocation(v22, "", 133LL, 29LL, 92LL, 1LL);

    swift_release(v21);
    *(void *)&double v27 = swift_release(v22).n128_u64[0];
    if ((v20 & 1) == 0)
    {
      objc_msgSend(v13, "setAttributedText:", v26, v27);

      return;
    }

    __break(1u);
    goto LABEL_10;
  }

id sub_100090298()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (objc_class *)type metadata accessor for ScrollingAlertViewController();
  v46.receiver = v0;
  v46.super_class = v6;
  objc_msgSendSuper2(&v46, "viewWillLayoutSubviews");
  id result = [v0 view];
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
    *(void *)&CGFloat v10 = LayoutMarginsAware<>.layoutFrame.getter(v9).n128_u64[0];
    CGFloat v12 = v11;
    double v14 = v13;
    double v16 = v15;

    if (qword_1002E0918 != -1) {
      swift_once(&qword_1002E0918, sub_10008FA8C);
    }
    uint64_t v17 = qword_1002E5C80;
    uint64_t v18 = unk_1002E5C88;
    sub_1000112B0(&qword_1002E5C68, qword_1002E5C80);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v17, v18);
    double v19 = AnyDimension.value(in:rounded:)(v1, v5, v17, v18);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v14 >= v19) {
      double v20 = v19;
    }
    else {
      double v20 = v14;
    }
    uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_titleLabel];
    objc_msgSend(v21, "measurementsWithFitting:in:", v1, v20, v16);
    CGFloat v22 = v16;
    double v24 = v23;
    double v26 = v25;
    double v28 = v27;
    double v30 = v29;
    CGFloat v44 = v12;
    CGFloat v45 = v10;
    v47.origin.x = v10;
    v47.origin.y = v12;
    v47.size.width = v14;
    CGFloat v43 = v22;
    v47.size.height = v22;
    double v31 = CGRectGetMidX(v47) + v24 * -0.5;
    if (qword_1002E08F8 != -1) {
      swift_once(&qword_1002E08F8, sub_10008F8D8);
    }
    uint64_t v32 = type metadata accessor for StaticDimension(0LL);
    sub_10000A634(v32, (uint64_t)qword_1002E5BF8);
    objc_msgSend( v21,  "setFrame:",  v31,  AnyDimension.topMargin(from:in:)(v1, v32, &protocol witness table for StaticDimension, v24, v26, v28, v30),  v24,  v26);
    [v21 frame];
    double MaxY = CGRectGetMaxY(v48);
    if (qword_1002E0900 != -1) {
      swift_once(&qword_1002E0900, sub_10008F8F0);
    }
    sub_10000A634(v32, (uint64_t)qword_1002E5C10);
    double v34 = MaxY
        + AnyDimension.bottomMargin(from:in:)(v1, v32, &protocol witness table for StaticDimension, v24, v26, v28, v30);
    CGFloat v35 = v44;
    CGFloat v36 = v45;
    v49.origin.x = v45;
    v49.origin.y = v44;
    v49.size.width = v14;
    CGFloat v37 = v43;
    v49.size.height = v43;
    double v38 = CGRectGetHeight(v49) - v34;
    objc_super v39 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_messageTextView];
    objc_msgSend(v39, "sizeThatFits:", v20, v38);
    if (v20 >= v40) {
      double v20 = v40;
    }
    if (v38 >= v41) {
      double v38 = v41;
    }
    v50.origin.x = v36;
    v50.origin.y = v35;
    v50.size.width = v14;
    v50.size.height = v37;
    return objc_msgSend(v39, "setFrame:", CGRectGetMidX(v50) + v20 * -0.5, v34, v20, v38);
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_100090644(uint64_t a1)
{
  uint64_t v2 = v1;
  v19.receiver = v1;
  v19.super_class = (Class)type metadata accessor for ScrollingAlertViewController();
  objc_msgSendSuper2(&v19, "traitCollectionDidChange:", a1);
  sub_1000908A8();
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_messageTextView];
  uint64_t v6 = (void *)Paragraph.text.getter(v5);
  id v7 = [v2 traitCollection];
  id v8 = [objc_allocWithZone(NSMutableAttributedString) initWithAttributedString:v6];
  id v9 = [v6 length];
  uint64_t v10 = swift_allocObject(&unk_100288EF0, 33LL, 7LL);
  *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *(void *)(v10 + 24) = v8;
  *(_BYTE *)(v10 + 32) = 1;
  uint64_t v11 = swift_allocObject(&unk_100288F18, 32LL, 7LL);
  *(void *)(v11 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10004AA0C;
  *(void *)(v11 + 24) = v10;
  v17[4] = sub_10000DFB4;
  uint64_t v18 = v11;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256LL;
  v17[2] = sub_10004A3F4;
  v17[3] = &unk_100288F30;
  CGFloat v12 = _Block_copy(v17);
  uint64_t v13 = v18;
  id v14 = v7;
  id v15 = v8;
  swift_retain(v11);
  objc_msgSend( v6,  "enumerateAttributesInRange:options:usingBlock:",  0,  v9,  0x100000,  v12,  swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation(v11, "", 133LL, 29LL, 92LL, 1LL);

  swift_release(v10);
  *(void *)&double v16 = swift_release(v11).n128_u64[0];
  if ((v9 & 1) != 0)
  {
    __break(1u);
  }

  else
  {
    objc_msgSend(v4, "setAttributedText:", v15, v16);
  }

void sub_1000908A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E08F0 != -1) {
    swift_once(&qword_1002E08F0, sub_10008F7E4);
  }
  uint64_t v6 = sub_10000A634(v2, (uint64_t)qword_1002E5BE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  id v7 = [v1 view];
  if (v7)
  {
    id v8 = v7;
    id v10 = v7;
    Conditional.evaluate(with:)(&v11, &v10, v2);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    id v9 = v11;
    [*(id *)&v1[OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_titleLabel] setTextColor:v11];
    [*(id *)&v1[OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_messageTextView] setTextColor:v9];
  }

  else
  {
    __break(1u);
  }

id sub_100090A1C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScrollingAlertViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ScrollingAlertViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore28ScrollingAlertViewController);
}

uint64_t sub_100090AB8()
{
  return 16LL;
}

__n128 sub_100090AC4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100090AD4()
{
  return 16LL;
}

__n128 sub_100090AE0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100090AEC()
{
  return swift_deallocObject(v0, 33LL, 7LL);
}

uint64_t sub_100090B18()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100090B28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100090B38(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100090B40()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_100090B50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_titleLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002E0768 != -1) {
    swift_once(&qword_1002E0768, sub_100072F1C);
  }
  uint64_t v8 = sub_10000A634(v3, (uint64_t)qword_1002F3190);
  id v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9(v6, v8, v3);
  *(void *)&v2[v7] = sub_100011F1C((uint64_t)v6, 3LL, 0LL, 1, 0);
  uint64_t v10 = OBJC_IVAR____TtC8AppStore28ScrollingAlertViewController_messageTextView;
  type metadata accessor for DynamicTypeTextView(0LL);
  if (qword_1002E05F0 != -1) {
    swift_once(&qword_1002E05F0, sub_100072A00);
  }
  uint64_t v11 = sub_10000A634(v3, (uint64_t)qword_1002F2D28);
  v9(v6, v11, v3);
  *(void *)&v2[v10] = sub_1001078E0((uint64_t)v6, 0LL, 0LL, 1);

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/ScrollingAlertViewController.swift",  43LL,  2LL,  71LL,  0);
  __break(1u);
}

uint64_t sub_100090CF0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for FlowPresentationHints(0LL);
  __chkstk_darwin(v7);
  id v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for FlowAnimationBehavior(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a1 + *(int *)(v7 + 20), v10, v12);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v15 == enum case for FlowAnimationBehavior.infer(_:))
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + qword_1002E64A8);
    if (Strong)
    {
      uint64_t v17 = Strong;
      id v18 = [Strong viewControllers];

      unint64_t v19 = sub_100011C74();
      uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

      if ((unint64_t)v20 >> 62)
      {
        if (v20 < 0) {
          uint64_t v26 = v20;
        }
        else {
          uint64_t v26 = v20 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v20);
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v26);
        swift_bridgeObjectRelease(v20);
      }

      else
      {
        uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      }

      swift_bridgeObjectRelease(v20);
      sub_1000777A4(a1, (uint64_t)v9, type metadata accessor for FlowPresentationHints);
      if (v21)
      {
        (*(void (**)(char *, void, uint64_t))(v4 + 104))( v6,  enum case for FlowPresentationContext.replace(_:),  v3);
        uint64_t v22 = sub_10000A4AC( &qword_1002E5EB8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext,  (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
        char v23 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v6, v3, v22);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        sub_10002BDF4((uint64_t)v9, type metadata accessor for FlowPresentationHints);
        char v24 = v23 ^ 1;
        return v24 & 1;
      }

      sub_10002BDF4((uint64_t)v9, type metadata accessor for FlowPresentationHints);
LABEL_11:
      char v24 = 0;
      return v24 & 1;
    }

    __break(1u);
  }

  else
  {
    if (v15 == enum case for FlowAnimationBehavior.never(_:)) {
      goto LABEL_11;
    }
    if (v15 == enum case for FlowAnimationBehavior.always(_:))
    {
      char v24 = 1;
      return v24 & 1;
    }
  }

  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v10, v10);
  __break(1u);
  return result;
}

void sub_100090FA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v100 = a4;
  uint64_t v101 = a5;
  uint64_t v99 = a3;
  uint64_t v9 = sub_1000038E8(&qword_1002EE960);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v13 = *(void **)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v96 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v96 - v19;
  __n128 v22 = __chkstk_darwin(v21);
  char v24 = (char *)&v96 - v23;
  double v25 = (void (*)(char *, uint64_t, uint64_t, __n128))v13[2];
  uint64_t v102 = a2;
  v25(v20, a2, v12, v22);
  uint64_t v103 = v6 + qword_1002E64A8;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v6 + qword_1002E64A8);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_65;
  }

  uint64_t v27 = Strong;
  id v28 = [Strong traitCollection];

  sub_10016D5AC((uint64_t)v24);
  uint64_t v29 = v12;
  uint64_t v30 = v12;
  double v31 = (void (*)(char *, uint64_t))v13[1];
  v31(v20, v30);
  sub_1000777A4((uint64_t)a1, (uint64_t)v11, type metadata accessor for FlowDestination);
  uint64_t v32 = type metadata accessor for FlowDestination(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v11, 0LL, 1LL, v32);
  char v33 = sub_100092298((uint64_t)v24, (uint64_t)v11);
  sub_1000077E0((uint64_t)v11, &qword_1002EE960);
  if ((v33 & 1) != 0)
  {
    uint64_t v98 = v24;
    id v34 = sub_1001DD8D8(a1, v99, v100, v101);
    if ((sub_100090CF0(v102) & 1) != 0)
    {
      CGFloat v35 = (void *)swift_unknownObjectWeakLoadStrong(v103);
      if (!v35)
      {
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }

      CGFloat v36 = v35;
      uint64_t v37 = v29;
      id v38 = [v35 transitionCoordinator];

      if (!v38)
      {
        uint64_t v44 = 1LL;
LABEL_13:
        CGFloat v45 = (void (*)(char *, void, uint64_t))v13[13];
        v45(v17, enum case for FlowPresentationContext.push(_:), v37);
        uint64_t v46 = sub_10000A4AC( &qword_1002E5EB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext,  (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
        dispatch thunk of RawRepresentable.rawValue.getter(&v105, v37, v46);
        dispatch thunk of RawRepresentable.rawValue.getter(&v104, v37, v46);
        uint64_t v47 = *((void *)&v105 + 1);
        __int128 v48 = v104;
        if (v105 == v104)
        {
          swift_bridgeObjectRelease_n(*((void *)&v105 + 1), 2LL);
          CGRect v49 = v17;
          CGRect v50 = v31;
          v31(v49, v37);
          goto LABEL_16;
        }

        char v51 = _stringCompareWithSmolCheck(_:_:expecting:)( v105,  *((void *)&v105 + 1),  v104,  *((void *)&v104 + 1),  0LL);
        swift_bridgeObjectRelease(v47);
        __n128 v52 = swift_bridgeObjectRelease(*((void *)&v48 + 1));
        int v53 = v17;
        CGRect v50 = v31;
        ((void (*)(char *, uint64_t, __n128))v31)(v53, v37, v52);
        if ((v51 & 1) != 0)
        {
LABEL_16:
          [v34 setModalPresentationCapturesStatusBarAppearance:1];
          __n128 v54 = (void *)swift_unknownObjectWeakLoadStrong(v103);
          if (v54)
          {
            uint64_t v55 = v54;
            [v54 pushViewController:v34 animated:v44];

LABEL_18:
LABEL_19:
            v50(v98, v37);
            return;
          }

          goto LABEL_66;
        }

        uint64_t v56 = v97;
        v45(v97, enum case for FlowPresentationContext.replace(_:), v37);
        dispatch thunk of RawRepresentable.rawValue.getter(&v105, v37, v46);
        dispatch thunk of RawRepresentable.rawValue.getter(&v104, v37, v46);
        uint64_t v57 = *((void *)&v105 + 1);
        __int128 v58 = v104;
        if (v105 == v104)
        {
          swift_bridgeObjectRelease_n(*((void *)&v105 + 1), 2LL);
          v50(v56, v37);
        }

        else
        {
          char v59 = _stringCompareWithSmolCheck(_:_:expecting:)( v105,  *((void *)&v105 + 1),  v104,  *((void *)&v104 + 1),  0LL);
          swift_bridgeObjectRelease(v57);
          __n128 v60 = swift_bridgeObjectRelease(*((void *)&v58 + 1));
          ((void (*)(char *, uint64_t, __n128))v50)(v56, v37, v60);
          if ((v59 & 1) == 0)
          {
            v50(v98, v37);

            return;
          }
        }

        uint64_t v61 = objc_opt_self(&OBJC_CLASS___UINavigationController);
        uint64_t v62 = swift_dynamicCastObjCClass(v34, v61);
        if (!v62)
        {
          uint64_t v76 = (void *)swift_unknownObjectWeakLoadStrong(v103);
          if (!v76)
          {
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            return;
          }

          __n128 v77 = v76;
          id v78 = [v76 viewControllers];

          unint64_t v79 = sub_100011C74();
          uint64_t v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, v79);

          if ((v66 & 0x8000000000000000LL) == 0 && (v66 & 0x4000000000000000LL) == 0)
          {
            uint64_t v80 = v66 & 0xFFFFFFFFFFFFFF8LL;
            goto LABEL_41;
          }

LABEL_59:
          uint64_t v80 = (uint64_t)sub_10008673C(v66);
          swift_bridgeObjectRelease(v66);
LABEL_41:
          unint64_t v81 = ((unint64_t)v80 >> 62) & 1;
          if (v80 < 0) {
            unint64_t v82 = 1LL;
          }
          else {
            unint64_t v82 = ((unint64_t)v80 >> 62) & 1;
          }
          if ((_DWORD)v82 == 1)
          {
            uint64_t v95 = swift_bridgeObjectRetain(v80);
            uint64_t v83 = (void *)_CocoaArrayWrapper.endIndex.getter(v95);
            swift_release(v80);
            if (v83)
            {
LABEL_46:
              uint64_t isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v80);
              *(void *)&__int128 v105 = v80;
              if ((v82 | isUniquelyReferenced_nonNull_bridgeObject ^ 1) == 1)
              {
                uint64_t isUniquelyReferenced_nonNull_bridgeObject = sub_100086E84(v80);
                uint64_t v80 = isUniquelyReferenced_nonNull_bridgeObject;
                *(void *)&__int128 v105 = isUniquelyReferenced_nonNull_bridgeObject;
              }

              unint64_t v81 = v80 & 0xFFFFFFFFFFFFFF8LL;
              uint64_t v85 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
              if (v85)
              {
                uint64_t v86 = v85 - 1;
                uint64_t v83 = *(void **)((v80 & 0xFFFFFFFFFFFFFF8LL) + 8 * v86 + 0x20);
                *(void *)((v80 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v86;
                specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
                id v87 = [v83 tabBarItem];
                [v34 setTabBarItem:v87];

                id v34 = v34;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
                unint64_t v82 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
                unint64_t v81 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
                if (v82 < v81 >> 1) {
                  goto LABEL_50;
                }
                goto LABEL_63;
              }

  id v38 = swift_release(a1);
  objc_super v39 = dispatch thunk of ProductPresenter.mediaSectionIndex.getter(v38);
  if ((v40 & 1) == 0)
  {
    id v41 = v39;
    if (sub_10011B650(v39, a1)) {
      sub_10018EF90(v41, v74);
    }
  }
}

LABEL_62:
              __break(1u);
LABEL_63:
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v81 > 1, v82 + 1, 1LL);
LABEL_50:
              uint64_t v88 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v82, v34);
              specialized Array._endMutation()(v88);
              uint64_t v89 = swift_unknownObjectWeakLoadStrong(v103);
              if (v89)
              {
                uint64_t v90 = (void *)v89;
                uint64_t v91 = v105;
                Class isa = Array._bridgeToObjectiveC()().super.isa;
                objc_msgSend(v90, "setViewControllers:animated:", isa, v44, swift_bridgeObjectRelease(v91).n128_f64[0]);

                goto LABEL_19;
              }

              goto LABEL_71;
            }
          }

          else
          {
            uint64_t v83 = *(void **)(v80 + 16);
            if (v83) {
              goto LABEL_46;
            }
          }

          __break(1u);
          goto LABEL_62;
        }

        uint64_t v63 = v62;
        uint64_t v64 = swift_unknownObjectWeakLoadStrong(v103);
        if (!v64)
        {
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }

        uint64_t v65 = (void *)v64;
        uint64_t v66 = (uint64_t)v34;
        id v67 = [v65 viewControllers];
        id v34 = (id)sub_100011C74();
        uint64_t v68 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v67, v34);

        if ((unint64_t)v68 >> 62)
        {
          if (v68 < 0) {
            uint64_t v93 = v68;
          }
          else {
            uint64_t v93 = v68 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain(v68);
          uint64_t v94 = _CocoaArrayWrapper.endIndex.getter(v93);
          swift_bridgeObjectRelease(v68);
          if (v94)
          {
LABEL_30:
            uint64_t v69 = swift_isUniquelyReferenced_nonNull_bridgeObject(v68);
            *(void *)&__int128 v105 = v68;
            if (!(_DWORD)v69 || v68 < 0 || (v68 & 0x4000000000000000LL) != 0)
            {
              uint64_t v69 = sub_100086E84(v68);
              uint64_t v68 = v69;
              *(void *)&__int128 v105 = v69;
            }

            uint64_t v70 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
            if (v70)
            {
              uint64_t v71 = v70 - 1;
              uint64_t v72 = *(void **)((v68 & 0xFFFFFFFFFFFFFF8LL) + 8 * v71 + 0x20);
              *(void *)((v68 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v71;
              specialized Array._endMutation()(v69);

              uint64_t v73 = v105;
              Class v74 = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v65, "setViewControllers:", v74, swift_bridgeObjectRelease(v73).n128_f64[0]);

              uint64_t v75 = (void *)swift_unknownObjectWeakLoadStrong(v103);
              if (v75)
              {
                uint64_t v55 = v75;
                [v75 presentViewController:v63 animated:0 completion:0];

                goto LABEL_18;
              }

              goto LABEL_69;
            }

            goto LABEL_58;
          }
        }

        else if (*(void *)((v68 & 0xFFFFFFFFFFFFF8LL) + 0x10))
        {
          goto LABEL_30;
        }

        __break(1u);
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }

      swift_unknownObjectRelease(v38);
    }

    else
    {
      uint64_t v37 = v29;
    }

    uint64_t v44 = 0LL;
    goto LABEL_13;
  }

  objc_super v39 = (void *)swift_unknownObjectWeakLoadStrong(v103);
  if (!v39)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }

  double v40 = v39;
  id v41 = [v39 nextResponder];

  if (v41)
  {
    sub_1000881A8((uint64_t)&v105);

    uint64_t v42 = *((void *)&v106 + 1);
    if (*((void *)&v106 + 1))
    {
      uint64_t v43 = v107;
      sub_1000112B0(&v105, *((uint64_t *)&v106 + 1));
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 16))( a1,  v102,  v99,  v100,  v101,  v42,  v43);
      v31(v24, v29);
      _s8AppStore17PillOverlayLayoutVwxx_0(&v105);
      return;
    }
  }

  else
  {
    uint64_t v107 = 0LL;
    __int128 v105 = 0u;
    __int128 v106 = 0u;
  }

  v31(v24, v29);
  sub_1000077E0((uint64_t)&v105, (uint64_t *)&unk_1002E5E90);
}

id sub_100091824()
{
  return sub_100092100(0LL, (uint64_t (*)(void))type metadata accessor for NavigationFlowController);
}

uint64_t type metadata accessor for NavigationFlowController(uint64_t a1)
{
  uint64_t result = qword_1002E5D58;
  if (!qword_1002E5D58) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NavigationFlowController);
  }
  return result;
}

uint64_t sub_100091870(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 256LL, 0LL, v2, a1 + 168);
}

uint64_t sub_1000918A4()
{
  return type metadata accessor for NavigationFlowController(0LL);
}

char *sub_1000918AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = &v2[OBJC_IVAR____TtC8AppStore24FlowNavigationController_flowController];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC8AppStore24FlowNavigationController_actionRunner] = 0LL;
  if (!a1)
  {
    uint64_t ObjCClassFromMetadata = 0LL;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(a1);
  if (v3) {
LABEL_3:
  }
    uint64_t v3 = swift_getObjCClassFromMetadata(v3);
LABEL_4:
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for FlowNavigationController();
  id v6 = objc_msgSendSuper2(&v14, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
  uint64_t v7 = type metadata accessor for FlowActionRunner(0LL);
  uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_unknownObjectWeakInit(v8 + qword_1002E4D08, 0LL);
  swift_unknownObjectWeakAssign(v9, v6);
  uint64_t v10 = (char *)v6;
  uint64_t v11 = ActionRunner.init()(v10);
  uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8AppStore24FlowNavigationController_actionRunner];
  *(void *)&v10[OBJC_IVAR____TtC8AppStore24FlowNavigationController_actionRunner] = v11;
  objc_msgSend(v10, "setNavigationBarHidden:", 1, swift_release(v12).n128_f64[0]);

  return v10;
}

char *sub_100091A1C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = &v3[OBJC_IVAR____TtC8AppStore24FlowNavigationController_flowController];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0LL;
  *(void *)&v3[OBJC_IVAR____TtC8AppStore24FlowNavigationController_actionRunner] = 0LL;
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v7 = 0LL;
  }

  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for FlowNavigationController();
  id v8 = objc_msgSendSuper2(&v16, "initWithNibName:bundle:", v7, a3);

  uint64_t v9 = type metadata accessor for FlowActionRunner(0LL);
  uint64_t v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  swift_unknownObjectWeakInit(v10 + qword_1002E4D08, 0LL);
  swift_unknownObjectWeakAssign(v11, v8);
  uint64_t v12 = (char *)v8;
  uint64_t v13 = ActionRunner.init()(v12);
  uint64_t v14 = *(void *)&v12[OBJC_IVAR____TtC8AppStore24FlowNavigationController_actionRunner];
  *(void *)&v12[OBJC_IVAR____TtC8AppStore24FlowNavigationController_actionRunner] = v13;
  objc_msgSend(v12, "setNavigationBarHidden:", 1, swift_release(v14).n128_f64[0]);

  return v12;
}

void sub_100091C34(uint64_t a1)
{
  id v3 = [v1 viewControllers];
  unint64_t v4 = sub_100011C74();
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease(v5);
    return;
  }

  if (v5 < 0) {
    uint64_t v13 = v5;
  }
  else {
    uint64_t v13 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v5);
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease(v5);
  if (!v14) {
    goto LABEL_20;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001LL) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v5);
  }

  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
      return;
    }

    id v6 = *(id *)(v5 + 32);
  }

  NSString v7 = v6;
  swift_bridgeObjectRelease(v5);
  uint64_t ObjectType = swift_getObjectType(v7);
  uint64_t v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ReusableFlowViewController);
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0LL;
  }
  if (v9) {
    uint64_t v11 = v7;
  }
  else {
    uint64_t v11 = 0LL;
  }
  if (v11)
  {
    uint64_t v12 = swift_getObjectType(v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, v12, v10);
  }
}

uint64_t sub_100091D70(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000038E8(&qword_1002E6600);
  __chkstk_darwin(v6);
  char v33 = (char *)&v34[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000038E8((uint64_t *)&unk_1002E4940);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v34[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for URL(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v34[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v38 = 0LL;
  unint64_t v39 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(29LL);
  swift_bridgeObjectRelease(v39);
  unint64_t v38 = 0xD00000000000001BLL;
  unint64_t v39 = 0x800000010024AB50LL;
  v18._countAndFlagsBits = a1;
  v18._object = a2;
  String.append(_:)(v18);
  unint64_t v19 = v39;
  URL.init(string:)(v38, v39, v20);
  __n128 v21 = swift_bridgeObjectRelease(v19);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v15 + 48))(v13, 1LL, v14, v21);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    uint64_t v23 = v3 + OBJC_IVAR____TtC8AppStore24FlowNavigationController_flowController;
    swift_beginAccess(v3 + OBJC_IVAR____TtC8AppStore24FlowNavigationController_flowController, v37, 0LL, 0LL);
    sub_10000DF2C(v23, (uint64_t)&v38, (uint64_t *)&unk_1002E5E90);
    if (v40)
    {
      sub_100011C30((uint64_t)&v38, (uint64_t)v34);
      sub_1000077E0((uint64_t)&v38, (uint64_t *)&unk_1002E5E90);
      uint64_t v24 = v35;
      uint64_t v25 = v36;
      sub_1000112B0(v34, v35);
      uint64_t v26 = sub_1000038E8(&qword_1002E3288);
      uint64_t v27 = *(int *)(v26 + 48);
      uint64_t v28 = *(int *)(v26 + 64);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v17, v14);
      *(void *)&v10[v27] = 0LL;
      *(void *)&v10[v28] = 0LL;
      swift_storeEnumTagMultiPayload(v10, v8, 0LL);
      if (qword_1002E0E78 != -1) {
        swift_once(&qword_1002E0E78, sub_10016D734);
      }
      uint64_t v29 = type metadata accessor for FlowPresentationHints(0LL);
      uint64_t v30 = sub_10000A634(v29, (uint64_t)qword_1002F4FA0);
      uint64_t v31 = type metadata accessor for ReferrerData(0LL);
      uint64_t v32 = (uint64_t)v33;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v33, 1LL, 1LL, v31);
      (*(void (**)(char *, uint64_t, void, void, uint64_t, uint64_t, uint64_t))(v25 + 16))( v10,  v30,  0LL,  0LL,  v32,  v24,  v25);
      sub_1000077E0(v32, &qword_1002E6600);
      sub_10002BDF4((uint64_t)v10, type metadata accessor for FlowDestination);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return _s8AppStore17PillOverlayLayoutVwxx_0(v34);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return sub_1000077E0((uint64_t)&v38, (uint64_t *)&unk_1002E5E90);
    }
  }

  return result;
}

id sub_1000920F4(uint64_t a1)
{
  return sub_100092100(a1, type metadata accessor for FlowNavigationController);
}

id sub_100092100(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for FlowNavigationController()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore24FlowNavigationController);
}

uint64_t sub_100092190@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8AppStore24FlowNavigationController_flowController;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_10000DF2C(v3, a1, (uint64_t *)&unk_1002E5E90);
}

uint64_t sub_1000921EC()
{
  return swift_retain(*(void *)(*v0 + OBJC_IVAR____TtC8AppStore24FlowNavigationController_actionRunner));
}

uint64_t sub_100092204(uint64_t a1, void *a2)
{
  return sub_100091D70(a1, a2);
}

id sub_100092224(uint64_t a1, char a2)
{
  return [*v2 pushViewController:a1 animated:a2 & 1];
}

id sub_100092240(char a1)
{
  return [*v1 popViewControllerAnimated:a1 & 1];
}

uint64_t sub_10009226C(uint64_t a1, uint64_t a2)
{
  return sub_10000A4AC( &qword_1002E5E88,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for FlowNavigationController,  (uint64_t)&unk_10023A5EC);
}

uint64_t sub_100092298(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a1;
  uint64_t v3 = type metadata accessor for FlowPresentationContext(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v36 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v35 - v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = sub_1000038E8(&qword_1002EE960);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FlowDestination(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (void (**)(char *, void, uint64_t))((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v18);
  __n128 v20 = (char *)&v35 - v19;
  sub_10000DF2C(a2, (uint64_t)v13, &qword_1002EE960);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1LL, v14) == 1)
  {
    sub_1000077E0((uint64_t)v13, &qword_1002EE960);
LABEL_5:
    char v21 = 0;
    return v21 & 1;
  }

  sub_100041A50((uint64_t)v13, (uint64_t)v20);
  sub_1000777A4((uint64_t)v20, (uint64_t)v17, type metadata accessor for FlowDestination);
  if (swift_getEnumCaseMultiPayload(v17, v14) == 4)
  {
    sub_10002BDF4((uint64_t)v20, type metadata accessor for FlowDestination);
    swift_release(*v17);
    goto LABEL_5;
  }

  __n128 v22 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  v22(v10, enum case for FlowPresentationContext.push(_:), v3);
  uint64_t v23 = sub_10000A4AC( &qword_1002E5EB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext,  (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
  dispatch thunk of RawRepresentable.rawValue.getter(&v41, v3, v23);
  dispatch thunk of RawRepresentable.rawValue.getter(&v39, v3, v23);
  uint64_t v24 = v42;
  uint64_t v25 = v40;
  uint64_t v35 = v22;
  if (v41 == v39 && v42 == v40)
  {
    char v26 = 1;
    uint64_t v25 = v42;
  }

  else
  {
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, v39, v40, 0LL);
  }

  uint64_t v27 = v37;
  swift_bridgeObjectRelease(v24);
  __n128 v28 = swift_bridgeObjectRelease(v25);
  uint64_t v29 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  v29(v10, v3, v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v27, v38, v3);
  if ((v26 & 1) != 0)
  {
    char v21 = 1;
  }

  else
  {
    uint64_t v30 = v36;
    v35(v36, enum case for FlowPresentationContext.replace(_:), v3);
    dispatch thunk of RawRepresentable.rawValue.getter(&v41, v3, v23);
    dispatch thunk of RawRepresentable.rawValue.getter(&v39, v3, v23);
    uint64_t v31 = v42;
    uint64_t v32 = v40;
    if (v41 == v39 && v42 == v40)
    {
      char v21 = 1;
      uint64_t v32 = v42;
    }

    else
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, v39, v40, 0LL);
    }

    swift_bridgeObjectRelease(v31);
    __n128 v33 = swift_bridgeObjectRelease(v32);
    v29(v30, v3, v33);
  }

  ((void (*)(char *, uint64_t))v29)(v27, v3);
  sub_10002BDF4((uint64_t)v20, type metadata accessor for FlowDestination);
  sub_10002BDF4((uint64_t)v17, type metadata accessor for FlowDestination);
  return v21 & 1;
}

void sub_10009262C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v2 = a1;
    }
    else {
      uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = __CocoaSet.makeIterator()(v2);
    uint64_t v4 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
    unint64_t v5 = sub_10006B300();
    uint64_t v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    uint64_t v1 = v27[0];
    uint64_t v25 = v27[1];
    uint64_t v7 = v27[2];
    uint64_t v8 = v27[3];
    unint64_t v9 = v27[4];
  }

  else
  {
    uint64_t v10 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    uint64_t v6 = (void *)swift_bridgeObjectRetain(a1);
    uint64_t v8 = 0LL;
  }

  int64_t v24 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    uint64_t v17 = v8;
    if ((v1 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v21 = __CocoaSet.Iterator.next()(v6);
    if (!v21) {
      goto LABEL_34;
    }
    uint64_t v22 = v21;
    uint64_t v26 = v21;
    uint64_t v23 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v23, 7LL);
    id v15 = v28;
    swift_unknownObjectRelease(v22);
    if (!v15) {
      goto LABEL_34;
    }
LABEL_13:
    id v16 = [v15 type];

    if (v16 == (id)6) {
      goto LABEL_34;
    }
  }

  if (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v8 << 6);
LABEL_12:
    id v15 = *(id *)(*(void *)(v1 + 48) + 8 * v14);
    if (!v15) {
      goto LABEL_34;
    }
    goto LABEL_13;
  }

  int64_t v18 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v18 >= v24) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v8;
    if (!v19)
    {
      uint64_t v8 = v17 + 2;
      if (v17 + 2 >= v24) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v8);
      if (!v19)
      {
        uint64_t v8 = v17 + 3;
        if (v17 + 3 >= v24) {
          goto LABEL_34;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v8);
        if (!v19)
        {
          uint64_t v8 = v17 + 4;
          if (v17 + 4 >= v24) {
            goto LABEL_34;
          }
          unint64_t v19 = *(void *)(v25 + 8 * v8);
          if (!v19)
          {
            uint64_t v8 = v17 + 5;
            if (v17 + 5 >= v24) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v25 + 8 * v8);
            if (!v19)
            {
              uint64_t v20 = v17 + 6;
              while (v24 != v20)
              {
                unint64_t v19 = *(void *)(v25 + 8 * v20++);
                if (v19)
                {
                  uint64_t v8 = v20 - 1;
                  goto LABEL_31;
                }
              }

void sub_100092910(uint64_t a1)
{
}

double sub_100092920()
{
  __int128 v0 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  xmmword_1002F3690 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *(_OWORD *)&qword_1002F36A0 = v0;
  double result = 0.0;
  xmmword_1002F36B0 = xmmword_100237490;
  *(_OWORD *)&qword_1002F36C0 = xmmword_100237490;
  byte_1002F36D0 = 0;
  *(_OWORD *)&qword_1002F36D8 = xmmword_100237490;
  *(_OWORD *)&qword_1002F36E8 = xmmword_100237490;
  byte_1002F36F8 = 0;
  return result;
}

void sub_100092958()
{
  qword_1002F3700 = 0x4014000000000000LL;
}

UIColor sub_100092968()
{
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.94098, 0.94064, 0.9737, 1.0).super.isa;
  qword_1002F3708 = (uint64_t)result.super.isa;
  return result;
}

uint64_t sub_1000929D0()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v4, qword_1002F3710);
  sub_10000A634(v4, (uint64_t)qword_1002F3710);
  if (qword_1002E0748 != -1) {
    swift_once(&qword_1002E0748, sub_100072EBC);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_10000A634(v6, (uint64_t)qword_1002F3130);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v3, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  void v11[3] = v0;
  v11[4] = &protocol witness table for FontSource;
  uint64_t v8 = sub_10000DD7C(v11);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  StaticDimension.init(_:scaledLike:)(v11, 33.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100092B24()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v4, qword_1002F3728);
  sub_10000A634(v4, (uint64_t)qword_1002F3728);
  if (qword_1002E0750 != -1) {
    swift_once(&qword_1002E0750, sub_100072ED4);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_10000A634(v6, (uint64_t)qword_1002F3148);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v3, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  void v11[3] = v0;
  v11[4] = &protocol witness table for FontSource;
  uint64_t v8 = sub_10000DD7C(v11);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  StaticDimension.init(_:scaledLike:)(v11, 34.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100092C74()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v4, qword_1002F3740);
  sub_10000A634(v4, (uint64_t)qword_1002F3740);
  if (qword_1002E0758 != -1) {
    swift_once(&qword_1002E0758, sub_100072EEC);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_10000A634(v6, (uint64_t)qword_1002F3160);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v3, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  void v11[3] = v0;
  v11[4] = &protocol witness table for FontSource;
  uint64_t v8 = sub_10000DD7C(v11);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  StaticDimension.init(_:scaledLike:)(v11, 30.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_100092DC0(uint64_t a1)
{
}

void sub_100092DD0(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = type metadata accessor for AspectRatio(0LL);
  sub_10000DC04(v5, a3);
  uint64_t v6 = sub_10000A634(v5, (uint64_t)a3);
  AspectRatio.init(_:_:)(v6, a1);
}

void sub_100092E28()
{
  qword_1002F3758 = 0x4034000000000000LL;
}

uint64_t sub_100092E38()
{
  uint64_t v0 = type metadata accessor for IconRowViewLayout.Alignment(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for AspectRatio(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for IconRowViewLayout.Metrics(0LL);
  sub_10000DC04(v7, qword_1002F3760);
  uint64_t v8 = sub_10000A634(v7, (uint64_t)qword_1002F3760);
  __n128 v9 = AspectRatio.init(_:_:)(v8, 1.0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))( v3,  enum case for IconRowViewLayout.Alignment.center(_:),  v0,  v9);
  return IconRowViewLayout.Metrics.init(iconAspectRatio:interItemSpacing:alignment:)(v6, v3, 25.0);
}

id sub_100092F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialTypeLabel];
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 setText:v5];
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    [*(id *)&v2[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialTypeLabel] setText:0];
  }

  [v4 setHidden:a2 == 0];
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_subtitleLabel];
  else {
    uint64_t v7 = 1LL;
  }
  [v6 setNumberOfLines:v7];
  return [v2 setNeedsLayout];
}

id sub_100093010()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CornerStyle(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconArtworkView];
  if (v7)
  {
    type metadata accessor for RoundedCornerView(0LL);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for CornerStyle.arc(_:), v2);
    id v8 = v7;
    __n128 v9 = (void *)RoundedCornerView.__allocating_init(radius:style:)(v6, 12.0);
    uint64_t v10 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconBackingView;
    uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconBackingView];
    if (v11)
    {
      [v11 removeFromSuperview];
      uint64_t v12 = *(void **)&v1[v10];
    }

    else
    {
      uint64_t v12 = 0LL;
    }

    *(void *)&v1[v10] = v9;
    id v16 = v9;

    sub_100093184();
    uint64_t v17 = *(void **)&v1[v10];
    if (v17)
    {
      id v18 = v17;
      [v18 addSubview:v8];
    }
  }

  else
  {
    uint64_t v13 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconBackingView;
    unint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconBackingView];
    if (v14)
    {
      objc_msgSend(v14, "removeFromSuperview", v4);
      id v15 = *(void **)&v1[v13];
    }

    else
    {
      id v15 = 0LL;
    }

    *(void *)&v1[v13] = 0LL;

    sub_100093184();
  }

  return [v1 setNeedsLayout];
}

id sub_100093184()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconBackingView];
  if (v1)
  {
    id v2 = v1;
    [v2 setClipsToBounds:1];
    uint64_t v3 = qword_1002E0938;
    id v4 = v2;
    if (v3 != -1) {
      swift_once(&qword_1002E0938, sub_100092968);
    }
    [v4 setBackgroundColor:qword_1002F3708];

    id v5 = [v0 contentView];
    [v5 addSubview:v4];

    uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconArtworkView];
    if (v6)
    {
      id v7 = v6;
      id v8 = [v0 contentView];
      [v8 addSubview:v7];
    }
  }

  return [v0 setNeedsLayout];
}

char *sub_1000932A4(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t v10 = type metadata accessor for CornerStyle(0LL);
  uint64_t v85 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialTypeLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v19 = qword_1002E0748;
  uint64_t v20 = v5;
  if (v19 != -1) {
    swift_once(&qword_1002E0748, sub_100072EBC);
  }
  uint64_t v21 = sub_10000A634(v14, (uint64_t)qword_1002F3130);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v22(v17, v21, v14);
  *(void *)&v5[v18] = sub_100011F1C((uint64_t)v17, 1LL, 4LL, 0, 0);
  uint64_t v23 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialIcon;
  type metadata accessor for BundleImage(0LL);
  int64_t v24 = (void *)static BundleImage.load(_:bundle:with:compatibleWith:)( 0xD000000000000019LL,  0x800000010024AD20LL,  0LL,  0LL,  0LL);
  id v25 = [objc_allocWithZone(UIImageView) initWithImage:v24];

  *(void *)&v20[v23] = v25;
  v20[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_showEditorialIcon] = 0;
  uint64_t v26 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_titleLabel;
  if (qword_1002E0750 != -1) {
    swift_once(&qword_1002E0750, sub_100072ED4);
  }
  uint64_t v27 = sub_10000A634(v14, (uint64_t)qword_1002F3148);
  v22(v17, v27, v14);
  *(void *)&v20[v26] = sub_100011F1C((uint64_t)v17, 1LL, 0LL, 1, 0);
  uint64_t v28 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_subtitleLabel;
  if (qword_1002E0758 != -1) {
    swift_once(&qword_1002E0758, sub_100072EEC);
  }
  uint64_t v29 = sub_10000A634(v14, (uint64_t)qword_1002F3160);
  v22(v17, v29, v14);
  *(void *)&v20[v28] = sub_100011F1C((uint64_t)v17, 1LL, 0LL, 1, 0);
  *(void *)&v20[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialArtworkView] = 0LL;
  uint64_t v30 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_videoContainer;
  uint64_t v31 = (objc_class *)type metadata accessor for VideoViewContainer();
  uint64_t v32 = (char *)objc_allocWithZone(v31);
  swift_unknownObjectWeakInit(&v32[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view], 0LL);
  *(void *)&v32[OBJC_IVAR____TtC8AppStore18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v33, 0LL);
  v89.receiver = v32;
  v89.super_class = v31;
  *(void *)&v20[v30] = objc_msgSendSuper2(&v89, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v20[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconArtworkView] = 0LL;
  *(void *)&v20[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconBackingView] = 0LL;
  *(void *)&v20[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconRow] = 0LL;

  id v34 = (objc_class *)type metadata accessor for EditorialSearchResultCollectionViewCell();
  v88.receiver = v20;
  v88.super_class = v34;
  uint64_t v35 = (char *)objc_msgSendSuper2(&v88, "initWithFrame:", a1, a2, a3, a4);
  id v36 = [v35 contentView];
  id v37 = [v36 layer];

  if (qword_1002E0F68 != -1) {
    swift_once(&qword_1002E0F68, sub_10017CBB0);
  }
  [v37 setBorderWidth:*(double *)&qword_1002F5280];

  id v38 = [v35 contentView];
  [v38 setClipsToBounds:1];

  uint64_t v39 = v85;
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v12, enum case for CornerStyle.continuous(_:), v10);
  id v40 = [v35 contentView];
  CornerStyle.apply(withRadius:to:)(v40, 12.0);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v10);
  id v41 = [v35 layer];
  [v41 setShadowPathIsBounds:0];

  uint64_t v42 = &v35[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  __int128 v43 = *(_OWORD *)&v35[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 16];
  v95[0] = *(_OWORD *)&v35[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  v95[1] = v43;
  char v96 = v35[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)uint64_t v42 = 0x4020000000000000LL;
  *((void *)v42 + 1) = 0x4034000000000000LL;
  v42[16] = 0;
  *((void *)v42 + 3) = 0LL;
  v42[32] = 1;
  uint64_t v44 = v35;
  sub_100068D40((uint64_t)v95, v45, v46);

  v90[0] = xmmword_100236D50;
  v90[1] = xmmword_10023A680;
  char v91 = 0;
  uint64_t v92 = 0LL;
  uint64_t v93 = 0LL;
  char v94 = 1;
  uint64_t v47 = v44;
  sub_1000673E8(v90);

  __int128 v48 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  CGRect v49 = v47;
  id v50 = [v48 blackColor];
  id v51 = [v50 CGColor];

  __n128 v52 = &v49[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  int v53 = *(void **)&v49[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  __n128 v54 = *(void **)&v49[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 8];
  uint64_t v55 = *(void **)&v49[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 16];
  *(void *)__n128 v52 = v51;
  *(int64x2_t *)(v52 + 8) = vdupq_n_s64(1uLL);
  id v56 = v53;
  sub_10000B3E0(v54);
  sub_10000B3E0(v55);
  id v57 = v51;

  sub_10000B3F0(v54);
  sub_10000B3F0(v55);
  sub_100068E94(v53, v54, (unint64_t)v55);

  sub_10000B3F0(v54);
  sub_10000B3F0(v55);

  __int128 v58 = &v49[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v59 = *(_DWORD *)&v49[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v57) = *(_DWORD *)&v49[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v54) = v49[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v55) = v49[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)__int128 v58 = 1048576000;
  *((_DWORD *)v58 + 1) = 1051931443;
  v58[8] = 0;
  uint64_t v60 = *((unsigned int *)v58 + 3);
  *((_DWORD *)v58 + 3) = 0;
  v58[16] = 1;
  uint64_t v61 = v49;
  char v87 = (char)v54;
  char v86 = (char)v55;
  v62.n128_u32[0] = v59;
  sub_100068FFC((int)v57, v54 | (unint64_t)(v60 << 32), (char)v55, v62);

  char v63 = v61[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled];
  v61[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v63 & 1) == 0)
  {
    char v64 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v61) + 0x98LL))();
    uint64_t v65 = v61;
    sub_10006753C(v64);
  }

  id v66 = [v61 contentView];
  [v66 addSubview:*(void *)&v61[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_videoContainer]];

  id v67 = [v61 contentView];
  uint64_t v68 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialIcon;
  [v67 addSubview:*(void *)&v61[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialIcon]];

  uint64_t v69 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialTypeLabel;
  uint64_t v70 = *(void **)&v61[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialTypeLabel];
  [v70 setEnablesMarqueeWhenAncestorFocused:1];
  id v71 = [v61 contentView];
  [v71 addSubview:v70];

  uint64_t v72 = *(void **)&v61[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_titleLabel];
  [v72 setEnablesMarqueeWhenAncestorFocused:1];
  id v73 = [v61 contentView];
  [v73 addSubview:v72];

  uint64_t v74 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_subtitleLabel;
  uint64_t v75 = *(void **)&v61[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_subtitleLabel];
  [v75 setEnablesMarqueeWhenAncestorFocused:1];
  id v76 = [v61 contentView];
  [v76 addSubview:v75];

  id v77 = *(id *)&v61[v69];
  id v78 = [v48 systemBlueColor];
  [v77 setTextColor:v78];

  id v79 = *(id *)&v61[v74];
  id v80 = [v48 systemGrayColor];
  [v79 setTextColor:v80];

  id v81 = *(id *)&v61[v68];
  id v82 = [v61 tintColor];
  [v81 setTintColor:v82];

  return v61;
}

void sub_100093BAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticDimension(0LL);
  uint64_t v170 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  v149 = (char *)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v154 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v155 = sub_1000038E8(&qword_1002E26E0);
  id v7 = *(char ***)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v165 = (uint64_t)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  v166 = (char *)&v147 - v10;
  __chkstk_darwin(v11);
  v160 = (void **)((char *)&v147 - v12);
  __chkstk_darwin(v13);
  uint64_t v15 = (void **)((char *)&v147 - v14);
  uint64_t v16 = (objc_class *)type metadata accessor for EditorialSearchResultCollectionViewCell();
  v172.receiver = v0;
  v172.super_class = v16;
  objc_msgSendSuper2(&v172, "layoutSubviews");
  uint64_t v17 = &selRef_accessibilityRating;
  id v18 = [v0 contentView];
  uint64_t v19 = &selRef_accessibilityRating;
  [v18 frame];

  uint64_t v20 = &selRef_accessibilityRating;
  CGRect.subtracting(insets:)([v1 layoutMargins]);
  double v22 = v21;
  if (qword_1002E0958 != -1) {
LABEL_47:
  }
    swift_once(&qword_1002E0958, sub_100092DC0);
  uint64_t v23 = type metadata accessor for AspectRatio(0LL);
  sub_10000A634(v23, (uint64_t)qword_1002E5EC0);
  double v153 = AspectRatio.height(fromWidth:)(v22);
  id v24 = [v1 v17[46]];
  [v24 v19[56]];

  *(void *)&v173.origin.x = CGRect.subtracting(insets:)([v1 v20[101]]).n128_u64[0];
  double MaxY = CGRectGetMaxY(v173);
  id v26 = [v1 v17[46]];
  [v26 v19[56]];

  CGRect.subtracting(insets:)([v1 v20[101]]);
  if (qword_1002E0928 != -1) {
    uint64_t v27 = swift_once(&qword_1002E0928, sub_100092920);
  }
  uint64_t v162 = v4;
  uint64_t v28 = v155;
  double v29 = v153;
  v161 = v6;
  *(void *)&CGFloat v159 = CGRect.subtracting(insets:)(v27).n128_u64[0];
  double v158 = v30;
  double v157 = v31;
  double v156 = v32;
  uint64_t v33 = sub_1000038E8((uint64_t *)&unk_1002E5F60);
  uint64_t v34 = (uint64_t)v7[9];
  uint64_t v35 = *((unsigned __int8 *)v7 + 80);
  uint64_t v36 = (v35 + 32) & ~v35;
  *(double *)&uint64_t v37 = COERCE_DOUBLE(swift_allocObject(v33, v36 + 3 * v34, v35 | 7));
  *(_OWORD *)(v37 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100235590;
  uint64_t v164 = v36;
  double v167 = *(double *)&v37;
  id v7 = (char **)(v37 + v36);
  uint64_t v19 = (char **)v28;
  uint64_t v38 = v37 + v36 + *(int *)(v28 + 48);
  uint64_t v39 = *(void **)&v1[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialTypeLabel];
  *(void *)(v37 + v36) = v39;
  uint64_t v40 = qword_1002E0940;
  id v148 = v39;
  if (v40 != -1) {
    swift_once(&qword_1002E0940, sub_1000929D0);
  }
  uint64_t v41 = sub_10000A634(v2, (uint64_t)qword_1002F3710);
  uint64_t v6 = *(char **)(v170 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v6)(v38, v41, v2);
  uint64_t v42 = (char *)v7 + v34 + *((int *)v19 + 12);
  __int128 v43 = *(char **)&v1[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_titleLabel];
  *(char **)((char *)v7 + v34) = v43;
  uint64_t v44 = qword_1002E0948;
  __n128 v45 = v43;
  if (v44 != -1) {
    swift_once(&qword_1002E0948, sub_100092B24);
  }
  uint64_t v46 = sub_10000A634(v2, (uint64_t)qword_1002F3728);
  ((void (*)(char *, uint64_t, uint64_t))v6)(v42, v46, v2);
  uint64_t v169 = v34;
  uint64_t v47 = (char **)((char *)v7 + 2 * v34);
  uint64_t v17 = v19;
  __int128 v48 = (char *)v47 + *((int *)v19 + 12);
  v163 = v1;
  CGRect v49 = *(void **)&v1[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_subtitleLabel];
  void *v47 = v49;
  uint64_t v4 = qword_1002E0950;
  id v50 = v49;
  if (v4 != -1) {
    swift_once(&qword_1002E0950, sub_100092C74);
  }
  uint64_t v51 = sub_10000A634(v2, (uint64_t)qword_1002F3740);
  uint64_t v20 = (char **)v2;
  ((void (*)(char *, uint64_t, uint64_t))v6)(v48, v51, v2);
  uint64_t v1 = 0LL;
  v171 = _swiftEmptyArrayStorage;
  uint64_t v2 = (uint64_t)v7;
  __n128 v52 = v19;
  do
  {
    if ((unint64_t)v1 >= *(void *)(*(void *)&v167 + 16LL))
    {
      __break(1u);
      goto LABEL_47;
    }

    uint64_t v19 = v7;
    sub_1000951C4(v2, (uint64_t)v15);
    uint64_t v53 = *((int *)v52 + 12);
    __n128 v54 = v166;
    uint64_t v55 = &v166[v53];
    id v56 = *v15;
    *(void *)v166 = *v15;
    ((void (*)(char *, char *, char **))v6)(&v54[v53], (char *)v15 + v53, v20);
    LOBYTE(v56) = [v56 isHidden];
    v168 = *(void (**)(char *, char **))(v170 + 8);
    v168(v55, v20);
    if ((v56 & 1) != 0)
    {
      sub_100095254((uint64_t)v15);
      uint64_t v4 = v169;
    }

    else
    {
      sub_10009520C((uint64_t)v15, v165);
      id v57 = v171;
      if ((swift_isUniquelyReferenced_nonNull_native(v171, v58) & 1) == 0)
      {
        sub_100025154(0LL, v57[2] + 1LL, 1);
        id v57 = v171;
      }

      unint64_t v60 = v57[2];
      unint64_t v59 = v57[3];
      if (v60 >= v59 >> 1)
      {
        sub_100025154(v59 > 1, v60 + 1, 1);
        id v57 = v171;
      }

      __int128 v57[2] = v60 + 1;
      uint64_t v61 = (uint64_t)v57 + v164 + v60 * v169;
      uint64_t v4 = v169;
      sub_10009520C(v165, v61);
    }

    ++v1;
    v2 += v4;
    id v7 = v19;
    __n128 v52 = v17;
  }

  while (v1 != (char *)3);
  double v62 = v167;
  swift_setDeallocating(*(void *)&v167);
  swift_arrayDestroy(v19, *(void *)(*(void *)&v62 + 16LL), v17);
  swift_deallocClassInstance(*(void *)&v62, 32LL, 7LL);
  char v63 = v171;
  v174.origin.x = 0.0;
  double v151 = MaxY - v29;
  v174.origin.y = MaxY - v29;
  double v152 = v22;
  v174.size.width = v22;
  v174.size.height = v29;
  double MinY = CGRectGetMinY(v174);
  id v65 = v163;
  id v66 = v17;
  id v67 = [v163 contentView];
  [v67 frame];

  uint64_t v68 = v63;
  *(void *)&v175.origin.x = CGRect.subtracting(insets:)([v65 layoutMargins]).n128_u64[0];
  double v69 = CGRectGetMinY(v175);
  uint64_t v70 = v63[2];
  if (!v70) {
    goto LABEL_34;
  }
  double v71 = MinY - v69;
  *(void *)&double v72 = (char *)v68 + v164;
  v150 = v68;
  swift_retain(v68);
  uint64_t v74 = v20;
  double v167 = v72;
  double v75 = 0.0;
  id v76 = v161;
  uint64_t v77 = v162;
  id v78 = v66;
  uint64_t v79 = v154;
  uint64_t v80 = v169;
  id v81 = v163;
  do
  {
    static Dimensions.defaultRoundingRule.getter(v73);
    double v82 = AnyDimension.value(in:rounded:)(v81, v76, v74, &protocol witness table for StaticDimension);
    uint64_t v83 = *(uint64_t (**)(char *, uint64_t))(v79 + 8);
    uint64_t v73 = v83(v76, v77);
    double v75 = v75 + v82;
    *(void *)&v72 += v80;
    --v70;
  }

  while (v70);
  v166 = (char *)v83;
  uint64_t v68 = v150;
  swift_release(v150);
  uint64_t v84 = v68[2];
  uint64_t v85 = &selRef_accessibilityRating;
  if (v84)
  {
    char v86 = v74;
    double v87 = v71 * 0.5 - v75 * 0.5;
    uint64_t v165 = (uint64_t)v160 + *((int *)v78 + 12);
    uint64_t v164 = sub_10000DFD4(0LL, (unint64_t *)&unk_1002E4DF0, &OBJC_CLASS___NSObject_ptr);
    uint64_t v155 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_showEditorialIcon;
    uint64_t v154 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialIcon;
    objc_super v88 = v149;
    id v89 = v148;
    uint64_t v90 = *(void *)&v167;
    double v91 = v157;
    CGFloat v92 = v158;
    do
    {
      uint64_t v93 = v90;
      char v94 = v160;
      sub_1000951C4(v90, (uint64_t)v160);
      uint64_t v95 = *v94;
      char v96 = v86;
      (*(void (**)(char *, uint64_t, char **))(v170 + 32))(v88, v165, v86);
      CGFloat v97 = v156;
      objc_msgSend(v95, "sizeThatFits:", v91, v156);
      double v99 = v98;
      double v167 = v100;
      uint64_t v101 = v163;
      id v102 = [v163 contentView];
      [v102 v85[56]];

      *(void *)&double v103 = CGRect.subtracting(insets:)([v101 layoutMargins]).n128_u64[0];
      if (v99 >= v104) {
        double v99 = v104;
      }
      id v105 = objc_msgSend(v101, "traitCollection", v103);
      __int128 v106 = v161;
      static Dimensions.defaultRoundingRule.getter(v105);
      double v107 = StaticDimension.value(compatibleWith:rounded:)(v105, v106);

      ((void (*)(char *, uint64_t))v166)(v106, v162);
      CGFloat v108 = v159;
      v176.origin.x = v159;
      v176.origin.y = v92;
      v176.size.width = v91;
      v176.size.height = v97;
      double MinX = CGRectGetMinX(v176);
      v177.origin.x = v108;
      v177.origin.y = v92;
      v177.size.width = v91;
      v177.size.height = v97;
      double v110 = v87 + CGRectGetMinY(v177);
      [v95 firstBaselineFromTop];
      objc_msgSend(v95, "setFrame:", MinX, v110 + v107 - v111, v99, v167);
      if ((static NSObject.== infix(_:_:)(v95, v89) & 1) != 0 && v101[v155] == 1)
      {
        uint64_t v112 = *(void **)&v101[v154];
        uint64_t v85 = &selRef_accessibilityRating;
        [v95 frame];
        double v114 = v113;
        double v116 = v115;
        [v112 frame];
        objc_msgSend(v112, "setFrame:", v114, v116);
        [v95 center];
        [v112 center];
        objc_msgSend(v112, "setCenter:");
        id v117 = v95;
        [v112 frame];
        double MaxX = CGRectGetMaxX(v178);
        if (qword_1002E0930 != -1) {
          swift_once(&qword_1002E0930, sub_100092958);
        }
        double v119 = MaxX + *(double *)&qword_1002F3700;
        [v117 frame];
        [v117 setFrame:v119];

        char v86 = v96;
        v168(v88, v96);
      }

      else
      {
        char v86 = v96;
        v168(v88, v96);

        uint64_t v85 = &selRef_accessibilityRating;
      }

      double v87 = v87 + v107;
      uint64_t v90 = v93 + v169;
      --v84;
    }

    while (v84);
    double v120 = v150;
  }

  else
  {
LABEL_34:
    double v120 = v68;
  }

  swift_release(v120);
  double v121 = v153;
  CGRect v122 = v163;
  CGRect v123 = *(void **)&v163[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialArtworkView];
  double v124 = v152;
  double v125 = v151;
  if (v123) {
    objc_msgSend(v123, "setFrame:", 0.0, v151, v152, v153);
  }
  CGRect v126 = *(char **)&v122[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_videoContainer];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v126[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view]);

  if (Strong) {
    objc_msgSend(v126, "setFrame:", 0.0, v125, v124, v121);
  }
  CGRect v128 = *(void **)&v122[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconRow];
  if (v128) {
    objc_msgSend(v128, "setFrame:", 0.0, v125, v124, v121);
  }
  CGRect v129 = *(void **)&v122[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconArtworkView];
  if (v129)
  {
    uint64_t v130 = *(void **)&v122[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconBackingView];
    if (v130)
    {
      id v131 = v129;
      id v132 = v130;
      objc_msgSend(v132, "setFrame:", 0.0, v125, v124, v121);
      id v133 = [v132 bounds];
      CGFloat v135 = v134;
      CGFloat v137 = v136;
      CGFloat v139 = v138;
      CGFloat v141 = v140;
      double v142 = ArtworkView.imageSize.getter(v133);
      double v144 = v143;
      id v145 = v131;
      v179.origin.x = v135;
      v179.origin.y = v137;
      v179.size.width = v139;
      v179.size.height = v141;
      CGFloat v146 = CGRectGetMidX(v179) - v142 * 0.5;
      v180.origin.x = v135;
      v180.origin.y = v137;
      v180.size.width = v139;
      v180.size.height = v141;
      objc_msgSend(v145, "setFrame:", v146, CGRectGetMidY(v180) - v144 * 0.5, v142, v144);
    }
  }

id sub_10009492C()
{
  uint64_t v1 = v0;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for EditorialSearchResultCollectionViewCell();
  objc_msgSendSuper2(&v6, "prepareForReuse");
  sub_100095120(0LL, &OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialArtworkView);
  sub_1001AE998();
  uint64_t v2 = OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconArtworkView;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconArtworkView];
  if (v3)
  {
    [v3 removeFromSuperview];
    uint64_t v4 = *(void **)&v1[v2];
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  *(void *)&v1[v2] = 0LL;

  sub_100093010();
  return sub_100095120(0LL, &OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconRow);
}

void sub_100094A04(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = __chkstk_darwin(v6).n128_u64[0];
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v11 = objc_msgSend(v2, "contentView", v8);
  if (qword_1002E1078 != -1) {
    swift_once(&qword_1002E1078, sub_1001BB71C);
  }
  uint64_t v12 = sub_1000038E8((uint64_t *)&unk_1002E1D50);
  sub_10000A634(v12, (uint64_t)qword_1002F5590);
  sub_1001B46F0(a1, (uint64_t)v10);
  uint64_t v19 = v2;
  Conditional.evaluate(with:)(&v20, &v19, v6);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v10, v6);
  id v14 = v20;
  [v11 setBackgroundColor:v20];

  id v15 = [v3 contentView];
  id v16 = [v15 layer];

  if (qword_1002E1080 != -1) {
    swift_once(&qword_1002E1080, sub_1001BBA10);
  }
  sub_10000A634(v12, (uint64_t)qword_1002F55A8);
  sub_1001B46F0(a1, (uint64_t)v10);
  uint64_t v19 = v3;
  Conditional.evaluate(with:)(&v20, &v19, v6);
  v13(v10, v6);
  id v17 = v20;
  id v18 = [v20 CGColor];

  [v16 setBorderColor:v18];
  if ((a2 & 1) != 0)
  {
    [v3 setNeedsLayout];
    [v3 layoutIfNeeded];
  }

double sub_100094C48()
{
  return 35.0;
}

void sub_100094C58(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_100066F98(a1, a2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v2 + OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_videoContainer)
           + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
  if (Strong)
  {
    id v6 = (id)Strong;
    sub_100139C18(v4, a2);
  }

void sub_100094CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MediaClickMetricsEvent.ActionType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
  sub_10006B300();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  uint64_t v10 = (objc_class *)type metadata accessor for EditorialSearchResultCollectionViewCell();
  v19.receiver = v2;
  v19.super_class = v10;
  objc_msgSendSuper2(&v19, "pressesBegan:withEvent:", isa, a2);

  sub_10009262C(a1);
  if ((v11 & 1) != 0)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)&v2[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_videoContainer] + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
    if (Strong)
    {
      uint64_t v13 = (_BYTE *)Strong;
      uint64_t v14 = qword_1002F4830;
      if ((*(_BYTE *)(Strong + qword_1002F4830) & 1) == 0)
      {
        id v15 = *(void **)(Strong + qword_1002EBA50);
        if (v15)
        {
          id v16 = v15;
          id v17 = (void *)dispatch thunk of VideoPlayer.playerItem.getter();

          if (v17)
          {

            v13[v14] = 1;
            sub_10013B448();
            (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for MediaClickMetricsEvent.ActionType.enterFullscreen(_:),  v5);
            sub_10013C284((uint64_t)v8);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            sub_10013CD20();
          }
        }
      }
    }
  }

void sub_100094F3C()
{
}

id sub_100094FD8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditorialSearchResultCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EditorialSearchResultCollectionViewCell()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore39EditorialSearchResultCollectionViewCell);
}

uint64_t sub_1000950D0()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*v0 + OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_videoContainer)
         + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
}

id sub_1000950F4()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_videoContainer);
}

id sub_100095108(void *a1)
{
  return sub_100095120(a1, &OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_iconRow);
}

id sub_100095114(void *a1)
{
  return sub_100095120(a1, &OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_editorialArtworkView);
}

id sub_100095120(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *(void **)&v2[*a2];
  if (v5)
  {
    [v5 removeFromSuperview];
    uint64_t v6 = *(void **)&v2[v4];
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  *(void *)&v2[v4] = a1;
  id v7 = a1;

  double v8 = *(void **)&v2[v4];
  if (v8)
  {
    id v9 = v8;
    id v10 = [v2 contentView];
    [v10 addSubview:v9];
  }

  return [v2 setNeedsLayout];
}

uint64_t sub_1000951C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E26E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009520C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E26E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100095254(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002E26E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_100095294(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_avatarShowcase;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_avatarShowcase];
  *(void *)&v1[OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_avatarShowcase] = a1;
  id v7 = a1;
  if (v3) {
    [v3 removeFromSuperview];
  }
  uint64_t v4 = *(void **)&v1[v2];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v1 contentView];
    [v6 addSubview:v5];

    uint64_t v3 = v5;
    id v7 = v6;
  }
}

char *sub_100095340(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for CornerStyle(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v15 = &v4[OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_itemLayoutContext];
  uint64_t v16 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  uint64_t v17 = OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_artworkView;
  type metadata accessor for ArtworkView(0LL);
  uint64_t v18 = v5;
  *(void *)&v5[v17] = static ArtworkView.staticIconArtworkView.getter();
  *(void *)&v18[OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_avatarShowcase] = 0LL;
  uint64_t v19 = OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_videoContainer;
  id v20 = (objc_class *)type metadata accessor for VideoViewContainer();
  double v21 = (char *)objc_allocWithZone(v20);
  swift_unknownObjectWeakInit(&v21[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view], 0LL);
  *(void *)&v21[OBJC_IVAR____TtC8AppStore18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v22, 0LL);
  v66.receiver = v21;
  v66.super_class = v20;
  *(void *)&v18[v19] = objc_msgSendSuper2(&v66, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_1002E0970 != -1) {
    swift_once(&qword_1002E0970, sub_1000963E0);
  }
  uint64_t v23 = type metadata accessor for VideoCardCollectionViewCell.Metrics(0LL);
  uint64_t v24 = sub_10000A634(v23, (uint64_t)qword_1002F3778);
  sub_10003542C(v24, (uint64_t)&v18[OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_metrics]);

  v65.receiver = v18;
  v65.super_class = ObjectType;
  id v25 = (char *)objc_msgSendSuper2(&v65, "initWithFrame:", a1, a2, a3, a4);
  id v26 = [v25 contentView];
  uint64_t v27 = OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_videoContainer;
  [v26 addSubview:*(void *)&v25[OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_videoContainer]];

  [*(id *)&v25[v27] _setContinuousCornerRadius:12.0];
  uint64_t v28 = OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_artworkView;
  id v29 = *(id *)&v25[OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_artworkView];
  ArtworkView.contentMode.setter(1LL);

  double v30 = *(void **)&v25[v28];
  uint64_t v31 = enum case for CornerStyle.continuous(_:);
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v61(v14, enum case for CornerStyle.continuous(_:), v11);
  id v32 = v30;
  ArtworkView.setCorner(radius:style:)(v14, 8.0);

  double v62 = *(void (**)(char *, uint64_t))(v12 + 8);
  v62(v14, v11);
  id v33 = [v25 contentView];
  [v33 addSubview:*(void *)&v25[v28]];

  uint64_t v34 = &v25[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  __int128 v35 = *(_OWORD *)&v25[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 16];
  v72[0] = *(_OWORD *)&v25[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  v72[1] = v35;
  char v73 = v25[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)uint64_t v34 = 0x4020000000000000LL;
  *((void *)v34 + 1) = 0x4039000000000000LL;
  v34[16] = 0;
  *((void *)v34 + 3) = 0LL;
  v34[32] = 1;
  uint64_t v36 = v25;
  sub_100068D40((uint64_t)v72, v37, v38);

  v67[0] = xmmword_100236D50;
  v67[1] = xmmword_100236D60;
  char v68 = 0;
  uint64_t v69 = 0LL;
  uint64_t v70 = 0LL;
  char v71 = 1;
  uint64_t v39 = v36;
  sub_1000673E8(v67);

  uint64_t v40 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v41 = v39;
  id v42 = [v40 blackColor];
  id v43 = [v42 CGColor];

  uint64_t v44 = &v41[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  __n128 v45 = *(void **)&v41[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  uint64_t v46 = *(void **)&v41[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 8];
  uint64_t v47 = *(void **)&v41[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 16];
  *(void *)uint64_t v44 = v43;
  *(int64x2_t *)(v44 + 8) = vdupq_n_s64(1uLL);
  id v48 = v45;
  sub_10000B3E0(v46);
  sub_10000B3E0(v47);
  id v49 = v43;

  sub_10000B3F0(v46);
  sub_10000B3F0(v47);
  sub_100068E94(v45, v46, (unint64_t)v47);

  sub_10000B3F0(v46);
  sub_10000B3F0(v47);

  id v50 = &v41[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v51 = *(_DWORD *)&v41[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v49) = *(_DWORD *)&v41[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v46) = v41[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v47) = v41[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)id v50 = 1048576000;
  *((_DWORD *)v50 + 1) = 1051931443;
  v50[8] = 0;
  uint64_t v52 = *((unsigned int *)v50 + 3);
  *((_DWORD *)v50 + 3) = 0;
  v50[16] = 1;
  uint64_t v53 = v41;
  char v64 = (char)v46;
  char v63 = (char)v47;
  v54.n128_u32[0] = v51;
  sub_100068FFC((int)v49, v46 | (unint64_t)(v52 << 32), (char)v47, v54);

  char v55 = v53[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled];
  v53[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v55 & 1) == 0)
  {
    char v56 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v53) + 0x98LL))();
    id v57 = v53;
    sub_10006753C(v56);
  }

  id v58 = [v53 contentView];
  [v58 setClipsToBounds:1];

  v61(v14, v31, v11);
  id v59 = [v53 contentView];
  CornerStyle.apply(withRadius:to:)(v59, 12.0);

  v62(v14, v11);
  return v53;
}

void sub_1000958F4(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_100066F98(a1, a2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v2 + OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_videoContainer)
           + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
  if (Strong)
  {
    id v6 = (id)Strong;
    sub_100139C18(v4, a2);
  }

void sub_10009597C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  v23[0] = ObjectType;
  uint64_t v3 = type metadata accessor for AspectRatio(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v24.receiver = v1;
  v24.super_class = ObjectType;
  objc_msgSendSuper2(&v24, "layoutSubviews", v9, v23[0]);
  uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_videoContainer];
  id v13 = [v1 contentView];
  [v13 frame];

  objc_msgSend(v12, "setFrame:", CGRect.subtracting(insets:)(objc_msgSend(v1, "layoutMargins")).n128_f64[0]);
  uint64_t v14 = &v1[OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_metrics];
  id v15 = (int *)type metadata accessor for VideoCardCollectionViewCell.Metrics(0LL);
  v23[1] = *(void *)&v14[v15[6]];
  static Dimensions.defaultRoundingRule.getter(v15);
  double v16 = AnyDimension.value(in:rounded:)(v1, v11, &type metadata for CGFloat, &protocol witness table for CGFloat);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v14[v15[7]], v3);
  AspectRatio.width(fromHeight:)(v16);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v17 = [v1 contentView];
  [v17 frame];

  *(void *)&double v18 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  sub_10000B354(v18, v19, v20, v21, *(double *)&v14[v15[5]], *(double *)&v14[v15[5] + 8]);
  static CGRect.frame(pinnedAtBottomRightOf:of:)();
  id v22 = *(id *)&v1[OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_artworkView];
  [v22 setFrame:CGRect.withLayoutDirection(in:relativeTo:)(v1)];

  sub_1000964F0(&qword_1002E1738, (uint64_t)&unk_100236B0C);
  AvatarShowcaseDisplaying.placeAvatarShowcase()();
}

uint64_t sub_100095D1C()
{
  return sub_100035470(v0 + OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_metrics);
}

uint64_t sub_100095DE0()
{
  return type metadata accessor for VideoCardCollectionViewCell(0LL);
}

uint64_t type metadata accessor for VideoCardCollectionViewCell(uint64_t a1)
{
  return sub_100036A58(a1, qword_1002E5F98, (uint64_t)&nominal type descriptor for VideoCardCollectionViewCell);
}

void sub_100095DFC(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = "\b";
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t v4 = type metadata accessor for VideoCardCollectionViewCell.Metrics(319LL);
    if (v5 <= 0x3F)
    {
      v6[4] = *(void *)(v4 - 8) + 64LL;
      swift_updateClassMetadata2(a1, 256LL, 5LL, v6, a1 + 472);
    }
  }

uint64_t type metadata accessor for VideoCardCollectionViewCell.Metrics(uint64_t a1)
{
  return sub_100036A58(a1, qword_1002E6008, (uint64_t)&nominal type descriptor for VideoCardCollectionViewCell.Metrics);
}

uint64_t *sub_100095EB0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v16);
  }

  else
  {
    uint64_t v7 = type metadata accessor for AspectRatio(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (_OWORD *)((char *)a1 + v9);
    uint64_t v12 = (__int128 *)((char *)a2 + v9);
    __int128 v13 = *v12;
    __int128 v14 = v12[1];
    uint64_t v15 = *(uint64_t *)((char *)a2 + v10);
    *uint64_t v11 = v13;
    v11[1] = v14;
    *(uint64_t *)((char *)a1 + v10) = v15;
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
  }

  return a1;
}

uint64_t sub_100095F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AspectRatio(0LL);
  id v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 28), v4);
}

uint64_t sub_100095FD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (_OWORD *)(a1 + v8);
  uint64_t v11 = (__int128 *)(a2 + v8);
  __int128 v12 = *v11;
  __int128 v13 = v11[1];
  uint64_t v14 = *(void *)(a2 + v9);
  *uint64_t v10 = v12;
  v10[1] = v13;
  *(void *)(a1 + v9) = v14;
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_10009605C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  int64_t v9[3] = v10[3];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_100096104(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (_OWORD *)(a1 + v8);
  uint64_t v11 = (__int128 *)(a2 + v8);
  __int128 v12 = *v11;
  __int128 v13 = v11[1];
  uint64_t v14 = *(void *)(a2 + v9);
  *uint64_t v10 = v12;
  v10[1] = v13;
  *(void *)(a1 + v9) = v14;
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_100096190(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AspectRatio(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (_OWORD *)(a1 + v8);
  uint64_t v11 = (_OWORD *)(a2 + v8);
  __int128 v12 = v11[1];
  uint64_t v13 = *(void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v12;
  *(void *)(a1 + v9) = v13;
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_10009621C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100096228);
}

uint64_t sub_100096228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AspectRatio(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48LL))(a1, a2, v4);
}

uint64_t sub_100096264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100096270);
}

uint64_t sub_100096270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AspectRatio(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(a1, a2, a2, v4);
}

uint64_t sub_1000962B0(uint64_t a1)
{
  uint64_t result = type metadata accessor for AspectRatio(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = " ";
    void v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    void v4[3] = v4[0];
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

double sub_100096330(double a1)
{
  return a1;
}

uint64_t sub_10009636C()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*v0 + OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_videoContainer)
         + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
}

id sub_100096390()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_videoContainer);
}

uint64_t sub_1000963A4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003542C(*v1 + OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_metrics, a1);
}

uint64_t sub_1000963BC()
{
  return sub_1000964F0(&qword_1002E6048, (uint64_t)&unk_10023A748);
}

uint64_t sub_1000963E0()
{
  uint64_t v0 = type metadata accessor for AspectRatio(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = (int *)type metadata accessor for VideoCardCollectionViewCell.Metrics(0LL);
  sub_10000DC04((uint64_t)v7, qword_1002F3778);
  uint64_t v8 = sub_10000A634((uint64_t)v7, (uint64_t)qword_1002F3778);
  AspectRatio.init(_:_:)(v8, 15.0);
  __n128 v10 = AspectRatio.init(_:_:)(v9, 15.0);
  uint64_t v11 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v1 + 32);
  v11(v8, v6, v0, v10);
  __int128 v12 = (_OWORD *)(v8 + v7[5]);
  __asm { FMOV            V0.2D, #20.0 }

  *__int128 v12 = _Q0;
  v12[1] = _Q0;
  *(void *)(v8 + v7[6]) = 0x404B000000000000LL;
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v11)(v8 + v7[7], v3, v0);
}

uint64_t sub_1000964F0(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for VideoCardCollectionViewCell(255LL);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

void sub_100096530()
{
  uint64_t v1 = v0;
  v60.receiver = v0;
  v60.super_class = (Class)type metadata accessor for SearchResultsViewController();
  objc_msgSendSuper2(&v60, "viewDidLoad");
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph];
  uint64_t v3 = type metadata accessor for ImpressionsCalculator(0LL);
  BaseObjectGraph.optional<A>(_:)(&v59, v3, v3);
  uint64_t v4 = v59;
  if (v59)
  {
    __n128 v5 = swift_retain(v59);
    ImpressionsCalculator.isVisible.setter(1LL, v5);
    swift_release(v4);
  }

  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_presenter];
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_appStateController];
  uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_appStateController + 8];
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_artworkLoader];
  swift_retain(v4);
  swift_retain(v6);
  swift_unknownObjectRetain(v7);
  swift_retain(v9);
  id v10 = objc_msgSend(v1, "snapshotPageTraitEnvironment", swift_retain(v2).n128_f64[0]);
  id v11 = objc_allocWithZone((Class)type metadata accessor for SearchResultsCollectionViewDelegate());
  __int128 v12 = sub_10006CA1C(v6, v7, v8, v4, v9, v2, v10);
  uint64_t v13 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate;
  uint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate];
  *(void *)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate] = v12;
  uint64_t v15 = v12;
  swift_unknownObjectRelease(v14);
  id v16 = [v1 collectionView];
  id v17 = v15;
  if (v16)
  {
    double v18 = v16;
    uint64_t v19 = *(void *)&v1[v13];
    swift_unknownObjectRetain(v19);
    [v18 setDelegate:v19];

    swift_unknownObjectRelease(v19);
    id v17 = (char *)v18;
  }

  id v20 = [v1 collectionView];
  if (v20)
  {
    id v21 = v20;
    id v22 = objc_allocWithZone((Class)sub_1000038E8(&qword_1002E6178));
    uint64_t v23 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v21, sub_1000969E0, 0LL);
    uint64_t v24 = OBJC_IVAR____TtC8AppStore27SearchResultsViewController_searchResultsCollectionViewDataSource;
    id v25 = *(void **)&v1[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_searchResultsCollectionViewDataSource];
    *(void *)&v1[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_searchResultsCollectionViewDataSource] = v23;

    uint64_t v26 = *(void *)&v1[v24];
    uint64_t v27 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDataSource;
    uint64_t v28 = *(void *)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDataSource];
    *(void *)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDataSource] = v26;
    id v29 = (id)swift_unknownObjectRetain(v26);
    swift_unknownObjectRelease(v28);
    id v30 = [v1 collectionView];
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = *(void *)&v1[v27];
      swift_unknownObjectRetain(v32);
      [v31 setDataSource:v32];

      swift_unknownObjectRelease(v32);
      id v29 = v31;
    }

    if (qword_1002E0FE0 != -1) {
      swift_once(&qword_1002E0FE0, sub_10017DB70);
    }
    id v33 = &v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_gradientMaskLengths];
    __int128 v34 = *(_OWORD *)&qword_1002F53A8;
    *(_OWORD *)id v33 = xmmword_1002F5398;
    *((_OWORD *)v33 + 1) = v34;
    id v35 = [v1 collectionView];
    if (v35)
    {
      uint64_t v36 = v35;
      [v35 _gradientMaskLengths];
      if (v40 != *(double *)v33
        || v37 != *((double *)v33 + 1)
        || v38 != *((double *)v33 + 2)
        || v39 != *((double *)v33 + 3))
      {
        objc_msgSend(v36, "_setGradientMaskLengths:");
      }
    }

    id v41 = [v1 collectionView];
    id v42 = &selRef_accessibilityRating;
    if (v41)
    {
      id v43 = v41;
      uint64_t v44 = type metadata accessor for ContentSearchResultCollectionViewCell();
      uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v44);
      uint64_t v46 = NSStringFromClass(ObjCClassFromMetadata);
      static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      uint64_t v48 = v47;

      NSString v49 = String._bridgeToObjectiveC()();
      uint64_t v50 = v48;
      id v42 = &selRef_accessibilityRating;
      objc_msgSend( v43,  "registerClass:forCellWithReuseIdentifier:",  ObjCClassFromMetadata,  v49,  swift_bridgeObjectRelease(v50).n128_f64[0]);
    }

    id v51 = [v1 collectionView];
    if (v51)
    {
      uint64_t v52 = v51;
      uint64_t v53 = type metadata accessor for EditorialSearchResultCollectionViewCell();
      __n128 v54 = (objc_class *)swift_getObjCClassFromMetadata(v53);
      char v55 = NSStringFromClass(v54);
      static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      uint64_t v57 = v56;

      NSString v58 = String._bridgeToObjectiveC()();
      objc_msgSend(v52, v42[264], v54, v58, swift_bridgeObjectRelease(v57).n128_f64[0]);
    }

    dispatch thunk of BasePresenter.didLoad()(v51);
    swift_release(v4);
  }

  else
  {
    __break(1u);
  }

id sub_1000969E0(void *a1)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E6160);
  DiffableLens.value.getter(&v21, v2);
  uint64_t v3 = v21;
  uint64_t v4 = type metadata accessor for AppSearchResult(0LL);
  if (swift_dynamicCastClass(v3, v4))
  {
    uint64_t v5 = type metadata accessor for ContentSearchResultCollectionViewCell();
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v5);
    uint64_t v7 = NSStringFromClass(ObjCClassFromMetadata);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    uint64_t v9 = v8;

    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    id v11 = (void *)IndexPath._bridgeToObjectiveC()();
    id v12 = [a1 dequeueReusableCellWithReuseIdentifier:v10 forIndexPath:v11];
  }

  else
  {
    uint64_t v13 = type metadata accessor for EditorialSearchResult(0LL);
    if (!swift_dynamicCastClass(v3, v13))
    {
      swift_release(v3);
      return 0LL;
    }

    uint64_t v14 = type metadata accessor for EditorialSearchResultCollectionViewCell();
    uint64_t v15 = (objc_class *)swift_getObjCClassFromMetadata(v14);
    id v16 = NSStringFromClass(v15);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    uint64_t v18 = v17;

    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
    id v11 = (void *)IndexPath._bridgeToObjectiveC()();
    id v12 = [a1 dequeueReusableCellWithReuseIdentifier:v10 forIndexPath:v11];
  }

  id v19 = v12;

  swift_release(v3);
  return v19;
}

void sub_100096B68()
{
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for SearchResultsViewController();
  objc_msgSendSuper2(&v25, "viewWillLayoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_noResultsView];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 view];
    if (!v3)
    {
      __break(1u);
      return;
    }

    uint64_t v4 = v3;
    id v5 = [v3 safeAreaLayoutGuide];

    [v5 layoutFrame];
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;

    [v0 pageMarginInsets];
    objc_msgSend(v2, "setFrame:", sub_10000B354(v7, v9, v11, v13, v14, v15));
  }

  uint64_t v16 = *(void *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate];
  if (v16)
  {
    uint64_t v17 = type metadata accessor for SearchResultsCollectionViewDelegate();
    uint64_t v18 = swift_dynamicCastClass(v16, v17);
    if (v18)
    {
      uint64_t v19 = v18;
      swift_unknownObjectRetain(v16);
      id v20 = [v0 traitCollection];
      id v21 = [v0 snapshotPageTraitEnvironment];
      id v22 = [v0 collectionView];
      id v23 = [v21 snapshotPageTraitEnvironment];
      uint64_t v24 = *(void *)(v19 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits);
      *(void *)(v19 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits) = v23;
      swift_unknownObjectRelease(v16);

      swift_unknownObjectRelease(v21);
      swift_unknownObjectRelease(v24);
    }
  }

double sub_100096D94(char a1)
{
  id v2 = v1;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for SearchResultsViewController();
  objc_msgSendSuper2(&v15, "viewDidAppear:", a1 & 1);
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate];
  if (v4)
  {
    uint64_t v5 = type metadata accessor for SearchResultsCollectionViewDelegate();
    uint64_t v6 = swift_dynamicCastClass(v4, v5);
    if (v6)
    {
      uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
      if (v7)
      {
        __n128 v8 = swift_retain(*(void *)(v6
                                    + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator));
        ImpressionsCalculator.isVisible.setter(1LL, v8);
        swift_release(v7);
      }
    }
  }

  type metadata accessor for MetricsActivity(0LL);
  uint64_t v10 = static MetricsActivity.current.getter(v9);
  uint64_t v11 = dispatch thunk of BasePresenter.referrer.getter();
  uint64_t v13 = v12;
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(v11);
  swift_release(v10);
  *(void *)&double result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

double sub_100096EB8(char a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for SearchResultsViewController();
  objc_msgSendSuper2(&v11, "viewWillDisappear:", a1 & 1);
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate];
  if (v3)
  {
    uint64_t v4 = type metadata accessor for SearchResultsCollectionViewDelegate();
    uint64_t v5 = swift_dynamicCastClass(v3, v4);
    if (v5)
    {
      uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
      if (v6)
      {
        __n128 v7 = swift_retain(*(void *)(v5
                                    + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator));
        ImpressionsCalculator.isVisible.setter(0LL, v7);
        swift_release(v6);
      }
    }
  }

  type metadata accessor for MetricsActivity(0LL);
  uint64_t v9 = static MetricsActivity.current.getter(v8);
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(0LL);
  *(void *)&double result = swift_release(v9).n128_u64[0];
  return result;
}

char *sub_100096FB8(uint64_t a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for SearchResultsViewController();
  double result = (char *)objc_msgSendSuper2(&v11, "traitCollectionDidChange:", a1);
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate];
  if (v4)
  {
    uint64_t v5 = type metadata accessor for SearchResultsCollectionViewDelegate();
    double result = (char *)swift_dynamicCastClass(v4, v5);
    if (result)
    {
      uint64_t v6 = result;
      swift_unknownObjectRetain(v4);
      id v7 = [v1 snapshotPageTraitEnvironment];
      id v8 = [v1 collectionView];
      id v9 = [v7 snapshotPageTraitEnvironment];
      uint64_t v10 = *(void *)&v6[OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits];
      *(void *)&v6[OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits] = v9;
      swift_unknownObjectRelease(v4);
      swift_unknownObjectRelease(v7);

      return (char *)swift_unknownObjectRelease(v10);
    }
  }

  return result;
}

void sub_100097114()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore27SearchResultsViewController_isLoading);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8AppStore27SearchResultsViewController_delegate);
  uint64_t v3 = Strong;
  if (v1 == 1)
  {
    if (!Strong) {
      return;
    }
    id v4 = [Strong searchController];
    id v5 = [v4 searchBar];

    id v6 = [v5 searchField];
    if (v6)
    {
      id v12 = [v6 rightView];

      if (v12)
      {
        uint64_t v7 = objc_opt_self(&OBJC_CLASS___UIActivityIndicatorView);
        if (swift_dynamicCastObjCClass(v12, v7))
        {
LABEL_8:
          swift_unknownObjectRelease(v3);

          return;
        }
      }
    }

    id v12 = [objc_allocWithZone(UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
    sub_1001596EC(v12);
    goto LABEL_8;
  }

  if (Strong)
  {
    id v8 = [Strong searchController];
    id v9 = [v8 searchBar];

    id v10 = [v9 searchField];
    if (v10)
    {
      id v12 = [v10 rightView];

      if (v12)
      {
        uint64_t v11 = objc_opt_self(&OBJC_CLASS___UIActivityIndicatorView);
        if (!swift_dynamicCastObjCClass(v12, v11)) {
          goto LABEL_8;
        }

        sub_1001596EC(0LL);
      }
    }

    swift_unknownObjectRelease(v3);
  }

void sub_100097320()
{
  v0[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_isLoading] = 1;
  sub_100097114();
  uint64_t v1 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController];
  id v3 = v2;
  static ViewControllerContainment.remove(_:)(v2);

  id v4 = *(void **)&v0[v1];
  *(void *)&v0[v1] = 0LL;

  id v5 = *(void **)&v0[v1];
  id v16 = v5;
  id v6 = [v0 view];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 bounds];
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14;

    v17[0] = v9;
    v17[1] = v11;
    v17[2] = v13;
    v17[3] = v15;
    char v18 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v5, v0, v17);
  }

  else
  {
    __break(1u);
  }

void sub_10009740C(uint64_t a1)
{
  id v2 = v1;
  id v4 = [v2 collectionView];
  if (v4)
  {
    id v5 = v4;
    [v4 setHidden:1];
  }

  id v6 = sub_100188E14(a1, *(void *)&v2[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_presenter]);
  id v7 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
  uint64_t v8 = v6;
  uint64_t v9 = (void *)OverlayViewController.init(overlayView:)(v8);
  uint64_t v10 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController];
  id v12 = v11;
  static ViewControllerContainment.remove(_:)(v11);

  uint64_t v13 = *(void **)&v2[v10];
  *(void *)&v2[v10] = v9;
  id v14 = v9;

  uint64_t v15 = *(void **)&v2[v10];
  id v26 = v15;
  id v16 = [v2 view];
  if (v16)
  {
    uint64_t v17 = v16;
    [v16 bounds];
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v25 = v24;

    v27[0] = v19;
    v27[1] = v21;
    v27[2] = v23;
    v27[3] = v25;
    char v28 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v15, v2, v27);
  }

  else
  {
    __break(1u);
  }

void sub_100097574(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  id v6 = [v3 collectionView];
  if (v6)
  {
    id v7 = v6;
    [v6 setHidden:1];
  }

  v8._countAndFlagsBits = 0xD000000000000017LL;
  v8._object = (void *)0x800000010024AE60LL;
  v9._countAndFlagsBits = 0LL;
  v9._object = (void *)0xE000000000000000LL;
  Swift::String v10 = localizedString(_:comment:)(v8, v9);
  v11._object = (void *)0x800000010024AE80LL;
  v11._countAndFlagsBits = 0xD000000000000011LL;
  v12._countAndFlagsBits = 0LL;
  v12._object = (void *)0xE000000000000000LL;
  Swift::String v13 = localizedString(_:comment:)(v11, v12);
  uint64_t v14 = sub_1000038E8(&qword_1002E6170);
  uint64_t v15 = swift_allocObject(v14, 72LL, 7LL);
  *(_OWORD *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_10005E6D4();
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v16 = String.init(format:_:)(v13._countAndFlagsBits, v13._object, v15);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease(v13._object);
  id v19 = objc_allocWithZone((Class)type metadata accessor for EmptyStateView(0LL));
  uint64_t v20 = sub_1000ECF34(v10._countAndFlagsBits, (uint64_t)v10._object, v16, v18);
  sub_100098468(v20);
}

void sub_1000976E8(uint64_t a1)
{
  uint64_t v40 = sub_1000038E8((uint64_t *)&unk_1002E6160);
  uint64_t v3 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  id v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  Swift::String v8 = (char *)&v36 - v7;
  uint64_t v9 = sub_1000038E8(&qword_1002E6148);
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)&double v11 = __chkstk_darwin(v9).n128_u64[0];
  Swift::String v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v14 = objc_msgSend(v1, "collectionView", v11);
  if (v14)
  {
    uint64_t v15 = v14;
    [v14 setHidden:0];
  }

  sub_100098468(0LL);
  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_searchResultsCollectionViewDataSource];
  if (v16)
  {
    id v38 = v16;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
    if (!NSDiffableDataSourceSnapshot.numberOfSections.getter(v9)) {
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100284178);
    }
    double v39 = v13;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0) {
        uint64_t v35 = a1;
      }
      else {
        uint64_t v35 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(a1);
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(a1);
    }

    else
    {
      uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    uint64_t v18 = _swiftEmptyArrayStorage;
    if (v17)
    {
      v41[0] = _swiftEmptyArrayStorage;
      sub_100025180(0LL, v17 & ~(v17 >> 63), 0);
      if (v17 < 0)
      {
        __break(1u);
        return;
      }

      uint64_t v36 = v10;
      uint64_t v37 = v9;
      uint64_t v18 = (void *)v41[0];
      if ((a1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v19 = 0LL;
        uint64_t v20 = v40;
        do
        {
          uint64_t v42 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, a1);
          uint64_t v21 = type metadata accessor for SearchResult(0LL);
          uint64_t v22 = sub_10000A4AC( &qword_1002F2260,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for SearchResult,  (uint64_t)&protocol conformance descriptor for SearchResult);
          DiffableLens<A>.init(_:)(&v42, v21, v22, v23);
          v41[0] = v18;
          unint64_t v25 = v18[2];
          unint64_t v24 = v18[3];
          if (v25 >= v24 >> 1)
          {
            sub_100025180(v24 > 1, v25 + 1, 1);
            uint64_t v18 = (void *)v41[0];
          }

          ++v19;
          v18[2] = v25 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))( (unint64_t)v18 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
          + *(void *)(v3 + 72) * v25,
            v8,
            v20);
        }

        while (v17 != v19);
      }

      else
      {
        id v26 = (uint64_t *)(a1 + 32);
        uint64_t v27 = type metadata accessor for SearchResult(0LL);
        uint64_t v28 = sub_10000A4AC( &qword_1002F2260,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for SearchResult,  (uint64_t)&protocol conformance descriptor for SearchResult);
        do
        {
          uint64_t v42 = *v26;
          __n128 v29 = swift_retain(v42);
          DiffableLens<A>.init(_:)(&v42, v27, v28, v29);
          v41[0] = v18;
          unint64_t v31 = v18[2];
          unint64_t v30 = v18[3];
          if (v31 >= v30 >> 1)
          {
            sub_100025180(v30 > 1, v31 + 1, 1);
            uint64_t v18 = (void *)v41[0];
          }

          v18[2] = v31 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))( (unint64_t)v18 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
          + *(void *)(v3 + 72) * v31,
            v5,
            v40);
          ++v26;
          --v17;
        }

        while (v17);
      }

      uint64_t v10 = v36;
      uint64_t v9 = v37;
    }

    v41[0] = 0LL;
    v41[1] = 0LL;
    uint64_t v32 = v39;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v18, v41, v9);
    __n128 v33 = swift_bridgeObjectRelease(v18);
    __int128 v34 = v38;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)( v32,  1LL,  0LL,  0LL,  v33);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v32, v9);
  }

void sub_100097AA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = dispatch thunk of BasePresenter.pendingPageRender.getter();
  if (v2)
  {
    uint64_t v4 = v2;
    PendingPageRender.isLayoutPending.setter(1LL);
    *(void *)&double v3 = swift_release(v4).n128_u64[0];
  }

  id v5 = objc_msgSend(v1, "collectionView", v3);
  if (v5)
  {
    uint64_t v6 = v5;
    id v14 = [v5 collectionViewLayout];

    if (v14)
    {
      uint64_t v7 = type metadata accessor for CollectionViewTableFlowLayout();
      uint64_t v8 = swift_dynamicCastClass(v14, v7);
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = swift_allocObject(&unk_100289158, 24LL, 7LL);
        swift_unknownObjectWeakInit(v10 + 16, v1);
        double v11 = (uint64_t (**)(uint64_t))(v9
                                               + OBJC_IVAR____TtC8AppStore29CollectionViewTableFlowLayout_pendingPrepareObserver);
        uint64_t v12 = *(void *)(v9 + OBJC_IVAR____TtC8AppStore29CollectionViewTableFlowLayout_pendingPrepareObserver);
        uint64_t v13 = *(void *)(v9 + OBJC_IVAR____TtC8AppStore29CollectionViewTableFlowLayout_pendingPrepareObserver + 8);
        *double v11 = sub_1000986F4;
        v11[1] = (uint64_t (*)(uint64_t))v10;
        sub_10000A450(v12, v13);
      }
    }
  }

uint64_t sub_100097BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0LL, 0LL);
  uint64_t result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC8AppStore27SearchResultsViewController_presenter);
    swift_retain(v5);

    uint64_t v6 = dispatch thunk of BasePresenter.pendingPageRender.getter();
    uint64_t result = swift_release(v5);
    if (v6)
    {
      PendingPageRender.isLayoutPending.setter(0LL);
      return swift_release(v6);
    }
  }

  return result;
}

void sub_100097D68()
{
}

id sub_100097DE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchResultsViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore27SearchResultsViewController);
}

void sub_100097EC4()
{
  uint64_t v1 = sub_1000038E8(&qword_1002E6148);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore27SearchResultsViewController_searchResultsCollectionViewDataSource);
  if (v5)
  {
    id v6 = v5;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
    NSDiffableDataSourceSnapshot.deleteAllItems()();
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)( v4,  1LL,  0LL,  0LL,  v7);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }

uint64_t sub_100097F8C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore27SearchResultsViewController_isAutoPlayEnabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore27SearchResultsViewController_isAutoPlayEnabled, v3, 0LL, 0LL);
  return *v1;
}

uint64_t sub_100097FD0(char a1)
{
  uint64_t v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8AppStore27SearchResultsViewController_isAutoPlayEnabled);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_100098018(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

void sub_100098064()
{
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore27SearchResultsViewController_isLoading) = 0;
  sub_100097114();
}

void sub_100098078()
{
  id v1 = [v0 collectionView];
  [v1 reloadData];
}

uint64_t sub_1000980BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for ActionRunner.Origin.userInitiated(_:),  v5);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, a2, v8, v11);
    __n128 v12 = swift_release(v10);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v12);
  }

  return result;
}

uint64_t sub_10009819C(uint64_t a1, uint64_t a2)
{
  return sub_10000A4AC( &qword_1002E6128,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for SearchResultsViewController,  (uint64_t)&unk_10023A854);
}

uint64_t sub_1000981C8(uint64_t a1, uint64_t a2)
{
  return sub_10000A4AC( &qword_1002E6130,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for SearchResultsViewController,  (uint64_t)&unk_10023A81C);
}

uint64_t sub_1000981F4(uint64_t a1, uint64_t a2)
{
  return sub_10000A4AC( &qword_1002E6138,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for SearchResultsViewController,  (uint64_t)&unk_10023A87C);
}

uint64_t sub_100098220(uint64_t a1, uint64_t a2)
{
  return sub_10000A4AC( &qword_1002E6140,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for SearchResultsViewController,  (uint64_t)&unk_10023A8A4);
}

unint64_t sub_10009824C(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for IndexPath(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v24 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000038E8((uint64_t *)&unk_1002E34D0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v26 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v20 = a1;
  if (v9)
  {
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v21 = *(void *)(v4 + 72);
    uint64_t v22 = OBJC_IVAR____TtC8AppStore27SearchResultsViewController_presenter;
    __n128 v23 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      v23(v8, v10, v3);
      __n128 v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v12(v8, 0LL, 1LL, v3);
      uint64_t v13 = v24;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v24, v8, v3);
      uint64_t v14 = dispatch thunk of SearchResultsPresenter.result(at:)(v13);
      uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        unint64_t v17 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v16 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v17 >= v16 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1LL);
        }
        uint64_t v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
        specialized Array._endMutation()(v11);
      }

      v10 += v21;
      if (!--v9) {
        goto LABEL_10;
      }
    }
  }

  else
  {
    __n128 v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain(a1);
LABEL_10:
    v12(v8, 1LL, 1LL, v3);
  }

  swift_bridgeObjectRelease(v20);
  return v26;
}

void sub_100098468(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8AppStore27SearchResultsViewController_noResultsView;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore27SearchResultsViewController_noResultsView];
  if (v4)
  {
    [v4 removeFromSuperview];
    uint64_t v5 = *(void **)&v1[v3];
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(void *)&v1[v3] = a1;
  id v6 = a1;

  uint64_t v7 = *(void **)&v1[v3];
  if (v7)
  {
    id v8 = v7;
    id v9 = [v1 view];
    if (v9)
    {
      id v10 = v9;
      [v9 addSubview:v8];
    }

    else
    {
      __break(1u);
    }
  }

uint64_t sub_100098528(uint64_t a1, __n128 a2)
{
  uint64_t v3 = type metadata accessor for OSLogger(0LL, a2);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0350 != -1) {
    swift_once(&qword_1002E0350, sub_1000171DC);
  }
  uint64_t v7 = sub_10000A634(v3, (uint64_t)qword_1002F24E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002E6150);
  uint64_t v9 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v10 = swift_allocObject( v8,  ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + 2LL * *(void *)(v9 + 72),
          *(unsigned __int8 *)(v9 + 80) | 7LL);
  *(_OWORD *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236DD0;
  LogMessage.init(stringLiteral:)(0xD000000000000033LL, 0x800000010024AE20LL);
  swift_getErrorValue(a1, v18, &v16);
  uint64_t v11 = v16;
  uint64_t v12 = v17;
  v19[3] = v17;
  uint64_t v13 = sub_10000DD7C(v19);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16LL))(v13, v11, v12);
  static LogMessage.sensitive(_:)(v19);
  sub_100027424((uint64_t)v19);
  Logger.error(_:)(v10, v3, &protocol witness table for OSLogger);
  __n128 v14 = swift_bridgeObjectRelease(v10);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v14);
}

uint64_t sub_1000986D0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000986F4(uint64_t a1)
{
  return sub_100097BB0(a1, v1);
}

void sub_1000986FC(uint64_t a1)
{
  id v3 = [v1 collectionView];
  if (v3)
  {
    uint64_t v4 = v3;
    id v12 = [v3 collectionViewLayout];

    if (v12)
    {
      uint64_t v5 = objc_opt_self(&OBJC_CLASS___UICollectionViewFlowLayout);
      if (!swift_dynamicCastObjCClass(v12, v5))
      {
LABEL_9:

        return;
      }

      id v6 = v1;
      unint64_t v7 = sub_10009824C(a1, (uint64_t)v6);

      uint64_t v8 = *(void *)&v6[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate];
      if (!v8
        || (uint64_t v9 = type metadata accessor for SearchResultsCollectionViewDelegate(), !swift_dynamicCastClass(v8, v9)))
      {
LABEL_8:
        swift_bridgeObjectRelease(v7);
        goto LABEL_9;
      }

      swift_unknownObjectRetain(v8);
      id v10 = [v6 view];
      if (v10)
      {
        uint64_t v11 = v10;
        [v10 frame];

        sub_10006DA38(v7);
        swift_unknownObjectRelease(v8);
        goto LABEL_8;
      }

      __break(1u);
    }
  }

uint64_t sub_100098848(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = "\b";
  void v4[2] = "\b";
  uint64_t result = type metadata accessor for ShelfBasedCollectionViewControllerDependencies(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    void v4[4] = &unk_10023A9B8;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[7] = "\b";
    v4[8] = "\b";
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[11] = &unk_10023A9D0;
    uint64_t result = swift_initClassMetadata2(a1, 0LL, 12LL, v4, a1 + 672);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100098908()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *(void *)v0;
  uint64_t v3 = sub_1000038E8(&qword_1002E62F0);
  uint64_t v4 = swift_allocObject(v3, 176LL, 7LL);
  *(_OWORD *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10023A960;
  uint64_t v5 = type metadata accessor for GenericPageCollectionElementsObserver();
  uint64_t v6 = *(void *)&v1[qword_1002F37C0];
  uint64_t v7 = *(void *)(v2 + 616);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for DiffablePagePresenter<A>, v7);
  uint64_t v9 = sub_10001EA50(v6, v5, v7, WitnessTable);
  uint64_t v10 = sub_100004288( &qword_1002E62F8,  (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver,  (uint64_t)&unk_100237758);
  *(void *)(v4 + 32) = v9;
  *(void *)(v4 + 40) = v10;
  uint64_t v11 = type metadata accessor for SeeAllCapableCollectionElementsObserver();
  uint64_t v12 = swift_allocObject(v11, 16LL, 7LL);
  uint64_t v13 = sub_100004288( &qword_1002E6300,  (uint64_t (*)(uint64_t))type metadata accessor for SeeAllCapableCollectionElementsObserver,  (uint64_t)&unk_10023D148);
  *(void *)(v4 + 48) = v12;
  *(void *)(v4 + 56) = v13;
  __n128 v14 = *(void **)&v1[qword_1002F37C8];
  swift_retain(v6);
  id v15 = v14;
  uint64_t v16 = TimedMetricsPagePresenter.impressionsCalculator.getter(v15);
  uint64_t v17 = type metadata accessor for ComponentContainerCollectionElementsObserver(0LL);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  uint64_t v18 = v1;
  *(void *)(v4 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)( v6,  WitnessTable,  v1,  v15,  &protocol witness table for CompoundScrollObserver,  v16);
  *(void *)(v4 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  v39[0] = *(void *)(v2 + 608);
  v39[1] = v7;
  __int128 v19 = *(_OWORD *)(v2 + 640);
  __int128 v40 = *(_OWORD *)(v2 + 624);
  __int128 v41 = v19;
  __int128 v42 = *(_OWORD *)(v2 + 656);
  uint64_t v20 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v39);
  uint64_t v21 = swift_getWitnessTable(&unk_10023AA78, v20);
  uint64_t v22 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v39, v20, v21);
  uint64_t v23 = TimedMetricsPagePresenter.impressionsCalculator.getter(v22);
  uint64_t v24 = type metadata accessor for ImpressionsCollectionElementsObserver(0LL);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(void *)(v4 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)( v39,  v23);
  *(void *)(v4 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v39, v20, v21);
  uint64_t v25 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0LL);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  *(void *)(v4 + 96) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v39);
  *(void *)(v4 + 104) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  uint64_t v26 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0LL);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  *(void *)(v4 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(void *)(v4 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  uint64_t v27 = type metadata accessor for TVSelectionHandlerCollectionElementsObserver(0LL);
  uint64_t v28 = *(void *)&v18[qword_1002F37D8];
  swift_retain(v6);
  swift_retain(v28);
  uint64_t v29 = swift_getWitnessTable(&protocol conformance descriptor for DiffablePagePresenter<A>, v7);
  *(void *)(v4 + 128) = sub_10020F86C(v6, v28, v27, v7, v29, WitnessTable);
  *(void *)(v4 + 136) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  uint64_t v30 = type metadata accessor for FocusExtensionCollectionElementsObserver();
  uint64_t v31 = swift_allocObject(v30, 16LL, 7LL);
  uint64_t v32 = sub_100004288( &qword_1002E6308,  (uint64_t (*)(uint64_t))type metadata accessor for FocusExtensionCollectionElementsObserver,  (uint64_t)&unk_10024285C);
  *(void *)(v4 + 144) = v31;
  *(void *)(v4 + 152) = v32;
  uint64_t v33 = type metadata accessor for AutomationCollectionElementsObserver(0LL);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  *(void *)(v4 + 160) = AutomationCollectionElementsObserver.init()();
  *(void *)(v4 + 168) = &protocol witness table for AutomationCollectionElementsObserver;
  uint64_t v34 = type metadata accessor for CompoundCollectionElementsObserver(0LL);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  uint64_t v35 = CompoundCollectionElementsObserver.init(children:)(v4);
  uint64_t v36 = *(void *)&v18[qword_1002E61A0];
  if (v36)
  {
    sub_100004288( &qword_1002E6310,  (uint64_t (*)(uint64_t))type metadata accessor for FocusAvoidanceCollectionElementsObserver,  (uint64_t)&unk_10023BFF8);
    __n128 v37 = swift_retain(v36);
    CompoundCollectionElementsObserver.addChild(_:)(v37);
    swift_release(v36);
  }

  return v35;
}

void sub_100098CDC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (double *)(swift_isaMask & *v2);
  uint64_t v5 = type metadata accessor for JULoadingViewController.PresentationContext(0LL);
  __n128 v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v9 = v4[76];
  uint64_t v10 = *((void *)v4 + 78);
  uint64_t v11 = *((void *)v4 + 79);
  uint64_t v12 = *((void *)v4 + 80);
  uint64_t v13 = *((void *)v4 + 82);
  uint64_t v14 = *((void *)v4 + 83);
  double v93 = v9;
  uint64_t v94 = v10;
  uint64_t v88 = v12;
  uint64_t v89 = v11;
  uint64_t v95 = v11;
  uint64_t v96 = v12;
  uint64_t v90 = v14;
  uint64_t v91 = v13;
  uint64_t v97 = v13;
  uint64_t v98 = v14;
  uint64_t updated = type metadata accessor for DiffablePagePresenter.UpdatePhase(0LL, &v93, v6);
  uint64_t v16 = *(void *)(updated - 8);
  __n128 v17 = __chkstk_darwin(updated);
  __int128 v19 = (uint64_t *)((char *)&v87 - v18);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)&v87 - v18, a1, updated, v17);
  int v20 = (*(uint64_t (**)(uint64_t *, uint64_t))(v16 + 88))(v19, updated);
  if (v20 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v16 + 96))(v19, updated);
    swift_unknownObjectRelease(*v19);
    uint64_t v22 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
    uint64_t v23 = *(void **)((char *)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController);
    id v24 = v23;
    static ViewControllerContainment.remove(_:)(v23);

    uint64_t v25 = *(void **)((char *)v2 + v22);
    *(void *)((char *)v2 + v22) = 0LL;

    uint64_t v26 = *(void **)((char *)v2 + v22);
    uint64_t v27 = *(double (**)(void))((swift_isaMask & *v2) + 0x138LL);
    id v28 = v26;
    double v93 = v27();
    uint64_t v94 = v29;
    uint64_t v95 = v30;
    uint64_t v96 = v31;
    LOBYTE(v97) = 0;
    static ViewControllerContainment.add(_:to:frame:)(v26, v2, &v93);

    uint64_t v33 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v32);
    if (v33)
    {
      uint64_t v34 = v33;
      PendingPageRender.isLayoutPending.setter(1LL);
      swift_release(v34);
    }

    uint64_t v35 = (void *)((char *)v2 + qword_1002E6188);
    swift_beginAccess((char *)v2 + qword_1002E6188, v92, 0LL, 0LL);
    uint64_t v36 = *v35;
    if (*v35)
    {
      uint64_t v37 = swift_allocObject(&unk_100289320, 24LL, 7LL);
      swift_unknownObjectWeakInit(v37 + 16, v2);
      id v38 = (double *)swift_allocObject(&unk_1002893E8, 88LL, 7LL);
      v38[2] = v9;
      v38[3] = v4[77];
      *((void *)v38 + 4) = v10;
      uint64_t v39 = v88;
      *((void *)v38 + 5) = v89;
      *((void *)v38 + 6) = v39;
      uint64_t v40 = v91;
      v38[7] = v4[81];
      *((void *)v38 + 8) = v40;
      *((void *)v38 + 9) = v90;
      *((void *)v38 + 10) = v37;
      __int128 v41 = (void (**)(uint64_t))(v36
                                          + OBJC_IVAR____TtC8AppStore33BaseCollectionCompositionalLayout_pendingPrepareObserver);
      uint64_t v43 = *(void *)(v36 + OBJC_IVAR____TtC8AppStore33BaseCollectionCompositionalLayout_pendingPrepareObserver);
      uint64_t v42 = *(void *)(v36 + OBJC_IVAR____TtC8AppStore33BaseCollectionCompositionalLayout_pendingPrepareObserver + 8);
      *__int128 v41 = sub_10009EE08;
      v41[1] = (void (*)(uint64_t))v38;
      sub_10000A450(v43, v42);
    }
  }

  else if (v20 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v16 + 96))(v19, updated);
    uint64_t v44 = *v19;
    sub_10000A450(v19[1], v19[2]);
    type metadata accessor for ErrorShieldView();
    uint64_t v45 = *(void *)((char *)v2 + qword_1002F37C0);
    swift_errorRetain(v44);
    uint64_t v46 = *((void *)v4 + 77);
    uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TimedMetricsPagePresenter<A>, v46);
    uint64_t v48 = sub_10014013C(v44, v45, v46, WitnessTable);
    swift_errorRelease(v44);
    id v49 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
    uint64_t v50 = v48;
    id v51 = (void *)OverlayViewController.init(overlayView:)(v50);
    uint64_t v52 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
    uint64_t v53 = *(void **)((char *)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController);
    id v54 = v53;
    static ViewControllerContainment.remove(_:)(v53);

    char v55 = *(void **)((char *)v2 + v52);
    *(void *)((char *)v2 + v52) = v51;
    id v56 = v51;

    uint64_t v57 = *(void **)((char *)v2 + v52);
    NSString v58 = *(double (**)(void))((swift_isaMask & *v2) + 0x138LL);
    id v59 = v57;
    double v93 = v58();
    uint64_t v94 = v60;
    uint64_t v95 = v61;
    uint64_t v96 = v62;
    LOBYTE(v97) = 0;
    static ViewControllerContainment.add(_:to:frame:)(v57, v2, &v93);

    swift_errorRelease(v44);
  }

  else if (v20 == enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    uint64_t v63 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v21);
    static JULoadingViewController.PresentationContext.placeholder.getter(v63);
    id v64 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
    objc_super v65 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v8, v63);
    uint64_t v66 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
    id v67 = *(void **)((char *)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController);
    id v68 = v67;
    static ViewControllerContainment.remove(_:)(v67);

    uint64_t v69 = *(void **)((char *)v2 + v66);
    *(void *)((char *)v2 + v66) = v65;
    id v70 = v65;

    char v71 = *(void **)((char *)v2 + v66);
    double v72 = *(double (**)(void))((swift_isaMask & *v2) + 0x138LL);
    id v73 = v71;
    double v93 = v72();
    uint64_t v94 = v74;
    uint64_t v95 = v75;
    uint64_t v96 = v76;
    LOBYTE(v97) = 0;
    static ViewControllerContainment.add(_:to:frame:)(v71, v2, &v93);
  }

  else
  {
    uint64_t v77 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
    id v78 = *(void **)((char *)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController);
    id v79 = v78;
    static ViewControllerContainment.remove(_:)(v78);

    uint64_t v80 = *(void **)((char *)v2 + v77);
    *(void *)((char *)v2 + v77) = 0LL;

    id v81 = *(void **)((char *)v2 + v77);
    double v82 = *(double (**)(void))((swift_isaMask & *v2) + 0x138LL);
    id v83 = v81;
    double v93 = v82();
    uint64_t v94 = v84;
    uint64_t v95 = v85;
    uint64_t v96 = v86;
    LOBYTE(v97) = 0;
    static ViewControllerContainment.add(_:to:frame:)(v81, v2, &v93);

    (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v19, updated);
  }

uint64_t sub_10009920C()
{
  return sub_100099234( &enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:),  (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appEnteredWhileAppeared());
}

uint64_t sub_100099220()
{
  return sub_100099234( &enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:),  (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appExitedWhileAppeared());
}

uint64_t sub_100099234(unsigned int *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = type metadata accessor for StoreViewControllerLifecycleEvent(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v9, v18, 0LL, 0LL);
  sub_10000DF2C(v9, (uint64_t)v19, (uint64_t *)&unk_1002E63E0);
  if (v20)
  {
    sub_100011C30((uint64_t)v19, (uint64_t)v15);
    sub_1000077E0((uint64_t)v19, (uint64_t *)&unk_1002E63E0);
    uint64_t v10 = v16;
    uint64_t v11 = v17;
    sub_1000112B0(v15, v16);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *a1, v5);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v8, v10, v11);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = _s8AppStore17PillOverlayLayoutVwxx_0(v15);
  }

  else
  {
    uint64_t v12 = sub_1000077E0((uint64_t)v19, (uint64_t *)&unk_1002E63E0);
  }

  return a2(v12);
}

uint64_t sub_100099388()
{
  return type metadata accessor for BaseCollectionCompositionalLayout();
}

uint64_t sub_100099390@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1002F37B8;
  swift_beginAccess(v3, v6, 0LL, 0LL);
  uint64_t v4 = type metadata accessor for ShelfBasedCollectionViewControllerDependencies(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t sub_1000993F4(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1002F37B8;
  swift_beginAccess(v3, v6, 33LL, 0LL);
  uint64_t v4 = type metadata accessor for ShelfBasedCollectionViewControllerDependencies(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(v3, a1, v4);
  return swift_endAccess(v6);
}

uint64_t (*sub_100099460(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

uint64_t sub_1000994A4(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002E6338);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000038E8(&qword_1002E62D0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DF2C(a1, (uint64_t)v8, &qword_1002E62D0);
  uint64_t v9 = sub_1000038E8(&qword_1002E62D8);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9) == 1)
  {
    sub_1000077E0((uint64_t)v8, &qword_1002E62D0);
    __int128 v13 = 0u;
    __int128 v14 = 0u;
    uint64_t v15 = 0LL;
  }

  else
  {
    SnapshotUpdate.contentSnapshot.getter(v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    uint64_t v11 = ModelMappedDiffableDataSourceContentSnapshot.reloadedItems.getter(v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *((void *)&v14 + 1) = sub_1000038E8(&qword_1002E63D0);
    uint64_t v15 = sub_10005E7D4(&qword_1002E63D8, &qword_1002E63D0, (uint64_t)&protocol conformance descriptor for Set<A>);
    *(void *)&__int128 v13 = v11;
  }

  uint64_t result = ComponentHeightCache.invalidate(items:)(&v13);
  if (*((void *)&v14 + 1)) {
    return _s8AppStore17PillOverlayLayoutVwxx_0(&v13);
  }
  return result;
}

uint64_t sub_100099654@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for BaseShelfComponentTypeMappingProvider();
  uint64_t v3 = swift_allocObject(v2, 16LL, 7LL);
  a1[3] = v2;
  uint64_t result = sub_100004288( &qword_1002E63C8,  (uint64_t (*)(uint64_t))type metadata accessor for BaseShelfComponentTypeMappingProvider,  (uint64_t)&unk_1002462E8);
  a1[4] = result;
  *a1 = v3;
  return result;
}

unint64_t sub_1000996C0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for GenericPageGridProvider;
  unint64_t result = sub_10009F1A8();
  *(void *)(a1 + 32) = result;
  return result;
}

unint64_t sub_1000996F0()
{
  uint64_t v140 = *v0;
  uint64_t v139 = swift_isaMask;
  uint64_t v135 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v134 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  CGRect v126 = (id *)((char *)&v124 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v2);
  CGRect v129 = (id *)((char *)&v124 - v3);
  uint64_t v133 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  double v125 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  CGRect v128 = (char *)&v124 - v6;
  uint64_t v7 = sub_1000038E8((uint64_t *)&unk_1002E62B8);
  __chkstk_darwin(v7);
  id v131 = (char *)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  double v136 = (char *)&v124 - v10;
  uint64_t v11 = type metadata accessor for ShelfLayoutContext(0LL);
  CGFloat v141 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  uint64_t v142 = v11;
  __chkstk_darwin(v11);
  CGRect v127 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v130 = (char *)&v124 - v14;
  uint64_t v143 = sub_1000038E8(&qword_1002E62B0);
  uint64_t v138 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  CGFloat v137 = (char *)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v124 - v17;
  uint64_t v19 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __n128 v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for PaginatedPagePresenterState(0LL, v21);
  uint64_t v25 = *(void *)(v24 - 8);
  __n128 v26 = __chkstk_darwin(v24);
  id v28 = (uint64_t *)((char *)&v124 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v149 = (unint64_t)_swiftEmptyArrayStorage;
  dispatch thunk of DiffablePagePresenter.paginationState.getter(v26);
  if ((*(unsigned int (**)(void *, uint64_t))(v25 + 88))(v28, v24) == enum case for PaginatedPagePresenterState.preparingNextPage(_:))
  {
    (*(void (**)(void *, uint64_t))(v25 + 96))(v28, v24);
    _s8AppStore17PillOverlayLayoutVwxx_0(v28);
    uint64_t v29 = v0;
    id v30 = [v0 traitCollection];
    if (qword_1002E0BF0 != -1) {
      swift_once(&qword_1002E0BF0, sub_100110BF8);
    }
    uint64_t v31 = type metadata accessor for StaticDimension(0LL);
    uint64_t v32 = sub_10000A634(v31, (uint64_t)qword_1002F4570);
    static Dimensions.defaultRoundingRule.getter(v32);
    double v33 = StaticDimension.value(compatibleWith:rounded:)(v30, v23);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);

    uint64_t v34 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
    id v35 = [v34 fractionalWidthDimension:1.0];
    id v36 = [v34 absoluteDimension:v33 * 3.0];
    id v37 =  [(id)objc_opt_self(NSCollectionLayoutSize) sizeWithWidthDimension:v35 heightDimension:v36];

    type metadata accessor for InfiniteScrollFooterView();
    id v38 = v37;
    static UICollectionReusableView.elementKind.getter();
    uint64_t v40 = v39;
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v40);
    id v42 =  [(id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem) boundarySupplementaryItemWithLayoutSize:v38 elementKind:v41 alignment:5];

    id v43 = v42;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
    unint64_t v45 = *(void *)((v149 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v44 = *(void *)((v149 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    uint64_t v46 = v142;
    if (v45 >= v44 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1LL);
    }
    uint64_t v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
    specialized Array._endMutation()(v47);
  }

  else
  {
    uint64_t v29 = v0;
    (*(void (**)(void *, uint64_t))(v25 + 8))(v28, v24);
    uint64_t v46 = v142;
  }

  uint64_t v48 = v141;
  id v49 = v29;
  uint64_t v50 = (id *)((char *)v29 + qword_1002E6190);
  swift_beginAccess((char *)v29 + qword_1002E6190, v148, 0LL, 0LL);
  if (*v50)
  {
    id v51 = (_OWORD *)(v139 & v140);
    id v52 = *v50;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    uint64_t v53 = v143;
    uint64_t v54 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v143);
    char v55 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v138 + 8);
    ((void (*)(char *, uint64_t))v55)(v18, v53);
    if (v54 < 1) {
      goto LABEL_12;
    }
    __int128 v56 = v51[39];
    __int128 v144 = v51[38];
    __int128 v145 = v56;
    __int128 v57 = v51[41];
    __int128 v146 = v51[40];
    __int128 v147 = v57;
    uint64_t v58 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)&v144);
    uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v58);
    uint64_t v60 = (uint64_t)v136;
    ShelfBasedCollectionViewController.shelfLayoutContext(for:)(0LL, v58, WitnessTable);
    if (v48[6](v60, 1LL, v46) == 1)
    {
      sub_1000077E0(v60, (uint64_t *)&unk_1002E62B8);
LABEL_12:
      id v61 = *v50;
      if (!*v50) {
        return v149;
      }
      goto LABEL_20;
    }

    CGFloat v141 = v55;
    uint64_t v142 = (uint64_t)v49;
    uint64_t v62 = v48[4];
    uint64_t v63 = v48;
    uint64_t v64 = v46;
    objc_super v65 = v130;
    uint64_t v66 = ((uint64_t (*)(char *, uint64_t, uint64_t))v62)(v130, v60, v64);
    id v67 = v128;
    ShelfLayoutContext.shelf.getter(v66);
    uint64_t KeyPath = swift_getKeyPath(&unk_10023AB78, v68);
    id v70 = v129;
    uint64_t v71 = v133;
    ReadOnlyLens.subscript.getter(v129, KeyPath, v133);
    __n128 v72 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v132 + 8))(v67, v71, v72);
    uint64_t v73 = v134;
    uint64_t v74 = v135;
    if ((*(unsigned int (**)(id *, uint64_t))(v134 + 88))(v70, v135) == enum case for ShelfBackground.color(_:))
    {
      (*(void (**)(id *, uint64_t))(v73 + 96))(v70, v74);

      uint64_t v75 = (char *)v70 + *(int *)(sub_1000038E8(&qword_1002E5BD8) + 48);
      uint64_t v77 = type metadata accessor for ShelfBackgroundStyle(0LL, v76);
      (*(void (**)(char *, uint64_t))(*(void *)(v77 - 8) + 8LL))(v75, v77);
      id v78 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
      id v79 = [v78 fractionalWidthDimension:1.0];
      id v80 = [v78 absoluteDimension:2000.0];
      id v81 =  [(id)objc_opt_self(NSCollectionLayoutSize) sizeWithWidthDimension:v79 heightDimension:v80];

      NSString v82 = String._bridgeToObjectiveC()();
      id v83 =  objc_msgSend( (id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem),  "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:",  v81,  v82,  1,  0.0,  -2000.0);

      [v83 setExtendsBoundary:0];
      id v84 = v83;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v84);
      unint64_t v86 = *(void *)((v149 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v85 = *(void *)((v149 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v86 >= v85 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v85 > 1, v86 + 1, 1LL);
      }
      uint64_t v87 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v86, v84);
      specialized Array._endMutation()(v87);

      uint64_t v88 = v65;
      uint64_t v46 = v64;
      uint64_t v48 = v63;
      ((void (*)(char *, uint64_t))v63[1])(v88, v46);
    }

    else
    {
      ((void (*)(char *, uint64_t))v63[1])(v65, v64);
      (*(void (**)(id *, uint64_t))(v73 + 8))(v70, v74);
      uint64_t v46 = v64;
      uint64_t v48 = v63;
    }

    char v55 = v141;
    id v61 = *v50;
    if (*v50)
    {
LABEL_20:
      id v89 = v61;
      uint64_t v90 = v137;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      uint64_t v91 = v143;
      uint64_t v92 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v143);
      ((void (*)(char *, uint64_t))v55)(v90, v91);
      BOOL v93 = v92 < 1;
      uint64_t v94 = v92 - 1;
      if (!v93)
      {
        __int128 v95 = v51[39];
        __int128 v144 = v51[38];
        __int128 v145 = v95;
        __int128 v96 = v51[41];
        __int128 v146 = v51[40];
        __int128 v147 = v96;
        uint64_t v97 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)&v144);
        uint64_t v98 = swift_getWitnessTable(&unk_10023AA78, v97);
        uint64_t v99 = (uint64_t)v131;
        ShelfBasedCollectionViewController.shelfLayoutContext(for:)(v94, v97, v98);
        if (v48[6](v99, 1LL, v46) == 1)
        {
          sub_1000077E0(v99, (uint64_t *)&unk_1002E62B8);
        }

        else
        {
          double v100 = v127;
          uint64_t v101 = ((uint64_t (*)(char *, uint64_t, uint64_t))v48[4])(v127, v99, v46);
          id v102 = v125;
          ShelfLayoutContext.shelf.getter(v101);
          uint64_t v104 = swift_getKeyPath(&unk_10023AB78, v103);
          id v105 = v126;
          uint64_t v106 = v133;
          ReadOnlyLens.subscript.getter(v126, v104, v133);
          __n128 v107 = swift_release(v104);
          (*(void (**)(char *, uint64_t, __n128))(v132 + 8))(v102, v106, v107);
          uint64_t v108 = v134;
          uint64_t v109 = v135;
          if ((*(unsigned int (**)(id *, uint64_t))(v134 + 88))(v105, v135) == enum case for ShelfBackground.color(_:))
          {
            (*(void (**)(id *, uint64_t))(v108 + 96))(v105, v109);

            double v110 = (char *)v105 + *(int *)(sub_1000038E8(&qword_1002E5BD8) + 48);
            uint64_t v112 = type metadata accessor for ShelfBackgroundStyle(0LL, v111);
            (*(void (**)(char *, uint64_t))(*(void *)(v112 - 8) + 8LL))(v110, v112);
            double v113 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
            id v114 = [v113 fractionalWidthDimension:1.0];
            id v115 = [v113 absoluteDimension:2000.0];
            id v116 =  [(id)objc_opt_self(NSCollectionLayoutSize) sizeWithWidthDimension:v114 heightDimension:v115];

            NSString v117 = String._bridgeToObjectiveC()();
            id v118 =  objc_msgSend( (id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem),  "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:",  v116,  v117,  5,  0.0,  2000.0);

            [v118 setExtendsBoundary:0];
            id v119 = v118;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v119);
            unint64_t v121 = *(void *)((v149 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
            unint64_t v120 = *(void *)((v149 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
            if (v121 >= v120 >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v120 > 1, v121 + 1, 1LL);
            }
            uint64_t v122 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v121, v119);
            specialized Array._endMutation()(v122);

            ((void (*)(char *, uint64_t))v48[1])(v100, v46);
          }

          else
          {
            ((void (*)(char *, uint64_t))v48[1])(v100, v46);
            (*(void (**)(id *, uint64_t))(v108 + 8))(v105, v109);
          }
        }
      }
    }
  }

  return v149;
}

double sub_10009A324@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = swift_isaMask;
  uint64_t v10 = type metadata accessor for InfiniteScrollFooterView();
  uint64_t v11 = static UICollectionReusableView.elementKind.getter();
  if (v11 == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_12;
  }

  uint64_t v14 = v12;
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a1, a2, 0LL);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) != 0)
  {
LABEL_12:
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v10);
    swift_bridgeObjectRetain(a2);
    uint64_t v27 = NSStringFromClass(ObjCClassFromMetadata);
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    uint64_t v30 = v29;

    *(void *)(a3 + 24) = sub_1000038E8(&qword_1002E63A0);
    *(void *)(a3 + 32) = sub_10005E7D4( &qword_1002E63A8,  &qword_1002E63A0,  (uint64_t)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
    sub_10000DD7C((void *)a3);
    uint64_t v19 = sub_10009C740;
    uint64_t v20 = a1;
    uint64_t v21 = a2;
    uint64_t v22 = v28;
    uint64_t v23 = v30;
    uint64_t v24 = 0LL;
    uint64_t v25 = v10;
    goto LABEL_13;
  }

  if (a1 == 0x676B636142706F74LL && a2 == 0xED0000646E756F72LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x676B636142706F74LL, 0xED0000646E756F72LL, a1, a2, 0LL) & 1) != 0)
  {
    uint64_t v16 = swift_allocObject(&unk_100289320, 24LL, 7LL);
    swift_unknownObjectWeakInit(v16 + 16, v4);
    uint64_t v17 = swift_allocObject(&unk_1002895A0, 88LL, 7LL);
    *(void *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)((v9 & v8) + 0x260);
    *(void *)(v17 + 24) = *(void *)((v9 & v8) + 0x268);
    *(_OWORD *)(v17 + 32) = *(_OWORD *)((v9 & v8) + 0x270);
    *(void *)(v17 + 48) = *(void *)((v9 & v8) + 0x280);
    *(_OWORD *)(v17 + 56) = *(_OWORD *)((v9 & v8) + 0x288);
    *(void *)(v17 + 72) = *(void *)((v9 & v8) + 0x298);
    *(void *)(v17 + 80) = v16;
    *(void *)(a3 + 24) = sub_1000038E8(&qword_1002E6388);
    *(void *)(a3 + 32) = sub_10005E7D4( (unint64_t *)&unk_1002E6390,  &qword_1002E6388,  (uint64_t)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
    sub_10000DD7C((void *)a3);
    uint64_t v18 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002EE420, &OBJC_CLASS___UICollectionReusableView_ptr);
    swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v19 = sub_10009F15C;
LABEL_10:
    uint64_t v20 = a1;
    uint64_t v21 = a2;
    uint64_t v22 = a1;
    uint64_t v23 = a2;
    uint64_t v24 = v17;
    uint64_t v25 = v18;
LABEL_13:
    ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)( v20,  v21,  v22,  v23,  v19,  v24,  v25);
    return result;
  }

  if (a1 == 0xD000000000000010LL && a2 == 0x800000010024B000LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x800000010024B000LL, a1, a2, 0LL) & 1) != 0)
  {
    uint64_t v32 = swift_allocObject(&unk_100289320, 24LL, 7LL);
    swift_unknownObjectWeakInit(v32 + 16, v4);
    uint64_t v17 = swift_allocObject(&unk_100289578, 88LL, 7LL);
    *(void *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)((v9 & v8) + 0x260);
    *(void *)(v17 + 24) = *(void *)((v9 & v8) + 0x268);
    *(_OWORD *)(v17 + 32) = *(_OWORD *)((v9 & v8) + 0x270);
    *(void *)(v17 + 48) = *(void *)((v9 & v8) + 0x280);
    *(_OWORD *)(v17 + 56) = *(_OWORD *)((v9 & v8) + 0x288);
    *(void *)(v17 + 72) = *(void *)((v9 & v8) + 0x298);
    *(void *)(v17 + 80) = v32;
    *(void *)(a3 + 24) = sub_1000038E8(&qword_1002E6388);
    *(void *)(a3 + 32) = sub_10005E7D4( (unint64_t *)&unk_1002E6390,  &qword_1002E6388,  (uint64_t)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
    sub_10000DD7C((void *)a3);
    uint64_t v18 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002EE420, &OBJC_CLASS___UICollectionReusableView_ptr);
    swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v19 = sub_10009F150;
    goto LABEL_10;
  }

  *(void *)(a3 + 32) = 0LL;
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  return result;
}

uint64_t sub_10009A6FC()
{
  uint64_t v1 = (void *)(swift_isaMask & *v0);
  uint64_t v2 = sub_1000038E8(&qword_1002E6340);
  uint64_t v60 = *(void *)(v2 - 8);
  uint64_t v61 = v2;
  __n128 v3 = __chkstk_darwin(v2);
  id v59 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = v1[76];
  uint64_t v6 = v1[78];
  uint64_t v49 = v1[79];
  uint64_t v48 = v1[80];
  uint64_t v7 = v1[82];
  uint64_t v50 = v1[83];
  uint64_t v51 = v7;
  uint64_t v62 = v5;
  uint64_t v63 = v6;
  uint64_t v64 = v49;
  uint64_t v65 = v48;
  uint64_t v66 = v7;
  uint64_t v67 = v50;
  uint64_t updated = type metadata accessor for DiffablePagePresenter.UpdatePhase(255LL, &v62, v3);
  uint64_t v8 = type metadata accessor for EventSubscription(0LL, updated);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  __chkstk_darwin(v8);
  __int128 v56 = (char *)&v45 - v9;
  uint64_t v10 = sub_1000038E8(&qword_1002E6348);
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  __chkstk_darwin(v10);
  id v52 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000038E8(&qword_1002E6350);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v47 = *(void *)((char *)v0 + qword_1002F37C0);
  uint64_t v17 = dispatch thunk of DiffablePagePresenter.onApplySnapshot.getter(v14);
  uint64_t v18 = swift_allocObject(&unk_100289410, 32LL, 7LL);
  *(void *)(v18 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10009EEE4;
  *(void *)(v18 + 24) = 0LL;
  uint64_t v19 = sub_1000038E8(&qword_1002E6358);
  uint64_t v20 = v1[77];
  uint64_t v21 = v1[81];
  uint64_t v62 = v5;
  uint64_t v63 = v20;
  uint64_t v64 = v6;
  uint64_t v65 = v49;
  uint64_t v66 = v48;
  uint64_t v67 = v21;
  uint64_t v68 = v51;
  uint64_t v69 = v50;
  uint64_t v22 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)&v62);
  uint64_t v23 = sub_10005E7D4(&qword_1002E6360, &qword_1002E6358, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(&v62, v19, v23);
  uint64_t v24 = v46;
  EventEmitter.addObserver<A>(on:target:method:)(&v62, v46, sub_10004AC38, v18, v19, v22, v23);
  swift_release(v17);
  swift_release(v18);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v62);
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t v26 = DiffablePagePresenter.onPerformAction.getter(v25);
  uint64_t v27 = swift_allocObject(&unk_100289438, 32LL, 7LL);
  *(void *)(v27 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10009EF5C;
  *(void *)(v27 + 24) = 0LL;
  uint64_t v28 = sub_1000038E8(&qword_1002E6368);
  uint64_t v29 = sub_10005E7D4(&qword_1002E6370, &qword_1002E6368, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(&v62, v28, v29);
  uint64_t v30 = v52;
  EventEmitter.addObserver<A>(on:target:method:)(&v62, v24, sub_10009EFB0, v27, v28, v22, v29);
  swift_release(v26);
  swift_release(v27);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v62);
  uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v30, v54);
  uint64_t v32 = TimedMetricsPagePresenter.onUpdatePhaseChanged.getter(v31);
  uint64_t v33 = swift_allocObject(&unk_100289460, 32LL, 7LL);
  *(void *)(v33 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10009EFFC;
  *(void *)(v33 + 24) = 0LL;
  uint64_t v34 = type metadata accessor for SyncEvent(0LL, updated);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SyncEvent<A>, v34);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(&v62, v34, WitnessTable);
  id v36 = v56;
  uint64_t v37 = v24;
  EventEmitter.addObserver<A>(on:target:method:)(&v62, v24, sub_10004AA28, v33, v34, v22, WitnessTable);
  swift_release(v32);
  swift_release(v33);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v62);
  uint64_t v38 = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v36, v58);
  uint64_t v39 = DiffablePagePresenter.onPaginationStateChanged.getter(v38);
  uint64_t v40 = swift_allocObject(&unk_100289488, 32LL, 7LL);
  *(void *)(v40 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10009F050;
  *(void *)(v40 + 24) = 0LL;
  uint64_t v41 = sub_1000038E8(&qword_1002E6378);
  uint64_t v42 = sub_10005E7D4(&qword_1002E6380, &qword_1002E6378, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(&v62, v41, v42);
  id v43 = v59;
  EventEmitter.addObserver<A>(on:target:method:)(&v62, v37, sub_10004AC38, v40, v41, v22, v42);
  swift_release(v39);
  swift_release(v40);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v62);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v43, v61);
}

void sub_10009AC14(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v33 = *(void *)v1;
  uint64_t v4 = swift_isaMask;
  uint64_t v5 = sub_1000038E8(&qword_1002E6338);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000038E8(&qword_1002E62D0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000038E8(&qword_1002E62D8);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0LL, 1LL, v12);
  sub_1000994A4((uint64_t)v11);
  sub_1000077E0((uint64_t)v11, &qword_1002E62D0);
  __n128 v14 = (id *)&v2[qword_1002E6190];
  swift_beginAccess(&v2[qword_1002E6190], v35, 0LL, 0LL);
  if (*v14)
  {
    id v15 = *v14;
    SnapshotUpdate.contentSnapshot.getter(v12);
    char v16 = SnapshotUpdate.animated.getter(v12);
    dispatch thunk of ModelMappedDiffableDataSource.apply(_:animatingDifferences:completion:)(v8, v16 & 1, 0LL, 0LL);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  id v17 = [v2 collectionView];
  if (!v17)
  {
    __break(1u);
    goto LABEL_8;
  }

  uint64_t v18 = v17;
  dispatch thunk of CompoundScrollObserver.didScroll(in:)();

  id v19 = [v2 view];
  if (!v19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }

  uint64_t v20 = v19;
  uint64_t v21 = (_OWORD *)(v4 & v33);
  [v19 bounds];
  double v23 = v22;
  double v25 = v24;

  __int128 v26 = v21[39];
  v34[0] = v21[38];
  v34[1] = v26;
  __int128 v27 = v21[41];
  v34[2] = v21[40];
  void v34[3] = v27;
  uint64_t v28 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v34);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v28);
  ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(v28, WitnessTable, v23, v25);
  id v30 = [v2 collectionView];
  if (v30)
  {
    uint64_t v31 = v30;
    [v30 setNeedsFocusUpdate];

    return;
  }

uint64_t sub_10009AEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1;
  sub_10000DF2C(a2, (uint64_t)v6, (uint64_t *)&unk_1002E3500);
  swift_retain(a1);
  sub_1000980BC(v3, (uint64_t)v6);
  return sub_1000077E0((uint64_t)&v5, &qword_1002E6330);
}

id sub_10009AF1C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_isaMask;
  id result = [v0 view];
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = (_OWORD *)(v2 & v1);
    [result bounds];
    double v7 = v6;
    double v9 = v8;

    __int128 v10 = v5[39];
    v14[0] = v5[38];
    v14[1] = v10;
    __int128 v11 = v5[41];
    v14[2] = v5[40];
    v14[3] = v11;
    uint64_t v12 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v14);
    uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v12);
    return (id)ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(v12, WitnessTable, v7, v9);
  }

  else
  {
    __break(1u);
  }

  return result;
}

double sub_10009AFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = swift_isaMask;
  double v6 = sub_1001BF700((void (*)(char *))sub_10009EECC, (uint64_t)&v17, a2);
  double v7 = v6;
  if (*((void *)v6 + 2))
  {
    __int128 v8 = *(_OWORD *)((v5 & v4) + 0x270);
    v18[0] = *(_OWORD *)((v5 & v4) + 0x260);
    v18[1] = v8;
    __int128 v9 = *(_OWORD *)((v5 & v4) + 0x290);
    v18[2] = *(_OWORD *)((v5 & v4) + 0x280);
    v18[3] = v9;
    uint64_t v10 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v18);
    uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v10);
    uint64_t v12 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(v10, WitnessTable);
    uint64_t v14 = v13;
    uint64_t ObjectType = swift_getObjectType(v12);
    dispatch thunk of CollectionElementsObserver.prefetchCells(in:collectionView:asPartOf:)( v7,  a1,  *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph),  ObjectType,  v14);
    swift_bridgeObjectRelease(v7);
    swift_unknownObjectRelease(v12);
  }

  else
  {
    *(void *)&double result = swift_bridgeObjectRelease(v6).n128_u64[0];
  }

  return result;
}

unint64_t sub_10009B0DC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for GenericPageShelfLayoutSpacingProvider;
  unint64_t result = sub_10009EE88();
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_10009B10C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph);
  uint64_t v2 = type metadata accessor for GenericPageShelfSupplementaryProvider();
  uint64_t v3 = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  sub_100004288( &qword_1002E6318,  (uint64_t (*)(uint64_t))type metadata accessor for GenericPageShelfSupplementaryProvider,  (uint64_t)&unk_10023FC88);
  swift_retain(v1);
  return v3;
}

uint64_t sub_10009B18C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (_OWORD *)(swift_isaMask & *v1);
  __int128 v30 = xmmword_100236DD0;
  __int128 v4 = v3[39];
  v29[0] = v3[38];
  v29[1] = v4;
  __int128 v5 = v3[41];
  v29[2] = v3[40];
  v29[3] = v5;
  uint64_t v6 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v29);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v6);
  uint64_t v8 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(v6, WitnessTable);
  v31[3] = swift_getObjectType(v8);
  v31[0] = v8;
  uint64_t v9 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(v6, WitnessTable);
  v32[3] = swift_getObjectType(v9);
  v32[0] = v9;
  sub_100007338((uint64_t)v31, (uint64_t)v29);
  sub_100007338((uint64_t)v29, (uint64_t)v27);
  uint64_t v10 = sub_1000038E8((uint64_t *)&unk_1002E62E0);
  uint64_t v11 = sub_1000038E8(&qword_1002E23B8);
  if ((swift_dynamicCast(&v28, v27, v10, v11, 6LL) & 1) == 0) {
    __n128 v28 = 0uLL;
  }
  _s8AppStore17PillOverlayLayoutVwxx_0(v29);
  if (v28.n128_u64[0])
  {
    __n128 v25 = v28;
    uint64_t v12 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage, v28) & 1) == 0) {
      uint64_t v12 = sub_100018708(0LL, _swiftEmptyArrayStorage[2] + 1LL, 1, _swiftEmptyArrayStorage);
    }
    unint64_t v14 = v12[2];
    unint64_t v13 = v12[3];
    if (v14 >= v13 >> 1) {
      uint64_t v12 = sub_100018708((void *)(v13 > 1), v14 + 1, 1, v12);
    }
    v12[2] = v14 + 1;
    *(__n128 *)&v12[2 * v14 + 4] = v25;
  }

  else
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
  }

  sub_100007338((uint64_t)v32, (uint64_t)v29);
  sub_100007338((uint64_t)v29, (uint64_t)v27);
  uint64_t v15 = sub_1000038E8((uint64_t *)&unk_1002E62E0);
  uint64_t v16 = sub_1000038E8(&qword_1002E23B8);
  if ((swift_dynamicCast(&v28, v27, v15, v16, 6LL) & 1) == 0) {
    __n128 v28 = 0uLL;
  }
  _s8AppStore17PillOverlayLayoutVwxx_0(v29);
  if (v28.n128_u64[0])
  {
    __n128 v26 = v28;
    if ((swift_isUniquelyReferenced_nonNull_native(v12, v28) & 1) == 0) {
      uint64_t v12 = sub_100018708(0LL, v12[2] + 1LL, 1, v12);
    }
    unint64_t v18 = v12[2];
    unint64_t v17 = v12[3];
    __n128 v19 = v26;
    if (v18 >= v17 >> 1)
    {
      double v24 = sub_100018708((void *)(v17 > 1), v18 + 1, 1, v12);
      __n128 v19 = v26;
      uint64_t v12 = v24;
    }

    v12[2] = v18 + 1;
    *(__n128 *)&v12[2 * v18 + 4] = v19;
  }

  swift_arrayDestroy(v31, v30, (char *)&type metadata for Any + 8);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v29, v6, WitnessTable);
  uint64_t v20 = *(void *)((char *)v1 + qword_1002F37D8);
  uint64_t v21 = type metadata accessor for BasePageLayoutSectionProvider(0LL);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  __n128 v22 = swift_retain(v20);
  uint64_t result = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)( v29,  v12,  v20,  0LL,  v22);
  a1[3] = v21;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = result;
  return result;
}

id sub_10009B4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a3);
  double v7 = (void *)v6(a2, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);
  return v7;
}

void sub_10009B514(void *a1)
{
}

uint64_t (*sub_10009B520(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

void sub_10009B564(void *a1)
{
}

void sub_10009B570(void *a1, void *a2)
{
  __int128 v4 = (void **)(v2 + *a2);
  swift_beginAccess(v4, v6, 1LL, 0LL);
  uint64_t v5 = *v4;
  *__int128 v4 = a1;
}

uint64_t (*sub_10009B5BC(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_10009B600()
{
  uint64_t v1 = v0;
  uint64_t v2 = (_OWORD *)(swift_isaMask & *v0);
  __int128 v3 = v2[39];
  v13[0] = v2[38];
  v13[1] = v3;
  __int128 v4 = v2[41];
  v13[2] = v2[40];
  v13[3] = v4;
  uint64_t v5 = (objc_class *)type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v13);
  v14.receiver = v1;
  v14.super_class = v5;
  objc_msgSendSuper2(&v14, "viewDidLoad");
  id v6 = [v1 collectionView];
  if (v6)
  {
    double v7 = v6;
    [v6 setAlwaysBounceVertical:1];
  }

  id v8 = [v1 collectionView];
  if (v8)
  {
    uint64_t v9 = v8;
    [v8 setClipsToBounds:0];
  }

  swift_getWitnessTable(&unk_10023AA78, v5);
  ShelfBasedCollectionViewController.prepareLayoutDependencies()();
  uint64_t v10 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x3B8LL))();
  uint64_t v11 = dispatch thunk of TimedMetricsPagePresenter.didLoad()(v10);
  uint64_t result = dispatch thunk of DiffablePagePresenter.viewDidLoad()(v11);
  return result;
}

void sub_10009B750(void *a1)
{
  id v1 = a1;
  sub_10009B600();
}

void sub_10009B784(char a1)
{
  uint64_t v2 = v1;
  __int128 v4 = (_OWORD *)(swift_isaMask & *v2);
  __int128 v5 = v4[39];
  v11[0] = v4[38];
  v11[1] = v5;
  __int128 v6 = v4[41];
  _OWORD v11[2] = v4[40];
  void v11[3] = v6;
  double v7 = (objc_class *)type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v11);
  v12.receiver = v2;
  v12.super_class = v7;
  id v8 = objc_msgSendSuper2(&v12, "viewWillAppear:", a1 & 1);
  dispatch thunk of DiffablePagePresenter.viewWillAppear()(v8);
  uint64_t v9 = type metadata accessor for PlaybackCoordinator(0LL);
  BaseObjectGraph.optional<A>(_:)(v11, v9, v9);
  if (*(void *)&v11[0])
  {
    id v10 = *(id *)&v11[0];
    dispatch thunk of PlaybackCoordinator.resume()();
  }

void sub_10009B844(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_10009B784(a3);
}

uint64_t sub_10009B884(char a1)
{
  return sub_10009BA64( a1,  (SEL *)&selRef_viewDidAppear_,  (uint64_t (*)(id))&dispatch thunk of DiffablePagePresenter.viewDidAppear());
}

void sub_10009B898(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_10009BA64( a3,  (SEL *)&selRef_viewDidAppear_,  (uint64_t (*)(id))&dispatch thunk of DiffablePagePresenter.viewDidAppear());
}

void sub_10009B8E8(char a1)
{
  uint64_t v2 = v1;
  id v4 = (_OWORD *)(swift_isaMask & *v2);
  uint64_t v5 = type metadata accessor for ViewWillDisappearReason(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __int128 v9 = v4[39];
  v14[0] = v4[38];
  v14[1] = v9;
  __int128 v10 = v4[41];
  v14[2] = v4[40];
  v14[3] = v10;
  uint64_t v11 = (objc_class *)type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v14);
  v15.receiver = v2;
  v15.super_class = v11;
  objc_msgSendSuper2(&v15, "viewWillDisappear:", a1 & 1);
  static ViewWillDisappearReason.inferred(for:)(v2);
  dispatch thunk of DiffablePagePresenter.viewWillDisappear(forReason:)(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = type metadata accessor for PlaybackCoordinator(0LL);
  BaseObjectGraph.optional<A>(_:)(v14, v12, v12);
  if (*(void *)&v14[0])
  {
    id v13 = *(id *)&v14[0];
    dispatch thunk of PlaybackCoordinator.pause()();
  }

void sub_10009BA10(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_10009B8E8(a3);
}

uint64_t sub_10009BA50(char a1)
{
  return sub_10009BA64( a1,  (SEL *)&selRef_viewDidDisappear_,  (uint64_t (*)(id))&dispatch thunk of DiffablePagePresenter.viewDidDisappear());
}

uint64_t sub_10009BA64(char a1, SEL *a2, uint64_t (*a3)(id))
{
  uint64_t v7 = (_OWORD *)(swift_isaMask & *v3);
  __int128 v8 = v7[39];
  v13[0] = v7[38];
  v13[1] = v8;
  __int128 v9 = v7[41];
  v13[2] = v7[40];
  v13[3] = v9;
  __int128 v10 = (objc_class *)type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v13);
  v14.receiver = v3;
  v14.super_class = v10;
  id v11 = objc_msgSendSuper2(&v14, *a2, a1 & 1);
  return a3(v11);
}

void sub_10009BAEC(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_10009BA64( a3,  (SEL *)&selRef_viewDidDisappear_,  (uint64_t (*)(id))&dispatch thunk of DiffablePagePresenter.viewDidDisappear());
}

id sub_10009BB3C(uint64_t a1)
{
  __int128 v3 = (_OWORD *)(swift_isaMask & *v1);
  uint64_t v4 = sub_1000038E8(&qword_1002E62D0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __int128 v7 = v3[39];
  v18[0] = v3[38];
  v18[1] = v7;
  __int128 v8 = v3[41];
  v18[2] = v3[40];
  v18[3] = v8;
  __int128 v9 = (objc_class *)type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v18);
  v19.receiver = v1;
  v19.super_class = v9;
  objc_msgSendSuper2(&v19, "traitCollectionDidChange:", a1);
  id result = [v1 isViewLoaded];
  if ((_DWORD)result)
  {
    uint64_t v11 = sub_1000038E8(&qword_1002E62D8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v6, 1LL, 1LL, v11);
    sub_1000994A4((uint64_t)v6);
    sub_1000077E0((uint64_t)v6, &qword_1002E62D0);
    id result = [v1 view];
    if (result)
    {
      uint64_t v12 = result;
      [result bounds];
      double v14 = v13;
      double v16 = v15;

      uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v9);
      return (id)ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(v9, WitnessTable, v14, v16);
    }

    else
    {
      __break(1u);
    }
  }

  return result;
}

void sub_10009BCA8(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_10009BB3C((uint64_t)a3);
}

void sub_10009BD00()
{
  uint64_t v1 = swift_isaMask & *v0;
  uint64_t v2 = (__int128 *)(v1 + 616);
  __int128 v3 = (__int128 *)(v1 + 632);
  uint64_t v4 = (__int128 *)(v1 + 648);
  uint64_t v5 = *(void *)(v1 + 0x298);
  uint64_t v8 = *(void *)((swift_isaMask & *v0) + 0x260LL);
  __int128 v9 = *v2;
  uint64_t v7 = v9;
  __int128 v10 = *v3;
  __int128 v11 = *v4;
  uint64_t v12 = v5;
  id v6 = (objc_class *)type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)&v8);
  v13.receiver = v0;
  v13.super_class = v6;
  objc_msgSendSuper2(&v13, "didReceiveMemoryWarning");
  swift_getWitnessTable(&protocol conformance descriptor for DiffablePagePresenter<A>, v7);
  ViewControllerPresenter.viewDidReceiveMemoryWarning()();
}

void sub_10009BDBC(void *a1)
{
  id v1 = a1;
  sub_10009BD00();
}

id sub_10009BDF0()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = swift_isaMask;
  id result = [v0 collectionView];
  if (result)
  {
    id v5 = result;
    id v6 = (void *)(v3 & v2);
    uint64_t v7 = swift_allocObject(&unk_100289320, 24LL, 7LL);
    swift_unknownObjectWeakInit(v7 + 16, v1);
    uint64_t v8 = (void *)swift_allocObject(&unk_100289398, 88LL, 7LL);
    uint64_t v22 = v6[76];
    __int128 v8[2] = v22;
    uint64_t v21 = v6[77];
    v8[3] = v21;
    uint64_t v20 = v6[78];
    v8[4] = v20;
    uint64_t v9 = v6[79];
    v8[5] = v9;
    uint64_t v10 = v6[80];
    v8[6] = v10;
    uint64_t v11 = v6[81];
    v8[7] = v11;
    uint64_t v12 = v6[82];
    v8[8] = v12;
    uint64_t v13 = v6[83];
    v8[9] = v13;
    v8[10] = v7;
    id v14 = objc_allocWithZone((Class)sub_1000038E8(&qword_1002E6290));
    double v15 = (void *)ModelMappedDiffableDataSource.init(collectionView:cellProvider:)(v5, sub_10009EB78, v8);
    uint64_t v16 = swift_allocObject(&unk_100289320, 24LL, 7LL);
    swift_unknownObjectWeakInit(v16 + 16, v1);
    unint64_t v17 = (void *)swift_allocObject(&unk_1002893C0, 88LL, 7LL);
    v17[2] = v22;
    v17[3] = v21;
    void v17[4] = v20;
    void v17[5] = v9;
    v17[6] = v10;
    v17[7] = v11;
    v17[8] = v12;
    v17[9] = v13;
    v17[10] = v16;
    id v18 = v15;
    __n128 v19 = swift_retain(v16);
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_10009EBD4, v17, v19);

    swift_release(v16);
    return v18;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10009BFB0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v45 = a8;
  uint64_t v44 = a7;
  uint64_t v17 = sub_1000038E8(&qword_1002E6298);
  __chkstk_darwin(v17);
  __n128 v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  double v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = a4 + 16;
  swift_beginAccess(a4 + 16, v50, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a4 + 16);
  if (!Strong) {
    goto LABEL_8;
  }
  __n128 v26 = (void *)Strong;
  uint64_t v43 = a2;
  __int128 v27 = (id *)(Strong + qword_1002E6190);
  swift_beginAccess(Strong + qword_1002E6190, v49, 0LL, 0LL);
  if (!*v27)
  {

LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1LL, 1LL, v20);
    goto LABEL_9;
  }

  id v28 = *v27;

  dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(a3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1LL, v20) == 1)
  {
LABEL_9:
    sub_1000077E0((uint64_t)v19, &qword_1002E6298);
    return 0LL;
  }

  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
  swift_beginAccess(v24, v48, 0LL, 0LL);
  uint64_t v29 = swift_unknownObjectWeakLoadStrong(v24);
  if (v29)
  {
    uint64_t v31 = (void *)v29;
    uint64_t v42 = a12;
    uint64_t v41 = a11;
    uint64_t v40 = a10;
    swift_beginAccess(v24, v47, 0LL, 0LL);
    uint64_t v32 = swift_unknownObjectWeakLoadStrong(v24);
    if (v32)
    {
      uint64_t v33 = (void *)v32;
      uint64_t v34 = *(void *)(v32 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph);
      swift_retain(v34);
    }

    else
    {
      uint64_t v34 = 0LL;
    }

    v46[0] = a5;
    v46[1] = a6;
    v46[2] = v44;
    v46[3] = v45;
    v46[4] = a9;
    v46[5] = v40;
    v46[6] = v41;
    v46[7] = v42;
    uint64_t v37 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v46);
    uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v37);
    uint64_t v35 = ShelfBasedCollectionViewController.collectionViewCellProvider(indexPath:item:asPartOf:)( v43,  v23,  v34,  v37,  WitnessTable);

    __n128 v30 = swift_release(v34);
  }

  else
  {
    uint64_t v35 = 0LL;
  }

  (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v23, v20, v30);
  return v35;
}

uint64_t sub_10009C290( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v19 = a5 + 16;
  swift_beginAccess(a5 + 16, v31, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v19);
  if (!Strong) {
    return 0LL;
  }
  uint64_t v21 = (void *)Strong;
  swift_beginAccess(v19, v30, 0LL, 0LL);
  uint64_t v22 = swift_unknownObjectWeakLoadStrong(v19);
  if (v22)
  {
    double v23 = (void *)v22;
    uint64_t v24 = *(void *)(v22 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph);
    swift_retain(v24);
  }

  else
  {
    uint64_t v24 = 0LL;
  }

  v29[0] = a6;
  v29[1] = a7;
  v29[2] = a8;
  v29[3] = a9;
  _OWORD v29[4] = a10;
  void v29[5] = a11;
  v29[6] = a12;
  v29[7] = a13;
  uint64_t v26 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v29);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v26);
  uint64_t v25 = ShelfBasedCollectionViewController.supplementaryViewProvider(elementKind:indexPath:asPartOf:)( a2,  a3,  a4,  v24,  v26,  WitnessTable);

  swift_release(v24);
  return v25;
}

id sub_10009C3DC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_isaMask;
  id v3 = [objc_allocWithZone(UICollectionViewCompositionalLayoutConfiguration) init];
  id result = [v0 view];
  if (result)
  {
    id v5 = result;
    uint64_t v6 = v2 & v1;
    [result bounds];
    double v8 = v7;
    double v10 = v9;

    uint64_t v11 = (*(uint64_t (**)(double, double))((swift_isaMask & *v0) + 0x3A8))(v8, v10);
    sub_10000DFD4(0LL, &qword_1002E6288, &OBJC_CLASS___NSCollectionLayoutBoundarySupplementaryItem_ptr);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

    uint64_t v13 = (objc_class *)type metadata accessor for BaseCollectionCompositionalLayout();
    uint64_t v14 = swift_allocObject(&unk_100289320, 24LL, 7LL);
    swift_unknownObjectWeakInit(v14 + 16, v0);
    uint64_t v15 = swift_allocObject(&unk_100289348, 88LL, 7LL);
    *(void *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v6 + 608);
    *(void *)(v15 + 24) = *(void *)(v6 + 616);
    *(_OWORD *)(v15 + 32) = *(_OWORD *)(v6 + 624);
    *(void *)(v15 + 48) = *(void *)(v6 + 640);
    *(_OWORD *)(v15 + 56) = *(_OWORD *)(v6 + 648);
    *(void *)(v15 + 72) = *(void *)(v6 + 664);
    *(void *)(v15 + 80) = v14;
    id v16 = objc_allocWithZone(v13);
    v20[4] = sub_10009EB28;
    uint64_t v21 = v15;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256LL;
    v20[2] = sub_10009B4B0;
    v20[3] = &unk_100289360;
    uint64_t v17 = _Block_copy(v20);
    id v18 = objc_msgSend(v16, "initWithSectionProvider:configuration:", v17, v3, swift_retain(v14).n128_f64[0]);

    _Block_release(v17);
    uint64_t v19 = v21;
    swift_release(v14);
    swift_release(v19);
    return v18;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10009C5FC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = a3 + 16;
  swift_beginAccess(a3 + 16, v30, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v18);
  if (!Strong) {
    return 0LL;
  }
  uint64_t v20 = (void *)Strong;
  swift_beginAccess(v18, v29, 0LL, 0LL);
  uint64_t v21 = swift_unknownObjectWeakLoadStrong(v18);
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    uint64_t v23 = *(void *)(v21 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph);
    swift_retain(v23);
  }

  else
  {
    uint64_t v23 = 0LL;
  }

  v28[0] = a4;
  v28[1] = a5;
  v28[2] = a6;
  v28[3] = a7;
  void v28[4] = a8;
  void v28[5] = a9;
  v28[6] = a10;
  v28[7] = a11;
  uint64_t v25 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v28);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v25);
  uint64_t v24 = ShelfBasedCollectionViewController.compositionalLayoutSectionProvider(section:layoutEnvironment:asPartOf:)( a1,  a2,  v23,  v25,  WitnessTable);

  swift_release(v23);
  return v24;
}

id sub_10009C740(uint64_t a1)
{
  return [*(id *)(a1 + OBJC_IVAR____TtC8AppStore24InfiniteScrollFooterView_activityIndicator) startAnimating];
}

uint64_t sub_10009C758( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v49 = a8;
  id v45 = a1;
  uint64_t v16 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v47 = *(void *)(v16 - 8);
  uint64_t v48 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (void **)((char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v19 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v46 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_1000038E8((uint64_t *)&unk_1002E62B8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  id v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a5 += 16LL;
  swift_beginAccess(a5, v51, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, 1LL, 1LL, v25);
    return sub_1000077E0((uint64_t)v24, (uint64_t *)&unk_1002E62B8);
  }

  __n128 v30 = (void *)Strong;
  v50[0] = a6;
  v50[1] = a7;
  v50[2] = v49;
  v50[3] = a9;
  v50[4] = a10;
  v50[5] = a11;
  v50[6] = a12;
  v50[7] = a13;
  uint64_t v31 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v50);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v31);
  ShelfBasedCollectionViewController.shelfLayoutContext(for:)(0LL, v31, WitnessTable);

  uint64_t v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v24, v25);
  ShelfLayoutContext.shelf.getter(v33);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023AB78, v34);
  ReadOnlyLens.subscript.getter(v18, KeyPath, v19);
  __n128 v36 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v21, v19, v36);
  uint64_t v38 = v47;
  uint64_t v37 = v48;
  if ((*(unsigned int (**)(void **, uint64_t))(v47 + 88))(v18, v48) == enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(void **, uint64_t))(v38 + 96))(v18, v37);
    uint64_t v39 = *v18;
    uint64_t v40 = (char *)v18 + *(int *)(sub_1000038E8(&qword_1002E5BD8) + 48);
    uint64_t v42 = type metadata accessor for ShelfBackgroundStyle(0LL, v41);
    (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8LL))(v40, v42);
    [v45 setBackgroundColor:v39];

    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    return (*(uint64_t (**)(void **, uint64_t))(v38 + 8))(v18, v37);
  }

void sub_10009CA70( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v60 = a7;
  uint64_t v61 = a8;
  uint64_t v59 = a6;
  uint64_t v57 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v58 = (id *)((char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v54 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1000038E8((uint64_t *)&unk_1002E62B8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  char v55 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_1000038E8(&qword_1002E62B0);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = a5 + 16;
  swift_beginAccess(a5 + 16, v65, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a5 + 16);
  if (Strong)
  {
    __n128 v30 = (void *)Strong;
    id v52 = a1;
    uint64_t v31 = (id *)(Strong + qword_1002E6190);
    swift_beginAccess(Strong + qword_1002E6190, v64, 0LL, 0LL);
    if (!*v31)
    {

      return;
    }

    id v32 = *v31;

    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
    uint64_t v33 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v24);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    swift_beginAccess(v28, v63, 0LL, 0LL);
    uint64_t v34 = swift_unknownObjectWeakLoadStrong(v28);
    if (v34)
    {
      uint64_t v35 = v33 - 1;
      if (__OFSUB__(v33, 1LL))
      {
        __break(1u);
        return;
      }

      __n128 v36 = (void *)v34;
      v62[0] = v59;
      v62[1] = v60;
      v62[2] = v61;
      v62[3] = a9;
      v62[4] = a10;
      void v62[5] = a11;
      v62[6] = a12;
      v62[7] = a13;
      uint64_t v37 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v62);
      uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v37);
      ShelfBasedCollectionViewController.shelfLayoutContext(for:)(v35, v37, WitnessTable);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1LL, v21) != 1)
      {
        uint64_t v39 = v55;
        uint64_t v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 32))(v55, v20, v21);
        ShelfLayoutContext.shelf.getter(v40);
        uint64_t KeyPath = swift_getKeyPath(&unk_10023AB78, v41);
        uint64_t v43 = v58;
        uint64_t v44 = v54;
        ReadOnlyLens.subscript.getter(v58, KeyPath, v54);
        __n128 v45 = swift_release(KeyPath);
        (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v17, v44, v45);
        uint64_t v46 = v56;
        uint64_t v47 = v57;
        if ((*(unsigned int (**)(void **, uint64_t))(v56 + 88))(v43, v57) == enum case for ShelfBackground.color(_:))
        {
          (*(void (**)(void **, uint64_t))(v46 + 96))(v43, v47);
          uint64_t v48 = *v43;
          uint64_t v49 = (char *)v43 + *(int *)(sub_1000038E8(&qword_1002E5BD8) + 48);
          uint64_t v51 = type metadata accessor for ShelfBackgroundStyle(0LL, v50);
          (*(void (**)(char *, uint64_t))(*(void *)(v51 - 8) + 8LL))(v49, v51);
          [v52 setBackgroundColor:v48];

          (*(void (**)(char *, uint64_t))(v22 + 8))(v39, v21);
        }

        else
        {
          (*(void (**)(char *, uint64_t))(v22 + 8))(v39, v21);
          (*(void (**)(void **, uint64_t))(v46 + 8))(v43, v47);
        }

        return;
      }
    }

    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1LL, 1LL, v21);
    }

    sub_1000077E0((uint64_t)v20, (uint64_t *)&unk_1002E62B8);
  }

uint64_t sub_10009CEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = a1;
  sub_10000DF2C(a2, (uint64_t)v7, (uint64_t *)&unk_1002E3500);
  sub_10000DF2C((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_1002E3500);
  swift_retain(a1);
  sub_10009AEB0(v3, (uint64_t)v5);
  sub_1000077E0((uint64_t)&v6, &qword_1002E6330);
  return sub_1000077E0((uint64_t)v5, (uint64_t *)&unk_1002E3500);
}

void sub_10009CF54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000038E8(&qword_1002E62A8);
  __chkstk_darwin(v3);
  id v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = sub_1000038E8(&qword_1002E62B0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  a2 += 16LL;
  swift_beginAccess(a2, v23, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    uint64_t v12 = (id *)(Strong + qword_1002E6190);
    swift_beginAccess(Strong + qword_1002E6190, v22, 0LL, 0LL);
    if (*v12)
    {
      id v13 = *v12;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0LL, 1LL, v6);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) != 1)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v5, v6);
        uint64_t v14 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v6);
        __chkstk_darwin(v14);
        *(void *)&v21[-16] = v11;
        uint64_t v15 = sub_1001BF488((void (*)(void))sub_10009EE3C, (uint64_t)&v21[-32], v14);
        id v16 = objc_msgSend(v11, "collectionView", swift_bridgeObjectRelease(v14).n128_f64[0]);
        if (!v16)
        {
          __break(1u);
          return;
        }

        uint64_t v17 = v16;
        sub_10009AFE0((uint64_t)v16, (uint64_t)v15);
        swift_bridgeObjectRelease(v15);

        uint64_t v18 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
        goto LABEL_8;
      }
    }

    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1LL, 1LL, v6);
    }

    uint64_t v18 = sub_1000077E0((uint64_t)v5, &qword_1002E62A8);
LABEL_8:
    uint64_t v19 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v18);
    if (v19)
    {
      uint64_t v20 = v19;
      PendingPageRender.isLayoutPending.setter(0LL);

      swift_release(v20);
    }

    else
    {
    }
  }

void sub_10009D1B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v5 = (id *)(a2 + qword_1002E6190);
  swift_beginAccess(a2 + qword_1002E6190, v8, 0LL, 0LL);
  if (*v5)
  {
    id v6 = *v5;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for IndexPath(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(a3, 1LL, 1LL, v7);
  }

uint64_t sub_10009D258(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_10009D27C( a1,  a2,  a3,  (void (*)(id, char *, uint64_t, void, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.willDisplayCell(_:in:collectionView:asPartOf:));
}

uint64_t sub_10009D264(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_10009D490( a1,  a2,  a3,  a4,  a5,  (void (*)(id, char *, uint64_t, void, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.willDisplayCell(_:in:collectionView:asPartOf:));
}

uint64_t sub_10009D270(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_10009D27C( a1,  a2,  a3,  (void (*)(id, char *, uint64_t, void, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.didEndDisplayingCell(_:in:collectionView:asPartOf:));
}

uint64_t sub_10009D27C( uint64_t a1, void *a2, uint64_t a3, void (*a4)(id, char *, uint64_t, void, uint64_t, uint64_t))
{
  id v6 = v4;
  uint64_t v34 = *v6;
  uint64_t v33 = swift_isaMask;
  uint64_t v9 = sub_1000038E8((uint64_t *)&unk_1002E1D40);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ItemLayoutContext(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t ObjectType = swift_getObjectType(a2);
  uint64_t result = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ShelfComponentView);
  if (result) {
    uint64_t v18 = result;
  }
  else {
    uint64_t v18 = 0LL;
  }
  if (result) {
    uint64_t v19 = a2;
  }
  else {
    uint64_t v19 = 0LL;
  }
  if (v19)
  {
    uint64_t v31 = a1;
    id v32 = a4;
    uint64_t v20 = swift_getObjectType(v19);
    id v21 = a2;
    dispatch thunk of ShelfComponentView.itemLayoutContext.getter(v20, v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12) == 1)
    {

      return sub_1000077E0((uint64_t)v11, (uint64_t *)&unk_1002E1D40);
    }

    else
    {
      uint64_t v22 = (_OWORD *)(v33 & v34);
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      __int128 v23 = v22[39];
      v35[0] = v22[38];
      v35[1] = v23;
      __int128 v24 = v22[41];
      v35[2] = v22[40];
      v35[3] = v24;
      uint64_t v25 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v35);
      uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v25);
      uint64_t v27 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(v25, WitnessTable);
      uint64_t v29 = v28;
      uint64_t v30 = swift_getObjectType(v27);
      v32( v21,  v15,  v31,  *(uint64_t *)((char *)v6 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph),  v30,  v29);

      swift_unknownObjectRelease(v27);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }

  return result;
}

uint64_t sub_10009D484(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_10009D490( a1,  a2,  a3,  a4,  a5,  (void (*)(id, char *, uint64_t, void, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.didEndDisplayingCell(_:in:collectionView:asPartOf:));
}

uint64_t sub_10009D490( void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, char *, uint64_t, void, uint64_t, uint64_t))
{
  uint64_t v11 = type metadata accessor for IndexPath(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  id v15 = a3;
  id v16 = a4;
  id v17 = a1;
  sub_10009D27C((uint64_t)v15, v16, v18, a6);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_10009D560(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = swift_isaMask;
  uint64_t v6 = sub_1000038E8((uint64_t *)&unk_1002E1D40);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ItemLayoutContext(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  NSIndexPath v34 = IndexPath._bridgeToObjectiveC()();
  Class isa = v34.super.isa;
  id v32 = objc_msgSend(a1, "cellForItemAtIndexPath:", v34.super.isa, v34._reserved);

  if (v32)
  {
    uint64_t ObjectType = swift_getObjectType(v32);
    uint64_t v15 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ShelfComponentView);
    if (v15) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0LL;
    }
    if (v15) {
      id v17 = v32;
    }
    else {
      id v17 = 0LL;
    }
    if (v17)
    {
      uint64_t v30 = v5;
      uint64_t v31 = v4;
      uint64_t v18 = swift_getObjectType(v17);
      id v19 = v32;
      dispatch thunk of ShelfComponentView.itemLayoutContext.getter(v18, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9) == 1)
      {

        sub_1000077E0((uint64_t)v8, (uint64_t *)&unk_1002E1D40);
      }

      else
      {
        uint64_t v20 = (_OWORD *)(v30 & v31);
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
        __int128 v21 = v20[39];
        v33[0] = v20[38];
        v33[1] = v21;
        __int128 v22 = v20[41];
        v33[2] = v20[40];
        v33[3] = v22;
        uint64_t v23 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v33);
        uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v23);
        uint64_t v25 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(v23, WitnessTable);
        uint64_t v27 = v26;
        uint64_t v28 = swift_getObjectType(v25);
        dispatch thunk of CollectionElementsObserver.didSelectCell(_:in:collectionView:asPartOf:)( v19,  v12,  a1,  *(void *)((char *)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph),  v28,  v27);

        swift_unknownObjectRelease(v25);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      }
    }

    else
    {
    }
  }

uint64_t sub_10009D7C0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  id v11 = a3;
  id v12 = a1;
  sub_10009D560(v11);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10009D870(uint64_t a1, void *a2)
{
  uint64_t v3 = (_OWORD *)(swift_isaMask & *a2);
  __int128 v4 = v3[39];
  v9[0] = v3[38];
  v9[1] = v4;
  __int128 v5 = v3[41];
  v9[2] = v3[40];
  int64_t v9[3] = v5;
  uint64_t v6 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v9);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v6);
  return ShelfBasedCollectionViewController.itemLayoutContext(at:)(a1, v6, WitnessTable);
}

uint64_t sub_10009D90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10009D97C( a1,  a2,  a3,  a4,  a5,  (void (*)(uint64_t, __int128 *, uint64_t, void, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.willDisplayGlobalSupplementary(_:registeredWith:collectionView:asPartOf:),  (void (*)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.willDisplayShelfSupplementary(_:in:registeredWith:collectionView:asPartOf:),  (void (*)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.willDisplayItemSupplementary(_:in:registeredWith:collectionView:asPartOf:));
}

uint64_t sub_10009D928(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  return sub_10009DFA8( a1,  a2,  a3,  a4,  a5,  a6,  (void (*)(uint64_t, __int128 *, uint64_t, void, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.willDisplayGlobalSupplementary(_:registeredWith:collectionView:asPartOf:),  (void (*)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.willDisplayShelfSupplementary(_:in:registeredWith:collectionView:asPartOf:),  (void (*)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.willDisplayItemSupplementary(_:in:registeredWith:collectionView:asPartOf:));
}

uint64_t sub_10009D960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10009D97C( a1,  a2,  a3,  a4,  a5,  (void (*)(uint64_t, __int128 *, uint64_t, void, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.didEndDisplayingGlobalSupplementary(_:registeredWith:collectionView:asPartOf:),  (void (*)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.didEndDisplayingShelfSupplementary(_:in:registeredWith:collectionView:asPartOf:),  (void (*)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.didEndDisplayingItemSupplementary(_:in:registeredWith:collectionView:asPartOf:));
}

uint64_t sub_10009D97C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, __int128 *, uint64_t, void, uint64_t, uint64_t), void (*a7)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t), void (*a8)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  void (*v28)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t WitnessTable;
  uint64_t v35;
  void (*v36)(uint64_t, __int128 *, uint64_t, void, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char *v67;
  uint64_t *v68;
  __int128 *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v86)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v87;
  uint64_t v88;
  __int128 *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  unint64_t v85 = a7;
  id v11 = v8;
  id v17 = (void *)(swift_isaMask & *v11);
  uint64_t v18 = sub_1000038E8((uint64_t *)&unk_1002E1D40);
  __chkstk_darwin(v18);
  id v89 = (__int128 *)((char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v99 = type metadata accessor for ItemLayoutContext(0LL);
  __int128 v95 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v94 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_1000038E8((uint64_t *)&unk_1002E62B8);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v97 = v24;
  uint64_t v98 = v25;
  __n128 v26 = __chkstk_darwin(v24);
  uint64_t v87 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = (void (*)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))v17[118];
  uint64_t v92 = a3;
  BOOL v93 = a4;
  v28(&v100, a3, a4, v26);
  unint64_t v86 = a8;
  uint64_t v88 = a2;
  __int128 v96 = a1;
  uint64_t v91 = a5;
  uint64_t v90 = v23;
  if (v102)
  {
    sub_1000243BC(&v100, (uint64_t)&v107);
    id v84 = v17[76];
    id v83 = v17[77];
    NSString v82 = v17[78];
    id v81 = v17[79];
    uint64_t v29 = v17[80];
    uint64_t v30 = v17[81];
    uint64_t v31 = v17[82];
    id v32 = v17[83];
    *(void *)&double v100 = v84;
    *((void *)&v100 + 1) = v83;
    uint64_t v101 = v82;
    id v102 = v81;
    uint64_t v103 = v29;
    uint64_t v104 = v30;
    id v105 = v31;
    uint64_t v106 = v32;
    uint64_t v33 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)&v100);
    uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v33);
    uint64_t v35 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(v33, WitnessTable);
    __n128 v36 = a6;
    uint64_t v38 = v37;
    uint64_t ObjectType = swift_getObjectType(v35);
    v36( a2,  &v107,  a1,  *(void *)((char *)v11 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph),  ObjectType,  v38);
    swift_unknownObjectRelease(v35);
    _s8AppStore17PillOverlayLayoutVwxx_0(&v107);
    uint64_t v40 = v31;
    uint64_t v41 = v30;
    uint64_t v42 = v81;
    uint64_t v43 = v82;
    uint64_t v44 = v83;
    __n128 v45 = v84;
  }

  else
  {
    sub_1000077E0((uint64_t)&v100, &qword_1002E62C8);
    __n128 v45 = v17[76];
    uint64_t v44 = v17[77];
    uint64_t v43 = v17[78];
    uint64_t v42 = v17[79];
    uint64_t v29 = v17[80];
    uint64_t v41 = v17[81];
    uint64_t v40 = v17[82];
    id v32 = v17[83];
  }

  uint64_t v46 = v89;
  uint64_t v47 = v97;
  *(void *)&double v100 = v45;
  *((void *)&v100 + 1) = v44;
  uint64_t v101 = v43;
  id v102 = v42;
  uint64_t v103 = v29;
  uint64_t v104 = v41;
  id v105 = v40;
  uint64_t v106 = v32;
  uint64_t v48 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)&v100);
  uint64_t v49 = swift_getWitnessTable(&unk_10023AA78, v48);
  __n128 v50 = (uint64_t)v90;
  uint64_t v51 = v91;
  ShelfBasedCollectionViewController.shelfLayoutContext(containing:)(v91, v48, v49);
  id v52 = v98;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v50, 1LL, v47) == 1)
  {
    sub_1000077E0(v50, (uint64_t *)&unk_1002E62B8);
    uint64_t v53 = v96;
  }

  else
  {
    uint64_t v54 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v87, v50, v47);
    char v55 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(v48, v49);
    uint64_t v57 = v56;
    uint64_t v58 = swift_getObjectType(v55);
    uint64_t v59 = *(void *)((char *)v11 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph);
    dispatch thunk of ShelfSupplementaryProvider.supplementaryRegistration(for:in:asPartOf:)( &v107,  v92,  v93,  v54,  v59,  v58,  v57);
    swift_unknownObjectRelease(v55);
    uint64_t v60 = v47;
    uint64_t v53 = v96;
    if (v108)
    {
      sub_1000243BC(&v107, (uint64_t)&v100);
      uint64_t v61 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(v48, v49);
      uint64_t v63 = v62;
      uint64_t v64 = swift_getObjectType(v61);
      v85(v88, v54, &v100, v53, v59, v64, v63);
      swift_unknownObjectRelease(v61);
      _s8AppStore17PillOverlayLayoutVwxx_0(&v100);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v54, v97);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v98 + 8))(v54, v60);
      sub_1000077E0((uint64_t)&v107, &qword_1002E62C8);
    }
  }

  ShelfBasedCollectionViewController.itemLayoutContext(at:)(v51, v48, v49);
  uint64_t v65 = v95;
  uint64_t v66 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v95 + 48))(v46, 1LL, v99);
  uint64_t v67 = v94;
  if (v66 == 1)
  {
    uint64_t v68 = (uint64_t *)&unk_1002E1D40;
    uint64_t v69 = v46;
  }

  else
  {
    (*(void (**)(char *, __int128 *, uint64_t))(v65 + 32))(v94, v46, v99);
    id v70 = ShelfBasedCollectionViewController.itemSupplementaryProvider.getter(v48, v49);
    __n128 v72 = v71;
    uint64_t v73 = swift_getObjectType(v70);
    uint64_t v74 = *(void *)((char *)v11 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph);
    dispatch thunk of ItemSupplementaryProvider.supplementaryRegistration(for:in:asPartOf:)( &v107,  v92,  v93,  v67,  v74,  v73,  v72);
    swift_unknownObjectRelease(v70);
    if (v108)
    {
      sub_1000243BC(&v107, (uint64_t)&v100);
      uint64_t v75 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(v48, v49);
      uint64_t v77 = v76;
      id v78 = swift_getObjectType(v75);
      v86(v88, v67, &v100, v53, v74, v78, v77);
      swift_unknownObjectRelease(v75);
      _s8AppStore17PillOverlayLayoutVwxx_0(&v100);
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v67, v99);
    }

    (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v99);
    uint64_t v68 = &qword_1002E62C8;
    uint64_t v69 = &v107;
  }

  return sub_1000077E0((uint64_t)v69, v68);
}

uint64_t sub_10009DF70(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  return sub_10009DFA8( a1,  a2,  a3,  a4,  a5,  a6,  (void (*)(uint64_t, __int128 *, uint64_t, void, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.didEndDisplayingGlobalSupplementary(_:registeredWith:collectionView:asPartOf:),  (void (*)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.didEndDisplayingShelfSupplementary(_:in:registeredWith:collectionView:asPartOf:),  (void (*)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of CollectionElementsObserver.didEndDisplayingItemSupplementary(_:in:registeredWith:collectionView:asPartOf:));
}

uint64_t sub_10009DFA8( void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, __int128 *, uint64_t, void, uint64_t, uint64_t), void (*a8)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t), void (*a9)(uint64_t, char *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  __n128 v26 = a7;
  uint64_t v27 = a8;
  uint64_t v14 = type metadata accessor for IndexPath(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  uint64_t v20 = v19;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  id v21 = a3;
  id v22 = a4;
  id v23 = a1;
  sub_10009D97C((uint64_t)v21, (uint64_t)v22, v18, v20, (uint64_t)v17, v26, v27, a9);

  __n128 v24 = swift_bridgeObjectRelease(v20);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v24);
}

void sub_10009E0B4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v8 = a3;
  swift_unknownObjectRetain(a4);
  id v9 = a1;
  sub_10009EC0C(a4, a5);

  swift_unknownObjectRelease(a4);
}

uint64_t sub_10009E124(void *a1, void *a2)
{
  __int128 v5 = (_OWORD *)(swift_isaMask & *v2);
  __int128 v6 = v5[39];
  __int128 v13 = v5[38];
  __int128 v14 = v6;
  __int128 v7 = v5[41];
  __int128 v15 = v5[40];
  __int128 v16 = v7;
  id v8 = (objc_class *)type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)&v13);
  v17.receiver = v2;
  v17.super_class = v8;
  objc_msgSendSuper2(&v17, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  id v9 = [v2 collectionView];
  swift_unknownObjectWeakInit(&v13, v9);
  id v10 = a1;
  id v11 = a2;

  *((void *)&v13 + 1) = v10;
  *(void *)&__int128 v14 = v11;
  SyncEvent.post(_:)(&v13);
  return sub_10009EE54((uint64_t)&v13);
}

void sub_10009E200(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_10009E124(v6, v7);
}

id sub_10009E268(uint64_t a1)
{
  return [*(id *)(v1 + qword_1002F37C8) scrollViewWillBeginDecelerating:a1];
}

void sub_10009E284(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10009E268((uint64_t)v4);
}

id sub_10009E2D8(uint64_t a1)
{
  return [*(id *)(v1 + qword_1002F37C8) scrollViewDidEndDecelerating:a1];
}

void sub_10009E2F4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10009E2D8((uint64_t)v4);
}

id sub_10009E348(uint64_t a1)
{
  uint64_t v3 = (_OWORD *)(swift_isaMask & *v1);
  __int128 v4 = v3[39];
  v8[0] = v3[38];
  v8[1] = v4;
  __int128 v5 = v3[41];
  __int128 v8[2] = v3[40];
  v8[3] = v5;
  id v6 = (objc_class *)type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v8);
  v9.receiver = v1;
  v9.super_class = v6;
  objc_msgSendSuper2(&v9, "scrollViewDidScroll:", a1);
  return [*(id *)((char *)v1 + qword_1002F37C8) scrollViewDidScroll:a1];
}

void sub_10009E3D4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10009E348((uint64_t)v4);
}

id sub_10009E428(uint64_t a1)
{
  return [*(id *)(v1 + qword_1002F37C8) scrollViewWillBeginDragging:a1];
}

void sub_10009E444(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10009E428((uint64_t)v4);
}

id sub_10009E498(uint64_t a1, char a2)
{
  return [*(id *)(v2 + qword_1002F37C8) scrollViewDidEndDragging:a1 willDecelerate:a2 & 1];
}

void sub_10009E4BC(void *a1, uint64_t a2, void *a3, char a4)
{
  id v6 = a3;
  id v7 = a1;
  sub_10009E498((uint64_t)v6, a4);
}

void sub_10009E518(void *a1)
{
  id v1 = a1;
  sub_10009920C();
}

void sub_10009E54C(void *a1)
{
  id v1 = a1;
  sub_100099220();
}

uint64_t sub_10009E580()
{
  uint64_t v1 = v0 + qword_1002F37B8;
  uint64_t v2 = type metadata accessor for ShelfBasedCollectionViewControllerDependencies(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_release(*(void *)(v0 + qword_1002F37C0));

  swift_release(*(void *)(v0 + qword_1002F37D0));
  swift_release(*(void *)(v0 + qword_1002E6198));
  swift_release(*(void *)(v0 + qword_1002E61A0));
  swift_release(*(void *)(v0 + qword_1002F37D8));
  return swift_release(*(void *)(v0 + qword_1002F37E0));
}

id sub_10009E64C()
{
  uint64_t v1 = (_OWORD *)(swift_isaMask & *v0);
  __int128 v2 = v1[39];
  v6[0] = v1[38];
  v6[1] = v2;
  __int128 v3 = v1[41];
  v6[2] = v1[40];
  v6[3] = v3;
  id v4 = (objc_class *)type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v6);
  v7.receiver = v0;
  v7.super_class = v4;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_10009E6A8(uint64_t a1)
{
  uint64_t v2 = a1 + qword_1002F37B8;
  uint64_t v3 = type metadata accessor for ShelfBasedCollectionViewControllerDependencies(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(v2, v3);
  swift_release(*(void *)(a1 + qword_1002F37C0));

  swift_release(*(void *)(a1 + qword_1002F37D0));
  swift_release(*(void *)(a1 + qword_1002E6198));
  swift_release(*(void *)(a1 + qword_1002E61A0));
  swift_release(*(void *)(a1 + qword_1002F37D8));
  return swift_release(*(void *)(a1 + qword_1002F37E0));
}

uint64_t type metadata accessor for BaseDiffableShelfViewController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for BaseDiffableShelfViewController);
}

id sub_10009E784()
{
  return [v0 collectionView];
}

void sub_10009E7A8(void *a1)
{
}

void (*sub_10009E7DC(void *a1))(id *a1)
{
  a1[1] = v1;
  *a1 = [v1 collectionView];
  return sub_10009E824;
}

void sub_10009E824(id *a1)
{
  id v1 = *a1;
  objc_msgSend(a1[1], "setCollectionView:");
}

void *sub_10009E858()
{
  uint64_t v0 = (void *)sub_10009EDC4();
  id v1 = v0;
  return v0;
}

void sub_10009E880(void *a1)
{
}

void (*sub_10009E89C(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10009B5BC((uint64_t)v2);
  return sub_10000D910;
}

void *sub_10009E8E0()
{
  uint64_t v0 = (void *)sub_10009ED80();
  id v1 = v0;
  return v0;
}

void sub_10009E908(void *a1)
{
}

void (*sub_10009E924(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10009B520((uint64_t)v2);
  return sub_10000D910;
}

void (*sub_10009E974(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100099460((uint64_t)v2);
  return sub_10000D910;
}

uint64_t sub_10009E9C0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x3B8LL))();
}

uint64_t sub_10009E9E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100099654(a1);
}

unint64_t sub_10009E9F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000996C0(a1);
}

uint64_t sub_10009EA08()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x388LL))();
}

uint64_t sub_10009EA24()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x390LL))();
}

uint64_t sub_10009EA44()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x398LL))();
}

uint64_t sub_10009EA60()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x3A0LL))();
}

uint64_t sub_10009EA84()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x3A8LL))();
}

uint64_t sub_10009EABC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x3B0LL))();
}

uint64_t sub_10009EAF4(uint64_t a1)
{
  return swift_getWitnessTable(&unk_10023AA10, a1);
}

uint64_t sub_10009EB04()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10009EB28(uint64_t a1, uint64_t a2)
{
  return sub_10009C5FC(a1, a2, v2[10], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9]);
}

uint64_t sub_10009EB60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10009EB70(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10009EB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10009BFB0(a1, a2, a3, v3[10], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9]);
}

uint64_t sub_10009EBB0()
{
  return swift_deallocObject(v0, 88LL, 7LL);
}

uint64_t sub_10009EBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009C290(a1, a2, a3, a4, v4[10], v4[2], v4[3], v4[4], v4[5], v4[6], v4[7], v4[8], v4[9]);
}

uint64_t sub_10009EC0C(uint64_t a1, uint64_t a2)
{
  id v5 = (_OWORD *)(swift_isaMask & *v2);
  uint64_t v6 = sub_1000038E8((uint64_t *)&unk_1002E62B8);
  __chkstk_darwin(v6);
  id v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __int128 v13 = v5[39];
  v18[0] = v5[38];
  v18[1] = v13;
  __int128 v14 = v5[41];
  v18[2] = v5[40];
  v18[3] = v14;
  uint64_t v15 = type metadata accessor for BaseDiffableShelfViewController(0LL, (uint64_t)v18);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023AA78, v15);
  ShelfBasedCollectionViewController.shelfLayoutContext(for:)(a2, v15, WitnessTable);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  dispatch thunk of CompoundScrollObserver.didScroll(orthogonalScrollView:in:)(a1, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10009ED80()
{
  uint64_t v1 = v0 + qword_1002E6188;
  swift_beginAccess(v0 + qword_1002E6188, v3, 0LL, 0LL);
  return *(void *)v1;
}

uint64_t sub_10009EDC4()
{
  uint64_t v1 = v0 + qword_1002E6190;
  swift_beginAccess(v0 + qword_1002E6190, v3, 0LL, 0LL);
  return *(void *)v1;
}

void sub_10009EE08(uint64_t a1)
{
}

void sub_10009EE3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_10009EE54(uint64_t a1)
{
  return a1;
}

unint64_t sub_10009EE88()
{
  unint64_t result = qword_1002E6320;
  if (!qword_1002E6320)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023CA28, &type metadata for GenericPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_1002E6320);
  }

  return result;
}

uint64_t sub_10009EECC(uint64_t a1)
{
  return sub_10009D870(a1, *(void **)(v1 + 16));
}

void (*sub_10009EEE4(void *a1))(uint64_t a1)
{
  *(void *)(swift_allocObject(&unk_100289550, 24LL, 7LL) + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  id v2 = a1;
  return sub_10009F130;
}

uint64_t sub_10009EF38()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t (*sub_10009EF5C(void *a1))(uint64_t a1, uint64_t a2)
{
  *(void *)(swift_allocObject(&unk_100289528, 24LL, 7LL) + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  id v2 = a1;
  return sub_10009F128;
}

uint64_t (*sub_10009EFB0())(void *a1)
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 16))();
  uint64_t v3 = v2;
  uint64_t v4 = swift_allocObject(&unk_100289500, 32LL, 7LL);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  return sub_10009F120;
}

uint64_t (*sub_10009EFFC(void *a1))()
{
  *(void *)(swift_allocObject(&unk_1002894D8, 24LL, 7LL) + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  id v2 = a1;
  return sub_10009F0E8;
}

id (*sub_10009F050(void *a1))()
{
  *(void *)(swift_allocObject(&unk_1002894B0, 24LL, 7LL) + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  id v2 = a1;
  return sub_10009F0C8;
}

uint64_t sub_10009F0A4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_10009F0C8()
{
  return sub_10009AF1C();
}

uint64_t sub_10009F0E8()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0x3D0LL))();
}

uint64_t sub_10009F120(void *a1)
{
  return sub_10012BA54(a1, *(uint64_t (**)(void, void *))(v1 + 16));
}

uint64_t sub_10009F128(uint64_t a1, uint64_t a2)
{
  return sub_10009CEB0(a1, a2);
}

void sub_10009F130(uint64_t a1)
{
}

uint64_t sub_10009F150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009F168( a1,  a2,  a3,  a4,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_10009CA70);
}

uint64_t sub_10009F15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009F168( a1,  a2,  a3,  a4,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_10009C758);
}

uint64_t sub_10009F168( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))
{
  return a5(a1, a2, a3, a4, v5[10], v5[2], v5[3], v5[4], v5[5], v5[6], v5[7], v5[8], v5[9]);
}

unint64_t sub_10009F1A8()
{
  unint64_t result = qword_1002E63C0;
  if (!qword_1002E63C0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100242938, &type metadata for GenericPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1002E63C0);
  }

  return result;
}

void sub_10009F220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v97 = a6;
  uint64_t v99 = a3;
  uint64_t v9 = sub_1000038E8(&qword_1002E1E60);
  __chkstk_darwin(v9);
  uint64_t v104 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v11);
  uint64_t v101 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v103 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v98 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for FontSource(0LL);
  uint64_t v100 = *(void *)(v15 - 8);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for TextCardTitleStyle(0LL, v16);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v24 = __chkstk_darwin(v23);
  __n128 v26 = (char *)&v96 - v25;
  uint64_t v105 = a1;
  TextCard.titleStyle.getter(v24);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))( v22,  enum case for TextCardTitleStyle.editorsChoice(_:),  v19);
  uint64_t v27 = sub_100004288( &qword_1002E64A0,  (uint64_t (*)(uint64_t))&type metadata accessor for TextCardTitleStyle,  (uint64_t)&protocol conformance descriptor for TextCardTitleStyle);
  dispatch thunk of RawRepresentable.rawValue.getter(&v110, v19, v27);
  dispatch thunk of RawRepresentable.rawValue.getter(&v107, v19, v27);
  uint64_t v28 = *((void *)&v110 + 1);
  uint64_t v29 = *((void *)&v107 + 1);
  if (v110 == v107)
  {
    swift_bridgeObjectRelease_n(*((void *)&v110 + 1), 2LL);
    uint64_t v30 = *(void (**)(char *, uint64_t))(v20 + 8);
    v30(v22, v19);
    v30(v26, v19);
  }

  else
  {
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v110, *((void *)&v110 + 1), v107, *((void *)&v107 + 1), 0LL);
    swift_bridgeObjectRelease(v28);
    __n128 v32 = swift_bridgeObjectRelease(v29);
    uint64_t v33 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
    v33(v22, v19, v32);
    ((void (*)(char *, uint64_t))v33)(v26, v19);
    if ((v31 & 1) == 0)
    {
      uint64_t v51 = *(void **)&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_titleLabel];
      [v51 setHidden:0];
      id v52 = *(void **)&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_subtitleLabel];
      TextCard.title.getter([v52 setHidden:0]);
      if (v53)
      {
        uint64_t v55 = v53;
        NSString v56 = String._bridgeToObjectiveC()();
        *(void *)&double v54 = swift_bridgeObjectRelease(v55).n128_u64[0];
      }

      else
      {
        NSString v56 = 0LL;
      }

      uint64_t v42 = v103;
      uint64_t v43 = v102;
      objc_msgSend(v51, "setText:", v56, v54);

      TextCard.subtitle.getter();
      if (v57)
      {
        uint64_t v59 = v57;
        NSString v60 = String._bridgeToObjectiveC()();
        *(void *)&double v58 = swift_bridgeObjectRelease(v59).n128_u64[0];
      }

      else
      {
        NSString v60 = 0LL;
      }

      uint64_t v46 = (uint64_t)v101;
      objc_msgSend(v52, "setText:", v60, v58);

      uint64_t v61 = OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_editorsChoiceView;
      uint64_t v62 = *(void **)&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_editorsChoiceView];
      if (v62)
      {
        [v62 removeFromSuperview];
        uint64_t v63 = *(void **)&v7[v61];
      }

      else
      {
        uint64_t v63 = 0LL;
      }

      uint64_t v41 = (uint64_t)v104;
      *(void *)&v7[v61] = 0LL;

      if (*(void *)&v7[v61]) {
        objc_msgSend(v7, "addSubview:");
      }
      if (qword_1002E07E8 != -1) {
        swift_once(&qword_1002E07E8, sub_1000730B0);
      }
      uint64_t v64 = sub_10000A634(v42, (uint64_t)qword_1002F3310);
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v18, v64, v42);
      uint64_t v48 = v100;
      (*(void (**)(char *, void, uint64_t))(v100 + 104))(v18, enum case for FontSource.useCase(_:), v15);
      uint64_t v111 = type metadata accessor for StaticDimension(0LL);
      uint64_t v112 = &protocol witness table for StaticDimension;
      sub_10000DD7C(&v110);
      uint64_t v108 = v15;
      uint64_t v109 = &protocol witness table for FontSource;
      uint64_t v65 = sub_10000DD7C(&v107);
      (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v65, v18, v15);
      double v50 = 60.0;
      goto LABEL_27;
    }
  }

  NSIndexPath v34 = *(void **)&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_titleLabel];
  [v34 setHidden:1];
  [*(id *)&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_subtitleLabel] setHidden:1];
  id v35 = [v34 textColor];
  if (!v35)
  {
    __break(1u);
    return;
  }

  __n128 v36 = v35;
  id v37 = objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
  uint64_t v38 = sub_100162DF0(1, 0, v36);
  uint64_t v39 = OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_editorsChoiceView;
  uint64_t v40 = *(void **)&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_editorsChoiceView];
  uint64_t v41 = (uint64_t)v104;
  uint64_t v42 = v103;
  uint64_t v43 = v102;
  if (v40)
  {
    [v40 removeFromSuperview];
    uint64_t v44 = *(void **)&v7[v39];
  }

  else
  {
    uint64_t v44 = 0LL;
  }

  *(void *)&v7[v39] = v38;
  __n128 v45 = v38;

  if (*(void *)&v7[v39]) {
    objc_msgSend(v7, "addSubview:");
  }

  uint64_t v46 = (uint64_t)v101;
  if (qword_1002E07E8 != -1) {
    swift_once(&qword_1002E07E8, sub_1000730B0);
  }
  uint64_t v47 = sub_10000A634(v42, (uint64_t)qword_1002F3310);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v18, v47, v42);
  uint64_t v48 = v100;
  (*(void (**)(char *, void, uint64_t))(v100 + 104))(v18, enum case for FontSource.useCase(_:), v15);
  uint64_t v111 = type metadata accessor for StaticDimension(0LL);
  uint64_t v112 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v110);
  uint64_t v108 = v15;
  uint64_t v109 = &protocol witness table for FontSource;
  uint64_t v49 = sub_10000DD7C(&v107);
  (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v49, v18, v15);
  double v50 = 70.0;
LABEL_27:
  StaticDimension.init(_:scaledLike:)(&v107, v50);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v15);
  uint64_t v66 = &v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_metrics];
  swift_beginAccess(&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_metrics], &v107, 33LL, 0LL);
  v66 += 120;
  _s8AppStore17PillOverlayLayoutVwxx_0(v66);
  sub_1000243BC(&v110, (uint64_t)v66);
  uint64_t v67 = swift_endAccess(&v107);
  uint64_t v68 = TextCard.bodyParagraph.getter(v67);
  uint64_t v69 = (void *)Paragraph.collapsedText.getter();
  swift_release(v68);
  id v70 = [objc_allocWithZone(NSMutableAttributedString) initWithAttributedString:v69];

  uint64_t v71 = *(void *)(*(void *)&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_bodyTextView]
                  + OBJC_IVAR____TtC8AppStore17CollapsedTextView_textLabel)
      + OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCase;
  swift_beginAccess(v71, &v110, 0LL, 0LL);
  sub_100013460(v71, v46);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v46, 1LL, v42) == 1)
  {
    sub_1000077E0(v46, &qword_1002E25C0);
  }

  else
  {
    __n128 v72 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
    uint64_t v73 = v43;
    uint64_t v74 = v98;
    v72(v98, v46, v42);
    unint64_t v75 = sub_100026F44();
    __n128 v76 = (void *)static UIFont.preferredFont(forUseWith:in:)(v74, v97);
    uint64_t v77 = sub_1000038E8(&qword_1002E3738);
    uint64_t inited = swift_initStackObject(v77, v106);
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
    *(void *)(inited + 64) = v75;
    *(void *)(inited + 32) = NSFontAttributeName;
    *(void *)(inited + 40) = v76;
    id v79 = NSFontAttributeName;
    id v80 = v76;
    unint64_t v81 = sub_1000EC244(inited);
    type metadata accessor for Key(0LL);
    sub_100004288( (unint64_t *)&qword_1002E1680,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_100236A3C);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend( v70,  "addAttributes:range:",  isa,  0,  objc_msgSend(v70, "length", swift_bridgeObjectRelease(v81).n128_f64[0]));

    (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v42);
  }

  id v83 = v70;
  uint64_t v84 = TextCard.bodyParagraph.getter(v83);
  Paragraph.alignment.getter();
  __n128 v85 = swift_release(v84);
  uint64_t v86 = type metadata accessor for Paragraph.Alignment(0LL, v85);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56LL))(v41, 0LL, 1LL, v86);
  sub_10000C04C(v70, 5LL, v41);

  uint64_t v87 = sub_1000077E0(v41, &qword_1002E1E60);
  uint64_t v88 = TextCard.regularAction.getter(v87);
  if (v88)
  {
    uint64_t v89 = v88;
    uint64_t v90 = swift_allocObject(&unk_1002897A0, 24LL, 7LL);
    swift_unknownObjectWeakInit(v90 + 16, v7);
    uint64_t v91 = (void (*)())swift_allocObject(&unk_1002897C8, 40LL, 7LL);
    *((void *)v91 + 2) = v90;
    *((void *)v91 + 3) = v89;
    uint64_t v92 = v99;
    *((void *)v91 + 4) = v99;
    BOOL v93 = (void (**)())&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_actionClosure];
    uint64_t v94 = *(void *)&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_actionClosure];
    uint64_t v95 = *(void *)&v7[OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_actionClosure + 8];
    *BOOL v93 = sub_10009FE0C;
    v93[1] = v91;
    swift_retain(v92);
    sub_10000A450(v94, v95);
  }

  [v7 setNeedsLayout];
}

void sub_10009FBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    uint64_t v13 = UIResponder.nearestActionRunner.getter();

    if (v13)
    {
      swift_beginAccess(v10, v18, 0LL, 0LL);
      uint64_t v14 = swift_unknownObjectWeakLoadStrong(v10);
      if (v14)
      {
        uint64_t v15 = v14;
        *((void *)&v20 + 1) = type metadata accessor for TextCardCollectionViewCell(0LL);
        *(void *)&__int128 v19 = v15;
      }

      else
      {
        __int128 v19 = 0u;
        __int128 v20 = 0u;
      }

      (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v6);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, &v19, v9, a3);
      __n128 v16 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
      sub_1000077E0((uint64_t)&v19, (uint64_t *)&unk_1002E3500);
    }
  }

double sub_10009FD20(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_1000A0044(a1, a4, a6, a7);
}

void sub_10009FD30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

__n128 sub_10009FD38@<Q0>(uint64_t a1@<X1>, void *a2@<X4>, uint64_t a3@<X8>)
{
  __int128 v4 = v6[3];
  *(_OWORD *)(a3 + 32) = v6[2];
  *(_OWORD *)(a3 + 48) = v4;
  *(_OWORD *)(a3 + 64) = v6[4];
  __n128 result = (__n128)v6[1];
  *(_OWORD *)a3 = v6[0];
  *(__n128 *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  return result;
}

uint64_t sub_10009FD88()
{
  return sub_100004288( &qword_1002E6450,  (uint64_t (*)(uint64_t))&type metadata accessor for TextCard,  (uint64_t)&protocol conformance descriptor for TextCard);
}

uint64_t sub_10009FDB4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10009FDD8()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_10009FE0C()
{
}

double sub_10009FE18@<D0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  double v6 = PageTraitEnvironment.pageContentSize.getter();
  if (qword_1002E0470 != -1) {
    swift_once(&qword_1002E0470, sub_100057678);
  }
  sub_1000587C4((uint64_t)&unk_1002F2730, (uint64_t)v30);
  id v7 = [a2 traitCollection];
  double v8 = sub_100058640(5LL, (uint64_t)v7);

  uint64_t v28 = &type metadata for CGFloat;
  uint64_t v29 = &protocol witness table for CGFloat;
  *(double *)&__int128 v27 = v8;
  _s8AppStore17PillOverlayLayoutVwxx_0(v32);
  sub_1000243BC(&v27, (uint64_t)v32);
  id v9 = objc_msgSend(a2, "traitCollection", (void)v27);
  sub_100026F44();
  if (qword_1002E07E8 != -1) {
    swift_once(&qword_1002E07E8, sub_1000730B0);
  }
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, v10);
  uint64_t v12 = sub_10000A634(v11, (uint64_t)qword_1002F3310);
  uint64_t v13 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v12, v9);
  double v14 = UIFont.estimatedFirstBaseline.getter();

  uint64_t v28 = &type metadata for CGFloat;
  uint64_t v29 = &protocol witness table for CGFloat;
  *(double *)&__int128 v27 = v14;
  _s8AppStore17PillOverlayLayoutVwxx_0(v31);
  sub_1000243BC(&v27, (uint64_t)v31);
  double v15 = sub_10010DE2C(v30, (uint64_t)a2, (v6 + -80.0) / 3.0);
  uint64_t v17 = v16;
  [a2 pageMarginInsets];
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_100058790(v30);
  *(void *)a3 = v19;
  *(void *)(a3 + 8) = v21;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v23;
  *(void *)(a3 + 24) = v25;
  *(double *)(a3 + 32) = v15;
  *(void *)(a3 + 40) = v17;
  double result = 40.0;
  *(_OWORD *)(a3 + 48) = xmmword_100237B90;
  *(_BYTE *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = a1;
  return result;
}

double sub_1000A0044(double a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (qword_1002E0470 != -1) {
    swift_once(&qword_1002E0470, sub_100057678);
  }
  sub_1000587C4((uint64_t)&unk_1002F2730, (uint64_t)v19);
  swift_getObjectType(a4);
  id v6 = [a4 traitCollection];
  double v7 = sub_100058640(5LL, (uint64_t)v6);

  uint64_t v17 = &type metadata for CGFloat;
  uint64_t v18 = &protocol witness table for CGFloat;
  *(double *)&__int128 v16 = v7;
  _s8AppStore17PillOverlayLayoutVwxx_0(v21);
  sub_1000243BC(&v16, (uint64_t)v21);
  id v8 = objc_msgSend(a4, "traitCollection", (void)v16);
  sub_100026F44();
  if (qword_1002E07E8 != -1) {
    swift_once(&qword_1002E07E8, sub_1000730B0);
  }
  uint64_t v10 = type metadata accessor for FontUseCase(0LL, v9);
  uint64_t v11 = sub_10000A634(v10, (uint64_t)qword_1002F3310);
  uint64_t v12 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v11, v8);
  double v13 = UIFont.estimatedFirstBaseline.getter();

  uint64_t v17 = &type metadata for CGFloat;
  uint64_t v18 = &protocol witness table for CGFloat;
  *(double *)&__int128 v16 = v13;
  _s8AppStore17PillOverlayLayoutVwxx_0(v20);
  sub_1000243BC(&v16, (uint64_t)v20);
  double v14 = sub_10010DE2C(v19, (uint64_t)a4, a1);
  sub_100058790(v19);
  return v14;
}

uint64_t sub_1000A01FC(uint64_t a1)
{
  v2[0] = "\b";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + 88);
}

uint64_t sub_1000A0248()
{
  return swift_unknownObjectWeakLoadStrong(v0 + qword_1002E64A8);
}

void sub_1000A0258(uint64_t a1@<X8>)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + qword_1002E64A8);
  if (Strong)
  {
    __int128 v4 = Strong;
    id v5 = [Strong nextResponder];

    if (v5)
    {
      sub_1000881A8(a1);
    }

    else
    {
      *(void *)(a1 + 32) = 0LL;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    }
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1000A02E8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = v12;
  if (!v12) {
    return sub_1000A07C8((uint64_t)v11);
  }
  uint64_t v9 = v13;
  sub_1000112B0(v11, v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24))(a1, a2 & 1, a3, a4, v8, v9);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v11);
}

uint64_t sub_1000A0388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject(&unk_1002898D8, 32LL, 7LL);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain(a1);
  __n128 v5 = swift_retain(a2);
  return ProductPageView.init(viewModelProvider:)(sub_1000A077C, v4, v5);
}

uint64_t sub_1000A03F0(uint64_t a1, uint64_t a2)
{
  v7[8] = &type metadata for GenericPageGridProvider;
  v7[9] = sub_10009F1A8();
  v7[3] = type metadata accessor for ProductPageGridMapper(0LL);
  v7[4] = &protocol witness table for ProductPageGridMapper;
  sub_10000DD7C(v7);
  ProductPageGridMapper.init()();
  uint64_t v4 = type metadata accessor for ProductPageViewModel(0LL);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  swift_retain(a2);
  __n128 v5 = swift_retain(a1);
  return ProductPageViewModel.init(presenter:pageGridProvider:pageGridMapper:objectGraph:)(v5);
}

double sub_1000A0494(void *a1, uint64_t a2, char a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = swift_allocObject(&unk_100289900, 32LL, 7LL);
    *(_BYTE *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = a3 & 1;
    *(void *)(v9 + 24) = v8;
    aBlock[4] = sub_1000A07A8;
    uint64_t v13 = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100140110;
    aBlock[3] = &unk_100289918;
    uint64_t v10 = _Block_copy(aBlock);
    uint64_t v11 = v13;
    swift_retain(v8);
    objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, v10, swift_release(v11).n128_f64[0]);
    _Block_release(v10);
    *(void *)&double result = swift_release(v8).n128_u64[0];
  }

  return result;
}

uint64_t sub_1000A058C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = v14;
  if (!v14) {
    return sub_1000A07C8((uint64_t)v13);
  }
  uint64_t v11 = v15;
  sub_1000112B0(v13, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))( a1,  a2,  a3,  a4,  a5,  v10,  v11);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v13);
}

void sub_1000A0634()
{
}

id sub_1000A0650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (objc_class *)type metadata accessor for BaseFlowController( 0LL,  *(void *)((swift_isaMask & *v4) + 0x50LL),  a3,  a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_1000A069C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + qword_1002E64B0));
}

uint64_t type metadata accessor for BaseFlowController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006B694(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BaseFlowController);
}

uint64_t sub_1000A06E0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x98LL))();
}

uint64_t sub_1000A0718()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xA0LL))();
}

uint64_t sub_1000A0750()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000A077C()
{
  return sub_1000A03F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000A0784()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1000A07A8()
{
}

uint64_t sub_1000A07B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000A07C0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000A07C8(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E5E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_1000A0808()
{
}

void sub_1000A0834()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore18StoryCardMediaView_config);
  swift_beginAccess(v1, v3, 0LL, 0LL);
  sub_1000A0E14(v1, (uint64_t)v2);
  __asm { BR              X10 }

void sub_1000A08B4(uint64_t a1)
{
  uint64_t v6 = *(void *)(v3 - 176);
  uint64_t v7 = Artwork.config(using:)(a1, v5, v4);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore18StoryCardMediaView_artworkView);
  sub_1001092E4();
  uint64_t v9 = type metadata accessor for ArtworkView(0LL);
  uint64_t v10 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v7, 2LL, 1LL, v8, v9, v10);
  sub_100011C30(v2, v3 - 232);
  uint64_t v11 = sub_1000038E8(&qword_1002ED7F0);
  uint64_t v12 = type metadata accessor for TodayCard(0LL);
  if ((swift_dynamicCast(v3 - 288, v3 - 232, v11, v12, 6LL) & 1) != 0)
  {
    uint64_t v13 = *(void *)(v3 - 288);
    uint64_t v14 = (void *)((uint64_t (*)(void))TodayCard.backgroundColor.getter)();

    if (v14 || (__int128 v16 = (void *)Artwork.backgroundColor.getter(v15)) == 0LL)
    {
      swift_release(v13);
    }

    else
    {
      uint64_t v17 = v16;
      id v18 = v16;
      ArtworkView.backgroundColor.setter(v17);
      swift_release(v13);
    }
  }

  swift_release(v6);
  swift_release(v7);
}

void sub_1000A0BF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore18StoryCardMediaView_artworkView);
  uint64_t v3 = type metadata accessor for ArtworkView(0LL);
  uint64_t v4 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v2, 1LL, v3, v4);
  double v5 = (void **)(v1 + OBJC_IVAR____TtC8AppStore18StoryCardMediaView_gridView);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore18StoryCardMediaView_gridView, v20, 0LL, 0LL);
  uint64_t v6 = (char *)*v5;
  if (!*v5) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC8AppStore8GridView_iconViews];
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v13 = *(void *)&v6[OBJC_IVAR____TtC8AppStore8GridView_iconViews];
    }
    else {
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v14 = v6;
    swift_bridgeObjectRetain(v7);
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v13);
    if (v8) {
      goto LABEL_4;
    }
  }

  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v9 = v6;
    swift_bridgeObjectRetain(v7);
    if (v8)
    {
LABEL_4:
      if (v8 < 1)
      {
        __break(1u);
        return;
      }

      for (uint64_t i = 0LL; i != v8; ++i)
      {
        if ((v7 & 0xC000000000000001LL) != 0) {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
        }
        else {
          id v11 = *(id *)(v7 + 8 * i + 32);
        }
        uint64_t v12 = v11;
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v11, 1LL, v3, v4);
      }
    }
  }

  swift_bridgeObjectRelease(v7);
LABEL_15:
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v1 + OBJC_IVAR____TtC8AppStore18StoryCardMediaView_videoContainer)
           + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
  if (Strong)
  {
    __int128 v16 = (void *)Strong;
    id v17 = *(id *)(Strong + qword_1002EBA48);
    ArtworkView.image.setter(0LL);

    uint64_t v18 = type metadata accessor for VideoView(0LL);
    uint64_t v19 = sub_100004288(&qword_1002EC3E0, type metadata accessor for VideoView, (uint64_t)&unk_1002439AC);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v16, 1LL, v18, v19);
  }

uint64_t sub_1000A0E14(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000A0E50(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000A0E84(uint64_t a1)
{
  return sub_1001EADF8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1000A0E8C()
{
  unint64_t result = qword_1002E6538;
  if (!qword_1002E6538)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002453CC, &type metadata for GridView.Config);
    atomic_store(result, (unint64_t *)&qword_1002E6538);
  }

  return result;
}

void *sub_1000A0ED0(void *a1, void *a2)
{
  return a2;
}

ValueMetadata *type metadata accessor for RebootstrapDebugAction()
{
  return &type metadata for RebootstrapDebugAction;
}

uint64_t sub_1000A0F1C()
{
  return 0x7473746F6F626552LL;
}

void sub_1000A0F3C()
{
  id v0 = [(id)objc_opt_self(ASKRebootstrapCoordinator) sharedCoordinator];
  [v0 notify];
}

id sub_1000A0F88()
{
  id v1 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v1 removeObserver:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for HttpTemplateController();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1000A10FC(void *a1)
{
  uint64_t v74 = a1;
  uint64_t v2 = sub_1000038E8(&qword_1002E6600);
  __chkstk_darwin(v2);
  id v78 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v75 = type metadata accessor for FlowPresentationHints(0LL);
  __chkstk_darwin(v75);
  uint64_t v77 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v73);
  __n128 v76 = (uint64_t *)((char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for HttpTemplateParameter(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v88 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v83 = v8;
  __chkstk_darwin(v9);
  id v11 = (char *)&v73 - v10;
  uint64_t v12 = sub_1000038E8(&qword_1002E6608);
  uint64_t v90 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v81 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000038E8((uint64_t *)&unk_1002E6610);
  __chkstk_darwin(v14);
  __int128 v16 = (unint64_t *)((char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v73 - v18);
  uint64_t v91 = v1;
  uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC8AppStore22HttpTemplateController_templateAction];
  Action.title.getter(v21);
  uint64_t v23 = v22;
  uint64_t v84 = v20;
  HttpTemplateAction.message.getter();
  uint64_t v25 = v24;
  if (!v23)
  {
    NSString v26 = 0LL;
    if (!v24) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  if (v25)
  {
LABEL_3:
    NSString v27 = String._bridgeToObjectiveC()();
    uint64_t v28 = v25;
    uint64_t v25 = v27;
    swift_bridgeObjectRelease(v28);
  }

uint64_t sub_1000A1768(__n128 a1)
{
  uint64_t v66 = type metadata accessor for OSLogger(0LL, a1);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v69 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  __chkstk_darwin(v4);
  uint64_t v70 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for HttpTemplateParameter(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for HttpTemplateSubstitutions(0LL, v8);
  uint64_t v73 = *(void *)(v11 - 8);
  uint64_t v74 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v14 = sub_1001D7780((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v15 = sub_1001D7780((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v16 = sub_1001D78A0((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v17 = sub_1001D7780((uint64_t)_swiftEmptyArrayStorage);
  HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:formBody:)(v14, v15, v16, v17);
  uint64_t v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_textFields);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_textFields, v83, 0LL, 0LL);
  uint64_t v19 = *v18;
  unint64_t v20 = (unint64_t)*v18 >> 62;
  uint64_t v75 = v1;
  __n128 v76 = v13;
  if (v20) {
    goto LABEL_16;
  }
  uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v19);
  if (v21)
  {
    while (v21 >= 1)
    {
      uint64_t v22 = 0LL;
      uint64_t v23 = *(void *)(v75 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_templateAction);
      unint64_t v77 = v19 & 0xC000000000000001LL;
      uint64_t v78 = v23;
      while (1)
      {
        id v29 = v77
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v19)
            : *(id *)(v19 + 8 * v22 + 32);
        uint64_t v30 = v29;
        uint64_t v31 = HttpTemplateAction.parameters.getter(v29);
        unint64_t v32 = (unint64_t)[v30 tag];
        if ((v32 & 0x8000000000000000LL) != 0) {
          break;
        }
        if (v32 >= *(void *)(v31 + 16)) {
          goto LABEL_15;
        }
        (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))( v10,  v31 + ((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + *(void *)(v7 + 72) * v32,
          v6);
        id v33 = objc_msgSend(v30, "text", swift_bridgeObjectRelease(v31).n128_f64[0]);
        if (v33)
        {
          uint64_t v24 = v33;
          uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
          uint64_t v27 = v26;

          HttpTemplateSubstitutions.setParameter(value:for:)(v25, v27, v10);
          __n128 v28 = swift_bridgeObjectRelease(v27);
        }

        else
        {
        }

        ++v22;
        (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v28);
        if (v21 == v22) {
          goto LABEL_20;
        }
      }

      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (v19 < 0) {
        uint64_t v34 = v19;
      }
      else {
        uint64_t v34 = v19 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v19);
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v34);
      if (!v21) {
        goto LABEL_20;
      }
    }

    __break(1u);
    swift_once(&qword_1002E0358, sub_1000171F8);
    uint64_t v39 = v66;
    uint64_t v40 = sub_10000A634(v66, (uint64_t)qword_1002F24F8);
    uint64_t v41 = v65;
    uint64_t v42 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v40, v39);
    uint64_t v43 = sub_1000038E8((uint64_t *)&unk_1002E6150);
    uint64_t v44 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v45 = swift_allocObject( v43,  ((*(unsigned __int8 *)(v44 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))
          + 2LL * *(void *)(v44 + 72),
            *(unsigned __int8 *)(v44 + 80) | 7LL);
    *(_OWORD *)(v45 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236DD0;
    LogMessage.init(stringLiteral:)(0xD000000000000025LL, 0x800000010024B100LL);
    swift_getErrorValue(v6, v81, &v79);
    uint64_t v46 = v79;
    uint64_t v47 = v80;
    v82[3] = v80;
    unint64_t v48 = sub_10000DD7C(v82);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16LL))(v48, v46, v47);
    static LogMessage.sensitive(_:)(v82);
    sub_1000077E0((uint64_t)v82, (uint64_t *)&unk_1002E3500);
    Logger.error(_:)(v45, v39, &protocol witness table for OSLogger);
    __n128 v49 = swift_bridgeObjectRelease(v45);
    uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, __n128))(v41 + 8))(v42, v39, v49);
    uint64_t v51 = HttpTemplateAction.failureAction.getter(v50);
    if (v51)
    {
      uint64_t v52 = v51;
      uint64_t v53 = v19 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_actionSender;
      uint64_t v54 = v68;
      double v55 = v67;
      uint64_t v56 = v69;
      (*(void (**)(char *, void, uint64_t))(v68 + 104))( v67,  enum case for ActionRunner.Origin.action(_:),  v69);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)( v52,  v53,  v55,  *(void *)(v19 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_objectGraph));
      swift_release(v52);
      swift_errorRelease(v6);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
      return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v76, v74);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v74);
      return swift_errorRelease(v6);
    }
  }

  else
  {
LABEL_20:
    swift_bridgeObjectRelease(v19);
    uint64_t v35 = v75;
    __n128 v36 = v70;
    static ActionMetrics.notInstrumented.getter(v37);
    uint64_t v38 = v76;
    uint64_t v57 = dispatch thunk of HttpTemplateAction.makeAction(with:body:actionMetrics:)(v76, 0LL, 0LL, v36);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v36, v72);
    uint64_t v58 = v35 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_actionSender;
    uint64_t v59 = v68;
    uint64_t v60 = v67;
    uint64_t v61 = v69;
    (*(void (**)(char *, void, uint64_t))(v68 + 104))( v67,  enum case for ActionRunner.Origin.action(_:),  v69);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)( v57,  v58,  v60,  *(void *)(v35 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_objectGraph));
    __n128 v62 = swift_release(v57);
    (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v60, v61, v62);
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v38, v74);
  }

uint64_t sub_1000A1DE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for HttpTemplateParameter.InputType(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  HttpTemplateParameter.title.getter([a1 setTag:a2]);
  if (v11)
  {
    uint64_t v12 = v11;
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
  }

  else
  {
    NSString v13 = 0LL;
  }

  [a1 setPlaceholder:v13];

  HttpTemplateParameter.inputType.getter();
  int v14 = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 88))(v10, v7);
  if (v14 == enum case for HttpTemplateParameter.InputType.text(_:))
  {
    uint64_t v15 = 0LL;
  }

  else if (v14 == enum case for HttpTemplateParameter.InputType.email(_:))
  {
    uint64_t v15 = 7LL;
  }

  else if (v14 == enum case for HttpTemplateParameter.InputType.phoneNumber(_:))
  {
    uint64_t v15 = 5LL;
  }

  else
  {
    if (v14 != enum case for HttpTemplateParameter.InputType.decimalPad(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v7, v7);
      __break(1u);
      return result;
    }

    uint64_t v15 = 8LL;
  }

  [a1 setKeyboardType:v15];
  [a1 setDelegate:a4];
  id v16 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v16 addObserver:a4 selector:"textFieldDidChange:" name:UITextFieldTextDidChangeNotification object:a1];

  unint64_t v17 = (void *)(a4 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_textFields);
  swift_beginAccess(a4 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_textFields, v24, 33LL, 0LL);
  id v18 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
  unint64_t v20 = *(void *)((*v17 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v19 = *(void *)((*v17 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v20 >= v19 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1LL);
  }
  uint64_t v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
  specialized Array._endMutation()(v21);
  return swift_endAccess(v24);
}

void sub_1000A2030(void *a1)
{
  v3._countAndFlagsBits = 0x435F4E4F49544341LL;
  v3._object = (void *)0xED00004C45434E41LL;
  v4._countAndFlagsBits = 0LL;
  v4._object = (void *)0xE000000000000000LL;
  object = localizedString(_:comment:)(v3, v4)._object;
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  uint64_t v7 = (void *)objc_opt_self(&OBJC_CLASS___UIAlertAction);
  id v8 = [v7 actionWithTitle:v6 style:0 handler:0];

  [a1 addAction:v8];
  v9._countAndFlagsBits = 0x4F5F4E4F49544341LL;
  v9._object = (void *)0xE90000000000004BLL;
  v10._countAndFlagsBits = 0LL;
  v10._object = (void *)0xE000000000000000LL;
  uint64_t v11 = localizedString(_:comment:)(v9, v10)._object;
  uint64_t v12 = swift_allocObject(&unk_1002899A8, 24LL, 7LL);
  *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  NSString v13 = v1;
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  void v19[4] = sub_1000A2844;
  uint64_t v20 = v12;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256LL;
  v19[2] = sub_10005574C;
  v19[3] = &unk_1002899C0;
  uint64_t v15 = _Block_copy(v19);
  id v16 = objc_msgSend(v7, "actionWithTitle:style:handler:", v14, 0, v15, swift_release(v20).n128_f64[0]);
  _Block_release(v15);

  [a1 addAction:v16];
  id v17 = v16;
  [a1 setPreferredAction:v17];
  id v18 = *(void **)&v13[OBJC_IVAR____TtC8AppStore22HttpTemplateController_okAction];
  *(void *)&v13[OBJC_IVAR____TtC8AppStore22HttpTemplateController_okAction] = v16;
}

void sub_1000A2228()
{
  uint64_t v30 = type metadata accessor for HttpTemplateParameter(0LL);
  uint64_t v1 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  id v29 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = v0;
  Swift::String v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_textFields);
  swift_beginAccess(v3, v31, 0LL, 0LL);
  uint64_t v28 = *v3;
  if (!((unint64_t)v28 >> 62))
  {
    uint64_t v27 = *(void *)((v28 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v28);
    if (v27) {
      goto LABEL_3;
    }
LABEL_26:
    swift_bridgeObjectRelease(v28);
    uint64_t v23 = *(void **)(v25 + OBJC_IVAR____TtC8AppStore22HttpTemplateController_okAction);
    if (v23) {
      [v23 setEnabled:1];
    }
    return;
  }

void sub_1000A24E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HttpTemplateParameter(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = HttpTemplateAction.parameters.getter(v8);
  unint64_t v12 = (unint64_t)[a1 tag];
  if ((v12 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }

  if (v12 >= *(void *)(v11 + 16))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }

  (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))( v10,  v11 + ((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
  + *(void *)(v7 + 72) * v12,
    v6);
  uint64_t v13 = swift_bridgeObjectRelease(v11);
  HttpTemplateParameter.maximumLength.getter(v13);
  if ((v14 & 1) == 0)
  {
    id v15 = [a1 text];
    if (v15)
    {
      unint64_t v16 = v15;
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = objc_msgSend(v16, "stringByReplacingCharactersInRange:withString:", a2, a3, v17);

      if (v18)
      {
        [v18 length];

        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        return;
      }

      goto LABEL_11;
    }
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t type metadata accessor for HttpTemplateController()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore22HttpTemplateController);
}

uint64_t sub_1000A2820()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000A2844(__n128 a1)
{
  return sub_1000A1768(a1);
}

uint64_t sub_1000A2864(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000A2874(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000A287C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E6610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A28C4()
{
  uint64_t v1 = type metadata accessor for HttpTemplateParameter(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1000A2938(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for HttpTemplateParameter(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1000A1DE8( a1,  *(void *)(v1 + 16),  v1 + v4,  *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

unint64_t sub_1000A2998()
{
  unint64_t result = qword_1002E6620;
  if (!qword_1002E6620)
  {
    uint64_t v1 = type metadata accessor for LargeGameCenterPlayerCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023ACB8, v1);
    atomic_store(result, (unint64_t *)&qword_1002E6620);
  }

  return result;
}

double sub_1000A29E4()
{
  uint64_t v0 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for PageGrid(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ShelfLayoutContext.contentPageGrid.getter(v8);
  double v9 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  double v11 = v10;
  unint64_t v12 = *(void (**)(char *, uint64_t, double))(v5 + 8);
  v12(v7, v4, v9);
  if (qword_1002E0C60 != -1) {
    swift_once(&qword_1002E0C60, sub_10012FD3C);
  }
  uint64_t v13 = sub_1000A2C5C(&xmmword_1002F46B8, &v34);
  uint64_t v14 = ShelfLayoutContext.contentPageGrid.getter(v13);
  double v15 = PageGrid.containerWidth.getter(v14);
  uint64_t v16 = ((uint64_t (*)(char *, uint64_t))v12)(v7, v4);
  uint64_t v17 = ShelfLayoutContext.traitCollection.getter(v16);
  id v18 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  uint64_t v19 = (char *)objc_allocWithZone(v18);
  BOOL v20 = (double *)&v19[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *BOOL v20 = v15;
  v20[1] = 1.79769313e308;
  *(void *)&v19[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v17;
  v33.receiver = v19;
  v33.super_class = v18;
  id v21 = objc_msgSendSuper2(&v33, "init");
  double v22 = *((double *)&v34 + 1);
  uint64_t v23 = v36;
  uint64_t v24 = v37;
  sub_1000112B0(v35, v36);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v23, v24);
  double v25 = AnyDimension.value(in:rounded:)(v21, v3, v23, v24);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v1 + 8);
  v26(v3, v0);
  double v27 = v22 + v25;
  uint64_t v28 = v39;
  uint64_t v29 = v40;
  sub_1000112B0(v38, v39);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v28, v29);
  double v30 = AnyDimension.value(in:rounded:)(v21, v3, v28, v29);
  v26(v3, v0);

  if (v11 >= v27 + v30) {
    double v11 = v27 + v30;
  }
  sub_1000A2C98(&v34);
  return v11;
}

_OWORD *sub_1000A2C5C(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

void *sub_1000A2C98(void *a1)
{
  return a1;
}

unint64_t sub_1000A2CD0()
{
  unint64_t result = qword_1002E6628;
  if (!qword_1002E6628)
  {
    uint64_t v1 = type metadata accessor for AchievementSummaryCardCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023AD04, v1);
    atomic_store(result, (unint64_t *)&qword_1002E6628);
  }

  return result;
}

double sub_1000A2D1C()
{
  uint64_t v0 = type metadata accessor for AchievementSummaryLayout.Metrics(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for PageGrid(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ShelfLayoutContext.contentPageGrid.getter(v8);
  double v9 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  double v11 = v10;
  unint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  if (qword_1002E0CB0 != -1) {
    swift_once(&qword_1002E0CB0, sub_100136090);
  }
  uint64_t v13 = sub_10000A634(v0, (uint64_t)qword_1002F4798);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v13, v0);
  uint64_t v15 = ShelfLayoutContext.contentPageGrid.getter(v14);
  double v16 = PageGrid.containerWidth.getter(v15);
  uint64_t v17 = ((uint64_t (*)(char *, uint64_t))v12)(v7, v4);
  uint64_t v18 = ShelfLayoutContext.traitCollection.getter(v17);
  uint64_t v19 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  BOOL v20 = (char *)objc_allocWithZone(v19);
  id v21 = (double *)&v20[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *id v21 = v16;
  v21[1] = 1.79769313e308;
  *(void *)&v20[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v18;
  v26.receiver = v20;
  v26.super_class = v19;
  id v22 = objc_msgSendSuper2(&v26, "init");
  static AchievementSummaryLayout.estimatedMeasurements(fitting:using:in:)(v3, v22, v9, v11);
  double v24 = v23;

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v24;
}

uint64_t sub_1000A2F08()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0608 != -1) {
    swift_once(&qword_1002E0608, sub_100072A48);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_10000A634(v5, (uint64_t)qword_1002F2D70);
  objc_super v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL);
  v33(v4, v6, v5);
  uint64_t v7 = (void (*)(char *))v1[13];
  unsigned int v32 = enum case for FontSource.useCase(_:);
  v7(v4);
  uint64_t v8 = type metadata accessor for StaticDimension(0LL);
  uint64_t v93 = v8;
  uint64_t v94 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v92);
  uint64_t v90 = (void *)v0;
  uint64_t v91 = &protocol witness table for FontSource;
  double v9 = sub_10000DD7C(&v89);
  uint64_t v31 = (void (*)(void *, char *, uint64_t))v1[2];
  v31(v9, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v89, 65.0);
  double v30 = (void (*)(char *, uint64_t))v1[1];
  v30(v4, v0);
  uint64_t v90 = &type metadata for Double;
  uint64_t v91 = &protocol witness table for Double;
  uint64_t v88 = &protocol witness table for Double;
  *(void *)&__int128 v89 = 0x408AE00000000000LL;
  uint64_t v87 = &type metadata for Double;
  __n128 v85 = &protocol witness table for Double;
  *(void *)&__int128 v86 = 0x4020000000000000LL;
  uint64_t v84 = &type metadata for Double;
  *(void *)&__int128 v83 = 0x406D400000000000LL;
  uint64_t v82 = &protocol witness table for Double;
  unint64_t v81 = &type metadata for Double;
  *(void *)&__int128 v80 = 0x4052C00000000000LL;
  uint64_t v79 = &protocol witness table for Double;
  uint64_t v78 = &type metadata for Double;
  *(void *)&__int128 v77 = 0x405AC00000000000LL;
  __n128 v76 = &protocol witness table for Double;
  uint64_t v75 = &type metadata for Double;
  *(void *)&__int128 v74 = 0x4060600000000000LL;
  uint64_t v73 = &protocol witness table for Double;
  uint64_t v72 = &type metadata for Double;
  *(void *)&__int128 v71 = 0x4085400000000000LL;
  uint64_t v70 = &protocol witness table for Double;
  uint64_t v69 = &type metadata for Double;
  *(void *)&__int128 v68 = 0x406F600000000000LL;
  uint64_t v67 = &protocol witness table for Double;
  uint64_t v66 = &type metadata for Double;
  uint64_t v64 = &protocol witness table for Double;
  *(void *)&__int128 v65 = 0LL;
  uint64_t v63 = &type metadata for Double;
  *(void *)&__int128 v62 = 0LL;
  if (qword_1002E0610 != -1) {
    swift_once(&qword_1002E0610, sub_100072A60);
  }
  uint64_t v10 = sub_10000A634(v5, (uint64_t)qword_1002F2D88);
  v33(v4, v10, v5);
  ((void (*)(char *, void, uint64_t))v7)(v4, v32, v0);
  uint64_t v60 = v8;
  uint64_t v61 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v59);
  uint64_t v57 = v0;
  uint64_t v58 = &protocol witness table for FontSource;
  double v11 = sub_10000DD7C(&v56);
  v31(v11, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v56, 67.0);
  v30(v4, v0);
  if (qword_1002E0618 != -1) {
    swift_once(&qword_1002E0618, sub_100072A78);
  }
  uint64_t v12 = sub_10000A634(v5, (uint64_t)qword_1002F2DA0);
  v33(v4, v12, v5);
  ((void (*)(char *, void, uint64_t))v7)(v4, v32, v0);
  uint64_t v57 = v8;
  uint64_t v58 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v56);
  uint64_t v54 = (void *)v0;
  double v55 = &protocol witness table for FontSource;
  uint64_t v13 = sub_10000DD7C(&v53);
  v31(v13, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v53, 35.0);
  v30(v4, v0);
  uint64_t v54 = &type metadata for Double;
  double v55 = &protocol witness table for Double;
  uint64_t v52 = &protocol witness table for Double;
  *(void *)&__int128 v53 = 0x4046000000000000LL;
  uint64_t v51 = &type metadata for Double;
  *(void *)&__int128 v50 = 0x4036000000000000LL;
  if (qword_1002E0620 != -1) {
    swift_once(&qword_1002E0620, sub_100072A90);
  }
  uint64_t v14 = sub_10000A634(v5, (uint64_t)qword_1002F2DB8);
  v33(v4, v14, v5);
  ((void (*)(char *, void, uint64_t))v7)(v4, v32, v0);
  uint64_t v48 = v8;
  __n128 v49 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v47);
  uint64_t v45 = v0;
  uint64_t v46 = &protocol witness table for FontSource;
  uint64_t v15 = sub_10000DD7C(&v44);
  v31(v15, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v44, 45.0);
  v30(v4, v0);
  if (qword_1002E07F0 != -1) {
    swift_once(&qword_1002E07F0, sub_1000730C8);
  }
  uint64_t v16 = sub_10000A634(v5, (uint64_t)qword_1002F3328);
  v33(v4, v16, v5);
  ((void (*)(char *, void, uint64_t))v7)(v4, v32, v0);
  uint64_t v45 = v8;
  uint64_t v46 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v44);
  uint64_t v42 = (void *)v0;
  uint64_t v43 = &protocol witness table for FontSource;
  uint64_t v17 = sub_10000DD7C(&v41);
  v31(v17, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v41, 54.0);
  v30(v4, v0);
  uint64_t v42 = &type metadata for Double;
  uint64_t v43 = &protocol witness table for Double;
  *(void *)&__int128 v41 = 0x4041000000000000LL;
  uint64_t v18 = v7;
  if (qword_1002E0638 != -1) {
    swift_once(&qword_1002E0638, sub_100072AD8);
  }
  uint64_t v19 = sub_10000A634(v5, (uint64_t)qword_1002F2E00);
  BOOL v20 = v33;
  v33(v4, v19, v5);
  uint64_t v21 = v32;
  ((void (*)(char *, void, uint64_t))v18)(v4, v32, v0);
  uint64_t v39 = v8;
  uint64_t v40 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v38);
  uint64_t v29 = (void (*)(char *, uint64_t, uint64_t))v18;
  uint64_t v36 = v0;
  uint64_t v37 = &protocol witness table for FontSource;
  id v22 = sub_10000DD7C(&v35);
  uint64_t v23 = v8;
  double v24 = v31;
  v31(v22, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v35, 67.0);
  double v25 = v30;
  v30(v4, v0);
  v20(v4, v19, v5);
  v29(v4, v21, v0);
  uint64_t v36 = v23;
  uint64_t v37 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v35);
  void v34[3] = v0;
  _OWORD v34[4] = &protocol witness table for FontSource;
  objc_super v26 = sub_10000DD7C(v34);
  v24(v26, v4, v0);
  StaticDimension.init(_:scaledLike:)(v34, 36.0);
  v25(v4, v0);
  return sub_100113C04( &v92,  &v89,  &v86,  &v83,  &v80,  &v77,  &v74,  &v71,  dbl_1002F37F0,  550.0,  165.0,  800.0,  107.0,  560.0,  337.0,  400.0,  80.0,  &v68,  &v65,  &v62,  &v59,  &v56,  &v53,  &v50,  &v47,  &v44,  &v41,  &v38,  &v35);
}

void sub_1000A3668()
{
  qword_1002F3B50 = 0xC04E000000000000LL;
}

void sub_1000A3678()
{
  qword_1002F3B58 = 0x4088C80000000000LL;
}

void sub_1000A368C()
{
  qword_1002F3B60 = 0xC060400000000000LL;
}

char *sub_1000A36A0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v9);
  uint64_t v104 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v103 = (char *)&v100 - v12;
  uint64_t v106 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v105 = *(void (**)(char *, uint64_t))(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for FontUseCase(0LL, v15);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  BOOL v20 = &v4[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_itemLayoutContext];
  uint64_t v21 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v20, 1LL, 1LL, v21);
  *(void *)&v4[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerTitleLabel] = 0LL;
  id v22 = &v4[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_logoViewTemplateURLString];
  *(void *)id v22 = 0LL;
  *((void *)v22 + 1) = 0LL;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerLogoView] = 0LL;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_logoView] = 0LL;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_iconView] = 0LL;
  uint64_t v23 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView;
  id v24 = objc_allocWithZone((Class)type metadata accessor for ProductLockupBannerView());
  double v25 = v4;
  *(void *)&v4[v23] = objc_msgSend(v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v26 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButton;
  *(void *)&v25[v26] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for OfferButton()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView] = 0LL;
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_objectGraph] = 0LL;
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerAction] = 0LL;
  uint64_t v27 = type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002E0608 != -1) {
    swift_once(&qword_1002E0608, sub_100072A48);
  }
  uint64_t v28 = sub_10000A634(v16, (uint64_t)qword_1002F2D70);
  uint64_t v101 = v17;
  uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v100(v19, v28, v16);
  uint64_t v29 = sub_100011F1C((uint64_t)v19, 2LL, 0LL, 1, 1);
  uint64_t v30 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleLabel;
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleLabel] = v29;
  uint64_t v31 = v27;
  uint64_t v32 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  objc_super v33 = v29;
  uint64_t v102 = v32;
  __int128 v34 = (void *)static UIColor.primaryText.getter();
  [v33 setTextColor:v34];

  id v35 = [*(id *)&v25[v30] layer];
  id v36 = [(id)objc_opt_self(UIColor) blackColor];
  id v37 = [v36 CGColor];

  [v35 setShadowColor:v37];
  uint64_t v38 = v31;
  id v39 = [*(id *)&v25[v30] layer];
  [v39 setShadowRadius:50.0];

  id v40 = [*(id *)&v25[v30] layer];
  LODWORD(v41) = 1.0;
  [v40 setShadowOpacity:v41];

  memset(v111, 0, 32);
  __int128 v109 = 0u;
  __int128 v110 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)( 0x656C746974LL,  0xE500000000000000LL,  v111,  &v109);
  sub_1000077E0((uint64_t)&v109, (uint64_t *)&unk_1002E3500);
  sub_1000077E0((uint64_t)v111, (uint64_t *)&unk_1002E3500);
  UIView.setAutomationSemantics(_:)(v14);
  uint64_t v42 = (void (*)(char *, uint64_t))*((void *)v105 + 1);
  uint64_t v43 = v106;
  v42(v14, v106);
  __int128 v44 = &v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleStyle];
  uint64_t v45 = *(void **)&v25[v30];
  *((void *)v44 + 3) = v38;
  *((void *)v44 + 4) = &protocol witness table for UILabel;
  *(void *)__int128 v44 = v45;
  v44[40] = 1;
  uint64_t v46 = qword_1002E0610;
  id v47 = v45;
  if (v46 != -1) {
    swift_once(&qword_1002E0610, sub_100072A60);
  }
  uint64_t v48 = sub_10000A634(v16, (uint64_t)qword_1002F2D88);
  __n128 v49 = v100;
  v100(v19, v48, v16);
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_descriptionHeaderLabel] = sub_100011F1C((uint64_t)v19, 2LL, 0LL, 1, 1);
  memset(v111, 0, 32);
  __int128 v109 = 0u;
  __int128 v110 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)( 0xD000000000000011LL,  0x800000010024B4C0LL,  v111,  &v109);
  sub_1000077E0((uint64_t)&v109, (uint64_t *)&unk_1002E3500);
  sub_1000077E0((uint64_t)v111, (uint64_t *)&unk_1002E3500);
  UIView.setAutomationSemantics(_:)(v14);
  v42(v14, v43);
  uint64_t v105 = v42;
  uint64_t v50 = (uint64_t)v19;
  uint64_t v51 = v49;
  if (qword_1002E0618 != -1) {
    swift_once(&qword_1002E0618, sub_100072A78);
  }
  uint64_t v52 = sub_10000A634(v16, (uint64_t)qword_1002F2DA0);
  v49((char *)v50, v52, v16);
  __int128 v53 = sub_100011F1C(v50, 4LL, 0LL, 1, 1);
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_descriptionTextLabel] = v53;
  [v53 setLineBreakMode:4];
  uint64_t v54 = (uint64_t)v103;
  v51(v103, v52, v16);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v54, 0LL, 1LL, v16);
  uint64_t v55 = (uint64_t)&v53[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase];
  swift_beginAccess(&v53[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase], v108, 0LL, 0LL);
  uint64_t v101 = v38;
  uint64_t v56 = (uint64_t)v104;
  sub_100013460(v55, (uint64_t)v104);
  swift_beginAccess(v55, v111, 33LL, 0LL);
  sub_10000DBBC(v54, v55);
  swift_endAccess(v111);
  sub_10001252C(v56);
  sub_1000077E0(v54, &qword_1002E25C0);
  sub_1000077E0(v56, &qword_1002E25C0);
  memset(v111, 0, 32);
  __int128 v109 = 0u;
  __int128 v110 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)( 0x7470697263736564LL,  0xEB000000006E6F69LL,  v111,  &v109);
  sub_1000077E0((uint64_t)&v109, (uint64_t *)&unk_1002E3500);
  sub_1000077E0((uint64_t)v111, (uint64_t *)&unk_1002E3500);
  UIView.setAutomationSemantics(_:)(v14);
  uint64_t v104 = v14;
  v105(v14, v106);
  if (qword_1002E0620 != -1) {
    swift_once(&qword_1002E0620, sub_100072A90);
  }
  uint64_t v57 = sub_10000A634(v16, (uint64_t)qword_1002F2DB8);
  v51((char *)v50, v57, v16);
  uint64_t v58 = sub_100011F1C(v50, 1LL, 0LL, 1, 0);
  uint64_t v59 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonSubtitleLabel;
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonSubtitleLabel] = v58;
  uint64_t v60 = v58;
  uint64_t v61 = (void *)static UIColor.secondaryText.getter(v60);
  [v60 setTextColor:v61];

  if (qword_1002E0628 != -1) {
    swift_once(&qword_1002E0628, sub_100072AA8);
  }
  uint64_t v62 = sub_10000A634(v16, (uint64_t)qword_1002F2DD0);
  v51((char *)v50, v62, v16);
  uint64_t v63 = sub_100011F1C(v50, 1LL, 0LL, 1, 0);
  uint64_t v64 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonTopLabel;
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonTopLabel] = v63;
  __int128 v65 = v63;
  uint64_t v66 = (void *)static UIColor.secondaryText.getter(v65);
  [v65 setTextColor:v66];

  id v67 = *(id *)&v25[v64];
  UILabel.alignment.setter(1LL);

  memset(v111, 0, 32);
  __int128 v109 = 0u;
  __int128 v110 = 0u;
  uint64_t v68 = (uint64_t)v104;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)( 0xD000000000000013LL,  0x800000010024B2E0LL,  v111,  &v109);
  sub_1000077E0((uint64_t)&v109, (uint64_t *)&unk_1002E3500);
  sub_1000077E0((uint64_t)v111, (uint64_t *)&unk_1002E3500);
  UIView.setAutomationSemantics(_:)(v68);
  v105((char *)v68, v106);
  id v69 = *(id *)&v25[v59];
  UILabel.alignment.setter(1LL);

  v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offersArcade] = 0;
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_standardBadges] = _swiftEmptyArrayStorage;
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_textualBadges] = _swiftEmptyArrayStorage;
  if (qword_1002E0978 != -1) {
    swift_once(&qword_1002E0978, sub_1000A2F08);
  }
  sub_1000A5E24( (uint64_t)dbl_1002F37F0,  (uint64_t)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_layoutMetrics]);
  id v70 = [objc_allocWithZone(UIView) init];
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_contentContainerView] = v70;
  id v71 = [v70 layer];
  [v71 setAllowsGroupBlending:0];

  id v72 = [objc_allocWithZone(UIView) init];
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerContainerView] = v72;
  id v73 = [objc_allocWithZone(UIView) init];
  *(void *)&v25[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_detailsContainerView] = v73;
  id v74 = [v73 layer];
  [v74 setAllowsGroupBlending:0];

  uint64_t v75 = (objc_class *)type metadata accessor for ProductLockupCollectionViewCell(0LL);
  v107.receiver = v25;
  v107.super_class = v75;
  __n128 v76 = (char *)objc_msgSendSuper2(&v107, "initWithFrame:", a1, a2, a3, a4);
  id v77 = [v76 contentView];
  [v77 setInsetsLayoutMarginsFromSafeArea:0];

  id v78 = [v76 contentView];
  objc_msgSend( v78,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  uint64_t v79 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleLabel;
  __int128 v80 = *(void **)&v76[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleLabel];
  *(void *)uint64_t v111 = 0xBFE8000000000000LL;
  memset(&v111[8], 0, 32);
  uint64_t v112 = 0LL;
  char v113 = 1;
  id v81 = v80;
  sub_100064CBC((uint64_t)v111);

  uint64_t v82 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_descriptionHeaderLabel;
  id v83 = *(id *)&v76[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_descriptionHeaderLabel];
  sub_100064CBC((uint64_t)v111);

  uint64_t v84 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_descriptionTextLabel;
  id v85 = *(id *)&v76[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_descriptionTextLabel];
  sub_100064CBC((uint64_t)v111);

  uint64_t v86 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonSubtitleLabel;
  id v87 = *(id *)&v76[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonSubtitleLabel];
  sub_100064CBC((uint64_t)v111);

  uint64_t v88 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonTopLabel;
  id v89 = *(id *)&v76[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonTopLabel];
  sub_100064CBC((uint64_t)v111);

  uint64_t v90 = *(void *)&v76[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButton];
  *(void *)&double v91 = swift_unknownObjectWeakAssign(v90 + OBJC_IVAR____TtC8AppStore11OfferButton_layoutDelegate, v76).n128_u64[0];
  uint64_t v92 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_detailsContainerView;
  uint64_t v93 = *(void **)&v76[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_detailsContainerView];
  objc_msgSend(v93, "addSubview:", *(void *)&v76[v82], v91);
  [v93 addSubview:*(void *)&v76[v84]];
  [v93 addSubview:v90];
  [v93 addSubview:*(void *)&v76[v88]];
  [v93 addSubview:*(void *)&v76[v86]];
  [v93 addSubview:*(void *)&v76[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView]];
  uint64_t v94 = *(void **)&v76[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_contentContainerView];
  [v94 addSubview:*(void *)&v76[v79]];
  [v94 addSubview:v93];
  id v95 = [v76 contentView];
  [v95 addSubview:v94];

  id v96 = [v76 contentView];
  uint64_t v97 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerContainerView;
  [v96 addSubview:*(void *)&v76[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerContainerView]];

  [*(id *)&v76[v97] setAlpha:0.0];
  id v98 = *(id *)&v76[v92];
  [v98 setOverrideUserInterfaceStyle:2];

  return v76;
}

void sub_1000A43F8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerTitleLabel);
  if (v1)
  {
    uint64_t v2 = v0;
    sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
    id v3 = v1;
    uint64_t v4 = (void *)static UIColor.primaryText.getter();
    [v3 setTextColor:v4];

    id v5 = [v3 layer];
    id v6 = [(id)objc_opt_self(UIColor) blackColor];
    id v7 = [v6 CGColor];

    [v5 setShadowColor:v7];
    id v8 = [v3 layer];
    [v8 setShadowRadius:50.0];

    id v9 = [v3 layer];
    LODWORD(v10) = 1.0;
    [v9 setShadowOpacity:v10];

    unint64_t v12 = 0xBFE8000000000000LL;
    __int128 v13 = 0u;
    __int128 v14 = 0u;
    uint64_t v15 = 0LL;
    char v16 = 1;
    id v11 = v3;
    sub_100064CBC((uint64_t)&v12);

    [*(id *)(v2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerContainerView) addSubview:v11];
  }

uint64_t sub_1000A45D0(uint64_t a1)
{
  return sub_1000A45E8(a1, &OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_standardBadges);
}

uint64_t sub_1000A45DC(uint64_t a1)
{
  return sub_1000A45E8(a1, &OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_textualBadges);
}

uint64_t sub_1000A45E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(v2 + *a2);
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      uint64_t v11 = *(void *)(v2 + *a2);
    }
    else {
      uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)(v2 + *a2));
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v11);
    uint64_t v6 = result;
    if (!result) {
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(*(void *)(v2 + *a2));
    if (!v6) {
      goto LABEL_13;
    }
  }

  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }

  for (uint64_t i = 0LL; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001LL) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
    }
    else {
      id v9 = *(id *)(v5 + 8 * i + 32);
    }
    double v10 = v9;
    [v9 removeFromSuperview];
  }

uint64_t sub_1000A478C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v52 = *(void *)(v2 - 8);
  uint64_t v53 = v2;
  __chkstk_darwin(v2);
  uint64_t v51 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = (objc_class *)type metadata accessor for ProductLockupCollectionViewCell(0LL);
  v99.receiver = v0;
  v99.super_class = v4;
  objc_msgSendSuper2(&v99, "layoutSubviews");
  uint64_t v5 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_layoutMetrics];
  swift_beginAccess(v5, &v83, 0LL, 0LL);
  sub_1000A5E24(v5, (uint64_t)v84);
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_detailsContainerView];
  id v47 = *(id *)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_contentContainerView];
  id v48 = v6;
  id v49 = *(id *)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerContainerView];
  id v7 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerTitleLabel];
  if (v7)
  {
    *((void *)&v81 + 1) = type metadata accessor for DynamicTypeLabel(0LL);
    uint64_t v82 = &protocol witness table for UILabel;
    *(void *)&__int128 v80 = v7;
  }

  else
  {
    uint64_t v82 = 0LL;
    __int128 v80 = 0u;
    __int128 v81 = 0u;
  }

  id v8 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerLogoView];
  id v50 = v7;
  if (v8)
  {
    *((void *)&v78 + 1) = type metadata accessor for ArtworkView(0LL);
    uint64_t v79 = protocol witness table for UIView;
    *(void *)&__int128 v77 = v8;
  }

  else
  {
    uint64_t v79 = 0LL;
    __int128 v77 = 0u;
    __int128 v78 = 0u;
  }

  uint64_t v9 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleStyle];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleStyle], &v75, 0LL, 0LL);
  sub_1000A5E60(v9, (uint64_t)v76);
  double v10 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_iconView];
  id v45 = v10;
  id v46 = v8;
  if (v10)
  {
    *((void *)&v73 + 1) = type metadata accessor for ArtworkView(0LL);
    id v74 = protocol witness table for UIView;
    *(void *)&__int128 v72 = v10;
  }

  else
  {
    id v74 = 0LL;
    __int128 v72 = 0u;
    __int128 v73 = 0u;
  }

  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_descriptionHeaderLabel];
  uint64_t v12 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v70 = v12;
  id v71 = protocol witness table for UIView;
  id v44 = v11;
  uint64_t v68 = protocol witness table for UIView;
  *(void *)&__int128 v69 = v11;
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_descriptionTextLabel];
  uint64_t v67 = v12;
  *(void *)&__int128 v66 = v13;
  uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView];
  uint64_t v64 = type metadata accessor for ProductLockupBannerView();
  __int128 v65 = protocol witness table for UIView;
  *(void *)&__int128 v63 = v14;
  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButton];
  uint64_t v61 = type metadata accessor for OfferButton();
  uint64_t v62 = protocol witness table for UIView;
  uint64_t v59 = &protocol witness table for UILabel;
  *(void *)&__int128 v60 = v15;
  char v16 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonSubtitleLabel];
  uint64_t v58 = v12;
  *(void *)&__int128 v57 = v16;
  id v17 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView];
  if (v17)
  {
    *((void *)&v55 + 1) = type metadata accessor for WordmarkView(0LL);
    uint64_t v56 = protocol witness table for UIView;
    *(void *)&__int128 v54 = v17;
  }

  else
  {
    uint64_t v56 = 0LL;
    __int128 v54 = 0u;
    __int128 v55 = 0u;
  }

  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonTopLabel];
  v98[8] = v12;
  v98[9] = &protocol witness table for UILabel;
  v98[5] = v18;
  uint64_t v19 = *(void *)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_standardBadges];
  id v20 = v45;
  id v21 = v44;
  id v22 = v13;
  id v23 = v14;
  id v24 = v15;
  id v25 = v16;
  id v26 = v17;
  id v27 = v18;
  swift_bridgeObjectRetain(v19);
  id v28 = v47;
  id v29 = v48;
  id v30 = v49;
  id v31 = v50;
  id v32 = v46;
  objc_super v33 = sub_1000CA4B4(v19);
  swift_bridgeObjectRelease(v19);
  uint64_t v34 = *(void *)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_textualBadges];
  uint64_t v35 = swift_bridgeObjectRetain(v34);
  uint64_t v36 = sub_1000CA6A4(v35);
  swift_bridgeObjectRelease(v34);
  memcpy(v85, v84, sizeof(v85));
  id v86 = v28;
  id v87 = v29;
  id v88 = v30;
  sub_100041A94((uint64_t)&v80, (uint64_t)&v89, &qword_1002E3980);
  sub_100041A94((uint64_t)&v77, (uint64_t)&v90, &qword_1002E6680);
  sub_1000A5E9C((uint64_t)v76, (uint64_t)&v91);
  sub_100041A94((uint64_t)&v72, (uint64_t)&v92, &qword_1002E6680);
  sub_1000243BC(&v69, (uint64_t)&v93);
  sub_1000243BC(&v66, (uint64_t)&v94);
  sub_1000243BC(&v63, (uint64_t)&v95);
  sub_1000243BC(&v60, (uint64_t)&v96);
  sub_1000243BC(&v57, (uint64_t)&v97);
  sub_100041A94((uint64_t)&v54, (uint64_t)v98, &qword_1002E6680);
  v98[10] = v33;
  v98[11] = v36;
  id v37 = [v1 contentView];
  [v37 frame];

  *(void *)&CGFloat v38 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  uint64_t v39 = v51;
  sub_100113DF0((uint64_t)v1, v51, v38, v40, v41, v42);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v39, v53);
  return sub_1000A5ED8((uint64_t)v85);
}

id sub_1000A4D10(void *a1)
{
  uint64_t v2 = v1;
  if ([a1 focusHeading] == (id)1)
  {
    id v4 = [a1 previouslyFocusedView];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButton];
      sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
      id v7 = v6;
      id v8 = v5;
      char v9 = static NSObject.== infix(_:_:)(v8, v7);

      if ((v9 & 1) != 0)
      {
        id v10 = [a1 nextFocusedView];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = v1;
          id v13 = v11;
          char v14 = static NSObject.== infix(_:_:)(v13, v12);

          if ((v14 & 1) != 0) {
            return 0LL;
          }
        }
      }
    }
  }

  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for ProductLockupCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v16, "shouldUpdateFocusInContext:", a1);
}

void sub_1000A4E90(double a1)
{
  if (qword_1002E0980 != -1) {
    swift_once(&qword_1002E0980, sub_1000A3668);
  }
  double v3 = *(double *)&qword_1002F3B50;
  double v4 = a1 - *(double *)&qword_1002F3B50;
  if (qword_1002E0988 != -1)
  {
    swift_once(&qword_1002E0988, sub_1000A3678);
    double v3 = *(double *)&qword_1002F3B50;
  }

  double v5 = fmin(v4 / (*(double *)&qword_1002F3B58 - v3), 1.0);
  if (v5 < 0.0) {
    double v6 = 0.0;
  }
  else {
    double v6 = v5;
  }
  id v7 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButton);
  double v8 = 1.0 - v6;
  objc_msgSend(v7, "setAlpha:", fmax(1.0 - v6, 0.1));
  uint64_t v33 = v1;
  char v9 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_detailsContainerView);
  id v10 = [v9 subviews];
  uint64_t v11 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
  uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0) {
      uint64_t v19 = v12;
    }
    else {
      uint64_t v19 = v12 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v12);
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v12);
    if (!v13) {
      goto LABEL_22;
    }
  }

  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v13) {
      goto LABEL_22;
    }
  }

  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }

  for (uint64_t i = 0LL; i != v13; ++i)
  {
    if ((v12 & 0xC000000000000001LL) != 0) {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
    }
    else {
      id v15 = *(id *)(v12 + 8 * i + 32);
    }
    objc_super v16 = v15;
    id v17 = v7;
    char v18 = static NSObject.== infix(_:_:)(v16, v17);

    if ((v18 & 1) == 0) {
      [v16 setAlpha:v8];
    }
  }

void sub_1000A527C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WordmarkView.Alignment(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000038E8(&qword_1002E93F0);
  __chkstk_darwin(v6);
  double v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView))
  {
    uint64_t v10 = enum case for Wordmark.arcade(_:);
    uint64_t v11 = type metadata accessor for Wordmark(0LL);
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v8, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0LL, 1LL, v11);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for WordmarkView.Alignment.center(_:),  v2);
    *(void *)&__int128 v22 = &type metadata for Double;
    *((void *)&v22 + 1) = &protocol witness table for Double;
    unint64_t v20 = 0x4038000000000000LL;
    id v13 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0LL));
    char v14 = (void *)WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v8, &v20, v5, 0.0, 0.0, 0.0, 0.0);
    id v15 = *(void **)(v1 + v9);
    *(void *)(v1 + v9) = v14;
    id v16 = v14;
    if (v15) {
      [v15 removeFromSuperview];
    }
    if (*(void *)(v1 + v9)) {
      objc_msgSend( *(id *)(v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_detailsContainerView),  "addSubview:");
    }

    id v17 = *(void **)(v1 + v9);
    if (v17)
    {
      unint64_t v20 = 0xBFE8000000000000LL;
      __int128 v21 = 0u;
      __int128 v22 = 0u;
      uint64_t v23 = 0LL;
      char v24 = 1;
      id v18 = v17;
      sub_100064CBC((uint64_t)&v20);
    }
  }

double sub_1000A5598()
{
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_logoViewTemplateURLString
                                      + 8));

  sub_1000A5DBC((void *)(v0 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleStyle));
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_standardBadges));
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_textualBadges));
  sub_1000A5DF0((void *)(v0 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_layoutMetrics));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_objectGraph));
  *(void *)&double result = swift_release(*(void *)(v0
                                               + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerAction)).n128_u64[0];
  return result;
}

id sub_1000A5720()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductLockupCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000A58E8()
{
  return type metadata accessor for ProductLockupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for ProductLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E6658;
  if (!qword_1002E6658) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductLockupCollectionViewCell);
  }
  return result;
}

void sub_1000A592C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = "\b";
    v4[6] = &unk_10023AD98;
    v4[7] = "\b";
    v4[8] = "\b";
    v4[9] = &unk_10023ADB0;
    v4[10] = "\b";
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[16] = "\b";
    v4[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[18] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[19] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[20] = &unk_10023ADC8;
    v4[21] = &unk_10023ADE0;
    v4[22] = "\b";
    v4[23] = "\b";
    swift_updateClassMetadata2(a1, 256LL, 24LL, v4, a1 + 472);
  }

void sub_1000A5A08(void *a1)
{
}

void sub_1000A5A58()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView);
  id v2 = [v1 gestureRecognizers];
  if (!v2) {
    goto LABEL_14;
  }
  double v3 = v2;
  uint64_t v4 = sub_10000DFD4(0LL, (unint64_t *)&unk_1002E6670, &OBJC_CLASS___UIGestureRecognizer_ptr);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      uint64_t v18 = v5;
    }
    else {
      uint64_t v18 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v5);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v5);
    if (v6) {
      goto LABEL_4;
    }
  }

  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v6)
    {
LABEL_4:
      if (v6 < 1) {
        goto LABEL_33;
      }
      for (uint64_t i = 0LL; i != v6; ++i)
      {
        if ((v5 & 0xC000000000000001LL) != 0) {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
        }
        else {
          id v10 = *(id *)(v5 + 8 * i + 32);
        }
        uint64_t v11 = v10;
        uint64_t v12 = type metadata accessor for TapActionGestureRecognizer();
        uint64_t v13 = swift_dynamicCastClass(v11, v12);
        if (v13)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          uint64_t v8 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
          uint64_t v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v11);
          specialized ContiguousArray._endMutation()(v9);
        }

        else
        {
        }
      }

      swift_bridgeObjectRelease(v5);
LABEL_14:
LABEL_27:
      else {
        uint64_t v19 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
      }
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v19);
      if (v14) {
        goto LABEL_16;
      }
LABEL_31:
      swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2LL);
      return;
    }
  }

  swift_bridgeObjectRelease(v5);
LABEL_15:
  uint64_t v14 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  if (!v14) {
    goto LABEL_31;
  }
LABEL_16:
  if (v14 >= 1)
  {
    for (uint64_t j = 0LL; j != v14; ++j)
    {
      else {
        id v16 = (id)_swiftEmptyArrayStorage[j + 4];
      }
      id v17 = v16;
      [v1 removeGestureRecognizer:v16];
    }

    goto LABEL_31;
  }

  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_1000A5CA0(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerAction;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerAction);
  *(void *)(v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerAction) = a1;
  swift_retain(a1);
  swift_release(v4);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_objectGraph);
  if (v5)
  {
    uint64_t v6 = *(void *)(v1 + v3);
    if (v6)
    {
      uint64_t v7 = (objc_class *)type metadata accessor for TapActionGestureRecognizer();
      uint64_t v8 = (char *)objc_allocWithZone(v7);
      *(void *)&v8[OBJC_IVAR____TtC8AppStore26TapActionGestureRecognizer_action] = v6;
      *(void *)&v8[OBJC_IVAR____TtC8AppStore26TapActionGestureRecognizer_objectGraph] = v5;
      v10.receiver = v8;
      v10.super_class = v7;
      swift_retain_n(v5, 2LL);
      swift_retain_n(v6, 2LL);
      id v9 = objc_msgSendSuper2(&v10, "initWithTarget:action:", 0, 0);
      objc_msgSend(v9, "addTarget:action:", v9, "execute", v10.receiver, v10.super_class);
      [*(id *)(v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView) addGestureRecognizer:v9];
      swift_release(v5);
      swift_release(v6);
    }
  }

void *sub_1000A5DBC(void *a1)
{
  return a1;
}

void *sub_1000A5DF0(void *a1)
{
  return a1;
}

uint64_t sub_1000A5E24(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000A5E60(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000A5E9C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000A5ED8(uint64_t a1)
{
  return a1;
}

char *sub_1000A5F0C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v62 = a2;
  uint64_t v4 = type metadata accessor for OSLogger(0LL, a3);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for StoreTab.Identifier(0LL);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  __chkstk_darwin(v8);
  uint64_t v56 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000038E8(&qword_1002E6600);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000038E8(&qword_1002EE960);
  __chkstk_darwin(v15);
  id v17 = (uint64_t *)((char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v18 = type metadata accessor for FlowDestination(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  __int128 v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = a1;
  sub_1000D0D3C(v17);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1LL, v18) == 1)
  {
    sub_1000077E0((uint64_t)v17, &qword_1002EE960);
    if (qword_1002E0358 != -1) {
      swift_once(&qword_1002E0358, sub_1000171F8);
    }
    uint64_t v22 = sub_10000A634(v4, (uint64_t)qword_1002F24F8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v22, v4);
    uint64_t v23 = sub_1000038E8((uint64_t *)&unk_1002E6150);
    uint64_t v24 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v25 = swift_allocObject( v23,  ((*(unsigned __int8 *)(v24 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))
          + 2LL * *(void *)(v24 + 72),
            *(unsigned __int8 *)(v24 + 80) | 7LL);
    *(_OWORD *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236DD0;
    LogMessage.init(stringLiteral:)(0xD000000000000012LL, 0x800000010024B4E0LL);
    uint64_t v27 = type metadata accessor for StoreTab(0LL, v26);
    *((void *)&v67 + 1) = v27;
    id v28 = sub_10000DD7C(&v66);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16LL))(v28, v63, v27);
    static LogMessage.safe(_:)(&v66);
    sub_1000077E0((uint64_t)&v66, (uint64_t *)&unk_1002E3500);
    Logger.error(_:)(v25, v4, &protocol witness table for OSLogger);
    __n128 v29 = swift_bridgeObjectRelease(v25);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v29);
    return 0LL;
  }

  sub_100041A50((uint64_t)v17, (uint64_t)v21);
  uint64_t v31 = type metadata accessor for ReferrerData(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v14, 1LL, 1LL, v31);
  uint64_t v30 = sub_1001E1EF8(v21, 0LL, 0LL, (uint64_t)v14);
  sub_1000077E0((uint64_t)v14, &qword_1002E6600);
  uint64_t v32 = type metadata accessor for SearchViewController();
  if (swift_dynamicCastClass(v30, v32))
  {
LABEL_8:
    uint64_t v52 = (void *)sub_1000D140C();
    if (v52)
    {
      uint64_t v53 = v52;
      id v54 = [v52 title];
      [v30 setTitle:v54];

      [v30 setTabBarItem:v53];
    }

    sub_100011CF0((uint64_t)v21);
    return v30;
  }

  id v33 = objc_allocWithZone((Class)type metadata accessor for FlowNavigationController());
  CGAffineTransform v34 = v30;
  id v35 = [v33 init];
  uint64_t v36 = (objc_class *)type metadata accessor for NavigationFlowController(0LL);
  id v37 = (char *)objc_allocWithZone(v36);
  swift_unknownObjectWeakInit(&v37[qword_1002E64A8], 0LL);
  swift_unknownObjectWeakAssign(v38, v35);
  uint64_t v39 = v62;
  *(void *)&v37[qword_1002E64B0] = v62;
  CGFloat v40 = (char *)v35;
  swift_retain(v39);
  CGFloat v41 = (objc_class *)sub_1000038E8(&qword_1002E6688);
  v65.receiver = v37;
  v65.super_class = v41;
  id v42 = objc_msgSendSuper2(&v65, "init");
  [v40 setDelegate:v42];

  *((void *)&v67 + 1) = v36;
  uint64_t v68 = &off_1002898A8;
  *(void *)&__int128 v66 = v42;
  uint64_t v43 = (uint64_t)&v40[OBJC_IVAR____TtC8AppStore24FlowNavigationController_flowController];
  swift_beginAccess(&v40[OBJC_IVAR____TtC8AppStore24FlowNavigationController_flowController], v64, 33LL, 0LL);
  sub_1000A64E8((uint64_t)&v66, v43);
  objc_msgSend(v40, "pushViewController:animated:", v34, 0, swift_endAccess(v64).n128_f64[0]);

  uint64_t v30 = v40;
  uint64_t result = (char *)[v30 view];
  if (result)
  {
    id v45 = result;
    id v46 = v56;
    uint64_t v47 = StoreTab.identifier.getter(result);
    uint64_t v48 = StoreTab.Identifier.rawValue.getter(v47);
    uint64_t v50 = v49;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v46, v58);
    __int128 v66 = 0u;
    __int128 v67 = 0u;
    uint64_t v51 = v59;
    static AutomationSemantics.page(name:id:)(v48, v50, &v66);
    swift_bridgeObjectRelease(v50);
    sub_1000077E0((uint64_t)&v66, (uint64_t *)&unk_1002E3500);
    UIView.setAutomationSemantics(_:)(v51);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v51, v61);
    goto LABEL_8;
  }

  __break(1u);
  return result;
}

uint64_t sub_1000A64E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E5E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A6530()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = &type metadata for Double;
  uint64_t v16 = &protocol witness table for Double;
  *(void *)&__int128 v14 = 0x4044000000000000LL;
  if (qword_1002E0790 != -1) {
    swift_once(&qword_1002E0790, sub_100072F94);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_10000A634(v5, (uint64_t)qword_1002F3208);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(v4, v6, v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for FontSource.useCase(_:), v0);
  uint64_t v12 = type metadata accessor for StaticDimension(0LL);
  uint64_t v13 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v11);
  v10[3] = v0;
  v10[4] = &protocol witness table for FontSource;
  uint64_t v7 = sub_10000DD7C(v10);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v7, v4, v0);
  StaticDimension.init(_:scaledLike:)(v10, 60.0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1000243BC(&v14, (uint64_t)&unk_1002E6690);
  return sub_1000243BC(&v11, (uint64_t)&unk_1002E66B8);
}

uint64_t sub_1000A66A8(uint64_t a1)
{
  return sub_1000A66F0(0.59889, 0.65122, a1, qword_1002E66E0);
}

uint64_t sub_1000A66CC(uint64_t a1)
{
  return sub_1000A66F0(0.4, 0.75044, a1, qword_1002E66F8);
}

uint64_t sub_1000A66F0(Swift::Float a1, Swift::Float a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  sub_10000DC04(v7, a4);
  sub_10000A634(v7, (uint64_t)a4);
  uint64_t v8 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, a1).super.isa;
  Class v10 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, a2).super.isa;
  v13[0] = sub_1000038E8(&qword_1002E1E40);
  v13[1] = v8;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023AE80, v13);
  Class v14 = isa;
  Class v15 = v10;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v15, &v14, v8);
}

char *sub_1000A67D8(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v9 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v9);
  __int128 v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  Class v14 = (char *)&v49 - v13;
  uint64_t v16 = type metadata accessor for FontUseCase(0LL, v15);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = &v4[OBJC_IVAR____TtC8AppStore17AccountSignInView_didSelectHandler];
  type metadata accessor for BundleImage(0LL);
  *(void *)uint64_t v20 = 0LL;
  *((void *)v20 + 1) = 0LL;
  __int128 v21 = v4;
  uint64_t v22 = (void *)static BundleImage.load(_:bundle:with:compatibleWith:)( 0x63496E496E676953LL,  0xEA00000000006E6FLL,  0LL,  0LL,  0LL);
  id v23 = [v22 imageWithRenderingMode:2];

  id v24 = [objc_allocWithZone(UIImageView) initWithImage:v23];
  *(void *)&v21[OBJC_IVAR____TtC8AppStore17AccountSignInView_iconView] = v24;
  uint64_t v25 = type metadata accessor for DynamicTypeButton(0LL);
  id v26 = [(id)swift_getObjCClassFromMetadata(v25) buttonWithType:1];
  *(void *)&v21[OBJC_IVAR____TtC8AppStore17AccountSignInView_signInButton] = v26;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002E0790 != -1) {
    swift_once(&qword_1002E0790, sub_100072F94);
  }
  uint64_t v27 = sub_10000A634(v16, (uint64_t)qword_1002F3208);
  id v28 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v28(v19, v27, v16);
  *(void *)&v21[OBJC_IVAR____TtC8AppStore17AccountSignInView_subTextLabel] = sub_100011F1C( (uint64_t)v19,  0LL,  0LL,  1,  0);

  v53.receiver = v21;
  v53.super_class = ObjectType;
  __n128 v29 = (char *)objc_msgSendSuper2(&v53, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v30 = *(void *)&v29[OBJC_IVAR____TtC8AppStore17AccountSignInView_iconView];
  uint64_t v31 = v29;
  [v31 addSubview:v30];
  uint64_t v32 = OBJC_IVAR____TtC8AppStore17AccountSignInView_signInButton;
  uint64_t v33 = *(void *)&v31[OBJC_IVAR____TtC8AppStore17AccountSignInView_signInButton];
  if (qword_1002E0788 != -1) {
    swift_once(&qword_1002E0788, sub_100072F7C);
  }
  uint64_t v34 = sub_10000A634(v16, (uint64_t)qword_1002F31F0);
  v28(v14, v34, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0LL, 1LL, v16);
  uint64_t v35 = v33 + OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase;
  swift_beginAccess(v33 + OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase, v52, 0LL, 0LL);
  sub_100013460(v35, (uint64_t)v11);
  swift_beginAccess(v35, v51, 33LL, 0LL);
  sub_10000DBBC((uint64_t)v14, v35);
  swift_endAccess(v51);
  sub_10010EA18((uint64_t)v11);
  sub_100064C78((uint64_t)v14);
  sub_100064C78((uint64_t)v11);
  id v36 = *(id *)&v31[v32];
  v37._object = (void *)0x800000010024B580LL;
  v37._countAndFlagsBits = 0xD000000000000018LL;
  v38._countAndFlagsBits = 0LL;
  v38._object = (void *)0xE000000000000000LL;
  object = localizedString(_:comment:)(v37, v38)._object;
  NSString v40 = String._bridgeToObjectiveC()();
  objc_msgSend(v36, "setTitle:forState:", v40, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  CGFloat v41 = *(void **)&v31[v32];
  [v41 addTarget:v31 action:"didSelectSignIn:" forControlEvents:0x2000];
  [v31 addSubview:v41];
  uint64_t v42 = OBJC_IVAR____TtC8AppStore17AccountSignInView_subTextLabel;
  id v43 = *(id *)&v31[OBJC_IVAR____TtC8AppStore17AccountSignInView_subTextLabel];
  v44._countAndFlagsBits = 0xD00000000000001ALL;
  v44._object = (void *)0x800000010024B5A0LL;
  v45._countAndFlagsBits = 0LL;
  v45._object = (void *)0xE000000000000000LL;
  id v46 = localizedString(_:comment:)(v44, v45)._object;
  NSString v47 = String._bridgeToObjectiveC()();
  objc_msgSend(v43, "setText:", v47, swift_bridgeObjectRelease(v46).n128_f64[0]);

  [v31 addSubview:*(void *)&v31[v42]];
  sub_1000A6C68();

  return v31;
}

void sub_1000A6C68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore17AccountSignInView_iconView);
  if (qword_1002E09A0 != -1) {
    swift_once(&qword_1002E09A0, sub_1000A66A8);
  }
  uint64_t v3 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  sub_10000A634(v3, (uint64_t)qword_1002E66E0);
  uint64_t v7 = v0;
  Conditional.evaluate(with:)(&v8, &v7, v3);
  uint64_t v4 = v8;
  [v2 setTintColor:v8];

  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore17AccountSignInView_subTextLabel);
  if (qword_1002E09A8 != -1) {
    swift_once(&qword_1002E09A8, sub_1000A66CC);
  }
  sub_10000A634(v3, (uint64_t)qword_1002E66F8);
  uint64_t v7 = v1;
  Conditional.evaluate(with:)(&v8, &v7, v3);
  uint64_t v6 = v8;
  [v5 setTextColor:v8];
}

void *sub_1000A6E28()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v41.receiver = v0;
  v41.super_class = ObjectType;
  objc_msgSendSuper2(&v41, "layoutSubviews", v5);
  if (qword_1002E0998 != -1) {
    swift_once(&qword_1002E0998, sub_1000A6530);
  }
  sub_10004D8F0((uint64_t)&unk_1002E6690, (uint64_t)v33);
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC8AppStore17AccountSignInView_iconView];
  uint64_t v31 = sub_10000DFD4(0LL, (unint64_t *)&unk_1002E6760, &OBJC_CLASS___UIImageView_ptr);
  uint64_t v32 = protocol witness table for UIView;
  *(void *)&__int128 v30 = v8;
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC8AppStore17AccountSignInView_signInButton];
  id v10 = v8;
  [v9 transform];
  v42[0] = v34;
  v42[1] = v35;
  v42[2] = v36;
  v43[0] = 0x3FF0000000000000LL;
  v43[1] = 0LL;
  v43[2] = 0LL;
  v43[3] = 0x3FF0000000000000LL;
  v43[4] = 0LL;
  v43[5] = 0LL;
  if ((static CGAffineTransform.== infix(_:_:)(v42, v43) & 1) != 0)
  {
    uint64_t v28 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
    __n128 v29 = protocol witness table for UIView;
    *(void *)&__int128 v27 = v9;
    id v11 = v9;
  }

  else
  {
    UIView.withUntransformedFrame.getter(&v27);
  }

  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore17AccountSignInView_subTextLabel);
  v40[8] = type metadata accessor for DynamicTypeLabel(0LL);
  v40[9] = &protocol witness table for UILabel;
  v40[5] = v12;
  __int128 v36 = v33[2];
  __int128 v37 = v33[3];
  __int128 v38 = v33[4];
  __int128 v34 = v33[0];
  __int128 v35 = v33[1];
  sub_1000243BC(&v30, (uint64_t)&v39);
  sub_1000243BC(&v27, (uint64_t)v40);
  id v13 = v12;
  *(void *)&CGFloat v14 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType).n128_u64[0];
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  double v21 = sub_10004E0C0(v1, &v34, v17, v19);
  double v23 = v22;
  v44.origin.x = v14;
  v44.origin.y = v16;
  v44.size.width = v18;
  v44.size.height = v20;
  CGFloat v24 = CGRectGetMidX(v44) - v21 * 0.5;
  v45.origin.x = v14;
  v45.origin.y = v16;
  v45.size.width = v18;
  v45.size.height = v20;
  CGFloat MidY = CGRectGetMidY(v45);
  sub_10004D9B4(v1, (uint64_t)v7, v24, MidY - v23 * 0.5, v21, v23);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return sub_1000A74EC(&v34);
}

double sub_1000A7110(uint64_t a1, double a2, double a3)
{
  if (qword_1002E0998 != -1) {
    swift_once(&qword_1002E0998, sub_1000A6530);
  }
  sub_10004D8F0((uint64_t)&unk_1002E6690, (uint64_t)v15);
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore17AccountSignInView_iconView);
  v15[13] = sub_10000DFD4(0LL, (unint64_t *)&unk_1002E6760, &OBJC_CLASS___UIImageView_ptr);
  v15[14] = protocol witness table for UIView;
  v15[10] = v7;
  uint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore17AccountSignInView_signInButton);
  v15[18] = type metadata accessor for DynamicTypeButton(0LL);
  v15[19] = protocol witness table for UIView;
  v15[15] = v8;
  uint64_t v9 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore17AccountSignInView_subTextLabel);
  v15[23] = type metadata accessor for DynamicTypeLabel(0LL);
  v15[24] = &protocol witness table for UILabel;
  v15[20] = v9;
  swift_getObjectType(a1);
  id v10 = v7;
  id v11 = v8;
  id v12 = v9;
  double v13 = sub_10004E0C0(a1, v15, a2, a3);
  sub_1000A74EC(v15);
  return v13;
}

uint64_t type metadata accessor for AccountSignInView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore17AccountSignInView);
}

uint64_t sub_1000A74B8()
{
  return 16LL;
}

__n128 sub_1000A74C4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A74D4()
{
  return 16LL;
}

__n128 sub_1000A74E0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void *sub_1000A74EC(void *a1)
{
  return a1;
}

void sub_1000A7520(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for CornerStyle(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView;
  id v10 = *(void **)&v2[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView];
  if (v10)
  {
    id v11 = *(id *)&v2[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView];
  }

  else
  {
    type metadata accessor for ArtworkView(0LL);
    id v12 = (void *)static ArtworkView.plainArtworkView.getter();
    id v13 = [(id)objc_opt_self(UIColor) clearColor];
    ArtworkView.backgroundColor.setter(v13);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for CornerStyle.arc(_:), v5);
    ArtworkView.setCorner(radius:style:)(v8, 0.0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    CGFloat v14 = *(void **)&v3[v9];
    id v15 = v12;
    if (v14)
    {
      [v14 removeFromSuperview];
      CGFloat v16 = *(void **)&v3[v9];
    }

    else
    {
      CGFloat v16 = 0LL;
    }

    *(void *)&v3[v9] = v12;
    id v11 = v12;

    double v17 = *(void **)&v3[v9];
    if (v17)
    {
      id v18 = v17;
      id v19 = [v3 contentView];
      [v19 addSubview:v18];
    }

    else
    {
    }
  }

  uint64_t v20 = type metadata accessor for ArtworkView(0LL);
  uint64_t v21 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  id v22 = v10;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v11, a2 & 1, v20, v21);
}

uint64_t sub_1000A7700()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v30 = *(void *)(v0 - 8);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v1);
  uint64_t v28 = (char *)v27 - v4;
  uint64_t v5 = sub_1000038E8(&qword_1002E6810);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000038E8(&qword_1002E6808);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ActionLayout.Metrics(0LL);
  sub_10000DC04(v12, qword_1002E6780);
  v27[1] = sub_10000A634(v12, (uint64_t)qword_1002E6780);
  __int128 v40 = xmmword_10023AED0;
  uint64_t v13 = sub_1000038E8(&qword_1002E1E40);
  type metadata accessor for CGSize(0LL);
  uint64_t v15 = v14;
  __n128 v29 = v11;
  Conditional<>.init(value:)(&v40, v13, v14);
  __int128 v40 = xmmword_10023AEE0;
  Conditional<>.init(value:)(&v40, v13, v15);
  CGFloat v16 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
  uint64_t v31 = v7;
  v16(v7, 0LL, 1LL, v8);
  objc_super v41 = &type metadata for Double;
  uint64_t v42 = &protocol witness table for Double;
  void v39[4] = &protocol witness table for Double;
  *(void *)&__int128 v40 = 0x4034000000000000LL;
  v39[3] = &type metadata for Double;
  v39[0] = 0x405A400000000000LL;
  void v38[3] = &type metadata for Double;
  v38[4] = &protocol witness table for Double;
  v38[0] = 0LL;
  if (qword_1002E0580 != -1) {
    swift_once(&qword_1002E0580, sub_100072758);
  }
  uint64_t v18 = type metadata accessor for FontUseCase(0LL, v17);
  uint64_t v19 = sub_10000A634(v18, (uint64_t)qword_1002F2BF0);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16LL);
  uint64_t v21 = v28;
  v20(v28, v19, v18);
  uint64_t v22 = enum case for FontSource.useCase(_:);
  uint64_t v23 = v30;
  CGFloat v24 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
  v24(v21, enum case for FontSource.useCase(_:), v0);
  v20(v3, v19, v18);
  v24(v3, v22, v0);
  void v37[3] = type metadata accessor for StaticDimension(0LL);
  v37[4] = &protocol witness table for StaticDimension;
  sub_10000DD7C(v37);
  __int128 v35 = (void *)v0;
  __int128 v36 = &protocol witness table for FontSource;
  uint64_t v25 = sub_10000DD7C(v34);
  (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v25, v3, v0);
  StaticDimension.init(_:scaledLike:)(v34, 35.0);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v0);
  __int128 v36 = &protocol witness table for Double;
  __int128 v35 = &type metadata for Double;
  _OWORD v33[4] = &protocol witness table for Double;
  v34[0] = 0LL;
  v33[3] = &type metadata for Double;
  v33[0] = 0x3FF0000000000000LL;
  v32[3] = type metadata accessor for ZeroDimension(0LL);
  void v32[4] = &protocol witness table for ZeroDimension;
  sub_10000DD7C(v32);
  static ZeroDimension.zero.getter();
  return ActionLayout.Metrics.init(artworkSize:maxArtworkSize:artworkMargin:artworkLeadingMargin:labelWithArtworkLeadingMargin:accessoryMargin:labelFontSource:labelVerticalMargin:searchAdButtonTopMargin:searchAdButtonLeadingMargin:shouldLabelFitAvailableWidth:)( v29,  v31,  &v40,  v32,  v39,  v38,  v21,  v37,  v34,  v33,  1);
}

uint64_t sub_1000A7A90()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for ActionLayout.Metrics(0LL);
  sub_10000DC04(v4, qword_1002E6798);
  uint64_t v5 = sub_10000A634(v4, (uint64_t)qword_1002E6798);
  if (qword_1002E09B0 != -1) {
    swift_once(&qword_1002E09B0, sub_1000A7700);
  }
  uint64_t v6 = sub_10000A634(v4, (uint64_t)qword_1002E6780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(v5, v6, v4);
  if (qword_1002E0580 != -1) {
    swift_once(&qword_1002E0580, sub_100072758);
  }
  uint64_t v8 = type metadata accessor for FontUseCase(0LL, v7);
  uint64_t v9 = sub_10000A634(v8, (uint64_t)qword_1002F2BF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(v3, v9, v8);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  void v13[3] = type metadata accessor for StaticDimension(0LL);
  _OWORD v13[4] = &protocol witness table for StaticDimension;
  sub_10000DD7C(v13);
  v12[3] = v0;
  v12[4] = &protocol witness table for FontSource;
  uint64_t v10 = sub_10000DD7C(v12);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v10, v3, v0);
  StaticDimension.init(_:scaledLike:)(v12, 20.0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return ActionLayout.Metrics.labelVerticalMargin.setter(v13);
}

double sub_1000A7C58()
{
  double result = 0.0;
  xmmword_1002F3C30 = xmmword_10023AEF0;
  *(_OWORD *)&qword_1002F3C40 = xmmword_10023AEF0;
  return result;
}

char *sub_1000A7C70(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v62 = type metadata accessor for CornerStyle(0LL);
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = &v5[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_itemLayoutContext];
  uint64_t v19 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v18, 1LL, 1LL, v19);
  v5[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_configuration] = 0;
  uint64_t v20 = OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_textLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v21 = qword_1002E0580;
  uint64_t v22 = v5;
  if (v21 != -1) {
    swift_once(&qword_1002E0580, sub_100072758);
  }
  uint64_t v23 = sub_10000A634(v14, (uint64_t)qword_1002F2BF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v23, v14);
  *(void *)&v5[v20] = sub_100011F1C((uint64_t)v17, 1LL, 0LL, 1, 1);
  v22[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_hasCenteredText] = 0;
  *(void *)&v22[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView] = 0LL;
  v22[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_isShowingSeeAll] = 0;
  CGFloat v24 = &v22[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_artworkSize];
  *(void *)CGFloat v24 = 0LL;
  *((void *)v24 + 1) = 0LL;
  v24[16] = 1;

  v65.receiver = v22;
  v65.super_class = ObjectType;
  id v25 = objc_msgSendSuper2(&v65, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v26 = qword_1002E09C0;
  __int128 v27 = (char *)v25;
  if (v26 != -1) {
    swift_once(&qword_1002E09C0, sub_1000A7C58);
  }
  objc_msgSend(v27, "setLayoutMargins:", xmmword_1002F3C30, *(double *)&qword_1002F3C40, unk_1002F3C48, v61, v62);
  uint64_t v28 = *(void **)&v27[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_textLabel];
  [v28 setEnablesMarqueeWhenAncestorFocused:1];
  id v29 = [v27 contentView];
  [v29 addSubview:v28];

  id v30 = [v27 contentView];
  id v31 = [v30 layer];

  if (qword_1002E0F68 != -1) {
    swift_once(&qword_1002E0F68, sub_10017CBB0);
  }
  [v31 setBorderWidth:*(double *)&qword_1002F5280];

  uint64_t v32 = v61;
  uint64_t v33 = v62;
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v12, enum case for CornerStyle.continuous(_:), v62);
  if (v27[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_configuration] == 1) {
    double v34 = 16.0;
  }
  else {
    double v34 = 12.0;
  }
  id v35 = [v27 contentView];
  CornerStyle.apply(withRadius:to:)(v35, v34);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
  __int128 v36 = &v27[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  __int128 v37 = *(_OWORD *)&v27[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 16];
  v71[0] = *(_OWORD *)&v27[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  v71[1] = v37;
  char v72 = v27[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)__int128 v36 = 0x4020000000000000LL;
  *((void *)v36 + 1) = 0x4039000000000000LL;
  v36[16] = 0;
  *((void *)v36 + 3) = 0LL;
  v36[32] = 1;
  __int128 v38 = v27;
  sub_100068D40((uint64_t)v71, v39, v40);

  v66[0] = xmmword_100236D50;
  v66[1] = xmmword_100236D60;
  char v67 = 0;
  uint64_t v68 = 0LL;
  uint64_t v69 = 0LL;
  char v70 = 1;
  objc_super v41 = v38;
  sub_1000673E8(v66);

  uint64_t v42 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v43 = v41;
  id v44 = [v42 blackColor];
  id v45 = [v44 CGColor];

  id v46 = &v43[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  NSString v47 = *(void **)&v43[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  uint64_t v48 = *(void **)&v43[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 8];
  uint64_t v49 = *(void **)&v43[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 16];
  *(void *)id v46 = v45;
  *(int64x2_t *)(v46 + 8) = vdupq_n_s64(1uLL);
  id v50 = v47;
  sub_10000B3E0(v48);
  sub_10000B3E0(v49);
  id v51 = v45;

  sub_10000B3F0(v48);
  sub_10000B3F0(v49);
  sub_100068E94(v47, v48, (unint64_t)v49);

  sub_10000B3F0(v48);
  sub_10000B3F0(v49);

  uint64_t v52 = &v43[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v53 = *(_DWORD *)&v43[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v51) = *(_DWORD *)&v43[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v48) = v43[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v49) = v43[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)uint64_t v52 = 1048576000;
  *((_DWORD *)v52 + 1) = 1051931443;
  v52[8] = 0;
  uint64_t v54 = *((unsigned int *)v52 + 3);
  *((_DWORD *)v52 + 3) = 0;
  v52[16] = 1;
  uint64_t v55 = v43;
  char v64 = (char)v48;
  char v63 = (char)v49;
  v56.n128_u32[0] = v53;
  sub_100068FFC((int)v51, v48 | (unint64_t)(v54 << 32), (char)v49, v56);

  char v57 = v55[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled];
  v55[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v57 & 1) == 0)
  {
    char v58 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v55) + 0x98LL))();
    uint64_t v59 = v55;
    sub_10006753C(v58);
  }

  return v55;
}

id sub_1000A8260(id result)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_hasCenteredText);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_hasCenteredText) = (_BYTE)result;
  if (v2 != (result & 1))
  {
    uint64_t v3 = *(_BYTE **)(v1 + OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_textLabel);
    if ((result & 1) != 0)
    {
      return [*(id *)(v1 + OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_textLabel) setTextAlignment:1];
    }

    else
    {
      int v4 = v3[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_directionalTextAlignment];
      v3[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_directionalTextAlignment] = 1;
      if (v4 != 1)
      {
        id v5 = [v3 traitCollection];
        char v6 = UITraitCollection.prefersRightToLeftLayouts.getter();

        if ((v6 & 1) != 0) {
          uint64_t v7 = 2LL;
        }
        else {
          uint64_t v7 = 0LL;
        }
        v8.receiver = v3;
        v8.super_class = (Class)type metadata accessor for DynamicTypeLabel(0LL);
        return objc_msgSendSuper2(&v8, "setTextAlignment:", v7);
      }
    }
  }

  return result;
}

void sub_1000A834C(char a1)
{
  int v2 = v1;
  uint64_t v4 = type metadata accessor for CornerStyle(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView;
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView];
  if (!v9) {
    goto LABEL_5;
  }
  uint64_t v10 = *(void **)&v1[v8];
  if (v10)
  {
    id v11 = *(id *)&v1[v8];
  }

  else
  {
LABEL_5:
    type metadata accessor for ArtworkView(0LL);
    uint64_t v12 = (void *)static ArtworkView.plainArtworkView.getter();
    id v13 = [(id)objc_opt_self(UIColor) clearColor];
    ArtworkView.backgroundColor.setter(v13);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for CornerStyle.arc(_:), v4);
    ArtworkView.setCorner(radius:style:)(v7, 0.0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v14 = *(void **)&v2[v8];
    id v15 = v12;
    if (v14)
    {
      [v14 removeFromSuperview];
      uint64_t v14 = *(void **)&v2[v8];
    }

    *(void *)&v2[v8] = v12;
    id v11 = v12;

    uint64_t v16 = *(void **)&v2[v8];
    if (v16)
    {
      id v17 = v16;
      id v18 = [v2 contentView];
      [v18 addSubview:v17];
    }

    else
    {
    }

    uint64_t v10 = 0LL;
  }

  id v19 = v10;
  [v11 setHidden:a1 & 1];
}

id sub_1000A8510()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CornerStyle(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView;
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView];
  if (v7)
  {
    id v8 = *(id *)&v0[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView];
  }

  else
  {
    type metadata accessor for ArtworkView(0LL);
    uint64_t v9 = (void *)static ArtworkView.plainArtworkView.getter();
    id v10 = [(id)objc_opt_self(UIColor) clearColor];
    ArtworkView.backgroundColor.setter(v10);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for CornerStyle.arc(_:), v2);
    ArtworkView.setCorner(radius:style:)(v5, 0.0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    id v11 = *(void **)&v1[v6];
    id v12 = v9;
    if (v11)
    {
      [v11 removeFromSuperview];
      id v11 = *(void **)&v1[v6];
    }

    *(void *)&v1[v6] = v9;
    id v8 = v9;

    id v13 = *(void **)&v1[v6];
    if (v13)
    {
      id v14 = v13;
      id v15 = [v1 contentView];
      [v15 addSubview:v14];
    }

    else
    {
    }
  }

  id v16 = v7;
  return v8;
}

uint64_t sub_1000A876C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v39 = type metadata accessor for LayoutRect(0LL);
  uint64_t v38 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = type metadata accessor for ActionLayout(0LL);
  uint64_t v40 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for ActionLayout.Metrics(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  id v12 = (char *)&v36 - v11;
  *(void *)&double v14 = __chkstk_darwin(v13).n128_u64[0];
  id v16 = (char *)&v36 - v15;
  v50.receiver = v0;
  v50.super_class = ObjectType;
  objc_msgSendSuper2(&v50, "layoutSubviews", v14);
  BOOL v17 = v0[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_configuration] == 1;
  __int128 v37 = v3;
  if (v17)
  {
    if (qword_1002E09B8 != -1) {
      swift_once(&qword_1002E09B8, sub_1000A7A90);
    }
    uint64_t v18 = qword_1002E6798;
  }

  else
  {
    if (qword_1002E09B0 != -1) {
      swift_once(&qword_1002E09B0, sub_1000A7700);
    }
    uint64_t v18 = qword_1002E6780;
  }

  uint64_t v19 = sub_10000A634(v6, (uint64_t)v18);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v20(v12, v19, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v12, v6);
  uint64_t v21 = OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView;
  uint64_t v22 = *(void **)&v0[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView];
  if (v22)
  {
    id v23 = v22;
    sub_1000A8B68();
    [v23 frame];
    objc_msgSend(v23, "setFrame:");
  }

  v20(v9, (uint64_t)v16, v6);
  CGFloat v24 = *(void **)&v0[v21];
  if (v24 && ([v24 isHidden] & 1) == 0 && (id v25 = *(void **)&v0[v21]) != 0)
  {
    *((void *)&v48 + 1) = type metadata accessor for ArtworkView(0LL);
    uint64_t v49 = protocol witness table for UIView;
    *(void *)&__int128 v47 = v25;
    id v26 = v25;
  }

  else
  {
    uint64_t v49 = 0LL;
    __int128 v47 = 0u;
    __int128 v48 = 0u;
  }

  uint64_t v27 = v39;
  uint64_t v28 = v38;
  id v29 = v37;
  id v30 = *(void **)&v0[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_textLabel];
  v46[3] = type metadata accessor for DynamicTypeLabel(0LL);
  v46[4] = &protocol witness table for UILabel;
  uint64_t v45 = 0LL;
  v46[0] = v30;
  memset(v44, 0, sizeof(v44));
  uint64_t v43 = 0LL;
  memset(v42, 0, sizeof(v42));
  id v31 = v30;
  uint64_t v32 = v0;
  ActionLayout.init(metrics:artworkView:labelView:accessoryView:searchAdButton:artworkBaselineOffsetFromBottom:isDisplayingSearchTrendingItem:restrictArtworkSizeToMetrics:in:)( v9,  &v47,  v46,  v44,  v42,  0LL,  1LL,  0LL,  0,  v32);
  id v33 = [v32 contentView];
  [v33 frame];

  __n128 v34 = CGRect.subtracting(insets:)([v32 layoutMargins]);
  ActionLayout.placeChildren(relativeTo:in:)(v32, v34);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v27);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v16, v6);
}

double sub_1000A8B68()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000038E8(&qword_1002E6808);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for ActionLayout.Metrics(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  id v12 = (char *)&v19 - v11;
  uint64_t v13 = (double *)&v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_artworkSize];
  if ((v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_artworkSize + 16] & 1) != 0
    || (double result = *v13, *v13 == 0.0) && v13[1] == 0.0)
  {
    if (v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_configuration] == 1)
    {
      if (qword_1002E09B8 != -1) {
        swift_once(&qword_1002E09B8, sub_1000A7A90);
      }
      uint64_t v15 = qword_1002E6798;
    }

    else
    {
      if (qword_1002E09B0 != -1) {
        swift_once(&qword_1002E09B0, sub_1000A7700);
      }
      uint64_t v15 = qword_1002E6780;
    }

    uint64_t v16 = sub_10000A634(v6, (uint64_t)v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v16, v6);
    uint64_t v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v12, v10, v6);
    ActionLayout.Metrics.artworkSize.getter(v17);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    id v18 = [v1 traitCollection];
    Conditional.evaluate<>(in:)(&v19);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v19;
  }

  return result;
}

void sub_1000A8D94(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v9 = objc_msgSend(v2, "contentView", v6);
  if (qword_1002E0F98 != -1) {
    swift_once(&qword_1002E0F98, sub_10017CF58);
  }
  uint64_t v10 = sub_1000038E8((uint64_t *)&unk_1002E1D50);
  sub_10000A634(v10, (uint64_t)qword_1002F52E0);
  sub_1001B46F0(a1, (uint64_t)v8);
  uint64_t v16 = v2;
  Conditional.evaluate(with:)(&v17, &v16, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  id v11 = v17;
  [v9 setBackgroundColor:v17];

  id v12 = [v2 contentView];
  id v13 = [v12 layer];

  if (qword_1002E0F90 != -1) {
    swift_once(&qword_1002E0F90, sub_10017CE74);
  }
  sub_10000A634(v4, (uint64_t)qword_1002F52C8);
  uint64_t v16 = v2;
  Conditional.evaluate(with:)(&v17, &v16, v4);
  id v14 = v17;
  id v15 = [v17 CGColor];

  [v13 setBorderColor:v15];
}

id sub_1000A8F8C()
{
  id v1 = [v0 contentView];
  id v2 = [v1 layer];

  return v2;
}

double sub_1000A9038(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000038E8(&qword_1002E6808);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = type metadata accessor for ActionLayout.Metrics(0LL);
  uint64_t v7 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  id v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000038E8(&qword_1002E6810);
  __chkstk_darwin(v10);
  id v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for AspectRatio(0LL);
  uint64_t v38 = *(void *)(v13 - 8);
  uint64_t v39 = v13;
  __chkstk_darwin(v13);
  id v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  id v18 = (char *)&v36 - v17;
  double v20 = Artwork.size.getter(v19);
  __n128 v22 = AspectRatio.init(_:_:)(v21, v20);
  ActionLayout.Metrics.maxArtworkSize.getter(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1LL, v3) == 1)
  {
    sub_1000077E0((uint64_t)v12, &qword_1002E6810);
    uint64_t v23 = v37;
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v37);
    ActionLayout.Metrics.artworkSize.getter(v24);
    id v25 = [v36 traitCollection];
    Conditional.evaluate<>(in:)(&v40);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v23);
    double v27 = v40;
    double v28 = v41;
  }

  else
  {
    id v29 = [v36 traitCollection];
    Conditional.evaluate<>(in:)(&v40);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
    double v27 = v40;
    double v28 = v41;
    uint64_t v30 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v37);
    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v30);
    double v40 = v27;
    double v41 = v28;
  }

  __n128 v31 = AspectRatio.init(_:_:)(v26, v27);
  v32.n128_f64[0] = AspectRatio.horizontalFraction.getter(v31);
  if (AspectRatio.horizontalFraction.getter(v32) >= v32.n128_f64[0]) {
    AspectRatio.height(fromWidth:)(v27);
  }
  else {
    double v27 = AspectRatio.width(fromHeight:)(v28);
  }
  uint64_t v33 = v39;
  __n128 v34 = *(void (**)(char *, uint64_t))(v38 + 8);
  v34(v15, v39);
  v34(v18, v33);
  return v27;
}

void sub_1000A934C()
{
}

uint64_t sub_1000A93E0()
{
  return type metadata accessor for ActionCollectionViewCell(0LL);
}

uint64_t type metadata accessor for ActionCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E67E0;
  if (!qword_1002E67E0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActionCollectionViewCell);
  }
  return result;
}

void sub_1000A9424(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = &unk_10023AF40;
    void v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[3] = &unk_10023AF58;
    void v4[4] = &unk_10023AF70;
    v4[5] = &unk_10023AF58;
    v4[6] = &unk_10023AF88;
    swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 472);
  }

uint64_t storeEnumTagSinglePayload for ActionCollectionViewCell.Configuration( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_1000A9514 + 4 * byte_10023AF05[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000A9548 + 4 * byte_10023AF00[v4]))();
}

uint64_t sub_1000A9548(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000A9550(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1000A9558LL);
  }
  return result;
}

uint64_t sub_1000A9564(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1000A956CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_1000A9570(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000A9578(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionCollectionViewCell.Configuration()
{
  return &type metadata for ActionCollectionViewCell.Configuration;
}

unint64_t sub_1000A9598()
{
  unint64_t result = qword_1002E67F8;
  if (!qword_1002E67F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023AFF0, &type metadata for ActionCollectionViewCell.Configuration);
    atomic_store(result, (unint64_t *)&qword_1002E67F8);
  }

  return result;
}

uint64_t sub_1000A95EC(uint64_t a1)
{
  uint64_t result = sub_100004288(&qword_1002E6800, type metadata accessor for ActionCollectionViewCell, (uint64_t)&unk_10023B018);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000A9628()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_isShowingSeeAll);
}

double sub_1000A9638(char *a1, uint64_t a2, uint64_t a3, int a4, int a5, double a6, double a7)
{
  int v61 = a4;
  uint64_t v66 = a3;
  uint64_t v65 = a2;
  int v62 = a5;
  int v10 = a5;
  uint64_t v70 = type metadata accessor for ActionLayout(0LL);
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v68 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v64 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000038E8(&qword_1002E6808);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for ActionLayout.Metrics(0LL);
  uint64_t v71 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  char v67 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  __n128 v22 = (char *)&v61 - v21;
  __chkstk_darwin(v23);
  id v25 = (char *)&v61 - v24;
  if (v10 == 1)
  {
    if (qword_1002E09B8 != -1) {
      swift_once(&qword_1002E09B8, sub_1000A7A90);
    }
    uint64_t v26 = qword_1002E6798;
  }

  else
  {
    if (qword_1002E09B0 != -1) {
      swift_once(&qword_1002E09B0, sub_1000A7700);
    }
    uint64_t v26 = qword_1002E6780;
  }

  uint64_t v27 = sub_10000A634(v18, (uint64_t)v26);
  uint64_t v28 = v71;
  id v29 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
  v29(v22, v27, v18);
  uint64_t v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 32))(v25, v22, v18);
  if ((v61 & 1) != 0)
  {
    ActionLayout.Metrics.artworkSize.getter(v30);
    *(void *)&__int128 v77 = a1;
    Conditional.evaluate(with:)(v80, &v77, v14);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    double v31 = *(double *)v80;
    double v32 = *(double *)&v80[1];
    uint64_t v33 = type metadata accessor for LayoutViewPlaceholder(0LL);
    swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
    uint64_t v34 = LayoutViewPlaceholder.init(representing:)(v31, v32);
  }

  else
  {
    uint64_t v34 = 0LL;
  }

  id v35 = v68;
  sub_100026F44();
  if (qword_1002E0580 != -1) {
    swift_once(&qword_1002E0580, sub_100072758);
  }
  uint64_t v37 = type metadata accessor for FontUseCase(0LL, v36);
  uint64_t v38 = sub_10000A634(v37, (uint64_t)qword_1002F2BF0);
  uint64_t v68 = a1;
  id v39 = [a1 traitCollection];
  double v40 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v38, v39);

  if ((_BYTE)v62) {
    uint64_t v41 = 1LL;
  }
  else {
    uint64_t v41 = 4LL;
  }
  uint64_t v42 = type metadata accessor for Feature(0LL);
  v80[3] = v42;
  v80[4] = sub_100004288( (unint64_t *)&qword_1002E21F0,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  uint64_t v43 = sub_10000DD7C(v80);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v42 - 8) + 104LL))( v43,  enum case for Feature.measurement_with_labelplaceholder(_:),  v42);
  LOBYTE(v42) = isFeatureEnabled(_:)(v80);
  _s8AppStore17PillOverlayLayoutVwxx_0(v80);
  uint64_t v44 = v66;
  swift_bridgeObjectRetain(v66);
  id v45 = v40;
  uint64_t v46 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v65,  v44,  v45,  v41,  4LL,  0LL,  1LL,  0LL,  v42 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v80, v46);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v13, v64);
  __int128 v47 = v67;
  v29(v67, (uint64_t)v25, v18);
  if (v34)
  {
    *((void *)&v78 + 1) = type metadata accessor for LayoutViewPlaceholder(0LL);
    uint64_t v79 = &protocol witness table for LayoutViewPlaceholder;
    *(void *)&__int128 v77 = v34;
  }

  else
  {
    uint64_t v79 = 0LL;
    __int128 v77 = 0u;
    __int128 v78 = 0u;
  }

  sub_100011C30((uint64_t)v80, (uint64_t)v76);
  uint64_t v75 = 0LL;
  memset(v74, 0, sizeof(v74));
  uint64_t v73 = 0LL;
  memset(v72, 0, sizeof(v72));
  swift_retain(v34);
  __int128 v48 = v68;
  swift_unknownObjectRetain(v68);
  LOBYTE(v60) = 1;
  ActionLayout.init(metrics:artworkView:labelView:accessoryView:searchAdButton:artworkBaselineOffsetFromBottom:isDisplayingSearchTrendingItem:restrictArtworkSizeToMetrics:in:)( v47,  &v77,  v76,  v74,  v72,  0LL,  1LL,  0LL,  v60,  v48);
  if (qword_1002E09C0 != -1) {
    swift_once(&qword_1002E09C0, sub_1000A7C58);
  }
  __int128 v49 = xmmword_1002F3C30;
  double v50 = *(double *)&qword_1002F3C40;
  double v51 = unk_1002F3C48;
  double v52 = CGSize.subtracting(insets:)( *(double *)&xmmword_1002F3C30,  *((double *)&xmmword_1002F3C30 + 1),  *(double *)&qword_1002F3C40,  unk_1002F3C48,  a6,  a7);
  double v54 = v53;
  uint64_t v55 = sub_100004288( &qword_1002E6818,  (uint64_t (*)(uint64_t))&type metadata accessor for ActionLayout,  (uint64_t)&protocol conformance descriptor for ActionLayout);
  __n128 v56 = v48;
  uint64_t v57 = v70;
  *(void *)&__int128 v77 = dispatch thunk of Measurable.measurements(fitting:in:)(v56, v70, v55, v52, v54);
  *((void *)&v77 + 1) = v58;
  CGSize.add(outsets:)(*(double *)&v49, *((double *)&v49 + 1), v50, v51);
  swift_release(v34);

  (*(void (**)(char *, uint64_t))(v69 + 8))(v35, v57);
  _s8AppStore17PillOverlayLayoutVwxx_0(v80);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v25, v18);
  return *(double *)&v77;
}

double sub_1000A9C7C( __n128 a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  double v10 = a1.n128_f64[0];
  uint64_t v11 = Action.artwork.getter(a1);
  uint64_t v12 = v11;
  if (v11)
  {
    swift_release(v11);
    int v13 = 0;
  }

  else
  {
    int v13 = 1;
  }

  uint64_t v14 = Action.title.getter(v11);
  uint64_t v16 = v15;
  double v17 = sub_1000A9638(a8, v14, v15, v12 != 0, v13, v10, a2);
  swift_bridgeObjectRelease(v16);
  return v17;
}

id sub_1000A9D20()
{
  return sub_1000A9F30();
}

__n128 sub_1000A9D30@<Q0>(uint64_t a1@<X1>, void *a2@<X4>, uint64_t a3@<X8>, double a4@<D1>)
{
  __int128 v5 = v7[3];
  *(_OWORD *)(a3 + 32) = v7[2];
  *(_OWORD *)(a3 + 48) = v5;
  *(_OWORD *)(a3 + 64) = v7[4];
  __n128 result = (__n128)v7[1];
  *(_OWORD *)a3 = v7[0];
  *(__n128 *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  return result;
}

uint64_t sub_1000A9D84()
{
  return sub_100004288( (unint64_t *)&qword_1002E8120,  (uint64_t (*)(uint64_t))&type metadata accessor for Action,  (uint64_t)&protocol conformance descriptor for Action);
}

int64x2_t sub_1000A9DB0@<Q0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  double v19 = (PageTraitEnvironment.pageContentSize.getter() + -80.0) / 3.0;
  if (qword_1002E09C0 != -1) {
    swift_once(&qword_1002E09C0, sub_1000A7C58);
  }
  CGSize.subtract(insets:)( *(double *)&xmmword_1002F3C30,  *((double *)&xmmword_1002F3C30 + 1),  *(double *)&qword_1002F3C40,  unk_1002F3C48);
  if (qword_1002E09B0 != -1) {
    swift_once(&qword_1002E09B0, sub_1000A7700);
  }
  uint64_t v8 = type metadata accessor for ActionLayout.Metrics(0LL);
  uint64_t v9 = sub_10000A634(v8, (uint64_t)qword_1002E6780);
  uint64_t v10 = type metadata accessor for ActionLayout(0LL);
  uint64_t v11 = sub_100004288( &qword_1002E6868,  (uint64_t (*)(uint64_t))&type metadata accessor for ActionLayout,  (uint64_t)&protocol conformance descriptor for ActionLayout);
  *(void *)&__int128 v18 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)( v9,  a2,  v10,  v11,  v19,  a4);
  *((void *)&v18 + 1) = v12;
  CGSize.add(outsets:)( *(double *)&xmmword_1002F3C30,  *((double *)&xmmword_1002F3C30 + 1),  *(double *)&qword_1002F3C40,  unk_1002F3C48);
  [a2 pageMarginInsets];
  *(void *)a3 = v13;
  *(void *)(a3 + 8) = v14;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v15;
  *(void *)(a3 + 24) = v16;
  int64x2_t result = vdupq_n_s64(0x4044000000000000uLL);
  *(_OWORD *)(a3 + 32) = v18;
  *(int64x2_t *)(a3 + 48) = result;
  *(_BYTE *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = a1;
  return result;
}

id sub_1000A9F30()
{
  __int16 v1 = v0;
  uint64_t v2 = type metadata accessor for ActionLayout.Metrics(0LL);
  uint64_t v40 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v39 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  double v6 = (char *)&v39 - v5;
  uint64_t v7 = type metadata accessor for CornerStyle(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_textLabel];
  Action.title.getter(v12);
  if (v13)
  {
    uint64_t v15 = v13;
    NSString v16 = String._bridgeToObjectiveC()();
    *(void *)&double v14 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }

  else
  {
    NSString v16 = 0LL;
  }

  objc_msgSend(v11, "setText:", v16, v14);

  uint64_t v18 = Action.artwork.getter(v17);
  uint64_t v19 = v18;
  if (v18) {
    swift_release(v18);
  }
  sub_1000A834C(v19 == 0);
  if (qword_1002E09C0 != -1) {
    swift_once(&qword_1002E09C0, sub_1000A7C58);
  }
  objc_msgSend(v1, "setLayoutMargins:", xmmword_1002F3C30, *(double *)&qword_1002F3C40, unk_1002F3C48);
  uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_lazilyCreatedArtworkView];
  if (v21) {
    uint64_t v22 = (uint64_t)[v21 isHidden];
  }
  else {
    uint64_t v22 = 1LL;
  }
  uint64_t v23 = OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_configuration;
  int v24 = v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_configuration];
  v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_configuration] = v22;
  if ((_DWORD)v22 != v24)
  {
    sub_1000A8260((id)v22);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for CornerStyle.continuous(_:), v7);
    if (v1[v23] == 1) {
      double v25 = 16.0;
    }
    else {
      double v25 = 12.0;
    }
    id v26 = [v1 contentView];
    CornerStyle.apply(withRadius:to:)(v26, v25);

    v20.n128_f64[0] = (*(double (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  uint64_t v27 = Action.artwork.getter(v20);
  if (v27)
  {
    uint64_t v28 = v27;
    if (v1[v23] == 1)
    {
      if (qword_1002E09B8 != -1) {
        swift_once(&qword_1002E09B8, sub_1000A7A90);
      }
      id v29 = qword_1002E6798;
    }

    else
    {
      if (qword_1002E09B0 != -1) {
        swift_once(&qword_1002E09B0, sub_1000A7700);
      }
      id v29 = qword_1002E6780;
    }

    uint64_t v30 = sub_10000A634(v2, (uint64_t)v29);
    double v31 = v39;
    uint64_t v32 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v30, v2);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v6, v31, v2);
    double v33 = sub_1000A9038(v28, (uint64_t)v6);
    uint64_t v35 = v34;
    __n128 v36 = swift_release(v28);
    (*(void (**)(char *, uint64_t, __n128))(v32 + 8))(v6, v2, v36);
    uint64_t v37 = &v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_artworkSize];
    *(double *)uint64_t v37 = v33;
    *((void *)v37 + 1) = v35;
    v37[16] = 0;
  }

  return [v1 setNeedsLayout];
}

id sub_1000AA29C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = &v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_trendingAppsInitialYOffset];
  *(void *)uint64_t v7 = 0LL;
  v7[8] = 1;
  *(void *)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_cancellables] = _swiftEmptyArrayStorage;
  uint64_t v8 = &v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_searchResultsDelegate];
  *((void *)v8 + 1) = 0LL;
  swift_unknownObjectWeakInit(v8, 0LL);
  uint64_t v9 = &v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeSection];
  uint64_t v10 = sub_1000038E8(&qword_1002E68F8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v9, 1LL, 2LL, v10);
  *(void *)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController] = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_forcedTraitCollection] = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_objectGraph] = a1;
  uint64_t v11 = type metadata accessor for ArtworkLoader(0LL);
  uint64_t v12 = v1;
  swift_retain(a1);
  *(void *)&v12[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_artworkLoader] = inject(_:from:)( v11,  a1);
  uint64_t v13 = sub_1000AD08C(a1);
  *(void *)&v12[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_searchTrendingAppsViewController] = v13;
  id result = [v13 collectionView];
  if (result)
  {
    uint64_t v15 = result;
    memset(v19, 0, sizeof(v19));
    static AutomationSemantics.page(name:id:)(0xD000000000000013LL, 0x800000010024B760LL, v19);
    sub_1000077E0((uint64_t)v19, (uint64_t *)&unk_1002E3500);
    UIView.setAutomationSemantics(_:)(v6);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    NSString v16 = (objc_class *)type metadata accessor for SearchResultsContainerViewController(0LL);
    v18.receiver = v12;
    v18.super_class = v16;
    id v17 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
    sub_1000AAECC();

    swift_release(a1);
    return v17;
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_1000AA4D4()
{
  uint64_t v1 = OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController];
  if (!v2)
  {
LABEL_7:
    sub_1000AA5D8(v0);
    return;
  }

  id v3 = v2;
  [v3 willMoveToParentViewController:v0];
  [v0 addChildViewController:v3];
  id v4 = [v0 view];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v3 view];
    if (v6)
    {
      uint64_t v7 = v6;
      [v5 addSubview:v6];

      [v3 didMoveToParentViewController:v0];
      if (*(void *)&v0[v1]) {
        objc_msgSend( v0,  "setOverrideTraitCollection:forChildViewController:",  *(void *)&v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_forcedTraitCollection]);
      }

      goto LABEL_7;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
}

void sub_1000AA5D8(char *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController;
  id v3 = *(void **)&a1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController];
  if (v3) {
    id v4 = [v3 contentScrollViewForEdge:1];
  }
  else {
    id v4 = 0LL;
  }
  [a1 setContentScrollView:v4 forEdge:1];

  uint64_t Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_searchResultsDelegate]);
  if (Strong)
  {
    id v6 = (void *)Strong;
    uint64_t v7 = *(void **)&a1[v2];
    if (v7) {
      id v8 = [v7 contentScrollViewForEdge:1];
    }
    else {
      id v8 = 0LL;
    }
    [v6 setTabBarObservedScrollView:v8];

    swift_unknownObjectRelease(v6);
  }

  uint64_t v9 = *(void **)&a1[v2];
  if (v9)
  {
    uint64_t v10 = type metadata accessor for GenericDiffablePageViewController(0LL);
    if (swift_dynamicCastClass(v9, v10)
      || (uint64_t v11 = type metadata accessor for GenericPageViewController(0LL), swift_dynamicCastClass(v9, v11)))
    {
      if ((a1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_trendingAppsInitialYOffset + 8] & 1) == 0)
      {
        double v12 = *(double *)&a1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_trendingAppsInitialYOffset];
        id v20 = v9;
        id v13 = [v20 collectionView];
        if (v13)
        {
          double v14 = v13;
          [v13 contentOffset];
          double v16 = v15;

          if (v16 == v12)
          {
            id v17 = v20;
LABEL_19:

            return;
          }

          id v18 = [v20 collectionView];
          if (v18)
          {
            uint64_t v19 = v18;
            [v18 contentOffset];
            objc_msgSend(v19, "setContentOffset:");

            id v17 = v19;
            goto LABEL_19;
          }
        }

        else
        {
          __break(1u);
        }

        __break(1u);
      }
    }
  }

void sub_1000AA7C8()
{
  uint64_t v1 = type metadata accessor for SearchSection(0LL);
  __chkstk_darwin(v1);
  id v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v4);
  id v6 = &v17[-v5 - 8];
  uint64_t v7 = (objc_class *)type metadata accessor for SearchResultsContainerViewController(0LL);
  v18.receiver = v0;
  v18.super_class = v7;
  objc_msgSendSuper2(&v18, "viewDidLoad");
  uint64_t v8 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeSection];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeSection], v17, 0LL, 0LL);
  sub_1000ACC1C(v8, (uint64_t)v6);
  uint64_t v9 = sub_1000038E8(&qword_1002E68F8);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL);
  v10(v3, 1LL, 2LL, v9);
  char v11 = sub_1000AC9D0((uint64_t)v6, (uint64_t)v3);
  sub_10002BDF4((uint64_t)v3, type metadata accessor for SearchSection);
  sub_10002BDF4((uint64_t)v6, type metadata accessor for SearchSection);
  if ((v11 & 1) != 0)
  {
    v10(v6, 2LL, 2LL, v9);
    sub_1000AD54C((uint64_t)v6);
    sub_10002BDF4((uint64_t)v6, type metadata accessor for SearchSection);
  }

  id v12 = [v0 view];
  if (v12)
  {
    id v13 = v12;
    [v12 bounds];
    double v15 = v14;

    sub_1000AAD6C(v15);
  }

  else
  {
    __break(1u);
  }

void sub_1000AABAC()
{
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for SearchResultsContainerViewController(0LL);
  objc_msgSendSuper2(&v25, "viewWillLayoutSubviews");
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v2 = v1;
  [v1 bounds];
  double v4 = v3;

  sub_1000AAD6C(v4);
  uint64_t v5 = OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController;
  id v6 = *(void **)&v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController];
  if (v6)
  {
    id v7 = [v6 view];
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = [v0 view];
      if (v9)
      {
        uint64_t v10 = v9;
        [v9 bounds];
        double v12 = v11;
        double v14 = v13;
        double v16 = v15;
        double v18 = v17;

        objc_msgSend(v8, "setFrame:", v12, v14, v16, v18);
        goto LABEL_6;
      }

LABEL_6:
  uint64_t v19 = (double *)&v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_trendingAppsInitialYOffset];
  if (v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_trendingAppsInitialYOffset + 8] == 1)
  {
    id v20 = *(void **)&v0[v5];
    if (v20)
    {
      id v21 = [v20 collectionView];
      if (v21)
      {
        uint64_t v22 = v21;
        [v21 contentOffset];
        double v24 = v23;

        if (v24 < 0.0)
        {
          *uint64_t v19 = v24;
          *((_BYTE *)v19 + 8) = 0;
        }

        return;
      }

      if (v17 == ++v18)
      {
        swift_bridgeObjectRelease(v16);
        return;
      }
    }
  }

  __break(1u);
}

        double v16 = v15 & 1;
        double v17 = v81;
        sub_10019C504((uint64_t)v8, v15 & 1, v78, v81, v74);
        (*(void (**)(uint64_t, uint64_t, char *, void, uint64_t, uint64_t))(v32 + 32))( v27,  v16,  v17,  *(void *)&v17[v71],  v31,  v32);
      }

      (*(void (**)(_BYTE *, uint64_t))(v79 + 8))(v8, v80);
      swift_release(v27);
      a1 = v75;
    }
  }

  id v20 = v14 + 1;
  if (__OFADD__(v14, 1LL))
  {
    __break(1u);
LABEL_65:
    __break(1u);
    return;
  }

  if (v20 >= v77) {
    goto LABEL_59;
  }
  id v21 = *(void *)(v76 + 8 * v20);
  ++v14;
  if (v21) {
    goto LABEL_23;
  }
  double v14 = v20 + 1;
  if (v20 + 1 >= v77) {
    goto LABEL_59;
  }
  id v21 = *(void *)(v76 + 8 * v14);
  if (v21) {
    goto LABEL_23;
  }
  double v14 = v20 + 2;
  if (v20 + 2 >= v77) {
    goto LABEL_59;
  }
  id v21 = *(void *)(v76 + 8 * v14);
  if (v21)
  {
LABEL_23:
    double v13 = (v21 - 1) & v21;
    uint64_t v19 = __clz(__rbit64(v21)) + (v14 << 6);
    goto LABEL_24;
  }

  uint64_t v22 = v20 + 3;
  if (v22 < v77)
  {
    id v21 = *(void *)(v76 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        double v14 = v22 + 1;
        if (__OFADD__(v22, 1LL)) {
          goto LABEL_65;
        }
        if (v14 >= v77) {
          goto LABEL_59;
        }
        id v21 = *(void *)(v76 + 8 * v14);
        ++v22;
        if (v21) {
          goto LABEL_23;
        }
      }
    }

    double v14 = v22;
    goto LABEL_23;
  }

    sub_100193FA0();
    goto LABEL_7;
  }

  if (!a1
    || (type metadata accessor for ProductBackgroundUberView(),
        uint64_t v5 = v4,
        id v6 = v8,
        id v7 = static NSObject.== infix(_:_:)(v5, v6),
        v5,
        v6,
        (v7 & 1) == 0))
  {
    [v4 removeFromSuperview];
    goto LABEL_6;
  }

    uint64_t v27 = &qword_1002EEC38;
    uint64_t v28 = (uint64_t)v17;
LABEL_10:
    sub_1000077E0(v28, v27);
    return 0LL;
  }

  sub_10000DF2C((uint64_t)v17, (uint64_t)v20, &qword_1002E58E0);
  if (v26(v25, 1LL, v11) == 1)
  {
    sub_1000077E0((uint64_t)v24, &qword_1002E58E0);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    goto LABEL_6;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, v25, v11);
  id v29 = sub_100004288( &qword_1002EEC40,  (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone,  (uint64_t)&protocol conformance descriptor for TimeZone);
  uint64_t v30 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v14, v11, v29);
  double v31 = *(void (**)(char *, uint64_t))(v12 + 8);
  v31(v14, v11);
  sub_1000077E0((uint64_t)v24, &qword_1002E58E0);
  v31(v20, v11);
  sub_1000077E0((uint64_t)v17, &qword_1002E58E0);
  if ((v30 & 1) == 0) {
    return 0LL;
  }
LABEL_8:
  sub_10000DF2C(v43, (uint64_t)v5, &qword_1002E58E8);
  uint64_t v32 = v44;
  double v33 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v5, 1LL, v45) == 1)
  {
    uint64_t v27 = &qword_1002E58E8;
    uint64_t v28 = (uint64_t)v5;
    goto LABEL_10;
  }

  uint64_t v35 = v41;
  __n128 v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v41, v5, v33);
  uint64_t v37 = v42;
  Date.init()(v36);
  uint64_t v38 = Date.hasPassed(hourOfDay:since:)(3LL, v35);
  id v39 = *(void (**)(char *, uint64_t))(v32 + 8);
  v39(v37, v33);
  v39(v35, v33);
  return (v38 & 1) == 0;
}

  if (qword_1002E0BF0 != -1) {
    swift_once(&qword_1002E0BF0, sub_100110BF8);
  }
  double v15 = type metadata accessor for StaticDimension(0LL);
  double v16 = sub_10000A634(v15, (uint64_t)qword_1002F4570);
  v78[3] = v15;
  v78[4] = &protocol witness table for StaticDimension;
  double v17 = sub_10000DD7C(v78);
  __int128 v49 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16LL);
  double v50 = v16;
  v49(v17, v16, v15);
  if (qword_1002E0890 != -1) {
    swift_once(&qword_1002E0890, sub_100073354);
  }
  uint64_t v19 = type metadata accessor for FontUseCase(0LL, v18);
  double v54 = (void (*)(void *, uint64_t, uint64_t))sub_10000A634(v19, (uint64_t)qword_1002F3508);
  id v20 = *(void (**)(void, void))(*(void *)(v19 - 8) + 16LL);
  ((void (*)(void *, void, uint64_t))v20)(v6, v54, v19);
  __int128 v47 = enum case for FontSource.useCase(_:);
  id v21 = (void (*)(void *))v4[13];
  v21(v6);
  v77[3] = v15;
  v77[4] = &protocol witness table for StaticDimension;
  sub_10000DD7C(v77);
  uint64_t v75 = v3;
  __n128 v76 = &protocol witness table for FontSource;
  uint64_t v22 = sub_10000DD7C(v74);
  double v23 = (void (*)(void *, void *, uint64_t))v4[2];
  v23(v22, v6, v3);
  StaticDimension.init(_:scaledLike:)(v74, 2.0);
  double v24 = (void (*)(void *, uint64_t))v4[1];
  v24(v6, v3);
  __int128 v48 = v19;
  double v53 = (void (*)(void *, uint64_t, uint64_t))v20;
  ((void (*)(void *, void, uint64_t))v20)(v6, v54, v19);
  objc_super v25 = v47;
  double v54 = (void (*)(void *, uint64_t, uint64_t))v21;
  ((void (*)(void *, void, uint64_t))v21)(v6, v47, v3);
  uint64_t v75 = v15;
  __n128 v76 = &protocol witness table for StaticDimension;
  sub_10000DD7C(v74);
  char v72 = v3;
  uint64_t v73 = &protocol witness table for FontSource;
  id v26 = sub_10000DD7C(v71);
  double v52 = v23;
  v23(v26, v6, v3);
  StaticDimension.init(_:scaledLike:)(v71, 18.0);
  v24(v6, v3);
  if (qword_1002E0898 != -1) {
    swift_once(&qword_1002E0898, sub_100073370);
  }
  double bottom = UIEdgeInsetsZero.bottom;
  uint64_t v28 = v48;
  id v29 = sub_10000A634(v48, (uint64_t)qword_1002F3520);
  v53(v6, v29, v28);
  v54(v6, v25, v3);
  char v72 = v15;
  uint64_t v73 = &protocol witness table for StaticDimension;
  sub_10000DD7C(v71);
  uint64_t v69 = v3;
  uint64_t v70 = &protocol witness table for FontSource;
  uint64_t v30 = sub_10000DD7C(v68);
  v52(v30, v6, v3);
  StaticDimension.init(_:scaledLike:)(v68, 64.0);
  v24(v6, v3);
  if (qword_1002E08A0 != -1) {
    swift_once(&qword_1002E08A0, sub_100073388);
  }
  double v31 = sub_10000A634(v28, (uint64_t)qword_1002F3538);
  v53(v6, v31, v28);
  uint64_t v32 = v54;
  v54(v6, v25, v3);
  uint64_t v69 = v15;
  uint64_t v70 = &protocol witness table for StaticDimension;
  sub_10000DD7C(v68);
  uint64_t v66 = v3;
  char v67 = &protocol witness table for FontSource;
  double v33 = sub_10000DD7C(v65);
  uint64_t v34 = v52;
  v52(v33, v6, v3);
  StaticDimension.init(_:scaledLike:)(v65, 58.0);
  v24(v6, v3);
  uint64_t v66 = v15;
  char v67 = &protocol witness table for StaticDimension;
  uint64_t v35 = sub_10000DD7C(v65);
  double v53 = (void (*)(void *, uint64_t, uint64_t))v24;
  uint64_t v37 = v49;
  __n128 v36 = v50;
  v49(v35, v50, v15);
  v64[3] = v15;
  v64[4] = &protocol witness table for StaticDimension;
  uint64_t v38 = sub_10000DD7C(v64);
  v37(v38, v36, v15);
  *id v6 = UIFontTextStyleFootnote;
  id v39 = enum case for FontSource.textStyle(_:);
  v32(v6, enum case for FontSource.textStyle(_:), v3);
  v63[3] = v15;
  v63[4] = &protocol witness table for StaticDimension;
  sub_10000DD7C(v63);
  int v61 = v3;
  int v62 = &protocol witness table for FontSource;
  uint64_t v40 = sub_10000DD7C(v60);
  v34(v40, v6, v3);
  uint64_t v41 = UIFontTextStyleFootnote;
  StaticDimension.init(_:scaledLike:)(v60, 28.0);
  uint64_t v42 = (void (*)(void *, uint64_t))v53;
  ((void (*)(void *, uint64_t))v53)(v6, v3);
  *id v6 = v41;
  v32(v6, v39, v3);
  int v61 = v15;
  int v62 = &protocol witness table for StaticDimension;
  sub_10000DD7C(v60);
  uint64_t v58 = (void *)v3;
  uint64_t v59 = &protocol witness table for FontSource;
  uint64_t v43 = sub_10000DD7C(v57);
  v34(v43, v6, v3);
  uint64_t v44 = v41;
  StaticDimension.init(_:scaledLike:)(v57, 28.0);
  v42(v6, v3);
  uint64_t v58 = &type metadata for Double;
  uint64_t v59 = &protocol witness table for Double;
  v56[4] = &protocol witness table for Double;
  v57[0] = 0x4081F80000000000LL;
  v56[3] = &type metadata for Double;
  v55[4] = &protocol witness table for Double;
  v56[0] = 0x4044000000000000LL;
  v55[3] = &type metadata for Double;
  v55[0] = 0x4084000000000000LL;
  return GameCenterReengagementLayout.Metrics.init(layoutMargins:shelfTopSpace:badgeGlyphSpace:badgeTopSpace:titleTopSpace:subtitleTopSpace:heroContentTopSpace:separatorTopSpace:footerTopSpace:footerBottomSpace:maxColumnWidth:columnSpace:maxHeight:)( v78,  v77,  v74,  v71,  v68,  v65,  v64,  v63,  UIEdgeInsetsZero.top,  left,  bottom,  right,  v60,  v57,  v56,  v55);
}

void sub_1000AAD6C(double a1)
{
  if (a1 >= 1920.0)
  {
    uint64_t v5 = OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_forcedTraitCollection;
    id v6 = *(void **)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_forcedTraitCollection];
    *(void *)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_forcedTraitCollection] = 0LL;

    if (*(void *)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController]) {
      objc_msgSend(v1, "setOverrideTraitCollection:forChildViewController:", *(void *)&v1[v5]);
    }
  }

  else
  {
    id v2 =  [(id)objc_opt_self(UITraitCollection) traitCollectionWithHorizontalSizeClass:1];
    uint64_t v3 = OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_forcedTraitCollection;
    double v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_forcedTraitCollection];
    *(void *)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_forcedTraitCollection] = v2;
    id v7 = v2;

    if (*(void *)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController]) {
      objc_msgSend(v1, "setOverrideTraitCollection:forChildViewController:", *(void *)&v1[v3]);
    }
  }

uint64_t sub_1000AAE68()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E4940);
  sub_10000DC04(v0, qword_1002E6870);
  sub_10000A634(v0, (uint64_t)qword_1002E6870);
  return URL.init(string:)(0xD000000000000024LL, 0x800000010024B7A0LL, v1);
}

double sub_1000AAECC()
{
  uint64_t v0 = sub_1000038E8(&qword_1002E6A58);
  __n128 v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v27[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for NSNotificationCenter.Publisher(0LL, v1);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002E6A60);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v12 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  NSNotificationCenter.publisher(for:object:)(UITextInputCurrentInputModeDidChangeNotification, 0LL);

  unint64_t v13 = sub_1000489E8();
  v27[0] = (id)static OS_dispatch_queue.main.getter(v13);
  uint64_t v14 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v3, 1LL, 1LL, v14);
  uint64_t v15 = sub_100004288( &qword_1002E6A70,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  uint64_t v16 = sub_100004288( &qword_1002E6A78,  (uint64_t (*)(uint64_t))sub_1000489E8,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(v27, v3, v4, v13, v15, v16);
  sub_1000077E0((uint64_t)v3, &qword_1002E6A58);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v17 = swift_allocObject(&unk_100289CB0, 24LL, 7LL);
  uint64_t v18 = v26;
  swift_unknownObjectWeakInit(v17 + 16, v26);
  uint64_t v19 = sub_10005E7D4( &qword_1002E6A80,  (uint64_t *)&unk_1002E6A60,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  uint64_t v20 = Publisher<>.sink(receiveValue:)(sub_1000ADE0C, v17, v8, v19);
  __n128 v21 = swift_release(v17);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
  uint64_t v22 = v18 + OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_cancellables;
  swift_beginAccess(v22, v27, 33LL, 0LL);
  uint64_t v23 = sub_1000038E8(&qword_1002E6A88);
  uint64_t v24 = sub_10005E7D4( (unint64_t *)&unk_1002E6A90,  &qword_1002E6A88,  (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v22, v23, v24);
  swift_endAccess(v27);
  *(void *)&double result = swift_release(v20).n128_u64[0];
  return result;
}

void sub_1000AB1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void **)(Strong + OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController);
    id v6 = v5;

    if (v5)
    {
      id v7 = [v6 collectionView];

      if (v7)
      {
        [v7 contentOffset];
        double v9 = v8;

        if (v9 < 0.0)
        {
          swift_beginAccess(v2, &v12, 0LL, 0LL);
          uint64_t v10 = (char *)swift_unknownObjectWeakLoadStrong(v2);
          if (v10)
          {
            double v11 = (double *)&v10[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_trendingAppsInitialYOffset];
            *double v11 = v9;
            *((_BYTE *)v11 + 8) = 0;
          }
        }
      }

      else
      {
        __break(1u);
      }
    }
  }

id sub_1000AB2D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsContainerViewController(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000AB3A4()
{
  return type metadata accessor for SearchResultsContainerViewController(0LL);
}

uint64_t type metadata accessor for SearchResultsContainerViewController(uint64_t a1)
{
  return sub_100036A58( a1,  (uint64_t *)&unk_1002E68E8,  (uint64_t)&nominal type descriptor for SearchResultsContainerViewController);
}

uint64_t sub_1000AB3C0(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v4[3] = "\t";
  void v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[5] = &unk_10023B0F0;
  uint64_t result = type metadata accessor for SearchSection(319LL);
  if (v3 <= 0x3F)
  {
    v4[6] = *(void *)(result - 8) + 64LL;
    void v4[7] = &unk_10023B108;
    v4[8] = &unk_10023B108;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 9LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t type metadata accessor for SearchSection(uint64_t a1)
{
  return sub_100036A58(a1, (uint64_t *)&unk_1002E6978, (uint64_t)&nominal type descriptor for SearchSection);
}

uint64_t *sub_1000AB48C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain(v9);
  }

  else
  {
    uint64_t v7 = sub_1000038E8(&qword_1002E68F8);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2LL, v7))
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }

    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
      uint64_t v12 = *(int *)(v11 + 20);
      __dst = (char *)a1 + v12;
      unint64_t v13 = (char *)a2 + v12;
      uint64_t v14 = type metadata accessor for SearchEntity(0LL);
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain(v10);
      if (v16(v13, 1LL, v14))
      {
        uint64_t v17 = sub_1000038E8(&qword_1002E6900);
        memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0LL, 1LL, v14);
      }

      uint64_t v18 = *(int *)(v11 + 24);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = type metadata accessor for SearchOrigin(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16LL))(v19, v20, v21);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0LL, 2LL, v7);
    }
  }

  return a1;
}

uint64_t type metadata accessor for SearchSection.ResultsMetadata(uint64_t a1)
{
  return sub_100036A58( a1,  (uint64_t *)&unk_1002E69E0,  (uint64_t)&nominal type descriptor for SearchSection.ResultsMetadata);
}

uint64_t sub_1000AB644(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002E68F8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48LL))(a1, 2LL, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease(*(void *)(a1 + 8));
    uint64_t v4 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
    uint64_t v5 = a1 + *(int *)(v4 + 20);
    uint64_t v6 = type metadata accessor for SearchEntity(0LL);
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = a1 + *(int *)(v4 + 24);
    uint64_t v9 = type metadata accessor for SearchOrigin(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v8, v9);
  }

  return result;
}

void *sub_1000AB720(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000038E8(&qword_1002E68F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 2LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
    uint64_t v10 = *(int *)(v9 + 20);
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = type metadata accessor for SearchEntity(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain(v8);
    if (v14(v11, 1LL, v12))
    {
      uint64_t v15 = sub_1000038E8(&qword_1002E6900);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0LL, 1LL, v12);
    }

    uint64_t v16 = *(int *)(v9 + 24);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for SearchOrigin(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 2LL, v6);
  }

  return a1;
}

void *sub_1000AB8A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000038E8(&qword_1002E68F8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2LL, v6);
  int v10 = v8(a2, 2LL, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1000077E0((uint64_t)a1, &qword_1002E68F8);
      goto LABEL_7;
    }

    *a1 = *a2;
    uint64_t v19 = a2[1];
    uint64_t v20 = a1[1];
    a1[1] = v19;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRelease(v20);
    uint64_t v21 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
    uint64_t v22 = *(int *)(v21 + 20);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for SearchEntity(0LL);
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    int v28 = v27(v23, 1LL, v25);
    int v29 = v27(v24, 1LL, v25);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0LL, 1LL, v25);
LABEL_16:
        uint64_t v35 = *(int *)(v21 + 24);
        __n128 v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        uint64_t v38 = type metadata accessor for SearchOrigin(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24LL))(v36, v37, v38);
        return a1;
      }
    }

    else
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
        goto LABEL_16;
      }

      (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    }

    uint64_t v34 = sub_1000038E8(&qword_1002E6900);
    memcpy(v23, v24, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_16;
  }

  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  *a1 = *a2;
  uint64_t v11 = a2[1];
  a1[1] = v11;
  uint64_t v12 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
  uint64_t v13 = *(int *)(v12 + 20);
  __dst = (char *)a1 + v13;
  uint64_t v14 = (char *)a2 + v13;
  uint64_t v15 = type metadata accessor for SearchEntity(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain(v11);
  if (v17(v14, 1LL, v15))
  {
    uint64_t v18 = sub_1000038E8(&qword_1002E6900);
    memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0LL, 1LL, v15);
  }

  uint64_t v30 = *(int *)(v12 + 24);
  double v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = type metadata accessor for SearchOrigin(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16LL))(v31, v32, v33);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 2LL, v6);
  return a1;
}

_OWORD *sub_1000ABB78(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000038E8(&qword_1002E68F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 2LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    *a1 = *a2;
    uint64_t v8 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
    uint64_t v9 = *(int *)(v8 + 20);
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for SearchEntity(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_1000038E8(&qword_1002E6900);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v15 = *(int *)(v8 + 24);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for SearchOrigin(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL))(v16, v17, v18);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 2LL, v6);
  }

  return a1;
}

void *sub_1000ABCE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000038E8(&qword_1002E68F8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2LL, v6);
  int v10 = v8(a2, 2LL, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1000077E0((uint64_t)a1, &qword_1002E68F8);
      goto LABEL_7;
    }

    uint64_t v18 = a2[1];
    uint64_t v19 = a1[1];
    *a1 = *a2;
    a1[1] = v18;
    swift_bridgeObjectRelease(v19);
    uint64_t v20 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
    uint64_t v21 = *(int *)(v20 + 20);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = type metadata accessor for SearchEntity(0LL);
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    int v27 = v26(v22, 1LL, v24);
    int v28 = v26(v23, 1LL, v24);
    if (v27)
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0LL, 1LL, v24);
LABEL_16:
        uint64_t v34 = *(int *)(v20 + 24);
        uint64_t v35 = (char *)a1 + v34;
        __n128 v36 = (char *)a2 + v34;
        uint64_t v37 = type metadata accessor for SearchOrigin(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40LL))(v35, v36, v37);
        return a1;
      }
    }

    else
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
        goto LABEL_16;
      }

      (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    }

    uint64_t v33 = sub_1000038E8(&qword_1002E6900);
    memcpy(v22, v23, *(void *)(*(void *)(v33 - 8) + 64LL));
    goto LABEL_16;
  }

  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v11 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for SearchEntity(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15))
  {
    uint64_t v17 = sub_1000038E8(&qword_1002E6900);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
  }

  uint64_t v29 = *(int *)(v11 + 24);
  uint64_t v30 = (char *)a1 + v29;
  double v31 = (char *)a2 + v29;
  uint64_t v32 = type metadata accessor for SearchOrigin(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32LL))(v30, v31, v32);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 2LL, v6);
  return a1;
}

uint64_t sub_1000ABF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000ABF94);
}

uint64_t sub_1000ABF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E68F8);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48LL))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000ABFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000ABFF0);
}

uint64_t sub_1000ABFF0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v6 = sub_1000038E8(&qword_1002E68F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(a1, v5, a3, v6);
}

uint64_t sub_1000AC048(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002E68F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48LL))(a1, 2LL, v2);
}

uint64_t sub_1000AC084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E68F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(a1, a2, 2LL, v4);
}

uint64_t sub_1000AC0C8(uint64_t a1)
{
  uint64_t result = type metadata accessor for SearchSection.ResultsMetadata(319LL);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256LL, *(void *)(result - 8) + 64LL, 2LL);
    return 0LL;
  }

  return result;
}

uint64_t *sub_1000AC11C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    int v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for SearchEntity(0LL);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain(v7);
    if (v13(v10, 1LL, v11))
    {
      uint64_t v14 = sub_1000038E8(&qword_1002E6900);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
    }

    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for SearchOrigin(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v17, v18, v19);
  }

  return v4;
}

uint64_t sub_1000AC250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for SearchEntity(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = type metadata accessor for SearchOrigin(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
}

void *sub_1000AC2E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  int v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SearchEntity(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain(v6);
  if (v12(v9, 1LL, v10))
  {
    uint64_t v13 = sub_1000038E8(&qword_1002E6900);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  }

  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for SearchOrigin(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16LL))(v15, v16, v17);
  return a1;
}

void *sub_1000AC3F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *(int *)(a3 + 20);
  int v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for SearchEntity(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1LL, v11);
  int v15 = v13(v10, 1LL, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1000038E8(&qword_1002E6900);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for SearchOrigin(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24LL))(v18, v19, v20);
  return a1;
}

_OWORD *sub_1000AC54C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SearchEntity(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9))
  {
    uint64_t v11 = sub_1000038E8(&qword_1002E6900);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  int v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for SearchOrigin(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32LL))(v13, v14, v15);
  return a1;
}

void *sub_1000AC644(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for SearchEntity(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1LL, v11);
  int v15 = v13(v10, 1LL, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1000038E8(&qword_1002E6900);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for SearchOrigin(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40LL))(v18, v19, v20);
  return a1;
}

uint64_t sub_1000AC790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000AC79C);
}

uint64_t sub_1000AC79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_1000038E8(&qword_1002E6900);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }

    else
    {
      uint64_t v10 = type metadata accessor for SearchOrigin(0LL);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a3 + 24);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }

uint64_t sub_1000AC840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000AC84C);
}

uint64_t sub_1000AC84C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v8 = sub_1000038E8(&qword_1002E6900);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }

    else
    {
      uint64_t v10 = type metadata accessor for SearchOrigin(0LL);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a4 + 24);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }

  return result;
}

void sub_1000AC8EC(uint64_t a1)
{
  v6[0] = &unk_10023B140;
  sub_1000AC97C(319LL);
  if (v3 <= 0x3F)
  {
    v6[1] = *(void *)(v2 - 8) + 64LL;
    uint64_t v4 = type metadata accessor for SearchOrigin(319LL);
    if (v5 <= 0x3F)
    {
      v6[2] = *(void *)(v4 - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 3LL, v6, a1 + 16);
    }
  }

void sub_1000AC97C(uint64_t a1)
{
  if (!qword_1002E69F0)
  {
    uint64_t v2 = type metadata accessor for SearchEntity(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1002E69F0);
    }
  }

uint64_t sub_1000AC9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = type metadata accessor for SearchSection(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = sub_1000038E8(&qword_1002E6A28);
  __chkstk_darwin(v13);
  int v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = (uint64_t)&v15[*(int *)(v16 + 48)];
  sub_1000ACC1C(a1, (uint64_t)v15);
  sub_1000ACC1C(a2, v17);
  uint64_t v18 = sub_1000038E8(&qword_1002E68F8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48LL);
  int v20 = v19(v15, 2LL, v18);
  if (v20)
  {
    if (v20 == 1)
    {
      goto LABEL_8;
    }

    if (v19((char *)v17, 2LL, v18) == 2)
    {
LABEL_8:
      uint64_t v21 = (uint64_t)v15;
LABEL_9:
      sub_10002BDF4(v21, type metadata accessor for SearchSection);
      return 1LL;
    }
  }

  else
  {
    sub_1000ACC1C((uint64_t)v15, (uint64_t)v12);
    if (v19((char *)v17, 2LL, v18))
    {
      sub_10002BDF4((uint64_t)v12, type metadata accessor for SearchSection.ResultsMetadata);
    }

    else
    {
      sub_1000ACC1C(v17, (uint64_t)v9);
      sub_1000ACC60((uint64_t)v12, (uint64_t)v6);
      char v23 = sub_1000ACCA4(v6, v9);
      sub_10002BDF4((uint64_t)v9, type metadata accessor for SearchSection.ResultsMetadata);
      sub_10002BDF4((uint64_t)v6, type metadata accessor for SearchSection.ResultsMetadata);
      if ((v23 & 1) != 0)
      {
        sub_10002BDF4(v17, type metadata accessor for SearchSection);
        uint64_t v21 = (uint64_t)v15;
        goto LABEL_9;
      }
    }
  }

uint64_t sub_1000ACC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchSection(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000ACC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000ACCA4(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for SearchEntity(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v8 = sub_1000038E8(&qword_1002E6A30);
  __chkstk_darwin(v8);
  uint64_t v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = sub_1000038E8(&qword_1002E6900);
  __chkstk_darwin(v11);
  id v39 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v13);
  int v15 = &v35[-v14];
  __chkstk_darwin(v16);
  uint64_t v18 = &v35[-v17];
  uint64_t v19 = a1[1];
  uint64_t v20 = a2[1];
  if (*a1 != *a2 || v19 != v20)
  {
    char v21 = 0;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(*a1, v19, *a2, v20, 0LL) & 1) == 0) {
      return v21 & 1;
    }
  }

  uint64_t v37 = v7;
  uint64_t v22 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
  sub_10000DF2C((uint64_t)a1 + *(int *)(v22 + 20), (uint64_t)v18, &qword_1002E6900);
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v38 = a2;
  sub_10000DF2C((uint64_t)a2 + v23, (uint64_t)v15, &qword_1002E6900);
  uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10000DF2C((uint64_t)v18, (uint64_t)v10, &qword_1002E6900);
  sub_10000DF2C((uint64_t)v15, v24, &qword_1002E6900);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1LL, v4) == 1)
  {
    sub_1000077E0((uint64_t)v15, &qword_1002E6900);
    sub_1000077E0((uint64_t)v18, &qword_1002E6900);
    if (v25(v24, 1LL, v4) == 1)
    {
      sub_1000077E0((uint64_t)v10, &qword_1002E6900);
      goto LABEL_11;
    }

    goto LABEL_9;
  }

  uint64_t v26 = v39;
  sub_10000DF2C((uint64_t)v10, (uint64_t)v39, &qword_1002E6900);
  if (v25(v24, 1LL, v4) == 1)
  {
    sub_1000077E0((uint64_t)v15, &qword_1002E6900);
    sub_1000077E0((uint64_t)v18, &qword_1002E6900);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v26, v4);
LABEL_9:
    sub_1000077E0((uint64_t)v10, &qword_1002E6A30);
LABEL_14:
    char v21 = 0;
    return v21 & 1;
  }

  int v27 = v37;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 32))(v37, v24, v4);
  uint64_t v28 = sub_100004288( &qword_1002E6A40,  (uint64_t (*)(uint64_t))&type metadata accessor for SearchEntity,  (uint64_t)&protocol conformance descriptor for SearchEntity);
  int v36 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v27, v4, v28);
  uint64_t v29 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v29(v27, v4);
  sub_1000077E0((uint64_t)v15, &qword_1002E6900);
  sub_1000077E0((uint64_t)v18, &qword_1002E6900);
  v29(v26, v4);
  sub_1000077E0((uint64_t)v10, &qword_1002E6900);
  if ((v36 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v30 = type metadata accessor for SearchOrigin(0LL);
  uint64_t v31 = sub_100004288( &qword_1002E6A38,  (uint64_t (*)(uint64_t))&type metadata accessor for SearchOrigin,  (uint64_t)&protocol conformance descriptor for SearchOrigin);
  dispatch thunk of RawRepresentable.rawValue.getter(&v42, v30, v31);
  dispatch thunk of RawRepresentable.rawValue.getter(&v40, v30, v31);
  uint64_t v32 = v43;
  uint64_t v33 = v41;
  if (v42 == v40 && v43 == v41)
  {
    char v21 = 1;
    uint64_t v33 = v43;
  }

  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v43, v40, v41, 0LL);
  }

  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v33);
  return v21 & 1;
}

char *sub_1000AD08C(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E4940);
  __n128 v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for PersonalizationDataProvider(0LL, v3);
  BaseObjectGraph.optional<A>(_:)(&v36, v6, v6);
  uint64_t v7 = v36;
  uint64_t v8 = qword_1002E09C8;
  swift_retain(v36);
  if (v8 != -1) {
    swift_once(&qword_1002E09C8, sub_1000AAE68);
  }
  uint64_t v9 = sub_10000A634(v2, (uint64_t)qword_1002E6870);
  sub_10000DF2C(v9, (uint64_t)v5, (uint64_t *)&unk_1002E4940);
  uint64_t v10 = type metadata accessor for GenericDiffablePagePresenter(0LL);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  __n128 v11 = swift_retain(a1);
  uint64_t v12 = GenericDiffablePagePresenter.init(objectGraph:personalizationProvider:sidePackedPage:sidePackedPageRenderMetrics:pageUrl:)(v11);
  uint64_t v13 = sub_100004288( &qword_1002E6A48,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
  swift_retain_n(v12, 2LL);
  uint64_t v14 = sub_100165F50(a1, v12, v13, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000014LL, 0x800000010024B780LL);
  swift_release(v12);
  id v15 = objc_allocWithZone((Class)type metadata accessor for GenericDiffablePageViewController(0LL));
  swift_retain(v12);
  swift_retain(v14);
  uint64_t v16 = sub_1001F4854(v12, v14);
  dispatch thunk of GenericDiffablePagePresenter.pageTitle.getter();
  if (v17)
  {
    uint64_t v19 = v17;
    NSString v20 = String._bridgeToObjectiveC()();
    *(void *)&double v18 = swift_bridgeObjectRelease(v19).n128_u64[0];
  }

  else
  {
    NSString v20 = 0LL;
  }

  objc_msgSend(v16, "setTitle:", v20, v18);

  swift_release(v12);
  swift_release(v14);
  uint64_t v21 = qword_1002E0FE0;
  uint64_t v22 = v16;
  if (v21 != -1) {
    swift_once(&qword_1002E0FE0, sub_10017DB70);
  }
  uint64_t v23 = &v22[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_gradientMaskLengths];
  __int128 v24 = *(_OWORD *)&qword_1002F53A8;
  *(_OWORD *)uint64_t v23 = xmmword_1002F5398;
  *((_OWORD *)v23 + 1) = v24;
  id v25 = [v22 collectionView];
  if (v25)
  {
    uint64_t v26 = v25;
    [v25 _gradientMaskLengths];
    if (v30 != *(double *)v23
      || v27 != *((double *)v23 + 1)
      || v28 != *((double *)v23 + 2)
      || v29 != *((double *)v23 + 3))
    {
      objc_msgSend(v26, "_setGradientMaskLengths:");
    }

    swift_release(v12);
    swift_release(v7);
  }

  else
  {
    swift_release(v12);
    swift_release(v7);
  }

  return v22;
}

void sub_1000AD37C()
{
  __n128 v1 = &v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_trendingAppsInitialYOffset];
  *(void *)__n128 v1 = 0LL;
  v1[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_cancellables] = _swiftEmptyArrayStorage;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_searchResultsDelegate];
  *((void *)v2 + 1) = 0LL;
  swift_unknownObjectWeakInit(v2, 0LL);
  __n128 v3 = &v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeSection];
  uint64_t v4 = sub_1000038E8(&qword_1002E68F8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 1LL, 2LL, v4);
  *(void *)&v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_forcedTraitCollection] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SearchResultsContainerViewController.swift",  51LL,  2LL,  64LL,  0);
  __break(1u);
}

void sub_1000AD46C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeViewController];
  if (!v4)
  {
    uint64_t v8 = 0LL;
    goto LABEL_5;
  }

  id v5 = v4;
  [v5 willMoveToParentViewController:0];
  [v1 setOverrideTraitCollection:0 forChildViewController:v5];
  id v6 = [v5 view];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 removeFromSuperview];

    [v5 removeFromParentViewController];
    [v5 didMoveToParentViewController:0];

    uint64_t v8 = *(void **)&v1[v3];
LABEL_5:
    *(void *)&v1[v3] = a1;
    id v9 = a1;

    sub_1000AA4D4();
    return;
  }

  __break(1u);
}

void sub_1000AD54C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchOrigin(0LL);
  uint64_t v91 = *(void *)(v3 - 8);
  uint64_t v92 = v3;
  __chkstk_darwin(v3);
  uint64_t v94 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000038E8(&qword_1002E6900);
  __chkstk_darwin(v5);
  uint64_t v93 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v88 = *(void *)(v7 - 8);
  uint64_t v89 = v7;
  __chkstk_darwin(v7);
  id v87 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = type metadata accessor for SearchSection.ResultsMetadata(0LL);
  __chkstk_darwin(v90);
  uint64_t v95 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v86 - v11);
  uint64_t v13 = sub_1000038E8(&qword_1002E6A28);
  __chkstk_darwin(v13);
  id v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for SearchSection(0LL);
  __chkstk_darwin(v16);
  uint64_t v98 = (uint64_t)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  NSString v20 = (char *)&v86 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t *)((char *)&v86 - v22);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v86 - v25;
  __chkstk_darwin(v27);
  double v29 = (char *)&v86 - v28;
  uint64_t v96 = v1;
  uint64_t v30 = v1 + OBJC_IVAR____TtC8AppStore36SearchResultsContainerViewController_activeSection;
  swift_beginAccess(v30, v100, 0LL, 0LL);
  uint64_t v97 = v30;
  sub_1000ACC1C(v30, (uint64_t)v29);
  uint64_t v31 = (uint64_t)&v15[*(int *)(v13 + 48)];
  uint64_t v32 = a1;
  sub_1000ACC1C(a1, (uint64_t)v15);
  sub_1000ACC1C((uint64_t)v29, v31);
  uint64_t v33 = sub_1000038E8(&qword_1002E68F8);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48LL);
  int v35 = v34(v15, 2LL, v33);
  if (v35)
  {
    if (v35 == 1)
    {
LABEL_11:
      sub_10002BDF4((uint64_t)v15, type metadata accessor for SearchSection);
      sub_10002BDF4((uint64_t)v29, type metadata accessor for SearchSection);
      return;
    }
  }

  else
  {
    sub_1000ACC1C((uint64_t)v15, (uint64_t)v26);
    if (v34((char *)v31, 2LL, v33))
    {
      sub_10002BDF4((uint64_t)v26, type metadata accessor for SearchSection.ResultsMetadata);
      goto LABEL_12;
    }

    sub_1000ACC1C(v31, (uint64_t)v23);
    sub_1000ACC60((uint64_t)v26, (uint64_t)v12);
    char v36 = sub_1000ACCA4(v12, v23);
    sub_10002BDF4((uint64_t)v23, type metadata accessor for SearchSection.ResultsMetadata);
    sub_10002BDF4((uint64_t)v12, type metadata accessor for SearchSection.ResultsMetadata);
    if ((v36 & 1) != 0)
    {
      sub_10002BDF4(v31, type metadata accessor for SearchSection);
      goto LABEL_11;
    }
  }

uint64_t sub_1000ADDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchSection(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000ADDE8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000ADE0C(uint64_t a1)
{
}

uint64_t sub_1000ADE14(void *a1, __n128 a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for OSLogger(0LL, a2);
  uint64_t v59 = *(void *)(v5 - 8);
  uint64_t v60 = v5;
  __chkstk_darwin(v5);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for StringDebugSetting(0LL);
  __chkstk_darwin(v7);
  uint64_t v57 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v56 - v10;
  uint64_t v12 = type metadata accessor for BoolDebugSetting(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&double v16 = __chkstk_darwin(v15).n128_u64[0];
  uint64_t v18 = (char *)&v56 - v17;
  id v19 = objc_msgSend(v2, "textLabel", v16);
  if (v19)
  {
    NSString v20 = v19;
    uint64_t v56 = v12;
    uint64_t v21 = v11;
    uint64_t v22 = a1[3];
    uint64_t v23 = a1[4];
    sub_1000112B0(a1, v22);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    uint64_t v25 = v23;
    uint64_t v3 = v2;
    v24(v22, v25);
    uint64_t v27 = v26;
    NSString v28 = String._bridgeToObjectiveC()();
    uint64_t v29 = v27;
    uint64_t v11 = v21;
    uint64_t v12 = v56;
    objc_msgSend(v20, "setText:", v28, swift_bridgeObjectRelease(v29).n128_f64[0]);
  }

  sub_100011C30((uint64_t)a1, (uint64_t)v64);
  uint64_t v30 = sub_1000038E8(&qword_1002E3998);
  if (swift_dynamicCast(v18, v64, v30, v12, 0LL))
  {
    sub_100036F5C((uint64_t)v18, (uint64_t)v14, type metadata accessor for BoolDebugSetting);
    uint64_t v31 = *((void *)v14 + 3);
    uint64_t ObjectType = swift_getObjectType(*((void *)v14 + 2));
    Preferences.subscript.getter(&v61, &v14[*(int *)(v12 + 24)], ObjectType, &type metadata for Bool, v31);
    else {
      int v33 = v61 & 1;
    }
    if (v33) {
      uint64_t v40 = 3LL;
    }
    else {
      uint64_t v40 = 0LL;
    }
    [v3 setAccessoryType:v40];
    uint64_t v41 = type metadata accessor for BoolDebugSetting;
    uint64_t v42 = (uint64_t)v14;
LABEL_21:
    sub_10002BDF4(v42, v41);
    return _s8AppStore17PillOverlayLayoutVwxx_0(v64);
  }

  if (swift_dynamicCast(v11, v64, v30, v7, 0LL))
  {
    uint64_t v34 = v57;
    sub_100036F5C((uint64_t)v11, v57, type metadata accessor for StringDebugSetting);
    [v3 setAccessoryType:0];
    id v35 = [v3 detailTextLabel];
    if (v35)
    {
      char v36 = v35;
      uint64_t v37 = *(void *)(v34 + 24);
      uint64_t v38 = swift_getObjectType(*(void *)(v34 + 16));
      Preferences.subscript.getter(&v61, v34 + *(int *)(v7 + 24), v38, &type metadata for String, v37);
      uint64_t v39 = v62;
      if (!v62)
      {
        uint64_t v39 = *(void *)(v34 + *(int *)(v7 + 28) + 8);
        swift_bridgeObjectRetain(v39);
      }

      NSString v54 = String._bridgeToObjectiveC()();
      objc_msgSend(v36, "setText:", v54, swift_bridgeObjectRelease(v39).n128_f64[0]);
    }

    uint64_t v41 = type metadata accessor for StringDebugSetting;
    uint64_t v42 = v34;
    goto LABEL_21;
  }

  if (qword_1002E0348 != -1) {
    swift_once(&qword_1002E0348, sub_1000171B8);
  }
  uint64_t v43 = v60;
  uint64_t v44 = sub_10000A634(v60, (uint64_t)qword_1002F24C8);
  uint64_t v46 = v58;
  uint64_t v45 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v44, v43);
  uint64_t v47 = sub_1000038E8((uint64_t *)&unk_1002E6150);
  uint64_t v48 = type metadata accessor for LogMessage(0LL);
  uint64_t v49 = swift_allocObject( v47,  ((*(unsigned __int8 *)(*(void *)(v48 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v48 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v48 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v48 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v49 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100235590;
  static LogMessage.identity(_:)(v3);
  LogMessage.init(stringLiteral:)(0xD000000000000020LL, 0x800000010024B890LL);
  uint64_t v50 = a1[3];
  uint64_t v51 = sub_1000112B0(a1, v50);
  uint64_t v63 = v50;
  uint64_t v52 = sub_10000DD7C(&v61);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16LL))(v52, v51, v50);
  static LogMessage.safe(_:)(&v61);
  sub_100027424((uint64_t)&v61);
  Logger.warning(_:)(v49, v43, &protocol witness table for OSLogger);
  __n128 v53 = swift_bridgeObjectRelease(v49);
  (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v46, v43, v53);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v64);
}

void sub_1000AE3C8()
{
  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v7, "prepareForReuse");
  id v1 = [v0 textLabel];
  if (v1)
  {
    uint64_t v2 = v1;
    NSString v3 = String._bridgeToObjectiveC()();
    [v2 setText:v3];
  }

  id v4 = [v0 detailTextLabel];
  if (v4)
  {
    uint64_t v5 = v4;
    NSString v6 = String._bridgeToObjectiveC()();
    [v5 setText:v6];
  }

uint64_t type metadata accessor for DebugSettingTableViewCell()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore25DebugSettingTableViewCell);
}

uint64_t sub_1000AE4F8(uint64_t a1)
{
  uint64_t v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 1LL, &v2, a1 + 488);
}

char *sub_1000AE53C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = swift_isaMask & *v4;
  uint64_t v10 = qword_1002E6AC8;
  id v11 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0LL));
  uint64_t v12 = v4;
  *(void *)((char *)v4 + v10) = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  uint64_t v14 = (objc_class *)type metadata accessor for MissingCollectionViewCell( 0LL,  *(void *)(v9 + 472),  *(void *)(v9 + 480),  v13);
  v24.receiver = v12;
  v24.super_class = v14;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v16 = qword_1002E6AC8;
  uint64_t v17 = *(void **)&v15[qword_1002E6AC8];
  uint64_t v18 = v15;
  [v17 setTextAlignment:1];
  id v19 = v17;
  NSString v20 = String._bridgeToObjectiveC()();
  [v19 setText:v20];

  id v21 = [v18 contentView];
  id v22 = *(id *)&v15[v16];
  [v21 addSubview:v22];

  return v18;
}

char *sub_1000AE6D4(double a1, double a2, double a3, double a4)
{
  return sub_1000AE53C(a1, a2, a3, a4);
}

void sub_1000AE6F4(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_100066F98(a1, a2);
  if (v4)
  {
    if (v4 == 1)
    {
      id v5 = [(id)objc_opt_self(UIColor) blackColor];
      id v6 = [v5 colorWithAlphaComponent:0.4];
    }

    else
    {
      id v5 = [(id)objc_opt_self(UIColor) blackColor];
      id v6 = [v5 colorWithAlphaComponent:0.5];
    }
  }

  else
  {
    id v5 = [(id)objc_opt_self(UIColor) blackColor];
    id v6 = [v5 colorWithAlphaComponent:0.3];
  }

  id v14 = v6;

  if (a2)
  {
    uint64_t v7 = swift_allocObject(&unk_100289DA0, 32LL, 7LL);
    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
    *(void *)(v7 + 24) = v14;
    aBlock[4] = sub_1000AEBD4;
    uint64_t v16 = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100140110;
    aBlock[3] = &unk_100289DB8;
    uint64_t v8 = _Block_copy(aBlock);
    uint64_t v9 = v16;
    id v10 = a2;
    id v11 = v2;
    id v12 = v14;
    objc_msgSend(v10, "addCoordinatedAnimations:completion:", v8, 0, swift_release(v9).n128_f64[0]);

    _Block_release(v8);
  }

  else
  {
    id v13 = [v2 contentView];
    [v13 setBackgroundColor:v14];
  }

void sub_1000AE8E4(void *a1, void *a2)
{
  char v4 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  id v5 = a2;
  [v4 inheritedAnimationDuration];
  double v7 = v6;
  uint64_t v8 = swift_allocObject(&unk_100289DF0, 32LL, 7LL);
  *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v8 + 24) = v5;
  v12[4] = sub_1000AEBF4;
  uint64_t v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256LL;
  v12[2] = sub_100140110;
  v12[3] = &unk_100289E08;
  uint64_t v9 = _Block_copy(v12);
  uint64_t v10 = v13;
  id v11 = a1;
  swift_release(v10);
  [v4 animateWithDuration:v9 animations:v7];
  _Block_release(v9);
}

void sub_1000AE9D4(void *a1, uint64_t a2)
{
  id v3 = [a1 contentView];
  [v3 setBackgroundColor:a2];
}

id sub_1000AEA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = (objc_class *)type metadata accessor for MissingCollectionViewCell( 0LL,  *(void *)((swift_isaMask & *v4) + 0x1D8LL),  *(void *)((swift_isaMask & *v4) + 0x1E0LL),  a4);
  v9.receiver = v4;
  v9.super_class = v5;
  objc_msgSendSuper2(&v9, "layoutSubviews");
  double v6 = *(void **)((char *)v4 + qword_1002E6AC8);
  id v7 = [v4 contentView];
  [v7 frame];

  return objc_msgSend(v6, "setFrame:", CGRect.subtracting(insets:)(objc_msgSend(v4, "layoutMargins")).n128_f64[0]);
}

void sub_1000AEAFC(void *a1)
{
  id v4 = a1;
  sub_1000AEA24((uint64_t)v4, v1, v2, v3);
}

void sub_1000AEB30()
{
}

id sub_1000AEB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = (objc_class *)type metadata accessor for MissingCollectionViewCell( 0LL,  *(void *)((swift_isaMask & *v4) + 0x1D8LL),  *(void *)((swift_isaMask & *v4) + 0x1E0LL),  a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_1000AEB8C(uint64_t a1)
{
}

uint64_t type metadata accessor for MissingCollectionViewCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006B694(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MissingCollectionViewCell);
}

uint64_t sub_1000AEBA8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1000AEBD4()
{
}

uint64_t sub_1000AEBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000AEBEC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_1000AEBF4()
{
}

void sub_1000AEC08(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for IndexPath(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  objc_super v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002EE410);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000038E8((uint64_t *)&unk_1002E34D0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v40 - v15;
  *(void *)&double v18 = __chkstk_darwin(v17).n128_u64[0];
  NSString v20 = (char *)&v40 - v19;
  id v43 = a2;
  id v21 = objc_msgSend(a2, "previouslyFocusedIndexPath", v18);
  id v41 = a1;
  if (v21)
  {
    id v22 = v21;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v21);

    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v23(v20, 0LL, 1LL, v4);
  }

  else
  {
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v23(v20, 1LL, 1LL, v4);
  }

  id v24 = [v43 nextFocusedIndexPath];
  if (v24)
  {
    uint64_t v25 = v24;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v24);

    uint64_t v26 = 0LL;
  }

  else
  {
    uint64_t v26 = 1LL;
  }

  v23(v16, v26, 1LL, v4);
  uint64_t v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000AF0C8((uint64_t)v20, (uint64_t)v10);
  sub_1000AF0C8((uint64_t)v16, v27);
  NSString v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v28((uint64_t)v10, 1LL, v4) == 1)
  {
    sub_1000077E0((uint64_t)v16, (uint64_t *)&unk_1002E34D0);
    sub_1000077E0((uint64_t)v20, (uint64_t *)&unk_1002E34D0);
    if (v28(v27, 1LL, v4) == 1)
    {
      sub_1000077E0((uint64_t)v10, (uint64_t *)&unk_1002E34D0);
      uint64_t v29 = v42;
      goto LABEL_19;
    }

    goto LABEL_12;
  }

  sub_1000AF0C8((uint64_t)v10, (uint64_t)v13);
  if (v28(v27, 1LL, v4) == 1)
  {
    sub_1000077E0((uint64_t)v16, (uint64_t *)&unk_1002E34D0);
    sub_1000077E0((uint64_t)v20, (uint64_t *)&unk_1002E34D0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_12:
    sub_1000077E0((uint64_t)v10, (uint64_t *)&unk_1002EE410);
    uint64_t v29 = v42;
    goto LABEL_14;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v27, v4);
  unint64_t v30 = sub_1000AF110();
  char v31 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v7, v4, v30);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
  v32(v7, v4);
  sub_1000077E0((uint64_t)v16, (uint64_t *)&unk_1002E34D0);
  sub_1000077E0((uint64_t)v20, (uint64_t *)&unk_1002E34D0);
  v32(v13, v4);
  sub_1000077E0((uint64_t)v10, (uint64_t *)&unk_1002E34D0);
  uint64_t v29 = v42;
  if ((v31 & 1) != 0) {
    goto LABEL_19;
  }
LABEL_14:
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v29 + 16);
  if (!Strong) {
    goto LABEL_19;
  }
  uint64_t v34 = (void *)Strong;
  id v35 = [v43 nextFocusedView];
  if (!v35)
  {

    goto LABEL_19;
  }

  char v36 = v35;
  unsigned __int8 v37 = [v35 isDescendantOfView:v34];

  if ((v37 & 1) == 0)
  {
LABEL_19:
    *(void *)(v29 + 24) = 0LL;
    char v38 = 1;
    goto LABEL_20;
  }

  [v41 adjustedContentInset];
  char v38 = 0;
  *(double *)(v29 + 24) = -v39;
LABEL_20:
  *(_BYTE *)(v29 + 32) = v38;
}

uint64_t sub_1000AEFD4()
{
  return swift_deallocClassInstance(v0, 33LL, 7LL);
}

uint64_t type metadata accessor for HeroCarouselCollectionElementsObserver()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore38HeroCarouselCollectionElementsObserver);
}

uint64_t sub_1000AF018(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = __chkstk_darwin(v3);
  objc_super v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.indexPath.getter(v5);
  uint64_t v8 = type metadata accessor for HeroCarouselCollectionViewCell(0LL);
  uint64_t v9 = swift_dynamicCastClass(a1, v8);
  if (v9) {
    __n128 v10 = swift_unknownObjectWeakAssign(v1 + 16, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v7, v3, v10);
}

uint64_t sub_1000AF0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E34D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000AF110()
{
  unint64_t result = qword_1002E6C48;
  if (!qword_1002E6C48)
  {
    uint64_t v1 = type metadata accessor for IndexPath(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_1002E6C48);
  }

  return result;
}

uint64_t sub_1000AF158()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

uint64_t type metadata accessor for NestedShelfImpressionsCoordinator()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore33NestedShelfImpressionsCoordinator);
}

uint64_t sub_1000AF1AC()
{
  uint64_t v0 = type metadata accessor for TitledButtonStackLayout.Metrics(0LL);
  sub_10000DC04(v0, qword_1002F3C90);
  sub_10000A634(v0, (uint64_t)qword_1002F3C90);
  if (qword_1002E09F0 != -1) {
    swift_once(&qword_1002E09F0, sub_1000AF4B4);
  }
  uint64_t v1 = type metadata accessor for StaticDimension(0LL);
  uint64_t v2 = sub_10000A634(v1, (uint64_t)qword_1002F3CF0);
  v8[3] = v1;
  _OWORD v8[4] = &protocol witness table for StaticDimension;
  uint64_t v3 = sub_10000DD7C(v8);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v1 - 8) + 16LL))(v3, v2, v1);
  v7[3] = &type metadata for Double;
  v7[4] = &protocol witness table for Double;
  _OWORD v6[4] = &protocol witness table for Double;
  v7[0] = 0x4049000000000000LL;
  void v6[3] = &type metadata for Double;
  v5[4] = &protocol witness table for Double;
  v6[0] = 0x4049000000000000LL;
  v5[3] = &type metadata for Double;
  v5[0] = 0x407C200000000000LL;
  return TitledButtonStackLayout.Metrics.init(buttonHeight:horizontalInterItemSpace:verticalInterItemSpace:maximumButtonWidth:)( v8,  v7,  v6,  v5);
}

uint64_t sub_1000AF2B8(uint64_t a1)
{
  return sub_1000AF2E0(30.0, a1, qword_1002F3CA8);
}

uint64_t sub_1000AF2C8(uint64_t a1)
{
  return sub_1000AF2E0(70.0, a1, qword_1002F3CC0);
}

uint64_t sub_1000AF2E0(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = type metadata accessor for FontSource(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v9, a3);
  sub_10000A634(v9, (uint64_t)a3);
  if (qword_1002E09E8 != -1) {
    swift_once(&qword_1002E09E8, sub_1000AF434);
  }
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, v10);
  uint64_t v12 = sub_10000A634(v11, (uint64_t)qword_1002F3CD8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v8, v12, v11);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v16[3] = v5;
  v16[4] = &protocol witness table for FontSource;
  uint64_t v13 = sub_10000DD7C(v16);
  (*(void (**)(void *, char *, uint64_t))(v6 + 16))(v13, v8, v5);
  StaticDimension.init(_:scaledLike:)(v16, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

UIFontTextStyle sub_1000AF434(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000DC04(v2, qword_1002F3CD8);
  uint64_t v3 = sub_10000A634(v2, (uint64_t)qword_1002F3CD8);
  *(void *)uint64_t v3 = UIFontTextStyleSubheadline;
  *(_DWORD *)(v3 + 8) = 0;
  (*(void (**)(void))(*(void *)(v2 - 8) + 104LL))();
  return UIFontTextStyleSubheadline;
}

uint64_t sub_1000AF4B4()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v4, qword_1002F3CF0);
  sub_10000A634(v4, (uint64_t)qword_1002F3CF0);
  if (qword_1002E05F0 != -1) {
    swift_once(&qword_1002E05F0, sub_100072A00);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_10000A634(v6, (uint64_t)qword_1002F2D28);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v3, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  void v11[3] = v0;
  _OWORD v11[4] = &protocol witness table for FontSource;
  uint64_t v8 = sub_10000DD7C(v11);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  StaticDimension.init(_:scaledLike:)(v11, 66.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void *sub_1000AF710()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_buttons);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_buttons, v19, 0LL, 0LL);
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain_n(*v1, 2LL);
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v16))
  {
    uint64_t v4 = 4LL;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v2)
         : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1LL)) {
        break;
      }
      unsigned int v8 = [v5 isFocused];

      if (v8)
      {
        swift_bridgeObjectRelease_n(v2, 2LL);
        return _swiftEmptyArrayStorage;
      }

      ++v4;
      if (v7 == v3) {
        goto LABEL_10;
      }
    }

    __break(1u);
LABEL_18:
    if (v2 < 0) {
      uint64_t v16 = v2;
    }
    else {
      uint64_t v16 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain_n(v2, 2LL);
  }

double sub_1000AF908()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_buttons);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_buttons, v16, 1LL, 0LL);
  uint64_t v2 = *v1;
  unint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(*v1);
  for (; v3; unint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v11))
  {
    v0 += OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_reusePool;
    while (!__OFSUB__(v3--, 1LL))
    {
      if ((v2 & 0xC000000000000001LL) != 0)
      {
        uint64_t v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v2);
      }

      else
      {
        if ((v3 & 0x8000000000000000LL) != 0) {
          goto LABEL_12;
        }
        if (v3 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8LL) + 0x10)) {
          goto LABEL_13;
        }
        uint64_t v4 = (char *)*(id *)(v2 + 32 + 8 * v3);
      }

      id v5 = v4;
      uint64_t v6 = &v4[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_primaryActionHandler];
      uint64_t v7 = *(void *)&v4[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_primaryActionHandler];
      uint64_t v8 = *((void *)v6 + 1);
      *(void *)uint64_t v6 = 0LL;
      *((void *)v6 + 1) = 0LL;
      sub_10000A450(v7, v8);
      [v5 setTitle:0 forState:0];
      uint64_t v15 = v5;
      swift_beginAccess(v0, v14, 33LL, 0LL);
      uint64_t v9 = sub_1000038E8(&qword_1002E6DF0);
      ReusePool.recycle(_:)(&v15, v9);
      swift_endAccess(v14);

      if (!v3) {
        goto LABEL_18;
      }
    }

    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    if (v2 < 0) {
      uint64_t v11 = v2;
    }
    else {
      uint64_t v11 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v2);
  }

void sub_1000AFAA8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v37 - v10;
  swift_beginAccess(&v2[OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_reusePool], v38, 33LL, 0LL);
  uint64_t v12 = sub_1000038E8(&qword_1002E6DF0);
  ReusePool.dequeue(or:)(v37, sub_1000AFE38, 0LL, v12);
  swift_endAccess(v38);
  uint64_t v14 = (char *)v37[0];
  if (qword_1002E0770 != -1) {
    swift_once(&qword_1002E0770, sub_100072F34);
  }
  uint64_t v15 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v16 = sub_10000A634(v15, (uint64_t)qword_1002F31A8);
  uint64_t v17 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v11, v16, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0LL, 1LL, v15);
  uint64_t v18 = (uint64_t)&v14[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase];
  swift_beginAccess(&v14[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase], v38, 0LL, 0LL);
  sub_10000DF2C(v18, (uint64_t)v8, &qword_1002E25C0);
  swift_beginAccess(v18, v37, 33LL, 0LL);
  sub_10000DBBC((uint64_t)v11, v18);
  swift_endAccess(v37);
  sub_10010EA18((uint64_t)v8);
  sub_1000077E0((uint64_t)v11, &qword_1002E25C0);
  uint64_t v19 = sub_1000077E0((uint64_t)v8, &qword_1002E25C0);
  TitledButton.title.getter(v19);
  uint64_t v21 = v20;
  NSString v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setTitle:forState:", v22, 0, swift_bridgeObjectRelease(v21).n128_f64[0]);

  uint64_t v23 = swift_allocObject(&unk_100289EF8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v23 + 16, v14);
  uint64_t v24 = swift_allocObject(&unk_100289F20, 24LL, 7LL);
  swift_unknownObjectWeakInit(v24 + 16, v3);
  uint64_t v25 = (void (*)())swift_allocObject(&unk_100289F48, 48LL, 7LL);
  *((void *)v25 + 2) = a1;
  *((void *)v25 + 3) = v24;
  *((void *)v25 + 4) = v23;
  *((void *)v25 + 5) = a2;
  uint64_t v26 = (void (**)())&v14[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_primaryActionHandler];
  uint64_t v27 = *(void *)&v14[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_primaryActionHandler];
  uint64_t v28 = *(void *)&v14[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_primaryActionHandler + 8];
  *uint64_t v26 = sub_1000B0BDC;
  v26[1] = v25;
  swift_retain(a1);
  swift_retain(a2);
  sub_10000A450(v27, v28);
  id v29 = [v14 titleLabel];
  if (v29)
  {
    unint64_t v30 = v29;
    [v29 setEnablesMarqueeWhenAncestorFocused:1];
  }

  char v31 = &v3[OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_buttons];
  swift_beginAccess(&v3[OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_buttons], v37, 33LL, 0LL);
  uint64_t v32 = v14;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
  unint64_t v34 = *(void *)((*(void *)v31 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v33 = *(void *)((*(void *)v31 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v34 >= v33 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1LL);
  }
  uint64_t v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v32);
  specialized Array._endMutation()(v35);
  id v36 = objc_msgSend(v3, "contentView", swift_endAccess(v37).n128_f64[0]);
  [v36 addSubview:v32];
}

id sub_1000AFE38@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DynamicTypeButton(0LL);
  id result = [(id)swift_getObjCClassFromMetadata(v2) buttonWithType:1];
  *a1 = result;
  return result;
}

void sub_1000AFE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v12 = TitledButton.action.getter(v9);
  if (v12)
  {
    uint64_t v13 = v12;
    swift_beginAccess(a2 + 16, v25, 0LL, 0LL);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong && (v15 = (void *)Strong, uint64_t v16 = UIResponder.nearestActionRunner.getter(), v15, v16))
    {
      uint64_t v17 = a3 + 16;
      swift_beginAccess(v17, v22, 0LL, 0LL);
      uint64_t v18 = swift_unknownObjectWeakLoadStrong(v17);
      if (v18)
      {
        uint64_t v19 = v18;
        *((void *)&v24 + 1) = type metadata accessor for DynamicTypeButton(0LL);
        *(void *)&__int128 v23 = v19;
      }

      else
      {
        __int128 v23 = 0u;
        __int128 v24 = 0u;
      }

      (*(void (**)(char *, void, uint64_t))(v8 + 104))( v11,  enum case for ActionRunner.Origin.userInitiated(_:),  v7);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v13, &v23, v11, a4);
      swift_release(v16);
      __n128 v20 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v20);
      sub_1000077E0((uint64_t)&v23, (uint64_t *)&unk_1002E3500);
    }

    else
    {
      swift_release(v13);
    }
  }

uint64_t sub_1000AFFF4()
{
  uint64_t v26 = type metadata accessor for LayoutRect(0LL);
  uint64_t v1 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  unint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E6DC8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for TitledButtonStackLayout.Metrics(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for TitledButtonStackLayout(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = (objc_class *)type metadata accessor for TitledButtonStackCollectionViewCell(0LL);
  v29.receiver = v0;
  v29.super_class = v15;
  objc_msgSendSuper2(&v29, "layoutSubviews");
  if (qword_1002E09D0 != -1) {
    swift_once(&qword_1002E09D0, sub_1000AF1AC);
  }
  uint64_t v16 = sub_10000A634(v7, (uint64_t)qword_1002F3C90);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v16, v7);
  uint64_t v17 = &v0[OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_buttons];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_buttons], v28, 0LL, 0LL);
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = swift_bridgeObjectRetain(v18);
  uint64_t v20 = sub_1000CA6C8(v19);
  swift_bridgeObjectRelease(v18);
  uint64_t v21 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_lineBreaks];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_lineBreaks], v27, 0LL, 0LL);
  sub_10000DF2C(v21, (uint64_t)v6, (uint64_t *)&unk_1002E6DC8);
  TitledButtonStackLayout.init(metrics:items:lineBreaks:)(v10, v20, v6);
  id v22 = [v0 contentView];
  [v22 frame];

  __n128 v23 = CGRect.subtracting(insets:)([v0 layoutMargins]);
  TitledButtonStackLayout.placeChildren(relativeTo:in:)(v0, v23);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1000B049C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_reusePool;
  uint64_t v2 = sub_1000038E8(&qword_1002E6DF0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
}

id sub_1000B051C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitledButtonStackCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000B05D4()
{
  return type metadata accessor for TitledButtonStackCollectionViewCell(0LL);
}

uint64_t type metadata accessor for TitledButtonStackCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E6D88;
  if (!qword_1002E6D88) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TitledButtonStackCollectionViewCell);
  }
  return result;
}

void sub_1000B0618(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v8[0] = *(void *)(v2 - 8) + 64LL;
    sub_1000B06C8(319LL);
    if (v5 <= 0x3F)
    {
      v8[1] = *(void *)(v4 - 8) + 64LL;
      __int128 v8[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_1000B0720(319LL);
      if (v7 <= 0x3F)
      {
        v8[3] = *(void *)(v6 - 8) + 64LL;
        swift_updateClassMetadata2(a1, 256LL, 4LL, v8, a1 + 472);
      }
    }
  }

void sub_1000B06C8(uint64_t a1)
{
  if (!qword_1002E6DA0)
  {
    uint64_t v2 = sub_100003974(&qword_1002E6DA8);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1002E6DA0);
    }
  }

void sub_1000B0720(uint64_t a1)
{
  if (!qword_1002E6DB0)
  {
    uint64_t v2 = sub_100003974((uint64_t *)&unk_1002EA3F0);
    unint64_t v3 = sub_1000B0784();
    unint64_t v4 = type metadata accessor for ReusePool(a1, v2, v3);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_1002E6DB0);
    }
  }

unint64_t sub_1000B0784()
{
  unint64_t result = qword_1002E6DC0;
  if (!qword_1002E6DC0)
  {
    uint64_t v1 = sub_100003974((uint64_t *)&unk_1002EA3F0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002E6DC0);
  }

  return result;
}

uint64_t sub_1000B07D0(uint64_t a1, uint64_t a2)
{
  uint64_t result = type metadata accessor for LayoutViewPlaceholder(0LL);
  v8[3] = result;
  void v8[4] = &protocol witness table for LayoutViewPlaceholder;
  v8[0] = a1;
  if (a2 < 0)
  {
    __break(1u);
  }

  else
  {
    if (a2)
    {
      uint64_t v5 = sub_1000038E8((uint64_t *)&unk_1002E6DE0);
      uint64_t v6 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v5);
      v6[2] = a2;
      uint64_t v7 = (uint64_t)(v6 + 4);
      do
      {
        sub_100011C30((uint64_t)v8, v7);
        v7 += 40LL;
        --a2;
      }

      while (a2);
    }

    else
    {
      uint64_t v6 = _swiftEmptyArrayStorage;
    }

    _s8AppStore17PillOverlayLayoutVwxx_0(v8);
    return (uint64_t)v6;
  }

  return result;
}

double sub_1000B0878(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v35 = type metadata accessor for IndexSet(0LL);
  __chkstk_darwin(v35);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = sub_1000038E8((uint64_t *)&unk_1002E6DC8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for TitledButtonStackLayout.Metrics(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for TitledButtonStackLayout(0LL);
  uint64_t v34 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E09D0 != -1) {
    swift_once(&qword_1002E09D0, sub_1000AF1AC);
  }
  uint64_t v21 = sub_10000A634(v14, (uint64_t)qword_1002F3C90);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v21, v14);
  type metadata accessor for LayoutViewPlaceholder(0LL);
  uint64_t v22 = static LayoutViewPlaceholder.withIdentityMeasurement.getter();
  uint64_t v23 = TitledButtonStack.buttons.getter();
  uint64_t v24 = v23;
  if ((unint64_t)v23 >> 62)
  {
    if (v23 >= 0) {
      v23 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter(v23);
  }

  else
  {
    uint64_t v25 = *(void *)((v23 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  swift_bridgeObjectRelease(v24);
  uint64_t v26 = sub_1000B07D0(v22, v25);
  uint64_t v27 = TitledButtonStack.regularLineBreaks.getter();
  TitledButtonStack.compactLineBreaks.getter(v27);
  uint64_t v28 = sub_1000038E8(&qword_1002E1E40);
  Conditional<>.init(regularValue:compactValue:)(v10, v7, v28, v35);
  uint64_t v29 = sub_1000038E8(&qword_1002E6DA8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v13, 0LL, 1LL, v29);
  TitledButtonStackLayout.init(metrics:items:lineBreaks:)(v17, v26, v13);
  unint64_t v30 = sub_1000B0B34();
  double v31 = dispatch thunk of Measurable.measurements(fitting:in:)(v36, v18, v30, a1, a2);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v18);
  return v31;
}

unint64_t sub_1000B0B34()
{
  unint64_t result = qword_1002E6DD8;
  if (!qword_1002E6DD8)
  {
    uint64_t v1 = type metadata accessor for TitledButtonStackLayout(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for TitledButtonStackLayout, v1);
    atomic_store(result, (unint64_t *)&qword_1002E6DD8);
  }

  return result;
}

uint64_t sub_1000B0B7C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000B0BA0()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_1000B0BDC()
{
}

double sub_1000B0BEC( uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v11 = *a1;
  type metadata accessor for PrivacyCategoryView();
  id v12 = [a8 traitCollection];
  uint64_t v13 = sub_100022E38(v11, (uint64_t)v12);

  uint64_t v14 = type metadata accessor for LayoutViewPlaceholder(0LL);
  dispatch thunk of Measurable.measurements(fitting:in:)( a8,  v14,  &protocol witness table for LayoutViewPlaceholder,  a2,  a3);
  swift_release(v13);
  return a2;
}

double sub_1000B0CAC(uint64_t *a1)
{
  return sub_1000B11A8(*a1);
}

uint64_t sub_1000B0CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8AppStore33PrivacyCategoryCollectionViewCell_privacyCategoryView)
                 + OBJC_IVAR____TtC8AppStore19PrivacyCategoryView_iconView);
  uint64_t v6 = type metadata accessor for ArtworkView(0LL);
  uint64_t v7 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  return ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v5, a3, v6, v7);
}

uint64_t sub_1000B0D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B0D8C(a1, a3);
}

uint64_t sub_1000B0D60()
{
  return sub_100004288( &qword_1002E6DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyCategory,  (uint64_t)&protocol conformance descriptor for PrivacyCategory);
}

uint64_t sub_1000B0D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v3 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = type metadata accessor for FontSource(0LL);
  uint64_t v39 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (UIFontTextStyle *)&v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = type metadata accessor for StaticDimension(0LL);
  uint64_t v41 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v40 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = sub_1000038E8(&qword_1002EE510);
  __chkstk_darwin(v11);
  uint64_t v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v14 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v37[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v18);
  uint64_t v20 = &v37[-v19];
  sub_1000B1410(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1LL, v14) != 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32))(v20, v13, v14);
    (*(void (**)(_BYTE *, void, uint64_t))(v15 + 104))( v17,  enum case for Shelf.ContentType.privacyType(_:),  v14);
    uint64_t v25 = sub_100004288( (unint64_t *)&unk_1002E6E50,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType,  (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v45, v14, v25);
    dispatch thunk of RawRepresentable.rawValue.getter(&v49, v14, v25);
    uint64_t v26 = v46;
    uint64_t v27 = v50;
    if (v45 == v49 && v46 == v50)
    {
      swift_bridgeObjectRelease_n(v46, 2LL);
      uint64_t v28 = *(void (**)(_BYTE *, uint64_t))(v15 + 8);
      v28(v17, v14);
    }

    else
    {
      int v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v46, v49, v50, 0LL);
      swift_bridgeObjectRelease(v26);
      __n128 v29 = swift_bridgeObjectRelease(v27);
      uint64_t v28 = *(void (**)(_BYTE *, uint64_t))(v15 + 8);
      ((void (*)(_BYTE *, uint64_t, __n128))v28)(v17, v14, v29);
      if ((v38 & 1) == 0)
      {
        v28(v20, v14);
        goto LABEL_3;
      }
    }

    uint64_t v30 = v42;
    UIFontTextStyle *v8 = UIFontTextStyleBody;
    uint64_t v31 = v39;
    (*(void (**)(UIFontTextStyle *, void, uint64_t))(v39 + 104))( v8,  enum case for FontSource.textStyle(_:),  v6);
    uint64_t v47 = v6;
    uint64_t v48 = &protocol witness table for FontSource;
    uint64_t v32 = sub_10000DD7C(&v45);
    (*(void (**)(void *, UIFontTextStyle *, uint64_t))(v31 + 16))(v32, v8, v6);
    uint64_t v33 = UIFontTextStyleBody;
    uint64_t v34 = v40;
    StaticDimension.init(_:scaledLike:)(&v45, 40.0);
    uint64_t v35 = (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v31 + 8))(v8, v6);
    static Dimensions.defaultRoundingRule.getter(v35);
    double v24 = AnyDimension.value(in:rounded:)(v44, v5, v9, &protocol witness table for StaticDimension);
    (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v5, v43);
    (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v34, v9);
    v28(v20, v14);
    return *(void *)&v24;
  }

  sub_1000077E0((uint64_t)v13, &qword_1002EE510);
LABEL_3:
  uint64_t v22 = v42;
  uint64_t v21 = v43;
  if (qword_1002E0BE0 != -1) {
    swift_once(&qword_1002E0BE0, sub_100110BD8);
  }
  uint64_t v23 = sub_10000A634(v9, (uint64_t)qword_1002F4540);
  static Dimensions.defaultRoundingRule.getter(v23);
  double v24 = AnyDimension.value(in:rounded:)(v44, v5, v9, &protocol witness table for StaticDimension);
  (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v5, v21);
  return *(void *)&v24;
}

double sub_1000B11A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC8AppStore33PrivacyCategoryCollectionViewCell_privacyCategory;
  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC8AppStore33PrivacyCategoryCollectionViewCell_privacyCategory];
  *(void *)&v2[OBJC_IVAR____TtC8AppStore33PrivacyCategoryCollectionViewCell_privacyCategory] = a1;
  swift_retain_n(a1, 2LL);
  swift_release(v5);
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC8AppStore33PrivacyCategoryCollectionViewCell_privacyCategoryView];
  uint64_t v7 = *(void *)&v2[v4];
  uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC8AppStore19PrivacyCategoryView_category);
  *(void *)(v6 + OBJC_IVAR____TtC8AppStore19PrivacyCategoryView_category) = v7;
  swift_retain_n(v7, 2LL);
  swift_release(v8);
  sub_1000227C8(v9, v10);
  objc_msgSend(v2, "setNeedsLayout", swift_release(v7).n128_f64[0]);
  *(void *)&double result = swift_release(a1).n128_u64[0];
  return result;
}

double sub_1000B1258()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore33PrivacyCategoryCollectionViewCell_privacyCategoryView);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore19PrivacyCategoryView_category);
  if (v2)
  {
    swift_retain(*(void *)(v1 + OBJC_IVAR____TtC8AppStore19PrivacyCategoryView_category));
    uint64_t v4 = PrivacyCategory.artwork.getter(v3);
    swift_release(v2);
    if (qword_1002E0398 != -1) {
      uint64_t v5 = swift_once(&qword_1002E0398, sub_10002205C);
    }
    uint64_t v6 = Artwork.config(using:)(v5, *(double *)&xmmword_1002F25E0, *((double *)&xmmword_1002F25E0 + 1));
    id v13 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore19PrivacyCategoryView_iconView);
    uint64_t v7 = type metadata accessor for ArtworkView(0LL);
    uint64_t v8 = sub_100004288( (unint64_t *)&qword_1002E6E48,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for NSObject);
    id v9 = v13;
    AnyHashable.init<A>(_:)(v14, &v13, v7, v8);
    uint64_t v10 = swift_allocObject(&unk_100289FE8, 24LL, 7LL);
    swift_unknownObjectWeakInit(v10 + 16, v1);
    __n128 v11 = swift_retain(v10);
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v6,  2LL,  0LL,  v14,  sub_1000B1408,  v10,  v11);
    swift_release(v4);
    swift_release(v6);
    swift_release(v10);
    sub_1000077E0((uint64_t)v14, (uint64_t *)&unk_1002E2290);
    *(void *)&double result = swift_release(v10).n128_u64[0];
  }

  return result;
}

uint64_t sub_1000B13E4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000B1408(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1000B1410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002EE510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

double sub_1000B1458(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = (_OWORD *)(v1 + OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics);
  swift_beginAccess(v8, v28, 0LL, 0LL);
  sub_10001D844(v8, v18);
  uint64_t v9 = v20;
  uint64_t v10 = v21;
  sub_1000112B0(v19, v20);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v9, v10);
  AnyDimension.value(in:rounded:)(v2, v7, v9, v10);
  __n128 v11 = *(void (**)(void, void))(v5 + 8);
  v11(v7, v4);
  uint64_t v12 = v23;
  uint64_t v13 = v24;
  sub_1000112B0(v22, v23);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12, v13);
  AnyDimension.value(in:rounded:)(v2, v7, v12, v13);
  v11(v7, v4);
  uint64_t v14 = v26;
  uint64_t v15 = v27;
  sub_1000112B0(v25, v26);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v14, v15);
  AnyDimension.value(in:rounded:)(v2, v7, v14, v15);
  v11(v7, v4);
  sub_10001D8C8(v18);
  return a1;
}

uint64_t sub_1000B1648()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = &type metadata for Double;
  __n128 v29 = &protocol witness table for Double;
  *(void *)&__int128 v27 = 0x4034000000000000LL;
  if (qword_1002E0590 != -1) {
    swift_once(&qword_1002E0590, sub_100072788);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_10000A634(v5, (uint64_t)qword_1002F2C20);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL);
  v7(v4, v6, v5);
  uint64_t v8 = enum case for FontSource.useCase(_:);
  uint64_t v9 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v9(v4, enum case for FontSource.useCase(_:), v0);
  uint64_t v10 = type metadata accessor for StaticDimension(0LL);
  uint64_t v25 = v10;
  uint64_t v26 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v24);
  uint64_t v22 = v0;
  uint64_t v23 = &protocol witness table for FontSource;
  __n128 v11 = sub_10000DD7C(&v21);
  uint64_t v12 = (void (*)(void *, char *, uint64_t))v1[2];
  v12(v11, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v21, 38.0);
  uint64_t v13 = (void (*)(char *, uint64_t))v1[1];
  v13(v4, v0);
  if (qword_1002E0598 != -1) {
    swift_once(&qword_1002E0598, sub_1000727A0);
  }
  uint64_t v14 = sub_10000A634(v5, (uint64_t)qword_1002F2C38);
  v7(v4, v14, v5);
  v9(v4, v8, v0);
  uint64_t v22 = v10;
  uint64_t v23 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v21);
  uint64_t v19 = v0;
  uint64_t v20 = &protocol witness table for FontSource;
  uint64_t v15 = sub_10000DD7C(&v18);
  v12(v15, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v18, 33.0);
  v13(v4, v0);
  uint64_t v19 = type metadata accessor for ZeroDimension(0LL);
  uint64_t v20 = &protocol witness table for ZeroDimension;
  sub_10000DD7C(&v18);
  static ZeroDimension.zero.getter();
  xmmword_1002F3D20 = xmmword_10023B490;
  sub_1000243BC(&v27, (uint64_t)&unk_1002F3D30);
  sub_1000243BC(&v24, (uint64_t)&unk_1002F3D58);
  sub_1000243BC(&v21, (uint64_t)&unk_1002F3D80);
  return sub_1000243BC(&v18, (uint64_t)&unk_1002F3DA8);
}

uint64_t sub_1000B18E4()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = &type metadata for Double;
  __n128 v29 = &protocol witness table for Double;
  *(void *)&__int128 v27 = 0x4034000000000000LL;
  if (qword_1002E0590 != -1) {
    swift_once(&qword_1002E0590, sub_100072788);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_10000A634(v5, (uint64_t)qword_1002F2C20);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL);
  v7(v4, v6, v5);
  uint64_t v8 = enum case for FontSource.useCase(_:);
  uint64_t v9 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v9(v4, enum case for FontSource.useCase(_:), v0);
  uint64_t v10 = type metadata accessor for StaticDimension(0LL);
  uint64_t v25 = v10;
  uint64_t v26 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v24);
  uint64_t v22 = v0;
  uint64_t v23 = &protocol witness table for FontSource;
  __n128 v11 = sub_10000DD7C(&v21);
  uint64_t v12 = (void (*)(void *, char *, uint64_t))v1[2];
  v12(v11, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v21, 38.0);
  uint64_t v13 = (void (*)(char *, uint64_t))v1[1];
  v13(v4, v0);
  if (qword_1002E0598 != -1) {
    swift_once(&qword_1002E0598, sub_1000727A0);
  }
  uint64_t v14 = sub_10000A634(v5, (uint64_t)qword_1002F2C38);
  v7(v4, v14, v5);
  v9(v4, v8, v0);
  uint64_t v22 = v10;
  uint64_t v23 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v21);
  uint64_t v19 = v0;
  uint64_t v20 = &protocol witness table for FontSource;
  uint64_t v15 = sub_10000DD7C(&v18);
  v12(v15, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v18, 33.0);
  v13(v4, v0);
  uint64_t v19 = type metadata accessor for ZeroDimension(0LL);
  uint64_t v20 = &protocol witness table for ZeroDimension;
  sub_10000DD7C(&v18);
  static ZeroDimension.zero.getter();
  xmmword_1002F3DD0 = xmmword_10023B4A0;
  sub_1000243BC(&v27, (uint64_t)&unk_1002F3DE0);
  sub_1000243BC(&v24, (uint64_t)&unk_1002F3E08);
  sub_1000243BC(&v21, (uint64_t)&unk_1002F3E30);
  return sub_1000243BC(&v18, (uint64_t)&unk_1002F3E58);
}

uint64_t sub_1000B1B80()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  sub_10000DC04(v0, qword_1002F3E80);
  sub_10000A634(v0, (uint64_t)qword_1002F3E80);
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v2 = [v1 systemBlackColor];
  id v3 = [v1 systemWhiteColor];
  v7[0] = sub_1000038E8(&qword_1002E1E40);
  unint64_t v4 = sub_10000EA38();
  v7[1] = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023B4D0, v7);
  id v8 = v2;
  id v9 = v3;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v9, &v8, v4);
}

uint64_t sub_1000B1C64()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  sub_10000DC04(v0, qword_1002F3E98);
  sub_10000A634(v0, (uint64_t)qword_1002F3E98);
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v2 = [v1 systemBlackColor];
  id v3 = [v2 colorWithAlphaComponent:0.5];

  id v4 = [v1 systemWhiteColor];
  id v5 = [v4 colorWithAlphaComponent:0.5];

  v9[0] = sub_1000038E8(&qword_1002E1E40);
  unint64_t v6 = sub_10000EA38();
  v9[1] = v6;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023B4D0, v9);
  id v10 = v3;
  id v11 = v5;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v11, &v10, v6);
}

char *sub_1000B1D8C(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v9 = type metadata accessor for CornerStyle(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = OBJC_IVAR____TtC8AppStore15SmallLockupView_artworkView;
  type metadata accessor for ArtworkView(0LL);
  uint64_t v19 = v4;
  *(void *)&v4[v18] = static ArtworkView.staticIconArtworkView.getter();
  uint64_t v20 = OBJC_IVAR____TtC8AppStore15SmallLockupView_titleLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002E0590 != -1) {
    swift_once(&qword_1002E0590, sub_100072788);
  }
  uint64_t v21 = sub_10000A634(v14, (uint64_t)qword_1002F2C20);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v22(v17, v21, v14);
  *(void *)&v19[v20] = sub_100011F1C((uint64_t)v17, 1LL, 0LL, 1, 1);
  uint64_t v23 = OBJC_IVAR____TtC8AppStore15SmallLockupView_subtitleLabel;
  if (qword_1002E0598 != -1) {
    swift_once(&qword_1002E0598, sub_1000727A0);
  }
  uint64_t v24 = sub_10000A634(v14, (uint64_t)qword_1002F2C38);
  v22(v17, v24, v14);
  *(void *)&v19[v23] = sub_100011F1C((uint64_t)v17, 1LL, 0LL, 1, 1);
  uint64_t v25 = OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics;
  if (qword_1002E09F8 != -1) {
    swift_once(&qword_1002E09F8, sub_1000B1648);
  }
  sub_10001D844(&xmmword_1002F3D20, &v19[v25]);

  v34.receiver = v19;
  v34.super_class = ObjectType;
  uint64_t v26 = (char *)objc_msgSendSuper2(&v34, "initWithFrame:", a1, a2, a3, a4);
  [v26 setInsetsLayoutMarginsFromSafeArea:0];
  [v26 _setSafeAreaInsetsFrozen:1];
  objc_msgSend( v26,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);
  uint64_t v27 = OBJC_IVAR____TtC8AppStore15SmallLockupView_artworkView;
  id v28 = *(id *)&v26[OBJC_IVAR____TtC8AppStore15SmallLockupView_artworkView];
  ArtworkView.contentMode.setter(1LL);

  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for CornerStyle.continuous(_:), v9);
  ArtworkView.setCorner(radius:style:)(v12, 8.0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  [v26 addSubview:*(void *)&v26[v27]];
  __n128 v29 = *(void **)&v26[OBJC_IVAR____TtC8AppStore15SmallLockupView_titleLabel];
  [v29 setEnablesMarqueeWhenAncestorFocused:1];
  [v26 addSubview:v29];
  uint64_t v30 = *(void **)&v26[OBJC_IVAR____TtC8AppStore15SmallLockupView_subtitleLabel];
  [v30 setEnablesMarqueeWhenAncestorFocused:1];
  [v26 addSubview:v30];
  sub_1000B210C();

  return v26;
}

void sub_1000B210C()
{
  uint64_t v1 = v0;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore15SmallLockupView_titleLabel);
  if (qword_1002E0A08 != -1) {
    swift_once(&qword_1002E0A08, sub_1000B1B80);
  }
  uint64_t v3 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  sub_10000A634(v3, (uint64_t)qword_1002F3E80);
  uint64_t v7 = v0;
  Conditional.evaluate(with:)(&v8, &v7, v3);
  id v4 = v8;
  [v2 setTextColor:v8];

  id v5 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore15SmallLockupView_subtitleLabel);
  if (qword_1002E0A10 != -1) {
    swift_once(&qword_1002E0A10, sub_1000B1C64);
  }
  sub_10000A634(v3, (uint64_t)qword_1002F3E98);
  uint64_t v7 = v1;
  Conditional.evaluate(with:)(&v8, &v7, v3);
  unint64_t v6 = v8;
  [v5 setTextColor:v8];
}

void *sub_1000B227C()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v21 = type metadata accessor for LayoutRect(0LL);
  uint64_t v3 = *(void *)(v21 - 8);
  *(void *)&double v4 = __chkstk_darwin(v21).n128_u64[0];
  unint64_t v6 = (char *)&v22[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v33.receiver = v0;
  v33.super_class = ObjectType;
  objc_msgSendSuper2(&v33, "layoutSubviews", v4);
  uint64_t v7 = &v0[OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics];
  swift_beginAccess(v7, &v31, 0LL, 0LL);
  sub_10001D844(v7, v30);
  id v29 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore15SmallLockupView_artworkView);
  id v8 = v29;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore15SmallLockupView_titleLabel);
  uint64_t v27 = type metadata accessor for DynamicTypeLabel(0LL);
  id v28 = &protocol witness table for UILabel;
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore15SmallLockupView_subtitleLabel);
  uint64_t v25 = &protocol witness table for UILabel;
  *(void *)&__int128 v26 = v9;
  uint64_t v24 = v27;
  *(void *)&__int128 v23 = v10;
  sub_10001D844(v30, &v22[15]);
  __int128 v11 = v30[0];
  uint64_t v12 = type metadata accessor for ArtworkView(0LL);
  id v13 = v8;
  id v14 = v9;
  id v15 = v10;
  LayoutView.withMeasurements(representing:)( v32,  v12,  protocol witness table for UIView,  *(double *)&v11,  *((double *)&v11 + 1));
  sub_10001D8C8(v30);
  sub_1000243BC((__int128 *)v32, (uint64_t)v22);
  sub_1000243BC(&v26, (uint64_t)&v22[5]);
  sub_1000243BC(&v23, (uint64_t)&v22[10]);
  memcpy(v32, v22, sizeof(v32));

  *(void *)&double v16 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType).n128_u64[0];
  TVSmallLockupLayout.placeChildren(relativeTo:in:)(v1, v16, v17, v18, v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v21);
  return sub_1000B28D8(v32);
}

CGFloat sub_1000B2518()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v6 = &v0[OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics];
  swift_beginAccess(v6, v26, 0LL, 0LL);
  sub_10001D844(v6, v16);
  [v1 layoutMargins];
  uint64_t v7 = v18;
  uint64_t v8 = v19;
  sub_1000112B0(v17, v18);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v7, v8);
  AnyDimension.value(in:rounded:)(v1, v5, v7, v8);
  uint64_t v9 = *(void (**)(void, void))(v3 + 8);
  v9(v5, v2);
  uint64_t v10 = v21;
  uint64_t v11 = v22;
  sub_1000112B0(v20, v21);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v10, v11);
  AnyDimension.value(in:rounded:)(v1, v5, v10, v11);
  v9(v5, v2);
  uint64_t v12 = v24;
  uint64_t v13 = v25;
  sub_1000112B0(v23, v24);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12, v13);
  AnyDimension.value(in:rounded:)(v1, v5, v12, v13);
  v9(v5, v2);
  sub_10001D8C8(v16);
  return UIViewNoIntrinsicMetric;
}

uint64_t type metadata accessor for SmallLockupView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore15SmallLockupView);
}

void sub_1000B2870(void *a1, uint64_t a2, double a3)
{
}

uint64_t sub_1000B28A4()
{
  return 16LL;
}

__n128 sub_1000B28B0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000B28C0()
{
  return 16LL;
}

__n128 sub_1000B28CC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void *sub_1000B28D8(void *a1)
{
  return a1;
}

void sub_1000B290C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = OBJC_IVAR____TtC8AppStore15SmallLockupView_artworkView;
  type metadata accessor for ArtworkView(0LL);
  *(void *)&v2[v8] = static ArtworkView.staticIconArtworkView.getter();
  uint64_t v9 = OBJC_IVAR____TtC8AppStore15SmallLockupView_titleLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002E0590 != -1) {
    swift_once(&qword_1002E0590, sub_100072788);
  }
  uint64_t v10 = sub_10000A634(v4, (uint64_t)qword_1002F2C20);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11(v7, v10, v4);
  *(void *)&v2[v9] = sub_100011F1C((uint64_t)v7, 1LL, 0LL, 1, 1);
  uint64_t v12 = OBJC_IVAR____TtC8AppStore15SmallLockupView_subtitleLabel;
  if (qword_1002E0598 != -1) {
    swift_once(&qword_1002E0598, sub_1000727A0);
  }
  uint64_t v13 = sub_10000A634(v4, (uint64_t)qword_1002F2C38);
  v11(v7, v13, v4);
  *(void *)&v2[v12] = sub_100011F1C((uint64_t)v7, 1LL, 0LL, 1, 1);
  uint64_t v14 = OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics;
  if (qword_1002E09F8 != -1) {
    swift_once(&qword_1002E09F8, sub_1000B1648);
  }
  sub_10001D844(&xmmword_1002F3D20, &v3[v14]);

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SmallLockupView.swift",  30LL,  2LL,  84LL,  0);
  __break(1u);
}

char *sub_1000B2AEC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC8AppStore33AnnotationGroupCollectionViewCell_itemLayoutContext];
  uint64_t v10 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v9, 1LL, 1LL, v10);
  uint64_t v11 = OBJC_IVAR____TtC8AppStore33AnnotationGroupCollectionViewCell_informationColumnView;
  uint64_t v12 = type metadata accessor for InformationColumnView();
  id v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12));
  uint64_t v14 = v4;
  *(void *)&v4[v11] = [v13 init];

  v23.receiver = v14;
  v23.super_class = (Class)type metadata accessor for AnnotationGroupCollectionViewCell(0LL);
  id v15 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  uint64_t v19 = (char *)v15;
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  id v20 = [v19 contentView];
  id v21 = *(id *)&v19[OBJC_IVAR____TtC8AppStore33AnnotationGroupCollectionViewCell_informationColumnView];
  [v20 addSubview:v21];

  return v19;
}

void sub_1000B2E04()
{
  uint64_t v1 = (char *)*(id *)&v0[OBJC_IVAR____TtC8AppStore33AnnotationGroupCollectionViewCell_informationColumnView];
  id v2 = [v0 overrideUserInterfaceStyle];
  uint64_t v3 = (objc_class *)type metadata accessor for InformationColumnView();
  v14.receiver = v1;
  v14.super_class = v3;
  objc_msgSendSuper2(&v14, "setOverrideUserInterfaceStyle:", v2);
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations];
  if (!((unint64_t)v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations]);
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:

    swift_bridgeObjectRelease(v4);
    return;
  }

  if (v4 < 0) {
    uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations];
  }
  else {
    uint64_t v11 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations]);
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      if ((v4 & 0xC000000000000001LL) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      }
      else {
        id v7 = *(id *)(v4 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      ++v6;
      v13.receiver = v1;
      v13.super_class = v3;
      id v9 = objc_msgSendSuper2(&v13, "overrideUserInterfaceStyle");
      uint64_t v10 = (objc_class *)type metadata accessor for AnnotationCollectionViewCell(0LL);
      v12.receiver = v8;
      v12.super_class = v10;
      objc_msgSendSuper2(&v12, "setOverrideUserInterfaceStyle:", v9);
      sub_1001B8F94(0);
    }

    while (v5 != v6);
    goto LABEL_13;
  }

  __break(1u);
}

double sub_1000B2F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnnotationGroup(0LL);
  uint64_t v5 = sub_100004288( &qword_1002E6F08,  (uint64_t (*)(uint64_t))&type metadata accessor for AnnotationGroup,  (uint64_t)&protocol conformance descriptor for AnnotationGroup);
  ItemLayoutContext.typedModel<A>(as:)(&v21, v4, v4, v5);
  uint64_t v7 = v21;
  if (v21)
  {
    uint64_t v8 = *(id *)(v2 + OBJC_IVAR____TtC8AppStore33AnnotationGroupCollectionViewCell_informationColumnView);
    AnnotationGroup.title.getter();
    uint64_t v10 = v9;
    uint64_t v11 = AnnotationGroup.annotations.getter();
    char v12 = AnnotationGroup.forceExpanded.getter();
    uint64_t v13 = type metadata accessor for ObjectGraph(0LL);
    objc_super v14 = (void *)swift_dynamicCastClassUnconditional(a2, v13, 0LL, 0LL, 0LL);
    id v15 = *(id *)&v8[OBJC_IVAR____TtC8AppStore21InformationColumnView_headline];
    NSString v16 = String._bridgeToObjectiveC()();
    [v15 setText:v16];

    int v17 = v12 & 1;
    v8[OBJC_IVAR____TtC8AppStore21InformationColumnView_shouldExpandAllAnnotations] = v17;
    v20.receiver = v8;
    v20.super_class = (Class)type metadata accessor for InformationColumnView();
    id v18 = objc_msgSendSuper2(&v20, "overrideUserInterfaceStyle");
    uint64_t v19 = sub_1000CBA6C(v11, v17, (uint64_t)v18, 0, v14);
    sub_1000CAC5C((uint64_t)v19);
    [v8 setNeedsLayout];
    swift_release(v7);

    swift_bridgeObjectRelease(v10);
    *(void *)&double result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }

  return result;
}

void sub_1000B3104()
{
}

id sub_1000B3130()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnnotationGroupCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000B319C()
{
  return type metadata accessor for AnnotationGroupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for AnnotationGroupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E6EE0;
  if (!qword_1002E6EE0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnotationGroupCollectionViewCell);
  }
  return result;
}

void sub_1000B31E0(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 472);
  }

uint64_t sub_1000B3258()
{
  return sub_100004288( (unint64_t *)&unk_1002E6EF8,  type metadata accessor for AnnotationGroupCollectionViewCell,  (uint64_t)&unk_10023B554);
}

uint64_t sub_1000B3284@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore33AnnotationGroupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_1000B33D0(v3, a1);
}

double sub_1000B32D4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore33AnnotationGroupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_1000B3388(a1, v3);
  *(void *)&double result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1000B332C(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

id sub_1000B3370()
{
  return [v0 prepareForReuse];
}

uint64_t sub_1000B3388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E1D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B33D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E1D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_1000B3418(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PageGrid(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = type metadata accessor for AnnotationGroup(0LL);
  uint64_t v8 = sub_100004288( &qword_1002E6F08,  (uint64_t (*)(uint64_t))&type metadata accessor for AnnotationGroup,  (uint64_t)&protocol conformance descriptor for AnnotationGroup);
  ItemLayoutContext.typedModel<A>(as:)(&v27, v7, v7, v8);
  uint64_t v9 = v27;
  if (v27)
  {
    type metadata accessor for InformationColumnView();
    uint64_t KeyPath = swift_getKeyPath(&unk_10023B5E8, v10);
    ItemLayoutContext.subscript.getter(v6);
    swift_release(KeyPath);
    double v12 = PageGrid.componentMeasuringSize(spanning:)(1.0);
    double v14 = v13;
    uint64_t v15 = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v16 = AnnotationGroup.title.getter(v15);
    uint64_t v18 = v17;
    uint64_t v19 = AnnotationGroup.annotations.getter();
    char v20 = AnnotationGroup.forceExpanded.getter();
    uint64_t v22 = swift_getKeyPath(&unk_10023B620, v21);
    ItemLayoutContext.subscript.getter(&v27);
    swift_release(v22);
    objc_super v23 = v27;
    uint64_t v24 = type metadata accessor for ObjectGraph(0LL);
    uint64_t v25 = (void *)swift_dynamicCastClassUnconditional(a2, v24, 0LL, 0LL, 0LL);
    swift_getObjectType(v23);
    sub_1000CB5A4(v16, v18, v19, v20 & 1, v23, v25, v12, v14);
    swift_release(v9);
    swift_unknownObjectRelease(v23);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v19);
  }

void sub_1000B3618()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8AppStore15LockupMediaView_handlerKeys];
  swift_beginAccess(v2, v22, 1LL, 0LL);
  uint64_t v3 = *(void *)v2;
  *(void *)uint64_t v2 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v3);
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore15LockupMediaView_imageView];
  ArtworkView.image.setter(0LL);
  uint64_t v5 = *(char **)&v1[OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer];
  uint64_t v6 = &v5[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view]);
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    uint64_t v9 = *(void **)(Strong + qword_1002EBA50);
    if (v9)
    {
      id v10 = v9;
      dispatch thunk of VideoPlayer.releaseAssets()();

      uint64_t v8 = v10;
    }
  }

  uint64_t v11 = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (v11)
  {
    double v12 = v11;
    id v13 = [v11 superview];

    if (v13)
    {
      sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
      double v14 = v5;
      id v15 = v13;
      LOBYTE(v13) = static NSObject.== infix(_:_:)(v15, v14);
    }
  }

  else
  {
    LOBYTE(v13) = 0;
  }

  sub_1001AE348(0LL, v13 & 1);
  uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong(v6);
  uint64_t v17 = v16;
  if (v16) {

  }
  [v4 setHidden:v17 != 0];
  [v1 setNeedsLayout];
  uint64_t v18 = &v1[OBJC_IVAR____TtC8AppStore15LockupMediaView_currentScreenshotIndex];
  *(void *)uint64_t v18 = 0LL;
  _BYTE v18[8] = 1;
  sub_1001AE998();
  uint64_t v19 = OBJC_IVAR____TtC8AppStore15LockupMediaView_animationTimer;
  char v20 = *(void **)&v1[OBJC_IVAR____TtC8AppStore15LockupMediaView_animationTimer];
  if (v20)
  {
    [v20 invalidate];
    uint64_t v21 = *(void **)&v1[v19];
  }

  else
  {
    uint64_t v21 = 0LL;
  }

  *(void *)&v1[v19] = 0LL;
}

void sub_1000B3814(char a1, void *a2)
{
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8AppStore15LockupMediaView_state) = a1;
  if (a1)
  {
    if (a1 == 1) {
      sub_1000B4AE8();
    }
  }

  else
  {
    uint64_t v5 = OBJC_IVAR____TtC8AppStore15LockupMediaView_animationTimer;
    uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore15LockupMediaView_animationTimer);
    if (v6)
    {
      [v6 invalidate];
      uint64_t v7 = *(void **)(v2 + v5);
    }

    else
    {
      uint64_t v7 = 0LL;
    }

    *(void *)(v2 + v5) = 0LL;
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v2 + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer)
           + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
  if (Strong)
  {
    id v9 = (id)Strong;
    sub_100139C18(a1, a2);
  }

void sub_1000B38EC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)(v3 + OBJC_IVAR____TtC8AppStore15LockupMediaView_images);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8AppStore15LockupMediaView_images, v15, 33LL, 0LL);
  uint64_t v7 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6, v8);
  uint64_t v14 = *v6;
  *uint64_t v6 = 0x8000000000000000LL;
  sub_1000B71EC((uint64_t)v7, a2, isUniquelyReferenced_nonNull_native, &qword_1002E6F78);
  uint64_t v10 = *v6;
  *uint64_t v6 = v14;
  swift_bridgeObjectRelease(v10);
  swift_endAccess(v15);
  if (!a2)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong( *(void *)(v3 + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer)
                     + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
    if (Strong)
    {
    }

    else
    {
      v16.value.super.Class isa = v7;
      v16.is_nil = 0;
      ArtworkView.setImage(image:animated:)(v16, v12);
      uint64_t v13 = v3 + OBJC_IVAR____TtC8AppStore15LockupMediaView_currentScreenshotIndex;
      if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8AppStore15LockupMediaView_currentScreenshotIndex + 8) == 1)
      {
        *(void *)uint64_t v13 = 0LL;
        *(_BYTE *)(v13 + 8) = 0;
      }
    }
  }

void sub_1000B3A04(uint64_t a1, __n128 a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = (void *)*v2;
  int64_t v5 = *(void *)(*v2 + 16LL);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  size_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2, a2);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v6 <= v4[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

  if (v5 <= v6) {
    int64_t v17 = v5 + v3;
  }
  else {
    int64_t v17 = v5;
  }
  uint64_t v4 = (void *)sub_100018180(isUniquelyReferenced_nonNull_native, v17, 1, v4);
  if (!*(void *)(a1 + 16))
  {
LABEL_13:
    if (!v3) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }

uint64_t sub_1000B3B04(uint64_t a1)
{
  return sub_1000B3D50(a1, (uint64_t (*)(uint64_t, void, uint64_t))sub_1000B83AC);
}

void sub_1000B3B10(uint64_t a1)
{
}

void sub_1000B3B34(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v24 = a1;
    }
    else {
      uint64_t v24 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v14 = v13 + v11;
    if (!__OFADD__(v13, v11)) {
      goto LABEL_5;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (v12 < 0) {
    uint64_t v25 = *v5;
  }
  else {
    uint64_t v25 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v5);
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  uint64_t v14 = v13 + v11;
  if (__OFADD__(v13, v11)) {
    goto LABEL_29;
  }
LABEL_5:
  uint64_t v12 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *int64_t v5 = v12;
  uint64_t v13 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000LL) == 0
    && (v12 & 0x4000000000000000LL) == 0)
  {
    uint64_t v16 = v12 & 0xFFFFFFFFFFFFFF8LL;
    if (v14 <= *(void *)((v12 & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v13 = 1LL;
  }

  uint64_t v27 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  uint64_t v17 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (1)
  {
    if (v17 <= v14) {
      uint64_t v17 = v14;
    }
    swift_bridgeObjectRetain(v12);
    uint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v13,  v17,  1LL,  v12);
    swift_bridgeObjectRelease(*v5);
    *int64_t v5 = v12;
    uint64_t v16 = v12 & 0xFFFFFFFFFFFFFF8LL;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    uint64_t v11 = v27;
LABEL_15:
    sub_1000B855C( v16 + 8LL * *(void *)(v16 + 16) + 32,  (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16),  a1,  (uint64_t (*)(void))a2,  a3,  a4,  (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0) {
      uint64_t v26 = v12;
    }
    else {
      uint64_t v26 = v12 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v12);
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }

  if (v19 < 1) {
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  BOOL v21 = __OFADD__(v20, v19);
  uint64_t v22 = v20 + v19;
  if (!v21)
  {
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease(v18);
    specialized Array._endMutation()(v23);
    return;
  }

  __break(1u);
}

uint64_t sub_1000B3D44(uint64_t a1)
{
  return sub_1000B3D50(a1, (uint64_t (*)(uint64_t, void, uint64_t))sub_1000B8700);
}

uint64_t sub_1000B3D50(uint64_t a1, uint64_t (*a2)(uint64_t, void, uint64_t))
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v18 = a1;
    }
    else {
      uint64_t v18 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (v6 < 0) {
    uint64_t v19 = *v2;
  }
  else {
    uint64_t v19 = v6 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v2);
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_29;
  }
LABEL_5:
  uint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  uint64_t *v2 = v6;
  uint64_t v7 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000LL) == 0 && (v6 & 0x4000000000000000LL) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8LL;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1LL;
  }

  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain(v6);
    uint64_t v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1LL, v6);
    swift_bridgeObjectRelease(*v2);
    uint64_t *v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8LL;
LABEL_15:
    uint64_t result = a2(v10 + 8LL * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0) {
      uint64_t v20 = v6;
    }
    else {
      uint64_t v20 = v6 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v6);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }

  if (v13 < 1) {
    goto LABEL_19;
  }
  uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  BOOL v15 = __OFADD__(v14, v13);
  uint64_t v16 = v14 + v13;
  if (!v15)
  {
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v16;
LABEL_19:
    uint64_t v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }

  __break(1u);
  return result;
}

void sub_1000B3F0C(uint64_t a1, __n128 a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = (void *)*v2;
  int64_t v5 = *(void *)(*v2 + 16LL);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  size_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native(*v2, a2);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v6 <= v4[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

  if (v5 <= v6) {
    int64_t v15 = v5 + v3;
  }
  else {
    int64_t v15 = v5;
  }
  uint64_t v4 = sub_100018F20(isUniquelyReferenced_nonNull_native, v15, 1, v4);
  if (!*(void *)(a1 + 16))
  {
LABEL_13:
    if (!v3) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }

uint64_t sub_1000B4008()
{
  uint64_t v0 = type metadata accessor for LockupMediaLayout.DisplayType(0LL);
  sub_10000DC04(v0, qword_1002F3EB8);
  uint64_t v1 = sub_10000A634(v0, (uint64_t)qword_1002F3EB8);
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104LL))( v1,  enum case for LockupMediaLayout.DisplayType.landscape(_:),  v0);
}

uint64_t sub_1000B4060()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E71C0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v17[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for AspectRatio(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int64_t v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for LockupMediaLayout.DisplayType(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for LockupMediaLayout.Metrics(0LL);
  sub_10000DC04(v11, qword_1002F3ED0);
  sub_10000A634(v11, (uint64_t)qword_1002F3ED0);
  uint64_t v17[3] = &type metadata for Double;
  void v17[4] = &protocol witness table for Double;
  v17[0] = 0LL;
  if (qword_1002E0A18 != -1) {
    swift_once(&qword_1002E0A18, sub_1000B4008);
  }
  uint64_t v12 = sub_10000A634(v7, (uint64_t)qword_1002F3EB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  if (qword_1002E0A28 != -1) {
    swift_once(&qword_1002E0A28, sub_1000B4268);
  }
  uint64_t v13 = sub_10000A634(v3, (uint64_t)qword_1002F3EE8);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v14(v6, v13, v3);
  v14(v2, v13, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0LL, 1LL, v3);
  return LockupMediaLayout.Metrics.init(interItemSpacing:displayType:mediaAspectRatio:boundingAspectRatio:)( v17,  v10,  v6,  v2);
}

double sub_1000B4268()
{
  uint64_t v0 = type metadata accessor for AspectRatio(0LL);
  sub_10000DC04(v0, qword_1002F3EE8);
  uint64_t v1 = sub_10000A634(v0, (uint64_t)qword_1002F3EE8);
  *(void *)&double result = AspectRatio.init(_:_:)(v1, 16.0).n128_u64[0];
  return result;
}

char *sub_1000B42B8(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = type metadata accessor for CornerStyle(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = OBJC_IVAR____TtC8AppStore15LockupMediaView_imageView;
  type metadata accessor for ArtworkView(0LL);
  int64_t v15 = v4;
  *(void *)&v4[v14] = static ArtworkView.plainArtworkView.getter();
  *(void *)&v15[OBJC_IVAR____TtC8AppStore15LockupMediaView_handlerKeys] = &_swiftEmptySetSingleton;
  uint64_t v16 = &v15[OBJC_IVAR____TtC8AppStore15LockupMediaView_currentScreenshotIndex];
  *(void *)uint64_t v16 = 0LL;
  v16[8] = 1;
  uint64_t v17 = OBJC_IVAR____TtC8AppStore15LockupMediaView_images;
  *(void *)&v15[v17] = sub_1000EEA70(_swiftEmptyArrayStorage);
  *(void *)&v15[OBJC_IVAR____TtC8AppStore15LockupMediaView_animationTimer] = 0LL;
  v15[OBJC_IVAR____TtC8AppStore15LockupMediaView_state] = 0;
  uint64_t v18 = OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer;
  uint64_t v19 = (objc_class *)type metadata accessor for VideoViewContainer();
  uint64_t v20 = (char *)objc_allocWithZone(v19);
  swift_unknownObjectWeakInit(&v20[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view], 0LL);
  *(void *)&v20[OBJC_IVAR____TtC8AppStore18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v21, 0LL);
  v33.receiver = v20;
  v33.super_class = v19;
  *(void *)&v15[v18] = objc_msgSendSuper2(&v33, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v15[OBJC_IVAR____TtC8AppStore15LockupMediaView_roundedCorners] = 0LL;

  v32.receiver = v15;
  v32.super_class = ObjectType;
  id v22 = objc_msgSendSuper2(&v32, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  uint64_t v26 = (char *)v22;
  objc_msgSend(v26, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for CornerStyle.continuous(_:), v10);
  uint64_t v27 = OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer;
  CornerStyle.apply(withRadius:to:)(*(void *)&v26[OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer], 12.0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v28 = *(char **)&v26[v27];
  *(void *)&v28[OBJC_IVAR____TtC8AppStore18VideoViewContainer_roundedCorners] = *(void *)&v26[OBJC_IVAR____TtC8AppStore15LockupMediaView_roundedCorners];
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong(&v28[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view]);
  uint64_t v30 = v28;
  sub_1001AE660(Strong);

  [v26 addSubview:*(void *)&v26[v27]];
  [v26 addSubview:*(void *)&v26[OBJC_IVAR____TtC8AppStore15LockupMediaView_imageView]];

  return v26;
}

uint64_t sub_1000B45BC()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v22 = type metadata accessor for LayoutRect(0LL);
  uint64_t v2 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for LockupMediaLayout.Metrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for LockupMediaLayout(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)&double v11 = __chkstk_darwin(v9).n128_u64[0];
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v23.receiver = v0;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "layoutSubviews", v11);
  if (qword_1002E0A20 != -1) {
    swift_once(&qword_1002E0A20, sub_1000B4060);
  }
  uint64_t v14 = sub_10000A634(v5, (uint64_t)qword_1002F3ED0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
  uint64_t v15 = sub_1000038E8((uint64_t *)&unk_1002E22C0);
  uint64_t v16 = swift_allocObject(v15, 72LL, 7LL);
  *(_OWORD *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  uint64_t v17 = *(char **)&v0[OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v17[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view]);

  if (!Strong) {
    uint64_t v17 = *(char **)&v0[OBJC_IVAR____TtC8AppStore15LockupMediaView_imageView];
  }
  uint64_t v19 = v17;
  *(void *)(v16 + 56) = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
  *(void *)(v16 + 64) = protocol witness table for UIView;
  *(void *)(v16 + 32) = v19;
  LockupMediaLayout.init(metrics:mediaViews:)(v8, v16);
  [v0 bounds];
  LockupMediaLayout.placeChildren(relativeTo:in:)(v0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

double sub_1000B48C4(double a1, double a2)
{
  uint64_t v5 = type metadata accessor for LockupMediaLayout.Metrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for LockupMediaLayout(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0A20 != -1) {
    swift_once(&qword_1002E0A20, sub_1000B4060);
  }
  uint64_t v13 = sub_10000A634(v5, (uint64_t)qword_1002F3ED0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
  uint64_t v14 = sub_1000038E8((uint64_t *)&unk_1002E22C0);
  uint64_t v15 = swift_allocObject(v14, 72LL, 7LL);
  *(_OWORD *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  uint64_t v16 = *(char **)(v2 + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v16[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view]);

  if (!Strong) {
    uint64_t v16 = *(char **)(v2 + OBJC_IVAR____TtC8AppStore15LockupMediaView_imageView);
  }
  uint64_t v18 = v16;
  *(void *)(v15 + 56) = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
  *(void *)(v15 + 64) = protocol witness table for UIView;
  *(void *)(v15 + 32) = v18;
  LockupMediaLayout.init(metrics:mediaViews:)(v8, v15);
  double v19 = LockupMediaLayout.measurements(fitting:in:)(v2, a1, a2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v19;
}

void sub_1000B4AE8()
{
  uint64_t ObjectType = swift_getObjectType(v0);
  uint64_t v2 = OBJC_IVAR____TtC8AppStore15LockupMediaView_animationTimer;
  if (!*(void *)(v0 + OBJC_IVAR____TtC8AppStore15LockupMediaView_animationTimer))
  {
    uint64_t v3 = ObjectType;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong( *(void *)(v0 + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer)
                     + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
    if (Strong)
    {
    }

    else
    {
      uint64_t v5 = (void *)objc_opt_self(&OBJC_CLASS___NSTimer);
      uint64_t v6 = swift_allocObject(&unk_10028A0C0, 24LL, 7LL);
      swift_unknownObjectWeakInit(v6 + 16, v0);
      uint64_t v7 = swift_allocObject(&unk_10028A0E8, 32LL, 7LL);
      *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
      *(void *)(v7 + 24) = v3;
      v12[4] = sub_1000B8E8C;
      uint64_t v13 = v7;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 1107296256LL;
      v12[2] = sub_10005574C;
      v12[3] = &unk_10028A100;
      uint64_t v8 = _Block_copy(v12);
      swift_release(v13);
      id v9 = [v5 scheduledTimerWithTimeInterval:1 repeats:v8 block:5.0];
      _Block_release(v8);
      uint64_t v10 = *(void **)(v0 + v2);
      if (v10)
      {
        [v10 invalidate];
        uint64_t v11 = *(void **)(v0 + v2);
      }

      else
      {
        uint64_t v11 = 0LL;
      }

      *(void *)(v0 + v2) = v9;
    }
  }

void sub_1000B4C64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v32, 0LL, 0LL);
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong) {
    return;
  }
  uint64_t v4 = Strong;
  uint64_t v5 = &Strong[OBJC_IVAR____TtC8AppStore15LockupMediaView_currentScreenshotIndex];
  if (Strong[OBJC_IVAR____TtC8AppStore15LockupMediaView_currentScreenshotIndex + 8] == 1)
  {

    return;
  }

  uint64_t v6 = *(void *)v5;
  uint64_t v7 = (uint64_t *)&Strong[OBJC_IVAR____TtC8AppStore15LockupMediaView_images];
  swift_beginAccess(&Strong[OBJC_IVAR____TtC8AppStore15LockupMediaView_images], v31, 0LL, 0LL);
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain_n(*v7, 2LL);
  id v9 = (char *)sub_100086CD0(v8);
  __n128 v10 = swift_bridgeObjectRelease(v8);
  aBlock[0] = v9;
  sub_1000B4FB0(aBlock, v10);
  swift_bridgeObjectRelease(v8);
  uint64_t v11 = aBlock[0];
  unint64_t v12 = *((void *)aBlock[0] + 2);
  if (v12 <= 1)
  {
LABEL_16:

    swift_release(v11);
    return;
  }

  if (*((void *)aBlock[0] + 4) != v6)
  {
    uint64_t v28 = 0LL;
    while (*(void *)&aBlock[0][8 * v28 + 40] != v6)
    {
      if (v12 - 1 == ++v28) {
        goto LABEL_16;
      }
    }
  }

  if (__OFADD__(v6, 1LL))
  {
    __break(1u);
    goto LABEL_19;
  }

  uint64_t v13 = (v6 + 1) % (uint64_t)v12;
  if (v13 < 0)
  {
LABEL_19:
    __break(1u);
    swift_release(aBlock[0]);
    __break(1u);
    return;
  }

  uint64_t v14 = *(void *)&aBlock[0][8 * v13 + 32];
  swift_release(aBlock[0]);
  swift_beginAccess(v7, aBlock, 32LL, 0LL);
  uint64_t v15 = *v7;
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_1000EE070(v14), (v17 & 1) != 0))
  {
    uint64_t v18 = *(void **)(*(void *)(v15 + 56) + 8 * v16);
    id v19 = v18;
  }

  else
  {
    uint64_t v18 = 0LL;
  }

  swift_endAccess(aBlock);
  *(void *)uint64_t v5 = v14;
  v5[8] = 0;
  uint64_t v20 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  uint64_t v21 = *(void **)&v4[OBJC_IVAR____TtC8AppStore15LockupMediaView_imageView];
  uint64_t v22 = swift_allocObject(&unk_10028A138, 32LL, 7LL);
  *(void *)(v22 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(v22 + 24) = v18;
  aBlock[4] = (char *)sub_1000B8ED8;
  uint64_t v30 = v22;
  aBlock[0] = (char *)_NSConcreteStackBlock;
  aBlock[1] = (char *)1107296256;
  aBlock[2] = (char *)sub_100140110;
  aBlock[3] = (char *)&unk_10028A150;
  objc_super v23 = _Block_copy(aBlock);
  uint64_t v24 = v30;
  id v25 = v18;
  id v26 = v21;
  uint64_t v27 = v4;
  swift_release(v24);
  [v20 transitionWithView:v26 duration:5242880 options:v23 animations:0 completion:1.0];
  _Block_release(v23);
}

uint64_t type metadata accessor for LockupMediaView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore15LockupMediaView);
}

uint64_t sub_1000B4F78()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*v0 + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer)
         + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
}

id sub_1000B4F9C()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer);
}

void sub_1000B4FB0(char **a1, __n128 a2)
{
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1, a2) & 1) == 0) {
    uint64_t v3 = sub_1000068A8((uint64_t)v3);
  }
  uint64_t v4 = *((void *)v3 + 2);
  v5[0] = v3 + 32;
  v5[1] = v4;
  sub_1000B5018(v5);
  *a1 = v3;
}

void sub_1000B5018(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000LL) == 0)
    {
      uint64_t v81 = 0LL;
      uint64_t v82 = *v2;
      uint64_t v83 = 1LL;
      while (1)
      {
        uint64_t v84 = *(void *)(v82 + 8 * v83);
        uint64_t v85 = v81;
        do
        {
          uint64_t v86 = *(void *)(v82 + v85);
          if (v84 >= v86) {
            break;
          }
          if (!v82) {
            goto LABEL_144;
          }
          *(void *)(v82 + v85 + 8) = v86;
          *(void *)(v82 + v85) = v84;
          v85 -= 8LL;
        }

        while (v85 != -8);
        ++v83;
        v81 += 8LL;
        if (v83 == v3) {
          return;
        }
      }
    }

    goto LABEL_140;
  }

  if (v3 >= 0) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_139;
  }
  Swift::Int v98 = v4;
  Swift::Int v99 = v3;
  if (v3 <= 1)
  {
    id v9 = _swiftEmptyArrayStorage;
    uint64_t v101 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_104;
    }

    uint64_t v97 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6 >> 1, &type metadata for Int);
    *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
    Swift::Int v3 = v99;
    uint64_t v97 = (void *)v8;
    uint64_t v101 = (char *)(v8 + 32);
  }

  Swift::Int v10 = 0LL;
  uint64_t v11 = *v2;
  uint64_t v95 = v2;
  uint64_t v96 = *v2 - 8LL;
  unint64_t v12 = (char *)_swiftEmptyArrayStorage;
  uint64_t v100 = *v2;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 8 * v10);
      uint64_t v16 = *(void *)(v11 + 8 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = v15;
        while (1)
        {
          uint64_t v18 = *(void *)(v11 + 8 * v10);
          if (v15 < v16 == v18 >= v17) {
            break;
          }
          ++v10;
          uint64_t v17 = v18;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }

      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_141;
        }
        if (v14 < v10)
        {
          Swift::Int v19 = v10 - 1;
          Swift::Int v20 = v14;
          do
          {
            if (v20 != v19)
            {
              if (!v11) {
                goto LABEL_147;
              }
              uint64_t v21 = *(void *)(v11 + 8 * v20);
              *(void *)(v11 + 8 * v20) = *(void *)(v11 + 8 * v19);
              *(void *)(v11 + 8 * v19) = v21;
            }

            BOOL v60 = ++v20 < v19--;
          }

          while (v60);
        }
      }
    }

    if (v10 < v3)
    {
      if (__OFSUB__(v10, v14)) {
        goto LABEL_138;
      }
      if (v10 - v14 < v98)
      {
        Swift::Int v22 = v14 + v98;
        if (__OFADD__(v14, v98)) {
          goto LABEL_142;
        }
        if (v22 >= v3) {
          Swift::Int v22 = v3;
        }
        if (v22 < v14) {
          goto LABEL_143;
        }
        if (v10 != v22)
        {
          objc_super v23 = (uint64_t *)(v96 + 8 * v10);
          do
          {
            uint64_t v24 = *(void *)(v11 + 8 * v10);
            Swift::Int v25 = v14;
            id v26 = v23;
            do
            {
              uint64_t v27 = *v26;
              if (v24 >= *v26) {
                break;
              }
              if (!v11) {
                goto LABEL_145;
              }
              *id v26 = v24;
              v26[1] = v27;
              --v26;
              ++v25;
            }

            while (v10 != v25);
            ++v10;
            ++v23;
          }

          while (v10 != v22);
          Swift::Int v10 = v22;
        }
      }
    }

    if (v10 < v14)
    {
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }

    if ((swift_isUniquelyReferenced_nonNull_native(v12, v5) & 1) == 0) {
      unint64_t v12 = sub_100006788(0LL, *((void *)v12 + 2) + 1LL, 1, v12);
    }
    unint64_t v29 = *((void *)v12 + 2);
    unint64_t v28 = *((void *)v12 + 3);
    unint64_t v13 = v29 + 1;
    uint64_t v11 = v100;
    if (v29 >= v28 >> 1)
    {
      __int128 v78 = sub_100006788((char *)(v28 > 1), v29 + 1, 1, v12);
      uint64_t v11 = v100;
      unint64_t v12 = v78;
    }

    *((void *)v12 + 2) = v13;
    uint64_t v30 = v12 + 32;
    uint64_t v31 = &v12[16 * v29 + 32];
    *(void *)uint64_t v31 = v14;
    *((void *)v31 + 1) = v10;
    if (v29) {
      break;
    }
    unint64_t v13 = 1LL;
LABEL_15:
    Swift::Int v3 = v99;
    if (v10 >= v99)
    {
      id v9 = v97;
      uint64_t v2 = v95;
LABEL_104:
      uint64_t v97 = v9;
      if (v13 < 2)
      {
LABEL_115:
        id v80 = v12;
        goto LABEL_116;
      }

      uint64_t v87 = *v2;
      while (1)
      {
        unint64_t v88 = v13 - 2;
        if (v13 < 2) {
          break;
        }
        if (!v87) {
          goto LABEL_148;
        }
        id v79 = v12;
        uint64_t v89 = v12 + 32;
        uint64_t v90 = *(void *)&v12[16 * v88 + 32];
        uint64_t v91 = *(void *)&v12[16 * v13 + 24];
        sub_1000B565C( (char *)(v87 + 8 * v90),  (char *)(v87 + 8LL * *(void *)&v89[16 * v13 - 16]),  v87 + 8 * v91,  v101);
        if (v1) {
          goto LABEL_95;
        }
        if (v91 < v90) {
          goto LABEL_135;
        }
        if ((swift_isUniquelyReferenced_nonNull_native(v79, v92) & 1) == 0) {
          id v79 = sub_100006880((uint64_t)v79);
        }
        if (v88 >= *((void *)v79 + 2)) {
          goto LABEL_136;
        }
        uint64_t v93 = &v79[16 * v88 + 32];
        *(void *)uint64_t v93 = v90;
        *((void *)v93 + 1) = v91;
        unint64_t v94 = *((void *)v79 + 2);
        if (v13 > v94) {
          goto LABEL_137;
        }
        memmove(&v79[16 * v13 + 16], &v79[16 * v13 + 32], 16 * (v94 - v13));
        unint64_t v12 = v79;
        *((void *)v79 + 2) = v94 - 1;
        unint64_t v13 = v94 - 1;
        if (v94 <= 2) {
          goto LABEL_115;
        }
      }

LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      return;
    }
  }

  while (1)
  {
    unint64_t v32 = v13 - 1;
    if (v13 >= 4)
    {
      unsigned __int8 v37 = &v30[16 * v13];
      uint64_t v38 = *((void *)v37 - 8);
      uint64_t v39 = *((void *)v37 - 7);
      BOOL v43 = __OFSUB__(v39, v38);
      uint64_t v40 = v39 - v38;
      if (v43) {
        goto LABEL_122;
      }
      uint64_t v42 = *((void *)v37 - 6);
      uint64_t v41 = *((void *)v37 - 5);
      BOOL v43 = __OFSUB__(v41, v42);
      uint64_t v35 = v41 - v42;
      char v36 = v43;
      if (v43) {
        goto LABEL_123;
      }
      unint64_t v44 = v13 - 2;
      uint64_t v45 = &v30[16 * v13 - 32];
      uint64_t v47 = *(void *)v45;
      uint64_t v46 = *((void *)v45 + 1);
      BOOL v43 = __OFSUB__(v46, v47);
      uint64_t v48 = v46 - v47;
      if (v43) {
        goto LABEL_124;
      }
      BOOL v43 = __OFADD__(v35, v48);
      uint64_t v49 = v35 + v48;
      if (v43) {
        goto LABEL_126;
      }
      if (v49 >= v40)
      {
        char v67 = &v30[16 * v32];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v43 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v43) {
          goto LABEL_132;
        }
        BOOL v60 = v35 < v70;
        goto LABEL_84;
      }
    }

    else
    {
      if (v13 != 3)
      {
        uint64_t v61 = *((void *)v12 + 4);
        uint64_t v62 = *((void *)v12 + 5);
        BOOL v43 = __OFSUB__(v62, v61);
        uint64_t v54 = v62 - v61;
        char v55 = v43;
        goto LABEL_78;
      }

      uint64_t v34 = *((void *)v12 + 4);
      uint64_t v33 = *((void *)v12 + 5);
      BOOL v43 = __OFSUB__(v33, v34);
      uint64_t v35 = v33 - v34;
      char v36 = v43;
    }

    if ((v36 & 1) != 0) {
      goto LABEL_125;
    }
    unint64_t v44 = v13 - 2;
    uint64_t v50 = &v30[16 * v13 - 32];
    uint64_t v52 = *(void *)v50;
    uint64_t v51 = *((void *)v50 + 1);
    BOOL v53 = __OFSUB__(v51, v52);
    uint64_t v54 = v51 - v52;
    char v55 = v53;
    if (v53) {
      goto LABEL_127;
    }
    uint64_t v56 = &v30[16 * v32];
    uint64_t v58 = *(void *)v56;
    uint64_t v57 = *((void *)v56 + 1);
    BOOL v43 = __OFSUB__(v57, v58);
    uint64_t v59 = v57 - v58;
    if (v43) {
      goto LABEL_129;
    }
    if (__OFADD__(v54, v59)) {
      goto LABEL_131;
    }
    if (v54 + v59 >= v35)
    {
      BOOL v60 = v35 < v59;
LABEL_84:
      if (v60) {
        unint64_t v32 = v44;
      }
      goto LABEL_86;
    }

LABEL_78:
    if ((v55 & 1) != 0) {
      goto LABEL_128;
    }
    uint64_t v63 = &v30[16 * v32];
    uint64_t v65 = *(void *)v63;
    uint64_t v64 = *((void *)v63 + 1);
    BOOL v43 = __OFSUB__(v64, v65);
    uint64_t v66 = v64 - v65;
    if (v43) {
      goto LABEL_130;
    }
    if (v66 < v54) {
      goto LABEL_15;
    }
LABEL_86:
    unint64_t v71 = v32 - 1;
    if (v32 - 1 >= v13)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }

    if (!v11) {
      goto LABEL_146;
    }
    double v72 = &v30[16 * v71];
    uint64_t v73 = *(void *)v72;
    double v74 = v30;
    uint64_t v75 = &v30[16 * v32];
    uint64_t v76 = *((void *)v75 + 1);
    sub_1000B565C((char *)(v11 + 8LL * *(void *)v72), (char *)(v11 + 8LL * *(void *)v75), v11 + 8 * v76, v101);
    if (v1) {
      break;
    }
    if (v76 < v73) {
      goto LABEL_119;
    }
    if (v32 > *((void *)v12 + 2)) {
      goto LABEL_120;
    }
    *(void *)double v72 = v73;
    *(void *)&v74[16 * v71 + 8] = v76;
    unint64_t v77 = *((void *)v12 + 2);
    if (v32 >= v77) {
      goto LABEL_121;
    }
    unint64_t v13 = v77 - 1;
    memmove(v75, v75 + 16, 16 * (v77 - 1 - v32));
    uint64_t v30 = v74;
    *((void *)v12 + 2) = v77 - 1;
    uint64_t v11 = v100;
    if (v77 <= 2) {
      goto LABEL_15;
    }
  }

  id v79 = v12;
LABEL_95:
  id v80 = v79;
LABEL_116:
  swift_bridgeObjectRelease(v80);
  v97[2] = 0LL;
  swift_bridgeObjectRelease(v97);
}

    v230 = ProductTopLockup.badges.getter(v229);
    id v80 = v230;
    v411 = _swiftEmptyArrayStorage;
    if ((unint64_t)v230 >> 62)
    {
      if (v230 >= 0) {
        v230 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      v231 = _CocoaArrayWrapper.endIndex.getter(v230);
      if (!v231)
      {
LABEL_122:
        swift_bridgeObjectRelease(v80);
        v248 = (unint64_t)_swiftEmptyArrayStorage;
        goto LABEL_123;
      }
    }

    else
    {
      v231 = *(void *)((v230 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (!v231) {
        goto LABEL_122;
      }
    }

    if (v231 >= 1) {
      break;
    }
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    v273 = swift_once(&qword_1002E0978, sub_1000A2F08);
LABEL_108:
    v274 = *(double *)&qword_1002F3868;
    v275 = unk_1002F3870;
    v276 = v366;
    v277 = Artwork.crop.getter(v273);
    v278 = Artwork.Crop.preferredContentMode.getter(v277);
    v279 = *(void (**)(char *, uint64_t))(v368 + 8);
    v280 = v369;
    v279(v276, v369);
    v281 = Artwork.config(_:mode:prefersLayeredImage:)(v278, 0LL, v274, v275);
    v282 = *(double *)&qword_1002F38F0;
    v283 = unk_1002F38F8;
    v284 = Artwork.crop.getter(v281);
    v285 = Artwork.Crop.preferredContentMode.getter(v284);
    v279(v276, v280);
    v286 = Artwork.config(_:mode:prefersLayeredImage:)(v285, 0LL, v282, v283);
    v287 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    v369 = v281;
    v288 = v281;
    v289 = v360;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v288, 2LL, 1LL, v360, v196, v287);
    v368 = v286;
    v290 = v286;
    v291 = v359;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v290, 2LL, 1LL, v359, v196, v287);
    v292 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_logoView;
    v293 = *(void **)(v177 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_logoView);
    v294 = v289;
    if (v293)
    {
      [v293 removeFromSuperview];
      v295 = *(void **)(v177 + v292);
    }

    else
    {
      v295 = 0LL;
    }

    *(void *)(v177 + v292) = v289;
    v296 = v289;

    id v79 = &selRef_accessibilityRating;
    if (*(void *)(v177 + v292)) {
      objc_msgSend( *(id *)(v177 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_contentContainerView),  "addSubview:");
    }

    v297 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerLogoView;
    v298 = *(void **)(v177 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerLogoView);
    unint64_t v88 = (uint64_t)v399;
    v361 = v196;
    v299 = v291;
    if (v298)
    {
      [v298 removeFromSuperview];
      v298 = *(void **)(v177 + v297);
    }

    *(void *)(v177 + v297) = v291;
    v300 = v291;

    if (*(void *)(v177 + v297)) {
      objc_msgSend( *(id *)(v177 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerContainerView),  "addSubview:");
    }

    *((void *)&v414 + 1) = v361;
    v415 = protocol witness table for UIView;
    *(void *)&v413 = v296;
    v416 = 0;
    v301 = v177 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleStyle;
    swift_beginAccess(v177 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleStyle, &v412, 33LL, 0LL);
    v302 = v296;
    sub_1001A2240((uint64_t)&v413, v301);
    v303 = swift_endAccess(&v412);
    v304 = v367;
    v305 = Artwork.template.getter(v303);
    v306 = Artwork.URLTemplate.rawValue.getter(v305);
    v308 = v307;
    v363(v304, v370);
    v309 = v362;
    v310 = v362[1];
    *v362 = v306;
    v309[1] = v308;
    swift_release(v80);
    swift_release(v400);
    swift_release(v369);
    swift_release(v368);

    uint64_t v89 = swift_bridgeObjectRelease(v310);
    uint64_t v95 = (char *)v177;
  }

  v232 = 0LL;
  v403 = v80 & 0xC000000000000001LL;
  v233 = enum case for BadgeStyle.standard(_:);
  v234 = v408;
  do
  {
    if (v403)
    {
      v240 = specialized _ArrayBuffer._getElementSlowPath(_:)(v232, v80);
    }

    else
    {
      v240 = *(void *)(v80 + 8 * v232 + 32);
      v241 = swift_retain(v240);
    }

    Badge.style.getter(v241);
    CGRect v177 = (uint64_t)v407;
    (*(void (**)(char *, uint64_t, uint64_t))(v409 + 104))(v407, v233, v234);
    v242 = sub_100004288( (unint64_t *)&unk_1002EE4B0,  (uint64_t (*)(uint64_t))&type metadata accessor for BadgeStyle,  (uint64_t)&protocol conformance descriptor for BadgeStyle);
    dispatch thunk of RawRepresentable.rawValue.getter(&v413, v234, v242);
    dispatch thunk of RawRepresentable.rawValue.getter(&v412, v234, v242);
    v243 = *((void *)&v413 + 1);
    v244 = *((void *)&v412 + 1);
    if (v413 == v412)
    {
      swift_bridgeObjectRelease_n(*((void *)&v413 + 1), 2LL);
      v235 = *(void (**)(char *, uint64_t))(v409 + 8);
      v236 = v408;
      v235(v407, v408);
      v237 = ((uint64_t (*)(char *, uint64_t))v235)(v406, v236);
LABEL_82:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v237);
      v238 = v411[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v238);
      v239 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v238, v240);
      specialized ContiguousArray._endMutation()(v239);
      goto LABEL_83;
    }

    CGRect v177 = _stringCompareWithSmolCheck(_:_:expecting:)(v413, *((void *)&v413 + 1), v412, *((void *)&v412 + 1), 0LL);
    swift_bridgeObjectRelease(v243);
    v245 = swift_bridgeObjectRelease(v244);
    v246 = *(void (**)(char *, uint64_t, __n128))(v409 + 8);
    v247 = v408;
    v246(v407, v408, v245);
    v237 = ((uint64_t (*)(char *, uint64_t))v246)(v406, v247);
    if ((v177 & 1) != 0) {
      goto LABEL_82;
    }
    swift_release(v240);
LABEL_83:
    ++v232;
  }

  while (v231 != v232);
  swift_bridgeObjectRelease(v80);
  v248 = (unint64_t)v411;
LABEL_123:
  *(void *)&v413 = _swiftEmptyArrayStorage;
  if ((v248 & 0x8000000000000000LL) != 0 || (v248 & 0x4000000000000000LL) != 0)
  {
    swift_retain(v248);
    v196 = _CocoaArrayWrapper.endIndex.getter(v319);
    if (!v196) {
      goto LABEL_138;
    }
LABEL_126:
    if (v196 >= 1)
    {
      v311 = 0LL;
      id v80 = v248 & 0xC000000000000001LL;
      do
      {
        if (v80)
        {
          v313 = specialized _ArrayBuffer._getElementSlowPath(_:)(v311, v248);
        }

        else
        {
          v313 = *(void *)(v248 + 8 * v311 + 32);
          swift_retain(v313);
        }

        sub_100109E84();
        v315 = v314;
        swift_release(v313);
        if (v315)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v316);
          v318 = *(void *)((v413 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          v317 = *(void *)((v413 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v318 >= v317 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v317 > 1, v318 + 1, 1LL);
          }
          v312 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v318, v315);
          specialized Array._endMutation()(v312);
        }

        ++v311;
      }

      while (v196 != v311);
      swift_release(v248);
      v196 = v413;
      goto LABEL_139;
    }

    goto LABEL_168;
  }

  v196 = *(void *)(v248 + 16);
  swift_retain(v248);
  if (v196) {
    goto LABEL_126;
  }
LABEL_138:
  swift_release(v248);
  v196 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_139:
  swift_release(v248);
  sub_1000A45D0(v196);
  v321 = ProductTopLockup.badges.getter(v320);
  v322 = v321;
  v411 = _swiftEmptyArrayStorage;
  if ((unint64_t)v321 >> 62)
  {
    if (v321 >= 0) {
      v321 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    v323 = _CocoaArrayWrapper.endIndex.getter(v321);
  }

  else
  {
    v323 = *(void *)((v321 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  CGRect v177 = v398;
  if (v323)
  {
    if (v323 >= 1)
    {
      v324 = 0LL;
      v407 = (char *)(v322 & 0xC000000000000001LL);
      LODWORD(v406) = enum case for BadgeStyle.annotation(_:);
      v325 = v408;
      v326 = v322;
      while (1)
      {
        if (v407)
        {
          v331 = specialized _ArrayBuffer._getElementSlowPath(_:)(v324, v322);
        }

        else
        {
          v331 = *(void *)(v322 + 8 * v324 + 32);
          v332 = swift_retain(v331);
        }

        Badge.style.getter(v332);
        (*(void (**)(char *, void, uint64_t))(v409 + 104))(v405, v406, v325);
        v333 = sub_100004288( (unint64_t *)&unk_1002EE4B0,  (uint64_t (*)(uint64_t))&type metadata accessor for BadgeStyle,  (uint64_t)&protocol conformance descriptor for BadgeStyle);
        dispatch thunk of RawRepresentable.rawValue.getter(&v413, v325, v333);
        dispatch thunk of RawRepresentable.rawValue.getter(&v412, v325, v333);
        v334 = *((void *)&v413 + 1);
        v335 = *((void *)&v412 + 1);
        if (v413 == v412)
        {
          swift_bridgeObjectRelease_n(*((void *)&v413 + 1), 2LL);
          v327 = *(void (**)(char *, uint64_t))(v409 + 8);
          v327(v405, v325);
          v328 = ((uint64_t (*)(char *, uint64_t))v327)(v404, v325);
        }

        else
        {
          v336 = _stringCompareWithSmolCheck(_:_:expecting:)( v413,  *((void *)&v413 + 1),  v412,  *((void *)&v412 + 1),  0LL);
          swift_bridgeObjectRelease(v334);
          v337 = swift_bridgeObjectRelease(v335);
          v338 = *(void (**)(char *, uint64_t, __n128))(v409 + 8);
          v338(v405, v325, v337);
          v328 = ((uint64_t (*)(char *, uint64_t))v338)(v404, v325);
          if ((v336 & 1) == 0)
          {
            swift_release(v331);
            goto LABEL_145;
          }
        }

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v328);
        v329 = v411[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v329);
        v330 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v329, v331);
        specialized ContiguousArray._endMutation()(v330);
LABEL_145:
        v322 = v326;
        if (v323 == ++v324)
        {
          swift_bridgeObjectRelease(v326);
          v340 = v411;
          CGRect v177 = v398;
          goto LABEL_155;
        }
      }
    }

    goto LABEL_169;
  }

  swift_bridgeObjectRelease(v322);
  v340 = _swiftEmptyArrayStorage;
LABEL_155:
  __chkstk_darwin(v339);
  v341 = v379;
  v357 = v379;
  sub_1001BFAD8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1001A227C, (uint64_t)&v355 + 8, (uint64_t)v340);
  v343 = v342;
  swift_release(v340);
  v411 = (void *)v343;
  v344 = v402;
  if ((unint64_t)v343 >> 62)
  {
    if (v343 < 0) {
      v350 = v343;
    }
    else {
      v350 = v343 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v343);
    v345 = _CocoaArrayWrapper.endIndex.getter(v350);
    swift_bridgeObjectRelease(v343);
  }

  else
  {
    v345 = *(void *)((v343 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  if (v345 >= 5)
  {
    sub_1001BFF90(v345 - 4);
    v343 = (uint64_t)v411;
  }

  sub_1000A45DC(v343);
  [v341 pageMarginInsets];
  v347 = v346;
  [v341 pageMarginInsets];
  objc_msgSend(v344, "setLayoutMargins:", 0.0, v347, 0.0);
  v348 = PageTraitEnvironment.pageContentSize.getter();
  *((void *)&v414 + 1) = &type metadata for CGFloat;
  v415 = &protocol witness table for CGFloat;
  *(double *)&v413 = (v348 + -120.0) * 0.25;
  v349 = &v344[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_layoutMetrics];
  swift_beginAccess(&v344[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_layoutMetrics], &v412, 33LL, 0LL);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)v349 + 51);
  sub_1000243BC(&v413, (uint64_t)(v349 + 408));
  *((void *)&v414 + 1) = &type metadata for CGFloat;
  v415 = &protocol witness table for CGFloat;
  *(void *)&v413 = 0x4044000000000000LL;
  v349 += 448;
  _s8AppStore17PillOverlayLayoutVwxx_0(v349);
  sub_1000243BC(&v413, (uint64_t)v349);
  objc_msgSend(v344, "setNeedsLayout", swift_endAccess(&v412).n128_f64[0]);
  swift_unknownObjectRelease(v399);
  swift_release(v400);
  swift_release(v177);
}

uint64_t sub_1000B565C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  Swift::Int v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  uint64_t v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[8 * v13] <= a4) {
      memmove(a4, __src, 8 * v13);
    }
    Swift::Int v14 = &v4[8 * v13];
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_39;
    }
    uint64_t v17 = (char *)(a3 - 8);
    uint64_t v18 = v6;
    while (1)
    {
      Swift::Int v19 = v17 + 8;
      uint64_t v21 = *((void *)v18 - 1);
      v18 -= 8;
      uint64_t v20 = v21;
      if (*((void *)v14 - 1) < v21) {
        break;
      }
      uint64_t v20 = *((void *)v14 - 1);
      uint64_t v18 = v6;
      if (v19 != v14)
      {
        v14 -= 8;
LABEL_35:
        *(void *)uint64_t v17 = v20;
        goto LABEL_36;
      }

      BOOL v22 = v17 >= v14;
      v14 -= 8;
      if (v22) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        v17 -= 8;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }

      uint64_t v6 = v18;
      goto LABEL_39;
    }

    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }

  if (a4 != __dst || &__dst[8 * v10] <= a4) {
    memmove(a4, __dst, 8 * v10);
  }
  Swift::Int v14 = &v4[8 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v15 = *(void *)v6;
      if (*(void *)v6 >= *(void *)v4) {
        break;
      }
      BOOL v16 = v7 == v6;
      v6 += 8;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 8;
    }

    uint64_t v15 = *(void *)v4;
    BOOL v16 = v7 == v4;
    v4 += 8;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *(void *)uint64_t v7 = v15;
    goto LABEL_17;
  }

void sub_1000B585C(uint64_t a1, uint64_t a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000038E8(&qword_1002E7018);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    char v37 = a2;
    char v36 = v3;
    int64_t v9 = 0LL;
    uint64_t v10 = (uint64_t *)(v5 + 64);
    uint64_t v11 = 1LL << *(_BYTE *)(v5 + 32);
    uint64_t v34 = -1LL << v11;
    uint64_t v35 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v13 = v12 & *(void *)(v5 + 64);
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }

      else
      {
        int64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1LL))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }

        if (v20 >= v14) {
          goto LABEL_34;
        }
        unint64_t v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v14) {
            goto LABEL_34;
          }
          unint64_t v21 = v10[v9];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_34:
              if ((v37 & 1) == 0)
              {
                swift_release(v5);
                Swift::Int v3 = v36;
                goto LABEL_41;
              }

              if (v35 >= 64) {
                bzero((void *)(v5 + 64), 8 * v14);
              }
              else {
                *uint64_t v10 = v34;
              }
              Swift::Int v3 = v36;
              *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
              break;
            }

            unint64_t v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1LL)) {
                  goto LABEL_43;
                }
                if (v9 >= v14) {
                  goto LABEL_34;
                }
                unint64_t v21 = v10[v9];
                ++v22;
                if (v21) {
                  goto LABEL_24;
                }
              }
            }

            int64_t v9 = v22;
          }
        }

void sub_1000B5B04(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for IndexPath(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = v2;
  uint64_t v9 = *v2;
  if (*(void *)(*v2 + 24) > a1) {
    a1 = *(void *)(*v2 + 24);
  }
  sub_1000038E8(&qword_1002E7008);
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    swift_release(v9);
    uint64_t v42 = v46;
LABEL_44:
    *uint64_t v42 = v11;
    return;
  }

  uint64_t v12 = 1LL << *(_BYTE *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v48 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1LL << v12);
  }
  else {
    uint64_t v14 = -1LL;
  }
  unint64_t v15 = v14 & v13;
  int64_t v47 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 64;
  __n128 v17 = swift_retain(v9);
  int64_t v18 = 0LL;
  int v45 = a2;
  uint64_t v19 = 16LL;
  if ((a2 & 1) != 0) {
    uint64_t v19 = 32LL;
  }
  uint64_t v49 = v19;
  while (1)
  {
    if (v15)
    {
      unint64_t v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v23 = v22 | (v18 << 6);
      goto LABEL_26;
    }

    int64_t v24 = v18 + 1;
    if (__OFADD__(v18, 1LL))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }

    if (v24 >= v47)
    {
      swift_release(v9);
      uint64_t v42 = v46;
      uint64_t v25 = v48;
      if ((v45 & 1) != 0)
      {
LABEL_39:
        uint64_t v43 = 1LL << *(_BYTE *)(v9 + 32);
        if (v43 >= 64) {
          bzero(v25, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
        }
        else {
          *uint64_t v25 = -1LL << v43;
        }
        *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
      }

LABEL_46:
  __break(1u);
}

      swift_bridgeObjectRelease(v21);
      return;
    }

    __break(1u);
LABEL_47:
    __break(1u);
  }

  __break(1u);
LABEL_49:
  __break(1u);
}

  __break(1u);
LABEL_47:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

      if (v6 > v7)
      {
        v19 -= 16;
        if (v14 > v4) {
          continue;
        }
      }

      goto LABEL_48;
    }
  }

  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      unint64_t v15 = *((void *)v6 + 1);
      uint64_t v16 = *((void *)v4 + 1);
      __n128 v17 = *(void *)v6 == *(void *)v4 && v15 == v16;
      if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(void *)v6, v15, *(void *)v4, v16, 1LL) & 1) == 0) {
        break;
      }
      int64_t v18 = v6;
      __n128 v17 = v7 == v6;
      v6 += 16;
      if (!v17) {
        goto LABEL_20;
      }
LABEL_21:
      v7 += 16;
    }

    int64_t v18 = v4;
    __n128 v17 = v7 == v4;
    v4 += 16;
    if (v17) {
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
    goto LABEL_21;
  }

void sub_1000B5E9C(uint64_t a1, uint64_t a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000038E8(&qword_1002E6FD0);
  char v38 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_44;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  swift_retain(v5);
  int64_t v13 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_25;
    }

    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }

    if (v17 >= v36) {
      break;
    }
    int64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v37 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v36) {
        goto LABEL_37;
      }
      unint64_t v19 = *(void *)(v37 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v36)
        {
LABEL_37:
          swift_release(v5);
          if ((v38 & 1) == 0) {
            goto LABEL_44;
          }
          goto LABEL_40;
        }

        unint64_t v19 = *(void *)(v37 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1LL)) {
              goto LABEL_46;
            }
            if (v13 >= v36) {
              goto LABEL_37;
            }
            unint64_t v19 = *(void *)(v37 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_24;
            }
          }
        }

        int64_t v13 = v20;
      }
    }

void sub_1000B61D4(uint64_t a1, uint64_t a2)
{
  Swift::Int v3 = v2;
  uint64_t v47 = type metadata accessor for AdamId(0LL);
  uint64_t v6 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *v3;
  if (*(void *)(*v3 + 24) > a1) {
    a1 = *(void *)(*v3 + 24);
  }
  sub_1000038E8(&qword_1002E6FB8);
  int v45 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v42 = v3;
  uint64_t v11 = 1LL << *(_BYTE *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v44 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1LL << v11);
  }
  else {
    uint64_t v13 = -1LL;
  }
  unint64_t v14 = v13 & v12;
  int64_t v43 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  __n128 v16 = swift_retain(v8);
  int64_t v17 = 0LL;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }

    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1LL))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }

    if (v22 >= v43) {
      goto LABEL_36;
    }
    unint64_t v23 = v44[v22];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_36;
      }
      unint64_t v23 = v44[v17];
      if (!v23) {
        break;
      }
    }

void sub_1000B653C(uint64_t a1, uint64_t a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000038E8(&qword_1002E6FC0);
  char v38 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  char v36 = v3;
  uint64_t v37 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  swift_retain(v5);
  int64_t v14 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }

    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }

    if (v23 >= v12) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_36;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          Swift::Int v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1LL)) {
              goto LABEL_45;
            }
            if (v14 >= v12) {
              goto LABEL_36;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_33;
            }
          }
        }

        int64_t v14 = v26;
      }
    }

LABEL_33:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = *(void *)(*(void *)(v5 + 56) + 8 * v22);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain(v31[1]);
    }
    Hasher.init(_seed:)(v39);
    String.hash(into:)(v39, v33, v32);
    Swift::Int v15 = Hasher._finalize()();
    uint64_t v16 = -1LL << *(_BYTE *)(v8 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1LL << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1LL << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }

        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0LL;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }

      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }

    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v19;
    unint64_t v20 = (void *)(*(void *)(v8 + 48) + 16 * v19);
    *unint64_t v20 = v33;
    v20[1] = v32;
    *(void *)(*(void *)(v8 + 56) + 8 * v19) = v34;
    ++*(void *)(v8 + 16);
  }

  swift_release(v5);
  Swift::Int v3 = v36;
  int64_t v24 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v35 = 1LL << *(_BYTE *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *int64_t v24 = -1LL << v35;
  }
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
LABEL_43:
  swift_release(v5);
  uint64_t *v3 = v8;
}

    unint64_t v11 = (v27 - 1) & v27;
    int64_t v24 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_34:
    uint64_t v33 = 8 * v24;
    uint64_t v34 = *(void *)(*(void *)(v5 + 48) + v33);
    uint64_t v35 = *(void **)(*(void *)(v5 + 56) + v33);
    if ((v41 & 1) == 0)
    {
      swift_retain(v34);
      char v36 = v35;
    }

    int64_t v14 = *(void *)(v8 + 40);
    Swift::Int v15 = type metadata accessor for Artwork(0LL);
    uint64_t v16 = sub_100004288( (unint64_t *)&qword_1002E6FA0,  (uint64_t (*)(uint64_t))&type metadata accessor for Artwork,  (uint64_t)&protocol conformance descriptor for Artwork);
    unint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v15, v16);
    unint64_t v18 = -1LL << *(_BYTE *)(v8 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1LL << v19) & ~*(void *)(v12 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1LL << v19) & ~*(void *)(v12 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      BOOL v29 = 0;
      uint64_t v30 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }

        uint64_t v31 = v20 == v30;
        if (v20 == v30) {
          unint64_t v20 = 0LL;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v20);
      }

      while (v32 == -1);
      unint64_t v21 = __clz(__rbit64(~v32)) + (v20 << 6);
    }

    *(void *)(v12 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v21;
    unint64_t v22 = 8 * v21;
    *(void *)(*(void *)(v8 + 48) + v22) = v34;
    *(void *)(*(void *)(v8 + 56) + v22) = v35;
    ++*(void *)(v8 + 16);
  }

  swift_release(v5);
  Swift::Int v3 = v38;
  int64_t v26 = (void *)(v5 + 64);
  if ((v41 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v37 = 1LL << *(_BYTE *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *int64_t v26 = -1LL << v37;
  }
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
LABEL_43:
  swift_release(v5);
  uint64_t *v3 = v8;
}

        int64_t v14 = (v25 - 1) & v25;
        int64_t v23 = __clz(__rbit64(v25)) + (v10 << 6);
      }

      uint64_t v31 = 8 * v23;
      uint64_t v32 = *(void *)(*(void *)(v6 + 48) + v31);
      uint64_t v33 = *(void **)(*(void *)(v6 + 56) + v31);
      if ((a2 & 1) == 0) {
        uint64_t v34 = v33;
      }
      uint64_t v16 = static Hasher._hash(seed:_:)(*(void *)(v9 + 40), v32);
      unint64_t v17 = -1LL << *(_BYTE *)(v9 + 32);
      unint64_t v18 = v16 & ~v17;
      unint64_t v19 = v18 >> 6;
      if (((-1LL << v18) & ~*(void *)(v15 + 8 * (v18 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1LL << v18) & ~*(void *)(v15 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }

          BOOL v29 = v19 == v28;
          if (v19 == v28) {
            unint64_t v19 = 0LL;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v15 + 8 * v19);
        }

        while (v30 == -1);
        unint64_t v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }

      *(void *)(v15 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v20;
      unint64_t v21 = 8 * v20;
      *(void *)(*(void *)(v9 + 48) + v21) = v32;
      *(void *)(*(void *)(v9 + 56) + v21) = v33;
      ++*(void *)(v9 + 16);
    }
  }

  swift_release(v6);
LABEL_43:
  *Swift::Int v4 = v9;
}

        __break(1u);
        return;
      }
    }

    else
    {
      char v36 = *(void *)((v35 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(*v34);
      if (v36) {
        goto LABEL_20;
      }
    }

            unint64_t v17 = (v23 - 1) & v23;
            unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
          }
        }

        while (*(void *)(*(void *)(v13 + 48) + 8 * v21) != v10);
        uint64_t v37 = v10 + 1;
        unint64_t v25 = *(id *)(*(void *)(v13 + 56) + 8 * v21);
        swift_release(v13);
        swift_bridgeObjectRelease(v13);
        int64_t v26 = v12;
        char v27 = *(void *)((char *)v3 + v12);
        unint64_t v28 = *(void *)(v27
                        + OBJC_IVAR____TtCC8AppStore28HorizontalShelfContainerCellP33_9A9BA71119EAFE698D113479D4C4734F10DataSource_seeAllAction);
        if (v28 && (BOOL v29 = *(void *)(v27 + 40)) != 0)
        {
          uint64_t v30 = *(void *)(v27 + 48);
          uint64_t ObjectType = swift_getObjectType(*(void *)(v27 + 40));
          swift_retain(v27);
          swift_unknownObjectRetain(v29);
          uint64_t v32 = dispatch thunk of ComponentContainerDelegate.numberOfItems.getter(ObjectType, v30);
          swift_unknownObjectRelease(v29);
          if (v10 == v32)
          {
            v39[3] = type metadata accessor for Action(0LL);
            void v39[4] = sub_100004288( (unint64_t *)&qword_1002E8120,  (uint64_t (*)(uint64_t))&type metadata accessor for Action,  (uint64_t)&protocol conformance descriptor for Action);
            v39[0] = v28;
            swift_retain(v28);
            swift_release(v27);
            goto LABEL_41;
          }
        }

        else
        {
          swift_retain(v27);
        }

        uint64_t v33 = *(void *)(v27 + 40);
        if (!v33) {
          goto LABEL_49;
        }
        uint64_t v34 = *(void *)(v27 + 48);
        uint64_t v35 = swift_getObjectType(*(void *)(v27 + 40));
        swift_unknownObjectRetain(v33);
        dispatch thunk of ComponentContainerDelegate.model(ofItem:)(v10, v35, v34);
        swift_release(v27);
        swift_unknownObjectRelease(v33);
LABEL_41:
        int64_t v12 = v26;
        char v36 = *(void *)((char *)v3 + v26);
        swift_retain(v36);
        sub_1001B16C4((uint64_t)v39, v10, v25);
        swift_release(v36);

        _s8AppStore17PillOverlayLayoutVwxx_0(v39);
        ++v10;
        if (v37 != v11) {
          continue;
        }
LABEL_4:
        uint64_t v7 = (char *)v3 + *(void *)((swift_isaMask & *v3) + 0xA0LL);
        if (v7[16] == 1)
        {
          [v3 contentOffset];
          *(void *)uint64_t v7 = v8;
          *((void *)v7 + 1) = v9;
          v7[16] = 0;
        }

        objc_msgSend(v3, "setContentSize:", 0.0, 0.0, v37);
        *((_BYTE *)v3 + *(void *)((swift_isaMask & *v3) + 0x98LL)) = 0;
        [v3 invalidateIntrinsicContentSize];
        [v3 setNeedsLayout];
        return;
      }

      break;
    }

void sub_1000B6840(uint64_t a1, uint64_t a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000038E8(&qword_1002E6F98);
  char v41 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v40 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  char v38 = v3;
  int64_t v39 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  swift_retain(v5);
  int64_t v13 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v23 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v24 = v23 | (v13 << 6);
      goto LABEL_34;
    }

    int64_t v25 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }

    if (v25 >= v39) {
      break;
    }
    int64_t v26 = (void *)(v5 + 64);
    unint64_t v27 = *(void *)(v40 + 8 * v25);
    ++v13;
    if (!v27)
    {
      int64_t v13 = v25 + 1;
      if (v25 + 1 >= v39) {
        goto LABEL_36;
      }
      unint64_t v27 = *(void *)(v40 + 8 * v13);
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v39)
        {
LABEL_36:
          swift_release(v5);
          Swift::Int v3 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v27 = *(void *)(v40 + 8 * v28);
        if (!v27)
        {
          while (1)
          {
            int64_t v13 = v28 + 1;
            if (__OFADD__(v28, 1LL)) {
              goto LABEL_45;
            }
            if (v13 >= v39) {
              goto LABEL_36;
            }
            unint64_t v27 = *(void *)(v40 + 8 * v13);
            ++v28;
            if (v27) {
              goto LABEL_33;
            }
          }
        }

        int64_t v13 = v28;
      }
    }

void sub_1000B6B70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  Swift::Int v4 = v3;
  uint64_t v6 = *v3;
  if (*(void *)(*v3 + 24) <= a1) {
    uint64_t v7 = a1;
  }
  else {
    uint64_t v7 = *(void *)(*v3 + 24);
  }
  sub_1000038E8(a3);
  uint64_t v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  uint64_t v9 = v8;
  if (*(void *)(v6 + 16))
  {
    int64_t v10 = 0LL;
    unint64_t v11 = (uint64_t *)(v6 + 64);
    uint64_t v12 = 1LL << *(_BYTE *)(v6 + 32);
    uint64_t v35 = -1LL << v12;
    if (v12 < 64) {
      uint64_t v13 = ~(-1LL << v12);
    }
    else {
      uint64_t v13 = -1LL;
    }
    unint64_t v14 = v13 & *(void *)(v6 + 64);
    uint64_t v36 = 1LL << *(_BYTE *)(v6 + 32);
    uint64_t v37 = v4;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v15 = v8 + 64;
    while (1)
    {
      if (v14)
      {
        unint64_t v22 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v23 = v22 | (v10 << 6);
      }

      else
      {
        int64_t v24 = v10 + 1;
        if (__OFADD__(v10, 1LL))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }

        if (v24 >= v38) {
          goto LABEL_36;
        }
        unint64_t v25 = v11[v24];
        ++v10;
        if (!v25)
        {
          int64_t v10 = v24 + 1;
          if (v24 + 1 >= v38) {
            goto LABEL_36;
          }
          unint64_t v25 = v11[v10];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v38)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v6);
                Swift::Int v4 = v37;
                goto LABEL_43;
              }

              if (v36 >= 64) {
                bzero((void *)(v6 + 64), 8 * v38);
              }
              else {
                *unint64_t v11 = v35;
              }
              Swift::Int v4 = v37;
              *(void *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
              break;
            }

            unint64_t v25 = v11[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v10 = v26 + 1;
                if (__OFADD__(v26, 1LL)) {
                  goto LABEL_45;
                }
                if (v10 >= v38) {
                  goto LABEL_36;
                }
                unint64_t v25 = v11[v10];
                ++v26;
                if (v25) {
                  goto LABEL_33;
                }
              }
            }

            int64_t v10 = v26;
          }
        }

_OWORD *sub_1000B6E1C(_OWORD *a1, void *a2, char a3)
{
  Swift::Int v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1000EDF70((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }

  else
  {
    char v13 = v8;
    uint64_t v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      uint64_t v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        uint64_t v16 = (void *)(v15[7] + 32 * v9);
        _s8AppStore17PillOverlayLayoutVwxx_0(v16);
        return sub_1000076D0(a1, v16);
      }

      goto LABEL_11;
    }

    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1000B7754();
      goto LABEL_7;
    }

    sub_1000B5E9C(v12, a3 & 1);
    unint64_t v18 = sub_1000EDF70((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if ((v13 & 1) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      sub_1000B7330(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }

  type metadata accessor for Key(0LL);
  double result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
  __break(1u);
  return result;
}

void sub_1000B6F3C(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000EDF74(a1, a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_1000B7B74();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return;
    }

void sub_1000B7090(uint64_t a1, uint64_t a2, char a3)
{
  Swift::Int v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1000EDEE0(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1000B7D20();
LABEL_7:
    char v16 = (void *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }

void sub_1000B71E0(uint64_t a1, uint64_t a2, char a3)
{
}

void sub_1000B71EC(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000EE070(a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_1000B7EC4(a4);
LABEL_7:
    unint64_t v18 = (void *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }

_OWORD *sub_1000B7330(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1LL << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  double result = sub_1000076D0(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void sub_1000B7394()
{
  uint64_t v1 = v0;
  sub_1000038E8(&qword_1002E7018);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    uint64_t *v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }

void sub_1000B7520()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000038E8(&qword_1002E7008);
  uint64_t v6 = *v0;
  uint64_t v7 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    swift_release(v6);
LABEL_28:
    uint64_t *v1 = v8;
    return;
  }

  int64_t v26 = v1;
  int64_t v9 = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1LL << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  uint64_t v27 = v6 + 64;
  int64_t v12 = 0LL;
  *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1LL << *(_BYTE *)(v6 + 32);
  uint64_t v14 = -1LL;
  if (v13 < 64) {
    uint64_t v14 = ~(-1LL << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }

    int64_t v23 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v23 >= v16) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v12;
    if (!v24)
    {
      int64_t v12 = v23 + 1;
      if (v23 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v12);
      if (!v24) {
        break;
      }
    }

void sub_1000B7754()
{
  uint64_t v1 = v0;
  sub_1000038E8(&qword_1002E6FD0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    uint64_t *v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }

void sub_1000B7918()
{
  uint64_t v34 = type metadata accessor for AdamId(0LL);
  uint64_t v1 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000038E8(&qword_1002E6FB8);
  uint64_t v31 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v35 = v5;
  if (!v6)
  {
    swift_release(v4);
    uint64_t v29 = v35;
    __int128 v28 = v31;
LABEL_28:
    *__int128 v28 = v29;
    return;
  }

  uint64_t v7 = v5;
  uint64_t v8 = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1LL << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v35;
  }

  uint64_t v32 = v4 + 64;
  int64_t v11 = 0LL;
  *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1LL << *(_BYTE *)(v4 + 32);
  uint64_t v13 = -1LL;
  if (v12 < 64) {
    uint64_t v13 = ~(-1LL << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v15 = v34;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }

    int64_t v25 = v11 + 1;
    if (__OFADD__(v11, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v11);
      if (!v26) {
        break;
      }
    }

void sub_1000B7B74()
{
  uint64_t v1 = v0;
  sub_1000038E8(&qword_1002E6FC0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    uint64_t *v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

void sub_1000B7D20()
{
  uint64_t v1 = v0;
  sub_1000038E8(&qword_1002E6F98);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    uint64_t *v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }

void sub_1000B7EC4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000038E8(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)(*v1);
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    uint64_t *v2 = v5;
    return;
  }

  uint64_t v6 = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1LL << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  int64_t v10 = 0LL;
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v12 = -1LL;
  if (v11 < 64) {
    uint64_t v12 = ~(-1LL << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v20 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v7 + 8 * v10);
      if (!v21) {
        break;
      }
    }

void sub_1000B805C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7) {
      return;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v7) {
      return;
    }
  }

  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }

  if (!v6)
  {
    uint64_t v8 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    if (v8 <= a2)
    {
      uint64_t v9 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E5EA0, &OBJC_CLASS___UIViewController_ptr);
      swift_arrayInitWithCopy(a1, (a3 & 0xFFFFFFFFFFFFFF8LL) + 32, v8, v9);
      return;
    }

    __break(1u);
    goto LABEL_21;
  }

  if (a3 < 0) {
    uint64_t v10 = a3;
  }
  else {
    uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a3);
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a3);
  if (v11 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  if (v7 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  sub_1000B9070(&qword_1002E7000, &qword_1002E6FF8);
  swift_bridgeObjectRetain(a3);
  for (unint64_t i = 0LL; i != v7; ++i)
  {
    sub_1000038E8(&qword_1002E6FF8);
    unint64_t v13 = sub_1000BE0A4(v17, i, a3);
    id v15 = *v14;
    ((void (*)(uint64_t (**)(), void))v13)(v17, 0LL);
    *(void *)(a1 + 8 * i) = v15;
  }

  swift_bridgeObjectRelease(a3);
}

void sub_1000B820C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7) {
      return;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v7) {
      return;
    }
  }

  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }

  if (!v6)
  {
    uint64_t v8 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    if (v8 <= a2)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeButton(0LL);
      swift_arrayInitWithCopy(a1, (a3 & 0xFFFFFFFFFFFFFF8LL) + 32, v8, v9);
      return;
    }

    __break(1u);
    goto LABEL_21;
  }

  if (a3 < 0) {
    uint64_t v10 = a3;
  }
  else {
    uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a3);
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a3);
  if (v11 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  if (v7 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  sub_1000B9070(&qword_1002E6F90, &qword_1002E6F88);
  swift_bridgeObjectRetain(a3);
  for (unint64_t i = 0LL; i != v7; ++i)
  {
    sub_1000038E8(&qword_1002E6F88);
    unint64_t v13 = sub_1000BE14C(v17, i, a3);
    id v15 = *v14;
    ((void (*)(void (**)(id *), void))v13)(v17, 0LL);
    *(void *)(a1 + 8 * i) = v15;
  }

  swift_bridgeObjectRelease(a3);
}

void sub_1000B83AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7) {
      return;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v7) {
      return;
    }
  }

  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }

  if (!v6)
  {
    uint64_t v8 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    if (v8 <= a2)
    {
      uint64_t v9 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E2B90, &OBJC_CLASS___UICollectionViewLayoutAttributes_ptr);
      swift_arrayInitWithCopy(a1, (a3 & 0xFFFFFFFFFFFFFF8LL) + 32, v8, v9);
      return;
    }

    __break(1u);
    goto LABEL_21;
  }

  if (a3 < 0) {
    uint64_t v10 = a3;
  }
  else {
    uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a3);
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a3);
  if (v11 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  if (v7 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  sub_1000B9070(&qword_1002E6FE0, &qword_1002E6FD8);
  swift_bridgeObjectRetain(a3);
  for (unint64_t i = 0LL; i != v7; ++i)
  {
    sub_1000038E8(&qword_1002E6FD8);
    unint64_t v13 = sub_1000BE0A4(v17, i, a3);
    id v15 = *v14;
    ((void (*)(uint64_t (**)(), void))v13)(v17, 0LL);
    *(void *)(a1 + 8 * i) = v15;
  }

  swift_bridgeObjectRelease(a3);
}

void sub_1000B855C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v26 = a3;
    }
    else {
      uint64_t v26 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15) {
      return;
    }
  }

  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v15) {
      return;
    }
  }

  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }

  if (!v14)
  {
    uint64_t v16 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    if (v16 <= a2)
    {
      uint64_t v17 = a4(0LL);
      swift_arrayInitWithCopy(a1, (a3 & 0xFFFFFFFFFFFFFF8LL) + 32, v16, v17);
      return;
    }

    __break(1u);
    goto LABEL_21;
  }

  if (a3 < 0) {
    uint64_t v18 = a3;
  }
  else {
    uint64_t v18 = a3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a3);
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(a3);
  if (v19 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  if (v15 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  uint64_t v20 = sub_1000B9070(a5, a6);
  swift_bridgeObjectRetain(a3);
  for (uint64_t i = 0LL; i != v15; ++i)
  {
    uint64_t v22 = sub_1000038E8(a6);
    unint64_t v23 = (void (*)(_BYTE *, void))a7(v27, i, a3, v22, v20);
    uint64_t v25 = *v24;
    swift_retain(*v24);
    v23(v27, 0LL);
    *(void *)(a1 + 8 * i) = v25;
  }

  swift_bridgeObjectRelease(a3);
}

void sub_1000B8700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7) {
      return;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v7) {
      return;
    }
  }

  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }

  if (!v6)
  {
    uint64_t v8 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    if (v8 <= a2)
    {
      uint64_t v9 = sub_10000DFD4(0LL, &qword_1002E6288, &OBJC_CLASS___NSCollectionLayoutBoundarySupplementaryItem_ptr);
      swift_arrayInitWithCopy(a1, (a3 & 0xFFFFFFFFFFFFFF8LL) + 32, v8, v9);
      return;
    }

    __break(1u);
    goto LABEL_21;
  }

  if (a3 < 0) {
    uint64_t v10 = a3;
  }
  else {
    uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a3);
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a3);
  if (v11 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  if (v7 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  sub_1000B9070(&qword_1002E6FB0, &qword_1002E6FA8);
  swift_bridgeObjectRetain(a3);
  for (unint64_t i = 0LL; i != v7; ++i)
  {
    sub_1000038E8(&qword_1002E6FA8);
    unint64_t v13 = sub_1000BE0A4(v17, i, a3);
    id v15 = *v14;
    ((void (*)(uint64_t (**)(), void))v13)(v17, 0LL);
    *(void *)(a1 + 8 * i) = v15;
  }

  swift_bridgeObjectRelease(a3);
}

double sub_1000B88B0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for LockupMediaLayout.Metrics(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for LockupMediaLayout(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0A20 != -1) {
    swift_once(&qword_1002E0A20, sub_1000B4060);
  }
  uint64_t v16 = sub_10000A634(v8, (uint64_t)qword_1002F3ED0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v16, v8);
  uint64_t v17 = sub_1000038E8((uint64_t *)&unk_1002E22C0);
  uint64_t v18 = swift_allocObject(v17, 72LL, 7LL);
  *(_OWORD *)(v18 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  uint64_t v19 = *(char **)(a2 + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v19[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view]);

  if (!Strong) {
    uint64_t v19 = *(char **)(a2 + OBJC_IVAR____TtC8AppStore15LockupMediaView_imageView);
  }
  unint64_t v21 = v19;
  *(void *)(v18 + 56) = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
  *(void *)(v18 + 64) = protocol witness table for UIView;
  *(void *)(v18 + 32) = v21;
  LockupMediaLayout.init(metrics:mediaViews:)(v11, v18);
  double v22 = LockupMediaLayout.measurements(fitting:in:)(a1, a3, a4);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v22;
}

void sub_1000B8AAC(int64_t a1, uint64_t a2, int64_t a3, char a4)
{
  uint64_t v8 = a1;
  if (!a2)
  {
LABEL_9:
    if (!v8) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  uint64_t v9 = Trailers.videos.getter();
  uint64_t v10 = v9;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 >= 0) {
      v9 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v9))
    {
LABEL_4:
      if ((v10 & 0xC000000000000001LL) != 0)
      {
        uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v10);
      }

      else
      {
        unint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFF8LL) + 0x10);
        if (!v11)
        {
          __break(1u);
          goto LABEL_49;
        }

        uint64_t v12 = *(void *)(v10 + 32);
        swift_retain(v12);
      }

      swift_bridgeObjectRelease(v10);
      uint64_t v4 = Video.preview.getter(v13);
      swift_release(v12);
      uint64_t v14 = swift_retain(v4);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      unint64_t v5 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v11 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v5 < v11 >> 1)
      {
LABEL_8:
        uint64_t v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v4);
        specialized Array._endMutation()(v15);
        swift_release(v4);
        goto LABEL_9;
      }

LABEL_49:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v5 + 1, 1LL);
      goto LABEL_8;
    }
  }

  else if (*(void *)((v9 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    goto LABEL_4;
  }

  swift_bridgeObjectRelease(v10);
  if (v8)
  {
LABEL_10:
    uint64_t v16 = Screenshots.artwork.getter();
    sub_1000B3B34( v16,  &type metadata accessor for Artwork,  &qword_1002E6F80,  &qword_1002E32C8,  (uint64_t *)sub_1000BE0F8);
  }

                    uint64_t v63 = (unsigned int *)&enum case for ReferrerData.Kind.unspecified(_:);
                    goto LABEL_50;
                  }

                  goto LABEL_42;
                }
              }

  swift_bridgeObjectRelease(a2);
}

    id v118 = type metadata accessor for ArtworkLoader(0LL);
    id v119 = inject(_:from:)(v118, v83);
    [v56 setHidden:1];
    unint64_t v120 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerTitleLabel;
    Swift::Int v98 = (unint64_t)v412;
    unint64_t v121 = *(void **)&v412[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_headerTitleLabel];
    v389 = v88;
    v374 = v89;
    if (v121)
    {
      [v121 removeFromSuperview];
      uint64_t v122 = *(void **)(v98 + v120);
    }

    else
    {
      uint64_t v122 = 0LL;
    }

    v373 = v119;
    *(void *)(v98 + v120) = 0LL;

    sub_1000A43F8();
    CGRect v123 = type metadata accessor for ArtworkView(0LL);
    uint64_t v124 = static ArtworkView.plainArtworkView.getter(v123);
    double v125 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
    CGRect v126 = [v125 clearColor];
    v372 = (void *)v124;
    CGRect v127 = ArtworkView.backgroundColor.setter(v126);
    CGRect v128 = static ArtworkView.plainArtworkView.getter(v127);
    CGRect v129 = [v125 clearColor];
    v371 = v128;
    uint64_t v130 = ArtworkView.backgroundColor.setter(v129);
    if (qword_1002E0978 == -1) {
      goto LABEL_53;
    }
    goto LABEL_171;
  }

  swift_release(v82);
  uint64_t v91 = swift_bridgeObjectRelease(v87);
LABEL_48:
  Swift::Int v98 = (unint64_t)v412;
  while (1)
  {
    uint64_t v46 = (uint64_t)v410;
LABEL_64:
    uint64_t v169 = *(void **)(v98 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_descriptionHeaderLabel);
    ProductTopLockup.descriptionHeader.getter(v91);
    if (v170)
    {
      objc_super v172 = v170;
      CGRect v173 = String._bridgeToObjectiveC()();
      *(void *)&v171 = swift_bridgeObjectRelease(v172).n128_u64[0];
    }

    else
    {
      CGRect v173 = 0LL;
    }

    objc_msgSend(v169, "setText:", v173, v171);

    CGRect v174 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
    CGRect v175 = (void *)static UIColor.primaryText.getter(v174);
    [v169 setTextColor:v175];

    CGRect v176 = *(void **)(v98 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_descriptionTextLabel);
    CGRect v177 = (id)ProductTopLockup.description.getter();
    if (v177)
    {
      CGRect v178 = (void *)Paragraph.languageAwareCollapsedText.getter();
      CGRect v179 = swift_release(v177);
      CGRect v180 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter(v179);

      CGRect v177 = sub_1001BFC84((uint64_t)[v176 lineBreakMode]);
    }

    [v176 setAttributedText:v177];

    v182 = (void *)static UIColor.primaryText.getter(v181);
    [v176 setTextColor:v182];

    v183 = ProductTopLockup.offerDisplayProperties.getter();
    v184 = inject(_:from:)(v413);
    v186 = v185;
    uint64_t ObjectType = swift_getObjectType(v184);
    v188 = v392;
    ProductTopLockup.adamId.getter();
    v410 = (char *)dispatch thunk of AppStateController.stateMachine(forApp:)(v188, ObjectType, v186);
    v190 = v189;
    swift_unknownObjectRelease(v184);
    (*(void (**)(char *, uint64_t))(v393 + 8))(v188, v394);
    if (v183)
    {
      v191 = swift_retain(v183);
      v192 = OfferDisplayProperties.subtitles.getter(v191);
      v193 = swift_release(v183);
      v194 = v382;
      v195 = (uint64_t)v409;
      (*(void (**)(char *, void, uint64_t, __n128))(v382 + 104))( v409,  enum case for OfferTitleType.standard(_:),  v46,  v193);
      if (*(void *)(v192 + 16) && (v196 = sub_1000EDFD8(v195), (v197 & 1) != 0))
      {
        v198 = *(void *)(*(void *)(v192 + 56) + 16 * v196 + 8);
        swift_bridgeObjectRetain(v198);
      }

      else
      {
        v198 = 0LL;
      }

      v199 = swift_bridgeObjectRelease(v192);
      (*(void (**)(char *, uint64_t, __n128))(v194 + 8))(v409, v46, v199);
      swift_retain(v183);
      v201 = OfferDisplayProperties.isArcadeOffer.getter(v200);
      swift_release(v183);
    }

    else
    {
      v201 = 0;
      v198 = 0LL;
    }

    v202 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offersArcade;
    *(_BYTE *)(v98 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offersArcade) = v201 & 1;
    v203 = swift_getObjectType(v410);
    v204 = v395;
    v205 = dispatch thunk of AppStateMachine.currentState.getter(v203, v190);
    v206 = *(unsigned __int8 *)(v98 + v202);
    v207 = LegacyAppState.isBuyable.getter(v205);
    (*(void (**)(char *, uint64_t))(v396 + 8))(v204, v397);
    if ((v207 & 1) == 0) {
      goto LABEL_79;
    }
    if (v198 && !v206)
    {
      v209 = v412;
      v218 = *(void **)&v412[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonSubtitleLabel];
      [v218 setHidden:0];
      v219 = String._bridgeToObjectiveC()();
      objc_msgSend(v218, "setText:", v219, swift_bridgeObjectRelease(v198).n128_f64[0]);

      v212 = *(id *)&v209[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView];
      v211 = v391;
      if (!v212) {
        goto LABEL_88;
      }
    }

    else
    {
LABEL_79:
      *(void *)&v208 = swift_bridgeObjectRelease(v198).n128_u64[0];
      v209 = v412;
      v210 = v412[v202];
      objc_msgSend( *(id *)&v412[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonSubtitleLabel],  "setHidden:",  1,  v208);
      v211 = v391;
      if (v210 != 1)
      {
        v212 = *(id *)&v209[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView];
        if (!v212) {
          goto LABEL_88;
        }
        v217 = 1LL;
        goto LABEL_87;
      }

      sub_1000A527C();
      v213 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView;
      v214 = *(void **)&v209[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView];
      if (!v214) {
        goto LABEL_88;
      }
      v215 = v214;
      v216 = (void *)static UIColor.primaryText.getter(v215);
      [v215 setTintColor:v216];

      v212 = *(id *)&v209[v213];
      if (!v212) {
        goto LABEL_88;
      }
    }

    v217 = 0LL;
LABEL_87:
    v212 = [v212 setHidden:v217];
LABEL_88:
    v389 = (void (*)(char *, uint64_t))v183;
    if (v183)
    {
      swift_retain(v183);
      v220 = sub_1000EC984((uint64_t)_swiftEmptyArrayStorage);
      v221 = type metadata accessor for OfferStyle(0LL);
      v222 = v383;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v221 - 8) + 56LL))(v383, 1LL, 1LL, v221);
      v223 = type metadata accessor for OfferEnvironment(0LL);
      v224 = (uint64_t)v384;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v223 - 8) + 56LL))(v384, 1LL, 1LL, v223);
      v225 = type metadata accessor for OfferTint(0LL);
      v226 = (uint64_t)v385;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v225 - 8) + 56LL))(v385, 1LL, 1LL, v225);
      v227 = type metadata accessor for OfferLabelStyle(0LL);
      v228 = (uint64_t)v386;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v227 - 8) + 56LL))(v386, 1LL, 1LL, v227);
      v423 = 0u;
      v424 = 0u;
      LOBYTE(v368) = 2;
      LOBYTE(v366) = 0;
      LOBYTE(v365) = 1;
      LOBYTE(v364) = 0;
      LOBYTE(v363) = 2;
      v229 = dispatch thunk of OfferDisplayProperties.newOfferDisplayPropertiesChanging(titles:titleSymbolNames:subtitles:style:environment:tint:isDeletableSystemApp:isFree:isPreorder:offerLabelStyle:hasDiscount:contentRating:offerToken:subscriptionFamilyId:overrideLocale:useAdsLocale:priceFormatted:isStreamlinedBuy:appCapabilities:)( 0LL,  0LL,  v220,  v222,  v224,  v226,  2LL,  2LL,  v363,  v228,  v364,  0LL,  v365,  &v423,  0LL,  0LL,  0LL,  0LL,  v366,  0LL,  0LL,  v368,  0LL);
      swift_release(v183);
      swift_bridgeObjectRelease(v220);
      sub_1000077E0((uint64_t)&v423, (uint64_t *)&unk_1002E3500);
      sub_1000077E0(v228, (uint64_t *)&unk_1002EE480);
      sub_1000077E0(v226, (uint64_t *)&unk_1002EF300);
      sub_1000077E0(v224, (uint64_t *)&unk_1002EE490);
      v230 = (uint64_t)v222;
      v231 = v229;
      v212 = (id)sub_1000077E0(v230, (uint64_t *)&unk_1002EF310);
    }

    else
    {
      v231 = 0LL;
    }

    CGRect v123 = ProductTopLockup.offerAction.getter(v212);
    v232 = v398;
    v233 = v399;
    v234 = v400;
    (*(void (**)(char *, void, uint64_t))(v398 + 104))( v399,  enum case for OfferButtonPresenterViewAlignment.center(_:),  v400);
    v235 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v232 + 56);
    v236 = v401;
    v235(v401, 1LL, 1LL, v234);
    v237 = sub_100004288( (unint64_t *)&unk_1002EF320,  (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment,  (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
    v238 = (uint64_t)v402;
    AccessibilityConditional.init(value:axValue:)(v233, v236, v234, v237);
    v239 = sub_1000038E8((uint64_t *)&unk_1002EE4A0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v239 - 8) + 56LL))(v238, 0LL, 1LL, v239);
    v240 = v403;
    v241 = v404;
    v242 = v406;
    (*(void (**)(char *, void, uint64_t))(v403 + 104))( v404,  enum case for OfferButtonSubtitlePosition.below(_:),  v406);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v240 + 56))(v211, 1LL, 1LL, v242);
    v243 = sub_100004288( (unint64_t *)&unk_1002EF330,  (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition,  (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
    v244 = (uint64_t)v405;
    v245.n128_f64[0] = AccessibilityConditional.init(value:axValue:)(v241, v211, v242, v243);
    v246 = v413;
    sub_1001EE4D0(v231, v123, 0LL, v238, v244, v413, 0, v245);
    v247 = swift_release(v123);
    (*(void (**)(uint64_t, uint64_t, __n128))(v407 + 8))(v244, v408, v247);
    sub_1000077E0(v238, (uint64_t *)&unk_1002EF2F0);
    v248 = *(void *)&v209[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_objectGraph];
    *(void *)&v209[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_objectGraph] = v246;
    swift_retain(v246);
    *(void *)&v249 = swift_release(v248).n128_u64[0];
    v250 = *(char **)&v209[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView];
    v251 = v209;
    Swift::Int v98 = (unint64_t)&selRef_accessibilityRating;
    objc_msgSend(v250, "setUserInteractionEnabled:", 0, v249);
    [v250 setHidden:1];
    v252 = *(char **)&v251[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerButtonTopLabel];
    v253 = ProductTopLockup.banner.getter([v252 setHidden:1]);
    v409 = (char *)v231;
    if (v253)
    {
      v254 = v253;
      v255 = Banner.message.getter();
      v257 = v256;
      v258 = Banner.focusedMessage.getter();
      v260 = v259;
      v261 = Banner.focusedMessage.getter();
      v262 = (uint64_t *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText];
      v263 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText];
      v264 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText + 8];
      v265 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText + 16];
      v266 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText + 24];
      v267 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText + 32];
      v268 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText + 40];
      *v262 = v255;
      v262[1] = v257;
      v262[2] = v258;
      v262[3] = v260;
      v262[4] = v261;
      v262[5] = v269;
      sub_10015B4E8(v263, v264, v265, v266, v267, v268);
      v270 = sub_10015A5C4();
      v271 = Banner.leadingArtwork.getter(v270);
      v272 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_artwork];
      *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_artwork] = v271;
      swift_retain(v271);
      swift_release(v272);
      sub_10015A47C();
      v273 = swift_release(v271);
      CGRect v123 = Banner.action.getter(v273);
      sub_1000A5CA0(v123);
      objc_msgSend( v250,  "setUserInteractionEnabled:",  *(void *)&v251[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerAction] != 0,  swift_release(v123).n128_f64[0]);
LABEL_95:
      [v250 setHidden:0];
      v285 = swift_release(v254);
      goto LABEL_96;
    }

    v274 = ProductTopLockup.askToBuyLinkableText.getter();
    if (v274)
    {
      v254 = v274;
      v275 = LinkableText.plainText.getter();
      v276 = &v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText];
      v277 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText];
      v278 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText + 8];
      v279 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText + 16];
      v280 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText + 24];
      v281 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText + 32];
      v282 = *(void *)&v250[OBJC_IVAR____TtC8AppStore23ProductLockupBannerView_messageLabelText + 40];
      *(void *)v276 = v275;
      *((void *)v276 + 1) = v283;
      *((_OWORD *)v276 + 1) = 0u;
      *((_OWORD *)v276 + 2) = 0u;
      sub_10015B4E8(v277, v278, v279, v280, v281, v282);
      sub_10015A5C4();
      objc_msgSend(v250, "setUserInteractionEnabled:", 0, v284);
      goto LABEL_95;
    }

    ProductTopLockup.expandedOfferTitles.getter();
    if (v312 != 1)
    {
      Swift::Int v98 = v313;
      v315 = v314;
      v285 = swift_bridgeObjectRelease(v312);
      if (v315)
      {
        v316 = HIBYTE(v315) & 0xF;
        if ((v315 & 0x2000000000000000LL) == 0) {
          v316 = v98 & 0xFFFFFFFFFFFFLL;
        }
        if (v316 && (ProductTopLockup.hasExpandedOfferDetails.getter(v285) & 1) != 0)
        {
          [v252 setHidden:0];
          v317 = v412;
          if (qword_1002E0630 != -1) {
            swift_once(&qword_1002E0630, sub_100072AC0);
          }
          v318 = v388;
          v319 = sub_10000A634(v388, (uint64_t)qword_1002F2DE8);
          v320 = v387;
          v321 = (uint64_t)v376;
          (*(void (**)(char *, uint64_t, uint64_t))(v387 + 16))(v376, v319, v318);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v320 + 56))(v321, 0LL, 1LL, v318);
          v322 = (uint64_t)&v252[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase];
          swift_beginAccess(&v252[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_fontUseCase], v420, 0LL, 0LL);
          CGRect v123 = (uint64_t)&qword_1002E25C0;
          v323 = v375;
          sub_10000DF2C(v322, v375, &qword_1002E25C0);
          swift_beginAccess(v322, &v423, 33LL, 0LL);
          sub_1001A2294(v321, v322, &qword_1002E25C0);
          swift_endAccess(&v423);
          sub_10001252C(v323);
          sub_1000077E0(v321, &qword_1002E25C0);
          sub_1000077E0(v323, &qword_1002E25C0);
          [v252 setNumberOfLines:2];
          *((void *)&v424 + 1) = &type metadata for Double;
          v425 = &protocol witness table for Double;
          *(void *)&v423 = 0x4036000000000000LL;
          v324 = &v317[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_layoutMetrics];
          swift_beginAccess( &v317[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_layoutMetrics],  &v422,  33LL,  0LL);
          v324 += 624;
          _s8AppStore17PillOverlayLayoutVwxx_0(v324);
          sub_1000243BC(&v423, (uint64_t)v324);
          swift_endAccess(&v422);
          v325 = String._bridgeToObjectiveC()();
          objc_msgSend(v252, "setText:", v325, swift_bridgeObjectRelease(v315).n128_f64[0]);
        }

        else
        {
          v285 = swift_bridgeObjectRelease(v315);
        }
      }
    }

              __break(1u);
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }

  swift_release(v98);
  double v74 = (uint64_t)v106;
  uint64_t v75 = v92;
  if (v106[2] <= *(void *)(v92 + 16) >> 3)
  {
    uint64_t v105 = (_BYTE *)v92;
    swift_bridgeObjectRetain(v92);
    sub_1001D7B7C(v74);
    swift_bridgeObjectRelease(v74);
    uint64_t v76 = v105;
  }

  else
  {
    swift_bridgeObjectRetain(v92);
    uint64_t v76 = sub_1001D7DE0(v74, v75);
    swift_bridgeObjectRelease(v74);
  }

  unint64_t v77 = 0LL;
  __int128 v78 = v76 + 56;
  id v79 = 1LL << v76[32];
  id v80 = -1LL;
  if (v79 < 64) {
    id v80 = ~(-1LL << v79);
  }
  uint64_t v81 = v80 & *((void *)v76 + 7);
  uint64_t v82 = (unint64_t)(v79 + 63) >> 6;
  uint64_t v83 = v95;
  uint64_t v84 = v103;
  while (2)
  {
    if (v81)
    {
      uint64_t v85 = __clz(__rbit64(v81));
      v81 &= v81 - 1;
      uint64_t v86 = v85 | (v77 << 6);
LABEL_56:
      (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))( v83,  *((void *)v76 + 6) + *(void *)(v13 + 72) * v86,  v12);
      uint64_t v87 = swift_getObjectType(v84);
      AppStateController.clearWaiting(for:)(v83, v87, v104);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v83, v12);
      continue;
    }

    break;
  }

  unint64_t v88 = v77 + 1;
  if (__OFADD__(v77, 1LL)) {
    goto LABEL_74;
  }
  if (v88 >= v82)
  {
LABEL_72:
    swift_release(v76);
    return;
  }

  uint64_t v89 = *(void *)&v78[8 * v88];
  ++v77;
  if (v89) {
    goto LABEL_71;
  }
  unint64_t v77 = v88 + 1;
  if (v88 + 1 >= v82) {
    goto LABEL_72;
  }
  uint64_t v89 = *(void *)&v78[8 * v77];
  if (v89) {
    goto LABEL_71;
  }
  unint64_t v77 = v88 + 2;
  if (v88 + 2 >= v82) {
    goto LABEL_72;
  }
  uint64_t v89 = *(void *)&v78[8 * v77];
  if (v89)
  {
LABEL_71:
    uint64_t v81 = (v89 - 1) & v89;
    uint64_t v86 = __clz(__rbit64(v89)) + (v77 << 6);
    goto LABEL_56;
  }

  uint64_t v90 = v88 + 3;
  if (v90 >= v82) {
    goto LABEL_72;
  }
  uint64_t v89 = *(void *)&v78[8 * v90];
  if (v89)
  {
    unint64_t v77 = v90;
    goto LABEL_71;
  }

  while (1)
  {
    unint64_t v77 = v90 + 1;
    if (__OFADD__(v90, 1LL)) {
      break;
    }
    if (v77 >= v82) {
      goto LABEL_72;
    }
    uint64_t v89 = *(void *)&v78[8 * v77];
    ++v90;
    if (v89) {
      goto LABEL_71;
    }
  }

LABEL_57:
      __break(1u);
LABEL_58:
      swift_unknownObjectRelease(a1);
      goto LABEL_28;
    }

  __break(1u);
}

  __break(1u);
}

uint64_t sub_1000B8E44()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000B8E68()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1000B8E8C(uint64_t a1)
{
}

uint64_t sub_1000B8E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000B8EA4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000B8EAC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000B8ED8()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return ArtworkView.image.setter(v1);
}

void sub_1000B8F0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8AppStore15LockupMediaView_imageView;
  type metadata accessor for ArtworkView(0LL);
  *(void *)&v0[v2] = static ArtworkView.plainArtworkView.getter();
  *(void *)&v0[OBJC_IVAR____TtC8AppStore15LockupMediaView_handlerKeys] = &_swiftEmptySetSingleton;
  uint64_t v3 = &v0[OBJC_IVAR____TtC8AppStore15LockupMediaView_currentScreenshotIndex];
  *(void *)uint64_t v3 = 0LL;
  v3[8] = 1;
  uint64_t v4 = OBJC_IVAR____TtC8AppStore15LockupMediaView_images;
  *(void *)&v1[v4] = sub_1000EEA70(_swiftEmptyArrayStorage);
  *(void *)&v1[OBJC_IVAR____TtC8AppStore15LockupMediaView_animationTimer] = 0LL;
  v1[OBJC_IVAR____TtC8AppStore15LockupMediaView_state] = 0;
  uint64_t v5 = OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer;
  unint64_t v6 = (objc_class *)type metadata accessor for VideoViewContainer();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view], 0LL);
  *(void *)&v7[OBJC_IVAR____TtC8AppStore18VideoViewContainer_roundedCorners] = -1LL;
  swift_unknownObjectWeakAssign(v8, 0LL);
  v9.receiver = v7;
  v9.super_class = v6;
  *(void *)&v1[v5] = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v1[OBJC_IVAR____TtC8AppStore15LockupMediaView_roundedCorners] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/LockupMediaView.swift",  30LL,  2LL,  91LL,  0);
  __break(1u);
}

uint64_t sub_1000B9070(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_100003974(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }

  return result;
}

char *sub_1000B90B8(char *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_presentingViewController];
  swift_unknownObjectWeakInit( &v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_presentingViewController],  0LL);
  uint64_t v4 = &v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_presentedViewController];
  swift_unknownObjectWeakInit( &v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_presentedViewController],  0LL);
  uint64_t v5 = &v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_originalTransitioningSuperview];
  swift_unknownObjectWeakInit( &v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_originalTransitioningSuperview],  0LL);
  v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_transitionDirection] = 1;
  unint64_t v6 = &v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_originalTransitioningViewFrame];
  *(_OWORD *)unint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  _BYTE v6[32] = 1;
  uint64_t v7 = OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_activeTransitionContext;
  *(void *)&v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_activeTransitionContext] = 0LL;
  uint64_t v8 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_delegate];
  *(void *)(v8 + 8) = 0LL;
  swift_unknownObjectWeakInit(v8, 0LL);
  *(void *)&v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_animationDuration] = 0x3FD999999999999ALL;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC8AppStore18VideoViewContainer_view]);
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    swift_unknownObjectUnownedInit( &v1[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_transitioningView],  Strong);
    v22.receiver = v1;
    v22.super_class = (Class)type metadata accessor for FullScreenVideoTransitionManager();
    unint64_t v11 = (char *)objc_msgSendSuper2(&v22, "init");
    [v10 frame];
    uint64_t v12 = &v11[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_originalTransitioningViewFrame];
    *(void *)uint64_t v12 = v13;
    *((void *)v12 + 1) = v14;
    *((void *)v12 + 2) = v15;
    *((void *)v12 + 3) = v16;
    v12[32] = 0;
    id v17 = v10;
    id v18 = [v17 superview];

    swift_unknownObjectWeakAssign( &v11[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_originalTransitioningSuperview],  v18);
  }

  else
  {
    Swift::Int v19 = v1;

    swift_unknownObjectWeakDestroy(v3);
    swift_unknownObjectWeakDestroy(v4);
    swift_unknownObjectWeakDestroy(v5);
    swift_unknownObjectRelease(*(void *)&v1[v7]);
    sub_1000142AC(v8);

    uint64_t v20 = type metadata accessor for FullScreenVideoTransitionManager();
    swift_deallocPartialClassInstance(v19, v20, 120LL, 7LL);
    return 0LL;
  }

  return v11;
}

void *sub_1000B9304(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_activeTransitionContext;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_activeTransitionContext);
  *(void *)(v1 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_activeTransitionContext) = a1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v3);
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_transitioningView);
  sub_100041A94( v1 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_originalTransitioningViewFrame,  (uint64_t)v11,  &qword_1002E3798);
  uint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_presentingViewController);
  unint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_presentedViewController);
  uint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_originalTransitioningSuperview);
  uint64_t v8 = *(void *)(v1 + v2);
  swift_unknownObjectRetain(v8);
  sub_1000BA210(Strong, (uint64_t)v11, v5, v6, v7, v8, (uint64_t)v10);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_transitionDirection) == 1) {
    sub_1000BA3EC(v10);
  }
  else {
    sub_1000B964C((uint64_t)v10);
  }
  return sub_1000BA17C( v10,  (void (*)(void, void, void, void, void, void, void, void, void))sub_1000BA1C4);
}

id sub_1000B9470(char **a1, void *a2)
{
  id result = [a1[7] view];
  if (result)
  {
    uint64_t v5 = result;
    [result setAlpha:1.0];

    unint64_t v6 = *a1;
    [v6 bounds];
    objc_msgSend(v6, "setBounds:");
    [a2 center];
    objc_msgSend(v6, "setCenter:");
    uint64_t v7 = (objc_class *)type metadata accessor for VideoView(0LL);
    v12.receiver = v6;
    v12.super_class = v7;
    objc_msgSendSuper2(&v12, "_setCornerRadius:", 0.0);
    id result = [*(id *)&v6[qword_1002EBA58] view];
    if (result)
    {
      uint64_t v8 = result;
      v11.receiver = v6;
      v11.super_class = v7;
      objc_msgSendSuper2(&v11, "_cornerRadius");
      objc_msgSend(v8, "_setCornerRadius:");

      objc_super v9 = *(void **)&v6[qword_1002EBA48];
      v10.receiver = v6;
      v10.super_class = v7;
      objc_msgSendSuper2(&v10, "_cornerRadius");
      objc_msgSend(v9, "_setCornerRadius:");
      return [v6 layoutIfNeeded];
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

id sub_1000B95E8(uint64_t a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  sub_100021E18((uint64_t)v3);

  id result = [a2[8] completeTransition:1];
  *((_BYTE *)v4 + qword_1002F4838) = 0;
  return result;
}

void sub_1000B964C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100041A94(a1, (uint64_t)v91, &qword_1002E71B8);
  uint64_t v5 = (void *)v91[0];
  id v4 = (void *)v91[1];
  uint64_t v7 = (void *)v91[6];
  unint64_t v6 = (void *)v91[7];
  uint64_t v8 = v91[8];
  sub_100041A94(a1, (uint64_t)v92, &qword_1002E71B8);
  objc_super v9 = (void *)v92[0];
  if (v92[0])
  {
    CGFloat v10 = *(double *)&v92[2];
    CGFloat v11 = *(double *)&v92[3];
    CGFloat v12 = *(double *)&v92[4];
    CGFloat v13 = *(double *)&v92[5];
    uint64_t v14 = (void *)v92[7];
    uint64_t v83 = v92[6];
    uint64_t v84 = v92[1];
    uint64_t v15 = (void *)v92[8];
    id v16 = v5;
    id v17 = v4;
    id v18 = v7;
    id v19 = v6;
    swift_unknownObjectRetain(v8);
    id v20 = [v15 containerView];
    [v9 frame];
    double v22 = v21;
    double v24 = v23;
    double v26 = v25;
    double v28 = v27;
    id v29 = [v14 view];
    objc_msgSend(v20, "convertRect:fromView:", v29, v22, v24, v26, v28);
    double v31 = v30;
    double v33 = v32;

    [v9 frame];
    double v35 = v34;
    double v37 = v36;
    id v38 = [v14 view];
    if (v38)
    {
      int64_t v39 = v38;
      [v20 addSubview:v38];

      [v20 addSubview:v9];
      id v40 = [v14 view];
      if (v40)
      {
        char v41 = v40;
        [v20 bounds];
        objc_msgSend(v41, "setFrame:");

        objc_msgSend(v9, "setFrame:", v31, v33, v35, v37);
        *((_BYTE *)v9 + qword_1002F4830) = 0;
        sub_10013B448();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_delegate]);
        uint64_t v81 = v20;
        uint64_t v82 = v2;
        if (Strong)
        {
          uint64_t v43 = Strong;
          uint64_t v44 = (void *)swift_unknownObjectWeakLoadStrong(Strong + qword_1002F4808);
          swift_unknownObjectRelease(v43);
          if (v44)
          {
            id v79 = v15;
            id v45 = v44;
            id v46 = [v45 superview];
            if (v46)
            {
              uint64_t v47 = v46;
              uint64_t v48 = (void *)a1;
              [v45 frame];
              double v50 = v49;
              double v52 = v51;
              double v54 = v53;
              double v56 = v55;
              id v57 = v47;
              objc_msgSend(v20, "convertRect:fromCoordinateSpace:", v57, v50, v52, v54, v56);
              double v59 = v58;
              double v61 = v60;
              double Width = v62;
              double Height = v64;

              uint64_t v15 = v79;
LABEL_12:
              id v80 = (id)objc_opt_self(&OBJC_CLASS___UIView);
              uint64_t v68 = swift_allocObject(&unk_10028A220, 128LL, 7LL);
              *(void *)(v68 + swift_unknownObjectWeakDestroy(v0 + 16) = v44;
              *(void *)(v68 + 24) = v9;
              *(void *)(v68 + 32) = v84;
              *(CGFloat *)(v68 + 40) = v10;
              *(CGFloat *)(v68 + 48) = v11;
              *(CGFloat *)(v68 + 56) = v12;
              *(CGFloat *)(v68 + 64) = v13;
              *(void *)(v68 + 72) = v83;
              *(void *)(v68 + 80) = v14;
              *(void *)(v68 + 88) = v15;
              *(double *)(v68 + 96) = v59;
              *(double *)(v68 + 104) = v61;
              *(double *)(v68 + 112) = Width;
              *(double *)(v68 + 120) = Height;
              uint64_t v89 = sub_1000BA0A4;
              uint64_t v90 = (CGFloat *)v68;
              aBlock = _NSConcreteStackBlock;
              uint64_t v86 = 1107296256LL;
              uint64_t v87 = sub_100140110;
              unint64_t v88 = &unk_10028A238;
              uint64_t v69 = _Block_copy(&aBlock);
              uint64_t v70 = v14;
              unint64_t v71 = v90;
              double v72 = v48;
              sub_1000BA17C( v48,  (void (*)(void, void, void, void, void, void, void, void, void))sub_1000BA0D0);
              id v73 = v44;
              swift_release(v71);
              double v74 = (CGFloat *)swift_allocObject(&unk_10028A270, 104LL, 7LL);
              *((void *)v74 + 2) = v9;
              *((void *)v74 + 3) = v84;
              v74[4] = v10;
              v74[5] = v11;
              v74[6] = v12;
              v74[7] = v13;
              *((void *)v74 + 8) = v83;
              *((void *)v74 + 9) = v70;
              *((void *)v74 + 10) = v15;
              *((void *)v74 + 11) = v2;
              *((void *)v74 + 12) = v44;
              uint64_t v89 = sub_1000BA170;
              uint64_t v90 = v74;
              aBlock = _NSConcreteStackBlock;
              uint64_t v86 = 1107296256LL;
              uint64_t v87 = sub_10005E698;
              unint64_t v88 = &unk_10028A288;
              uint64_t v75 = _Block_copy(&aBlock);
              uint64_t v76 = v90;
              sub_1000BA17C( v72,  (void (*)(void, void, void, void, void, void, void, void, void))sub_1000BA0D0);
              id v77 = v73;
              id v78 = v82;
              swift_release(v76);
              [v80 animateWithDuration:4 delay:v69 options:v75 animations:0.4 completion:0.0];

              sub_1000BA17C( v72,  (void (*)(void, void, void, void, void, void, void, void, void))sub_1000BA1C4);
              _Block_release(v75);
              _Block_release(v69);
              return;
            }

            uint64_t v48 = (void *)a1;
          }

          else
          {
            uint64_t v48 = (void *)a1;
          }
        }

        else
        {
          uint64_t v48 = (void *)a1;
          uint64_t v44 = 0LL;
        }

        v93.origin.x = v10;
        v93.origin.y = v11;
        v93.size.width = v12;
        v93.size.height = v13;
        double Width = CGRectGetWidth(v93);
        v94.origin.x = v10;
        v94.origin.y = v11;
        v94.size.width = v12;
        v94.size.height = v13;
        double Height = CGRectGetHeight(v94);
        [v20 center];
        double v59 = v66 - Width * 0.5;
        double v61 = v67 - Height * 0.5;
        goto LABEL_12;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
  }

id sub_1000B9B6C(uint64_t a1, id *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  if (!a1) {
    [*a2 setAlpha:0.0];
  }
  id result = [a2[7] view];
  if (result)
  {
    CGFloat v13 = result;
    [result setAlpha:0.0];

    id v14 = *a2;
    [v14 bounds];
    objc_msgSend(v14, "setBounds:");
    v16.origin.x = a3;
    v16.origin.y = a4;
    v16.size.width = a5;
    v16.size.height = a6;
    double MidX = CGRectGetMidX(v16);
    v17.origin.x = a3;
    v17.origin.y = a4;
    v17.size.width = a5;
    v17.size.height = a6;
    objc_msgSend(v14, "setCenter:", MidX, CGRectGetMidY(v17));
    if (a1) {
      sub_1001AE660((char *)v14);
    }
    return [v14 layoutIfNeeded];
  }

  else
  {
    __break(1u);
  }

  return result;
}

id sub_1000B9C90(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = *(id *)a2;
  [*(id *)a2 setAlpha:1.0];
  swift_unknownObjectWeakAssign( a3 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_presentedViewController,  0LL);
  swift_unknownObjectWeakAssign( a3 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_presentingViewController,  0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_delegate);
  if (Strong)
  {
    uint64_t v9 = Strong;
    sub_10013CFF8();
    swift_unknownObjectRelease(v9);
  }

  CGFloat v10 = (void *)swift_unknownObjectWeakLoadStrong(*(void *)(a2 + 56) + OBJC_IVAR____TtC8AppStore29FullScreenVideoViewController_videoView);
  if (v10)
  {
    CGFloat v11 = v10;
    [v10 removeFromSuperview];
  }

  sub_100021E18(0LL);
  if (a4)
  {
    sub_1001AE998();
    id v12 = v7;
    id v13 = [v12 superview];
    if (v13)
    {
      id v14 = v13;
      sub_100016FF8();
      id v15 = a4;
      id v16 = v14;
      LOBYTE(v14) = static NSObject.== infix(_:_:)(v16, v15);

      char v17 = v14 ^ 1;
    }

    else
    {
      char v17 = 1;
    }

    char v18 = v17 & ~*((_BYTE *)v12 + qword_1002F4830);
    id v19 = v12;
    sub_1001AE348((uint64_t)v12, v18 & 1);
  }

  id v20 = *(void **)(a2 + 48);
  [v20 setNeedsFocusUpdate];
  [v20 updateFocusIfNeeded];
  return [*(id *)(a2 + 64) completeTransition:1];
}

id sub_1000B9E7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenVideoTransitionManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FullScreenVideoTransitionManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore32FullScreenVideoTransitionManager);
}

uint64_t storeEnumTagSinglePayload for FullScreenTransitionDirection( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1000B9F90 + 4 * byte_10023B685[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000B9FC4 + 4 * byte_10023B680[v4]))();
}

uint64_t sub_1000B9FC4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B9FCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1000B9FD4LL);
  }
  return result;
}

uint64_t sub_1000B9FE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1000B9FE8LL);
  }
  *(_BYTE *)id result = a2 + 1;
  return result;
}

uint64_t sub_1000B9FEC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B9FF4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FullScreenTransitionDirection()
{
  return &type metadata for FullScreenTransitionDirection;
}

unint64_t sub_1000BA014()
{
  unint64_t result = qword_1002E71B0;
  if (!qword_1002E71B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023B760, &type metadata for FullScreenTransitionDirection);
    atomic_store(result, (unint64_t *)&qword_1002E71B0);
  }

  return result;
}

uint64_t sub_1000BA058()
{
  swift_unknownObjectRelease(*(void *)(v0 + 88));
  return swift_deallocObject(v0, 128LL, 7LL);
}

id sub_1000BA0A4()
{
  return sub_1000B9B6C( *(void *)(v0 + 16),  (id *)(v0 + 24),  *(CGFloat *)(v0 + 96),  *(CGFloat *)(v0 + 104),  *(CGFloat *)(v0 + 112),  *(CGFloat *)(v0 + 120));
}

uint64_t sub_1000BA0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000BA0C8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void *sub_1000BA0D0( void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9)
{
  if (result)
  {
    id v12 = result;
    id v13 = a2;
    id v14 = a7;
    id v15 = a8;
    return (void *)swift_unknownObjectRetain(a9);
  }

  return result;
}

uint64_t sub_1000BA11C()
{
  swift_unknownObjectRelease(*(void *)(v0 + 80));
  return swift_deallocObject(v0, 104LL, 7LL);
}

id sub_1000BA170(uint64_t a1)
{
  return sub_1000B9C90(a1, v1 + 16, *(void *)(v1 + 88), *(void **)(v1 + 96));
}

void *sub_1000BA17C( void *a1, void (*a2)(void, void, void, void, void, void, void, void, void))
{
  return a1;
}

void *sub_1000BA1C4( void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9)
{
  if (result)
  {

    return (void *)swift_unknownObjectRelease(a9);
  }

  return result;
}

void sub_1000BA210( void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  if (v16 == 1)
  {

    swift_unknownObjectRelease(a6);
    a1 = 0LL;
    a5 = 0LL;
LABEL_3:
    a3 = 0LL;
LABEL_10:
    a4 = 0LL;
LABEL_11:
    a6 = 0LL;
LABEL_12:
    __int128 v13 = 0uLL;
    __int128 v14 = 0uLL;
    goto LABEL_13;
  }

  if (!a3)
  {

    swift_unknownObjectRelease(a6);
    a1 = 0LL;
    a5 = 0LL;
    goto LABEL_10;
  }

  if (!a4)
  {

    swift_unknownObjectRelease(a6);
    a1 = 0LL;
    a5 = 0LL;
    a3 = 0LL;
    goto LABEL_11;
  }

  if (!a5)
  {

    swift_unknownObjectRelease(a6);
    a1 = 0LL;
    goto LABEL_3;
  }

  if (!a6)
  {

    a1 = 0LL;
    a5 = 0LL;
    a3 = 0LL;
    a4 = 0LL;
    goto LABEL_12;
  }

  __int128 v13 = v15[0];
  __int128 v14 = v15[1];
LABEL_13:
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a5;
  *(_OWORD *)(a7 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
  *(_OWORD *)(a7 + 32) = v14;
  *(void *)(a7 + 48) = a3;
  *(void *)(a7 + 56) = a4;
  *(void *)(a7 + 64) = a6;
}

uint64_t sub_1000BA35C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FullScreenVideoViewController();
  uint64_t v6 = swift_dynamicCastClass(a1, v5);
  if (!v6) {
    return 0LL;
  }
  uint64_t v7 = v6;
  swift_unknownObjectWeakAssign( v2 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_presentingViewController,  a2);
  swift_unknownObjectWeakAssign( v2 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_presentedViewController,  v7);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8AppStore32FullScreenVideoTransitionManager_transitionDirection) = 1;
  swift_unknownObjectRetain(v2);
  return v2;
}

void sub_1000BA3EC(void *a1)
{
  uint64_t v2 = (void *)v84[0];
  int v3 = (void *)v84[1];
  uint64_t v4 = (void *)v84[6];
  uint64_t v5 = (void *)v84[7];
  uint64_t v6 = v84[8];
  uint64_t v7 = type metadata accessor for AspectRatio(0LL);
  id v77 = *(unsigned int (***)(void, void, void))(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v68 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  double v67 = (char *)&v66 - v10;
  uint64_t v11 = sub_1000038E8((uint64_t *)&unk_1002E71C0);
  __chkstk_darwin(v11);
  __int128 v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100041A94((uint64_t)a1, (uint64_t)v85, &qword_1002E71B8);
  __int128 v14 = (char *)v85[0];
  if (!v85[0]) {
    return;
  }
  uint64_t v76 = v7;
  uint64_t v75 = a1;
  __int128 v91 = v86;
  __int128 v92 = v87;
  uint64_t v15 = v85[1];
  char v16 = v89;
  uint64_t v93 = v88;
  char v17 = v90;
  id v74 = v2;
  id v73 = v3;
  id v72 = v4;
  id v71 = v5;
  uint64_t v70 = v6;
  swift_unknownObjectRetain(v6);
  char v18 = v17;
  id v19 = [v17 containerView];
  id v20 = [v16 view];
  if (!v20)
  {
    __break(1u);
    goto LABEL_15;
  }

  double v21 = v20;
  [v19 addSubview:v20];

  [v14 frame];
  uint64_t v69 = v15;
  objc_msgSend(v19, "convertRect:fromCoordinateSpace:", v15);
  double v23 = v22;
  double v25 = v24;
  [v14 frame];
  double v27 = v26;
  double v29 = v28;
  [v19 addSubview:v14];
  objc_msgSend(v14, "setFrame:", v23, v25, v27, v29);
  id v30 = [v16 view];
  if (!v30)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  double v31 = v30;
  [v30 setAlpha:0.0];

  id v32 = [v16 view];
  uint64_t v33 = v76;
  if (!v32)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  double v34 = v32;
  [v19 bounds];
  objc_msgSend(v34, "setFrame:");

  id v35 = [v16 view];
  if (!v35)
  {
LABEL_17:
    __break(1u);
    return;
  }

  double v36 = v35;
  [v35 layoutIfNeeded];

  v14[qword_1002F4830] = 1;
  sub_10013B448();
  v14[qword_1002F4838] = 1;
  id v37 = [(id)objc_opt_self(UIScreen) mainScreen];
  [v37 bounds];
  double v39 = v38;
  double v41 = v40;

  swift_beginAccess(&v14[qword_1002F4848], &aBlock, 32LL, 0LL);
  VideoConfiguration.aspectRatio.getter(v42);
  uint64_t v43 = v77;
  if (((unsigned int (**)(char *, uint64_t, uint64_t))v77)[6](v13, 1LL, v33))
  {
    sub_100034770((uint64_t)v13);
    swift_endAccess(&aBlock);
    uint64_t v44 = v70;
  }

  else
  {
    id v45 = v67;
    ((unsigned int (**)(char *, char *, uint64_t))v43)[2](v67, v13, v33);
    sub_100034770((uint64_t)v13);
    swift_endAccess(&aBlock);
    id v46 = v68;
    __n128 v48 = AspectRatio.init(_:_:)(v47, v39);
    v49.n128_f64[0] = AspectRatio.horizontalFraction.getter(v48);
    if (AspectRatio.horizontalFraction.getter(v49) >= v49.n128_f64[0]) {
      double v41 = AspectRatio.height(fromWidth:)(v39);
    }
    else {
      double v39 = AspectRatio.width(fromHeight:)(v41);
    }
    uint64_t v44 = v70;
    double v50 = (void (*)(char *, uint64_t))v43[1];
    v50(v46, v33);
    v50(v45, v33);
  }

  uint64_t v51 = v69;
  id v77 = (unsigned int (**)(void, void, void))objc_opt_self(&OBJC_CLASS___UIView);
  uint64_t v52 = swift_allocObject(&unk_10028A2C0, 112LL, 7LL);
  *(void *)(v52 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
  *(void *)(v52 + 24) = v51;
  __int128 v53 = v92;
  *(_OWORD *)(v52 + 32) = v91;
  *(_OWORD *)(v52 + 48) = v53;
  *(void *)(v52 + 64) = v93;
  *(void *)(v52 + 72) = v16;
  *(void *)(v52 + 80) = v18;
  *(double *)(v52 + 88) = v39;
  *(double *)(v52 + 96) = v41;
  *(void *)(v52 + 104) = v19;
  uint64_t v82 = sub_1000BAADC;
  uint64_t v83 = v52;
  aBlock = _NSConcreteStackBlock;
  uint64_t v79 = 1107296256LL;
  id v80 = sub_100140110;
  uint64_t v81 = &unk_10028A2D8;
  double v54 = _Block_copy(&aBlock);
  uint64_t v55 = v83;
  double v56 = v75;
  sub_1000BA17C( v75,  (void (*)(void, void, void, void, void, void, void, void, void))sub_1000BA0D0);
  id v57 = v19;
  swift_release(v55);
  uint64_t v58 = swift_allocObject(&unk_10028A310, 88LL, 7LL);
  *(void *)(v58 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
  *(void *)(v58 + 24) = v51;
  __int128 v59 = v92;
  *(_OWORD *)(v58 + 32) = v91;
  *(_OWORD *)(v58 + 48) = v59;
  *(void *)(v58 + 64) = v93;
  *(void *)(v58 + 72) = v16;
  *(void *)(v58 + 80) = v18;
  uint64_t v82 = sub_1000BAB30;
  uint64_t v83 = v58;
  aBlock = _NSConcreteStackBlock;
  uint64_t v79 = 1107296256LL;
  id v80 = sub_10005E698;
  uint64_t v81 = &unk_10028A328;
  double v60 = _Block_copy(&aBlock);
  uint64_t v61 = v83;
  id v62 = v74;
  id v63 = v73;
  id v64 = v72;
  id v65 = v71;
  swift_unknownObjectRetain(v44);
  swift_release(v61);
  [v77 animateWithDuration:4 delay:v54 options:v60 animations:0.4 completion:0.0];

  sub_1000BA17C( v56,  (void (*)(void, void, void, void, void, void, void, void, void))sub_1000BA1C4);
  _Block_release(v60);
  _Block_release(v54);
}

uint64_t sub_1000BAA90()
{
  swift_unknownObjectRelease(*(void *)(v0 + 80));
  return swift_deallocObject(v0, 112LL, 7LL);
}

id sub_1000BAADC()
{
  return sub_1000B9470((char **)(v0 + 16), *(void **)(v0 + 104));
}

uint64_t sub_1000BAAEC()
{
  swift_unknownObjectRelease(*(void *)(v0 + 80));
  return swift_deallocObject(v0, 88LL, 7LL);
}

id sub_1000BAB30(uint64_t a1)
{
  return sub_1000B95E8(a1, (id *)(v1 + 16));
}

uint64_t destroy for FullScreenVideoTransitionContext(uint64_t a1)
{
  return swift_unknownObjectRelease(*(void *)(a1 + 64));
}

uint64_t initializeWithCopy for FullScreenVideoTransitionContext(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  __int128 v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void **)(a2 + 48);
  uint64_t v7 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 64) = v8;
  id v9 = v3;
  id v10 = v4;
  id v11 = v6;
  id v12 = v7;
  swift_unknownObjectRetain(v8);
  return a1;
}

uint64_t assignWithCopy for FullScreenVideoTransitionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  __int128 v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v10 = *(void **)(a2 + 48);
  id v11 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v10;
  id v12 = v10;

  __int128 v13 = *(void **)(a2 + 56);
  __int128 v14 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v13;
  id v15 = v13;

  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v17 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = v16;
  swift_unknownObjectRetain(v16);
  swift_unknownObjectRelease(v17);
  return a1;
}

uint64_t assignWithTake for FullScreenVideoTransitionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  __int128 v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;

  id v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_unknownObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for FullScreenVideoTransitionContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FullScreenVideoTransitionContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 72) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for FullScreenVideoTransitionContext()
{
  return &type metadata for FullScreenVideoTransitionContext;
}

id sub_1000BADC0(uint64_t a1, uint64_t a2)
{
  __int128 v5 = (char *)v2 + qword_1002E71D8;
  uint64_t v6 = sub_1000038E8((uint64_t *)&unk_1002E7220);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v5, 1LL, 1LL, v6);
  *(void *)((char *)v2 + qword_1002E71D0) = a1;
  *(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x60LL)) = _swiftEmptyArrayStorage;
  *(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x68LL)) = a2;
  swift_retain(a1);
  swift_retain(a2);
  v10.receiver = v2;
  v10.super_class = (Class)sub_1000038E8(&qword_1002E7338);
  id v7 = objc_msgSendSuper2(&v10, "initWithStyle:", 0);
  NSString v8 = String._bridgeToObjectiveC()();
  [v7 setTitle:v8];

  sub_1000BAF08();
  swift_release(a1);
  swift_release(a2);
  return v7;
}

void sub_1000BAF08()
{
  uint64_t v1 = v0;
  uint64_t v35 = sub_1000038E8(&qword_1002E7330);
  uint64_t v2 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v4 = (_OWORD *)((char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __n128 v6 = __chkstk_darwin(v5);
  NSString v8 = (_OWORD *)((char *)&v33 - v7);
  uint64_t v9 = InMemoryMetricsEventRecorder.eventsSnapshot.getter(v6);
  uint64_t v10 = v9;
  int64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    double v34 = v0;
    double v36 = _swiftEmptyArrayStorage;
    sub_1000251D8(0LL, v11, 0);
    uint64_t v12 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v33 = v10;
    uint64_t v13 = v10 + ((v12 + 32) & ~v12);
    uint64_t v14 = *(void *)(v2 + 72);
    do
    {
      sub_10000DF2C(v13, (uint64_t)v8, &qword_1002E7330);
      uint64_t v15 = *(int *)(v35 + 48);
      uint64_t v16 = (char *)v4 + v15;
      uint64_t v17 = (char *)v8 + v15;
      *uint64_t v4 = *v8;
      uint64_t v18 = type metadata accessor for LintedMetricsEvent(0LL);
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      uint64_t v21 = LintedMetricsEvent.fields.getter(v20);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
      sub_1000077E0((uint64_t)v8, &qword_1002E7330);
      double v22 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native(v36, v23) & 1) == 0)
      {
        sub_1000251D8(0LL, v22[2] + 1LL, 1);
        double v22 = v36;
      }

      unint64_t v25 = v22[2];
      unint64_t v24 = v22[3];
      if (v25 >= v24 >> 1)
      {
        sub_1000251D8((void *)(v24 > 1), v25 + 1, 1);
        double v22 = v36;
      }

      v22[2] = v25 + 1;
      v22[v25 + 4] = v21;
      v13 += v14;
      --v11;
    }

    while (v11);
    swift_bridgeObjectRelease(v33);
    uint64_t v1 = v34;
  }

  else
  {
    swift_bridgeObjectRelease(v9);
    double v22 = _swiftEmptyArrayStorage;
  }

  sub_10002441C(v22);
  uint64_t v26 = *(void *)((swift_isaMask & *v1) + 0x60LL);
  uint64_t v27 = *(void *)((char *)v1 + v26);
  *(void *)((char *)v1 + v26) = v28;
  if (objc_msgSend(v1, "isViewLoaded", swift_bridgeObjectRelease(v27).n128_f64[0]))
  {
    id v29 = [v1 tableView];
    if (!v29) {
      goto LABEL_16;
    }
    id v30 = v29;
    [v29 reloadData];
  }

  id v31 = objc_msgSend(v1, "tableView", v33);
  if (v31)
  {
    id v32 = v31;
    [v31 reloadData];

    return;
  }

  __break(1u);
LABEL_16:
  __break(1u);
}

id sub_1000BB1B0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1);
  return objc_msgSendSuper2(&v5, "viewWillAppear:", a3);
}

double sub_1000BB1F4(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  uint64_t v5 = sub_1000038E8(&qword_1002E7318);
  *(void *)&double v6 = __chkstk_darwin(v5).n128_u64[0];
  NSString v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v18.receiver = v2;
  v18.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v18, "viewDidAppear:", a1 & 1, v6);
  uint64_t v10 = InMemoryMetricsEventRecorder.onEventRecorded.getter(v9);
  uint64_t v11 = sub_1000038E8(&qword_1002E7320);
  unint64_t v12 = sub_1000BB8DC();
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v17, v11, v12);
  EventEmitter.addObserver<A>(on:target:method:)(v17, v2, sub_1000BB4D0, 0LL, v11, ObjectType, v12);
  swift_release(v10);
  _s8AppStore17PillOverlayLayoutVwxx_0(v17);
  uint64_t v13 = sub_1000038E8((uint64_t *)&unk_1002E7220);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v8, 0LL, 1LL, v13);
  uint64_t v14 = (uint64_t)v2 + qword_1002E71D8;
  swift_beginAccess(v14, v17, 33LL, 0LL);
  sub_1000BB928((uint64_t)v8, v14);
  *(void *)&double result = swift_endAccess(v17).n128_u64[0];
  return result;
}

uint64_t sub_1000BB35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[1] = a4;
  uint64_t v7 = sub_1000038E8(&qword_1002E7330);
  __chkstk_darwin(v7);
  id v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  unint64_t v12 = (void *)((char *)v22 - v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v22 - v14);
  uint64_t v17 = (char *)v22 + *(int *)(v16 + 48) - v14;
  void *v15 = a1;
  v15[1] = a2;
  uint64_t v18 = type metadata accessor for LintedMetricsEvent(0LL);
  v22[0] = *(void *)(v18 - 8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v22[0] + 16LL);
  v19(v17, a3, v18);
  uint64_t v20 = (char *)v12 + *(int *)(v7 + 48);
  *unint64_t v12 = a1;
  v12[1] = a2;
  v19(v20, (uint64_t)v17, v18);
  *(void *)id v9 = a1;
  *((void *)v9 + 1) = a2;
  v19(&v9[*(int *)(v7 + 48)], (uint64_t)v20, v18);
  swift_bridgeObjectRetain_n(a2, 2LL);
  sub_1000BAF08();
  sub_1000077E0((uint64_t)v9, &qword_1002E7330);
  sub_1000077E0((uint64_t)v15, &qword_1002E7330);
  return (*(uint64_t (**)(char *, uint64_t))(v22[0] + 8LL))(v20, v18);
}

uint64_t (*sub_1000BB4D0(void *a1))(char *a1)
{
  uint64_t v2 = swift_allocObject(&unk_10028A428, 24LL, 7LL);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  uint64_t v3 = swift_allocObject(&unk_10028A450, 32LL, 7LL);
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1000BB994;
  *(void *)(v3 + 24) = v2;
  id v4 = a1;
  return sub_1000BB9C0;
}

void sub_1000BB548(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1000BB1F4(a3);
}

uint64_t sub_1000BB588(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v1);
  uint64_t v4 = sub_1000038E8(&qword_1002E7318);
  __chkstk_darwin(v4);
  double v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = sub_1000038E8((uint64_t *)&unk_1002E7220);
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  v19.receiver = v1;
  v19.super_class = ObjectType;
  objc_msgSendSuper2(&v19, "viewDidDisappear:", a1 & 1, v9);
  uint64_t v12 = (uint64_t)&v1[qword_1002E71D8];
  swift_beginAccess(&v1[qword_1002E71D8], v18, 0LL, 0LL);
  sub_10000DF2C(v12, (uint64_t)v6, &qword_1002E7318);
  uint64_t v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  uint64_t v15 = InMemoryMetricsEventRecorder.onEventRecorded.getter(v14);
  AsyncEvent.removeObserver(_:)(v11);
  __n128 v16 = swift_release(v15);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v16);
}

void sub_1000BB708(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1000BB588(a3);
}

uint64_t sub_1000BB748()
{
  return sub_1000077E0(v0 + qword_1002E71D8, &qword_1002E7318);
}

uint64_t sub_1000BB780(uint64_t a1)
{
  return sub_1000077E0(a1 + qword_1002E71D8, &qword_1002E7318);
}

uint64_t type metadata accessor for DebugEventListViewController(uint64_t a1)
{
  uint64_t result = qword_1002E7208;
  if (!qword_1002E7208) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DebugEventListViewController);
  }
  return result;
}

void sub_1000BB800(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1000BB87C(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    swift_initClassMetadata2(a1, 256LL, 2LL, v4, a1 + 168);
  }

void sub_1000BB87C(uint64_t a1)
{
  if (!qword_1002E7218)
  {
    uint64_t v2 = sub_100003974((uint64_t *)&unk_1002E7220);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1002E7218);
    }
  }

uint64_t sub_1000BB8D4()
{
  return type metadata accessor for DebugEventListViewController(0LL);
}

unint64_t sub_1000BB8DC()
{
  unint64_t result = qword_1002E7328;
  if (!qword_1002E7328)
  {
    uint64_t v1 = sub_100003974(&qword_1002E7320);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AsyncEvent<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002E7328);
  }

  return result;
}

uint64_t sub_1000BB928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E7318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000BB970()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000BB994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000BB35C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1000BB99C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000BB9C0(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *((void *)a1 + 1);
  uint64_t v6 = sub_1000038E8(&qword_1002E7330);
  return v3(v4, v5, &a1[*(int *)(v6 + 48)]);
}

id sub_1000BBA18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CornerStyle(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_textLabel];
  Action.title.getter(v7);
  if (v8)
  {
    uint64_t v10 = v8;
    NSString v11 = String._bridgeToObjectiveC()();
    *(void *)&double v9 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }

  else
  {
    NSString v11 = 0LL;
  }

  objc_msgSend(v6, "setText:", v11, v9);

  sub_1000A834C(1);
  objc_msgSend( v1,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);
  uint64_t v12 = OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_configuration;
  int v13 = v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_configuration];
  v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_configuration] = 2;
  if (v13 != 2)
  {
    int v14 = v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_hasCenteredText];
    v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_hasCenteredText] = 1;
    if (v14 != 1) {
      [v6 setTextAlignment:1];
    }
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for CornerStyle.continuous(_:), v2);
    if (v1[v12] == 1) {
      double v15 = 16.0;
    }
    else {
      double v15 = 12.0;
    }
    id v16 = [v1 contentView];
    CornerStyle.apply(withRadius:to:)(v16, v15);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

  v1[OBJC_IVAR____TtC8AppStore24ActionCollectionViewCell_isShowingSeeAll] = 1;
  return [v1 setNeedsLayout];
}

double sub_1000BBBEC(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v108 = a4;
  LODWORD(v109) = a3;
  uint64_t v106 = a2;
  uint64_t v5 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v99 = *(void *)(v5 - 8);
  uint64_t v100 = v5;
  __chkstk_darwin(v5);
  Swift::Int v98 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000038E8(&qword_1002EE510);
  __chkstk_darwin(v7);
  uint64_t v102 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v105 = (uint64_t)&v94 - v10;
  __chkstk_darwin(v11);
  int v13 = (char *)&v94 - v12;
  __chkstk_darwin(v14);
  id v16 = (char *)&v94 - v15;
  uint64_t v17 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v18 = *(void **)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v95 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v101 = (char *)&v94 - v21;
  __chkstk_darwin(v22);
  uint64_t v97 = (char *)&v94 - v23;
  __chkstk_darwin(v24);
  uint64_t v104 = (char *)&v94 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v94 - v27;
  __chkstk_darwin(v29);
  id v31 = (char *)&v94 - v30;
  uint64_t v32 = type metadata accessor for GenericPagePresenter(0LL);
  uint64_t v33 = sub_100004288( &qword_1002EE560,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  __int128 v110 = v31;
  uint64_t v34 = a1;
  dispatch thunk of ShelfPresenter.contentType(for:)(a1, v32, v33);
  objc_super v107 = v16;
  uint64_t v96 = v13;
  if ((v109 & 1) != 0)
  {
    uint64_t v103 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v18[7];
    v103(v16, 1LL, 1LL, v17);
    LODWORD(v106) = 0;
  }

  else
  {
    uint64_t v35 = v106;
    dispatch thunk of ShelfPresenter.contentType(for:)(v106, v32, v33);
    uint64_t v103 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v18[7];
    v103(v13, 0LL, 1LL, v17);
    sub_1000BD520((uint64_t)v13, (uint64_t)v16);
    dispatch thunk of ShelfPresenter.title(for:)(v35, v32, v33);
    LODWORD(v106) = v36 != 0;
    swift_bridgeObjectRelease(v36);
  }

  uint64_t v37 = v17;
  uint64_t v38 = v34;
  char v39 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v34, v32, v33);
  double v40 = (void (*)(char *, char *, uint64_t))v18[2];
  v40(v28, v110, v37);
  __int128 v109 = v18;
  double v41 = (uint64_t (*)(char *, uint64_t))v18[11];
  int v42 = v41(v28, v37);
  if (v42 != enum case for Shelf.ContentType.smallLockup(_:) && v42 != enum case for Shelf.ContentType.mediumLockup(_:))
  {
    if (v42 == enum case for Shelf.ContentType.largeLockup(_:)) {
      goto LABEL_33;
    }
    if (v42 != enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
      && v42 != enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
      && v42 != enum case for Shelf.ContentType.action(_:)
      && v42 != enum case for Shelf.ContentType.editorialCard(_:)
      && v42 != enum case for Shelf.ContentType.videoCard(_:))
    {
      if (v42 == enum case for Shelf.ContentType.brick(_:) || v42 == enum case for Shelf.ContentType.categoryBrick(_:)) {
        goto LABEL_33;
      }
      if (v42 != enum case for Shelf.ContentType.reviews(_:)
        && v42 != enum case for Shelf.ContentType.appTrailerLockup(_:)
        && v42 != enum case for Shelf.ContentType.framedVideo(_:)
        && v42 != enum case for Shelf.ContentType.screenshotsLockup(_:)
        && v42 != enum case for Shelf.ContentType.smallStoryCard(_:)
        && v42 != enum case for Shelf.ContentType.mediumStoryCard(_:))
      {
        if (v42 == enum case for Shelf.ContentType.largeStoryCard(_:)) {
          goto LABEL_33;
        }
        if (v42 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
          && v42 != enum case for Shelf.ContentType.upsellBreakout(_:)
          && v42 != enum case for Shelf.ContentType.smallBreakout(_:)
          && v42 != enum case for Shelf.ContentType.mixedMediaLockup(_:)
          && v42 != enum case for Shelf.ContentType.arcadeFooter(_:)
          && v42 != enum case for Shelf.ContentType.textCard(_:)
          && v42 != enum case for Shelf.ContentType.smallGameCenterPlayer(_:)
          && v42 != enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
          && v42 != enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:)
          && v42 != enum case for Shelf.ContentType.posterLockup(_:))
        {
          ((void (*)(char *, uint64_t))v109[1])(v28, v37);
LABEL_39:
          double v67 = v97;
          v40(v97, v110, v37);
          int v68 = v41(v67, v37);
          CGRect v94 = (void (*)(char *, uint64_t, uint64_t))v40;
          if (v68 == enum case for Shelf.ContentType.informationContainer(_:))
          {
            type metadata accessor for InformationContainerCollectionViewCell();
            uint64_t v69 = &off_10028E928;
            uint64_t v45 = (uint64_t)v107;
            uint64_t v70 = (uint64_t)v96;
          }

          else
          {
            uint64_t v70 = (uint64_t)v96;
            if (v68 != enum case for Shelf.ContentType.reviewsContainer(_:))
            {
              uint64_t v81 = (void (*)(char *, uint64_t))v109[1];
              v81(v67, v37);
              uint64_t v82 = sub_1001847BC();
              uint64_t v45 = (uint64_t)v107;
              __int128 v53 = v108;
              if (v82)
              {
                uint64_t v84 = v82;
                uint64_t v85 = v83;
                sub_1000B1410((uint64_t)v107, v70);
                *(double *)&uint64_t v86 = COERCE_DOUBLE( (*(uint64_t (**)(uint64_t, void, void *, uint64_t, uint64_t))(v85 + 48))( v70,  v106,  v53,  v84,  v85));
                LOBYTE(v84) = v87;
                sub_1000BD4E0(v70);
                if ((v84 & 1) == 0) {
                  goto LABEL_60;
                }
              }

              if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v109[6])(v45, 1LL, v37))
              {
                uint64_t v88 = v95;
                v94(v95, v45, v37);
                uint64_t v89 = sub_1001847BC();
                uint64_t v91 = v90;
                v81(v88, v37);
                if (v89)
                {
                  v94((char *)v70, (uint64_t)v110, v37);
                  v103((char *)v70, 0LL, 1LL, v37);
                  *(double *)&uint64_t v86 = COERCE_DOUBLE( (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v91 + 56))( v70,  v53,  v89,  v91));
                  char v93 = v92;
                  sub_1000BD4E0(v70);
                  if ((v93 & 1) == 0)
                  {
LABEL_60:
                    double v57 = *(double *)&v86;
                    v81(v110, v37);
                    goto LABEL_52;
                  }
                }
              }

              goto LABEL_43;
            }

            type metadata accessor for ReviewsContainerCell();
            uint64_t v69 = &off_1002942F0;
            uint64_t v45 = (uint64_t)v107;
          }

          uint64_t v44 = dispatch thunk of ShelfPresenter.shelf(for:)(v38, v32, v33);
          sub_1000B1410(v45, v70);
          __int128 v53 = v108;
          *(double *)&uint64_t v74 = COERCE_DOUBLE(((uint64_t (__cdecl *)())v69[1])());
          char v76 = v75;
          sub_1000BD4E0(v70);
          if ((v76 & 1) == 0)
          {
            double v57 = *(double *)&v74;
            ((void (*)(char *, uint64_t))v109[1])(v110, v37);
            goto LABEL_51;
          }

          v94((char *)v70, (uint64_t)v110, v37);
          v103((char *)v70, 0LL, 1LL, v37);
          *(double *)&uint64_t v78 = COERCE_DOUBLE(((uint64_t (__cdecl *)())v69[2])());
          char v80 = v79;
          swift_release(v44);
          sub_1000BD4E0(v70);
          if ((v80 & 1) == 0)
          {
            double v57 = *(double *)&v78;
LABEL_46:
            ((void (*)(char *, uint64_t))v109[1])(v110, v37);
            goto LABEL_52;
          }

uint64_t sub_1000BC5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v4 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v35 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v36 = (char *)&v33 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v34 = v2;
  uint64_t v37 = a1;
  dispatch thunk of BaseShelfPresenter.contentType(for:)(a1);
  uint64_t v15 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  v15(v11, enum case for Shelf.ContentType.privacyCategory(_:), v4);
  uint64_t v16 = sub_100004288( (unint64_t *)&unk_1002E6E50,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType,  (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v41, v4, v16);
  dispatch thunk of RawRepresentable.rawValue.getter(&v39, v4, v16);
  uint64_t v17 = v42;
  uint64_t v18 = v40;
  if (v41 == v39 && v42 == v40)
  {
    char v19 = 1;
    uint64_t v18 = v42;
  }

  else
  {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, v39, v40, 0LL);
  }

  swift_bridgeObjectRelease(v17);
  __n128 v20 = swift_bridgeObjectRelease(v18);
  uint64_t v21 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
  v21(v11, v4, v20);
  ((void (*)(char *, uint64_t))v21)(v14, v4);
  if ((v19 & 1) != 0)
  {
    if (qword_1002E0F30 != -1) {
      swift_once(&qword_1002E0F30, sub_10017124C);
    }
    uint64_t v22 = type metadata accessor for TitleHeaderView.Style(0LL);
    uint64_t v23 = qword_1002F51C8;
LABEL_16:
    uint64_t v31 = sub_10000A634(v22, (uint64_t)v23);
    return sub_10000A64C(v31, v38);
  }

  uint64_t v25 = v36;
  uint64_t v24 = v37;
  dispatch thunk of BaseShelfPresenter.contentType(for:)(v37);
  uint64_t v26 = v35;
  v15(v35, enum case for Shelf.ContentType.paragraph(_:), v4);
  dispatch thunk of RawRepresentable.rawValue.getter(&v41, v4, v16);
  dispatch thunk of RawRepresentable.rawValue.getter(&v39, v4, v16);
  uint64_t v27 = v42;
  uint64_t v28 = v40;
  if (v41 == v39 && v42 == v40)
  {
    swift_bridgeObjectRelease_n(v42, 2LL);
    ((void (*)(char *, uint64_t))v21)(v26, v4);
    ((void (*)(char *, uint64_t))v21)(v25, v4);
LABEL_13:
    if (qword_1002E0F38 != -1) {
      swift_once(&qword_1002E0F38, sub_100171270);
    }
    uint64_t v22 = type metadata accessor for TitleHeaderView.Style(0LL);
    uint64_t v23 = qword_1002F51E0;
    goto LABEL_16;
  }

  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, v39, v40, 0LL);
  swift_bridgeObjectRelease(v27);
  __n128 v30 = swift_bridgeObjectRelease(v28);
  v21(v26, v4, v30);
  ((void (*)(char *, uint64_t))v21)(v25, v4);
  if ((v29 & 1) != 0) {
    goto LABEL_13;
  }
  return sub_1001860E4(v24, v38);
}

double sub_1000BC920(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  int v23 = a3;
  uint64_t v7 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - v12;
  dispatch thunk of BaseShelfPresenter.contentType(for:)(a1);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Shelf.ContentType.paragraph(_:), v7);
  uint64_t v14 = sub_100004288( (unint64_t *)&unk_1002E6E50,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType,  (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v26, v7, v14);
  dispatch thunk of RawRepresentable.rawValue.getter(&v24, v7, v14);
  uint64_t v15 = v27;
  uint64_t v16 = v25;
  if (v26 == v24 && v27 == v25)
  {
    swift_bridgeObjectRelease_n(v27, 2LL);
    uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17(v10, v7);
    v17(v13, v7);
    return 0.0;
  }

  else
  {
    uint64_t v22 = a4;
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v24, v25, 0LL);
    swift_bridgeObjectRelease(v15);
    __n128 v20 = swift_bridgeObjectRelease(v16);
    uint64_t v21 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    v21(v10, v7, v20);
    ((void (*)(char *, uint64_t))v21)(v13, v7);
    double result = 0.0;
    if ((v19 & 1) == 0) {
      return sub_1000BBBEC(a1, a2, v23 & 1, v22);
    }
  }

  return result;
}

uint64_t sub_1000BCAF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for IndexPath(0LL);
  uint64_t v96 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v95 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v84 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v51 - v9;
  __chkstk_darwin(v11);
  uint64_t v86 = (char *)&v51 - v12;
  __chkstk_darwin(v13);
  uint64_t v88 = (char *)&v51 - v14;
  __chkstk_darwin(v15);
  CGRect v94 = (char *)&v51 - v16;
  __chkstk_darwin(v17);
  char v93 = (char *)&v51 - v18;
  uint64_t v19 = type metadata accessor for GenericPagePresenter(0LL);
  uint64_t v90 = sub_100004288( &qword_1002EE560,  (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter,  (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  uint64_t v91 = v19;
  uint64_t result = dispatch thunk of ShelfPresenter.sectionCount.getter(v19, v90);
  uint64_t v21 = result;
  if (*(_BYTE *)(v1 + 89) == 1 && result >= 1)
  {
    uint64_t v21 = result + 1;
    if (__OFADD__(result, 1LL)) {
      goto LABEL_72;
    }
  }

  if (v21 < 0) {
    goto LABEL_71;
  }
  if (!v21)
  {
    uint64_t v50 = 1LL;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(a1, v50, 1LL, v3);
  }

  char v87 = v10;
  uint64_t v81 = a1;
  uint64_t v22 = 0LL;
  unsigned int v89 = enum case for Shelf.ContentType.privacyType(_:);
  int v83 = enum case for Shelf.ContentType.informationContainer(_:);
  int v78 = enum case for Shelf.ContentType.reviewsContainer(_:);
  int v79 = enum case for Shelf.ContentType.smallLockup(_:);
  int v77 = enum case for Shelf.ContentType.mediumLockup(_:);
  int v76 = enum case for Shelf.ContentType.largeLockup(_:);
  int v75 = enum case for Shelf.ContentType.inAppPurchaseLockup(_:);
  int v74 = enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:);
  int v73 = enum case for Shelf.ContentType.action(_:);
  int v72 = enum case for Shelf.ContentType.editorialCard(_:);
  int v71 = enum case for Shelf.ContentType.videoCard(_:);
  int v70 = enum case for Shelf.ContentType.brick(_:);
  int v69 = enum case for Shelf.ContentType.categoryBrick(_:);
  int v68 = enum case for Shelf.ContentType.reviews(_:);
  int v67 = enum case for Shelf.ContentType.appTrailerLockup(_:);
  int v66 = enum case for Shelf.ContentType.framedVideo(_:);
  int v65 = enum case for Shelf.ContentType.screenshotsLockup(_:);
  int v64 = enum case for Shelf.ContentType.smallStoryCard(_:);
  int v63 = enum case for Shelf.ContentType.mediumStoryCard(_:);
  int v62 = enum case for Shelf.ContentType.largeStoryCard(_:);
  int v61 = enum case for Shelf.ContentType.largeHeroBreakout(_:);
  int v60 = enum case for Shelf.ContentType.upsellBreakout(_:);
  int v59 = enum case for Shelf.ContentType.smallBreakout(_:);
  int v58 = enum case for Shelf.ContentType.mixedMediaLockup(_:);
  int v57 = enum case for Shelf.ContentType.arcadeFooter(_:);
  int v56 = enum case for Shelf.ContentType.textCard(_:);
  int v55 = enum case for Shelf.ContentType.smallGameCenterPlayer(_:);
  int v54 = enum case for Shelf.ContentType.largeGameCenterPlayer(_:);
  int v53 = enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:);
  int v52 = enum case for Shelf.ContentType.posterLockup(_:);
  uint64_t v92 = v3;
  uint64_t v82 = v21;
  while (v22 != v21)
  {
    uint64_t result = dispatch thunk of BaseShelfPresenter.doesShelfExist(for:)(v22);
    if ((result & 1) == 0) {
      goto LABEL_7;
    }
    dispatch thunk of BaseShelfPresenter.contentType(for:)(v22);
    (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, v89, v6);
    uint64_t v23 = sub_100004288( (unint64_t *)&unk_1002E6E50,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType,  (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v97, v6, v23);
    dispatch thunk of RawRepresentable.rawValue.getter(&v99, v6, v23);
    uint64_t v24 = v98;
    uint64_t v25 = v100;
    if (v97 == v99 && v98 == v100)
    {
      char v26 = 1;
      uint64_t v25 = v98;
    }

    else
    {
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v97, v98, v99, v100, 0LL);
    }

    swift_bridgeObjectRelease(v24);
    __n128 v27 = swift_bridgeObjectRelease(v25);
    uint64_t v28 = *(void (**)(char *, uint64_t, __n128))(v95 + 8);
    v28(v94, v6, v27);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v93, v6);
    if ((v26 & 1) == 0) {
      goto LABEL_7;
    }
    uint64_t result = dispatch thunk of ShelfPresenter.sectionCount.getter(v91, v90);
    if (v22 >= result) {
      goto LABEL_7;
    }
    uint64_t result = dispatch thunk of ShelfPresenter.isShelfHidden(for:)(v22, v91, v90);
    if ((result & 1) != 0) {
      goto LABEL_7;
    }
    uint64_t v29 = v90;
    uint64_t v30 = v91;
    uint64_t v31 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v22, v91, v90);
    uint64_t v32 = v88;
    dispatch thunk of ShelfPresenter.contentType(for:)(v22, v30, v29);
    uint64_t v33 = v95;
    uint64_t v34 = v86;
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
    v85(v86, v32, v6);
    uint64_t v35 = *(uint64_t (**)(char *, uint64_t))(v33 + 88);
    int v36 = v35(v34, v6);
    char v80 = v35;
    if (v36 == v83)
    {
      uint64_t v37 = type metadata accessor for InformationContainerCollectionViewCell();
      uint64_t v21 = v82;
    }

    else
    {
      uint64_t v21 = v82;
      if (v36 != v78)
      {
        ((void (*)(char *, uint64_t))v28)(v86, v6);
        uint64_t v38 = v87;
        uint64_t v39 = v85;
        v85(v87, v88, v6);
        goto LABEL_23;
      }

      uint64_t v37 = type metadata accessor for ReviewsContainerCell();
    }

    uint64_t v38 = v87;
    uint64_t v39 = v85;
    v85(v87, v88, v6);
    if (v37) {
      goto LABEL_26;
    }
LABEL_23:
    LODWORD(v85) = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v22, v91, v90);
    uint64_t v40 = v84;
    v39(v84, v38, v6);
    int v41 = v80(v40, v6);
    if (v41 == v79 || v41 == v77) {
      goto LABEL_52;
    }
    if (v41 == v76)
    {
LABEL_26:
      char v42 = 1;
      goto LABEL_53;
    }

    if (v41 == v75 || v41 == v74 || v41 == v73 || v41 == v72 || v41 == v71) {
      goto LABEL_52;
    }
    char v42 = 1;
    if (v41 == v70 || v41 == v69) {
      goto LABEL_53;
    }
    if (v41 == v68 || v41 == v67 || v41 == v66 || v41 == v65 || v41 == v64 || v41 == v63) {
      goto LABEL_52;
    }
    if (v41 != v62)
    {
      if (v41 != v61
        && v41 != v60
        && v41 != v59
        && v41 != v58
        && v41 != v57
        && v41 != v56
        && v41 != v55
        && v41 != v54
        && v41 != v53)
      {
        char v42 = (char)v85;
        if (v41 != v52)
        {
          ((void (*)(char *, uint64_t))v28)(v84, v6);
          char v42 = 0;
        }

        goto LABEL_53;
      }

LABEL_52:
      char v42 = (char)v85;
    }

  __break(1u);
  return result;
}

                  __break(1u);
                  return result;
                }

                goto LABEL_50;
              }

LABEL_53:
    ((void (*)(char *, uint64_t))v28)(v87, v6);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v88, v6);
    if ((v42 & 1) != 0)
    {
      uint64_t v31 = 1LL;
      uint64_t v3 = v92;
LABEL_57:
      uint64_t v43 = 0LL;
      while (v31 != v43)
      {
        IndexPath.init(item:section:)(v43, v22);
        dispatch thunk of BaseShelfPresenter.model(at:)(&v97, v5);
        uint64_t v44 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
        uint64_t v46 = type metadata accessor for PrivacyType(0LL, v45);
        if ((swift_dynamicCast(&v99, &v97, v44, v46, 6LL) & 1) != 0)
        {
          uint64_t v47 = v99;
          char v48 = PrivacyType.wantsScrollFocus.getter();
          __n128 v49 = swift_release(v47);
          if ((v48 & 1) != 0)
          {
            a1 = v81;
            uint64_t v3 = v92;
            (*(void (**)(uint64_t, char *, uint64_t, __n128))(v96 + 32))(v81, v5, v92, v49);
            uint64_t v50 = 0LL;
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(a1, v50, 1LL, v3);
          }

          uint64_t v3 = v92;
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v5, v92);
        }

        else
        {
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v5, v3);
        }

        if (v31 == ++v43) {
          goto LABEL_7;
        }
      }

      __break(1u);
      break;
    }

    if (v31 < 0) {
      goto LABEL_70;
    }
    uint64_t v3 = v92;
    if (v31) {
      goto LABEL_57;
    }
LABEL_7:
    if (++v22 == v21)
    {
      uint64_t v50 = 1LL;
      a1 = v81;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(a1, v50, 1LL, v3);
    }
  }

  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

  __break(1u);
}

uint64_t type metadata accessor for PrivacyDetailDataSource(uint64_t a1)
{
  uint64_t result = qword_1002E7368;
  if (!qword_1002E7368) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PrivacyDetailDataSource);
  }
  return result;
}

uint64_t sub_1000BD4E0(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002EE510);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1000BD520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002EE510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void *sub_1000BD568(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 & 0xC000000000000001LL) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v8 = sub_1000EDEE0(a1);
      if ((v9 & 1) != 0)
      {
        uint64_t v7 = *(void **)(*(void *)(v2 + 56) + 8 * v8);
        id v10 = v7;
        return v7;
      }
    }

    return 0LL;
  }

  if (a2 >= 0) {
    uint64_t v2 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_retain(a1);
  uint64_t v5 = __CocoaDictionary.lookup(_:)(v4, v2);
  swift_release(a1);
  if (!v5) {
    return 0LL;
  }
  uint64_t v12 = v5;
  uint64_t v6 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E7658, &OBJC_CLASS___UIImage_ptr);
  swift_unknownObjectRetain(v5);
  swift_dynamicCast(&v13, &v12, (char *)&type metadata for Swift.AnyObject + 8, v6, 7LL);
  uint64_t v7 = v13;
  swift_unknownObjectRelease(v5);
  return v7;
}

char *sub_1000BD64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_fullScreenshotFetcher;
  uint64_t v12 = type metadata accessor for ScreenshotFetcher();
  uint64_t v13 = swift_allocObject(v12, 40LL, 7LL);
  uint64_t v14 = v5;
  *(void *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1000EC13C((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v13 + 32) = 0LL;
  swift_unknownObjectWeakInit(v13 + 24, 0LL);
  *(void *)(v13 + 32) = 0LL;
  swift_unknownObjectWeakAssign(v15, 0LL);
  *(void *)&v5[v11] = v13;
  *(void *)&v14[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_screenshots] = a1;
  *(void *)&v14[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_placeholderImages] = a2;
  *(void *)&v14[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_artworkLoader] = a3;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  uint64_t v16 = (uint64_t)sub_1000BE3B4(a1, a2);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(a2);
  *(void *)&v14[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_galleryViewControllers] = v16;
  if (a4 < 0)
  {
    uint64_t v18 = 0LL;
  }

  else
  {
    if ((unint64_t)v16 >> 62)
    {
      if (v16 < 0) {
        uint64_t v23 = v16;
      }
      else {
        uint64_t v23 = v16 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v16);
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v16);
    }

    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    if (v17 <= a4) {
      uint64_t v18 = 0LL;
    }
    else {
      uint64_t v18 = a4;
    }
  }

  *(void *)&v14[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_initialSelectedIndex] = v18;

  v24.receiver = v14;
  v24.super_class = ObjectType;
  uint64_t v19 = (char *)objc_msgSendSuper2(&v24, "initWithTransitionStyle:navigationOrientation:options:", 1, 0, 0);
  uint64_t v20 = *(void *)&v19[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_fullScreenshotFetcher];
  *(void *)(v20 + 32) = &off_10028A4C0;
  swift_unknownObjectWeakAssign(v20 + 24, v19);
  uint64_t v21 = v19;
  [v21 setDataSource:v21];

  swift_release(a3);
  return v21;
}

void sub_1000BD900()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v60.receiver = v0;
  v60.super_class = ObjectType;
  objc_msgSendSuper2(&v60, "viewDidLoad", v5);
  id v8 = [v0 view];
  if (!v8) {
    goto LABEL_35;
  }
  char v9 = v8;
  [v8 setInsetsLayoutMarginsFromSafeArea:0];

  id v10 = [v0 view];
  if (!v10)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }

  uint64_t v11 = v10;
  [v10 _setSafeAreaInsetsFrozen:1];

  id v12 = [v0 view];
  if (!v12)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }

  uint64_t v13 = v12;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  static AutomationSemantics.page(name:id:)(0xD000000000000016LL, 0x800000010024BF40LL, &v57);
  sub_1000077E0((uint64_t)&v57, (uint64_t *)&unk_1002E3500);
  UIView.setAutomationSemantics(_:)(v7);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  uint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_fullScreenshotFetcher];
  uint64_t v15 = *(void *)&v1[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_screenshots];
  id v16 = [v1 view];
  if (v16)
  {
    uint64_t v17 = v16;
    [v16 bounds];
    double v19 = v18;
    double v21 = v20;

    uint64_t v22 = *(void *)&v1[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_artworkLoader];
    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0) {
        uint64_t v43 = v15;
      }
      else {
        uint64_t v43 = v15 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v15);
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v43);
      if (v23) {
        goto LABEL_7;
      }
    }

    else
    {
      uint64_t v23 = *(void *)((v15 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(v15);
      if (v23)
      {
LABEL_7:
        if (v23 < 1)
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }

        int v54 = v1;
        uint64_t v56 = v23;
        if ((v15 & 0xC000000000000001LL) != 0)
        {
          unint64_t v24 = 0LL;
          uint64_t v55 = v22;
          do
          {
            uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v15);
            unint64_t v26 = v24 + 1;
            if (v24 >= 5) {
              uint64_t v27 = 1LL;
            }
            else {
              uint64_t v27 = 2LL;
            }
            uint64_t v28 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v19, v21);
            uint64_t v59 = 0LL;
            __int128 v57 = 0u;
            __int128 v58 = 0u;
            uint64_t v29 = swift_allocObject(&unk_10028A4E0, 24LL, 7LL);
            swift_weakInit(v29 + 16, v14);
            uint64_t v30 = v15;
            uint64_t v31 = v14;
            uint64_t v32 = (void *)swift_allocObject(&unk_10028A508, 40LL, 7LL);
            v32[2] = v29;
            v32[3] = v25;
            void v32[4] = v24;
            swift_retain(v29);
            swift_unknownObjectRetain(v25);
            ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v28,  v27,  1LL,  &v57,  sub_1000BEC88,  v32,  v33);
            swift_unknownObjectRelease(v25);
            swift_release(v28);
            uint64_t v34 = v32;
            uint64_t v14 = v31;
            uint64_t v15 = v30;
            swift_release(v34);
            sub_1000077E0((uint64_t)&v57, (uint64_t *)&unk_1002E2290);
            swift_release(v29);
            ++v24;
          }

          while (v56 != v26);
        }

        else
        {
          unint64_t v35 = 0LL;
          uint64_t v55 = v14;
          do
          {
            uint64_t v36 = *(void *)(v15 + 8 * v35 + 32);
            unint64_t v37 = v35 + 1;
            if (v35 >= 5) {
              uint64_t v38 = 1LL;
            }
            else {
              uint64_t v38 = 2LL;
            }
            swift_retain(*(void *)(v15 + 8 * v35 + 32));
            uint64_t v39 = Artwork.config(_:mode:prefersLayeredImage:)(1LL, 0LL, v19, v21);
            uint64_t v59 = 0LL;
            __int128 v57 = 0u;
            __int128 v58 = 0u;
            uint64_t v40 = swift_allocObject(&unk_10028A4E0, 24LL, 7LL);
            swift_weakInit(v40 + 16, v55);
            int v41 = (void *)swift_allocObject(&unk_10028A530, 40LL, 7LL);
            void v41[2] = v40;
            v41[3] = v36;
            v41[4] = v35;
            swift_retain(v36);
            __n128 v42 = swift_retain(v40);
            ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v39,  v38,  1LL,  &v57,  sub_1000BECC4,  v41,  v42);
            swift_release(v36);
            swift_release(v39);
            swift_release(v41);
            sub_1000077E0((uint64_t)&v57, (uint64_t *)&unk_1002E2290);
            swift_release(v40);
            ++v35;
          }

          while (v56 != v37);
        }

        swift_bridgeObjectRelease(v15);
        uint64_t v1 = v54;
LABEL_26:
        uint64_t v44 = *(void *)&v1[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_galleryViewControllers];
        unint64_t v45 = *(void *)&v1[OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_initialSelectedIndex];
        if ((v44 & 0xC000000000000001LL) != 0)
        {
          id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v45, v44);
          goto LABEL_30;
        }

        if ((v45 & 0x8000000000000000LL) != 0)
        {
          __break(1u);
        }

        else if (v45 < *(void *)((v44 & 0xFFFFFFFFFFFFF8LL) + 0x10))
        {
          id v46 = *(id *)(v44 + 8 * v45 + 32);
LABEL_30:
          uint64_t v47 = v46;
          uint64_t v48 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
          uint64_t v49 = swift_allocObject(v48, 40LL, 7LL);
          *(_OWORD *)(v49 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
          *(void *)(v49 + 32) = v47;
          *(void *)&__int128 v57 = v49;
          specialized Array._endMutation()(v49);
          uint64_t v50 = v57;
          sub_10000DFD4(0LL, (unint64_t *)&qword_1002E5EA0, &OBJC_CLASS___UIViewController_ptr);
          id v51 = v47;
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend( v1,  "setViewControllers:direction:animated:completion:",  isa,  0,  0,  0,  swift_bridgeObjectRelease(v50).n128_f64[0]);

          return;
        }

        __break(1u);
        goto LABEL_34;
      }
    }

    swift_bridgeObjectRelease(v15);
    goto LABEL_26;
  }

uint64_t type metadata accessor for ScreenshotsGalleryViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore32ScreenshotsGalleryViewController);
}

void (*sub_1000BE0A4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000BE1F4(v6, a2, a3);
  return sub_10000D910;
}

void (*sub_1000BE0F8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000BE260(v6, a2, a3);
  return sub_10000D910;
}

void (*sub_1000BE14C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000BE2CC(v6, a2, a3);
  return sub_10000D910;
}

void (*sub_1000BE1A0(uint64_t **a1, unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  _OWORD v6[4] = (uint64_t)sub_1000BE340(v6, a2, a3);
  return sub_10000D910;
}

uint64_t (*sub_1000BE1F4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1000BECC8;
  }

  __break(1u);
  return result;
}

uint64_t (*sub_1000BE260(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain(*(void *)(a3 + 8 * a2 + 32));
LABEL_5:
    uint64_t *v3 = v4;
    return sub_1000BECCC;
  }

  __break(1u);
  return result;
}

void (*sub_1000BE2CC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1000BE338;
  }

  __break(1u);
  return result;
}

void sub_1000BE338(id *a1)
{
}

uint64_t *sub_1000BE340(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
  {
    swift_retain(*(void *)(a3 + 8 * a2 + 32));
LABEL_5:
    uint64_t *v3 = v4;
    return (uint64_t *)sub_1000BE3AC;
  }

  __break(1u);
  return result;
}

uint64_t sub_1000BE3AC(void *a1)
{
  return swift_release(*a1);
}

void *sub_1000BE3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
LABEL_3:
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t v30 = _swiftEmptyArrayStorage;
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)(v3);
    if ((v3 & 0x8000000000000000LL) == 0)
    {
      uint64_t v5 = type metadata accessor for ArtworkDisplayingViewController();
      uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v5);
      uint64_t v7 = 0LL;
      uint64_t v8 = a2 & 0xFFFFFFFFFFFFFF8LL;
      if (a2 < 0) {
        uint64_t v8 = a2;
      }
      uint64_t v26 = v8;
      while (1)
      {
        if (v3 == v7)
        {
          __break(1u);
LABEL_27:
          if (a1 < 0) {
            uint64_t v25 = a1;
          }
          else {
            uint64_t v25 = a1 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain(a1);
          uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v25);
          swift_bridgeObjectRelease(a1);
          goto LABEL_3;
        }

        if ((a1 & 0xC000000000000001LL) != 0)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
        }

        else
        {
          uint64_t v12 = *(void *)(a1 + 8 * v7 + 32);
          swift_retain(v12);
        }

        id v13 = [objc_allocWithZone(ObjCClassFromMetadata) init];
        if ((a2 & 0xC000000000000001LL) != 0)
        {
          uint64_t v14 = swift_retain(v12);
          uint64_t v15 = __CocoaDictionary.lookup(_:)(v14, v26);
          if (!v15) {
            goto LABEL_8;
          }
          uint64_t v16 = v15;
          uint64_t v28 = v15;
          uint64_t v17 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E7658, &OBJC_CLASS___UIImage_ptr);
          swift_unknownObjectRetain(v16);
          swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v17, 7LL);
          id v18 = v29;
          swift_unknownObjectRelease(v16);
        }

        else
        {
          if (!*(void *)(a2 + 16)) {
            goto LABEL_9;
          }
          uint64_t v19 = swift_retain(v12);
          unint64_t v20 = sub_1000EDEE0(v19);
          if ((v21 & 1) == 0)
          {
LABEL_8:
            swift_release(v12);
            goto LABEL_9;
          }

          id v18 = *(id *)(*(void *)(a2 + 56) + 8 * v20);
        }

        swift_release(v12);
        if (v18)
        {
          id v22 = v18;
          uint64_t result = [v13 view];
          if (!result) {
            goto LABEL_32;
          }
          uint64_t v23 = result;
          uint64_t v24 = objc_opt_self(&OBJC_CLASS___UIImageView);
          objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v23, v24, 0, 0, 0), "setImage:", v22);
          swift_release(v12);

          goto LABEL_10;
        }

void sub_1000BE67C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_screenshots);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v30 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_screenshots);
    }
    else {
      uint64_t v30 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)(v1 + OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_screenshots));
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v7);
    if (v31 <= a1) {
      return;
    }
  }

  else if (*(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10) <= a1)
  {
    return;
  }

  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_galleryViewControllers);
  if (!((unint64_t)v8 >> 62))
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFF8LL) + 0x10) <= a1) {
      return;
    }
LABEL_5:
    if ((v7 & 0xC000000000000001LL) == 0)
    {
      if (a1 < 0)
      {
        __break(1u);
      }

      else if (*(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10) > (unint64_t)a1)
      {
        uint64_t v9 = *(void *)(v7 + 8 * a1 + 32);
        swift_retain(v9);
        if ((v8 & 0xC000000000000001LL) == 0) {
          goto LABEL_9;
        }
        goto LABEL_34;
      }

      __break(1u);
      goto LABEL_37;
    }

    uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v7);
    if ((v8 & 0xC000000000000001LL) == 0)
    {
LABEL_9:
      if ((a1 & 0x8000000000000000LL) == 0)
      {
        if (*(void *)((v8 & 0xFFFFFFFFFFFFF8LL) + 0x10) > (unint64_t)a1)
        {
          id v10 = *(id *)(v8 + 8 * a1 + 32);
          goto LABEL_12;
        }

LABEL_37:
      __break(1u);
      goto LABEL_38;
    }

        objc_msgSend(v50, "setBackgroundColor:", 0, *(double *)&v52);
        sub_10021B1F8(0LL);
        [*(id *)&v50[OBJC_IVAR____TtC8AppStore25ProductBackgroundUberView_fallbackArtworkEffectView] removeFromSuperview];
        sub_1001AE998();
        swift_release(v200);
LABEL_38:

        return;
      }
    }

void sub_1000BEA60(void *a1)
{
  uint64_t v3 = type metadata accessor for ArtworkDisplayingViewController();
  uint64_t v4 = swift_dynamicCastClass(a1, v3);
  if (!v4) {
    return;
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_galleryViewControllers);
  id v7 = a1;
  swift_bridgeObjectRetain(v6);
  uint64_t v8 = sub_100011464(v5, v6);
  char v10 = v9;
  swift_bridgeObjectRelease(v6);
  if ((v10 & 1) != 0) {
    goto LABEL_16;
  }
  BOOL v11 = __OFADD__(v8, 1LL);
  uint64_t v12 = v8 + 1;
  if (v11)
  {
    __break(1u);
LABEL_12:
    if (v6 < 0) {
      uint64_t v14 = v6;
    }
    else {
      uint64_t v14 = v6 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v6);
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v6);
    if (v12 < v15) {
      goto LABEL_6;
    }
LABEL_16:

    return;
  }

  if (v12 >= *(void *)((v6 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v6 & 0xC000000000000001LL) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v6);
    goto LABEL_10;
  }

  if (v12 < 0)
  {
    __break(1u);
  }

  else if ((unint64_t)v12 < *(void *)((v6 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    id v13 = *(id *)(v6 + 8 * v12 + 32);
LABEL_10:

    return;
  }

  __break(1u);
}

unint64_t sub_1000BEB88(void *a1)
{
  uint64_t v3 = type metadata accessor for ArtworkDisplayingViewController();
  uint64_t v4 = swift_dynamicCastClass(a1, v3);
  if (!v4) {
    return 0LL;
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore32ScreenshotsGalleryViewController_galleryViewControllers);
  id v7 = a1;
  swift_bridgeObjectRetain(v6);
  uint64_t v8 = sub_100011464(v5, v6);
  char v10 = v9;
  swift_bridgeObjectRelease(v6);
  if ((v10 & 1) != 0) {
    goto LABEL_9;
  }
  unint64_t result = v8 - 1;
  if (__OFSUB__(v8, 1LL))
  {
    __break(1u);
    goto LABEL_13;
  }

  if ((result & 0x8000000000000000LL) != 0)
  {
LABEL_9:

    return 0LL;
  }

  if ((v6 & 0xC000000000000001LL) != 0)
  {
LABEL_13:
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v6);
    goto LABEL_8;
  }

  if (result < *(void *)((v6 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    id v12 = *(id *)(v6 + 8 * result + 32);
LABEL_8:
    id v13 = v12;

    return (unint64_t)v13;
  }

  __break(1u);
  return result;
}

uint64_t sub_1000BEC60()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000BEC88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1000BEC98()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

unint64_t sub_1000BECD4()
{
  unint64_t result = qword_1002E7660;
  if (!qword_1002E7660)
  {
    uint64_t v1 = type metadata accessor for LargeStoryCardCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023B874, v1);
    atomic_store(result, (unint64_t *)&qword_1002E7660);
  }

  return result;
}

double sub_1000BED1C()
{
  uint64_t v0 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.parentShelfLayoutContext.getter(v2);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return 560.0;
}

double sub_1000BEDA0()
{
  return 560.0;
}

ValueMetadata *type metadata accessor for ClearCacheDebugAction()
{
  return &type metadata for ClearCacheDebugAction;
}

unint64_t sub_1000BEDC8()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___NSURLCache);
  id v1 = [v0 sharedURLCache];
  [v1 currentMemoryUsage];

  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 47LL;
  v4._object = (void *)0xE100000000000000LL;
  String.append(_:)(v4);
  id v5 = [v0 sharedURLCache];
  [v5 memoryCapacity];

  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  id v7 = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v7);
  v8._countAndFlagsBits = 0x203A44202C424DLL;
  v8._object = (void *)0xE700000000000000LL;
  String.append(_:)(v8);
  id v9 = [v0 sharedURLCache];
  [v9 currentDiskUsage];

  v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  BOOL v11 = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 47LL;
  v12._object = (void *)0xE100000000000000LL;
  String.append(_:)(v12);
  id v13 = [v0 sharedURLCache];
  [v13 diskCapacity];

  v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  uint64_t v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 2703949LL;
  v16._object = (void *)0xE300000000000000LL;
  String.append(_:)(v16);
  return 0xD000000000000011LL;
}

void sub_1000BF040()
{
  id v0 = [(id)objc_opt_self(NSURLCache) sharedURLCache];
  [v0 removeAllCachedResponses];

  id v1 = CFNotificationCenterGetDarwinNotifyCenter();
  Swift::String v2 = (__CFString *)String._bridgeToObjectiveC()();
  CFNotificationCenterPostNotification(v1, v2, 0LL, 0LL, 1u);

  id v3 = [(id)objc_opt_self(ASKRebootstrapCoordinator) sharedCoordinator];
  [v3 notify];
}

void sub_1000BF118(uint64_t a1, uint64_t a2)
{
  id v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore22ArcadeWelcomeItemsView_itemViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8AppStore22ArcadeWelcomeItemsView_itemViews, v41, 1LL, 0LL);
  uint64_t v6 = *v5;
  if ((unint64_t)*v5 >> 62)
  {
    if (v6 < 0) {
      uint64_t v11 = *v5;
    }
    else {
      uint64_t v11 = v6 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*v5);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (!v7) {
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*v5);
    if (!v7) {
      goto LABEL_13;
    }
  }

  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }

  for (uint64_t i = 0LL; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001LL) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
    }
    else {
      id v9 = *(id *)(v6 + 8 * i + 32);
    }
    Swift::String v10 = v9;
    [v9 removeFromSuperview];
  }

void *sub_1000BF4E8()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  v19.receiver = v1;
  v19.super_class = ObjectType;
  objc_msgSendSuper2(&v19, "layoutSubviews", v5);
  sub_100014198((uint64_t)&v1[OBJC_IVAR____TtC8AppStore22ArcadeWelcomeItemsView_layoutMetrics], (uint64_t)v18);
  Swift::String v8 = &v1[OBJC_IVAR____TtC8AppStore22ArcadeWelcomeItemsView_itemViews];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore22ArcadeWelcomeItemsView_itemViews], v17, 0LL, 0LL);
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = swift_bridgeObjectRetain(v9);
  uint64_t v11 = sub_1000CA6EC(v10);
  swift_bridgeObjectRelease(v9);
  v18[10] = v11;
  *(void *)&CGFloat v12 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType).n128_u64[0];
  ArcadeWelcomeItemsViewLayout.placeChildren(relativeTo:in:)(v1, (uint64_t)v7, v12, v13, v14, v15);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  return sub_1000BF7B0(v18);
}

uint64_t type metadata accessor for ArcadeWelcomeItemsView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore22ArcadeWelcomeItemsView);
}

void *sub_1000BF7B0(void *a1)
{
  return a1;
}

void *sub_1000BF7E4()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath(0LL);
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  *(void *)&double v3 = __chkstk_darwin(v2).n128_u64[0];
  double v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  objc_msgSend(v1, "bounds", v3);
  id v6 = objc_msgSend(v1, "layoutAttributesForElementsInRect:");
  if (!v6) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v7 = v6;
  unint64_t v8 = sub_1000BFF50();
  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if (!((unint64_t)v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t result = (void *)swift_bridgeObjectRetain(v9);
    if (v10) {
      goto LABEL_4;
    }
LABEL_22:
    CGFloat v13 = (char *)_swiftEmptyArrayStorage;
LABEL_23:
    swift_bridgeObjectRelease_n(v9, 2LL);
    uint64_t v22 = sub_1002135A4((uint64_t)v13);
    swift_bridgeObjectRelease(v13);
    return (void *)v22;
  }

  if (v9 < 0) {
    uint64_t v23 = v9;
  }
  else {
    uint64_t v23 = v9 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v9);
  unint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter(v23);
  uint64_t v10 = (uint64_t)result;
  if (!result) {
    goto LABEL_22;
  }
LABEL_4:
  if (v10 >= 1)
  {
    uint64_t v12 = 0LL;
    CGFloat v13 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v9 & 0xC000000000000001LL) != 0) {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
      }
      else {
        id v14 = *(id *)(v9 + 8 * v12 + 32);
      }
      CGFloat v15 = v14;
      if (objc_msgSend(v14, "representedElementCategory", v24, v25))
      {
      }

      else
      {
        id v16 = [v15 indexPath];
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v16);

        uint64_t v18 = IndexPath.section.getter(v17);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v25);

        if ((swift_isUniquelyReferenced_nonNull_native(v13, v19) & 1) == 0) {
          CGFloat v13 = sub_100018D10(0LL, *((void *)v13 + 2) + 1LL, 1, v13);
        }
        unint64_t v21 = *((void *)v13 + 2);
        unint64_t v20 = *((void *)v13 + 3);
        if (v21 >= v20 >> 1) {
          CGFloat v13 = sub_100018D10((char *)(v20 > 1), v21 + 1, 1, v13);
        }
        *((void *)v13 + 2) = v21 + 1;
        *(void *)&v13[8 * v21 + 32] = v18;
      }

      ++v12;
    }

    while (v10 != v12);
    goto LABEL_23;
  }

  __break(1u);
  return result;
}

id sub_1000BFA38()
{
  id v1 = &v0[OBJC_IVAR____TtC8AppStore13ProductLayout_topBackgroundFrame];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8AppStore13ProductLayout_bottomBackgroundFrame];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  double v3 = &v0[OBJC_IVAR____TtC8AppStore13ProductLayout_pendingPrepareObserver];
  uint64_t v4 = (objc_class *)type metadata accessor for ProductLayout();
  *(void *)double v3 = 0LL;
  *((void *)v3 + 1) = 0LL;
  v11.receiver = v0;
  v11.super_class = v4;
  id v5 = objc_msgSendSuper2(&v11, "init");
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v9 = v5;
  objc_msgSend(v9, "setSectionInset:", UIEdgeInsetsZero.top, left, bottom, right);
  [v9 setMinimumInteritemSpacing:0.0];
  [v9 setMinimumLineSpacing:0.0];
  [v9 setScrollDirection:0];

  return v9;
}

uint64_t sub_1000BFB50()
{
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for ProductLayout();
  objc_msgSendSuper2(&v25, "prepareLayout");
  id v1 = [v0 collectionView];
  if (v1)
  {
    uint64_t v2 = v1;
    [v1 bounds];
    CGFloat x = v26.origin.x;
    CGFloat y = v26.origin.y;
    CGFloat width = v26.size.width;
    CGFloat height = v26.size.height;
    CGFloat v7 = -CGRectGetHeight(v26);
    v27.origin.CGFloat x = x;
    v27.origin.CGFloat y = y;
    v27.size.CGFloat width = width;
    v27.size.CGFloat height = height;
    CGFloat v8 = CGRectGetWidth(v27);
    v28.origin.CGFloat x = x;
    v28.origin.CGFloat y = y;
    v28.size.CGFloat width = width;
    v28.size.CGFloat height = height;
    CGFloat v9 = CGRectGetHeight(v28);
    uint64_t v10 = (CGFloat *)&v0[OBJC_IVAR____TtC8AppStore13ProductLayout_topBackgroundFrame];
    *uint64_t v10 = 0.0;
    v10[1] = v7;
    v10[2] = v8;
    v10[3] = v9;
    [v0 collectionViewContentSize];
    uint64_t v12 = v11;
    v29.origin.CGFloat x = x;
    v29.origin.CGFloat y = y;
    v29.size.CGFloat width = width;
    v29.size.CGFloat height = height;
    CGFloat v13 = CGRectGetWidth(v29);
    v30.origin.CGFloat x = x;
    v30.origin.CGFloat y = y;
    v30.size.CGFloat width = width;
    v30.size.CGFloat height = height;
    CGFloat v14 = CGRectGetHeight(v30);

    CGFloat v15 = (CGFloat *)&v0[OBJC_IVAR____TtC8AppStore13ProductLayout_bottomBackgroundFrame];
    CGFloat *v15 = 0.0;
    *((void *)v15 + 1) = v12;
    _OWORD v15[2] = v13;
    void v15[3] = v14;
  }

  else
  {
    id v16 = &v0[OBJC_IVAR____TtC8AppStore13ProductLayout_topBackgroundFrame];
    *(_OWORD *)id v16 = 0u;
    *((_OWORD *)v16 + 1) = 0u;
    uint64_t v17 = &v0[OBJC_IVAR____TtC8AppStore13ProductLayout_bottomBackgroundFrame];
    *(_OWORD *)uint64_t v17 = 0u;
    *((_OWORD *)v17 + 1) = 0u;
  }

  uint64_t v18 = (uint64_t *)&v0[OBJC_IVAR____TtC8AppStore13ProductLayout_pendingPrepareObserver];
  __n128 v19 = *(void (**)(char *, __n128))&v0[OBJC_IVAR____TtC8AppStore13ProductLayout_pendingPrepareObserver];
  if (v19)
  {
    uint64_t v20 = v18[1];
    __n128 v21 = swift_retain(v20);
    v19(v0, v21);
    sub_10000A450((uint64_t)v19, v20);
    uint64_t v22 = *v18;
  }

  else
  {
    uint64_t v22 = 0LL;
  }

  uint64_t v23 = v18[1];
  *uint64_t v18 = 0LL;
  v18[1] = 0LL;
  return sub_10000A450(v22, v23);
}

void *sub_1000BFD3C(double a1, double a2, double a3, double a4)
{
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for ProductLayout();
  unint64_t result = objc_msgSendSuper2(&v16, "layoutAttributesForElementsInRect:", a1, a2, a3, a4);
  if (result)
  {
    uint64_t v10 = result;
    unint64_t v11 = sub_1000BFF50();
    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

    id v13 = [v4 collectionView];
    if (v13)
    {
      CGFloat v14 = v13;
      if ((uint64_t)[v13 numberOfSections] > 0)
      {
        uint64_t v15 = swift_bridgeObjectRetain(v12);
        sub_1000B3B04(v15);
        swift_bridgeObjectRelease(v12);

        return _swiftEmptyArrayStorage;
      }
    }

    swift_bridgeObjectRelease(v12);
    return 0LL;
  }

  return result;
}

uint64_t sub_1000BFED8()
{
  return sub_10000A450( *(void *)(v0 + OBJC_IVAR____TtC8AppStore13ProductLayout_pendingPrepareObserver),  *(void *)(v0 + OBJC_IVAR____TtC8AppStore13ProductLayout_pendingPrepareObserver + 8));
}

id sub_1000BFEEC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProductLayout()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore13ProductLayout);
}

unint64_t sub_1000BFF50()
{
  unint64_t result = qword_1002E2B90;
  if (!qword_1002E2B90)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UICollectionViewLayoutAttributes);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002E2B90);
  }

  return result;
}

uint64_t sub_1000BFF8C(uint64_t a1)
{
  return sub_1000BFFCC(40.0, a1, qword_1002E76E0);
}

uint64_t sub_1000BFFA0(uint64_t a1)
{
  return sub_1000BFFCC(56.0, a1, qword_1002E76F8);
}

uint64_t sub_1000BFFB4(uint64_t a1)
{
  return sub_1000BFFCC(70.0, a1, qword_1002E7710);
}

uint64_t sub_1000BFFCC(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = type metadata accessor for FontSource(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  CGFloat v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v9, a3);
  sub_10000A634(v9, (uint64_t)a3);
  if (qword_1002E05A0 != -1) {
    swift_once(&qword_1002E05A0, sub_1000727B8);
  }
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, v10);
  uint64_t v12 = sub_10000A634(v11, (uint64_t)qword_1002F2C50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v8, v12, v11);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  _OWORD v16[3] = v5;
  v16[4] = &protocol witness table for FontSource;
  id v13 = sub_10000DD7C(v16);
  (*(void (**)(void *, char *, uint64_t))(v6 + 16))(v13, v8, v5);
  StaticDimension.init(_:scaledLike:)(v16, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000C0120@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  switch(a1)
  {
    case 3LL:
      if (qword_1002E0A40 != -1) {
        swift_once(&qword_1002E0A40, sub_1000BFFB4);
      }
      uint64_t v3 = type metadata accessor for StaticDimension(0LL);
      uint64_t v4 = v3;
      uint64_t v5 = qword_1002E7710;
      goto LABEL_13;
    case 2LL:
      if (qword_1002E0A38 != -1) {
        swift_once(&qword_1002E0A38, sub_1000BFFA0);
      }
      uint64_t v3 = type metadata accessor for StaticDimension(0LL);
      uint64_t v4 = v3;
      uint64_t v5 = qword_1002E76F8;
      goto LABEL_13;
    case 1LL:
      if (qword_1002E0A30 != -1) {
        swift_once(&qword_1002E0A30, sub_1000BFF8C);
      }
      uint64_t v3 = type metadata accessor for StaticDimension(0LL);
      uint64_t v4 = v3;
      uint64_t v5 = qword_1002E76E0;
LABEL_13:
      uint64_t v6 = sub_10000A634(v3, (uint64_t)v5);
      a2[3] = v4;
      a2[4] = &protocol witness table for StaticDimension;
      uint64_t v7 = sub_10000DD7C(a2);
      return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(v7, v6, v4);
  }

  a2[3] = type metadata accessor for ZeroDimension(0LL);
  a2[4] = &protocol witness table for ZeroDimension;
  sub_10000DD7C(a2);
  return static ZeroDimension.zero.getter();
}

uint64_t sub_1000C0278()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  sub_10000DC04(v4, qword_1002F3F00);
  uint64_t v39 = sub_10000A634(v4, (uint64_t)qword_1002F3F00);
  v66[3] = &type metadata for Double;
  v66[4] = &protocol witness table for Double;
  v66[0] = 0x4038000000000000LL;
  if (qword_1002E05A8 != -1) {
    swift_once(&qword_1002E05A8, sub_1000727D0);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v40 = (void (*)(void, void, void))sub_10000A634(v6, (uint64_t)qword_1002F2C68);
  uint64_t v7 = *(void (**)(char *, void, uint64_t))(*(void *)(v6 - 8) + 16LL);
  uint64_t v37 = v6;
  v7(v3, v40, v6);
  uint64_t v8 = enum case for FontSource.useCase(_:);
  uint64_t v9 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v9(v3, enum case for FontSource.useCase(_:), v0);
  uint64_t v41 = type metadata accessor for StaticDimension(0LL);
  v65[3] = v41;
  v65[4] = &protocol witness table for StaticDimension;
  sub_10000DD7C(v65);
  uint64_t v63 = v0;
  int v64 = &protocol witness table for FontSource;
  uint64_t v10 = sub_10000DD7C(v62);
  uint64_t v38 = (void (*)(void *, char *, uint64_t))v1[2];
  v38(v10, v3, v0);
  StaticDimension.init(_:scaledLike:)(v62, 56.0);
  uint64_t v11 = (void (*)(char *, uint64_t))v1[1];
  uint64_t v12 = v9;
  uint64_t v35 = v9;
  id v13 = v7;
  v11(v3, v0);
  CGFloat v14 = v11;
  uint64_t v36 = v11;
  uint64_t v15 = v40;
  v13(v3, v40, v6);
  objc_super v16 = v13;
  uint64_t v17 = v8;
  unsigned int v42 = v8;
  v12(v3, v8, v0);
  uint64_t v18 = v41;
  uint64_t v63 = v41;
  int v64 = &protocol witness table for StaticDimension;
  sub_10000DD7C(v62);
  uint64_t v60 = v0;
  int v61 = &protocol witness table for FontSource;
  __n128 v19 = sub_10000DD7C(v59);
  uint64_t v20 = v38;
  v38(v19, v3, v0);
  StaticDimension.init(_:scaledLike:)(v59, 56.0);
  v14(v3, v0);
  uint64_t v21 = v37;
  v16(v3, v15, v37);
  uint64_t v22 = v17;
  uint64_t v23 = v35;
  v35(v3, v22, v0);
  uint64_t v60 = v18;
  int v61 = &protocol witness table for StaticDimension;
  sub_10000DD7C(v59);
  uint64_t v57 = v0;
  __int128 v58 = &protocol witness table for FontSource;
  uint64_t v24 = sub_10000DD7C(v56);
  objc_super v25 = v20;
  v20(v24, v3, v0);
  StaticDimension.init(_:scaledLike:)(v56, 56.0);
  CGRect v26 = v36;
  v36(v3, v0);
  CGRect v27 = v40;
  v16(v3, v40, v21);
  v23(v3, v42, v0);
  uint64_t v57 = v41;
  __int128 v58 = &protocol witness table for StaticDimension;
  sub_10000DD7C(v56);
  uint64_t v54 = v0;
  uint64_t v55 = &protocol witness table for FontSource;
  CGRect v28 = sub_10000DD7C(v53);
  v25(v28, v3, v0);
  StaticDimension.init(_:scaledLike:)(v53, 56.0);
  v26(v3, v0);
  uint64_t v40 = (void (*)(void, void, void))v16;
  v16(v3, v27, v21);
  v23(v3, v42, v0);
  uint64_t v29 = v41;
  uint64_t v54 = v41;
  uint64_t v55 = &protocol witness table for StaticDimension;
  sub_10000DD7C(v53);
  uint64_t v51 = v0;
  int v52 = &protocol witness table for FontSource;
  CGRect v30 = sub_10000DD7C(v50);
  v25(v30, v3, v0);
  StaticDimension.init(_:scaledLike:)(v50, 56.0);
  v26(v3, v0);
  if (qword_1002E05B0 != -1) {
    swift_once(&qword_1002E05B0, sub_1000727E8);
  }
  uint64_t v31 = sub_10000A634(v21, (uint64_t)qword_1002F2C80);
  v40(v3, v31, v21);
  v23(v3, v42, v0);
  uint64_t v51 = v29;
  int v52 = &protocol witness table for StaticDimension;
  sub_10000DD7C(v50);
  *((void *)&v48 + 1) = v0;
  uint64_t v49 = &protocol witness table for FontSource;
  uint64_t v32 = sub_10000DD7C(&v47);
  v25(v32, v3, v0);
  StaticDimension.init(_:scaledLike:)(&v47, 40.0);
  v26(v3, v0);
  uint64_t v49 = 0LL;
  __int128 v47 = 0u;
  __int128 v48 = 0u;
  uint64_t v33 = type metadata accessor for ZeroDimension(0LL);
  v46[3] = v33;
  v46[4] = &protocol witness table for ZeroDimension;
  sub_10000DD7C(v46);
  static ZeroDimension.zero.getter();
  v45[3] = v33;
  v45[4] = &protocol witness table for ZeroDimension;
  sub_10000DD7C(v45);
  static ZeroDimension.zero.getter();
  v44[3] = v33;
  v44[4] = &protocol witness table for ZeroDimension;
  sub_10000DD7C(v44);
  static ZeroDimension.zero.getter();
  v43[4] = &protocol witness table for Double;
  v43[3] = &type metadata for Double;
  v43[0] = 0x4038000000000000LL;
  return SmallLockupLayout.Metrics.init(artworkSize:artworkMargin:ordinalSpaceProvider:headingSpace:titleRegularSpace:titleMediumSpace:titleShortSpace:titleWithHeadingSpace:subtitleSpace:subtitleExtraTallSpace:tertiaryTitleSpace:offerTextSpace:bottomSpace:offerButtonSize:offerButtonMargin:numberOfLines:)( v66,  sub_1000C0120,  0LL,  v65,  v62,  v59,  v56,  v53,  320.0,  192.0,  v50,  &v47,  v46,  v45,  v44,  0LL,  0LL,  1,  v43,  2LL);
}

uint64_t sub_1000C0828()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  sub_10000DC04(v0, qword_1002E7728);
  sub_10000A634(v0, (uint64_t)qword_1002E7728);
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v2 = [v1 systemBlackColor];
  id v3 = [v1 systemWhiteColor];
  v7[0] = sub_1000038E8(&qword_1002E1E40);
  unint64_t v4 = sub_10000EA38();
  v7[1] = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023BA10, v7);
  id v8 = v2;
  id v9 = v3;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v9, &v8, v4);
}

uint64_t sub_1000C090C()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  sub_10000DC04(v0, qword_1002E7740);
  sub_10000A634(v0, (uint64_t)qword_1002E7740);
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v2 = [v1 systemBlackColor];
  id v3 = [v2 colorWithAlphaComponent:0.5];

  id v4 = [v1 systemWhiteColor];
  id v5 = [v4 colorWithAlphaComponent:0.5];

  v9[0] = sub_1000038E8(&qword_1002E1E40);
  unint64_t v6 = sub_10000EA38();
  v9[1] = v6;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023BA10, v9);
  id v10 = v3;
  id v11 = v5;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v11, &v10, v6);
}

__n128 sub_1000C0A34()
{
  __asm { FMOV            V0.2D, #25.0 }

  xmmword_1002E7758 = (__int128)result;
  *(__n128 *)&qword_1002E7768 = result;
  return result;
}

void sub_1000C0A48()
{
  qword_1002E7778 = 0LL;
  unk_1002E7780 = 0LL;
  qword_1002E7788 = 0LL;
  unk_1002E7790 = 0x4038000000000000LL;
}

char *sub_1000C0A60(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = type metadata accessor for CornerStyle(0LL);
  uint64_t v84 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&ObjectType - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&ObjectType - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = &v4[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_itemLayoutContext];
  uint64_t v19 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v18, 1LL, 1LL, v19);
  uint64_t v20 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_ordinalLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v21 = qword_1002E05A0;
  uint64_t v22 = v5;
  if (v21 != -1) {
    swift_once(&qword_1002E05A0, sub_1000727B8);
  }
  uint64_t v23 = sub_10000A634(v14, (uint64_t)qword_1002F2C50);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v24(v17, v23, v14);
  *(void *)&v5[v20] = sub_100011F1C((uint64_t)v17, 1LL, 0LL, 1, 1);
  uint64_t v25 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_titleLabel;
  if (qword_1002E05A8 != -1) {
    swift_once(&qword_1002E05A8, sub_1000727D0);
  }
  uint64_t v26 = sub_10000A634(v14, (uint64_t)qword_1002F2C68);
  v24(v17, v26, v14);
  *(void *)&v22[v25] = sub_100011F1C((uint64_t)v17, 1LL, 0LL, 1, 1);
  uint64_t v27 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_subtitleLabel;
  if (qword_1002E05B0 != -1) {
    swift_once(&qword_1002E05B0, sub_1000727E8);
  }
  uint64_t v28 = sub_10000A634(v14, (uint64_t)qword_1002F2C80);
  v24(v17, v28, v14);
  *(void *)&v22[v27] = sub_100011F1C((uint64_t)v17, 2LL, 0LL, 1, 1);
  uint64_t v29 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_priceLabel;
  v24(v17, v26, v14);
  *(void *)&v22[v29] = sub_100011F1C((uint64_t)v17, 1LL, 0LL, 1, 2);
  CGRect v30 = &v22[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_metrics];
  if (qword_1002E0A48 != -1) {
    swift_once(&qword_1002E0A48, sub_1000C0278);
  }
  uint64_t v31 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  uint64_t v32 = sub_10000A634(v31, (uint64_t)qword_1002F3F00);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16LL))(v30, v32, v31);
  v22[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_isShowingSeeAll] = 0;
  uint64_t v33 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_artworkView;
  type metadata accessor for ArtworkView(0LL);
  *(void *)&v22[v33] = static ArtworkView.plainArtworkView.getter();
  uint64_t v34 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_artworkBorderLayer;
  *(void *)&v22[v34] = [objc_allocWithZone(CALayer) init];

  v87.receiver = v22;
  v87.super_class = ObjectType;
  uint64_t v35 = (char *)objc_msgSendSuper2(&v87, "initWithFrame:", a1, a2, a3, a4);
  id v36 = [v35 contentView];
  id v37 = [v36 layer];

  if (qword_1002E0F68 != -1) {
    swift_once(&qword_1002E0F68, sub_10017CBB0);
  }
  objc_msgSend(v37, "setBorderWidth:", *(double *)&qword_1002F5280, ObjectType);

  id v38 = [v35 contentView];
  [v38 setClipsToBounds:1];

  uint64_t v39 = v84;
  (*(void (**)(char *, void, uint64_t))(v84 + 104))(v12, enum case for CornerStyle.continuous(_:), v10);
  id v40 = [v35 contentView];
  CornerStyle.apply(withRadius:to:)(v40, 12.0);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v10);
  uint64_t v41 = &v35[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  __int128 v42 = *(_OWORD *)&v35[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 16];
  v93[0] = *(_OWORD *)&v35[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  v93[1] = v42;
  char v94 = v35[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)uint64_t v41 = 0x4020000000000000LL;
  *((void *)v41 + 1) = 0x4039000000000000LL;
  v41[16] = 0;
  *((void *)v41 + 3) = 0LL;
  v41[32] = 1;
  uint64_t v43 = v35;
  sub_100068D40((uint64_t)v93, v44, v45);

  v88[0] = xmmword_100236D50;
  v88[1] = xmmword_100236D60;
  char v89 = 0;
  uint64_t v90 = 0LL;
  uint64_t v91 = 0LL;
  char v92 = 1;
  id v46 = v43;
  sub_1000673E8(v88);

  __int128 v47 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  __int128 v48 = v46;
  id v49 = [v47 blackColor];
  id v50 = [v49 CGColor];

  uint64_t v51 = &v48[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  int v52 = *(void **)&v48[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  uint64_t v53 = *(void **)&v48[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 8];
  uint64_t v54 = *(void **)&v48[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 16];
  *(void *)uint64_t v51 = v50;
  *(int64x2_t *)(v51 + 8) = vdupq_n_s64(1uLL);
  id v55 = v52;
  sub_10000B3E0(v53);
  sub_10000B3E0(v54);
  id v56 = v50;

  sub_10000B3F0(v53);
  sub_10000B3F0(v54);
  sub_100068E94(v52, v53, (unint64_t)v54);

  sub_10000B3F0(v53);
  sub_10000B3F0(v54);

  uint64_t v57 = &v48[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v58 = *(_DWORD *)&v48[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v56) = *(_DWORD *)&v48[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v53) = v48[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v54) = v48[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)uint64_t v57 = 1048576000;
  *((_DWORD *)v57 + 1) = 1051931443;
  v57[8] = 0;
  uint64_t v59 = *((unsigned int *)v57 + 3);
  *((_DWORD *)v57 + 3) = 0;
  v57[16] = 1;
  uint64_t v60 = v48;
  char v86 = (char)v53;
  char v85 = (char)v54;
  v61.n128_u32[0] = v58;
  sub_100068FFC((int)v56, v53 | (unint64_t)(v59 << 32), (char)v54, v61);

  char v62 = v60[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled];
  v60[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v62 & 1) == 0)
  {
    char v63 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v60) + 0x98LL))();
    int v64 = v60;
    sub_10006753C(v63);
  }

  uint64_t v65 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_artworkView;
  int v66 = *(void **)&v60[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_artworkView];
  ArtworkView.roundedCorners.setter(0LL);
  id v67 = [v66 layer];
  [v67 addSublayer:*(void *)&v60[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_artworkBorderLayer]];

  uint64_t v68 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_ordinalLabel;
  id v69 = *(id *)&v60[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_ordinalLabel];
  sub_100012AD8(1);

  id v70 = [v60 contentView];
  [v70 addSubview:*(void *)&v60[v68]];

  uint64_t v71 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_titleLabel;
  id v72 = *(id *)&v60[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_titleLabel];
  sub_100012AD8(1);

  id v73 = [v60 contentView];
  [v73 addSubview:*(void *)&v60[v71]];

  uint64_t v74 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_subtitleLabel;
  id v75 = *(id *)&v60[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_subtitleLabel];
  sub_100012AD8(1);

  id v76 = [v60 contentView];
  [v76 addSubview:*(void *)&v60[v74]];

  uint64_t v77 = OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_priceLabel;
  id v78 = *(id *)&v60[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_priceLabel];
  sub_100012AD8(1);

  id v79 = [v60 contentView];
  [v79 addSubview:*(void *)&v60[v77]];

  id v80 = [v60 contentView];
  id v81 = *(id *)&v60[v65];
  [v80 addSubview:v81];

  return v60;
}

id sub_1000C12E4()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  __chkstk_darwin(v3);
  id v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for SmallLockupLayout(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)&double v12 = __chkstk_darwin(v10).n128_u64[0];
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v64.receiver = v1;
  v64.super_class = ObjectType;
  objc_msgSendSuper2(&v64, "layoutSubviews", v12);
  if (v1[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_isShowingSeeAll] == 1)
  {
    uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_titleLabel];
    id v16 = [v1 contentView];
    [v16 frame];

    *(void *)&double v17 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
    double v19 = v18;
    double v21 = v20;
    double v23 = v22;
    if (qword_1002E0A60 != -1) {
      swift_once(&qword_1002E0A60, sub_1000C0A34);
    }
    return objc_msgSend( v15,  "setFrame:",  sub_10000B354(v17, v19, v21, v23, *(double *)&xmmword_1002E7758, *((double *)&xmmword_1002E7758 + 1)));
  }

  else
  {
    id v46 = v14;
    uint64_t v47 = v11;
    uint64_t v48 = v10;
    if (qword_1002E0A68 != -1) {
      swift_once(&qword_1002E0A68, sub_1000C0A48);
    }
    NSDirectionalEdgeInsets.insetsWithLayoutDirection(in:)( v1,  *(double *)&qword_1002E7778,  unk_1002E7780,  *(double *)&qword_1002E7788,  unk_1002E7790);
    id v25 = [v1 contentView];
    [v25 frame];

    CGRect.subtracting(insets:)([v1 layoutMargins]);
    *(void *)&double v27 = CGRect.subtracting(insets:)(v26).n128_u64[0];
    double v29 = v28;
    double v31 = v30;
    double v33 = v32;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))( v9,  &v1[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_metrics],  v6);
    uint64_t v34 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_artworkView];
    v63[3] = type metadata accessor for ArtworkView(0LL);
    v63[4] = protocol witness table for UIView;
    v63[0] = v34;
    uint64_t v35 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_ordinalLabel];
    uint64_t v61 = type metadata accessor for DynamicTypeLabel(0LL);
    char v62 = &protocol witness table for UILabel;
    uint64_t v60 = v35;
    uint64_t v59 = 0LL;
    id v36 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_titleLabel];
    memset(v58, 0, sizeof(v58));
    v57[3] = v61;
    v57[4] = &protocol witness table for UILabel;
    v56[4] = &protocol witness table for UILabel;
    v57[0] = v36;
    id v37 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_subtitleLabel];
    void v56[3] = v61;
    v56[0] = v37;
    uint64_t v55 = 0LL;
    memset(v54, 0, sizeof(v54));
    uint64_t v53 = 0LL;
    memset(v52, 0, sizeof(v52));
    id v38 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_priceLabel];
    v51[3] = v61;
    v51[4] = protocol witness table for UIView;
    v51[0] = v38;
    id v39 = v34;
    id v40 = v35;
    id v41 = v36;
    id v42 = v37;
    id v43 = v38;
    __n128 v44 = v46;
    SmallLockupLayout.init(metrics:artworkView:ordinalText:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:)( v9,  v63,  &v60,  v58,  v57,  v56,  v54,  v52,  v51);
    SmallLockupLayout.placeChildren(relativeTo:in:)(v1, v27, v29, v31, v33);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v50);
    [v39 bounds];
    CGRectGetMaxX(v65);
    if (qword_1002E0F68 != -1) {
      swift_once(&qword_1002E0F68, sub_10017CBB0);
    }
    objc_msgSend(v39, "bounds", v46);
    CGRectGetHeight(v66);
    __n128 v45 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_artworkBorderLayer];
    [v39 bounds];
    [v45 setFrame:CGRect.withLayoutDirection(in:relativeTo:)(v39)];
    return (id)(*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v44, v48);
  }

void sub_1000C17F8(char a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_titleLabel];
  if (qword_1002E0A50 != -1) {
    swift_once(&qword_1002E0A50, sub_1000C0828);
  }
  sub_10000A634(v4, (uint64_t)qword_1002E7728);
  uint64_t v24 = v1;
  Conditional.evaluate(with:)(&v25, &v24, v4);
  id v9 = v25;
  [v8 setTextColor:v25];

  uint64_t v10 = *(void **)&v2[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_ordinalLabel];
  id v11 = [v8 textColor];
  [v10 setTextColor:v11];

  double v12 = *(void **)&v2[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_subtitleLabel];
  if (qword_1002E0A58 != -1) {
    swift_once(&qword_1002E0A58, sub_1000C090C);
  }
  sub_10000A634(v4, (uint64_t)qword_1002E7740);
  uint64_t v24 = v2;
  Conditional.evaluate(with:)(&v25, &v24, v4);
  id v13 = v25;
  [v12 setTextColor:v25];

  id v14 = [v2 contentView];
  if (qword_1002E0F98 != -1) {
    swift_once(&qword_1002E0F98, sub_10017CF58);
  }
  uint64_t v15 = sub_1000038E8((uint64_t *)&unk_1002E1D50);
  sub_10000A634(v15, (uint64_t)qword_1002F52E0);
  sub_1001B46F0(a1, (uint64_t)v7);
  uint64_t v24 = v2;
  Conditional.evaluate(with:)(&v25, &v24, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v16 = v25;
  [v14 setBackgroundColor:v25];

  id v17 = [v2 contentView];
  id v18 = [v17 layer];

  if (qword_1002E0F90 != -1) {
    swift_once(&qword_1002E0F90, sub_10017CE74);
  }
  sub_10000A634(v4, (uint64_t)qword_1002F52C8);
  uint64_t v24 = v2;
  Conditional.evaluate(with:)(&v25, &v24, v4);
  id v19 = v25;
  id v20 = [v25 CGColor];

  [v18 setBorderColor:v20];
  double v21 = *(void **)&v2[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_artworkBorderLayer];
  type metadata accessor for ArtworkView(0LL);
  double v22 = (void *)static ArtworkView.iconBorderColor.getter();
  id v23 = [v22 CGColor];

  [v21 setBackgroundColor:v23];
}

uint64_t sub_1000C1E74()
{
  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v3, "prepareForReuse");
  int v1 = v0[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_isShowingSeeAll];
  v0[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_isShowingSeeAll] = 0;
  if (v1 == 1) {
    [*(id *)&v0[OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_titleLabel] setTextAlignment:4];
  }
  return ArtworkView.image.setter(0LL);
}

void sub_1000C1F6C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_metrics;
  uint64_t v2 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
}

uint64_t sub_1000C20C8()
{
  return type metadata accessor for SmallLockupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for SmallLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E77C0;
  if (!qword_1002E77C0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmallLockupCollectionViewCell);
  }
  return result;
}

void sub_1000C210C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    _OWORD v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t v4 = type metadata accessor for SmallLockupLayout.Metrics(319LL);
    if (v5 <= 0x3F)
    {
      void v6[5] = *(void *)(v4 - 8) + 64LL;
      v6[6] = &unk_10023B9A0;
      void v6[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
      void v6[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256LL, 9LL, v6, a1 + 472);
    }
  }

id sub_1000C21B4()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_artworkView);
}

uint64_t sub_1000C21C4()
{
  if (qword_1002E0A48 != -1) {
    swift_once(&qword_1002E0A48, sub_1000C0278);
  }
  uint64_t v0 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  sub_10000A634(v0, (uint64_t)qword_1002F3F00);
  return SmallLockupLayout.Metrics.artworkSize.getter();
}

void sub_1000C2224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_artworkView);
  uint64_t v5 = type metadata accessor for ArtworkView(0LL);
  uint64_t v6 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  id v7 = v4;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v7, a2, v5, v6);
}

uint64_t sub_1000C22B4(uint64_t a1)
{
  uint64_t result = sub_100004288( (unint64_t *)&unk_1002E77D8,  type metadata accessor for SmallLockupCollectionViewCell,  (uint64_t)&unk_10023B9B8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000C22F0()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_isShowingSeeAll);
}

uint64_t sub_1000C2300(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for SmallLockupLayout(0LL);
  uint64_t v9 = sub_100004288( &qword_1002E77E8,  (uint64_t (*)(uint64_t))&type metadata accessor for SmallLockupLayout,  (uint64_t)&protocol conformance descriptor for SmallLockupLayout);
  return dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(a1, a2, v8, v9, a3, a4);
}

uint64_t sub_1000C239C()
{
  return 16LL;
}

__n128 sub_1000C23A8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000C23B8()
{
  return 16LL;
}

__n128 sub_1000C23C4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000C23D0()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (UIFontTextStyle *)((char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v4, qword_1002E77F0);
  sub_10000A634(v4, (uint64_t)qword_1002E77F0);
  UIFontTextStyle *v3 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, void, uint64_t))(v1 + 104))( v3,  enum case for FontSource.textStyle(_:),  v0);
  int64_t v9[3] = v0;
  _OWORD v9[4] = &protocol witness table for FontSource;
  uint64_t v5 = sub_10000DD7C(v9);
  (*(void (**)(void *, UIFontTextStyle *, uint64_t))(v1 + 16))(v5, v3, v0);
  uint64_t v6 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v9, 24.0);
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v1 + 8))(v3, v0);
}

id sub_1000C24D8(int a1, int a2, int a3, int a4, int a5, id a6)
{
  return [a6 pageMarginInsets];
}

id sub_1000C2524(uint64_t *a1, __n128 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  id v7 = *(void **)&v4[OBJC_IVAR____TtC8AppStore32LargeStoryCardCollectionViewCell_mediaView];
  uint64_t v8 = TodayCard.media.getter(a2);
  uint64_t v9 = TodayCard.heroMedia.getter();
  sub_10006E1D4(v8, v9, 2, (uint64_t)v13);
  sub_1001BCD84(v13, a4);
  sub_100034DA4(v13);
  [v7 setNeedsLayout];
  if (qword_1002E0D00 != -1) {
    swift_once(&qword_1002E0D00, sub_1001421AC);
  }
  uint64_t v10 = type metadata accessor for ArticleCardTextView.Config(0LL);
  uint64_t v11 = sub_10000A634(v10, (uint64_t)qword_1002F4A08);
  sub_10012DBAC(v6, v11, 2);
  return [v4 setNeedsLayout];
}

void sub_1000C2624()
{
}

void sub_1000C2684()
{
}

uint64_t sub_1000C26B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0A70 != -1) {
    swift_once(&qword_1002E0A70, sub_1000C23D0);
  }
  uint64_t v8 = type metadata accessor for StaticDimension(0LL);
  uint64_t v9 = sub_10000A634(v8, (uint64_t)qword_1002E77F0);
  static Dimensions.defaultRoundingRule.getter(v9);
  double v10 = AnyDimension.value(in:rounded:)(a3, v7, v8, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(void *)&v10;
}

double sub_1000C27A4@<D0>(id a1@<X4>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  if (a4 - v8 - v9 < 0.0) {
    double v10 = 0.0;
  }
  else {
    double v10 = a4 - v8 - v9;
  }
  [a1 pageMarginInsets];
  *(void *)a3 = v11;
  *(void *)(a3 + 8) = v12;
  *(void *)(a3 + swift_weakDestroy(v0 + 16) = v13;
  *(void *)(a3 + 24) = v14;
  *(double *)(a3 + 32) = v10;
  double result = 560.0;
  *(_OWORD *)(a3 + 40) = xmmword_10023BA60;
  *(void *)(a3 + 56) = 0LL;
  *(_BYTE *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = a2;
  return result;
}

uint64_t sub_1000C2830()
{
  return sub_100004288( (unint64_t *)&qword_1002E8BD0,  (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard,  (uint64_t)&protocol conformance descriptor for TodayCard);
}

uint64_t sub_1000C285C()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v4, qword_1002F3F60);
  sub_10000A634(v4, (uint64_t)qword_1002F3F60);
  if (qword_1002E0688 != -1) {
    swift_once(&qword_1002E0688, sub_100072BD8);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_10000A634(v6, (uint64_t)qword_1002F2EF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v3, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  void v11[3] = v0;
  _OWORD v11[4] = &protocol witness table for FontSource;
  double v8 = sub_10000DD7C(v11);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  StaticDimension.init(_:scaledLike:)(v11, 88.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

char *sub_1000C29AC(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v10);
  uint64_t v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v13);
  uint64_t v15 = &v36[-v14];
  id v16 = &v4[OBJC_IVAR____TtC8AppStore33ProductPageLinkCollectionViewCell_itemLayoutContext];
  uint64_t v17 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v16, 1LL, 1LL, v17);
  uint64_t v18 = OBJC_IVAR____TtC8AppStore33ProductPageLinkCollectionViewCell_button;
  uint64_t v19 = type metadata accessor for DynamicTypeButton(0LL);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v19);
  double v21 = v4;
  *(void *)&v4[v18] = [ObjCClassFromMetadata buttonWithType:1];

  v38.receiver = v21;
  v38.super_class = ObjectType;
  double v22 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v23 = OBJC_IVAR____TtC8AppStore33ProductPageLinkCollectionViewCell_button;
  uint64_t v24 = *(void *)&v22[OBJC_IVAR____TtC8AppStore33ProductPageLinkCollectionViewCell_button];
  uint64_t v25 = qword_1002E0688;
  double v27 = v22;
  if (v25 != -1) {
    swift_once(&qword_1002E0688, sub_100072BD8);
  }
  uint64_t v28 = type metadata accessor for FontUseCase(0LL, v26);
  uint64_t v29 = sub_10000A634(v28, (uint64_t)qword_1002F2EF0);
  uint64_t v30 = *(void *)(v28 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v30 + 16))(v15, v29, v28);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v30 + 56))(v15, 0LL, 1LL, v28);
  uint64_t v31 = v24 + OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase;
  swift_beginAccess(v24 + OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase, v37, 0LL, 0LL);
  sub_100013460(v31, (uint64_t)v12);
  swift_beginAccess(v31, v36, 33LL, 0LL);
  sub_10000DBBC((uint64_t)v15, v31);
  swift_endAccess(v36);
  sub_10010EA18((uint64_t)v12);
  sub_1000077E0((uint64_t)v15, &qword_1002E25C0);
  sub_1000077E0((uint64_t)v12, &qword_1002E25C0);
  id v32 = [v27 contentView];
  objc_msgSend( v32,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  id v33 = [v27 contentView];
  id v34 = *(id *)&v22[v23];
  [v33 addSubview:v34];

  return v27;
}

id sub_1000C2D7C()
{
  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v7, "layoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore33ProductPageLinkCollectionViewCell_button];
  id v2 = [v0 contentView];
  [v2 frame];

  CGRect.subtracting(insets:)([v0 layoutMargins]);
  objc_msgSend(v1, "sizeThatFits:", v3, v4);
  id v5 = [v0 contentView];
  [v5 frame];

  return objc_msgSend(v1, "setFrame:", CGRect.subtracting(insets:)(objc_msgSend(v0, "layoutMargins")).n128_f64[0]);
}

uint64_t sub_1000C2F4C()
{
  return type metadata accessor for ProductPageLinkCollectionViewCell(0LL);
}

uint64_t type metadata accessor for ProductPageLinkCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E7878;
  if (!qword_1002E7878) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductPageLinkCollectionViewCell);
  }
  return result;
}

void sub_1000C2F90(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 80);
  }

double sub_1000C3008()
{
  qword_1002F3FC8 = (uint64_t)&type metadata for Double;
  unk_1002F3FD0 = &protocol witness table for Double;
  qword_1002F3FB0 = 0x4038000000000000LL;
  double result = 0.0;
  xmmword_1002F3F90 = xmmword_10023BB10;
  unk_1002F3FA0 = xmmword_10023BB10;
  return result;
}

char *sub_1000C303C(double a1, double a2, double a3, double a4)
{
  double v9 = &v4[OBJC_IVAR____TtC8AppStore29AppShowcaseCollectionViewCell_itemLayoutContext];
  uint64_t v10 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v9, 1LL, 1LL, v10);
  uint64_t v11 = OBJC_IVAR____TtC8AppStore29AppShowcaseCollectionViewCell_mediaCollectionView;
  id v12 = objc_allocWithZone((Class)type metadata accessor for ProductMediaCollectionView());
  uint64_t v13 = v4;
  *(void *)&v4[v11] = [v12 init];
  uint64_t v14 = OBJC_IVAR____TtC8AppStore29AppShowcaseCollectionViewCell_lockupView;
  *(void *)&v13[v14] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for SmallLockupView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);

  v20.receiver = v13;
  v20.super_class = (Class)type metadata accessor for AppShowcaseCollectionViewCell(0LL);
  uint64_t v15 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  id v16 = [v15 contentView];
  [v16 addSubview:*(void *)&v15[OBJC_IVAR____TtC8AppStore29AppShowcaseCollectionViewCell_lockupView]];

  id v17 = [v15 contentView];
  id v18 = *(id *)&v15[OBJC_IVAR____TtC8AppStore29AppShowcaseCollectionViewCell_mediaCollectionView];
  [v17 addSubview:v18];

  return v15;
}

void *sub_1000C31F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v18[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (objc_class *)type metadata accessor for AppShowcaseCollectionViewCell(0LL);
  v20.receiver = v0;
  v20.super_class = v6;
  objc_msgSendSuper2(&v20, "layoutSubviews");
  if (qword_1002E0A80 != -1) {
    swift_once(&qword_1002E0A80, sub_1000C3008);
  }
  sub_100054CD8(&xmmword_1002F3F90, v19);
  objc_super v7 = *(void **)&v0[OBJC_IVAR____TtC8AppStore29AppShowcaseCollectionViewCell_lockupView];
  _OWORD v18[3] = type metadata accessor for SmallLockupView();
  _OWORD v18[4] = protocol witness table for UIView;
  v18[0] = v7;
  double v8 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29AppShowcaseCollectionViewCell_mediaCollectionView];
  _BYTE v18[8] = type metadata accessor for ProductMediaCollectionView();
  v18[9] = protocol witness table for UIView;
  _OWORD v18[5] = v8;
  id v9 = v7;
  id v10 = v8;
  id v11 = [v1 contentView];
  [v11 frame];

  *(void *)&CGFloat v12 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  TVAppShowcaseLayout.placeChildren(relativeTo:in:)((uint64_t)v1, v12, v13, v14, v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_1000C3A4C(v18);
}

void sub_1000C33C8(double a1, uint64_t a2, uint64_t a3)
{
  if (qword_1002E09F8 != -1) {
    swift_once(&qword_1002E09F8, sub_1000B1648);
  }
  swift_getObjectType(a3);
  sub_1000B2870(&xmmword_1002F3D20, a3, a1);
}

double sub_1000C3460(double a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  double v7 = dbl_10023BB50[a5];
  double v8 = PageTraitEnvironment.pageContentSize.getter();
  AspectRatio.height(fromWidth:)((v8 + (v7 + -1.0) * -40.0) / v7);
  return a1;
}

void sub_1000C34F0()
{
}

id sub_1000C352C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppShowcaseCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000C35A8()
{
  return type metadata accessor for AppShowcaseCollectionViewCell(0LL);
}

uint64_t type metadata accessor for AppShowcaseCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E78B8;
  if (!qword_1002E78B8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppShowcaseCollectionViewCell);
  }
  return result;
}

double sub_1000C35EC(uint64_t a1, uint64_t a2, int a3, double a4, double a5)
{
  int v30 = a3;
  uint64_t v32 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v31 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  id v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = type metadata accessor for AspectRatio(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  double v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = swift_allocObject(&unk_10028A6E8, 24LL, 7LL);
  *(void *)(v15 + swift_weakDestroy(v0 + 16) = a2;
  uint64_t v16 = type metadata accessor for LayoutViewPlaceholder(0LL);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  swift_unknownObjectRetain(a2);
  uint64_t v17 = LayoutViewPlaceholder.init(measureWith:)(sub_1000C3960, v15);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  unint64_t v20 = (v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v21 = swift_allocObject(&unk_10028A710, v20 + 9, v18 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v12 + 32))(v21 + v19, v14, v11);
  unint64_t v22 = v21 + v20;
  *(void *)unint64_t v22 = a2;
  *(_BYTE *)(v22 + 8) = v30;
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  swift_unknownObjectRetain(a2);
  uint64_t v23 = LayoutViewPlaceholder.init(measureWith:)(sub_1000C39DC, v21);
  if (qword_1002E0A80 != -1) {
    swift_once(&qword_1002E0A80, sub_1000C3008);
  }
  sub_100054CD8(&xmmword_1002F3F90, v41);
  void v37[3] = v16;
  _BYTE v37[4] = protocol witness table for LayoutViewPlaceholder;
  v37[0] = v17;
  uint64_t v39 = v16;
  id v40 = protocol witness table for LayoutViewPlaceholder;
  v38[0] = v23;
  sub_1000112B0(v37, v16);
  swift_retain(v17);
  swift_retain(v23);
  dispatch thunk of Measurable.measurements(fitting:in:)( a2,  v16,  protocol witness table for LayoutViewPlaceholder[1],  a4,  a5);
  uint64_t v24 = v39;
  uint64_t v25 = v40;
  sub_1000112B0(v38, v39);
  dispatch thunk of Measurable.measurements(fitting:in:)(a2, v24, v25[1], a4, a5);
  sub_100054CD8(v41, &v33);
  uint64_t v26 = v35;
  uint64_t v27 = v36;
  sub_1000112B0(v34, v35);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v26, v27);
  AnyDimension.value(in:rounded:)(a2, v10, v26, v27);
  (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v10, v32);
  _s8AppStore17PillOverlayLayoutVwxx_0(v34);
  swift_release(v17);
  swift_release(v23);
  sub_1000C3A4C(v37);
  return a4;
}

uint64_t sub_1000C393C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000C3960(uint64_t a1, double a2)
{
}

uint64_t sub_1000C3968()
{
  uint64_t v1 = type metadata accessor for AspectRatio(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 9, v5);
}

double sub_1000C39DC(uint64_t a1, double a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for AspectRatio(0LL) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_1000C3460(a2, a1, v2 + v6, *(void *)v7, *(_BYTE *)(v7 + 8));
}

void *sub_1000C3A4C(void *a1)
{
  return a1;
}

char *sub_1000C3A80(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_materialBackground;
  id v10 = objc_allocWithZone(&OBJC_CLASS___UIVisualEffectView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon1;
  uint64_t v13 = type metadata accessor for ArtworkView(0LL);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v13);
  *(void *)&v11[v12] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v15 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon2;
  *(void *)&v11[v15] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v16 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon3;
  *(void *)&v11[v16] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v17 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon4;
  *(void *)&v11[v17] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v18 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_moreIndicator;
  *(void *)&v11[v18] = [objc_allocWithZone(UILabel) init];

  v46.receiver = v11;
  v46.super_class = (Class)type metadata accessor for CollectionLockupArtwork();
  id v19 = objc_msgSendSuper2(&v46, "initWithFrame:", a1, a2, a3, a4);
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  uint64_t v23 = (char *)v19;
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  uint64_t v24 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_materialBackground;
  uint64_t v25 = *(void **)&v23[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_materialBackground];
  uint64_t v26 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
  uint64_t v27 = swift_allocObject(v26, 40LL, 7LL);
  *(_OWORD *)(v27 + swift_weakDestroy(v0 + 16) = xmmword_100236BD0;
  uint64_t v28 = (void *)objc_opt_self(&OBJC_CLASS___UIBlurEffect);
  id v29 = v25;
  id v30 = [v28 effectWithStyle:1];
  *(void *)(v27 + 32) = v30;
  specialized Array._endMutation()(v30);
  sub_10000DFD4(0LL, &qword_1002E7930, &OBJC_CLASS___UIVisualEffect_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

  [*(id *)&v23[v24] _setContinuousCornerRadius:16.0];
  uint64_t v32 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon1;
  __int128 v33 = *(void **)&v23[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon1];
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  id v34 = v33;
  v35.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  ArtworkView.backgroundColor.setter(v35.super.isa);

  uint64_t v36 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon2;
  id v37 = *(id *)&v23[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon2];
  v38.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  ArtworkView.backgroundColor.setter(v38.super.isa);

  uint64_t v39 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon3;
  id v40 = *(id *)&v23[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon3];
  v41.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  ArtworkView.backgroundColor.setter(v41.super.isa);

  uint64_t v42 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon4;
  id v43 = *(id *)&v23[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon4];
  v44.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  ArtworkView.backgroundColor.setter(v44.super.isa);

  [v23 addSubview:*(void *)&v23[v24]];
  [v23 addSubview:*(void *)&v23[v32]];
  [v23 addSubview:*(void *)&v23[v36]];
  [v23 addSubview:*(void *)&v23[v39]];
  [v23 addSubview:*(void *)&v23[v42]];

  return v23;
}

uint64_t sub_1000C3E78()
{
  uint64_t v1 = (objc_class *)type metadata accessor for CollectionLockupArtwork();
  v18.receiver = v0;
  v18.super_class = v1;
  objc_msgSendSuper2(&v18, "layoutSubviews");
  [*(id *)&v0[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_materialBackground] setFrame:LayoutMarginsAware<>.layoutFrame.getter(v1).n128_f64[0]];
  [v0 frame];
  double v2 = CGRectGetWidth(v19) * 0.338709677;
  [v0 frame];
  CGFloat Width = CGRectGetWidth(v20);
  sub_1000C409C(v15, v2, Width * 0.338709677);
  uint64_t v4 = v16;
  uint64_t v5 = v17;
  sub_1000112B0(v15, v16);
  *(void *)&double v6 = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  id v13 = [v0 traitCollection];
  dispatch thunk of Placeable.place(at:with:)(v13, v4, v5, v6, v8, v10, v12);

  return _s8AppStore17PillOverlayLayoutVwxx_0(v15);
}

uint64_t sub_1000C409C@<X0>(void *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v4 = v3;
  int v52 = a1;
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v7 = type metadata accessor for HorizontalStack(0LL);
  uint64_t v50 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  double v12 = (char *)&v47 - v11;
  uint64_t v53 = type metadata accessor for VerticalStack(0LL);
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  double v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v54 = (char *)&v47 - v16;
  uint64_t v17 = *(void **)&v3[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_materialBackground];
  uint64_t v18 = type metadata accessor for CollectionLockupArtwork();
  [v17 setFrame:LayoutMarginsAware<>.layoutFrame.getter(v18).n128_f64[0]];
  VerticalStack.init(with:)(0LL, 0LL);
  HorizontalStack.init(with:)(0LL, 0LL);
  v56[0] = *(void *)&v3[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon1];
  uint64_t v19 = type metadata accessor for ArtworkView(0LL);
  uint64_t v48 = v19;
  LayoutView.withMeasurements(representing:)(v59, v19, protocol witness table for UIView, a2, a3);
  uint64_t v20 = v60;
  uint64_t v21 = v61;
  sub_1000112B0(v59, v60);
  Measurable.placeable.getter(v56, v20, v21[1]);
  uint64_t v22 = swift_allocObject(&unk_10028A738, 32LL, 7LL);
  uint64_t v23 = ObjectType;
  *(void *)(v22 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)(v22 + 24) = v23;
  uint64_t v24 = v4;
  HorizontalStack.adding(_:with:)(v56, sub_1000C4984, v22);
  swift_release(v22);
  _s8AppStore17PillOverlayLayoutVwxx_0(v56);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v50 + 8);
  v25(v9, v7);
  uint64_t v26 = v25;
  _s8AppStore17PillOverlayLayoutVwxx_0(v59);
  v59[0] = *(void *)&v24[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon2];
  LayoutView.withMeasurements(representing:)(v56, v19, protocol witness table for UIView, a2, a3);
  uint64_t v27 = v57;
  uint64_t v28 = v58;
  sub_1000112B0(v56, v57);
  Measurable.placeable.getter(v55, v27, v28[1]);
  uint64_t v60 = v7;
  uint64_t v61 = &protocol witness table for HorizontalStack;
  sub_10000DD7C(v59);
  HorizontalStack.adding(_:with:)(v55, 0LL, 0LL);
  _s8AppStore17PillOverlayLayoutVwxx_0(v55);
  v26(v12, v7);
  id v29 = v26;
  _s8AppStore17PillOverlayLayoutVwxx_0(v56);
  uint64_t v30 = swift_allocObject(&unk_10028A760, 32LL, 7LL);
  *(void *)(v30 + swift_weakDestroy(v0 + 16) = v24;
  *(void *)(v30 + 24) = v23;
  uint64_t v31 = v24;
  VerticalStack.adding(_:with:)(v59, sub_1000C4818, v30);
  __n128 v32 = swift_release(v30);
  uint64_t v51 = *(void *)(v51 + 8);
  ((void (*)(char *, uint64_t, __n128))v51)(v14, v53, v32);
  _s8AppStore17PillOverlayLayoutVwxx_0(v59);
  HorizontalStack.init(with:)(0LL, 0LL);
  v56[0] = *(void *)&v31[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon3];
  uint64_t v33 = v48;
  LayoutView.withMeasurements(representing:)(v59, v48, protocol witness table for UIView, a2, a3);
  uint64_t v34 = v60;
  UIColor v35 = v61;
  sub_1000112B0(v59, v60);
  Measurable.placeable.getter(v56, v34, v35[1]);
  uint64_t v36 = swift_allocObject(&unk_10028A788, 32LL, 7LL);
  *(void *)(v36 + swift_weakDestroy(v0 + 16) = v31;
  *(void *)(v36 + 24) = v23;
  id v37 = v31;
  HorizontalStack.adding(_:with:)(v56, sub_1000C4838, v36);
  swift_release(v36);
  _s8AppStore17PillOverlayLayoutVwxx_0(v56);
  v29(v9, v7);
  _s8AppStore17PillOverlayLayoutVwxx_0(v59);
  v56[0] = *(void *)&v37[OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon4];
  LayoutView.withMeasurements(representing:)(v59, v33, protocol witness table for UIView, a2, a3);
  uint64_t v38 = v60;
  uint64_t v39 = v61;
  sub_1000112B0(v59, v60);
  Measurable.placeable.getter(v55, v38, v39[1]);
  uint64_t v57 = v7;
  unsigned __int32 v58 = &protocol witness table for HorizontalStack;
  sub_10000DD7C(v56);
  HorizontalStack.adding(_:with:)(v55, 0LL, 0LL);
  _s8AppStore17PillOverlayLayoutVwxx_0(v55);
  v29(v12, v7);
  _s8AppStore17PillOverlayLayoutVwxx_0(v59);
  uint64_t v40 = v53;
  uint64_t v60 = v53;
  uint64_t v61 = &protocol witness table for VerticalStack;
  sub_10000DD7C(v59);
  UIColor v41 = v54;
  VerticalStack.adding(_:with:)(v56, 0LL, 0LL);
  ((void (*)(char *, uint64_t))v51)(v41, v40);
  uint64_t v42 = _s8AppStore17PillOverlayLayoutVwxx_0(v56);
  uint64_t v43 = static Center.Axis.both.getter(v42);
  uint64_t v44 = type metadata accessor for Center(0LL);
  __n128 v45 = v52;
  v52[3] = v44;
  v45[4] = &protocol witness table for Center;
  sub_10000DD7C(v45);
  return Center.init(_:filling:)(v59, v43);
}

uint64_t sub_1000C45E0(int a1, id a2, uint64_t a3, uint64_t (*a4)(double *))
{
  *(void *)&void v6[3] = &type metadata for CGFloat;
  *(void *)&_OWORD v6[4] = &protocol witness table for CGFloat;
  v6[0] = CGRectGetWidth(v7) * 0.064516129;
  return a4(v6);
}

id sub_1000C464C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollectionLockupArtwork();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CollectionLockupArtwork()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore23CollectionLockupArtwork);
}

double sub_1000C4714(uint64_t a1)
{
  uint64_t v2 = v7;
  uint64_t v3 = v8;
  sub_1000112B0(v6, v7);
  double v4 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v2, v3, 62.0, 62.0);
  _s8AppStore17PillOverlayLayoutVwxx_0(v6);
  return v4;
}

id sub_1000C47BC()
{
  return sub_1000C47E4();
}

id sub_1000C47E4()
{
  return objc_msgSend(v0, "setFrame:");
}

uint64_t sub_1000C47F4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000C4818(int a1)
{
  return sub_1000C45E0( a1,  *(id *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t (*)(double *))&VerticalStack.Properties.bottomSpacing.setter);
}

uint64_t sub_1000C4838(int a1)
{
  return sub_1000C45E0( a1,  *(id *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t (*)(double *))&HorizontalStack.Properties.trailingSpacing.setter);
}

void sub_1000C4858()
{
  uint64_t v1 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_materialBackground;
  *(void *)&v0[v1] = [objc_allocWithZone(UIVisualEffectView) init];
  uint64_t v2 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon1;
  uint64_t v3 = type metadata accessor for ArtworkView(0LL);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v3);
  *(void *)&v0[v2] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v5 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon2;
  *(void *)&v0[v5] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v6 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon3;
  *(void *)&v0[v6] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v7 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_icon4;
  *(void *)&v0[v7] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v8 = OBJC_IVAR____TtC8AppStore23CollectionLockupArtwork_moreIndicator;
  *(void *)&v0[v8] = [objc_allocWithZone(UILabel) init];

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/CollectionLockupArtwork.swift",  38LL,  2LL,  55LL,  0);
  __break(1u);
}

uint64_t sub_1000C4988()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000038E8(&qword_1002E62F0);
  uint64_t v3 = swift_allocObject(v2, 176LL, 7LL);
  *(_OWORD *)(v3 + swift_weakDestroy(v0 + 16) = xmmword_10023A960;
  uint64_t v4 = *(void *)&v0[qword_1002F37C0];
  uint64_t v5 = sub_100004288( &qword_1002E7E50,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  uint64_t v6 = type metadata accessor for GenericPageCollectionElementsObserver();
  uint64_t v7 = swift_allocObject(v6, 32LL, 7LL);
  *(void *)(v7 + 24) = 0LL;
  swift_unknownObjectWeakInit(v7 + 16, 0LL);
  *(void *)(v7 + 24) = v5;
  swift_unknownObjectWeakAssign(v8, v4);
  uint64_t v9 = sub_100004288( &qword_1002E62F8,  (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver,  (uint64_t)&unk_100237758);
  *(void *)(v3 + 32) = v7;
  *(void *)(v3 + 40) = v9;
  uint64_t v10 = type metadata accessor for SeeAllCapableCollectionElementsObserver();
  uint64_t v11 = swift_allocObject(v10, 16LL, 7LL);
  uint64_t v12 = sub_100004288( &qword_1002E6300,  (uint64_t (*)(uint64_t))type metadata accessor for SeeAllCapableCollectionElementsObserver,  (uint64_t)&unk_10023D148);
  *(void *)(v3 + 48) = v11;
  *(void *)(v3 + 56) = v12;
  uint64_t v13 = *(void **)&v0[qword_1002F37C8];
  swift_retain(v4);
  id v14 = v13;
  uint64_t v15 = ((uint64_t (*)(void))TimedMetricsPagePresenter.impressionsCalculator.getter)();
  uint64_t v16 = type metadata accessor for ComponentContainerCollectionElementsObserver(0LL);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  uint64_t v17 = v1;
  *(void *)(v3 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)( v4,  v5,  v1,  v14,  &protocol witness table for CompoundScrollObserver,  v15);
  *(void *)(v3 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  uint64_t v18 = sub_1000038E8(&qword_1002E7E58);
  uint64_t v19 = sub_10005E7D4(&qword_1002E7E60, &qword_1002E7E58, (uint64_t)&unk_10023AA78);
  uint64_t v20 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v38, v18, v19);
  uint64_t v21 = TimedMetricsPagePresenter.impressionsCalculator.getter(v20);
  uint64_t v22 = type metadata accessor for ImpressionsCollectionElementsObserver(0LL);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(void *)(v3 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)( v38,  v21);
  *(void *)(v3 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v38, v18, v19);
  uint64_t v23 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0LL);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(void *)(v3 + 96) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v38);
  *(void *)(v3 + 104) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  uint64_t v24 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0LL);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(void *)(v3 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(void *)(v3 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  uint64_t v25 = *(void *)&v17[qword_1002F37D8];
  uint64_t v26 = sub_100004288( &qword_1002E7E68,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  uint64_t v27 = type metadata accessor for TVSelectionHandlerCollectionElementsObserver(0LL);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  swift_retain(v4);
  __n128 v28 = swift_retain(v25);
  *(void *)(v3 + 128) = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)( v4,  v26,  v5,  v25,  v28);
  *(void *)(v3 + 136) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  uint64_t v29 = type metadata accessor for FocusExtensionCollectionElementsObserver();
  uint64_t v30 = swift_allocObject(v29, 16LL, 7LL);
  uint64_t v31 = sub_100004288( &qword_1002E6308,  (uint64_t (*)(uint64_t))type metadata accessor for FocusExtensionCollectionElementsObserver,  (uint64_t)&unk_10024285C);
  *(void *)(v3 + 144) = v30;
  *(void *)(v3 + 152) = v31;
  uint64_t v32 = type metadata accessor for AutomationCollectionElementsObserver(0LL);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  *(void *)(v3 + 160) = AutomationCollectionElementsObserver.init()();
  *(void *)(v3 + 168) = &protocol witness table for AutomationCollectionElementsObserver;
  uint64_t v33 = type metadata accessor for CompoundCollectionElementsObserver(0LL);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  uint64_t v34 = CompoundCollectionElementsObserver.init(children:)(v3);
  uint64_t v35 = *(void *)&v17[qword_1002E61A0];
  if (v35)
  {
    sub_100004288( &qword_1002E6310,  (uint64_t (*)(uint64_t))type metadata accessor for FocusAvoidanceCollectionElementsObserver,  (uint64_t)&unk_10023BFF8);
    __n128 v36 = swift_retain(v35);
    CompoundCollectionElementsObserver.addChild(_:)(v36);
    swift_release(v35);
  }

  return v34;
}

uint64_t sub_1000C4D78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000038E8(&qword_1002E62F0);
  uint64_t v3 = swift_allocObject(v2, 176LL, 7LL);
  *(_OWORD *)(v3 + swift_weakDestroy(v0 + 16) = xmmword_10023A960;
  uint64_t v4 = *(void *)&v0[qword_1002F37C0];
  uint64_t v5 = sub_100004288( &qword_1002E7E30,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  uint64_t v6 = type metadata accessor for GenericPageCollectionElementsObserver();
  uint64_t v7 = swift_allocObject(v6, 32LL, 7LL);
  *(void *)(v7 + 24) = 0LL;
  swift_unknownObjectWeakInit(v7 + 16, 0LL);
  *(void *)(v7 + 24) = v5;
  swift_unknownObjectWeakAssign(v8, v4);
  uint64_t v9 = sub_100004288( &qword_1002E62F8,  (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver,  (uint64_t)&unk_100237758);
  *(void *)(v3 + 32) = v7;
  *(void *)(v3 + 40) = v9;
  uint64_t v10 = type metadata accessor for SeeAllCapableCollectionElementsObserver();
  uint64_t v11 = swift_allocObject(v10, 16LL, 7LL);
  uint64_t v12 = sub_100004288( &qword_1002E6300,  (uint64_t (*)(uint64_t))type metadata accessor for SeeAllCapableCollectionElementsObserver,  (uint64_t)&unk_10023D148);
  *(void *)(v3 + 48) = v11;
  *(void *)(v3 + 56) = v12;
  uint64_t v13 = *(void **)&v0[qword_1002F37C8];
  swift_retain(v4);
  id v14 = v13;
  uint64_t v15 = TimedMetricsPagePresenter.impressionsCalculator.getter(v14);
  uint64_t v16 = type metadata accessor for ComponentContainerCollectionElementsObserver(0LL);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  uint64_t v17 = v1;
  *(void *)(v3 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)( v4,  v5,  v1,  v14,  &protocol witness table for CompoundScrollObserver,  v15);
  *(void *)(v3 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  uint64_t v18 = sub_1000038E8(&qword_1002E7E38);
  uint64_t v19 = sub_10005E7D4(&qword_1002E7E40, &qword_1002E7E38, (uint64_t)&unk_10023AA78);
  uint64_t v20 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v38, v18, v19);
  uint64_t v21 = TimedMetricsPagePresenter.impressionsCalculator.getter(v20);
  uint64_t v22 = type metadata accessor for ImpressionsCollectionElementsObserver(0LL);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(void *)(v3 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)( v38,  v21);
  *(void *)(v3 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v38, v18, v19);
  uint64_t v23 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0LL);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(void *)(v3 + 96) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v38);
  *(void *)(v3 + 104) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  uint64_t v24 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0LL);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(void *)(v3 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(void *)(v3 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  uint64_t v25 = *(void *)&v17[qword_1002F37D8];
  uint64_t v26 = sub_100004288( &qword_1002E7E48,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  uint64_t v27 = type metadata accessor for TVSelectionHandlerCollectionElementsObserver(0LL);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  swift_retain(v4);
  __n128 v28 = swift_retain(v25);
  *(void *)(v3 + 128) = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)( v4,  v26,  v5,  v25,  v28);
  *(void *)(v3 + 136) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  uint64_t v29 = type metadata accessor for FocusExtensionCollectionElementsObserver();
  uint64_t v30 = swift_allocObject(v29, 16LL, 7LL);
  uint64_t v31 = sub_100004288( &qword_1002E6308,  (uint64_t (*)(uint64_t))type metadata accessor for FocusExtensionCollectionElementsObserver,  (uint64_t)&unk_10024285C);
  *(void *)(v3 + 144) = v30;
  *(void *)(v3 + 152) = v31;
  uint64_t v32 = type metadata accessor for AutomationCollectionElementsObserver(0LL);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  *(void *)(v3 + 160) = AutomationCollectionElementsObserver.init()();
  *(void *)(v3 + 168) = &protocol witness table for AutomationCollectionElementsObserver;
  uint64_t v33 = type metadata accessor for CompoundCollectionElementsObserver(0LL);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  uint64_t v34 = CompoundCollectionElementsObserver.init(children:)(v3);
  uint64_t v35 = *(void *)&v17[qword_1002E61A0];
  if (v35)
  {
    sub_100004288( &qword_1002E6310,  (uint64_t (*)(uint64_t))type metadata accessor for FocusAvoidanceCollectionElementsObserver,  (uint64_t)&unk_10023BFF8);
    __n128 v36 = swift_retain(v35);
    CompoundCollectionElementsObserver.addChild(_:)(v36);
    swift_release(v35);
  }

  return v34;
}

uint64_t sub_1000C5168()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000038E8(&qword_1002E62F0);
  uint64_t v3 = swift_allocObject(v2, 176LL, 7LL);
  *(_OWORD *)(v3 + swift_weakDestroy(v0 + 16) = xmmword_10023A960;
  uint64_t v4 = *(void *)&v0[qword_1002F37C0];
  uint64_t v5 = sub_100004288( &qword_1002E7E10,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  uint64_t v6 = type metadata accessor for GenericPageCollectionElementsObserver();
  uint64_t v7 = swift_allocObject(v6, 32LL, 7LL);
  *(void *)(v7 + 24) = 0LL;
  swift_unknownObjectWeakInit(v7 + 16, 0LL);
  *(void *)(v7 + 24) = v5;
  swift_unknownObjectWeakAssign(v8, v4);
  uint64_t v9 = sub_100004288( &qword_1002E62F8,  (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver,  (uint64_t)&unk_100237758);
  *(void *)(v3 + 32) = v7;
  *(void *)(v3 + 40) = v9;
  uint64_t v10 = type metadata accessor for SeeAllCapableCollectionElementsObserver();
  uint64_t v11 = swift_allocObject(v10, 16LL, 7LL);
  uint64_t v12 = sub_100004288( &qword_1002E6300,  (uint64_t (*)(uint64_t))type metadata accessor for SeeAllCapableCollectionElementsObserver,  (uint64_t)&unk_10023D148);
  *(void *)(v3 + 48) = v11;
  *(void *)(v3 + 56) = v12;
  uint64_t v13 = *(void **)&v0[qword_1002F37C8];
  swift_retain(v4);
  id v14 = v13;
  uint64_t v15 = TimedMetricsPagePresenter.impressionsCalculator.getter(v14);
  uint64_t v16 = type metadata accessor for ComponentContainerCollectionElementsObserver(0LL);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  uint64_t v17 = v1;
  *(void *)(v3 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)( v4,  v5,  v1,  v14,  &protocol witness table for CompoundScrollObserver,  v15);
  *(void *)(v3 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  uint64_t v18 = sub_1000038E8(&qword_1002E7E18);
  uint64_t v19 = sub_10005E7D4(&qword_1002E7E20, &qword_1002E7E18, (uint64_t)&unk_10023AA78);
  uint64_t v20 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v38, v18, v19);
  uint64_t v21 = TimedMetricsPagePresenter.impressionsCalculator.getter(v20);
  uint64_t v22 = type metadata accessor for ImpressionsCollectionElementsObserver(0LL);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(void *)(v3 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)( v38,  v21);
  *(void *)(v3 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v38, v18, v19);
  uint64_t v23 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0LL);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(void *)(v3 + 96) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v38);
  *(void *)(v3 + 104) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  uint64_t v24 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0LL);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(void *)(v3 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(void *)(v3 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  uint64_t v25 = *(void *)&v17[qword_1002F37D8];
  uint64_t v26 = sub_100004288( &qword_1002E7E28,  (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter,  (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  uint64_t v27 = type metadata accessor for TVSelectionHandlerCollectionElementsObserver(0LL);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  swift_retain(v4);
  __n128 v28 = swift_retain(v25);
  *(void *)(v3 + 128) = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)( v4,  v26,  v5,  v25,  v28);
  *(void *)(v3 + 136) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  uint64_t v29 = type metadata accessor for FocusExtensionCollectionElementsObserver();
  uint64_t v30 = swift_allocObject(v29, 16LL, 7LL);
  uint64_t v31 = sub_100004288( &qword_1002E6308,  (uint64_t (*)(uint64_t))type metadata accessor for FocusExtensionCollectionElementsObserver,  (uint64_t)&unk_10024285C);
  *(void *)(v3 + 144) = v30;
  *(void *)(v3 + 152) = v31;
  uint64_t v32 = type metadata accessor for AutomationCollectionElementsObserver(0LL);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  *(void *)(v3 + 160) = AutomationCollectionElementsObserver.init()();
  *(void *)(v3 + 168) = &protocol witness table for AutomationCollectionElementsObserver;
  uint64_t v33 = type metadata accessor for CompoundCollectionElementsObserver(0LL);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  uint64_t v34 = CompoundCollectionElementsObserver.init(children:)(v3);
  uint64_t v35 = *(void *)&v17[qword_1002E61A0];
  if (v35)
  {
    sub_100004288( &qword_1002E6310,  (uint64_t (*)(uint64_t))type metadata accessor for FocusAvoidanceCollectionElementsObserver,  (uint64_t)&unk_10023BFF8);
    __n128 v36 = swift_retain(v35);
    CompoundCollectionElementsObserver.addChild(_:)(v36);
    swift_release(v35);
  }

  return v34;
}

char *sub_1000C5558(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = qword_1002E7950;
  uint64_t v6 = type metadata accessor for HeroCarouselCollectionElementsObserver();
  uint64_t v7 = swift_allocObject(v6, 33LL, 7LL);
  swift_unknownObjectWeakInit(v7 + 16, 0LL);
  *(void *)(v7 + 24) = 0LL;
  *(_BYTE *)(v7 + 32) = 1;
  *(void *)&v2[v5] = v7;
  uint64_t v8 = qword_1002F3FF0;
  uint64_t v9 = qword_1002E0EF0;
  uint64_t v10 = v2;
  if (v9 != -1) {
    swift_once(&qword_1002E0EF0, sub_100170C78);
  }
  uint64_t v11 = type metadata accessor for TitleHeaderView.Style(0LL);
  uint64_t v12 = sub_10000A634(v11, (uint64_t)qword_1002F5108);
  sub_10000A64C(v12, (uint64_t)&v10[v8]);
  uint64_t v13 = type metadata accessor for ASKBagContract(0LL);
  uint64_t v14 = inject(_:from:)(v13, a2);
  char v15 = ASKBagContract.refreshArcadeEntitlementsOnLoadingArcadeView.getter();
  swift_release(v14);
  v10[qword_1002E7938] = v15 & 1;
  uint64_t v16 = type metadata accessor for ArcadeSubscriptionManager(0LL);
  *(void *)&v10[qword_1002E7940] = inject(_:from:)(v16, a2);
  uint64_t v17 = type metadata accessor for ArcadePageHeaderCollectionElementsObserver(0LL);
  uint64_t v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  swift_weakInit(v18 + 16, 0LL);
  swift_unknownObjectWeakInit( v18 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeHeaderView,  0LL);
  uint64_t v19 = v18 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeTitleEffectUpdateSubscription;
  uint64_t v20 = sub_1000038E8((uint64_t *)&unk_1002E44F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v19, 1LL, 1LL, v20);
  swift_weakAssign(v18 + 16, a1);
  __n128 v21 = swift_retain(a1);
  ArcadeDiffablePagePresenter.titleEffect.getter(v21);
  swift_release(a1);
  *(void *)&v10[qword_1002E7948] = v18;

  return sub_1001F489C(a1, a2);
}

void sub_1000C5734()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for EntitlementRefeshCondition(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v13.receiver = v0;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, "viewDidLoad", v4);
  id v7 = [v0 view];
  if (!v7) {
    goto LABEL_7;
  }
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for InsetCollectionViewControllerContentView();
  uint64_t v10 = swift_dynamicCastClass(v8, v9);
  if (!v10)
  {

LABEL_7:
    __break(1u);
    return;
  }

  *(_BYTE *)(v10
           + OBJC_IVAR____TtC8AppStoreP33_F9B20E6387F6F627D5761E6B0A83FE5540InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = 0;

  if ((*((_BYTE *)v0 + qword_1002E7938) & 1) != 0)
  {
    *uint64_t v6 = 1;
    (*(void (**)(_BYTE *, void, uint64_t))(v3 + 104))( v6,  enum case for EntitlementRefeshCondition.ifCacheIsExpiredOrUnsubscribed(_:),  v2);
    uint64_t v11 = ArcadeSubscriptionManager.updateStateFromEntitlements(refreshingCache:)(v6);
    __n128 v12 = swift_release(v11);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v3 + 8))(v6, v2, v12);
  }

void sub_1000C5868(void *a1)
{
  id v1 = a1;
  sub_1000C5734();
}

id sub_1000C589C(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1);
  return objc_msgSendSuper2(&v5, "viewDidAppear:", a3);
}

uint64_t sub_1000C58E0()
{
  uint64_t v1 = sub_1000038E8(&qword_1002E62F0);
  uint64_t v2 = swift_allocObject(v1, 80LL, 7LL);
  *(_OWORD *)(v2 + swift_weakDestroy(v0 + 16) = xmmword_100235590;
  uint64_t v3 = *(void *)(v0 + qword_1002E7948);
  uint64_t v4 = sub_100004288( &qword_1002E7E00,  type metadata accessor for ArcadePageHeaderCollectionElementsObserver,  (uint64_t)&unk_10023D2F8);
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  uint64_t v5 = *(void *)(v0 + qword_1002E7950);
  uint64_t v6 = sub_100004288( &qword_1002E7E08,  (uint64_t (*)(uint64_t))type metadata accessor for HeroCarouselCollectionElementsObserver,  (uint64_t)&unk_10023B2E0);
  *(void *)(v2 + 48) = v5;
  *(void *)(v2 + 56) = v6;
  swift_retain(v3);
  swift_retain(v5);
  *(void *)(v2 + 64) = sub_1000C5168();
  *(void *)(v2 + 72) = v7;
  uint64_t v8 = type metadata accessor for CompoundCollectionElementsObserver(0LL);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v2);
}

void sub_1000C59C0(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = a1;
  sub_1000AEC08(v8, v9);
}

double sub_1000C5A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + qword_1002E7950);
  if ((*(_BYTE *)(v4 + 32) & 1) == 0)
  {
    double result = *(double *)(v4 + 24);
    *(double *)(a4 + 8) = result;
  }

  return result;
}

unint64_t sub_1000C5A64(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PageGrid.HorizontalMargins(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for PageGrid.Direction(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  objc_super v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for PageGrid(0LL);
  uint64_t v53 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v54 = sub_100183A74();
  id v17 = [v2 title];
  if (!v17) {
    return v54;
  }
  uint64_t v18 = v17;
  uint64_t v52 = v14;
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  uint64_t v20 = v19;

  id v21 = [v3 tabBarController];
  if (v21)
  {
    swift_bridgeObjectRelease(v20);
    return v54;
  }

  uint64_t v23 = (*(uint64_t (**)(char *, void, uint64_t))(v11 + 104))( v13,  enum case for PageGrid.Direction.vertical(_:),  v10);
  static PageGrid.HorizontalMargins.pageMargins.getter(v23);
  static PageGrid.singleColumn(direction:containerSize:horizontalMargins:)(v13, v9, a1, a2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v24 = type metadata accessor for ArcadeHeaderView(0LL);
  uint64_t v25 = (uint64_t)v3 + qword_1002F3FF0;
  double v26 = PageGrid.horizontalMargins.getter(v24);
  sub_10020A8CC(0LL, 0LL, 0LL, v51, v20, 0LL, 0LL, 0LL, a1, a2, 0.0, 0.0, v26, v27, v28, v29, 1LL, v25, v3);
  double v31 = v30;
  swift_bridgeObjectRelease(v20);
  uint64_t v32 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
  id v33 = [v32 fractionalWidthDimension:1.0];
  id v34 = [v32 absoluteDimension:v31];
  id v35 =  [(id)objc_opt_self(NSCollectionLayoutSize) sizeWithWidthDimension:v33 heightDimension:v34];

  id v36 = v35;
  static UICollectionReusableView.elementKind.getter();
  uint64_t v38 = v37;
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v38);
  id v40 =  objc_msgSend( (id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem),  "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:",  v36,  v39,  1,  0.0,  0.0);

  [v40 setExtendsBoundary:0];
  id v41 = v40;
  PageGrid.horizontalDirectionalMargins.getter();
  objc_msgSend(v41, "setContentInsets:");

  unint64_t v42 = v54;
  unint64_t v55 = v54;
  id v43 = v41;
  uint64_t v44 = swift_bridgeObjectRetain(v42);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
  unint64_t v46 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v45 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v46 >= v45 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1LL);
  }
  uint64_t v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v43);
  specialized Array._endMutation()(v47);
  unint64_t v48 = v55;

  __n128 v49 = swift_bridgeObjectRelease(v42);
  (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v16, v52, v49);
  return v48;
}

void sub_1000C5E54(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ArcadeHeaderView(0LL);
  uint64_t v9 = static UICollectionReusableView.elementKind.getter();
  if (v9 == a1 && v10 == a2)
  {
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    uint64_t v12 = v10;
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, a1, a2, 0LL);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) == 0)
    {
      sub_1001818E8(a1, a2, (uint64_t)a3);
      return;
    }
  }

  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v8);
  swift_bridgeObjectRetain(a2);
  uint64_t v15 = NSStringFromClass(ObjCClassFromMetadata);
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  uint64_t v18 = v17;

  uint64_t v19 = swift_allocObject(&unk_10028A7C8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v19 + 16, v4);
  a3[3] = sub_1000038E8(&qword_1002E7DF0);
  a3[4] = sub_10005E7D4( &qword_1002E7DF8,  &qword_1002E7DF0,  (uint64_t)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
  sub_10000DD7C(a3);
  ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)( a1,  a2,  v16,  v18,  sub_1000C6548,  v19,  v8);
}

void sub_1000C5FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = type metadata accessor for TitleHeaderView.Style(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = type metadata accessor for TitleEffect(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a5 += 16LL;
  swift_beginAccess(a5, v29, 0LL, 0LL);
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    uint64_t v15 = Strong;
    id v16 = [Strong tabBarController];

    if (!v16)
    {
      uint64_t v17 = qword_1002E7948;
      uint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong( *(void *)&v15[qword_1002E7948] + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeHeaderView);

      if (!v18)
      {
        swift_unknownObjectWeakAssign( *(void *)&v15[v17] + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeHeaderView,  a1);
        uint64_t v19 = *(void *)&v15[qword_1002F37C0];
        __n128 v20 = swift_retain(v19);
        ArcadeDiffablePagePresenter.titleEffect.getter(v20);
        swift_release(v19);
        sub_10003B884((uint64_t)v13, 0, 0LL, 1, 0LL);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      }

      id v21 = *(void **)(a1 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_titleLabel);
      [v21 setNumberOfLines:2];
      [v21 setAllowsDefaultTighteningForTruncation:1];
      uint64_t v22 = *(void *)&v15[qword_1002F37C0];
      __n128 v23 = swift_retain(v22);
      ArcadeDiffablePagePresenter.pageTitle.getter(v23);
      uint64_t v25 = v24;
      unint64_t v26 = swift_release(v22).n128_u64[0];
      if (v25)
      {
        NSString v27 = String._bridgeToObjectiveC()();
        unint64_t v26 = swift_bridgeObjectRelease(v25).n128_u64[0];
      }

      else
      {
        NSString v27 = 0LL;
      }

      objc_msgSend(v21, "setText:", v27, *(double *)&v26);

      sub_10000A64C((uint64_t)&v15[qword_1002F3FF0], (uint64_t)v9);
      sub_10003B48C((uint64_t)v9);
    }
  }

id sub_1000C620C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType(v1);
  uint64_t v5 = sub_1000038E8(&qword_1002E7DE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001808DC(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  LODWORD(a1) = enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:);
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v9 == (_DWORD)a1)
  {
    ArcadeDiffablePagePresenter.pageTitle.getter(v11);
    if (v12)
    {
      uint64_t v14 = v12;
      NSString v15 = String._bridgeToObjectiveC()();
      *(void *)&double v13 = swift_bridgeObjectRelease(v14).n128_u64[0];
    }

    else
    {
      NSString v15 = 0LL;
    }

    objc_msgSend(v2, "setTitle:", v15, v13);

    id result = [v2 view];
    if (result)
    {
      id v16 = result;
      [result bounds];
      double v18 = v17;
      double v20 = v19;

      uint64_t v21 = sub_100004288( &qword_1002E7DE8,  type metadata accessor for ArcadeDiffablePageViewController,  (uint64_t)&unk_10023AA78);
      return (id)ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(ObjectType, v21, v18, v20);
    }

    else
    {
      __break(1u);
    }
  }

  return result;
}

uint64_t sub_1000C63A8()
{
  swift_release(*(void *)(v0 + qword_1002E7948));
  swift_release(*(void *)(v0 + qword_1002E7950));
  return sub_10003C3D0(v0 + qword_1002F3FF0);
}

uint64_t sub_1000C63F4(uint64_t a1)
{
  return sub_10003C3D0(a1 + qword_1002F3FF0);
}

uint64_t type metadata accessor for ArcadeDiffablePageViewController(uint64_t a1)
{
  uint64_t result = qword_1002E7980;
  if (!qword_1002E7980) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadeDiffablePageViewController);
  }
  return result;
}

uint64_t sub_1000C6488(uint64_t a1)
{
  v4[0] = &unk_10023BC28;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for TitleHeaderView.Style(319LL);
  if (v3 <= 0x3F)
  {
    void v4[4] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_initClassMetadata2(a1, 256LL, 5LL, v4, a1 + 1016);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000C651C()
{
  return type metadata accessor for ArcadeDiffablePageViewController(0LL);
}

uint64_t sub_1000C6524()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000C6548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

double sub_1000C6550()
{
  uint64_t v0 = type metadata accessor for AspectRatio(0LL);
  sub_10000DC04(v0, qword_1002F3FF8);
  uint64_t v1 = sub_10000A634(v0, (uint64_t)qword_1002F3FF8);
  *(void *)&double result = AspectRatio.init(_:_:)(v1, 16.0).n128_u64[0];
  return result;
}

uint64_t sub_1000C65A0()
{
  uint64_t v0 = sub_1000038E8(&qword_1002E7EB8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for FontSource(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for AspectRatio(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  __n128 v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for BrickLayout.Metrics(0LL, v9);
  sub_10000DC04(v12, qword_1002F4010);
  v22[1] = sub_10000A634(v12, (uint64_t)qword_1002F4010);
  if (qword_1002E0A88 != -1) {
    swift_once(&qword_1002E0A88, sub_1000C6550);
  }
  uint64_t v13 = sub_10000A634(v7, (uint64_t)qword_1002F3FF8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v13, v7);
  v22[0] = v11;
  if (qword_1002E0780 != -1) {
    swift_once(&qword_1002E0780, sub_100072F64);
  }
  uint64_t v15 = type metadata accessor for FontUseCase(0LL, v14);
  uint64_t v16 = sub_10000A634(v15, (uint64_t)qword_1002F31D8);
  double v17 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16LL);
  v17(v6, v16, v15);
  uint64_t v18 = enum case for FontSource.useCase(_:);
  double v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v19(v6, enum case for FontSource.useCase(_:), v3);
  v24[3] = type metadata accessor for StaticDimension(0LL);
  v24[4] = &protocol witness table for StaticDimension;
  sub_10000DD7C(v24);
  uint64_t v23[3] = v3;
  v23[4] = &protocol witness table for FontSource;
  double v20 = sub_10000DD7C(v23);
  (*(void (**)(void *, char *, uint64_t))(v4 + 16))(v20, v6, v3);
  StaticDimension.init(_:scaledLike:)(v23, 37.0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v17(v2, v16, v15);
  v19(v2, v18, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0LL, 1LL, v3);
  return BrickLayout.Metrics.init(artworkAspectRatio:labelSpace:labelFontSource:isLabelFullWidth:numberOfLines:)( v22[0],  v24,  v2,  1LL,  1LL);
}

uint64_t sub_1000C683C()
{
  uint64_t v0 = sub_1000038E8(&qword_1002E7EB8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for AspectRatio(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for BrickLayout.Metrics(0LL, v5);
  sub_10000DC04(v8, qword_1002F4028);
  sub_10000A634(v8, (uint64_t)qword_1002F4028);
  if (qword_1002E0A88 != -1) {
    swift_once(&qword_1002E0A88, sub_1000C6550);
  }
  uint64_t v9 = sub_10000A634(v3, (uint64_t)qword_1002F3FF8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v9, v3);
  uint64_t v10 = type metadata accessor for FontSource(0LL);
  memset(v12, 0, sizeof(v12));
  uint64_t v13 = 0LL;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v2, 1LL, 1LL, v10);
  return BrickLayout.Metrics.init(artworkAspectRatio:labelSpace:labelFontSource:isLabelFullWidth:numberOfLines:)( v7,  v12,  v2,  0LL,  2LL);
}

char *sub_1000C69A0(double a1, double a2, double a3, double a4)
{
  __n128 v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for CornerStyle(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = &v5[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_itemLayoutContext];
  uint64_t v16 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  uint64_t v17 = OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView;
  id v18 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0LL));
  double v19 = v5;
  *(void *)&v5[v17] = objc_msgSend(v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v19[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell____lazy_storage___shortDescriptionLabel] = 0LL;
  double v20 = &v19[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText];
  *(void *)double v20 = 0LL;
  *((void *)v20 + 1) = 0LL;

  v27.receiver = v19;
  v27.super_class = ObjectType;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v22 = OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for CornerStyle.continuous(_:), v11);
  __n128 v23 = v21;
  ArtworkView.setCorner(radius:style:)(v14, 12.0);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v24 = [v23 contentView];
  id v25 = *(id *)&v21[v22];
  [v24 addSubview:v25];

  return v23;
}

char *sub_1000C6BB4()
{
  uint64_t v1 = OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell____lazy_storage___shortDescriptionLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell____lazy_storage___shortDescriptionLabel);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell____lazy_storage___shortDescriptionLabel);
  }

  else
  {
    swift_unknownObjectWeakInit(v9, v0);
    __n128 v5 = sub_1000C6C34((uint64_t)v9, v4);
    swift_unknownObjectWeakDestroy(v9);
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    uint64_t v3 = v5;

    uint64_t v2 = 0LL;
  }

  id v7 = v2;
  return v3;
}

char *sub_1000C6C34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002E0780 != -1) {
    swift_once(&qword_1002E0780, sub_100072F64);
  }
  uint64_t v7 = sub_10000A634(v3, (uint64_t)qword_1002F31D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v8 = sub_100011F1C((uint64_t)v6, 1LL, 0LL, 1, 0);
  uint64_t v9 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v10 = v8;
  id v11 = [v9 whiteColor];
  [v10 setTextColor:v11];

  id v12 = objc_allocWithZone(&OBJC_CLASS___UIColor);
  uint64_t v13 = v10;
  id v14 = [v12 initWithWhite:0.0 alpha:1.0];
  [v13 setShadowColor:v14];

  objc_msgSend(v13, "setShadowOffset:", 0.0, 0.0);
  [v13 setShadowBlur:3.0];
  [v13 setTextAlignment:1];
  [v13 setEnablesMarqueeWhenAncestorFocused:1];
  [v13 setClipsToBounds:0];
  [v13 setAlpha:0.0];
  swift_beginAccess(a1, v20, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    uint64_t v16 = Strong;
    id v17 = [Strong contentView];

    [v17 addSubview:v13];
  }

  return v13;
}

uint64_t sub_1000C6E8C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = &v2[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText];
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText + 8];
  if (!a2)
  {
    if (!v4) {
      return result;
    }
    goto LABEL_10;
  }

  if (!v4
    || (*(void *)v3 == result ? (BOOL v5 = v4 == a2) : (BOOL v5 = 0),
        !v5
     && (double result = _stringCompareWithSmolCheck(_:_:expecting:)(result, a2, *(void *)v3, v4, 0LL), (result & 1) == 0)))
  {
LABEL_10:
    uint64_t v6 = sub_1000C6BB4();
    uint64_t v8 = *((void *)v3 + 1);
    if (v8)
    {
      swift_bridgeObjectRetain(*((void *)v3 + 1));
      NSString v9 = String._bridgeToObjectiveC()();
      *(void *)&double v7 = swift_bridgeObjectRelease(v8).n128_u64[0];
    }

    else
    {
      NSString v9 = 0LL;
    }

    objc_msgSend(v6, "setText:", v9, v7);

    uint64_t v10 = sub_1000C6BB4();
    uint64_t v11 = *(void *)v3;
    uint64_t v12 = *((void *)v3 + 1);
    swift_bridgeObjectRetain(v12);
    LOBYTE(v11) = static String.isNilOrEmpty(_:)(v11, v12);
    objc_msgSend(v10, "setHidden:", v11 & 1, swift_bridgeObjectRelease(v12).n128_f64[0]);

    return (uint64_t)[v2 setNeedsLayout];
  }

  return result;
}

uint64_t sub_1000C6FA8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  __n128 v3 = __chkstk_darwin(v2);
  BOOL v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for BrickLayout.Metrics(0LL, v3);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for BrickLayout(0LL, v8);
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)&double v13 = __chkstk_darwin(v11).n128_u64[0];
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v36.receiver = v0;
  v36.super_class = ObjectType;
  objc_msgSendSuper2(&v36, "layoutSubviews", v13);
  uint64_t v16 = *(void *)&v0[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText];
  uint64_t v17 = *(void *)&v0[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText + 8];
  swift_bridgeObjectRetain(v17);
  LOBYTE(vswift_unknownObjectWeakDestroy(v0 + 16) = static String.isNilOrEmpty(_:)(v16, v17);
  swift_bridgeObjectRelease(v17);
  if ((v16 & 1) != 0)
  {
    if (qword_1002E0A98 != -1) {
      swift_once(&qword_1002E0A98, sub_1000C683C);
    }
    uint64_t v18 = sub_10000A634(v6, (uint64_t)qword_1002F4028);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v18, v6);
    double v19 = *(void **)&v0[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView];
    uint64_t v34 = type metadata accessor for ArtworkView(0LL);
    id v35 = protocol witness table for UIView;
    uint64_t v32 = 0LL;
    id v33 = v19;
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    id v20 = v19;
  }

  else
  {
    if (qword_1002E0A90 != -1) {
      swift_once(&qword_1002E0A90, sub_1000C65A0);
    }
    uint64_t v21 = sub_10000A634(v6, (uint64_t)qword_1002F4010);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v21, v6);
    uint64_t v22 = *(void **)&v0[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView];
    uint64_t v34 = type metadata accessor for ArtworkView(0LL);
    id v35 = protocol witness table for UIView;
    id v33 = v22;
    id v23 = v22;
    id v24 = sub_1000C6BB4();
    *((void *)&v31 + 1) = type metadata accessor for DynamicTypeLabel(0LL);
    uint64_t v32 = &protocol witness table for UILabel;
    *(void *)&__int128 v30 = v24;
  }

  BrickLayout.init(metrics:artworkView:labelView:)(v10, &v33, &v30);
  id v25 = [v0 contentView];
  [v25 frame];

  __n128 v26 = CGRect.subtracting(insets:)([v0 layoutMargins]);
  BrickLayout.placeChildren(relativeTo:in:)(v0, v26);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_1000C72D0()
{
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v5, "prepareForReuse");
  uint64_t v1 = &v0[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText + 8];
  *(void *)uint64_t v1 = 0LL;
  *((void *)v1 + 1) = 0LL;
  sub_1000C6E8C(v2, v3);
  swift_bridgeObjectRelease(v3);
  return ArtworkView.image.setter(0LL);
}

double sub_1000C73D0()
{
  id v1 = [v0 frame];
  double v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  if ((ArtworkView.adjustsImageWhenAncestorFocused.getter(v1) & 1) != 0)
  {
    if ([v0 isFocused])
    {
      id v10 = [v0 bounds];
      CGFloat v12 = v11;
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      CGFloat v18 = v17;
      v27.origin.CGFloat x = ArtworkView.focusedFrame.getter(v10);
      v41.origin.CGFloat x = v12;
      v41.origin.CGFloat y = v14;
      v41.size.CGFloat width = v16;
      v41.size.CGFloat height = v18;
      CGRect v42 = CGRectUnion(v27, v41);
      v28.origin.CGFloat x = v12;
      v28.origin.CGFloat y = v14;
      v28.size.CGFloat width = v16;
      v28.size.CGFloat height = v18;
      CGFloat y = v42.origin.y;
      CGFloat x = v42.origin.x;
      CGFloat height = v42.size.height;
      CGFloat width = v42.size.width;
      if (!CGRectEqualToRect(v28, v42))
      {
        v29.origin.CGFloat x = v3;
        v29.origin.CGFloat y = v5;
        v29.size.CGFloat width = v7;
        v29.size.CGFloat height = v9;
        double MinX = CGRectGetMinX(v29);
        v30.origin.CGFloat y = y;
        v30.origin.CGFloat x = x;
        v30.size.CGFloat height = height;
        v30.size.CGFloat width = width;
        double v21 = MinX + CGRectGetMinX(v30);
        v31.origin.CGFloat x = v12;
        v31.origin.CGFloat y = v14;
        v31.size.CGFloat width = v16;
        v31.size.CGFloat height = v18;
        double v22 = v21 - CGRectGetMinX(v31);
        v32.origin.CGFloat x = v3;
        v32.origin.CGFloat y = v5;
        v32.size.CGFloat width = v7;
        v32.size.CGFloat height = v9;
        CGRectGetMinY(v32);
        v33.origin.CGFloat x = x;
        v33.origin.CGFloat y = y;
        v33.size.CGFloat height = height;
        v33.size.CGFloat width = width;
        CGRectGetMinY(v33);
        v34.origin.CGFloat x = v12;
        v34.origin.CGFloat y = v14;
        v34.size.CGFloat width = v16;
        v34.size.CGFloat height = v18;
        CGRectGetMinY(v34);
        v35.origin.CGFloat x = v3;
        v35.origin.CGFloat y = v5;
        v35.size.CGFloat width = v7;
        v35.size.CGFloat height = v9;
        CGRectGetWidth(v35);
        v36.origin.CGFloat x = x;
        v36.origin.CGFloat y = y;
        v36.size.CGFloat width = width;
        v36.size.CGFloat height = height;
        CGRectGetWidth(v36);
        v37.origin.CGFloat y = v14;
        v37.origin.CGFloat x = v12;
        v37.size.CGFloat width = v16;
        v37.size.CGFloat height = v18;
        CGRectGetWidth(v37);
        v38.origin.CGFloat x = v3;
        v38.origin.CGFloat y = v5;
        v38.size.CGFloat width = v7;
        v38.size.CGFloat height = v9;
        CGRectGetHeight(v38);
        v39.origin.CGFloat y = y;
        v39.origin.CGFloat x = x;
        v39.size.CGFloat width = width;
        v39.size.CGFloat height = height;
        CGRectGetHeight(v39);
        v40.origin.CGFloat x = v12;
        v40.origin.CGFloat y = v14;
        v40.size.CGFloat width = v16;
        v40.size.CGFloat height = v18;
        CGRectGetHeight(v40);
        return v22;
      }
    }
  }

  return v3;
}

void sub_1000C7630(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_100066F98(a1, a2);
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText];
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText + 8];
  swift_bridgeObjectRetain(v6);
  LOBYTE(v5) = static String.isNilOrEmpty(_:)(v5, v6);
  swift_bridgeObjectRelease(v6);
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = swift_allocObject(&unk_10028A858, 25LL, 7LL);
    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
    *(_BYTE *)(v7 + 24) = v4;
    if (a2)
    {
      double v8 = (void *)swift_allocObject(&unk_10028A880, 40LL, 7LL);
      __int128 v8[2] = sub_1000C7C1C;
      v8[3] = v7;
      void v8[4] = v2;
      aBlock[4] = sub_1000C7C9C;
      CGFloat v18 = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_100140110;
      aBlock[3] = &unk_10028A898;
      CGFloat v9 = _Block_copy(aBlock);
      id v10 = v18;
      double v11 = v2;
      id v12 = a2;
      swift_retain(v7);
      objc_msgSend(v12, "addCoordinatedAnimations:completion:", v9, 0, swift_release(v10).n128_f64[0]);
      swift_release(v7);
      _Block_release(v9);
    }

    else
    {
      double v13 = v2;
      CGFloat v14 = sub_1000C6BB4();
      CGFloat v16 = v14;
      double v15 = 1.0;
      if (!v4) {
        double v15 = 0.0;
      }
      [v14 setAlpha:v15];
      swift_release(v7);
    }
  }

uint64_t sub_1000C77CC(char a1)
{
  return ArtworkView.isHighlighted.setter(a1 == 2);
}

double sub_1000C7800()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for AspectRatio(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0A88 != -1) {
    swift_once(&qword_1002E0A88, sub_1000C6550);
  }
  uint64_t v6 = sub_10000A634(v2, (uint64_t)qword_1002F3FF8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  id v7 = [v1 contentView];
  [v7 frame];

  CGRect.subtracting(insets:)([v1 layoutMargins]);
  AspectRatio.height(fromWidth:)(v8);
  id v9 = [v1 contentView];
  [v9 frame];

  __n128 v10 = CGRect.subtracting(insets:)([v1 layoutMargins]);
  double v12 = v11;
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v10);
  return v12;
}

double sub_1000C7998()
{
  *(void *)&double result = swift_bridgeObjectRelease(*(void *)(v0
                                                           + OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText
                                                           + 8)).n128_u64[0];
  return result;
}

uint64_t sub_1000C7A44()
{
  return type metadata accessor for BrickCollectionViewCell(0LL);
}

uint64_t type metadata accessor for BrickCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E7EA0;
  if (!qword_1002E7EA0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BrickCollectionViewCell);
  }
  return result;
}

void sub_1000C7A88(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[2] = "\b";
    void v4[3] = &unk_10023BC80;
    swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 472);
  }

id sub_1000C7B14()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView);
}

void sub_1000C7B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView);
  uint64_t v5 = type metadata accessor for ArtworkView(0LL);
  uint64_t v6 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  id v7 = v4;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v7, a2, v5, v6);
}

uint64_t sub_1000C7BBC(uint64_t a1)
{
  uint64_t result = sub_100004288(&qword_1002E7EB0, type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_10023BC98);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000C7BF8()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

void sub_1000C7C1C()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v2 = sub_1000C6BB4();
  uint64_t v4 = v2;
  double v3 = 1.0;
  if (!v1) {
    double v3 = 0.0;
  }
  [v2 setAlpha:v3];
}

uint64_t sub_1000C7C70()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

id sub_1000C7C9C()
{
  int v1 = *(void **)(v0 + 32);
  (*(void (**)(void))(v0 + 16))();
  [v1 setNeedsLayout];
  return [v1 layoutIfNeeded];
}

uint64_t sub_1000C7CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000C7CF0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_1000C7CFC()
{
  unint64_t result = qword_1002E7EC0;
  if (!qword_1002E7EC0)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023BD48, &type metadata for AppStoreShowInAppSearchResultsIntent);
    atomic_store(result, (unint64_t *)&qword_1002E7EC0);
  }

  return result;
}

unint64_t sub_1000C7D44()
{
  unint64_t result = qword_1002E7EC8;
  if (!qword_1002E7EC8)
  {
    uint64_t v1 = type metadata accessor for StringSearchCriteria(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for StringSearchCriteria, v1);
    atomic_store(result, (unint64_t *)&qword_1002E7EC8);
  }

  return result;
}

uint64_t sub_1000C7D8C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource(0LL);
  sub_10000DC04(v0, qword_1002F4058);
  sub_10000A634(v0, (uint64_t)qword_1002F4058);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000010LL, 0x800000010024C410LL);
}

uint64_t sub_1000C7DEC()
{
  uint64_t v0 = sub_1000038E8(&qword_1002E7F28);
  uint64_t v1 = type metadata accessor for StringSearchScope(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = swift_allocObject(v0, v4 + *(void *)(v2 + 72), v3 | 7);
  *(_OWORD *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t))(v2 + 104))( v5 + v4,  enum case for StringSearchScope.general(_:),  v1);
  qword_1002F4070 = v5;
  return result;
}

uint64_t sub_1000C7E80(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  uint64_t v3 = type metadata accessor for MainActor(0LL);
  v2[12] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000C7EEC, v4, v5);
}

uint64_t sub_1000C7EEC()
{
  id v1 = [(id)objc_opt_self(UIApplication) sharedApplication];
  id v2 = [v1 delegate];

  if (!v2) {
    goto LABEL_6;
  }
  uint64_t v4 = type metadata accessor for AppDelegate();
  uint64_t v5 = swift_dynamicCastClass(v2, v4);
  if (!v5)
  {
    uint64_t v3 = swift_unknownObjectRelease(v2);
LABEL_6:
    static IntentResult.result<>()(v3);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = swift_allocObject(&unk_10028A930, 32LL, 7LL);
  *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *(void *)(v8 + 24) = v7;
  uint64_t v9 = v6 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_flowController;
  swift_beginAccess(v6 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_flowController, v0 + 56, 0LL, 0LL);
  sub_1000C8BE0(v9, v0 + 16);
  uint64_t v10 = *(void *)(v0 + 40);
  swift_unknownObjectRetain(v2);
  swift_retain(v7);
  if (v10)
  {
    uint64_t v11 = *(void *)(v0 + 88);
    swift_unknownObjectRetain(v2);
    swift_retain(v11);
    sub_1000A07C8(v0 + 16);
    sub_1000C8138(v6, v11);
    swift_unknownObjectRelease(v2);
    swift_release(v11);
  }

  else
  {
    sub_1000A07C8(v0 + 16);
    uint64_t v12 = swift_allocObject(&unk_10028A958, 32LL, 7LL);
    *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1000C8BD8;
    *(void *)(v12 + 24) = v8;
    uint64_t v13 = OBJC_IVAR____TtC8AppStore15BaseAppDelegate_pendingBootstrap;
    uint64_t v14 = *(void **)(v6 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_pendingBootstrap);
    __n128 v15 = swift_retain(v8);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14, v15);
    *(void *)(v6 + v13) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v14 = sub_100018848(0LL, v14[2] + 1LL, 1, v14);
      *(void *)(v6 + v13) = v14;
    }

    unint64_t v18 = v14[2];
    unint64_t v17 = v14[3];
    unint64_t v19 = v18 + 1;
    if (v18 >= v17 >> 1)
    {
      id v23 = sub_100018848((void *)(v17 > 1), v18 + 1, 1, v14);
      unint64_t v19 = v18 + 1;
      uint64_t v14 = v23;
      *(void *)(v6 + v13) = v23;
    }

    v14[2] = v19;
    id v20 = &v14[2 * v18];
    v20[4] = sub_10003C448;
    void v20[5] = v12;
  }

  swift_release(v8);
  static IntentResult.result<>()(v21);
  swift_unknownObjectRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1000C8138(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for NavigationTab(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  CGRect v29 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_window), "rootViewController", v9);
  if (v29)
  {
    uint64_t v12 = type metadata accessor for FlowTabBarController();
    uint64_t v13 = swift_dynamicCastClass(v29, v12);
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      __n128 v15 = v29;
      sub_1000881A8((uint64_t)&v30);

      if (v31)
      {
        sub_1000243BC(&v30, (uint64_t)v32);
        id v16 = [v14 presentedViewController];

        if (v16) {
          [v14 dismissViewControllerAnimated:0 completion:0];
        }
        uint64_t v17 = v33;
        uint64_t v28 = v34;
        CGRect v29 = sub_1000112B0(v32, v33);
        (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for NavigationTab.search(_:), v7);
        uint64_t v18 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
        uint64_t v19 = swift_allocObject(v18, 40LL, 7LL);
        *(_OWORD *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
        static ActionMetrics.notInstrumented.getter(v19);
        uint64_t v20 = swift_allocObject(&unk_10028A980, 32LL, 7LL);
        *(void *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
        *(void *)(v20 + 24) = a2;
        uint64_t v21 = type metadata accessor for LocalAction(0LL);
        swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
        double v22 = v15;
        __n128 v23 = swift_retain(a2);
        uint64_t v24 = LocalAction.init(title:artwork:actionMetrics:handler:)(0LL, 0LL, 0LL, v6, sub_1000C8C7C, v20, v23);
        *(void *)(v19 + 32) = v24;
        *(void *)&__int128 v30 = v19;
        specialized Array._endMutation()(v24);
        uint64_t v25 = v30;
        type metadata accessor for BaseObjectGraph(0LL);
        uint64_t v26 = static BaseObjectGraph.current.getter();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 24))(v11, 1LL, v25, v26, v17);

        swift_bridgeObjectRelease(v25);
        __n128 v27 = swift_release(v26);
        (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v27);
        _s8AppStore17PillOverlayLayoutVwxx_0(v32);
      }

      else
      {

        sub_1000A07C8((uint64_t)&v30);
      }
    }

    else
    {
    }
  }

void sub_1000C840C(void *a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v18 = objc_msgSend(a1, "selectedViewController", v4);
  if (v18)
  {
    uint64_t v7 = type metadata accessor for SearchViewController();
    uint64_t v8 = (void *)swift_dynamicCastClass(v18, v7);
    if (v8)
    {
      double v9 = v8;
      id v10 = [v8 searchController];
      id v11 = [v10 searchBar];

      uint64_t v12 = IntentParameter.wrappedValue.getter();
      StringSearchCriteria.term.getter(v12);
      uint64_t v14 = v13;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      NSString v15 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "setText:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

      id v16 = [v9 searchController];
      sub_100157B8C(v16);
    }

    else
    {
    }
  }

uint64_t sub_1000C859C@<X0>(void *a1@<X8>)
{
  if (qword_1002E0AA8 != -1) {
    swift_once(&qword_1002E0AA8, sub_1000C7DEC);
  }
  uint64_t v2 = qword_1002F4070;
  *a1 = qword_1002F4070;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_1000C85EC()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1000C860C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  IntentParameter.wrappedValue.setter(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1000C86A4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_1000C86EC;
}

void sub_1000C86EC(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32LL))(*a1, 0LL);
  free(v1);
}

unint64_t sub_1000C8720()
{
  unint64_t result = qword_1002E7ED0;
  if (!qword_1002E7ED0)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023BD70, &type metadata for AppStoreShowInAppSearchResultsIntent);
    atomic_store(result, (unint64_t *)&qword_1002E7ED0);
  }

  return result;
}

unint64_t sub_1000C8768()
{
  unint64_t result = qword_1002E7ED8;
  if (!qword_1002E7ED8)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023BE00, &type metadata for AppStoreShowInAppSearchResultsIntent);
    atomic_store(result, (unint64_t *)&qword_1002E7ED8);
  }

  return result;
}

unint64_t sub_1000C87B0()
{
  unint64_t result = qword_1002E7EE0;
  if (!qword_1002E7EE0)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023BE28, &type metadata for AppStoreShowInAppSearchResultsIntent);
    atomic_store(result, (unint64_t *)&qword_1002E7EE0);
  }

  return result;
}

uint64_t sub_1000C87F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10025CDA8, 1LL);
}

uint64_t sub_1000C8804(uint64_t a1, uint64_t a2)
{
  v3[0] = a2;
  v3[1] = sub_1000C8720();
  return swift_getOpaqueTypeConformance2( v3,  &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>,  1LL);
}

uint64_t sub_1000C8844@<X0>(uint64_t a1@<X8>)
{
  if (qword_1002E0AA0 != -1) {
    swift_once(&qword_1002E0AA0, sub_1000C7D8C);
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource(0LL);
  uint64_t v3 = sub_10000A634(v2, (uint64_t)qword_1002F4058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v3, v2);
}

uint64_t sub_1000C88B4(uint64_t a1)
{
  unint64_t v2 = sub_1000C8C84();
  return static ShowInAppSearchResultsIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_1000C88EC(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc(dword_1002E7F1C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000C8944;
  return sub_1000C7E80(a1, v4);
}

uint64_t sub_1000C8944()
{
  uint64_t v4 = *v0;
  uint64_t v1 = *(void *)(v4 + 16);
  uint64_t v2 = *v0;
  uint64_t v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000C898C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for InputConnectionBehavior(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000038E8(&qword_1002E7F00);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000038E8(&qword_1002E7F08);
  __chkstk_darwin(v9);
  id v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for LocalizedStringResource(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  NSString v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000038E8(&qword_1002E7F10);
  LocalizedStringResource.init(stringLiteral:)(0x6169726574697243LL, 0xE800000000000000LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1LL, 1LL, v12);
  uint64_t v16 = type metadata accessor for IntentDialog(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v8, 1LL, 1LL, v16);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for InputConnectionBehavior.default(_:),  v2);
  uint64_t result = IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)(v15, v11, v8, v5);
  *a1 = result;
  return result;
}

uint64_t sub_1000C8B4C(uint64_t a1)
{
  unint64_t v2 = sub_1000C8720();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for AppStoreShowInAppSearchResultsIntent()
{
  return &type metadata for AppStoreShowInAppSearchResultsIntent;
}

unint64_t sub_1000C8B88()
{
  unint64_t result = qword_1002E7EF0;
  if (!qword_1002E7EF0)
  {
    uint64_t v1 = sub_100003974(&qword_1002E7EF8);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for IntentResultContainer<A, B, C, D>, v1);
    atomic_store(result, (unint64_t *)&qword_1002E7EF0);
  }

  return result;
}

void sub_1000C8BD8()
{
}

uint64_t sub_1000C8BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E5E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C8C28()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000C8C50()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1000C8C7C()
{
}

unint64_t sub_1000C8C84()
{
  unint64_t result = qword_1002E7F20;
  if (!qword_1002E7F20)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023BCF0, &type metadata for AppStoreShowInAppSearchResultsIntent);
    atomic_store(result, (unint64_t *)&qword_1002E7F20);
  }

  return result;
}

uint64_t sub_1000C8CC8()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

Swift::Int sub_1000C8CEC()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    unint64_t v2 = (void *)Strong;
    Hasher._combine(_:)(1u);
    id v3 = v2;
    NSObject.hash(into:)(v5);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  return Hasher._finalize()();
}

Swift::Int sub_1000C8D60()
{
  return sub_1000C8CEC();
}

void sub_1000C8D80(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(*v1 + 16LL);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    Hasher._combine(_:)(1u);
    id v5 = v4;
    NSObject.hash(into:)(a1);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

Swift::Int sub_1000C8E0C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(*v0 + 16LL);
  if (Strong)
  {
    unint64_t v2 = (void *)Strong;
    Hasher._combine(_:)(1u);
    id v3 = v2;
    NSObject.hash(into:)(v5);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  return Hasher._finalize()();
}

BOOL sub_1000C8E80(uint64_t *a1, uint64_t *a2)
{
  return sub_1000C9AF0(*a1, *a2);
}

void sub_1000C8E8C(uint64_t a1)
{
}

void sub_1000C8EAC(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v6 = *(void **)(a1 + 8);
  id v5 = *(void **)(a1 + 16);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    id v9 = [v6 nextFocusedView];
    if (v9)
    {
      uint64_t v10 = v9;
      if ([v9 isDescendantOfView:v8])
      {
        uint64_t v11 = swift_unknownObjectWeakLoadStrong(a1);
        if (!v11
          || (uint64_t v12 = (void *)v11,
              sub_100016FF8(),
              id v13 = v10,
              char v14 = static NSObject.== infix(_:_:)(v13, v12),
              v13,
              v13,
              v12,
              (v14 & 1) == 0))
        {
          uint64_t v25 = (void *)v2[3];
          v2[3] = v10;
          id v26 = v10;

          id v27 = v26;
          id v28 = [v27 superview];
          if (v28)
          {
            objc_msgSend(v27, "jet_focusedFrame");
            objc_msgSend(v8, "convertRect:fromCoordinateSpace:", v28);
            uint64_t v30 = v29;
            uint64_t v32 = v31;
            uint64_t v34 = v33;
            uint64_t v36 = v35;
          }

          else
          {

            uint64_t v30 = 0LL;
            uint64_t v32 = 0LL;
            uint64_t v34 = 0LL;
            uint64_t v36 = 0LL;
          }

          v2[4] = v30;
          v2[5] = v32;
          v2[6] = v34;
          v2[7] = v36;
          *((_BYTE *)v2 + 64) = v28 == 0LL;
          uint64_t v37 = swift_allocObject(&unk_10028AAE0, 24LL, 7LL);
          swift_weakInit(v37 + 16, v2);
          uint64_t v38 = swift_allocObject(&unk_10028AB08, 32LL, 7LL);
          *(void *)(v38 + swift_unknownObjectWeakDestroy(v0 + 16) = v37;
          *(void *)(v38 + 24) = v8;
          uint64_t v50 = sub_1000C9CB4;
          uint64_t v51 = (void *)v38;
          unint64_t v46 = _NSConcreteStackBlock;
          uint64_t v47 = 1107296256LL;
          unint64_t v48 = sub_1000C962C;
          __n128 v49 = &unk_10028AB20;
          CGRect v39 = _Block_copy(&v46);
          CGRect v40 = v51;
          id v41 = v8;
          objc_msgSend(v5, "addCoordinatedFocusingAnimations:completion:", v39, 0, swift_release(v40).n128_f64[0]);

          _Block_release(v39);
          uint64_t v42 = swift_allocObject(&unk_10028AAE0, 24LL, 7LL);
          swift_weakInit(v42 + 16, v2);
          sub_1000C9CBC(a1, (uint64_t)&v46);
          uint64_t v43 = swift_allocObject(&unk_10028AB58, 56LL, 7LL);
          *(void *)(v43 + swift_unknownObjectWeakDestroy(v0 + 16) = v42;
          sub_1000C9D34((uint64_t)&v46, v43 + 24);
          *(void *)(v43 + 48) = v4;
          uint64_t v44 = v2[9];
          uint64_t v45 = v2[10];
          void v2[9] = sub_1000C9D70;
          v2[10] = v43;
          sub_10000A450(v44, v45);
          goto LABEL_10;
        }
      }
    }

    else
    {
      uint64_t v10 = v8;
    }
  }

  uint64_t v15 = v2[9];
  uint64_t v16 = v2[10];
  void v2[9] = 0LL;
  v2[10] = 0LL;
  sub_10000A450(v15, v16);
  uint64_t v17 = (void *)v2[3];
  v2[3] = 0LL;

  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_BYTE *)v2 + 64) = 1;
LABEL_10:
  id v18 = [v6 previouslyFocusedView];

  if (v18)
  {
    uint64_t v19 = swift_unknownObjectWeakLoadStrong(a1);
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      uint64_t v21 = (void *)swift_allocObject(&unk_10028AA90, 40LL, 7LL);
      v21[2] = v2;
      v21[3] = v20;
      v21[4] = v4;
      uint64_t v50 = sub_1000C9C2C;
      uint64_t v51 = v21;
      unint64_t v46 = _NSConcreteStackBlock;
      uint64_t v47 = 1107296256LL;
      unint64_t v48 = sub_1000C962C;
      __n128 v49 = &unk_10028AAA8;
      double v22 = _Block_copy(&v46);
      __n128 v23 = v51;
      swift_retain(v2);
      id v24 = v20;
      objc_msgSend(v5, "addCoordinatedUnfocusingAnimations:completion:", v22, 0, swift_release(v23).n128_f64[0]);
      _Block_release(v22);
    }
  }

double sub_1000C9278(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    uint64_t v7 = Strong;
    swift_beginAccess(v4, v14, 0LL, 0LL);
    uint64_t v8 = swift_weakLoadStrong(v4);
    if (v8)
    {
      __int128 v12 = *(_OWORD *)(v8 + 48);
      __int128 v13 = *(_OWORD *)(v8 + 32);
      char v9 = *(_BYTE *)(v8 + 64);
      swift_release(v8);
      __int128 v11 = v12;
      __int128 v10 = v13;
    }

    else
    {
      __int128 v10 = 0uLL;
      char v9 = 1;
      __int128 v11 = 0uLL;
    }

    v16[0] = v10;
    v16[1] = v11;
    char v17 = v9;
    sub_1000C9334((uint64_t)v16, a3, 2);
    *(void *)&double result = swift_release(v7).n128_u64[0];
  }

  return result;
}

void sub_1000C9334(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  if ((v4 & 0xC000000000000001LL) != 0)
  {
    if (v4 < 0) {
      uint64_t v5 = *(void *)(v3 + 16);
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)(v3 + 16));
    uint64_t v6 = __CocoaSet.makeIterator()(v5);
    uint64_t v7 = type metadata accessor for FocusAvoidanceCollectionElementsObserver.FocusAvoidingContainer();
    uint64_t v8 = sub_10000A4AC( &qword_1002E80C8,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for FocusAvoidanceCollectionElementsObserver.FocusAvoidingContainer,  (uint64_t)&unk_10023BF30);
    char v9 = Set.Iterator.init(_cocoa:)(v41, v6, v7, v8);
    uint64_t v4 = v41[0];
    uint64_t v10 = v41[1];
    uint64_t v11 = v41[2];
    uint64_t v12 = v41[3];
    unint64_t v13 = v41[4];
  }

  else
  {
    uint64_t v14 = -1LL << *(_BYTE *)(v4 + 32);
    uint64_t v10 = v4 + 56;
    uint64_t v11 = ~v14;
    uint64_t v15 = -v14;
    if (v15 < 64) {
      uint64_t v16 = ~(-1LL << v15);
    }
    else {
      uint64_t v16 = -1LL;
    }
    unint64_t v13 = v16 & *(void *)(v4 + 56);
    char v9 = (void *)swift_bridgeObjectRetain(v4);
    uint64_t v12 = 0LL;
  }

  int64_t v17 = (unint64_t)(v11 + 64) >> 6;
  while (v4 < 0)
  {
    uint64_t v21 = __CocoaSet.Iterator.next()(v9);
    if (!v21) {
      goto LABEL_44;
    }
    uint64_t v22 = v21;
    uint64_t v38 = v21;
    uint64_t v23 = type metadata accessor for FocusAvoidanceCollectionElementsObserver.FocusAvoidingContainer();
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v39, &v38, (char *)&type metadata for Swift.AnyObject + 8, v23, 7LL);
    uint64_t v24 = v39;
    swift_unknownObjectRelease(v22);
    uint64_t v20 = v12;
    uint64_t v18 = v13;
    if (!v24) {
      goto LABEL_44;
    }
LABEL_34:
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v24 + 16);
    if (Strong)
    {
      uint64_t v29 = (void *)Strong;
      uint64_t ObjectType = swift_getObjectType(Strong);
      uint64_t v31 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FocusAvoidanceCapableView);
      if (v31) {
        uint64_t v32 = v31;
      }
      else {
        uint64_t v32 = 0LL;
      }
      if (v31) {
        uint64_t v33 = v29;
      }
      else {
        uint64_t v33 = 0LL;
      }
      if (v33)
      {
        uint64_t v34 = swift_getObjectType(v33);
        sub_10004D210(a1, a2, (uint64_t)v42);
        sub_10004CF8C((uint64_t)v42, a3, v34, v32);
      }

      swift_release(v24);
    }

    else
    {
      swift_release(v24);
    }

    uint64_t v12 = v20;
    unint64_t v13 = v18;
  }

  if (v13)
  {
    uint64_t v18 = (v13 - 1) & v13;
    unint64_t v19 = __clz(__rbit64(v13)) | (v12 << 6);
    uint64_t v20 = v12;
LABEL_33:
    uint64_t v24 = *(void *)(*(void *)(v4 + 48) + 8 * v19);
    swift_retain(v24);
    if (!v24) {
      goto LABEL_44;
    }
    goto LABEL_34;
  }

  int64_t v25 = v12 + 1;
  if (!__OFADD__(v12, 1LL))
  {
    if (v25 >= v17) {
      goto LABEL_44;
    }
    unint64_t v26 = *(void *)(v10 + 8 * v25);
    uint64_t v20 = v12 + 1;
    if (!v26)
    {
      uint64_t v20 = v12 + 2;
      if (v12 + 2 >= v17) {
        goto LABEL_44;
      }
      unint64_t v26 = *(void *)(v10 + 8 * v20);
      if (!v26)
      {
        uint64_t v20 = v12 + 3;
        if (v12 + 3 >= v17) {
          goto LABEL_44;
        }
        unint64_t v26 = *(void *)(v10 + 8 * v20);
        if (!v26)
        {
          uint64_t v20 = v12 + 4;
          if (v12 + 4 >= v17) {
            goto LABEL_44;
          }
          unint64_t v26 = *(void *)(v10 + 8 * v20);
          if (!v26)
          {
            uint64_t v27 = v12 + 5;
            while (v17 != v27)
            {
              unint64_t v26 = *(void *)(v10 + 8 * v27++);
              if (v26)
              {
                uint64_t v20 = v27 - 1;
                goto LABEL_32;
              }
            }

LABEL_44:
            sub_100004D40(v4);
            return;
          }
        }
      }
    }

                    if (v139 == 0xD000000000000033LL && v62 == 0x800000010024E780LL
                      || (_stringCompareWithSmolCheck(_:_:expecting:)( 0xD000000000000033LL,  0x800000010024E780LL,  v139,  v62,  0LL) & 1) != 0)
                    {
                      char v63 = (unsigned int *)&enum case for ReferrerData.Kind.gameCenter(_:);
LABEL_50:
                      (*(void (**)(char *, void, uint64_t))(v149 + 104))(v13, *v63, v151);
                      objc_super v64 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
                      v64(v22, v146, v55);
                      swift_bridgeObjectRetain(a2);
                      AppStoreDeepLink.init(url:urlOptions:)(v22, a2);
                      CGRect v65 = v147;
                      CGRect v66 = *(void *)(v147 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_objectGraph);
                      if (v66)
                      {
                        id v67 = type metadata accessor for ASKBagContract(0LL);
                        swift_retain(v66);
                        BaseObjectGraph.optional<A>(_:)(&v154, v67, v67);
                        swift_release(v66);
                        CGRect v66 = v154;
                      }

                      static ResilientDeepLinkController.storeDeepLink(_:bag:)(v54, v66);
                      swift_release(v66);
                      uint64_t v133 = OBJC_IVAR____TtC8AppStore15BaseAppDelegate_isOnboardingFinished;
                      if (*(_BYTE *)(v65 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_isOnboardingFinished) == 1
                        && (uint64_t v68 = v65 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_flowController,
                            swift_beginAccess( v65 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_flowController,  &v152,  0LL,  0LL),  sub_1000C8BE0(v68, (uint64_t)&v154),  id v69 = *((void *)&v155 + 1),  sub_1000077E0((uint64_t)&v154, (uint64_t *)&unk_1002E5E90),  v69))
                      {
                        id v70 = *(void *)(v65 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_deepLinkController);
                        uint64_t v71 = v144;
                        id v72 = v135;
                        if (v70)
                        {
                          id v73 = *(unsigned __int8 *)(v147
                                                   + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_shouldAnimateDeepLinksWithCrossfade);
                          swift_retain(v70);
                          uint64_t v74 = v73;
                          CGRect v65 = v147;
                          sub_100167D7C(v146, v139, v71, v134, v72, (uint64_t)v13, v74);
                          swift_release(v70);
                        }

                        *(_BYTE *)(v65 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_shouldAnimateDeepLinksWithCrossfade) = 0;
                        swift_bridgeObjectRelease(v71);
                        id v75 = swift_bridgeObjectRelease(v72);
                        (*(void (**)(char *, uint64_t, __n128))(v136 + 8))(v54, v140, v75);
                        (*(void (**)(char *, uint64_t))(v149 + 8))(v13, v151);
                      }

                      else
                      {
                        id v76 = swift_allocObject(&unk_10028D708, 24LL, 7LL);
                        uint64_t v77 = swift_unknownObjectWeakInit(v76 + 16, v65);
                        id v78 = v137;
                        id v79 = v150;
                        ((void (*)(char *, uint64_t, uint64_t, __n128))v64)(v137, v146, v150, v77);
                        id v80 = v13;
                        id v81 = v149;
                        uint64_t v82 = *(void (**)(char *))(v149 + 16);
                        int v83 = v141;
                        uint64_t v132 = v80;
                        uint64_t v84 = v17;
                        char v85 = v151;
                        v82(v141);
                        v64(v142, (uint64_t)v78, v79);
                        ((void (*)(uint64_t, char *, uint64_t))v82)(v143, v83, v85);
                        char v86 = v148;
                        objc_super v87 = *(unsigned __int8 *)(v148 + 80);
                        uint64_t v88 = (v87 + 24) & ~v87;
                        char v89 = (v84 + v88 + 7) & 0xFFFFFFFFFFFFFFF8LL;
                        uint64_t v90 = (v89 + 23) & 0xFFFFFFFFFFFFFFF8LL;
                        uint64_t v91 = *(unsigned __int8 *)(v81 + 80);
                        char v92 = (v91 + v90 + 16) & ~v91;
                        char v93 = swift_allocObject(&unk_10028D730, v92 + v138, v87 | v91 | 7);
                        __int128 v146 = v76;
                        *(void *)(v93 + swift_unknownObjectWeakDestroy(v0 + 16) = v76;
                        (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v93 + v88, v78, v79);
                        char v94 = (void *)(v93 + v89);
                        uint64_t v95 = v147;
                        uint64_t v96 = v139;
                        uint64_t v97 = v144;
                        *char v94 = v139;
                        v94[1] = v97;
                        uint64_t v98 = (void *)(v93 + v90);
                        uint64_t v99 = v134;
                        uint64_t v100 = v135;
                        *uint64_t v98 = v134;
                        v98[1] = v100;
                        (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v93 + v92, v141, v151);
                        if (*(_BYTE *)(v95 + v133) == 1)
                        {
                          swift_bridgeObjectRetain(v100);
                          uint64_t v101 = v146;
                          swift_retain_n(v146, 2LL);
                          swift_bridgeObjectRetain(v97);
                          uint64_t v102 = v101;
                          uint64_t v103 = (uint64_t)v142;
                          uint64_t v104 = v143;
                          sub_1001262A8(v102, (uint64_t)v142, v96, v97, v99, v100, v143);
                          uint64_t v105 = v132;
                          uint64_t v106 = v97;
                        }

                        else
                        {
                          objc_super v107 = swift_allocObject(&unk_10028D758, 32LL, 7LL);
                          *(void *)(v107 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1001290A4;
                          *(void *)(v107 + 24) = v93;
                          uint64_t v108 = OBJC_IVAR____TtC8AppStore15BaseAppDelegate_pendingOnboarding;
                          __int128 v109 = *(void **)(v95 + OBJC_IVAR____TtC8AppStore15BaseAppDelegate_pendingOnboarding);
                          swift_bridgeObjectRetain(v100);
                          swift_retain(v93);
                          swift_retain_n(v146, 2LL);
                          swift_bridgeObjectRetain(v97);
                          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v109, v110);
                          uint64_t v112 = v95;
                          *(void *)(v95 + v108) = v109;
                          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                          {
                            __int128 v109 = sub_100018848(0LL, v109[2] + 1LL, 1, v109);
                            *(void *)(v95 + v108) = v109;
                          }

                          uint64_t v105 = v132;
                          uint64_t v104 = v143;
                          id v114 = v109[2];
                          char v113 = v109[3];
                          if (v114 >= v113 >> 1)
                          {
                            __int128 v109 = sub_100018848((void *)(v113 > 1), v114 + 1, 1, v109);
                            *(void *)(v112 + v108) = v109;
                          }

                          uint64_t v103 = (uint64_t)v142;
                          v109[2] = v114 + 1;
                          id v115 = &v109[2 * v114];
                          v115[4] = sub_10003C448;
                          v115[5] = v107;
                          id v79 = v150;
                          uint64_t v106 = v144;
                        }

                        id v116 = v146;
                        swift_release(v146);
                        NSString v117 = swift_release(v93);
                        (*(void (**)(uint64_t, uint64_t, __n128))(v148 + 8))(v103, v79, v117);
                        swift_bridgeObjectRelease(v100);
                        id v118 = swift_bridgeObjectRelease(v106);
                        id v119 = *(void (**)(uint64_t, uint64_t, __n128))(v149 + 8);
                        unint64_t v120 = v104;
                        unint64_t v121 = v151;
                        v119(v120, v151, v118);
                        (*(void (**)(char *, uint64_t))(v136 + 8))(v145, v140);
                        ((void (*)(char *, uint64_t))v119)(v105, v121);
                        swift_release(v116);
                      }

                      return 1LL;
                    }

      uint64_t v10 = v22;
    }

uint64_t sub_1000C962C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  uint64_t v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

void sub_1000C9674(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess(a1 + 16, &v19, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v6 = *(void **)(Strong + 24);
    if (v6 && (uint64_t v7 = swift_unknownObjectWeakLoadStrong(a2)) != 0)
    {
      uint64_t v8 = (void *)v7;
      id v9 = v6;
      if (([v9 isFocused] & 1) != 0
        && [v9 isDescendantOfView:v8])
      {
        id v9 = v9;
        id v10 = [v9 superview];
        if (v10)
        {
          objc_msgSend(v9, "jet_focusedFrame");
          objc_msgSend(v8, "convertRect:fromCoordinateSpace:", v10);
          uint64_t v12 = v11;
          uint64_t v14 = v13;
          uint64_t v16 = v15;
          uint64_t v18 = v17;
        }

        else
        {

          uint64_t v12 = 0LL;
          uint64_t v14 = 0LL;
          uint64_t v16 = 0LL;
          uint64_t v18 = 0LL;
        }

        v20[0] = v12;
        v20[1] = v14;
        v20[2] = v16;
        uint64_t v20[3] = v18;
        BOOL v21 = v10 == 0LL;
        sub_10004D4C0((uint64_t)v20, v5 + 32);
        sub_1000C9334((uint64_t)v20, v8, 0);
      }

      swift_release(v5);
    }

    else
    {
      swift_release(v5);
    }
  }

void sub_1000C97F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void **)(a2 + 24);
  uint64_t v5 = 0LL;
  if (!v4) {
    goto LABEL_5;
  }
  id v6 = v4;
  id v7 = [v6 superview];
  if (!v7)
  {

LABEL_5:
    char v16 = 1;
    uint64_t v11 = 0LL;
    uint64_t v13 = 0LL;
    uint64_t v15 = 0LL;
    goto LABEL_6;
  }

  uint64_t v8 = v7;
  objc_msgSend(v6, "jet_focusedFrame");
  objc_msgSend(a3, "convertRect:fromCoordinateSpace:", v8);
  uint64_t v5 = v9;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;

  char v16 = 0;
LABEL_6:
  v17[0] = v5;
  v17[1] = v11;
  v17[2] = v13;
  uint64_t v17[3] = v15;
  char v18 = v16;
  sub_1000C9334((uint64_t)v17, a3, 1);
}

double sub_1000C98E0()
{
  sub_10000A450(*(void *)(v0 + 72), *(void *)(v0 + 80));
  *(void *)&double result = swift_deallocClassInstance(v0, 88LL, 7LL).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for FocusAvoidanceCollectionElementsObserver()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore40FocusAvoidanceCollectionElementsObserver);
}

uint64_t type metadata accessor for FocusAvoidanceCollectionElementsObserver.FocusAvoidingContainer()
{
  return objc_opt_self(&OBJC_CLASS____TtCC8AppStore40FocusAvoidanceCollectionElementsObserverP33_7874C82BD604AE2F36486BC37AED2D5122FocusAvoidingContainer);
}

uint64_t sub_1000C9954()
{
  return sub_10000A4AC( &qword_1002E80B8,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for FocusAvoidanceCollectionElementsObserver.FocusAvoidingContainer,  (uint64_t)&unk_10023BF08);
}

uint64_t sub_1000C9984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CollectionElementsObserver.didDequeueCell(_:in:collectionView:asPartOf:)(a1, a2, a3, a4, *v4);
}

uint64_t sub_1000C998C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CollectionElementsObserver.willDisplayCell(_:in:collectionView:asPartOf:)(a1, a2, a3, a4, *v4);
}

uint64_t sub_1000C9994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CollectionElementsObserver.didEndDisplayingCell(_:in:collectionView:asPartOf:)(a1, a2, a3, a4, *v4);
}

uint64_t sub_1000C999C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CollectionElementsObserver.didSelectCell(_:in:collectionView:asPartOf:)(a1, a2, a3, a4, *v4);
}

uint64_t sub_1000C99A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CollectionElementsObserver.prefetchCells(in:collectionView:asPartOf:)(a1, a2, a3, *v3);
}

double sub_1000C99B0(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType(a1);
  else {
    uint64_t v5 = 0LL;
  }
  if (v5)
  {
    uint64_t v6 = type metadata accessor for FocusAvoidanceCollectionElementsObserver.FocusAvoidingContainer();
    uint64_t v7 = swift_allocObject(v6, 24LL, 7LL);
    swift_unknownObjectWeakInit(v7 + 16, 0LL);
    swift_unknownObjectWeakAssign(v8, a1);
    swift_beginAccess(v1 + 16, v10, 33LL, 0LL);
    uint64_t v9 = sub_100028530(v7);
    swift_endAccess(v10);
    swift_release(v7);
    *(void *)&double result = swift_release(v9).n128_u64[0];
  }

  return result;
}

uint64_t sub_1000C9A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return CollectionElementsObserver.willDisplayItemSupplementary(_:in:registeredWith:collectionView:asPartOf:)( a1,  a2,  a3,  a4,  a5,  *v5);
}

uint64_t sub_1000C9A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return CollectionElementsObserver.didEndDisplayingItemSupplementary(_:in:registeredWith:collectionView:asPartOf:)( a1,  a2,  a3,  a4,  a5,  *v5);
}

uint64_t sub_1000C9A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CollectionElementsObserver.willDisplayGlobalSupplementary(_:registeredWith:collectionView:asPartOf:)( a1,  a2,  a3,  a4,  *v4);
}

uint64_t sub_1000C9A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CollectionElementsObserver.didEndDisplayingGlobalSupplementary(_:registeredWith:collectionView:asPartOf:)( a1,  a2,  a3,  a4,  *v4);
}

uint64_t sub_1000C9A80()
{
  uint64_t v1 = *(void (**)(__n128))(v0 + 72);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 80);
    __n128 v3 = swift_retain(v2);
    v1(v3);
    return sub_10000A450((uint64_t)v1, v2);
  }

  return result;
}

uint64_t sub_1000C9AC4(uint64_t a1, uint64_t a2)
{
  return sub_10000A4AC( &qword_1002E80C0,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for FocusAvoidanceCollectionElementsObserver,  (uint64_t)&unk_10023BF70);
}

BOOL sub_1000C9AF0(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + 16);
  uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong(a2 + 16);
  uint64_t v5 = v4;
  if (Strong)
  {

    if (v5)
    {

      return Strong == v5;
    }

    return 0LL;
  }

  if (v4)
  {

    return 0LL;
  }

  return 1LL;
}

void sub_1000C9B54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType(a1);
  else {
    uint64_t v5 = 0LL;
  }
  if (v5)
  {
    uint64_t v6 = type metadata accessor for FocusAvoidanceCollectionElementsObserver.FocusAvoidingContainer();
    uint64_t v7 = swift_allocObject(v6, 24LL, 7LL);
    swift_unknownObjectWeakInit(v7 + 16, 0LL);
    swift_unknownObjectWeakAssign(v8, a1);
    swift_beginAccess(v2 + 16, v12, 33LL, 0LL);
    sub_100019AB0(&v13, v7);
    swift_endAccess(v12);
    swift_release(v13);
    uint64_t v9 = *(void (**)(__n128))(v2 + 72);
    if (v9)
    {
      uint64_t v10 = *(void *)(v2 + 80);
      __n128 v11 = swift_retain(v10);
      v9(v11);
      sub_10000A450((uint64_t)v9, v10);
    }
  }

uint64_t sub_1000C9C24()
{
  return sub_1000C9C7C(40LL);
}

void sub_1000C9C2C(uint64_t a1)
{
}

uint64_t sub_1000C9C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000C9C48(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000C9C50()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000C9C74()
{
  return sub_1000C9C7C(32LL);
}

uint64_t sub_1000C9C7C(uint64_t a1)
{
  return swift_deallocObject(v1, a1, 7LL);
}

double sub_1000C9CB4(uint64_t a1)
{
  return sub_1000C9278(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1000C9CBC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000C9CF8()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1000C9D34(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1000C9D70()
{
}

id sub_1000C9D88(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = *(void **)&a1[OBJC_IVAR____TtC8AppStore17ArticleHeaderView_mediaView];
  uint64_t v12 = TodayCard.media.getter(v11);
  uint64_t v13 = TodayCard.heroMedia.getter();
  sub_10006E1D4(v12, v13, 0, (uint64_t)v23);
  sub_1001BCD84(v23, a7);
  sub_100034DA4(v23);
  [v10 setNeedsLayout];
  if (qword_1002E0D08 != -1) {
    swift_once(&qword_1002E0D08, sub_100142594);
  }
  uint64_t v14 = type metadata accessor for ArticleCardTextView.Config(0LL);
  uint64_t v15 = sub_10000A634(v14, (uint64_t)qword_1002F4A20);
  id v16 = sub_10012DBAC(a5, v15, 0);
  double v17 = PageGrid.horizontalMargins.getter(v16);
  char v18 = &a1[OBJC_IVAR____TtC8AppStore17ArticleHeaderView_detailsHorizontalMargins];
  *(double *)char v18 = v17;
  *((void *)v18 + 1) = v19;
  *((void *)v18 + 2) = v20;
  *((void *)v18 + 3) = v21;
  [a1 setNeedsLayout];
  [a1 setNeedsLayout];
  return [a1 setNeedsLayout];
}

id sub_1000C9EE8(uint64_t a1)
{
  uint64_t v2 = v1;
  __n128 v3 = *(void **)&v1[OBJC_IVAR____TtC8AppStore15SmallLockupView_artworkView];
  uint64_t v4 = Lockup.icon.getter(a1);
  uint64_t v5 = v4;
  if (v4) {
    swift_release(v4);
  }
  id v6 = [v3 setHidden:v5 == 0];
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC8AppStore15SmallLockupView_titleLabel];
  Lockup.title.getter(v6);
  if (v8)
  {
    uint64_t v9 = v8;
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }

  else
  {
    NSString v10 = 0LL;
  }

  [v7 setText:v10];

  __n128 v11 = *(void **)&v1[OBJC_IVAR____TtC8AppStore15SmallLockupView_subtitleLabel];
  Lockup.subtitle.getter();
  if (v12)
  {
    uint64_t v13 = v12;
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
  }

  else
  {
    NSString v14 = 0LL;
  }

  [v11 setText:v14];

  id v15 = [v11 text];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    uint64_t v19 = v18;
  }

  else
  {
    uint64_t v17 = 0LL;
    uint64_t v19 = 0LL;
  }

  char v20 = static String.isNilOrEmpty(_:)(v17, v19);
  swift_bridgeObjectRelease(v19);
  [v11 setHidden:v20 & 1];
  return [v2 setNeedsLayout];
}

uint64_t sub_1000CA058(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v4 = a1;
    }
    else {
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v5 = sub_1000038E8((uint64_t *)&unk_1002E3880);
    uint64_t v6 = _bridgeCocoaArray<A>(_:)(v4, v5);
    swift_bridgeObjectRelease(a1);
    return v6;
  }

  else
  {
    uint64_t v2 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
    return a1;
  }

uint64_t sub_1000CA0D0(uint64_t a1)
{
  return sub_1000CA0F4( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  (uint64_t (*)(void))type metadata accessor for PrivacyCategoryView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
}

uint64_t sub_1000CA0F4( uint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t), uint64_t (*a3)(void), uint64_t a4, void (*a5)(void *, unint64_t *))
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v22 = a1;
    }
    else {
      uint64_t v22 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  __n128 v11 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (!v10) {
    return (uint64_t)v11;
  }
  uint64_t v27 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t result = ((uint64_t (*)(void, uint64_t, void))a2)(0LL, v10 & ~(v10 >> 63), 0LL);
  if ((v10 & 0x8000000000000000LL) == 0)
  {
    uint64_t v23 = a2;
    __n128 v11 = v27;
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      uint64_t v13 = 0LL;
      do
      {
        uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
        uint64_t v27 = v11;
        unint64_t v16 = v11[2];
        unint64_t v15 = v11[3];
        if (v16 >= v15 >> 1)
        {
          v23(v15 > 1, v16 + 1, 1LL);
          __n128 v11 = v27;
        }

        ++v13;
        uint64_t v25 = a3(0LL);
        uint64_t v26 = a4;
        v24[0] = v14;
        _OWORD v11[2] = v16 + 1;
        a5(v24, &v11[5 * v16 + 4]);
      }

      while (v10 != v13);
    }

    else
    {
      uint64_t v17 = (void **)(a1 + 32);
      do
      {
        uint64_t v18 = *v17;
        uint64_t v27 = v11;
        unint64_t v19 = v11[2];
        unint64_t v20 = v11[3];
        id v21 = v18;
        if (v19 >= v20 >> 1)
        {
          v23(v20 > 1, v19 + 1, 1LL);
          __n128 v11 = v27;
        }

        uint64_t v25 = a3(0LL);
        uint64_t v26 = a4;
        v24[0] = v21;
        _OWORD v11[2] = v19 + 1;
        a5(v24, &v11[5 * v19 + 4]);
        ++v17;
        --v10;
      }

      while (v10);
    }

    return (uint64_t)v11;
  }

  __break(1u);
  return result;
}

uint64_t sub_1000CA2C8(uint64_t a1)
{
  return sub_1000CA0F4( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  (uint64_t (*)(void))type metadata accessor for AnnotationImagesView.AnnotationImageView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
}

void *sub_1000CA2EC(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v13 = a1;
    }
    else {
      uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  __n128 v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return v3;
  }
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000250E0(0LL, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000LL) == 0)
  {
    __n128 v3 = v17;
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      uint64_t v5 = 0LL;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        uint64_t v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1000250E0((void *)(v7 > 1), v8 + 1, 1);
          __n128 v3 = v17;
        }

        ++v5;
        uint64_t v15 = type metadata accessor for LayoutViewPlaceholder(0LL);
        unint64_t v16 = &protocol witness table for LayoutViewPlaceholder;
        *(void *)&__int128 v14 = v6;
        void v3[2] = v8 + 1;
        sub_1000243BC(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }

      while (v2 != v5);
    }

    else
    {
      uint64_t v9 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v11 = v3[2];
        unint64_t v12 = v3[3];
        swift_retain(v10);
        if (v11 >= v12 >> 1)
        {
          sub_1000250E0((void *)(v12 > 1), v11 + 1, 1);
          __n128 v3 = v17;
        }

        uint64_t v15 = type metadata accessor for LayoutViewPlaceholder(0LL);
        unint64_t v16 = &protocol witness table for LayoutViewPlaceholder;
        *(void *)&__int128 v14 = v10;
        void v3[2] = v11 + 1;
        sub_1000243BC(&v14, (uint64_t)&v3[5 * v11 + 4]);
        ++v9;
        --v2;
      }

      while (v2);
    }

    return v3;
  }

  __break(1u);
  return result;
}

void *sub_1000CA4B4(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v14 = a1;
    }
    else {
      uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  __n128 v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return v3;
  }
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000250E0(0LL, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000LL) == 0)
  {
    __n128 v3 = v18;
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      uint64_t v5 = 0LL;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        uint64_t v18 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1000250E0((void *)(v7 > 1), v8 + 1, 1);
          __n128 v3 = v18;
        }

        ++v5;
        uint64_t v16 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
        uint64_t v17 = protocol witness table for UIView;
        *(void *)&__int128 v15 = v6;
        void v3[2] = v8 + 1;
        sub_1000243BC(&v15, (uint64_t)&v3[5 * v8 + 4]);
      }

      while (v2 != v5);
    }

    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v18 = v3;
        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1000250E0((void *)(v11 > 1), v12 + 1, 1);
          __n128 v3 = v18;
        }

        uint64_t v16 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
        uint64_t v17 = protocol witness table for UIView;
        *(void *)&__int128 v15 = v13;
        void v3[2] = v12 + 1;
        sub_1000243BC(&v15, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }

      while (v2);
    }

    return v3;
  }

  __break(1u);
  return result;
}

uint64_t sub_1000CA6A4(uint64_t a1)
{
  return sub_1000CA0F4( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000251AC,  type metadata accessor for DynamicTypeLabel,  (uint64_t)&protocol witness table for UILabel,  (void (*)(void *, unint64_t *))sub_1000243BC);
}

uint64_t sub_1000CA6C8(uint64_t a1)
{
  return sub_1000CA0F4( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  type metadata accessor for DynamicTypeButton,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
}

uint64_t sub_1000CA6EC(uint64_t a1)
{
  return sub_1000CA0F4( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  (uint64_t (*)(void))type metadata accessor for ArcadeWelcomeItemView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
}

uint64_t sub_1000CA710(uint64_t a1)
{
  return sub_1000CA0F4( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  (uint64_t (*)(void))&type metadata accessor for ArtworkView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
}

uint64_t sub_1000CA734(uint64_t a1)
{
  return sub_1000CA0F4( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  (uint64_t (*)(void))type metadata accessor for StarRatingView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
}

uint64_t sub_1000CA758(uint64_t a1)
{
  return sub_1000CA0F4( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  (uint64_t (*)(void))type metadata accessor for ProgressBarView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
}

uint64_t sub_1000CA77C(uint64_t a1)
{
  return sub_1000CA0F4( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  (uint64_t (*)(void))type metadata accessor for StarView,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
}

void *sub_1000CA7A0(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v15 = a1;
    }
    else {
      uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = sub_100025248(0LL, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000LL) == 0)
  {
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      uint64_t v4 = 0LL;
      do
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        unint64_t v7 = _swiftEmptyArrayStorage[2];
        unint64_t v6 = _swiftEmptyArrayStorage[3];
        if (v7 >= v6 >> 1) {
          sub_100025248((void *)(v6 > 1), v7 + 1, 1);
        }
        ++v4;
        _swiftEmptyArrayStorage[2] = v7 + 1;
        unint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
        void v8[4] = v5;
        void v8[5] = &protocol witness table for MSOPersonalizationDataSource;
      }

      while (v2 != v4);
    }

    else
    {
      uint64_t v9 = (void *)(a1 + 32);
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = 2 * v10;
      do
      {
        uint64_t v12 = *v9;
        unint64_t v13 = _swiftEmptyArrayStorage[3];
        swift_retain(*v9);
        if (v10 >= v13 >> 1) {
          sub_100025248((void *)(v13 > 1), v10 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v10 + 1;
        uint64_t v14 = &_swiftEmptyArrayStorage[v11];
        _OWORD v14[4] = v12;
        void v14[5] = &protocol witness table for MSOPersonalizationDataSource;
        v11 += 2LL;
        ++v9;
        ++v10;
        --v2;
      }

      while (v2);
    }

    return _swiftEmptyArrayStorage;
  }

  __break(1u);
  return result;
}

uint64_t sub_1000CA940(uint64_t a1)
{
  return sub_1000CA0F4( a1,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  (uint64_t (*)(void))_s8ItemViewCMa,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
}

void *sub_1000CA964(uint64_t a1)
{
  uint64_t v17 = sub_1000038E8(&qword_1002E2358);
  uint64_t v2 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000038E8(&qword_1002E8130);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    sub_100025264(0LL, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    unint64_t v10 = v18;
    do
    {
      sub_1000CBE9C(v11, (uint64_t)v4);
      swift_dynamicCast(v8, v4, v17, v5, 7LL);
      if ((swift_isUniquelyReferenced_nonNull_native(v10, v13) & 1) == 0)
      {
        sub_100025264(0LL, v10[2] + 1LL, 1);
        unint64_t v10 = v18;
      }

      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_100025264(v14 > 1, v15 + 1, 1);
        unint64_t v10 = v18;
      }

      v10[2] = v15 + 1;
      sub_1000CBEE4( (uint64_t)v8,  (uint64_t)v10 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
      + *(void *)(v6 + 72) * v15);
      v11 += v12;
      --v9;
    }

    while (v9);
  }

  return v10;
}

void sub_1000CAB14(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  v15.receiver = v2;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, "setOverrideUserInterfaceStyle:", a1);
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations];
  if (!((unint64_t)v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*(void *)&v2[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations]);
    if (v6) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease(v5);
    return;
  }

  if (v5 < 0) {
    uint64_t v12 = *(void *)&v2[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations];
  }
  else {
    uint64_t v12 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)&v2[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations]);
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v6) {
    goto LABEL_13;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v7 = 0LL;
    do
    {
      if ((v5 & 0xC000000000000001LL) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
      }
      else {
        id v8 = *(id *)(v5 + 8 * v7 + 32);
      }
      int64_t v9 = v8;
      ++v7;
      v14.receiver = v2;
      v14.super_class = ObjectType;
      id v10 = objc_msgSendSuper2(&v14, "overrideUserInterfaceStyle");
      uint64_t v11 = (objc_class *)type metadata accessor for AnnotationCollectionViewCell(0LL);
      v13.receiver = v9;
      v13.super_class = v11;
      objc_msgSendSuper2(&v13, "setOverrideUserInterfaceStyle:", v10);
      sub_1001B8F94(0);
    }

    while (v6 != v7);
    goto LABEL_13;
  }

  __break(1u);
}

uint64_t sub_1000CAC5C(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations];
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0) {
      uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations];
    }
    else {
      uint64_t v10 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations]);
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v10);
    uint64_t v5 = result;
    if (!result) {
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations]);
    if (!v5) {
      goto LABEL_13;
    }
  }

  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }

  for (uint64_t i = 0LL; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001LL) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    }
    else {
      id v8 = *(id *)(v4 + 8 * i + 32);
    }
    int64_t v9 = v8;
    [v8 removeFromSuperview];
  }

uint64_t sub_1000CAE74()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0858 != -1) {
    swift_once(&qword_1002E0858, sub_1000732A0);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_10000A634(v5, (uint64_t)qword_1002F3460);
  id v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL);
  v15(v4, v6, v5);
  uint64_t v7 = enum case for FontSource.useCase(_:);
  id v8 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v8(v4, enum case for FontSource.useCase(_:), v0);
  uint64_t v9 = type metadata accessor for StaticDimension(0LL);
  uint64_t v21 = v9;
  uint64_t v22 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v20);
  uint64_t v18 = v0;
  unint64_t v19 = &protocol witness table for FontSource;
  uint64_t v10 = sub_10000DD7C(&v17);
  uint64_t v11 = (void (*)(void *, char *, uint64_t))v1[2];
  v11(v10, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v17, 90.0);
  uint64_t v12 = (void (*)(char *, uint64_t))v1[1];
  v12(v4, v0);
  v15(v4, v6, v5);
  v8(v4, v7, v0);
  uint64_t v18 = v9;
  unint64_t v19 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v17);
  _OWORD v16[3] = v0;
  v16[4] = &protocol witness table for FontSource;
  uint64_t v13 = sub_10000DD7C(v16);
  v11(v13, v4, v0);
  StaticDimension.init(_:scaledLike:)(v16, 60.0);
  v12(v4, v0);
  sub_1000243BC(&v20, (uint64_t)&unk_1002F4078);
  return sub_1000243BC(&v17, (uint64_t)&unk_1002F40A0);
}

char *sub_1000CB080(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v27 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v10 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  __int128 v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v18 = qword_1002E0858;
  unint64_t v19 = v4;
  if (v18 != -1) {
    swift_once(&qword_1002E0858, sub_1000732A0);
  }
  uint64_t v20 = sub_10000A634(v14, (uint64_t)qword_1002F3460);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v20, v14);
  *(void *)&v19[OBJC_IVAR____TtC8AppStore21InformationColumnView_headline] = sub_100011F1C( (uint64_t)v17,  2LL,  0LL,  1,  0);
  *(void *)&v19[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations] = _swiftEmptyArrayStorage;
  v19[OBJC_IVAR____TtC8AppStore21InformationColumnView_shouldExpandAllAnnotations] = 0;

  v30.receiver = v19;
  v30.super_class = ObjectType;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v22 = *(void *)&v21[OBJC_IVAR____TtC8AppStore21InformationColumnView_headline];
  uint64_t v23 = v21;
  [v23 addSubview:v22];
  objc_msgSend( v23,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);
  memset(v29, 0, sizeof(v29));
  memset(v28, 0, sizeof(v28));
  uint64_t v24 = v23;
  static AutomationSemantics.productPage(elementName:id:parentId:)(0xD000000000000011LL, 0x800000010024C610LL, v29, v28);
  sub_1000077E0((uint64_t)v28, (uint64_t *)&unk_1002E3500);
  sub_1000077E0((uint64_t)v29, (uint64_t *)&unk_1002E3500);
  UIView.setAutomationSemantics(_:)(v12);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
  return v24;
}

uint64_t sub_1000CB364()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  v27.receiver = v0;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "layoutSubviews", v4);
  if (qword_1002E0AB0 != -1) {
    swift_once(&qword_1002E0AB0, sub_1000CAE74);
  }
  sub_1000CBA30((uint64_t)&unk_1002F4078, (uint64_t)v26);
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC8AppStore21InformationColumnView_annotations];
  id v8 = *(id *)&v0[OBJC_IVAR____TtC8AppStore21InformationColumnView_headline];
  uint64_t v9 = swift_bridgeObjectRetain(v7);
  uint64_t v10 = sub_1000CA0F4( v9,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  type metadata accessor for AnnotationCollectionViewCell,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
  swift_bridgeObjectRelease(v7);
  uint64_t v24 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v25 = &protocol witness table for UILabel;
  *(void *)&__int128 v23 = v8;
  uint64_t v11 = type metadata accessor for InformationColumnViewLayout();
  uint64_t inited = swift_initStackObject(v11, v22);
  __int128 v14 = v26[3];
  __int128 v13 = v26[4];
  *(_OWORD *)(inited + 48) = v26[2];
  *(_OWORD *)(inited + 64) = v14;
  *(_OWORD *)(inited + 80) = v13;
  __int128 v15 = v26[1];
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = v26[0];
  *(_OWORD *)(inited + 32) = v15;
  sub_1000243BC(&v23, inited + 96);
  *(void *)(inited + 136) = v10;
  *(void *)&CGFloat v16 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType).n128_u64[0];
  sub_100145E68((uint64_t)v0, v16, v17, v18, v19);
  __n128 v20 = swift_release(inited);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v3 + 8))(v6, v2, v20);
}

uint64_t type metadata accessor for InformationColumnView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore21InformationColumnView);
}

double sub_1000CB5A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void *a5, void *a6, double a7, double a8)
{
  uint64_t v60 = a3;
  uint64_t v61 = a6;
  int v59 = a4;
  uint64_t v13 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  CGFloat v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E5300, &OBJC_CLASS___UIFont_ptr);
  uint64_t v17 = qword_1002E0858;
  swift_bridgeObjectRetain(a2);
  if (v17 != -1) {
    swift_once(&qword_1002E0858, sub_1000732A0);
  }
  uint64_t v19 = type metadata accessor for FontUseCase(0LL, v18);
  uint64_t v20 = sub_10000A634(v19, (uint64_t)qword_1002F3460);
  id v21 = [a5 traitCollection];
  uint64_t v22 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v20, v21);

  uint64_t v23 = type metadata accessor for Feature(0LL);
  *((void *)&v75 + 1) = v23;
  *(void *)&__int128 v76 = sub_100004288( (unint64_t *)&qword_1002E21F0,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
  uint64_t v24 = sub_10000DD7C(&v74);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104LL))( v24,  enum case for Feature.measurement_with_labelplaceholder(_:),  v23);
  LOBYTE(v23) = isFeatureEnabled(_:)(&v74);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v74);
  uint64_t v25 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( a1,  a2,  v22,  4LL,  0LL,  0LL,  0LL,  0LL,  v23 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v79, v25);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (qword_1002E0AB0 != -1) {
    swift_once(&qword_1002E0AB0, sub_1000CAE74);
  }
  sub_1000CBA30((uint64_t)&unk_1002F4078, (uint64_t)&v74);
  sub_100011C30((uint64_t)v79, (uint64_t)v73);
  uint64_t v26 = sub_1000CBA6C(v60, v59 & 1, 0LL, 1, v61);
  uint64_t v27 = sub_1000CA0F4( (uint64_t)v26,  (void (*)(BOOL, unint64_t, uint64_t))sub_1000250E0,  type metadata accessor for AnnotationCollectionViewCell,  (uint64_t)protocol witness table for UIView,  (void (*)(void *, unint64_t *))sub_1000243BC);
  swift_bridgeObjectRelease(v26);
  v67[0] = v76;
  v67[1] = v77;
  __int128 v68 = v78;
  __int128 v66 = v75;
  __int128 v65 = v74;
  sub_1000243BC(v73, (uint64_t)v69);
  uint64_t v72 = v27;
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    swift_bridgeObjectRetain(v27);
    sub_100011C30(v27 + 32, (uint64_t)v62);
    uint64_t v29 = v63;
    uint64_t v30 = v64;
    sub_1000112B0(v62, v63);
    double v31 = dispatch thunk of Measurable.measurements(fitting:in:)(a5, v29, *(void *)(v30 + 8), a7, a8);
    double v33 = v32;
    double v35 = v34;
    double v37 = v36;
    double v38 = v32 + 0.0;
    __int128 v39 = v68;
    sub_1000112B0((void *)v67 + 1, v68);
    double v40 = v38 + AnyDimension.topMargin(from:in:)(a5, v39, *((void *)&v39 + 1), v31, v33, v35, v37);
    _s8AppStore17PillOverlayLayoutVwxx_0(v62);
    uint64_t v41 = v28 - 1;
    if (v28 != 1)
    {
      uint64_t v42 = v27 + 72;
      do
      {
        sub_100011C30(v42, (uint64_t)v62);
        uint64_t v43 = v63;
        uint64_t v44 = v64;
        sub_1000112B0(v62, v63);
        dispatch thunk of Measurable.measurements(fitting:in:)(a5, v43, *(void *)(v44 + 8), a7, a8);
        double v40 = v40 + v45;
        _s8AppStore17PillOverlayLayoutVwxx_0(v62);
        v42 += 40LL;
        --v41;
      }

      while (v41);
    }

    swift_bridgeObjectRelease(v27);
  }

  uint64_t v46 = v70;
  uint64_t v47 = v71;
  sub_1000112B0(v69, v70);
  double v48 = dispatch thunk of Measurable.measurements(fitting:in:)(a5, v46, *(void *)(*(void *)(v47 + 8) + 8LL), a7, a8);
  double v50 = v49;
  double v52 = v51;
  double v54 = v53;
  uint64_t v55 = *((void *)&v66 + 1);
  uint64_t v56 = *(void *)&v67[0];
  sub_1000112B0(&v65, *((uint64_t *)&v66 + 1));
  AnyDimension.topMargin(from:in:)(a5, v55, v56, v48, v50, v52, v54);
  _s8AppStore17PillOverlayLayoutVwxx_0(v79);
  sub_1000CBE20(&v65);
  _s8AppStore17PillOverlayLayoutVwxx_0(v69);
  swift_bridgeObjectRelease(v72);
  return a7;
}

uint64_t sub_1000CBA30(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1000CBA6C(uint64_t a1, int a2, uint64_t a3, int a4, void *a5)
{
  int v51 = a2;
  int v52 = a4;
  double v49 = a5;
  uint64_t v6 = *a5;
  uint64_t v47 = a3;
  uint64_t v48 = v6;
  uint64_t v7 = sub_1000038E8((uint64_t *)&unk_1002E8110);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v55 = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain(a1);
    if (v10) {
      goto LABEL_3;
    }
LABEL_24:
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }

  if (a1 < 0) {
    uint64_t v45 = a1;
  }
  else {
    uint64_t v45 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a1);
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter(v45);
  uint64_t v10 = (uint64_t)result;
  if (!result) {
    goto LABEL_24;
  }
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
  }

  else
  {
    uint64_t v12 = 0LL;
    unint64_t v50 = a1 & 0xC000000000000001LL;
    do
    {
      if (v50)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
      }

      else
      {
        uint64_t v13 = *(void *)(a1 + 8 * v12 + 32);
        swift_retain(v13);
      }

      uint64_t v14 = (objc_class *)type metadata accessor for AnnotationCollectionViewCell(0LL);
      uint64_t v15 = objc_msgSend(objc_allocWithZone(v14), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      uint64_t v17 = Annotation.title.getter(v16);
      uint64_t v18 = (uint64_t *)&v15[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText];
      uint64_t v19 = *(void *)&v15[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText + 8];
      *uint64_t v18 = v17;
      v18[1] = v20;
      *(void *)&double v21 = swift_bridgeObjectRelease(v19).n128_u64[0];
      id v22 = sub_1001B6C58(v21);
      uint64_t v23 = Annotation.items.getter(v22);
      uint64_t v24 = *(void *)&v15[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems];
      *(void *)&v15[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems] = v23;
      swift_bridgeObjectRelease(v24);
      uint64_t v26 = Annotation.summary.getter(v25);
      uint64_t v27 = (uint64_t *)&v15[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary];
      uint64_t v28 = *(void *)&v15[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary + 8];
      *uint64_t v27 = v26;
      v27[1] = v29;
      swift_bridgeObjectRelease(v28);
      id v30 = sub_1001B6D2C();
      uint64_t v31 = Annotation.linkAction.getter(v30);
      if (v31)
      {
        uint64_t v32 = v31;
        v54[0] = v31;
        uint64_t v33 = type metadata accessor for Action(0LL);
        uint64_t v34 = sub_100004288( (unint64_t *)&qword_1002E8120,  (uint64_t (*)(uint64_t))&type metadata accessor for Action,  (uint64_t)&protocol conformance descriptor for Action);
        ComponentModel.pairedWith<A>(objectGraph:)(v49, v33, v48, v34);
        swift_release(v32);
        uint64_t v35 = sub_1000038E8(&qword_1002E26A8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v9, 0LL, 1LL, v35);
      }

      else
      {
        uint64_t v36 = sub_1000038E8(&qword_1002E26A8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56LL))(v9, 1LL, 1LL, v36);
      }

      uint64_t v37 = (uint64_t)&v15[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
      swift_beginAccess(&v15[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction], v54, 33LL, 0LL);
      sub_1000CBE54((uint64_t)v9, v37);
      swift_endAccess(v54);
      sub_1001B6EAC();
      uint64_t v38 = sub_1000077E0((uint64_t)v9, (uint64_t *)&unk_1002E8110);
      if ((v51 & 1) != 0) {
        char v39 = 1;
      }
      else {
        char v39 = Annotation.shouldAlwaysPresentExpanded.getter(v38);
      }
      sub_1001B93C8();
      v15[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] = v39 & 1;
      sub_1001B6984(v40);
      if ((v52 & 1) == 0)
      {
        v53.receiver = v15;
        v53.super_class = v14;
        objc_msgSendSuper2(&v53, "setOverrideUserInterfaceStyle:", v47);
        sub_1001B8F94(0);
      }

      uint64_t v41 = v15;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
      unint64_t v43 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v42 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v43 >= v42 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1LL);
      }
      ++v12;
      uint64_t v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
      specialized Array._endMutation()(v44);

      swift_release(v13);
    }

    while (v10 != v12);
    swift_bridgeObjectRelease(a1);
    return (void *)v55;
  }

  return result;
}

void *sub_1000CBE20(void *a1)
{
  return a1;
}

uint64_t sub_1000CBE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E8110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CBE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E2358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CBEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E8130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

double sub_1000CBF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ProductRatingsAndReviewsComponent(0LL);
  uint64_t v7 = sub_100004288( (unint64_t *)&qword_1002E8138,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductRatingsAndReviewsComponent,  (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  ItemLayoutContext.typedModel<A>(as:)(&v22, v6, v6, v7);
  uint64_t v9 = v22;
  if (v22)
  {
    uint64_t v10 = sub_10021BA90();
    if (!v10)
    {
LABEL_10:
      *(void *)&double result = swift_release(v9).n128_u64[0];
      return result;
    }

    uint64_t v12 = v10;
    uint64_t v13 = v11;
    uint64_t v14 = &v3[OBJC_IVAR____TtC8AppStore51ProductRatingsAndReviewsComponentCollectionViewCell_componentContentView];
    uint64_t v15 = *(void **)&v3[OBJC_IVAR____TtC8AppStore51ProductRatingsAndReviewsComponentCollectionViewCell_componentContentView];
    if (v15 && sub_1000038E8(&qword_1002E8140) == v10)
    {
      uint64_t v17 = *((void *)v14 + 1);
    }

    else
    {
      id v16 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)) init];
      sub_1001BAA38(v16, v13);
      uint64_t v15 = *(void **)v14;
      if (!*(void *)v14)
      {
LABEL_9:
        [v3 setNeedsLayout];
        goto LABEL_10;
      }

      uint64_t v17 = *((void *)v14 + 1);
      uint64_t ObjectType = swift_getObjectType(*(void *)v14);
      (*(void (**)(void, void, uint64_t, uint64_t))(v17 + 40))(0LL, 0LL, ObjectType, v17);
    }

    uint64_t v19 = swift_getObjectType(v15);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 24);
    id v21 = v15;
    v20(a1, a2, v19, v17);

    goto LABEL_9;
  }

  return result;
}

uint64_t sub_1000CC098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SelectableShelfComponentViewReaction(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = v3 + OBJC_IVAR____TtC8AppStore51ProductRatingsAndReviewsComponentCollectionViewCell_componentContentView;
  uint64_t v12 = *(void **)(v3
                 + OBJC_IVAR____TtC8AppStore51ProductRatingsAndReviewsComponentCollectionViewCell_componentContentView);
  if (v12)
  {
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType(v12);
    uint64_t v24 = (uint64_t)v12;
    uint64_t v15 = *(void *)(v13 + 8);
    id v16 = v12;
    dispatch thunk of SelectableShelfComponentView.didBecomeSelected(in:asPartOf:)(a1, a2, ObjectType, v15);

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v10, v7);
  }

  else
  {
    uint64_t v18 = sub_1000038E8(&qword_1002E3D30);
    uint64_t v19 = swift_allocObject( v18,  ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
          + *(void *)(v8 + 72),
            *(unsigned __int8 *)(v8 + 80) | 7LL);
    *(_OWORD *)(v19 + swift_weakDestroy(v0 + 16) = xmmword_100237B10;
    static SelectableShelfComponentViewReaction.deselect.getter();
    uint64_t v24 = v19;
    uint64_t v20 = sub_100004288( &qword_1002E3D38,  (uint64_t (*)(uint64_t))&type metadata accessor for SelectableShelfComponentViewReaction,  (uint64_t)&protocol conformance descriptor for SelectableShelfComponentViewReaction);
    uint64_t v21 = sub_1000038E8(&qword_1002E3D40);
    unint64_t v22 = sub_10006047C();
    return dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v21, v22, v7, v20);
  }

uint64_t sub_1000CC224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore51ProductRatingsAndReviewsComponentCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_1000B33D0(v3, a1);
}

double sub_1000CC278(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore51ProductRatingsAndReviewsComponentCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_1000B3388(a1, v3);
  *(void *)&double result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1000CC2D4(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

uint64_t sub_1000CC320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000CC098(a1, a2, a3);
}

void sub_1000CC340()
{
  if (v1)
  {
    uint64_t v3 = v1;
    NSString v4 = String._bridgeToObjectiveC()();
    *(void *)&double v2 = swift_bridgeObjectRelease(v3).n128_u64[0];
  }

  else
  {
    NSString v4 = 0LL;
  }

  objc_msgSend(v0, "setTitle:", v4, v2);

  uint64_t v5 = dispatch thunk of MSOPagePresenter.uber.getter();
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_uber];
  *(void *)&v0[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_uber] = v5;
  swift_retain(v5);
  sub_10020146C(v6);
  swift_release(v6);
  swift_release(v5);
  sub_1001ECD88();
}

void sub_1000CC3EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for JULoadingViewController.PresentationContext(0LL);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((dispatch thunk of MSOPagePresenter.hasUber.getter(v3) & 1) == 0)
  {
    static JULoadingViewController.PresentationContext.placeholder.getter();
    id v6 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
    uint64_t v7 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v5, 0LL);
    uint64_t v8 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
    uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController];
    id v10 = v9;
    static ViewControllerContainment.remove(_:)(v9);

    uint64_t v11 = *(void **)&v1[v8];
    *(void *)&v1[v8] = v7;
    id v12 = v7;

    uint64_t v13 = *(void **)&v1[v8];
    id v14 = v13;
    id v15 = [v1 view];
    if (v15)
    {
      id v16 = v15;
      [v15 bounds];
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      uint64_t v24 = v23;

      v26[0] = v18;
      v26[1] = v20;
      v26[2] = v22;
      v26[3] = v24;
      char v27 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v13, v1, v26);
    }

    else
    {
      __break(1u);
    }
  }

uint64_t type metadata accessor for MSOPageViewController(uint64_t a1)
{
  uint64_t result = qword_1002E8170;
  if (!qword_1002E8170) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MSOPageViewController);
  }
  return result;
}

uint64_t sub_1000CC594()
{
  return type metadata accessor for MSOPageViewController(0LL);
}

unint64_t sub_1000CC5A0()
{
  unint64_t result = qword_1002E8568;
  if (!qword_1002E8568)
  {
    uint64_t v1 = type metadata accessor for FramedArtworkCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023C138, v1);
    atomic_store(result, (unint64_t *)&qword_1002E8568);
  }

  return result;
}

double sub_1000CC5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v41 = type metadata accessor for PageGrid(0LL);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v3 = (uint64_t *)((char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = sub_1000038E8((uint64_t *)&unk_1002EE3B0);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v45, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023C188, v17);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  uint64_t v20 = swift_getKeyPath(&unk_10023C1B8, v19);
  ReadOnlyLens.subscript.getter(&v44, v20, v8);
  __n128 v21 = swift_release(v20);
  (*(void (**)(void *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
  __n128 v22 = swift_bridgeObjectRelease(v44);
  ItemLayoutContext.state.getter(v22);
  uint64_t v23 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v24 = swift_dynamicCastClassUnconditional(v37, v23, 0LL, 0LL, 0LL);
  uint64_t v25 = (uint64_t)v36;
  ItemLayoutContext.componentLayoutOptions.getter(v24);
  uint64_t v27 = swift_getKeyPath(&unk_10023C1E8, v26);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v27);
  double v28 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  double v30 = v29;
  (*(void (**)(void *, uint64_t))(v39 + 8))(v3, v41);
  id v31 = sub_10014DB80();
  sub_1000337FC((uint64_t)v45, (uint64_t)v7, v25, v31, v28, v30);
  double v33 = v32;
  swift_unknownObjectRelease(v31);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v25, v43);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v40);
  _s8AppStore17PillOverlayLayoutVwxx_0(v45);
  return v33;
}

double sub_1000CC8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1002E0E38 != -1) {
    swift_once(&qword_1002E0E38, sub_10016A5B4);
  }
  uint64_t ObjectType = swift_getObjectType(a6);
  return sub_100137EA8(&qword_1002F4E88, a6, ObjectType);
}

uint64_t sub_1000CC950()
{
  return sub_100004288( &qword_1002E8570,  (uint64_t (*)(uint64_t))&type metadata accessor for Lockup,  (uint64_t)&protocol conformance descriptor for Lockup);
}

_OWORD *sub_1000CC97C@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1002E0E38 != -1) {
    swift_once(&qword_1002E0E38, sub_10016A5B4);
  }
  return sub_100007BC4(qword_1002F4E88, a1);
}

uint64_t sub_1000CCA38()
{
  return type metadata accessor for PurchasesLockupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for PurchasesLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E85E8;
  if (!qword_1002E85E8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PurchasesLockupCollectionViewCell);
  }
  return result;
}

uint64_t sub_1000CCA7C()
{
  return sub_100004288( &qword_1002E85F8,  type metadata accessor for AnnotationCollectionViewCell,  (uint64_t)&unk_10023C278);
}

double sub_1000CCAAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PageGrid(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = sub_1000038E8(&qword_1002E2890);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Annotation(0LL);
  uint64_t v11 = sub_100004288( (unint64_t *)&unk_1002E8600,  (uint64_t (*)(uint64_t))&type metadata accessor for Annotation,  (uint64_t)&protocol conformance descriptor for Annotation);
  ItemLayoutContext.typedModel<A>(as:)(&v29, v10, v10, v11);
  uint64_t v12 = v29;
  if (!v29) {
    return 0.0;
  }
  unint64_t v13 = sub_1000353E8();
  uint64_t v27 = v1;
  unint64_t v14 = v13;
  ItemLayoutContext.typedState<A>(as:)(&_s5StateVN, &_s5StateVN, v13);
  StateLens<A>.currentValue.getter(&v28, v6, v14);
  LODWORD(v14) = v28;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023C2C8, v15);
  uint64_t v26 = v7;
  uint64_t v17 = KeyPath;
  ItemLayoutContext.subscript.getter(v5);
  swift_release(v17);
  double v18 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  double v20 = v19;
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  id v21 = sub_10014DB80();
  uint64_t ObjectType = swift_getObjectType(v21);
  sub_1001B89F4(v12, v14, v21, v18, v20, v27, ObjectType);
  double v24 = v23;
  swift_release(v12);
  swift_unknownObjectRelease(v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
  return v24;
}

void sub_1000CCCAC(uint64_t a1, void *a2)
{
  char v4 = a1;
  sub_100066F98(a1, a2);
  id v5 = *(id *)(v2 + OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView);
  sub_1000B3814(v4, a2);
}

id sub_1000CCD0C()
{
  return  [*(id *)(v0 + OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_backdropView) layer];
}

uint64_t sub_1000CCD38(char a1, int a2)
{
  uint64_t v3 = v2;
  int v53 = a2;
  uint64_t v5 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0LL);
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000038E8(&qword_1002E8670);
  __n128 v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for MixedMediaLockupLayout.Metrics(0LL, v9);
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  __chkstk_darwin(v12);
  uint64_t v54 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v18 = *(void **)&v2[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel];
  if (qword_1002E0AD8 != -1) {
    swift_once(&qword_1002E0AD8, sub_1000CDE10);
  }
  sub_10000A634(v14, (uint64_t)qword_1002E8610);
  uint64_t v59 = (uint64_t)v2;
  Conditional.evaluate(with:)(v58, &v59, v14);
  id v19 = v58[0];
  [v18 setTextColor:v58[0]];

  double v20 = *(void **)&v3[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_backdropView];
  if (qword_1002E0AE0 != -1) {
    swift_once(&qword_1002E0AE0, sub_1000CDEFC);
  }
  uint64_t v21 = sub_1000038E8((uint64_t *)&unk_1002E1D50);
  sub_10000A634(v21, (uint64_t)qword_1002F4168);
  sub_1001B46F0(a1, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v3;
  Conditional.evaluate(with:)(v58, &v59, v14);
  __n128 v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v17, v14);
  id v23 = v58[0];
  [v20 setBackgroundColor:v58[0]];

  id v24 = [v20 layer];
  if (qword_1002E0AE8 != -1) {
    swift_once(&qword_1002E0AE8, sub_1000CE1F0);
  }
  sub_10000A634(v21, (uint64_t)qword_1002F4180);
  sub_1001B46F0(a1, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v3;
  Conditional.evaluate(with:)(v58, &v59, v14);
  v22(v17, v14);
  id v25 = v58[0];
  id v26 = [v58[0] CGColor];

  [v24 setBorderColor:v26];
  LODWORD(v25) = v3[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace];
  uint64_t v27 = (uint64_t)&v3[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  swift_beginAccess( &v3[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition],  v58,  0LL,  0LL);
  sub_1000D0090(v27, (uint64_t)v11);
  uint64_t v28 = v54;
  sub_1000CD2A0(v3, 1, (int)v25, (uint64_t)v11, v54);
  uint64_t v29 = sub_1000077E0((uint64_t)v11, &qword_1002E8670);
  MixedMediaLockupLayout.Metrics.lockupPosition.getter(v29);
  uint64_t v30 = v52;
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v7, v52);
  if (v31 == enum case for MixedMediaLockupLayout.LockupPosition.top(_:))
  {
    double v32 = *(char **)&v3[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView];
    BOOL v33 = ((a1 - 1) & 0xFE) == 0;
    uint64_t v34 = 12LL;
    goto LABEL_11;
  }

  if (v31 == enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:))
  {
    double v32 = *(char **)&v3[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView];
    BOOL v33 = ((a1 - 1) & 0xFE) == 0;
    uint64_t v34 = 3LL;
LABEL_11:
    if (v33) {
      uint64_t v35 = v34;
    }
    else {
      uint64_t v35 = -1LL;
    }
    uint64_t v36 = &v32[OBJC_IVAR____TtC8AppStore15LockupMediaView_roundedCorners];
    *(void *)&v32[OBJC_IVAR____TtC8AppStore15LockupMediaView_roundedCorners] = v35;
    uint64_t v37 = v32;
    ArtworkView.roundedCorners.setter(v35);
    uint64_t v38 = *(void *)&v37[OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer];
    *(void *)(v38 + OBJC_IVAR____TtC8AppStore18VideoViewContainer_roundedCorners) = *(void *)v36;
    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong(v38 + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
    sub_1001AE660(Strong);

    uint64_t v40 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
    uint64_t inited = swift_initStackObject(v40, v57);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100236DC0;
    uint64_t v42 = *(void **)&v3[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView];
    *(void *)(inited + 32) = v42;
    uint64_t v43 = *(void **)(*(void *)&v3[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView]
                   + OBJC_IVAR____TtC8AppStore15SmallLockupView_artworkView);
    *(void *)(inited + 40) = v43;
    uint64_t v59 = inited;
    specialized Array._endMutation()(inited);
    uint64_t v44 = v59;
    id v45 = v42;
    id v46 = v43;
    sub_10017DBE0(a1, v44);
    *(void *)&double v47 = swift_bridgeObjectRelease(v44).n128_u64[0];
    if ((v53 & 1) != 0)
    {
      objc_msgSend(v3, "setNeedsLayout", v47);
      uint64_t v48 = &selRef_layoutIfNeeded;
    }

    else
    {
      id v49 = objc_msgSend(v3, "window", v47);

      if (!v49) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v28, v56);
      }
      uint64_t v48 = &selRef_setNeedsLayout;
    }

    objc_msgSend(v3, *v48, v51, v52);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v28, v56);
  }

  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v30, v30);
  __break(1u);
  return result;
}

uint64_t sub_1000CD2A0@<X0>(void *a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v52 = a3;
  uint64_t v53 = a5;
  uint64_t v50 = type metadata accessor for FontSource(0LL);
  uint64_t v51 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  __n128 v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  id v46 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000038E8(&qword_1002E8670);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v49 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  id v19 = (char *)&v45 - v18;
  __chkstk_darwin(v20);
  __n128 v22 = (char *)&v45 - v21;
  sub_1000D0090(a4, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1LL, v14) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v15 + 104))( v22,  enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:),  v14);
    sub_1000077E0((uint64_t)v13, &qword_1002E8670);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v13, v14);
  }

  double top = UIEdgeInsetsZero.top;
  double bottom = UIEdgeInsetsZero.bottom;
  id v25 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v25(v19, v22, v14);
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v19, v14);
  if (v26 == enum case for MixedMediaLockupLayout.LockupPosition.top(_:))
  {
    uint64_t v27 = a1;
    if (qword_1002E0AB8 != -1) {
      swift_once(&qword_1002E0AB8, sub_1000CDC48);
    }
    sub_100011C30((uint64_t)qword_1002F40C8, (uint64_t)v57);
    if ((a2 & 1) == 0) {
      goto LABEL_19;
    }
    if (qword_1002E0AC8 != -1) {
      swift_once(&qword_1002E0AC8, sub_1000CDC7C);
    }
    uint64_t v28 = qword_1002F4130;
    uint64_t v29 = qword_1002F4138;
    sub_1000112B0(qword_1002F4118, qword_1002F4130);
    uint64_t v30 = v46;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v28, v29);
    double top = AnyDimension.value(in:rounded:)(v27, v30, v28, v29);
    goto LABEL_18;
  }

  if (v26 != enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:))
  {
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
    __break(1u);
    return result;
  }

  uint64_t v27 = a1;
  if (qword_1002E0AC0 != -1) {
    swift_once(&qword_1002E0AC0, sub_1000CDC64);
  }
  sub_100011C30((uint64_t)qword_1002F40F0, (uint64_t)v57);
  if ((a2 & 1) != 0)
  {
    if (qword_1002E0AC8 != -1) {
      swift_once(&qword_1002E0AC8, sub_1000CDC7C);
    }
    uint64_t v31 = qword_1002F4130;
    uint64_t v32 = qword_1002F4138;
    sub_1000112B0(qword_1002F4118, qword_1002F4130);
    uint64_t v30 = v46;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v31, v32);
    double bottom = AnyDimension.value(in:rounded:)(v27, v30, v31, v32);
LABEL_18:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v48);
  }

uint64_t sub_1000CD864()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0LL);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v5 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000038E8(&qword_1002E8670);
  __n128 v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for MixedMediaLockupLayout.Metrics(0LL, v9);
  uint64_t v27 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int v15 = v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace];
  uint64_t v16 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  swift_beginAccess( &v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition],  v29,  0LL,  0LL);
  sub_1000D0090(v16, (uint64_t)v11);
  sub_1000CD2A0(v0, 1, v15, (uint64_t)v11, (uint64_t)v14);
  sub_1000077E0((uint64_t)v11, &qword_1002E8670);
  if (qword_1002E0AC8 != -1) {
    swift_once(&qword_1002E0AC8, sub_1000CDC7C);
  }
  uint64_t v17 = qword_1002F4130;
  uint64_t v18 = qword_1002F4138;
  sub_1000112B0(qword_1002F4118, qword_1002F4130);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v17, v18);
  AnyDimension.value(in:rounded:)(v1, v7, v17, v18);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v25);
  MixedMediaLockupLayout.Metrics.lockupPosition.getter(v19);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v4, v2);
  if (v20 == enum case for MixedMediaLockupLayout.LockupPosition.top(_:))
  {
    [*(id *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView] frame];
    CGRectGetMinY(v30);
    [*(id *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView] frame];
    CGRectGetMaxY(v31);
LABEL_7:
    id v21 = [v1 contentView];
    [v21 frame];

    *(void *)&v34.origin.CGFloat x = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
    CGRectGetMinX(v34);
    id v22 = [v1 contentView];
    [v22 frame];

    *(void *)&v35.origin.CGFloat x = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
    CGRectGetWidth(v35);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v28);
  }

  if (v20 == enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:))
  {
    [*(id *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView] frame];
    CGRectGetMinY(v32);
    [*(id *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView] frame];
    CGRectGetMaxY(v33);
    goto LABEL_7;
  }

  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v2, v2);
  __break(1u);
  return result;
}

uint64_t sub_1000CDC20()
{
  uint64_t result = Lockup.editorialTagline.getter();
  if (!v1) {
    return Lockup.developerTagline.getter(result);
  }
  return result;
}

uint64_t sub_1000CDC48(uint64_t a1)
{
  return sub_1000CDCAC(32.0, a1, &qword_1002F40C8[3], &qword_1002F40C8[4], qword_1002F40C8);
}

uint64_t sub_1000CDC64(uint64_t a1)
{
  return sub_1000CDCAC(24.0, a1, &qword_1002F40F0[3], &qword_1002F40F0[4], qword_1002F40F0);
}

uint64_t sub_1000CDC7C(uint64_t a1)
{
  return sub_1000CDCAC(15.0, a1, &qword_1002F4130, &qword_1002F4138, qword_1002F4118);
}

uint64_t sub_1000CDC94(uint64_t a1)
{
  return sub_1000CDCAC(10.0, a1, &qword_1002F4158, &qword_1002F4160, qword_1002F4140);
}

uint64_t sub_1000CDCAC(double a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9 = type metadata accessor for FontSource(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v19[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0778 != -1) {
    swift_once(&qword_1002E0778, sub_100072F4C);
  }
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v11);
  uint64_t v15 = sub_10000A634(v14, (uint64_t)qword_1002F31C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16LL))(v13, v15, v14);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for FontSource.useCase(_:), v9);
  *a3 = type metadata accessor for StaticDimension(0LL);
  *a4 = &protocol witness table for StaticDimension;
  sub_10000DD7C(a5);
  void v19[3] = v9;
  _OWORD v19[4] = &protocol witness table for FontSource;
  uint64_t v16 = sub_10000DD7C(v19);
  (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v16, v13, v9);
  StaticDimension.init(_:scaledLike:)(v19, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1000CDE10()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  sub_10000DC04(v0, qword_1002E8610);
  sub_10000A634(v0, (uint64_t)qword_1002E8610);
  uint64_t v1 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.74959).super.isa;
  Class v3 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 0.80037).super.isa;
  v6[0] = sub_1000038E8(&qword_1002E1E40);
  v6[1] = v1;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023C390, v6);
  Class v7 = isa;
  Class v8 = v3;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v8, &v7, v1);
}

uint64_t sub_1000CDEFC()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E1D50);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_1000038E8(&qword_1002EB5E0);
  __chkstk_darwin(v3);
  uint64_t v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  Class v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DC04(v0, qword_1002F4168);
  uint64_t v25 = sub_10000A634(v0, (uint64_t)qword_1002F4168);
  id v12 = [(id)objc_opt_self(UIColor) clearColor];
  v27[0] = sub_1000038E8(&qword_1002E1E40);
  uint64_t v13 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  v27[1] = v13;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023C390, v27);
  id v28 = v12;
  id v29 = v12;
  id v15 = v12;
  uint64_t v16 = v11;
  Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v29, &v28, v13);
  if (qword_1002E0F88 != -1) {
    swift_once(&qword_1002E0F88, sub_10017CD8C);
  }
  uint64_t v17 = sub_10000A634(v8, (uint64_t)qword_1002F52B0);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v7, v17, v8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v19(v7, 0LL, 1LL, v8);
  if (qword_1002E0F80 != -1) {
    swift_once(&qword_1002E0F80, sub_10017CCA8);
  }
  uint64_t v20 = sub_10000A634(v8, (uint64_t)qword_1002F5298);
  uint64_t v21 = (uint64_t)v26;
  v18(v26, v20, v8);
  v19((char *)v21, 0LL, 1LL, v8);
  uint64_t v22 = (uint64_t)&v2[*(int *)(v0 + 28)];
  v19((char *)v22, 1LL, 1LL, v8);
  uint64_t v23 = (uint64_t)&v2[*(int *)(v0 + 32)];
  v19((char *)v23, 1LL, 1LL, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v2, v16, v8);
  sub_1000D0158((uint64_t)v7, v22);
  sub_1000D0158(v21, v23);
  return sub_1000D01A0((uint64_t)v2, v25);
}

uint64_t sub_1000CE1F0()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E1D50);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_1000038E8(&qword_1002EB5E0);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  Class v7 = (char *)&v24 - v6;
  uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002E1E30);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DC04(v0, qword_1002F4180);
  uint64_t v24 = sub_10000A634(v0, (uint64_t)qword_1002F4180);
  id v12 = [(id)objc_opt_self(UIColor) clearColor];
  v26[0] = sub_1000038E8(&qword_1002E1E40);
  uint64_t v13 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  v26[1] = v13;
  uint64_t KeyPath = swift_getKeyPath(&unk_10023C390, v26);
  id v27 = v12;
  id v28 = v12;
  id v15 = v12;
  uint64_t v16 = v11;
  Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v28, &v27, v13);
  if (qword_1002E0F90 != -1) {
    swift_once(&qword_1002E0F90, sub_10017CE74);
  }
  uint64_t v17 = sub_10000A634(v8, (uint64_t)qword_1002F52C8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v7, v17, v8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v19(v7, 0LL, 1LL, v8);
  uint64_t v20 = (uint64_t)v25;
  v18(v25, v17, v8);
  v19((char *)v20, 0LL, 1LL, v8);
  uint64_t v21 = (uint64_t)&v2[*(int *)(v0 + 28)];
  v19((char *)v21, 1LL, 1LL, v8);
  uint64_t v22 = (uint64_t)&v2[*(int *)(v0 + 32)];
  v19((char *)v22, 1LL, 1LL, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v2, v16, v8);
  sub_1000D0158((uint64_t)v7, v21);
  sub_1000D0158(v20, v22);
  return sub_1000D01A0((uint64_t)v2, v24);
}

char *sub_1000CE4B0(double a1, double a2, double a3, double a4)
{
  uint64_t v82 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = type metadata accessor for CornerStyle(0LL);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  id v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = &v4[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_itemLayoutContext];
  uint64_t v19 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v18, 1LL, 1LL, v19);
  uint64_t v20 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_backdropView;
  id v21 = objc_allocWithZone(&OBJC_CLASS___UIView);
  uint64_t v22 = v4;
  *(void *)&v4[v20] = objc_msgSend(v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v23 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView;
  *(void *)&v22[v23] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for SmallLockupView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  uint64_t v24 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView;
  uint64_t v25 = type metadata accessor for LockupMediaView();
  *(void *)&v22[v24] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v25)) init];
  uint64_t v26 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002E0778 != -1) {
    swift_once(&qword_1002E0778, sub_100072F4C);
  }
  uint64_t v27 = sub_10000A634(v14, (uint64_t)qword_1002F31C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v27, v14);
  *(void *)&v22[v26] = sub_100011F1C((uint64_t)v17, 1LL, 0LL, 1, 1);
  id v28 = &v22[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  uint64_t v29 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v28, 1LL, 1LL, v29);
  v22[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace] = 1;
  *(void *)&v22[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_pillView] = 0LL;

  CGRect v30 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell(0LL);
  v87.receiver = v22;
  v87.super_class = v30;
  CGRect v31 = (char *)objc_msgSendSuper2(&v87, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v32 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_backdropView;
  CGRect v33 = *(void **)&v31[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_backdropView];
  CGRect v34 = v31;
  id v35 = [v33 layer];
  if (qword_1002E0F68 != -1) {
    swift_once(&qword_1002E0F68, sub_10017CBB0);
  }
  [v35 setBorderWidth:*(double *)&qword_1002F5280];

  uint64_t v36 = v79;
  uint64_t v37 = v80;
  (*(void (**)(char *, void, uint64_t))(v79 + 104))(v12, enum case for CornerStyle.continuous(_:), v80);
  CornerStyle.apply(withRadius:to:)(*(void *)&v31[v32], 12.0);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  id v38 = [v34 contentView];
  [v38 addSubview:*(void *)&v31[v32]];

  id v39 = &v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  __int128 v40 = *(_OWORD *)&v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 16];
  v93[0] = *(_OWORD *)&v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  v93[1] = v40;
  char v94 = v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)id v39 = 0x4020000000000000LL;
  *((void *)v39 + 1) = 0x4039000000000000LL;
  v39[16] = 0;
  *((void *)v39 + 3) = 0LL;
  v39[32] = 1;
  uint64_t v41 = v34;
  sub_100068D40((uint64_t)v93, v42, v43);

  v88[0] = xmmword_100236D50;
  v88[1] = xmmword_100236D60;
  char v89 = 0;
  uint64_t v90 = 0LL;
  uint64_t v91 = 0LL;
  char v92 = 1;
  uint64_t v44 = v41;
  sub_1000673E8(v88);

  uint64_t v45 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v46 = v44;
  id v47 = [v45 blackColor];
  id v48 = [v47 CGColor];

  id v49 = &v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  uint64_t v50 = *(void **)&v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  uint64_t v51 = *(void **)&v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 8];
  int v52 = *(void **)&v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 16];
  *(void *)id v49 = v48;
  *(int64x2_t *)(v49 + 8) = vdupq_n_s64(1uLL);
  id v53 = v50;
  sub_10000B3E0(v51);
  sub_10000B3E0(v52);
  id v54 = v48;

  sub_10000B3F0(v51);
  sub_10000B3F0(v52);
  sub_100068E94(v50, v51, (unint64_t)v52);

  sub_10000B3F0(v51);
  sub_10000B3F0(v52);

  uint64_t v55 = &v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v56 = *(_DWORD *)&v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v54) = *(_DWORD *)&v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 4];
  unsigned __int8 v57 = v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v51) = v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)uint64_t v55 = 0;
  *((_DWORD *)v55 + 1) = 1051931443;
  v55[8] = 0;
  uint64_t v58 = *((unsigned int *)v55 + 3);
  *((_DWORD *)v55 + 3) = 0;
  v55[16] = 1;
  uint64_t v59 = v46;
  LOBYTE(v85) = v57;
  LOBYTE(v83) = (_BYTE)v51;
  v60.n128_u32[0] = v56;
  sub_100068FFC((int)v54, v57 | (unint64_t)(v58 << 32), (char)v51, v60);

  char v61 = v59[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled];
  v59[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v61 & 1) == 0)
  {
    char v62 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v59) + 0x98LL))();
    uint64_t v63 = v59;
    sub_10006753C(v62);
  }

  uint64_t v64 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel;
  [*(id *)&v59[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel] setEnablesMarqueeWhenAncestorFocused:1];
  __int128 v86 = 0u;
  __int128 v85 = 0u;
  __int128 v84 = 0u;
  __int128 v83 = 0u;
  __int128 v65 = v59;
  static AutomationSemantics.shelfItem(itemKind:id:parentId:)(0xD000000000000010LL, 0x800000010024C8B0LL, &v85, &v83);
  sub_1000077E0((uint64_t)&v83, (uint64_t *)&unk_1002E3500);
  sub_1000077E0((uint64_t)&v85, (uint64_t *)&unk_1002E3500);
  UIView.setAutomationSemantics(_:)(v10);

  __int128 v66 = *(void (**)(char *, uint64_t))(v81 + 8);
  uint64_t v67 = v82;
  v66(v10, v82);
  uint64_t v68 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView;
  id v69 = *(void **)&v65[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView];
  __int128 v86 = 0u;
  __int128 v85 = 0u;
  __int128 v84 = 0u;
  __int128 v83 = 0u;
  id v70 = v69;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)( 0x70756B636F6CLL,  0xE600000000000000LL,  &v85,  &v83);
  sub_1000077E0((uint64_t)&v83, (uint64_t *)&unk_1002E3500);
  sub_1000077E0((uint64_t)&v85, (uint64_t *)&unk_1002E3500);
  UIView.setAutomationSemantics(_:)(v10);

  v66(v10, v67);
  uint64_t v71 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView;
  uint64_t v72 = *(void **)&v65[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView];
  __int128 v86 = 0u;
  __int128 v85 = 0u;
  __int128 v84 = 0u;
  __int128 v83 = 0u;
  id v73 = v72;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)( 0x616964656DLL,  0xE500000000000000LL,  &v85,  &v83);
  sub_1000077E0((uint64_t)&v83, (uint64_t *)&unk_1002E3500);
  sub_1000077E0((uint64_t)&v85, (uint64_t *)&unk_1002E3500);
  UIView.setAutomationSemantics(_:)(v10);

  v66(v10, v67);
  __int128 v86 = 0u;
  __int128 v85 = 0u;
  __int128 v84 = 0u;
  __int128 v83 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)( 0x656E696C676174LL,  0xE700000000000000LL,  &v85,  &v83);
  sub_1000077E0((uint64_t)&v83, (uint64_t *)&unk_1002E3500);
  sub_1000077E0((uint64_t)&v85, (uint64_t *)&unk_1002E3500);
  UIView.setAutomationSemantics(_:)(v10);
  v66(v10, v67);
  id v74 = [v65 contentView];
  [v74 addSubview:*(void *)&v65[v68]];

  id v75 = [v65 contentView];
  [v75 addSubview:*(void *)&v65[v71]];

  id v76 = [v65 contentView];
  id v77 = *(id *)&v59[v64];
  [v76 addSubview:v77];

  return v65;
}

id sub_1000CEF48(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Class v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v8 = sub_1000038E8(&qword_1002E8670);
  __chkstk_darwin(v8);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v11 = sub_1000038E8(&qword_1002E8678);
  __chkstk_darwin(v11);
  uint64_t v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v14 = (uint64_t)&v2[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  swift_beginAccess( &v2[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition],  v22,  0LL,  0LL);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1000D0090(v14, (uint64_t)v13);
  sub_1000D0090(a1, v15);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1LL, v4) == 1)
  {
    if (v16(v15, 1LL, v4) == 1) {
      return (id)sub_1000077E0((uint64_t)v13, &qword_1002E8670);
    }
  }

  else
  {
    sub_1000D0090((uint64_t)v13, (uint64_t)v10);
    if (v16(v15, 1LL, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      unint64_t v18 = sub_1000D00D8();
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v18);
      uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
      id result = (id)sub_1000077E0((uint64_t)v13, &qword_1002E8670);
      if ((v19 & 1) != 0) {
        return result;
      }
      return [v2 setNeedsLayout];
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }

  sub_1000077E0((uint64_t)v13, &qword_1002E8678);
  return [v2 setNeedsLayout];
}

uint64_t sub_1000CF17C()
{
  uint64_t v1 = v0;
  uint64_t v50 = type metadata accessor for LayoutRect(0LL);
  uint64_t v49 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  id v48 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = type metadata accessor for MixedMediaLockupLayout(0LL);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v51 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v4 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000038E8(&qword_1002E8670);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v47 = type metadata accessor for MixedMediaLockupLayout.Metrics(0LL, v8);
  uint64_t v46 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell(0LL);
  v60.receiver = v1;
  v60.super_class = v15;
  objc_msgSendSuper2(&v60, "layoutSubviews");
  int v16 = v1[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_state];
  char v17 = v1[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_state] != 0;
  int v18 = v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace];
  uint64_t v19 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  swift_beginAccess( &v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition],  v59,  0LL,  0LL);
  sub_1000D0090(v19, (uint64_t)v10);
  uint64_t v20 = v14;
  sub_1000CD2A0(v1, v17, v18, (uint64_t)v10, (uint64_t)v14);
  sub_1000077E0((uint64_t)v10, &qword_1002E8670);
  if (qword_1002E0AC8 != -1) {
    swift_once(&qword_1002E0AC8, sub_1000CDC7C);
  }
  uint64_t v21 = qword_1002F4130;
  uint64_t v22 = qword_1002F4138;
  sub_1000112B0(qword_1002F4118, qword_1002F4130);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v21, v22);
  double left = AnyDimension.value(in:rounded:)(v1, v6, v21, v22);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v44);
  if (v16)
  {
    double top = 0.0;
    double bottom = 0.0;
    double right = left;
  }

  else
  {
    double top = UIEdgeInsetsZero.top;
    double left = UIEdgeInsetsZero.left;
    double bottom = UIEdgeInsetsZero.bottom;
    double right = UIEdgeInsetsZero.right;
  }

  uint64_t v27 = v47;
  uint64_t v28 = v46;
  uint64_t v29 = v45;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v20, v47);
  v57[0] = *(void *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView];
  uint64_t v30 = type metadata accessor for SmallLockupView();
  LayoutView.withLayoutMargins(_:)(v58, v30, protocol witness table for UIView, top, left, bottom, right);
  uint64_t v31 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView;
  uint64_t v32 = *(void **)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView];
  v57[3] = type metadata accessor for LockupMediaView();
  v57[4] = protocol witness table for UIView;
  v57[0] = v32;
  CGRect v33 = *(void **)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel];
  id v34 = v32;
  if ([v33 hasContent])
  {
    *(void *)&__int128 v56 = type metadata accessor for DynamicTypeLabel(0LL);
    *((void *)&v56 + 1) = &protocol witness table for UILabel;
    id v35 = v33;
  }

  else
  {
    CGRect v33 = 0LL;
    __int128 v56 = 0u;
    __int128 v55 = 0u;
  }

  id v54 = v33;
  uint64_t v36 = v51;
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)(v29, v58, v57, &v54);
  id v37 = [v1 contentView];
  [v37 frame];

  __n128 v38 = CGRect.subtracting(insets:)([v1 layoutMargins]);
  id v39 = v48;
  MixedMediaLockupLayout.placeChildren(relativeTo:in:)(v1, v38);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v50);
  __int128 v40 = *(void **)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_backdropView];
  sub_1000CD864();
  objc_msgSend(v40, "setFrame:");
  id v41 = *(id *)&v1[v31];
  sub_1001BB200(v41, 2);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v20, v27);
}

void sub_1000CF6AC()
{
  uint64_t v1 = v0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MixedMediaLockupCollectionViewCell(0LL);
  objc_msgSendSuper2(&v4, "prepareForReuse");
  [*(id *)&v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel] setText:0];
  id v2 = objc_retain(*(id *)(*(void *)&v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView]
                         + OBJC_IVAR____TtC8AppStore15SmallLockupView_artworkView));
  ArtworkView.image.setter(0LL);

  id v3 = *(id *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView];
  sub_1000B3618();
}

double sub_1000CF7E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = sub_1000038E8(&qword_1002E8670);
  __n128 v14 = __chkstk_darwin(v13);
  int v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for MixedMediaLockupLayout.Metrics(0LL, v14);
  uint64_t v40 = *(void *)(v17 - 8);
  uint64_t v41 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell(0LL);
  v43.receiver = v1;
  v43.super_class = v20;
  objc_msgSendSuper2(&v43, "jet_focusedFrame");
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;
  if ([v1 isFocused]
    && [*(id *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel] hasContent])
  {
    uint64_t v38 = v3;
    uint64_t v39 = v2;
    int v29 = v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace];
    uint64_t v30 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
    swift_beginAccess( &v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition],  v42,  0LL,  0LL);
    sub_1000D0090(v30, (uint64_t)v16);
    sub_1000CD2A0(v1, 1, v29, (uint64_t)v16, (uint64_t)v19);
    uint64_t v31 = sub_1000077E0((uint64_t)v16, &qword_1002E8670);
    MixedMediaLockupLayout.Metrics.lockupPosition.getter(v31);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:),  v6);
    LOBYTE(v30) = static MixedMediaLockupLayout.LockupPosition.== infix(_:_:)(v12, v9);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v7 + 8);
    v32(v9, v6);
    v32(v12, v6);
    if ((v30 & 1) != 0)
    {
      if (qword_1002E0AD0 != -1) {
        swift_once(&qword_1002E0AD0, sub_1000CDC94);
      }
      uint64_t v33 = qword_1002F4158;
      uint64_t v34 = qword_1002F4160;
      sub_1000112B0(qword_1002F4140, qword_1002F4158);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v33, v34);
      double v35 = AnyDimension.value(in:rounded:)(v1, v5, v33, v34);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v39);
      double v22 = sub_10000B354(v22, v24, v26, v28, v35, 0.0);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v41);
  }

  return v22;
}

void sub_1000CFB20(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MediaClickMetricsEvent.ActionType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
  sub_10006B300();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  uint64_t v10 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell(0LL);
  v19.receiver = v2;
  v19.super_class = v10;
  objc_msgSendSuper2(&v19, "pressesBegan:withEvent:", isa, a2);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(*(void *)&v2[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView] + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer)
           + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
  if (Strong)
  {
    uint64_t v12 = (_BYTE *)Strong;
    sub_10009262C(a1);
    if ((v13 & 1) != 0)
    {
      uint64_t v14 = qword_1002F4830;
      if ((v12[qword_1002F4830] & 1) == 0)
      {
        uint64_t v15 = *(void **)&v12[qword_1002EBA50];
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = (void *)dispatch thunk of VideoPlayer.playerItem.getter();

          if (v17)
          {

            v12[v14] = 1;
            sub_10013B448();
            (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for MediaClickMetricsEvent.ActionType.enterFullscreen(_:),  v5);
            sub_10013C284((uint64_t)v8);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            sub_10013CD20();
          }
        }
      }
    }
  }

void sub_1000CFDD0()
{
  sub_1000077E0( v0 + OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition,  &qword_1002E8670);
}

id sub_1000CFE5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MixedMediaLockupCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000CFF28()
{
  return type metadata accessor for MixedMediaLockupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for MixedMediaLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E8650;
  if (!qword_1002E8650) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MixedMediaLockupCollectionViewCell);
  }
  return result;
}

void sub_1000CFF6C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    _OWORD v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_100021268( 319LL,  &qword_1002E8668,  (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockupLayout.LockupPosition);
    if (v5 <= 0x3F)
    {
      double v6[5] = *(void *)(v4 - 8) + 64LL;
      v6[6] = &unk_10023C338;
      void v6[7] = &unk_10023C350;
      swift_updateClassMetadata2(a1, 256LL, 8LL, v6, a1 + 472);
    }
  }

uint64_t sub_1000D0038()
{
  return swift_unknownObjectWeakLoadStrong( *(void *)(*(void *)(*v0 + OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView)
                     + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer)
         + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
}

id sub_1000D006C()
{
  return objc_retain(*(id *)(*(void *)(*v0 + OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView)
                           + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoContainer));
}

uint64_t sub_1000D0090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E8670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000D00D8()
{
  unint64_t result = qword_1002E8680;
  if (!qword_1002E8680)
  {
    uint64_t v1 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for MixedMediaLockupLayout.LockupPosition, v1);
    atomic_store(result, (unint64_t *)&qword_1002E8680);
  }

  return result;
}

uint64_t sub_1000D0124()
{
  return 16LL;
}

__n128 sub_1000D0130(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000D0140()
{
  return 16LL;
}

__n128 sub_1000D014C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000D0158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002EB5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D01A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E1D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000D01EC()
{
  unint64_t result = qword_1002E8688;
  if (!qword_1002E8688)
  {
    uint64_t v1 = type metadata accessor for ProductMediaCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023C3E0, v1);
    atomic_store(result, (unint64_t *)&qword_1002E8688);
  }

  return result;
}

double sub_1000D0234(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v39 = type metadata accessor for PageGrid(0LL);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  unint64_t v3 = (uint64_t *)((char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = sub_1000038E8((uint64_t *)&unk_1002EE3B0);
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v43, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023C430, v17);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  uint64_t v20 = swift_getKeyPath(&unk_10023C460, v19);
  ReadOnlyLens.subscript.getter(&v42, v20, v8);
  __n128 v21 = swift_release(v20);
  (*(void (**)(void *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
  __n128 v22 = swift_bridgeObjectRelease(v42);
  ItemLayoutContext.state.getter(v22);
  uint64_t v23 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v24 = swift_dynamicCastClassUnconditional(v35, v23, 0LL, 0LL, 0LL);
  uint64_t v25 = (uint64_t)v34;
  ItemLayoutContext.componentLayoutOptions.getter(v24);
  uint64_t v27 = swift_getKeyPath(&unk_10023C490, v26);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v27);
  double v28 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  (*(void (**)(void *, uint64_t))(v37 + 8))(v3, v39);
  id v29 = sub_10014DB80();
  sub_1000335A0((uint64_t)v43, (uint64_t)v7, v28, v25, (uint64_t)v29);
  double v31 = v30;
  swift_unknownObjectRelease(v29);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v25, v41);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v38);
  _s8AppStore17PillOverlayLayoutVwxx_0(v43);
  return v31;
}

uint64_t UITextView.isTextExtraTall.getter()
{
  uint64_t v1 = type metadata accessor for CharacterSet(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = __chkstk_darwin(v1).n128_u64[0];
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v6 = objc_msgSend(v0, "text", v3);
  if (!v6) {
    return 0LL;
  }
  uint64_t v7 = v6;
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  uint64_t v10 = v9;

  uint64_t v16 = v8;
  uint64_t v17 = v10;
  static CharacterSet.excessiveLineHeight.getter(v11);
  unint64_t v12 = sub_100007768();
  uint64_t v13 = 1LL;
  StringProtocol.rangeOfCharacter(from:options:range:)(v5, 0LL, 0LL, 0LL, 1LL, &type metadata for String, v12);
  LOBYTE(v7) = v14;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  swift_bridgeObjectRelease(v17);
  return v13;
}

double UITextView.languageAwareOutsets.getter()
{
  id v1 = [v0 font];
  if (!v1) {
    return UIEdgeInsetsZero.top;
  }
  uint64_t v2 = v1;
  double v3 = UIFont.languageAwareOutsets.getter();

  return v3;
}

id UITextView.textLength.getter()
{
  id result = [v0 text];
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    uint64_t v5 = v4;

    uint64_t v6 = String.count.getter(v3, v5);
    swift_bridgeObjectRelease(v5);
    return (id)v6;
  }

  return result;
}

void _sSo10UITextViewC8AppStoreE12measurements7fitting2inSo14JUMeasurementsVSo6CGSizeV_So18UITraitEnvironment_ptF_0()
{
  id v1 = v0;
  objc_msgSend(v0, "sizeThatFits:");
  id v2 = [v0 font];
  if (v2)
  {
    uint64_t v3 = v2;
    UIFont.estimatedFirstBaseline.getter();
  }

  [v1 textContainerInset];
  [v1 textContainerInset];
  id v4 = [v1 font];
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 descender];
  }

double sub_1000D09EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1002E0E28 != -1) {
    swift_once(&qword_1002E0E28, sub_10016A568);
  }
  uint64_t ObjectType = swift_getObjectType(a6);
  return sub_100137EA8(&qword_1002F4D78, a6, ObjectType);
}

uint64_t destroy for InfoDebugAction(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 24));
}

void *initializeWithCopy for InfoDebugAction(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

void *assignWithCopy for InfoDebugAction(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

void *assignWithTake for InfoDebugAction(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for InfoDebugAction(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InfoDebugAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
    *(void *)(result + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = 0LL;
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 32) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for InfoDebugAction()
{
  return &type metadata for InfoDebugAction;
}

uint64_t sub_1000D0BF4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain(*(void *)(v0 + 24));
  return v1;
}

void sub_1000D0C20()
{
}

void sub_1000D0C2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a4)
  {
    id v7 = [(id)objc_opt_self(UIPasteboard) generalPasteboard];
    swift_bridgeObjectRetain(a2);
    v8._countAndFlagsBits = 10LL;
    v8._object = (void *)0xE100000000000000LL;
    String.append(_:)(v8);
    v9._countAndFlagsBits = a3;
    v9._object = a4;
    String.append(_:)(v9);
    id v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    id v7 = [(id)objc_opt_self(UIPasteboard) generalPasteboard];
    id v10 = String._bridgeToObjectiveC()();
  }

  [v7 setString:v10];
}

uint64_t sub_1000D0D3C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ArcadePageUrls(0LL);
  uint64_t v81 = *(void *)(v3 - 8);
  uint64_t v82 = v3;
  __n128 v4 = __chkstk_darwin(v3);
  uint64_t v80 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v79 = type metadata accessor for StoreTab(0LL, v4);
  uint64_t v73 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  __int128 v78 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  Swift::String v9 = (char *)&v68 - v8;
  uint64_t v85 = type metadata accessor for EditorialPageKey(0LL);
  uint64_t v10 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  __int128 v83 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  char v14 = (char *)&v68 - v13;
  uint64_t v15 = sub_1000038E8((uint64_t *)&unk_1002E4940);
  __chkstk_darwin(v15);
  uint64_t v77 = (uint64_t)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v76 = (uint64_t)&v68 - v18;
  __chkstk_darwin(v19);
  id v74 = (char *)&v68 - v20;
  __chkstk_darwin(v21);
  id v75 = (char *)&v68 - v22;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v68 - v24;
  __chkstk_darwin(v26);
  uint64_t v84 = (uint64_t)&v68 - v27;
  uint64_t v28 = type metadata accessor for StoreTab.Identifier(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  double v31 = (char *)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  StoreTab.identifier.getter(v32);
  int v33 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v31, v28);
  if (v33 == enum case for StoreTab.Identifier.discover(_:)
    || v33 == enum case for StoreTab.Identifier.apps(_:)
    || v33 == enum case for StoreTab.Identifier.games(_:))
  {
    sub_1000038E8(&qword_1002E31C0);
    *a1 = 0LL;
    StoreTab.url.getter();
    uint64_t v34 = type metadata accessor for FlowDestination(0LL);
    uint64_t v35 = a1;
    uint64_t v36 = v34;
    uint64_t v37 = 7LL;
    goto LABEL_7;
  }

  if (v33 == enum case for StoreTab.Identifier.purchased(_:))
  {
    *a1 = 0LL;
    uint64_t v34 = type metadata accessor for FlowDestination(0LL);
    uint64_t v35 = a1;
    uint64_t v36 = v34;
    uint64_t v37 = 14LL;
LABEL_7:
    swift_storeEnumTagMultiPayload(v35, v36, v37);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56LL))( a1,  0LL,  1LL,  v34);
  }

  if (v33 == enum case for StoreTab.Identifier.search(_:))
  {
    *a1 = 0LL;
    uint64_t v34 = type metadata accessor for FlowDestination(0LL);
    uint64_t v35 = a1;
    uint64_t v36 = v34;
    uint64_t v37 = 4LL;
    goto LABEL_7;
  }

  if (v33 == enum case for StoreTab.Identifier.arcade(_:))
  {
    uint64_t v72 = v1;
    uint64_t v39 = ((uint64_t (*)(void))StoreTab.editorialPageUrls.getter)();
    uint64_t v71 = *(void (**)(char *, void, uint64_t))(v10 + 104);
    v71(v14, enum case for EditorialPageKey.subscriber(_:), v85);
    if (*(void *)(v39 + 16) && (unint64_t v40 = sub_1000EE244((uint64_t)v14), (v41 & 1) != 0))
    {
      unint64_t v42 = v40;
      id v70 = *(void (**)(char *, uint64_t, __n128))(v39 + 56);
      uint64_t v43 = type metadata accessor for URL(0LL);
      uint64_t v44 = *(void *)(v43 - 8);
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v25, (char *)v70 + *(void *)(v44 + 72) * v42, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v25, 0LL, 1LL, v43);
    }

    else
    {
      uint64_t v43 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56LL))(v25, 1LL, 1LL, v43);
    }

    __n128 v45 = swift_bridgeObjectRelease(v39);
    id v70 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
    v70(v14, v85, v45);
    uint64_t v46 = v73;
    uint64_t v47 = v79;
    id v69 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
    v69(v9, v72, v79);
    type metadata accessor for URL(0LL);
    uint64_t v48 = *(void *)(v43 - 8);
    uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
    if (v68(v25, 1LL, v43) == 1)
    {
      uint64_t v49 = v43;
      StoreTab.url.getter();
      uint64_t v50 = *(void (**)(char *, uint64_t))(v46 + 8);
      v50(v9, v47);
      uint64_t v51 = sub_1000D17E0((uint64_t)v25);
    }

    else
    {
      uint64_t v50 = *(void (**)(char *, uint64_t))(v46 + 8);
      v50(v9, v47);
      uint64_t v52 = v84;
      (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v84, v25, v43);
      uint64_t v49 = v43;
      uint64_t v51 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v52, 0LL, 1LL, v43);
    }

    uint64_t v53 = v47;
    uint64_t v54 = StoreTab.editorialPageUrls.getter(v51);
    uint64_t v55 = (uint64_t)v83;
    v71(v83, enum case for EditorialPageKey.nonSubscriber(_:), v85);
    __int128 v56 = v78;
    if (*(void *)(v54 + 16) && (unint64_t v57 = sub_1000EE244(v55), (v58 & 1) != 0))
    {
      uint64_t v59 = (uint64_t)v74;
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))( v74,  *(void *)(v54 + 56) + *(void *)(v48 + 72) * v57,  v49);
      objc_super v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
      v60(v59, 0LL, 1LL, v49);
    }

    else
    {
      objc_super v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
      uint64_t v59 = (uint64_t)v74;
      v60((uint64_t)v74, 1LL, 1LL, v49);
    }

    __n128 v61 = swift_bridgeObjectRelease(v54);
    v70(v83, v85, v61);
    v69(v56, v72, v53);
    if (v68((char *)v59, 1LL, v49) == 1)
    {
      uint64_t v62 = (uint64_t)v75;
      StoreTab.url.getter();
      v50(v56, v53);
      sub_1000D17E0(v59);
    }

    else
    {
      v50(v56, v53);
      uint64_t v62 = (uint64_t)v75;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v75, v59, v49);
      v60(v62, 0LL, 1LL, v49);
    }

    uint64_t v63 = v84;
    uint64_t v64 = v76;
    sub_10003DD04(v84, v76);
    uint64_t v65 = v77;
    sub_10003DD04(v62, v77);
    __int128 v66 = v80;
    ArcadePageUrls.init(subscriberUrl:nonSubscriberUrl:)(v64, v65);
    sub_1000D17E0(v62);
    sub_1000D17E0(v63);
    uint64_t v67 = (char *)a1 + *(int *)(sub_1000038E8(&qword_1002E32A8) + 48);
    *a1 = 0LL;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v67, v66, v82);
    uint64_t v34 = type metadata accessor for FlowDestination(0LL);
    uint64_t v35 = a1;
    uint64_t v36 = v34;
    uint64_t v37 = 25LL;
    goto LABEL_7;
  }

  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v28, v28);
  __break(1u);
  return result;
}

uint64_t sub_1000D140C()
{
  uint64_t v0 = type metadata accessor for NavigationTab(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StoreTab.Identifier(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v36 - v10;
  StoreTab.identifier.getter(v9);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v11, v4);
  if (v12 == enum case for StoreTab.Identifier.discover(_:))
  {
    v13._countAndFlagsBits = 0xD000000000000013LL;
    v13._object = (void *)0x800000010024C980LL;
    v14._countAndFlagsBits = 0LL;
    v14._object = (void *)0xE000000000000000LL;
    object = localizedString(_:comment:)(v13, v14)._object;
    uint64_t v16 = (unsigned int *)&enum case for NavigationTab.discover(_:);
LABEL_13:
    uint64_t v29 = (*(uint64_t (**)(char *, void, uint64_t))(v1 + 104))(v3, *v16, v0);
    uint64_t v30 = NavigationTab.intValue.getter(v29);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v31 = objc_allocWithZone(&OBJC_CLASS___UITabBarItem);
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    id v26 = [v31 initWithTitle:v23 image:0 tag:v30];
    goto LABEL_14;
  }

  if (v12 == enum case for StoreTab.Identifier.apps(_:))
  {
    v17._countAndFlagsBits = 0x5449545F45474150LL;
    v17._object = (void *)0xEF535050415F454CLL;
    v18._countAndFlagsBits = 0LL;
    v18._object = (void *)0xE000000000000000LL;
    object = localizedString(_:comment:)(v17, v18)._object;
    uint64_t v16 = (unsigned int *)&enum case for NavigationTab.apps(_:);
    goto LABEL_13;
  }

  if (v12 == enum case for StoreTab.Identifier.games(_:))
  {
    v19._object = (void *)0x800000010024C960LL;
    v19._countAndFlagsBits = 0xD000000000000010LL;
    v20._countAndFlagsBits = 0LL;
    v20._object = (void *)0xE000000000000000LL;
    object = localizedString(_:comment:)(v19, v20)._object;
    uint64_t v16 = (unsigned int *)&enum case for NavigationTab.games(_:);
    goto LABEL_13;
  }

  if (v12 == enum case for StoreTab.Identifier.purchased(_:))
  {
    v21._countAndFlagsBits = 0xD000000000000014LL;
    v21._object = (void *)0x800000010024C940LL;
    v22._countAndFlagsBits = 0LL;
    v22._object = (void *)0xE000000000000000LL;
    object = localizedString(_:comment:)(v21, v22)._object;
    uint64_t v16 = (unsigned int *)&enum case for NavigationTab.purchased(_:);
    goto LABEL_13;
  }

  if (v12 == enum case for StoreTab.Identifier.search(_:))
  {
    type metadata accessor for BundleImage(0LL);
    NSString v23 = (NSString)static BundleImage.load(_:bundle:with:compatibleWith:)( 0x6349686372616553LL,  0xEA00000000006E6FLL,  0LL,  0LL,  0LL);
    uint64_t v24 = (*(uint64_t (**)(char *, void, uint64_t))(v1 + 104))( v3,  enum case for NavigationTab.search(_:),  v0);
    uint64_t v25 = NavigationTab.intValue.getter(v24);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v26 = [objc_allocWithZone(UITabBarItem) initWithTitle:0 image:v23 tag:v25];
LABEL_14:
    uint64_t v32 = v26;

    StoreTab.identifier.getter(v33);
    uint64_t v34 = UITabBarItem.withAXIdentifier(_:)(v8);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return v34;
  }

  if (v12 == enum case for StoreTab.Identifier.arcade(_:))
  {
    v27._countAndFlagsBits = 0xD000000000000011LL;
    v27._object = (void *)0x800000010024C920LL;
    v28._countAndFlagsBits = 0LL;
    v28._object = (void *)0xE000000000000000LL;
    object = localizedString(_:comment:)(v27, v28)._object;
    uint64_t v16 = (unsigned int *)&enum case for NavigationTab.arcade(_:);
    goto LABEL_13;
  }

  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v4, v4);
  __break(1u);
  return result;
}

uint64_t sub_1000D17E0(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E4940);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_1000D1820(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v2 = a1;
    }
    else {
      uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = __CocoaSet.makeIterator()(v2);
    uint64_t v4 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
    unint64_t v5 = sub_10006B300();
    uint64_t v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    uint64_t v1 = v27[0];
    uint64_t v25 = v27[1];
    uint64_t v7 = v27[2];
    uint64_t v8 = v27[3];
    unint64_t v9 = v27[4];
  }

  else
  {
    uint64_t v10 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    uint64_t v6 = (void *)swift_bridgeObjectRetain(a1);
    uint64_t v8 = 0LL;
  }

  int64_t v24 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    uint64_t v17 = v8;
    if ((v1 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v21 = __CocoaSet.Iterator.next()(v6);
    if (!v21) {
      goto LABEL_34;
    }
    uint64_t v22 = v21;
    uint64_t v26 = v21;
    uint64_t v23 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v23, 7LL);
    id v15 = v28;
    swift_unknownObjectRelease(v22);
    if (!v15) {
      goto LABEL_34;
    }
LABEL_13:
    id v16 = [v15 type];

    if (!v16) {
      goto LABEL_34;
    }
  }

  if (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v8 << 6);
LABEL_12:
    id v15 = *(id *)(*(void *)(v1 + 48) + 8 * v14);
    if (!v15) {
      goto LABEL_34;
    }
    goto LABEL_13;
  }

  int64_t v18 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v18 >= v24) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v8;
    if (!v19)
    {
      uint64_t v8 = v17 + 2;
      if (v17 + 2 >= v24) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v8);
      if (!v19)
      {
        uint64_t v8 = v17 + 3;
        if (v17 + 3 >= v24) {
          goto LABEL_34;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v8);
        if (!v19)
        {
          uint64_t v8 = v17 + 4;
          if (v17 + 4 >= v24) {
            goto LABEL_34;
          }
          unint64_t v19 = *(void *)(v25 + 8 * v8);
          if (!v19)
          {
            uint64_t v8 = v17 + 5;
            if (v17 + 5 >= v24) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v25 + 8 * v8);
            if (!v19)
            {
              uint64_t v20 = v17 + 6;
              while (v24 != v20)
              {
                unint64_t v19 = *(void *)(v25 + 8 * v20++);
                if (v19)
                {
                  uint64_t v8 = v20 - 1;
                  goto LABEL_31;
                }
              }

void sub_1000D1B00(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v2 = a1;
    }
    else {
      uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = __CocoaSet.makeIterator()(v2);
    uint64_t v4 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
    unint64_t v5 = sub_10006B300();
    uint64_t v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    uint64_t v1 = v27[0];
    uint64_t v25 = v27[1];
    uint64_t v7 = v27[2];
    uint64_t v8 = v27[3];
    unint64_t v9 = v27[4];
  }

  else
  {
    uint64_t v10 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    uint64_t v6 = (void *)swift_bridgeObjectRetain(a1);
    uint64_t v8 = 0LL;
  }

  int64_t v24 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    uint64_t v17 = v8;
    if ((v1 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v21 = __CocoaSet.Iterator.next()(v6);
    if (!v21) {
      goto LABEL_34;
    }
    uint64_t v22 = v21;
    uint64_t v26 = v21;
    uint64_t v23 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v23, 7LL);
    id v15 = v28;
    swift_unknownObjectRelease(v22);
    if (!v15) {
      goto LABEL_34;
    }
LABEL_13:
    id v16 = [v15 type];

    if (v16 == (id)1) {
      goto LABEL_34;
    }
  }

  if (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v8 << 6);
LABEL_12:
    id v15 = *(id *)(*(void *)(v1 + 48) + 8 * v14);
    if (!v15) {
      goto LABEL_34;
    }
    goto LABEL_13;
  }

  int64_t v18 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v18 >= v24) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v8;
    if (!v19)
    {
      uint64_t v8 = v17 + 2;
      if (v17 + 2 >= v24) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v8);
      if (!v19)
      {
        uint64_t v8 = v17 + 3;
        if (v17 + 3 >= v24) {
          goto LABEL_34;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v8);
        if (!v19)
        {
          uint64_t v8 = v17 + 4;
          if (v17 + 4 >= v24) {
            goto LABEL_34;
          }
          unint64_t v19 = *(void *)(v25 + 8 * v8);
          if (!v19)
          {
            uint64_t v8 = v17 + 5;
            if (v17 + 5 >= v24) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v25 + 8 * v8);
            if (!v19)
            {
              uint64_t v20 = v17 + 6;
              while (v24 != v20)
              {
                unint64_t v19 = *(void *)(v25 + 8 * v20++);
                if (v19)
                {
                  uint64_t v8 = v20 - 1;
                  goto LABEL_31;
                }
              }

uint64_t type metadata accessor for PanFocusView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStoreP33_671E758634B0569D27947FA48ECCC62C12PanFocusView);
}

uint64_t sub_1000D1F44(uint64_t a1, uint64_t a2)
{
  return sub_1000D647C(*(void *)a1, *(_BYTE *)(a1 + 8), *(void *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_1000D1F5C()
{
  uint64_t v0 = type metadata accessor for OSLogger.Subsystem(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for OSLogger(0LL, v2);
  sub_10000DC04(v5, qword_1002F41D8);
  sub_10000A634(v5, (uint64_t)qword_1002F41D8);
  if (qword_1002E1108 != -1) {
    swift_once(&qword_1002E1108, sub_1001E917C);
  }
  uint64_t v6 = sub_10000A634(v0, (uint64_t)qword_1002F5788);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v6, v0);
  return OSLogger.init(subsystem:category:)(v4, 0x73656C6369747241LL, 0xE800000000000000LL);
}

void sub_1000D2058()
{
  qword_1002F41F0 = 0x406F400000000000LL;
}

void sub_1000D206C()
{
  qword_1002F41F8 = 0x4079000000000000LL;
}

void sub_1000D207C()
{
  uint64_t v1 = v0 + qword_1002E8718;
  uint64_t v2 = type metadata accessor for ArticlePage.TouchMode(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
}

id sub_1000D20E8(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(a1);
  uint64_t v3 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v4 = a1;
  id v5 = [v3 defaultCenter];
  [v5 removeObserver:v4];

  v7.receiver = v4;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_1000D2178(uint64_t a1)
{
  uint64_t v2 = a1 + qword_1002E8718;
  uint64_t v3 = type metadata accessor for ArticlePage.TouchMode(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(v2, v3);
}

uint64_t sub_1000D21E8()
{
  return 0LL;
}

void sub_1000D21F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  objc_super v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - v9;
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v31 - v12;
  unint64_t v14 = &v2[qword_1002E8718];
  swift_beginAccess(&v2[qword_1002E8718], v36, 0LL, 0LL);
  id v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v15(v13, v14, v4);
  uint64_t v16 = sub_100004288( (unint64_t *)&unk_1002E8BA0,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
  LOBYTE(a1) = dispatch thunk of static Equatable.== infix(_:_:)(v13, a1, v4, v16);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v13, v4);
  if ((a1 & 1) == 0)
  {
    sub_1000D24B0();
    v15(v10, v14, v4);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ArticlePage.TouchMode.auto(_:), v4);
    uint64_t v18 = sub_100004288( &qword_1002E5780,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
    dispatch thunk of RawRepresentable.rawValue.getter(&v34, v4, v18);
    dispatch thunk of RawRepresentable.rawValue.getter(&v32, v4, v18);
    uint64_t v19 = v35;
    uint64_t v20 = v33;
    if (v34 == v32 && v35 == v33)
    {
      swift_bridgeObjectRelease_n(v35, 2LL);
      v17(v7, v4);
      v17(v10, v4);
    }

    else
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v32, v33, 0LL);
      swift_bridgeObjectRelease(v19);
      __n128 v22 = swift_bridgeObjectRelease(v20);
      ((void (*)(char *, uint64_t, __n128))v17)(v7, v4, v22);
      v17(v10, v4);
      if ((v21 & 1) == 0)
      {
        [v2 setNeedsFocusUpdate];
        [v2 updateFocusIfNeeded];
        return;
      }
    }

    id v23 = [v2 collectionView];
    if (v23)
    {
      int64_t v24 = v23;
      [v23 contentOffset];
      uint64_t v26 = v25;

      Swift::String v27 = &v2[qword_1002E8728];
      uint64_t v28 = *(void *)&v2[qword_1002E8728];
      *(void *)Swift::String v27 = v26;
      int v29 = v27[8];
      v27[8] = 0;
      sub_1000D2A80(v28, v29, v30);
    }

    else
    {
      __break(1u);
    }
  }

void sub_1000D24B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v3 = *(v2 - 1);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  objc_super v7 = &v1[qword_1002E8718];
  swift_beginAccess(&v1[qword_1002E8718], v32, 0LL, 0LL);
  (*(void (**)(char *, char *, void *))(v3 + 16))(v6, v7, v2);
  int v8 = (*(uint64_t (**)(char *, void *))(v3 + 88))(v6, v2);
  if (v8 == enum case for ArticlePage.TouchMode.focus(_:)) {
    goto LABEL_8;
  }
  if (v8 == enum case for ArticlePage.TouchMode.pan(_:))
  {
    [*(id *)&v1[qword_1002F4200] removeFromSuperview];
    uint64_t v2 = sub_1000D28E8();
    [v2 setEnabled:0];

    id v9 = [v1 collectionView];
    if (v9)
    {
      uint64_t v10 = v9;
      id v11 = [v9 panGestureRecognizer];

      uint64_t v12 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
      uint64_t v13 = swift_allocObject(v12, 40LL, 7LL);
      *(_OWORD *)(v13 + swift_weakDestroy(v0 + 16) = xmmword_100236BD0;
      char v14 = 1;
      id v15 = [objc_allocWithZone(NSNumber) initWithInteger:1];
      *(void *)(v13 + 32) = v15;
      uint64_t v31 = v13;
      specialized Array._endMutation()(v15);
      uint64_t v16 = v31;
      sub_10000DFD4(0LL, (unint64_t *)&qword_1002E8BB0, &OBJC_CLASS___NSNumber_ptr);
      v17.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v11, "setAllowedTouchTypes:", v17.super.isa, swift_bridgeObjectRelease(v16).n128_f64[0]);
      goto LABEL_11;
    }

    goto LABEL_19;
  }

  if (v8 != enum case for ArticlePage.TouchMode.auto(_:))
  {
LABEL_21:
    _diagnoseUnexpectedEnumCase<A>(type:)(v2, v2);
    __break(1u);
    return;
  }

  uint64_t v2 = *(void **)&v1[qword_1002F4200];
  id v18 = [v2 superview];

  if (v18)
  {
LABEL_8:
    [*(id *)&v1[qword_1002F4200] removeFromSuperview];
    uint64_t v2 = sub_1000D28E8();
    [v2 setEnabled:0];
  }

  else
  {
    id v29 = [v1 view];
    if (!v29)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }

    __n128 v30 = v29;
    [v29 insertSubview:v2 atIndex:0];

    uint64_t v2 = sub_1000D28E8();
    [v2 setEnabled:1];
  }

  id v19 = [v1 collectionView];
  if (!v19)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  uint64_t v20 = v19;
  id v11 = [v19 panGestureRecognizer];

  uint64_t v21 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
  uint64_t v22 = swift_allocObject(v21, 48LL, 7LL);
  *(_OWORD *)(v22 + swift_weakDestroy(v0 + 16) = xmmword_100236DC0;
  *(void *)(v22 + 32) = [objc_allocWithZone(NSNumber) initWithInteger:0];
  id v23 = [objc_allocWithZone(NSNumber) initWithInteger:2];
  *(void *)(v22 + 40) = v23;
  uint64_t v31 = v22;
  specialized Array._endMutation()(v23);
  uint64_t v24 = v31;
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E8BB0, &OBJC_CLASS___NSNumber_ptr);
  v17.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v11, "setAllowedTouchTypes:", v17.super.isa, swift_bridgeObjectRelease(v24).n128_f64[0]);
  char v14 = 0;
LABEL_11:

  id v25 = [v1 collectionView];
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = type metadata accessor for FocusableCollectionView();
    uint64_t v28 = swift_dynamicCastClass(v26, v27);
    if (v28) {
      *(_BYTE *)(v28 + OBJC_IVAR____TtC8AppStore23FocusableCollectionView_allowFocus) = v14;
    }
  }

id sub_1000D28E8()
{
  uint64_t v1 = qword_1002E8720;
  uint64_t v2 = *(void **)(v0 + qword_1002E8720);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1002E8720);
  }

  else
  {
    id v4 = sub_1000D2948(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0LL;
  }

  id v6 = v2;
  return v3;
}

id sub_1000D2948(uint64_t a1)
{
  id v1 = [objc_allocWithZone(UIPanGestureRecognizer) initWithTarget:a1 action:"handlePanWithGestureRecognizer:"];
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
  uint64_t v3 = swift_allocObject(v2, 40LL, 7LL);
  *(_OWORD *)(v3 + swift_weakDestroy(v0 + 16) = xmmword_100236BD0;
  id v4 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
  id v5 = v1;
  id v6 = [v4 initWithInteger:1];
  *(void *)(v3 + 32) = v6;
  specialized Array._endMutation()(v6);
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E8BB0, &OBJC_CLASS___NSNumber_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "setAllowedTouchTypes:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  [v5 setRequiresExclusiveTouchType:0];
  [v5 setEnabled:0];
  return v5;
}

void sub_1000D2A80(uint64_t a1, int a2, __n128 a3)
{
  int v72 = a2;
  uint64_t v71 = a1;
  uint64_t v73 = type metadata accessor for OSLogger(0LL, a3);
  uint64_t v4 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  id v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - v12;
  char v14 = v3;
  id v15 = &v3[qword_1002E8718];
  swift_beginAccess(&v3[qword_1002E8718], v79, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v15, v7);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for ArticlePage.TouchMode.auto(_:), v7);
  uint64_t v16 = sub_100004288( &qword_1002E5780,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
  dispatch thunk of RawRepresentable.rawValue.getter(&v74, v7, v16);
  dispatch thunk of RawRepresentable.rawValue.getter(&v77, v7, v16);
  unint64_t v17 = v75;
  uint64_t v18 = v78;
  if (v74 == v77 && v75 == v78)
  {
    swift_bridgeObjectRelease_n(v75, 2LL);
    id v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v10, v7);
    v19(v13, v7);
    uint64_t v20 = v14;
    uint64_t v21 = v4;
    uint64_t v22 = v6;
    uint64_t v23 = v73;
  }

  else
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v75, v77, v78, 0LL);
    swift_bridgeObjectRelease(v17);
    __n128 v25 = swift_bridgeObjectRelease(v18);
    uint64_t v26 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    v26(v10, v7, v25);
    ((void (*)(char *, uint64_t))v26)(v13, v7);
    uint64_t v20 = v14;
    uint64_t v21 = v4;
    uint64_t v22 = v6;
    uint64_t v23 = v73;
    if ((v24 & 1) == 0) {
      return;
    }
  }

  uint64_t v27 = &v20[qword_1002E8728];
  double v28 = *(double *)&v20[qword_1002E8728];
  unsigned int v29 = v20[qword_1002E8728 + 8];
  int v30 = v72 >> 6;
  if (!v30)
  {
    if (v29 > 0x3F) {
      goto LABEL_19;
    }
    goto LABEL_12;
  }

  if (v30 == 1)
  {
    if ((v29 & 0xC0) != 0x40) {
      goto LABEL_19;
    }
    if ((v72 & 1) != 0)
    {
      if ((v29 & 1) != 0) {
        return;
      }
LABEL_19:
      if (qword_1002E0AF0 != -1) {
        swift_once(&qword_1002E0AF0, sub_1000D1F5C);
      }
      uint64_t v31 = sub_10000A634(v23, (uint64_t)qword_1002F41D8);
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v22, v31, v23);
      uint64_t v32 = sub_1000038E8((uint64_t *)&unk_1002E6150);
      uint64_t v33 = type metadata accessor for LogMessage(0LL);
      uint64_t v34 = (_OWORD *)swift_allocObject( v32,  ((*(unsigned __int8 *)(*(void *)(v33 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v33 - 8) + 80LL))
                      + *(void *)(*(void *)(v33 - 8) + 72LL),
                        *(unsigned __int8 *)(*(void *)(v33 - 8) + 80LL) | 7LL);
      v34[1] = xmmword_100237B10;
      uint64_t v74 = 0LL;
      unint64_t v75 = 0xE000000000000000LL;
      _StringGuts.grow(_:)(31LL);
      v35._object = (void *)0x800000010024CAB0LL;
      v35._countAndFlagsBits = 0xD000000000000011LL;
      String.append(_:)(v35);
      char v36 = v27[8];
      uint64_t v77 = *(void *)v27;
      LOBYTE(v78) = v36;
      _print_unlocked<A, B>(_:_:)( &v77,  &v74,  &type metadata for ArticlePageViewController.PanMode,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
      v37._countAndFlagsBits = 0x74657366666F202CLL;
      v37._object = (void *)0xEA0000000000203ALL;
      String.append(_:)(v37);
      id v38 = [v20 collectionView];
      if (v38)
      {
        uint64_t v39 = v38;
        [v38 contentOffset];
        double v41 = v40;

        v42._countAndFlagsBits = Double.description.getter(v41);
        object = v42._object;
        String.append(_:)(v42);
        swift_bridgeObjectRelease(object);
        uint64_t v76 = &type metadata for String;
        static LogMessage.safe(_:)(&v74);
        sub_1000077E0((uint64_t)&v74, (uint64_t *)&unk_1002E3500);
        Logger.debug(_:)(v34, v23, &protocol witness table for OSLogger);
        __n128 v44 = swift_bridgeObjectRelease(v34);
        (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v22, v23, v44);
        __n128 v45 = (void *)objc_opt_self(&OBJC_CLASS___UIFocusSystem);
        id v46 = [v45 focusSystemForEnvironment:v20];
        uint64_t v47 = v46;
        if (v46)
        {
          id v48 = [v46 focusedItem];

          if (v48)
          {
            uint64_t v49 = objc_opt_self(&OBJC_CLASS___UIView);
            uint64_t v47 = (void *)swift_dynamicCastObjCClass(v48, v49);
            if (!v47) {
              swift_unknownObjectRelease(v48);
            }
          }

          else
          {
            uint64_t v47 = 0LL;
          }
        }

        int v50 = v27[8] >> 6;
        if (!v50)
        {
LABEL_36:
          objc_msgSend(v20, "setNeedsFocusUpdate", v71);
          [v20 updateFocusIfNeeded];
          if (v27[8] > 0x3Fu)
          {

            return;
          }

          uint64_t v57 = *(void *)v27;
          id v58 = [v45 focusSystemForEnvironment:v20];
          uint64_t v59 = v58;
          if (v58)
          {
            id v60 = [v58 focusedItem];

            if (v60)
            {
              uint64_t v61 = objc_opt_self(&OBJC_CLASS___UIView);
              uint64_t v59 = (void *)swift_dynamicCastObjCClass(v60, v61);
              if (!v59) {
                swift_unknownObjectRelease(v60);
              }
            }

            else
            {
              uint64_t v59 = 0LL;
            }
          }

          id v62 = [v20 collectionView];
          uint64_t v63 = v62;
          if (!v59
            || v62
            && (sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr),
                id v64 = v59,
                char v65 = static NSObject.== infix(_:_:)(v64, v63),
                v64,
                v64,
                v63,
                uint64_t v63 = v64,
                (v65 & 1) != 0))
          {
          }

          else
          {
            __int128 v66 = *(void **)&v20[qword_1002F4200];
            sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
            id v67 = v59;
            id v68 = v66;
            char v69 = static NSObject.== infix(_:_:)(v67, v68);

            if ((v69 & 1) == 0)
            {
              *(void *)uint64_t v27 = 0LL;
              char v70 = 0x80;
              goto LABEL_50;
            }
          }

          *(void *)uint64_t v27 = v57;
          char v70 = 64;
LABEL_50:
          v27[8] = v70;
          return;
        }

        if (v50 == 1)
        {
          if (!v47) {
            goto LABEL_36;
          }
          uint64_t v51 = *(void **)&v20[qword_1002F4200];
          sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
          uint64_t v34 = v47;
          id v52 = v51;
          char v53 = static NSObject.== infix(_:_:)(v34, v52);

          if ((v53 & 1) == 0) {
            goto LABEL_36;
          }
LABEL_35:

          return;
        }

        if (!v47) {
          goto LABEL_36;
        }
        uint64_t v34 = v47;
        id v54 = [v20 collectionView];
        if (v54)
        {
          uint64_t v55 = v54;
          unsigned __int8 v56 = [v34 isDescendantOfView:v54];

          if ((v56 & 1) == 0) {
            goto LABEL_36;
          }
          goto LABEL_35;
        }
      }

      else
      {
        __break(1u);
      }

      __break(1u);
      return;
    }

    if ((v29 & 1) != 0) {
      goto LABEL_19;
    }
LABEL_12:
    goto LABEL_19;
  }

  if ((v29 & 0xC0) != 0x80 || v28 != 0.0 || v29 != 128) {
    goto LABEL_19;
  }
}

void sub_1000D31F0()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  if (([v0 isViewLoaded] & 1) == 0)
  {
    if (qword_1002E0C68 != -1) {
      swift_once(&qword_1002E0C68, sub_100131E60);
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(&unk_1002EB5E8);
    if (Strong)
    {
      uint64_t v4 = Strong;
      uint64_t v5 = (uint64_t (**)(uint64_t, void *))off_1002EB5F0;
      uint64_t v6 = swift_getObjectType(Strong);
      uint64_t v7 = (void *)v5[1](v6, v5);
      swift_unknownObjectRelease(v4);
      if (v7)
      {
        id v8 = [v7 view];

        if (v8)
        {
          [v8 bounds];
          double v10 = v9;
          double v12 = v11;
          double v14 = v13;
          double v16 = v15;

          id v17 = objc_msgSend(objc_allocWithZone(UIView), "initWithFrame:", v10, v12, v14, v16);
          [v1 setView:v17];

          id v18 = [v1 view];
          if (v18)
          {
            id v19 = v18;
            [v18 setAutoresizingMask:18];

            id v20 = [v1 collectionViewLayout];
            id v21 = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for FocusableCollectionView()),  "initWithFrame:collectionViewLayout:",  v20,  v10,  v12,  v14,  v16);

            [v21 setAutoresizingMask:18];
            [v21 setDelegate:*(void *)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate]];
            [v21 setDataSource:*(void *)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDataSource]];
            [v21 setShowsVerticalScrollIndicator:0];
            [v21 setShowsHorizontalScrollIndicator:0];
            [v21 setAllowsSelection:1];
            memset(v26, 0, sizeof(v26));
            char v27 = 4;
            id v24 = v21;
            sub_100064CBC((uint64_t)v26);

            id v22 = [v1 view];
            if (v22)
            {
              uint64_t v23 = v22;
              [v22 addSubview:v24];

              [v1 setCollectionView:v24];
              return;
            }

            goto LABEL_14;
          }
        }

        else
        {
          __break(1u);
        }

        __break(1u);
LABEL_14:
        __break(1u);
        return;
      }
    }

    v25.receiver = v1;
    v25.super_class = ObjectType;
    objc_msgSendSuper2(&v25, "loadView");
  }

void sub_1000D3510(void *a1)
{
  id v1 = a1;
  sub_1000D31F0();
}

void sub_1000D3544()
{
  v19.receiver = v0;
  v19.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v19, "viewDidLoad");
  id v1 = [v0 collectionView];
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }

  uint64_t v2 = v1;
  [v1 setContentInsetAdjustmentBehavior:2];

  id v3 = [v0 collectionView];
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }

  uint64_t v4 = v3;
  objc_msgSend( v3,  "setContentInset:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  id v5 = [v0 collectionView];
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }

  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for ArticleHeaderView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v7);
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  [v6 registerClass:ObjCClassFromMetadata forSupplementaryViewOfKind:v9 withReuseIdentifier:v10];

  id v11 = [v0 view];
  if (!v11)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  double v12 = v11;
  [v11 insertSubview:*(void *)&v0[qword_1002E8708] atIndex:0];

  double v13 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v14 = [v13 defaultCenter];
  [v14 addObserver:v0 selector:"didFailFocusMovement:" name:UIFocusMovementDidFailNotification object:0];

  id v15 = [v13 defaultCenter];
  [v15 addObserver:v0 selector:"didUpdateFocus:" name:UIFocusDidUpdateNotification object:0];

  id v16 = [v0 view];
  if (v16)
  {
    id v17 = v16;
    id v18 = sub_1000D28E8();
    [v17 addGestureRecognizer:v18];

    sub_1000D24B0();
    return;
  }

void sub_1000D37C4(void *a1)
{
  id v1 = a1;
  sub_1000D3544();
}

id sub_1000D37F8(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __n128 v6 = __chkstk_darwin(v5);
  id v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchQoS(0LL, v6);
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  __chkstk_darwin(v9);
  id v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&double v17 = __chkstk_darwin(v16).n128_u64[0];
  objc_super v19 = (char *)&v39 - v18;
  v53.receiver = v2;
  v53.super_class = ObjectType;
  id result = objc_msgSendSuper2(&v53, "viewDidAppear:", a1 & 1, v17);
  if ((v2[qword_1002E8710] & 1) == 0)
  {
    uint64_t v39 = qword_1002E8710;
    id v21 = &v2[qword_1002E8718];
    swift_beginAccess(&v2[qword_1002E8718], v52, 0LL, 0LL);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v21, v12);
    (*(void (**)(char *, void, uint64_t))(v13 + 104))( v15,  enum case for ArticlePage.TouchMode.auto(_:),  v12);
    uint64_t v22 = sub_100004288( &qword_1002E5780,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v12, v22);
    dispatch thunk of RawRepresentable.rawValue.getter(&v50, v12, v22);
    uint64_t v23 = v45;
    uint64_t v24 = v51;
    if (aBlock == v50 && v45 == v51)
    {
      swift_bridgeObjectRelease_n(v45, 2LL);
      objc_super v25 = *(void (**)(char *, uint64_t))(v13 + 8);
      v25(v15, v12);
      v25(v19, v12);
      uint64_t v26 = v39;
    }

    else
    {
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v45, v50, v51, 0LL);
      swift_bridgeObjectRelease(v23);
      __n128 v28 = swift_bridgeObjectRelease(v24);
      unsigned int v29 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
      v29(v15, v12, v28);
      id result = (id)((uint64_t (*)(char *, uint64_t))v29)(v19, v12);
      uint64_t v26 = v39;
      if ((v27 & 1) == 0) {
        return result;
      }
    }

    uint64_t v30 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E34F0, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v31 = (void *)static OS_dispatch_queue.main.getter(v30);
    uint64_t v32 = swift_allocObject(&unk_10028B038, 24LL, 7LL);
    swift_unknownObjectWeakInit(v32 + 16, v2);
    id v48 = sub_1000D6E54;
    uint64_t v49 = v32;
    aBlock = _NSConcreteStackBlock;
    uint64_t v45 = 1107296256LL;
    id v46 = sub_100140110;
    uint64_t v47 = &unk_10028B050;
    uint64_t v33 = _Block_copy(&aBlock);
    __n128 v34 = swift_release(v49);
    static DispatchQoS.unspecified.getter(v34);
    aBlock = (void **)_swiftEmptyArrayStorage;
    uint64_t v35 = sub_100004288( (unint64_t *)&qword_1002E8BF0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v36 = sub_1000038E8((uint64_t *)&unk_1002E34E0);
    unint64_t v37 = sub_10004899C();
    uint64_t v38 = v43;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v36, v37, v43, v35);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v8, v33);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v38);
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v11, v41);
    v2[v26] = 1;
  }

  return result;
}

void sub_1000D3BB4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = Strong + qword_1002E8728;
    uint64_t v6 = *(void *)(Strong + qword_1002E8728);
    *(void *)uint64_t v5 = 0LL;
    int v7 = *(unsigned __int8 *)(v5 + 8);
    *(_BYTE *)(v5 + 8) = 0;
    sub_1000D2A80(v6, v7, v3);
  }

void sub_1000D3C20(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1000D37F8(a3);
}

id sub_1000D3C60()
{
  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v22, "viewWillLayoutSubviews");
  uint64_t v1 = *(void **)&v0[qword_1002E8708];
  id result = [v0 view];
  if (result)
  {
    __n128 v3 = result;
    [result bounds];
    double v5 = v4;
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;

    objc_msgSend(v1, "setFrame:", v5, v7, v9, v11);
    uint64_t v12 = *(void **)&v0[qword_1002F4200];
    id result = [v0 view];
    if (result)
    {
      uint64_t v13 = result;
      [result bounds];
      double v15 = v14;
      double v17 = v16;
      double v19 = v18;
      double v21 = v20;

      return objc_msgSend(v12, "setFrame:", v15, v17, v19, v21);
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

void sub_1000D3D90(void *a1)
{
  id v1 = a1;
  sub_1000D3C60();
}

double sub_1000D3DC4(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  uint64_t v9 = dispatch thunk of ArticlePagePresenter.card.getter();
  if (v9)
  {
    uint64_t v10 = v9;
    [v6 bounds];
    sub_1000D61A0(v10, v8, v11, v12);
    double v14 = v13;

    swift_release(v10);
  }

  else
  {

    double v14 = 0.0;
  }

  return v14;
}

id sub_1000D3E78(void *a1, uint64_t a2, uint64_t a3)
{
  double v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v3);
  if (a2 == 0xD000000000000035LL && a3 == 0x800000010024A0E0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0xD000000000000035LL, 0x800000010024A0E0LL, 0LL) & 1) != 0)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    NSString v10 = String._bridgeToObjectiveC()();
    double v11 = (void *)IndexPath._bridgeToObjectiveC()();
    id v12 = [a1 dequeueReusableSupplementaryViewOfKind:v9 withReuseIdentifier:v10 forIndexPath:v11];
  }

  else
  {
    NSString v10 = String._bridgeToObjectiveC()();
    double v11 = (void *)IndexPath._bridgeToObjectiveC()();
    v14.receiver = v4;
    v14.super_class = ObjectType;
    id v12 = objc_msgSendSuper2(&v14, "collectionView:viewForSupplementaryElementOfKind:atIndexPath:", a1, v10, v11);
  }

  return v12;
}

id sub_1000D3FD0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  uint64_t v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  id v16 = a3;
  id v17 = a1;
  id v18 = sub_1000D3E78(v16, v13, v15);

  __n128 v19 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v19);
  return v18;
}

void sub_1000D40B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  double v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  if (a3 == 0xD000000000000035LL && a4 == 0x800000010024A0E0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, 0xD000000000000035LL, 0x800000010024A0E0LL, 0LL) & 1) != 0)
  {
    uint64_t v11 = type metadata accessor for ArticleHeaderView();
    uint64_t v12 = swift_dynamicCastClass(a2, v11);
    if (v12)
    {
      uint64_t v13 = (char *)v12;
      id v22 = a2;
      uint64_t v14 = dispatch thunk of ArticlePagePresenter.card.getter();
      if (v14)
      {
        uint64_t v16 = v14;
        uint64_t v17 = *(void *)&v5[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph];
        sub_1000D631C(v14, v5, v17, v13, v15);
        void v24[3] = type metadata accessor for TodayCard(0LL);
        v24[4] = sub_100004288( (unint64_t *)&qword_1002E8BD0,  (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard,  (uint64_t)&protocol conformance descriptor for TodayCard);
        uint64_t v23[3] = v11;
        v24[0] = v16;
        v23[0] = v13;
        uint64_t v18 = *(void *)&v5[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_artworkLoader];
        id v19 = v22;
        swift_retain(v16);
        tryToFetch(artworkFor:into:on:asPartOf:)(v24, v23, v18, v17);
        swift_release(v16);

        _s8AppStore17PillOverlayLayoutVwxx_0(v23);
        sub_1000077E0((uint64_t)v24, &qword_1002EBD70);
        return;
      }
    }
  }

  NSString v20 = String._bridgeToObjectiveC()();
  uint64_t v21 = (void *)IndexPath._bridgeToObjectiveC()();
  v25.receiver = v5;
  v25.super_class = ObjectType;
  objc_msgSendSuper2(&v25, "collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:", a1, a2, v20, v21);
}

uint64_t sub_1000D42B0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for IndexPath(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  uint64_t v17 = v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  id v18 = a3;
  id v19 = a4;
  id v20 = a1;
  sub_1000D40B8((uint64_t)v18, v19, v15, v17);

  __n128 v21 = swift_bridgeObjectRelease(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
}

uint64_t sub_1000D43A8(char *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for IndexPath(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  uint64_t v17 = v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  if (v15 == 0xD000000000000035LL && v17 == 0x800000010024A0E0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, 0xD000000000000035LL, 0x800000010024A0E0LL, 0LL) & 1) != 0)
  {
    uint64_t v18 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002EE420, &OBJC_CLASS___UICollectionReusableView_ptr);
    uint64_t v19 = *(void *)&a1[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_artworkLoader];
    _OWORD v26[3] = v18;
    v26[0] = a4;
    uint64_t v20 = *(void *)&a1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph];
    id v21 = a4;
    id v22 = a3;
    uint64_t v23 = a1;
    tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v26, v19, v20, 1LL);
    _s8AppStore17PillOverlayLayoutVwxx_0(v26);
  }

  __n128 v24 = swift_bridgeObjectRelease(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v24);
}

uint64_t sub_1000D4538()
{
  uint64_t v1 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v5);
  id v7 = &v11[-v6];
  sub_1001ECF60();
  dispatch thunk of ArticlePagePresenter.touchMode.getter();
  uint64_t v8 = v0 + qword_1002E8718;
  swift_beginAccess(v8, v12, 0LL, 0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
  swift_beginAccess(v8, v11, 33LL, 0LL);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 24))(v8, v7, v1);
  swift_endAccess(v11);
  sub_1000D21F0((uint64_t)v4);
  uint64_t v9 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v9(v7, v1);
  return ((uint64_t (*)(_BYTE *, uint64_t))v9)(v4, v1);
}

void sub_1000D4668()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v62[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v62[-1] - v7;
  uint64_t v9 = &v0[qword_1002E8718];
  swift_beginAccess(&v0[qword_1002E8718], v66, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v9, v2);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ArticlePage.TouchMode.auto(_:), v2);
  uint64_t v10 = sub_100004288( &qword_1002E5780,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
  dispatch thunk of RawRepresentable.rawValue.getter(v63, v2, v10);
  dispatch thunk of RawRepresentable.rawValue.getter(&v64, v2, v10);
  __int128 v11 = v63[0];
  uint64_t v12 = *((void *)&v64 + 1);
  if (v63[0] == v64)
  {
    swift_bridgeObjectRelease_n(*((void *)&v63[0] + 1), 2LL);
    uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
    v13(v5, v2);
    uint64_t v14 = ((uint64_t (*)(char *, uint64_t))v13)(v8, v2);
  }

  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)( *(void *)&v63[0],  *((void *)&v63[0] + 1),  v64,  *((void *)&v64 + 1),  0LL);
    swift_bridgeObjectRelease(*((void *)&v11 + 1));
    __n128 v16 = swift_bridgeObjectRelease(v12);
    uint64_t v17 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
    v17(v5, v2, v16);
    uint64_t v14 = ((uint64_t (*)(char *, uint64_t))v17)(v8, v2);
    if ((v15 & 1) == 0) {
      goto LABEL_34;
    }
  }

  uint64_t v19 = Notification.userInfo.getter(v14);
  if (!v19) {
    goto LABEL_34;
  }
  uint64_t v20 = v19;
  v62[0] = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(UIFocusUpdateContextKey);
  v62[1] = v21;
  AnyHashable.init<A>(_:)(v63, v62, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v20 + 16) && (unint64_t v22 = sub_1000EDEB0((uint64_t)v63), (v23 & 1) != 0))
  {
    sub_100007338(*(void *)(v20 + 56) + 32 * v22, (uint64_t)&v64);
  }

  else
  {
    __int128 v64 = 0u;
    __int128 v65 = 0u;
  }

  swift_bridgeObjectRelease(v20);
  sub_1000077AC((uint64_t)v63);
  if (!*((void *)&v65 + 1))
  {
    sub_1000077E0((uint64_t)&v64, (uint64_t *)&unk_1002E3500);
    goto LABEL_34;
  }

  uint64_t v24 = sub_10000DFD4(0LL, (unint64_t *)&unk_1002E8BC0, &OBJC_CLASS___UIFocusUpdateContext_ptr);
  if ((swift_dynamicCast(v62, &v64, (char *)&type metadata for Any + 8, v24, 6LL) & 1) == 0)
  {
LABEL_34:
    uint64_t v51 = &v1[qword_1002E8728];
    uint64_t v52 = *(void *)&v1[qword_1002E8728];
    *(void *)uint64_t v51 = 0LL;
    int v53 = v51[8];
    v51[8] = 0x80;
    sub_1000D2A80(v52, v53, v18);
    return;
  }

  id v25 = v62[0];
  if ([v62[0] focusHeading] != (id)1 && objc_msgSend(v25, "focusHeading") != (id)2) {
    goto LABEL_33;
  }
  id v26 = [v25 nextFocusedView];

  if (!v26) {
    goto LABEL_25;
  }
  id v27 = [v25 nextFocusedView];
  id v28 = [v1 collectionView];
  unsigned int v29 = v28;
  if (!v27)
  {
    if (!v28) {
      goto LABEL_25;
    }
    goto LABEL_22;
  }

  if (!v28)
  {
    unsigned int v29 = v27;
LABEL_22:

    goto LABEL_23;
  }

  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
  id v30 = v27;
  char v31 = static NSObject.== infix(_:_:)(v30, v29);

  if ((v31 & 1) != 0) {
    goto LABEL_25;
  }
LABEL_23:
  id v32 = [v25 nextFocusedView];
  if (!v32) {
    goto LABEL_33;
  }
  uint64_t v33 = v32;
  __n128 v34 = *(void **)&v1[qword_1002F4200];
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
  id v35 = v34;
  id v36 = v33;
  LOBYTE(v33) = static NSObject.== infix(_:_:)(v36, v35);

  if ((v33 & 1) == 0)
  {
LABEL_33:

    goto LABEL_34;
  }

LABEL_42:
  __break(1u);
}

    if (v21 < 0) {
      uint64_t v71 = v21;
    }
    else {
      uint64_t v71 = v21 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v21);
    id v30 = _CocoaArrayWrapper.endIndex.getter(v71);
    if (v30) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }

  __n128 v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 32))(v75, v27, v28);
  id v35 = PageFacets.facetGroups.getter(v34);
  id v36 = *(void *)(v35 + 16);
  id v37 = v86;
  if (v36)
  {
    uint64_t v38 = v85;
    double v39 = *(unsigned __int8 *)(v85 + 80);
    uint64_t v74 = v35;
    double v40 = v35 + ((v39 + 32) & ~v39);
    id v41 = *(void *)(v85 + 72);
    uint64_t v81 = (v39 + 24) & ~v39;
    uint64_t v82 = v41;
    v80 += v81;
    uint64_t v42 = *(void (**)(char *, char *, uint64_t, __n128))(v85 + 16);
    uint64_t v78 = v39 | 7;
    uint64_t v79 = v42;
    do
    {
      double v43 = v79;
      ((void (*)(char *, uint64_t, uint64_t))v79)(v11, v40, v7);
      double v44 = swift_allocObject(&unk_10028B0D8, 24LL, 7LL);
      id v45 = swift_unknownObjectWeakInit(v44 + 16, v37);
      id v46 = v83;
      v43(v83, v11, v7, v45);
      double v47 = swift_allocObject(&unk_10028B240, v80, v78);
      *(void *)(v47 + swift_weakDestroy(v0 + 16) = v44;
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v47 + v81, v46, v7);
      swift_retain(v44);
      double v48 = sub_1001102D4((uint64_t)sub_1000DA0A8, v47);
      swift_release(v44);
      *(void *)&__n128 v49 = swift_release(v47).n128_u64[0];
      v48[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_imageAlignment] = 1;
      objc_msgSend(v48, "setNeedsLayout", v49);
      if (qword_1002E0770 != -1) {
        swift_once(&qword_1002E0770, sub_100072F34);
      }
      uint64_t v51 = type metadata accessor for FontUseCase(0LL, v50);
      uint64_t v52 = sub_10000A634(v51, (uint64_t)qword_1002F31A8);
      int v53 = *(void *)(v51 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v6, v52, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v6, 0LL, 1LL, v51);
      id v54 = (uint64_t)&v48[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase];
      swift_beginAccess(&v48[OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase], v88, 0LL, 0LL);
      uint64_t v55 = v84;
      sub_10000DF2C(v54, v84, &qword_1002E25C0);
      swift_beginAccess(v54, v87, 33LL, 0LL);
      sub_10000DBBC((uint64_t)v6, v54);
      swift_endAccess(v87);
      sub_10010EA18(v55);
      sub_1000077E0((uint64_t)v6, &qword_1002E25C0);
      sub_1000077E0(v55, &qword_1002E25C0);
      PageFacets.FacetGroup.title.getter(v56);
      if (v57)
      {
        uint64_t v59 = v57;
        uint64_t v60 = String._bridgeToObjectiveC()();
        *(void *)&id v58 = swift_bridgeObjectRelease(v59).n128_u64[0];
      }

      else
      {
        uint64_t v60 = 0LL;
      }

      objc_msgSend(v48, "setTitle:forState:", v60, 0, v58);

      [v86 addSubview:v48];
      swift_beginAccess(v18, v87, 33LL, 0LL);
      uint64_t v61 = v48;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
      uint64_t v63 = *(void *)((*v18 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      id v62 = *(void *)((*v18 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v63 >= v62 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1LL);
      }
      __int128 v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v61);
      specialized Array._endMutation()(v64);
      swift_endAccess(v87);

      uint64_t v38 = v85;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v11, v7);
      v40 += v82;
      --v36;
      id v37 = v86;
    }

    while (v36);
    id v35 = v74;
  }

  swift_bridgeObjectRelease(v35);
  __int128 v65 = OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_areButtonsEnabled;
  v37[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_areButtonsEnabled] = 1;
  __int128 v66 = *v18;
  if (!((unint64_t)*v18 >> 62))
  {
    id v67 = *(void *)((v66 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*v18);
    if (v67) {
      goto LABEL_35;
    }
LABEL_51:
    objc_msgSend(v37, "setNeedsLayout", swift_bridgeObjectRelease(v66).n128_f64[0]);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
    return;
  }

  if (v66 < 0) {
    int v72 = *v18;
  }
  else {
    int v72 = v66 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v18);
  id v67 = _CocoaArrayWrapper.endIndex.getter(v72);
  if (!v67) {
    goto LABEL_51;
  }
LABEL_35:
  if (v67 >= 1)
  {
    for (k = 0LL; k != v67; ++k)
    {
      if ((v66 & 0xC000000000000001LL) != 0) {
        char v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v66);
      }
      else {
        char v69 = *(id *)(v66 + 8 * k + 32);
      }
      char v70 = v69;
      [v69 setEnabled:v37[v65]];
    }

    goto LABEL_51;
  }

  swift_bridgeObjectRelease(v31);
}

uint64_t sub_1000D4C0C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D5074(a1, a2, a3, (void (*)(char *))sub_1000D4668);
}

void sub_1000D4C18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v46[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v46[-1] - v7;
  uint64_t v9 = &v0[qword_1002E8718];
  swift_beginAccess(&v0[qword_1002E8718], v50, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v9, v2);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ArticlePage.TouchMode.auto(_:), v2);
  uint64_t v10 = sub_100004288( &qword_1002E5780,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
  dispatch thunk of RawRepresentable.rawValue.getter(v47, v2, v10);
  dispatch thunk of RawRepresentable.rawValue.getter(&v48, v2, v10);
  __int128 v11 = v47[0];
  uint64_t v12 = *((void *)&v48 + 1);
  if (v47[0] == v48)
  {
    swift_bridgeObjectRelease_n(*((void *)&v47[0] + 1), 2LL);
    uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
    v13(v5, v2);
    uint64_t v14 = ((uint64_t (*)(char *, uint64_t))v13)(v8, v2);
  }

  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)( *(void *)&v47[0],  *((void *)&v47[0] + 1),  v48,  *((void *)&v48 + 1),  0LL);
    swift_bridgeObjectRelease(*((void *)&v11 + 1));
    __n128 v16 = swift_bridgeObjectRelease(v12);
    uint64_t v17 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
    v17(v5, v2, v16);
    uint64_t v14 = ((uint64_t (*)(char *, uint64_t))v17)(v8, v2);
    if ((v15 & 1) == 0) {
      return;
    }
  }

  uint64_t v18 = Notification.userInfo.getter(v14);
  if (v18)
  {
    uint64_t v19 = v18;
    v46[0] = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(UIFocusUpdateContextKey);
    v46[1] = v20;
    AnyHashable.init<A>(_:)(v47, v46, &type metadata for String, &protocol witness table for String);
    if (*(void *)(v19 + 16) && (unint64_t v21 = sub_1000EDEB0((uint64_t)v47), (v22 & 1) != 0))
    {
      sub_100007338(*(void *)(v19 + 56) + 32 * v21, (uint64_t)&v48);
    }

    else
    {
      __int128 v48 = 0u;
      __int128 v49 = 0u;
    }

    swift_bridgeObjectRelease(v19);
    sub_1000077AC((uint64_t)v47);
    if (!*((void *)&v49 + 1))
    {
      sub_1000077E0((uint64_t)&v48, (uint64_t *)&unk_1002E3500);
      return;
    }

    uint64_t v23 = sub_10000DFD4(0LL, (unint64_t *)&unk_1002E8BC0, &OBJC_CLASS___UIFocusUpdateContext_ptr);
    if ((swift_dynamicCast(v46, &v48, (char *)&type metadata for Any + 8, v23, 6LL) & 1) != 0)
    {
      id v24 = v46[0];
      id v25 = &v1[qword_1002E8728];
      if (v1[qword_1002E8728 + 8] <= 0x3Fu)
      {
LABEL_28:

        return;
      }

      id v26 = [v46[0] nextFocusedView];
      id v27 = [v1 collectionView];
      id v28 = v27;
      if (v26)
      {
        if (v27)
        {
          sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
          id v29 = v26;
          char v30 = static NSObject.== infix(_:_:)(v29, v28);

          if ((v30 & 1) != 0) {
            goto LABEL_24;
          }
          goto LABEL_21;
        }

        id v28 = v26;
      }

      else if (!v27)
      {
        goto LABEL_24;
      }

LABEL_21:
      id v31 = [v24 nextFocusedView];

      if (v31)
      {
        id v32 = [v24 nextFocusedView];
        if (!v32) {
          goto LABEL_26;
        }
        __n128 v34 = v32;
        id v35 = *(void **)&v1[qword_1002F4200];
        sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
        id v36 = v35;
        id v37 = v34;
        LOBYTE(v34) = static NSObject.== infix(_:_:)(v37, v36);

        if ((v34 & 1) == 0)
        {
LABEL_26:
          uint64_t v42 = *(void *)v25;
          *(void *)id v25 = 0LL;
          int v43 = v25[8];
          char v44 = 0x80;
LABEL_27:
          v25[8] = v44;
          sub_1000D2A80(v42, v43, v33);
          goto LABEL_28;
        }
      }

uint64_t sub_1000D5068(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D5074(a1, a2, a3, (void (*)(char *))sub_1000D4C18);
}

uint64_t sub_1000D5074(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v7 = type metadata accessor for Notification(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  id v11 = a1;
  a4(v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1000D5114(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - v9;
  id v11 = &v1[qword_1002E8718];
  swift_beginAccess(&v1[qword_1002E8718], v44, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v11, v4);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ArticlePage.TouchMode.auto(_:), v4);
  uint64_t v12 = sub_100004288( &qword_1002E5780,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
  dispatch thunk of RawRepresentable.rawValue.getter(&v42, v4, v12);
  dispatch thunk of RawRepresentable.rawValue.getter(&v40, v4, v12);
  uint64_t v13 = v43;
  uint64_t v14 = v41;
  if (v42 == v40 && v43 == v41)
  {
    swift_bridgeObjectRelease_n(v43, 2LL);
    char v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }

  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v43, v40, v41, 0LL);
    swift_bridgeObjectRelease(v13);
    __n128 v17 = swift_bridgeObjectRelease(v14);
    uint64_t v18 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
    v18(v7, v4, v17);
    ((void (*)(char *, uint64_t))v18)(v10, v4);
    if ((v16 & 1) == 0) {
      return;
    }
  }

  id v19 = [a1 view];
  [a1 translationInView:v19];
  uint64_t v21 = v20;
  double v23 = v22;

  switch((unint64_t)[a1 state])
  {
    case 1uLL:
      if ((v2[qword_1002E8728 + 8] & 0xC0) == 0x40)
      {
        id v25 = (double *)&v2[qword_1002E8730];
        goto LABEL_11;
      }

      break;
    case 2uLL:
      if ((v2[qword_1002E8728 + 8] & 0xC0) == 0x40)
      {
        id v25 = (double *)&v2[qword_1002E8730];
        if (v2[qword_1002E8730 + 16] == 1)
        {
LABEL_11:
          *(void *)id v25 = v21;
          v25[1] = v23;
          *((_BYTE *)v25 + swift_weakDestroy(v0 + 16) = 0;
        }
      }

      break;
    case 3uLL:
      id v26 = (double *)&v2[qword_1002E8730];
      if ((v2[qword_1002E8730 + 16] & 1) == 0)
      {
        double v27 = v26[1];
        id v28 = [a1 view];
        [a1 velocityInView:v28];
        double v30 = v29;

        double v31 = fabs(v30);
        if (qword_1002E0AF8 != -1)
        {
          double v39 = v31;
          swift_once(&qword_1002E0AF8, sub_1000D2058);
          double v31 = v39;
        }

        double v32 = 0.0;
        if (*(double *)&qword_1002F41F0 < v31)
        {
          double v33 = v31 * -0.00015;
          if (v33 >= -0.5) {
            double v34 = v33 * (v33 * 0.5 + 1.0) + 1.0;
          }
          else {
            double v34 = exp(v33);
          }
          double v32 = v30 * 0.4 * v34;
        }

        sub_1000D5574(1, 1, v23 - v27 + v32);
        *id v26 = 0.0;
        v26[1] = 0.0;
        *((_BYTE *)v26 + swift_weakDestroy(v0 + 16) = 1;
      }

      break;
    case 4uLL:
    case 5uLL:
      id v24 = &v2[qword_1002E8730];
      *(void *)id v24 = 0LL;
      *((void *)v24 + 1) = 0LL;
      v24[16] = 1;
      break;
    default:
      break;
  }

  if ((v2[qword_1002E8728 + 8] & 0xC0) == 0x40)
  {
    id v35 = [v2 collectionView];
    if (!v35)
    {
      __break(1u);
      JUMPOUT(0x1000D5560LL);
    }

    id v36 = v35;
    unsigned __int8 v37 = [v35 _isAnimatingScroll];

    if ((v37 & 1) == 0)
    {
      id v38 = (double *)&v2[qword_1002E8730];
      if ((v2[qword_1002E8730 + 16] & 1) == 0)
      {
        sub_1000D5574(1, 0, v23 - v38[1]);
        *(void *)id v38 = v21;
        v38[1] = v23;
        *((_BYTE *)v38 + swift_weakDestroy(v0 + 16) = 0;
      }
    }
  }

void sub_1000D5574(char a1, char a2, double a3)
{
  id v7 = [v3 collectionView];
  if (!v7)
  {
    __break(1u);
    goto LABEL_28;
  }

  uint64_t v8 = v7;
  [v7 contentOffset];
  double v10 = v9;

  id v11 = [v3 collectionView];
  if (!v11)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }

  uint64_t v12 = v11;
  [v11 contentSize];
  double v14 = v13;

  id v15 = [v3 collectionView];
  if (!v15)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  char v16 = v15;
  double v17 = v10 + a3;
  [v15 visibleSize];
  double v19 = v18;

  double v20 = v14 - v19;
  if (v14 - v19 < 0.0) {
    double v20 = 0.0;
  }
  if ((a1 & 1) != 0)
  {
    if (v17 < v20) {
      double v20 = v17;
    }
    if (v20 < 0.0) {
      double v17 = 0.0;
    }
    else {
      double v17 = v20;
    }
LABEL_24:
    id v28 = [v3 collectionView];
    if (v28)
    {
      double v29 = v28;
      [v28 contentOffset];
      double v31 = v30;

      id v32 = [v3 collectionView];
      if (v32)
      {
        id v33 = v32;
        objc_msgSend(v32, "setContentOffset:animated:", a2 & 1, v31, v17);

        return;
      }

      goto LABEL_31;
    }

void sub_1000D57E0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1000D5114(v4);
}

Class sub_1000D5834(void *a1)
{
  id v1 = a1;
  id v2 = sub_1000D5888();

  sub_1000038E8((uint64_t *)&unk_1002E3880);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2);
  return isa;
}

id sub_1000D5888()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - v7;
  double v9 = &v0[qword_1002E8718];
  swift_beginAccess(&v0[qword_1002E8718], v31, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v9, v2);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ArticlePage.TouchMode.auto(_:), v2);
  uint64_t v10 = sub_100004288( &qword_1002E5780,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
  dispatch thunk of RawRepresentable.rawValue.getter(&v29, v2, v10);
  dispatch thunk of RawRepresentable.rawValue.getter(&v27, v2, v10);
  uint64_t v11 = v30;
  uint64_t v12 = v28;
  if (v29 == v27 && v30 == v28)
  {
    swift_bridgeObjectRelease_n(v30, 2LL);
    double v13 = *(void (**)(char *, uint64_t))(v3 + 8);
    v13(v5, v2);
    v13(v8, v2);
  }

  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v27, v28, 0LL);
    swift_bridgeObjectRelease(v11);
    __n128 v15 = swift_bridgeObjectRelease(v12);
    char v16 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
    v16(v5, v2, v15);
    ((void (*)(char *, uint64_t))v16)(v8, v2);
    if ((v14 & 1) == 0)
    {
      id result = [v1 collectionView];
      if (result) {
        goto LABEL_10;
      }
      goto LABEL_13;
    }
  }

  if ((v1[qword_1002E8728 + 8] & 0xC0) == 0x40)
  {
    uint64_t v17 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
    uint64_t v18 = swift_allocObject(v17, 40LL, 7LL);
    *(_OWORD *)(v18 + swift_weakDestroy(v0 + 16) = xmmword_100236BD0;
    double v19 = *(void **)&v1[qword_1002F4200];
    *(void *)(v18 + 32) = v19;
    uint64_t v29 = v18;
    specialized Array._endMutation()(v18);
    uint64_t v20 = v29;
    id v21 = v19;
    return (id)v20;
  }

  id result = [v1 collectionView];
  if (result)
  {
LABEL_10:
    double v23 = result;
    id v24 = [result preferredFocusEnvironments];

    uint64_t v25 = sub_1000038E8((uint64_t *)&unk_1002E3880);
    uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

    return (id)v20;
  }

  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_1000D5B40(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1000D6B98();
}

void sub_1000D5B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  uint64_t v7 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  double v13 = (char *)&v26 - v12;
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
  sub_10006B300();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v32.receiver = v2;
  v32.super_class = ObjectType;
  objc_msgSendSuper2(&v32, "pressesEnded:withEvent:", isa, a2);

  __n128 v15 = &v2[qword_1002E8718];
  swift_beginAccess(&v2[qword_1002E8718], v31, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v15, v7);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for ArticlePage.TouchMode.auto(_:), v7);
  uint64_t v16 = sub_100004288( &qword_1002E5780,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
  dispatch thunk of RawRepresentable.rawValue.getter(&v29, v7, v16);
  dispatch thunk of RawRepresentable.rawValue.getter(&v27, v7, v16);
  uint64_t v17 = v30;
  uint64_t v18 = v28;
  if (v29 == v27 && v30 == v28)
  {
    swift_bridgeObjectRelease_n(v30, 2LL);
    double v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v10, v7);
    v19(v13, v7);
  }

  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v27, v28, 0LL);
    swift_bridgeObjectRelease(v17);
    __n128 v21 = swift_bridgeObjectRelease(v18);
    double v22 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    v22(v10, v7, v21);
    ((void (*)(char *, uint64_t))v22)(v13, v7);
    if ((v20 & 1) == 0) {
      return;
    }
  }

  if ((v3[qword_1002E8728 + 8] & 0xC0) == 0x40)
  {
    sub_1000D1820(a1);
    if ((v23 & 1) != 0)
    {
      if (qword_1002E0B00 != -1) {
        swift_once(&qword_1002E0B00, sub_1000D206C);
      }
      double v24 = -*(double *)&qword_1002F41F8;
    }

    else
    {
      sub_1000D1B00(a1);
      if ((v25 & 1) == 0) {
        return;
      }
      if (qword_1002E0B00 != -1) {
        swift_once(&qword_1002E0B00, sub_1000D206C);
      }
      double v24 = *(double *)&qword_1002F41F8;
    }

    sub_1000D5574(1, 1, v24);
  }

double sub_1000D5E60(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E14D0, &OBJC_CLASS___UIPress_ptr);
  unint64_t v8 = sub_10006B300();
  uint64_t v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v7, v8);
  id v10 = a4;
  id v11 = a1;
  sub_1000D5B8C(v9, (uint64_t)a4);

  *(void *)&double result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ArticlePageViewController(uint64_t a1)
{
  uint64_t result = qword_1002E8760;
  if (!qword_1002E8760) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArticlePageViewController);
  }
  return result;
}

uint64_t sub_1000D5F2C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_10023C570;
  uint64_t result = type metadata accessor for ArticlePage.TouchMode(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(result - 8) + 64LL;
    void v4[3] = &unk_10023C588;
    void v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[5] = &unk_10023C5A0;
    v4[6] = &unk_10023C5B8;
    uint64_t result = swift_initClassMetadata2(a1, 256LL, 7LL, v4, a1 + 944);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000D5FD0()
{
  return type metadata accessor for ArticlePageViewController(0LL);
}

uint64_t _s14descr1002936D9C5StateVwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ArticlePageViewController.PanMode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ArticlePageViewController.PanMode( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(_BYTE *)(result + 9) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7E) {
      *(_BYTE *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0LL;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }

  return result;
}

uint64_t sub_1000D6094(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000D60B4(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_1000D60C4(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }

  else
  {
    *(void *)uint64_t result = a2 - 2;
    *(_BYTE *)(result + 8) = 0x80;
  }

  return result;
}

ValueMetadata *type metadata accessor for ArticlePageViewController.PanMode()
{
  return &type metadata for ArticlePageViewController.PanMode;
}

uint64_t sub_1000D6100()
{
  return sub_100004288(&qword_1002E8B98, type metadata accessor for ArticlePageViewController, (uint64_t)&unk_100246808);
}

void sub_1000D612C()
{
  id v1 = [v0 collectionView];
  if (v1)
  {
    int v2 = v1;
    id v3 = [v1 collectionViewLayout];

    [v3 invalidateLayout];
  }

  else
  {
    __break(1u);
  }

double sub_1000D61A0(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for ArticleCardTextView.Config(0LL);
  __n128 v9 = __chkstk_darwin(v8);
  id v11 = (char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = TodayCard.media.getter(v9);
  uint64_t v13 = TodayCard.heroMedia.getter();
  sub_10006E1D4(v12, v13, 0, (uint64_t)v24);
  sub_1001A2654(v24);
  sub_100034DA4(v24);
  [a2 pageMarginInsets];
  double v18 = CGSize.subtracting(insets:)(v14, v15, v16, v17, a3, a4);
  double v20 = v19;
  if (qword_1002E0D08 != -1) {
    swift_once(&qword_1002E0D08, sub_100142594);
  }
  uint64_t v21 = sub_10000A634(v8, (uint64_t)qword_1002F4A20);
  sub_1000D6DB0(v21, (uint64_t)v11);
  if (qword_1002E0CF0 != -1) {
    swift_once(&qword_1002E0CF0, sub_100141A9C);
  }
  sub_1000D6508(a1, (uint64_t)v11, xmmword_1002F4978, a2, v18, v20);
  sub_1000D6DF4((uint64_t)v11);
  return a3;
}

id sub_1000D631C(uint64_t a1, void *a2, uint64_t a3, char *a4, __n128 a5)
{
  __n128 v9 = *(void **)&a4[OBJC_IVAR____TtC8AppStore17ArticleHeaderView_mediaView];
  uint64_t v10 = TodayCard.media.getter(a5);
  uint64_t v11 = TodayCard.heroMedia.getter();
  sub_10006E1D4(v10, v11, 0, (uint64_t)v17);
  sub_1001BCD84(v17, a3);
  sub_100034DA4(v17);
  [v9 setNeedsLayout];
  if (qword_1002E0D08 != -1) {
    swift_once(&qword_1002E0D08, sub_100142594);
  }
  uint64_t v12 = type metadata accessor for ArticleCardTextView.Config(0LL);
  uint64_t v13 = sub_10000A634(v12, (uint64_t)qword_1002F4A20);
  sub_10012DBAC(a1, v13, 0);
  id v14 = [a2 snapshotPageTraitEnvironment];
  uint64_t v15 = *(void *)&a4[OBJC_IVAR____TtC8AppStore17ArticleHeaderView_pageTraits];
  *(void *)&a4[OBJC_IVAR____TtC8AppStore17ArticleHeaderView_pageTraits] = v14;
  swift_unknownObjectRetain(v14);
  swift_unknownObjectRelease(v15);
  [a4 setNeedsLayout];
  swift_unknownObjectRelease(v14);
  return [a4 setNeedsLayout];
}

uint64_t sub_1000D647C(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if (!(a2 >> 6))
  {
    if (a4 < 0x40u) {
      return *(double *)&a1 == *(double *)&a3;
    }
    return 0LL;
  }

  if (a2 >> 6 != 1) {
    return (a4 & 0xC0) == 0x80 && *(double *)&a3 == 0.0 && a4 == 128;
  }
  if ((a4 & 0xC0) == 0x40)
  {
    if ((a2 & 1) == 0) {
      return (a4 & 1) == 0 && *(double *)&a1 == *(double *)&a3;
    }
    if ((a4 & 1) != 0) {
      return 1LL;
    }
  }

  return 0LL;
}

double sub_1000D6508(uint64_t a1, uint64_t a2, _OWORD *a3, void *a4, double a5, double a6)
{
  uint64_t v94 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v12 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  id v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v102 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v98 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v90 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v88 = (char *)&v87 - v17;
  uint64_t v18 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E5300, &OBJC_CLASS___UIFont_ptr);
  double v19 = (int *)type metadata accessor for ArticleCardTextView.Config(0LL);
  uint64_t v20 = v19[8];
  uint64_t v89 = a2;
  uint64_t v21 = a2 + v20;
  id v101 = a4;
  id v22 = [a4 traitCollection];
  uint64_t v99 = v18;
  char v23 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v21, v22);

  uint64_t v24 = a1;
  uint64_t v25 = TodayCard.media.getter();
  uint64_t v26 = type metadata accessor for TodayCardMediaBrandedSingleApp(0LL);
  uint64_t v27 = swift_dynamicCastClass(v25, v26);
  char v92 = v14;
  uint64_t v93 = v12;
  uint64_t v91 = a3;
  uint64_t v100 = v24;
  id v95 = v23;
  if (v27)
  {
    uint64_t v28 = TodayCard.overlay.getter(v27);
    if (v28)
    {
      uint64_t v30 = v28;
      uint64_t v31 = type metadata accessor for TodayCardThreeLineOverlay(0LL);
      if (swift_dynamicCastClass(v30, v31))
      {
        uint64_t v32 = TodayCardThreeLineOverlay.heading.getter();
        uint64_t v34 = v33;
        __n128 v29 = swift_release(v30);
        if (v34) {
          goto LABEL_11;
        }
      }

      else
      {
        __n128 v29 = swift_release(v30);
      }
    }

    uint64_t v38 = TodayCard.heading.getter(v29);
    uint64_t v32 = v38;
    if (!v39)
    {
      swift_bridgeObjectRelease(0LL);
      swift_release(v25);
      uint64_t v34 = 0LL;
      goto LABEL_12;
    }

    uint64_t v40 = v39;
    v103[0] = v38;
    v103[1] = v39;
    v111[0] = 10LL;
    v111[1] = 0xE100000000000000LL;
    v110[0] = 32LL;
    v110[1] = 0xE100000000000000LL;
    unint64_t v41 = sub_100007768();
    uint64_t v32 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v111,  v110,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v41,  v41,  v41);
    uint64_t v34 = v42;
    swift_bridgeObjectRelease(0LL);
    swift_bridgeObjectRelease(v40);
  }

  else
  {
    uint64_t v35 = type metadata accessor for TodayCardMediaInAppPurchase();
    if (!swift_dynamicCastClass(v25, v35))
    {
      uint64_t v76 = type metadata accessor for TodayCardMediaVideo(0LL);
      uint64_t v77 = swift_dynamicCastClass(v25, v76);
      if (!v77)
      {
        __n128 v82 = swift_release(v25);
        uint64_t v32 = TodayCard.heading.getter(v82);
        uint64_t v34 = v83;
        goto LABEL_12;
      }

      uint64_t v78 = TodayCard.overlay.getter(v77);
      if (v78)
      {
        uint64_t v79 = v78;
        uint64_t v80 = type metadata accessor for TodayCardThreeLineOverlay(0LL);
        if (swift_dynamicCastClass(v79, v80))
        {
          uint64_t v32 = TodayCardThreeLineOverlay.heading.getter();
          uint64_t v34 = v81;
          swift_release(v79);
          goto LABEL_11;
        }

        swift_release(v79);
      }

      swift_release(v25);
      uint64_t v32 = 0LL;
      uint64_t v34 = 0LL;
      goto LABEL_12;
    }

    uint64_t v32 = TodayCard.heading.getter(v36);
    uint64_t v34 = v37;
  }

void sub_1000D6B98()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for ArticlePage.TouchMode(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - v7;
  __n128 v9 = &v0[qword_1002E8718];
  swift_beginAccess(&v0[qword_1002E8718], v30, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v9, v2);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ArticlePage.TouchMode.auto(_:), v2);
  uint64_t v10 = sub_100004288( &qword_1002E5780,  (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePage.TouchMode,  (uint64_t)&protocol conformance descriptor for ArticlePage.TouchMode);
  dispatch thunk of RawRepresentable.rawValue.getter(&v28, v2, v10);
  dispatch thunk of RawRepresentable.rawValue.getter(&v26, v2, v10);
  uint64_t v11 = v29;
  uint64_t v12 = v27;
  if (v28 == v26 && v29 == v27)
  {
    swift_bridgeObjectRelease_n(v29, 2LL);
    uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
    v13(v5, v2);
    v13(v8, v2);
  }

  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, v26, v27, 0LL);
    swift_bridgeObjectRelease(v11);
    __n128 v15 = swift_bridgeObjectRelease(v12);
    uint64_t v16 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
    v16(v5, v2, v15);
    ((void (*)(char *, uint64_t))v16)(v8, v2);
    if ((v14 & 1) == 0) {
      return;
    }
  }

  id v17 = [v1 collectionView];
  if (v17)
  {
    uint64_t v18 = v17;
    [v17 contentOffset];
    uint64_t v20 = v19;

    uint64_t v21 = &v1[qword_1002E8728];
    uint64_t v22 = *(void *)&v1[qword_1002E8728];
    *(void *)uint64_t v21 = v20;
    int v23 = v21[8];
    v21[8] = 0;
    sub_1000D2A80(v22, v23, v24);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1000D6DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleCardTextView.Config(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D6DF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArticleCardTextView.Config(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1000D6E30()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000D6E54()
{
}

uint64_t sub_1000D6E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000D6E6C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

char *sub_1000D6E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000038E8(&qword_1002E8CD8);
  __chkstk_darwin(v9);
  uint64_t v56 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000038E8((uint64_t *)&unk_1002E8CE0);
  __chkstk_darwin(v11);
  id v53 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  __n128 v15 = (char *)&v53 - v14;
  uint64_t v16 = sub_1000038E8((uint64_t *)&unk_1002E8CC8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = &v4[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetsPresenter];
  swift_weakInit(&v4[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetsPresenter], 0LL);
  uint64_t v20 = &v4[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_delegate];
  *((void *)v20 + 1) = 0LL;
  swift_unknownObjectWeakInit(v20, 0LL);
  *(void *)&v4[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_areButtonsEnabled] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetAlertController] = 0LL;
  swift_weakAssign(v19, a1);
  *((void *)v20 + 1) = a3;
  uint64_t v55 = a2;
  swift_unknownObjectWeakAssign(v20, a2);
  *(void *)&v4[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_objectGraph] = a4;
  uint64_t v21 = (objc_class *)type metadata accessor for PageFacetsHeaderView();
  v61.receiver = v4;
  v61.super_class = v21;
  uint64_t v57 = a4;
  swift_retain(a4);
  uint64_t v22 = (char *)objc_msgSendSuper2(&v61, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v54 = a1;
  PageFacetsPresenter.pageFacets.getter();
  sub_1000D7C8C((uint64_t)v18);
  sub_1000077E0((uint64_t)v18, (uint64_t *)&unk_1002E8CC8);
  int v23 = &v22[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetsPresenter];
  uint64_t Strong = swift_weakLoadStrong(&v22[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetsPresenter]);
  if (Strong)
  {
    uint64_t v25 = PageFacetsPresenter.onFacetStateDidChange.getter();
    swift_release(Strong);
    uint64_t v26 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E34F0, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v27 = static OS_dispatch_queue.main.getter(v26);
    uint64_t v59 = v26;
    id v60 = &protocol witness table for OS_dispatch_queue;
    v58[0] = v27;
    uint64_t v28 = sub_1000038E8(&qword_1002E8CF0);
    uint64_t v29 = sub_10005E7D4(&qword_1002E8CF8, &qword_1002E8CF0, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
    EventEmitter.addObserver<A>(on:target:method:)(v58, v22, sub_1000D7404, 0LL, v28, v21, v29);
    swift_release(v25);
    _s8AppStore17PillOverlayLayoutVwxx_0(v58);
    uint64_t v30 = sub_1000038E8(&qword_1002E8D00);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v15, 0LL, 1LL, v30);
  }

  else
  {
    uint64_t v31 = sub_1000038E8(&qword_1002E8D00);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v15, 1LL, 1LL, v31);
  }

  sub_1000077E0((uint64_t)v15, (uint64_t *)&unk_1002E8CE0);
  uint64_t v32 = swift_weakLoadStrong(v23);
  uint64_t v33 = (uint64_t)v56;
  uint64_t v34 = (uint64_t)v53;
  if (v32)
  {
    uint64_t v35 = v32;
    uint64_t v36 = PageFacetsPresenter.onSelectedFacetOptionsChanged.getter();
    swift_release(v35);
    uint64_t v37 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E34F0, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v38 = static OS_dispatch_queue.main.getter(v37);
    uint64_t v59 = v37;
    id v60 = &protocol witness table for OS_dispatch_queue;
    v58[0] = v38;
    uint64_t v39 = sub_1000038E8(&qword_1002E8CF0);
    uint64_t v40 = sub_10005E7D4(&qword_1002E8CF8, &qword_1002E8CF0, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
    EventEmitter.addObserver<A>(on:target:method:)(v58, v22, sub_1000D7458, 0LL, v39, v21, v40);
    swift_release(v36);
    _s8AppStore17PillOverlayLayoutVwxx_0(v58);
    uint64_t v41 = sub_1000038E8(&qword_1002E8D00);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v34, 0LL, 1LL, v41);
  }

  else
  {
    uint64_t v42 = sub_1000038E8(&qword_1002E8D00);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56LL))(v34, 1LL, 1LL, v42);
  }

  sub_1000077E0(v34, (uint64_t *)&unk_1002E8CE0);
  uint64_t v43 = swift_weakLoadStrong(v23);
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = PageFacetsPresenter.onPerformPageFacetsChangeAction.getter();
    swift_release(v44);
    uint64_t v46 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E34F0, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v47 = static OS_dispatch_queue.main.getter(v46);
    uint64_t v59 = v46;
    id v60 = &protocol witness table for OS_dispatch_queue;
    v58[0] = v47;
    uint64_t v48 = sub_1000038E8(&qword_1002E8D08);
    uint64_t v49 = sub_10005E7D4(&qword_1002E8D10, &qword_1002E8D08, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
    EventEmitter.addObserver<A>(on:target:method:)(v58, v22, sub_1000D7684, 0LL, v48, v21, v49);
    swift_release(v45);

    swift_release(v54);
    swift_unknownObjectRelease(v55);
    swift_release(v57);
    _s8AppStore17PillOverlayLayoutVwxx_0(v58);
    uint64_t v50 = sub_1000038E8(&qword_1002E8D18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56LL))(v33, 0LL, 1LL, v50);
  }

  else
  {

    swift_release(v54);
    swift_unknownObjectRelease(v55);
    swift_release(v57);
    uint64_t v51 = sub_1000038E8(&qword_1002E8D18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56LL))(v33, 1LL, 1LL, v51);
  }

  sub_1000077E0(v33, &qword_1002E8CD8);
  return v22;
}

uint64_t (*sub_1000D7404(void *a1))()
{
  *(void *)(swift_allocObject(&unk_10028B2E0, 24LL, 7LL) + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  id v2 = a1;
  return sub_1000DA3C4;
}

void (*sub_1000D7458(void *a1))(uint64_t a1)
{
  *(void *)(swift_allocObject(&unk_10028B2B8, 24LL, 7LL) + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  id v2 = a1;
  return sub_1000DA3AC;
}

void sub_1000D74AC(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1000038E8((uint64_t *)&unk_1002E8CC8);
  __n128 v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  PageFacetsPresenter.FacetsState.facets.getter(v4);
  sub_1000D7C8C((uint64_t)v6);
  sub_1000077E0((uint64_t)v6, (uint64_t *)&unk_1002E8CC8);
  id v7 = [a2 superview];
  [v7 setNeedsLayout];

  id v8 = [a2 superview];
  [v8 layoutIfNeeded];
}

uint64_t sub_1000D7588(uint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    uint64_t v9 = result;
    void v13[3] = type metadata accessor for PageFacetsHeaderView();
    v13[0] = a2;
    uint64_t v10 = *(void *)&a2[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_objectGraph];
    (*(void (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for ActionRunner.Origin.userInitiated(_:),  v4);
    uint64_t v11 = a2;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, v13, v7, v10);
    __n128 v12 = swift_release(v9);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v12);
    return sub_1000077E0((uint64_t)v13, (uint64_t *)&unk_1002E3500);
  }

  return result;
}

uint64_t (*sub_1000D7684(void *a1))(void *a1)
{
  uint64_t v2 = swift_allocObject(&unk_10028B268, 24LL, 7LL);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  uint64_t v3 = swift_allocObject(&unk_10028B290, 32LL, 7LL);
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1000DA35C;
  *(void *)(v3 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v2;
  id v4 = a1;
  return sub_1000DA388;
}

id sub_1000D7750()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons, v11, 0LL, 0LL);
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v2);
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v9))
  {
    uint64_t v4 = 4LL;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v2)
         : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1LL)) {
        break;
      }
      id v8 = [v5 isFocused];

      if ((v8 & 1) == 0)
      {
        ++v4;
        if (v7 != v3) {
          continue;
        }
      }

      goto LABEL_17;
    }

    __break(1u);
LABEL_12:
    if (v2 < 0) {
      uint64_t v9 = v2;
    }
    else {
      uint64_t v9 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v2);
  }

  id v8 = 0LL;
LABEL_17:
  swift_bridgeObjectRelease(v2);
  return v8;
}

uint64_t sub_1000D78BC()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons, v17, 0LL, 0LL);
  uint64_t v2 = *v1;
  uint64_t v16 = _swiftEmptyArrayStorage;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0) {
      uint64_t v12 = v2;
    }
    else {
      uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v2);
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v12);
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease(v2);
    uint64_t v11 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_18;
  }

  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  uint64_t result = swift_bridgeObjectRetain(v2);
  if (!v3) {
    goto LABEL_17;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }

  for (uint64_t i = 0LL; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001LL) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
    }
    else {
      id v8 = *(id *)(v2 + 8 * i + 32);
    }
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, "isFocused", v16);
    if ((v10 & 1) != 0)
    {
    }

    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      uint64_t v6 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
      uint64_t v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v9);
      specialized ContiguousArray._endMutation()(v7);
    }
  }

  swift_bridgeObjectRelease(v2);
  uint64_t v11 = (uint64_t)v16;
LABEL_18:
  uint64_t v13 = swift_bridgeObjectRetain(v11);
  if (v11 < 0 || (v11 & 0x4000000000000000LL) != 0)
  {
    uint64_t v15 = sub_1000038E8((uint64_t *)&unk_1002E3880);
    uint64_t v14 = _bridgeCocoaArray<A>(_:)(v11, v15);
    swift_release(v11);
  }

  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v13);
    uint64_t v14 = v11;
  }

  swift_release(v11);
  return v14;
}

void sub_1000D7AA4()
{
  id v1 = (objc_class *)type metadata accessor for PageFacetsHeaderView();
  v19.receiver = v0;
  v19.super_class = v1;
  objc_msgSendSuper2(&v19, "layoutSubviews");
  *(void *)&v20.origin.CGFloat x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  double MinX = CGRectGetMinX(v20);
  uint64_t v3 = (uint64_t *)&v0[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons], v18, 0LL, 0LL);
  uint64_t v4 = *v3;
  if (!((unint64_t)v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease(v4);
    return;
  }

  if (v4 < 0) {
    uint64_t v17 = v4;
  }
  else {
    uint64_t v17 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v4);
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      if ((v4 & 0xC000000000000001LL) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      }
      else {
        id v7 = *(id *)(v4 + 8 * v6 + 32);
      }
      id v8 = v7;
      ++v6;
      LayoutMarginsAware<>.layoutFrame.getter(v1);
      objc_msgSend(v8, "sizeThatFits:", v9, v10);
      double v12 = v11;
      double v14 = v13;
      *(void *)&v21.origin.CGFloat x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
      double MinY = CGRectGetMinY(v21);
      objc_msgSend(v8, "setFrame:", MinX, MinY, v12, v14);
      v22.origin.CGFloat x = MinX;
      v22.origin.CGFloat y = MinY;
      v22.size.CGFloat width = v12;
      v22.size.CGFloat height = v14;
      double MaxX = CGRectGetMaxX(v22);

      double MinX = MaxX + 30.0;
    }

    while (v5 != v6);
    goto LABEL_13;
  }

  __break(1u);
}

void sub_1000D7C8C(uint64_t a1)
{
  uint64_t v82 = a1;
  uint64_t v2 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v2);
  uint64_t v84 = (uint64_t)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v73 - v5;
  uint64_t v7 = type metadata accessor for PageFacets.FacetGroup(0LL);
  uint64_t v85 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v83 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = v8;
  __chkstk_darwin(v9);
  double v11 = (char *)&v73 - v10;
  uint64_t v12 = sub_1000038E8((uint64_t *)&unk_1002E8CC8);
  __n128 v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for PageFacets(0LL, v13);
  uint64_t v76 = *(void *)(v16 - 8);
  uint64_t v77 = v16;
  __chkstk_darwin(v16);
  unint64_t v75 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int v86 = v1;
  uint64_t v18 = (uint64_t *)&v1[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons], v89, 1LL, 0LL);
  uint64_t v19 = *v18;
  unint64_t v20 = (unint64_t)*v18 >> 62;
  uint64_t v81 = (uint64_t)v15;
  if (v20)
  {
    if (v19 < 0) {
      uint64_t v25 = v19;
    }
    else {
      uint64_t v25 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain_n(v19, 2LL);
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v25);
    if (!v21) {
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain_n(v19, 2LL);
    if (!v21) {
      goto LABEL_13;
    }
  }

  if (v21 < 1)
  {
    __break(1u);
    goto LABEL_42;
  }

  for (uint64_t i = 0LL; i != v21; ++i)
  {
    if ((v19 & 0xC000000000000001LL) != 0) {
      id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
    }
    else {
      id v23 = *(id *)(v19 + 8 * i + 32);
    }
    __n128 v24 = v23;
    [v23 removeFromSuperview];
  }

void sub_1000D83FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1000D8454(a2);
  }

void sub_1000D8454(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000038E8(&qword_1002E6600);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v41[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = type metadata accessor for FlowDestination(0LL);
  __chkstk_darwin(v40);
  uint64_t v8 = (void *)((char *)&v41[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = sub_1000038E8((uint64_t *)&unk_1002E8CA8);
  __chkstk_darwin(v9);
  double v11 = (char *)&v41[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000038E8((uint64_t *)&unk_1002E8CB8);
  __n128 v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v41[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  PageFacets.FacetGroup.title.getter(v13);
  if (v16)
  {
    uint64_t v17 = v16;
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }

  else
  {
    NSString v18 = 0LL;
  }

  uint64_t v19 = type metadata accessor for FacetAlertController();
  unint64_t v20 = (char *) [(id)swift_getObjCClassFromMetadata(v19) alertControllerWithTitle:v18 message:0 preferredStyle:0];

  uint64_t v21 = type metadata accessor for PageFacets.Facet(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v15, 1LL, 1LL, v21);
  uint64_t v22 = type metadata accessor for PageFacets.Facet.Option(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56LL))(v11, 1LL, 1LL, v22);
  uint64_t v23 = sub_1000D8850(a1);
  sub_1000077E0((uint64_t)v11, (uint64_t *)&unk_1002E8CA8);
  sub_1000077E0((uint64_t)v15, (uint64_t *)&unk_1002E8CB8);
  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0) {
      uint64_t v28 = v23;
    }
    else {
      uint64_t v28 = v23 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v23);
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v28);
    if (!v24) {
      goto LABEL_16;
    }
  }

  else
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v23);
    if (!v24) {
      goto LABEL_16;
    }
  }

  if (v24 < 1)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }

  for (uint64_t i = 0LL; i != v24; ++i)
  {
    if ((v23 & 0xC000000000000001LL) != 0) {
      id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v23);
    }
    else {
      id v26 = *(id *)(v23 + 8 * i + 32);
    }
    uint64_t v27 = v26;
    [v20 addAction:v26];
  }

uint64_t sub_1000D8850(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PageFacets.Facet.Option(0LL);
  uint64_t v159 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v159 + 64);
  __chkstk_darwin(v3);
  v161 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v124 - v6;
  uint64_t v8 = type metadata accessor for PageFacets.Facet(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v128 = v10;
  __chkstk_darwin(v12);
  double v158 = (char *)&v124 - v13;
  uint64_t v143 = type metadata accessor for PageFacets.Facet.DisplayType(0LL);
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v140 = (char *)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v162 = (char *)&v124 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v124 - v18;
  uint64_t v155 = v1;
  uint64_t Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetsPresenter);
  uint64_t v124 = v7;
  if (Strong)
  {
    uint64_t v21 = Strong;
    unint64_t v22 = PageFacetsPresenter.selectedFacetOptions.getter();
    __n128 v23 = swift_release(v21);
  }

  else
  {
    unint64_t v22 = sub_1000EC7F0((uint64_t)_swiftEmptyArrayStorage);
  }

  uint64_t v144 = v8;
  unint64_t v170 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v163 = a1;
  uint64_t v24 = PageFacets.FacetGroup.facets.getter(v23);
  uint64_t v25 = v24;
  int64_t v26 = *(void *)(v24 + 16);
  uint64_t v157 = v9;
  v160 = v11;
  unint64_t v145 = v22;
  if (v26)
  {
    aBlocuint64_t k = (void **)_swiftEmptyArrayStorage;
    sub_1000251F4(0LL, v26, 0);
    unint64_t v27 = (*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v28 = v9;
    double v156 = (void (*)(char *, char *, uint64_t))v25;
    unint64_t v29 = v25 + v27;
    uint64_t v30 = *(void *)(v9 + 72);
    uint64_t v31 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v28 + 16);
    do
    {
      uint64_t v32 = v158;
      uint64_t v33 = v144;
      uint64_t v34 = v31(v158, v29, v144);
      PageFacets.Facet.displayType.getter(v34);
      v35.n128_f64[0] = (*(double (**)(char *, uint64_t))(v157 + 8))(v32, v33);
      uint64_t v36 = aBlock;
      if ((swift_isUniquelyReferenced_nonNull_native(aBlock, v35) & 1) == 0)
      {
        sub_1000251F4(0LL, (int64_t)v36[2] + 1, 1);
        uint64_t v36 = aBlock;
      }

      unint64_t v38 = (unint64_t)v36[2];
      unint64_t v37 = (unint64_t)v36[3];
      if (v38 >= v37 >> 1)
      {
        sub_1000251F4(v37 > 1, v38 + 1, 1);
        uint64_t v36 = aBlock;
      }

      v36[2] = (void *)(v38 + 1);
      (*(void (**)(unint64_t, char *, uint64_t))(v142 + 32))( (unint64_t)v36 + ((*(unsigned __int8 *)(v142 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80))
      + *(void *)(v142 + 72) * v38,
        v19,
        v143);
      aBlocuint64_t k = v36;
      v29 += v30;
      --v26;
      unint64_t v22 = v145;
    }

    while (v26);
    swift_bridgeObjectRelease(v156);
    uint64_t v39 = v159;
    double v11 = v160;
  }

  else
  {
    swift_bridgeObjectRelease(v24);
    uint64_t v36 = (void **)_swiftEmptyArrayStorage;
    uint64_t v39 = v159;
  }

  uint64_t v40 = sub_100214090((uint64_t)v36);
  __n128 v41 = swift_bridgeObjectRelease(v36);
  if (*(void *)(v40 + 16) == 1LL)
  {
    uint64_t v42 = v142;
    uint64_t v43 = (uint64_t)v162;
    uint64_t v44 = v4;
    uint64_t v45 = v143;
    (*(void (**)(char *, void, uint64_t, __n128))(v142 + 104))( v162,  enum case for PageFacets.Facet.DisplayType.singleSelection(_:),  v143,  v41);
    char v46 = sub_10011B4CC(v43, v40);
    __n128 v47 = swift_bridgeObjectRelease(v40);
    uint64_t v48 = v45;
    uint64_t v4 = v44;
    (*(void (**)(uint64_t, uint64_t, __n128))(v42 + 8))(v43, v48, v47);
  }

  else
  {
    __n128 v49 = swift_bridgeObjectRelease(v40);
    char v46 = 0;
  }

  uint64_t v50 = v157;
  uint64_t v51 = PageFacets.FacetGroup.facets.getter(v49);
  uint64_t v52 = v51;
  uint64_t v139 = *(void *)(v51 + 16);
  if (v139)
  {
    unint64_t v53 = 0LL;
    uint64_t v54 = *(unsigned __int8 *)(v50 + 80);
    uint64_t v126 = ~v54;
    uint64_t v137 = v51 + ((v54 + 32) & ~v54);
    uint64_t v125 = v4 + v54;
    int v136 = enum case for PageFacets.Facet.DisplayType.toggle(_:);
    int v154 = v46 & 1;
    int v134 = enum case for PageFacets.Facet.DisplayType.singleSelection(_:);
    uint64_t v133 = (v54 + 24) & ~v54;
    int v131 = enum case for PageFacets.Facet.DisplayType.multipleSelection(_:);
    uint64_t v127 = v54;
    uint64_t v130 = v54 | 7;
    uint64_t v132 = v133 + v128;
    uint64_t v129 = v133 + v128 + 1;
    uint64_t v55 = v124;
    uint64_t v56 = v144;
    uint64_t v138 = v51;
    while (v53 < *(void *)(v52 + 16))
    {
      uint64_t v58 = *(void *)(v50 + 72);
      unint64_t v141 = v53;
      uint64_t v59 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v50 + 16);
      uint64_t v60 = v59(v11, v137 + v58 * v53, v56);
      objc_super v61 = v140;
      PageFacets.Facet.displayType.getter(v60);
      int v62 = (*(uint64_t (**)(char *, uint64_t))(v142 + 88))(v61, v143);
      if (v62 == v136)
      {
        uint64_t v163 = objc_opt_self(&OBJC_CLASS___UIAlertAction);
        PageFacets.Facet.title.getter();
        uint64_t v64 = v63;
        NSString v65 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v64);
        uint64_t v66 = swift_allocObject(&unk_10028B0D8, 24LL, 7LL);
        __n128 v67 = swift_unknownObjectWeakInit(v66 + 16, v155);
        uint64_t v68 = v158;
        ((void (*)(char *, char *, uint64_t, __n128))v59)(v158, v11, v56, v67);
        uint64_t v69 = swift_allocObject(&unk_10028B1A0, v129, v130);
        *(void *)(v69 + swift_unknownObjectWeakDestroy(v0 + 16) = v66;
        (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v69 + v133, v68, v56);
        LOBYTE(v68) = v154;
        *(_BYTE *)(v69 + v132) = v154;
        v168 = sub_1000D9FD0;
        uint64_t v169 = v69;
        aBlocuint64_t k = _NSConcreteStackBlock;
        uint64_t v165 = 1107296256LL;
        v166 = sub_1000D9678;
        double v167 = &unk_10028B1B8;
        char v70 = _Block_copy(&aBlock);
        swift_release(v169);
        uint64_t v71 = swift_allocObject(&unk_10028B1F0, 17LL, 7LL);
        *(_BYTE *)(v71 + swift_unknownObjectWeakDestroy(v0 + 16) = (_BYTE)v68;
        v168 = sub_1000DA02C;
        uint64_t v169 = v71;
        aBlocuint64_t k = _NSConcreteStackBlock;
        uint64_t v165 = 1107296256LL;
        v166 = sub_1000D96CC;
        double v167 = &unk_10028B208;
        uint64_t v72 = _Block_copy(&aBlock);
        *(void *)&double v73 = swift_release(v169).n128_u64[0];
        id v74 =  objc_msgSend( (id)v163,  "_actionWithTitle:image:style:handler:shouldDismissHandler:",  v65,  0,  0,  v70,  v72,  v73);
        unint64_t v75 = v72;
        double v11 = v160;
        _Block_release(v75);
        _Block_release(v70);

        unint64_t v22 = v145;
        if (v74)
        {
          BOOL v78 = *(void *)(v145 + 16)
          objc_msgSend(v74, "_setChecked:", v78, v124);
          id v119 = v74;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v119);
          unint64_t v121 = *(void *)((v170 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v120 = *(void *)((v170 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v121 >= v120 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v120 > 1, v121 + 1, 1LL);
          }
          uint64_t v122 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v121, v119);
          specialized Array._endMutation()(v122);

          double v11 = v160;
        }
      }

      else
      {
        double v156 = (void (*)(char *, char *, uint64_t))v59;
        if (v62 != v134 && v62 != v131) {
          goto LABEL_56;
        }
        uint64_t v80 = PageFacets.Facet.options.getter();
        uint64_t v81 = v80;
        uint64_t v153 = *(void *)(v80 + 16);
        if (v153)
        {
          id v152 = (id)objc_opt_self(&OBJC_CLASS___UIAlertAction);
          uint64_t v82 = 0LL;
          uint64_t v83 = *(unsigned __int8 *)(v39 + 80);
          uint64_t v135 = v81;
          uint64_t v151 = v81 + ((v83 + 32) & ~v83);
          uint64_t v84 = *(void *)(v39 + 72);
          uint64_t v162 = *(char **)(v39 + 16);
          uint64_t v163 = v84;
          uint64_t v150 = (v83 + 24) & ~v83;
          uint64_t v149 = (v125 + v150) & v126;
          uint64_t v147 = v127 | v83 | 7;
          uint64_t v148 = v149 + v128;
          uint64_t v146 = v149 + v128 + 1;
          uint64_t v85 = v156;
          do
          {
            uint64_t v91 = v162;
            uint64_t v92 = ((uint64_t (*)(char *, uint64_t, uint64_t))v162)(v55, v151 + v163 * v82, v3);
            PageFacets.Facet.Option.title.getter(v92);
            uint64_t v94 = v93;
            NSString v95 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v94);
            uint64_t v96 = swift_allocObject(&unk_10028B0D8, 24LL, 7LL);
            __n128 v97 = swift_unknownObjectWeakInit(v96 + 16, v155);
            uint64_t v98 = v161;
            ((void (*)(char *, char *, uint64_t, __n128))v91)(v161, v55, v3, v97);
            uint64_t v99 = v158;
            v85(v158, v160, v56);
            uint64_t v100 = swift_allocObject(&unk_10028B100, v146, v147);
            *(void *)(v100 + swift_unknownObjectWeakDestroy(v0 + 16) = v96;
            (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v100 + v150, v98, v3);
            (*(void (**)(uint64_t, char *, uint64_t))(v157 + 32))(v100 + v149, v99, v56);
            LOBYTE(v99) = v154;
            *(_BYTE *)(v100 + v148) = v154;
            v168 = sub_1000D9E78;
            uint64_t v169 = v100;
            aBlocuint64_t k = _NSConcreteStackBlock;
            uint64_t v165 = 1107296256LL;
            v166 = sub_1000D9678;
            double v167 = &unk_10028B118;
            id v101 = _Block_copy(&aBlock);
            swift_release(v169);
            uint64_t v102 = swift_allocObject(&unk_10028B150, 17LL, 7LL);
            *(_BYTE *)(v102 + swift_unknownObjectWeakDestroy(v0 + 16) = (_BYTE)v99;
            v168 = sub_1000DA3C8;
            uint64_t v169 = v102;
            aBlocuint64_t k = _NSConcreteStackBlock;
            uint64_t v165 = 1107296256LL;
            v166 = sub_1000D96CC;
            double v167 = &unk_10028B168;
            uint64_t v103 = _Block_copy(&aBlock);
            *(void *)&double v104 = swift_release(v169).n128_u64[0];
            id v105 =  objc_msgSend( v152,  "_actionWithTitle:image:style:handler:shouldDismissHandler:",  v95,  0,  0,  v101,  v103,  v104);
            _Block_release(v103);
            _Block_release(v101);

            if (v105)
            {
              unint64_t v106 = v145;
              if (*(void *)(v145 + 16)
                && (unint64_t v107 = sub_1000EE2DC((uint64_t)v160), (v108 & 1) != 0)
                && (uint64_t v109 = *(void *)(*(void *)(v106 + 56) + 8 * v107), *(void *)(v109 + 16)))
              {
                uint64_t v110 = *(void *)(v109 + 40);
                uint64_t v111 = sub_1000D9F18( &qword_1002E8C98,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
                swift_bridgeObjectRetain(v109);
                uint64_t v112 = v55;
                uint64_t v113 = dispatch thunk of Hashable._rawHashValue(seed:)(v110, v3, v111);
                uint64_t v114 = -1LL << *(_BYTE *)(v109 + 32);
                unint64_t v115 = v113 & ~v114;
                if (((*(void *)(v109 + 56 + ((v115 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v115) & 1) != 0)
                {
                  uint64_t v116 = ~v114;
                  do
                  {
                    NSString v117 = v161;
                    ((void (*)(char *, unint64_t, uint64_t))v162)( v161,  *(void *)(v109 + 48) + v115 * v163,  v3);
                    uint64_t v118 = sub_1000D9F18( &qword_1002E8CA0,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
                    char v86 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v112, v3, v118);
                    (*(void (**)(char *, uint64_t))(v159 + 8))(v117, v3);
                    if ((v86 & 1) != 0) {
                      break;
                    }
                    unint64_t v115 = (v115 + 1) & v116;
                  }

                  while (((*(void *)(v109 + 56 + ((v115 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v115) & 1) != 0);
                }

                else
                {
                  char v86 = 0;
                }

                swift_bridgeObjectRelease(v109);
                uint64_t v39 = v159;
                uint64_t v55 = v112;
                uint64_t v56 = v144;
              }

              else
              {
                char v86 = 0;
              }

              objc_msgSend(v105, "_setChecked:", v86 & 1, v124);
              id v87 = v105;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v87);
              unint64_t v89 = *(void *)((v170 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
              unint64_t v88 = *(void *)((v170 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
              if (v89 >= v88 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v89 + 1, 1LL);
              }
              uint64_t v90 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v89, v87);
              specialized Array._endMutation()(v90);
            }

            ++v82;
            (*(void (**)(char *, uint64_t))(v39 + 8))(v55, v3);
            uint64_t v85 = v156;
          }

          while (v82 != v153);
          __n128 v57 = swift_bridgeObjectRelease(v135);
          uint64_t v50 = v157;
          double v11 = v160;
          unint64_t v22 = v145;
        }

        else
        {
          __n128 v57 = swift_bridgeObjectRelease(v80);
        }
      }

      unint64_t v53 = v141 + 1;
      (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v11, v56, v57);
      uint64_t v52 = v138;
      if (v53 == v139) {
        goto LABEL_54;
      }
    }

    __break(1u);
LABEL_56:
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v143, v143);
    __break(1u);
  }

  else
  {
LABEL_54:
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v52);
    return v170;
  }

  return result;
}

void sub_1000D94F0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002E8CA8);
  __chkstk_darwin(v8);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a2 += 16LL;
  swift_beginAccess(a2, v20, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    uint64_t v13 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetsPresenter);

    if (v13)
    {
      uint64_t v14 = PageFacets.Facet.options.getter();
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = type metadata accessor for PageFacets.Facet.Option(0LL);
      uint64_t v17 = *(void *)(v16 - 8);
      if (v15)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))( v10,  v14 + ((*(unsigned __int8 *)(v17 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)),  v16);
        uint64_t v18 = 0LL;
      }

      else
      {
        uint64_t v18 = 1LL;
      }

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v10, v18, 1LL, v16);
      swift_bridgeObjectRelease(v14);
      PageFacetsPresenter.didSelect(option:in:)(v10, a3);
      swift_release(v13);
      sub_1000077E0((uint64_t)v10, (uint64_t *)&unk_1002E8CA8);
    }
  }

  if ((a4 & 1) == 0)
  {
    if (a1) {
      objc_msgSend(a1, "_setChecked:", objc_msgSend(a1, "_isChecked") ^ 1);
    }
  }

void sub_1000D9678(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void *))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4(a2);
  swift_release(v3);
}

uint64_t sub_1000D96CC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = swift_retain(v2);
  LOBYTE(v1) = v1(v3);
  swift_release(v2);
  return v1 & 1;
}

void sub_1000D9704(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = sub_1000038E8((uint64_t *)&unk_1002E8CA8);
  __chkstk_darwin(v10);
  uint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a2 += 16LL;
  swift_beginAccess(a2, v19, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    uint64_t v15 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetsPresenter);

    if (v15)
    {
      uint64_t v16 = type metadata accessor for PageFacets.Facet.Option(0LL);
      uint64_t v17 = *(void *)(v16 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v12, a3, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0LL, 1LL, v16);
      PageFacetsPresenter.didSelect(option:in:)(v12, a4);
      swift_release(v15);
      sub_1000077E0((uint64_t)v12, (uint64_t *)&unk_1002E8CA8);
    }
  }

  if ((a5 & 1) == 0)
  {
    if (a1) {
      objc_msgSend(a1, "_setChecked:", objc_msgSend(a1, "_isChecked") ^ 1);
    }
  }

id sub_1000D9888(uint64_t a1)
{
  return sub_100092100(a1, type metadata accessor for PageFacetsHeaderView);
}

uint64_t type metadata accessor for PageFacetsHeaderView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore20PageFacetsHeaderView);
}

id sub_1000D991C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = &v3[OBJC_IVAR____TtC8AppStoreP33_AE4AB5AC2158F15A99DD367B65D1B63820FacetAlertController_facetAlertDelegate];
  *((void *)v6 + 1) = 0LL;
  swift_unknownObjectWeakInit(v6, 0LL);
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v7 = 0LL;
  }

  v21.receiver = v3;
  v21.super_class = (Class)type metadata accessor for FacetAlertController();
  id v8 = objc_msgSendSuper2(&v21, "initWithNibName:bundle:", v7, a3);

  id v9 = objc_allocWithZone(&OBJC_CLASS___UITapGestureRecognizer);
  id v10 = v8;
  id v11 = [v9 init];
  [v11 addTarget:v10 action:"menuButtonActionWithRecognizer:"];
  uint64_t v12 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
  uint64_t v13 = swift_allocObject(v12, 40LL, 7LL);
  *(_OWORD *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
  id v14 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
  id v15 = v11;
  id v16 = [v14 initWithInteger:5];
  *(void *)(v13 + 32) = v16;
  specialized Array._endMutation()(v16);
  uint64_t v17 = v13;
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E8BB0, &OBJC_CLASS___NSNumber_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v15, "setAllowedPressTypes:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  id result = [v10 view];
  if (result)
  {
    unint64_t v20 = result;
    [result addGestureRecognizer:v15];

    return v10;
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_1000D9BE8(char a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for FacetAlertController();
  objc_msgSendSuper2(&v8, "viewDidDisappear:", a1 & 1);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8AppStoreP33_AE4AB5AC2158F15A99DD367B65D1B63820FacetAlertController_facetAlertDelegate]);
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_delegate);
    if (v5)
    {
      uint64_t v6 = v5;
      ArcadeSeeAllGamesDiffablePagePresenter.commitBatchFacetUpdates()();
      swift_unknownObjectRelease(v6);
    }

    NSString v7 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetAlertController);
    *(void *)(v4 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetAlertController) = 0LL;
    swift_unknownObjectRelease(v4);
  }

id sub_1000D9D54()
{
  return sub_100092100(0LL, type metadata accessor for FacetAlertController);
}

uint64_t type metadata accessor for FacetAlertController()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStoreP33_AE4AB5AC2158F15A99DD367B65D1B63820FacetAlertController);
}

uint64_t sub_1000D9D94()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000D9DB8()
{
  uint64_t v1 = type metadata accessor for PageFacets.Facet.Option(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for PageFacets.Facet(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  uint64_t v11 = *(void *)(v7 + 64) + v9 + 1;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v11, v10);
}

void sub_1000D9E78(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PageFacets.Facet.Option(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for PageFacets.Facet(0LL) - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  sub_1000D9704(a1, *(void *)(v1 + 16), v1 + v4, v1 + v7, *(_BYTE *)(v1 + v7 + *(void *)(v6 + 64)));
}

uint64_t sub_1000D9EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000D9F00(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000D9F08()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1000D9F18(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for PageFacets.Facet.Option(255LL);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1000D9F58()
{
  uint64_t v1 = type metadata accessor for PageFacets.Facet(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

void sub_1000D9FD0(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PageFacets.Facet(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1000D94F0(a1, *(void *)(v1 + 16), v1 + v4, *(_BYTE *)(v1 + v4 + *(void *)(v3 + 64)));
}

uint64_t sub_1000DA01C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1000DA02C()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1000DA034()
{
  uint64_t v1 = type metadata accessor for PageFacets.FacetGroup(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000DA0A8()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for PageFacets.FacetGroup(0LL) - 8) + 80LL);
  sub_1000D83FC(*(void *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void sub_1000DA0D8()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_delegate];
  *((void *)v1 + 1) = 0LL;
  swift_unknownObjectWeakInit(v1, 0LL);
  *(void *)&v0[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons] = &_swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_areButtonsEnabled] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetAlertController] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/PageFacetsHeaderView.swift",  35LL,  2LL,  64LL,  0);
  __break(1u);
}

void sub_1000DA18C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore20PageFacetsHeaderView_facetButtons, v20, 0LL, 0LL);
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v2 < 0) {
      uint64_t v16 = *v1;
    }
    else {
      uint64_t v16 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*v1);
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v3) {
      goto LABEL_15;
    }
  }

  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (!v3) {
      goto LABEL_15;
    }
  }

  if (v3 < 1)
  {
LABEL_24:
    __break(1u);
    return;
  }

  uint64_t v4 = 0LL;
  double v5 = 0.0;
  double v6 = 0.0;
  do
  {
    if ((v2 & 0xC000000000000001LL) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    }
    else {
      id v7 = *(id *)(v2 + 8 * v4 + 32);
    }
    uint64_t v8 = v7;
    ++v4;
    uint64_t v9 = type metadata accessor for PageFacetsHeaderView();
    LayoutMarginsAware<>.layoutFrame.getter(v9);
    objc_msgSend(v8, "sizeThatFits:", v10, v11);
    double v13 = v12;
    double v15 = v14;

    double v6 = v6 + v13;
    if (v5 <= v15) {
      double v5 = v15;
    }
  }

  while (v3 != v4);
LABEL_15:
  swift_bridgeObjectRelease(v2);
  uint64_t v17 = *v1;
  if (!((unint64_t)v17 >> 62))
  {
    if (!__OFSUB__(*(void *)((v17 & 0xFFFFFFFFFFFFF8LL) + 0x10), 1LL)) {
      return;
    }
    goto LABEL_23;
  }

  if (v17 < 0) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = v17 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v17);
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v17);
  if (__OFSUB__(v19, 1LL))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }

uint64_t sub_1000DA338()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000DA35C(uint64_t a1)
{
  return sub_1000D7588(a1, *(char **)(v1 + 16));
}

uint64_t sub_1000DA364()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000DA388(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_1000DA3AC(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for ProductPageShelfLayoutSpacingProvider()
{
  return &type metadata for ProductPageShelfLayoutSpacingProvider;
}

uint64_t sub_1000DA3FC@<X0>(void *a1@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v1 = type metadata accessor for PageGrid(0LL);
  uint64_t v57 = *(void *)(v1 - 8);
  uint64_t v58 = v1;
  __chkstk_darwin(v1);
  uint64_t v56 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = sub_1000038E8(qword_1002E8D20);
  __chkstk_darwin(v61);
  NSString v65 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_1000038E8(&qword_1002E5BD0);
  __chkstk_darwin(v4);
  double v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v55 - v8;
  __chkstk_darwin(v10);
  double v12 = (char *)&v55 - v11;
  uint64_t v13 = sub_1000038E8(&qword_1002EE510);
  __chkstk_darwin(v13);
  uint64_t v59 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v60 = (uint64_t *)((char *)&v55 - v16);
  uint64_t v17 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v62 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v64 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  unint64_t v22 = (uint64_t *)((char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  ShelfLayoutContext.shelf.getter(v23);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023C748, v24);
  uint64_t v63 = v22;
  ReadOnlyLens.subscript.getter(v22, KeyPath, v17);
  __n128 v26 = swift_release(KeyPath);
  unint64_t v27 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
  v27(v20, v17, v26);
  ShelfLayoutContext.surroundingShelves.getter(v9, v6);
  sub_1000077E0((uint64_t)v9, &qword_1002E5BD0);
  sub_10008F750((uint64_t)v6, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1LL, v17) == 1)
  {
    sub_1000077E0((uint64_t)v12, &qword_1002E5BD0);
    uint64_t v29 = 1LL;
    uint64_t v30 = v60;
  }

  else
  {
    uint64_t v31 = swift_getKeyPath(&unk_10023C748, v28);
    uint64_t v30 = v60;
    ReadOnlyLens.subscript.getter(v60, v31, v17);
    __n128 v32 = swift_release(v31);
    v27(v12, v17, v32);
    uint64_t v29 = 0LL;
  }

  uint64_t v33 = v64;
  uint64_t v34 = v62;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v30, v29, 1LL, v62);
  uint64_t v35 = (uint64_t)v65;
  uint64_t v36 = (uint64_t)&v65[*(int *)(v61 + 48)];
  unint64_t v37 = v63;
  (*(void (**)(char *, void *, uint64_t))(v33 + 16))(v65, v63, v34);
  sub_1000B1410((uint64_t)v30, v36);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v36, 1LL, v34) == 1)
  {
    unint64_t v38 = v66;
    v66[3] = &type metadata for Double;
    v38[4] = &protocol witness table for Double;
    void *v38 = 0LL;
    sub_1000077E0((uint64_t)v30, &qword_1002EE510);
    uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8);
    v39((uint64_t)v37, v34);
    sub_1000077E0(v36, &qword_1002EE510);
    return v39(v35, v34);
  }

  uint64_t v41 = v59;
  sub_1000B1410(v36, v59);
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 88);
  int v43 = v42(v41, v34);
  if (v43 == enum case for Shelf.ContentType.paragraph(_:))
  {
    int v44 = v42(v35, v34);
    uint64_t v45 = &enum case for Shelf.ContentType.titledButtonStack(_:);
  }

  else
  {
    if (v43 == enum case for Shelf.ContentType.titledButtonStack(_:))
    {
      sub_1000077E0(v36, &qword_1002EE510);
      uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
      goto LABEL_12;
    }

    if (v43 == enum case for Shelf.ContentType.privacyFooter(_:))
    {
      int v44 = v42(v35, v34);
      uint64_t v45 = &enum case for Shelf.ContentType.privacyType(_:);
    }

    else
    {
      if (v43 != enum case for Shelf.ContentType.privacyType(_:))
      {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v59, v34);
        goto LABEL_18;
      }

      int v44 = v42(v35, v34);
      uint64_t v45 = &enum case for Shelf.ContentType.privacyHeader(_:);
    }
  }

  if (v44 == *v45)
  {
    uint64_t v46 = sub_1000077E0(v36, &qword_1002EE510);
LABEL_12:
    __n128 v47 = v56;
    uint64_t v48 = ShelfLayoutContext.contentPageGrid.getter(v46);
    double v49 = PageGrid.interRowSpace.getter(v48);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v58);
    uint64_t v50 = (double *)v66;
    v66[3] = &type metadata for CGFloat;
    *((void *)v50 + 4) = &protocol witness table for CGFloat;
    *uint64_t v50 = v49;
    sub_1000077E0((uint64_t)v30, &qword_1002EE510);
    return (*(uint64_t (**)(void *, uint64_t))(v33 + 8))(v37, v34);
  }

void sub_1000DA9C8(void *a1@<X8>)
{
  a1[3] = &type metadata for Double;
  a1[4] = &protocol witness table for Double;
  *a1 = 0LL;
}

uint64_t sub_1000DA9F4(uint64_t a1)
{
  v2[0] = "\b";
  v2[1] = (char *)&value witness table for Builtin.Int64 + 64;
  void v2[2] = &unk_10023C7F8;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = &unk_10023C810;
  v2[5] = &unk_10023C828;
  return swift_initClassMetadata2(a1, 0LL, 6LL, v2, a1 + 104);
}

void sub_1000DAA6C(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for IndexSet(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v49 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v49 - v12;
  *((_BYTE *)v1 + 89) = 0;
  if (a1)
  {
    id v53 = a1;
    uint64_t v14 = (char *)[v53 numberOfSections];
    uint64_t v15 = v14 - 1;
    if (__OFSUB__(v14, 1LL))
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }

    uint64_t v16 = dispatch thunk of ShelfPresenter.sectionCount.getter(*(void *)(v3 + 80), *(void *)(v3 + 96));
    if (v15 == (char *)v16)
    {
      uint64_t v18 = objc_opt_self(&OBJC_CLASS___UIView);
      uint64_t v19 = swift_allocObject(&unk_10028B658, 32LL, 7LL);
      *(void *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = v53;
      *(void *)(v19 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v15;
      uint64_t v20 = swift_allocObject(&unk_10028B680, 32LL, 7LL);
      *(void *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1000E6874;
      *(void *)(v20 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v19;
      uint64_t v59 = sub_10005E974;
      uint64_t v60 = v20;
      aBlocuint64_t k = _NSConcreteStackBlock;
      uint64_t v56 = 1107296256LL;
      uint64_t v57 = sub_1002114EC;
      uint64_t v58 = &unk_10028B698;
      uint64_t v21 = _Block_copy(&aBlock);
      uint64_t v22 = v60;
      id v23 = v53;
      swift_retain(v20);
      objc_msgSend((id)v18, "performWithoutAnimation:", v21, swift_release(v22).n128_f64[0]);

      _Block_release(v21);
      LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v20, "", 123LL, 316LL, 44LL, 1LL);
      swift_release(v19);
      swift_release(v20);
      if ((v18 & 1) == 0) {
        return;
      }
      goto LABEL_20;
    }

    if ((uint64_t)v15 >= v16)
    {
LABEL_16:
      if (qword_1002E0350 == -1)
      {
LABEL_17:
        uint64_t v44 = type metadata accessor for OSLogger(0LL, v17);
        sub_10000A634(v44, (uint64_t)qword_1002F24E0);
        uint64_t v45 = sub_1000038E8((uint64_t *)&unk_1002E6150);
        uint64_t v46 = type metadata accessor for LogMessage(0LL);
        uint64_t v47 = swift_allocObject( v45,  ((*(unsigned __int8 *)(*(void *)(v46 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v46 - 8) + 80LL))
              + *(void *)(*(void *)(v46 - 8) + 72LL),
                *(unsigned __int8 *)(*(void *)(v46 - 8) + 80LL) | 7LL);
        *(_OWORD *)(v47 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
        LogMessage.init(stringLiteral:)(0xD00000000000003CLL, 0x800000010024A0A0LL);
        Logger.error(_:)(v47, v44, &protocol witness table for OSLogger);
        *(void *)&double v48 = swift_bridgeObjectRelease(v47).n128_u64[0];
        objc_msgSend(v53, "reloadData", v48);

        return;
      }

void sub_1000DB090(uint64_t a1, void *a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = IndexPath.section.getter(a1);
  uint64_t v6 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v5, *(void *)(v4 + 80), *(void *)(v4 + 96));
  uint64_t v7 = IndexPath.section.getter(v6);
  id v8 = [a2 traitCollection];
  uint64_t v9 = sub_1000E1C2C(v7, v8);

  if (__OFSUB__(v6, 1LL))
  {
    __break(1u);
    goto LABEL_11;
  }

  if (!v9)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }

  if (v6 == 0x8000000000000001LL && v9 == -1) {
    goto LABEL_14;
  }
  uint64_t v11 = (v6 - 1) % v9;
  uint64_t v12 = v11 + 1;
  if (__OFADD__(v11, 1LL)) {
    goto LABEL_12;
  }
  IndexPath.item.getter();
  if (__OFSUB__(v6, v12))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }

void *sub_1000DB180()
{
  return v0;
}

void sub_1000DB1BC(void *a1, id a2, void *a3)
{
  id v5 = [a2 traitCollection];
  uint64_t v6 = v5;
  if (!a1
    || (__chkstk_darwin(v5),
        v10[2] = v6,
        id v7 = a1,
        id v8 = (void *)UITraitCollection.modifyingTraits(_:)(sub_1000E6ADC, v10),
        unsigned __int8 v9 = [v6 containsTraitsInCollection:v8],
        v8,
        v7,
        (v9 & 1) == 0))
  {
    [a3 reloadData];
    sub_1000DB4C4(a3);
  }
}

void sub_1000DB2A0(void *a1)
{
  if ((*((_BYTE *)v1 + 89) & 1) == 0)
  {
    uint64_t v3 = *v1;
    *((_BYTE *)v1 + 89) = 1;
    uint64_t v4 = dispatch thunk of ShelfPresenter.sectionCount.getter(*(void *)(v3 + 80), *(void *)(v3 + 96));
    if (v4 >= 1 && a1 != 0LL)
    {
      uint64_t v6 = v4;
      if (v4 >= (uint64_t)[a1 numberOfSections])
      {
        id v7 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
        uint64_t v8 = swift_allocObject(&unk_10028B810, 32LL, 7LL);
        *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
        *(void *)(v8 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v6;
        uint64_t v9 = swift_allocObject(&unk_10028B838, 32LL, 7LL);
        *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100077500;
        *(void *)(v9 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v8;
        _OWORD v14[4] = sub_10005E974;
        uint64_t v15 = v9;
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 1107296256LL;
        v14[2] = sub_1002114EC;
        v14[3] = &unk_10028B850;
        uint64_t v10 = _Block_copy(v14);
        uint64_t v11 = v15;
        id v12 = a1;
        swift_retain(v9);
        objc_msgSend(v7, "performWithoutAnimation:", v10, swift_release(v11).n128_f64[0]);
        _Block_release(v10);
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 123LL, 293LL, 40LL, 1LL);
        swift_release(v8);
        swift_release(v9);
        if ((isEscapingClosureAtFileLocation & 1) != 0) {
          __break(1u);
        }
      }
    }
  }

double sub_1000DB424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 24);
  void v7[2] = a2;
  v7[3] = a3;
  v7[4] = a1;
  swift_retain(v8);
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002F08B0);
  uint64_t v5 = sub_10005E7D4( (unint64_t *)&qword_1002EE390,  (uint64_t *)&unk_1002F08B0,  (uint64_t)&protocol conformance descriptor for TransientStateStore<A>);
  StateStore.performTransaction<A>(_:)(sub_1000E6AB0, v7, v4, (char *)&type metadata for () + 8, v5);
  *(void *)&double result = swift_release(v8).n128_u64[0];
  return result;
}

double sub_1000DB4C4(void *a1)
{
  if (a1)
  {
    uint64_t v8 = *(void *)(v1 + 24);
    void v7[2] = a1;
    id v2 = a1;
    swift_retain(v8);
    uint64_t v3 = sub_1000038E8((uint64_t *)&unk_1002F08B0);
    uint64_t v4 = sub_10005E7D4( (unint64_t *)&qword_1002EE390,  (uint64_t *)&unk_1002F08B0,  (uint64_t)&protocol conformance descriptor for TransientStateStore<A>);
    StateStore.performTransaction<A>(_:)(sub_1000E6A98, v7, v3, (char *)&type metadata for () + 8, v4);
    uint64_t v5 = v8;

    *(void *)&double result = swift_release(v5).n128_u64[0];
  }

  return result;
}

uint64_t sub_1000DB5A0(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v31 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for ImpressionMetrics.ID(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000038E8((uint64_t *)&unk_1002EEFD0);
  __n128 v10 = __chkstk_darwin(v9);
  id v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for ImpressionMetrics(0LL, v10);
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = __chkstk_darwin(v13);
  __n128 v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Shelf.impressionMetrics.getter(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1LL, v13) == 1)
  {
    sub_1000077E0((uint64_t)v12, (uint64_t *)&unk_1002EEFD0);
    uint64_t v18 = *(void *)(v4 + 80);
    uint64_t v19 = *(void *)(v4 + 88);
    double v20 = dispatch thunk of MetricsPagePresenter.impressionableViewablePercentage.getter(v18, v19);
    dispatch thunk of MetricsPagePresenter.impressionsTracker.getter(v18, v19);
    uint64_t v21 = type metadata accessor for ImpressionsCalculator(0LL);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    uint64_t v22 = ImpressionsCalculator.init(impressionableThreshold:tracker:)(v20);
    ImpressionsCalculator.isVisible.setter(1LL, v23);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v13);
    uint64_t v24 = v2[12];
    if (v24
      && (*(void *)&double v25 = swift_retain(v3[12]).n128_u64[0],
          objc_msgSend(v31, "frame", v25),
          ImpressionsCalculator.addElement(_:at:)(v17),
          swift_release(v24),
          (uint64_t v26 = v3[12]) != 0))
    {
      __n128 v27 = swift_retain(v26);
      ImpressionMetrics.id.getter(v27);
      memset(v32, 0, sizeof(v32));
      char v33 = 1;
      uint64_t v22 = ImpressionsCalculator.childCalculator(for:viewBounds:)(v8, v32);
      __n128 v28 = swift_release(v26);
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v28);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      return 0LL;
    }
  }

  return v22;
}

uint64_t sub_1000DB804()
{
  uint64_t result = dispatch thunk of ShelfPresenter.sectionCount.getter( *(void *)(*(void *)v0 + 80LL),  *(void *)(*(void *)v0 + 96LL));
  if (v0[89] == 1 && result >= 1 && __OFADD__(result++, 1LL)) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000DB850(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80LL);
  uint64_t v4 = *(void *)(*(void *)v1 + 96LL);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v3, v4) <= a1
    || (dispatch thunk of ShelfPresenter.isShelfHidden(for:)(a1, v3, v4) & 1) != 0)
  {
    return 0LL;
  }

  uint64_t v6 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(a1, v3, v4);
  if ((sub_1000E32E0(a1) & 1) != 0) {
    return 1LL;
  }
  else {
    return v6;
  }
}

double sub_1000DB8E8(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v111 = a4;
  uint64_t v112 = a2;
  uint64_t v7 = *v4;
  uint64_t v8 = sub_1000038E8(&qword_1002EE510);
  __chkstk_darwin(v8);
  unint64_t v106 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v109 = (uint64_t)&v100 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v100 - v13;
  __chkstk_darwin(v15);
  __n128 v17 = (char *)&v100 - v16;
  uint64_t v18 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v101 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21);
  uint64_t v103 = (char *)&v100 - v22;
  __chkstk_darwin(v23);
  id v105 = (char *)&v100 - v24;
  __chkstk_darwin(v25);
  char v108 = (char *)&v100 - v26;
  __chkstk_darwin(v27);
  double v29 = (char *)&v100 - v28;
  __chkstk_darwin(v30);
  uint64_t v31 = *(void *)(v7 + 80);
  uint64_t v104 = v7;
  uint64_t v32 = *(void *)(v7 + 96);
  uint64_t v33 = v31;
  uint64_t v114 = a1;
  unint64_t v115 = (char *)&v100 - v34;
  dispatch thunk of ShelfPresenter.contentType(for:)(a1, v31, v32);
  uint64_t v113 = v17;
  uint64_t v102 = v14;
  if ((a3 & 1) != 0)
  {
    unint64_t v107 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v107(v17, 1LL, 1LL, v18);
    BOOL v110 = 0;
  }

  else
  {
    uint64_t v35 = v112;
    dispatch thunk of ShelfPresenter.contentType(for:)(v112, v33, v32);
    unint64_t v107 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v107(v14, 0LL, 1LL, v18);
    sub_100041A94((uint64_t)v14, (uint64_t)v17, &qword_1002EE510);
    dispatch thunk of ShelfPresenter.title(for:)(v35, v33, v32);
    BOOL v110 = v36 != 0;
    swift_bridgeObjectRelease(v36);
  }

  id v37 = (char *)v18;
  uint64_t v112 = v32;
  char v38 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v114, v33, v32);
  uint64_t v39 = *(void (**)(char *, char *, char *))(v19 + 16);
  uint64_t v40 = v115;
  v39(v29, v115, v37);
  id v41 = *(uint64_t (**)(char *, char *))(v19 + 88);
  int v42 = v41(v29, v37);
  uint64_t v43 = v19;
  if (v42 != enum case for Shelf.ContentType.smallLockup(_:) && v42 != enum case for Shelf.ContentType.mediumLockup(_:))
  {
    if (v42 == enum case for Shelf.ContentType.largeLockup(_:)) {
      goto LABEL_33;
    }
    if (v42 != enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
      && v42 != enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
      && v42 != enum case for Shelf.ContentType.action(_:)
      && v42 != enum case for Shelf.ContentType.editorialCard(_:)
      && v42 != enum case for Shelf.ContentType.videoCard(_:))
    {
      if (v42 == enum case for Shelf.ContentType.brick(_:) || v42 == enum case for Shelf.ContentType.categoryBrick(_:)) {
        goto LABEL_33;
      }
      if (v42 != enum case for Shelf.ContentType.reviews(_:)
        && v42 != enum case for Shelf.ContentType.appTrailerLockup(_:)
        && v42 != enum case for Shelf.ContentType.framedVideo(_:)
        && v42 != enum case for Shelf.ContentType.screenshotsLockup(_:)
        && v42 != enum case for Shelf.ContentType.smallStoryCard(_:)
        && v42 != enum case for Shelf.ContentType.mediumStoryCard(_:))
      {
        if (v42 == enum case for Shelf.ContentType.largeStoryCard(_:)) {
          goto LABEL_33;
        }
        if (v42 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
          && v42 != enum case for Shelf.ContentType.upsellBreakout(_:)
          && v42 != enum case for Shelf.ContentType.smallBreakout(_:)
          && v42 != enum case for Shelf.ContentType.mixedMediaLockup(_:)
          && v42 != enum case for Shelf.ContentType.arcadeFooter(_:)
          && v42 != enum case for Shelf.ContentType.textCard(_:)
          && v42 != enum case for Shelf.ContentType.smallGameCenterPlayer(_:)
          && v42 != enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
          && v42 != enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:)
          && v42 != enum case for Shelf.ContentType.posterLockup(_:))
        {
          (*(void (**)(char *, char *))(v19 + 8))(v29, v37);
LABEL_39:
          uint64_t v71 = v103;
          v39(v103, v40, v37);
          int v72 = v41(v71, v37);
          uint64_t v100 = (void (*)(char *, uint64_t, char *))v39;
          if (v72 == enum case for Shelf.ContentType.informationContainer(_:))
          {
            char v108 = v37;
            uint64_t v109 = v19;
            type metadata accessor for InformationContainerCollectionViewCell();
            double v73 = &off_10028E928;
          }

          else
          {
            if (v72 != enum case for Shelf.ContentType.reviewsContainer(_:))
            {
              uint64_t v114 = v33;
              uint64_t v84 = *(void (**)(char *, char *))(v19 + 8);
              uint64_t v85 = v71;
              id v74 = v37;
              v84(v85, v37);
              uint64_t v87 = sub_1001847BC();
              uint64_t v61 = (uint64_t)v113;
              uint64_t v56 = v111;
              uint64_t v88 = (uint64_t)v102;
              if (v87)
              {
                uint64_t v89 = v86;
                sub_1000B1410((uint64_t)v113, (uint64_t)v102);
                *(double *)&uint64_t v90 = COERCE_DOUBLE( (*(uint64_t (**)(uint64_t, BOOL, void *, uint64_t, uint64_t))(v89 + 48))( v88,  v110,  v56,  v87,  v89));
                char v92 = v91;
                sub_1000077E0(v88, &qword_1002EE510);
                if ((v92 & 1) == 0) {
                  goto LABEL_56;
                }
              }

              if (!(*(unsigned int (**)(uint64_t, uint64_t, char *))(v43 + 48))(v61, 1LL, v74))
              {
                uint64_t v93 = v101;
                v100(v101, v61, v74);
                uint64_t v94 = sub_1001847BC();
                uint64_t v96 = v95;
                v84(v93, v74);
                if (v94)
                {
                  v100((char *)v88, (uint64_t)v115, v74);
                  v107((char *)v88, 0LL, 1LL, (uint64_t)v74);
                  *(double *)&uint64_t v90 = COERCE_DOUBLE( (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v96 + 56))( v88,  v56,  v94,  v96));
                  char v98 = v97;
                  sub_1000077E0(v88, &qword_1002EE510);
                  if ((v98 & 1) == 0)
                  {
LABEL_56:
                    double v60 = *(double *)&v90;
                    v84(v115, v74);
                    goto LABEL_57;
                  }
                }
              }

              goto LABEL_43;
            }

            char v108 = v37;
            uint64_t v109 = v19;
            type metadata accessor for ReviewsContainerCell();
            double v73 = &off_1002942F0;
          }

          uint64_t v56 = v111;
          uint64_t v75 = dispatch thunk of ShelfPresenter.shelf(for:)(v114, v33, v112);
          uint64_t v76 = v33;
          uint64_t v61 = (uint64_t)v113;
          uint64_t v77 = (uint64_t)v102;
          sub_1000B1410((uint64_t)v113, (uint64_t)v102);
          *(double *)&uint64_t v78 = COERCE_DOUBLE(((uint64_t (__cdecl *)())v73[1])());
          char v80 = v79;
          sub_1000077E0(v77, &qword_1002EE510);
          if ((v80 & 1) == 0)
          {
            double v60 = *(double *)&v78;
            (*(void (**)(char *, char *))(v109 + 8))(v115, v108);
            swift_release(v75);
            goto LABEL_57;
          }

          uint64_t v114 = v76;
          id v74 = v108;
          v100((char *)v77, (uint64_t)v115, v108);
          v107((char *)v77, 0LL, 1LL, (uint64_t)v74);
          *(double *)&uint64_t v81 = COERCE_DOUBLE(((uint64_t (__cdecl *)())v73[2])());
          char v83 = v82;
          swift_release(v75);
          sub_1000077E0(v77, &qword_1002EE510);
          uint64_t v43 = v109;
          if ((v83 & 1) == 0)
          {
            double v60 = *(double *)&v81;
            goto LABEL_44;
          }

CGFloat sub_1000DC2A4(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  uint64_t v5 = *v2;
  uint64_t v33 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v6 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v34 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void *)(v5 + 80);
  uint64_t v13 = *(void *)(v5 + 96);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v12, v13) <= a1) {
    return UIEdgeInsetsZero.top;
  }
  uint64_t v32 = v6;
  if (qword_1002E0C08 != -1) {
    swift_once(&qword_1002E0C08, sub_100110C2C);
  }
  uint64_t v15 = type metadata accessor for EdgeInsetsDimension(0LL, v14);
  uint64_t v16 = sub_10000A634(v15, (uint64_t)qword_1002F45B8);
  static Dimensions.defaultRoundingRule.getter(v16);
  __n128 v17 = v35;
  EdgeInsetsDimension.value(in:rounded:)(v35, v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  dispatch thunk of ShelfPresenter.title(for:)(a1, v12, v13);
  uint64_t v19 = v18;
  __n128 v20 = swift_bridgeObjectRelease(v18);
  double top = 0.0;
  if (!v19) {
    double top = (*(double (**)(uint64_t, void *, __n128))(*v3 + 344LL))(a1, v17, v20);
  }
  uint64_t v22 = dispatch thunk of ShelfPresenter.sectionCount.getter(v12, v13);
  if (a1 + 1 < v22) {
    uint64_t v23 = a1 + 1;
  }
  else {
    uint64_t v23 = 0LL;
  }
  (*(void (**)(uint64_t, uint64_t, BOOL, void *))(*v3 + 352LL))(a1, v23, a1 + 1 >= v22, v17);
  uint64_t v24 = v34;
  dispatch thunk of ShelfPresenter.contentType(for:)(a1, v12, v13);
  if ((sub_1000E32E0(a1) & 1) != 0)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v33);
    return top;
  }

  uint64_t v25 = sub_1001847BC();
  if (!v25)
  {
    double top = UIEdgeInsetsZero.top;
    goto LABEL_14;
  }

  uint64_t v27 = v25;
  uint64_t v28 = v26;
  [v17 pageMarginInsets];
  double v30 = v29;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v33);
  (*(void (**)(void *, uint64_t, uint64_t, double, double))(v28 + 40))(v17, v27, v28, v30, v30);
  return top;
}

double sub_1000DC560(uint64_t a1, void *a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *(void *)(v5 + 80);
  uint64_t v11 = *(void *)(v5 + 96);
  double v12 = 0.0;
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v10, v11) > a1)
  {
    dispatch thunk of ShelfPresenter.contentType(for:)(a1, v10, v11);
    if ((sub_1000E32E0(a1) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

    else
    {
      id v13 = [a2 traitCollection];
      char v14 = (*(uint64_t (**)(char *, id))(*v2 + 504))(v9, v13);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v14 & 1) != 0) {
        return 40.0;
      }
      else {
        return 0.0;
      }
    }
  }

  return v12;
}

double sub_1000DC6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *(void *)(v5 + 80);
  uint64_t v11 = *(void *)(v5 + 96);
  double v12 = 0.0;
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v10, v11) > a1)
  {
    dispatch thunk of ShelfPresenter.contentType(for:)(a1, v10, v11);
    if ((sub_1000E32E0(a1) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

    else
    {
      uint64_t v13 = sub_1001847BC();
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if (v13)
      {
        uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 64))(a2, v13, v15);
        if ((v17 & 1) == 0) {
          return *(double *)&v16;
        }
      }
    }
  }

  return v12;
}

uint64_t sub_1000DC7D8(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (id *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *(void *)(v3 + 80);
  uint64_t v9 = *(void *)(v3 + 96);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v8, v9) > a1)
  {
    dispatch thunk of ShelfPresenter.background(for:)(a1, v8, v9);
    if ((*(unsigned int (**)(id *, uint64_t))(v5 + 88))(v7, v4) == enum case for ShelfBackground.color(_:))
    {
      (*(void (**)(id *, uint64_t))(v5 + 96))(v7, v4);

      uint64_t v10 = (char *)v7 + *(int *)(sub_1000038E8(&qword_1002E5BD8) + 48);
      uint64_t v12 = type metadata accessor for ShelfBackgroundStyle(0LL, v11);
      (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8LL))(v10, v12);
      return 1LL;
    }

    (*(void (**)(id *, uint64_t))(v5 + 8))(v7, v4);
  }

  return 0LL;
}

CGFloat sub_1000DC908(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (id *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = *(void *)(v6 + 80);
  uint64_t v12 = *(void *)(v6 + 96);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v11, v12) > a1)
  {
    dispatch thunk of ShelfPresenter.background(for:)(a1, v11, v12);
    if ((*(unsigned int (**)(id *, uint64_t))(v8 + 88))(v10, v7) == enum case for ShelfBackground.color(_:))
    {
      (*(void (**)(id *, uint64_t))(v8 + 96))(v10, v7);

      uint64_t v13 = (char *)v10 + *(int *)(sub_1000038E8(&qword_1002E5BD8) + 48);
      uint64_t v15 = type metadata accessor for ShelfBackgroundStyle(0LL, v14);
      (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8LL))(v13, v15);
      (*(void (**)(uint64_t, uint64_t))(*v3 + 368LL))(a1, a2);
      return result;
    }

    (*(void (**)(id *, uint64_t))(v8 + 8))(v10, v7);
  }

  return UIEdgeInsetsZero.top;
}

double sub_1000DCA68(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = type metadata accessor for TitleHeaderView.Style(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 96);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v12, v13) <= a1) {
    return 0.0;
  }
  [a3 frame];
  double v15 = v14;
  double v17 = v16;
  uint64_t v18 = dispatch thunk of ShelfPresenter.titleArtwork(for:)(a1, v12, v13);
  uint64_t v19 = dispatch thunk of ShelfPresenter.title(for:)(a1, v12, v13);
  if (v20)
  {
    uint64_t v45 = v20;
    uint64_t v46 = v19;
    uint64_t ObjectType = swift_getObjectType(a2);
    [a2 pageMarginInsets];
    double v22 = v21;
    double v24 = v23;
    double v26 = v25;
    double v28 = v27 + (*(double (**)(uint64_t, void *))(*v4 + 344LL))(a1, a2);
    uint64_t v43 = type metadata accessor for TitleHeaderView(0LL);
    uint64_t v29 = dispatch thunk of ShelfPresenter.eyebrow(for:)(a1, v12, v13);
    uint64_t v41 = v30;
    uint64_t v42 = v29;
    uint64_t v31 = (void (*)(char *, uint64_t, uint64_t, uint64_t))dispatch thunk of ShelfPresenter.eyebrowArtwork(for:)( a1,  v12,  v13);
    uint64_t v32 = dispatch thunk of ShelfPresenter.subtitle(for:)(a1, v12, v13);
    uint64_t v34 = v33;
    if (v18) {
      uint64_t v35 = 1LL;
    }
    else {
      uint64_t v35 = 2LL;
    }
    (*(void (**)(uint64_t))(*v4 + 440LL))(a1);
    uint64_t v40 = a2;
    uint64_t v36 = v41;
    id v37 = v45;
    sub_1001774B8( v42,  v41,  v31,  v46,  v45,  v18,  v32,  v34,  v15,  v17,  0.0,  0.0,  v28,  v22,  v24,  v26,  v35,  (uint64_t)v11,  v40,  v43,  ObjectType);
    double v15 = v38;
    swift_release(v18);
    swift_bridgeObjectRelease(v34);
    swift_release(v31);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v37);
    sub_10002BDF4((uint64_t)v11, type metadata accessor for TitleHeaderView.Style);
  }

  else
  {
    swift_release(v18);
  }

  return v15;
}

double sub_1000DCCF0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double Width = 0.0;
  if (*((_BYTE *)v3 + 89) == 1
    && dispatch thunk of ShelfPresenter.sectionCount.getter(*(void *)(v7 + 80), *(void *)(v7 + 96)) == a1)
  {
    [a3 frame];
    double Width = CGRectGetWidth(v18);
    id v13 = [a2 traitCollection];
    if (qword_1002E0BF0 != -1) {
      swift_once(&qword_1002E0BF0, sub_100110BF8);
    }
    uint64_t v14 = type metadata accessor for StaticDimension(0LL);
    uint64_t v15 = sub_10000A634(v14, (uint64_t)qword_1002F4570);
    static Dimensions.defaultRoundingRule.getter(v15);
    StaticDimension.value(compatibleWith:rounded:)(v13, v11);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  return Width;
}

uint64_t sub_1000DCE54(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v8 == a1 && v9 == a2)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_13;
  }

  uint64_t v11 = v9;
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v8, v9, 0LL);
  swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
LABEL_13:
    NSString v18 = String._bridgeToObjectiveC()();
    uint64_t v19 = type metadata accessor for TitleHeaderView(0LL);
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v19);
    double v21 = NSStringFromClass(ObjCClassFromMetadata);
LABEL_17:
    double v24 = v21;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    uint64_t v26 = v25;

    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    double v28 = (void *)IndexPath._bridgeToObjectiveC()();
    id v29 = [a4 dequeueReusableSupplementaryViewOfKind:v18 withReuseIdentifier:v27 forIndexPath:v28];

    return (uint64_t)v29;
  }

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  if (v13 == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    double v16 = v14;
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v13, v14, 0LL);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) == 0) {
      goto LABEL_18;
    }
  }

  if (*(_BYTE *)(v4 + 89) == 1)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    uint64_t v22 = type metadata accessor for InfiniteScrollFooterView();
    double v23 = (objc_class *)swift_getObjCClassFromMetadata(v22);
    double v21 = NSStringFromClass(v23);
    goto LABEL_17;
  }

void sub_1000DD088(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void *a7)
{
  uint64_t v8 = v7;
  id v161 = a7;
  id v169 = a5;
  id v174 = a4;
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v170 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  double v16 = (void **)((char *)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v17);
  v168 = (id *)((char *)&v160 - v18);
  uint64_t v19 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v166 = *(void *)(v19 - 8);
  uint64_t v167 = v19;
  __chkstk_darwin(v19);
  uint64_t v165 = (char *)&v160 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for TitleHeaderView.TextConfiguration(0LL);
  __chkstk_darwin(v21);
  uint64_t v164 = (uint64_t)&v160 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v162 = type metadata accessor for TitleHeaderView.Style(0LL);
  __chkstk_darwin(v162);
  double v24 = (char *)&v160 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  BOOL v27 = v25 == a2 && v26 == a3;
  uint64_t v171 = v14;
  if (v27)
  {
    swift_bridgeObjectRelease(a3);
    goto LABEL_10;
  }

  uint64_t v28 = v26;
  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v25, v26, 0LL);
  swift_bridgeObjectRelease(v28);
  if ((v29 & 1) != 0)
  {
LABEL_10:
    uint64_t v33 = type metadata accessor for TitleHeaderView(0LL);
    uint64_t v34 = (void *)swift_dynamicCastClassUnconditional(a1, v33, 0LL, 0LL, 0LL);
    uint64_t v35 = *(void (**)(id))(*(void *)v8 + 440LL);
    id v163 = a1;
    id v36 = v174;
    v35(v174);
    (*(void (**)(char *))((swift_isaMask & *v34) + 0x190LL))(v24);
    uint64_t v37 = type metadata accessor for ArtworkLoader(0LL);
    uint64_t v172 = inject(_:from:)(v37, a6);
    CGRect v173 = v8;
    uint64_t v38 = *(void *)(v13 + 80);
    uint64_t v39 = *(void *)(v13 + 96);
    uint64_t v40 = dispatch thunk of ShelfPresenter.eyebrowArtwork(for:)(v36, v38, v39);
    uint64_t v41 = OBJC_IVAR____TtC8AppStore15TitleHeaderView_eyebrowArtworkView;
    uint64_t v42 = *(void **)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_eyebrowArtworkView);
    if (v42)
    {
      [v42 removeFromSuperview];
      uint64_t v43 = *(void **)((char *)v34 + v41);
    }

    else
    {
      uint64_t v43 = 0LL;
    }

    *(void *)((char *)v34 + v41) = 0LL;

    uint64_t v44 = OBJC_IVAR____TtC8AppStore15TitleHeaderView_eyebrowArtwork;
    uint64_t v45 = *(void *)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_eyebrowArtwork);
    *(void *)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_eyebrowArtwork) = v40;
    swift_retain(v40);
    swift_release(v45);
    sub_100171DDC();
    swift_release(v40);
    uint64_t v46 = dispatch thunk of ShelfPresenter.eyebrow(for:)(v174, v38, v39);
    uint64_t v48 = v47;
    uint64_t v49 = OBJC_IVAR____TtC8AppStore15TitleHeaderView_eyebrowLabel;
    uint64_t v50 = *(void **)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_eyebrowLabel);
    if (v50)
    {
      [v50 removeFromSuperview];
      uint64_t v51 = *(void **)((char *)v34 + v49);
    }

    else
    {
      uint64_t v51 = 0LL;
    }

    *(void *)((char *)v34 + v49) = 0LL;

    uint64_t v52 = (void *)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_eyebrowText);
    uint64_t v53 = *(void *)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_eyebrowText + 8);
    uint64_t *v52 = v46;
    v52[1] = v48;
    swift_bridgeObjectRelease(v53);
    sub_100171A7C();
    uint64_t v54 = *(void *)((char *)v34 + v44);
    if (v54)
    {
      uint64_t v55 = *(void **)((char *)v34 + v41);
      if (v55)
      {
        (*(void (**)(void))((swift_isaMask & *v34) + 0x188LL))();
        uint64_t v56 = v164;
        sub_1000777A4((uint64_t)v24, v164, type metadata accessor for TitleHeaderView.TextConfiguration);
        swift_retain(v54);
        id v57 = v55;
        sub_10002BDF4((uint64_t)v24, type metadata accessor for TitleHeaderView.Style);
        double v58 = sub_10020A8C8(v54, v56, (uint64_t)v34);
        double v60 = v59;
        uint64_t v61 = sub_10002BDF4(v56, type metadata accessor for TitleHeaderView.TextConfiguration);
        uint64_t v62 = v165;
        uint64_t v63 = Artwork.crop.getter(v61);
        uint64_t v64 = Artwork.Crop.preferredContentMode.getter(v63);
        (*(void (**)(char *, uint64_t))(v166 + 8))(v62, v167);
        uint64_t v65 = Artwork.config(_:mode:prefersLayeredImage:)(v64, 0LL, v58, v60);
        uint64_t v66 = type metadata accessor for ArtworkView(0LL);
        uint64_t v67 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v65, 2LL, 1LL, v57, v66, v67);
        swift_release(v54);

        swift_release(v65);
      }
    }

    uint64_t v68 = dispatch thunk of ShelfPresenter.titleArtwork(for:)(v174, v38, v39);
    uint64_t v69 = OBJC_IVAR____TtC8AppStore15TitleHeaderView_titleArtworkView;
    char v70 = *(void **)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_titleArtworkView);
    if (v70)
    {
      [v70 removeFromSuperview];
      uint64_t v71 = *(void **)((char *)v34 + v69);
    }

    else
    {
      uint64_t v71 = 0LL;
    }

    *(void *)((char *)v34 + v69) = 0LL;

    uint64_t v72 = OBJC_IVAR____TtC8AppStore15TitleHeaderView_titleArtwork;
    uint64_t v73 = *(void *)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_titleArtwork);
    *(void *)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_titleArtwork) = v68;
    swift_retain(v68);
    swift_release(v73);
    sub_100171FD4();
    swift_release(v68);
    id v74 = *(id *)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_titleLabel);
    dispatch thunk of ShelfPresenter.title(for:)(v174, v38, v39);
    if (v75)
    {
      uint64_t v77 = v75;
      NSString v78 = String._bridgeToObjectiveC()();
      *(void *)&double v76 = swift_bridgeObjectRelease(v77).n128_u64[0];
    }

    else
    {
      NSString v78 = 0LL;
    }

    objc_msgSend(v74, "setText:", v78, v76);

    uint64_t v80 = *(void *)((char *)v34 + v72);
    if (v80)
    {
      uint64_t v81 = *(void **)((char *)v34 + v69);
      if (v81)
      {
        (*(void (**)(void))((swift_isaMask & *v34) + 0x188LL))();
        uint64_t v82 = v164;
        sub_1000777A4( (uint64_t)&v24[*(int *)(v162 + 20)],  v164,  type metadata accessor for TitleHeaderView.TextConfiguration);
        swift_retain(v80);
        id v83 = v81;
        sub_10002BDF4((uint64_t)v24, type metadata accessor for TitleHeaderView.Style);
        double v84 = sub_10020A8C8(v80, v82, (uint64_t)v34);
        double v86 = v85;
        uint64_t v87 = sub_10002BDF4(v82, type metadata accessor for TitleHeaderView.TextConfiguration);
        uint64_t v88 = v165;
        uint64_t v89 = Artwork.crop.getter(v87);
        uint64_t v90 = Artwork.Crop.preferredContentMode.getter(v89);
        (*(void (**)(char *, uint64_t))(v166 + 8))(v88, v167);
        uint64_t v91 = Artwork.config(_:mode:prefersLayeredImage:)(v90, 0LL, v84, v86);
        uint64_t v92 = type metadata accessor for ArtworkView(0LL);
        uint64_t v93 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v91, 2LL, 1LL, v83, v92, v93);
        swift_release(v80);

        *(void *)&double v79 = swift_release(v91).n128_u64[0];
      }
    }

    id v94 = v169;
    objc_msgSend(v169, "pageMarginInsets", v79);
    double v96 = v95;
    double v98 = v97;
    double v100 = v99;
    id v101 = v174;
    double v103 = v102 + (*(double (**)(id, id))(*(void *)v173 + 344LL))(v174, v94);
    objc_msgSend(v34, "setLayoutMargins:", v103, v96, v98, v100);
    uint64_t v104 = (double *)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_separatorInset);
    *uint64_t v104 = v103;
    v104[1] = v96;
    v104[2] = v98;
    v104[3] = v100;
    [v34 setNeedsLayout];
    [v74 setNumberOfLines:2];
    id v105 = v74;
    dispatch thunk of ShelfPresenter.title(for:)(v101, v38, v39);
    if (v106)
    {
      uint64_t v108 = v106;
      NSString v109 = String._bridgeToObjectiveC()();
      *(void *)&double v107 = swift_bridgeObjectRelease(v108).n128_u64[0];
    }

    else
    {
      NSString v109 = 0LL;
    }

    BOOL v110 = v163;
    uint64_t v112 = v170;
    uint64_t v111 = v171;
    uint64_t v113 = v168;
    objc_msgSend(v105, "setText:", v109, v107);

    dispatch thunk of ShelfPresenter.background(for:)(v174, v38, v39);
    if ((*(unsigned int (**)(id *, uint64_t))(v112 + 88))(v113, v111) == enum case for ShelfBackground.color(_:))
    {
      (*(void (**)(id *, uint64_t))(v112 + 96))(v113, v111);
      id v114 = *v113;
      unint64_t v115 = (char *)v113 + *(int *)(sub_1000038E8(&qword_1002E5BD8) + 48);
      uint64_t v117 = type metadata accessor for ShelfBackgroundStyle(0LL, v116);
      (*(void (**)(char *, uint64_t))(*(void *)(v117 - 8) + 8LL))(v115, v117);
      [v34 setBackgroundColor:v114];
    }

    else
    {
      (*(void (**)(id *, uint64_t))(v112 + 8))(v113, v111);
      uint64_t v118 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
      id v119 = v110;
      id v114 = [v118 clearColor];
      [v34 setBackgroundColor:v114];
    }

    unint64_t v120 = *(void **)((char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_detailLabel);
    if (v120)
    {
      id v121 = v120;
      dispatch thunk of ShelfPresenter.subtitle(for:)(v174, v38, v39);
      if (v122)
      {
        uint64_t v124 = v122;
        NSString v125 = String._bridgeToObjectiveC()();
        *(void *)&double v123 = swift_bridgeObjectRelease(v124).n128_u64[0];
      }

      else
      {
        NSString v125 = 0LL;
      }

      objc_msgSend(v121, "setText:", v125, v123);
    }

    id v126 = [v34 layer];
    [v126 setZPosition:0.0];

    if (((_BYTE)v173[11] & 1) != 0)
    {

      swift_release(v172);
    }

    else
    {
      CGFloat v128 = v173[9];
      CGFloat v127 = v173[10];
      CGFloat v130 = v173[7];
      CGFloat v129 = v173[8];
      [v34 frame];
      v177.origin.double x = v131;
      v177.origin.double y = v132;
      v177.size.double width = v133;
      v177.size.double height = v134;
      v175.origin.double x = v130;
      v175.origin.double y = v129;
      v175.size.double width = v128;
      v175.size.double height = v127;
      CGRect v176 = CGRectIntersection(v175, v177);
      double x = v176.origin.x;
      double y = v176.origin.y;
      double width = v176.size.width;
      double height = v176.size.height;
      double v139 = CGRectGetHeight(v176);
      if (v139 > COERCE_DOUBLE(1LL))
      {
        objc_msgSend(v161, "convertRect:toCoordinateSpace:", v34, x, y, width, height);
        uint64_t v140 = v144;
        uint64_t v141 = v145;
        uint64_t v142 = v146;
        uint64_t v143 = v147;
        swift_release(v172);
      }

      else
      {
        swift_release(v172);
        uint64_t v140 = 0LL;
        uint64_t v141 = 0LL;
        uint64_t v142 = 0LL;
        uint64_t v143 = 0LL;
      }

      uint64_t v148 = (char *)v34 + OBJC_IVAR____TtC8AppStore15TitleHeaderView_avoidanceRegion;
      *(void *)uint64_t v148 = v140;
      *((void *)v148 + 1) = v141;
      *((void *)v148 + 2) = v142;
      *((void *)v148 + 3) = v143;
      v148[32] = v139 <= COERCE_DOUBLE(1LL);
    }

    return;
  }

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  uint64_t v32 = v30;
  if (v31 == a2 && v30 == a3)
  {
    swift_bridgeObjectRelease(a3);
LABEL_47:
    uint64_t v150 = type metadata accessor for InfiniteScrollFooterView();
    uint64_t v151 = (char *)swift_dynamicCastClassUnconditional(a1, v150, 0LL, 0LL, 0LL);
    id v152 = *(void **)&v151[OBJC_IVAR____TtC8AppStore24InfiniteScrollFooterView_activityIndicator];
    id v153 = a1;
    [v152 startAnimating];
    id v174 = [v151 layer];
    [v174 setZPosition:0.0];

    return;
  }

  char v149 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v31, v30, 0LL);
  swift_bridgeObjectRelease(v32);
  if ((v149 & 1) != 0) {
    goto LABEL_47;
  }
  if (a2 == 0xD00000000000001FLL && a3 == 0x80000001002481E0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0xD00000000000001FLL, 0x80000001002481E0LL, 0LL) & 1) != 0)
  {
    dispatch thunk of ShelfPresenter.background(for:)(v174, *(void *)(v13 + 80), *(void *)(v13 + 96));
    uint64_t v155 = v170;
    uint64_t v154 = v171;
    if ((*(unsigned int (**)(void **, uint64_t))(v170 + 88))(v16, v171) == enum case for ShelfBackground.color(_:))
    {
      (*(void (**)(void **, uint64_t))(v155 + 96))(v16, v154);
      double v156 = *v16;
      uint64_t v157 = (char *)v16 + *(int *)(sub_1000038E8(&qword_1002E5BD8) + 48);
      uint64_t v159 = type metadata accessor for ShelfBackgroundStyle(0LL, v158);
      (*(void (**)(char *, uint64_t))(*(void *)(v159 - 8) + 8LL))(v157, v159);
      [a1 setBackgroundColor:v156];
    }

    else
    {
      (*(void (**)(void **, uint64_t))(v155 + 8))(v16, v154);
    }
  }

uint64_t sub_1000DDCD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v114 = a2;
  uint64_t v4 = *v2;
  uint64_t v106 = sub_1000038E8(&qword_1002E5BD8);
  __chkstk_darwin(v106);
  id v105 = (void *)((char *)v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v6);
  uint64_t v104 = (void *)((char *)v96 - v7);
  __chkstk_darwin(v8);
  double v107 = (void **)((char *)v96 - v9);
  __chkstk_darwin(v10);
  uint64_t v108 = (void **)((char *)v96 - v11);
  uint64_t v12 = sub_1000038E8(&qword_1002E5BC8);
  __chkstk_darwin(v12);
  uint64_t v113 = (char *)v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for ShelfBackground(0LL);
  uint64_t v111 = *(void **)(v14 - 8);
  __chkstk_darwin(v14);
  BOOL v110 = (char *)v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  NSString v109 = (char *)v96 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (void **)((char *)v96 - v19);
  __chkstk_darwin(v21);
  uint64_t v23 = (void **)((char *)v96 - v22);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v96 - v25;
  __chkstk_darwin(v27);
  uint64_t v112 = (char *)v96 - v28;
  uint64_t v29 = v2[2];
  uint64_t v30 = *(void *)(v4 + 80);
  uint64_t v31 = *(void *)(v4 + 96);
  dispatch thunk of ShelfPresenter.eyebrow(for:)(a1, v30, v31);
  uint64_t v115 = v32;
  swift_bridgeObjectRelease(v32);
  uint64_t v33 = a1 - 1;
  if (a1 < 1 || dispatch thunk of ShelfPresenter.sectionCount.getter(v30, v31) < 1) {
    goto LABEL_21;
  }
  uint64_t v34 = a1;
  uint64_t v35 = v112;
  uint64_t v100 = v34;
  dispatch thunk of ShelfPresenter.background(for:)(v34, v30, v31);
  uint64_t v99 = v29;
  uint64_t v102 = v30;
  dispatch thunk of ShelfPresenter.background(for:)(v33, v30, v31);
  uint64_t v36 = (uint64_t)v113;
  uint64_t v37 = &v113[*(int *)(v12 + 48)];
  uint64_t v38 = v111;
  uint64_t v39 = (void (*)(uint64_t, char *, uint64_t))v111[2];
  v39((uint64_t)v113, v35, v14);
  id v101 = v37;
  v39((uint64_t)v37, v26, v14);
  uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t))v38[11];
  int v41 = v40(v36, v14);
  double v103 = v26;
  if (v41 == enum case for ShelfBackground.color(_:))
  {
    int v42 = v41;
    v39((uint64_t)v23, v113, v14);
    uint64_t v43 = (double (*)(void **, uint64_t))v38[12];
    v43(v23, v14);
    uint64_t v44 = v101;
    int v45 = v40((uint64_t)v101, v14);
    double v98 = v39;
    if (v45 == v42)
    {
      v39((uint64_t)v20, v44, v14);
      v46.n128_f64[0] = v43(v20, v14);
      uint64_t v47 = v106;
      uint64_t v48 = *(int *)(v106 + 48);
      uint64_t v49 = (char *)v108 + v48;
      v96[0] = (char *)v23 + v48;
      v96[1] = (char *)v108 + v48;
      uint64_t v50 = *v23;
      *uint64_t v108 = *v23;
      uint64_t v51 = type metadata accessor for ShelfBackgroundStyle(0LL, v46);
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
      uint64_t v97 = v52;
      v53(v49, (char *)v96[0], v51);
      uint64_t v54 = *(int *)(v47 + 48);
      uint64_t v55 = v107;
      uint64_t v56 = (char *)v107 + v54;
      id v57 = *v20;
      *double v107 = *v20;
      v53((char *)v55 + v54, (char *)v20 + v54, v51);
      uint64_t v58 = *(int *)(v47 + 48);
      double v59 = v104;
      *uint64_t v104 = v50;
      double v60 = *(void (**)(void))(v52 + 16);
      uint64_t v61 = (uint64_t)v59 + v58;
      v60();
      uint64_t v62 = *(int *)(v47 + 48);
      uint64_t v63 = v105;
      uint64_t v64 = (uint64_t)v105 + v62;
      *id v105 = v57;
      ((void (*)(char *, char *, uint64_t))v60)((char *)v63 + v62, v56, v51);
      id v65 = v50;
      id v66 = v57;
      LOBYTE(v50) = sub_10018A7D0(v65, v61, v66, v64);

      uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
      v67(v64, v51);
      v67(v61, v51);
      if ((v50 & 1) != 0)
      {
        uint64_t v69 = v111;
        uint64_t v68 = v112;
        if (v115)
        {
          char v70 = v103;
          if (qword_1002E0F20 != -1) {
            swift_once(&qword_1002E0F20, sub_100171204);
          }
          uint64_t v71 = qword_1002F5198;
        }

        else
        {
          char v70 = v103;
          if (qword_1002E0F18 != -1) {
            swift_once(&qword_1002E0F18, sub_1001711E0);
          }
          uint64_t v71 = qword_1002F5180;
        }

        uint64_t v92 = v107;
        uint64_t v93 = type metadata accessor for TitleHeaderView.Style(0LL);
        uint64_t v94 = sub_10000A634(v93, (uint64_t)v71);
        sub_1000777A4(v94, v114, type metadata accessor for TitleHeaderView.Style);
        sub_1000077E0((uint64_t)v92, &qword_1002E5BD8);
        sub_1000077E0((uint64_t)v108, &qword_1002E5BD8);
        double v95 = (void (*)(char *, uint64_t))v69[1];
        v95(v70, v14);
        v95(v68, v14);
        v95(v101, v14);
        return ((uint64_t (*)(char *, uint64_t))v95)(v113, v14);
      }

      sub_1000077E0((uint64_t)v107, &qword_1002E5BD8);
      uint64_t v38 = v111;
      uint64_t v72 = v108;
    }

    else
    {
      uint64_t v72 = v23;
      uint64_t v38 = v111;
    }

    sub_1000077E0((uint64_t)v72, &qword_1002E5BD8);
    uint64_t v35 = v112;
    uint64_t v26 = v103;
    uint64_t v39 = v98;
  }

  uint64_t v73 = enum case for ShelfBackground.none(_:);
  id v74 = v38;
  uint64_t v75 = (char *)v38[13];
  double v76 = v109;
  uint64_t v112 = v75;
  ((void (*)(char *, void, uint64_t))v75)(v109, enum case for ShelfBackground.none(_:), v14);
  uint64_t v77 = sub_100004288( (unint64_t *)&qword_1002EE4F0,  (uint64_t (*)(uint64_t))&type metadata accessor for ShelfBackground,  (uint64_t)&protocol conformance descriptor for ShelfBackground);
  char v78 = dispatch thunk of static Equatable.== infix(_:_:)(v35, v76, v14, v77);
  double v79 = (void (*)(char *, uint64_t))v74[1];
  v79(v76, v14);
  uint64_t v80 = v110;
  v39((uint64_t)v110, v26, v14);
  if ((v78 & 1) != 0)
  {
    v79(v80, v14);
    uint64_t v30 = v102;
LABEL_20:
    v79(v103, v14);
    v79(v35, v14);
    sub_1000077E0((uint64_t)v113, &qword_1002E5BC8);
    a1 = v100;
LABEL_21:
    dispatch thunk of ShelfPresenter.subtitle(for:)(a1, v30, v31);
    uint64_t v85 = v84;
    swift_bridgeObjectRelease(v84);
    if (v85)
    {
      if (v115)
      {
        if (qword_1002E0F10 != -1) {
          swift_once(&qword_1002E0F10, sub_100170F3C);
        }
        uint64_t v86 = type metadata accessor for TitleHeaderView.Style(0LL);
        uint64_t v87 = qword_1002F5168;
      }

      else
      {
        if (qword_1002E0F08 != -1) {
          swift_once(&qword_1002E0F08, sub_100170F18);
        }
        uint64_t v86 = type metadata accessor for TitleHeaderView.Style(0LL);
        uint64_t v87 = qword_1002F5150;
      }
    }

    else if (v115)
    {
      if (qword_1002E0F00 != -1) {
        swift_once(&qword_1002E0F00, sub_100170CC0);
      }
      uint64_t v86 = type metadata accessor for TitleHeaderView.Style(0LL);
      uint64_t v87 = qword_1002F5138;
    }

    else
    {
      if (qword_1002E0EF8 != -1) {
        swift_once(&qword_1002E0EF8, sub_100170C9C);
      }
      uint64_t v86 = type metadata accessor for TitleHeaderView.Style(0LL);
      uint64_t v87 = qword_1002F5120;
    }

    uint64_t v88 = sub_10000A634(v86, (uint64_t)v87);
    return sub_1000777A4(v88, v114, type metadata accessor for TitleHeaderView.Style);
  }

  ((void (*)(char *, uint64_t, uint64_t))v112)(v76, v73, v14);
  char v81 = static ShelfBackground.== infix(_:_:)(v80, v76);
  v79(v76, v14);
  v79(v80, v14);
  uint64_t v30 = v102;
  if ((v81 & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v82 = v103;
  if (v115)
  {
    if (qword_1002E0F20 != -1) {
      swift_once(&qword_1002E0F20, sub_100171204);
    }
    id v83 = qword_1002F5198;
  }

  else
  {
    if (qword_1002E0F18 != -1) {
      swift_once(&qword_1002E0F18, sub_1001711E0);
    }
    id v83 = qword_1002F5180;
  }

  uint64_t v90 = type metadata accessor for TitleHeaderView.Style(0LL);
  uint64_t v91 = sub_10000A634(v90, (uint64_t)v83);
  sub_1000777A4(v91, v114, type metadata accessor for TitleHeaderView.Style);
  v79(v82, v14);
  v79(v35, v14);
  v79(v101, v14);
  return ((uint64_t (*)(char *, uint64_t))v79)(v113, v14);
}

double sub_1000DE56C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  *(void *)&__int128 v282 = a4;
  v287 = a3;
  uint64_t v286 = a2;
  uint64_t v6 = *v4;
  uint64_t v280 = sub_1000038E8(&qword_1002E8E38);
  __chkstk_darwin(v280);
  v261 = (BOOL *)&v252 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  v270 = (BOOL *)&v252 - v9;
  __chkstk_darwin(v10);
  v267 = (BOOL *)&v252 - v11;
  uint64_t v257 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v256 = *(void *)(v257 - 8);
  __chkstk_darwin(v257);
  v260 = (char *)&v252 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  v259 = (char *)&v252 - v14;
  __chkstk_darwin(v15);
  v255 = (char *)&v252 - v16;
  __chkstk_darwin(v17);
  v266 = (char *)&v252 - v18;
  __chkstk_darwin(v19);
  v265 = (char *)&v252 - v20;
  __chkstk_darwin(v21);
  v269 = (char *)&v252 - v22;
  uint64_t v23 = sub_1000038E8((uint64_t *)&unk_1002EE370);
  __chkstk_darwin(v23);
  v274 = (char *)&v252 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v273 = sub_1000038E8((uint64_t *)&unk_1002EE3B0);
  uint64_t v272 = *(void *)(v273 - 8);
  __chkstk_darwin(v273);
  v285 = (char *)&v252 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = sub_1000038E8((uint64_t *)&unk_1002E34D0);
  __chkstk_darwin(v26);
  v275 = (char *)&v252 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v276 = type metadata accessor for IndexPath(0LL);
  uint64_t v278 = *(void *)(v276 - 8);
  __chkstk_darwin(v276);
  v271 = (char *)&v252 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29);
  v283 = (char *)&v252 - v30;
  __chkstk_darwin(v31);
  v262 = (char *)&v252 - v32;
  __chkstk_darwin(v33);
  v268 = (char *)&v252 - v34;
  uint64_t v292 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v35 = *(void *)(v292 - 8);
  __chkstk_darwin(v292);
  v254 = (char *)&v252 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v37);
  v258 = (char *)&v252 - v38;
  __chkstk_darwin(v39);
  v263 = (char *)&v252 - v40;
  __chkstk_darwin(v41);
  v264 = (char *)&v252 - v42;
  __chkstk_darwin(v43);
  v279 = (char *)&v252 - v44;
  __chkstk_darwin(v45);
  uint64_t v47 = (char *)&v252 - v46;
  __chkstk_darwin(v48);
  v277 = (void (*)(char *, char *, uint64_t))((char *)&v252 - v49);
  __chkstk_darwin(v50);
  uint64_t v52 = (char *)&v252 - v51;
  __chkstk_darwin(v53);
  uint64_t v55 = (char *)&v252 - v54;
  uint64_t v56 = v4[2];
  IndexPath.section.getter(v57);
  uint64_t v58 = *(void *)(v6 + 80);
  uint64_t v281 = v6;
  uint64_t v59 = *(void *)(v6 + 96);
  uint64_t v61 = dispatch thunk of ShelfPresenter.contentType(for:)(v60, v58, v59);
  IndexPath.section.getter(v61);
  uint64_t v293 = v59;
  *(void *)&__int128 v294 = v56;
  uint64_t v290 = v58;
  uint64_t v63 = dispatch thunk of ShelfPresenter.doesShelfExist(for:)(v62, v58, v59);
  uint64_t v64 = 0LL;
  if ((v63 & 1) != 0)
  {
    __n128 v65 = IndexPath.section.getter(v63);
    uint64_t v63 = (*(uint64_t (**)(__n128))(*v4 + 336))(v65);
    uint64_t v64 = v63;
  }

  v288 = v4;
  uint64_t v291 = a1;
  IndexPath.section.getter(v63);
  uint64_t v66 = v290;
  char v68 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v67, v290, v293);
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v289 = v55;
  char v70 = v55;
  uint64_t v71 = v292;
  v69(v52, v70, v292);
  uint64_t v72 = *(uint64_t (**)(char *, uint64_t))(v35 + 88);
  uint64_t v73 = v72(v52, v71);
  id v74 = v47;
  if ((_DWORD)v73 != enum case for Shelf.ContentType.smallLockup(_:)
    && (_DWORD)v73 != enum case for Shelf.ContentType.mediumLockup(_:))
  {
    if ((_DWORD)v73 == enum case for Shelf.ContentType.largeLockup(_:)) {
      goto LABEL_32;
    }
    if ((_DWORD)v73 != enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
      && (_DWORD)v73 != enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
      && (_DWORD)v73 != enum case for Shelf.ContentType.action(_:)
      && (_DWORD)v73 != enum case for Shelf.ContentType.editorialCard(_:)
      && (_DWORD)v73 != enum case for Shelf.ContentType.videoCard(_:))
    {
      if ((_DWORD)v73 == enum case for Shelf.ContentType.brick(_:)
        || (_DWORD)v73 == enum case for Shelf.ContentType.categoryBrick(_:))
      {
        goto LABEL_32;
      }

      if ((_DWORD)v73 != enum case for Shelf.ContentType.reviews(_:)
        && (_DWORD)v73 != enum case for Shelf.ContentType.appTrailerLockup(_:)
        && (_DWORD)v73 != enum case for Shelf.ContentType.framedVideo(_:)
        && (_DWORD)v73 != enum case for Shelf.ContentType.screenshotsLockup(_:)
        && (_DWORD)v73 != enum case for Shelf.ContentType.smallStoryCard(_:)
        && (_DWORD)v73 != enum case for Shelf.ContentType.mediumStoryCard(_:))
      {
        if ((_DWORD)v73 == enum case for Shelf.ContentType.largeStoryCard(_:)) {
          goto LABEL_32;
        }
        if ((_DWORD)v73 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
          && (_DWORD)v73 != enum case for Shelf.ContentType.upsellBreakout(_:)
          && (_DWORD)v73 != enum case for Shelf.ContentType.smallBreakout(_:)
          && (_DWORD)v73 != enum case for Shelf.ContentType.mixedMediaLockup(_:)
          && (_DWORD)v73 != enum case for Shelf.ContentType.arcadeFooter(_:)
          && (_DWORD)v73 != enum case for Shelf.ContentType.textCard(_:)
          && (_DWORD)v73 != enum case for Shelf.ContentType.smallGameCenterPlayer(_:)
          && (_DWORD)v73 != enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
          && (_DWORD)v73 != enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:)
          && (_DWORD)v73 != enum case for Shelf.ContentType.posterLockup(_:))
        {
          (*(void (**)(char *, uint64_t))(v35 + 8))(v52, v292);
          goto LABEL_34;
        }
      }
    }
  }

  if ((v68 & 1) == 0)
  {
LABEL_34:
    double v79 = v279;
    uint64_t v80 = (uint64_t)v289;
    uint64_t v81 = v292;
    v69(v279, v289, v292);
    int v82 = v72(v79, v81);
    int v83 = enum case for Shelf.ContentType.informationContainer(_:);
    if (v82 == enum case for Shelf.ContentType.informationContainer(_:))
    {
      v279 = (char *)v72;
      uint64_t v84 = type metadata accessor for InformationContainerCollectionViewCell();
      v285 = (char *)v84;
      uint64_t v85 = (char *)&off_10028E928;
LABEL_47:
      v283 = v85;
      IndexPath.section.getter(v84);
      uint64_t v110 = v294;
      uint64_t v111 = v66;
      uint64_t v112 = v66;
      uint64_t v113 = v293;
      uint64_t v115 = dispatch thunk of ShelfPresenter.isShelfHidden(for:)(v114, v111, v293);
      if ((v115 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v80, v292);
        return 0.0;
      }

      uint64_t v284 = v64;
      IndexPath.section.getter(v115);
      uint64_t v118 = dispatch thunk of ShelfPresenter.shelf(for:)(v117, v112, v113);
      uint64_t v119 = swift_unknownObjectRetain(v110);
      IndexPath.section.getter(v119);
      uint64_t v121 = v120;
      uint64_t v122 = v264;
      Shelf.contentType.getter(v120);
      double v123 = v263;
      uint64_t v124 = v292;
      v69(v263, v122, v292);
      int v125 = ((uint64_t (*)(char *, uint64_t))v279)(v123, v124);
      BOOL v126 = v125 == v83 || v125 == enum case for Shelf.ContentType.reviewsContainer(_:);
      char v127 = v126;
      if (!v126) {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v123, v124);
      }
      uint64_t v128 = type metadata accessor for ShelfComponentContainerDelegate(0LL, v290, *(void *)(v281 + 88), v293);
      CGFloat v129 = *(void (**)(char *, uint64_t))(v35 + 8);
      v129(v122, v124);
      uint64_t v130 = v124;
      CGFloat v131 = v288;
      uint64_t v132 = v288[3];
      uint64_t v133 = swift_allocObject(v128, 72LL, 7LL);
      *(void *)(v133 + swift_unknownObjectWeakDestroy(v0 + 16) = v294;
      *(void *)(v133 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v121;
      *(_BYTE *)(v133 + 32) = v127;
      *(void *)(v133 + 40) = v132;
      __int128 v294 = *((_OWORD *)v131 + 2);
      *(_OWORD *)(v133 + 48) = v294;
      *(void *)(v133 + 64) = 0LL;
      swift_retain(v132);
      swift_unknownObjectRetain(v294);
      uint64_t v134 = (uint64_t)v289;
      uint64_t v135 = v287;
      sub_1000E3AD4((uint64_t)v289, 1, v284, v287, (void *)v282);
      double v137 = v136;
      double v139 = v138;
      IndexPath.section.getter(v140);
      uint64_t v142 = v141;
      uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C8F0, v128);
      uint64_t v144 = (double (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, double, double))*((void *)v283 + 3);
      swift_retain(v133);
      double v109 = v144(v142, v118, v286, v133, WitnessTable, v135, v137, v139);
      swift_release(v118);
      swift_release_n(v133, 2LL);
      v129((char *)v134, v130);
      return v109;
    }

    if (v82 == enum case for Shelf.ContentType.reviewsContainer(_:))
    {
      v279 = (char *)v72;
      uint64_t v84 = type metadata accessor for ReviewsContainerCell();
      v285 = (char *)v84;
      uint64_t v85 = (char *)&off_1002942F0;
      goto LABEL_47;
    }

    uint64_t v284 = v64;
    uint64_t v145 = *(void (**)(char *, uint64_t))(v35 + 8);
    v145(v279, v81);
    uint64_t v146 = sub_1001847BC();
    v263 = v147;
    v264 = (char *)v146;
    if (v146)
    {
      if ((dispatch thunk of ShelfPresenter.doesModelExist(for:)(v291, v66, v293) & 1) != 0)
      {
        v279 = (char *)v72;
        v252 = v145;
        uint64_t v148 = v80;
        uint64_t v149 = v284;
        uint64_t v150 = v80;
        uint64_t v151 = v287;
        id v152 = v288;
        sub_1000E3AD4(v148, 0, v284, v287, (void *)v282);
        double v154 = v153;
        double v156 = v155;
        id v157 = [v151 traitCollection];
        LOBYTE(v152) = (*(uint64_t (**)(uint64_t, id))(*v152 + 504))(v150, v157);

        if ((v152 & 1) != 0)
        {
          id v158 = [v151 traitCollection];
          id v159 = [v158 horizontalSizeClass];

          uint64_t v160 = sub_1001851CC(v149, (uint64_t)v159);
        }

        else
        {
          uint64_t v160 = 1LL;
        }

        uint64_t v163 = v150;
        uint64_t v164 = v258;
        uint64_t v165 = sub_1000038E8(&qword_1002E2360);
        uint64_t v166 = v278;
        uint64_t v167 = *(unsigned __int8 *)(v278 + 80);
        uint64_t v168 = (v167 + 32) & ~v167;
        v258 = *(char **)(v278 + 72);
        uint64_t v169 = swift_allocObject(v165, &v258[v168], v167 | 7);
        *(_OWORD *)(v169 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
        uint64_t v281 = v168;
        uint64_t v170 = *(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 16);
        uint64_t v171 = v276;
        v170(v169 + v168, v291, v276);
        uint64_t v172 = v292;
        v69(v164, (char *)v163, v292);
        CGRect v173 = (uint64_t (*)(char *, uint64_t))v252;
        v253 = (char *)v169;
        v277 = (void (*)(char *, char *, uint64_t))v170;
        if (v160 >= 2)
        {
          id v174 = v254;
          v69(v254, v164, v172);
          if (((unsigned int (*)(char *, uint64_t))v279)(v174, v172) == enum case for Shelf.ContentType.privacyType(_:))
          {
            uint64_t v175 = v173(v164, v172);
            double v176 = floor((double)IndexPath.item.getter(v175) / (double)v160);
            if ((~*(void *)&v176 & 0x7FF0000000000000LL) != 0)
            {
              if (v176 <= -9.22337204e18)
              {
LABEL_111:
                __break(1u);
                goto LABEL_112;
              }

              uint64_t v172 = v292;
              if (v176 >= 9.22337204e18)
              {
LABEL_112:
                __break(1u);
LABEL_113:
                __break(1u);
              }

              uint64_t v177 = (uint64_t)v176 * v160;
              uint64_t v178 = 0LL;
              __int128 v282 = xmmword_100236DD0;
              while (1)
              {
                uint64_t v179 = v177 + v178;
                if (__OFADD__(v177, v178)) {
                  break;
                }
                if (v179 >= v284)
                {
                  uint64_t v163 = (uint64_t)v289;
                }

                else
                {
                  uint64_t v180 = sub_1000038E8((uint64_t *)&unk_1002EE350);
                  uint64_t v181 = swift_allocObject(v180, 48LL, 7LL);
                  *(_OWORD *)(v181 + swift_unknownObjectWeakDestroy(v0 + 16) = v282;
                  uint64_t v182 = v291;
                  __n128 v183 = IndexPath.section.getter(v181);
                  *(void *)(v181 + 32) = v184;
                  *(void *)(v181 + 40) = v179;
                  v185 = v268;
                  IndexPath.init(arrayLiteral:)(v181, v183);
                  uint64_t v186 = sub_100004288( (unint64_t *)&qword_1002E6C48,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath,  (uint64_t)&protocol conformance descriptor for IndexPath);
                  if ((dispatch thunk of static Equatable.== infix(_:_:)(v185, v182, v171, v186) & 1) != 0)
                  {
                    uint64_t v172 = v292;
                    uint64_t v163 = (uint64_t)v289;
                    uint64_t v187 = v278;
                  }

                  else
                  {
                    v277(v262, v185, v171);
                    unint64_t v189 = *((void *)v253 + 2);
                    unint64_t v188 = *((void *)v253 + 3);
                    if (v189 >= v188 >> 1) {
                      v253 = (char *)sub_1000183D0(v188 > 1, v189 + 1, 1, v253);
                    }
                    v190 = v253;
                    *((void *)v253 + 2) = v189 + 1;
                    uint64_t v187 = v278;
                    (*(void (**)(char *, char *, uint64_t))(v278 + 32))( &v190[v281 + v189 * (void)v258],  v262,  v171);
                    uint64_t v172 = v292;
                    uint64_t v163 = (uint64_t)v289;
                  }

                  (*(void (**)(char *, uint64_t))(v187 + 8))(v268, v171);
                }

                if (v160 == ++v178) {
                  goto LABEL_87;
                }
              }

              __break(1u);
            }

            __break(1u);
            goto LABEL_111;
          }

          v173(v174, v172);
        }

        v173(v164, v172);
LABEL_87:
        v191 = v253;
        uint64_t v192 = *((void *)v253 + 2);
        if (v192)
        {
          v193 = &v253[v281];
          double v194 = 0.0;
          double v109 = 0.0;
          v195 = v287;
          uint64_t v196 = v257;
          uint64_t v197 = v256;
          v198 = v255;
          uint64_t v199 = v293;
          v200 = v269;
          uint64_t v201 = v278;
          do
          {
            *(void *)&__int128 v282 = v192;
            v216 = v275;
            uint64_t v281 = (uint64_t)v193;
            v217 = v277;
            ((void (*)(char *))v277)(v275);
            v279 = *(char **)(v201 + 56);
            ((void (*)(char *, void, uint64_t, uint64_t))v279)(v216, 0LL, 1LL, v171);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v201 + 48))(v216, 1LL, v171) == 1)
            {
              uint64_t v172 = v292;
              uint64_t v163 = (uint64_t)v289;
              v250 = (void (*)(uint64_t, uint64_t, __n128))v252;
              v191 = v253;
              goto LABEL_108;
            }

            v218 = *(void (**)(char *, char *, uint64_t))(v201 + 32);
            v208 = v283;
            v218(v283, v216, v171);
            dispatch thunk of ShelfPresenter.model(at:)(&v296, v208, v290, v199);
            v219 = v271;
            v217(v271, v208, v171);
            v220 = v274;
            StatePath<A>.init(_:)(v219);
            v221 = v288;
            uint64_t v295 = v288[3];
            swift_retain(v295);
            uint64_t v222 = sub_1000038E8((uint64_t *)&unk_1002F08B0);
            uint64_t v223 = sub_10005E7D4( (unint64_t *)&qword_1002EE390,  (uint64_t *)&unk_1002F08B0,  (uint64_t)&protocol conformance descriptor for TransientStateStore<A>);
            uint64_t v224 = StateLens.init<A>(contentsOf:in:)(v220, &v295, &type metadata for Never, v222, v223);
            ComponentLayoutOptions.init()(v224);
            uint64_t v207 = (*(uint64_t (**)(char *, void *))(*v221 + 520))(v208, v195);
            if ((v207 & 1) != 0)
            {
              v226 = v265;
              static ComponentLayoutOptions.separatorHidden.getter(v225);
              v227 = *(void (**)(char *, char *, uint64_t))(v197 + 16);
              v227(v198, v200, v196);
              uint64_t v228 = sub_100004288( (unint64_t *)&unk_1002EEFE0,  (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions,  (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
              v229 = v226;
              v230 = v266;
              dispatch thunk of SetAlgebra.intersection(_:)(v226, v196, v228);
              uint64_t v231 = sub_100004288( (unint64_t *)&unk_1002EE3C0,  (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions,  (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
              char v232 = dispatch thunk of static Equatable.== infix(_:_:)(v230, v226, v196, v231);
              v233 = &v267[*(int *)(v280 + 48)];
              BOOL v234 = (v232 & 1) == 0;
              BOOL *v267 = v234;
              if ((v232 & 1) != 0)
              {
                v202 = *(void (**)(BOOL *, char *, uint64_t))(v197 + 32);
                v202(v233, v230, v196);
              }

              else
              {
                (*(void (**)(char *, uint64_t))(v197 + 8))(v230, v196);
                v227((char *)v233, v226, v196);
                v227(v198, v226, v196);
                dispatch thunk of SetAlgebra.formUnion(_:)(v198, v196, v228);
                v202 = *(void (**)(BOOL *, char *, uint64_t))(v197 + 32);
              }

              uint64_t v203 = *(int *)(v280 + 48);
              v204 = v270;
              v205 = &v270[v203];
              BOOL *v270 = v234;
              v202(&v204[v203], (char *)v233, v196);
              v206 = *(void (**)(BOOL *, uint64_t))(v197 + 8);
              v206(v205, v196);
              uint64_t v207 = ((uint64_t (*)(char *, uint64_t))v206)(v229, v196);
              v195 = v287;
              v200 = v269;
              v208 = v283;
            }

            __n128 v209 = IndexPath.section.getter(v207);
            uint64_t v199 = v293;
            if (!v210)
            {
              v235 = v259;
              static ComponentLayoutOptions.isFirstSection.getter(v209);
              v236 = v198;
              v237 = *(void (**)(char *, char *, uint64_t))(v197 + 16);
              v237(v198, v200, v196);
              uint64_t v238 = sub_100004288( (unint64_t *)&unk_1002EEFE0,  (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions,  (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
              v239 = v260;
              dispatch thunk of SetAlgebra.intersection(_:)(v235, v196, v238);
              uint64_t v240 = sub_100004288( (unint64_t *)&unk_1002EE3C0,  (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions,  (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
              char v241 = dispatch thunk of static Equatable.== infix(_:_:)(v239, v235, v196, v240);
              v242 = &v261[*(int *)(v280 + 48)];
              v243 = v239;
              BOOL v244 = (v241 & 1) == 0;
              BOOL *v261 = v244;
              if ((v241 & 1) != 0)
              {
                v245 = *(void (**)(BOOL *, char *, uint64_t))(v197 + 32);
                v245(v242, v243, v196);
              }

              else
              {
                (*(void (**)(char *, uint64_t))(v197 + 8))(v243, v196);
                v237((char *)v242, v235, v196);
                v237(v236, v235, v196);
                dispatch thunk of SetAlgebra.formUnion(_:)(v236, v196, v238);
                v245 = *(void (**)(BOOL *, char *, uint64_t))(v197 + 32);
              }

              v198 = v236;
              uint64_t v246 = *(int *)(v280 + 48);
              v247 = v270;
              v248 = &v270[v246];
              BOOL *v270 = v244;
              v245(&v247[v246], (char *)v242, v196);
              v249 = *(void (**)(BOOL *, uint64_t))(v197 + 8);
              v249(v248, v196);
              v249((BOOL *)v235, v196);
              v195 = v287;
              uint64_t v199 = v293;
              v208 = v283;
            }

            v211 = v285;
            double v212 = (*((double (**)(uint64_t *, uint64_t, char *, uint64_t, char *, void *, double, double))v263
                    + 10))( &v296,  v284,  v285,  v286,  v200,  v195,  v154,  v156);
            double v214 = v213;
            if ((static IndexPath.== infix(_:_:)(v208, v291) & 1) != 0) {
              double v109 = v212;
            }
            if (v194 <= v214) {
              double v194 = v214;
            }
            (*(void (**)(char *, uint64_t))(v197 + 8))(v200, v196);
            (*(void (**)(char *, uint64_t))(v272 + 8))(v211, v273);
            _s8AppStore17PillOverlayLayoutVwxx_0(&v296);
            v215 = v208;
            uint64_t v201 = v278;
            uint64_t v171 = v276;
            (*(void (**)(char *, uint64_t))(v278 + 8))(v215, v276);
            v193 = &v258[v281];
            uint64_t v192 = v282 - 1;
          }

          while ((void)v282 != 1LL);
          uint64_t v172 = v292;
          uint64_t v163 = (uint64_t)v289;
          v250 = (void (*)(uint64_t, uint64_t, __n128))v252;
          v191 = v253;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v279)(v275, 1LL, 1LL, v171);
        }

        else
        {
          double v109 = 0.0;
          v250 = (void (*)(uint64_t, uint64_t, __n128))v252;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v278 + 56))(v275, 1LL, 1LL, v171);
        }

LABEL_108:
        __n128 v251 = swift_bridgeObjectRelease(v191);
        v250(v163, v172, v251);
        return v109;
      }

      uint64_t v161 = v80;
      uint64_t v162 = v292;
    }

    else
    {
      uint64_t v161 = v80;
      uint64_t v162 = v81;
    }

    v145((char *)v161, v162);
    return 0.0;
  }

id sub_1000DFCF0(char *a1, void (*a2)(char *, char *, uint64_t), uint64_t a3, uint64_t a4, void *a5)
{
  id v172 = a5;
  uint64_t v167 = a4;
  uint64_t v168 = a3;
  uint64_t v162 = a2;
  uint64_t v7 = *v5;
  uint64_t v152 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v150 = (char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v164 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v163 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v148 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v147 = (char *)&v146 - v11;
  __chkstk_darwin(v12);
  double v176 = (char *)&v146 - v13;
  uint64_t v157 = type metadata accessor for IndexPath(0LL);
  uint64_t v156 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v146 = v14;
  double v155 = (char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000038E8((uint64_t *)&unk_1002EE370);
  __chkstk_darwin(v15);
  uint64_t v149 = (char *)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v154 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v166 = (char *)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = (void *)type metadata accessor for ShelfBackground(0LL);
  uint64_t v170 = (void (**)(id *, void *))*(v18 - 1);
  uint64_t v171 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (id *)((char *)&v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v21 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v160 = (char *)&v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v161 = (char *)&v146 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v146 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v146 - v30;
  uint64_t v175 = v5;
  uint64_t v32 = v5[2];
  IndexPath.section.getter(v33);
  uint64_t v34 = *(void *)(v7 + 80);
  uint64_t v165 = v7;
  uint64_t v35 = *(void *)(v7 + 96);
  uint64_t v37 = dispatch thunk of ShelfPresenter.contentType(for:)(v36, v34, v35);
  IndexPath.section.getter(v37);
  uint64_t v177 = v34;
  *(void *)&__int128 v178 = v32;
  uint64_t v38 = (void *)v21;
  uint64_t v173 = v35;
  char v40 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v39, v34, v35);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v41(v28, v31, v21);
  uint64_t v174 = v22;
  id v159 = *(uint64_t (**)(char *, uint64_t))(v22 + 88);
  int v42 = v159(v28, v21);
  uint64_t v169 = v31;
  if (v42 == enum case for Shelf.ContentType.smallLockup(_:) || v42 == enum case for Shelf.ContentType.mediumLockup(_:)) {
    goto LABEL_29;
  }
  if (v42 == enum case for Shelf.ContentType.largeLockup(_:)) {
    goto LABEL_30;
  }
  if (v42 == enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
    || v42 == enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
    || v42 == enum case for Shelf.ContentType.action(_:)
    || v42 == enum case for Shelf.ContentType.editorialCard(_:)
    || v42 == enum case for Shelf.ContentType.videoCard(_:))
  {
    goto LABEL_29;
  }

  if (v42 == enum case for Shelf.ContentType.brick(_:) || v42 == enum case for Shelf.ContentType.categoryBrick(_:)) {
    goto LABEL_30;
  }
  if (v42 == enum case for Shelf.ContentType.reviews(_:)
    || v42 == enum case for Shelf.ContentType.appTrailerLockup(_:)
    || v42 == enum case for Shelf.ContentType.framedVideo(_:)
    || v42 == enum case for Shelf.ContentType.screenshotsLockup(_:)
    || v42 == enum case for Shelf.ContentType.smallStoryCard(_:)
    || v42 == enum case for Shelf.ContentType.mediumStoryCard(_:))
  {
    goto LABEL_29;
  }

  if (v42 == enum case for Shelf.ContentType.largeStoryCard(_:)) {
    goto LABEL_30;
  }
  if (v42 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
    || v42 == enum case for Shelf.ContentType.upsellBreakout(_:)
    || v42 == enum case for Shelf.ContentType.smallBreakout(_:)
    || v42 == enum case for Shelf.ContentType.mixedMediaLockup(_:)
    || v42 == enum case for Shelf.ContentType.arcadeFooter(_:)
    || v42 == enum case for Shelf.ContentType.textCard(_:)
    || v42 == enum case for Shelf.ContentType.smallGameCenterPlayer(_:)
    || v42 == enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
    || v42 == enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:)
    || v42 == enum case for Shelf.ContentType.posterLockup(_:))
  {
LABEL_29:
    if ((v40 & 1) == 0) {
      goto LABEL_31;
    }
LABEL_30:
    unint64_t v180 = 0LL;
    unint64_t v181 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(32LL);
    __n128 v44 = swift_bridgeObjectRelease(v181);
    unint64_t v180 = 0xD00000000000001DLL;
    unint64_t v181 = 0x800000010024CDA0LL;
    v45._countAndFlagsBits = Shelf.ContentType.string.getter(v44);
    object = v45._object;
    String.append(_:)(v45);
    swift_bridgeObjectRelease(object);
    v47._countAndFlagsBits = 41LL;
    v47._object = (void *)0xE100000000000000LL;
    String.append(_:)(v47);
    unint64_t v48 = v181;
    goto LABEL_32;
  }

  (*(void (**)(char *, uint64_t))(v174 + 8))(v28, v21);
LABEL_31:
  Shelf.ContentType.string.getter(v43);
  unint64_t v48 = v49;
LABEL_32:
  NSString v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  uint64_t v51 = (void *)IndexPath._bridgeToObjectiveC()();
  id v52 = [v172 dequeueReusableCellWithReuseIdentifier:v50 forIndexPath:v51];

  IndexPath.section.getter(v53);
  uint64_t v54 = v177;
  uint64_t v55 = v173;
  dispatch thunk of ShelfPresenter.background(for:)(v56, v177, v173);
  uint64_t v58 = v170;
  uint64_t v57 = v171;
  int v59 = ((uint64_t (*)(id *, void *))v170[11])(v20, v171);
  uint64_t v60 = v176;
  id v158 = (void (*)(char *, char *, void *))v41;
  if (v59 == enum case for ShelfBackground.color(_:))
  {
    v58[12](v20, v57);
    id v66 = *v20;
    uint64_t v61 = (char *)v20 + *(int *)(sub_1000038E8(&qword_1002E5BD8) + 48);
    uint64_t v63 = type metadata accessor for ShelfBackgroundStyle(0LL, v62);
    (*(void (**)(char *, uint64_t))(*(void *)(v63 - 8) + 8LL))(v61, v63);
    [v52 setBackgroundColor:v66];
  }

  else
  {
    v58[1](v20, v57);
    uint64_t v64 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
    id v65 = v52;
    id v66 = [v64 clearColor];
    [v65 setBackgroundColor:v66];
  }

  uint64_t ObjectType = swift_getObjectType(v52);
  uint64_t v68 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerView);
  if (v68) {
    uint64_t v69 = (void *)v68;
  }
  else {
    uint64_t v69 = 0LL;
  }
  if (v68) {
    id v70 = v52;
  }
  else {
    id v70 = 0LL;
  }
  if (v70)
  {
    uint64_t v171 = v69;
    id v172 = v52;
    uint64_t v170 = (void (**)(id *, void *))v52;
    IndexPath.section.getter(v170);
    uint64_t v71 = v178;
    uint64_t v73 = dispatch thunk of ShelfPresenter.shelf(for:)(v72, v54, v55);
    uint64_t v74 = swift_unknownObjectRetain(v71);
    double v176 = a1;
    IndexPath.section.getter(v74);
    uint64_t v76 = v75;
    uint64_t v77 = v161;
    Shelf.contentType.getter(v75);
    uint64_t v78 = v160;
    v158(v160, v77, v38);
    int v79 = v159(v78, (uint64_t)v38);
    BOOL v80 = v79 == enum case for Shelf.ContentType.informationContainer(_:)
       || v79 == enum case for Shelf.ContentType.reviewsContainer(_:);
    char v81 = v80;
    uint64_t v82 = v174;
    if (!v80) {
      (*(void (**)(char *, void *))(v174 + 8))(v78, v38);
    }
    uint64_t v83 = type metadata accessor for ShelfComponentContainerDelegate(0LL, v54, *(void *)(v165 + 88), v55);
    uint64_t v84 = *(void (**)(char *, void *))(v82 + 8);
    v84(v77, v38);
    uint64_t v85 = v175;
    uint64_t v86 = v175[3];
    uint64_t v87 = swift_allocObject(v83, 72LL, 7LL);
    *(void *)(v87 + swift_unknownObjectWeakDestroy(v0 + 16) = v178;
    *(void *)(v87 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v76;
    *(_BYTE *)(v87 + 32) = v81;
    *(void *)(v87 + 40) = v86;
    __int128 v178 = *((_OWORD *)v85 + 2);
    *(_OWORD *)(v87 + 48) = v178;
    *(void *)(v87 + 64) = 0LL;
    uint64_t v88 = swift_getObjectType(v70);
    swift_retain(v86);
    uint64_t v89 = swift_unknownObjectRetain(v178);
    IndexPath.section.getter(v89);
    uint64_t v91 = v90;
    uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C8F0, v83);
    int v93 = v171;
    BOOL v94 = (void (*)(uint64_t, uint64_t, void (*)(void, void, void), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, void *))v171[4];
    __n128 v95 = swift_retain(v87);
    v94(v73, v91, (void (*)(void, void, void))v162, v167, v87, WitnessTable, v168, v88, v95, v93);

    swift_release(v73);
    swift_release_n(v87, 2LL);
    v84(v169, v38);
    return v172;
  }

  uint64_t v96 = v60;
  id result = (id)swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyComponentView);
  id v172 = result;
  if (result)
  {
    uint64_t v171 = v52;
    dispatch thunk of ShelfPresenter.model(at:)(&v180, a1, v54, v55);
    uint64_t v98 = v155;
    uint64_t v162 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
    v162(v155, a1, v157);
    uint64_t v99 = v149;
    StatePath<A>.init(_:)(v98);
    uint64_t v100 = v175;
    uint64_t v179 = v175[3];
    swift_retain(v179);
    uint64_t v101 = sub_1000038E8((uint64_t *)&unk_1002F08B0);
    uint64_t v102 = sub_10005E7D4( (unint64_t *)&qword_1002EE390,  (uint64_t *)&unk_1002F08B0,  (uint64_t)&protocol conformance descriptor for TransientStateStore<A>);
    uint64_t v103 = WritableStateLens.init<A>(contentsOf:in:)(v99, &v179, &type metadata for Never, v101, v102);
    ComponentLayoutOptions.init()(v103);
    uint64_t v104 = v168;
    uint64_t v105 = (*(uint64_t (**)(char *, uint64_t))(*v100 + 520LL))(a1, v168);
    if ((v105 & 1) != 0)
    {
      uint64_t v107 = (uint64_t)v148;
      static ComponentLayoutOptions.separatorHidden.getter(v106);
      id v108 = v52;
      double v109 = v38;
      uint64_t v110 = v147;
      sub_1001AFDFC(v147, v107);
      uint64_t v111 = *(void (**)(uint64_t, uint64_t))(v163 + 8);
      uint64_t v112 = v164;
      v111(v107, v164);
      uint64_t v113 = v110;
      uint64_t v38 = v109;
      id v52 = v108;
      uint64_t v96 = v60;
      uint64_t v105 = ((uint64_t (*)(char *, uint64_t))v111)(v113, v112);
    }

    uint64_t v170 = (void (**)(id *, void *))v38;
    __n128 v114 = IndexPath.section.getter(v105);
    if (!v115)
    {
      uint64_t v116 = (uint64_t)v148;
      static ComponentLayoutOptions.isFirstSection.getter(v114);
      uint64_t v117 = v147;
      sub_1001AFDFC(v147, v116);
      uint64_t v118 = *(void (**)(uint64_t, uint64_t))(v163 + 8);
      uint64_t v119 = v164;
      v118(v116, v164);
      v118((uint64_t)v117, v119);
    }

    uint64_t v120 = v171;
    uint64_t v121 = swift_getObjectType(v171);
    IndexPath.section.getter(v121);
    uint64_t v123 = dispatch thunk of ShelfPresenter.shelf(for:)(v122, v177, v55);
    uint64_t v124 = v150;
    Shelf.presentationHints.getter(v125);
    __n128 v126 = swift_release(v123);
    char v127 = v166;
    uint64_t v128 = v104;
    CGFloat v129 = v120;
    (*((void (**)(unint64_t *, char *, uint64_t, char *, char *, uint64_t, uint64_t, __n128))v172 + 11))( &v180,  v166,  v167,  v96,  v124,  v128,  v121,  v126);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v124, v152);
    uint64_t v130 = swift_getObjectType(v120);
    uint64_t v131 = swift_conformsToProtocol2(v130, &protocol descriptor for NestedShelfCell);
    if (v131) {
      uint64_t v132 = v131;
    }
    else {
      uint64_t v132 = 0LL;
    }
    if (v131) {
      id v133 = v52;
    }
    else {
      id v133 = 0LL;
    }
    if (v133)
    {
      *(void *)&__int128 v178 = swift_getObjectType(v133);
      uint64_t v134 = swift_allocObject(&unk_10028B7C0, 24LL, 7LL);
      swift_weakInit(v134 + 16, v175);
      uint64_t v135 = v55;
      double v136 = v155;
      uint64_t v137 = v157;
      v162(v155, a1, v157);
      uint64_t v138 = v156;
      uint64_t v139 = *(unsigned __int8 *)(v156 + 80);
      uint64_t v140 = (v139 + 40) & ~v139;
      id v172 = v52;
      unint64_t v141 = (v146 + v140 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v142 = (char *)swift_allocObject(&unk_10028B7E8, v141 + 8, v139 | 7);
      *((void *)v142 + 2) = v177;
      *((void *)v142 + 3) = *(void *)(v165 + 88);
      *((void *)v142 + 4) = v135;
      (*(void (**)(char *, char *, uint64_t))(v138 + 32))(&v142[v140], v136, v137);
      *(void *)&v142[v141] = v134;
      uint64_t v143 = *(void (**)(uint64_t (*)(uint64_t), char *, void, uint64_t, __n128))(v132 + 16);
      uint64_t v144 = v171;
      __n128 v145 = swift_retain(v134);
      v143(sub_1000E6A24, v142, v178, v132, v145);
      id v52 = v172;

      (*(void (**)(char *, uint64_t))(v163 + 8))(v176, v164);
      (*(void (**)(char *, uint64_t))(v153 + 8))(v166, v154);
      _s8AppStore17PillOverlayLayoutVwxx_0(&v180);
      (*(void (**)(char *, id))(v174 + 8))(v169, v170);
      swift_release(v134);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v163 + 8))(v96, v164);
      (*(void (**)(char *, uint64_t))(v153 + 8))(v127, v154);
      _s8AppStore17PillOverlayLayoutVwxx_0(&v180);
      (*(void (**)(char *, id))(v174 + 8))(v169, v170);
    }

    return v52;
  }

  __break(1u);
  return result;
}

void sub_1000E0AB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *(void *)v5;
  uint64_t v13 = type metadata accessor for ImpressionMetrics.ID(0LL);
  uint64_t v118 = *(void *)(v13 - 8);
  uint64_t v119 = v13;
  __chkstk_darwin(v13);
  uint64_t v117 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for IndexPath(0LL);
  uint64_t v126 = *(void *)(v15 - 8);
  uint64_t v127 = v15;
  __chkstk_darwin(v15);
  __n128 v125 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000038E8((uint64_t *)&unk_1002EEFD0);
  __chkstk_darwin(v17);
  uint64_t v120 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v121 = (char *)&v115 - v20;
  __n128 v22 = __chkstk_darwin(v21);
  uint64_t v124 = (char *)&v115 - v23;
  uint64_t v24 = type metadata accessor for ImpressionMetrics(0LL, v22);
  uint64_t v132 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v27);
  uint64_t v122 = (char *)&v115 - v28;
  __chkstk_darwin(v29);
  uint64_t v123 = (char *)&v115 - v30;
  uint64_t v31 = *(void *)(v12 + 80);
  uint64_t v32 = *(void *)(v12 + 96);
  uint64_t v128 = *((void *)v5 + 2);
  uint64_t v129 = v31;
  uint64_t v130 = v32;
  LOBYTE(v12) = dispatch thunk of ShelfPresenter.doesModelExist(for:)(a2, v31, v32);
  uint64_t v131 = a2;
  NSIndexPath v136 = IndexPath._bridgeToObjectiveC()();
  Class isa = v136.super.isa;
  id v34 = objc_msgSend(a5, "cellForItemAtIndexPath:", v136.super.isa, v136._reserved);

  uint64_t v134 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E49B0, &OBJC_CLASS___UICollectionViewCell_ptr);
  v133[0] = a1;
  id v35 = a1;
  tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v133, a3, a4, v12 & 1);
  _s8AppStore17PillOverlayLayoutVwxx_0(v133);
  if ((v12 & 1) != 0)
  {
    id v116 = v34;
    uint64_t v115 = v26;
    uint64_t ObjectType = swift_getObjectType(v35);
    uint64_t v37 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerView);
    if (v37) {
      uint64_t v38 = v37;
    }
    else {
      uint64_t v38 = 0LL;
    }
    if (v37) {
      id v39 = v35;
    }
    else {
      id v39 = 0LL;
    }
    if (v39)
    {
      uint64_t v40 = swift_getObjectType(v39);
      uint64_t v41 = v6;
      uint64_t v42 = v24;
      __n128 v43 = *(void (**)(uint64_t, uint64_t))(v38 + 48);
      id v44 = v35;
      v43(v40, v38);
      uint64_t v24 = v42;
      uint64_t v6 = v41;
    }

    uint64_t v45 = swift_getObjectType(v35);
    uint64_t v46 = swift_conformsToProtocol2(v45, &protocol descriptor for PlayableView);
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0LL;
    }
    if (v46) {
      id v48 = v35;
    }
    else {
      id v48 = 0LL;
    }
    if (v48)
    {
      uint64_t v49 = type metadata accessor for PlaybackCoordinator(0LL);
      id v50 = v35;
      BaseObjectGraph.optional<A>(_:)(v133, v49, v49);
      uint64_t v51 = (void *)v133[0];
      if (v133[0])
      {
        id v52 = v50;
        id v50 = v51;
        dispatch thunk of PlaybackCoordinator.unregister(playableView:)(v48, v47);
      }
    }

    uint64_t v53 = swift_getObjectType(v35);
    uint64_t v54 = swift_conformsToProtocol2(v53, &protocol descriptor for AnyAvatarShowcaseDisplaying);
    if (v54) {
      uint64_t v55 = v54;
    }
    else {
      uint64_t v55 = 0LL;
    }
    if (v54) {
      id v56 = v35;
    }
    else {
      id v56 = 0LL;
    }
    if (v56)
    {
      uint64_t v57 = swift_getObjectType(v56);
      id v58 = v35;
      dispatch thunk of AnyAvatarShowcaseDisplaying.unapply()(v57, v55);
    }

    if (!v116)
    {
      uint64_t v59 = v131;
      IndexPath.section.getter(v54);
      uint64_t v61 = sub_1000E32E0(v60);
      if ((v61 & 1) != 0)
      {
        IndexPath.section.getter(v61);
        uint64_t v63 = dispatch thunk of ShelfPresenter.shelf(for:)(v62, v129, v130);
        uint64_t v64 = (uint64_t)v124;
        Shelf.impressionMetrics.getter(v65);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v64, 1LL, v24) == 1)
        {
          swift_release(v63);
          sub_1000077E0(v64, (uint64_t *)&unk_1002EEFD0);
        }

        else
        {
          uint64_t v87 = v123;
          (*(void (**)(char *, uint64_t, uint64_t))(v132 + 32))(v123, v64, v24);
          uint64_t v88 = *((void *)v6 + 12);
          if (v88)
          {
            swift_retain(*((void *)v6 + 12));
            ImpressionsCalculator.removeElement(_:)(v87);
            swift_release(v88);
            __n128 v89 = swift_release(v63);
            (*(void (**)(char *, uint64_t, __n128))(v132 + 8))(v87, v24, v89);
          }

          else
          {
            (*(void (**)(char *, uint64_t))(v132 + 8))(v87, v24);
            swift_release(v63);
          }
        }
      }

      else
      {
        uint64_t v124 = v6;
        uint64_t v66 = v129;
        uint64_t v67 = v130;
        uint64_t v68 = dispatch thunk of ShelfPresenter.sectionCount.getter(v129, v130);
        __n128 v69 = IndexPath.section.getter(v68);
        uint64_t v71 = v70;
        uint64_t v72 = v125;
        uint64_t v73 = v126;
        uint64_t v74 = v59;
        uint64_t v75 = v127;
        uint64_t v76 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v126 + 16))(v125, v74, v127, v69);
        if (v71 >= v68)
        {
          (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v75);
        }

        else
        {
          uint64_t v77 = IndexPath.item.getter(v76);
          IndexPath.section.getter(v77);
          uint64_t v79 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v78, v66, v67);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v75);
          if (v77 < v79)
          {
            uint64_t v80 = v130;
            uint64_t v81 = v129;
            dispatch thunk of ShelfPresenter.model(at:)(v133, v131, v129, v130);
            uint64_t v82 = v134;
            uint64_t v83 = v135;
            sub_1000112B0(v133, v134);
            uint64_t v84 = (uint64_t)v121;
            dispatch thunk of ViewModel.impressionMetrics.getter(v82, *(void *)(v83 + 8));
            uint64_t v85 = v24;
            uint64_t v86 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48);
            if (v86(v84, 1LL, v85) == 1)
            {
              sub_1000077E0(v84, (uint64_t *)&unk_1002EEFD0);
            }

            else
            {
              uint64_t v90 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v132 + 32))(v122, v84, v85);
              IndexPath.section.getter(v90);
              uint64_t v92 = dispatch thunk of ShelfPresenter.shelf(for:)(v91, v81, v80);
              uint64_t v93 = (uint64_t)v120;
              Shelf.impressionMetrics.getter(v94);
              if (v86(v93, 1LL, v85) == 1)
              {
                uint64_t v96 = v85;
                sub_1000077E0(v93, (uint64_t *)&unk_1002EEFD0);
                uint64_t v97 = 0LL;
                uint64_t v98 = 0LL;
              }

              else
              {
                uint64_t v99 = v93;
                uint64_t v100 = v117;
                ImpressionMetrics.id.getter(v95);
                uint64_t v96 = v85;
                uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v132 + 8))(v99, v85);
                uint64_t v97 = ImpressionMetrics.ID.element.getter(v101);
                uint64_t v98 = v102;
                (*(void (**)(char *, uint64_t))(v118 + 8))(v100, v119);
              }

              uint64_t v103 = v115;
              ImpressionMetrics.withParentId(_:)(v97, v98);
              swift_bridgeObjectRelease(v98);
              uint64_t v104 = *((void *)v124 + 12);
              if (v104)
              {
                swift_retain(*((void *)v124 + 12));
                ImpressionsCalculator.removeElement(_:)(v103);
                swift_release(v104);
              }

              uint64_t v105 = swift_getObjectType(v35);
              uint64_t v106 = swift_conformsToProtocol2(v105, &protocol descriptor for NestedModelImpressionsRecording);
              if (v106) {
                uint64_t v107 = v106;
              }
              else {
                uint64_t v107 = 0LL;
              }
              if (v106) {
                id v108 = v35;
              }
              else {
                id v108 = 0LL;
              }
              if (v108)
              {
                id v109 = v35;
                uint64_t v110 = sub_1000DB5A0(v92, v109);
                if (v110)
                {
                  uint64_t v111 = v110;
                  uint64_t v112 = swift_getObjectType(v108);
                  dispatch thunk of NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)( v111,  v112,  v107);

                  swift_release(v111);
                }

                else
                {
                }
              }

              __n128 v113 = swift_release(v92);
              __n128 v114 = *(void (**)(char *, uint64_t, __n128))(v132 + 8);
              v114(v103, v96, v113);
              ((void (*)(char *, uint64_t))v114)(v122, v96);
            }

            _s8AppStore17PillOverlayLayoutVwxx_0(v133);
          }
        }
      }
    }
  }

void sub_1000E1238(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v42 = a3;
  uint64_t v9 = *v5;
  uint64_t v10 = type metadata accessor for IndexPath(0LL);
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v46 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000038E8((uint64_t *)&unk_1002EE370);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v43 = *(void *)(v16 - 8);
  uint64_t v44 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v47 = a1;
  NSIndexPath v50 = IndexPath._bridgeToObjectiveC()();
  Class isa = v50.super.isa;
  Class v20 = (Class)objc_msgSend(a4, "cellForItemAtIndexPath:", v50.super.isa, v50._reserved);

  if (v20)
  {
    uint64_t v41 = a4;
    uint64_t ObjectType = swift_getObjectType(v20);
    uint64_t v22 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyComponentView);
    if (v22) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0LL;
    }
    if (v22) {
      Class v24 = v20;
    }
    else {
      Class v24 = 0LL;
    }
    if (v24)
    {
      uint64_t v25 = *(void *)(v9 + 80);
      uint64_t v38 = *(void *)(v9 + 96);
      uint64_t v39 = v25;
      dispatch thunk of ShelfPresenter.model(at:)(v49, a2, v25, v38);
      uint64_t v40 = *(void (**)(char *, id, uint64_t))(v45 + 16);
      v40(v12, v47, v46);
      StatePath<A>.init(_:)(v12);
      uint64_t v48 = v5[3];
      swift_retain(v48);
      uint64_t v26 = sub_1000038E8((uint64_t *)&unk_1002F08B0);
      uint64_t v27 = sub_10005E7D4( (unint64_t *)&qword_1002EE390,  (uint64_t *)&unk_1002F08B0,  (uint64_t)&protocol conformance descriptor for TransientStateStore<A>);
      WritableStateLens.init<A>(contentsOf:in:)(v15, &v48, &type metadata for Never, v26, v27);
      uint64_t v28 = swift_getObjectType(v24);
      char v29 = (*(uint64_t (**)(void *, char *, uint64_t, uint64_t, uint64_t))(v23 + 96))(v49, v18, v42, v28, v23);
      char v30 = v29;
      if ((v29 & 1) != 0)
      {
        dispatch thunk of ShelfPresenter.didSelectItem(at:)(a2, v39, v38);
        uint64_t v31 = v41;
        if ((v30 & 2) == 0)
        {
LABEL_11:
          if ((v30 & 4) == 0)
          {
LABEL_13:

            (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v44);
            _s8AppStore17PillOverlayLayoutVwxx_0(v49);
            return;
          }

void sub_1000E15C0(void *a1, void *a2, id a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  id v9 = [a3 visibleSupplementaryViewsOfKind:UICollectionElementKindSectionHeader];
  uint64_t v10 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002EE420, &OBJC_CLASS___UICollectionReusableView_ptr);
  uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  id v12 = [a1 nextFocusedView];
  if (!v12) {
    goto LABEL_5;
  }
  uint64_t v13 = v12;
  if (![v12 isDescendantOfView:a3]
    || (sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr),
        (static NSObject.== infix(_:_:)(v13, a3) & 1) != 0))
  {

LABEL_5:
    *(_OWORD *)(v4 + 9) = 0u;
    *(_OWORD *)(v4 + 7) = 0u;
    *((_BYTE *)v4 + 88) = 1;
    uint64_t v14 = (void *)v4[6];
    uint64_t v15 = (void *)v14[2];
    v14[2] = 0LL;

    uint64_t v16 = v14[3];
    uint64_t v17 = v14[4];
    v14[3] = 0LL;
    _OWORD v14[4] = 0LL;
    sub_10000A450(v16, v17);
    uint64_t v13 = 0LL;
    goto LABEL_6;
  }

  id v24 = v13;
  sub_1000E3EA0(v13, a3, (uint64_t)v41);

  sub_100041A94((uint64_t)v41, (uint64_t)(v4 + 7), &qword_1002E3798);
  uint64_t v25 = (void *)swift_allocObject(&unk_10028B720, 48LL, 7LL);
  __int128 v25[2] = v11;
  void v25[3] = v4;
  v25[4] = a3;
  v25[5] = v8;
  uint64_t v39 = sub_1000E6920;
  uint64_t v40 = v25;
  aBlocuint64_t k = _NSConcreteStackBlock;
  uint64_t v36 = 1107296256LL;
  uint64_t v37 = sub_1000C962C;
  uint64_t v38 = &unk_10028B738;
  uint64_t v26 = _Block_copy(&aBlock);
  uint64_t v27 = v40;
  swift_bridgeObjectRetain(v11);
  swift_retain(v4);
  id v28 = a3;
  objc_msgSend(a2, "addCoordinatedFocusingAnimations:completion:", v26, 0, swift_release(v27).n128_f64[0]);
  _Block_release(v26);
  char v29 = (void *)v4[6];
  char v30 = (void *)v29[2];
  objc_super v29[2] = v13;

  uint64_t v31 = swift_allocObject(&unk_10028B770, 24LL, 7LL);
  swift_unknownObjectWeakInit(v31 + 16, v28);
  uint64_t v32 = swift_allocObject(&unk_10028B798, 64LL, 7LL);
  *(_OWORD *)(v32 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(v8 + 80);
  *(void *)(v32 + 32) = *(void *)(v8 + 96);
  *(void *)(v32 + 40) = v31;
  *(void *)(v32 + 48) = v11;
  *(void *)(v32 + 56) = v8;
  uint64_t v33 = v29[3];
  uint64_t v34 = v29[4];
  v29[3] = sub_1000E697C;
  _BYTE v29[4] = v32;
  swift_bridgeObjectRetain(v11);
  sub_10000A450(v33, v34);
LABEL_6:
  id v18 = [a1 previouslyFocusedView];

  if (v18)
  {
    uint64_t v19 = swift_allocObject(&unk_10028B6D0, 72LL, 7LL);
    *(_OWORD *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(v8 + 80);
    *(void *)(v19 + 32) = *(void *)(v8 + 96);
    *(void *)(v19 + 40) = v13;
    *(void *)(v19 + 48) = a3;
    *(void *)(v19 + 56) = v11;
    *(void *)(v19 + 64) = v8;
    uint64_t v39 = sub_1000E68D8;
    uint64_t v40 = (void *)v19;
    aBlocuint64_t k = _NSConcreteStackBlock;
    uint64_t v36 = 1107296256LL;
    uint64_t v37 = sub_1000C962C;
    uint64_t v38 = &unk_10028B6E8;
    Class v20 = _Block_copy(&aBlock);
    uint64_t v21 = v40;
    id v22 = v13;
    id v23 = a3;
    objc_msgSend(a2, "addCoordinatedUnfocusingAnimations:completion:", v20, 0, swift_release(v21).n128_f64[0]);

    _Block_release(v20);
  }

  else
  {
    swift_bridgeObjectRelease(v11);
  }

uint64_t sub_1000E193C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  char v7 = 0;
  if (v6 != enum case for Shelf.ContentType.artwork(_:)
    && v6 != enum case for Shelf.ContentType.paragraph(_:)
    && v6 != enum case for Shelf.ContentType.footnote(_:)
    && v6 != enum case for Shelf.ContentType.titledParagraph(_:)
    && v6 != enum case for Shelf.ContentType.reviewsContainer(_:)
    && v6 != enum case for Shelf.ContentType.editorialLink(_:)
    && v6 != enum case for Shelf.ContentType.quote(_:)
    && v6 != enum case for Shelf.ContentType.framedArtwork(_:)
    && v6 != enum case for Shelf.ContentType.screenshots(_:)
    && v6 != enum case for Shelf.ContentType.appShowcase(_:)
    && v6 != enum case for Shelf.ContentType.inAppPurchaseShowcase(_:)
    && v6 != enum case for Shelf.ContentType.framedVideo(_:)
    && v6 != enum case for Shelf.ContentType.productDescription(_:)
    && v6 != enum case for Shelf.ContentType.banner(_:)
    && v6 != enum case for Shelf.ContentType.roundedButton(_:)
    && v6 != enum case for Shelf.ContentType.titledButtonStack(_:)
    && v6 != enum case for Shelf.ContentType.largeStoryCard(_:)
    && v6 != enum case for Shelf.ContentType.personalizationFeedbackContainer(_:)
    && v6 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
    && v6 != enum case for Shelf.ContentType.upsellBreakout(_:)
    && v6 != enum case for Shelf.ContentType.smallBreakout(_:)
    && v6 != enum case for Shelf.ContentType.arcadeFooter(_:)
    && v6 != enum case for Shelf.ContentType.gameCenterReengagement(_:)
    && v6 != enum case for Shelf.ContentType.privacyHeader(_:)
    && v6 != enum case for Shelf.ContentType.privacyFooter(_:)
    && v6 != enum case for Shelf.ContentType.privacyCategory(_:)
    && v6 != enum case for Shelf.ContentType.privacyDefinition(_:)
    && v6 != enum case for Shelf.ContentType.heroCarousel(_:))
  {
    uint64_t v8 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((UITraitCollection.isSizeClassRegular.getter(v8) & 1) != 0) {
      char v7 = UITraitCollection.prefersAccessibilityLayouts.getter() ^ 1;
    }
    else {
      char v7 = 0;
    }
  }

  return v7 & 1;
}

uint64_t sub_1000E1C2C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = 0LL;
  if ((sub_1000E32E0(a1) & 1) == 0)
  {
    uint64_t v12 = *(void *)(v6 + 80);
    uint64_t v13 = *(void *)(v6 + 96);
    dispatch thunk of ShelfPresenter.contentType(for:)(a1, v12, v13);
    if (((*(uint64_t (**)(char *, void *))(*v3 + 504LL))(v10, a2) & 1) != 0)
    {
      if ((dispatch thunk of ShelfPresenter.doesShelfExist(for:)(a1, v12, v13) & 1) != 0) {
        uint64_t v14 = (*(uint64_t (**)(uint64_t))(*v3 + 336LL))(a1);
      }
      else {
        uint64_t v14 = 0LL;
      }
      uint64_t v11 = sub_1001851CC(v14, (uint64_t)[a2 horizontalSizeClass]);
    }

    else
    {
      uint64_t v11 = 1LL;
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  return v11;
}

uint64_t sub_1000E1D78(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = swift_allocObject(v7, 72LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(result + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = a2;
  *(_BYTE *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = a5;
  *(void *)(result + 56) = a6;
  *(void *)(result + 64) = a7;
  return result;
}

uint64_t sub_1000E1DE4(uint64_t a1)
{
  return IndexPath.init(item:section:)(a1, *(void *)(v1 + 24));
}

uint64_t sub_1000E1DEC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  IndexPath.init(index:)(*(void *)(v1 + 24));
  IndexPath.appending(_:)(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000E1E84()
{
  uint64_t v1 = sub_1000038E8((uint64_t *)&unk_1002EE370);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *(void *)(v0 + 24);
  AnyHashable.init<A>(_:)(v8, &v7, &type metadata for Int, &protocol witness table for Int);
  StatePath.init(component:)(v8, &type metadata for AnyHashable);
  v8[0] = *(void *)(v0 + 40);
  swift_retain(v8[0]);
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002F08B0);
  uint64_t v5 = sub_10005E7D4( (unint64_t *)&qword_1002EE390,  (uint64_t *)&unk_1002F08B0,  (uint64_t)&protocol conformance descriptor for TransientStateStore<A>);
  return WritableStateLens.init<A>(contentsOf:in:)(v3, v8, &type metadata for Never, v4, v5);
}

void sub_1000E1F78(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for IndexPath(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*((_BYTE *)v1 + 32) == 1)
  {
    IndexPath.init(item:section:)(0LL, v1[3]);
    dispatch thunk of ShelfPresenter.model(at:)(v12, v7, *(void *)(v3 + 80), *(void *)(v3 + 96));
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
    uint64_t v9 = sub_1000038E8(&qword_1002E8E30);
    if (swift_dynamicCast(v10, v12, v8, v9, 6LL))
    {
      sub_1000243BC(v10, (uint64_t)v13);
      sub_100041A94((uint64_t)v13, a1, &qword_1002E8E28);
    }

    else
    {
      uint64_t v11 = 0LL;
      memset(v10, 0, sizeof(v10));
      sub_1000077E0((uint64_t)v10, &qword_1002E8E28);
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000048LL,  0x800000010024CD50LL,  "AppStore/ShelfDataSource.swift",  30LL,  2LL,  98LL,  0);
      __break(1u);
    }
  }

  else
  {
    *(void *)(a1 + 32) = 0LL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  }

uint64_t sub_1000E210C()
{
  uint64_t v1 = *v0;
  sub_1000E1F78((uint64_t)&v9);
  if (v10)
  {
    sub_1000243BC(&v9, (uint64_t)v11);
    uint64_t v2 = v12;
    uint64_t v3 = v13;
    sub_1000112B0(v11, v12);
    uint64_t v4 = dispatch thunk of ComponentModelContainment.numberOfItems.getter(v2, v3);
    _s8AppStore17PillOverlayLayoutVwxx_0(v11);
  }

  else
  {
    sub_1000077E0((uint64_t)&v9, &qword_1002E8E28);
    uint64_t v5 = v0[3];
    uint64_t v6 = *(void *)(v1 + 80);
    uint64_t v7 = *(void *)(v1 + 96);
    if (v5 >= dispatch thunk of ShelfPresenter.sectionCount.getter(v6, v7)) {
      return 0LL;
    }
    else {
      return dispatch thunk of ShelfPresenter.numberOfRows(for:)(v5, v6, v7);
    }
  }

  return v4;
}

uint64_t sub_1000E21D4()
{
  return dispatch thunk of ShelfPresenter.seeAllAction(for:)(v0[3], *(void *)(*v0 + 80LL), *(void *)(*v0 + 96LL));
}

uint64_t sub_1000E2204()
{
  return dispatch thunk of ShelfPresenter.didSelectSeeAll(for:)(v0[3], *(void *)(*v0 + 80LL), *(void *)(*v0 + 96LL));
}

uint64_t sub_1000E2234@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = type metadata accessor for IndexPath(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  __int128 v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000E1F78((uint64_t)&v13);
  if (v14)
  {
    sub_1000243BC(&v13, (uint64_t)v15);
    uint64_t v10 = v16;
    uint64_t v11 = v17;
    sub_1000112B0(v15, v16);
    dispatch thunk of ComponentModelContainment.model(at:)(a1, v10, v11);
    return _s8AppStore17PillOverlayLayoutVwxx_0(v15);
  }

  else
  {
    sub_1000077E0((uint64_t)&v13, &qword_1002E8E28);
    IndexPath.init(item:section:)(a1, v2[3]);
    dispatch thunk of ShelfPresenter.model(at:)(a2, v9, *(void *)(v5 + 80), *(void *)(v5 + 96));
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

uint64_t sub_1000E2348(uint64_t a1)
{
  return sub_1000E236C( a1,  (void (*)(char *, uint64_t *, void *, uint64_t, uint64_t))&WritableStateLens.init<A>(contentsOf:in:));
}

uint64_t sub_1000E2354(uint64_t a1)
{
  return sub_1000E24E8( a1,  (void (*)(char *, uint64_t *, void *, uint64_t, uint64_t))&WritableStateLens.init<A>(contentsOf:in:));
}

uint64_t sub_1000E2360(uint64_t a1)
{
  return sub_1000E236C( a1,  (void (*)(char *, uint64_t *, void *, uint64_t, uint64_t))&StateLens.init<A>(contentsOf:in:));
}

uint64_t sub_1000E236C(uint64_t a1, void (*a2)(char *, uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v5 = sub_1000038E8((uint64_t *)&unk_1002EE370);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for IndexPath(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v18 - v13;
  IndexPath.init(item:section:)(a1, *(void *)(v2 + 24));
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  StatePath<A>.init(_:)(v11);
  uint64_t v19 = *(void *)(v2 + 40);
  swift_retain(v19);
  uint64_t v15 = sub_1000038E8((uint64_t *)&unk_1002F08B0);
  uint64_t v16 = sub_10005E7D4( (unint64_t *)&qword_1002EE390,  (uint64_t *)&unk_1002F08B0,  (uint64_t)&protocol conformance descriptor for TransientStateStore<A>);
  a2(v7, &v19, &type metadata for Never, v15, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1000E24DC(uint64_t a1)
{
  return sub_1000E24E8( a1,  (void (*)(char *, uint64_t *, void *, uint64_t, uint64_t))&StateLens.init<A>(contentsOf:in:));
}

uint64_t sub_1000E24E8(uint64_t a1, void (*a2)(char *, uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v5 = sub_1000038E8((uint64_t *)&unk_1002EE370);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for IndexPath(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v18 - v13;
  sub_1000E1DEC(a1);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  StatePath<A>.init(_:)(v11);
  uint64_t v19 = *(void *)(v2 + 40);
  swift_retain(v19);
  uint64_t v15 = sub_1000038E8((uint64_t *)&unk_1002F08B0);
  uint64_t v16 = sub_10005E7D4( (unint64_t *)&qword_1002EE390,  (uint64_t *)&unk_1002F08B0,  (uint64_t)&protocol conformance descriptor for TransientStateStore<A>);
  a2(v7, &v19, &type metadata for Never, v15, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1000E2654(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for IndexPath(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  IndexPath.init(item:section:)(a1, v1[3]);
  uint64_t v8 = *(void *)(v3 + 80);
  uint64_t v9 = *(void *)(v3 + 96);
  if (*((_BYTE *)v1 + 32) == 1) {
    dispatch thunk of ShelfPresenter.didSelectNestedItem(at:)(v7, v8, v9);
  }
  else {
    dispatch thunk of ShelfPresenter.didSelectItem(at:)(v7, v8, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *sub_1000E2708()
{
  return v0;
}

double sub_1000E273C()
{
  uint64_t v0 = sub_1000E2708();
  *(void *)&double result = swift_deallocClassInstance(v0, 72LL, 7LL).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ShelfComponentContainerDelegate( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006B694(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShelfComponentContainerDelegate);
}

uint64_t sub_1000E2764(uint64_t a1)
{
  v2[0] = "\b";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v2[2] = &unk_10023C810;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = "!";
  v2[5] = &unk_10023C7F8;
  void v2[6] = &unk_10023C828;
  return swift_initClassMetadata2(a1, 0LL, 7LL, v2, a1 + 104);
}

uint64_t sub_1000E27E0()
{
  return swift_unknownObjectRetain(*(void *)(v0 + 48));
}

uint64_t sub_1000E2804()
{
  return swift_retain(*(void *)(v0 + 64));
}

uint64_t sub_1000E2830(uint64_t a1, id a2)
{
  id v3 = [a2 userInterfaceStyle];
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  sub_10008AC58(a1, v4);
  return UIMutableTraits.userInterfaceStyle.setter(v3, v4, v5);
}

id sub_1000E2894(int a1, id a2)
{
  return [a2 reloadData];
}

void sub_1000E28A4(uint64_t a1, uint64_t a2)
{
  if (a2) {
    *(_BYTE *)(a2 + OBJC_IVAR____TtC8AppStore29CollectionViewTableFlowLayout_isSupplementaryViewAnimationEnabled) = 1;
  }
}

void sub_1000E28C0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexSet(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002EE350);
    uint64_t v9 = swift_allocObject(v8, 40LL, 7LL);
    *(_OWORD *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
    *(void *)(v9 + 32) = a2;
    uint64_t v17 = v9;
    uint64_t v10 = sub_100004288( (unint64_t *)&unk_1002F1F50,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet,  (uint64_t)&protocol conformance descriptor for IndexSet);
    uint64_t v11 = sub_1000038E8((uint64_t *)&unk_1002E1CE0);
    uint64_t v12 = sub_10005E7D4( (unint64_t *)&qword_1002F1F60,  (uint64_t *)&unk_1002E1CE0,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v11, v12, v4, v10);
    IndexSet._bridgeToObjectiveC()(v13);
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    [a1 insertSections:v15];
  }

void sub_1000E2A08(void *a1, uint64_t a2)
{
}

void sub_1000E2A14(void *a1, uint64_t a2)
{
}

void sub_1000E2A20(void *a1, uint64_t a2, SEL *a3)
{
  uint64_t v6 = type metadata accessor for IndexSet(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000038E8((uint64_t *)&unk_1002EE350);
  uint64_t v11 = swift_allocObject(v10, 40LL, 7LL);
  *(_OWORD *)(v11 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  *(void *)(v11 + 32) = a2;
  uint64_t v19 = v11;
  uint64_t v12 = sub_100004288( (unint64_t *)&unk_1002F1F50,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet,  (uint64_t)&protocol conformance descriptor for IndexSet);
  uint64_t v13 = sub_1000038E8((uint64_t *)&unk_1002E1CE0);
  uint64_t v14 = sub_10005E7D4( (unint64_t *)&qword_1002F1F60,  (uint64_t *)&unk_1002E1CE0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v13, v14, v6, v12);
  IndexSet._bridgeToObjectiveC()(v15);
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(a1, *a3, v17);
}

void sub_1000E2B68(void *a1@<X0>, NSIndexSet *a2@<X8>)
{
  id v4 = v3;
  [a1 insertSections:v3];
}

uint64_t sub_1000E2BB0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v102 = a1;
  uint64_t v97 = a2;
  uint64_t v83 = *a2;
  uint64_t v6 = type metadata accessor for ImpressionMetrics.ID(0LL);
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  __chkstk_darwin(v6);
  uint64_t v91 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for IndexPath(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v99 = v8;
  uint64_t v100 = v9;
  __chkstk_darwin(v8);
  uint64_t v105 = (char *)v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000038E8((uint64_t *)&unk_1002EEFD0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  __n128 v94 = (char *)v81 - v15;
  __n128 v17 = __chkstk_darwin(v16);
  uint64_t v84 = (char *)v81 - v18;
  uint64_t v19 = type metadata accessor for ImpressionMetrics(0LL, v17);
  uint64_t v104 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v103 = (char *)v81 - v23;
  __chkstk_darwin(v24);
  uint64_t v82 = (char *)v81 - v25;
  uint64_t v88 = sub_1000038E8((uint64_t *)&unk_1002EE370);
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = *(void *)(a3 - 8);
  __chkstk_darwin(v28);
  char v30 = (char *)v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL, a4);
  v81[0] = *(void *)(AssociatedTypeWitness - 8);
  __n128 v32 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v34 = (char *)v81 - v33;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v27 + 16);
  uint64_t v36 = (uint64_t)v13;
  v35(v30, v102, a3, v32);
  dispatch thunk of Sequence.makeIterator()(a3, a4);
  uint64_t v37 = a4;
  uint64_t v38 = (uint64_t)v94;
  uint64_t v39 = v83;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness( v37,  a3,  AssociatedTypeWitness,  &protocol requirements base descriptor for Sequence,  &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
  __n128 v89 = v34;
  uint64_t v90 = AssociatedTypeWitness;
  uint64_t v85 = AssociatedConformanceWitness;
  dispatch thunk of IteratorProtocol.next()(AssociatedTypeWitness, AssociatedConformanceWitness);
  if ((v107 & 1) != 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v81[0] + 8LL))(v89, v90);
  }
  uint64_t v42 = v106;
  __n128 v95 = v21;
  while (1)
  {
    uint64_t v98 = v42;
    uint64_t v43 = v97;
    uint64_t v110 = v42;
    AnyHashable.init<A>(_:)(&v106, &v110, &type metadata for Int, &protocol witness table for Int);
    uint64_t v44 = v86;
    StatePath.init(component:)(&v106, &type metadata for AnyHashable);
    TransientStateStore.removeState(at:recursively:)(v44, 1LL);
    uint64_t v45 = v44;
    uint64_t v46 = v98;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v45, v88);
    char v47 = sub_1000E32E0(v46);
    uint64_t v48 = v43[2];
    uint64_t v49 = *(void *)(v39 + 80);
    uint64_t v50 = *(void *)(v39 + 96);
    if ((v47 & 1) == 0) {
      break;
    }
    uint64_t v51 = dispatch thunk of ShelfPresenter.shelf(for:)(v46, *(void *)(v39 + 80), *(void *)(v39 + 96));
    uint64_t v52 = (uint64_t)v84;
    Shelf.impressionMetrics.getter(v53);
    uint64_t v54 = v19;
    uint64_t v55 = v104;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v52, 1LL, v54) == 1)
    {
      swift_release(v51);
      sub_1000077E0(v52, (uint64_t *)&unk_1002EEFD0);
    }

    else
    {
      uint64_t v78 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v82, v52, v54);
      uint64_t v79 = v97[12];
      if (v79)
      {
        swift_retain(v97[12]);
        ImpressionsCalculator.removeElement(_:)(v78);
        swift_release(v79);
        __n128 v80 = swift_release(v51);
        (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v78, v54, v80);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v55 + 8))(v78, v54);
        swift_release(v51);
      }
    }

    uint64_t v38 = (uint64_t)v94;
    uint64_t v19 = v54;
LABEL_5:
    dispatch thunk of IteratorProtocol.next()(v90, v85);
    uint64_t v42 = v106;
    if ((v107 & 1) != 0) {
      return (*(uint64_t (**)(char *, uint64_t))(v81[0] + 8LL))(v89, v90);
    }
  }

  uint64_t v56 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v46, *(void *)(v39 + 80), *(void *)(v39 + 96));
  uint64_t result = dispatch thunk of ShelfPresenter.shelf(for:)(v46, v49, v50);
  uint64_t v96 = result;
  if ((v56 & 0x8000000000000000LL) == 0)
  {
    if (v56)
    {
      uint64_t v101 = v56;
      uint64_t v102 = v50;
      for (uint64_t i = 0LL; i != v101; ++i)
      {
        id v58 = v105;
        IndexPath.init(item:section:)(i, v46);
        uint64_t v59 = v58;
        uint64_t v60 = v48;
        uint64_t v61 = v49;
        dispatch thunk of ShelfPresenter.model(at:)(&v106, v59, v49, v102);
        uint64_t v63 = v108;
        uint64_t v62 = v109;
        sub_1000112B0(&v106, v108);
        dispatch thunk of ViewModel.impressionMetrics.getter(v63, *(void *)(v62 + 8));
        uint64_t v64 = v104;
        __n128 v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
        if (v65(v38, 1LL, v19) == 1)
        {
          (*(void (**)(char *, uint64_t))(v100 + 8))(v105, v99);
          sub_1000077E0(v38, (uint64_t *)&unk_1002EEFD0);
        }

        else
        {
          v66.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v64 + 32))(v103, v38, v19);
          Shelf.impressionMetrics.getter(v66);
          if (v65(v36, 1LL, v19) == 1)
          {
            sub_1000077E0(v36, (uint64_t *)&unk_1002EEFD0);
            uint64_t v68 = 0LL;
            uint64_t v69 = 0LL;
          }

          else
          {
            uint64_t v70 = v91;
            ImpressionMetrics.id.getter(v67);
            uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(v36, v19);
            uint64_t v68 = ImpressionMetrics.ID.element.getter(v71);
            uint64_t v69 = v72;
            uint64_t v73 = v70;
            uint64_t v38 = (uint64_t)v94;
            (*(void (**)(char *, uint64_t))(v92 + 8))(v73, v93);
          }

          uint64_t v74 = v95;
          ImpressionMetrics.withParentId(_:)(v68, v69);
          __n128 v75 = swift_bridgeObjectRelease(v69);
          uint64_t v76 = v97[12];
          if (v76)
          {
            swift_retain(v97[12]);
            ImpressionsCalculator.removeElement(_:)(v74);
            __n128 v75 = swift_release(v76);
          }

          uint64_t v77 = *(void (**)(char *, uint64_t, __n128))(v104 + 8);
          v77(v74, v19, v75);
          ((void (*)(char *, uint64_t))v77)(v103, v19);
          (*(void (**)(char *, uint64_t))(v100 + 8))(v105, v99);
          uint64_t v46 = v98;
        }

        uint64_t v48 = v60;
        uint64_t v49 = v61;
        _s8AppStore17PillOverlayLayoutVwxx_0(&v106);
      }

      swift_release(v96);
      uint64_t v39 = v83;
    }

    else
    {
      swift_release(v96);
    }

    goto LABEL_5;
  }

  __break(1u);
  return result;
}

uint64_t sub_1000E32E0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v35 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v36 = (char *)&v34 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = *(void *)(v3 + 80);
  uint64_t v16 = *(void *)(v3 + 96);
  uint64_t v34 = a1;
  dispatch thunk of ShelfPresenter.contentType(for:)(a1, v15, v16);
  __n128 v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v18 = v14;
  uint64_t v19 = v14;
  uint64_t v20 = v4;
  v17(v11, v19, v4);
  uint64_t v37 = v5;
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  int v22 = v21(v11, v4);
  if (v22 == enum case for Shelf.ContentType.informationContainer(_:))
  {
    uint64_t v23 = type metadata accessor for InformationContainerCollectionViewCell();
    goto LABEL_5;
  }

  if (v22 == enum case for Shelf.ContentType.reviewsContainer(_:))
  {
    uint64_t v23 = type metadata accessor for ReviewsContainerCell();
LABEL_5:
    uint64_t v24 = v23;
    uint64_t v25 = v18;
    uint64_t v26 = v36;
    v17(v36, v18, v20);
    if (v24)
    {
LABEL_15:
      char v31 = 1;
      goto LABEL_16;
    }

    goto LABEL_8;
  }

  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v4);
  uint64_t v26 = v36;
  uint64_t v25 = v18;
  v17(v36, v18, v20);
LABEL_8:
  char v27 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v34, v15, v16);
  uint64_t v28 = v35;
  v17(v35, v26, v20);
  int v29 = v21(v28, v20);
  if (v29 == enum case for Shelf.ContentType.smallLockup(_:) || v29 == enum case for Shelf.ContentType.mediumLockup(_:)) {
    goto LABEL_13;
  }
  if (v29 == enum case for Shelf.ContentType.largeLockup(_:)) {
    goto LABEL_15;
  }
  if (v29 == enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
    || v29 == enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
    || v29 == enum case for Shelf.ContentType.action(_:)
    || v29 == enum case for Shelf.ContentType.editorialCard(_:)
    || v29 == enum case for Shelf.ContentType.videoCard(_:))
  {
    goto LABEL_13;
  }

  char v31 = 1;
  if (v29 == enum case for Shelf.ContentType.brick(_:) || v29 == enum case for Shelf.ContentType.categoryBrick(_:)) {
    goto LABEL_16;
  }
  if (v29 == enum case for Shelf.ContentType.reviews(_:)
    || v29 == enum case for Shelf.ContentType.appTrailerLockup(_:)
    || v29 == enum case for Shelf.ContentType.framedVideo(_:)
    || v29 == enum case for Shelf.ContentType.screenshotsLockup(_:)
    || v29 == enum case for Shelf.ContentType.smallStoryCard(_:)
    || v29 == enum case for Shelf.ContentType.mediumStoryCard(_:))
  {
    goto LABEL_13;
  }

  if (v29 == enum case for Shelf.ContentType.largeStoryCard(_:)) {
    goto LABEL_16;
  }
  if (v29 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
    || v29 == enum case for Shelf.ContentType.upsellBreakout(_:)
    || v29 == enum case for Shelf.ContentType.smallBreakout(_:)
    || v29 == enum case for Shelf.ContentType.mixedMediaLockup(_:)
    || v29 == enum case for Shelf.ContentType.arcadeFooter(_:)
    || v29 == enum case for Shelf.ContentType.textCard(_:)
    || v29 == enum case for Shelf.ContentType.smallGameCenterPlayer(_:)
    || v29 == enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
    || v29 == enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:))
  {
LABEL_13:
    char v31 = v27;
    goto LABEL_16;
  }

  char v31 = v27;
  if (v29 != enum case for Shelf.ContentType.posterLockup(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v20);
    char v31 = 0;
  }

void sub_1000E373C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = a2;
  uint64_t v5 = sub_1000038E8((uint64_t *)&unk_1002EE370);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000038E8((uint64_t *)&unk_1002E34D0);
  __chkstk_darwin(v7);
  uint64_t v49 = (uint64_t)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for IndexPath(0LL);
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&double v12 = __chkstk_darwin(v11).n128_u64[0];
  uint64_t v40 = (char *)v38 - v13;
  id v45 = a1;
  id v14 = objc_msgSend(a1, "visibleCells", v12);
  uint64_t v15 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E49B0, &OBJC_CLASS___UICollectionViewCell_ptr);
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0) {
      uint64_t v37 = v16;
    }
    else {
      uint64_t v37 = v16 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v16);
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v16);
    if (v17) {
      goto LABEL_3;
    }
LABEL_24:
    swift_bridgeObjectRelease(v16);
    return;
  }

  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v17) {
    goto LABEL_24;
  }
LABEL_3:
  if (v17 >= 1)
  {
    v38[1] = v3;
    uint64_t v39 = v16;
    uint64_t v18 = 0LL;
    unint64_t v47 = v16 & 0xC000000000000001LL;
    while (1)
    {
      if (v47) {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
      }
      else {
        id v19 = *(id *)(v16 + 8 * v18 + 32);
      }
      uint64_t v20 = v19;
      uint64_t ObjectType = swift_getObjectType(v19);
      if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerView)) {
        int v22 = v20;
      }
      else {
        int v22 = 0LL;
      }
      if (v22)
      {
        id v23 = [v45 indexPathForCell:v20];
        if (!v23)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v49, 1LL, 1LL, v48);
LABEL_18:

          sub_1000077E0(v49, (uint64_t *)&unk_1002E34D0);
          goto LABEL_6;
        }

        uint64_t v24 = v23;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v23);

        uint64_t v25 = v46;
        uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v46 + 32);
        uint64_t v28 = v48;
        uint64_t v27 = v49;
        v26(v49, v10, v48);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0LL, 1LL, v28);
        int v29 = v40;
        uint64_t v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v40, v49, v48);
        uint64_t v51 = IndexPath.section.getter(v30);
        AnyHashable.init<A>(_:)(v50, &v51, &type metadata for Int, &protocol witness table for Int);
        uint64_t v31 = v17;
        __n128 v32 = v10;
        uint64_t v33 = v41;
        StatePath.init(component:)(v50, &type metadata for AnyHashable);
        uint64_t v34 = v46;
        TransientStateStore.removeState(at:recursively:)(v33, 0LL);

        uint64_t v35 = v33;
        uint64_t v10 = v32;
        uint64_t v17 = v31;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
        uint64_t v36 = v29;
        uint64_t v16 = v39;
        (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v48);
      }

      else
      {
      }

void sub_1000E3AD4(uint64_t a1, char a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)&double v14 = __chkstk_darwin(v12).n128_u64[0];
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  objc_msgSend(a5, "frame", v14);
  if ((a2 & 1) == 0)
  {
    uint64_t v17 = sub_1001847BC();
    if (v17)
    {
      uint64_t v19 = v17;
      uint64_t v20 = v18;
      [a4 pageMarginInsets];
      (*(void (**)(void *, uint64_t, uint64_t, double))(v20 + 40))(a4, v19, v20, v21);
      id v22 = [a4 traitCollection];
      LOBYTE(v19) = (*(uint64_t (**)(uint64_t, id))(*(void *)v6 + 504LL))(a1, v22);

      if ((v19 & 1) != 0)
      {
        id v23 = [a4 traitCollection];
        id v24 = [v23 horizontalSizeClass];

        uint64_t v25 = sub_1001851CC(a3, (uint64_t)v24);
        (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
        int v26 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
        if (v26 == enum case for Shelf.ContentType.action(_:)
          || v26 == enum case for Shelf.ContentType.annotation(_:)
          || v26 == enum case for Shelf.ContentType.productCapability(_:)
          || v26 == enum case for Shelf.ContentType.productPageLink(_:)
          || v26 == enum case for Shelf.ContentType.mixedMediaLockup(_:)
          || v26 == enum case for Shelf.ContentType.familyMember(_:)
          || v26 == enum case for Shelf.ContentType.privacyType(_:))
        {
          if (__OFSUB__(v25, 1LL)) {
            __break(1u);
          }
        }

        else
        {
          (*(void (**)(char *, uint64_t, double))(v13 + 8))(v16, v12, 60.0);
        }
      }
    }
  }

uint64_t sub_1000E3D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for IndexPath(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v14 = sub_1000038E8((uint64_t *)&unk_1002EE350);
  uint64_t v15 = swift_allocObject(v14, 48LL, 7LL);
  *(_OWORD *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236DD0;
  __n128 v16 = IndexPath.section.getter(v15);
  *(void *)(v15 + 32) = v17;
  *(void *)(v15 + 40) = a1;
  IndexPath.init(arrayLiteral:)(v15, v16);
  swift_beginAccess(a3 + 16, v24, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a3 + 16);
  if (Strong)
  {
    uint64_t v20 = Strong;
    uint64_t v21 = *(void *)(Strong + 16);
    swift_unknownObjectRetain(v21);
    swift_release(v20);
    dispatch thunk of ShelfPresenter.didSelectNestedItem(at:)(v13, a4, a6);
    __n128 v19 = swift_unknownObjectRelease(v21);
  }

  return (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v19);
}

void sub_1000E3EA0(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = 0LL;
  if (!a1) {
    goto LABEL_5;
  }
  id v6 = a1;
  id v7 = [v6 superview];
  if (!v7)
  {

LABEL_5:
    char v16 = 1;
    uint64_t v11 = 0LL;
    uint64_t v13 = 0LL;
    uint64_t v15 = 0LL;
    goto LABEL_6;
  }

  uint64_t v8 = v7;
  objc_msgSend(v6, "jet_focusedFrame");
  objc_msgSend(a2, "convertRect:fromCoordinateSpace:", v8);
  uint64_t v4 = v9;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;

  char v16 = 0;
LABEL_6:
  *(void *)a3 = v4;
  *(void *)(a3 + 8) = v11;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
  *(void *)(a3 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v15;
  *(_BYTE *)(a3 + 32) = v16;
}

double sub_1000E3F68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a2;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0) {
      uint64_t v9 = a2;
    }
    else {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v10 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
    swift_bridgeObjectRetain(v6);
    uint64_t v11 = _bridgeCocoaArray<A>(_:)(v9, v10);
    swift_bridgeObjectRelease(v6);
    uint64_t v6 = v11;
  }

  else
  {
    swift_bridgeObjectRetain(a2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v7);
    sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
  }

  sub_100041A94(a3 + 56, (uint64_t)v12, &qword_1002E3798);
  sub_1000E4054(v6, (uint64_t)v12, a4, 2);
  *(void *)&double result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

void sub_1000E4054(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease(a1);
    return;
  }

  if (a1 < 0) {
    uint64_t v15 = a1;
  }
  else {
    uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a1);
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v6) {
    goto LABEL_21;
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0LL; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001LL) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      uint64_t ObjectType = swift_getObjectType(v8);
      uint64_t v11 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FocusAvoidanceCapableView);
      if (v11) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = 0LL;
      }
      if (v11) {
        uint64_t v13 = v9;
      }
      else {
        uint64_t v13 = 0LL;
      }
      if (v13)
      {
        uint64_t v14 = swift_getObjectType(v13);
        sub_10004D210(a2, a3, (uint64_t)v18);
        sub_10004CF8C((uint64_t)v18, a4, v14, v12);
      }
    }

    goto LABEL_21;
  }

  __break(1u);
}

double sub_1000E4194(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess(a2 + 16, &v13, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    id v8 = Strong;
    sub_1000E3EA0(a1, Strong, (uint64_t)v14);
    if ((unint64_t)a3 >> 62)
    {
      if (a3 < 0) {
        uint64_t v10 = a3;
      }
      else {
        uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v11 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
      swift_bridgeObjectRetain(a3);
      uint64_t v12 = _bridgeCocoaArray<A>(_:)(v10, v11);
      swift_bridgeObjectRelease(a3);
      a3 = v12;
    }

    else
    {
      swift_bridgeObjectRetain(a3);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
      sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
    }

    sub_1000E4054(a3, (uint64_t)v14, v8, 0);

    *(void *)&double result = swift_bridgeObjectRelease(a3).n128_u64[0];
  }

  return result;
}

double sub_1000E429C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  if ((unint64_t)a4 >> 62)
  {
    if (a4 < 0) {
      uint64_t v8 = a4;
    }
    else {
      uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v9 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
    swift_bridgeObjectRetain(a4);
    uint64_t v10 = _bridgeCocoaArray<A>(_:)(v8, v9);
    swift_bridgeObjectRelease(a4);
    a4 = v10;
  }

  else
  {
    swift_bridgeObjectRetain(a4);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v6);
    sub_10000DFD4(0LL, (unint64_t *)&qword_1002E27B0, &OBJC_CLASS___UIView_ptr);
  }

  sub_1000E4054(a4, (uint64_t)v11, a3, 1);
  *(void *)&double result = swift_bridgeObjectRelease(a4).n128_u64[0];
  return result;
}

uint64_t sub_1000E4374(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = *(void *)(v4 + 80);
  uint64_t v16 = *(void *)(v4 + 96);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v15, v16) <= a1) {
    return 0LL;
  }
  uint64_t v35 = v11;
  uint64_t v36 = v5;
  uint64_t v34 = v8;
  uint64_t v17 = v37;
  dispatch thunk of ShelfPresenter.contentType(for:)(a1, v15, v16);
  if ((sub_1000E32E0(a1) & 1) == 0)
  {
    char v19 = (*(uint64_t (**)(char *, uint64_t))(*v2 + 504))(v14, v17);
    uint64_t v20 = v6;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    id v23 = v35;
    uint64_t v22 = v36;
    v21(v35, v14, v36);
    if ((v19 & 1) != 0)
    {
      id v24 = v34;
      v21(v34, v23, v22);
      int v25 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v24, v22);
      if (v25 == enum case for Shelf.ContentType.action(_:)
        || v25 == enum case for Shelf.ContentType.annotation(_:)
        || v25 == enum case for Shelf.ContentType.productCapability(_:)
        || v25 == enum case for Shelf.ContentType.productPageLink(_:)
        || v25 == enum case for Shelf.ContentType.mixedMediaLockup(_:)
        || v25 == enum case for Shelf.ContentType.familyMember(_:)
        || v25 == enum case for Shelf.ContentType.privacyType(_:))
      {
        uint64_t v18 = 1LL;
LABEL_28:
        __n128 v32 = *(void (**)(char *, uint64_t))(v20 + 8);
        v32(v23, v22);
        v32(v14, v22);
        return v18;
      }

      (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v22);
    }

    uint64_t v18 = 0LL;
    goto LABEL_28;
  }

  uint64_t v18 = 0LL;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v36);
  return v18;
}

double sub_1000E45AC()
{
  *(void *)&double result = swift_deallocClassInstance(v0, 104LL, 7LL).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ShelfDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006B694(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShelfDataSource);
}

double sub_1000E45D8(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v108 = a4;
  LODWORD(v109) = a3;
  uint64_t v106 = a2;
  uint64_t v5 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v99 = *(void *)(v5 - 8);
  uint64_t v100 = v5;
  __chkstk_darwin(v5);
  uint64_t v98 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000038E8(&qword_1002EE510);
  __chkstk_darwin(v7);
  uint64_t v102 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v105 = (uint64_t)&v94 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v94 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v94 - v15;
  uint64_t v17 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v18 = *(void **)(v17 - 8);
  __chkstk_darwin(v17);
  __n128 v95 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v97 = (char *)&v94 - v21;
  __chkstk_darwin(v22);
  uint64_t v101 = (char *)&v94 - v23;
  __chkstk_darwin(v24);
  uint64_t v104 = (char *)&v94 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v94 - v27;
  __n128 v30 = __chkstk_darwin(v29);
  __n128 v32 = (char *)&v94 - v31;
  uint64_t v33 = type metadata accessor for ProductPresenter(0LL, v30);
  uint64_t v34 = sub_100004288( (unint64_t *)&unk_1002EE380,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductPresenter,  (uint64_t)&protocol conformance descriptor for ProductPresenter);
  uint64_t v110 = v32;
  uint64_t v35 = a1;
  dispatch thunk of ShelfPresenter.contentType(for:)(a1, v33, v34);
  char v107 = v16;
  uint64_t v96 = v13;
  if ((v109 & 1) != 0)
  {
    uint64_t v103 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v18[7];
    v103(v16, 1LL, 1LL, v17);
    LODWORD(v106) = 0;
  }

  else
  {
    uint64_t v36 = v106;
    dispatch thunk of ShelfPresenter.contentType(for:)(v106, v33, v34);
    uint64_t v103 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v18[7];
    v103(v13, 0LL, 1LL, v17);
    sub_100041A94((uint64_t)v13, (uint64_t)v16, &qword_1002EE510);
    dispatch thunk of ShelfPresenter.title(for:)(v36, v33, v34);
    LODWORD(v106) = v37 != 0;
    swift_bridgeObjectRelease(v37);
  }

  uint64_t v38 = v17;
  uint64_t v39 = v35;
  char v40 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v35, v33, v34);
  uint64_t v41 = (void (*)(char *, char *, uint64_t))v18[2];
  v41(v28, v110, v38);
  uint64_t v109 = v18;
  uint64_t v42 = (uint64_t (*)(char *, uint64_t))v18[11];
  int v43 = v42(v28, v38);
  if (v43 != enum case for Shelf.ContentType.smallLockup(_:) && v43 != enum case for Shelf.ContentType.mediumLockup(_:))
  {
    if (v43 == enum case for Shelf.ContentType.largeLockup(_:)) {
      goto LABEL_33;
    }
    if (v43 != enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
      && v43 != enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
      && v43 != enum case for Shelf.ContentType.action(_:)
      && v43 != enum case for Shelf.ContentType.editorialCard(_:)
      && v43 != enum case for Shelf.ContentType.videoCard(_:))
    {
      if (v43 == enum case for Shelf.ContentType.brick(_:) || v43 == enum case for Shelf.ContentType.categoryBrick(_:)) {
        goto LABEL_33;
      }
      if (v43 != enum case for Shelf.ContentType.reviews(_:)
        && v43 != enum case for Shelf.ContentType.appTrailerLockup(_:)
        && v43 != enum case for Shelf.ContentType.framedVideo(_:)
        && v43 != enum case for Shelf.ContentType.screenshotsLockup(_:)
        && v43 != enum case for Shelf.ContentType.smallStoryCard(_:)
        && v43 != enum case for Shelf.ContentType.mediumStoryCard(_:))
      {
        if (v43 == enum case for Shelf.ContentType.largeStoryCard(_:)) {
          goto LABEL_33;
        }
        if (v43 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
          && v43 != enum case for Shelf.ContentType.upsellBreakout(_:)
          && v43 != enum case for Shelf.ContentType.smallBreakout(_:)
          && v43 != enum case for Shelf.ContentType.mixedMediaLockup(_:)
          && v43 != enum case for Shelf.ContentType.arcadeFooter(_:)
          && v43 != enum case for Shelf.ContentType.textCard(_:)
          && v43 != enum case for Shelf.ContentType.smallGameCenterPlayer(_:)
          && v43 != enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
          && v43 != enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:)
          && v43 != enum case for Shelf.ContentType.posterLockup(_:))
        {
          ((void (*)(char *, uint64_t))v109[1])(v28, v38);
LABEL_39:
          __n128 v67 = v97;
          v41(v97, v110, v38);
          int v68 = v42(v67, v38);
          __n128 v94 = (void (*)(char *, uint64_t, uint64_t))v41;
          if (v68 == enum case for Shelf.ContentType.informationContainer(_:))
          {
            type metadata accessor for InformationContainerCollectionViewCell();
            uint64_t v69 = &off_10028E928;
            uint64_t v45 = (uint64_t)v107;
            uint64_t v70 = (uint64_t)v96;
          }

          else
          {
            uint64_t v70 = (uint64_t)v96;
            if (v68 != enum case for Shelf.ContentType.reviewsContainer(_:))
            {
              uint64_t v81 = (void (*)(char *, uint64_t))v109[1];
              v81(v67, v38);
              uint64_t v82 = sub_1001847BC();
              uint64_t v45 = (uint64_t)v107;
              __n128 v53 = v108;
              if (v82)
              {
                uint64_t v84 = v82;
                uint64_t v85 = v83;
                sub_1000B1410((uint64_t)v107, v70);
                *(double *)&uint64_t v86 = COERCE_DOUBLE( (*(uint64_t (**)(uint64_t, void, void *, uint64_t, uint64_t))(v85 + 48))( v70,  v106,  v53,  v84,  v85));
                LOBYTE(v84) = v87;
                sub_1000077E0(v70, &qword_1002EE510);
                if ((v84 & 1) == 0) {
                  goto LABEL_60;
                }
              }

              if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v109[6])(v45, 1LL, v38))
              {
                uint64_t v88 = v95;
                v94(v95, v45, v38);
                uint64_t v89 = sub_1001847BC();
                uint64_t v91 = v90;
                v81(v88, v38);
                if (v89)
                {
                  v94((char *)v70, (uint64_t)v110, v38);
                  v103((char *)v70, 0LL, 1LL, v38);
                  *(double *)&uint64_t v86 = COERCE_DOUBLE( (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v91 + 56))( v70,  v53,  v89,  v91));
                  char v93 = v92;
                  sub_1000077E0(v70, &qword_1002EE510);
                  if ((v93 & 1) == 0)
                  {
LABEL_60:
                    double v57 = *(double *)&v86;
                    v81(v110, v38);
                    goto LABEL_52;
                  }
                }
              }

              goto LABEL_43;
            }

            type metadata accessor for ReviewsContainerCell();
            uint64_t v69 = &off_1002942F0;
            uint64_t v45 = (uint64_t)v107;
          }

          uint64_t v44 = dispatch thunk of ShelfPresenter.shelf(for:)(v39, v33, v34);
          sub_1000B1410(v45, v70);
          __n128 v53 = v108;
          *(double *)&uint64_t v74 = COERCE_DOUBLE(((uint64_t (__cdecl *)())v69[1])());
          char v76 = v75;
          sub_1000077E0(v70, &qword_1002EE510);
          if ((v76 & 1) == 0)
          {
            double v57 = *(double *)&v74;
            ((void (*)(char *, uint64_t))v109[1])(v110, v38);
            goto LABEL_51;
          }

          v94((char *)v70, (uint64_t)v110, v38);
          v103((char *)v70, 0LL, 1LL, v38);
          *(double *)&uint64_t v78 = COERCE_DOUBLE(((uint64_t (__cdecl *)())v69[2])());
          char v80 = v79;
          swift_release(v44);
          sub_1000077E0(v70, &qword_1002EE510);
          if ((v80 & 1) == 0)
          {
            double v57 = *(double *)&v78;
LABEL_46:
            ((void (*)(char *, uint64_t))v109[1])(v110, v38);
            goto LABEL_52;
          }

void sub_1000E5028(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  __n128 v94 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v102 = (char *)&v65 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v65 - v10;
  __n128 v13 = __chkstk_darwin(v12);
  uint64_t v100 = (char *)&v65 - v14;
  uint64_t v15 = type metadata accessor for DispatchQoS.QoSClass(0LL, v13);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E34F0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))( v18,  enum case for DispatchQoS.QoSClass.utility(_:),  v15);
  uint64_t v19 = (void *)static OS_dispatch_queue.global(qos:)(v18);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_1001F8394((uint64_t)v19, a1);

  id v20 = a2;
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v96 = a1 + 56;
  uint64_t v22 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v23 = -1LL;
  int v99 = enum case for Shelf.ContentType.informationContainer(_:);
  if (v22 < 64) {
    uint64_t v23 = ~(-1LL << v22);
  }
  unint64_t v24 = v23 & v21;
  int v95 = enum case for Shelf.ContentType.reviewsContainer(_:);
  int64_t v97 = (unint64_t)(v22 + 63) >> 6;
  int v92 = enum case for Shelf.ContentType.smallLockup(_:);
  int v91 = enum case for Shelf.ContentType.mediumLockup(_:);
  int v90 = enum case for Shelf.ContentType.largeLockup(_:);
  int v89 = enum case for Shelf.ContentType.inAppPurchaseLockup(_:);
  int v88 = enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:);
  int v87 = enum case for Shelf.ContentType.action(_:);
  int v86 = enum case for Shelf.ContentType.editorialCard(_:);
  int v85 = enum case for Shelf.ContentType.videoCard(_:);
  int v84 = enum case for Shelf.ContentType.brick(_:);
  int v83 = enum case for Shelf.ContentType.categoryBrick(_:);
  int v82 = enum case for Shelf.ContentType.reviews(_:);
  int v81 = enum case for Shelf.ContentType.appTrailerLockup(_:);
  int v80 = enum case for Shelf.ContentType.framedVideo(_:);
  int v79 = enum case for Shelf.ContentType.screenshotsLockup(_:);
  int v78 = enum case for Shelf.ContentType.smallStoryCard(_:);
  int v77 = enum case for Shelf.ContentType.mediumStoryCard(_:);
  int v76 = enum case for Shelf.ContentType.largeStoryCard(_:);
  int v75 = enum case for Shelf.ContentType.largeHeroBreakout(_:);
  int v74 = enum case for Shelf.ContentType.upsellBreakout(_:);
  int v73 = enum case for Shelf.ContentType.smallBreakout(_:);
  int v72 = enum case for Shelf.ContentType.mixedMediaLockup(_:);
  int v71 = enum case for Shelf.ContentType.arcadeFooter(_:);
  int v70 = enum case for Shelf.ContentType.textCard(_:);
  int v69 = enum case for Shelf.ContentType.smallGameCenterPlayer(_:);
  int v68 = enum case for Shelf.ContentType.largeGameCenterPlayer(_:);
  int v67 = enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:);
  int v66 = enum case for Shelf.ContentType.posterLockup(_:);
  uint64_t v101 = a1;
  __n128 v25 = swift_bridgeObjectRetain(a1);
  int64_t v26 = 0LL;
  unint64_t v65 = 0x800000010024CDA0LL;
  id v98 = a2;
  while (v24)
  {
    unint64_t v27 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    unint64_t v28 = v27 | (v26 << 6);
LABEL_21:
    __n128 v32 = v100;
    uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    v33(v100, *(void *)(v101 + 48) + *(void *)(v5 + 72) * v28, v4, v25);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v32, v4);
    uint64_t v34 = v102;
    ((void (*)(char *, char *, uint64_t))v33)(v102, v11, v4);
    uint64_t v35 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
    int v36 = v35(v34, v4);
    if (v36 == v99)
    {
      uint64_t v37 = type metadata accessor for InformationContainerCollectionViewCell();
      if (v20) {
        goto LABEL_26;
      }
LABEL_4:
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    }

    else
    {
      if (v36 == v95)
      {
        uint64_t v37 = type metadata accessor for ReviewsContainerCell();
        if (!v20) {
          goto LABEL_4;
        }
LABEL_26:
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v37);
        Shelf.ContentType.string.getter(v39);
        uint64_t v41 = v40;
        NSString v42 = String._bridgeToObjectiveC()();
        uint64_t v43 = v41;
        id v20 = v98;
        objc_msgSend( v98,  "registerClass:forCellWithReuseIdentifier:",  ObjCClassFromMetadata,  v42,  swift_bridgeObjectRelease(v43).n128_f64[0]);

        goto LABEL_4;
      }

      uint64_t v44 = *(void (**)(char *, uint64_t))(v5 + 8);
      v44(v102, v4);
      uint64_t v45 = sub_1001847BC();
      if (v45)
      {
        id v20 = v98;
        if (v98)
        {
          uint64_t v93 = swift_getObjCClassFromMetadata(v45);
          Shelf.ContentType.string.getter(v46);
          uint64_t v48 = v47;
          uint64_t v49 = v44;
          NSString v50 = String._bridgeToObjectiveC()();
          uint64_t v51 = v48;
          id v20 = v98;
          *(void *)&double v52 = swift_bridgeObjectRelease(v51).n128_u64[0];
          objc_msgSend(v20, "registerClass:forCellWithReuseIdentifier:", v93, v50, v52);

          uint64_t v44 = v49;
        }

        __n128 v53 = v94;
        ((void (*)(char *, char *, uint64_t))v33)(v94, v11, v4);
        int v54 = v35(v53, v4);
        if (v54 == v92
          || v54 == v91
          || v54 == v90
          || v54 == v89
          || v54 == v88
          || v54 == v87
          || v54 == v86
          || v54 == v85
          || v54 == v84
          || v54 == v83
          || v54 == v82
          || v54 == v81
          || v54 == v80
          || v54 == v79
          || v54 == v78
          || v54 == v77
          || v54 == v76
          || v54 == v75
          || v54 == v74
          || v54 == v73
          || v54 == v72
          || v54 == v71
          || v54 == v70
          || v54 == v69
          || v54 == v68
          || v54 == v67
          || v54 == v66)
        {
          unint64_t v103 = 0LL;
          unint64_t v104 = 0xE000000000000000LL;
          char v55 = v20;
          _StringGuts.grow(_:)(32LL);
          __n128 v56 = swift_bridgeObjectRelease(v104);
          unint64_t v103 = 0xD00000000000001DLL;
          unint64_t v104 = v65;
          v57._countAndFlagsBits = Shelf.ContentType.string.getter(v56);
          object = v57._object;
          String.append(_:)(v57);
          swift_bridgeObjectRelease(object);
          v59._countAndFlagsBits = 41LL;
          v59._object = (void *)0xE100000000000000LL;
          String.append(_:)(v59);
          unint64_t v60 = v104;
          if (v55)
          {
            uint64_t v61 = type metadata accessor for HorizontalShelfContainerCell();
            uint64_t v62 = v44;
            uint64_t v63 = swift_getObjCClassFromMetadata(v61);
            NSString v64 = String._bridgeToObjectiveC()();
            objc_msgSend( v55,  "registerClass:forCellWithReuseIdentifier:",  v63,  v64,  swift_bridgeObjectRelease(v60).n128_f64[0]);

            v62(v11, v4);
            id v20 = v55;
          }

          else
          {
            v44(v11, v4);
            __n128 v25 = swift_bridgeObjectRelease(v60);
            id v20 = 0LL;
          }
        }

        else
        {
          v44(v94, v4);
          v44(v11, v4);
        }
      }

      else
      {
        v44(v11, v4);
        id v20 = v98;
      }
    }
  }

  int64_t v29 = v26 + 1;
  if (__OFADD__(v26, 1LL))
  {
    __break(1u);
    goto LABEL_64;
  }

  if (v29 >= v97) {
    goto LABEL_62;
  }
  unint64_t v30 = *(void *)(v96 + 8 * v29);
  ++v26;
  if (v30) {
    goto LABEL_20;
  }
  int64_t v26 = v29 + 1;
  if (v29 + 1 >= v97) {
    goto LABEL_62;
  }
  unint64_t v30 = *(void *)(v96 + 8 * v26);
  if (v30) {
    goto LABEL_20;
  }
  int64_t v26 = v29 + 2;
  if (v29 + 2 >= v97) {
    goto LABEL_62;
  }
  unint64_t v30 = *(void *)(v96 + 8 * v26);
  if (v30)
  {
LABEL_20:
    unint64_t v24 = (v30 - 1) & v30;
    unint64_t v28 = __clz(__rbit64(v30)) + (v26 << 6);
    goto LABEL_21;
  }

  int64_t v31 = v29 + 3;
  if (v31 >= v97)
  {
LABEL_62:
    swift_release(v101);
    return;
  }

  unint64_t v30 = *(void *)(v96 + 8 * v31);
  if (v30)
  {
    int64_t v26 = v31;
    goto LABEL_20;
  }

  while (1)
  {
    int64_t v26 = v31 + 1;
    if (__OFADD__(v31, 1LL)) {
      break;
    }
    if (v26 >= v97) {
      goto LABEL_62;
    }
    unint64_t v30 = *(void *)(v96 + 8 * v26);
    ++v31;
    if (v30) {
      goto LABEL_20;
    }
  }

LABEL_64:
  __break(1u);
}

  uint64_t v122 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v123 = v112;
  v122(v118, v114);
  [v113 setOverrideUserInterfaceStyle:v121];
}

double sub_1000E58D8(void *a1)
{
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0BF0 != -1) {
    swift_once(&qword_1002E0BF0, sub_100110BF8);
  }
  uint64_t v6 = type metadata accessor for StaticDimension(0LL);
  sub_10000A634(v6, (uint64_t)qword_1002F4570);
  id v7 = [a1 traitCollection];
  static Dimensions.defaultRoundingRule.getter(v7);
  double v8 = StaticDimension.value(compatibleWith:rounded:)(v7, v5);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

double sub_1000E59D8()
{
  uint64_t v4 = *(void *)(v0 + 24);
  swift_retain(v4);
  uint64_t v1 = sub_1000038E8((uint64_t *)&unk_1002F08B0);
  uint64_t v2 = sub_10005E7D4( (unint64_t *)&qword_1002EE390,  (uint64_t *)&unk_1002F08B0,  (uint64_t)&protocol conformance descriptor for TransientStateStore<A>);
  StateStore.performTransaction<A>(_:)(sub_1000E6AE4, v0, v1, (char *)&type metadata for () + 8, v2);
  *(void *)&double result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_1000E5A70(void *a1, void *a2)
{
  double v4 = sub_1000DB4C4(a2);
  if (a2 && (id v5 = objc_msgSend(a2, "collectionViewLayout", v4)) != 0)
  {
    uint64_t v6 = v5;
    uint64_t v7 = type metadata accessor for CollectionViewTableFlowLayout();
    uint64_t v8 = swift_dynamicCastClass(v6, v7);
    uint64_t v9 = (void *)v8;
    if (v8) {
      *(_BYTE *)(v8 + OBJC_IVAR____TtC8AppStore29CollectionViewTableFlowLayout_isSupplementaryViewAnimationEnabled) = 0;
    }
    else {
  }
    }

  else
  {
    uint64_t v9 = 0LL;
  }

  uint64_t v10 = swift_allocObject(&unk_10028B4C8, 24LL, 7LL);
  *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  uint64_t v22 = sub_1000E66F4;
  uint64_t v23 = v10;
  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256LL;
  id v20 = sub_1000C962C;
  uint64_t v21 = &unk_10028B4E0;
  uint64_t v11 = _Block_copy(&v18);
  uint64_t v12 = v23;
  id v13 = a2;
  swift_release(v12);
  uint64_t v14 = swift_allocObject(&unk_10028B518, 24LL, 7LL);
  *(void *)(v14 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  uint64_t v22 = sub_1000E671C;
  uint64_t v23 = v14;
  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256LL;
  id v20 = sub_1000C962C;
  uint64_t v21 = &unk_10028B530;
  uint64_t v15 = _Block_copy(&v18);
  uint64_t v16 = v23;
  id v17 = v9;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v11, v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);
  _Block_release(v11);
}

void sub_1000E5C10(void *a1)
{
  if (a1)
  {
    uint64_t v2 = type metadata accessor for TitleHeaderView(0LL);
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v2);
    double v4 = UICollectionElementKindSectionHeader;
    id v5 = NSStringFromClass(ObjCClassFromMetadata);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    uint64_t v7 = v6;

    NSString v8 = String._bridgeToObjectiveC()();
    objc_msgSend( a1,  "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:",  ObjCClassFromMetadata,  v4,  v8,  swift_bridgeObjectRelease(v7).n128_f64[0]);

    uint64_t v9 = type metadata accessor for InfiniteScrollFooterView();
    uint64_t v10 = (objc_class *)swift_getObjCClassFromMetadata(v9);
    uint64_t v11 = UICollectionElementKindSectionFooter;
    uint64_t v12 = NSStringFromClass(v10);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    uint64_t v14 = v13;

    id v15 = String._bridgeToObjectiveC()();
    objc_msgSend( a1,  "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:",  v10,  v11,  v15,  swift_bridgeObjectRelease(v14).n128_f64[0]);
  }

uint64_t sub_1000E5D58(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v151 = a5;
  uint64_t v152 = a2;
  uint64_t v148 = a3;
  uint64_t v7 = *v5;
  uint64_t v146 = a4;
  uint64_t v147 = v7;
  uint64_t v142 = (char *)type metadata accessor for ImpressionMetrics.ID(0LL);
  uint64_t v8 = *((void *)v142 - 1);
  __chkstk_darwin(v142);
  uint64_t v10 = (char *)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000038E8((uint64_t *)&unk_1002EEFD0);
  __chkstk_darwin(v11);
  uint64_t v13 = (void (**)(char *, char *, uint64_t))((char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v136 - v15;
  __n128 v18 = __chkstk_darwin(v17);
  id v20 = (char *)&v136 - v19;
  uint64_t v141 = type metadata accessor for ImpressionMetrics(0LL, v18);
  uint64_t v21 = *(char **)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v23 = (char *)&v136 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v140 = (char *)&v136 - v25;
  __chkstk_darwin(v26);
  unint64_t v28 = (char *)&v136 - v27;
  uint64_t v145 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v144 = *(void (***)(char *, char *, uint64_t))(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v143 = (char *)&v136 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v30);
  uint64_t v150 = (char *)&v136 - v31;
  uint64_t ObjectType = swift_getObjectType(a1);
  uint64_t v33 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerView);
  if (v33) {
    uint64_t v34 = v33;
  }
  else {
    uint64_t v34 = 0LL;
  }
  if (v33) {
    uint64_t v35 = a1;
  }
  else {
    uint64_t v35 = 0LL;
  }
  uint64_t v149 = v5;
  if (v35)
  {
    uint64_t v141 = v34;
    uint64_t v140 = v35;
    uint64_t v36 = v5[2];
    uint64_t v37 = a1;
    IndexPath.section.getter(v37);
    uint64_t v38 = v147;
    uint64_t v39 = *(void *)(v147 + 96);
    uint64_t v138 = *(void *)(v147 + 80);
    uint64_t v139 = (char *)v39;
    uint64_t v41 = dispatch thunk of ShelfPresenter.shelf(for:)(v40, v138, v39);
    uint64_t v142 = v37;
    uint64_t v42 = sub_1000DB5A0(v41, v37);
    uint64_t v43 = v5[6];
    id v44 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0LL));
    uint64_t v45 = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
    uint64_t v46 = sub_100004288( (unint64_t *)&unk_1002EE4E0,  (uint64_t (*)(uint64_t))type metadata accessor for FocusAvoidanceScrollObserver,  (uint64_t)&unk_100238880);
    CompoundScrollObserver.addChild(_:)(v43, v46);
    uint64_t v48 = v38;
    if (v42)
    {
      uint64_t v49 = type metadata accessor for ImpressionsScrollObserver(0LL, v47);
      swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
      uint64_t v50 = swift_retain_n(v42, 2LL);
      uint64_t v51 = ImpressionsScrollObserver.init(_:)(v50);
      CompoundScrollObserver.addChild(_:)(v51, &protocol witness table for ImpressionsScrollObserver);
      swift_release(v42);
      swift_release(v51);
    }

    uint64_t v52 = v36;
    uint64_t v53 = swift_unknownObjectRetain(v36);
    IndexPath.section.getter(v53);
    uint64_t v55 = v54;
    __n128 v56 = v150;
    Shelf.contentType.getter(v54);
    Swift::String v57 = v144;
    uint64_t v58 = v143;
    uint64_t v59 = v145;
    v144[2](v143, v56, v145);
    int v60 = ((uint64_t (*)(char *, uint64_t))v57[11])(v58, v59);
    BOOL v61 = v60 == enum case for Shelf.ContentType.informationContainer(_:)
       || v60 == enum case for Shelf.ContentType.reviewsContainer(_:);
    char v62 = v61;
    if (!v61) {
      ((void (*)(char *, uint64_t))v57[1])(v58, v59);
    }
    uint64_t v63 = type metadata accessor for ShelfComponentContainerDelegate(0LL, v138, *(void *)(v48 + 88), (uint64_t)v139);
    ((void (*)(char *, uint64_t))v57[1])(v150, v59);
    uint64_t v64 = v149[3];
    uint64_t v65 = swift_allocObject(v63, 72LL, 7LL);
    *(void *)(v65 + swift_unknownObjectWeakDestroy(v0 + 16) = v52;
    *(void *)(v65 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v55;
    *(_BYTE *)(v65 + 32) = v62;
    *(void *)(v65 + 40) = v64;
    *(void *)(v65 + 48) = v45;
    int v66 = (void *)v45;
    *(void *)(v65 + 56) = &protocol witness table for CompoundScrollObserver;
    *(void *)(v65 + 64) = v42;
    uint64_t v67 = swift_getObjectType(v140);
    swift_retain(v42);
    swift_retain(v64);
    id v68 = v66;
    IndexPath.section.getter(v68);
    uint64_t v70 = v69;
    uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C8F0, v63);
    uint64_t v72 = v141;
    int v73 = *(void (**)(void, void, void, void, void, void, void, void, __n128, void))(v141 + 40);
    __n128 v74 = swift_retain(v65);
    v73(v41, v70, v148, v151, v65, WitnessTable, v146, v67, v74, v72);

    swift_release(v41);
    swift_release(v42);

    return swift_release_n(v65, 2LL);
  }

  else
  {
    uint64_t v145 = (uint64_t)v20;
    uint64_t v143 = v28;
    uint64_t v146 = v16;
    uint64_t v144 = v13;
    uint64_t v137 = v10;
    uint64_t v138 = v8;
    uint64_t v139 = v23;
    uint64_t v150 = v21;
    uint64_t v76 = *(void *)(v147 + 80);
    uint64_t v77 = *(void *)(v147 + 96);
    dispatch thunk of ShelfPresenter.model(at:)(v155, v152, v76, v77);
    sub_100011C30((uint64_t)v155, (uint64_t)v154);
    v153[3] = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E49B0, &OBJC_CLASS___UICollectionViewCell_ptr);
    v153[0] = a1;
    int v78 = a1;
    tryToFetch(artworkFor:into:on:asPartOf:)(v154, v153, v148, v151);
    sub_1000077E0((uint64_t)v154, &qword_1002EBD70);
    uint64_t v79 = _s8AppStore17PillOverlayLayoutVwxx_0(v153);
    IndexPath.section.getter(v79);
    uint64_t v81 = dispatch thunk of ShelfPresenter.shelf(for:)(v80, v76, v77);
    uint64_t v152 = v78;
    uint64_t v82 = swift_getObjectType(v78);
    uint64_t v83 = swift_conformsToProtocol2(v82, &protocol descriptor for NestedModelImpressionsRecording);
    if (v83) {
      uint64_t v85 = v83;
    }
    else {
      uint64_t v85 = 0LL;
    }
    int v86 = a1;
    if (v83) {
      int v87 = a1;
    }
    else {
      int v87 = 0LL;
    }
    uint64_t v88 = v141;
    int v89 = v140;
    int v90 = v142;
    if (v87)
    {
      int v91 = v152;
      uint64_t v92 = sub_1000DB5A0(v81, v91);
      if (v92)
      {
        uint64_t v93 = v92;
        uint64_t v94 = swift_getObjectType(v87);
        dispatch thunk of NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)( v155,  v93,  v94,  v85);

        __n128 v84 = swift_release(v93);
      }

      else
      {
      }
    }

    uint64_t v95 = v145;
    Shelf.impressionMetrics.getter(v84);
    uint64_t v96 = v150;
    int64_t v97 = (unsigned int (*)(void, void, void))*((void *)v150 + 6);
    id v98 = v86;
    uint64_t v99 = v81;
    if (v97(v95, 1LL, v88) == 1)
    {
      sub_1000077E0(v95, (uint64_t *)&unk_1002EEFD0);
      uint64_t v100 = v152;
    }

    else
    {
      uint64_t v101 = v95;
      uint64_t v102 = v143;
      (*((void (**)(char *, uint64_t, uint64_t))v96 + 4))(v143, v101, v88);
      uint64_t v104 = v149[12];
      uint64_t v100 = v152;
      if (v104)
      {
        objc_msgSend(v152, "frame", swift_retain(v149[12]).n128_f64[0]);
        ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v102, 1LL);
        __n128 v103 = swift_release(v104);
      }

      (*((void (**)(char *, uint64_t, __n128))v96 + 1))(v102, v88, v103);
    }

    uint64_t v105 = v156;
    uint64_t v106 = v157;
    sub_1000112B0(v155, v156);
    uint64_t v107 = v105;
    uint64_t v108 = (uint64_t)v146;
    dispatch thunk of ViewModel.impressionMetrics.getter(v107, *(void *)(v106 + 8));
    if (v97(v108, 1LL, v88) == 1)
    {
      sub_1000077E0(v108, (uint64_t *)&unk_1002EEFD0);
    }

    else
    {
      v109.n128_f64[0] = (*((double (**)(char *, uint64_t, uint64_t))v96 + 4))(v89, v108, v88);
      uint64_t v110 = (uint64_t)v144;
      Shelf.impressionMetrics.getter(v109);
      if (v97(v110, 1LL, v88) == 1)
      {
        sub_1000077E0(v110, (uint64_t *)&unk_1002EEFD0);
        uint64_t v112 = 0LL;
        uint64_t v113 = 0LL;
      }

      else
      {
        __n128 v114 = v137;
        ImpressionMetrics.id.getter(v111);
        uint64_t v115 = (*((uint64_t (**)(uint64_t, uint64_t))v96 + 1))(v110, v88);
        uint64_t v112 = ImpressionMetrics.ID.element.getter(v115);
        uint64_t v113 = v116;
        (*(void (**)(char *, char *))(v138 + 8))(v114, v90);
      }

      uint64_t v117 = (uint64_t)v139;
      ImpressionMetrics.withParentId(_:)(v112, v113);
      __n128 v118 = swift_bridgeObjectRelease(v113);
      uint64_t v119 = v149[12];
      if (v119)
      {
        objc_msgSend(v100, "frame", swift_retain(v149[12]).n128_f64[0]);
        ImpressionsCalculator.addElement(_:at:)(v117);
        __n128 v118 = swift_release(v119);
      }

      uint64_t v120 = (void (*)(void, void, __n128))*((void *)v96 + 1);
      v120(v117, v88, v118);
      ((void (*)(char *, uint64_t))v120)(v89, v88);
    }

    uint64_t v121 = swift_getObjectType(v100);
    uint64_t v122 = swift_conformsToProtocol2(v121, &protocol descriptor for PlayableView);
    if (v122) {
      uint64_t v123 = v122;
    }
    else {
      uint64_t v123 = 0LL;
    }
    if (v122) {
      uint64_t v124 = v98;
    }
    else {
      uint64_t v124 = 0LL;
    }
    uint64_t v125 = v151;
    if (v124)
    {
      uint64_t v126 = type metadata accessor for PlaybackCoordinator(0LL);
      uint64_t v127 = v100;
      BaseObjectGraph.optional<A>(_:)(v154, v126, v126);
      uint64_t v128 = (void *)v154[0];
      if (v154[0])
      {
        uint64_t v129 = v127;
        uint64_t v127 = v128;
        dispatch thunk of PlaybackCoordinator.register(playableView:)(v124, v123);
      }
    }

    uint64_t v130 = swift_getObjectType(v100);
    uint64_t v131 = swift_conformsToProtocol2(v130, &protocol descriptor for AnyAvatarShowcaseDisplaying);
    if (v131) {
      uint64_t v132 = v131;
    }
    else {
      uint64_t v132 = 0LL;
    }
    if (v131) {
      id v133 = v98;
    }
    else {
      id v133 = 0LL;
    }
    if (v133)
    {
      uint64_t v134 = swift_getObjectType(v133);
      uint64_t v135 = v100;
      dispatch thunk of AnyAvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(v155, v125, v134, v132);
    }

    swift_release(v99);
    return _s8AppStore17PillOverlayLayoutVwxx_0(v155);
  }

uint64_t sub_1000E66D0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_1000E66F4()
{
  return [*(id *)(v0 + 16) reloadData];
}

uint64_t sub_1000E6704(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000E6714(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_1000E671C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1) {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8AppStore29CollectionViewTableFlowLayout_isSupplementaryViewAnimationEnabled) = 1;
  }
}

void sub_1000E673C()
{
}

uint64_t sub_1000E675C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000E676C()
{
  uint64_t v1 = type metadata accessor for IndexSet(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000E67E0()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for IndexSet(0LL) - 8) + 80LL);
  uint64_t v2 = *(void **)(v0 + 16);
  IndexSet._bridgeToObjectiveC()((NSIndexSet *)((v1 + 24) & ~v1));
  id v4 = v3;
  [v2 insertSections:v3];
}

uint64_t sub_1000E6840()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000E6850()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1000E6874()
{
}

uint64_t sub_1000E6894()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000E68A4()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 72LL, 7LL);
}

double sub_1000E68D8(uint64_t a1)
{
  return sub_1000E429C(a1, *(void **)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1000E68EC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

double sub_1000E6920(uint64_t a1)
{
  return sub_1000E3F68(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1000E692C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000E6950()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

double sub_1000E697C(void *a1)
{
  return sub_1000E4194(a1, *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1000E698C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000E69B0()
{
  uint64_t v1 = type metadata accessor for IndexPath(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1000E6A24(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(type metadata accessor for IndexPath(0LL) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1000E3D6C( a1,  (uint64_t)v1 + v7,  *(void *)((char *)v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8LL)),  v3,  v4,  v5);
}

void sub_1000E6A98()
{
}

uint64_t sub_1000E6AB0()
{
  return sub_1000E2BB0(*(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000E6ACC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000E6ADC(uint64_t a1)
{
  return sub_1000E2830(a1, *(id *)(v1 + 16));
}

void sub_1000E6AE4()
{
}

void sub_1000E6B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v45 = a3;
  uint64_t v7 = sub_1000038E8((uint64_t *)&unk_1002E71C0);
  __chkstk_darwin(v7);
  uint64_t v9 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = type metadata accessor for AspectRatio(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v14);
  uint64_t v16 = &v46[-v15 - 8];
  if (!a1) {
    goto LABEL_5;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)&v3[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_videoContainer] + OBJC_IVAR____TtC8AppStore18VideoViewContainer_view);
  if (!Strong) {
    goto LABEL_5;
  }
  __n128 v18 = (void *)Strong;
  swift_beginAccess(Strong + qword_1002F4848, v46, 32LL, 0LL);
  __n128 v19 = swift_retain(a1);
  VideoConfiguration.aspectRatio.getter(v19);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10) == 1)
  {
    sub_1000077E0((uint64_t)v9, (uint64_t *)&unk_1002E71C0);
    swift_endAccess(v46);

    swift_release(a1);
LABEL_5:
    if (a2)
    {
      *(void *)&double v20 = swift_retain(a2).n128_u64[0];
      id v21 = objc_msgSend(v3, "bounds", v20, v45);
      uint64_t v24 = Artwork.config(using:)(v21, v22, v23);
      uint64_t v25 = OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_artworkView;
      id v26 = *(id *)&v3[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_artworkView];
      sub_1001092E4();

      uint64_t v27 = *(void **)&v4[v25];
      uint64_t v28 = type metadata accessor for ArtworkView(0LL);
      uint64_t v29 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
      id v30 = v27;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v24, 2LL, 1LL, v30, v28, v29);
      swift_release(a2);
      swift_release(v24);
    }

    return;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v16, v9, v10);
  swift_endAccess(v46);
  id v31 = objc_msgSend(v3, "bounds", v45);
  double v33 = v32;
  double v35 = v34;
  __n128 v36 = AspectRatio.init(_:_:)(v31, v32);
  v37.n128_f64[0] = AspectRatio.horizontalFraction.getter(v36);
  if (v37.n128_f64[0] >= AspectRatio.horizontalFraction.getter(v37)) {
    double v35 = AspectRatio.height(fromWidth:)(v33);
  }
  else {
    double v33 = AspectRatio.width(fromHeight:)(v35);
  }
  uint64_t v38 = *(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8);
  uint64_t v39 = v38(v13, v10);
  uint64_t v40 = Video.preview.getter(v39);
  uint64_t v41 = Artwork.config(_:mode:prefersLayeredImage:)(2LL, 0LL, v33, v35);
  swift_release(v40);
  uint64_t v42 = type metadata accessor for VideoView(0LL);
  uint64_t v43 = sub_100004288(&qword_1002EC3E0, type metadata accessor for VideoView, (uint64_t)&unk_1002439AC);
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v41, 2LL, 1LL, v18, v42, v43);

  swift_release(v41);
  __n128 v44 = swift_release(a1);
  ((void (*)(_BYTE *, uint64_t, __n128))v38)(v16, v10, v44);
}

__n128 sub_1000E6ED0@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X4>, uint64_t a4@<X8>, double a5@<D0>)
{
  __int128 v6 = v8[3];
  *(_OWORD *)(a4 + 32) = v8[2];
  *(_OWORD *)(a4 + 48) = v6;
  *(_OWORD *)(a4 + 64) = v8[4];
  __n128 result = (__n128)v8[1];
  *(_OWORD *)a4 = v8[0];
  *(__n128 *)(a4 + swift_weakDestroy(v0 + 16) = result;
  return result;
}

uint64_t sub_1000E6F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  v36[1] = a2;
  __n128 v37 = a3;
  uint64_t v42 = a1;
  uint64_t v7 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  __chkstk_darwin(v7);
  uint64_t v39 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = type metadata accessor for LargeHeroBreakoutLayout.Metrics(0LL);
  uint64_t v13 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  __n128 v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Shelf.PresentationHints.isFirstShelf.getter(v20);
  uint64_t v21 = sub_100004288( &qword_1002E36A0,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints,  (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  char v22 = dispatch thunk of SetAlgebra.isSuperset(of:)(v19, v16, v21);
  uint64_t v23 = v16;
  uint64_t v24 = v37;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v23);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))( v12,  enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:),  v9);
  sub_10008C494((uint64_t)v12, v22 & 1, (uint64_t)v15);
  v25.n128_f64[0] = (*(double (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v26 = type metadata accessor for LargeHeroBreakoutLayout(0LL, v25);
  uint64_t v27 = sub_100004288( &qword_1002E8E48,  (uint64_t (*)(uint64_t))&type metadata accessor for LargeHeroBreakoutLayout,  (uint64_t)&protocol conformance descriptor for LargeHeroBreakoutLayout);
  double v28 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)( v15,  v24,  v26,  v27,  a5,  1.79769313e308);
  uint64_t v30 = v29;
  (*(void (**)(char *, uint64_t, double))(v13 + 8))(v15, v38, v28);
  if (qword_1002E0BE0 != -1) {
    swift_once(&qword_1002E0BE0, sub_100110BD8);
  }
  uint64_t v31 = type metadata accessor for StaticDimension(0LL);
  sub_10000A634(v31, (uint64_t)qword_1002F4540);
  id v32 = [v24 traitCollection];
  double v33 = v39;
  static Dimensions.defaultRoundingRule.getter(v32);
  double v34 = StaticDimension.value(compatibleWith:rounded:)(v32, v33);

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v33, v41);
  *(void *)a4 = 0LL;
  *(void *)(a4 + 8) = 0LL;
  *(double *)(a4 + swift_weakDestroy(v0 + 16) = v34;
  *(void *)(a4 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = 0LL;
  *(double *)(a4 + 32) = a5;
  *(void *)(a4 + 40) = v30;
  *(void *)(a4 + 48) = 0LL;
  *(void *)(a4 + 56) = 0LL;
  *(_BYTE *)(a4 + 64) = 0;
  *(void *)(a4 + 72) = v42;
  return result;
}

double sub_1000E71FC(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a5;
  uint64_t v8 = type metadata accessor for LargeHeroBreakoutLayout.Metrics(0LL);
  __n128 v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for LargeHeroBreakoutLayout(0LL, v9);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v32[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static ComponentLayoutOptions.isFirstSection.getter(v18);
  uint64_t v21 = sub_100004288( (unint64_t *)&unk_1002EEFE0,  (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions,  (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  char v22 = dispatch thunk of SetAlgebra.isSuperset(of:)(v20, v16, v21);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  uint64_t v23 = type metadata accessor for LayoutViewPlaceholder(0LL);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  uint64_t v24 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  sub_10008C494(a1, v22 & 1, (uint64_t)v11);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  uint64_t v25 = LayoutViewPlaceholder.init(representing:)(a2, a3);
  void v35[3] = v23;
  _BYTE v35[4] = &protocol witness table for LayoutViewPlaceholder;
  uint64_t v34 = 0LL;
  v35[0] = v25;
  memset(v33, 0, sizeof(v33));
  void v32[3] = v23;
  void v32[4] = &protocol witness table for LayoutViewPlaceholder;
  v32[0] = v24;
  __n128 v26 = swift_retain(v24);
  LargeHeroBreakoutLayout.init(metrics:backgroundMediaView:headerLabel:detailsView:)(v11, v35, v33, v32, v26);
  uint64_t v27 = sub_100004288( &qword_1002E8E40,  (uint64_t (*)(uint64_t))&type metadata accessor for LargeHeroBreakoutLayout,  (uint64_t)&protocol conformance descriptor for LargeHeroBreakoutLayout);
  double v28 = dispatch thunk of Measurable.measurements(fitting:in:)(v31, v12, v27, a2, a3);
  __n128 v29 = swift_release(v24);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v29);
  return v28;
}

uint64_t sub_1000E7444( uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v79 = a8;
  uint64_t v94 = a1;
  uint64_t v95 = a6;
  uint64_t v92 = (char *)a2;
  uint64_t v93 = a5;
  int v91 = a4;
  uint64_t v96 = a10;
  int v90 = a9;
  uint64_t v14 = sub_1000038E8(&qword_1002E2708);
  __chkstk_darwin(v14);
  int v89 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v88 = (char *)&v79 - v17;
  uint64_t v18 = sub_1000038E8((uint64_t *)&unk_1002E4940);
  __chkstk_darwin(v18);
  int v87 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for VideoControls(0LL);
  __chkstk_darwin(v20);
  uint64_t v83 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v82 = (char *)&v79 - v23;
  uint64_t v24 = sub_1000038E8((uint64_t *)&unk_1002E71C0);
  __chkstk_darwin(v24);
  __n128 v26 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = type metadata accessor for VideoFillMode(0LL);
  uint64_t v27 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v81 = (char *)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for VideoConfiguration(0LL);
  uint64_t v85 = *(void *)(v29 - 8);
  uint64_t v86 = v29;
  __chkstk_darwin(v29);
  __n128 v84 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  __chkstk_darwin(v31);
  double v33 = (char *)&v79 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  __n128 v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v79 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v11[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_isFeatured] = v91;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v35 + 16))(v38, a3, v34, v36);
  uint64_t v39 = &v11[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailPosition];
  swift_beginAccess(&v11[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_detailPosition], v97, 33LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v39, v38, v34);
  swift_endAccess(v97);
  [v11 setNeedsLayout];
  (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v34);
  sub_10004B5C4((uint64_t)v92, (uint64_t)v33);
  uint64_t v41 = v93;
  uint64_t v40 = v94;
  if (v93) {
    char v42 = 1;
  }
  else {
    char v42 = 2;
  }
  v33[*(int *)(v31 + 84)] = v42;
  uint64_t v92 = v33;
  sub_1000FC8E0((uint64_t)v33, v40, v41, 0LL, v95, v96);
  if (a7)
  {
    objc_msgSend( *(id *)&v11[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_artworkView],  "setHidden:",  1,  swift_retain(a7).n128_f64[0]);
    uint64_t v43 = v81;
    uint64_t v44 = (*(uint64_t (**)(char *, void, uint64_t))(v27 + 104))( v81,  enum case for VideoFillMode.scaleAspectFill(_:),  v80);
    uint64_t v45 = Video.preview.getter(v44);
    double v46 = Artwork.size.getter(v45);
    AspectRatio.init(_:_:)(v47, v46);
    swift_release(v45);
    uint64_t v48 = type metadata accessor for AspectRatio(0LL);
    uint64_t v49 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56LL))( v26,  0LL,  1LL,  v48);
    uint64_t v50 = v82;
    uint64_t v51 = Video.playbackControls.getter(v49);
    uint64_t v52 = v83;
    uint64_t v53 = Video.autoPlayPlaybackControls.getter(v51);
    char v54 = Video.canPlayFullScreen.getter(v53);
    char v55 = Video.allowsAutoPlay.getter();
    char v56 = Video.looping.getter();
    Swift::String v57 = v84;
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)( v43,  v26,  v50,  v52,  v54 & 1,  v55 & 1,  v56 & 1,  0LL,  0LL,  1);
    uint64_t v58 = type metadata accessor for VideoViewManager(0LL);
    uint64_t v59 = v96;
    int v60 = BaseObjectGraph.inject<A>(_:)(v97, v58, v58);
    uint64_t v61 = v97[0];
    char v62 = Video.playbackId.getter(v97, v60);
    uint64_t v63 = (uint64_t)v87;
    Video.videoUrl.getter(v62);
    uint64_t v64 = type metadata accessor for URL(0LL);
    uint64_t v65 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56LL))( v63,  0LL,  1LL,  v64);
    uint64_t v66 = (uint64_t)v88;
    uint64_t v67 = Video.templateMediaEvent.getter(v65);
    uint64_t v68 = (uint64_t)v89;
    Video.templateClickEvent.getter(v67);
    uint64_t v69 = type metadata accessor for VideoView(0LL);
    uint64_t v70 = sub_100004288( (unint64_t *)&qword_1002E2710,  type metadata accessor for VideoView,  (uint64_t)&unk_100241590);
    int v71 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)( v97,  v63,  v57,  v66,  v68,  v59,  v69,  v70);
    sub_1000077E0(v68, &qword_1002E2708);
    sub_1000077E0(v66, &qword_1002E2708);
    sub_1000077E0(v63, (uint64_t *)&unk_1002E4940);
    sub_1000077E0((uint64_t)v97, (uint64_t *)&unk_1002E2290);
    sub_10008C04C(v71);
    swift_release(a7);
    __n128 v72 = swift_release(v61);
    (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v57, v86, v72);
    int v73 = v90;
    __n128 v74 = &selRef_accessibilityRating;
    uint64_t v75 = (uint64_t)v92;
  }

  else
  {
    int v73 = v90;
    __n128 v74 = &selRef_accessibilityRating;
    uint64_t v75 = (uint64_t)v92;
    if (v79) {
      [*(id *)&v11[OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_artworkView] setHidden:0];
    }
  }

  if (v73) {
    id v76 = v73;
  }
  else {
    id v76 = [(id)objc_opt_self(UIColor) clearColor];
  }
  id v77 = v73;
  [v11 setBackgroundColor:v76];

  sub_10008C2F4();
  [v11 v74[66]];
  return sub_10004B64C(v75);
}

void *sub_1000E7A88(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a2;
  uint64_t v3 = type metadata accessor for PageGrid(0LL);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  __n128 v4 = __chkstk_darwin(v3);
  __int128 v6 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = type metadata accessor for Uber.AssetType(0LL, v4);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v49 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000038E8((uint64_t *)&unk_1002EE430);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000038E8(&qword_1002EE340);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v48 - v17;
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v48 - v21;
  uint64_t v23 = type metadata accessor for ProductTopLockup(0LL, v20);
  uint64_t v24 = sub_100004288( &qword_1002E8E50,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductTopLockup,  (uint64_t)&protocol conformance descriptor for ProductTopLockup);
  uint64_t v50 = a1;
  uint64_t result = ItemLayoutContext.typedModel<A>(as:)(&v55, v23, v23, v24);
  uint64_t v26 = v55;
  if (v55)
  {
    uint64_t v27 = ProductTopLockup.uber.getter(result);
    swift_release(v27);
    if (v27)
    {
      uint64_t v29 = ProductTopLockup.uber.getter(v28);
      if (v29)
      {
        uint64_t v31 = v29;
        Uber.assetType.getter(v30);
        __n128 v32 = swift_release(v31);
        double v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
        v33(v22, 0LL, 1LL, v7, v32);
      }

      else
      {
        double v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
        v33(v22, 1LL, 1LL, v7, v30);
      }

      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v18, enum case for Uber.AssetType.icon(_:), v7);
      ((void (*)(char *, void, uint64_t, uint64_t))v33)(v18, 0LL, 1LL, v7);
      uint64_t v34 = (uint64_t)&v12[*(int *)(v10 + 48)];
      sub_10000DF2C((uint64_t)v22, (uint64_t)v12, &qword_1002EE340);
      sub_10000DF2C((uint64_t)v18, v34, &qword_1002EE340);
      uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      if (v35((uint64_t)v12, 1LL, v7) == 1)
      {
        sub_1000077E0((uint64_t)v18, &qword_1002EE340);
        sub_1000077E0((uint64_t)v22, &qword_1002EE340);
        if (v35(v34, 1LL, v7) == 1)
        {
          sub_1000077E0((uint64_t)v12, &qword_1002EE340);
          goto LABEL_9;
        }
      }

      else
      {
        sub_10000DF2C((uint64_t)v12, (uint64_t)v15, &qword_1002EE340);
        if (v35(v34, 1LL, v7) != 1)
        {
          uint64_t v37 = v49;
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v49, v34, v7);
          uint64_t v38 = sub_100004288( (unint64_t *)&unk_1002EE450,  (uint64_t (*)(uint64_t))&type metadata accessor for Uber.AssetType,  (uint64_t)&protocol conformance descriptor for Uber.AssetType);
          char v39 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v37, v7, v38);
          uint64_t v40 = *(void (**)(char *, uint64_t))(v8 + 8);
          v40(v37, v7);
          sub_1000077E0((uint64_t)v18, &qword_1002EE340);
          sub_1000077E0((uint64_t)v22, &qword_1002EE340);
          v40(v15, v7);
          sub_1000077E0((uint64_t)v12, &qword_1002EE340);
          char v36 = v39 ^ 1;
          goto LABEL_14;
        }

        sub_1000077E0((uint64_t)v18, &qword_1002EE340);
        sub_1000077E0((uint64_t)v22, &qword_1002EE340);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
      }

      sub_1000077E0((uint64_t)v12, (uint64_t *)&unk_1002EE430);
      char v36 = 1;
      goto LABEL_14;
    }

uint64_t sub_1000E7F14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_10000DF2C(v3, a1, (uint64_t *)&unk_1002E1D40);
}

double sub_1000E7F70(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_1000B3388(a1, v3);
  *(void *)&double result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1000E7FCC(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for GenericPageShelfLayoutSpacingProvider()
{
  return &type metadata for GenericPageShelfLayoutSpacingProvider;
}

uint64_t sub_1000E802C@<X0>(void *a1@<X8>)
{
  if (qword_1002E0BF0 != -1) {
    swift_once(&qword_1002E0BF0, sub_100110BF8);
  }
  uint64_t v2 = type metadata accessor for StaticDimension(0LL);
  uint64_t v3 = sub_10000A634(v2, (uint64_t)qword_1002F4570);
  a1[3] = v2;
  a1[4] = &protocol witness table for StaticDimension;
  __n128 v4 = sub_10000DD7C(a1);
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(v4, v3, v2);
}

uint64_t sub_1000E80B8(uint64_t a1, uint64_t a2)
{
  return sub_1000E80E0(a1, a2, (uint64_t)&qword_1002F20D0, &OBJC_CLASS___UILayoutGuide_ptr);
}

uint64_t sub_1000E80CC(uint64_t a1, uint64_t a2)
{
  return sub_1000E80E0(a1, a2, (uint64_t)&qword_1002E8BB0, &OBJC_CLASS___NSNumber_ptr);
}

uint64_t sub_1000E80E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    unint64_t v9 = a2 & 0xC000000000000001LL;
    if ((a2 & 0xC000000000000001LL) == 0)
    {
      id v10 = *(id *)(a2 + 32);
      goto LABEL_5;
    }

    while (1)
    {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a2);
LABEL_5:
      uint64_t v11 = v10;
      a4 = (void *)sub_10000DFD4(0LL, (unint64_t *)a3, a4);
      a3 = static NSObject.== infix(_:_:)(v11, a1);

      if ((a3 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1LL;
      }

      if (v8 == 1) {
        goto LABEL_18;
      }
      if (v9) {
        break;
      }
      unint64_t v9 = 5LL;
      while (1)
      {
        unint64_t v17 = v9 - 3;
        if (__OFADD__(v9 - 4, 1LL)) {
          break;
        }
        a3 = (uint64_t)*(id *)(a2 + 8 * v9);
        char v18 = static NSObject.== infix(_:_:)(a3, a1);

        if ((v18 & 1) != 0) {
          goto LABEL_6;
        }
        ++v9;
        if (v17 == v8) {
          goto LABEL_18;
        }
      }

      __break(1u);
    }

    a3 = 1LL;
    while (1)
    {
      uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(a3, a2);
      uint64_t v14 = a3 + 1;
      if (__OFADD__(a3, 1LL)) {
        break;
      }
      uint64_t v15 = v13;
      char v16 = static NSObject.== infix(_:_:)(v13, a1);
      swift_unknownObjectRelease(v15);
      if ((v16 & 1) != 0) {
        goto LABEL_6;
      }
      ++a3;
      if (v14 == v8) {
        goto LABEL_18;
      }
    }

    __break(1u);
LABEL_20:
    if (a2 < 0) {
      uint64_t v19 = a2;
    }
    else {
      uint64_t v19 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a2);
  }

void sub_1000E8264(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType(a1);
  [a1 frame];
  double MaxX = CGRectGetMaxX(v29);
  [a2 frame];
  if (MaxX < CGRectGetMaxX(v30))
  {
    id v10 = [a1 layoutGuides];
    uint64_t v11 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002F20D0, &OBJC_CLASS___UILayoutGuide_ptr);
    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
    uint64_t v14 = (void *)v13(a3, a4);
    LOBYTE(v10) = sub_1000E80E0((uint64_t)v14, v12, (uint64_t)&qword_1002F20D0, &OBJC_CLASS___UILayoutGuide_ptr);
    swift_bridgeObjectRelease(v12);

    if ((v10 & 1) == 0)
    {
      uint64_t v15 = (void *)v13(ObjectType, a4);
      [a1 addLayoutGuide:v15];
    }

    char v16 = (void *)v13(ObjectType, a4);
    [v16 setEnabled:1];

    unint64_t v17 = (void *)v13(ObjectType, a4);
    id v18 = [v17 heightAnchor];

    id v19 = [a1 heightAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setActive:1];
    uint64_t v21 = (void *)v13(ObjectType, a4);
    id v22 = [v21 leadingAnchor];

    id v23 = [a1 trailingAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    [v24 setActive:1];
    uint64_t v25 = (void *)v13(ObjectType, a4);
    id v26 = [v25 trailingAnchor];

    id v27 = [a2 trailingAnchor];
    id v28 = [v26 constraintEqualToAnchor:v27];

    [v28 setActive:1];
  }

void sub_1000E856C(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

_BYTE *sub_1000E8574(_BYTE *result)
{
  *double result = 1;
  return result;
}

void sub_1000E8580( uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v9 = v8;
  uint64_t v13 = *a1;
  uint64_t v14 = sub_1000038E8(&qword_1002E2890);
  unint64_t v15 = sub_1000353E8();
  StateLens<A>.currentValue.getter(&v18, v14, v15);
  int v16 = v18;
  uint64_t ObjectType = swift_getObjectType(a8);
  sub_1001B89F4(v13, v16, a8, a2, a3, v9, ObjectType);
}

id sub_1000E8620(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000E8768(*a1, a2, a3);
}

uint64_t sub_1000E8628(uint64_t a1, uint64_t a2)
{
  if (!sub_1001B494C(a1, a2)) {
    return 2LL;
  }
  uint64_t v2 = sub_1000038E8(&qword_1002E2880);
  unint64_t v3 = sub_1000353E8();
  WritableStateLens<A>.updateValue(_:)(sub_1000E8574, 0LL, v2, v3);
  return 3LL;
}

uint64_t sub_1000E869C()
{
  return 0LL;
}

uint64_t sub_1000E86A8()
{
  return sub_100004288( (unint64_t *)&unk_1002E8600,  (uint64_t (*)(uint64_t))&type metadata accessor for Annotation,  (uint64_t)&protocol conformance descriptor for Annotation);
}

unint64_t sub_1000E86DC()
{
  unint64_t result = qword_1002E8EA0;
  if (!qword_1002E8EA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023CB6C, &_s5StateVN);
    atomic_store(result, (unint64_t *)&qword_1002E8EA0);
  }

  return result;
}

unint64_t sub_1000E8724()
{
  unint64_t result = qword_1002E8EA8;
  if (!qword_1002E8EA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023CB44, &_s5StateVN);
    atomic_store(result, (unint64_t *)&qword_1002E8EA8);
  }

  return result;
}

id sub_1000E8768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 v4 = v3;
  uint64_t v6 = sub_1000038E8((uint64_t *)&unk_1002E8110);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v38[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = Annotation.items.getter(v9);
  uint64_t v11 = *(void *)&v3[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems];
  *(void *)&v3[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems] = v10;
  __n128 v12 = swift_bridgeObjectRelease(v11);
  uint64_t v13 = Annotation.title.getter(v12);
  uint64_t v14 = (uint64_t *)&v3[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText];
  uint64_t v15 = *(void *)&v3[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText + 8];
  *uint64_t v14 = v13;
  v14[1] = v16;
  *(void *)&double v17 = swift_bridgeObjectRelease(v15).n128_u64[0];
  id v18 = sub_1001B6C58(v17);
  uint64_t v19 = Annotation.summary.getter(v18);
  id v20 = (uint64_t *)&v3[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary];
  uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary + 8];
  *id v20 = v19;
  v20[1] = v22;
  swift_bridgeObjectRelease(v21);
  sub_1001B6D2C();
  uint64_t v23 = sub_1000038E8(&qword_1002E2880);
  unint64_t v24 = sub_1000353E8();
  WritableStateLens<A>.currentValue.getter(v38, v23, v24);
  char v25 = v38[0];
  sub_1001B93C8();
  v4[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] = v25;
  id v27 = sub_1001B6984(v26);
  uint64_t v28 = Annotation.linkAction.getter(v27);
  if (v28)
  {
    uint64_t v29 = v28;
    v38[0] = v28;
    uint64_t v30 = type metadata accessor for Action(0LL);
    uint64_t v31 = type metadata accessor for ObjectGraph(0LL);
    uint64_t v32 = sub_100004288( (unint64_t *)&qword_1002E8120,  (uint64_t (*)(uint64_t))&type metadata accessor for Action,  (uint64_t)&protocol conformance descriptor for Action);
    ComponentModel.pairedWith<A>(objectGraph:)(a3, v30, v31, v32);
    swift_release(v29);
    uint64_t v33 = sub_1000038E8(&qword_1002E26A8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v8, 0LL, 1LL, v33);
  }

  else
  {
    uint64_t v34 = sub_1000038E8(&qword_1002E26A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56LL))(v8, 1LL, 1LL, v34);
  }

  uint64_t v35 = (uint64_t)&v4[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
  swift_beginAccess(&v4[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction], v38, 33LL, 0LL);
  sub_1000CBE54((uint64_t)v8, v35);
  swift_endAccess(v38);
  sub_1001B6EAC();
  sub_1000E89C4((uint64_t)v8);
  return [v4 setNeedsLayout];
}

uint64_t sub_1000E89C4(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E8110);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t _s5StateVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

uint64_t _s5StateVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1000E8AF0 + 4 * byte_10023CAD9[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000E8B24 + 4 * asc_10023CAD4[v4]))();
}

uint64_t sub_1000E8B24(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000E8B2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1000E8B34LL);
  }
  return result;
}

uint64_t sub_1000E8B40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1000E8B48LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1000E8B4C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000E8B54(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

int64x2_t sub_1000E8B70()
{
  qword_1002F4258 = (uint64_t)&type metadata for Double;
  unk_1002F4260 = &protocol witness table for Double;
  qword_1002F4240 = 0x403E000000000000LL;
  qword_1002F4280 = (uint64_t)&type metadata for Double;
  unk_1002F4288 = &protocol witness table for Double;
  qword_1002F4268 = 0x4032000000000000LL;
  qword_1002F42A8 = (uint64_t)&type metadata for Double;
  unk_1002F42B0 = &protocol witness table for Double;
  qword_1002F4290 = 0x4024000000000000LL;
  int64x2_t result = vdupq_n_s64(0x4046000000000000uLL);
  __asm { FMOV            V1.2D, #10.0 }

  xmmword_1002F4210 = (__int128)result;
  unk_1002F4220 = _Q1;
  xmmword_1002F4230 = _Q1;
  return result;
}

char *sub_1000E8BC4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for CornerStyle(0LL);
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  __chkstk_darwin(v9);
  uint64_t v69 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = type metadata accessor for Separator.Position(0LL);
  uint64_t v11 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Separator(0LL, v14);
  uint64_t v67 = *(void *)(v15 - 8);
  uint64_t v68 = v15;
  __chkstk_darwin(v15);
  double v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for FontUseCase(0LL, v18);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = &v4[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_itemLayoutContext];
  uint64_t v24 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v23, 1LL, 1LL, v24);
  uint64_t v25 = OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_preferredArtworkSize;
  uint64_t v26 = qword_1002E0B08;
  id v27 = v4;
  if (v26 != -1) {
    swift_once(&qword_1002E0B08, sub_1000E8B70);
  }
  *(_OWORD *)&v4[v25] = xmmword_1002F4210;
  uint64_t v28 = OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_alias;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002E06C0 != -1) {
    swift_once(&qword_1002E06C0, sub_100072C80);
  }
  uint64_t v29 = sub_10000A634(v19, (uint64_t)qword_1002F2F98);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v30(v22, v29, v19);
  *(void *)&v27[v28] = sub_100011F1C((uint64_t)v22, 1LL, 0LL, 1, 0);
  uint64_t v31 = OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_displayName;
  if (qword_1002E06C8 != -1) {
    swift_once(&qword_1002E06C8, sub_100072C98);
  }
  uint64_t v32 = sub_10000A634(v19, (uint64_t)qword_1002F2FB0);
  v30(v22, v32, v19);
  *(void *)&v27[v31] = sub_100011F1C((uint64_t)v22, 1LL, 0LL, 1, 0);
  uint64_t v33 = (CGFloat *)&v27[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_insets];
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  CGFloat *v33 = UIEdgeInsetsZero.top;
  v33[1] = left;
  _OWORD v33[2] = bottom;
  v33[3] = right;
  uint64_t v37 = OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_separatorView;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for Separator.Position.bottom(_:), v66);
  v73[3] = type metadata accessor for ZeroDimension(0LL);
  v73[4] = &protocol witness table for ZeroDimension;
  sub_10000DD7C(v73);
  static ZeroDimension.zero.getter();
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v13, v73, 0.0, 0.0);
  uint64_t v38 = (char *)objc_msgSend( objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  char v39 = &v38[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
  swift_beginAccess(&v38[OBJC_IVAR____TtC8AppStore13SeparatorView_separator], v73, 33LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v39, v17, v68);
  swift_endAccess(v73);
  *(void *)&v27[v37] = v38;
  *(void *)&v27[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_artworkView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  uint64_t v40 = (objc_class *)type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0LL);
  v72.receiver = v27;
  v72.super_class = v40;
  id v41 = (char *)objc_msgSendSuper2(&v72, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v42 = OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_artworkView;
  uint64_t v43 = *(void **)&v41[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_artworkView];
  sub_10000EA38();
  double v44 = v41;
  id v45 = v43;
  uint64_t v46 = static UIColor.placeholderBackground.getter(v45);
  ArtworkView.backgroundColor.setter(v46);

  uint64_t v47 = *(void **)&v41[v42];
  double v48 = *(double *)&v44[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_preferredArtworkSize] * 0.5;
  uint64_t v50 = v69;
  uint64_t v49 = v70;
  uint64_t v51 = v71;
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v69, enum case for CornerStyle.arc(_:), v71);
  id v52 = v47;
  ArtworkView.setCorner(radius:style:)(v50, v48);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  id v53 = [v44 contentView];
  [v53 addSubview:*(void *)&v41[v42]];

  uint64_t v54 = OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_alias;
  id v55 = *(id *)&v44[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_alias];
  char v56 = (void *)static UIColor.primaryText.getter(v55);
  [v55 setTextColor:v56];

  id v57 = [v44 contentView];
  [v57 addSubview:*(void *)&v44[v54]];

  uint64_t v58 = OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_displayName;
  id v59 = *(id *)&v44[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_displayName];
  int v60 = (void *)static UIColor.secondaryText.getter(v59);
  [v59 setTextColor:v60];

  id v61 = [v44 contentView];
  [v61 addSubview:*(void *)&v44[v58]];

  id v62 = [v44 contentView];
  objc_msgSend(v62, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  id v63 = [v44 contentView];
  id v64 = *(id *)&v44[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_separatorView];
  [v63 addSubview:v64];

  return v44;
}

void *sub_1000E91F8()
{
  __int16 v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Separator(0LL, v6);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = (objc_class *)type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0LL);
  v52.receiver = v1;
  v52.super_class = v11;
  objc_msgSendSuper2(&v52, "layoutSubviews");
  uint64_t v12 = *(char **)&v1[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_separatorView];
  [v1 bounds];
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  uint64_t v21 = &v12[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
  swift_beginAccess(&v12[OBJC_IVAR____TtC8AppStore13SeparatorView_separator], v51, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v21, v7);
  double v22 = Separator.frame(forBoundingRect:in:)(v12, v14, v16, v18, v20);
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  objc_msgSend(v12, "setFrame:", v22, v24, v26, v28);
  if (qword_1002E0B08 != -1) {
    swift_once(&qword_1002E0B08, sub_1000E8B70);
  }
  sub_1000E97E4(&xmmword_1002F4210, v41);
  uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_artworkView];
  uint64_t v43 = type metadata accessor for ArtworkView(0LL);
  double v44 = protocol witness table for UIView;
  uint64_t v42 = v29;
  uint64_t v30 = *(void **)&v1[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_alias];
  uint64_t v49 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v50 = &protocol witness table for UILabel;
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_displayName];
  uint64_t v47 = &protocol witness table for UILabel;
  double v48 = v30;
  uint64_t v46 = v49;
  id v45 = v31;
  id v32 = v29;
  id v33 = v30;
  id v34 = v31;
  id v35 = [v1 contentView];
  [v35 frame];

  *(void *)&CGFloat v36 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  SmallGameCenterPlayerLayout.placeChildren(relativeTo:in:)((uint64_t)v1, (uint64_t)v5, v36, v37, v38, v39);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_1000E9820(v41);
}

void sub_1000E94EC()
{
}

id sub_1000E9548()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000E95E4()
{
  return type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0LL);
}

uint64_t type metadata accessor for SmallGameCenterPlayerCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E8ED8;
  if (!qword_1002E8ED8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmallGameCenterPlayerCollectionViewCell);
  }
  return result;
}

void sub_1000E9628(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[2] = &unk_10023CBC8;
    void v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[5] = &unk_10023CBE0;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 472);
  }

id sub_1000E96BC()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_artworkView);
}

double sub_1000E96CC()
{
  return *(double *)(v0 + OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_preferredArtworkSize);
}

void sub_1000E96E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023CC28, a3);
  sub_1000737A8(a1, a2, a3, WitnessTable);
}

void sub_1000E972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023CC28, a3);
  sub_100073960(a1, a2, a3, WitnessTable);
}

unint64_t sub_1000E9778(uint64_t a1)
{
  unint64_t result = sub_1000E979C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000E979C()
{
  unint64_t result = qword_1002E8EE8;
  if (!qword_1002E8EE8)
  {
    uint64_t v1 = type metadata accessor for SmallGameCenterPlayerCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023CBF8, v1);
    atomic_store(result, (unint64_t *)&qword_1002E8EE8);
  }

  return result;
}

_OWORD *sub_1000E97E4(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

void *sub_1000E9820(void *a1)
{
  return a1;
}

uint64_t sub_1000E9854()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 48);
  if (v2)
  {
    uint64_t v3 = swift_retain(v2);
    dispatch thunk of DispatchWorkItem.cancel()(v3);
    swift_release(v2);
  }

  uint64_t v4 = *(void **)(v1 + 32);
  if (v4) {
    [v4 setHidden:1];
  }
  swift_release(*(void *)(v1 + 16));
  swift_release(*(void *)(v1 + 24));

  swift_release(*(void *)(v1 + 48));
  return v1;
}

double sub_1000E98C8()
{
  *(void *)&double result = swift_deallocClassInstance(v0, 56LL, 7LL).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for LoadingController()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore17LoadingController);
}

void sub_1000E9908()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for JULoadingViewController.PresentationContext(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = *(void *)(v1 + 48);
  *(void *)(v1 + 48) = 0LL;
  swift_release(v5);
  if (!*(void *)(v1 + 32))
  {
    static JULoadingViewController.PresentationContext.placeholder.getter(v6);
    id v7 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
    uint64_t v8 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v4, 0LL);
    id v9 = [v8 view];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = (void *)objc_opt_self(&OBJC_CLASS___UIScreen);
      id v12 = [v11 mainScreen];
      [v12 bounds];
      double v14 = v13;
      double v16 = v15;
      double v18 = v17;
      double v20 = v19;

      objc_msgSend(v10, "setFrame:", v14, v16, v18, v20);
      id v21 = [v11 mainScreen];
      [v21 bounds];
      double v23 = v22;
      double v25 = v24;
      double v27 = v26;
      double v29 = v28;

      id v30 = objc_msgSend(objc_allocWithZone(UIWindow), "initWithFrame:", v23, v25, v27, v29);
      type metadata accessor for Level(0LL);
      uint64_t v32 = v31;
      UIWindowLevel v41 = UIWindowLevelAlert;
      uint64_t v40 = 0x3FF0000000000000LL;
      uint64_t v33 = sub_100004288( &qword_1002E8FB8,  (uint64_t (*)(uint64_t))type metadata accessor for Level,  (uint64_t)&protocol conformance descriptor for UIWindowLevel);
      static _UIKitNumericRawRepresentable.+ infix(_:_:)(&v42, &v41, &v40, v32, v33);
      [v30 setWindowLevel:v42];
      [v30 setRootViewController:v8];
      id v34 = *(void **)(v1 + 32);
      id v35 = v30;
      if (v34)
      {
        [v34 setHidden:1];
        CGFloat v36 = *(void **)(v1 + 32);
      }

      else
      {
        CGFloat v36 = 0LL;
      }

      *(void *)(v1 + 32) = v30;
      id v37 = v30;

      CGFloat v38 = *(void **)(v1 + 32);
      if (v38) {
        [v38 setHidden:0];
      }
    }

    else
    {
      __break(1u);
    }
  }

void sub_1000E9B9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchTime(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void *)(v1 + 40);
  BOOL v13 = __OFADD__(v12, 1LL);
  uint64_t v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
  }

  else
  {
    *(void *)(v1 + 40) = v14;
    if (!*(void *)(v1 + 48))
    {
      uint64_t v15 = swift_allocObject(&unk_10028BB10, 24LL, 7LL);
      swift_weakInit(v15 + 16, v1);
      aBlock[4] = sub_1000EAD80;
      uint64_t v29 = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_100140110;
      aBlock[3] = &unk_10028BBA0;
      double v26 = _Block_copy(aBlock);
      double v27 = _swiftEmptyArrayStorage;
      uint64_t v16 = sub_100004288( (unint64_t *)&qword_1002E8BF0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      swift_retain(v15);
      uint64_t v17 = sub_1000038E8((uint64_t *)&unk_1002E34E0);
      unint64_t v18 = sub_10004899C();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v27, v17, v18, v9, v16);
      uint64_t v19 = type metadata accessor for DispatchWorkItem(0LL);
      swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
      uint64_t v20 = DispatchWorkItem.init(flags:block:)(v11, v26);
      uint64_t v21 = v29;
      swift_release(v15);
      swift_release(v21);
      unint64_t v22 = sub_1000489E8();
      double v23 = (void *)static OS_dispatch_queue.main.getter(v22);
      static DispatchTime.now()();
      + infix(_:_:)(v5, 1.0);
      double v24 = *(void (**)(char *, uint64_t))(v3 + 8);
      v24(v5, v2);
      OS_dispatch_queue.asyncAfter(deadline:execute:)(v8, v20);

      v24(v8, v2);
      uint64_t v25 = *(void *)(v1 + 48);
      *(void *)(v1 + 48) = v20;
      swift_release(v25);
    }
  }

double sub_1000E9DF4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v4 = Strong;
    sub_1000E9908();
    *(void *)&double result = swift_release(v4).n128_u64[0];
  }

  return result;
}

void sub_1000E9E48()
{
  uint64_t v1 = *(void *)(v0 + 40);
  BOOL v2 = __OFSUB__(v1, 1LL);
  uint64_t v3 = v1 - 1;
  if (v2)
  {
    __break(1u);
  }

  else
  {
    uint64_t v4 = v0;
    *(void *)(v0 + 40) = v3;
    if (!v3)
    {
      uint64_t v5 = *(void *)(v0 + 48);
      if (v5)
      {
        uint64_t v6 = swift_retain(*(void *)(v4 + 48));
        dispatch thunk of DispatchWorkItem.cancel()(v6);
        swift_release(v5);
        uint64_t v7 = *(void *)(v4 + 48);
      }

      else
      {
        uint64_t v7 = 0LL;
      }

      *(void *)(v4 + 48) = 0LL;
      swift_release(v7);
      uint64_t v8 = *(void **)(v4 + 32);
      if (v8)
      {
        [v8 setHidden:1];
        uint64_t v9 = *(void **)(v4 + 32);
      }

      else
      {
        uint64_t v9 = 0LL;
      }

      *(void *)(v4 + 32) = 0LL;

      uint64_t v10 = *(void **)(v4 + 32);
      if (v10) {
        [v10 setHidden:0];
      }
    }
  }

uint64_t sub_1000E9EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v91 = a3;
  uint64_t v83 = a1;
  uint64_t v96 = *v3;
  uint64_t v5 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v98 = *(void *)(v5 - 8);
  uint64_t v99 = v5;
  __chkstk_darwin(v5);
  int64_t v97 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v94 = type metadata accessor for AlertActionStyle(0LL);
  uint64_t v92 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v95 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for ActionMetrics(0LL);
  __chkstk_darwin(v8);
  uint64_t v93 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v89 = type metadata accessor for FlowOrigin(0LL);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v86 = v10;
  int v87 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for URL(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = __chkstk_darwin(v11);
  uint64_t v81 = v14;
  uint64_t v82 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for OSLogger(0LL, v13);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0358 != -1) {
    swift_once(&qword_1002E0358, sub_1000171F8);
  }
  uint64_t v19 = sub_10000A634(v15, (uint64_t)qword_1002F24F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  uint64_t v20 = sub_1000038E8((uint64_t *)&unk_1002E6150);
  uint64_t v21 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v22 = swift_allocObject( v20,  ((*(unsigned __int8 *)(v21 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
        + 4LL * *(void *)(v21 + 72),
          *(unsigned __int8 *)(v21 + 80) | 7LL);
  *(_OWORD *)(v22 + swift_weakDestroy(v0 + 16) = xmmword_10023CC50;
  LogMessage.init(stringLiteral:)(0xD000000000000015LL, 0x800000010024CF00LL);
  uint64_t v106 = v11;
  double v23 = (char *)sub_10000DD7C(v105);
  uint64_t v85 = v12;
  double v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v90 = a2;
  uint64_t v25 = a2;
  double v26 = v24;
  v24(v23, v25, v11);
  static LogMessage.traceableSensitive(_:)(v105);
  sub_100027424((uint64_t)v105);
  LogMessage.init(stringLiteral:)(0x3A6E6F73616572LL, 0xE700000000000000LL);
  uint64_t v27 = v83;
  swift_getErrorValue(v83, v104, &v102);
  uint64_t v29 = v102;
  uint64_t v28 = v103;
  uint64_t v106 = v103;
  id v30 = sub_10000DD7C(v105);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16LL))(v30, v29, v28);
  static LogMessage.safe(_:)(v105);
  sub_100027424((uint64_t)v105);
  Logger.error(_:)(v22, v15, &protocol witness table for OSLogger);
  __n128 v31 = swift_bridgeObjectRelease(v22);
  uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v31);
  id v33 = (id)ASKBuildTypeGetCurrent(v32);
  uint64_t v34 = sub_1000038E8(&qword_1002E38C8);
  uint64_t v35 = swift_allocObject(v34, 48LL, 7LL);
  *(_OWORD *)(v35 + swift_weakDestroy(v0 + 16) = xmmword_100236DD0;
  CGFloat v36 = (void *)ASKBuildTypeDebug;
  id v37 = (void *)ASKBuildTypeConvergence;
  *(void *)(v35 + 32) = ASKBuildTypeDebug;
  *(void *)(v35 + 40) = v37;
  type metadata accessor for BuildType(0LL);
  id v38 = v36;
  id v39 = v37;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  __n128 v41 = swift_bridgeObjectRelease(v35);
  LODWORD(v35) = ASKBuildTypeIsAnyOf(v33, isa, v41);

  uint64_t v42 = 0LL;
  uint64_t v43 = 0LL;
  uint64_t v44 = v11;
  if ((_DWORD)v35)
  {
    swift_getErrorValue(v27, v101, v100);
    uint64_t v42 = Error.localizedDescription.getter(v100[1], v100[2]);
  }

  uint64_t v80 = v43;
  uint64_t v83 = v42;
  v45._uint64_t countAndFlagsBits = 0x45525F524F525245LL;
  v45._object = (void *)0xEB00000000595254LL;
  v46._uint64_t countAndFlagsBits = 0LL;
  v46._object = (void *)0xE000000000000000LL;
  Swift::String v47 = localizedString(_:comment:)(v45, v46);
  uint64_t countAndFlagsBits = v47._countAndFlagsBits;
  object = v47._object;
  double v48 = v82;
  v26(v82, v90, v44);
  uint64_t v49 = v88;
  uint64_t v50 = v87;
  uint64_t v51 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v91, v89);
  uint64_t v52 = v85;
  uint64_t v53 = *(unsigned __int8 *)(v85 + 80);
  uint64_t v54 = (v53 + 24) & ~v53;
  uint64_t v55 = *(unsigned __int8 *)(v49 + 80);
  uint64_t v56 = (v81 + v55 + v54) & ~v55;
  uint64_t v57 = swift_allocObject(&unk_10028BB60, v56 + v86, v53 | v55 | 7);
  uint64_t v58 = v84;
  *(void *)(v57 + swift_weakDestroy(v0 + 16) = v84;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v57 + v54, v48, v44);
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v57 + v56, v50, v51);
  swift_retain(v58);
  v59._uint64_t countAndFlagsBits = 0x5F434952454E4547LL;
  v59._object = (void *)0xED0000524F525245LL;
  v60._uint64_t countAndFlagsBits = 0LL;
  v60._object = (void *)0xE000000000000000LL;
  Swift::String v61 = localizedString(_:comment:)(v59, v60);
  uint64_t v62 = sub_1000038E8(&qword_1002E3C60);
  uint64_t v63 = swift_allocObject(v62, 72LL, 7LL);
  *(_OWORD *)(v63 + swift_weakDestroy(v0 + 16) = xmmword_100237B10;
  uint64_t v64 = swift_allocObject(&unk_10028BB88, 32LL, 7LL);
  *(void *)(v64 + swift_weakDestroy(v0 + 16) = sub_1000EACF0;
  *(void *)(v64 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v57;
  uint64_t v65 = object;
  *(void *)(v63 + 32) = countAndFlagsBits;
  *(void *)(v63 + 40) = v65;
  *(void *)(v63 + 48) = 0LL;
  *(void *)(v63 + 56) = sub_10003C448;
  *(void *)(v63 + 64) = v64;
  swift_bridgeObjectRetain(v65);
  swift_retain(v57);
  uint64_t v66 = v93;
  static ActionMetrics.notInstrumented.getter(v67);
  uint64_t v68 = v95;
  (*(void (**)(char *, void, uint64_t))(v92 + 104))(v95, enum case for AlertActionStyle.normal(_:), v94);
  uint64_t v69 = type metadata accessor for AlertAction(0LL);
  swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
  uint64_t v70 = AlertAction.init(title:message:isCancelable:cancelTitle:cancelAction:buttonActions:destructiveActionIndex:style:artwork:toastDuration:presentationStyle:actionMetrics:)( v61._countAndFlagsBits,  v61._object,  v83,  v80,  1LL,  0LL,  0LL,  0LL,  v63,  0LL,  1,  v68,  0LL,  0LL,  1,  0LL,  v66);
  uint64_t v71 = v97;
  uint64_t v106 = v96;
  v105[0] = v58;
  uint64_t v72 = *(void *)(v58 + 24);
  uint64_t v74 = v98;
  uint64_t v73 = v99;
  (*(void (**)(char *, void, uint64_t))(v98 + 104))( v97,  enum case for ActionRunner.Origin.userInitiated(_:),  v99);
  swift_retain(v58);
  dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v70, v105, v71, v72);
  swift_release(v57);
  swift_bridgeObjectRelease(v65);
  __n128 v75 = swift_release(v70);
  (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v71, v73, v75);
  return sub_100027424((uint64_t)v105);
}

double sub_1000EA630(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a2;
  uint64_t v4 = type metadata accessor for FlowOrigin(0LL);
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  uint64_t v53 = *(void *)(v51 + 64);
  __chkstk_darwin(v4);
  uint64_t v50 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000038E8(&qword_1002E6600);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for URL(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v49 = *(void *)(v10 + 64);
  uint64_t v11 = v10;
  uint64_t v44 = v10;
  __n128 v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for ActionIntent(0LL, v12);
  uint64_t v55 = *(void *)(v15 - 8);
  uint64_t v47 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = v2;
  sub_1000E9B9C();
  uint64_t v18 = type metadata accessor for JSIntentDispatcher(0LL);
  uint64_t v19 = *(void *)(v2 + 24);
  uint64_t v20 = type metadata accessor for ObjectGraph(0LL);
  inject<A, B>(_:from:)(v56, v18, v19, v18, v20);
  uint64_t v46 = v56[0];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v22 = v9;
  v21(v14, a1, v9);
  uint64_t v23 = type metadata accessor for ReferrerData(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v8, 1LL, 1LL, v23);
  double v48 = v17;
  ActionIntent.init(url:isIncomingURL:referrerData:)(v14, 0LL, v8);
  uint64_t v24 = sub_100004288( &qword_1002E8FB0,  (uint64_t (*)(uint64_t))&type metadata accessor for ActionIntent,  (uint64_t)&protocol conformance descriptor for ActionIntent);
  uint64_t v45 = dispatch thunk of JSIntentDispatcher.dispatch<A>(intent:with:fileID:)( v17,  v19,  "AppStore/LoadingController.swift",  32LL,  2LL,  v15,  v24);
  uint64_t v43 = swift_allocObject(&unk_10028BB10, 24LL, 7LL);
  uint64_t v25 = v42;
  swift_weakInit(v43 + 16, v42);
  uint64_t v26 = swift_allocObject(&unk_10028BB10, 24LL, 7LL);
  swift_weakInit(v26 + 16, v25);
  v21(v14, a1, v9);
  uint64_t v28 = v50;
  uint64_t v27 = v51;
  uint64_t v29 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v54, v52);
  uint64_t v30 = v44;
  uint64_t v31 = *(unsigned __int8 *)(v44 + 80);
  uint64_t v32 = (v31 + 24) & ~v31;
  uint64_t v33 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v34 = (v49 + v33 + v32) & ~v33;
  uint64_t v35 = swift_allocObject(&unk_10028BB38, v34 + v53, v31 | v33 | 7);
  *(void *)(v35 + swift_weakDestroy(v0 + 16) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v35 + v32, v14, v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v35 + v34, v28, v29);
  unint64_t v36 = sub_1000489E8();
  swift_retain(v26);
  uint64_t v38 = static OS_dispatch_queue.main.getter(v37);
  void v56[3] = v36;
  v56[4] = &protocol witness table for OS_dispatch_queue;
  v56[0] = v38;
  uint64_t v39 = v43;
  uint64_t v40 = v45;
  Promise.then(perform:orCatchError:on:)(sub_1000EAB0C, v43, sub_1000EABC4, v35, v56);
  swift_release(v46);
  swift_release(v40);
  swift_release(v39);
  swift_release(v35);
  _s8AppStore17PillOverlayLayoutVwxx_0(v56);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v47);
  *(void *)&double result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_1000EA9C4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000EA9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a2 += 16LL;
  swift_beginAccess(a2, v15, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(a2);
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = ActionWrapper.action.getter(v8);
    sub_1000E9E48();
    v14[3] = type metadata accessor for LoadingController();
    v14[0] = v9;
    uint64_t v11 = *(void *)(v9 + 24);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))( v6,  enum case for ActionRunner.Origin.userInitiated(_:),  v3);
    swift_retain(v9);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v10, v14, v6, v11);
    __n128 v12 = swift_release(v10);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v12);
    swift_release(v9);
    return sub_100027424((uint64_t)v14);
  }

  return result;
}

uint64_t sub_1000EAB0C(uint64_t a1)
{
  return sub_1000EA9E8(a1, v1);
}

double sub_1000EAB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    uint64_t v9 = Strong;
    sub_1000E9E48();
    swift_release(v9);
  }

  swift_beginAccess(v7, &v13, 0LL, 0LL);
  uint64_t v10 = swift_weakLoadStrong(v7);
  if (v10)
  {
    uint64_t v12 = v10;
    sub_1000E9EF4(a1, a3, a4);
    *(void *)&double result = swift_release(v12).n128_u64[0];
  }

  return result;
}

double sub_1000EABC4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FlowOrigin(0LL) - 8) + 80LL);
  return sub_1000EAB14(a1, *(void *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1000EAC34()
{
  uint64_t v1 = type metadata accessor for URL(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for FlowOrigin(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1000EACF0()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FlowOrigin(0LL) - 8) + 80LL);
  return sub_1000EA630(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_1000EAD5C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

double sub_1000EAD80()
{
  return sub_1000E9DF4(v0);
}

uint64_t sub_1000EAD88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000EAD98(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000EADA0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t ObjectType = swift_getObjectType(v2);
  if (a1 < 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v9 = (objc_class *)ObjectType;
    if (a1)
    {
      uint64_t v24 = &_swiftEmptyArrayStorage;
      uint64_t v10 = v2;
      specialized ContiguousArray.reserveCapacity(_:)(a1);
      type metadata accessor for ArtworkView(0LL);
      do
      {
        uint64_t v11 = static ArtworkView.staticIconArtworkView.getter();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v12 = v24[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
        uint64_t v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
        specialized ContiguousArray._endMutation()(v13);
        --a1;
      }

      while (a1);
      uint64_t v14 = v24;
    }

    else
    {
      uint64_t v15 = v2;
      uint64_t v14 = &_swiftEmptyArrayStorage;
    }

    *(void *)&v2[OBJC_IVAR____TtC8AppStore11IconRowView_iconViews] = v14;
    uint64_t v16 = &v2[OBJC_IVAR____TtC8AppStore11IconRowView_layoutMetrics];
    uint64_t v2 = (char *)type metadata accessor for IconRowViewLayout.Metrics(0LL);
    uint64_t v4 = *((void *)v2 - 1);
    (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v16, a2, v2);

    v23.receiver = v5;
    v23.super_class = v9;
    uint64_t v5 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    [v5 setInsetsLayoutMarginsFromSafeArea:0];
    [v5 _setSafeAreaInsetsFrozen:1];
    uint64_t v3 = *(void *)&v5[OBJC_IVAR____TtC8AppStore11IconRowView_iconViews];
    if (!((unint64_t)v3 >> 62))
    {
      uint64_t v17 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      uint64_t result = swift_bridgeObjectRetain(*(void *)&v5[OBJC_IVAR____TtC8AppStore11IconRowView_iconViews]);
      if (v17) {
        goto LABEL_9;
      }
LABEL_20:

      (*(void (**)(uint64_t, char *))(v4 + 8))(a2, v2);
      swift_bridgeObjectRelease(v3);
      return (uint64_t)v5;
    }
  }

  if (v3 < 0) {
    uint64_t v22 = v3;
  }
  else {
    uint64_t v22 = v3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v3);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v22);
  uint64_t v17 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_9:
  if (v17 >= 1)
  {
    for (uint64_t i = 0LL; i != v17; ++i)
    {
      if ((v3 & 0xC000000000000001LL) != 0) {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      }
      else {
        id v20 = *(id *)(v3 + 8 * i + 32);
      }
      uint64_t v21 = v20;
      [v5 addSubview:v20];
    }

    goto LABEL_20;
  }

  __break(1u);
  return result;
}

uint64_t sub_1000EB038(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore11IconRowView_iconViews);
  if (!((unint64_t)v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(v3);
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease(v3);
  }

  if (v3 < 0) {
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore11IconRowView_iconViews);
  }
  else {
    uint64_t v10 = v3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v3);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v10);
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease(v3);
  }
LABEL_3:
  if (v4 >= 1)
  {
    unint64_t v6 = 0LL;
    unint64_t v7 = *(void *)(a1 + 16);
    do
    {
      if ((v3 & 0xC000000000000001LL) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      }
      else {
        id v8 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      [v8 setHidden:v6 >= v7];

      ++v6;
    }

    while (v4 != v6);
    return swift_bridgeObjectRelease(v3);
  }

  __break(1u);
  return result;
}

uint64_t sub_1000EB124(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = swift_getObjectType(v4);
  uint64_t v10 = type metadata accessor for AspectRatio(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  IconRowViewLayout.Metrics.iconAspectRatio.getter(v12);
  double v15 = AspectRatio.width(fromHeight:)(a4);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v16 = swift_allocObject(&unk_10028BBD8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v16 + 16, v4);
  uint64_t v17 = swift_allocObject(&unk_10028BC00, 48LL, 7LL);
  *(void *)(v17 + swift_weakDestroy(v0 + 16) = v16;
  *(double *)(v17 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v15;
  *(double *)(v17 + 32) = a4;
  *(void *)(v17 + 40) = a2;
  uint64_t v18 = swift_allocObject(&unk_10028BBD8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v18 + 16, v5);
  uint64_t v19 = swift_allocObject(&unk_10028BC28, 48LL, 7LL);
  *(void *)(v19 + swift_weakDestroy(v0 + 16) = v18;
  *(double *)(v19 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v15;
  *(double *)(v19 + 32) = a4;
  *(void *)(v19 + 40) = a2;
  v24[0] = v5;
  uint64_t v20 = sub_100004288( (unint64_t *)&unk_1002EC3D0,  type metadata accessor for IconRowView,  (uint64_t)&protocol conformance descriptor for NSObject);
  swift_retain_n(a2, 2LL);
  id v21 = v5;
  AnyHashable.init<A>(_:)(v23, v24, ObjectType, v20);
  dispatch thunk of ArtworkIconFetcher.fetchArtworkIcons(for:partialCompletion:completion:handlerKey:)( v24,  a1,  sub_1000EB9E8,  v17,  sub_1000EBA28,  v19,  v23);
  swift_release(v17);
  swift_release(v19);
  sub_10001D2F0((uint64_t)v23);
  return sub_1000077AC((uint64_t)v24);
}

void sub_1000EB31C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v33 = a3;
  uint64_t v9 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v32 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a2 += 16LL;
  swift_beginAccess(a2, v34, 0LL, 0LL);
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong) {
    return;
  }
  uint64_t v13 = Strong;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {

    return;
  }

  uint64_t v15 = OBJC_IVAR____TtC8AppStore11IconRowView_iconViews;
  swift_bridgeObjectRetain(a1);
  uint64_t v31 = a1;
  for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    uint64_t v24 = *(i - 1);
    uint64_t v25 = *i;
    uint64_t v26 = *(void *)&v13[v15];
    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0) {
        uint64_t v29 = *(void *)&v13[v15];
      }
      else {
        uint64_t v29 = v26 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_retain(*(i - 1));
      swift_bridgeObjectRetain(v26);
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v26);
      if (v25 >= v30) {
        goto LABEL_7;
      }
    }

    else
    {
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_retain(*(i - 1));
      if (v25 >= v27) {
        goto LABEL_7;
      }
    }

    uint64_t v28 = *(void *)&v13[v15];
    if ((v28 & 0xC000000000000001LL) == 0) {
      break;
    }
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v28);
LABEL_6:
    uint64_t v18 = v17;
    uint64_t v19 = Artwork.crop.getter(v17);
    uint64_t v20 = Artwork.Crop.preferredContentMode.getter(v19);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
    uint64_t v21 = Artwork.config(_:mode:prefersLayeredImage:)(v20, 0LL, a4, a5);
    uint64_t v22 = type metadata accessor for ArtworkView(0LL);
    uint64_t v23 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v21, 2LL, 1LL, v18, v22, v23);
    swift_release(v24);

    uint64_t v24 = v21;
LABEL_7:
    swift_release(v24);
    if (!--v14)
    {

      swift_bridgeObjectRelease(v31);
      return;
    }
  }

  if ((v25 & 0x8000000000000000LL) == 0)
  {
    id v17 = *(id *)(v28 + 8 * v25 + 32);
    goto LABEL_6;
  }

  __break(1u);
LABEL_22:
  __break(1u);
}

uint64_t sub_1000EB570()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v19 = type metadata accessor for LayoutRect(0LL);
  uint64_t v2 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for IconRowViewLayout.Metrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for IconRowViewLayout(0LL, v7);
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)&double v12 = __chkstk_darwin(v10).n128_u64[0];
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v20.receiver = v0;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, "layoutSubviews", v12);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))( v9,  &v0[OBJC_IVAR____TtC8AppStore11IconRowView_layoutMetrics],  v5);
  uint64_t v15 = sub_1000CA710(*(void *)&v0[OBJC_IVAR____TtC8AppStore11IconRowView_iconViews]);
  IconRowViewLayout.init(metrics:iconViews:)(v9, v15);
  __n128 v16 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  IconRowViewLayout.placeChildren(relativeTo:in:)(v0, v16);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1000EB900()
{
  return type metadata accessor for IconRowView(0LL);
}

uint64_t type metadata accessor for IconRowView(uint64_t a1)
{
  uint64_t result = qword_1002E8FF8;
  if (!qword_1002E8FF8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IconRowView);
  }
  return result;
}

uint64_t sub_1000EB944(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for IconRowViewLayout.Metrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000EB9C0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000EB9E8(uint64_t a1)
{
}

uint64_t sub_1000EB9FC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

char *sub_1000EBA2C(char a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  char v5 = a1 & 1;
  uint64_t v6 = type metadata accessor for Locale(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = &v2[OBJC_IVAR____TtC8AppStore24OnboardingViewController_primaryButtonCallback];
  uint64_t v11 = type metadata accessor for ASKBagContract(0LL);
  *(void *)uint64_t v10 = 0LL;
  *((void *)v10 + 1) = 0LL;
  double v12 = v2;
  uint64_t v13 = inject(_:from:)(v11, a2);
  LOBYTE(v11) = ASKBagContract.isArcadeSupported.getter();
  swift_release(v13);
  if ((v11 & 1) != 0) {
    uint64_t v14 = &off_100284070;
  }
  else {
    uint64_t v14 = &off_1002840B0;
  }
  uint64_t v15 = (void *)objc_opt_self(&OBJC_CLASS___OBPrivacyLinkController);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v17 = objc_msgSend(v15, "linkWithBundleIdentifiers:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  uint64_t v18 = OBJC_IVAR____TtC8AppStore24OnboardingViewController_linkController;
  *(void *)&v12[OBJC_IVAR____TtC8AppStore24OnboardingViewController_linkController] = v17;
  if (v17)
  {
    id v19 = v17;
    uint64_t v21 = static Locale.storefront.getter(v20);
    Locale.identifier.getter(v21);
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    NSString v24 = String._bridgeToObjectiveC()();
    objc_msgSend(v19, "setDisplayLanguage:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);
  }

  v12[OBJC_IVAR____TtC8AppStore24OnboardingViewController_configuration] = v5;
  uint64_t v25 = *(void **)&v12[v18];
  if (v25) {
    id v26 = [v25 view];
  }
  else {
    id v26 = 0LL;
  }
  id v27 = objc_allocWithZone((Class)type metadata accessor for SingleOnboardingView(0LL));
  uint64_t v28 = sub_1000F8C20(v26, v5);
  uint64_t v29 = (char **)&v12[OBJC_IVAR____TtC8AppStore24OnboardingViewController_onboardingView];
  *uint64_t v29 = v28;
  v29[1] = (char *)&off_10028C0F0;

  v39.receiver = v12;
  v39.super_class = ObjectType;
  uint64_t v30 = (char *)objc_msgSendSuper2(&v39, "initWithNibName:bundle:", 0, 0);
  uint64_t v31 = v30;
  uint64_t v32 = *(void **)&v30[OBJC_IVAR____TtC8AppStore24OnboardingViewController_linkController];
  if (v32)
  {
    uint64_t v33 = v30;
    id v34 = v32;
    [v33 addChildViewController:v34];
    uint64_t v35 = v33;
    [v34 didMoveToParentViewController:v35];
  }

  swift_release(a2);
  return v31;
}

void sub_1000EBDFC()
{
  uint64_t v1 = v0;
  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v12, "viewDidLoad");
  id v2 = [objc_allocWithZone(UITapGestureRecognizer) init];
  [v2 addTarget:v1 action:"menuButtonActionWithRecognizer:"];
  uint64_t v3 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
  uint64_t v4 = swift_allocObject(v3, 40LL, 7LL);
  *(_OWORD *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
  id v5 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
  id v6 = v2;
  id v7 = [v5 initWithInteger:5];
  *(void *)(v4 + 32) = v7;
  specialized Array._endMutation()(v7);
  uint64_t v8 = v4;
  sub_1000076E0();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "setAllowedPressTypes:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  id v10 = [v1 view];
  if (v10)
  {
    uint64_t v11 = v10;
    [v10 addGestureRecognizer:v6];
  }

  else
  {
    __break(1u);
  }

void sub_1000EBF94(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = *(void (**)(void *, __n128))(Strong
                                               + OBJC_IVAR____TtC8AppStore24OnboardingViewController_primaryButtonCallback);
    if (v4)
    {
      uint64_t v5 = *(void *)(Strong + OBJC_IVAR____TtC8AppStore24OnboardingViewController_primaryButtonCallback + 8);
      __n128 v6 = swift_retain(v5);
      v4(v3, v6);
      sub_10000A450((uint64_t)v4, v5);
    }
  }

uint64_t type metadata accessor for OnboardingViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore24OnboardingViewController);
}

unint64_t sub_1000EC13C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000038E8(&qword_1002E6F98);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  __n128 v6 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v7 = (uint64_t)*(v6 - 1);
    uint64_t v8 = *v6;
    swift_retain(v7);
    id v9 = v8;
    unint64_t result = sub_1000EDEE0(v7);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v12 = 8 * result;
    *(void *)(v4[6] + v12) = v7;
    *(void *)(v4[7] + v12) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    void v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000EC244(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000038E8(&qword_1002E6FD0);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000DF2C(v7, (uint64_t)&v14, &qword_1002E90B0);
    uint64_t v8 = v14;
    unint64_t result = sub_1000EE1B8(v14);
    if ((v10 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    *(void *)(v4[6] + 8 * result) = v8;
    unint64_t result = (unint64_t)sub_1000076D0(&v15, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1LL);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    void v4[2] = v13;
    v7 += 40LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000EC370(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000038E8((uint64_t *)&unk_1002EB570);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000DF2C(v7, (uint64_t)v16, &qword_1002E90E8);
    unint64_t result = sub_1000EDEB0((uint64_t)v16);
    if ((v9 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v10 = v4[6] + 40 * result;
    __int128 v11 = v16[0];
    __int128 v12 = v16[1];
    *(void *)(v10 + 32) = v17;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
    unint64_t result = (unint64_t)sub_1000076D0(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    void v4[2] = v15;
    v7 += 72LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000EC4B0(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002E9138);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }

  sub_1000038E8(&qword_1002E7008);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v25 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10000DF2C(v13, (uint64_t)v5, &qword_1002E9138);
    unint64_t result = sub_1000EE0A0((uint64_t)v5);
    if ((v16 & 1) != 0) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for IndexPath(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))( v18 + *(void *)(*(void *)(v19 - 8) + 72LL) * v17,  v5,  v19);
    *(_OWORD *)(v8[7] + 16 * v17) = *(_OWORD *)&v5[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1LL);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_12;
    }
    __int128 v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      uint64_t v23 = v25;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1000EC644(uint64_t a1)
{
  return sub_1000ECC60(a1, &qword_1002E9130);
}

unint64_t sub_1000EC650(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002E90F8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }

  sub_1000038E8(&qword_1002E6FB8);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v28 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10000DF2C(v13, (uint64_t)v5, &qword_1002E90F8);
    uint64_t v15 = *v5;
    uint64_t v16 = v5[1];
    unint64_t result = sub_1000EDF74(*v5, v16);
    if ((v18 & 1) != 0) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for AdamId(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32LL))( v21 + *(void *)(*(void *)(v22 - 8) + 72LL) * v19,  v10,  v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1LL);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_12;
    }
    __int128 v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      uint64_t v26 = v28;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1000EC7F0(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002E9110);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }

  sub_1000038E8(&qword_1002E9118);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v25 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10000DF2C(v13, (uint64_t)v5, &qword_1002E9110);
    unint64_t result = sub_1000EE2DC((uint64_t)v5);
    if ((v16 & 1) != 0) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for PageFacets.Facet(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))( v18 + *(void *)(*(void *)(v19 - 8) + 72LL) * v17,  v5,  v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v5[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1LL);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_12;
    }
    __int128 v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      uint64_t v23 = v25;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1000EC984(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002E90D8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }

  sub_1000038E8(&qword_1002E90E0);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = &v5[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v27 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10000DF2C(v13, (uint64_t)v5, &qword_1002E90D8);
    unint64_t result = sub_1000EDFD8((uint64_t)v5);
    if ((v16 & 1) != 0) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for OfferTitleType(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))( v18 + *(void *)(*(void *)(v19 - 8) + 72LL) * v17,  v5,  v19);
    uint64_t v20 = (void *)(v8[7] + 16 * v17);
    uint64_t v21 = *((void *)v10 + 1);
    *uint64_t v20 = *(void *)v10;
    v20[1] = v21;
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1LL);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_12;
    }
    __int128 v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      uint64_t v25 = v27;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1000ECB20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000038E8(&qword_1002E90B8);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000DF2C(v7, (uint64_t)&v16, &qword_1002E90C0);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_1000EDF74(v16, v17);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    unint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *unint64_t v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_1000076D0(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    void v4[2] = v15;
    v7 += 48LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000ECC54(uint64_t a1)
{
  return sub_1000ECC60(a1, &qword_1002E90F0);
}

unint64_t sub_1000ECC60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000038E8(a2);
  uint64_t v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  uint64_t v5 = (void *)v4;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }

  swift_retain(v4);
  uint64_t v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v8 = *(v7 - 2);
    uint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    swift_bridgeObjectRetain(v9);
    swift_unknownObjectRetain(v10);
    unint64_t result = sub_1000EDF74(v8, v9);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v13 = (uint64_t *)(v5[6] + 16 * result);
    *uint64_t v13 = v8;
    v13[1] = v9;
    *(void *)(v5[7] + 8 * result) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1LL);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    void v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000ECD74()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v4, qword_1002F42F0);
  sub_10000A634(v4, (uint64_t)qword_1002F42F0);
  if (qword_1002E0548 != -1) {
    swift_once(&qword_1002E0548, sub_1000726A8);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_10000A634(v6, (uint64_t)qword_1002F2B48);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v3, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  void v11[3] = v0;
  _OWORD v11[4] = &protocol witness table for FontSource;
  uint64_t v8 = sub_10000DD7C(v11);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  StaticDimension.init(_:scaledLike:)(v11, 16.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

char *sub_1000ECF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v81 = a4;
  uint64_t v76 = a3;
  uint64_t v78 = a2;
  uint64_t v75 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v79 = type metadata accessor for DividerView.Style(0LL);
  __chkstk_darwin(v79);
  uint64_t v80 = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for FontUseCase(0LL, v6);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for FontSource(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (UIFontTextStyle *)((char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v15 = OBJC_IVAR____TtC8AppStore14EmptyStateView_divider;
  id v16 = objc_allocWithZone((Class)type metadata accessor for DividerView(0LL));
  uint64_t v17 = v4;
  *(void *)&v4[v15] = objc_msgSend(v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0, v75, v76);
  *uint64_t v14 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, void, uint64_t))(v12 + 104))( v14,  enum case for FontSource.textStyle(_:),  v11);
  v85[3] = v11;
  v85[4] = &protocol witness table for FontSource;
  __int128 v18 = sub_10000DD7C(v85);
  (*(void (**)(void *, UIFontTextStyle *, uint64_t))(v12 + 16))(v18, v14, v11);
  uint64_t v19 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v85, 32.0);
  (*(void (**)(UIFontTextStyle *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v20 = &v17[OBJC_IVAR____TtC8AppStore14EmptyStateView_title];
  *(void *)uint64_t v20 = 0LL;
  *((void *)v20 + 1) = 0LL;
  uint64_t v21 = &unk_1002E9000;
  uint64_t v22 = OBJC_IVAR____TtC8AppStore14EmptyStateView_titleLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002E0548 != -1) {
    swift_once(&qword_1002E0548, sub_1000726A8);
  }
  uint64_t v23 = sub_10000A634(v7, (uint64_t)qword_1002F2B48);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v24(v10, v23, v7);
  *(void *)&v17[v22] = sub_100011F1C((uint64_t)v10, 0LL, 0LL, 1, 0);
  uint64_t v25 = &v17[OBJC_IVAR____TtC8AppStore14EmptyStateView_descriptionText];
  *(void *)uint64_t v25 = 0LL;
  *((void *)v25 + 1) = 0LL;
  uint64_t v26 = &unk_1002E9000;
  uint64_t v27 = OBJC_IVAR____TtC8AppStore14EmptyStateView_descriptionLabel;
  if (qword_1002E0760 != -1) {
    swift_once(&qword_1002E0760, sub_100072F04);
  }
  uint64_t v28 = sub_10000A634(v7, (uint64_t)qword_1002F3178);
  v24(v10, v28, v7);
  *(void *)&v17[v27] = sub_100011F1C((uint64_t)v10, 2LL, 0LL, 1, 0);
  v17[OBJC_IVAR____TtC8AppStore14EmptyStateView_hasDivider] = 0;

  v84.receiver = v17;
  v84.super_class = ObjectType;
  uint64_t v29 = (char *)objc_msgSendSuper2(&v84, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v30 = v29;
  p_ivar_lyt = &SearchResultCollectionViewCell.ivar_lyt;
  uint64_t v32 = v78;
  if (v78)
  {
    uint64_t v33 = *(void **)&v29[OBJC_IVAR____TtC8AppStore14EmptyStateView_titleLabel];
    uint64_t v34 = sub_1000038E8(&qword_1002E3738);
    uint64_t inited = swift_initStackObject(v34, v82);
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
    *(void *)(inited + 32) = NSParagraphStyleAttributeName;
    uint64_t v36 = qword_1002E08E0;
    uint64_t v37 = v30;
    id v38 = v33;
    objc_super v39 = NSParagraphStyleAttributeName;
    if (v36 != -1) {
      swift_once(&qword_1002E08E0, sub_100084EC0);
    }
    uint64_t v40 = (void *)qword_1002F3620;
    *(void *)(inited + 64) = sub_10000DFD4(0LL, &qword_1002E90A8, &OBJC_CLASS___NSParagraphStyle_ptr);
    *(void *)(inited + 40) = v40;
    id v41 = v40;
    unint64_t v42 = sub_1000EC244(inited);
    id v43 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    type metadata accessor for Key(0LL);
    sub_100004288( (unint64_t *)&qword_1002E1680,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_100236A3C);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    id v46 = objc_msgSend(v43, "initWithString:attributes:", v44, isa, swift_bridgeObjectRelease(v42).n128_f64[0]);

    [v38 setAttributedText:v46];
    uint64_t v21 = (void *)&unk_1002E9000;
    uint64_t v26 = (void *)&unk_1002E9000;
    p_ivar_lyt = (void **)(&SearchResultCollectionViewCell + 16);
  }

  else
  {
    uint64_t v47 = v29;
  }

  [v30 addSubview:*(void *)&v30[v21[12]]];
  uint64_t v48 = v26[13];
  uint64_t v49 = *(void **)&v30[v48];
  [v49 setNumberOfLines:0];
  if (v81)
  {
    uint64_t v50 = sub_1000038E8(&qword_1002E3738);
    uint64_t v51 = swift_initStackObject(v50, v83);
    *(_OWORD *)(v51 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236DD0;
    *(void *)(v51 + 32) = NSParagraphStyleAttributeName;
    uint64_t v52 = p_ivar_lyt[284];
    id v53 = v49;
    uint64_t v54 = NSParagraphStyleAttributeName;
    uint64_t v55 = (void *)qword_1002F3620;
    uint64_t v56 = sub_10000DFD4(0LL, &qword_1002E90A8, &OBJC_CLASS___NSParagraphStyle_ptr);
    *(void *)(v51 + 40) = v55;
    *(void *)(v51 + 64) = v56;
    *(void *)(v51 + 72) = NSForegroundColorAttributeName;
    uint64_t v57 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
    id v58 = v55;
    Swift::String v59 = NSForegroundColorAttributeName;
    id v60 = [v57 systemGrayColor];
    *(void *)(v51 + 104) = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
    *(void *)(v51 + 80) = v60;
    unint64_t v61 = sub_1000EC244(v51);
    id v62 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
    uint64_t v63 = v81;
    NSString v64 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v63);
    type metadata accessor for Key(0LL);
    sub_100004288( (unint64_t *)&qword_1002E1680,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_100236A3C);
    Class v65 = Dictionary._bridgeToObjectiveC()().super.isa;
    id v66 = objc_msgSend(v62, "initWithString:attributes:", v64, v65, swift_bridgeObjectRelease(v61).n128_f64[0]);

    [v53 setAttributedText:v66];
  }

  [v30 addSubview:*(void *)&v30[v48]];
  uint64_t v67 = OBJC_IVAR____TtC8AppStore14EmptyStateView_divider;
  uint64_t v68 = *(char **)&v30[OBJC_IVAR____TtC8AppStore14EmptyStateView_divider];
  [v68 setHidden:(v30[OBJC_IVAR____TtC8AppStore14EmptyStateView_hasDivider] & 1) == 0];
  if (qword_1002E1168 != -1) {
    swift_once(&qword_1002E1168, sub_1001F2578);
  }
  uint64_t v69 = sub_10000A634(v79, (uint64_t)qword_1002F5988);
  uint64_t v70 = v80;
  sub_1000EDDEC(v69, v80);
  uint64_t v71 = &v68[OBJC_IVAR____TtC8AppStore11DividerView_style];
  swift_beginAccess(&v68[OBJC_IVAR____TtC8AppStore11DividerView_style], v85, 33LL, 0LL);
  sub_1000EDE30(v70, (uint64_t)v71);
  swift_endAccess(v85);
  uint64_t v72 = &v68[OBJC_IVAR____TtC8AppStore11DividerView_separatorInset];
  __int128 v73 = *((_OWORD *)v71 + 1);
  *(_OWORD *)uint64_t v72 = *(_OWORD *)v71;
  *((_OWORD *)v72 + 1) = v73;
  [v68 setNeedsLayout];
  [v68 setNeedsLayout];
  sub_1000EDE74(v70);
  [v30 addSubview:*(void *)&v30[v67]];

  return v30;
}

void sub_1000ED734()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DividerView.Style(0LL);
  *(void *)&double v8 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v27.receiver = v1;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "layoutSubviews", v8);
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14EmptyStateView_divider];
  [v1 frame];
  double Width = CGRectGetWidth(v28);
  if (qword_1002E1168 != -1) {
    swift_once(&qword_1002E1168, sub_1001F2578);
  }
  uint64_t v13 = sub_10000A634(v7, (uint64_t)qword_1002F5988);
  uint64_t v14 = sub_1000EDDEC(v13, (uint64_t)v10);
  if (qword_1002E1158 != -1) {
    uint64_t v14 = swift_once(&qword_1002E1158, sub_1001F2520);
  }
  double v15 = floor(*(double *)&qword_1002F5968);
  static Dimensions.defaultRoundingRule.getter(v14);
  uint64_t v16 = type metadata accessor for StaticDimension(0LL);
  double v17 = AnyDimension.value(in:rounded:)(v1, v6, v16, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1000EDE74((uint64_t)v10);
  objc_msgSend(v11, "setFrame:", 0.0, 0.0, Width, v15 + v17);
  __int128 v18 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  uint64_t v19 = swift_allocObject(&unk_10028BC50, 32LL, 7LL);
  *(void *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  *(void *)(v19 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = ObjectType;
  uint64_t v20 = swift_allocObject(&unk_10028BC78, 32LL, 7LL);
  *(void *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1000EEA40;
  *(void *)(v20 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v19;
  aBlock[4] = sub_10003C448;
  uint64_t v26 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1002114EC;
  aBlock[3] = &unk_10028BC90;
  uint64_t v21 = _Block_copy(aBlock);
  uint64_t v22 = v26;
  uint64_t v23 = v1;
  swift_retain(v20);
  objc_msgSend(v18, "performWithoutAnimation:", v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 116LL, 109LL, 40LL, 1LL);
  swift_release(v19);
  swift_release(v20);
  if ((isEscapingClosureAtFileLocation & 1) != 0) {
    __break(1u);
  }
}

id sub_1000EDA1C(char *a1)
{
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *(void **)&a1[OBJC_IVAR____TtC8AppStore14EmptyStateView_titleLabel];
  objc_msgSend(a1, "bounds", v4);
  objc_msgSend(v7, "sizeThatFits:", v8, v9);
  double v11 = v10;
  double v13 = v12;
  uint64_t v14 = *(void **)&a1[OBJC_IVAR____TtC8AppStore14EmptyStateView_descriptionLabel];
  [a1 bounds];
  objc_msgSend(v14, "sizeThatFits:", v15, v16);
  double v18 = v17;
  double v20 = v19;
  double v21 = v13 + v19;
  [a1 bounds];
  CGFloat v22 = (CGRectGetWidth(v31) - v11) * 0.5;
  [a1 bounds];
  objc_msgSend(v7, "setFrame:", v22, (CGRectGetHeight(v32) - v21) * 0.5, v11, v13);
  [a1 bounds];
  double Width = CGRectGetWidth(v33);
  [v7 lastBaselineMaxY];
  double v25 = v24;
  if (qword_1002E0B10 != -1) {
    swift_once(&qword_1002E0B10, sub_1000ECD74);
  }
  uint64_t v26 = type metadata accessor for StaticDimension(0LL);
  sub_10000A634(v26, (uint64_t)qword_1002F42F0);
  id v27 = [a1 traitCollection];
  static Dimensions.defaultRoundingRule.getter(v27);
  double v28 = StaticDimension.value(compatibleWith:rounded:)(v27, v6);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return objc_msgSend(v14, "setFrame:", (Width - v18) * 0.5, v25 + v28, v18, v20);
}

uint64_t sub_1000EDD14()
{
  return type metadata accessor for EmptyStateView(0LL);
}

uint64_t type metadata accessor for EmptyStateView(uint64_t a1)
{
  uint64_t result = qword_1002E9098;
  if (!qword_1002E9098) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmptyStateView);
  }
  return result;
}

uint64_t sub_1000EDD58(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t result = type metadata accessor for StaticDimension(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = &unk_10023CD38;
    void v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[4] = &unk_10023CD38;
    void v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = &unk_10023CD50;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000EDDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DividerView.Style(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000EDE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DividerView.Style(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000EDE74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DividerView.Style(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t sub_1000EDEB0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_1000EE374(a1, v4);
}

unint64_t sub_1000EDEE0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = type metadata accessor for Artwork(0LL);
  uint64_t v5 = sub_100004288( (unint64_t *)&qword_1002E6FA0,  (uint64_t (*)(uint64_t))&type metadata accessor for Artwork,  (uint64_t)&protocol conformance descriptor for Artwork);
  uint64_t v6 = dispatch thunk of Hashable._rawHashValue(seed:)(v3, v4, v5);
  return sub_1000EE438(a1, v6);
}

unint64_t sub_1000EDF74(uint64_t a1, uint64_t a2)
{
  Swift::Int v4 = Hasher._finalize()();
  return sub_1000EE518(a1, a2, v4);
}

unint64_t sub_1000EDFD8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = type metadata accessor for OfferTitleType(0LL);
  uint64_t v6 = sub_100004288( &qword_1002E90C8,  (uint64_t (*)(uint64_t))&type metadata accessor for OfferTitleType,  (uint64_t)&protocol conformance descriptor for OfferTitleType);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1000EE694( a1,  v7,  (uint64_t (*)(uint64_t))&type metadata accessor for OfferTitleType,  &qword_1002E90D0,  (uint64_t)&protocol conformance descriptor for OfferTitleType);
}

unint64_t sub_1000EE070(uint64_t a1)
{
  uint64_t v3 = static Hasher._hash(seed:_:)(*(void *)(v1 + 40), a1);
  return sub_1000EE5F8(a1, v3);
}

unint64_t sub_1000EE0A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = type metadata accessor for IndexPath(0LL);
  uint64_t v6 = sub_100004288( &qword_1002E7010,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath,  (uint64_t)&protocol conformance descriptor for IndexPath);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1000EE694( a1,  v7,  (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath,  (unint64_t *)&qword_1002E6C48,  (uint64_t)&protocol conformance descriptor for IndexPath);
}

unint64_t sub_1000EE138(uint64_t a1)
{
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  uint64_t v4 = v3;
  Hasher.init(_seed:)(v7);
  String.hash(into:)(v7, v2, v4);
  Swift::Int v5 = Hasher._finalize()();
  swift_bridgeObjectRelease(v4);
  return sub_1000EE7C4(a1, v5);
}

unint64_t sub_1000EE1B8(uint64_t a1)
{
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  uint64_t v4 = v3;
  Hasher.init(_seed:)(v7);
  String.hash(into:)(v7, v2, v4);
  Swift::Int v5 = Hasher._finalize()();
  swift_bridgeObjectRelease(v4);
  return sub_1000EE7C4(a1, v5);
}

unint64_t sub_1000EE244(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = type metadata accessor for EditorialPageKey(0LL);
  uint64_t v6 = sub_100004288( &qword_1002E9100,  (uint64_t (*)(uint64_t))&type metadata accessor for EditorialPageKey,  (uint64_t)&protocol conformance descriptor for EditorialPageKey);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1000EE694( a1,  v7,  (uint64_t (*)(uint64_t))&type metadata accessor for EditorialPageKey,  &qword_1002E9108,  (uint64_t)&protocol conformance descriptor for EditorialPageKey);
}

unint64_t sub_1000EE2DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = type metadata accessor for PageFacets.Facet(0LL);
  uint64_t v6 = sub_100004288( &qword_1002E9120,  (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1000EE694( a1,  v7,  (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet,  &qword_1002E9128,  (uint64_t)&protocol conformance descriptor for PageFacets.Facet);
}

unint64_t sub_1000EE374(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0)
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_10001D27C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_1000077AC((uint64_t)v9);
      if ((v7 & 1) != 0) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }

    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0);
  }

  return v4;
}

unint64_t sub_1000EE438(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a1;
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0)
  {
    uint64_t v6 = v2;
    uint64_t v7 = ~v4;
    uint64_t v8 = type metadata accessor for Artwork(0LL);
    uint64_t v9 = sub_100004288( &qword_1002E2058,  (uint64_t (*)(uint64_t))&type metadata accessor for Artwork,  (uint64_t)&protocol conformance descriptor for Artwork);
    do
    {
      uint64_t v11 = *(void *)(*(void *)(v6 + 48) + 8 * v5);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(&v11, &v12, v8, v9) & 1) != 0) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v7;
    }

    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0);
  }

  return v5;
}

unint64_t sub_1000EE518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    double v10 = (void *)(v9 + 16 * v6);
    uint64_t v11 = v10[1];
    BOOL v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0LL) & 1) == 0)
    {
      uint64_t v13 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v13;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v14 = (void *)(v9 + 16 * v6);
        uint64_t v15 = v14[1];
        BOOL v16 = *v14 == a1 && v15 == a2;
      }

      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0LL) & 1) == 0);
    }
  }

  return v6;
}

unint64_t sub_1000EE5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0)
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }

  return result;
}

unint64_t sub_1000EE694( uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v6 = v5;
  uint64_t v21 = a1;
  CGFloat v22 = a3;
  uint64_t v8 = a3(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = __chkstk_darwin(v8);
  BOOL v12 = (char *)&v21 - v11;
  uint64_t v13 = -1LL << *(_BYTE *)(v6 + 32);
  unint64_t v14 = a2 & ~v13;
  if (((*(void *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v14) & 1) != 0)
  {
    uint64_t v15 = ~v13;
    uint64_t v16 = *(void *)(v9 + 72);
    double v17 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    do
    {
      v17(v12, *(void *)(v6 + 48) + v16 * v14, v8, v10);
      uint64_t v18 = sub_100004288(v23, v22, v24);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v21, v8, v18);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if ((v19 & 1) != 0) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v15;
    }

    while (((*(void *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v14) & 1) != 0);
  }

  return v14;
}

unint64_t sub_1000EE7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(void *)(*(void *)(v2 + 48) + 8 * v5));
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2LL);
      return v5;
    }

    uint64_t v13 = v11;
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0LL);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      uint64_t v15 = ~v4;
      unint64_t v5 = (v5 + 1) & v15;
      if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0)
      {
        while (1)
        {
          uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(void *)(*(void *)(v2 + 48) + 8 * v5));
          uint64_t v9 = v17;
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19) {
            break;
          }
          uint64_t v21 = v19;
          char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0LL);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v15;
            if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0) {
              continue;
            }
          }

          return v5;
        }

        goto LABEL_16;
      }
    }
  }

  return v5;
}

unint64_t sub_1000EE938(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000038E8(&qword_1002E7018);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_1000EE070(v5);
      if ((v8 & 1) != 0) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1LL);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      void v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }

    __break(1u);
LABEL_10:
    __break(1u);
  }

  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }

  return result;
}

unint64_t sub_1000EEA10(void *a1)
{
  return sub_1000EEA7C(a1, &qword_1002E6FC8);
}

uint64_t sub_1000EEA1C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id sub_1000EEA40()
{
  return sub_1000EDA1C(*(char **)(v0 + 16));
}

uint64_t sub_1000EEA48()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000EEA58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000EEA68(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_1000EEA70(void *a1)
{
  return sub_1000EEA7C(a1, &qword_1002E6F78);
}

unint64_t sub_1000EEA7C(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  if (!v2) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_1000038E8(a2);
  uint64_t v4 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v5 = a1[4];
  uint64_t v6 = (void *)a1[5];
  unint64_t result = sub_1000EE070(v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v18 = v6;
    return (unint64_t)v4;
  }

  uint64_t v9 = (void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v10 = 8 * result;
    *(void *)(v4[6] + v10) = v5;
    *(void *)(v4[7] + v10) = v6;
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1LL);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    void v4[2] = v13;
    if (!--v2) {
      goto LABEL_8;
    }
    char v14 = v9 + 2;
    uint64_t v5 = (uint64_t)*(v9 - 1);
    uint64_t v15 = *v9;
    id v16 = v6;
    unint64_t result = sub_1000EE070(v5);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if ((v17 & 1) != 0) {
      goto LABEL_7;
    }
  }

  __break(1u);
  return result;
}

void sub_1000EEB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for FontSource(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (UIFontTextStyle *)((char *)&v23[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = OBJC_IVAR____TtC8AppStore14EmptyStateView_divider;
  *(void *)&v3[v12] = objc_msgSend( objc_allocWithZone((Class)type metadata accessor for DividerView(0)),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *uint64_t v11 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, void, uint64_t))(v9 + 104))( v11,  enum case for FontSource.textStyle(_:),  v8);
  uint64_t v23[3] = v8;
  void v23[4] = &protocol witness table for FontSource;
  uint64_t v13 = sub_10000DD7C(v23);
  (*(void (**)(void *, UIFontTextStyle *, uint64_t))(v9 + 16))(v13, v11, v8);
  char v14 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v23, 32.0);
  (*(void (**)(UIFontTextStyle *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v15 = &v3[OBJC_IVAR____TtC8AppStore14EmptyStateView_title];
  void *v15 = 0LL;
  v15[1] = 0LL;
  uint64_t v16 = OBJC_IVAR____TtC8AppStore14EmptyStateView_titleLabel;
  type metadata accessor for DynamicTypeLabel(0LL);
  if (qword_1002E0548 != -1) {
    swift_once(&qword_1002E0548, sub_1000726A8);
  }
  uint64_t v17 = sub_10000A634(v4, (uint64_t)qword_1002F2B48);
  id v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  *(void *)&v3[v16] = sub_100011F1C((uint64_t)v7, 0LL, 0LL, 1, 0);
  uint64_t v19 = &v3[OBJC_IVAR____TtC8AppStore14EmptyStateView_descriptionText];
  *uint64_t v19 = 0LL;
  v19[1] = 0LL;
  uint64_t v20 = OBJC_IVAR____TtC8AppStore14EmptyStateView_descriptionLabel;
  if (qword_1002E0760 != -1) {
    swift_once(&qword_1002E0760, sub_100072F04);
  }
  uint64_t v21 = sub_10000A634(v4, (uint64_t)qword_1002F3178);
  v18(v7, v21, v4);
  *(void *)&v3[v20] = sub_100011F1C((uint64_t)v7, 2LL, 0LL, 1, 0);
  v3[OBJC_IVAR____TtC8AppStore14EmptyStateView_hasDivider] = 0;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/EmptyStateView.swift",  29LL,  2LL,  98LL,  0);
  __break(1u);
}

uint64_t sub_1000EEE1C()
{
  uint64_t v0 = type metadata accessor for TimingCurve(0LL);
  sub_10000DC04(v0, qword_1002E9140);
  *(_OWORD *)sub_10000A634(v0, (uint64_t)qword_1002E9140) = xmmword_10023CD70;
  return (*(uint64_t (**)(void))(*(void *)(v0 - 8) + 104LL))();
}

CGFloat sub_1000EEE80(uint64_t a1)
{
  return sub_1000EEEB4(1.5, a1, &xmmword_1002E9158, &xmmword_1002E9168, &qword_1002E9178);
}

CGFloat sub_1000EEE98(uint64_t a1)
{
  return sub_1000EEEB4(0.8, a1, &xmmword_1002E9188, &xmmword_1002E9198, &qword_1002E91A8);
}

CGFloat sub_1000EEEB4(CGFloat a1, uint64_t a2, _OWORD *a3, _OWORD *a4, _OWORD *a5)
{
  CGFloat result = v11.a;
  __int128 v9 = *(_OWORD *)&v11.c;
  __int128 v10 = *(_OWORD *)&v11.tx;
  *a3 = *(_OWORD *)&v11.a;
  *a4 = v9;
  *a5 = v10;
  return result;
}

void sub_1000EEF18(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 viewForKey:UITransitionContextFromViewKey];
  if (v4)
  {
    uint64_t v6 = v4;
    id v7 = [a1 viewForKey:UITransitionContextToViewKey];
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = [a1 containerView];
      id v10 = [v6 layer];
      [v10 setRasterizationScale:1.0];

      id v11 = [v6 layer];
      [v11 setShouldRasterize:1];

      [v9 bounds];
      objc_msgSend(v8, "setFrame:");
      [v8 setAlpha:0.0];
      id v12 = [v8 layer];
      [v12 setRasterizationScale:1.0];

      id v13 = [v8 layer];
      [v13 setShouldRasterize:1];

      uint64_t v48 = v9;
      [v9 insertSubview:v8 belowSubview:v6];
      if ((v2[OBJC_IVAR____TtC8AppStore13ZoomAnimation_direction] & 1) != 0)
      {
        if (qword_1002E0B20 != -1) {
          swift_once(&qword_1002E0B20, sub_1000EEE80);
        }
        char v14 = &xmmword_1002E9158;
      }

      else
      {
        if (qword_1002E0B28 != -1) {
          swift_once(&qword_1002E0B28, sub_1000EEE98);
        }
        char v14 = &xmmword_1002E9188;
      }

      uint64_t v20 = (void *)*((void *)v14 + 4);
      uint64_t v19 = (void *)*((void *)v14 + 5);
      __int128 v21 = v14[1];
      aBlocuint64_t k = *v14;
      __int128 v50 = v21;
      uint64_t v51 = v20;
      uint64_t v52 = v19;
      [v8 setTransform:&aBlock];
      char v22 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
      uint64_t v23 = swift_allocObject(&unk_10028BD58, 32LL, 7LL);
      *(void *)(v23 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
      *(void *)(v23 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v8;
      uint64_t v51 = sub_1000EF8E0;
      uint64_t v52 = (void *)v23;
      *(void *)&aBlocuint64_t k = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256LL;
      *(void *)&__int128 v50 = sub_100140110;
      *((void *)&v50 + 1) = &unk_10028BD70;
      uint64_t v24 = _Block_copy(&aBlock);
      double v25 = v52;
      id v26 = v6;
      id v27 = v8;
      swift_release(v25);
      [v22 animateWithDuration:0 delay:v24 options:0 animations:0.3 completion:0.0];
      _Block_release(v24);
      if (qword_1002E0B18 != -1) {
        swift_once(&qword_1002E0B18, sub_1000EEE1C);
      }
      uint64_t v28 = type metadata accessor for TimingCurve(0LL);
      sub_10000A634(v28, (uint64_t)qword_1002E9140);
      double v29 = TimingCurve.controlPoint1.getter();
      double v31 = v30;
      double v32 = TimingCurve.controlPoint2.getter();
      double v34 = v33;
      uint64_t v35 = (void *)swift_allocObject(&unk_10028BDA8, 40LL, 7LL);
      v35[2] = v26;
      void v35[3] = v2;
      _BYTE v35[4] = v27;
      id v36 = objc_allocWithZone(&OBJC_CLASS___UIViewPropertyAnimator);
      uint64_t v51 = sub_1000EF964;
      uint64_t v52 = v35;
      *(void *)&aBlocuint64_t k = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256LL;
      *(void *)&__int128 v50 = sub_100140110;
      *((void *)&v50 + 1) = &unk_10028BDC0;
      uint64_t v37 = _Block_copy(&aBlock);
      id v38 = v52;
      id v39 = v26;
      id v40 = v27;
      id v41 = v2;
      swift_release(v38);
      id v42 = objc_msgSend(v36, "initWithDuration:controlPoint1:controlPoint2:animations:", v37, 0.35, v29, v31, v32, v34);
      _Block_release(v37);
      id v43 = (void *)swift_allocObject(&unk_10028BDF8, 40LL, 7LL);
      v43[2] = v40;
      v43[3] = v39;
      v43[4] = a1;
      uint64_t v51 = sub_1000EF9A4;
      uint64_t v52 = v43;
      *(void *)&aBlocuint64_t k = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256LL;
      *(void *)&__int128 v50 = sub_10005E698;
      *((void *)&v50 + 1) = &unk_10028BE10;
      NSString v44 = _Block_copy(&aBlock);
      uint64_t v45 = v52;
      id v46 = v39;
      id v47 = v40;
      swift_unknownObjectRetain(a1);
      objc_msgSend(v42, "addCompletion:", v44, swift_release(v45).n128_f64[0]);
      _Block_release(v44);
      [v42 startAnimation];

      return;
    }
  }

  if (qword_1002E0348 != -1) {
    swift_once(&qword_1002E0348, sub_1000171B8);
  }
  uint64_t v15 = type metadata accessor for OSLogger(0LL, v5);
  sub_10000A634(v15, (uint64_t)qword_1002F24C8);
  uint64_t v16 = sub_1000038E8((uint64_t *)&unk_1002E6150);
  uint64_t v17 = type metadata accessor for LogMessage(0LL);
  uint64_t v18 = swift_allocObject( v16,  ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL))
        + *(void *)(*(void *)(v17 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v18 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  LogMessage.init(stringLiteral:)(0xD00000000000003BLL, 0x800000010024D140LL);
  Logger.error(_:)(v18, v15, &protocol witness table for OSLogger);
  objc_msgSend(a1, "completeTransition:", 1, swift_bridgeObjectRelease(v18).n128_f64[0]);
}

id sub_1000EF508(id a1, uint64_t a2, void *a3)
{
  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC8AppStore13ZoomAnimation_direction) & 1) != 0)
  {
    if (qword_1002E0B28 != -1) {
      swift_once(&qword_1002E0B28, sub_1000EEE98);
    }
    __n128 v5 = &xmmword_1002E9188;
  }

  else
  {
    if (qword_1002E0B20 != -1) {
      swift_once(&qword_1002E0B20, sub_1000EEE80);
    }
    __n128 v5 = &xmmword_1002E9158;
  }

  uint64_t v7 = *((void *)v5 + 4);
  uint64_t v6 = *((void *)v5 + 5);
  __int128 v8 = v5[1];
  __int128 v10 = *v5;
  __int128 v11 = v8;
  uint64_t v12 = v7;
  uint64_t v13 = v6;
  [a1 setTransform:&v10];
  __int128 v10 = 0x3FF0000000000000uLL;
  *(void *)&__int128 v11 = 0LL;
  *((void *)&v11 + 1) = 0x3FF0000000000000LL;
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  return [a3 setTransform:&v10];
}

id sub_1000EF5F0(int a1, id a2, void *a3, void *a4)
{
  id v6 = [a2 layer];
  [v6 setShouldRasterize:0];

  id v7 = [a3 layer];
  [v7 setShouldRasterize:0];

  v9[0] = 0x3FF0000000000000LL;
  v9[1] = 0LL;
  void v9[2] = 0LL;
  int64_t v9[3] = 0x3FF0000000000000LL;
  _OWORD v9[4] = 0LL;
  void v9[5] = 0LL;
  [a3 setTransform:v9];
  [a3 setAlpha:1.0];
  return [a4 completeTransition:1];
}

id sub_1000EF74C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ZoomAnimation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ZoomAnimation()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore13ZoomAnimation);
}

uint64_t storeEnumTagSinglePayload for ZoomAnimation.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1000EF7EC + 4 * byte_10023CD85[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000EF820 + 4 * byte_10023CD80[v4]))();
}

uint64_t sub_1000EF820(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000EF828(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1000EF830LL);
  }
  return result;
}

uint64_t sub_1000EF83C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1000EF844LL);
  }
  *(_BYTE *)CGFloat result = a2 + 1;
  return result;
}

uint64_t sub_1000EF848(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000EF850(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ZoomAnimation.Direction()
{
  return &type metadata for ZoomAnimation.Direction;
}

unint64_t sub_1000EF870()
{
  unint64_t result = qword_1002E91E8;
  if (!qword_1002E91E8)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023CDEC, &type metadata for ZoomAnimation.Direction);
    atomic_store(result, (unint64_t *)&qword_1002E91E8);
  }

  return result;
}

uint64_t sub_1000EF8B4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id sub_1000EF8E0()
{
  __int16 v1 = *(void **)(v0 + 24);
  [*(id *)(v0 + 16) setAlpha:0.0];
  return [v1 setAlpha:1.0];
}

uint64_t sub_1000EF918(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000EF928(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000EF930()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

id sub_1000EF964()
{
  return sub_1000EF508(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1000EF970()
{
  swift_unknownObjectRelease(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

id sub_1000EF9A4(int a1)
{
  return sub_1000EF5F0(a1, v1[2], v1[3], v1[4]);
}

void *sub_1000EF9C0()
{
  uint64_t v1 = sub_1000038E8(&qword_1002E9408);
  uint64_t inited = (_OWORD *)swift_initStackObject(v1, v20);
  int v3 = inited;
  inited[1] = xmmword_100236DD0;
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
  uint64_t v5 = OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton;
  id v6 = v4;
  if (v4) {
    goto LABEL_4;
  }
  id v6 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton);
  if (v6)
  {
    id v7 = v6;
LABEL_4:
    *((void *)v3 + 4) = v6;
    uint64_t inited = v4;
    goto LABEL_5;
  }

  *((void *)inited + 4) = 0LL;
LABEL_5:
  __int128 v8 = *(void **)(v0 + v5);
  *((void *)v3 + 5) = v8;
  specialized Array._endMutation()(inited);
  uint64_t v9 = *((void *)v3 + 4);
  if (!v9)
  {
    id v14 = v8;
    uint64_t v13 = *((void *)v3 + 5);
    if (!v13) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }

  swift_unknownObjectRetain(*((void *)v3 + 4));
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  unint64_t v11 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v10 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v11 >= v10 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1LL);
  }
  uint64_t v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
  specialized Array._endMutation()(v12);
  uint64_t v13 = *((void *)v3 + 5);
  if (v13)
  {
LABEL_11:
    uint64_t v15 = swift_unknownObjectRetain(v13);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    unint64_t v17 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v16 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v17 >= v16 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1LL);
    }
    uint64_t v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v13);
    specialized Array._endMutation()(v18);
  }

id sub_1000EFB54()
{
  uint64_t v1 = type metadata accessor for BreakoutDetails.Badge(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v27 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  id v26 = (char *)&v26 - v5;
  uint64_t v6 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for BreakoutDetails.TextAlignment(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t, __n128))(v11 + 104))( v14,  enum case for BreakoutDetails.TextAlignment.center(_:),  v10,  v12);
  uint64_t v15 = v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailTextAlignment;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailTextAlignment, v29, 33LL, 0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 40))(v15, v14, v10);
  __n128 v16 = swift_endAccess(v29);
  (*(void (**)(char *, void, uint64_t, __n128))(v7 + 104))( v9,  enum case for BreakoutDetails.BackgroundStyle.material(_:),  v6,  v16);
  uint64_t v17 = v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle, v29, 33LL, 0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v17, v9, v6);
  __n128 v18 = swift_endAccess(v29);
  uint64_t v19 = v26;
  (*(void (**)(char *, void, uint64_t, __n128))(v2 + 104))( v26,  enum case for BreakoutDetails.Badge.none(_:),  v1,  v18);
  uint64_t v20 = v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badge;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badge, v29, 0LL, 0LL);
  uint64_t v21 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v27, v20, v1);
  swift_beginAccess(v20, v28, 33LL, 0LL);
  uint64_t v22 = v20;
  uint64_t v23 = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 24))(v22, v19, v1);
  swift_endAccess(v28);
  sub_1000F1F7C(v21);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v2 + 8);
  v24(v23, v1);
  v24((char *)v21, v1);
  [*(id *)(v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel) setText:0];
  [*(id *)(v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_titleLabel) setText:0];
  return [*(id *)(v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_descriptionLabel) setText:0];
}

uint64_t sub_1000EFE0C@<X0>( double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  NSString v64 = a1;
  uint64_t v13 = type metadata accessor for FontSource(0LL);
  id v62 = *(char **)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0B68 != -1) {
    swift_once(&qword_1002E0B68, sub_1000F0B24);
  }
  uint64_t v20 = qword_1002E9290;
  uint64_t v21 = unk_1002E9298;
  sub_1000112B0(qword_1002E9278, qword_1002E9290);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v20, v21);
  double v22 = AnyDimension.value(in:rounded:)(a2, v19, v20, v21);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v17 + 8);
  v23(v19, v16);
  double v24 = v22 / 1.0735;
  if (qword_1002E0B60 != -1) {
    swift_once(&qword_1002E0B60, sub_1000F09D4);
  }
  uint64_t v25 = type metadata accessor for StaticDimension(0LL);
  uint64_t v68 = v25;
  uint64_t v26 = sub_10000A634(v25, (uint64_t)qword_1002E9260);
  static Dimensions.defaultRoundingRule.getter(v26);
  double v27 = AnyDimension.value(in:rounded:)(a2, v19, v25, &protocol witness table for StaticDimension);
  v23(v19, v16);
  uint64_t v28 = v64;
  int v29 = *(unsigned __int8 *)v64;
  int v63 = v29;
  double v30 = (v27 - v27 / 1.0735) * 0.5;
  double v31 = (v22 - v24) * 0.5;
  if ((v29 & 1) != 0)
  {
    a6 = v30 + a6;
    double v32 = a5;
  }

  else
  {
    double v32 = v31 + a5;
  }

  if ((v29 & 1) == 0) {
    double v30 = v31;
  }
  double v33 = v30 + v64[1];
  objc_super v84 = &type metadata for CGFloat;
  uint64_t v85 = &protocol witness table for CGFloat;
  *(double *)&__int128 v83 = v33;
  double v34 = (int *)type metadata accessor for BreakoutDetailsView.Config(0LL);
  double v35 = *(double *)((char *)v28 + v34[16]);
  id v36 = (char *)v28 + v34[11];
  uint64_t v67 = type metadata accessor for FontUseCase(0LL, v37);
  id v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16LL);
  v38(v15, v36, v67);
  id v60 = v38;
  unsigned int v66 = enum case for FontSource.useCase(_:);
  id v39 = v62;
  unint64_t v61 = (void (*)(char *))*((void *)v62 + 13);
  v61(v15);
  uint64_t v40 = v68;
  uint64_t v81 = v68;
  uint64_t v82 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v80);
  uint64_t v78 = v13;
  uint64_t v79 = &protocol witness table for FontSource;
  id v41 = sub_10000DD7C(&v77);
  Class v65 = (void (*)(void *, char *, uint64_t))*((void *)v39 + 2);
  v65(v41, v15, v13);
  StaticDimension.init(_:scaledLike:)(&v77, v35);
  id v42 = (void (*)(char *, uint64_t))*((void *)v39 + 1);
  v42(v15, v13);
  uint64_t v69 = v34;
  double v43 = *(double *)((char *)v28 + v34[17]);
  id v62 = (char *)v28 + v34[12];
  uint64_t v44 = v67;
  ((void (*)(char *))v38)(v15);
  uint64_t v45 = v66;
  id v46 = (void (*)(char *, uint64_t, uint64_t))v61;
  ((void (*)(char *, void, uint64_t))v61)(v15, v66, v13);
  uint64_t v78 = v40;
  uint64_t v79 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v77);
  uint64_t v75 = v13;
  uint64_t v76 = &protocol witness table for FontSource;
  id v47 = sub_10000DD7C(&v74);
  uint64_t v48 = v65;
  v65(v47, v15, v13);
  StaticDimension.init(_:scaledLike:)(&v74, v43);
  v42(v15, v13);
  double v49 = *(double *)((char *)v28 + v69[18]);
  uint64_t v50 = v44;
  uint64_t v51 = v60;
  v60(v15, v62, v50);
  v46(v15, v45, v13);
  uint64_t v52 = v68;
  uint64_t v75 = v68;
  uint64_t v76 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v74);
  uint64_t v72 = v13;
  __int128 v73 = &protocol witness table for FontSource;
  id v53 = sub_10000DD7C(&v71);
  v48(v53, v15, v13);
  StaticDimension.init(_:scaledLike:)(&v71, v49);
  v42(v15, v13);
  double v54 = *(double *)((char *)v28 + v69[15]);
  uint64_t v55 = v69;
  v51(v15, (char *)v28 + v69[10], v67);
  v46(v15, v66, v13);
  uint64_t v72 = v52;
  __int128 v73 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v71);
  v70[3] = v13;
  v70[4] = &protocol witness table for FontSource;
  uint64_t v56 = sub_10000DD7C(v70);
  v65(v56, v15, v13);
  StaticDimension.init(_:scaledLike:)(v70, v54);
  v42(v15, v13);
  uint64_t v57 = *(void *)((char *)v28 + v55[14]);
  *(void *)(a3 + 232) = &type metadata for CGFloat;
  *(void *)(a3 + 240) = &protocol witness table for CGFloat;
  *(void *)(a3 + 208) = v57;
  *(void *)(a3 + 272) = &type metadata for CGFloat;
  *(void *)(a3 + 280) = &protocol witness table for CGFloat;
  *(double *)(a3 + 248) = v27 / 1.0735;
  *(void *)(a3 + 312) = &type metadata for CGFloat;
  *(void *)(a3 + 320) = &protocol witness table for CGFloat;
  *(double *)(a3 + 288) = v24;
  *(_BYTE *)a3 = v63;
  sub_1000243BC(&v83, a3 + 8);
  sub_1000243BC(&v80, a3 + 48);
  sub_1000243BC(&v77, a3 + 88);
  sub_1000243BC(&v74, a3 + 128);
  uint64_t result = sub_1000243BC(&v71, a3 + 168);
  *(double *)(a3 + 328) = a4;
  *(double *)(a3 + 336) = v32;
  *(double *)(a3 + 344) = a6;
  *(double *)(a3 + 352) = a7;
  return result;
}

uint64_t sub_1000F0404(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - v10;
  __n128 v12 = (int *)type metadata accessor for BreakoutDetailsView.Config(0LL);
  sub_10000DC04((uint64_t)v12, qword_1002F4320);
  uint64_t v13 = sub_10000A634((uint64_t)v12, (uint64_t)qword_1002F4320);
  if (qword_1002E07A0 != -1) {
    swift_once(&qword_1002E07A0, sub_100072FC4);
  }
  uint64_t v14 = sub_10000A634(v2, (uint64_t)qword_1002F3238);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v15(v11, v14, v2);
  if (qword_1002E07A8 != -1) {
    swift_once(&qword_1002E07A8, sub_100072FE0);
  }
  uint64_t v16 = sub_10000A634(v2, (uint64_t)qword_1002F3250);
  v15(v8, v16, v2);
  if (qword_1002E07B0 != -1) {
    swift_once(&qword_1002E07B0, sub_100072FFC);
  }
  uint64_t v17 = sub_10000A634(v2, (uint64_t)qword_1002F3268);
  v15(v5, v17, v2);
  *(void *)(v13 + 40) = 0LL;
  *(_BYTE *)uint64_t v13 = 0;
  *(void *)(v13 + 8) = 0x403E000000000000LL;
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v18(v13 + v12[10], v11, v2);
  v18(v13 + v12[11], v8, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v13 + v12[12], v5, v2);
  *(void *)(v13 + v12[13]) = 0x4032000000000000LL;
  *(void *)(v13 + v12[14]) = 0x403E000000000000LL;
  *(void *)(v13 + v12[15]) = 0x4048000000000000LL;
  *(void *)(v13 + v12[16]) = 0x4043800000000000LL;
  *(void *)(v13 + v12[17]) = 0x4042800000000000LL;
  *(void *)(v13 + v12[18]) = 0x4047000000000000LL;
  *(void *)(v13 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = 0LL;
  *(void *)(v13 + 32) = 0LL;
  *(void *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(_BYTE *)(v13 + v12[21]) = 2;
  *(void *)(v13 + v12[19]) = 1LL;
  *(void *)(v13 + v12[20]) = 2LL;
  return result;
}

uint64_t sub_1000F0674(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - v10;
  __n128 v12 = (int *)type metadata accessor for BreakoutDetailsView.Config(0LL);
  sub_10000DC04((uint64_t)v12, qword_1002F4338);
  uint64_t v13 = sub_10000A634((uint64_t)v12, (uint64_t)qword_1002F4338);
  if (qword_1002E07B8 != -1) {
    swift_once(&qword_1002E07B8, sub_100073014);
  }
  uint64_t v14 = sub_10000A634(v2, (uint64_t)qword_1002F3280);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v15(v11, v14, v2);
  if (qword_1002E07C0 != -1) {
    swift_once(&qword_1002E07C0, sub_100073030);
  }
  uint64_t v16 = sub_10000A634(v2, (uint64_t)qword_1002F3298);
  v15(v8, v16, v2);
  if (qword_1002E07C8 != -1) {
    swift_once(&qword_1002E07C8, sub_10007304C);
  }
  uint64_t v17 = sub_10000A634(v2, (uint64_t)qword_1002F32B0);
  v15(v5, v17, v2);
  *(void *)(v13 + 40) = 0LL;
  *(_BYTE *)uint64_t v13 = 1;
  *(void *)(v13 + 8) = 0x4044000000000000LL;
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v18(v13 + v12[10], v11, v2);
  v18(v13 + v12[11], v8, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v13 + v12[12], v5, v2);
  *(void *)(v13 + v12[13]) = 0x4032000000000000LL;
  *(void *)(v13 + v12[14]) = 0x4041800000000000LL;
  *(void *)(v13 + v12[15]) = 0x404B000000000000LL;
  *(void *)(v13 + v12[16]) = 0x4050800000000000LL;
  *(void *)(v13 + v12[17]) = 0x4050800000000000LL;
  *(void *)(v13 + v12[18]) = 0LL;
  *(void *)(v13 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = 0LL;
  *(void *)(v13 + 32) = 0LL;
  *(void *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(_BYTE *)(v13 + v12[21]) = 2;
  *(void *)(v13 + v12[19]) = 2LL;
  *(void *)(v13 + v12[20]) = 4LL;
  return result;
}

uint64_t sub_1000F08E4(uint64_t a1)
{
  return sub_1000F090C(a1, qword_1002E91F0, 0LL, 2LL);
}

uint64_t sub_1000F08F8(uint64_t a1)
{
  return sub_1000F090C(a1, qword_1002E9208, 2LL, 0LL);
}

uint64_t sub_1000F090C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000038E8(&qword_1002EBC60);
  sub_10000DC04(v7, a2);
  sub_10000A634(v7, (uint64_t)a2);
  uint64_t v11 = a4;
  uint64_t v12 = a3;
  uint64_t v8 = sub_1000038E8(&qword_1002E1E40);
  type metadata accessor for NSTextAlignment(0LL);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v12, &v11, v8, v9);
}

double sub_1000F099C()
{
  double result = 0.0;
  xmmword_1002E9220 = xmmword_10023CE20;
  *(_OWORD *)&qword_1002E9230 = xmmword_10023CE20;
  return result;
}

double sub_1000F09B4()
{
  double result = 0.0;
  xmmword_1002E9240 = xmmword_10023CE30;
  *(_OWORD *)&qword_1002E9250 = xmmword_10023CE40;
  return result;
}

uint64_t sub_1000F09D4()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for StaticDimension(0LL);
  sub_10000DC04(v4, qword_1002E9260);
  sub_10000A634(v4, (uint64_t)qword_1002E9260);
  if (qword_1002E07D0 != -1) {
    swift_once(&qword_1002E07D0, sub_100073064);
  }
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v7 = sub_10000A634(v6, (uint64_t)qword_1002F32C8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v3, v7, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  void v11[3] = v0;
  _OWORD v11[4] = &protocol witness table for FontSource;
  uint64_t v8 = sub_10000DD7C(v11);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v8, v3, v0);
  StaticDimension.init(_:scaledLike:)(v11, 88.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1000F0B24()
{
  qword_1002E9290 = (uint64_t)&type metadata for Double;
  unk_1002E9298 = &protocol witness table for Double;
  qword_1002E9278 = 0x407A400000000000LL;
}

char *sub_1000F0B50(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v1);
  uint64_t v5 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  *(void *)&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView] = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton] = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton] = 0LL;
  uint64_t v9 = &v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailTextAlignment];
  uint64_t v10 = enum case for BreakoutDetails.TextAlignment.leading(_:);
  uint64_t v11 = type metadata accessor for BreakoutDetails.TextAlignment(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104LL))(v9, v10, v11);
  LODWORD(v9) = enum case for BreakoutDetails.BackgroundStyle.material(_:);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))( &v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle],  enum case for BreakoutDetails.BackgroundStyle.material(_:),  v5);
  uint64_t v12 = &v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badge];
  uint64_t v13 = enum case for BreakoutDetails.Badge.none(_:);
  uint64_t v14 = type metadata accessor for BreakoutDetails.Badge(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104LL))(v12, v13, v14);
  uint64_t v36 = a1;
  sub_10004B5C4(a1, (uint64_t)&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_config]);
  uint64_t v15 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v15);
  id v17 = objc_allocWithZone(ObjCClassFromMetadata);
  uint64_t v18 = v2;
  id v19 = [v17 init];
  *(void *)&v18[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel] = v19;
  id v20 = [objc_allocWithZone(ObjCClassFromMetadata) init];
  *(void *)&v18[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_titleLabel] = v20;
  id v21 = [objc_allocWithZone(ObjCClassFromMetadata) init];
  *(void *)&v18[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_descriptionLabel] = v21;
  id v22 = [(id)objc_opt_self(UIBlurEffect) effectWithStyle:4006];
  id v23 = [objc_allocWithZone(UIVisualEffectView) initWithEffect:v22];

  *(void *)&v18[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_backgroundMaterialView] = v23;
  v38.receiver = v18;
  v38.super_class = ObjectType;
  double v24 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v25 = &v24[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle];
  swift_beginAccess(&v24[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle], v37, 0LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v25, v5);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == (_DWORD)v9)
  {
    uint64_t v26 = *(void **)&v24[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_backgroundMaterialView];
    double v27 = v24;
    uint64_t v28 = (char *)[v26 contentView];
  }

  else
  {
    int v29 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v28 = v24;
    v29(v8, v5);
  }

  id v30 = [v28 layer];

  [v30 setAllowsGroupBlending:0];
  [v24 setEdgesInsettingLayoutMarginsFromSafeArea:0];
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  objc_msgSend(v24, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  sub_1000F0F40();
  double v34 = *(void **)&v24[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_backgroundMaterialView];
  [v34 _setContinuousCornerRadius:15.0];
  [v34 setClipsToBounds:1];
  objc_msgSend(v34, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  [v34 setEdgesInsettingLayoutMarginsFromSafeArea:0];

  sub_10002BDF4(v36, type metadata accessor for BreakoutDetailsView.Config);
  return v24;
}

void sub_1000F0F40()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v3 = *(char **)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v129 = (char *)&v125 - v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v125 - v9;
  __chkstk_darwin(v11);
  uint64_t v130 = (char *)&v125 - v12;
  __chkstk_darwin(v13);
  uint64_t v132 = (char *)&v125 - v14;
  uint64_t v15 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v15);
  uint64_t v134 = (uint64_t)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  id v133 = (char *)&v125 - v18;
  id v19 = (void *)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_config);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_config, v147, 0LL, 0LL);
  uint64_t v20 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  uint64_t v21 = v20;
  int v22 = *((unsigned __int8 *)v19 + *(int *)(v20 + 84));
  uint64_t v137 = v1;
  uint64_t v135 = v2;
  uint64_t v127 = v10;
  uint64_t v128 = v5;
  if (!v22)
  {
    uint64_t v30 = OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton;
    double v31 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
    if (v31)
    {
      [v31 removeFromSuperview];
      double v32 = *(void **)(v1 + v30);
    }

    else
    {
      double v32 = 0LL;
    }

    *(void *)(v1 + v30) = 0LL;

LABEL_24:
    uint64_t v51 = (void **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton);
    uint64_t v52 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton);
    if (!v52)
    {
      id v53 = 0LL;
      goto LABEL_36;
    }

    goto LABEL_35;
  }

  uint64_t v23 = v20;
  double v24 = v19;
  if (v22 == 1)
  {
    uint64_t v25 = OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton;
    uint64_t v26 = v1;
    double v27 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
    if (v27)
    {
      uint64_t v28 = v27;
      id v29 = v27;
    }

    else
    {
      uint64_t v39 = type metadata accessor for OfferButton();
      id v29 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v39)) init];
      uint64_t v28 = *(void **)(v26 + v25);
      if (!v28)
      {
        uint64_t v1 = v26;
        uint64_t v44 = 0LL;
        id v19 = v24;
        uint64_t v21 = v23;
        goto LABEL_22;
      }

      double v27 = 0LL;
    }

    id v19 = v24;
    type metadata accessor for OfferButton();
    id v40 = v27;
    id v41 = v28;
    id v42 = v29;
    char v43 = static NSObject.== infix(_:_:)(v42, v41);

    uint64_t v1 = v137;
    uint64_t v44 = *(void **)(v137 + v25);
    uint64_t v21 = v23;
    if ((v43 & 1) == 0)
    {
      uint64_t v2 = v135;
      if (v44)
      {
        [v44 removeFromSuperview];
        uint64_t v44 = *(void **)(v1 + v25);
      }

      goto LABEL_23;
    }

uint64_t sub_1000F1B20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (double *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - v13;
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))( (char *)&v29 - v13,  enum case for BreakoutDetails.BackgroundStyle.material(_:),  v7,  v12);
  uint64_t v15 = v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle, v33, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
  uint64_t v16 = sub_100004288( &qword_1002E9400,  (uint64_t (*)(uint64_t))&type metadata accessor for BreakoutDetails.BackgroundStyle,  (uint64_t)&protocol conformance descriptor for BreakoutDetails.BackgroundStyle);
  dispatch thunk of RawRepresentable.rawValue.getter(&v29, v7, v16);
  dispatch thunk of RawRepresentable.rawValue.getter(&v31, v7, v16);
  uint64_t v17 = v30;
  uint64_t v18 = v32;
  if (v29 == v31 && v30 == v32)
  {
    char v19 = 1;
    uint64_t v18 = v30;
  }

  else
  {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v31, v32, 0LL);
  }

  swift_bridgeObjectRelease(v17);
  __n128 v20 = swift_bridgeObjectRelease(v18);
  uint64_t v21 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
  v21(v10, v7, v20);
  ((void (*)(char *, uint64_t))v21)(v14, v7);
  int v22 = (_BYTE *)(v2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_config);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_config, &v29, 0LL, 0LL);
  if ((*v22 & 1) != 0)
  {
    if ((v19 & 1) != 0)
    {
      if (qword_1002E0B58 != -1) {
        swift_once(&qword_1002E0B58, sub_1000F09B4);
      }
      uint64_t v23 = &xmmword_1002E9240;
      goto LABEL_15;
    }

void sub_1000F1DE4(void *a1)
{
  uint64_t v3 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView;
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView];
  *(void *)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView] = a1;
  id v16 = a1;
  if (v8) {
    objc_msgSend(v8, "removeFromSuperview", v16);
  }
  uint64_t v9 = *(void **)&v1[v7];
  if (v9)
  {
    uint64_t v10 = &v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle], v17, 0LL, 0LL);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
    if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) == enum case for BreakoutDetails.BackgroundStyle.material(_:))
    {
      uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_backgroundMaterialView];
      id v12 = v9;
      uint64_t v13 = (char *)[v11 contentView];
    }

    else
    {
      uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
      id v15 = v9;
      uint64_t v13 = v1;
      v14(v6, v3);
    }

    objc_msgSend(v13, "addSubview:", v9, v16);
  }

  else
  {
  }

id sub_1000F1F7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WordmarkView.Alignment(0LL);
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000038E8(&qword_1002E93F0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for BreakoutDetails.Badge(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  id v15 = (char *)&v33 - v14;
  id v16 = &v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badge];
  swift_beginAccess(&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badge], v38, 0LL, 0LL);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v17(v15, v16, v9);
  uint64_t v18 = sub_100004288( &qword_1002E93F8,  (uint64_t (*)(uint64_t))&type metadata accessor for BreakoutDetails.Badge,  (uint64_t)&protocol conformance descriptor for BreakoutDetails.Badge);
  LOBYTE(a1) = dispatch thunk of static Equatable.== infix(_:_:)(v15, a1, v9, v18);
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  if ((a1 & 1) == 0)
  {
    v17(v12, v16, v9);
    int v20 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
    if (v20 == enum case for BreakoutDetails.Badge.text(_:))
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
      uint64_t v21 = *((void *)v12 + 1);
      int v22 = *(void **)&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel];
      NSString v23 = String._bridgeToObjectiveC()();
      objc_msgSend(v22, "setText:", v23, swift_bridgeObjectRelease(v21).n128_f64[0]);

      [v22 setHidden:0];
      double v24 = *(void **)&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView];
      if (!v24)
      {
LABEL_13:
        sub_1000F0F40();
        sub_1000F2340();
        return [v2 setNeedsLayout];
      }

      uint64_t v25 = 1LL;
    }

    else if (v20 == enum case for BreakoutDetails.Badge.wordmark(_:))
    {
      uint64_t v26 = OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView;
      if (!*(void *)&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView])
      {
        uint64_t v27 = enum case for Wordmark.arcade(_:);
        uint64_t v28 = type metadata accessor for Wordmark(0LL);
        uint64_t v29 = *(void *)(v28 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v8, v27, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v8, 0LL, 1LL, v28);
        uint64_t v30 = v36;
        (*(void (**)(char *, void, uint64_t))(v34 + 104))( v36,  enum case for WordmarkView.Alignment.leading(_:),  v35);
        void v37[3] = &type metadata for Double;
        _BYTE v37[4] = &protocol witness table for Double;
        v37[0] = 0LL;
        id v31 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0LL));
        uint64_t v32 = (void *)WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v8, v37, v30, 0.0, 0.0, 0.0, 0.0);
        sub_1000F1DE4(v32);
      }

      [*(id *)&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel] setHidden:1];
      double v24 = *(void **)&v2[v26];
      if (!v24) {
        goto LABEL_13;
      }
      uint64_t v25 = 0LL;
    }

    else
    {
      if (v20 != enum case for BreakoutDetails.Badge.none(_:))
      {
        id result = (id)_diagnoseUnexpectedEnumCase<A>(type:)(v9, v9);
        __break(1u);
        return result;
      }

      uint64_t v25 = 1LL;
      [*(id *)&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel] setHidden:1];
      double v24 = *(void **)&v2[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView];
      if (!v24) {
        goto LABEL_13;
      }
    }

    [v24 setHidden:v25];
    goto LABEL_13;
  }

  return result;
}

id sub_1000F2340()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v41 - v7;
  uint64_t v9 = type metadata accessor for BreakoutDetails.TextAlignment(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailTextAlignment;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailTextAlignment, v47, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v14 == enum case for BreakoutDetails.TextAlignment.leading(_:))
  {
    if (qword_1002E0B40 != -1) {
      swift_once(&qword_1002E0B40, sub_1000F08E4);
    }
    uint64_t v15 = sub_1000038E8(&qword_1002EBC60);
    uint64_t v16 = v15;
    uint64_t v17 = qword_1002E91F0;
LABEL_9:
    sub_10000A634(v15, (uint64_t)v17);
    uint64_t v42 = v1;
    Conditional.evaluate(with:)(v46, &v42, v16);
    uint64_t v18 = v46[0];
    goto LABEL_12;
  }

  if (v14 == enum case for BreakoutDetails.TextAlignment.trailing(_:))
  {
    if (qword_1002E0B48 != -1) {
      swift_once(&qword_1002E0B48, sub_1000F08F8);
    }
    uint64_t v15 = sub_1000038E8(&qword_1002EBC60);
    uint64_t v16 = v15;
    uint64_t v17 = qword_1002E9208;
    goto LABEL_9;
  }

  if (v14 == enum case for BreakoutDetails.TextAlignment.center(_:))
  {
    uint64_t v18 = 1LL;
LABEL_12:
    uint64_t v19 = OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView;
    int v20 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView);
    if (v20)
    {
      id v21 = v20;
      WordmarkView.updateAlignment(toMatch:)(v18);
    }

    int v22 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel);
    [v22 setTextAlignment:v18];
    id v41 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_titleLabel);
    [v41 setTextAlignment:v18];
    NSString v23 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_descriptionLabel);
    [v23 setTextAlignment:v18];
    double v24 = *(void **)(v1 + v19);
    if (v24)
    {
      id v25 = [v24 layer];
      [v25 setCompositingFilter:kCAFilterPlusL];
    }

    uint64_t v26 = v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle, v46, 0LL, 0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v26, v2);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for BreakoutDetails.BackgroundStyle.material(_:),  v2);
    uint64_t v27 = sub_100004288( &qword_1002E9400,  (uint64_t (*)(uint64_t))&type metadata accessor for BreakoutDetails.BackgroundStyle,  (uint64_t)&protocol conformance descriptor for BreakoutDetails.BackgroundStyle);
    dispatch thunk of RawRepresentable.rawValue.getter(&v42, v2, v27);
    dispatch thunk of RawRepresentable.rawValue.getter(&v44, v2, v27);
    uint64_t v28 = v43;
    uint64_t v29 = v45;
    if (v42 == v44 && v43 == v45)
    {
      swift_bridgeObjectRelease_n(v43, 2LL);
      uint64_t v30 = *(void (**)(char *, uint64_t))(v3 + 8);
      v30(v5, v2);
      v30(v8, v2);
    }

    else
    {
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v43, v44, v45, 0LL);
      swift_bridgeObjectRelease(v28);
      __n128 v32 = swift_bridgeObjectRelease(v29);
      uint64_t v33 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
      v33(v5, v2, v32);
      ((void (*)(char *, uint64_t))v33)(v8, v2);
      if ((v31 & 1) == 0)
      {
        id v37 = [v22 layer];
        [v37 setCompositingFilter:kCAFilterPlusL];

        id v36 = [v23 layer];
        [v36 setCompositingFilter:0];
        goto LABEL_22;
      }
    }

    id v34 = [v22 layer];
    uint64_t v35 = kCAFilterPlusL;
    [v34 setCompositingFilter:kCAFilterPlusL];

    id v36 = [v23 layer];
    [v36 setCompositingFilter:v35];
LABEL_22:

    uint64_t v38 = v1 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_config;
    swift_beginAccess(v38, &v42, 0LL, 0LL);
    uint64_t v39 = type metadata accessor for BreakoutDetailsView.Config(0LL);
    [v41 setNumberOfLines:*(void *)(v38 + *(int *)(v39 + 76))];
    [v23 setNumberOfLines:*(void *)(v38 + *(int *)(v39 + 80))];
    return [v22 setNumberOfLines:1];
  }

  id result = (id)_diagnoseUnexpectedEnumCase<A>(type:)(v9, v9);
  __break(1u);
  return result;
}

uint64_t sub_1000F29A0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  __chkstk_darwin(v3);
  uint64_t v60 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for LayoutRect(0LL);
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  __chkstk_darwin(v5);
  id v58 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v68 = v10;
  __chkstk_darwin(v10);
  unsigned int v66 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for TVBreakoutDetailsLayout(0LL);
  *(void *)&double v13 = __chkstk_darwin(v12).n128_u64[0];
  uint64_t v15 = (double *)((char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  v89.receiver = v1;
  v89.super_class = ObjectType;
  uint64_t v69 = ObjectType;
  objc_msgSendSuper2(&v89, "layoutSubviews", v13);
  sub_1000F1B20((uint64_t)v88);
  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_titleLabel];
  uint64_t v86 = type metadata accessor for DynamicTypeLabel(0LL);
  id v87 = &protocol witness table for UILabel;
  objc_super v84 = &protocol witness table for UILabel;
  *(void *)&__int128 v85 = v16;
  uint64_t v17 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_descriptionLabel];
  uint64_t v83 = v86;
  id v64 = v17;
  id v65 = v16;
  id v81 = &protocol witness table for UILabel;
  *(void *)&__int128 v82 = v17;
  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel];
  uint64_t v80 = v86;
  id v63 = v18;
  *(void *)&__int128 v79 = v18;
  uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView];
  if (v19)
  {
    *((void *)&v77 + 1) = type metadata accessor for WordmarkView(0LL);
    id v78 = protocol witness table for UIView;
    *(void *)&__int128 v76 = v19;
  }

  else
  {
    id v78 = 0LL;
    __int128 v76 = 0u;
    __int128 v77 = 0u;
  }

  int v20 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton];
  uint64_t v59 = v9;
  if (v20)
  {
    id v21 = v20;
LABEL_8:
    *((void *)&v74 + 1) = sub_100016FF8();
    uint64_t v75 = protocol witness table for UIView;
    *(void *)&__int128 v73 = v21;
    id v23 = v20;
    goto LABEL_9;
  }

  int v22 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton];
  if (v22)
  {
    id v21 = v22;
    int v20 = 0LL;
    goto LABEL_8;
  }

  uint64_t v75 = 0LL;
  __int128 v73 = 0u;
  __int128 v74 = 0u;
LABEL_9:
  uint64_t v24 = sub_1000038E8(&qword_1002E1210);
  uint64_t v25 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v26 = swift_allocObject( v24,  ((*(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v25 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v26 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100235590;
  id v27 = v19;
  id v28 = v65;
  id v29 = v64;
  uint64_t v30 = static _VerticalFlowLayout.ExclusionCondition.isHidden.getter(v63);
  uint64_t v31 = static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v30);
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v31);
  uint64_t v72 = v26;
  uint64_t v32 = sub_100004288( (unint64_t *)&qword_1002E1218,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  uint64_t v33 = sub_1000038E8(&qword_1002E1220);
  unint64_t v34 = sub_100003928();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v72, v33, v34, v25, v32);
  memcpy(v15, v88, 0x168uLL);
  sub_100058800((uint64_t)&v76, (uint64_t)(v15 + 45));
  sub_1000243BC(&v79, (uint64_t)(v15 + 50));
  sub_1000243BC(&v85, (uint64_t)(v15 + 55));
  sub_1000243BC(&v82, (uint64_t)(v15 + 60));
  sub_100058800((uint64_t)&v73, (uint64_t)(v15 + 65));
  uint64_t v35 = &v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle], v88, 0LL, 0LL);
  id v37 = v66;
  uint64_t v36 = v67;
  uint64_t v38 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v66, v35, v68);
  LODWORD(v35) = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v37, v38);
  int v39 = enum case for BreakoutDetails.BackgroundStyle.material(_:);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  if ((_DWORD)v35 != v39)
  {
    LayoutMarginsAware<>.layoutFrame.getter(v69);
    NSDirectionalEdgeInsets.insetsWithLayoutDirection(in:)(v1, v15[41], v15[42], v15[43], v15[44]);
    CGRect.subtracting(insets:)(v52);
    double v43 = CGRect.withLayoutDirection(in:relativeTo:)(v1);
    double v45 = v53;
    double v47 = v54;
    double v49 = v55;
    if ((*(_BYTE *)v15 & 1) != 0)
    {
      uint64_t v50 = v60;
      sub_10011E468(v60);
      uint64_t v51 = v58;
      goto LABEL_14;
    }

    uint64_t v51 = v58;
LABEL_17:
    sub_10011EFF8((uint64_t)v1, v43, v45, v47, v49);
    goto LABEL_18;
  }

  id v40 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_backgroundMaterialView];
  [v40 setFrame:LayoutMarginsAware<>.layoutFrame.getter(v69).n128_f64[0]];
  id v41 = [v40 contentView];
  [v41 bounds];

  NSDirectionalEdgeInsets.insetsWithLayoutDirection(in:)(v1, v15[41], v15[42], v15[43], v15[44]);
  CGRect.subtracting(insets:)(v42);
  double v43 = CGRect.withLayoutDirection(in:relativeTo:)(v1);
  double v45 = v44;
  double v47 = v46;
  double v49 = v48;
  if ((*(_BYTE *)v15 & 1) == 0)
  {
    uint64_t v51 = v59;
    goto LABEL_17;
  }

  uint64_t v50 = v60;
  sub_10011E468(v60);
  uint64_t v51 = v59;
LABEL_14:
  _VerticalFlowLayout.placeChildren(relativeTo:in:)(v1, v43, v45, v47, v49);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v50, v62);
LABEL_18:
  (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v71);
  return sub_10002BDF4((uint64_t)v15, type metadata accessor for TVBreakoutDetailsLayout);
}

void sub_1000F2FF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v70 - v7;
  __chkstk_darwin(v9);
  __int128 v73 = (char *)&v70 - v10;
  __chkstk_darwin(v11);
  __int128 v74 = (char *)&v70 - v12;
  __chkstk_darwin(v13);
  uint64_t v75 = (char *)&v70 - v14;
  __chkstk_darwin(v15);
  uint64_t v72 = (char *)&v70 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v70 - v18;
  __chkstk_darwin(v20);
  int v22 = (char *)&v70 - v21;
  id v23 = &v0[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle], v83, 0LL, 0LL);
  __int128 v76 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v76(v22, v23, v2);
  uint64_t v24 = *(void (**)(char *))(v3 + 104);
  int v78 = enum case for BreakoutDetails.BackgroundStyle.material(_:);
  v24(v19);
  uint64_t v25 = sub_100004288( &qword_1002E9400,  (uint64_t (*)(uint64_t))&type metadata accessor for BreakoutDetails.BackgroundStyle,  (uint64_t)&protocol conformance descriptor for BreakoutDetails.BackgroundStyle);
  dispatch thunk of RawRepresentable.rawValue.getter(&v81, v2, v25);
  dispatch thunk of RawRepresentable.rawValue.getter(&v79, v2, v25);
  uint64_t v26 = v82;
  uint64_t v27 = v80;
  uint64_t v71 = v8;
  if (v81 == v79 && v82 == v80)
  {
    id v28 = v23;
    id v29 = v5;
    char v30 = 1;
    uint64_t v27 = v82;
  }

  else
  {
    id v28 = v23;
    id v29 = v5;
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v81, v82, v79, v80, 0LL);
  }

  swift_bridgeObjectRelease(v26);
  __n128 v31 = swift_bridgeObjectRelease(v27);
  uint64_t v32 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v32(v19, v2, v31);
  ((void (*)(char *, uint64_t))v32)(v22, v2);
  uint64_t v33 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_backgroundMaterialView];
  uint64_t v70 = v29;
  id v77 = v33;
  if ((v30 & 1) != 0) {
    [v1 addSubview:v33];
  }
  else {
    [v33 removeFromSuperview];
  }
  unint64_t v34 = v28;
  uint64_t v35 = v72;
  uint64_t v36 = v73;
  id v37 = v75;
  uint64_t v38 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView];
  if (v38)
  {
    int v39 = (void (*)(char *, uint64_t))v32;
    v76(v72, v34, v2);
    int v40 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v35, v2);
    id v41 = v38;
    if (v40 == v78)
    {
      uint64_t v42 = (char *)[v77 contentView];
    }

    else
    {
      uint64_t v42 = v1;
      v39(v35, v2);
    }

    objc_msgSend(v42, "addSubview:", v41, v70);

    uint64_t v32 = (void (*)(char *, uint64_t, __n128))v39;
    id v37 = v75;
  }

  double v43 = v76;
  v76(v37, v34, v2);
  double v44 = *(uint64_t (**)(char *, uint64_t))(v3 + 88);
  int v45 = v44(v37, v2);
  if (v45 == v78)
  {
    double v46 = (char *)[v77 contentView];
  }

  else
  {
    double v47 = v1;
    double v48 = v37;
    double v46 = v47;
    ((void (*)(char *, uint64_t))v32)(v48, v2);
  }

  objc_msgSend(v46, "addSubview:", *(void *)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel], v70);

  double v49 = v74;
  v43(v74, v34, v2);
  int v50 = v44(v49, v2);
  if (v50 == v78)
  {
    uint64_t v51 = (char *)[v77 contentView];
  }

  else
  {
    uint64_t v52 = v1;
    double v53 = v49;
    uint64_t v51 = v52;
    ((void (*)(char *, uint64_t))v32)(v53, v2);
  }

  [v51 addSubview:*(void *)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_titleLabel]];

  v43(v36, v34, v2);
  int v54 = v44(v36, v2);
  if (v54 == v78)
  {
    double v55 = (char *)[v77 contentView];
  }

  else
  {
    double v55 = v1;
    ((void (*)(char *, uint64_t))v32)(v36, v2);
  }

  [v55 addSubview:*(void *)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_descriptionLabel]];

  uint64_t v56 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton];
  if (v56)
  {
    uint64_t v57 = v32;
    id v58 = v71;
    v43(v71, v34, v2);
    int v59 = v44(v58, v2);
    if (v59 == v78)
    {
      id v60 = v56;
      uint64_t v61 = (char *)[v77 contentView];
      uint64_t v32 = v57;
    }

    else
    {
      uint64_t v61 = v1;
      id v62 = v56;
      id v63 = v58;
      uint64_t v32 = v57;
      ((void (*)(char *, uint64_t))v57)(v63, v2);
    }

    [v61 addSubview:v56];

    double v43 = v76;
  }

  id v64 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton];
  if (v64)
  {
    id v65 = v70;
    v43(v70, v34, v2);
    int v66 = v44(v65, v2);
    if (v66 == v78)
    {
      id v67 = v64;
      uint64_t v68 = (char *)[v77 contentView];
    }

    else
    {
      uint64_t v68 = v1;
      id v69 = v64;
      ((void (*)(char *, uint64_t))v32)(v65, v2);
    }

    [v68 addSubview:v64];
  }

void *sub_1000F36C4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
  uint64_t v2 = v1;
  if (!v1)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton);
    if (v2) {
      id v3 = v2;
    }
  }

  id v4 = v1;
  return v2;
}

uint64_t sub_1000F3858()
{
  return type metadata accessor for BreakoutDetailsView(0LL);
}

uint64_t type metadata accessor for BreakoutDetailsView(uint64_t a1)
{
  return sub_100036A58(a1, (uint64_t *)&unk_1002E9310, (uint64_t)&nominal type descriptor for BreakoutDetailsView);
}

uint64_t sub_1000F3874(uint64_t a1)
{
  v7[0] = "\b";
  v7[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v7[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v7[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v7[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v7[5] = "\b";
  v7[6] = "\b";
  uint64_t result = type metadata accessor for BreakoutDetailsView.Config(319LL);
  if (v3 <= 0x3F)
  {
    v7[7] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for BreakoutDetails.TextAlignment(319LL);
    if (v4 <= 0x3F)
    {
      v7[8] = *(void *)(result - 8) + 64LL;
      uint64_t result = type metadata accessor for BreakoutDetails.BackgroundStyle(319LL);
      if (v5 <= 0x3F)
      {
        void v7[9] = *(void *)(result - 8) + 64LL;
        uint64_t result = type metadata accessor for BreakoutDetails.Badge(319LL);
        if (v6 <= 0x3F)
        {
          void v7[10] = *(void *)(result - 8) + 64LL;
          return swift_updateClassMetadata2(a1, 256LL, 11LL, v7, a1 + 80);
        }
      }
    }
  }

  return result;
}

uint64_t type metadata accessor for BreakoutDetailsView.Config(uint64_t a1)
{
  return sub_100036A58(a1, qword_1002E9378, (uint64_t)&nominal type descriptor for BreakoutDetailsView.Config);
}

char *sub_1000F3968(char *a1, char *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *(void *)a2;
    *(void *)unint64_t v4 = *(void *)a2;
    unint64_t v4 = (char *)(v23 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v23);
  }

  else
  {
    *a1 = *a2;
    uint64_t v7 = (void *)*((void *)a2 + 2);
    *((void *)a1 + 1) = *((void *)a2 + 1);
    *((void *)a1 + 2) = v7;
    uint64_t v8 = (void *)*((void *)a2 + 3);
    uint64_t v9 = (void *)*((void *)a2 + 4);
    *((void *)a1 + 3) = v8;
    *((void *)a1 + 4) = v9;
    uint64_t v10 = (void *)*((void *)a2 + 5);
    uint64_t v11 = a3[10];
    uint64_t v25 = &a1[v11];
    uint64_t v12 = &a2[v11];
    *((void *)a1 + 5) = v10;
    uint64_t v13 = type metadata accessor for FontUseCase(0LL, a2);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16LL);
    id v15 = v7;
    id v16 = v8;
    id v17 = v9;
    id v18 = v10;
    v14(v25, v12, v13);
    v14(&v4[a3[11]], &a2[a3[11]], v13);
    v14(&v4[a3[12]], &a2[a3[12]], v13);
    uint64_t v19 = a3[14];
    *(void *)&v4[a3[13]] = *(void *)&a2[a3[13]];
    *(void *)&v4[v19] = *(void *)&a2[v19];
    uint64_t v20 = a3[16];
    *(void *)&v4[a3[15]] = *(void *)&a2[a3[15]];
    *(void *)&v4[v20] = *(void *)&a2[v20];
    uint64_t v21 = a3[18];
    *(void *)&v4[a3[17]] = *(void *)&a2[a3[17]];
    *(void *)&v4[v21] = *(void *)&a2[v21];
    uint64_t v22 = a3[20];
    *(void *)&v4[a3[19]] = *(void *)&a2[a3[19]];
    *(void *)&v4[v22] = *(void *)&a2[v22];
    v4[a3[21]] = a2[a3[21]];
  }

  return v4;
}

uint64_t sub_1000F3ACC(id *a1, int *a2)
{
  unint64_t v4 = (char *)a1 + a2[10];
  uint64_t v6 = type metadata accessor for FontUseCase(0LL, v5);
  uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8LL);
  v8(v4, v6);
  v8((char *)a1 + a2[11], v6);
  return ((uint64_t (*)(char *, uint64_t))v8)((char *)a1 + a2[12], v6);
}

uint64_t sub_1000F3B70(uint64_t a1, uint64_t a2, int *a3)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v6 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  uint64_t v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = *(void **)(a2 + 40);
  uint64_t v10 = a3[10];
  uint64_t v23 = a1 + v10;
  uint64_t v11 = a2 + v10;
  *(void *)(a1 + 40) = v9;
  uint64_t v12 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16LL);
  id v14 = v6;
  id v15 = v7;
  id v16 = v8;
  id v17 = v9;
  v13(v23, v11, v12);
  v13(a1 + a3[11], a2 + a3[11], v12);
  v13(a1 + a3[12], a2 + a3[12], v12);
  uint64_t v18 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  uint64_t v21 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_1000F3CA8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  id v8 = v7;

  uint64_t v9 = *(void **)(a1 + 24);
  uint64_t v10 = *(void **)(a2 + 24);
  *(void *)(a1 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = v10;
  id v11 = v10;

  uint64_t v12 = *(void **)(a1 + 32);
  uint64_t v13 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v13;
  id v14 = v13;

  id v15 = *(void **)(a1 + 40);
  id v16 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v16;
  id v17 = v16;

  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v22 = type metadata accessor for FontUseCase(0LL, v21);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24LL);
  v23(v19, v20, v22);
  v23(a1 + a3[11], a2 + a3[11], v22);
  v23(a1 + a3[12], a2 + a3[12], v22);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_1000F3E0C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  __int128 v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = a3[10];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for FontUseCase(0LL, a2);
  id v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL);
  v11(v8, v9, v10);
  v11(a1 + a3[11], a2 + a3[11], v10);
  v11(a1 + a3[12], a2 + a3[12], v10);
  uint64_t v12 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_1000F3F18(uint64_t a1, uint64_t a2, int *a3)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  __int128 v6 = *(void **)(a1 + 16);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);

  uint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = *(void *)(a2 + 24);

  uint64_t v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  uint64_t v9 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  uint64_t v10 = a3[10];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40LL);
  v15(v11, v12, v14);
  v15(a1 + a3[11], a2 + a3[11], v14);
  v15(a1 + a3[12], a2 + a3[12], v14);
  uint64_t v16 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + vswift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_1000F405C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F4068);
}

uint64_t sub_1000F4068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }

  else
  {
    uint64_t v9 = type metadata accessor for FontUseCase(0LL, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48LL))( a1 + *(int *)(a3 + 40),  a2,  v9);
  }

uint64_t sub_1000F40F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F40FC);
}

uint64_t sub_1000F40FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  }

  else
  {
    uint64_t v7 = type metadata accessor for FontUseCase(0LL, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v5 + *(int *)(a4 + 40),  a2,  a2,  v7);
  }

  return result;
}

uint64_t sub_1000F4170(uint64_t a1, uint64_t a2)
{
  v5[0] = &unk_10023CEB8;
  v5[1] = (char *)&value witness table for Builtin.Int64 + 64;
  void v5[2] = "\b";
  v5[3] = "\b";
  v5[4] = "\b";
  void v5[5] = "\b";
  uint64_t result = type metadata accessor for FontUseCase(319LL, a2);
  if (v4 <= 0x3F)
  {
    uint64_t v6 = *(void *)(result - 8) + 64LL;
    uint64_t v7 = v6;
    uint64_t v8 = v6;
    uint64_t v9 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v10 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v11 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v12 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v13 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v14 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v15 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v16 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v17 = &unk_10023CED0;
    swift_initStructMetadata(a1, 256LL, 18LL, v5, a1 + 16);
    return 0LL;
  }

  return result;
}

double sub_1000F421C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v70 = a1;
  uint64_t v7 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v72 = *(void *)(v7 - 8);
  uint64_t v73 = v7;
  __chkstk_darwin(v7);
  uint64_t v71 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v65 = *(void *)(v9 - 8);
  uint64_t v66 = v9;
  __chkstk_darwin(v9);
  uint64_t v64 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for TVBreakoutDetailsLayout(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (double *)((char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_1000F1B20((uint64_t)v90);
  uint64_t v14 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_titleLabel);
  uint64_t v88 = type metadata accessor for DynamicTypeLabel(0LL);
  objc_super v89 = &protocol witness table for UILabel;
  uint64_t v86 = &protocol witness table for UILabel;
  *(void *)&__int128 v87 = v14;
  uint64_t v15 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_descriptionLabel);
  uint64_t v85 = v88;
  id v68 = v15;
  id v69 = v14;
  uint64_t v83 = &protocol witness table for UILabel;
  *(void *)&__int128 v84 = v15;
  uint64_t v16 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel);
  uint64_t v82 = v88;
  *(void *)&__int128 v81 = v16;
  uint64_t v17 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView);
  if (v17)
  {
    *((void *)&v79 + 1) = type metadata accessor for WordmarkView(0LL);
    uint64_t v80 = protocol witness table for UIView;
    *(void *)&__int128 v78 = v17;
  }

  else
  {
    uint64_t v80 = 0LL;
    __int128 v78 = 0u;
    __int128 v79 = 0u;
  }

  uint64_t v18 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
  if (v18)
  {
    id v19 = *(id *)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
LABEL_8:
    *((void *)&v76 + 1) = sub_100016FF8();
    id v77 = protocol witness table for UIView;
    *(void *)&__int128 v75 = v19;
    id v21 = v18;
    goto LABEL_9;
  }

  uint64_t v20 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton);
  if (v20)
  {
    id v19 = v20;
    uint64_t v18 = 0LL;
    goto LABEL_8;
  }

  id v77 = 0LL;
  __int128 v75 = 0u;
  __int128 v76 = 0u;
LABEL_9:
  id v67 = (char *)v13 + *(int *)(v11 + 40);
  uint64_t v22 = sub_1000038E8(&qword_1002E1210);
  uint64_t v23 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v24 = swift_allocObject( v22,  ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v23 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100235590;
  id v25 = v17;
  id v26 = v69;
  id v27 = v68;
  uint64_t v28 = static _VerticalFlowLayout.ExclusionCondition.isHidden.getter(v16);
  uint64_t v29 = static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v28);
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v29);
  uint64_t v74 = v24;
  uint64_t v30 = sub_100004288( (unint64_t *)&qword_1002E1218,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  uint64_t v31 = sub_1000038E8(&qword_1002E1220);
  unint64_t v32 = sub_100003928();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v74, v31, v32, v23, v30);
  memcpy(v13, v90, 0x168uLL);
  sub_100058800((uint64_t)&v78, (uint64_t)(v13 + 45));
  sub_1000243BC(&v81, (uint64_t)(v13 + 50));
  sub_1000243BC(&v87, (uint64_t)(v13 + 55));
  sub_1000243BC(&v84, (uint64_t)(v13 + 60));
  uint64_t v33 = sub_100058800((uint64_t)&v75, (uint64_t)(v13 + 65));
  double v34 = NSDirectionalEdgeInsets.edgeInsets.getter(v33, v13[41], v13[42], v13[43], v13[44]);
  double v38 = CGSize.subtracting(insets:)(v34, v35, v36, v37, a3, a4);
  double v40 = v38;
  double v41 = v39;
  if ((*(_BYTE *)v13 & 1) != 0)
  {
    uint64_t v42 = v64;
    sub_10011E468(v64);
    uint64_t v43 = v70;
    double v44 = _VerticalFlowLayout.measurements(fitting:in:)(v70, v40, v41);
    double v46 = v45;
    double v48 = v47;
    double v50 = v49;
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v42, v66);
  }

  else
  {
    uint64_t v43 = v70;
    sub_1000F4B7C(v70, v13, v38, v39);
    double v44 = v52;
    double v46 = v53;
    double v48 = v54;
    double v50 = v55;
  }

  if (v40 > v44) {
    v51.n128_f64[0] = v40;
  }
  else {
    v51.n128_f64[0] = v44;
  }
  double v56 = JUMeasurements.adding(outsets:in:)(v43, v13[41], v13[42], v13[43], v13[44], v51, v46, v48, v50);
  sub_10002BDF4((uint64_t)v13, type metadata accessor for TVBreakoutDetailsLayout);
  uint64_t v57 = a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle, v90, 0LL, 0LL);
  int v59 = v71;
  uint64_t v58 = v72;
  uint64_t v60 = v57;
  uint64_t v61 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v71, v60, v73);
  (*(uint64_t (**)(char *, uint64_t))(v58 + 88))(v59, v61);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v61);
  return v56;
}

double sub_1000F46C8(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v67 = a3;
  uint64_t v71 = a1;
  uint64_t v8 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v73 = *(void *)(v8 - 8);
  uint64_t v74 = v8;
  __chkstk_darwin(v8);
  uint64_t v72 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  __chkstk_darwin(v10);
  uint64_t v64 = (uint64_t)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for TVBreakoutDetailsLayout(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (double *)((char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_1000F1B20((uint64_t)v91);
  uint64_t v15 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_titleLabel);
  uint64_t v89 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v90 = &protocol witness table for UILabel;
  __int128 v87 = &protocol witness table for UILabel;
  *(void *)&__int128 v88 = v15;
  uint64_t v16 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_descriptionLabel);
  uint64_t v86 = v89;
  id v69 = v16;
  id v70 = v15;
  __int128 v84 = &protocol witness table for UILabel;
  *(void *)&__int128 v85 = v16;
  uint64_t v17 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badgeLabel);
  uint64_t v83 = v89;
  *(void *)&__int128 v82 = v17;
  uint64_t v18 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView);
  if (v18)
  {
    *((void *)&v80 + 1) = type metadata accessor for WordmarkView(0LL);
    __int128 v81 = protocol witness table for UIView;
    *(void *)&__int128 v79 = v18;
  }

  else
  {
    __int128 v81 = 0LL;
    __int128 v79 = 0u;
    __int128 v80 = 0u;
  }

  id v19 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
  if (v19)
  {
    id v20 = *(id *)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton);
LABEL_8:
    *((void *)&v77 + 1) = sub_100016FF8();
    __int128 v78 = protocol witness table for UIView;
    *(void *)&__int128 v76 = v20;
    id v22 = v19;
    goto LABEL_9;
  }

  id v21 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton);
  if (v21)
  {
    id v20 = v21;
    id v19 = 0LL;
    goto LABEL_8;
  }

  __int128 v78 = 0LL;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
LABEL_9:
  id v68 = (char *)v14 + *(int *)(v12 + 40);
  uint64_t v23 = sub_1000038E8(&qword_1002E1210);
  uint64_t v24 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v25 = swift_allocObject( v23,  ((*(unsigned __int8 *)(*(void *)(v24 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v24 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v24 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v24 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100235590;
  id v26 = v18;
  id v27 = v70;
  id v28 = v69;
  uint64_t v29 = static _VerticalFlowLayout.ExclusionCondition.isHidden.getter(v17);
  uint64_t v30 = static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v29);
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v30);
  uint64_t v75 = v25;
  uint64_t v31 = sub_100004288( (unint64_t *)&qword_1002E1218,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  uint64_t v32 = sub_1000038E8(&qword_1002E1220);
  unint64_t v33 = sub_100003928();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v75, v32, v33, v24, v31);
  memcpy(v14, v91, 0x168uLL);
  sub_100058800((uint64_t)&v79, (uint64_t)(v14 + 45));
  sub_1000243BC(&v82, (uint64_t)(v14 + 50));
  sub_1000243BC(&v88, (uint64_t)(v14 + 55));
  sub_1000243BC(&v85, (uint64_t)(v14 + 60));
  uint64_t v34 = sub_100058800((uint64_t)&v76, (uint64_t)(v14 + 65));
  double v35 = NSDirectionalEdgeInsets.edgeInsets.getter(v34, v14[41], v14[42], v14[43], v14[44]);
  double v39 = CGSize.subtracting(insets:)(v35, v36, v37, v38, a4, a5);
  double v41 = v39;
  double v42 = v40;
  if ((*(_BYTE *)v14 & 1) != 0)
  {
    uint64_t v43 = v64;
    sub_10011E468(v64);
    uint64_t v44 = v71;
    double v45 = _VerticalFlowLayout.measurements(fitting:in:)(v71, v41, v42);
    double v47 = v46;
    double v49 = v48;
    double v51 = v50;
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v43, v66);
  }

  else
  {
    uint64_t v44 = v71;
    sub_1000F4B7C(v71, v14, v39, v40);
    double v45 = v53;
    double v47 = v54;
    double v49 = v55;
    double v51 = v56;
  }

  if (v41 > v45) {
    v52.n128_f64[0] = v41;
  }
  else {
    v52.n128_f64[0] = v45;
  }
  double v57 = JUMeasurements.adding(outsets:in:)(v44, v14[41], v14[42], v14[43], v14[44], v52, v47, v49, v51);
  sub_10002BDF4((uint64_t)v14, type metadata accessor for TVBreakoutDetailsLayout);
  uint64_t v58 = a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle, v91, 0LL, 0LL);
  uint64_t v60 = v72;
  uint64_t v59 = v73;
  uint64_t v61 = v58;
  uint64_t v62 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, v61, v74);
  (*(uint64_t (**)(char *, uint64_t))(v59 + 88))(v60, v62);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v62);
  return v57;
}

uint64_t sub_1000F4B7C(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v23 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v8 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v10 = (char *)&v24[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10011D6A0((uint64_t)v24);
  uint64_t v15 = v25;
  if (v25)
  {
    uint64_t v16 = v26;
    sub_1000112B0(v24, v25);
    double v17 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v15, *(void *)(v16 + 8), a3, a4);
    _s8AppStore17PillOverlayLayoutVwxx_0(v24);
  }

  else
  {
    sub_1000077E0((uint64_t)v24, &qword_1002E6680);
    double v17 = 0.0;
  }

  double v18 = a3 - v17;
  uint64_t v19 = a2[4];
  uint64_t v20 = a2[5];
  sub_1000112B0(a2 + 1, v19);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v19, v20);
  double v21 = AnyDimension.value(in:rounded:)(a1, v14, v19, v20);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_10011D998((uint64_t)v10);
  _VerticalFlowLayout.measurements(fitting:in:)(a1, v18 - v21, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v23);
}

void sub_1000F4D8C()
{
  *(void *)&v0[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_wordmarkView] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton] = 0LL;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailTextAlignment];
  uint64_t v2 = enum case for BreakoutDetails.TextAlignment.leading(_:);
  uint64_t v3 = type metadata accessor for BreakoutDetails.TextAlignment(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104LL))(v1, v2, v3);
  unint64_t v4 = &v0[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle];
  uint64_t v5 = enum case for BreakoutDetails.BackgroundStyle.material(_:);
  uint64_t v6 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104LL))(v4, v5, v6);
  uint64_t v7 = &v0[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badge];
  uint64_t v8 = enum case for BreakoutDetails.Badge.none(_:);
  uint64_t v9 = type metadata accessor for BreakoutDetails.Badge(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104LL))(v7, v8, v9);

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/BreakoutDetailsView.swift",  34LL,  2LL,  333LL,  0);
  __break(1u);
}

uint64_t storeEnumTagSinglePayload for BreakoutDetailsView.Config.ButtonType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_1000F4F08 + 4 * byte_10023CE65[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000F4F3C + 4 * byte_10023CE60[v4]))();
}

uint64_t sub_1000F4F3C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000F4F44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1000F4F4CLL);
  }
  return result;
}

uint64_t sub_1000F4F58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1000F4F60LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_1000F4F64(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000F4F6C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BreakoutDetailsView.Config.ButtonType()
{
  return &type metadata for BreakoutDetailsView.Config.ButtonType;
}

unint64_t sub_1000F4F8C()
{
  unint64_t result = qword_1002E9410;
  if (!qword_1002E9410)
  {
    unint64_t result = swift_getWitnessTable(&unk_10023CF34, &type metadata for BreakoutDetailsView.Config.ButtonType);
    atomic_store(result, (unint64_t *)&qword_1002E9410);
  }

  return result;
}

void *sub_1000F4FD0()
{
  __int16 v1 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore31FramedArtworkCollectionViewCell_artworkView);
  id v2 = v1;
  return v1;
}

uint64_t sub_1000F5064(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FramedArtwork(0LL);
  uint64_t result = swift_dynamicCastClass(a1, v2);
  if (result) {
    return FramedArtwork.artwork.getter();
  }
  return result;
}

void sub_1000F5148()
{
}

uint64_t sub_1000F5168()
{
  return type metadata accessor for FramedArtworkCollectionViewCell(0LL);
}

uint64_t type metadata accessor for FramedArtworkCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E9448;
  if (!qword_1002E9448) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FramedArtworkCollectionViewCell);
  }
  return result;
}

id sub_1000F51AC()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8AppStore31FramedArtworkCollectionViewCell_artworkView);
}

void sub_1000F51C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore31FramedArtworkCollectionViewCell_artworkView);
  uint64_t v5 = type metadata accessor for ArtworkView(0LL);
  uint64_t v6 = sub_100004288( (unint64_t *)&qword_1002E2270,  (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView,  (uint64_t)&protocol conformance descriptor for ArtworkView);
  id v7 = v4;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v7, a2, v5, v6);
}

uint64_t sub_1000F5250(uint64_t a1)
{
  uint64_t result = sub_100004288( &qword_1002E9458,  type metadata accessor for FramedArtworkCollectionViewCell,  (uint64_t)&unk_10023CF90);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000F528C()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

void sub_1000F52C0()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for SegmentedViewController();
  objc_msgSendSuper2(&v6, "viewDidLoad");
  uint64_t v1 = OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectorControl;
  if (!*(void *)&v0[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectorControl])
  {
    id v2 = objc_msgSend(objc_allocWithZone(UISegmentedControl), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    [v2 addTarget:v0 action:"takeSelectedIndexFrom:" forControlEvents:4096];
    id v3 = [v0 view];
    if (v3)
    {
      uint64_t v4 = v3;
      [v3 addSubview:v2];

      uint64_t v5 = *(void **)&v0[v1];
      *(void *)&v0[v1] = v2;
    }

    else
    {
      __break(1u);
    }
  }

void sub_1000F53D0()
{
  uint64_t v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for SegmentedViewController();
  objc_msgSendSuper2(&v13, "didReceiveMemoryWarning");
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments];
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0) {
      uint64_t v12 = *(void *)&v0[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments];
    }
    else {
      uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v2);
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (v3) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease(v2);
    return;
  }

  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(*(void *)&v0[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments]);
  if (!v3) {
    goto LABEL_19;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v4 = 0LL;
    uint64_t v5 = OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedViewController;
    while (1)
    {
      if ((v2 & 0xC000000000000001LL) != 0)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
        id v7 = *(void **)(v6 + 56);
        if (!v7) {
          goto LABEL_5;
        }
      }

      else
      {
        uint64_t v6 = *(void *)(v2 + 8 * v4 + 32);
        swift_retain(v6);
        id v7 = *(void **)(v6 + 56);
        if (!v7) {
          goto LABEL_5;
        }
      }

      uint64_t v8 = *(void **)&v1[v5];
      if (!v8) {
        goto LABEL_14;
      }
      sub_10000DFD4(0LL, (unint64_t *)&qword_1002E5EA0, &OBJC_CLASS___UIViewController_ptr);
      id v9 = v7;
      id v10 = v8;
      char v11 = static NSObject.== infix(_:_:)(v9, v10);

      if ((v11 & 1) == 0)
      {
        id v7 = *(void **)(v6 + 56);
LABEL_14:
        *(void *)(v6 + 56) = 0LL;
        swift_release(v6);

        goto LABEL_6;
      }

void sub_1000F5588(uint64_t a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for SegmentedViewController();
  objc_msgSendSuper2(&v11, "traitCollectionDidChange:", a1);
  if (a1) {
    return;
  }
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments];
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0) {
      uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments];
    }
    else {
      uint64_t v9 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments]);
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v3);
    if (v10) {
      return;
    }
  }

  else if (*(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    return;
  }

  uint64_t v4 = OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectorControl;
  if (!*(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectorControl])
  {
    id v5 = objc_msgSend(objc_allocWithZone(UISegmentedControl), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    [v5 addTarget:v1 action:"takeSelectedIndexFrom:" forControlEvents:4096];
    id v6 = [v1 view];
    if (!v6)
    {
      __break(1u);
      return;
    }

    id v7 = v6;
    [v6 addSubview:v5];

    uint64_t v8 = *(void **)&v1[v4];
    *(void *)&v1[v4] = v5;
  }

  sub_1000F5A10();
}

void sub_1000F571C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (a1 == -1
    || (uint64_t v5 = OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedViewController,
        (id v6 = *(void **)&v2[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedViewController]) == 0LL))
  {
LABEL_10:
    if (a2 == -1LL)
    {
LABEL_24:
      [*(id *)&v3[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectorControl] setSelectedSegmentIndex:a2];
      return;
    }

    uint64_t v15 = *(void *)&v3[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments];
    if ((v15 & 0xC000000000000001LL) == 0)
    {
      if ((a2 & 0x8000000000000000LL) != 0)
      {
        __break(1u);
      }

      else if (*(void *)((v15 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
      {
        uint64_t v16 = *(void *)(v15 + 8 * a2 + 32);
        __n128 v17 = swift_retain(v16);
        double v18 = *(void **)(v16 + 56);
        if (v18)
        {
LABEL_15:
          id v19 = v18;
LABEL_18:
          id v22 = v18;
          id v23 = [v19 parentViewController];
          if (v23)
          {
            uint64_t v24 = v23;
            sub_10000DFD4(0LL, (unint64_t *)&qword_1002E5EA0, &OBJC_CLASS___UIViewController_ptr);
            uint64_t v25 = v3;
            id v26 = v24;
            LOBYTE(vsub_1000C9674(*(void *)(v0 + 16), v0 + 24) = static NSObject.== infix(_:_:)(v26, v25);
          }

          [v3 addChildViewController:v19];
          id v27 = [v3 view];
          if (v27)
          {
            id v28 = v27;
            id v29 = [v19 view];
            if (v29)
            {
              uint64_t v30 = v29;
              [v28 addSubview:v29];

LABEL_23:
              uint64_t v31 = *(void **)&v3[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedViewController];
              *(void *)&v3[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedViewController] = v19;
              swift_release(v16);

              goto LABEL_24;
            }

            goto LABEL_28;
          }

LABEL_29:
  __break(1u);
}

              uint64_t v43 = 0LL;
              uint64_t v154 = 0u;
              double v155 = 0u;
              __n128 v52 = 1;
              goto LABEL_30;
            }
          }

          else
          {
            uint64_t v154 = 0u;
            double v155 = 0u;
          }

          sub_1000077E0((uint64_t)&v154, (uint64_t *)&unk_1002E3500);
          goto LABEL_29;
        }
      }

      else
      {
        uint64_t v154 = 0u;
        double v155 = 0u;
      }
    }

    else
    {
      uint64_t v154 = 0u;
      double v155 = 0u;
    }

    sub_1000077E0((uint64_t)&v154, (uint64_t *)&unk_1002E3500);
    uint64_t v139 = 0LL;
    double v37 = 0LL;
    goto LABEL_17;
  }

  return result;
}

        swift_once(&qword_1002E0690, sub_100072BF0);
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(*(void *)&v6[v11]);
      if (v14) {
        goto LABEL_6;
      }
    }

    swift_bridgeObjectRelease(v13);
    return 1LL;
  }

  if (*(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10) == 1LL) {
    goto LABEL_4;
  }
  return 1LL;
}

      sub_1000077E0(v140, &qword_1002E25C0);
      sub_1000077E0(v69, &qword_1002E25C0);
      id v29 = &unk_1002F5000;
      __int128 v84 = [(id)qword_1002F55D8 titleLabel];
      __int128 v85 = v84;
      if (v84)
      {
        uint64_t v86 = v84;
        __int128 v87 = [v86 font];
        uint64_t result = v126;
        if (!v87)
        {
          __break(1u);
          return result;
        }

        uint64_t v89 = [v126 traitCollection];
        uint64_t v90 = [v87 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v89];

        [v86 setFont:v90];
      }

      uint64_t v91 = objc_msgSend((id)qword_1002F55D8, "sizeThatFits:", v8, a3);
      id v94 = CGSize.adding(outsets:)(v91, 14.0, 40.0, 14.0, 40.0, v92, v93);
      uint64_t v96 = v95;
      uint64_t v97 = type metadata accessor for LayoutViewPlaceholder(0LL);
      swift_allocObject(v97, *(unsigned int *)(v97 + 48), *(unsigned __int16 *)(v97 + 52));
      uint64_t v30 = LayoutViewPlaceholder.init(representing:)(v94, v96);
      id v98 = swift_retain(v30);
      if ((swift_isUniquelyReferenced_nonNull_native(v54, v98) & 1) == 0) {
        double v54 = sub_1000183E4(0LL, v54[2] + 1LL, 1, v54);
      }
      uint64_t v100 = v54[2];
      uint64_t v99 = v54[3];
      if (v100 >= v99 >> 1) {
        double v54 = sub_1000183E4((void *)(v99 > 1), v100 + 1, 1, v54);
      }
      uint64_t v145 = (void *)v97;
      uint64_t v146 = &protocol witness table for LayoutViewPlaceholder;
      *(void *)&uint64_t v144 = v30;
      v54[2] = v100 + 1;
      sub_1000243BC(&v144, (uint64_t)&v54[5 * v100 + 4]);
      swift_release(v139);
      swift_release(v30);

      double v36 = v142;
      double v53 = (uint64_t)v135;
      a6 = v131;
      id v27 = v130;
LABEL_7:
      ++v25;
      if (v141 == v27) {
        goto LABEL_38;
      }
    }
  }

  double v54 = _swiftEmptyArrayStorage;
LABEL_38:
  swift_bridgeObjectRelease(a6);
  uint64_t v101 = v126;
  uint64_t v102 = PageTraitEnvironment.pageContentSize.getter();
  if (qword_1002E0BC8 != -1) {
    swift_once(&qword_1002E0BC8, sub_10010B944);
  }
  uint64_t v103 = v118;
  uint64_t v104 = sub_10000A634(v118, (uint64_t)qword_1002F44C8);
  uint64_t v105 = v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v119, v104, v103);
  uint64_t v145 = &type metadata for CGFloat;
  uint64_t v146 = &protocol witness table for CGFloat;
  *(double *)&uint64_t v144 = (v102 + -160.0) / 5.0 * 4.0 + 120.0;
  PrivacyFooterLayout.Metrics.maxTextWidth.setter(&v144);
  uint64_t v106 = v148;
  uint64_t v107 = v149;
  uint64_t v108 = sub_1000112B0(&v147, v148);
  uint64_t v145 = (void *)v106;
  uint64_t v146 = *(void **)(v107 + 8);
  __n128 v109 = sub_10000DD7C(&v144);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v106 - 8) + 16LL))(v109, v108, v106);
  uint64_t v110 = v120;
  PrivacyFooterLayout.init(metrics:bodyLabel:actionButtons:)(v105, &v144, v54);
  uint64_t v111 = sub_100004288( &qword_1002EF3E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyFooterLayout,  (uint64_t)&protocol conformance descriptor for PrivacyFooterLayout);
  uint64_t v112 = v122;
  dispatch thunk of Measurable.measurements(fitting:in:)(v101, v122, v111, v8, a3);

  (*(void (**)(char *, uint64_t))(v121 + 8))(v110, v112);
  v36[1](v116, v134);
  return (id)_s8AppStore17PillOverlayLayoutVwxx_0(&v147);
}

  double v48 = v46[7];
  uint64_t v93 = (char *)(v46 + 7);
  double v49 = 1LL << *((_BYTE *)v46 + 32);
  double v50 = -1LL;
  if (v49 < 64) {
    double v50 = ~(-1LL << v49);
  }
  double v51 = v50 & v48;
  id v94 = (char *)((unint64_t)(v49 + 63) >> 6);
  id v98 = (unint64_t)v46;
  swift_bridgeObjectRetain(v46);
  __n128 v52 = 0LL;
  double v53 = v99;
  double v54 = v104;
  while (1)
  {
    if (v51)
    {
      uint64_t v101 = (v51 - 1) & v51;
      uint64_t v102 = v52;
      double v55 = __clz(__rbit64(v51)) | (v52 << 6);
      double v56 = v98;
      goto LABEL_33;
    }

    id v70 = v52 + 1;
    double v56 = v98;
    if (__OFADD__(v52, 1LL))
    {
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }

    uint64_t v71 = *(void *)&v93[8 * v70];
    uint64_t v72 = v52 + 1;
    if (!v71)
    {
      uint64_t v72 = v52 + 2;
      uint64_t v71 = *(void *)&v93[8 * v72];
      if (!v71)
      {
        uint64_t v72 = v52 + 3;
        uint64_t v71 = *(void *)&v93[8 * v72];
        if (!v71) {
          break;
        }
      }
    }

void sub_1000F5A10()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LabelPlaceholderCompatibility(0LL);
  uint64_t v61 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  __chkstk_darwin(v2);
  uint64_t v60 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectorControl];
  if (v4)
  {
    id v5 = v4;
    [v5 removeAllSegments];
    uint64_t v7 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E5300, &OBJC_CLASS___UIFont_ptr);
    if (qword_1002E0798 != -1) {
      swift_once(&qword_1002E0798, sub_100072FAC);
    }
    uint64_t v8 = type metadata accessor for FontUseCase(0LL, v6);
    uint64_t v9 = sub_10000A634(v8, (uint64_t)qword_1002F3220);
    id v10 = [v1 traitCollection];
    id v11 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v9, v10);

    uint64_t v12 = sub_1000038E8(&qword_1002E3738);
    uint64_t inited = swift_initStackObject(v12, v65);
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
    *(void *)(inited + 64) = v7;
    *(void *)(inited + 32) = NSFontAttributeName;
    *(void *)(inited + 40) = v11;
    uint64_t v14 = NSFontAttributeName;
    id v63 = v11;
    unint64_t v15 = sub_1000EC244(inited);
    type metadata accessor for Key(0LL);
    sub_100004288( (unint64_t *)&qword_1002E1680,  (uint64_t (*)(uint64_t))type metadata accessor for Key,  (uint64_t)&unk_100236A3C);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "setTitleTextAttributes:forState:", isa, 0, swift_bridgeObjectRelease(v15).n128_f64[0]);

    uint64_t v57 = OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments;
    uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments];
    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0) {
        uint64_t v48 = *(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments];
      }
      else {
        uint64_t v48 = v17 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v17);
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v48);
      if (v18)
      {
LABEL_6:
        if (v18 >= 1)
        {
          uint64_t v19 = 0LL;
          unint64_t v20 = v17 & 0xC000000000000001LL;
          unsigned int v59 = enum case for Feature.measurement_with_labelplaceholder(_:);
          double v21 = 0.0;
          id v58 = v5;
          while (1)
          {
            if (v20)
            {
              uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v17);
              uint64_t v24 = *(void *)(v22 + 24);
              if (!v24) {
                goto LABEL_14;
              }
            }

            else
            {
              uint64_t v22 = *(void *)(v17 + 8 * v19 + 32);
              unint64_t v23 = swift_retain(v22).n128_u64[0];
              uint64_t v24 = *(void *)(v22 + 24);
              if (!v24)
              {
LABEL_14:
                NSString v25 = 0LL;
                goto LABEL_15;
              }
            }

            swift_bridgeObjectRetain(v24);
            NSString v25 = String._bridgeToObjectiveC()();
            unint64_t v23 = swift_bridgeObjectRelease(v24).n128_u64[0];
LABEL_15:
            objc_msgSend(v5, "insertSegmentWithTitle:atIndex:animated:", v25, v19, 0, *(double *)&v23, v57);

            uint64_t v26 = *(void *)(v22 + 24);
            if (v26)
            {
              uint64_t v27 = *(void *)(v22 + 16);
              swift_bridgeObjectRetain(*(void *)(v22 + 24));
              id v28 = [v1 view];
              if (v28)
              {
                id v29 = v28;
                [v28 bounds];
                double v31 = v30;
                double v33 = v32;

                uint64_t v34 = type metadata accessor for Feature(0LL);
                v64[3] = v34;
                v64[4] = sub_100004288( (unint64_t *)&qword_1002E21F0,  (uint64_t (*)(uint64_t))&type metadata accessor for Feature,  (uint64_t)&protocol conformance descriptor for Feature);
                double v35 = sub_10000DD7C(v64);
                (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104LL))(v35, v59, v34);
                id v36 = v63;
                uint64_t v37 = v17;
                uint64_t v38 = v18;
                unint64_t v39 = v20;
                double v40 = v1;
                char v41 = isFeatureEnabled(_:)(v64);
                _s8AppStore17PillOverlayLayoutVwxx_0(v64);
                char v42 = v41 & 1;
                uint64_t v1 = v40;
                LOBYTE(v56) = v42;
                uint64_t v43 = v60;
                LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)( v27,  v26,  v36,  4LL,  0LL,  0LL,  0LL,  0LL,  v56);
                uint64_t v44 = sub_100004288( (unint64_t *)&unk_1002ED070,  (uint64_t (*)(uint64_t))&type metadata accessor for LabelPlaceholderCompatibility,  (uint64_t)&protocol conformance descriptor for LabelPlaceholderCompatibility);
                uint64_t v45 = v62;
                double v46 = dispatch thunk of Measurable.measurements(fitting:in:)(v1, v62, v44, v31, v33);
                swift_release(v22);
                if (v21 <= v46 + 50.0) {
                  double v21 = v46 + 50.0;
                }
                double v47 = v43;
                unint64_t v20 = v39;
                uint64_t v18 = v38;
                uint64_t v17 = v37;
                id v5 = v58;
                (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v45);
              }

              else
              {
                swift_release(v22);
                swift_bridgeObjectRelease(v26);
              }
            }

            else
            {
              swift_release(v22);
            }

            if (v18 == ++v19) {
              goto LABEL_26;
            }
          }
        }

        goto LABEL_38;
      }
    }

    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(v17);
      if (v18) {
        goto LABEL_6;
      }
    }

    double v21 = 0.0;
LABEL_26:
    unint64_t v49 = swift_bridgeObjectRelease(v17).n128_u64[0];
    uint64_t v50 = *(void *)&v1[v57];
    double v51 = v1;
    if ((unint64_t)v50 >> 62)
    {
      if (v50 < 0) {
        uint64_t v55 = *(void *)&v1[v57];
      }
      else {
        uint64_t v55 = v50 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v50);
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter(v55);
      unint64_t v49 = swift_bridgeObjectRelease(v50).n128_u64[0];
      if (v52 < 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
    }

    else
    {
      uint64_t v52 = *(void *)((v50 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    if (v52)
    {
      uint64_t v53 = 0LL;
      do
      {
        uint64_t v54 = v53 + 1;
        [v5 setWidth:v21 forSegmentAtIndex:v57];
        uint64_t v53 = v54;
      }

      while (v52 != v54);
    }

    objc_msgSend( v5,  "setSelectedSegmentIndex:",  *(void *)&v51[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedIndex],  *(double *)&v49,  v57);
  }

void sub_1000F5FFC()
{
  v29.receiver = v0;
  v29.super_class = (Class)type metadata accessor for SegmentedViewController();
  objc_msgSendSuper2(&v29, "viewWillLayoutSubviews");
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }

  uint64_t v2 = v1;
  [v1 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  [v0 pageMarginInsets];
  id v11 = [v0 view];
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }

  uint64_t v12 = v11;
  id v13 = [v11 safeAreaLayoutGuide];

  [v13 layoutFrame];
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;

  v30.origin.double x = v15;
  v30.origin.double y = v17;
  v30.size.double width = v19;
  v30.size.double height = v21;
  double MinY = CGRectGetMinY(v30);
  sub_1000F620C(v4, v6, v8, v10, MinY);
  uint64_t v24 = *(void **)&v0[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedViewController];
  if (!v24) {
    return;
  }
  double v25 = v23;
  id v26 = v24;
  id v27 = [v26 view];
  if (!v27)
  {
LABEL_9:
    __break(1u);
    return;
  }

  id v28 = v27;
  sub_10000B354(v4, v6, v8, v10, v25, 0.0);
  [v28 setFrame:CGRect.withLayoutDirection(in:relativeTo:)(v0)];
}

double sub_1000F620C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  uint64_t v11 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  double v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v34.origin.double x = a1;
  v34.origin.double y = a2;
  v34.size.double width = a3;
  v34.size.double height = a4;
  double Width = CGRectGetWidth(v34);
  CGFloat v15 = *(void **)(v5 + OBJC_IVAR____TtC8AppStore23SegmentedViewController_headerView);
  if (v15)
  {
    id v16 = v15;
    v35.origin.double x = a1;
    v35.origin.double y = a2;
    v35.size.double width = a3;
    v35.size.double height = a4;
    CGFloat MinX = CGRectGetMinX(v35);
    v36.origin.double x = a1;
    v36.origin.double y = a2;
    v36.size.double width = a3;
    v36.size.double height = a4;
    CGFloat v18 = CGRectGetMinY(v36) + a5;
    v37.origin.double x = a1;
    v37.origin.double y = a2;
    v37.size.double width = a3;
    v37.size.double height = a4;
    CGFloat v19 = CGRectGetWidth(v37);
    objc_msgSend(v16, "measurementsWithFitting:in:", v5, a3, a4);
    CGFloat v21 = v20;
    [v16 setFrame:CGRect.withLayoutDirection(in:relativeTo:)(v5)];
    v38.origin.double x = MinX;
    v38.origin.double y = v18;
    v38.size.double width = v19;
    v38.size.double height = v21;
    double MaxY = CGRectGetMaxY(v38);

    double v23 = MaxY + 0.0;
  }

  else
  {
    double v23 = 0.0;
  }

  uint64_t v24 = *(void **)(v5 + OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectorControl);
  if (v24)
  {
    id v25 = v24;
    if ((uint64_t)[v25 numberOfSegments] < 2)
    {
      [v25 setHidden:1];
    }

    else
    {
      [v25 setHidden:0];
      objc_msgSend(v25, "measurementsWithFitting:in:", v5, a3, a4);
      double v32 = v26;
      v39.origin.double x = a1;
      v39.origin.double y = a2;
      v39.size.double width = a3;
      v39.size.double height = a4;
      CGRectGetMidX(v39);
      v40.origin.double x = a1;
      v40.origin.double y = a2;
      v40.size.double width = a3;
      v40.size.double height = a4;
      CGRectGetMinY(v40);
      id v27 = v25;
      double v28 = v32;
      [v27 setFrame:CGRect.withLayoutDirection(in:relativeTo:)(v5)];

      double v23 = v23 + v28;
    }
  }

  if (v23 >= COERCE_DOUBLE(1LL))
  {
    if (qword_1002E0BE0 != -1) {
      swift_once(&qword_1002E0BE0, sub_100110BD8);
    }
    uint64_t v29 = type metadata accessor for StaticDimension(0LL);
    uint64_t v30 = sub_10000A634(v29, (uint64_t)qword_1002F4540);
    static Dimensions.defaultRoundingRule.getter(v30);
    AnyDimension.value(in:rounded:)(v5, v14, v29, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  return Width;
}

id sub_1000F653C(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC8AppStore23SegmentedViewController_headerView] = 0LL;
  *(void *)&v3[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedIndex] = -1LL;
  *(void *)&v3[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedViewController] = 0LL;
  *(void *)&v3[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectorControl] = 0LL;
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v6 = 0LL;
  }

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for SegmentedViewController();
  id v7 = objc_msgSendSuper2(&v9, "initWithNibName:bundle:", v6, a3);

  return v7;
}

id sub_1000F665C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_headerView] = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_segments] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedIndex] = -1LL;
  *(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectedViewController] = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC8AppStore23SegmentedViewController_selectorControl] = 0LL;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SegmentedViewController();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_1000F6714()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SegmentedViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SegmentedViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore23SegmentedViewController);
}

uint64_t type metadata accessor for SegmentedViewController.Segment()
{
  return objc_opt_self(&OBJC_CLASS____TtCC8AppStore23SegmentedViewController7Segment);
}

unint64_t sub_1000F67E0()
{
  unint64_t result = qword_1002E9568;
  if (!qword_1002E9568)
  {
    uint64_t v1 = type metadata accessor for UpsellBreakoutCollectionViewCell(255LL);
    unint64_t result = swift_getWitnessTable(&unk_10023D030, v1);
    atomic_store(result, (unint64_t *)&qword_1002E9568);
  }

  return result;
}

double sub_1000F682C(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v40 = type metadata accessor for PageGrid(0LL);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  id v3 = (char **)((char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  __chkstk_darwin(v4);
  CGRect v35 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_1000038E8((uint64_t *)&unk_1002EE3B0);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  id v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char **)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v44, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023D080, v17);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  uint64_t v20 = swift_getKeyPath(&unk_10023D0B0, v19);
  ReadOnlyLens.subscript.getter(&v43, v20, v8);
  __n128 v21 = swift_release(v20);
  (*(void (**)(void *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
  __n128 v22 = swift_bridgeObjectRelease(v43);
  ItemLayoutContext.state.getter(v22);
  uint64_t v23 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v24 = swift_dynamicCastClassUnconditional(v36, v23, 0LL, 0LL, 0LL);
  uint64_t v25 = (uint64_t)v35;
  ItemLayoutContext.componentLayoutOptions.getter(v24);
  uint64_t v27 = swift_getKeyPath(&unk_10023D0E0, v26);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v27);
  double v28 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  double v30 = v29;
  (*(void (**)(void *, uint64_t))(v38 + 8))(v3, v40);
  id v31 = sub_10014DB80();
  sub_1000344FC((uint64_t)v44, (uint64_t)v7, v25, (uint64_t)v31, v28, v30);
  double v33 = v32;
  swift_unknownObjectRelease(v31);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v25, v42);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v39);
  _s8AppStore17PillOverlayLayoutVwxx_0(v44);
  return v33;
}

uint64_t sub_1000F6B30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Shelf.seeAllAction.getter();
  *a1 = result;
  return result;
}

BOOL sub_1000F6B58()
{
  uint64_t v0 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = ItemLayoutContext.parentShelfLayoutContext.getter(v8);
  ShelfLayoutContext.shelf.getter(v9);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023D1F0, v11);
  ReadOnlyLens.subscript.getter(&v26, KeyPath, v0);
  __n128 v13 = swift_release(KeyPath);
  __n128 v14 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
  v14(v3, v0, v13);
  uint64_t v15 = v26;
  __n128 v16 = swift_release(v26);
  uint64_t v17 = ItemLayoutContext.index.getter(v16);
  uint64_t v18 = ItemLayoutContext.parentShelfLayoutContext.getter(v17);
  ShelfLayoutContext.shelf.getter(v18);
  v10(v7, v4);
  uint64_t v20 = swift_getKeyPath(&unk_10023D220, v19);
  ReadOnlyLens.subscript.getter(&v26, v20, v0);
  __n128 v21 = swift_release(v20);
  v14(v3, v0, v21);
  uint64_t v22 = *(void *)(v26 + 16);
  swift_bridgeObjectRelease(v26);
  return v15 && v17 == v22 - 1;
}

uint64_t sub_1000F6CF4()
{
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t type metadata accessor for SeeAllCapableCollectionElementsObserver()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore39SeeAllCapableCollectionElementsObserver);
}

double sub_1000F6D28(void *a1)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t ObjectType = swift_getObjectType(a1);
  uint64_t v7 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for SeeAllCapableView);
  if (v7) {
    uint64_t v10 = v7;
  }
  else {
    uint64_t v10 = 0LL;
  }
  if (v7) {
    uint64_t v11 = a1;
  }
  else {
    uint64_t v11 = 0LL;
  }
  if (v11)
  {
    uint64_t KeyPath = swift_getKeyPath(&unk_10023D1C0, v8);
    id v13 = a1;
    ItemLayoutContext.subscript.getter(v5);
    swift_release(KeyPath);
    uint64_t v15 = swift_getKeyPath(&unk_10023D1F0, v14);
    ReadOnlyLens.subscript.getter(&v21, v15, v2);
    __n128 v16 = swift_release(v15);
    (*(void (**)(void *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
    uint64_t v17 = v21;
    if (v21)
    {
      if (sub_1000F6B58())
      {
        uint64_t v18 = swift_getObjectType(v11);
        id v19 = sub_10014DB80();
        (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v10 + 16))(v17, v19, v18, v10);

        swift_release(v17);
        swift_unknownObjectRelease(v19);
      }

      else
      {

        *(void *)&double result = swift_release(v17).n128_u64[0];
      }
    }

    else
    {
    }
  }

  return result;
}

uint64_t sub_1000F6EB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Shelf.seeAllAction.getter();
  *a1 = result;
  return result;
}

double sub_1000F6EDC()
{
  double result = 560.0;
  xmmword_1002F4370 = xmmword_10023D250;
  return result;
}

uint64_t sub_1000F6EF0()
{
  uint64_t v0 = type metadata accessor for FontSource(0LL);
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v18[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0678 != -1) {
    swift_once(&qword_1002E0678, sub_100072BA8);
  }
  uint64_t v5 = type metadata accessor for FontUseCase(0LL, v2);
  uint64_t v6 = sub_10000A634(v5, (uint64_t)qword_1002F2EC0);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL);
  v7(v4, v6, v5);
  uint64_t v8 = enum case for FontSource.useCase(_:);
  uint64_t v9 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v9(v4, enum case for FontSource.useCase(_:), v0);
  uint64_t v10 = type metadata accessor for StaticDimension(0LL);
  uint64_t v23 = v10;
  uint64_t v24 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v22);
  uint64_t v20 = v0;
  uint64_t v21 = &protocol witness table for FontSource;
  uint64_t v11 = sub_10000DD7C(&v19);
  uint64_t v12 = (void (*)(void *, char *, uint64_t))v1[2];
  v12(v11, v4, v0);
  StaticDimension.init(_:scaledLike:)(&v19, 30.0);
  id v13 = (void (*)(char *, uint64_t))v1[1];
  v13(v4, v0);
  if (qword_1002E0680 != -1) {
    swift_once(&qword_1002E0680, sub_100072BC0);
  }
  uint64_t v14 = sub_10000A634(v5, (uint64_t)qword_1002F2ED8);
  v7(v4, v14, v5);
  v9(v4, v8, v0);
  uint64_t v20 = v10;
  uint64_t v21 = &protocol witness table for StaticDimension;
  sub_10000DD7C(&v19);
  _OWORD v18[3] = v0;
  _OWORD v18[4] = &protocol witness table for FontSource;
  uint64_t v15 = sub_10000DD7C(v18);
  v12(v15, v4, v0);
  StaticDimension.init(_:scaledLike:)(v18, 30.0);
  v13(v4, v0);
  qword_1002F43E8 = (uint64_t)&type metadata for Double;
  unk_1002F43F0 = &protocol witness table for Double;
  qword_1002F43D0 = 0x404B000000000000LL;
  qword_1002F4410 = (uint64_t)&type metadata for Double;
  unk_1002F4418 = &protocol witness table for Double;
  qword_1002F43F8 = 0x4034000000000000LL;
  qword_1002F4438 = (uint64_t)&type metadata for Double;
  unk_1002F4440 = &protocol witness table for Double;
  qword_1002F4420 = 0x4034000000000000LL;
  qword_1002F4460 = (uint64_t)&type metadata for Double;
  unk_1002F4468 = &protocol witness table for Double;
  qword_1002F4448 = 0x4040000000000000LL;
  sub_1000243BC(&v22, (uint64_t)&unk_1002F4380);
  uint64_t result = sub_1000243BC(&v19, (uint64_t)&unk_1002F43A8);
  qword_1002F4470 = 0x4018000000000000LL;
  return result;
}

uint64_t sub_1000F7160(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v125 = type metadata accessor for CornerStyle(0LL);
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  id v123 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v132 = type metadata accessor for SystemImage(0LL);
  uint64_t v133 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v131 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for FontUseCase(0LL, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  __n128 v16 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = &unk_1002E9000;
  uint64_t v18 = OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_titleLabel;
  uint64_t v19 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v20 = qword_1002E0678;
  uint64_t v127 = v5;
  if (v20 != -1) {
    swift_once(&qword_1002E0678, sub_100072BA8);
  }
  uint64_t v21 = sub_10000A634(v13, (uint64_t)qword_1002F2EC0);
  __int128 v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v22(v16, v21, v13);
  *(void *)&v5[v18] = sub_100011F1C((uint64_t)v16, 2LL, 0LL, 1, 0);
  uint64_t v23 = OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_subtitleLabel;
  if (qword_1002E0680 != -1) {
    swift_once(&qword_1002E0680, sub_100072BC0);
  }
  uint64_t v24 = sub_10000A634(v13, (uint64_t)qword_1002F2ED8);
  v22(v16, v24, v13);
  uint64_t v126 = (objc_class *)v19;
  uint64_t v25 = sub_100011F1C((uint64_t)v16, 2LL, 0LL, 1, 0);
  uint64_t v26 = v127;
  *(void *)&v127[v23] = v25;
  uint64_t v27 = sub_100024514((void *)1, 5LL);
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 + 16);
  double v30 = &selRef_accessibilityRating;
  id v31 = _swiftEmptyArrayStorage;
  if (v29)
  {
    *(void *)&v140[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v29);
    double v32 = (objc_class *)type metadata accessor for StarRatingView();
    uint64_t v33 = 0LL;
    unsigned int v129 = enum case for SystemImage.starFill(_:);
    UIFontTextStyle v128 = UIFontTextStyleCaption1;
    uint64_t v130 = v32;
    do
    {
      uint64_t v38 = *(void *)(v28 + 8 * v33 + 32);
      uint64_t v39 = objc_msgSend(objc_allocWithZone(v32), v30[45], 0.0, 0.0, 0.0, 0.0);
      char v40 = v39[OBJC_IVAR____TtC8AppStore14StarRatingView_starSize];
      v39[OBJC_IVAR____TtC8AppStore14StarRatingView_starSize] = 1;
      if ((v40 & 1) == 0)
      {
        uint64_t v41 = v133;
        uint64_t v42 = v131;
        uint64_t v43 = v28;
        uint64_t v44 = v30;
        uint64_t v45 = v132;
        (*(void (**)(char *, void, uint64_t))(v133 + 104))(v131, v129, v132);
        sub_10000DFD4(0LL, (unint64_t *)&qword_1002E3740, &OBJC_CLASS___UIImageSymbolConfiguration_ptr);
        uint64_t v134 = v38;
        double v46 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)(v128, 0LL, 1LL, 1LL, 0LL);
        double v47 = (void *)static SystemImage.load(_:with:)(v42, v46);

        uint64_t v48 = v45;
        double v30 = v44;
        uint64_t v28 = v43;
        double v32 = v130;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v48);
        id v49 = [v47 imageWithRenderingMode:2];

        uint64_t v50 = *(void **)&v39[OBJC_IVAR____TtC8AppStore14StarRatingView_starGlyph];
        *(void *)&v39[OBJC_IVAR____TtC8AppStore14StarRatingView_starGlyph] = v49;
        uint64_t v38 = v134;

        [v39 setNeedsDisplay];
      }

      v39[OBJC_IVAR____TtC8AppStore14StarRatingView_showsEmptyStars] = 0;
      id v34 = [v39 setNeedsLayout];
      double v35 = *(double *)&v39[OBJC_IVAR____TtC8AppStore14StarRatingView_rating];
      *(double *)&v39[OBJC_IVAR____TtC8AppStore14StarRatingView_rating] = (double)v38;
      ++v33;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v34);
      uint64_t v36 = *(void *)(*(void *)&v140[0] + 16LL);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v36);
      uint64_t v37 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v39);
      specialized ContiguousArray._endMutation()(v37);
    }

    while (v29 != v33);
    double v51 = v127;
    *(void *)&v127[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_starViews] = *(void *)&v140[0];
    *(void *)&v140[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v29);
    uint64_t v52 = (objc_class *)type metadata accessor for ProgressBarView();
    uint64_t v17 = (void *)&unk_1002E9000;
    do
    {
      id v53 = [objc_allocWithZone(v52) init];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v53);
      uint64_t v54 = *(void *)(*(void *)&v140[0] + 16LL);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v54);
      uint64_t v55 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v53);
      specialized ContiguousArray._endMutation()(v55);
      --v29;
    }

    while (v29);
    id v31 = *(void **)&v140[0];
    swift_bridgeObjectRelease(v28);
  }

  else
  {
    *(void *)&v26[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_starViews] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v27);
    double v51 = v26;
  }

  *(void *)&v51[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_progressBarViews] = v31;

  int v56 = (objc_class *)type metadata accessor for ProductRatingsHistogramCardView();
  v139.receiver = v51;
  v139.super_class = v56;
  uint64_t v57 = (char *)objc_msgSendSuper2(&v139, v30[45], a1, a2, a3, a4);
  id v58 = [v57 contentView];
  [v58 setClipsToBounds:1];

  uint64_t v59 = v124;
  uint64_t v60 = v123;
  uint64_t v61 = v125;
  (*(void (**)(char *, void, uint64_t))(v124 + 104))(v123, enum case for CornerStyle.continuous(_:), v125);
  id v62 = [v57 contentView];
  CornerStyle.apply(withRadius:to:)(v62, 12.0);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  id v63 = &v57[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  __int128 v64 = *(_OWORD *)&v57[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 16];
  v145[0] = *(_OWORD *)&v57[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  v145[1] = v64;
  char v146 = v57[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)id v63 = 0x4020000000000000LL;
  *((void *)v63 + 1) = 0x4039000000000000LL;
  v63[16] = 0;
  *((void *)v63 + 3) = 0LL;
  v63[32] = 1;
  uint64_t v65 = v57;
  sub_100068D40((uint64_t)v145, v66, v67);

  v140[0] = xmmword_100236D50;
  v140[1] = xmmword_100236D60;
  char v141 = 0;
  uint64_t v142 = 0LL;
  uint64_t v143 = 0LL;
  char v144 = 1;
  id v68 = v65;
  sub_1000673E8(v140);

  id v69 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v70 = v68;
  id v71 = [v69 blackColor];
  id v72 = [v71 CGColor];

  uint64_t v73 = &v70[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  uint64_t v74 = *(void **)&v70[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  uint64_t v75 = *(void **)&v70[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 8];
  __int128 v76 = *(void **)&v70[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 16];
  *(void *)uint64_t v73 = v72;
  *(int64x2_t *)(v73 + 8) = vdupq_n_s64(1uLL);
  id v77 = v74;
  sub_10000B3E0(v75);
  sub_10000B3E0(v76);
  id v78 = v72;

  sub_10000B3F0(v75);
  sub_10000B3F0(v76);
  sub_100068E94(v74, v75, (unint64_t)v76);

  sub_10000B3F0(v75);
  sub_10000B3F0(v76);

  __int128 v79 = &v70[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v80 = *(_DWORD *)&v70[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v74) = *(_DWORD *)&v70[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v75) = v70[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v76) = v70[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)__int128 v79 = 1048576000;
  *((_DWORD *)v79 + 1) = 1051931443;
  v79[8] = 0;
  uint64_t v81 = *((unsigned int *)v79 + 3);
  *((_DWORD *)v79 + 3) = 0;
  v79[16] = 1;
  __int128 v82 = v70;
  char v138 = (char)v75;
  char v137 = (char)v76;
  v83.n128_u32[0] = v80;
  sub_100068FFC((int)v74, v75 | (unint64_t)(v81 << 32), (char)v76, v83);

  char v84 = v82[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled];
  v82[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v84 & 1) == 0)
  {
    char v85 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v82) + 0x98LL))();
    uint64_t v86 = v82;
    sub_10006753C(v85);
  }

  uint64_t v87 = v17[194];
  __int128 v88 = *(void **)&v82[v87];
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  id v89 = v88;
  uint64_t v90 = (void *)static UIColor.opacityA.getter();
  [v89 setTextColor:v90];

  uint64_t v91 = *(_BYTE **)&v82[v87];
  int v92 = v91[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_directionalTextAlignment];
  v91[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v92 != 1)
  {
    uint64_t v93 = v91;
    id v94 = [v93 traitCollection];
    char v95 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v95 & 1) != 0) {
      uint64_t v96 = 2LL;
    }
    else {
      uint64_t v96 = 0LL;
    }
    v136.receiver = v93;
    v136.super_class = v126;
    objc_msgSendSuper2(&v136, "setTextAlignment:", v96);
  }

  id v97 = [v82 contentView];
  [v97 addSubview:*(void *)&v82[v87]];

  uint64_t v98 = OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_subtitleLabel;
  uint64_t v99 = *(_BYTE **)&v82[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_subtitleLabel];
  int v100 = v99[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_directionalTextAlignment];
  v99[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v100 != 1)
  {
    uint64_t v101 = v99;
    id v102 = [v101 traitCollection];
    char v103 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v103 & 1) != 0) {
      uint64_t v104 = 2LL;
    }
    else {
      uint64_t v104 = 0LL;
    }
    v135.receiver = v101;
    v135.super_class = v126;
    objc_msgSendSuper2(&v135, "setTextAlignment:", v104);
  }

  id v105 = *(id *)&v82[v98];
  uint64_t v106 = (void *)static UIColor.opacityB.getter();
  [v105 setTextColor:v106];

  id v107 = [v82 contentView];
  [v107 addSubview:*(void *)&v82[v98]];

  uint64_t v108 = *(void *)&v82[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_starViews];
  if ((unint64_t)v108 >> 62)
  {
    if (v108 < 0) {
      uint64_t v115 = *(void *)&v82[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_starViews];
    }
    else {
      uint64_t v115 = v108 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v82[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_starViews]);
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v115);
    uint64_t v109 = result;
    if (!result) {
      goto LABEL_40;
    }
  }

  else
  {
    uint64_t v109 = *(void *)((v108 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(*(void *)&v82[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_starViews]);
    if (!v109) {
      goto LABEL_40;
    }
  }

  if (v109 < 1)
  {
    __break(1u);
    goto LABEL_54;
  }

  uint64_t v111 = 0LL;
  do
  {
    if ((v108 & 0xC000000000000001LL) != 0) {
      id v112 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v111, v108);
    }
    else {
      id v112 = *(id *)(v108 + 8 * v111 + 32);
    }
    id v113 = v112;
    ++v111;
    id v114 = [v82 contentView];
    [v114 addSubview:v113];
  }

  while (v109 != v111);
LABEL_40:
  swift_bridgeObjectRelease(v108);
  uint64_t v116 = *(void *)&v82[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_progressBarViews];
  if (!((unint64_t)v116 >> 62))
  {
    uint64_t v117 = *(void *)((v116 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(*(void *)&v82[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_progressBarViews]);
    if (v117) {
      goto LABEL_42;
    }
LABEL_52:

    swift_bridgeObjectRelease(v116);
    return (uint64_t)v82;
  }

  if (v116 < 0) {
    uint64_t v122 = *(void *)&v82[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_progressBarViews];
  }
  else {
    uint64_t v122 = v116 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)&v82[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_progressBarViews]);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v122);
  uint64_t v117 = result;
  if (!result) {
    goto LABEL_52;
  }
LABEL_42:
  if (v117 >= 1)
  {
    uint64_t v118 = 0LL;
    do
    {
      if ((v116 & 0xC000000000000001LL) != 0) {
        id v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v118, v116);
      }
      else {
        id v119 = *(id *)(v116 + 8 * v118 + 32);
      }
      int v120 = v119;
      ++v118;
      id v121 = [v82 contentView];
      [v121 addSubview:v120];
    }

    while (v117 != v118);
    goto LABEL_52;
  }

LABEL_54:
  __break(1u);
  return result;
}

void *sub_1000F7D20()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (objc_class *)type metadata accessor for ProductRatingsHistogramCardView();
  v29.receiver = v0;
  v29.super_class = v6;
  objc_msgSendSuper2(&v29, "layoutSubviews");
  if (qword_1002E0B78 != -1) {
    swift_once(&qword_1002E0B78, sub_1000F6EF0);
  }
  sub_1000F8148((uint64_t)&unk_1002F4380, (uint64_t)v21);
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_titleLabel];
  uint64_t v22 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v23 = &protocol witness table for UILabel;
  v21[31] = v7;
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_subtitleLabel];
  uint64_t v25 = v22;
  uint64_t v26 = &protocol witness table for UILabel;
  uint64_t v24 = v8;
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_starViews];
  id v10 = v7;
  id v11 = v8;
  uint64_t v12 = sub_1000CA734(v9);
  uint64_t v13 = sub_1000CA758(*(void *)&v1[OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_progressBarViews]);
  uint64_t v27 = v12;
  uint64_t v28 = v13;
  id v14 = [v1 contentView];
  [v14 frame];

  *(void *)&double v15 = CGRect.subtracting(insets:)([v1 layoutMargins]).n128_u64[0];
  sub_10002BE40((uint64_t)v1, (uint64_t)v5, v15, v16, v17, v18);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_1000F8184(v21);
}

uint64_t sub_1000F8054()
{
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_starViews));
  return swift_bridgeObjectRelease(*(void *)(v0
                                             + OBJC_IVAR____TtC8AppStore31ProductRatingsHistogramCardView_progressBarViews));
}

id sub_1000F80A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductRatingsHistogramCardView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProductRatingsHistogramCardView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore31ProductRatingsHistogramCardView);
}

uint64_t sub_1000F8148(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1000F8184(void *a1)
{
  return a1;
}

uint64_t (*sub_1000F81B8(uint64_t a1))()
{
  return sub_1000F8B7C;
}

uint64_t sub_1000F81E8()
{
  uint64_t v1 = type metadata accessor for TitleEffect(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  TitleEffectUpdate.effect.getter(v3);
  uint64_t v6 = v0 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_lastKnownTitleEffect;
  swift_beginAccess( v0 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_lastKnownTitleEffect,  v17,  33LL,  0LL);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 40))(v6, v5, v1);
  swift_endAccess(v17);
  uint64_t result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeHeaderView);
  if (result)
  {
    uint64_t v9 = (void *)result;
    uint64_t v10 = TitleEffectUpdate.effect.getter(v8);
    char v11 = TitleEffectUpdate.isAnimated.getter(v10);
    uint64_t v12 = TitleEffectUpdate.animationDuration.getter();
    char v14 = v13 & 1;
    double v15 = (void *)TitleEffectUpdate.timingFunction.getter();
    sub_10003B884((uint64_t)v5, v11 & 1, v12, v14, v15);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v5, v1);
  }

  return result;
}

double sub_1000F831C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_lastKnownTitleEffect;
  uint64_t v2 = type metadata accessor for TitleEffect(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeHeaderView);
  sub_1000077E0( v0 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeTitleEffectUpdateSubscription,  (uint64_t *)&unk_1002E49A0);
  *(void *)&double result = swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL)).n128_u64[0];
  return result;
}

uint64_t sub_1000F839C()
{
  return type metadata accessor for ArcadePageHeaderCollectionElementsObserver(0LL);
}

uint64_t type metadata accessor for ArcadePageHeaderCollectionElementsObserver(uint64_t a1)
{
  uint64_t result = qword_1002E9690;
  if (!qword_1002E9690) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadePageHeaderCollectionElementsObserver);
  }
  return result;
}

void sub_1000F83E0(uint64_t a1)
{
  v6[0] = "\b";
  uint64_t v2 = type metadata accessor for TitleEffect(319LL);
  if (v3 <= 0x3F)
  {
    v6[1] = *(void *)(v2 - 8) + 64LL;
    void v6[2] = "\b";
    sub_100075F88(319LL);
    if (v5 <= 0x3F)
    {
      void v6[3] = *(void *)(v4 - 8) + 64LL;
      swift_updateClassMetadata2(a1, 256LL, 4LL, v6, a1 + 80);
    }
  }

uint64_t sub_1000F847C(void *a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002EF6F0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for TitleEffect(0LL);
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  __chkstk_darwin(v5);
  int v56 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v52 - v8;
  uint64_t v10 = sub_1000038E8((uint64_t *)&unk_1002E49A0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  double v15 = (char *)&v52 - v14;
  __chkstk_darwin(v16);
  double v18 = (char *)&v52 - v17;
  uint64_t v19 = sub_1000038E8((uint64_t *)&unk_1002E44F0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v61[0] = a1;
  unint64_t v23 = sub_1000776A8();
  id v24 = a1;
  uint64_t v25 = sub_1000038E8(&qword_1002E49B8);
  if (swift_dynamicCast(v62, v61, v23, v25, 6LL))
  {
    uint64_t v55 = v12;
    id v53 = v4;
    uint64_t v54 = v9;
    sub_1000243BC(v62, (uint64_t)v64);
    uint64_t v26 = v57;
    uint64_t v27 = v57
        + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeTitleEffectUpdateSubscription;
    swift_beginAccess( v57 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeTitleEffectUpdateSubscription,  v61,  0LL,  0LL);
    sub_1000F8AEC(v27, (uint64_t)v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1LL, v19) == 1)
    {
      sub_1000077E0((uint64_t)v18, (uint64_t *)&unk_1002E49A0);
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
      uint64_t v29 = v65;
      uint64_t v30 = v66;
      sub_1000112B0(v64, v65);
      uint64_t updated = dispatch thunk of PageTitleEffectUpdateProviding.onUpdatePageTitleEffect.getter(v29, v30);
      SyncEvent.removeObserver(_:)(v22);
      __n128 v32 = swift_release(updated);
      (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v22, v19, v32);
    }

    uint64_t v33 = (uint64_t)v55;
    uint64_t v34 = v65;
    uint64_t v35 = v66;
    sub_1000112B0(v64, v65);
    uint64_t v36 = dispatch thunk of PageTitleEffectUpdateProviding.onUpdatePageTitleEffect.getter(v34, v35);
    uint64_t v37 = sub_1000038E8(&qword_1002E49C8);
    unint64_t v38 = sub_1000776E4();
    dispatch thunk of static EventEmitter.defaultScheduler.getter(v62, v37, v38);
    uint64_t v39 = type metadata accessor for ArcadePageHeaderCollectionElementsObserver(0LL);
    EventEmitter.addObserver<A>(on:target:method:)(v62, v26, sub_1000F81B8, 0LL, v37, v39, v38);
    swift_release(v36);
    _s8AppStore17PillOverlayLayoutVwxx_0(v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v15, 0LL, 1LL, v19);
    sub_1000F8B34((uint64_t)v15, v33);
    swift_beginAccess(v27, v62, 33LL, 0LL);
    sub_100077730(v33, v27);
    swift_endAccess(v62);
    uint64_t v40 = v65;
    uint64_t v41 = v66;
    sub_1000112B0(v64, v65);
    uint64_t v42 = (uint64_t)v53;
    dispatch thunk of PageTitleEffectUpdateProviding.currentTitleEffect.getter(v40, v41);
    int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v42, 1LL, v59);
    uint64_t v44 = v54;
    if (v43 == 1)
    {
      uint64_t v45 = v26 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_lastKnownTitleEffect;
      swift_beginAccess( v26 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_lastKnownTitleEffect,  v62,  0LL,  0LL);
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v44, v45, v59);
      sub_1000077E0(v42, &qword_1002EF6F0);
    }

    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v54, v42, v59);
    }

    uint64_t v46 = v26 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_lastKnownTitleEffect;
    swift_beginAccess( v26 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_lastKnownTitleEffect,  v60,  33LL,  0LL);
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 40))(v46, v44, v59);
    swift_endAccess(v60);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v26 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeHeaderView);
    if (Strong)
    {
      uint64_t v48 = (void *)Strong;
      uint64_t v50 = v58;
      uint64_t v49 = v59;
      uint64_t v51 = (uint64_t)v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v56, v46, v59);
      sub_10003B884(v51, 0, 0LL, 1, 0LL);

      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v49);
    }

    return _s8AppStore17PillOverlayLayoutVwxx_0(v64);
  }

  else
  {
    uint64_t v63 = 0LL;
    memset(v62, 0, sizeof(v62));
    return sub_1000077E0((uint64_t)v62, &qword_1002E49C0);
  }

void sub_1000F896C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TitleEffect(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v8 = type metadata accessor for ArcadeHeaderView(0LL);
  uint64_t v9 = swift_dynamicCastClass(a1, v8);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = v2 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeHeaderView;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_arcadeHeaderView);
    id v16 = a1;
    if (Strong
      && (id v13 = Strong,
          char v14 = static NSObject.== infix(_:_:)(v13, v10),
          v13,
          v13,
          (v14 & 1) != 0))
    {
    }

    else
    {
      uint64_t v15 = v2 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_lastKnownTitleEffect;
      swift_beginAccess( v2 + OBJC_IVAR____TtC8AppStore42ArcadePageHeaderCollectionElementsObserver_lastKnownTitleEffect,  v17,  0LL,  0LL);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
      sub_10003B884((uint64_t)v7, 0, 0LL, 1, 0LL);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_unknownObjectWeakAssign(v11, v10);
    }
  }

uint64_t sub_1000F8AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E49A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F8B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E49A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SingleOnboardingView(uint64_t a1)
{
  uint64_t result = qword_1002E97E8;
  if (!qword_1002E97E8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SingleOnboardingView);
  }
  return result;
}

uint64_t sub_1000F8BBC(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = "\b";
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[5] = &unk_10023D410;
  return swift_initClassMetadata2(a1, 0LL, 6LL, v2, a1 + qword_1002F4480);
}

char *sub_1000F8C20(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v3);
  char v7 = a2 & 1;
  uint64_t v8 = sub_1000038E8(&qword_1002E3A00);
  __chkstk_darwin(v8);
  id v69 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v68 = v10;
  __chkstk_darwin(v10);
  uint64_t v66 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for FontUseCase(0LL, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v17 = qword_1002E0860;
  double v18 = v3;
  if (v17 != -1) {
    swift_once(&qword_1002E0860, sub_1000732B8);
  }
  uint64_t v19 = sub_10000A634(v13, (uint64_t)qword_1002F3478);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v20(v16, v19, v13);
  *(void *)&v18[qword_1002E97B8] = sub_100011F1C((uint64_t)v16, 0LL, 0LL, 1, 0);
  if (qword_1002E0868 != -1) {
    swift_once(&qword_1002E0868, sub_1000732D0);
  }
  uint64_t v21 = sub_10000A634(v13, (uint64_t)qword_1002F3490);
  v20(v16, v21, v13);
  *(void *)&v18[qword_1002E97C0] = sub_100011F1C((uint64_t)v16, 0LL, 0LL, 1, 0);
  uint64_t v22 = type metadata accessor for DynamicTypeButton(0LL);
  id v23 = [(id)swift_getObjCClassFromMetadata(v22) buttonWithType:1];
  *(void *)&v18[qword_1002E97C8] = v23;
  *(void *)&v18[qword_1002E97D0] = a1;
  type metadata accessor for ArtworkView(0LL);
  v63[0] = a1;
  *(void *)&v18[qword_1002E97D8] = static ArtworkView.iconArtworkView.getter();
  v18[qword_1002E97E0] = v7;

  v72.receiver = v18;
  v72.super_class = ObjectType;
  id v24 = (char *)objc_msgSendSuper2(&v72, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1000F94F8(v7);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v29 = qword_1002E97B8;
  uint64_t v30 = *(void **)&v24[qword_1002E97B8];
  v63[1] = v31;
  uint64_t v64 = qword_1002E97B8;
  [v30 setTextAlignment:1];
  sub_10000EA38();
  id v32 = v30;
  uint64_t v33 = static UIColor.opacityB.getter();
  uint64_t v65 = a1;
  uint64_t v34 = (void *)v33;
  [v32 setTextColor:v33];

  id v35 = *(id *)&v24[v29];
  NSString v36 = String._bridgeToObjectiveC()();
  [v35 setText:v36];

  uint64_t v37 = qword_1002E97C0;
  unint64_t v38 = *(void **)&v24[qword_1002E97C0];
  [v38 setTextAlignment:1];
  id v39 = v38;
  uint64_t v40 = (void *)static UIColor.opacityB.getter();
  [v39 setTextColor:v40];

  id v41 = *(id *)&v24[v37];
  NSString v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  objc_msgSend(v41, "setText:", v42, swift_bridgeObjectRelease(v26).n128_f64[0]);

  uint64_t v43 = qword_1002E97C8;
  id v44 = *(id *)&v24[qword_1002E97C8];
  v45._object = (void *)0x800000010024D5D0LL;
  v45._uint64_t countAndFlagsBits = 0xD000000000000013LL;
  v46._uint64_t countAndFlagsBits = 0LL;
  v46._object = (void *)0xE000000000000000LL;
  object = localizedString(_:comment:)(v45, v46)._object;
  NSString v48 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "setTitle:forState:", v48, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  memset(v71, 0, sizeof(v71));
  memset(v70, 0, sizeof(v70));
  uint64_t v49 = v66;
  static AutomationSemantics.onboarding(elementName:id:parentId:)(0x65756E69746E6F63LL, 0xEE006E6F74747542LL, v71, v70);
  sub_100027424((uint64_t)v70);
  sub_100027424((uint64_t)v71);
  UIView.setAutomationSemantics(_:)(v49);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v68);
  uint64_t v50 = qword_1002E97D8;
  uint64_t v51 = *(void **)&v24[qword_1002E97D8];
  type metadata accessor for BundleImage(0LL);
  uint64_t v52 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
  id v53 = v51;
  id v54 = [v52 mainBundle];
  uint64_t v55 = (objc_class *)static BundleImage.load(_:bundle:with:compatibleWith:)( 0x6E6F634920707041LL,  0xE800000000000000LL,  v54,  0LL,  0LL);

  v73.value.super.Class isa = v55;
  v73.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v73, v56);

  id v57 = [(id)objc_opt_self(UIColor) blackColor];
  id v58 = [v57 colorWithAlphaComponent:0.2];

  uint64_t v59 = v69;
  Shadow.init(color:blurRadius:offset:)(v58, 21.0, 0.0, 21.0);
  uint64_t v60 = type metadata accessor for Shadow(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56LL))(v59, 0LL, 1LL, v60);
  ArtworkView.shadow.setter(v59);
  [v24 addSubview:*(void *)&v24[v64]];
  [v24 addSubview:*(void *)&v24[v37]];
  [v24 addSubview:*(void *)&v24[v43]];
  [v24 addSubview:*(void *)&v24[v50]];
  if (v65)
  {
    uint64_t v61 = (void *)v63[0];
    [v24 addSubview:v63[0]];
  }

  return v24;
}

void sub_1000F9254()
{
}

id sub_1000F92AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + qword_1002E97B8);
  uint64_t v4 = *(void **)(v1 + qword_1002E97C0);
  id v14 = *(id *)(v1 + qword_1002E97C8);
  if (*(_BYTE *)(v1 + qword_1002E97E0)) {
    double v5 = 150.0;
  }
  else {
    double v5 = 80.0;
  }
  uint64_t v6 = *(void **)(v1 + qword_1002E97D0);
  char v7 = *(void **)(v1 + qword_1002E97D8);
  a1[3] = (uint64_t)&type metadata for SingleOnboardingLayout;
  a1[4] = sub_100016E14();
  uint64_t v8 = swift_allocObject(&unk_10028C120, 160LL, 7LL);
  *a1 = v8;
  *(_OWORD *)(v8 + swift_weakDestroy(v0 + 16) = xmmword_10023D370;
  *(_OWORD *)(v8 + 32) = xmmword_10023D380;
  *(_OWORD *)(v8 + 48) = xmmword_10023D390;
  *(_OWORD *)(v8 + 64) = xmmword_10023D3A0;
  *(_OWORD *)(v8 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = xmmword_10023D3B0;
  *(_OWORD *)(v8 + 96) = xmmword_10023D3C0;
  *(double *)(v8 + 112) = v5;
  *(void *)(v8 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = v3;
  *(void *)(v8 + 128) = v4;
  *(void *)(v8 + 136) = v14;
  *(void *)(v8 + 144) = v6;
  *(void *)(v8 + 152) = v7;
  id v9 = v6;
  id v10 = v7;
  id v11 = v3;
  id v12 = v4;
  return v14;
}

id sub_1000F93E0(uint64_t a1)
{
  return *(id *)(a1 + qword_1002E97B8);
}

id sub_1000F93F0(uint64_t a1)
{
  return *(id *)(a1 + qword_1002E97C0);
}

void sub_1000F9400()
{
}

void sub_1000F942C()
{
}

void sub_1000F9488(uint64_t a1)
{
}

uint64_t sub_1000F94F0()
{
  return type metadata accessor for SingleOnboardingView(0LL);
}

uint64_t sub_1000F94F8(char a1)
{
  if ((a1 & 1) != 0)
  {
    v6._object = (void *)0x800000010024D5F0LL;
    v6._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v7._uint64_t countAndFlagsBits = 0LL;
    v7._object = (void *)0xE000000000000000LL;
    uint64_t countAndFlagsBits = localizedString(_:comment:)(v6, v7)._countAndFlagsBits;
    unint64_t v4 = 0xD000000000000020LL;
    double v5 = "ONBOARDING_TV_ARCADE_DESCRIPTION";
  }

  else
  {
    v1._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v1._object = (void *)0x800000010024D640LL;
    v2._uint64_t countAndFlagsBits = 0LL;
    v2._object = (void *)0xE000000000000000LL;
    uint64_t countAndFlagsBits = localizedString(_:comment:)(v1, v2)._countAndFlagsBits;
    unint64_t v4 = 0xD000000000000023LL;
    double v5 = "ONBOARDING_TV_APP_STORE_DESCRIPTION";
  }

  unint64_t v8 = (unint64_t)(v5 - 32) | 0x8000000000000000LL;
  v9._uint64_t countAndFlagsBits = 0LL;
  v9._object = (void *)0xE000000000000000LL;
  localizedString(_:comment:)(*(Swift::String *)&v4, v9);
  return countAndFlagsBits;
}

uint64_t sub_1000F95B8()
{
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t sub_1000F95FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for FontUseCase(0LL, a2);
  sub_10000DC04(v2, qword_1002E9840);
  uint64_t v3 = sub_10000A634(v2, (uint64_t)qword_1002E9840);
  if (qword_1002E07D0 != -1) {
    swift_once(&qword_1002E07D0, sub_100073064);
  }
  uint64_t v4 = sub_10000A634(v2, (uint64_t)qword_1002F32C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(v3, v4, v2);
}

char *sub_1000F968C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v9);
  uint64_t v56 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v55 - v12;
  uint64_t v14 = type metadata accessor for Wordmark(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v18 = &v4[OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_itemLayoutContext];
  uint64_t v19 = type metadata accessor for ItemLayoutContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v18, 1LL, 1LL, v19);
  uint64_t v20 = OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_wordmarkImageView;
  id v21 = objc_allocWithZone(&OBJC_CLASS___UIImageView);
  uint64_t v22 = v4;
  *(void *)&v4[v20] = objc_msgSend(v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v23 = OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_buttonView;
  uint64_t v24 = type metadata accessor for DynamicTypeButton(0LL);
  *(void *)&v22[v23] = [(id)swift_getObjCClassFromMetadata(v24) buttonWithType:1];

  uint64_t v25 = (objc_class *)type metadata accessor for ArcadeFooterCollectionViewCell(0LL);
  v59.receiver = v22;
  v59.super_class = v25;
  uint64_t v26 = (char *)objc_msgSendSuper2(&v59, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v27 = OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_wordmarkImageView;
  uint64_t v28 = *(void **)&v26[OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_wordmarkImageView];
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Wordmark.arcade(_:), v14);
  uint64_t v29 = v26;
  id v30 = v28;
  id v31 = [v29 traitCollection];
  id v32 = (void *)Wordmark.asset(in:)((UITraitCollection)v31);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  [v30 setImage:v32];

  uint64_t v33 = *(void **)&v26[v27];
  uint64_t v34 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v35 = v33;
  id v36 = [v34 whiteColor];
  [v35 setTintColor:v36];

  id v37 = [v29 contentView];
  [v37 addSubview:*(void *)&v26[v27]];

  uint64_t v39 = OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_buttonView;
  uint64_t v40 = *(void *)&v29[OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_buttonView];
  if (qword_1002E0B80 != -1) {
    swift_once(&qword_1002E0B80, sub_1000F95FC);
  }
  uint64_t v41 = type metadata accessor for FontUseCase(0LL, v38);
  uint64_t v42 = sub_10000A634(v41, (uint64_t)qword_1002E9840);
  uint64_t v43 = *(void *)(v41 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v13, v42, v41);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v13, 0LL, 1LL, v41);
  uint64_t v44 = v40 + OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase;
  swift_beginAccess(v40 + OBJC_IVAR____TtC8AppStore17DynamicTypeButton_fontUseCase, v58, 0LL, 0LL);
  uint64_t v45 = v56;
  sub_100013460(v44, v56);
  swift_beginAccess(v44, v57, 33LL, 0LL);
  sub_10000DBBC((uint64_t)v13, v44);
  swift_endAccess(v57);
  sub_10010EA18(v45);
  sub_1000077E0((uint64_t)v13, &qword_1002E25C0);
  sub_1000077E0(v45, &qword_1002E25C0);
  id v46 = [v29 contentView];
  [v46 addSubview:*(void *)&v29[v39]];

  id v47 = objc_allocWithZone(&OBJC_CLASS___UIView);
  NSString v48 = v29;
  id v49 = objc_msgSend(v47, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v48 setBackgroundView:v49];

  id v50 = [v48 backgroundView];
  if (v50)
  {
    uint64_t v51 = v50;
    id v52 = [v34 blackColor];
    id v53 = [v52 colorWithAlphaComponent:0.2];

    [v51 setBackgroundColor:v53];
  }

  return v48;
}

uint64_t sub_1000F9B84()
{
  uint64_t v1 = type metadata accessor for LayoutRect(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v5 = (objc_class *)type metadata accessor for ArcadeFooterCollectionViewCell(0LL);
  v18.receiver = v0;
  v18.super_class = v5;
  objc_msgSendSuper2(&v18, "layoutSubviews");
  sub_1000F9CD4( *(void **)&v0[OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_wordmarkImageView],  *(void **)&v0[OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_buttonView],  v15);
  uint64_t v6 = v16;
  uint64_t v7 = v17;
  sub_1000112B0(v15, v16);
  id v8 = [v0 contentView];
  [v8 frame];

  *(void *)&double v9 = CGRect.subtracting(insets:)([v0 layoutMargins]).n128_u64[0];
  dispatch thunk of Layout.placeChildren(relativeTo:in:)(v0, v6, v7, v9, v10, v11, v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v15);
}

void sub_1000F9CD4(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v68 = a2;
  id v70 = a3;
  uint64_t v74 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v69 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  UIImage_optional v73 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0LL);
  uint64_t v66 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0LL);
  uint64_t v72 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for AspectRatio(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)&double v13 = __chkstk_darwin(v11).n128_u64[0];
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v16 = objc_msgSend(a1, "image", v13);
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = [v16 size];
    AspectRatio.init(_:_:)(v18, v19);
    if (qword_1002E0B90 != -1) {
      swift_once(&qword_1002E0B90, sub_1000FA4C8);
    }
    double v20 = *(double *)&qword_1002E9860;
    double v21 = AspectRatio.width(fromHeight:)(*(double *)&qword_1002E9860);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }

  else
  {
    double v21 = 0.0;
    double v20 = 0.0;
  }

  uint64_t v22 = sub_1000038E8((uint64_t *)&unk_1002E98C0);
  uint64_t v23 = *(void *)(type metadata accessor for _VerticalFlowLayout.Child(0LL) - 8);
  uint64_t v24 = *(void *)(v23 + 72);
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = (v25 + 32) & ~v25;
  uint64_t v65 = v24;
  uint64_t v27 = swift_allocObject(v22, v26 + 2 * v24, v25 | 7);
  *(_OWORD *)(v27 + swift_weakDestroy(v0 + 16) = xmmword_100236DD0;
  uint64_t v67 = v27;
  uint64_t v71 = v27 + v26;
  v79[0] = a1;
  uint64_t v28 = sub_10000DFD4(0LL, (unint64_t *)&unk_1002E6760, &OBJC_CLASS___UIImageView_ptr);
  LayoutView.withMeasurements(_:)(v82, v28, protocol witness table for UIView, v21, v20, v20, 0.0);
  uint64_t v29 = *(void (**)(void))(v72 + 104);
  unsigned int v58 = enum case for _VerticalFlowLayout.Child.Placement.top(_:);
  objc_super v59 = (void (*)(char *, void, uint64_t))v29;
  v29(v10);
  uint64_t v30 = v66;
  id v31 = *(void (**)(void))(v66 + 104);
  unsigned int v57 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.center(_:);
  uint64_t v56 = (void (*)(char *, void, uint64_t))v31;
  v31(v7);
  if (qword_1002E0B88 != -1) {
    swift_once(&qword_1002E0B88, sub_1000FA4B8);
  }
  unsigned __int32 v80 = &type metadata for CGFloat;
  uint64_t v81 = &protocol witness table for CGFloat;
  v79[0] = qword_1002E9858;
  id v78 = 0LL;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  uint64_t v32 = sub_1000038E8(&qword_1002E1210);
  uint64_t v33 = v69;
  uint64_t v34 = *(unsigned __int8 *)(v69 + 80);
  uint64_t v35 = ((v34 + 32) & ~v34) + *(void *)(v69 + 72);
  uint64_t v64 = v32;
  uint64_t v63 = v35;
  uint64_t v62 = v34 | 7;
  uint64_t v36 = swift_allocObject(v32, v35, v34 | 7);
  __int128 v61 = xmmword_100237B10;
  *(_OWORD *)(v36 + swift_weakDestroy(v0 + 16) = xmmword_100237B10;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v36);
  uint64_t v75 = v36;
  uint64_t v37 = sub_100004288( (unint64_t *)&qword_1002E1218,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  uint64_t v38 = sub_1000038E8(&qword_1002E1220);
  unint64_t v39 = sub_100003928();
  uint64_t v40 = v73;
  uint64_t v55 = v38;
  uint64_t v41 = v38;
  unint64_t v54 = v39;
  uint64_t v42 = v74;
  uint64_t v60 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v75, v41, v39, v74, v37);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v82,  v10,  v7,  v79,  &v76,  v40);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v33 + 8);
  v43(v40, v42);
  sub_1000077E0((uint64_t)&v76, (uint64_t *)&unk_1002E98D0);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v30 + 8);
  v44(v7, v5);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v72 + 8);
  v45(v10, v8);
  _s8AppStore17PillOverlayLayoutVwxx_0(v82);
  _s8AppStore17PillOverlayLayoutVwxx_0(v79);
  v82[3] = sub_10000DFD4(0LL, &qword_1002E3EC8, &OBJC_CLASS___UIButton_ptr);
  v82[4] = protocol witness table for UIView;
  id v46 = v68;
  v82[0] = v68;
  uint64_t v69 = v8;
  v59(v10, v58, v8);
  uint64_t v72 = v5;
  v56(v7, v57, v5);
  uint64_t v47 = qword_1002E0B98;
  id v48 = v46;
  if (v47 != -1) {
    swift_once(&qword_1002E0B98, sub_1000FA4D8);
  }
  unsigned __int32 v80 = &type metadata for CGFloat;
  uint64_t v81 = &protocol witness table for CGFloat;
  v79[0] = qword_1002E9868;
  if (qword_1002E0BA8 != -1) {
    swift_once(&qword_1002E0BA8, sub_1000FA4F8);
  }
  *((void *)&v77 + 1) = &type metadata for CGFloat;
  id v78 = &protocol witness table for CGFloat;
  *(void *)&__int128 v76 = qword_1002E9878;
  uint64_t v49 = swift_allocObject(v64, v63, v62);
  *(_OWORD *)(v49 + swift_weakDestroy(v0 + 16) = v61;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v49);
  uint64_t v75 = v49;
  uint64_t v51 = v73;
  uint64_t v50 = v74;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v75, v55, v54, v74, v60);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( v82,  v10,  v7,  v79,  &v76,  v51);
  v43(v51, v50);
  v44(v7, v72);
  v45(v10, v69);
  sub_1000077E0((uint64_t)&v76, (uint64_t *)&unk_1002E98D0);
  _s8AppStore17PillOverlayLayoutVwxx_0(v79);
  _s8AppStore17PillOverlayLayoutVwxx_0(v82);
  uint64_t v52 = type metadata accessor for _VerticalFlowLayout(0LL);
  id v53 = v70;
  v70[3] = v52;
  v53[4] = sub_100004288( &qword_1002E98E0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout);
  sub_10000DD7C(v53);
  _VerticalFlowLayout.init(expandChildrenToFit:children:)(0LL, v67);
}

void sub_1000FA4B8()
{
  qword_1002E9858 = 0x4059000000000000LL;
}

void sub_1000FA4C8()
{
  qword_1002E9860 = 0x4043000000000000LL;
}

void sub_1000FA4D8()
{
  qword_1002E9868 = 0x4044000000000000LL;
}

void sub_1000FA4E8()
{
  qword_1002E9870 = 0x4056000000000000LL;
}

void sub_1000FA4F8()
{
  qword_1002E9878 = 0x4065000000000000LL;
}

void sub_1000FA508()
{
}

id sub_1000FA54C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArcadeFooterCollectionViewCell(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000FA5D0()
{
  return type metadata accessor for ArcadeFooterCollectionViewCell(0LL);
}

uint64_t type metadata accessor for ArcadeFooterCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E98A8;
  if (!qword_1002E98A8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadeFooterCollectionViewCell);
  }
  return result;
}

double sub_1000FA614(uint64_t a1, double a2, double a3)
{
  uint64_t v19 = a1;
  uint64_t v5 = type metadata accessor for StackMeasurable.Axis(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for StackMeasurable(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  double v13 = (char *)&v20[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t, __n128))(v6 + 104))( v8,  enum case for StackMeasurable.Axis.vertical(_:),  v5,  v11);
  uint64_t v14 = sub_1000038E8((uint64_t *)&unk_1002E6770);
  uint64_t v15 = swift_allocObject(v14, 232LL, 7LL);
  *(_OWORD *)(v15 + swift_weakDestroy(v0 + 16) = xmmword_10023D440;
  if (qword_1002E0B88 != -1) {
    swift_once(&qword_1002E0B88, sub_1000FA4B8);
  }
  double v21 = &type metadata for CGFloat;
  uint64_t v22 = &protocol witness table for CGFloat;
  v20[0] = qword_1002E9858;
  uint64_t v16 = type metadata accessor for VerticalSpaceMeasurable(0LL);
  *(void *)(v15 + 56) = v16;
  *(void *)(v15 + 64) = &protocol witness table for VerticalSpaceMeasurable;
  sub_10000DD7C((void *)(v15 + 32));
  VerticalSpaceMeasurable.init(_:multiplier:)(v20, 1.0);
  if (qword_1002E0B90 != -1) {
    swift_once(&qword_1002E0B90, sub_1000FA4C8);
  }
  double v21 = &type metadata for CGFloat;
  uint64_t v22 = &protocol witness table for CGFloat;
  v20[0] = qword_1002E9860;
  *(void *)(v15 + 96) = v16;
  *(void *)(v15 + 104) = &protocol witness table for VerticalSpaceMeasurable;
  sub_10000DD7C((void *)(v15 + 72));
  VerticalSpaceMeasurable.init(_:multiplier:)(v20, 1.0);
  if (qword_1002E0B98 != -1) {
    swift_once(&qword_1002E0B98, sub_1000FA4D8);
  }
  double v21 = &type metadata for CGFloat;
  uint64_t v22 = &protocol witness table for CGFloat;
  v20[0] = qword_1002E9868;
  *(void *)(v15 + 136) = v16;
  *(void *)(v15 + 144) = &protocol witness table for VerticalSpaceMeasurable;
  sub_10000DD7C((void *)(v15 + 112));
  VerticalSpaceMeasurable.init(_:multiplier:)(v20, 1.0);
  if (qword_1002E0BA0 != -1) {
    swift_once(&qword_1002E0BA0, sub_1000FA4E8);
  }
  double v21 = &type metadata for CGFloat;
  uint64_t v22 = &protocol witness table for CGFloat;
  v20[0] = qword_1002E9870;
  *(void *)(v15 + 176) = v16;
  *(void *)(v15 + 184) = &protocol witness table for VerticalSpaceMeasurable;
  sub_10000DD7C((void *)(v15 + 152));
  VerticalSpaceMeasurable.init(_:multiplier:)(v20, 1.0);
  if (qword_1002E0BA8 != -1) {
    swift_once(&qword_1002E0BA8, sub_1000FA4F8);
  }
  double v21 = &type metadata for CGFloat;
  uint64_t v22 = &protocol witness table for CGFloat;
  v20[0] = qword_1002E9878;
  *(void *)(v15 + 2swift_weakDestroy(v0 + 16) = v16;
  *(void *)(v15 + 2sub_1000C9674(*(void *)(v0 + 16), v0 + 24) = &protocol witness table for VerticalSpaceMeasurable;
  sub_10000DD7C((void *)(v15 + 192));
  VerticalSpaceMeasurable.init(_:multiplier:)(v20, 1.0);
  StackMeasurable.init(axis:skipEmptyChildren:children:)(v8, 1LL, v15);
  double v17 = StackMeasurable.measurements(fitting:in:)(v19, a2, a3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v17;
}

void sub_1000FAA18()
{
  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v27, "viewWillLayoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_overlayViewController];
  if (v1)
  {
    id v2 = [v1 view];
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = [v0 view];
      if (v4)
      {
        uint64_t v5 = v4;
        [v4 bounds];
        double v7 = v6;
        double v9 = v8;
        double v11 = v10;
        double v13 = v12;

        objc_msgSend(v3, "setFrame:", v7, v9, v11, v13);
        goto LABEL_5;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }

void sub_1000FABC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for JULoadingViewController.PresentationContext(0LL);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = dispatch thunk of BasePresenter.pageRenderMetrics.getter(v3);
  static JULoadingViewController.PresentationContext.placeholder.getter();
  id v7 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0LL));
  double v8 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0LL, 0LL, v5, v6);
  uint64_t v9 = OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_overlayViewController;
  double v10 = *(void **)&v1[OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_overlayViewController];
  id v11 = v10;
  static ViewControllerContainment.remove(_:)(v10);

  double v12 = *(void **)&v1[v9];
  *(void *)&v1[v9] = v8;
  id v13 = v8;

  uint64_t v14 = *(void **)&v1[v9];
  id v15 = v14;
  id v16 = [v1 view];
  if (v16)
  {
    id v17 = v16;
    [v16 bounds];
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v25 = v24;

    v27[0] = v19;
    v27[1] = v21;
    void v27[2] = v23;
    id v27[3] = v25;
    char v28 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v14, v1, v27);
  }

  else
  {
    __break(1u);
  }

void sub_1000FAD2C()
{
  uint64_t v1 = OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_overlayViewController;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_overlayViewController];
  if (v2)
  {
    uint64_t v3 = type metadata accessor for JULoadingViewController(0LL);
    if (swift_dynamicCastClass(v2, v3))
    {
      id v4 = v2;
      static ViewControllerContainment.remove(_:)(v2);

      uint64_t v5 = *(void **)&v0[v1];
      *(void *)&v0[v1] = 0LL;

      uint64_t v6 = *(void **)&v0[v1];
      id v17 = v6;
      id v7 = [v0 view];
      if (v7)
      {
        double v8 = v7;
        [v7 bounds];
        uint64_t v10 = v9;
        uint64_t v12 = v11;
        uint64_t v14 = v13;
        uint64_t v16 = v15;

        v18[0] = v10;
        v18[1] = v12;
        v18[2] = v14;
        _OWORD v18[3] = v16;
        char v19 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v6, v0, v18);
      }

      else
      {
        __break(1u);
      }
    }
  }

id sub_1000FAE38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v89 = a1;
  uint64_t ObjectType = swift_getObjectType(v1);
  uint64_t v5 = type metadata accessor for OSLogger(0LL, v4);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v87 = *(void *)(v9 - 8);
  uint64_t v88 = v9;
  __chkstk_darwin(v9);
  uint64_t v86 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for MetricsData(0LL);
  uint64_t v84 = *(void *)(v11 - 8);
  uint64_t v85 = v11;
  __chkstk_darwin(v11);
  __n128 v83 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v82 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  unsigned __int32 v80 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v79 = type metadata accessor for URL(0LL);
  uint64_t v14 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  id v78 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1000038E8((uint64_t *)&unk_1002E4940);
  __n128 v17 = __chkstk_darwin(v16);
  char v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_presenter];
  uint64_t v21 = dispatch thunk of TopChartsPagePresenter.segmentPresenters.getter(v17);
  uint64_t v22 = v21;
  if ((unint64_t)v21 >> 62)
  {
    if (v21 >= 0) {
      v21 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v21);
  }

  else
  {
    uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  swift_bridgeObjectRelease(v22);
  if (v23)
  {
    if (qword_1002E0350 != -1) {
      swift_once(&qword_1002E0350, sub_1000171DC);
    }
    uint64_t v24 = sub_10000A634(v5, (uint64_t)qword_1002F24E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v24, v5);
    uint64_t v25 = sub_1000038E8((uint64_t *)&unk_1002E6150);
    uint64_t v26 = type metadata accessor for LogMessage(0LL);
    uint64_t v27 = swift_allocObject( v25,  ((*(unsigned __int8 *)(*(void *)(v26 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v26 - 8) + 80LL))
          + 3LL * *(void *)(*(void *)(v26 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v26 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v27 + swift_weakDestroy(v0 + 16) = xmmword_100235590;
    uint64_t v94 = ObjectType;
    v93[0] = v2;
    char v28 = v2;
    static LogMessage.safe(_:)(v93);
    sub_1000077E0((uint64_t)v93, (uint64_t *)&unk_1002E3500);
    LogMessage.init(stringLiteral:)(0xD00000000000002ELL, 0x800000010024D760LL);
    swift_getErrorValue(v89, v92, &v90);
    uint64_t v29 = v90;
    uint64_t v30 = v91;
    uint64_t v94 = v91;
    id v31 = sub_10000DD7C(v93);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16LL))(v31, v29, v30);
    static LogMessage.sensitive(_:)(v93);
    sub_1000077E0((uint64_t)v93, (uint64_t *)&unk_1002E3500);
    Logger.error(_:)(v27, v5, &protocol witness table for OSLogger);
    __n128 v32 = swift_bridgeObjectRelease(v27);
    return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v32);
  }

  else
  {
    uint64_t v34 = (char *)objc_msgSend( objc_allocWithZone((Class)type metadata accessor for ErrorShieldView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
    sub_100140588(1);
    uint64_t v35 = v89;
    swift_errorRetain(v89);
    ErrorPresenter.error.setter(v35);
    uint64_t v36 = swift_allocObject(&unk_10028C160, 24LL, 7LL);
    swift_weakInit(v36 + 16, v20);
    uint64_t v37 = (uint64_t (**)())&v34[OBJC_IVAR____TtC8AppStore15ErrorShieldView_retryHandler];
    uint64_t v38 = *(void *)&v34[OBJC_IVAR____TtC8AppStore15ErrorShieldView_retryHandler];
    uint64_t v39 = *(void *)&v34[OBJC_IVAR____TtC8AppStore15ErrorShieldView_retryHandler + 8];
    *uint64_t v37 = sub_1000FB8EC;
    v37[1] = (uint64_t (*)())v36;
    swift_retain_n(v36, 2LL);
    sub_10000A450(v38, v39);
    sub_100140ADC();
    swift_release_n(v36, 2LL);
    id v40 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0LL));
    uint64_t v41 = v34;
    uint64_t v42 = (void *)OverlayViewController.init(overlayView:)(v41);
    uint64_t v43 = OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_overlayViewController;
    uint64_t v44 = *(void **)&v2[OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_overlayViewController];
    id v45 = v44;
    static ViewControllerContainment.remove(_:)(v44);

    id v46 = *(void **)&v2[v43];
    *(void *)&v2[v43] = v42;
    id v47 = v42;

    id v48 = *(void **)&v2[v43];
    id v49 = v48;
    id result = [v2 view];
    if (result)
    {
      uint64_t v50 = result;
      [result bounds];
      uint64_t v52 = v51;
      uint64_t v54 = v53;
      uint64_t v56 = v55;
      uint64_t v58 = v57;

      v93[0] = v52;
      v93[1] = v54;
      _OWORD v93[2] = v56;
      uint64_t v94 = v58;
      char v95 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v48, v2, v93);

      dispatch thunk of TopChartsPagePresenter.topChartsPageUrl.getter();
      uint64_t v59 = v79;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1LL, v79))
      {
        sub_1000077E0((uint64_t)v19, (uint64_t *)&unk_1002E4940);
        uint64_t v60 = 0LL;
        uint64_t v61 = 0LL;
      }

      else
      {
        uint64_t v62 = v78;
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v78, v19, v59);
        uint64_t v63 = sub_1000077E0((uint64_t)v19, (uint64_t *)&unk_1002E4940);
        uint64_t v60 = URL.absoluteString.getter(v63);
        uint64_t v61 = v64;
        (*(void (**)(char *, uint64_t))(v14 + 8))(v62, v59);
      }

      uint64_t v66 = v87;
      uint64_t v65 = v88;
      uint64_t v68 = v85;
      uint64_t v67 = v86;
      uint64_t v69 = type metadata accessor for PageMetricsEvent(0LL);
      swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
      swift_errorRetain(v35);
      uint64_t v70 = PageMetricsEvent.init(error:pageUrl:)(v35, v60, v61);
      uint64_t v71 = v80;
      uint64_t v72 = dispatch thunk of BasePresenter.metricsPipeline.getter();
      UIImage_optional v73 = v83;
      uint64_t v74 = dispatch thunk of MetricsEvent.metricsData.getter(v72);
      static MetricsFieldsContext.emptyContext.getter(v74);
      uint64_t v75 = MetricsPipeline.process(_:using:)(v73, v67);

      swift_release(v70);
      __n128 v76 = swift_release(v75);
      (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v67, v65, v76);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v73, v68);
      return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v81 + 8))(v71, v82, v77);
    }

    else
    {
      __break(1u);
    }
  }

  return result;
}

uint64_t type metadata accessor for TopChartsPageViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore27TopChartsPageViewController);
}

uint64_t sub_1000FB588(uint64_t a1, uint64_t a2)
{
  return sub_10000A4AC( &qword_1002E9938,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for TopChartsPageViewController,  (uint64_t)&unk_10023D4AC);
}

void sub_1000FB5B4(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_activeViewController;
  __n128 v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_activeViewController];
  if (v4)
  {
    id v5 = v4;
    [v5 willMoveToParentViewController:0];
    [v5 removeFromParentViewController];
    id v6 = [v5 view];
    if (!v6)
    {
      __break(1u);
      goto LABEL_11;
    }

    uint64_t v7 = v6;
    [v6 removeFromSuperview];

    double v8 = *(void **)&v1[v3];
  }

  else
  {
    double v8 = 0LL;
  }

  *(void *)&v1[v3] = a1;
  id v9 = a1;

  uint64_t v10 = *(void **)&v1[v3];
  if (v10)
  {
    id v15 = v10;
    objc_msgSend(v1, "addChildViewController:");
    id v11 = [v1 view];
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = [v15 view];
      if (v13)
      {
        uint64_t v14 = v13;
        [v12 addSubview:v13];

        [v15 didMoveToParentViewController:v1];
        return;
      }

      goto LABEL_12;
    }

void sub_1000FB720()
{
  uint64_t v1 = v0;
  uint64_t v2 = dispatch thunk of TopChartsPagePresenter.initialSegmentIndex.getter();
  uint64_t v4 = dispatch thunk of TopChartsPagePresenter.segmentPresenters.getter(v3);
  uint64_t v5 = v4;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 >= 0) {
      v4 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v4);
  }

  else
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  __n128 v7 = swift_bridgeObjectRelease(v5);
  if (v2 >= v6)
  {
    sub_1000FB5B4(0LL);
  }

  else
  {
    uint64_t v8 = dispatch thunk of TopChartsPagePresenter.segmentPresenters.getter(v7);
    uint64_t v9 = v8;
    if ((v8 & 0xC000000000000001LL) != 0)
    {
      uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v8);
      goto LABEL_8;
    }

    if (v2 < 0)
    {
      __break(1u);
    }

    else if ((unint64_t)v2 < *(void *)((v8 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      uint64_t v10 = *(void *)(v8 + 8 * v2 + 32);
      swift_retain(v10);
LABEL_8:
      swift_bridgeObjectRelease(v9);
      uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore27TopChartsPageViewController_objectGraph);
      uint64_t v12 = sub_10000A4AC( &qword_1002E9940,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for TopChartSegmentPresenter,  (uint64_t)&protocol conformance descriptor for BasePresenter);
      swift_retain(v10);
      uint64_t v13 = sub_100165F50(v11, v10, v12, (uint64_t)_swiftEmptyArrayStorage, 0x7472616843706F74LL, 0xEF746E656D676553LL);
      id v14 = objc_allocWithZone((Class)type metadata accessor for TopChartSegmentViewController(0LL));
      id v15 = sub_1002082AC(v10, v13);
      sub_1000FB5B4(v15);
      swift_release(v10);

      return;
    }

    __break(1u);
  }

uint64_t sub_1000FB8C8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000FB8EC()
{
  return sub_10000A338(v0);
}

uint64_t sub_1000FB8F4()
{
  uint64_t v0 = type metadata accessor for AspectRatio(0LL);
  __n128 v1 = __chkstk_darwin(v0);
  __n128 v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for ArcadeWelcomeItemViewLayout.Metrics(0LL, v1);
  sub_10000DC04(v4, qword_1002E9948);
  uint64_t v5 = sub_10000A634(v4, (uint64_t)qword_1002E9948);
  AspectRatio.init(_:_:)(v5, 210.0);
  v10[3] = &type metadata for Double;
  void v10[4] = &protocol witness table for Double;
  _OWORD v9[4] = &protocol witness table for Double;
  v10[0] = 0x406A400000000000LL;
  int64_t v9[3] = &type metadata for Double;
  void v8[4] = &protocol witness table for Double;
  v9[0] = 0x404C000000000000LL;
  v8[3] = &type metadata for Double;
  v8[0] = 0x404C000000000000LL;
  return ArcadeWelcomeItemViewLayout.Metrics.init(imageAspectRatio:imageWidth:headingTopSpace:bodyTopSpace:textInsets:)( v3,  v10,  v9,  v8,  0.0,  0.0,  0.0,  0.0);
}

char *sub_1000FB9F0(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, v10);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v4[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artwork] = 0LL;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artworkLoader] = 0LL;
  v4[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_shouldUpdateArtwork] = 0;
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v15 = qword_1002E0880;
  uint64_t v16 = v4;
  if (v15 != -1) {
    swift_once(&qword_1002E0880, sub_100073324);
  }
  uint64_t v17 = sub_10000A634(v11, (uint64_t)qword_1002F34D8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18(v14, v17, v11);
  *(void *)&v16[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_headlineLabel] = sub_100011F1C( (uint64_t)v14,  0LL,  0LL,  1,  0);
  if (qword_1002E0888 != -1) {
    swift_once(&qword_1002E0888, sub_10007333C);
  }
  uint64_t v19 = sub_10000A634(v11, (uint64_t)qword_1002F34F0);
  v18(v14, v19, v11);
  *(void *)&v16[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_bodyLabel] = sub_100011F1C( (uint64_t)v14,  0LL,  0LL,  1,  0);
  uint64_t v20 = type metadata accessor for ArtworkView(0LL);
  *(void *)&v16[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artworkView] = static ArtworkView.plainArtworkView.getter(v20);

  v37.receiver = v16;
  v37.super_class = ObjectType;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v22 = OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_headlineLabel;
  uint64_t v23 = *(void **)&v21[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_headlineLabel];
  uint64_t v24 = v21;
  [v23 setTextAlignment:1];
  sub_10000EA38();
  id v25 = v23;
  uint64_t v26 = (void *)static UIColor.opacityB.getter();
  [v25 setTextColor:v26];

  uint64_t v27 = OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_bodyLabel;
  char v28 = *(void **)&v24[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_bodyLabel];
  [v28 setTextAlignment:1];
  id v29 = v28;
  uint64_t v30 = (void *)static UIColor.opacityC.getter();
  [v29 setTextColor:v30];

  uint64_t v31 = OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artworkView;
  id v32 = *(id *)&v24[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artworkView];
  uint64_t v33 = (void *)static UIColor.opacityA.getter();
  [v32 setTintColor:v33];

  [v24 addSubview:*(void *)&v21[v22]];
  [v24 addSubview:*(void *)&v24[v27]];
  uint64_t v34 = *(void **)&v24[v31];
  [v24 addSubview:v34];
  objc_msgSend( v24,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);
  id v35 = v34;
  ArtworkView.backgroundColor.setter(0LL);

  return v24;
}

BOOL sub_1000FBE84(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  v23.receiver = v4;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "frame");
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  v22.receiver = v4;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, "setFrame:", a1, a2, a3, a4);
  v21.receiver = v4;
  v21.super_class = ObjectType;
  objc_msgSendSuper2(&v21, "frame");
  v26.origin.double x = v11;
  v26.origin.double y = v13;
  v26.size.double width = v15;
  v26.size.double height = v17;
  BOOL result = CGRectEqualToRect(v24, v26);
  if (result)
  {
    BOOL v19 = 0;
  }

  else
  {
    v20.receiver = v4;
    v20.super_class = ObjectType;
    objc_msgSendSuper2(&v20, "frame");
    v27.origin.double x = 0.0;
    v27.origin.double y = 0.0;
    v27.size.double width = 0.0;
    v27.size.double height = 0.0;
    BOOL result = CGRectEqualToRect(v25, v27);
    BOOL v19 = !result;
  }

  *((_BYTE *)v4 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_shouldUpdateArtwork) = v19;
  return result;
}

uint64_t sub_1000FBF94()
{
  __n128 v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for LayoutRect(0LL);
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  __n128 v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ArcadeWelcomeItemViewLayout.Metrics(0LL, v4);
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  CGFloat v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ArcadeWelcomeItemViewLayout(0LL, v9);
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)&double v14 = __chkstk_darwin(v12).n128_u64[0];
  double v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v33.receiver = v1;
  v33.super_class = ObjectType;
  objc_msgSendSuper2(&v33, "layoutSubviews", v14);
  if (qword_1002E0BB0 != -1) {
    swift_once(&qword_1002E0BB0, sub_1000FB8F4);
  }
  uint64_t v17 = sub_10000A634(v7, (uint64_t)qword_1002E9948);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v17, v7);
  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_headlineLabel];
  uint64_t v31 = type metadata accessor for DynamicTypeLabel(0LL);
  id v32 = &protocol witness table for UILabel;
  _BYTE v29[4] = &protocol witness table for UILabel;
  uint64_t v30 = v18;
  BOOL v19 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_bodyLabel];
  v29[3] = v31;
  v29[0] = v19;
  objc_super v20 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artworkView];
  v28[3] = type metadata accessor for ArtworkView(0LL);
  void v28[4] = protocol witness table for UIView;
  v28[0] = v20;
  id v21 = v18;
  id v22 = v19;
  id v23 = v20;
  ArcadeWelcomeItemViewLayout.init(metrics:headingText:bodyText:image:)(v11, &v30, v29, v28);
  __n128 v24 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  ArcadeWelcomeItemViewLayout.placeChildren(relativeTo:in:)(v1, v24);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
  sub_1000FC1B0();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

void sub_1000FC1B0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType(v0);
  uint64_t v3 = type metadata accessor for AspectRatio(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v34[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  __n128 v9 = (char *)&v34[-1] - v8;
  *(void *)&v35.origin.double x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType).n128_u64[0];
  v36.origin.double x = 0.0;
  v36.origin.double y = 0.0;
  v36.size.double width = 0.0;
  v36.size.double height = 0.0;
  if (!CGRectEqualToRect(v35, v36))
  {
    uint64_t v10 = OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_shouldUpdateArtwork;
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_shouldUpdateArtwork) == 1)
    {
      uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artwork);
      if (v11)
      {
        uint64_t v12 = qword_1002E0BB0;
        __n128 v13 = swift_retain(*(void *)(v1 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artwork));
        if (v12 != -1) {
          swift_once(&qword_1002E0BB0, sub_1000FB8F4);
        }
        uint64_t v14 = type metadata accessor for ArcadeWelcomeItemViewLayout.Metrics(0LL, v13);
        sub_10000A634(v14, (uint64_t)qword_1002E9948);
        ArcadeWelcomeItemViewLayout.Metrics.imageAspectRatio.getter();
        LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
        double v16 = v15;
        double v18 = v17;
        __n128 v20 = AspectRatio.init(_:_:)(v19, v15);
        v21.n128_f64[0] = AspectRatio.horizontalFraction.getter(v20);
        if (AspectRatio.horizontalFraction.getter(v21) >= v21.n128_f64[0]) {
          double v18 = AspectRatio.height(fromWidth:)(v16);
        }
        else {
          double v16 = AspectRatio.width(fromHeight:)(v18);
        }
        id v22 = *(void (**)(char *, uint64_t))(v4 + 8);
        v22(v6, v3);
        uint64_t v23 = ((uint64_t (*)(char *, uint64_t))v22)(v9, v3);
        uint64_t v24 = Artwork.config(using:)(v23, v16, v18);
        uint64_t v25 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artworkLoader);
        if (v25)
        {
          objc_super v33 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artworkView);
          uint64_t v26 = v33;
          uint64_t v27 = type metadata accessor for ArtworkView(0LL);
          unint64_t v28 = sub_1000FC86C();
          swift_retain(v25);
          id v29 = v26;
          AnyHashable.init<A>(_:)(v34, &v33, v27, v28);
          uint64_t v30 = swift_allocObject(&unk_10028C1D8, 24LL, 7LL);
          swift_unknownObjectWeakInit(v30 + 16, v1);
          __n128 v31 = swift_retain(v30);
          ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)( v24,  2LL,  0LL,  v34,  sub_1000FC8D8,  v30,  v31);
          swift_release(v11);
          swift_release(v24);
          swift_release(v25);
          swift_release(v30);
          sub_10001D2F0((uint64_t)v34);
          uint64_t v32 = v30;
        }

        else
        {
          swift_release(v11);
          uint64_t v32 = v24;
        }

        swift_release(v32);
      }

      *(_BYTE *)(v1 + v1_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0;
    }
  }

double sub_1000FC4A4(uint64_t a1, __n128 a2, double a3)
{
  double v6 = a2.n128_f64[0];
  uint64_t v7 = type metadata accessor for ArcadeWelcomeItemViewLayout.Metrics(0LL, a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ArcadeWelcomeItemViewLayout(0LL, v9);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  double v15 = (char *)&v26[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0BB0 != -1) {
    swift_once(&qword_1002E0BB0, sub_1000FB8F4);
  }
  uint64_t v16 = sub_10000A634(v7, (uint64_t)qword_1002E9948);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v16, v7);
  double v17 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_headlineLabel);
  uint64_t v29 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v30 = &protocol witness table for UILabel;
  void v27[4] = &protocol witness table for UILabel;
  unint64_t v28 = v17;
  double v18 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_bodyLabel);
  id v27[3] = v29;
  v27[0] = v18;
  uint64_t v19 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artworkView);
  _OWORD v26[3] = type metadata accessor for ArtworkView(0LL);
  void v26[4] = protocol witness table for UIView;
  v26[0] = v19;
  id v20 = v17;
  id v21 = v18;
  id v22 = v19;
  ArcadeWelcomeItemViewLayout.init(metrics:headingText:bodyText:image:)(v11, &v28, v27, v26);
  double v23 = ArcadeWelcomeItemViewLayout.measurements(fitting:in:)(a1, v6, a3);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v23;
}

void sub_1000FC6FC(objc_class *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    uint64_t v6 = a5 + 16;
    swift_beginAccess(a5 + 16, v18, 0LL, 0LL);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      uint64_t v8 = (char *)Strong;
      uint64_t v9 = OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artworkView;
      uint64_t v10 = *(void **)(Strong + OBJC_IVAR____TtC8AppStore21ArcadeWelcomeItemView_artworkView);
      uint64_t v11 = a1;
      id v12 = v10;
      ArtworkView.imageSize.getter(-[objc_class size](v11, "size"));
      uint64_t v13 = CGSize.fitting(_:mode:)(1LL);
      ArtworkView.imageSize.setter(v13);

      uint64_t v14 = *(void **)&v8[v9];
      double v15 = v11;
      id v16 = v14;
      v19.value.super.Class isa = a1;
      v19.is_nil = 0;
      ArtworkView.setImage(image:animated:)(v19, v17);
    }
  }

uint64_t type metadata accessor for ArcadeWelcomeItemView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore21ArcadeWelcomeItemView);
}

unint64_t sub_1000FC86C()
{
  unint64_t result = qword_1002E6E48;
  if (!qword_1002E6E48)
  {
    uint64_t v1 = type metadata accessor for ArtworkView(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1002E6E48);
  }

  return result;
}

uint64_t sub_1000FC8B4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000FC8D8(objc_class *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

id sub_1000FC8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v83 = a6;
  uint64_t v81 = a4;
  uint64_t v12 = sub_1000038E8((uint64_t *)&unk_1002EE460);
  __n128 v13 = __chkstk_darwin(v12);
  uint64_t v79 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v77 = type metadata accessor for OfferButtonSubtitlePosition(0LL, v13);
  uint64_t v15 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  __n128 v76 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000038E8((uint64_t *)&unk_1002EF2E0);
  uint64_t v80 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v78 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_1000038E8((uint64_t *)&unk_1002EE470);
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v74 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = type metadata accessor for OfferButtonPresenterViewAlignment(0LL, v20);
  uint64_t v22 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v72 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_1000038E8((uint64_t *)&unk_1002EF2F0);
  __chkstk_darwin(v24);
  uint64_t v75 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = sub_1000FCDE0(a1, a2);
  uint64_t v27 = BreakoutDetails.callToActionButtonAction.getter(v26);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton;
    uint64_t v30 = *(void **)&v7[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton];
    if (!v30) {
      goto LABEL_14;
    }
    uint64_t v71 = v15;
    uint64_t v82 = v17;
    uint64_t v31 = a3;
    id v32 = v30;
    Action.title.getter(v32);
    if (v33)
    {
      uint64_t v35 = v33;
      NSString v36 = String._bridgeToObjectiveC()();
      *(void *)&double v34 = swift_bridgeObjectRelease(v35).n128_u64[0];
    }

    else
    {
      NSString v36 = 0LL;
    }

    objc_msgSend(v32, "setTitle:forState:", v36, 0, v34);

    uint64_t v43 = *(void *)&v7[v29];
    a3 = v31;
    uint64_t v17 = v82;
    uint64_t v15 = v71;
    if (!v43)
    {
LABEL_14:
      swift_release(v28);
      if (!a3) {
        return [v7 setNeedsLayout];
      }
      goto LABEL_15;
    }

    uint64_t v44 = swift_allocObject(&unk_10028C200, 24LL, 7LL);
    swift_unknownObjectWeakInit(v44 + 16, v7);
    id v45 = (void (*)())swift_allocObject(&unk_10028C228, 40LL, 7LL);
    *((void *)v45 + 2) = v44;
    *((void *)v45 + 3) = v28;
    uint64_t v46 = v83;
    *((void *)v45 + 4) = v83;
    id v47 = (void (**)())(v43 + OBJC_IVAR____TtC8AppStore17DynamicTypeButton_primaryActionHandler);
    uint64_t v48 = *(void *)(v43 + OBJC_IVAR____TtC8AppStore17DynamicTypeButton_primaryActionHandler);
    uint64_t v49 = *(void *)(v43 + OBJC_IVAR____TtC8AppStore17DynamicTypeButton_primaryActionHandler + 8);
    void *v47 = sub_1000FD4D0;
    v47[1] = v45;
    swift_retain(v46);
    uint64_t v41 = v48;
    uint64_t v42 = v49;
    goto LABEL_11;
  }

  uint64_t v37 = OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton;
  uint64_t v38 = *(void **)&v7[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_callToActionButton];
  if (v38)
  {
    [v38 setTitle:0 forState:0];
    uint64_t v39 = *(void *)&v7[v37];
    if (v39)
    {
      id v40 = (uint64_t *)(v39 + OBJC_IVAR____TtC8AppStore17DynamicTypeButton_primaryActionHandler);
      uint64_t v41 = *v40;
      uint64_t v42 = v40[1];
      uint64_t *v40 = 0LL;
      v40[1] = 0LL;
LABEL_11:
      sub_10000A450(v41, v42);
    }
  }

  if (!a3) {
    return [v7 setNeedsLayout];
  }
LABEL_15:
  if (a5)
  {
    uint64_t v50 = *(void **)&v7[OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_offerButton];
    if (v50)
    {
      uint64_t v51 = *(void (**)(char *, void, uint64_t))(v22 + 104);
      uint64_t v82 = v17;
      uint64_t v53 = v72;
      uint64_t v52 = v73;
      uint64_t v70 = a5;
      v51(v72, enum case for OfferButtonPresenterViewAlignment.center(_:), v73);
      uint64_t v54 = v74;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v74, 1LL, 1LL, v52);
      uint64_t v55 = sub_100004288( (unint64_t *)&unk_1002EF320,  (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment,  (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
      swift_retain(a3);
      swift_retain(a5);
      id v56 = v50;
      uint64_t v57 = (uint64_t)v75;
      AccessibilityConditional.init(value:axValue:)(v53, v54, v52, v55);
      uint64_t v58 = sub_1000038E8((uint64_t *)&unk_1002EE4A0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56LL))(v57, 0LL, 1LL, v58);
      uint64_t v59 = *(void (**)(char *, void, uint64_t))(v15 + 104);
      uint64_t v60 = v15;
      uint64_t v61 = v76;
      uint64_t v62 = v77;
      v59(v76, enum case for OfferButtonSubtitlePosition.below(_:), v77);
      uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56);
      uint64_t v64 = v79;
      v63(v79, 1LL, 1LL, v62);
      uint64_t v65 = sub_100004288( (unint64_t *)&unk_1002EF330,  (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition,  (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
      uint64_t v66 = (uint64_t)v78;
      v67.n128_f64[0] = AccessibilityConditional.init(value:axValue:)(v61, v64, v62, v65);
      uint64_t v68 = v70;
      sub_1001EE4D0(v70, a3, v81, v57, v66, v83, 0, v67);
      swift_release(v68);
      swift_release(a3);

      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v66, v82);
      sub_1000077E0(v57, (uint64_t *)&unk_1002EF2F0);
    }
  }

  return [v7 setNeedsLayout];
}

uint64_t sub_1000FCDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BreakoutDetails.Badge(0LL);
  uint64_t v77 = *(void *)(v4 - 8);
  uint64_t v78 = v4;
  __chkstk_darwin(v4);
  uint64_t v79 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v74 = (char *)&v68 - v7;
  uint64_t v8 = type metadata accessor for BreakoutDetails.BackgroundStyle(0LL);
  uint64_t v72 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  __chkstk_darwin(v8);
  uint64_t v70 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for BreakoutDetails.TextAlignment(0LL);
  uint64_t v75 = *(void *)(v10 - 8);
  uint64_t v76 = v10;
  __chkstk_darwin(v10);
  uint64_t v71 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v68 - v17;
  uint64_t v19 = sub_1000038E8(&qword_1002E99B8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v68 - v23;
  __n128 v26 = __chkstk_darwin(v25);
  uint64_t v27 = *(uint64_t (**)(__n128))(v13 + 56);
  uint64_t v82 = (uint64_t)&v68 - v28;
  uint64_t v29 = v27(v26);
  uint64_t v81 = a2;
  uint64_t v30 = BreakoutDetails.badgeColorOverride.getter(v29);
  if (v30)
  {
    uint64_t v31 = (void *)v30;
    sub_10004B5C4(a1, (uint64_t)v24);
    id v32 = v18;
    uint64_t v33 = (void *)*((void *)v24 + 2);
    id v69 = v31;

    uint64_t v18 = v32;
    uint64_t v34 = v82;
    *((void *)v24 + 2) = v31;
    sub_1000077E0(v34, &qword_1002E99B8);

    ((void (*)(char *, void, uint64_t, uint64_t))v27)(v24, 0LL, 1LL, v12);
    sub_1000FD568((uint64_t)v24, v34);
  }

  sub_1000FD4DC(v82, (uint64_t)v21);
  sub_10004B5C4(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v21, 1LL, v12) == 1)
  {
    sub_10004B608((uint64_t)v15, (uint64_t)v18);
    uint64_t v35 = sub_1000077E0((uint64_t)v21, &qword_1002E99B8);
  }

  else
  {
    sub_10004B64C((uint64_t)v15);
    uint64_t v35 = sub_10004B608((uint64_t)v21, (uint64_t)v18);
  }

  NSString v36 = v70;
  uint64_t v37 = v71;
  uint64_t v38 = BreakoutDetails.textAlignment.getter(v35);
  BreakoutDetails.backgroundStyle.getter(v38);
  uint64_t v39 = v80;
  uint64_t v40 = v80 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_config;
  swift_beginAccess(v80 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_config, v84, 33LL, 0LL);
  sub_1000FD524((uint64_t)v18, v40);
  swift_endAccess(v84);
  uint64_t v41 = v39 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailTextAlignment;
  swift_beginAccess(v39 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailTextAlignment, v84, 33LL, 0LL);
  uint64_t v42 = v75;
  uint64_t v43 = (uint64_t)v18;
  uint64_t v44 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 24))(v41, v37, v76);
  swift_endAccess(v84);
  uint64_t v45 = v39 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle;
  swift_beginAccess(v39 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_detailBackgroundStyle, v84, 33LL, 0LL);
  uint64_t v46 = v72;
  uint64_t v47 = v45;
  uint64_t v48 = v73;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 24))(v47, v36, v73);
  swift_endAccess(v84);
  sub_1000F0F40();
  sub_1000F2340();
  sub_1000F2FF0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v48);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v44);
  uint64_t v49 = sub_10004B64C(v43);
  uint64_t v50 = v74;
  BreakoutDetails.badge.getter(v49);
  uint64_t v51 = v39 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badge;
  swift_beginAccess(v39 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_badge, v84, 0LL, 0LL);
  uint64_t v53 = v77;
  uint64_t v52 = v78;
  uint64_t v54 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v79, v51, v78);
  swift_beginAccess(v51, v83, 33LL, 0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 24))(v51, v50, v52);
  swift_endAccess(v83);
  sub_1000F1F7C(v54);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v53 + 8);
  v55(v50, v52);
  uint64_t v56 = ((uint64_t (*)(uint64_t, uint64_t))v55)(v54, v52);
  uint64_t v57 = *(void **)(v39 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_titleLabel);
  BreakoutDetails.title.getter(v56);
  if (v58)
  {
    uint64_t v60 = v58;
    NSString v61 = String._bridgeToObjectiveC()();
    *(void *)&double v59 = swift_bridgeObjectRelease(v60).n128_u64[0];
  }

  else
  {
    NSString v61 = 0LL;
  }

  objc_msgSend(v57, "setText:", v61, v59);

  uint64_t v62 = *(void **)(v80 + OBJC_IVAR____TtC8AppStore19BreakoutDetailsView_descriptionLabel);
  BreakoutDetails.description.getter();
  if (v63)
  {
    uint64_t v65 = v63;
    NSString v66 = String._bridgeToObjectiveC()();
    *(void *)&double v64 = swift_bridgeObjectRelease(v65).n128_u64[0];
  }

  else
  {
    NSString v66 = 0LL;
  }

  objc_msgSend(v62, "setText:", v66, v64);

  return sub_1000077E0(v82, &qword_1002E99B8);
}

void sub_1000FD328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionRunner.Origin(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    uint64_t v13 = UIResponder.nearestActionRunner.getter();

    if (v13)
    {
      swift_beginAccess(v10, v18, 0LL, 0LL);
      uint64_t v14 = swift_unknownObjectWeakLoadStrong(v10);
      if (v14)
      {
        uint64_t v15 = v14;
        *((void *)&v20 + 1) = type metadata accessor for BreakoutDetailsView(0LL);
        *(void *)&__int128 v19 = v15;
      }

      else
      {
        __int128 v19 = 0u;
        __int128 v20 = 0u;
      }

      (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for ActionRunner.Origin.userInitiated(_:),  v6);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, &v19, v9, a3);
      __n128 v16 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
      sub_1000077E0((uint64_t)&v19, (uint64_t *)&unk_1002E3500);
    }
  }

uint64_t sub_1000FD478()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000FD49C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1000FD4D0()
{
}

uint64_t sub_1000FD4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E99B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FD524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BreakoutDetailsView.Config(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FD568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E99B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FD5B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore40AchievementSummaryCardCollectionViewCell_itemLayoutContext, a1);
}

double sub_1000FD5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C( a1,  a2,  a3,  &OBJC_IVAR____TtC8AppStore40AchievementSummaryCardCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1000FD5C8(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1000FD610(uint64_t a1, uint64_t a2)
{
  return sub_1000FDC58( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for AchievementSummary,  (void (*)(uint64_t, char *, char *, void *, id))sub_10003E064);
}

uint64_t sub_1000FD634(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v41 = sub_1000038E8(&qword_1002E2880);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = __chkstk_darwin(v15);
  __int128 v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v17);
  ReadOnlyLens.value.getter(v44, v15);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  ItemLayoutContext.mutableState.getter(v20);
  uint64_t v21 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v22 = swift_dynamicCastClassUnconditional(v33, v21, 0LL, 0LL, 0LL);
  ItemLayoutContext.componentLayoutOptions.getter(v22);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EF48, v23);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(KeyPath);
  id v25 = sub_10014DB80();
  sub_100011C30((uint64_t)v44, (uint64_t)v42);
  uint64_t v26 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
  uint64_t v27 = type metadata accessor for Annotation(0LL);
  swift_dynamicCast(&v43, v42, v26, v27, 7LL);
  uint64_t v29 = v34;
  uint64_t v28 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v11, v14, v35);
  WritableStateLens.init(_:)(v11, &_s5StateVN);
  sub_1000E8768(v43, (uint64_t)v3, v22);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v3, v41);
  uint64_t v30 = v43;
  swift_unknownObjectRelease(v25);
  __n128 v31 = swift_release(v30);
  (*(void (**)(void *, uint64_t, __n128))(v38 + 8))(v5, v40, v31);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v28);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v44);
}

uint64_t sub_1000FD940(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v41 = sub_1000038E8((uint64_t *)&unk_1002EE4C0);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v35 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v4 = (uint64_t *)((char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v8 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v16);
  ReadOnlyLens.value.getter(v44, v14);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  ItemLayoutContext.mutableState.getter(v19);
  uint64_t v20 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v21 = swift_dynamicCastClassUnconditional(v33, v20, 0LL, 0LL, 0LL);
  ItemLayoutContext.componentLayoutOptions.getter(v21);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EF48, v22);
  ItemLayoutContext.subscript.getter(v4);
  swift_release(KeyPath);
  id v24 = sub_10014DB80();
  sub_100011C30((uint64_t)v44, (uint64_t)v42);
  uint64_t v25 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
  uint64_t v26 = type metadata accessor for GameCenterReengagement(0LL);
  swift_dynamicCast(&v43, v42, v25, v26, 7LL);
  uint64_t v27 = v34;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v34);
  uint64_t v28 = type metadata accessor for NilState(0LL);
  uint64_t v29 = v35;
  WritableStateLens.init(_:)(v10, v28);
  sub_100081078(v43, v21, (uint64_t)v7, (uint64_t)v4, v24);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v41);
  uint64_t v30 = v43;
  swift_unknownObjectRelease(v24);
  __n128 v31 = swift_release(v30);
  (*(void (**)(void *, uint64_t, __n128))(v38 + 8))(v4, v40, v31);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v37);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v27);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v44);
}

uint64_t sub_1000FDC58( uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(uint64_t, char *, char *, void *, id))
{
  uint64_t v45 = a4;
  uint64_t v38 = a3;
  uint64_t v35 = a2;
  uint64_t v44 = sub_1000038E8((uint64_t *)&unk_1002EE4C0);
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v36 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v18);
  ReadOnlyLens.value.getter(v48, v16);
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  ItemLayoutContext.mutableState.getter(v21);
  uint64_t v22 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v23 = swift_dynamicCastClassUnconditional(v35, v22, 0LL, 0LL, 0LL);
  ItemLayoutContext.componentLayoutOptions.getter(v23);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EF48, v24);
  ItemLayoutContext.subscript.getter(v7);
  swift_release(KeyPath);
  id v26 = sub_10014DB80();
  sub_100011C30((uint64_t)v48, (uint64_t)v46);
  uint64_t v27 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
  uint64_t v28 = v38(0LL);
  swift_dynamicCast(&v47, v46, v27, v28, 7LL);
  uint64_t v29 = v36;
  uint64_t v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v12, v15, v37);
  uint64_t v31 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v12, v31);
  v45(v47, v5, v10, v7, v26);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v44);
  uint64_t v32 = v47;
  swift_unknownObjectRelease(v26);
  __n128 v33 = swift_release(v32);
  (*(void (**)(void *, uint64_t, __n128))(v41 + 8))(v7, v43, v33);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v48);
}

uint64_t sub_1000FDF80(uint64_t a1, uint64_t a2, void (*a3)(void *, char *, char *, void *))
{
  uint64_t v29 = a3;
  uint64_t v24 = a2;
  uint64_t v28 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v27 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v30, v12);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  ItemLayoutContext.mutableState.getter(v17);
  uint64_t v18 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v19 = swift_dynamicCastClassUnconditional(v24, v18, 0LL, 0LL, 0LL);
  ItemLayoutContext.componentLayoutOptions.getter(v19);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EF48, v20);
  ItemLayoutContext.subscript.getter(v4);
  swift_release(KeyPath);
  id v22 = sub_10014DB80();
  v29(v30, v11, v7, v4);
  swift_unknownObjectRelease(v22);
  (*(void (**)(void *, uint64_t))(v27 + 8))(v4, v28);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v30);
}

uint64_t sub_1000FE1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v33 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v3 = (uint64_t *)((char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v13);
  ReadOnlyLens.value.getter(v34, v11);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  ItemLayoutContext.mutableState.getter(v16);
  uint64_t v17 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v18 = swift_dynamicCastClassUnconditional(v28, v17, 0LL, 0LL, 0LL);
  ItemLayoutContext.componentLayoutOptions.getter(v18);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EF48, v19);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(KeyPath);
  id v21 = sub_10014DB80();
  uint64_t v23 = v35;
  uint64_t v22 = v36;
  uint64_t v24 = sub_1000112B0(v34, v35);
  uint64_t ObjectType = swift_getObjectType(v21);
  sub_1000329BC((uint64_t)v24, (uint64_t)v10, v18, (uint64_t)v6, (uint64_t)v3, v21, v32, v23, ObjectType, v22);
  swift_unknownObjectRelease(v21);
  (*(void (**)(void *, uint64_t))(v31 + 8))(v3, v33);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v34);
}

uint64_t sub_1000FE3FC( uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(uint64_t, char *, char *, void *))
{
  uint64_t v45 = a4;
  uint64_t v38 = a3;
  uint64_t v35 = a2;
  uint64_t v44 = sub_1000038E8((uint64_t *)&unk_1002EE4C0);
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v36 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v18);
  ReadOnlyLens.value.getter(v48, v16);
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  ItemLayoutContext.mutableState.getter(v21);
  uint64_t v22 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v23 = swift_dynamicCastClassUnconditional(v35, v22, 0LL, 0LL, 0LL);
  ItemLayoutContext.componentLayoutOptions.getter(v23);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EF48, v24);
  ItemLayoutContext.subscript.getter(v7);
  swift_release(KeyPath);
  id v26 = sub_10014DB80();
  sub_100011C30((uint64_t)v48, (uint64_t)v46);
  uint64_t v27 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
  uint64_t v28 = v38(0LL);
  swift_dynamicCast(&v47, v46, v27, v28, 7LL);
  uint64_t v29 = v36;
  uint64_t v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v12, v15, v37);
  uint64_t v31 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v12, v31);
  v45(v47, v5, v10, v7);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v44);
  uint64_t v32 = v47;
  swift_unknownObjectRelease(v26);
  __n128 v33 = swift_release(v32);
  (*(void (**)(void *, uint64_t, __n128))(v41 + 8))(v7, v43, v33);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v48);
}

uint64_t sub_1000FE720( uint64_t a1, uint64_t a2, void (*a3)(void *, char *, uint64_t, char *, void *))
{
  uint64_t v29 = a3;
  uint64_t v24 = a2;
  uint64_t v28 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v27 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v30, v12);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  ItemLayoutContext.mutableState.getter(v17);
  uint64_t v18 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v19 = swift_dynamicCastClassUnconditional(v24, v18, 0LL, 0LL, 0LL);
  ItemLayoutContext.componentLayoutOptions.getter(v19);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EF48, v20);
  ItemLayoutContext.subscript.getter(v4);
  swift_release(KeyPath);
  id v22 = sub_10014DB80();
  v29(v30, v11, v19, v7, v4);
  swift_unknownObjectRelease(v22);
  (*(void (**)(void *, uint64_t))(v27 + 8))(v4, v28);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v30);
}

uint64_t sub_1000FE950(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v42 = sub_1000038E8((uint64_t *)&unk_1002EE4C0);
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v5 = (uint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  __n128 v14 = (char *)&v34 - v13;
  uint64_t v15 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v17);
  ReadOnlyLens.value.getter(v45, v15);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  ItemLayoutContext.mutableState.getter(v20);
  uint64_t v21 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v22 = swift_dynamicCastClassUnconditional(v34, v21, 0LL, 0LL, 0LL);
  ItemLayoutContext.componentLayoutOptions.getter(v22);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EF48, v23);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(KeyPath);
  id v25 = sub_10014DB80();
  sub_100011C30((uint64_t)v45, (uint64_t)v43);
  uint64_t v26 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
  uint64_t v27 = type metadata accessor for TextCard(0LL);
  swift_dynamicCast(&v44, v43, v26, v27, 7LL);
  uint64_t v29 = v35;
  uint64_t v28 = v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v11, v14, v36);
  uint64_t v30 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v11, v30);
  sub_10009F220(v44, (uint64_t)v3, v22, (uint64_t)v8, (uint64_t)v5, (uint64_t)v25);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v42);
  uint64_t v31 = v44;
  swift_unknownObjectRelease(v25);
  __n128 v32 = swift_release(v31);
  (*(void (**)(void *, uint64_t, __n128))(v39 + 8))(v5, v41, v32);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v38);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v28);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v45);
}

uint64_t sub_1000FEC64( uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(uint64_t, char *, uint64_t, char *, void *))
{
  uint64_t v45 = a4;
  uint64_t v38 = a3;
  uint64_t v35 = a2;
  uint64_t v44 = sub_1000038E8((uint64_t *)&unk_1002EE4C0);
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v36 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ItemLayoutContext.item.getter(v18);
  ReadOnlyLens.value.getter(v48, v16);
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  ItemLayoutContext.mutableState.getter(v21);
  uint64_t v22 = type metadata accessor for ObjectGraph(0LL);
  uint64_t v23 = swift_dynamicCastClassUnconditional(v35, v22, 0LL, 0LL, 0LL);
  ItemLayoutContext.componentLayoutOptions.getter(v23);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EF48, v24);
  ItemLayoutContext.subscript.getter(v7);
  swift_release(KeyPath);
  id v26 = sub_10014DB80();
  sub_100011C30((uint64_t)v48, (uint64_t)v46);
  uint64_t v27 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
  uint64_t v28 = v38(0LL);
  swift_dynamicCast(&v47, v46, v27, v28, 7LL);
  uint64_t v29 = v36;
  uint64_t v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v12, v15, v37);
  uint64_t v31 = type metadata accessor for NilState(0LL);
  WritableStateLens.init(_:)(v12, v31);
  v45(v47, v5, v23, v10, v7);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v44);
  uint64_t v32 = v47;
  swift_unknownObjectRelease(v26);
  __n128 v33 = swift_release(v32);
  (*(void (**)(void *, uint64_t, __n128))(v41 + 8))(v7, v43, v33);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
  return _s8AppStore17PillOverlayLayoutVwxx_0(v48);
}

uint64_t sub_1000FEF94(uint64_t a1)
{
  return static ConfigurableCell.reuseIdentifier(in:)(a1, v1);
}

uint64_t sub_1000FEF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E99C0,  type metadata accessor for AchievementSummaryCardCollectionViewCell,  (uint64_t)&unk_10023EE50);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void sub_1000FF008(uint64_t a1@<X8>)
{
}

void sub_1000FF01C(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for PageGrid(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  double v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v13 = v12(v9, v6);
  ShelfLayoutContext.shelf.getter(v13);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EFD8, v14);
  ReadOnlyLens.subscript.getter(&v39, KeyPath, v2);
  __n128 v16 = swift_release(KeyPath);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  LODWORD(v2) = v39;
  uint64_t v18 = ShelfLayoutContext.contentPageGrid.getter(v17);
  double v19 = PageGrid.containerWidth.getter(v18);
  uint64_t v20 = v12(v9, v6);
  uint64_t v21 = ShelfLayoutContext.traitCollection.getter(v20);
  uint64_t v22 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  uint64_t v23 = (char *)objc_allocWithZone(v22);
  uint64_t v24 = (double *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *uint64_t v24 = v19;
  v24[1] = 1.79769313e308;
  *(void *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v21;
  v38.receiver = v23;
  v38.super_class = v22;
  id v25 = objc_msgSendSuper2(&v38, "init");
  id v26 = v25;
  if ((_DWORD)v2 == 1)
  {
    [v25 pageContainerSize];
    double v28 = v27;
    [v26 pageMarginInsets];
    double v30 = v28 - v29;
    [v26 pageMarginInsets];
    double v32 = v30 - v31;
    [v26 pageContainerSize];
    [v26 pageMarginInsets];
    [v26 pageMarginInsets];
    uint64_t v33 = qword_1002E0A88;
    double v11 = (v32 + -80.0) / 3.0;
  }

  else
  {
    uint64_t v33 = qword_1002E0A88;
  }

  if (v33 != -1) {
    swift_once(&qword_1002E0A88, sub_1000C6550);
  }
  uint64_t v34 = type metadata accessor for AspectRatio(0LL);
  sub_10000A634(v34, (uint64_t)qword_1002F3FF8);
  double v35 = AspectRatio.height(fromWidth:)(v11);
  ComponentPrefetchSizing.init(size:contentMode:)(1LL, v11, v35);
  uint64_t v36 = type metadata accessor for ComponentPrefetchSizing(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56LL))(a1, 0LL, 1LL, v36);
}

void sub_1000FF2E0(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for PageGrid(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  double v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, double))(v7 + 8);
  uint64_t v13 = v12(v9, v6, v11);
  ShelfLayoutContext.shelf.getter(v13);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EFD8, v14);
  ReadOnlyLens.subscript.getter(&v32, KeyPath, v2);
  __n128 v16 = swift_release(KeyPath);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  uint64_t v18 = ShelfLayoutContext.contentPageGrid.getter(v17);
  double v19 = PageGrid.containerWidth.getter(v18);
  uint64_t v20 = ((uint64_t (*)(char *, uint64_t))v12)(v9, v6);
  uint64_t v21 = ShelfLayoutContext.traitCollection.getter(v20);
  uint64_t v22 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  uint64_t v23 = (char *)objc_allocWithZone(v22);
  uint64_t v24 = (double *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *uint64_t v24 = v19;
  v24[1] = 1.79769313e308;
  *(void *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v21;
  v31.receiver = v23;
  v31.super_class = v22;
  id v25 = objc_msgSendSuper2(&v31, "init");
  if (qword_1002E0A48 != -1) {
    swift_once(&qword_1002E0A48, sub_1000C0278);
  }
  uint64_t v26 = type metadata accessor for SmallLockupLayout.Metrics(0LL);
  sub_10000A634(v26, (uint64_t)qword_1002F3F00);
  double v27 = SmallLockupLayout.Metrics.artworkSize.getter();
  ComponentPrefetchSizing.init(size:contentMode:)(1LL, v27, v28);
  uint64_t v29 = type metadata accessor for ComponentPrefetchSizing(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(a1, 0LL, 1LL, v29);
}

void sub_1000FF50C(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for PageGrid(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  double v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v13 = v12(v9, v6);
  ShelfLayoutContext.shelf.getter(v13);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EFD8, v14);
  ReadOnlyLens.subscript.getter(&v38, KeyPath, v2);
  __n128 v16 = swift_release(KeyPath);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  LODWORD(v2) = v38;
  uint64_t v18 = ShelfLayoutContext.contentPageGrid.getter(v17);
  double v19 = PageGrid.containerWidth.getter(v18);
  uint64_t v20 = v12(v9, v6);
  uint64_t v21 = ShelfLayoutContext.traitCollection.getter(v20);
  uint64_t v22 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  uint64_t v23 = (char *)objc_allocWithZone(v22);
  uint64_t v24 = (double *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *uint64_t v24 = v19;
  v24[1] = 1.79769313e308;
  *(void *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v21;
  v37.receiver = v23;
  v37.super_class = v22;
  id v25 = objc_msgSendSuper2(&v37, "init");
  uint64_t v26 = v25;
  if ((_DWORD)v2 == 1)
  {
    [v25 pageContainerSize];
    double v28 = v27;
    [v26 pageMarginInsets];
    double v30 = v28 - v29;
    [v26 pageMarginInsets];
    double v32 = v30 - v31;
    [v26 pageContainerSize];
    [v26 pageMarginInsets];
    [v26 pageMarginInsets];
    double v11 = (v32 + -40.0) * 0.5;
  }

  if (qword_1002E0E58 != -1) {
    swift_once(&qword_1002E0E58, sub_10016B8AC);
  }
  uint64_t v33 = type metadata accessor for TVFlowcaseItemLayout.Metrics(0LL);
  sub_10000A634(v33, (uint64_t)qword_1002F4F58);
  double v34 = AspectRatio.height(fromWidth:)(v11);
  ComponentPrefetchSizing.init(size:contentMode:)(5LL, v11, v34);
  uint64_t v35 = type metadata accessor for ComponentPrefetchSizing(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(a1, 0LL, 1LL, v35);
}

void sub_1000FF7CC(void *a1@<X2>, double *a2@<X3>, double *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v32 = a4;
  uint64_t v33 = a1;
  double v34 = a2;
  uint64_t v35 = a3;
  uint64_t v6 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for PageGrid(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ShelfLayoutContext.contentPageGrid.getter(v14);
  double v15 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  __n128 v16 = *(uint64_t (**)(char *, uint64_t, double))(v11 + 8);
  uint64_t v17 = v16(v13, v10, v15);
  ShelfLayoutContext.shelf.getter(v17);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EFD8, v18);
  ReadOnlyLens.subscript.getter(&v37, KeyPath, v6);
  __n128 v20 = swift_release(KeyPath);
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v20);
  uint64_t v22 = ShelfLayoutContext.contentPageGrid.getter(v21);
  double v23 = PageGrid.containerWidth.getter(v22);
  uint64_t v24 = ((uint64_t (*)(char *, uint64_t))v16)(v13, v10);
  uint64_t v25 = ShelfLayoutContext.traitCollection.getter(v24);
  uint64_t v26 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  double v27 = (char *)objc_allocWithZone(v26);
  double v28 = (double *)&v27[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *double v28 = v23;
  v28[1] = 1.79769313e308;
  *(void *)&v27[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v25;
  v36.receiver = v27;
  v36.super_class = v26;
  id v29 = objc_msgSendSuper2(&v36, "init");
  if (*v33 != -1LL) {
    swift_once(v33, v32);
  }
  ComponentPrefetchSizing.init(size:contentMode:)(2LL, *v34, *v35);
  uint64_t v30 = type metadata accessor for ComponentPrefetchSizing(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(a5, 0LL, 1LL, v30);
}

void sub_1000FF9EC(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for PageGrid(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  double v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, double))(v7 + 8);
  uint64_t v13 = v12(v9, v6, v11);
  ShelfLayoutContext.shelf.getter(v13);
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EFD8, v14);
  ReadOnlyLens.subscript.getter(&v29, KeyPath, v2);
  __n128 v16 = swift_release(KeyPath);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  uint64_t v18 = ShelfLayoutContext.contentPageGrid.getter(v17);
  double v19 = PageGrid.containerWidth.getter(v18);
  uint64_t v20 = ((uint64_t (*)(char *, uint64_t))v12)(v9, v6);
  uint64_t v21 = ShelfLayoutContext.traitCollection.getter(v20);
  uint64_t v22 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  double v23 = (char *)objc_allocWithZone(v22);
  uint64_t v24 = (double *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *uint64_t v24 = v19;
  v24[1] = 1.79769313e308;
  *(void *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v21;
  v28.receiver = v23;
  v28.super_class = v22;
  id v25 = objc_msgSendSuper2(&v28, "init");
  uint64_t v26 = type metadata accessor for ComponentPrefetchSizing(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(a1, 1LL, 1LL, v26);
}

uint64_t sub_1000FFBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001004EC(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100103C34);
}

uint64_t sub_1000FFBE4( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t), void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  void (*v29)(uint64_t *__return_ptr, uint64_t *);
  void (*v30)(char *, uint64_t);
  uint64_t v29 = a5;
  uint64_t v30 = a4;
  uint64_t v6 = v5;
  uint64_t v27 = a2;
  uint64_t v9 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000038E8(&qword_1002E99C8);
  __chkstk_darwin(v13);
  double v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for ComponentPrefetchSizing(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  double v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v20);
  v30(v12, a3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  uint64_t v22 = sub_10010393C(v28);
  __chkstk_darwin(v22);
  *(&v27 - 2) = (uint64_t)v19;
  *(&v27 - 1) = v6;
  uint64_t v23 = (uint64_t)sub_100130994(v29, (uint64_t)(&v27 - 4), (uint64_t)v22);
  swift_bridgeObjectRelease(v22);
  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0) {
      uint64_t v25 = v23;
    }
    else {
      uint64_t v25 = v23 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v23);
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v23);
    if (!v26) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }

  if (*(void *)((v23 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
LABEL_5:
  }
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v23);
LABEL_6:
  __n128 v24 = swift_bridgeObjectRelease(v23);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v24);
}

uint64_t sub_1000FFE14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  uint64_t v5 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000038E8(&qword_1002E99C8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ComponentPrefetchSizing(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  double v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v16);
  sub_1000FF7CC( &qword_1002E0E28,  (double *)&qword_1002F4D78,  (double *)algn_1002F4D80,  (uint64_t)sub_10016A568,  (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  uint64_t v18 = sub_10010393C(v24);
  __chkstk_darwin(v18);
  *(&v23 - 2) = (uint64_t)v15;
  *(&v23 - 1) = v3;
  uint64_t v19 = (uint64_t)sub_100130994( (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100103C58,  (uint64_t)(&v23 - 4),  (uint64_t)v18);
  swift_bridgeObjectRelease(v18);
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v19);
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v19);
    if (!v22) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }

  if (*(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
LABEL_5:
  }
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v19);
LABEL_6:
  __n128 v20 = swift_bridgeObjectRelease(v19);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v20);
}

uint64_t sub_10010005C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  uint64_t v5 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000038E8(&qword_1002E99C8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ComponentPrefetchSizing(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  double v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v16);
  sub_1000FF7CC( &qword_1002E0E20,  (double *)&xmmword_1002F4CF0,  (double *)&xmmword_1002F4CF0 + 1,  (uint64_t)sub_10016A324,  (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  uint64_t v18 = sub_10010393C(v24);
  __chkstk_darwin(v18);
  *(&v23 - 2) = (uint64_t)v15;
  *(&v23 - 1) = v3;
  uint64_t v19 = (uint64_t)sub_100130994( (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100103C58,  (uint64_t)(&v23 - 4),  (uint64_t)v18);
  swift_bridgeObjectRelease(v18);
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v19);
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v19);
    if (!v22) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }

  if (*(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
LABEL_5:
  }
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v19);
LABEL_6:
  __n128 v20 = swift_bridgeObjectRelease(v19);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v20);
}

uint64_t sub_1001002A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  uint64_t v5 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000038E8(&qword_1002E99C8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ComponentPrefetchSizing(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  double v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v16);
  sub_1000FF7CC(&qword_1002E0E38, (double *)qword_1002F4E88, dbl_1002F4E90, (uint64_t)sub_10016A5B4, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  uint64_t v18 = sub_10010393C(v24);
  __chkstk_darwin(v18);
  *(&v23 - 2) = (uint64_t)v15;
  *(&v23 - 1) = v3;
  uint64_t v19 = (uint64_t)sub_100130994( (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100103C58,  (uint64_t)(&v23 - 4),  (uint64_t)v18);
  swift_bridgeObjectRelease(v18);
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v19);
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v19);
    if (!v22) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }

  if (*(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
LABEL_5:
  }
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v19);
LABEL_6:
  __n128 v20 = swift_bridgeObjectRelease(v19);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v20);
}

uint64_t sub_1001004EC( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *))
{
  void (*v27)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v27 = a4;
  uint64_t v5 = v4;
  v25[1] = a2;
  uint64_t v7 = type metadata accessor for ShelfLayoutContext(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000038E8(&qword_1002E99C8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for ComponentPrefetchSizing(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v18);
  sub_1000FF9EC((uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  __n128 v20 = sub_10010393C(v26);
  __chkstk_darwin(v20);
  v25[-2] = v17;
  v25[-1] = v5;
  uint64_t v21 = (uint64_t)sub_100130994(v27, (uint64_t)&v25[-4], (uint64_t)v20);
  swift_bridgeObjectRelease(v20);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0) {
      uint64_t v23 = v21;
    }
    else {
      uint64_t v23 = v21 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v21);
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v21);
    if (!v24) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }

  if (*(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
LABEL_5:
  }
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v21);
LABEL_6:
  __n128 v22 = swift_bridgeObjectRelease(v21);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v22);
}

uint64_t sub_100100718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288(&qword_1002E99E8, type metadata accessor for ActionCollectionViewCell, (uint64_t)&unk_100244870);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100100784@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_itemLayoutContext, a1);
}

double sub_100100790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_itemLayoutContext);
}

double sub_10010079C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = v4 + *a4;
  swift_beginAccess(v6, v8, 33LL, 0LL);
  sub_100103C70(a1, v6, (uint64_t *)&unk_1002E1D40);
  *(void *)&double result = swift_endAccess(v8).n128_u64[0];
  return result;
}

uint64_t (*sub_1001007F8(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100100848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E99F0,  type metadata accessor for AnnotationCollectionViewCell,  (uint64_t)&unk_10023ED38);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001008B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023B5A0, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_10010091C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore29AppShowcaseCollectionViewCell_itemLayoutContext, a1);
}

double sub_100100928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore29AppShowcaseCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100100934(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

uint64_t sub_10010097C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100246294, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_1001009D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023EC58, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100100A3C(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_100100A84(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100246294, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_100100AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100246294, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_100100B4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_itemLayoutContext, a1);
}

double sub_100100B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore30ArcadeFooterCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100100B64(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100100BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002466E4, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_100100C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023EBA8, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100100C6C(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_100100CB4(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002466E4, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_100100D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002466E4, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_100100D7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_itemLayoutContext, a1);
}

double sub_100100D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100100D94(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100100DE0(uint64_t a1, uint64_t a2)
{
  return sub_1000FE3FC( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for Brick,  (void (*)(uint64_t, char *, char *, void *))sub_1001FB6F0);
}

uint64_t sub_100100E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288(&qword_1002E99F8, type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_10023EAF8);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100100E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FFBE4( a1,  a2,  a3,  (void (*)(char *, uint64_t))sub_1000FF01C,  (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100103C58);
}

uint64_t sub_100100E98@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_itemLayoutContext, a1);
}

double sub_100100EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100100EB0(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

double sub_100100EF8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v3 = sub_1000038E8(&qword_1002E5A38);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  v13.receiver = v1;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, "prepareForReuse", v4);
  ArtworkView.image.setter(0LL);
  sub_1000882E4(0LL, 0LL);
  sub_1000882F8(0LL, 0LL);
  uint64_t v8 = type metadata accessor for ChartOrCategoryBrickContext(0LL, v7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(v6, 1LL, 1LL, v8);
  uint64_t v9 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore38ChartOrCategoryBrickCollectionViewCell_brickContext], v12, 33LL, 0LL);
  sub_100103C70((uint64_t)v6, v9, &qword_1002E5A38);
  *(void *)&double result = swift_endAccess(v12).n128_u64[0];
  return result;
}

uint64_t sub_100101010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A00,  type metadata accessor for ChartOrCategoryBrickCollectionViewCell,  (uint64_t)&unk_10023EA48);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100101080@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore31EditorialCardCollectionViewCell_itemLayoutContext, a1);
}

double sub_10010108C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore31EditorialCardCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100101098(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1001010E0()
{
  return sub_100101440();
}

uint64_t sub_1001010EC(uint64_t a1, uint64_t a2)
{
  return sub_1000FE3FC( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for EditorialCard,  (void (*)(uint64_t, char *, char *, void *))sub_1000498E4);
}

uint64_t sub_100101110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A08,  type metadata accessor for EditorialCardCollectionViewCell,  (uint64_t)&unk_10023E998);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100101180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FFBE4( a1,  a2,  a3,  (void (*)(char *, uint64_t))sub_1000FF50C,  (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100103C34);
}

uint64_t sub_1001011A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore26TVLockupCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001011B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore26TVLockupCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001011BC(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100101204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100242260, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_100101260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023E8E8, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_1001012C4(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_10010130C(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100242260, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_100101370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100242260, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_1001013D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore29FramedMediaCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001013E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore29FramedMediaCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001013EC(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100101434()
{
  return sub_100101440();
}

uint64_t sub_100101440()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v2, "prepareForReuse");
  return ArtworkView.image.setter(0LL);
}

uint64_t sub_100101490(uint64_t a1, uint64_t a2)
{
  return sub_1000FE3FC( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for FramedArtwork,  (void (*)(uint64_t, char *, char *, void *))sub_10004CC94);
}

uint64_t sub_1001014B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A10,  type metadata accessor for FramedArtworkCollectionViewCell,  (uint64_t)&unk_10023E838);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100101520()
{
  return sub_10010385C();
}

uint64_t sub_10010152C(uint64_t a1, uint64_t a2)
{
  return sub_1000FEC64( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for FramedVideo,  (void (*)(uint64_t, char *, uint64_t, char *, void *))sub_1001F683C);
}

uint64_t sub_100101550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A18,  type metadata accessor for FramedVideoCollectionViewCell,  (uint64_t)&unk_10023E788);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001015BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001015C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C( a1,  a2,  a3,  &OBJC_IVAR____TtC8AppStore40GameCenterReengagementCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001015D4(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100101620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A20,  type metadata accessor for GameCenterReengagementCollectionViewCell,  (uint64_t)&unk_10023E6D8);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_10010168C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore30HeroCarouselCollectionViewCell_itemLayoutContext, a1);
}

double sub_100101698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore30HeroCarouselCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001016A4(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1001016EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100245E08, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_100101748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023E628, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_1001017AC(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_1001017F4(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100245E08, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_100101858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100245E08, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_1001018BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore39LargeGameCenterPlayerCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001018C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C( a1,  a2,  a3,  &OBJC_IVAR____TtC8AppStore39LargeGameCenterPlayerCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001018D4(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_10010191C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100237BB0, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_100101978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023E578, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_1001019DC(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_100101A24(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100237BB0, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_100101A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100237BB0, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_100101AEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_itemLayoutContext, a1);
}

double sub_100101AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore31LargeBreakoutCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100101B04(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100101B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100239584, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_100101BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023E4C8, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100101C0C(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_100101C54(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100239584, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_100101CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100239584, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_100101D1C(uint64_t a1, uint64_t a2)
{
  return sub_1000FE720(a1, a2, (void (*)(void *, char *, uint64_t, char *, void *))sub_1000347B0);
}

uint64_t sub_100101D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A28,  type metadata accessor for LargeLockupCollectionViewCell,  (uint64_t)&unk_10023E418);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void sub_100101DA4(uint64_t a1@<X8>)
{
}

uint64_t sub_100101DD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore32LargeStoryCardCollectionViewCell_itemLayoutContext, a1);
}

double sub_100101DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore32LargeStoryCardCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100101DF0(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100101E3C(uint64_t a1, uint64_t a2)
{
  return sub_1000FE720(a1, a2, (void (*)(void *, char *, uint64_t, char *, void *))sub_1000347B4);
}

uint64_t sub_100101E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A30,  type metadata accessor for LargeStoryCardCollectionViewCell,  (uint64_t)&unk_10023E368);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100101EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A38,  type metadata accessor for MediumLockupCollectionViewCell,  (uint64_t)&unk_10023E2B8);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void sub_100101F30(uint64_t a1@<X8>)
{
}

uint64_t sub_100101F64@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_itemLayoutContext, a1);
}

double sub_100101F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100101F7C(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100101FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100240160, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_100102020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023EF00, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100102084(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_1001020CC(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100240160, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_100102130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100240160, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_100102194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288(&qword_1002E9A40, type metadata accessor for ParagraphCollectionViewCell, (uint64_t)&unk_10023F1E8);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100102200@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore30PosterLockupCollectionViewCell_itemLayoutContext, a1);
}

double sub_10010220C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore30PosterLockupCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100102218(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100102264(uint64_t a1, uint64_t a2)
{
  return sub_1000FEC64( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for PosterLockup,  (void (*)(uint64_t, char *, uint64_t, char *, void *))sub_10015285C);
}

uint64_t sub_100102288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A48,  type metadata accessor for PosterLockupCollectionViewCell,  (uint64_t)&unk_10023E1A0);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001022F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore33PrivacyCategoryCollectionViewCell_itemLayoutContext, a1);
}

double sub_100102300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore33PrivacyCategoryCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_10010230C(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100102358(uint64_t a1, uint64_t a2)
{
  return sub_1000FDF80(a1, a2, (void (*)(void *, char *, char *, void *))sub_100034BD4);
}

uint64_t sub_100102374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A50,  type metadata accessor for PrivacyCategoryCollectionViewCell,  (uint64_t)&unk_10023E0F0);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001023E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore35PrivacyDefinitionCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001023EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore35PrivacyDefinitionCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001023F8(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100102444(uint64_t a1, uint64_t a2)
{
  return sub_1000FDC58( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for PrivacyDefinition,  (void (*)(uint64_t, char *, char *, void *, id))sub_100119500);
}

uint64_t sub_100102468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A58,  type metadata accessor for PrivacyDefinitionCollectionViewCell,  (uint64_t)&unk_10023E040);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001024D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A60,  type metadata accessor for PrivacyFooterCollectionViewCell,  (uint64_t)&unk_100244C18);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100102540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A68,  type metadata accessor for PrivacyHeaderCollectionViewCell,  (uint64_t)&unk_100240378);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001025AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore29PrivacyTypeCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001025B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore29PrivacyTypeCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001025C4(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100102610(uint64_t a1, uint64_t a2)
{
  return sub_1000FDC58( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for PrivacyType,  (void (*)(uint64_t, char *, char *, void *, id))sub_1001AB520);
}

uint64_t sub_100102634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A70,  type metadata accessor for PrivacyTypeCollectionViewCell,  (uint64_t)&unk_10023DEC0);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001026A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore36ProductDescriptionCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001026AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore36ProductDescriptionCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001026B8(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100102700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100238444, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_10010275C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023DE10, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_1001027C0(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_100102808(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100238444, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_10010286C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100238444, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_1001028D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore33ProductPageLinkCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001028DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore33ProductPageLinkCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001028E8(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100102930(uint64_t a1, uint64_t a2)
{
  return sub_1000FDF80(a1, a2, (void (*)(void *, char *, char *, void *))sub_100034DD8);
}

uint64_t sub_10010294C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A78,  type metadata accessor for ProductPageLinkCollectionViewCell,  (uint64_t)&unk_10023DD60);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001029B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C970, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100102A1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_itemLayoutContext, a1);
}

double sub_100102A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100102A34(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

id sub_100102A7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v2, "prepareForReuse");
  return sub_10005B644(0LL);
}

uint64_t sub_100102ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A80,  type metadata accessor for ProductMediaCollectionViewCell,  (uint64_t)&unk_10023DC80);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100102B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002453F8, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100102B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023C0C0, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100102BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A88,  type metadata accessor for PurchasesLockupCollectionViewCell,  (uint64_t)&unk_10023DB70);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void sub_100102C5C(uint64_t a1@<X8>)
{
}

uint64_t sub_100102C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100246BCC, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100102CF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore31SmallBreakoutCollectionViewCell_itemLayoutContext, a1);
}

double sub_100102D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore31SmallBreakoutCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100102D0C(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

void sub_100102D54()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  v7.receiver = v0;
  v7.super_class = ObjectType;
  objc_msgSendSuper2(&v7, "prepareForReuse");
  sub_1000EFB54();
  v6.receiver = v0;
  v6.super_class = ObjectType;
  objc_msgSendSuper2(&v6, "setBackgroundColor:", 0);
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore31SmallBreakoutCollectionViewCell_iconView];
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = v2;
  id v4 = objc_msgSendSuper2(&v5, "backgroundColor");
  ArtworkView.backgroundColor.setter(v4);
}

uint64_t sub_100102E0C(uint64_t a1, uint64_t a2)
{
  return sub_1000FEC64( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for SmallBreakout,  (void (*)(uint64_t, char *, uint64_t, char *, void *))sub_10008B4B0);
}

uint64_t sub_100102E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A90,  type metadata accessor for SmallBreakoutCollectionViewCell,  (uint64_t)&unk_10023DA90);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100102E9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_itemLayoutContext, a1);
}

double sub_100102EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C( a1,  a2,  a3,  &OBJC_IVAR____TtC8AppStore39SmallGameCenterPlayerCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100102EB4(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100102EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002458A8, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_100102F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023D9E0, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100102FBC(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_100103004(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002458A8, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_100103068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002458A8, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_1001030CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001030D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001030E4(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100103130(uint64_t a1, uint64_t a2)
{
  return sub_1000FE3FC( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for Lockup,  (void (*)(uint64_t, char *, char *, void *))sub_10021BDF4);
}

uint64_t sub_100103154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9A98,  type metadata accessor for SmallLockupCollectionViewCell,  (uint64_t)&unk_10023D930);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001031C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FFBE4( a1,  a2,  a3,  (void (*)(char *, uint64_t))sub_1000FF2E0,  (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100103C34);
}

uint64_t sub_1001031E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore32SmallStoryCardCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001031F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore32SmallStoryCardCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100103200(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_10010324C(uint64_t a1, uint64_t a2)
{
  return sub_1000FE720(a1, a2, (void (*)(void *, char *, uint64_t, char *, void *))sub_1000349C4);
}

uint64_t sub_100103268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288( &qword_1002E9AA0,  type metadata accessor for SmallStoryCardCollectionViewCell,  (uint64_t)&unk_10023D880);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001032D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001032E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore26TextCardCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001032EC(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100103338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288(&qword_1002E9AA8, type metadata accessor for TextCardCollectionViewCell, (uint64_t)&unk_10023D7D0);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1001033A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_itemLayoutContext, a1);
}

double sub_1001033B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_1001033BC(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100103404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002454B0, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_100103460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023D720, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_1001034C4(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_10010350C(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002454B0, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_100103570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1002454B0, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_1001035D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100238564, a3);
  return sub_100163B74(a1, a2, a3, WitnessTable);
}

uint64_t sub_100103630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_10023D670, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100103694(uint64_t a1, uint64_t a2)
{
  return sub_1000180B0();
}

void sub_1001036DC(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100238564, a1);
  sub_1001EC528(a1, WitnessTable, a2);
}

uint64_t sub_100103740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_100238564, a4);
  return sub_1001EC720(a1, a2, a3, a4, WitnessTable, a5);
}

uint64_t sub_1001037A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001037B0(&OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_itemLayoutContext, a1);
}

uint64_t sub_1001037B0@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess(v4, v6, 0LL, 0LL);
  return sub_1000B33D0(v4, a2);
}

double sub_1001037FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010079C(a1, a2, a3, &OBJC_IVAR____TtC8AppStore27VideoCardCollectionViewCell_itemLayoutContext);
}

uint64_t (*sub_100103808(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_100103850()
{
  return sub_10010385C();
}

uint64_t sub_10010385C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v2, "prepareForReuse");
  return sub_1001AE998();
}

uint64_t sub_1001038A8(uint64_t a1, uint64_t a2)
{
  return sub_1000FEC64( a1,  a2,  (uint64_t (*)(void))&type metadata accessor for VideoCard,  (void (*)(uint64_t, char *, uint64_t, char *, void *))sub_10014C524);
}

uint64_t sub_1001038CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100004288(&qword_1002E9AB0, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_10023D5C0);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void *sub_10010393C(uint64_t a1)
{
  uint64_t v2 = sub_1000038E8(&qword_1002E62A0);
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v35 - v10;
  uint64_t v12 = sub_1000038E8((uint64_t *)&unk_1002E63B0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (void *)((char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t KeyPath = swift_getKeyPath(&unk_10023EF78, v16);
  v35[1] = a1;
  ItemLayoutContext.subscript.getter(v15);
  swift_release(KeyPath);
  uint64_t v19 = swift_getKeyPath(&unk_10023EFA8, v18);
  ReadOnlyLens.subscript.getter(v11, v19, v12);
  __n128 v20 = swift_release(v19);
  (*(void (**)(void *, uint64_t, __n128))(v13 + 8))(v15, v12, v20);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Shelf.ContentType.todayCard(_:), v5);
  uint64_t v21 = sub_100004288( (unint64_t *)&qword_1002E99D0,  (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType,  (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  LOBYTE(a1) = dispatch thunk of static Equatable.== infix(_:_:)(v11, v8, v5, v21);
  __n128 v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22(v8, v5);
  v22(v11, v5);
  if ((a1 & 1) != 0) {
    return _swiftEmptyArrayStorage;
  }
  ItemLayoutContext.item.getter(v23);
  uint64_t v24 = v37;
  ReadOnlyLens.value.getter(v40, v37);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v24);
  uint64_t v25 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
  uint64_t v26 = sub_1000038E8(&qword_1002E99D8);
  if ((swift_dynamicCast(v38, v40, v25, v26, 6LL) & 1) == 0)
  {
    uint64_t v39 = 0LL;
    memset(v38, 0, sizeof(v38));
    sub_1000077E0((uint64_t)v38, &qword_1002E99E0);
    return _swiftEmptyArrayStorage;
  }

  sub_1000243BC(v38, (uint64_t)v41);
  uint64_t v27 = v42;
  uint64_t v28 = v43;
  sub_1000112B0(v41, v42);
  uint64_t v29 = dispatch thunk of ArtworkModelProtocol.artwork.getter(v27, v28);
  if (!v29)
  {
    _s8AppStore17PillOverlayLayoutVwxx_0(v41);
    return _swiftEmptyArrayStorage;
  }

  uint64_t v30 = v29;
  uint64_t v31 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
  uint64_t v32 = swift_allocObject(v31, 40LL, 7LL);
  *(_OWORD *)(v32 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
  *(void *)(v32 + 32) = v30;
  v40[0] = v32;
  specialized Array._endMutation()(v32);
  uint64_t v33 = v40[0];
  _s8AppStore17PillOverlayLayoutVwxx_0(v41);
  return (void *)v33;
}

uint64_t sub_100103C34@<X0>(uint64_t *a1@<X8>)
{
  return sub_100103CB4(0LL, a1);
}

uint64_t sub_100103C58@<X0>(uint64_t *a1@<X8>)
{
  return sub_100103CB4(1LL, a1);
}

uint64_t sub_100103C70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000038E8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40LL))(a2, a1, v5);
  return a2;
}

uint64_t sub_100103CB4@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  double v4 = ComponentPrefetchSizing.size.getter();
  double v6 = v5;
  uint64_t v7 = ComponentPrefetchSizing.contentMode.getter();
  uint64_t result = Artwork.config(_:mode:prefersLayeredImage:)(v7, a1, v4, v6);
  *a2 = result;
  return result;
}

_OWORD *sub_100103D28@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1002E0E28 != -1) {
    swift_once(&qword_1002E0E28, sub_10016A568);
  }
  return sub_100007BC4(&qword_1002F4D78, a1);
}

uint64_t sub_100103DE4()
{
  return type metadata accessor for LargeLockupCollectionViewCell(0LL);
}

uint64_t type metadata accessor for LargeLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result = qword_1002E9AE0;
  if (!qword_1002E9AE0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LargeLockupCollectionViewCell);
  }
  return result;
}

void sub_100103E28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a1)
  {
    uint64_t v10 = a5 + 16;
    swift_beginAccess(a5 + 16, v21, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(v10);
    if (Strong)
    {
      uint64_t v12 = Strong;
      swift_beginAccess(Strong + 16, v20, 33LL, 0LL);
      id v13 = a1;
      __n128 v14 = swift_retain(a6);
      sub_100103F98((uint64_t)v13, a6, v14);
      swift_endAccess(v20);
      swift_release(v12);
      swift_release(a6);
    }

    else
    {
      id v15 = a1;
    }

    swift_beginAccess(v10, v20, 0LL, 0LL);
    uint64_t v16 = swift_weakLoadStrong(v10);
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = swift_unknownObjectWeakLoadStrong(v16 + 24);
      if (v18)
      {
        uint64_t v19 = v18;
        sub_1000BE67C(a7);
        swift_release(v17);
        swift_unknownObjectRelease(v19);
      }

      else
      {
        swift_release(v17);
      }
    }
  }

double sub_100103F4C()
{
  *(void *)&double result = swift_deallocClassInstance(v0, 40LL, 7LL).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ScreenshotFetcher()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore17ScreenshotFetcher);
}

void sub_100103F98(uint64_t a1, uint64_t a2, __n128 a3)
{
  double v4 = v3;
  uint64_t v7 = *v3;
  if ((*v3 & 0xC000000000000001LL) == 0) {
    goto LABEL_7;
  }
  if (v7 < 0) {
    uint64_t v8 = *v3;
  }
  else {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFF8LL;
  }
  uint64_t v9 = __CocoaDictionary.count.getter(v8);
  if (!__OFADD__(v9, 1LL))
  {
    uint64_t v7 = sub_100104038(v8, v9 + 1);
    *double v4 = v7;
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7, a3);
    uint64_t v12 = *v4;
    *double v4 = 0x8000000000000000LL;
    sub_1000B7090(a1, a2, isUniquelyReferenced_nonNull_native);
    uint64_t v11 = *v4;
    *double v4 = v12;
    swift_bridgeObjectRelease(v11);
    return;
  }

  __break(1u);
}

uint64_t sub_100104038(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1000038E8(&qword_1002E6F98);
    uint64_t v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    uint64_t v32 = v4;
    uint64_t v5 = __CocoaDictionary.makeIterator()(a1);
    uint64_t v6 = __CocoaDictionary.Iterator.next()();
    if (v6)
    {
      uint64_t v8 = v6;
      uint64_t v9 = v7;
      uint64_t v10 = type metadata accessor for Artwork(0LL);
      do
      {
        uint64_t v30 = v8;
        swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v10, 7LL);
        uint64_t v29 = v9;
        unint64_t v23 = sub_100104278();
        swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v23, 7LL);
        uint64_t v4 = v32;
        unint64_t v24 = *(void *)(v32 + 16);
        if (*(void *)(v32 + 24) <= v24)
        {
          sub_1000B6840(v24 + 1, 1LL);
          uint64_t v4 = v32;
        }

        uint64_t v12 = v30;
        uint64_t v11 = v31;
        uint64_t v29 = v31;
        uint64_t v13 = *(void *)(v4 + 40);
        unint64_t v14 = sub_1001042B4();
        uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)(v13, v10, v14);
        uint64_t v16 = v4 + 64;
        uint64_t v17 = -1LL << *(_BYTE *)(v4 + 32);
        unint64_t v18 = result & ~v17;
        unint64_t v19 = v18 >> 6;
        if (((-1LL << v18) & ~*(void *)(v4 + 64 + 8 * (v18 >> 6))) != 0)
        {
          unint64_t v20 = __clz(__rbit64((-1LL << v18) & ~*(void *)(v4 + 64 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0LL;
        }

        else
        {
          char v25 = 0;
          unint64_t v26 = (unint64_t)(63 - v17) >> 6;
          do
          {
            if (++v19 == v26 && (v25 & 1) != 0)
            {
              __break(1u);
              return result;
            }

            BOOL v27 = v19 == v26;
            if (v19 == v26) {
              unint64_t v19 = 0LL;
            }
            v25 |= v27;
            uint64_t v28 = *(void *)(v16 + 8 * v19);
          }

          while (v28 == -1);
          unint64_t v20 = __clz(__rbit64(~v28)) + (v19 << 6);
        }

        *(void *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v20;
        uint64_t v21 = 8 * v20;
        *(void *)(*(void *)(v4 + 48) + v21) = v11;
        *(void *)(*(void *)(v4 + 56) + v21) = v12;
        ++*(void *)(v4 + 16);
        uint64_t v8 = __CocoaDictionary.Iterator.next()();
        uint64_t v9 = v22;
      }

      while (v8);
    }

    swift_release(v5);
  }

  else
  {
    swift_unknownObjectRelease(a1);
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }

  return v4;
}

unint64_t sub_100104278()
{
  unint64_t result = qword_1002E7658;
  if (!qword_1002E7658)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIImage);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002E7658);
  }

  return result;
}

unint64_t sub_1001042B4()
{
  unint64_t result = qword_1002E6FA0;
  if (!qword_1002E6FA0)
  {
    uint64_t v1 = type metadata accessor for Artwork(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Artwork, v1);
    atomic_store(result, (unint64_t *)&qword_1002E6FA0);
  }

  return result;
}

uint64_t TVReviewsContainerLayout.init(metrics:ratingsView:histogramView:rateButtonView:)@<X0>( uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a5 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 136) = v8;
  *(void *)(a5 + 152) = *(void *)(a1 + 32);
  sub_1000243BC(a2, a5);
  sub_100058800(a3, a5 + 40);
  return sub_100058800(a4, a5 + 80);
}

uint64_t TVReviewsContainerLayout.histogramView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100104368(v1 + 40, a1);
}

uint64_t sub_100104368(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000038E8(&qword_1002E6680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t TVReviewsContainerLayout.rateButtonView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100104368(v1 + 80, a1);
}

uint64_t TVReviewsContainerLayout.Metrics.init(columnSpacer:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000243BC(a1, a2);
}

__n128 TVReviewsContainerLayout.Metrics.init(byCopying:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  __int128 v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  return result;
}

uint64_t TVReviewsContainerLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001043E4(v1 + 120, a1);
}

uint64_t sub_1001043E4(uint64_t a1, uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + sub_1000142AC(v0 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

double TVReviewsContainerLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  return sub_100104A8C(a1, v3, a2, a3);
}

uint64_t TVReviewsContainerLayout.placeChildren(relativeTo:in:)( uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for FloatingPointRoundingRule(0LL);
  double v13 = *(double *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v72.origin.double x = a2;
  v72.origin.double y = a3;
  v72.size.double width = a4;
  v72.size.double height = a5;
  double MinY = CGRectGetMinY(v72);
  v73.origin.double x = a2;
  v73.origin.double y = a3;
  v73.size.double width = a4;
  v73.size.double height = a5;
  double MinX = CGRectGetMinX(v73);
  sub_1001043E4((uint64_t)(v5 + 15), (uint64_t)v69);
  uint64_t v17 = v70;
  uint64_t v18 = v71;
  sub_1000112B0(v69, v70);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v17, v18);
  double v66 = AnyDimension.value(in:rounded:)(a1, v15, v17, v18);
  unint64_t v19 = *(void (**)(char *, uint64_t))(*(void *)&v13 + 8LL);
  v19(v15, v12);
  _s8AppStore17PillOverlayLayoutVwxx_0(v69);
  sub_100104368((uint64_t)(v6 + 10), (uint64_t)v69);
  uint64_t v20 = v70;
  if (v70)
  {
    double v67 = v13;
    uint64_t v21 = v71;
    sub_1000112B0(v69, v70);
    char v22 = dispatch thunk of LayoutView.isHidden.getter(v20, v21);
    _s8AppStore17PillOverlayLayoutVwxx_0(v69);
    if ((v22 & 1) != 0)
    {
      double v13 = v67;
    }

    else
    {
      sub_100104368((uint64_t)(v6 + 10), (uint64_t)v69);
      uint64_t v23 = v70;
      if (v70)
      {
        uint64_t v24 = v71;
        sub_1000112B0(v69, v70);
        double v25 = Measurable.measuredSize(fitting:in:)(a1, v23, *(void *)(v24 + 8), a4, a5);
        CGFloat v65 = v26;
        _s8AppStore17PillOverlayLayoutVwxx_0(v69);
      }

      else
      {
        sub_100087DF4((uint64_t)v69);
        CGFloat v65 = 0.0;
        double v25 = 0.0;
      }

      (*(void (**)(char *, void, uint64_t))(*(void *)&v67 + 104LL))( v15,  enum case for FloatingPointRoundingRule.down(_:),  v12);
      CGFloat v27 = CGPoint.rounded(_:)(v15, MinX, MinY);
      CGFloat v29 = v28;
      v19(v15, v12);
      sub_100104368((uint64_t)(v6 + 10), (uint64_t)v69);
      uint64_t v30 = v70;
      if (v70)
      {
        uint64_t v31 = v71;
        sub_1000112B0(v69, v70);
        double v32 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
        dispatch thunk of LayoutView.frame.setter(v30, v31, v32);
        _s8AppStore17PillOverlayLayoutVwxx_0(v69);
      }

      else
      {
        sub_100087DF4((uint64_t)v69);
      }

      double v13 = v67;
      if (v25 > COERCE_DOUBLE(1LL))
      {
        v74.origin.double x = v27;
        v74.origin.double y = v29;
        v74.size.double width = v25;
        v74.size.double height = v65;
        double MinX = v66 + CGRectGetMaxX(v74);
      }
    }
  }

  else
  {
    sub_100087DF4((uint64_t)v69);
  }

  uint64_t v33 = v6[3];
  uint64_t v34 = v6[4];
  sub_1000112B0(v6, v33);
  char v35 = dispatch thunk of LayoutView.isHidden.getter(v33, v34);
  double v67 = MinX;
  if ((v35 & 1) == 0)
  {
    v75.origin.double x = a2;
    v75.origin.double y = a3;
    v75.size.double width = a4;
    v75.size.double height = a5;
    double v36 = CGRectGetWidth(v75) - MinX;
    v76.origin.double x = a2;
    v76.origin.double y = a3;
    v76.size.double width = a4;
    v76.size.double height = a5;
    double v37 = MinX;
    double Height = CGRectGetHeight(v76);
    uint64_t v39 = v6[3];
    uint64_t v40 = v6[4];
    sub_1000112B0(v6, v39);
    double v41 = Measurable.measuredSize(fitting:in:)(a1, v39, *(void *)(v40 + 8), v36, Height);
    CGFloat v43 = v42;
    (*(void (**)(char *, void, uint64_t))(*(void *)&v13 + 104LL))( v15,  enum case for FloatingPointRoundingRule.down(_:),  v12);
    CGFloat v44 = CGPoint.rounded(_:)(v15, v37, MinY);
    CGFloat v46 = v45;
    v19(v15, v12);
    uint64_t v47 = v6[3];
    uint64_t v48 = v6[4];
    sub_1000112B0(v6, v47);
    double v49 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v47, v48, v49);
    if (v41 > COERCE_DOUBLE(1LL))
    {
      v77.origin.double x = v44;
      v77.origin.double y = v46;
      v77.size.double width = v41;
      v77.size.double height = v43;
      double v67 = v66 + CGRectGetMaxX(v77);
    }
  }

  uint64_t v50 = (uint64_t)(v6 + 5);
  sub_100104368(v50, (uint64_t)v69);
  uint64_t v51 = v70;
  if (!v70) {
    goto LABEL_23;
  }
  uint64_t v52 = v71;
  sub_1000112B0(v69, v70);
  char v53 = dispatch thunk of LayoutView.isHidden.getter(v51, v52);
  uint64_t v54 = _s8AppStore17PillOverlayLayoutVwxx_0(v69);
  if ((v53 & 1) == 0)
  {
    v78.origin.double x = a2;
    v78.origin.double y = a3;
    v78.size.double width = a4;
    v78.size.double height = a5;
    double Width = CGRectGetWidth(v78);
    v79.origin.double x = a2;
    v79.origin.double y = a3;
    v79.size.double width = a4;
    v79.size.double height = a5;
    double v56 = CGRectGetHeight(v79);
    sub_100104368(v50, (uint64_t)v69);
    uint64_t v57 = v70;
    if (v70)
    {
      double v58 = v67;
      uint64_t v59 = v71;
      sub_1000112B0(v69, v70);
      Measurable.measuredSize(fitting:in:)(a1, v57, *(void *)(v59 + 8), Width - v58, v56);
      _s8AppStore17PillOverlayLayoutVwxx_0(v69);
    }

    else
    {
      sub_100087DF4((uint64_t)v69);
      double v58 = v67;
    }

    (*(void (**)(char *, void, uint64_t))(*(void *)&v13 + 104LL))( v15,  enum case for FloatingPointRoundingRule.down(_:),  v12);
    CGPoint.rounded(_:)(v15, v58, MinY);
    v19(v15, v12);
    sub_100104368(v50, (uint64_t)v69);
    uint64_t v60 = v70;
    if (v70)
    {
      uint64_t v61 = v71;
      sub_1000112B0(v69, v70);
      double v62 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
      dispatch thunk of LayoutView.frame.setter(v60, v61, v62);
      uint64_t v54 = _s8AppStore17PillOverlayLayoutVwxx_0(v69);
      return LayoutRect.init(representing:)(v54);
    }

double sub_100104A8C(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001043E4((uint64_t)(a2 + 15), (uint64_t)v29);
  uint64_t v12 = v30;
  uint64_t v13 = v31;
  sub_1000112B0(v29, v30);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12, v13);
  double v14 = AnyDimension.value(in:rounded:)(a1, v11, v12, v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  _s8AppStore17PillOverlayLayoutVwxx_0(v29);
  sub_100104368((uint64_t)(a2 + 10), (uint64_t)v29);
  uint64_t v15 = v30;
  if (v30)
  {
    uint64_t v16 = v31;
    sub_1000112B0(v29, v30);
    double v17 = Measurable.measuredSize(fitting:in:)(a1, v15, *(void *)(v16 + 8), a3, a4);
    _s8AppStore17PillOverlayLayoutVwxx_0(v29);
  }

  else
  {
    sub_100087DF4((uint64_t)v29);
    double v17 = 0.0;
  }

  double v18 = v14 + v17;
  if (v17 <= COERCE_DOUBLE(1LL)) {
    double v18 = 0.0;
  }
  double v19 = a3 - v18;
  uint64_t v20 = a2[3];
  uint64_t v21 = a2[4];
  sub_1000112B0(a2, v20);
  double v22 = Measurable.measuredSize(fitting:in:)(a1, v20, *(void *)(v21 + 8), v19, a4);
  sub_100104368((uint64_t)(a2 + 5), (uint64_t)v29);
  uint64_t v23 = v30;
  if (v30)
  {
    double v24 = v14 + v22;
    if (v22 <= COERCE_DOUBLE(1LL)) {
      double v24 = 0.0;
    }
    double v25 = v19 - v24;
    uint64_t v26 = v31;
    sub_1000112B0(v29, v30);
    Measurable.measuredSize(fitting:in:)(a1, v23, *(void *)(v26 + 8), v25, a4);
    _s8AppStore17PillOverlayLayoutVwxx_0(v29);
  }

  else
  {
    sub_100087DF4((uint64_t)v29);
  }

  return a3;
}

uint64_t destroy for TVReviewsContainerLayout(void *a1)
{
  if (a1[8]) {
    _s8AppStore17PillOverlayLayoutVwxx_0(a1 + 5);
  }
  if (a1[13]) {
    _s8AppStore17PillOverlayLayoutVwxx_0(a1 + 10);
  }
  return _s8AppStore17PillOverlayLayoutVwxx_0(a1 + 15);
}

uint64_t initializeWithCopy for TVReviewsContainerLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + sub_1000142AC(v0 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = (_OWORD *)(a1 + 40);
  uint64_t v6 = (_OWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 64);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }

  else
  {
    __int128 v9 = *(_OWORD *)(a2 + 56);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }

  uint64_t v10 = (_OWORD *)(a1 + 80);
  uint64_t v11 = (_OWORD *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 104);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v12;
    *(void *)(a1 + 112) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }

  else
  {
    __int128 v14 = *(_OWORD *)(a2 + 96);
    *uint64_t v10 = *v11;
    *(_OWORD *)(a1 + 96) = v14;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }

  __int128 v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 120, a2 + 120);
  return a1;
}

uint64_t assignWithCopy for TVReviewsContainerLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v4)
    {
      sub_1000246CC((void *)(a1 + 40), (void *)(a2 + 40));
      goto LABEL_8;
    }

    _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  }

  else if (v4)
  {
    *(void *)(a1 + 64) = v4;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }

  __int128 v5 = *(_OWORD *)(a2 + 40);
  __int128 v6 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = v5;
  *(_OWORD *)(a1 + 56) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 104);
  if (!*(void *)(a1 + 104))
  {
    if (v7)
    {
      *(void *)(a1 + 104) = v7;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 80, a2 + 80);
      goto LABEL_15;
    }

__n128 initializeWithTake for TVReviewsContainerLayout(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  __int128 v7 = *(_OWORD *)(a2 + 112);
  __int128 v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for TVReviewsContainerLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 40));
  }
  __int128 v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (*(void *)(a1 + 104)) {
    _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 80));
  }
  __int128 v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVReviewsContainerLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 160)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVReviewsContainerLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0LL;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0u;
    *(_OWORD *)(result + sub_1000142AC(v0 + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + sub_1000142AC(v0 + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVReviewsContainerLayout()
{
  return &type metadata for TVReviewsContainerLayout;
}

uint64_t initializeWithCopy for TVReviewsContainerLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + sub_1000142AC(v0 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

void *assignWithCopy for TVReviewsContainerLayout.Metrics(void *a1, void *a2)
{
  return a1;
}

__n128 initializeWithTake for TVReviewsContainerLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TVReviewsContainerLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVReviewsContainerLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVReviewsContainerLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + sub_1000142AC(v0 + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + sub_1000142AC(v0 + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TVReviewsContainerLayout.Metrics()
{
  return &type metadata for TVReviewsContainerLayout.Metrics;
}

uint64_t SmallGameCenterPlayerLayout.placeChildren(relativeTo:in:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  __int128 v7 = v6;
  uint64_t v98 = a1;
  uint64_t v109 = a2;
  uint64_t v108 = type metadata accessor for LayoutRect(0LL);
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v106 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v101 = type metadata accessor for FlankedHorizontalLayout.ViewAlignment(0LL);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  char v103 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v99 = (char *)&v73 - v17;
  uint64_t v105 = type metadata accessor for FlankedHorizontalLayout(0LL, v16);
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  id v102 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v110 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v19 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0LL);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v90 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v74 = v23;
  uint64_t v76 = v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v95 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v97 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v94 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v96 = v6 + 21;
  uint64_t v28 = v6[24];
  uint64_t v29 = v6[25];
  sub_1000112B0(v6 + 21, v28);
  v121.origin.double x = a3;
  v121.origin.double y = a4;
  v121.size.double width = a5;
  v121.size.double height = a6;
  CGRectGetMinX(v121);
  v122.origin.double x = a3;
  v122.origin.double y = a4;
  v122.size.double width = a5;
  v122.size.double height = a6;
  CGRectGetMinY(v122);
  double v30 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v28, v29, v30);
  uint64_t v31 = sub_1000038E8((uint64_t *)&unk_1002E98C0);
  uint64_t v32 = *(void *)(type metadata accessor for _VerticalFlowLayout.Child(0LL) - 8);
  uint64_t v89 = *(void *)(v32 + 72);
  uint64_t v33 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v34 = (v33 + 32) & ~v33;
  uint64_t v35 = swift_allocObject(v31, v34 + 2 * v89, v33 | 7);
  uint64_t v93 = v35;
  *(_OWORD *)(v35 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236DD0;
  uint64_t v80 = v35 + v34;
  uint64_t v36 = v7[34];
  uint64_t v37 = v7[35];
  uint64_t v38 = sub_1000112B0(v7 + 31, v36);
  uint64_t v119 = v36;
  uint64_t v120 = *(void *)(v37 + 8);
  uint64_t v39 = sub_10000DD7C(&v118);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16LL))(v39, v38, v36);
  unsigned int v87 = enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:);
  uint64_t v88 = *(void (**)(char *))(v24 + 104);
  v88(v26);
  unsigned int v86 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:);
  uint64_t v40 = v91;
  uint64_t v85 = *(void (**)(char *))(v91 + 104);
  double v41 = v90;
  uint64_t v42 = v92;
  v85(v90);
  CGRect v75 = (void (*)(char *, uint64_t))(v7 + 6);
  uint64_t v116 = &type metadata for Double;
  uint64_t v117 = &protocol witness table for Double;
  uint64_t v115 = 0LL;
  uint64_t v84 = sub_1000038E8(&qword_1002E1210);
  uint64_t v73 = v19;
  uint64_t v43 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v83 = ((v43 + 32) & ~v43) + *(void *)(v19 + 72);
  uint64_t v82 = v43 | 7;
  uint64_t v44 = swift_allocObject(v84, v83, v43 | 7);
  __int128 v81 = xmmword_100237B10;
  *(_OWORD *)(v44 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v44);
  v114[0] = v44;
  uint64_t v45 = sub_100004288( (unint64_t *)&qword_1002E1218,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  uint64_t v78 = v45;
  uint64_t v46 = sub_1000038E8(&qword_1002E1220);
  uint64_t v77 = v46;
  unint64_t v79 = sub_100003928();
  uint64_t v47 = v110;
  dispatch thunk of SetAlgebra.init<A>(_:)(v114, v46, v79, v110, v45);
  uint64_t v48 = v80;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v118,  v26,  v41,  v75,  &v115,  v21);
  CGRect v75 = *(void (**)(char *, uint64_t))(v73 + 8);
  double v49 = v21;
  v75(v21, v47);
  uint64_t v91 = *(void *)(v40 + 8);
  uint64_t v50 = v42;
  ((void (*)(char *, uint64_t))v91)(v41, v42);
  uint64_t v76 = *(void *)(v76 + 8);
  uint64_t v51 = v74;
  ((void (*)(char *, uint64_t))v76)(v26, v74);
  sub_10002C714((uint64_t)&v115);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v118);
  v89 += v48;
  uint64_t v52 = v7[29];
  uint64_t v53 = v7[30];
  uint64_t v54 = sub_1000112B0(v7 + 26, v52);
  uint64_t v119 = v52;
  uint64_t v120 = *(void *)(v53 + 8);
  uint64_t v55 = sub_10000DD7C(&v118);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 16LL))(v55, v54, v52);
  ((void (*)(char *, void, uint64_t))v88)(v26, v87, v51);
  uint64_t v56 = v50;
  ((void (*)(char *, void, uint64_t))v85)(v41, v86, v50);
  uint64_t v117 = &protocol witness table for Double;
  uint64_t v116 = &type metadata for Double;
  uint64_t v115 = 0LL;
  uint64_t v57 = swift_allocObject(v84, v83, v82);
  *(_OWORD *)(v57 + swift_unknownObjectWeakDestroy(v0 + 16) = v81;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v57);
  v114[0] = v57;
  uint64_t v58 = v110;
  dispatch thunk of SetAlgebra.init<A>(_:)(v114, v77, v79, v110, v78);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v118,  v26,  v41,  v7 + 11,  &v115,  v49);
  v75(v49, v58);
  ((void (*)(char *, uint64_t))v91)(v41, v56);
  ((void (*)(char *, uint64_t))v76)(v26, v51);
  sub_10002C714((uint64_t)&v115);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v118);
  uint64_t v59 = v94;
  _VerticalFlowLayout.init(expandChildrenToFit:children:)(0LL, v93);
  uint64_t v60 = v95;
  uint64_t v119 = v95;
  uint64_t v120 = sub_100004288( &qword_1002E98E0,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout);
  uint64_t v61 = sub_10000DD7C(&v118);
  uint64_t v62 = v97;
  (*(void (**)(void *, char *, uint64_t))(v97 + 16))(v61, v59, v60);
  sub_100011C30((uint64_t)v96, (uint64_t)&v115);
  uint64_t v63 = v7[5];
  v114[3] = &type metadata for CGFloat;
  v114[4] = &protocol witness table for CGFloat;
  v114[0] = v63;
  uint64_t v64 = enum case for FlankedHorizontalLayout.ViewAlignment.center(_:);
  CGFloat v65 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 104);
  double v66 = v99;
  uint64_t v67 = v101;
  v65(v99, enum case for FlankedHorizontalLayout.ViewAlignment.center(_:), v101);
  uint64_t v113 = 0LL;
  memset(v112, 0, sizeof(v112));
  v111[3] = type metadata accessor for ZeroDimension(0LL);
  v111[4] = &protocol witness table for ZeroDimension;
  sub_10000DD7C(v111);
  static ZeroDimension.zero.getter();
  uint64_t v68 = v103;
  v65(v103, v64, v67);
  id v69 = v102;
  FlankedHorizontalLayout.init(sublayout:leadingView:leadingMargin:leadingAlignment:trailingView:trailingMargin:trailingAlignment:)( &v118,  &v115,  v114,  v66,  v112,  v111,  v68);
  uint64_t v70 = v106;
  FlankedHorizontalLayout.placeChildren(relativeTo:in:)(v98, a3, a4, a5, a6);
  uint64_t v71 = (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v70, v108);
  LayoutRect.init(representing:)(v71);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v69, v105);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v59, v60);
}

double ProductLockupBannerViewLayout.Metrics.artworkSize.getter()
{
  return *(double *)v0;
}

void SmallGameCenterPlayerLayout.Metrics.avatarSize.setter(double a1, double a2)
{
  double *v2 = a1;
  v2[1] = a2;
}

double SmallGameCenterPlayerLayout.Metrics.avatarInsets.getter()
{
  return *(double *)(v0 + 16);
}

void SmallGameCenterPlayerLayout.Metrics.avatarInsets.setter(double a1, double a2, double a3, double a4)
{
  void v4[2] = a1;
  void v4[3] = a2;
  void v4[4] = a3;
  void v4[5] = a4;
}

uint64_t (*SmallGameCenterPlayerLayout.Metrics.avatarInsets.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t SmallGameCenterPlayerLayout.Metrics.aliasTopSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100011C30(v1 + 48, a1);
}

uint64_t SmallGameCenterPlayerLayout.Metrics.aliasTopSpace.setter(__int128 *a1)
{
  __int128 v3 = (void *)(v1 + 48);
  _s8AppStore17PillOverlayLayoutVwxx_0(v3);
  return sub_1000243BC(a1, (uint64_t)v3);
}

uint64_t (*SmallGameCenterPlayerLayout.Metrics.aliasTopSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t SmallGameCenterPlayerLayout.Metrics.displayNameTopSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100011C30(v1 + 88, a1);
}

uint64_t SmallGameCenterPlayerLayout.Metrics.displayNameTopSpace.setter(__int128 *a1)
{
  __int128 v3 = (void *)(v1 + 88);
  _s8AppStore17PillOverlayLayoutVwxx_0(v3);
  return sub_1000243BC(a1, (uint64_t)v3);
}

uint64_t (*SmallGameCenterPlayerLayout.Metrics.displayNameTopSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

uint64_t ProductLockupBannerViewLayout.messageLabel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100011C30(v1 + 128, a1);
}

uint64_t SmallGameCenterPlayerLayout.Metrics.displayNameBottomSpace.setter(__int128 *a1)
{
  __int128 v3 = (void *)(v1 + 128);
  _s8AppStore17PillOverlayLayoutVwxx_0(v3);
  return sub_1000243BC(a1, (uint64_t)v3);
}

uint64_t (*SmallGameCenterPlayerLayout.Metrics.displayNameBottomSpace.modify())()
{
  return MotionEffects.rawValue.getter;
}

_OWORD *SmallGameCenterPlayerLayout.metrics.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1000E97E4(v1, a1);
}

uint64_t ProductLockupBannerViewLayout.artworkView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100011C30(v1 + 168, a1);
}

uint64_t SmallGameCenterPlayerLayout.displayName.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100011C30(v1 + 208, a1);
}

uint64_t SmallGameCenterPlayerLayout.alias.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100011C30(v1 + 248, a1);
}

double SmallGameCenterPlayerLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  return sub_100105D1C(a1, v3, a2, a3);
}

double sub_100105D1C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v79 = a1;
  uint64_t v7 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v80 = *(void *)(v7 - 8);
  uint64_t v81 = v7;
  __chkstk_darwin(v7);
  uint64_t v78 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v82 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v9 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v73 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v64 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0LL);
  uint64_t v56 = *(void *)(v64 - 8);
  uint64_t v11 = v56;
  __chkstk_darwin(v64);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v55 = v14;
  uint64_t v58 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = type metadata accessor for _VerticalFlowLayout(0LL);
  uint64_t v77 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  CGRect v75 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v19 = a3 - (*(double *)(a2 + 24) + *(double *)(a2 + 40) + *(double *)a2);
  uint64_t v20 = sub_1000038E8((uint64_t *)&unk_1002E98C0);
  uint64_t v21 = *(void *)(type metadata accessor for _VerticalFlowLayout.Child(0LL) - 8);
  uint64_t v72 = *(void *)(v21 + 72);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (v22 + 32) & ~v22;
  uint64_t v24 = swift_allocObject(v20, v23 + 2 * v72, v22 | 7);
  uint64_t v74 = v24;
  *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236DD0;
  uint64_t v62 = v24 + v23;
  uint64_t v25 = *(void *)(a2 + 272);
  uint64_t v26 = *(void *)(a2 + 280);
  uint64_t v27 = sub_1000112B0((void *)(a2 + 248), v25);
  uint64_t v88 = v25;
  uint64_t v89 = *(void *)(v26 + 8);
  uint64_t v28 = sub_10000DD7C(&v87);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16LL))(v28, v27, v25);
  unsigned int v70 = enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:);
  uint64_t v71 = *(void (**)(char *))(v15 + 104);
  v71(v17);
  unsigned int v69 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:);
  uint64_t v68 = *(void (**)(char *))(v11 + 104);
  uint64_t v29 = v64;
  v68(v13);
  uint64_t v57 = (void (*)(char *, uint64_t))(a2 + 48);
  uint64_t v85 = &type metadata for Double;
  unsigned int v86 = &protocol witness table for Double;
  v84[0] = 0LL;
  uint64_t v67 = sub_1000038E8(&qword_1002E1210);
  uint64_t v54 = v9;
  uint64_t v30 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v66 = ((v30 + 32) & ~v30) + *(void *)(v9 + 72);
  uint64_t v65 = v30 | 7;
  uint64_t v31 = swift_allocObject(v67, v66, v30 | 7);
  __int128 v63 = xmmword_100237B10;
  *(_OWORD *)(v31 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v31);
  uint64_t v83 = v31;
  uint64_t v32 = sub_100004288( (unint64_t *)&qword_1002E1218,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  uint64_t v60 = v32;
  uint64_t v33 = sub_1000038E8(&qword_1002E1220);
  uint64_t v59 = v33;
  unint64_t v61 = sub_100003928();
  uint64_t v34 = v73;
  uint64_t v35 = v82;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v83, v33, v61, v82, v32);
  uint64_t v36 = v62;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v87,  v17,  v13,  v57,  v84,  v34);
  uint64_t v57 = *(void (**)(char *, uint64_t))(v54 + 8);
  v57(v34, v35);
  uint64_t v56 = *(void *)(v56 + 8);
  uint64_t v37 = v29;
  ((void (*)(char *, uint64_t))v56)(v13, v29);
  uint64_t v58 = *(void *)(v58 + 8);
  uint64_t v38 = v55;
  ((void (*)(char *, uint64_t))v58)(v17, v55);
  sub_10002C714((uint64_t)v84);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v87);
  v72 += v36;
  uint64_t v40 = *(void *)(a2 + 232);
  uint64_t v39 = *(void *)(a2 + 240);
  double v41 = sub_1000112B0((void *)(a2 + 208), v40);
  uint64_t v88 = v40;
  uint64_t v89 = *(void *)(v39 + 8);
  uint64_t v42 = sub_10000DD7C(&v87);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16LL))(v42, v41, v40);
  ((void (*)(char *, void, uint64_t))v71)(v17, v70, v38);
  ((void (*)(char *, void, uint64_t))v68)(v13, v69, v37);
  unsigned int v86 = &protocol witness table for Double;
  uint64_t v85 = &type metadata for Double;
  v84[0] = 0LL;
  uint64_t v43 = swift_allocObject(v67, v66, v65);
  *(_OWORD *)(v43 + swift_unknownObjectWeakDestroy(v0 + 16) = v63;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v43);
  uint64_t v83 = v43;
  uint64_t v44 = v82;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v83, v59, v61, v82, v60);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)( &v87,  v17,  v13,  a2 + 88,  v84,  v34);
  v57(v34, v44);
  ((void (*)(char *, uint64_t))v56)(v13, v37);
  ((void (*)(char *, uint64_t))v58)(v17, v38);
  sub_10002C714((uint64_t)v84);
  _s8AppStore17PillOverlayLayoutVwxx_0(&v87);
  uint64_t v45 = v75;
  _VerticalFlowLayout.init(expandChildrenToFit:children:)(0LL, v74);
  uint64_t v46 = sub_100004288( &qword_1002E3988,  (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout,  (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout);
  uint64_t v47 = v79;
  uint64_t v48 = v76;
  dispatch thunk of Measurable.measurements(fitting:in:)(v79, v76, v46, v19, a4);
  uint64_t v49 = *(void *)(a2 + 152);
  uint64_t v50 = *(void *)(a2 + 160);
  sub_1000112B0((void *)(a2 + 128), v49);
  uint64_t v51 = v78;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v49, v50);
  AnyDimension.value(in:rounded:)(v47, v51, v49, v50);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v51, v81);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v45, v48);
  return a3;
}

uint64_t destroy for SmallGameCenterPlayerLayout(void *a1)
{
  return _s8AppStore17PillOverlayLayoutVwxx_0(a1 + 31);
}

_OWORD *initializeWithCopy for SmallGameCenterPlayerLayout(_OWORD *a1, _OWORD *a2)
{
  __int128 v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  __int128 v5 = *(_OWORD *)((char *)a2 + 72);
  *(_OWORD *)((char *)a1 + 72) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)(a1 + 3), (uint64_t)(a2 + 3));
  __int128 v6 = a2[7];
  a1[7] = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)a1 + 88, (uint64_t)a2 + 88);
  __int128 v7 = *(_OWORD *)((char *)a2 + 152);
  *(_OWORD *)((char *)a1 + 152) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 8), (uint64_t)(a2 + 8));
  __int128 v8 = a2[12];
  a1[12] = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)a1 + 168, (uint64_t)a2 + 168);
  __int128 v9 = *(_OWORD *)((char *)a2 + 232);
  *(_OWORD *)((char *)a1 + 232) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)(a1 + 13), (uint64_t)(a2 + 13));
  __int128 v10 = a2[17];
  a1[17] = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))((uint64_t)a1 + 248, (uint64_t)a2 + 248);
  return a1;
}

void *assignWithCopy for SmallGameCenterPlayerLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1000246CC(a1 + 6, a2 + 6);
  sub_1000246CC(a1 + 11, a2 + 11);
  sub_1000246CC(a1 + 16, a2 + 16);
  sub_1000246CC(a1 + 21, a2 + 21);
  sub_1000246CC(a1 + 26, a2 + 26);
  sub_1000246CC(a1 + 31, a2 + 31);
  return a1;
}

void *initializeWithTake for TVArcadeWelcomeLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for SmallGameCenterPlayerLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 48));
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(void *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(void *)(a2 + 80);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(void *)(a2 + 120);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 128));
  __int128 v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(void *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(void *)(a2 + 160);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 168));
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(void *)(a2 + 200);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 208));
  __int128 v7 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 2sub_1000142AC(v0 + 24) = v7;
  *(void *)(a1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(void *)(a2 + 240);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 248));
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(void *)(a2 + 280);
  return a1;
}

uint64_t getEnumTagSinglePayload for SmallGameCenterPlayerLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 288)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SmallGameCenterPlayerLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0LL;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0u;
    *(_OWORD *)(result + sub_1000142AC(v0 + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 288) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SmallGameCenterPlayerLayout()
{
  return &type metadata for SmallGameCenterPlayerLayout;
}

uint64_t destroy for SmallGameCenterPlayerLayout.Metrics(void *a1)
{
  return _s8AppStore17PillOverlayLayoutVwxx_0(a1 + 16);
}

_OWORD *initializeWithCopy for SmallGameCenterPlayerLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  __int128 v5 = *(_OWORD *)((char *)a2 + 72);
  *(_OWORD *)((char *)a1 + 72) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)(a1 + 3), (uint64_t)(a2 + 3));
  __int128 v6 = a2[7];
  a1[7] = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)a1 + 88, (uint64_t)a2 + 88);
  __int128 v7 = *(_OWORD *)((char *)a2 + 152);
  *(_OWORD *)((char *)a1 + 152) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 8), (uint64_t)(a2 + 8));
  return a1;
}

void *assignWithCopy for SmallGameCenterPlayerLayout.Metrics(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1000246CC(a1 + 6, a2 + 6);
  sub_1000246CC(a1 + 11, a2 + 11);
  sub_1000246CC(a1 + 16, a2 + 16);
  return a1;
}

__n128 initializeWithTake for SmallGameCenterPlayerLayout.Metrics(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[2];
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __int128 v4 = a2[3];
  __int128 v5 = a2[4];
  __int128 v6 = a2[6];
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  __int128 v8 = a2[8];
  __int128 v9 = a2[9];
  *(void *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for SmallGameCenterPlayerLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 48));
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(void *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(void *)(a2 + 80);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(void *)(a2 + 120);
  _s8AppStore17PillOverlayLayoutVwxx_0((void *)(a1 + 128));
  __int128 v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(void *)(a1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = *(void *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for SmallGameCenterPlayerLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SmallGameCenterPlayerLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = 0u;
    *(_OWORD *)(result + sub_1000142AC(v0 + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 168) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SmallGameCenterPlayerLayout.Metrics()
{
  return &type metadata for SmallGameCenterPlayerLayout.Metrics;
}

double sub_100106A94(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v41 = sub_1000038E8((uint64_t *)&unk_1002EE4C0);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  __int128 v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = type metadata accessor for Shelf.PresentationHints(0LL);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  __int128 v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for ComponentLayoutOptions(0LL);
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  __chkstk_darwin(v6);
  __int128 v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000038E8(&qword_1002EEFB0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = type metadata accessor for Paragraph(0LL);
  unint64_t v17 = sub_100106F68();
  ItemLayoutContext.typedModel<A>(as:)(v45, v16, v16, v17);
  if (v45[0])
  {
    v45[3] = v16;
    v45[4] = v17;
    uint64_t v34 = v45[0];
    swift_retain(v45[0]);
    ItemLayoutContext.mutableState.getter(v19);
    uint64_t v20 = type metadata accessor for ObjectGraph(0LL);
    uint64_t v21 = swift_dynamicCastClassUnconditional(v35, v20, 0LL, 0LL, 0LL);
    ItemLayoutContext.componentLayoutOptions.getter(v21);
    uint64_t KeyPath = swift_getKeyPath(&unk_10023F230, v22);
    ItemLayoutContext.subscript.getter(v5);
    swift_release(KeyPath);
    id v24 = sub_10014DB80();
    sub_100011C30((uint64_t)v45, (uint64_t)v43);
    uint64_t v25 = sub_1000038E8((uint64_t *)&unk_1002EE4D0);
    swift_dynamicCast(&v44, v43, v25, v16, 7LL);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    uint64_t v26 = type metadata accessor for NilState(0LL);
    WritableStateLens.init(_:)(v12, v26);
    uint64_t v27 = v42;
    sub_10017A5A8(v44, v28, (uint64_t)v3, (uint64_t)v8, (uint64_t)v5, v24);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v3, v41);
    uint64_t v29 = v44;
    swift_unknownObjectRelease(v24);
    __n128 v30 = swift_release(v29);
    (*(void (**)(void *, uint64_t, __n128))(v38 + 8))(v5, v40, v30);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    _s8AppStore17PillOverlayLayoutVwxx_0(v45);
    id v31 = [v27 contentView];
    [v31 layoutMargins];
    objc_msgSend(v31, "setLayoutMargins:");

    id v32 = [v27 contentView];
    [v32 layoutMargins];
    objc_msgSend(v32, "setLayoutMargins:");

    [v27 setNeedsLayout];
    *(void *)&double result = swift_release(v34).n128_u64[0];
  }

  return result;
}

uint64_t sub_100106DF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore27ParagraphCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_1000B33D0(v3, a1);
}

double sub_100106E48(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore27ParagraphCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_1000B3388(a1, v3);
  *(void *)&double result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_100106EA4(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

id sub_100106EEC()
{
  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v3, "prepareForReuse");
  [*(id *)&v0[OBJC_IVAR____TtC8AppStore27ParagraphCollectionViewCell_textLabel] setText:0];
  uint64_t v1 = &v0[OBJC_IVAR____TtC8AppStore27ParagraphCollectionViewCell_lineLengthLimit];
  *(void *)uint64_t v1 = 0LL;
  v1[8] = 1;
  return [v0 setNeedsLayout];
}

unint64_t sub_100106F68()
{
  unint64_t result = qword_1002E9B98;
  if (!qword_1002E9B98)
  {
    uint64_t v1 = type metadata accessor for Paragraph(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Paragraph, v1);
    atomic_store(result, (unint64_t *)&qword_1002E9B98);
  }

  return result;
}

double sub_100106FB4()
{
  double result = 560.0;
  xmmword_1002F44B0 = xmmword_10023D250;
  return result;
}

double sub_100106FC8()
{
  double result = 25.0;
  xmmword_1002E9BA0 = xmmword_10023F260;
  *(_OWORD *)&qword_1002E9BB0 = xmmword_10023F260;
  return result;
}

char *sub_100106FE0(double a1, double a2, double a3, double a4)
{
  __int128 v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v67 = type metadata accessor for CornerStyle(0LL);
  uint64_t v10 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = OBJC_IVAR____TtC8AppStore20ProductNoRatingsView_statusLabel;
  uint64_t v19 = type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v20 = qword_1002E0660;
  uint64_t v21 = v5;
  if (v20 != -1) {
    swift_once(&qword_1002E0660, sub_100072B54);
  }
  uint64_t v22 = sub_10000A634(v14, (uint64_t)qword_1002F2E78);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v22, v14);
  uint64_t v65 = (objc_class *)v19;
  *(void *)&v5[v18] = sub_100011F1C((uint64_t)v17, 0LL, 0LL, 1, 0);

  v71.receiver = v21;
  v71.super_class = ObjectType;
  uint64_t v23 = (char *)objc_msgSendSuper2(&v71, "initWithFrame:", a1, a2, a3, a4);
  id v24 = [v23 contentView];
  [v24 setClipsToBounds:1];

  uint64_t v25 = v67;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for CornerStyle.continuous(_:), v67);
  id v26 = [v23 contentView];
  CornerStyle.apply(withRadius:to:)(v26, 12.0);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  uint64_t v27 = &v23[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  __int128 v28 = *(_OWORD *)&v23[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 16];
  v77[0] = *(_OWORD *)&v23[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius];
  v77[1] = v28;
  char v78 = v23[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowRadius + 32];
  *(void *)uint64_t v27 = 0x4020000000000000LL;
  *((void *)v27 + 1) = 0x4039000000000000LL;
  v27[16] = 0;
  *((void *)v27 + 3) = 0LL;
  _BYTE v27[32] = 1;
  uint64_t v29 = v23;
  sub_100068D40((uint64_t)v77, v30, v31);

  v72[0] = xmmword_100236D50;
  v72[1] = xmmword_100236D60;
  char v73 = 0;
  uint64_t v74 = 0LL;
  uint64_t v75 = 0LL;
  char v76 = 1;
  id v32 = v29;
  sub_1000673E8(v72);

  uint64_t v33 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v34 = v32;
  id v35 = [v33 blackColor];
  id v36 = [v35 CGColor];

  uint64_t v37 = &v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  uint64_t v38 = *(void **)&v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor];
  uint64_t v39 = *(void **)&v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 8];
  uint64_t v40 = *(void **)&v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowColor + 16];
  *(void *)uint64_t v37 = v36;
  *(int64x2_t *)(v37 + 8) = vdupq_n_s64(1uLL);
  id v41 = v38;
  sub_10000B3E0(v39);
  sub_10000B3E0(v40);
  id v42 = v36;

  sub_10000B3F0(v39);
  sub_10000B3F0(v40);
  sub_100068E94(v38, v39, (unint64_t)v40);

  sub_10000B3F0(v39);
  sub_10000B3F0(v40);

  uint64_t v43 = &v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  unsigned __int32 v44 = *(_DWORD *)&v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity];
  LODWORD(v42) = *(_DWORD *)&v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 4];
  LOBYTE(v25) = v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 8];
  LOBYTE(v39) = v34[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_shadowOpacity + 16];
  *(_DWORD *)uint64_t v43 = 1048576000;
  *((_DWORD *)v43 + 1) = 1051931443;
  v43[8] = 0;
  uint64_t v45 = *((unsigned int *)v43 + 3);
  *((_DWORD *)v43 + 3) = 0;
  v43[16] = 1;
  uint64_t v46 = v34;
  char v70 = v25;
  char v69 = (char)v39;
  v47.n128_u32[0] = v44;
  sub_100068FFC((int)v42, v25 | (unint64_t)(v45 << 32), (char)v39, v47);

  char v48 = v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled];
  v46[OBJC_IVAR____TtC8AppStore22BaseCollectionViewCell_isShadowEnabled] = 1;
  if ((v48 & 1) == 0)
  {
    char v49 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v46) + 0x98LL))();
    uint64_t v50 = v46;
    sub_10006753C(v49);
  }

  uint64_t v51 = OBJC_IVAR____TtC8AppStore20ProductNoRatingsView_statusLabel;
  uint64_t v52 = *(_BYTE **)&v46[OBJC_IVAR____TtC8AppStore20ProductNoRatingsView_statusLabel];
  int v53 = v52[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_directionalTextAlignment];
  v52[OBJC_IVAR____TtC8AppStore16DynamicTypeLabel_directionalTextAlignment] = 1;
  if (v53 != 1)
  {
    uint64_t v54 = v52;
    id v55 = [v54 traitCollection];
    char v56 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v56 & 1) != 0) {
      uint64_t v57 = 2LL;
    }
    else {
      uint64_t v57 = 0LL;
    }
    v68.receiver = v54;
    v68.super_class = v65;
    objc_msgSendSuper2(&v68, "setTextAlignment:", v57);
  }

  uint64_t v58 = *(void **)&v46[v51];
  sub_10000EA38();
  id v59 = v58;
  uint64_t v60 = (void *)static UIColor.opacityB.getter();
  [v59 setTextColor:v60];

  id v61 = [v46 contentView];
  id v62 = *(id *)&v46[v51];
  [v61 addSubview:v62];

  return v46;
}

id sub_100107564()
{
  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v18, "layoutSubviews");
  id v1 = [v0 contentView];
  [v1 frame];

  *(void *)&double v2 = CGRect.subtracting(insets:)([v0 layoutMargins]).n128_u64[0];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  if (qword_1002E0BC0 != -1) {
    swift_once(&qword_1002E0BC0, sub_100106FC8);
  }
  double v9 = sub_10000B354(v2, v4, v6, v8, *(double *)&xmmword_1002E9BA0, *((double *)&xmmword_1002E9BA0 + 1));
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC8AppStore20ProductNoRatingsView_statusLabel];
  objc_msgSend(v16, "measurementsWithFitting:in:", v0, v12, v14);
  v19.origin.double x = v9;
  v19.origin.double y = v11;
  v19.size.double width = v13;
  v19.size.double height = v15;
  CGRectGetMinX(v19);
  v20.origin.double x = v9;
  v20.origin.double y = v11;
  v20.size.double width = v13;
  v20.size.double height = v15;
  CGRectGetMidY(v20);
  return [v16 setFrame:CGRect.withLayoutDirection(in:relativeTo:)(v0)];
}

void sub_1001078A0()
{
}

uint64_t type metadata accessor for ProductNoRatingsView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore20ProductNoRatingsView);
}

char *sub_1001078E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  double v5 = v4;
  uint64_t v10 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v10);
  double v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  CGFloat v13 = (char *)objc_msgSend(objc_allocWithZone(v5), "initWithFrame:textContainer:", 0, 0.0, 0.0, 0.0, 0.0);
  id v14 = [v13 textContainer];
  [v14 setMaximumNumberOfLines:a2];

  if ((a4 & 1) != 0)
  {
    id v16 = [v13 textContainer];
    id v15 = v16;
    if (a2) {
      uint64_t v17 = 4LL;
    }
    else {
      uint64_t v17 = 0LL;
    }
    [v16 setLineBreakMode:v17];
  }

  else
  {
    id v15 = [v13 textContainer];
    [v15 setLineBreakMode:a3];
  }

  uint64_t v19 = type metadata accessor for FontUseCase(0LL, v18);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v12, a1, v19);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v20 + 56))(v12, 0LL, 1LL, v19);
  uint64_t v21 = (uint64_t)&v13[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCase];
  swift_beginAccess(&v13[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCase], v24, 33LL, 0LL);
  sub_100013418((uint64_t)v12, v21);
  swift_endAccess(v24);
  sub_100107E5C(a1);

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, v19);
  return v13;
}

id sub_100107AB8(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  *(void *)&v6[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCaseContentSizeCategory] = 0LL;
  double v12 = &v6[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCase];
  uint64_t v13 = type metadata accessor for FontUseCase(0LL, a2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v12, 1LL, 1LL, v13);
  v21.receiver = v6;
  v21.super_class = (Class)type metadata accessor for DynamicTypeTextView(0LL);
  id v14 = objc_msgSendSuper2(&v21, "initWithFrame:textContainer:", a1, a3, a4, a5, a6);
  [v14 setTextAlignment:0];
  [v14 setScrollEnabled:0];
  [v14 setSelectable:0];
  [v14 setEditable:0];
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  objc_msgSend(v14, "setTextContainerInset:", UIEdgeInsetsZero.top, left, bottom, right);
  id v18 = [v14 textContainer];
  [v18 setLineFragmentPadding:0.0];

  [v14 setInsetsLayoutMarginsFromSafeArea:0];
  [v14 _setSafeAreaInsetsFrozen:1];
  id v19 = v14;
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  return v19;
}

void sub_100107E5C(uint64_t a1)
{
  double v2 = v1;
  id v4 = [v1 traitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  uint64_t v8 = v7;
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryUnspecified);
  if (v6 == v9 && v8 == v10)
  {

    swift_bridgeObjectRelease_n(v8, 2LL);
    goto LABEL_8;
  }

  uint64_t v12 = v10;
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0LL);

  swift_bridgeObjectRelease(v8);
  *(void *)&double v14 = swift_bridgeObjectRelease(v12).n128_u64[0];
  if ((v13 & 1) != 0)
  {
LABEL_8:
    sub_10000DFD4(0LL, (unint64_t *)&unk_1002ED2F0, &OBJC_CLASS___UITraitCollection_ptr);
    id v15 = (id)static UITraitCollection.withSystemPreferredContentSizeCategory.getter();
    goto LABEL_9;
  }

  id v15 = objc_msgSend(v2, "traitCollection", v14);
LABEL_9:
  id v16 = v15;
  id v17 = [v15 preferredContentSizeCategory];
  id v18 = *(void **)&v2[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCaseContentSizeCategory];
  *(void *)&v2[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCaseContentSizeCategory] = v17;

  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E5300, &OBJC_CLASS___UIFont_ptr);
  id v19 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(a1, v16);
  v20.receiver = v2;
  v20.super_class = (Class)type metadata accessor for DynamicTypeTextView(0LL);
  objc_msgSendSuper2(&v20, "setFont:", v19);
}

uint64_t sub_100108000(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v2 = sub_1000038E8(&qword_1002E2108);
  __chkstk_darwin(v2);
  id v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v5);
  uint64_t v33 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v14 = type metadata accessor for FontUseCase(0LL, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  objc_super v20 = (char *)&v32 - v19;
  uint64_t v21 = v1 + OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCase;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCase, v35, 0LL, 0LL);
  sub_100013460(v21, (uint64_t)v12);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v22(v12, 1LL, v14) == 1) {
    return sub_1000077E0((uint64_t)v12, &qword_1002E25C0);
  }
  uint64_t v32 = v1;
  id v24 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v24(v20, v12, v14);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v9, v20, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0LL, 1LL, v14);
  uint64_t v25 = (uint64_t)&v4[*(int *)(v2 + 48)];
  sub_100013460((uint64_t)v9, (uint64_t)v4);
  sub_100013460(v34, v25);
  if (v22(v4, 1LL, v14) == 1)
  {
    sub_1000077E0((uint64_t)v9, &qword_1002E25C0);
    if (v22((char *)v25, 1LL, v14) == 1)
    {
      sub_1000077E0((uint64_t)v4, &qword_1002E25C0);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }

    goto LABEL_8;
  }

  uint64_t v26 = v33;
  sub_100013460((uint64_t)v4, v33);
  if (v22((char *)v25, 1LL, v14) == 1)
  {
    sub_1000077E0((uint64_t)v9, &qword_1002E25C0);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, v14);
LABEL_8:
    sub_1000077E0((uint64_t)v4, &qword_1002E2108);
LABEL_12:
    sub_100107E5C((uint64_t)v20);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }

  uint64_t v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v24)(v17, v25, v14);
  unint64_t v29 = sub_1000134A8(v27, v28);
  char v30 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v17, v14, v29);
  __n128 v31 = *(void (**)(char *, uint64_t))(v15 + 8);
  v31(v17, v14);
  sub_1000077E0((uint64_t)v9, &qword_1002E25C0);
  v31((char *)v26, v14);
  sub_1000077E0((uint64_t)v4, &qword_1002E25C0);
  if ((v30 & 1) == 0) {
    goto LABEL_12;
  }
  return ((uint64_t (*)(char *, uint64_t))v31)(v20, v14);
}

uint64_t sub_1001083E8(uint64_t a1)
{
  uint64_t v3 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = type metadata accessor for FontUseCase(0LL, v6);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v11 = (objc_class *)type metadata accessor for DynamicTypeTextView(0LL);
  v26.receiver = v1;
  v26.super_class = v11;
  objc_msgSendSuper2(&v26, "traitCollectionDidChange:", a1);
  uint64_t v12 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCase];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCase], v25, 0LL, 0LL);
  sub_100013460(v12, (uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v5, v7);
  id v14 = [v1 traitCollection];
  id v15 = [v14 preferredContentSizeCategory];

  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCaseContentSizeCategory];
  if (!v16)
  {

    goto LABEL_9;
  }

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  uint64_t v19 = v18;
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  uint64_t v22 = v20;
  if (v17 != v21 || v19 != v20)
  {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v20, 0LL);

    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v22);
    if ((v23 & 1) != 0) {
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
LABEL_9:
    sub_100107E5C((uint64_t)v10);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  swift_bridgeObjectRelease_n(v19, 2LL);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_100108658()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicTypeTextView(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001086D0()
{
  return type metadata accessor for DynamicTypeTextView(0LL);
}

uint64_t type metadata accessor for DynamicTypeTextView(uint64_t a1)
{
  uint64_t result = qword_1002E9C20;
  if (!qword_1002E9C20) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DynamicTypeTextView);
  }
  return result;
}

void sub_100108714(uint64_t a1, uint64_t a2)
{
  v5[0] = "\b";
  sub_1000133C4(319LL, a2);
  if (v4 <= 0x3F)
  {
    v5[1] = *(void *)(v3 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 2LL, v5, a1 + 80);
  }

void sub_10010878C(uint64_t a1)
{
  uint64_t v3 = sub_1000038E8(&qword_1002E25C0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v14[-v7];
  uint64_t v9 = (objc_class *)type metadata accessor for DynamicTypeTextView(0LL);
  v16.receiver = v1;
  v16.super_class = v9;
  objc_msgSendSuper2(&v16, "setFont:", a1);
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, v10);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v8, 1LL, 1LL, v11);
  uint64_t v12 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCase];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCase], v15, 0LL, 0LL);
  sub_100013460(v12, (uint64_t)v5);
  swift_beginAccess(v12, v14, 33LL, 0LL);
  sub_10000DBBC((uint64_t)v8, v12);
  swift_endAccess(v14);
  sub_100108000((uint64_t)v5);
  sub_1000077E0((uint64_t)v8, &qword_1002E25C0);
  sub_1000077E0((uint64_t)v5, &qword_1002E25C0);
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCaseContentSizeCategory];
  *(void *)&v1[OBJC_IVAR____TtC8AppStore19DynamicTypeTextView_fontUseCaseContentSizeCategory] = 0LL;
}

uint64_t sub_1001088E4()
{
  return sub_100004288( &qword_1002E9C30,  type metadata accessor for ProductLockupCollectionViewCell,  (uint64_t)&unk_10023F2E0);
}

double sub_100108914()
{
  uint64_t v0 = type metadata accessor for PageGrid(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = type metadata accessor for ProductTopLockup(0LL, v2);
  uint64_t v6 = sub_100004288( &qword_1002E8E50,  (uint64_t (*)(uint64_t))&type metadata accessor for ProductTopLockup,  (uint64_t)&protocol conformance descriptor for ProductTopLockup);
  double v8 = 0.0;
  if ((ItemLayoutContext.typedModel<A>(is:)(v5, v5, v6) & 1) != 0)
  {
    uint64_t KeyPath = swift_getKeyPath(&unk_10023F330, v7);
    ItemLayoutContext.subscript.getter(v4);
    swift_release(KeyPath);
    double v10 = PageGrid.componentMeasuringSize(spanning:)(1.0);
    (*(void (**)(void *, uint64_t))(v1 + 8))(v4, v0);
    if (qword_1002E0978 != -1) {
      swift_once(&qword_1002E0978, sub_1000A2F08);
    }
    id v11 = sub_10014DB80();
    swift_getObjectType(v11);
    sub_1001165CC(dbl_1002F37F0, (uint64_t)v11, v10);
    double v8 = v12;
    swift_unknownObjectRelease(v11);
  }

  return v8;
}

uint64_t sub_100108A70(Swift::Int a1)
{
  uint64_t v2 = sub_1000038E8((uint64_t *)&unk_1002E4940);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for ProductPageSectionType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  id v11 = (char *)&v22 - v10;
  uint64_t v13 = 0LL;
  if (dispatch thunk of ProductPresenter.sectionCount.getter(v12) > a1)
  {
    uint64_t v14 = dispatch thunk of ProductPresenter.productPageSection(at:)(a1);
    ProductPageSection.type.getter();
    __n128 v15 = swift_release(v14);
    (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 16))(v8, v11, v5, v15);
    LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
    int v16 = enum case for ProductPageSectionType.shelf(_:);
    uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17(v8, v5);
    if ((_DWORD)v14 == v16)
    {
      if ((dispatch thunk of ProductPresenter.isShelfHidden(for:)(a1) & 1) != 0)
      {
        v17(v11, v5);
        return 0LL;
      }

      else
      {
        uint64_t v13 = dispatch thunk of ProductPresenter.numberOfRows(for:)(a1);
        uint64_t v19 = dispatch thunk of ProductPresenter.shelf(for:)(a1);
        if ((Shelf.isHorizontal.getter() & 1) != 0)
        {
          if (v13 < 1)
          {
            Shelf.url.getter();
            __n128 v20 = swift_release(v19);
            ((void (*)(char *, uint64_t, __n128))v17)(v11, v5, v20);
            uint64_t v21 = type metadata accessor for URL(0LL);
            uint64_t v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48LL))(v4, 1LL, v21) != 1;
            sub_1000D17E0((uint64_t)v4);
          }

          else
          {
            v17(v11, v5);
            swift_release(v19);
            return 1LL;
          }
        }

        else
        {
          v17(v11, v5);
          swift_release(v19);
        }
      }
    }

    else
    {
      uint64_t v13 = ProductPresenter.numberOfNonShelfRows(for:)(a1);
      v17(v11, v5);
    }
  }

  return v13;
}

void sub_100108CB4(uint64_t a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType(a2);
  sub_100108D30(a1, a2, v2, ObjectType);
}

uint64_t type metadata accessor for ProductDataSource(uint64_t a1)
{
  uint64_t result = qword_1002E9C60;
  if (!qword_1002E9C60) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductDataSource);
  }
  return result;
}

void sub_100108D30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v61 = a4;
  uint64_t v68 = a1;
  char v69 = a2;
  uint64_t v5 = type metadata accessor for Shelf.ContentType(0LL);
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  __chkstk_darwin(v5);
  uint64_t v67 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v57 = (char *)&v55 - v8;
  __chkstk_darwin(v9);
  uint64_t v58 = (char *)&v55 - v10;
  uint64_t v11 = type metadata accessor for FloatingPointRoundingRule(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for ProductPageSectionType(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v55 - v21;
  uint64_t v62 = a3;
  char v23 = *(void (**)(void, __n128))(v16 + 104);
  unsigned int v59 = enum case for ProductPageSectionType.shelf(_:);
  uint64_t v60 = (void (*)(char *, void, uint64_t))v23;
  v23((char *)&v55 - v21, v20);
  uint64_t v24 = type metadata accessor for ProductPageSection(0LL);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  uint64_t v25 = ProductPageSection.init(type:shelfId:)(v22, 0x74616D726F666E69LL, 0xEB000000006E6F69LL);
  uint64_t v66 = dispatch thunk of ProductPresenter.index(of:)();
  int v65 = v26;
  __n128 v27 = swift_release(v25);
  if (qword_1002E0C08 != -1) {
    swift_once(&qword_1002E0C08, sub_100110C2C);
  }
  uint64_t v28 = type metadata accessor for EdgeInsetsDimension(0LL, v27);
  uint64_t v29 = sub_10000A634(v28, (uint64_t)qword_1002F45B8);
  static Dimensions.defaultRoundingRule.getter(v29);
  EdgeInsetsDimension.value(in:rounded:)(v69, v14);
  id v55 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  uint64_t v56 = v11;
  uint64_t v30 = v55(v14, v11);
  uint64_t v31 = dispatch thunk of ProductPresenter.sectionCount.getter(v30);
  uint64_t v32 = v68;
  uint64_t v33 = v68 + 1;
  if (__OFADD__(v68, 1LL))
  {
    __break(1u);
    goto LABEL_24;
  }

  if (v33 < v31)
  {
    uint64_t v34 = dispatch thunk of ProductPresenter.productPageSection(at:)(v68 + 1);
    ProductPageSection.type.getter();
    v60(v18, v59, v15);
    unint64_t v35 = sub_10010929C();
    char v36 = dispatch thunk of static Equatable.== infix(_:_:)(v22, v18, v15, v35);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v16 + 8);
    v37(v18, v15);
    v37(v22, v15);
    if ((v36 & 1) != 0)
    {
      swift_release(v34);
      uint64_t v32 = v68;
      goto LABEL_7;
    }

    uint64_t v33 = v34;
    char v48 = v58;
    uint64_t v32 = v68;
    dispatch thunk of ProductPresenter.contentType(for:)(v68);
    uint64_t v16 = v63;
    uint64_t v15 = v64;
    char v49 = v57;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v57, v48, v64);
    int v50 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v49, v15);
    uint64_t v51 = *(void (**)(char *, uint64_t))(v16 + 8);
    if (v50 == enum case for Shelf.ContentType.mediumLockup(_:)
      || v50 == enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
      || v50 == enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
      || v50 == enum case for Shelf.ContentType.productMedia(_:))
    {
      v51(v48, v15);
      swift_release(v33);
      uint64_t v40 = v69;
      goto LABEL_11;
    }

    v51(v49, v15);
    v51(v48, v15);
    if (qword_1002E0BE0 == -1)
    {
LABEL_21:
      uint64_t v52 = type metadata accessor for StaticDimension(0LL);
      uint64_t v53 = sub_10000A634(v52, (uint64_t)qword_1002F4540);
      static Dimensions.defaultRoundingRule.getter(v53);
      uint64_t v40 = v69;
      AnyDimension.value(in:rounded:)(v69, v14, v52, &protocol witness table for StaticDimension);
      __n128 v54 = swift_release(v33);
      ((void (*)(char *, uint64_t, __n128))v55)(v14, v56, v54);
      goto LABEL_11;
    }

unint64_t sub_10010929C()
{
  unint64_t result = qword_1002E9E98;
  if (!qword_1002E9E98)
  {
    uint64_t v1 = type metadata accessor for ProductPageSectionType(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ProductPageSectionType, v1);
    atomic_store(result, (unint64_t *)&qword_1002E9E98);
  }

  return result;
}

uint64_t sub_1001092E4()
{
  uint64_t v0 = type metadata accessor for Artwork.Crop(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_1000038E8((uint64_t *)&unk_1002E2280);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Artwork.style.getter(v5);
  uint64_t v8 = type metadata accessor for Artwork.Style(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(v7, 0LL, 1LL, v8);
  uint64_t v9 = ArtworkView.style.setter(v7);
  uint64_t v10 = Artwork.crop.getter(v9);
  uint64_t v11 = Artwork.Crop.preferredContentMode.getter(v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v12 = ArtworkView.contentMode.setter(v11);
  uint64_t v13 = ArtworkLoaderConfig.size.getter(v12);
  uint64_t v14 = ArtworkView.imageSize.setter(v13);
  uint64_t v15 = Artwork.backgroundColor.getter(v14);
  if (!v15)
  {
    sub_10000EA38();
    uint64_t v15 = static UIColor.placeholderBackground.getter();
  }

  return ArtworkView.backgroundColor.setter(v15);
}

void sub_100109434(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v11 = type metadata accessor for FontUseCase(0LL, v10);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v5[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_supplementaryViews] = a4;
  *(double *)&v5[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_horizontalPadding] = a1;
  type metadata accessor for DynamicTypeLabel(0LL);
  uint64_t v15 = qword_1002E0640;
  uint64_t v16 = v5;
  swift_bridgeObjectRetain(a4);
  if (v15 != -1) {
    swift_once(&qword_1002E0640, sub_100072AF0);
  }
  uint64_t v17 = sub_10000A634(v11, (uint64_t)qword_1002F2E18);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v17, v11);
  *(void *)&v16[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_captionView] = sub_100011F1C( (uint64_t)v14,  1LL,  0LL,  1,  0);

  v33.receiver = v16;
  v33.super_class = ObjectType;
  uint64_t v18 = (char *)objc_msgSendSuper2(&v33, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_captionView;
  __n128 v20 = *(void **)&v18[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_captionView];
  uint64_t v21 = v18;
  id v22 = v20;
  NSString v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setText:", v23, swift_bridgeObjectRelease(a3).n128_f64[0]);

  uint64_t v24 = *(void **)&v18[v19];
  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  id v25 = v24;
  int v26 = (void *)static UIColor.secondaryText.getter(v25);
  [v25 setTextColor:v26];

  [v21 addSubview:*(void *)&v18[v19]];
  id v27 = [v21 layer];
  [v27 setAllowsGroupBlending:0];

  if (!((unint64_t)a4 >> 62))
  {
    uint64_t v28 = *(void *)((a4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v28) {
      goto LABEL_5;
    }
LABEL_15:

    swift_bridgeObjectRelease(a4);
    return;
  }

  if (a4 < 0) {
    uint64_t v32 = a4;
  }
  else {
    uint64_t v32 = a4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a4);
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter(v32);
  swift_bridgeObjectRelease(a4);
  if (!v28) {
    goto LABEL_15;
  }
LABEL_5:
  if (v28 >= 1)
  {
    for (uint64_t i = 0LL; i != v28; ++i)
    {
      if ((a4 & 0xC000000000000001LL) != 0) {
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a4);
      }
      else {
        id v30 = *(id *)(a4 + 8 * i + 32);
      }
      uint64_t v31 = v30;
      [v21 addSubview:v30];
    }

    goto LABEL_15;
  }

  __break(1u);
}

id sub_100109788()
{
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v13, "layoutSubviews");
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_supplementaryViews];
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0) {
      uint64_t v12 = *(void *)&v0[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_supplementaryViews];
    }
    else {
      uint64_t v12 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v0[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_supplementaryViews]);
    id result = (id)_CocoaArrayWrapper.endIndex.getter(v12);
    uint64_t v2 = (uint64_t)result;
  }

  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    id result = (id)swift_bridgeObjectRetain(*(void *)&v0[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_supplementaryViews]);
  }

  if (!v2) {
    goto LABEL_10;
  }
  if (v2 >= 1)
  {
    uint64_t v4 = 0LL;
    uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_captionView];
    double v6 = *(double *)&v0[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_horizontalPadding];
    double v7 = 0.0;
    do
    {
      if ((v1 & 0xC000000000000001LL) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      }
      else {
        id v8 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v9 = v8;
      ++v4;
      [v8 sizeToFit];
      [v5 frame];
      CGRectGetHeight(v14);
      [v9 frame];
      CGRectGetHeight(v15);
      [v9 lastBaselineFromBottom];
      [v5 lastBaselineFromBottom];
      [v9 frame];
      CGRectGetWidth(v16);
      [v9 frame];
      CGRectGetHeight(v17);
      [v0 bounds];
      CGRect.withLayoutDirection(in:relativeTo:)(v0);
      objc_msgSend(v9, "setFrame:");
      [v9 frame];
      double Width = CGRectGetWidth(v18);

      double v7 = v7 + v6 + Width;
    }

    while (v2 != v4);
LABEL_10:
    swift_bridgeObjectRelease(v1);
    uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC8AppStore22ProductLockupBadgeView_captionView];
    [v11 sizeToFit];
    [v11 frame];
    CGRectGetWidth(v19);
    [v11 frame];
    CGRectGetHeight(v20);
    [v0 bounds];
    CGRect.withLayoutDirection(in:relativeTo:)(v0);
    return objc_msgSend(v11, "setFrame:");
  }

  __break(1u);
  return result;
}

uint64_t type metadata accessor for ProductLockupBadgeView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStore22ProductLockupBadgeView);
}

id sub_100109B2C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = type metadata accessor for FontUseCase(0LL, v9);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  objc_super v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002E0640 != -1) {
    swift_once(&qword_1002E0640, sub_100072AF0);
  }
  uint64_t v14 = sub_10000A634(v10, (uint64_t)qword_1002F2E18);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) == enum case for FontUseCase.preferredFontDerivative(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    CGRect v15 = *(void **)v13;
    double v16 = *((double *)v13 + 1);
    sub_10000DFD4(0LL, (unint64_t *)&qword_1002E3740, &OBJC_CLASS___UIImageSymbolConfiguration_ptr);
    uint64_t v17 = _UIImageSymbolWeightForFontWeight(v16);
    CGRect v18 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)(v15, v17, 0LL, a2, a3 & 1);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    CGRect v18 = 0LL;
  }

  CGRect v19 = (void *)static SystemImage.load(_:with:)(a1, v18);

  v25.receiver = v4;
  v25.super_class = ObjectType;
  id v20 = objc_msgSendSuper2(&v25, "initWithImage:", v19);

  sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  id v21 = v20;
  id v22 = (void *)static UIColor.secondaryText.getter(v21);
  [v21 setTintColor:v22];

  [v21 setContentMode:1];
  uint64_t v23 = type metadata accessor for SystemImage(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8LL))(a1, v23);
  return v21;
}

void sub_100109E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t type metadata accessor for BadgeImageView()
{
  return objc_opt_self(&OBJC_CLASS____TtC8AppStoreP33_EAA58404EE26477D892371357E05D18814BadgeImageView);
}

void sub_100109E84()
{
  uint64_t v0 = type metadata accessor for SystemImage(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for BadgeType(0LL, v2);
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Badge.type.getter(v7);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v10 != enum case for BadgeType.rating(_:))
  {
    if (v10 == enum case for BadgeType.editorsChoice(_:))
    {
      uint64_t v17 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
      CGRect v18 = (void *)static UIColor.secondaryText.getter(v17);
      id v19 = objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
      sub_100162DF0(0, 1, v18);
      return;
    }

    if (v10 == enum case for BadgeType.controllerOptional(_:) || v10 == enum case for BadgeType.controllerRequired(_:))
    {
      uint64_t v35 = Badge.heading.getter();
      if (!v36) {
        return;
      }
      id v20 = (id)v35;
      id object = v36;
      uint64_t v37 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
      uint64_t v38 = swift_allocObject(v37, 40LL, 7LL);
      *(_OWORD *)(v38 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
      (*(void (**)(char *, void, uint64_t))(v1 + 104))( v4,  enum case for SystemImage.gamecontrollerFill(_:),  v0);
      id v39 = objc_allocWithZone((Class)type metadata accessor for BadgeImageView());
      uint64_t v40 = (uint64_t)v4;
      uint64_t v41 = 1LL;
      char v42 = 0;
    }

    else
    {
      if (v10 != enum case for BadgeType.siriRemoteRequired(_:))
      {
        if (v10 == enum case for BadgeType.siriRemoteOrControllerRequired(_:))
        {
          uint64_t v63 = *(void (**)(char *, void, uint64_t))(v1 + 104);
          v63(v4, enum case for SystemImage.appletvremoteGen3Fill(_:), v0);
          uint64_t v64 = (objc_class *)type metadata accessor for BadgeImageView();
          id v65 = objc_allocWithZone(v64);
          id v66 = sub_100109B2C((uint64_t)v4, 0LL, 1);
          v63(v4, enum case for SystemImage.gamecontrollerFill(_:), v0);
          id v67 = objc_allocWithZone(v64);
          id v68 = sub_100109B2C((uint64_t)v4, 1LL, 0);
          v69._uint64_t countAndFlagsBits = 0xD000000000000039LL;
          v69._id object = (void *)0x800000010024DB30LL;
          v70._uint64_t countAndFlagsBits = 0LL;
          v70._id object = (void *)0xE000000000000000LL;
          Swift::String v71 = localizedStringReferencingSiriRemote(_:comment:)(v69, v70);
          id object = v71._object;
          uint64_t v72 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
          uint64_t v73 = swift_allocObject(v72, 48LL, 7LL);
          *(_OWORD *)(v73 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236DC0;
          *(void *)(v73 + 32) = v66;
          *(void *)(v73 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = v68;
          *(void *)&__int128 v76 = v73;
          specialized Array._endMutation()(v73);
          uint64_t v54 = v76;
          id v74 = objc_allocWithZone((Class)type metadata accessor for ProductLockupBadgeView());
          double v56 = 10.0;
          uint64_t countAndFlagsBits = v71._countAndFlagsBits;
          goto LABEL_35;
        }

        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        return;
      }

      v48._id object = (void *)0x800000010024DB70LL;
      v48._uint64_t countAndFlagsBits = 0xD000000000000022LL;
      v49._uint64_t countAndFlagsBits = 0LL;
      v49._id object = (void *)0xE000000000000000LL;
      Swift::String v50 = localizedStringReferencingSiriRemote(_:comment:)(v48, v49);
      id v20 = (id)v50._countAndFlagsBits;
      id object = v50._object;
      uint64_t v51 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
      uint64_t v38 = swift_allocObject(v51, 40LL, 7LL);
      *(_OWORD *)(v38 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
      (*(void (**)(char *, void, uint64_t))(v1 + 104))( v4,  enum case for SystemImage.appletvremoteGen3Fill(_:),  v0);
      id v52 = objc_allocWithZone((Class)type metadata accessor for BadgeImageView());
      uint64_t v40 = (uint64_t)v4;
      uint64_t v41 = 0LL;
      char v42 = 1;
    }

    id v53 = sub_100109B2C(v40, v41, v42);
    *(void *)(v38 + 32) = v53;
    *(void *)&__int128 v76 = v38;
    specialized Array._endMutation()(v53);
    uint64_t v54 = v76;
    id v55 = objc_allocWithZone((Class)type metadata accessor for ProductLockupBadgeView());
    double v56 = 10.0;
LABEL_34:
    uint64_t countAndFlagsBits = (uint64_t)v20;
LABEL_35:
    sub_100109434(v56, countAndFlagsBits, (uint64_t)object, v54);
    return;
  }

  uint64_t v11 = ((uint64_t (*)(void))Badge.content.getter)();
  uint64_t v12 = BadgeContentKeyRatingFormatted.getter();
  uint64_t v14 = v13;
  if (*(void *)(v11 + 16) && (unint64_t v15 = sub_1000EDF74(v12, v13), (v16 & 1) != 0))
  {
    sub_100007338(*(void *)(v11 + 56) + 32 * v15, (uint64_t)&v76);
  }

  else
  {
    __int128 v76 = 0u;
    __int128 v77 = 0u;
  }

  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v11);
  if (*((void *)&v77 + 1))
  {
    if ((swift_dynamicCast(v75, &v76, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
    {
      id v20 = v75[0];
      id object = v75[1];
      id v22 = (char *)objc_msgSend( objc_allocWithZone((Class)type metadata accessor for StarRatingView()),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
      uint64_t v23 = v22;
      char v24 = v22[OBJC_IVAR____TtC8AppStore14StarRatingView_starSize];
      v22[OBJC_IVAR____TtC8AppStore14StarRatingView_starSize] = 1;
      if ((v24 & 1) == 0)
      {
        (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for SystemImage.starFill(_:), v0);
        sub_10000DFD4(0LL, (unint64_t *)&qword_1002E3740, &OBJC_CLASS___UIImageSymbolConfiguration_ptr);
        objc_super v25 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)( UIFontTextStyleCaption1,  0LL,  1LL,  1LL,  0LL);
        int v26 = (void *)static SystemImage.load(_:with:)(v4, v25);

        (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
        id v27 = [v26 imageWithRenderingMode:2];

        uint64_t v28 = *(void **)&v23[OBJC_IVAR____TtC8AppStore14StarRatingView_starGlyph];
        *(void *)&v23[OBJC_IVAR____TtC8AppStore14StarRatingView_starGlyph] = v27;

        id v22 = (char *)[v23 setNeedsDisplay];
      }

      uint64_t v29 = Badge.content.getter(v22);
      uint64_t v30 = BadgeContentKeyRating.getter();
      uint64_t v32 = v31;
      if (*(void *)(v29 + 16) && (unint64_t v33 = sub_1000EDF74(v30, v31), (v34 & 1) != 0))
      {
        sub_100007338(*(void *)(v29 + 56) + 32 * v33, (uint64_t)&v76);
      }

      else
      {
        __int128 v76 = 0u;
        __int128 v77 = 0u;
      }

      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v29);
      if (*((void *)&v77 + 1))
      {
        uint64_t v43 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E8BB0, &OBJC_CLASS___NSNumber_ptr);
        if ((swift_dynamicCast(v75, &v76, (char *)&type metadata for Any + 8, v43, 6LL) & 1) != 0)
        {
          id v44 = v75[0];
          [v75[0] floatValue];
          double v46 = v45;
          double v47 = *(double *)&v23[OBJC_IVAR____TtC8AppStore14StarRatingView_rating];
          *(double *)&v23[OBJC_IVAR____TtC8AppStore14StarRatingView_rating] = v46;
          if (v47 != v46) {
            [v23 setNeedsDisplay];
          }
LABEL_33:

          uint64_t v59 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
          uint64_t v60 = swift_allocObject(v59, 40LL, 7LL);
          *(_OWORD *)(v60 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
          *(void *)(v60 + 32) = v23;
          *(void *)&__int128 v76 = v60;
          specialized Array._endMutation()(v60);
          uint64_t v54 = v76;
          id v61 = objc_allocWithZone((Class)type metadata accessor for ProductLockupBadgeView());
          double v56 = 0.0;
          goto LABEL_34;
        }
      }

      else
      {
        sub_100027424((uint64_t)&v76);
      }

      double v57 = *(double *)&v23[OBJC_IVAR____TtC8AppStore14StarRatingView_rating];
      *(void *)&v23[OBJC_IVAR____TtC8AppStore14StarRatingView_rating] = 0LL;
      if (v57 != 0.0) {
        [v23 setNeedsDisplay];
      }
      id v58 = [(id)objc_opt_self(UIColor) systemMidGrayColor];
      id v44 = *(id *)&v23[OBJC_IVAR____TtC8AppStore14StarRatingView_overrideFillColor];
      *(void *)&v23[OBJC_IVAR____TtC8AppStore14StarRatingView_overrideFillColor] = v58;
      goto LABEL_33;
    }
  }

  else
  {
    sub_100027424((uint64_t)&v76);
  }

char *sub_10010A598(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for FontUseCase(0LL, a2);
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = __chkstk_darwin(v3);
  __n128 v7 = (char *)v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Badge.accessibilityTitle.getter(v5);
  uint64_t v9 = v8;
  __n128 v11 = swift_bridgeObjectRelease(v8);
  uint64_t v104 = a2;
  if (v9)
  {
    BOOL v12 = 1;
    goto LABEL_9;
  }

  uint64_t v13 = Badge.content.getter(v10);
  uint64_t v14 = BadgeContentKeyContentRatingResource.getter();
  uint64_t v16 = v15;
  if (*(void *)(v13 + 16) && (unint64_t v17 = sub_1000EDF74(v14, v15), (v18 & 1) != 0))
  {
    sub_100007338(*(void *)(v13 + 56) + 32 * v17, (uint64_t)v110);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v13);
    if (*(void *)&v110[24])
    {
      sub_100027424((uint64_t)v110);
      BOOL v12 = 1;
      goto LABEL_9;
    }
  }

  else
  {
    memset(v110, 0, 32);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v13);
  }

  uint64_t v19 = sub_100027424((uint64_t)v110);
  uint64_t v20 = Badge.artwork.getter(v19);
  BOOL v12 = v20 != 0;
  __n128 v11 = swift_release(v20);
LABEL_9:
  Badge.accessibilityCaption.getter(v11);
  if (!v21) {
    return 0LL;
  }
  uint64_t v22 = v21;
  if (!v12)
  {
    swift_bridgeObjectRelease(v21);
    return 0LL;
  }

  uint64_t v100 = v4;
  uint64_t v101 = v7;
  uint64_t v102 = v3;
  id v105 = [objc_allocWithZone(NSMutableAttributedString) init];
  uint64_t v103 = sub_1000038E8(&qword_1002E3738);
  uint64_t inited = swift_initStackObject(v103, v109);
  __int128 v99 = xmmword_100237B10;
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100237B10;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v24 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E25D0, &OBJC_CLASS___UIColor_ptr);
  uint64_t v97 = NSForegroundColorAttributeName;
  uint64_t v25 = static UIColor.secondaryText.getter(v97);
  *(void *)(inited + 64) = v24;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = v25;
  unint64_t v26 = sub_1000EC244(inited);
  id v27 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  type metadata accessor for Key(0LL);
  uint64_t v30 = v29;
  sub_100049148();
  v96[1] = v30;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  id v32 = objc_msgSend(v27, "initWithString:attributes:", v28, isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

  id v33 = v105;
  id v34 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
  id v98 = v32;
  id v35 = [v34 initWithAttributedString:v32];
  [v33 appendAttributedString:v35];

  uint64_t v37 = Badge.accessibilityTitle.getter(v36);
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = swift_initStackObject(v103, &v106);
    *(_OWORD *)(v40 + swift_unknownObjectWeakDestroy(v0 + 16) = v99;
    uint64_t v41 = v97;
    *(void *)(v40 + 32) = v97;
    uint64_t v42 = static UIColor.primaryText.getter(v41);
    *(void *)(v40 + 64) = v24;
    *(void *)(v40 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = v42;
    unint64_t v43 = sub_1000EC244(v40);
    id v44 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    Class v46 = Dictionary._bridgeToObjectiveC()().super.isa;
    *(void *)&double v47 = swift_bridgeObjectRelease(v43).n128_u64[0];
    Swift::String v48 = v44;
    id v49 = v105;
    id v50 = objc_msgSend(v48, "initWithString:attributes:", v45, v46, v47);

    id v51 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
    NSString v52 = String._bridgeToObjectiveC()();
    id v53 = [v51 initWithString:v52];

    [v49 appendAttributedString:v53];
    id v54 = [objc_allocWithZone(NSAttributedString) initWithAttributedString:v50];
    [v49 appendAttributedString:v54];
  }

  uint64_t v55 = v103;
  uint64_t v56 = Badge.content.getter(v37);
  uint64_t v57 = BadgeContentKeyContentRatingResource.getter();
  uint64_t v59 = v58;
  if (*(void *)(v56 + 16))
  {
    unint64_t v60 = sub_1000EDF74(v57, v58);
    uint64_t v62 = v100;
    uint64_t v61 = (uint64_t)v101;
    id v63 = v105;
    if ((v64 & 1) != 0) {
      sub_100007338(*(void *)(v56 + 56) + 32 * v60, (uint64_t)v110);
    }
    else {
      memset(v110, 0, 32);
    }
  }

  else
  {
    memset(v110, 0, 32);
    uint64_t v62 = v100;
    uint64_t v61 = (uint64_t)v101;
    id v63 = v105;
  }

  swift_bridgeObjectRelease(v59);
  swift_bridgeObjectRelease(v56);
  p_ivar_lyt = &SearchResultCollectionViewCell.ivar_lyt;
  if (*(void *)&v110[24])
  {
    uint64_t v67 = swift_dynamicCast(v107, v110, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
    if ((v67 & 1) != 0)
    {
      uint64_t v68 = v107[0];
      uint64_t v69 = v107[1];
      type metadata accessor for BundleImage(0LL);
      Swift::String v70 = (void *)static BundleImage.load(_:bundle:with:compatibleWith:)(v68, v69, 0LL, 0LL, 0LL);
      swift_bridgeObjectRelease(v69);
LABEL_26:
      id v73 = v70;
      uint64_t v74 = sub_10000DFD4(0LL, (unint64_t *)&qword_1002E5300, &OBJC_CLASS___UIFont_ptr);
      uint64_t v75 = v55;
      if (qword_1002E0638 != -1) {
        swift_once(&qword_1002E0638, sub_100072AD8);
      }
      uint64_t v76 = sub_10000A634(v102, (uint64_t)qword_1002F2E00);
      __int128 v77 = v104;
      char v78 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v76, v104);
      sub_10000DFD4(0LL, &qword_1002E1E68, &OBJC_CLASS___NSAttributedString_ptr);
      uint64_t v79 = sub_1000038E8((uint64_t *)&unk_1002E1CF0);
      uint64_t v80 = swift_allocObject(v79, 40LL, 7LL);
      *(_OWORD *)(v80 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_100236BD0;
      *(void *)(v80 + 32) = v73;
      *(void *)uint64_t v110 = v80;
      specialized Array._endMutation()(v80);
      uint64_t v81 = *(void *)v110;
      uint64_t v82 = swift_initStackObject(v75, &v108);
      *(_OWORD *)(v82 + swift_unknownObjectWeakDestroy(v0 + 16) = v99;
      *(void *)(v82 + 64) = v74;
      *(void *)(v82 + 32) = NSFontAttributeName;
      *(void *)(v82 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100247230LL,  "AppStore/SingleOnboardingView.swift",  35LL,  2LL,  107LL, 0) = v78;
      id v83 = v73;
      id v84 = v77;
      uint64_t v85 = NSFontAttributeName;
      id v86 = v78;
      unint64_t v87 = sub_1000EC244(v82);
      uint64_t v88 = (void *)NSAttributedString.init(images:for:adjustsImageSizeForAccessibilityContentSizeCategory:interItemSpacing:defaultAttributes:imagesShouldRenderAsTemplates:)( v81,  v84,  0LL,  v87,  0LL,  0.0);
      id v89 = objc_allocWithZone(&OBJC_CLASS___NSAttributedString);
      NSString v90 = String._bridgeToObjectiveC()();
      id v91 = [v89 initWithString:v90];

      id v63 = v105;
      [v105 appendAttributedString:v91];

      [v63 appendAttributedString:v88];
      uint64_t v62 = v100;
      uint64_t v61 = (uint64_t)v101;
      p_ivar_lyt = (void **)(&SearchResultCollectionViewCell + 16);
      goto LABEL_30;
    }
  }

  else
  {
    uint64_t v67 = sub_100027424((uint64_t)v110);
  }

  uint64_t v71 = Badge.artwork.getter(v67);
  if (v71)
  {
    uint64_t v72 = v71;
    type metadata accessor for BundleImage(0LL);
    Swift::String v70 = (void *)static BundleImage.load(artwork:with:)(v72, 0LL);
    swift_release(v72);
    if (v70) {
      goto LABEL_26;
    }
  }

  else
  {
    Swift::String v70 = 0LL;
  }