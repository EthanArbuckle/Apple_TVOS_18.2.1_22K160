void sub_100007528(id a1)
{
  TVSettingsNotificationsFacade *v1;
  void *v2;
  v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsNotificationsFacade);
  v2 = (void *)qword_1001E1550;
  qword_1001E1550 = (uint64_t)v1;
}

LABEL_11:
  return v6;
}

  [v4 roomPickerViewControllerDidFinish:*(void *)(a1 + 32)];
}

  return (char)v3;
}

  return v6;
}

  v12 = (void *)objc_claimAutoreleasedReturnValue([a1 currentConfiguration]);
  if (!v12)
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsOSUpdateConfigurationManager shippingConfiguration]( &OBJC_CLASS___TVSettingsOSUpdateConfigurationManager,  "shippingConfiguration"));
    [a1 _setCurrentConfiguration:v13];
  }

  os_unfair_lock_lock((os_unfair_lock_t)&unk_1001E1758);
  v14 = (void *)qword_1001E1760;
  qword_1001E1760 = 0LL;

  v15 = (void *)qword_1001E1768;
  qword_1001E1768 = 0LL;

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1001E1758);
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[PBSAppleConnectSettings sharedInstance](&OBJC_CLASS___PBSAppleConnectSettings, "sharedInstance"));
  v43 = 0LL;
  v17 = (void *)objc_claimAutoreleasedReturnValue([v16 tokenWithError:&v43]);
  v18 = v43;
  if (v18)
  {
    v19 = sub_1000580FC();
    v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_1000F6C1C();
    }

    (*((void (**)(id, void, void))v4 + 2))(v4, 0LL, 0LL);
  }

  else
  {
    v39 = v5;
    v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSCharacterSet URLQueryAllowedCharacterSet]( &OBJC_CLASS___NSCharacterSet,  "URLQueryAllowedCharacterSet"));
    v38 = objc_claimAutoreleasedReturnValue([v17 stringByAddingPercentEncodingWithAllowedCharacters:v21]);

    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLQueryItem queryItemWithName:value:]( &OBJC_CLASS___NSURLQueryItem,  "queryItemWithName:value:",  @"activeState",  @"enabled"));
    [v22 addObject:v23];

    v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLQueryItem queryItemWithName:value:]( &OBJC_CLASS___NSURLQueryItem,  "queryItemWithName:value:",  @"currentPlatform",  @"tvOS"));
    [v22 addObject:v24];

    v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLComponents componentsWithString:]( &OBJC_CLASS___NSURLComponents,  "componentsWithString:",  @"https://livability-api.swe.apple.com/services/software-update-audiences"));
    [v25 setPercentEncodedQueryItems:v22];
    v26 = (void *)objc_claimAutoreleasedReturnValue([v25 URL]);
    v27 = sub_1000580FC();
    v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG)) {
      sub_1000F7E40();
    }

    if (v26)
    {
      v37 = v17;
      v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLSessionConfiguration ephemeralSessionConfiguration]( &OBJC_CLASS___NSURLSessionConfiguration,  "ephemeralSessionConfiguration"));
      [v29 setRequestCachePolicy:1];
      [v29 setWaitsForConnectivity:1];
      v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLSession sessionWithConfiguration:]( &OBJC_CLASS___NSURLSession,  "sessionWithConfiguration:",  v29));
      v36 = v26;
      v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableURLRequest requestWithURL:](&OBJC_CLASS___NSMutableURLRequest, "requestWithURL:", v26));
      v32 = (void *)v38;
      [v31 setValue:v38 forHTTPHeaderField:@"ACMobileToken"];
      [v31 setValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
      v40[0] = _NSConcreteStackBlock;
      v40[1] = 3221225472LL;
      v40[2] = sub_100058C6C;
      v40[3] = &unk_100190C60;
      v41 = v4;
      v42 = a1;
      v33 = (void *)objc_claimAutoreleasedReturnValue([v30 dataTaskWithRequest:v31 completionHandler:v40]);
      [v33 resume];

      v26 = v36;
      v17 = v37;
    }

    else
    {
      v34 = sub_1000580FC();
      v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_1000F7E14();
      }

      (*((void (**)(id, void, void))v4 + 2))(v4, 0LL, 0LL);
      v32 = (void *)v38;
    }

    v5 = v39;
  }
}
      }

      v5 = [v3 countByEnumeratingWithState:&v35 objects:v42 count:16];
    }

    while (v5);
  }

  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v16 = v30;
  v17 = [v16 countByEnumeratingWithState:&v31 objects:v41 count:16];
  if (v17)
  {
    v18 = v17;
    v19 = *(void *)v32;
    do
    {
      for (j = 0LL; j != v18; j = (char *)j + 1)
      {
        if (*(void *)v32 != v19) {
          objc_enumerationMutation(v16);
        }
        v21 = *(void **)(*((void *)&v31 + 1) + 8LL * (void)j);
        v22 = sub_1000580FC();
        v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543362;
          v40 = v21;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "Removing profile: %{public}@", buf, 0xCu);
        }

        v24 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
        v25 = (void *)objc_claimAutoreleasedReturnValue([v21 identifier]);
        [v24 removeProfileWithIdentifier:v25];
      }

      v18 = [v16 countByEnumeratingWithState:&v31 objects:v41 count:16];
    }

    while (v18);
  }

  v26 = MASetPallasAudience(0LL);
  v27 = sub_1000580FC();
  v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
  v29 = v28;
  if (v26)
  {
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      sub_1000F827C();
    }
  }

  else if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "Reset pallas audience to nil", buf, 2u);
  }
}

  if (v8)
  {
    [*(id *)(a1 + 40) addObject:v8];
LABEL_13:
  }
}

  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v11 = a1[4];
  v12 = [v11 countByEnumeratingWithState:&v18 objects:v26 count:16];
  if (v12)
  {
    v13 = v12;
    v14 = *(void *)v19;
    while (2)
    {
      for (j = 0LL; j != v13; j = (char *)j + 1)
      {
        if (*(void *)v19 != v14) {
          objc_enumerationMutation(v11);
        }
        v16 = *(void *)(*((void *)&v18 + 1) + 8LL * (void)j);
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "photoCollectionGroupIdentifier", (void)v18));
        LOBYTE(v16) = [v17 isEqualToString:v16];

        if ((v16 & 1) != 0)
        {

          goto LABEL_21;
        }
      }

      v13 = [v11 countByEnumeratingWithState:&v18 objects:v26 count:16];
      if (v13) {
        continue;
      }
      break;
    }
  }

  [a1[6] addObject:v3];
LABEL_21:
}
}

  __break(1u);
}

  result = sub_1000ED7AC((uint64_t)v6, &qword_1001E0FE0);
LABEL_12:
  v24 = 0LL;
LABEL_13:
  *a2 = v24;
  return result;
}

id sub_10000786C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateBulletinSettingsSynchronously:0];
}

void sub_100007A50(uint64_t a1)
{
}

id sub_100007A58(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateBulletinSettingsSynchronously:0];
}

void sub_100007B08(uint64_t a1, void *a2)
{
  id v3 = a2;
  v28 = -[NSMutableArray initWithCapacity:]( [NSMutableArray alloc],  "initWithCapacity:",  [v3 count]);
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  v4 = (TVSettingsNotificationSettings *)v3;
  id v5 = -[TVSettingsNotificationSettings countByEnumeratingWithState:objects:count:]( v4,  "countByEnumeratingWithState:objects:count:",  &v31,  v37,  16LL);
  if (!v5)
  {
    v8 = 0LL;
    v7 = 0LL;
    v18 = v4;
LABEL_19:

    goto LABEL_21;
  }

  id v6 = v5;
  uint64_t v27 = a1;
  v7 = 0LL;
  v8 = 0LL;
  uint64_t v9 = *(void *)v32;
  do
  {
    for (i = 0LL; i != v6; i = (char *)i + 1)
    {
      if (*(void *)v32 != v9) {
        objc_enumerationMutation(v4);
      }
      v11 = *(void **)(*((void *)&v31 + 1) + 8LL * (void)i);
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "sectionID", v27));
      if (v12 && ([v11 suppressFromSettings] & 1) == 0)
      {
        v13 = objc_alloc_init(&OBJC_CLASS___TVSettingsNotificationSettings);
        v36 = v11;
        v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v36, 1LL));
        -[TVSettingsNotificationSettings setSectionInfos:](v13, "setSectionInfos:", v14);

        -[TVSettingsNotificationSettings setIdentifier:](v13, "setIdentifier:", v12);
        -[NSMutableArray addObject:](v28, "addObject:", v13);
        if ([v12 isEqualToString:@"com.apple.tvmovies"])
        {
          v15 = v8;
          v16 = v7;
          v8 = v13;
          goto LABEL_11;
        }

        v15 = v7;
        v16 = v13;
        if ([v12 isEqualToString:@"com.apple.tvshows"])
        {
LABEL_11:
          v17 = v13;

          v7 = v16;
        }
      }
    }

    id v6 = -[TVSettingsNotificationSettings countByEnumeratingWithState:objects:count:]( v4,  "countByEnumeratingWithState:objects:count:",  &v31,  v37,  16LL);
  }

  while (v6);

  if (v8 && v7)
  {
    v18 = objc_alloc_init(&OBJC_CLASS___TVSettingsNotificationSettings);
    v19 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsNotificationSettings sectionInfos](v8, "sectionInfos"));
    v20 = (void *)objc_claimAutoreleasedReturnValue([v19 firstObject]);
    v35[0] = v20;
    v21 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsNotificationSettings sectionInfos](v7, "sectionInfos"));
    v22 = (void *)objc_claimAutoreleasedReturnValue([v21 firstObject]);
    v35[1] = v22;
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v35, 2LL));
    -[TVSettingsNotificationSettings setSectionInfos:](v18, "setSectionInfos:", v23);

    -[TVSettingsNotificationSettings setIdentifier:](v18, "setIdentifier:", @"com.apple.tvshows.tvmovies");
    uint64_t v24 = TSKLocString(@"AppsMoviesAndTVTitle");
    v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
    -[TVSettingsNotificationSettings setIdentifier:](v18, "setIdentifier:", v25);

    -[NSMutableArray removeObject:](v28, "removeObject:", v8);
    -[NSMutableArray removeObject:](v28, "removeObject:", v7);
    a1 = v27;
    goto LABEL_19;
  }

  a1 = v27;
LABEL_21:
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472LL;
  v29[2] = sub_100007E68;
  v29[3] = &unk_10018E468;
  v29[4] = *(void *)(a1 + 32);
  v30 = v28;
  v26 = v28;
  BSDispatchMain(v29);
}

id sub_100007E68(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setNotificationSettings:*(void *)(a1 + 40)];
}

void sub_100008234(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "TVSettingsNotificationsFacade");
  v2 = (void *)qword_1001E1560;
  qword_1001E1560 = (uint64_t)v1;
}

void sub_100008384(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsAirPlayFacade);
  v2 = (void *)qword_1001E1570;
  qword_1001E1570 = (uint64_t)v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[PBSAirPlaySettings sharedInstance](&OBJC_CLASS___PBSAirPlaySettings, "sharedInstance"));
  v4 = *(void **)(qword_1001E1570 + 8);
  *(void *)(qword_1001E1570 + 8) = v3;
}
}

id sub_100008BC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) homeConfigurationState] != (id)4) {
    goto LABEL_21;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
  unsigned int v5 = objc_msgSend(v4, "pbs_needsHomeKitAutoOnboarding");

  if (v5)
  {
    uint64_t v8 = TVCSHomeLog(v6, v7);
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v47 = "-[TVSettingsAirPlayFacade roomNameFormatter]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%s: The local accessory is configured but PineBoard is still onboarding.",  buf,  0xCu);
    }

    goto LABEL_20;
  }

  if (!v3)
  {
    uint64_t v18 = TVCSHomeLog(v6, v7);
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1000F637C(v9, v19, v20, v21, v22, v23, v24, v25);
    }
    goto LABEL_20;
  }

  v10 = (void *)objc_claimAutoreleasedReturnValue([v3 home]);
  uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 name]);

  v11 = (void *)objc_claimAutoreleasedReturnValue([v3 room]);
  v12 = (void *)objc_claimAutoreleasedReturnValue([v11 name]);

  v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) allOwnedHomes]);
  id v14 = [v13 count];

  if ((unint64_t)v14 < 2)
  {
    if (v12)
    {
      id v17 = v12;
      goto LABEL_14;
    }

    uint64_t v36 = TVCSHomeLog(v15, v16);
    v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      sub_1000F645C(v28, v37, v38, v39, v40, v41, v42, v43);
    }
LABEL_19:

LABEL_20:
LABEL_21:
    uint64_t v44 = TSKLocString(@"WHARoomSelectTitle");
    v26 = (void *)objc_claimAutoreleasedReturnValue(v44);
    goto LABEL_22;
  }

  if (!v9 || !v12)
  {
    uint64_t v27 = TVCSHomeLog(v15, v16);
    v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      sub_1000F63EC(v28, v29, v30, v31, v32, v33, v34, v35);
    }
    goto LABEL_19;
  }

  id v17 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@ (%@)", v12, v9));
LABEL_14:
  v26 = v17;

LABEL_22:
  return v26;
}

void sub_100008E08( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

LABEL_34:
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v18, 4LL));
      if (v5) {
LABEL_35:
      }

LABEL_36:
      uint64_t v43 = -[TSKMappingFormatter initWithInputs:outputs:]( objc_alloc(&OBJC_CLASS___TSKMappingFormatter),  "initWithInputs:outputs:",  &off_1001AEA58,  v25);

      return v43;
    case 4LL:
      if (a5)
      {
        v11 = TSKLocString(@"BluetoothGameControllerConnectedValue");
        uint64_t v7 = (__CFString *)objc_claimAutoreleasedReturnValue(v11);
      }

      else
      {
        uint64_t v7 = &stru_100195DD8;
      }

      v46[0] = v7;
      uint64_t v29 = TSKLocString(@"BluetoothGameControllerConnectingValue");
      v13 = (void *)objc_claimAutoreleasedReturnValue(v29);
      v46[1] = v13;
      uint64_t v30 = TSKLocString(@"BluetoothGameControllerDisconnectedValue");
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v30);
      v46[2] = v15;
      uint64_t v31 = TSKLocString(@"BluetoothGameControllerDisconnectingValue");
      id v17 = (void *)objc_claimAutoreleasedReturnValue(v31);
      v46[3] = v17;
      uint64_t v18 = v46;
      goto LABEL_34;
    default:
      if (a5)
      {
        uint64_t v8 = TSKLocString(@"BluetoothConnectedValue");
        uint64_t v7 = (__CFString *)objc_claimAutoreleasedReturnValue(v8);
      }

      else
      {
        uint64_t v7 = &stru_100195DD8;
      }

      v45[0] = v7;
      uint64_t v19 = TSKLocString(@"BluetoothConnectingValue");
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
      v45[1] = v20;
      uint64_t v21 = TSKLocString(@"BluetoothDisconnectedValue");
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
      v45[2] = v22;
      uint64_t v23 = TSKLocString(@"BluetoothDisconnectingValue");
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
      v45[3] = v24;
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v45, 4LL));

      if (!v5) {
        goto LABEL_36;
      }
      goto LABEL_35;
  }

  return v26;
}

void sub_1000095FC(_Unwind_Exception *a1)
{
}

void sub_100009650(uint64_t a1)
{
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](&OBJC_CLASS___UIApplication, "sharedApplication"));
  id v3 = [v2 applicationState];

  if (!v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained stopScanning];
  }

void sub_1000096C8(uint64_t a1)
{
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](&OBJC_CLASS___UIApplication, "sharedApplication"));
  id v3 = [v2 applicationState];

  if (!v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained startScanning];
  }

void sub_100009740(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000097F0;
  v5[3] = &unk_10018E568;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v4 = v3;
  id v6 = v4;
  BSDispatchMain(v5);

  objc_destroyWeak(&v7);
}

void sub_1000097DC(_Unwind_Exception *a1)
{
}

void sub_1000097F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pairedCUDevices]);
  id v3 = *(void **)(a1 + 32);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 addressString]);
  [v2 setObject:v3 forKey:v4];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[TVSBluetoothManager sharedInstance](&OBJC_CLASS___TVSBluetoothManager, "sharedInstance"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 pairedDevices]);

  [WeakRetained _updateMyDevicesWithSet:v6];
}

void sub_100009898(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100009948;
  v5[3] = &unk_10018E568;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v4 = v3;
  id v6 = v4;
  BSDispatchMain(v5);

  objc_destroyWeak(&v7);
}

void sub_100009934(_Unwind_Exception *a1)
{
}

void sub_100009948(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pairedCUDevices]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) addressString]);
  [v2 removeObjectForKey:v3];

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[TVSBluetoothManager sharedInstance](&OBJC_CLASS___TVSBluetoothManager, "sharedInstance"));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 pairedDevices]);

  [WeakRetained _updateMyDevicesWithSet:v5];
}

void sub_100009B88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

BOOL sub_100009BA4(uint64_t a1, void *a2)
{
  if ([a2 type] != (id)1) {
    return 0LL;
  }
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8LL);
  uint64_t v4 = *(void *)(v3 + 24);
  *(void *)(v3 + 24) = v4 + 1;
  return v4 == 0;
}

BOOL sub_100009CD4(uint64_t a1, void *a2)
{
  v2 = *(void **)(*(void *)(a1 + 32) + 88LL);
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKey:v4]);

  id v6 = [v3 type];
  BOOL v7 = v6 != (id)1 && ([v5 deviceFlags] & 0x10) == 0;

  return v7;
}

LABEL_15:
  if (self->_hasPairedDoAPDevice != (v9 & 1)) {
    -[TVSettingsBluetoothFacade setHasPairedDoAPDevice:](self, "setHasPairedDoAPDevice:");
  }
  if (self->_hasPairedJSDevice != (v7 & 1)) {
    -[TVSettingsBluetoothFacade setHasPairedJSDevice:](self, "setHasPairedJSDevice:");
  }
  if (self->_hasPairedDoAPOnlyDevice != (v8 & 1)) {
    -[TVSettingsBluetoothFacade setHasPairedDoAPOnlyDevice:](self, "setHasPairedDoAPOnlyDevice:");
  }
}

  if (!v15 && (v12 & 1) == 0)
  {
    *p_developerBundleLoader = 0LL;

    -[TVSettingsMainViewController reloadSettingsIfNeeded](self, "reloadSettingsIfNeeded");
  }

    id v17 = sub_10005E4A0();
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = *(_DWORD *)(a1 + 48);
      uint64_t v19 = sub_10005F02C(v18);
      uint64_t v20 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 67109634;
      *(_DWORD *)uint64_t v25 = v18;
      *(_WORD *)&v25[4] = 2082;
      *(void *)&v25[6] = v19;
      v26 = 2048;
      uint64_t v27 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Prox repair unhandled session event. {event=%d-%{public}s, self=%p}",  buf,  0x1Cu);
    }

  return (NSURL *)v9;
}
}
}

id sub_10000A1A8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _managerDidUpdate:0];
}

LABEL_12:
  return (char)v4;
}

  return (char)v6;
}

  v11 = (void *)objc_claimAutoreleasedReturnValue([v9 localizedStringWithUnits:1 value:v10]);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v5, v8, v11));

LABEL_13:
  return v12;
}

    if ((PBSDisplayRefreshRateEqualToRefreshRate(-[PBSDisplayMode refreshRate](self, "refreshRate")) & 1) == 0
      && (PBSDisplayRefreshRateEqualToRefreshRate(-[PBSDisplayMode refreshRate](self, "refreshRate")) & 1) == 0)
    {
      -[PBSDisplayMode refreshRate](self, "refreshRate");
      LOBYTE(v13) = v14 >= 49.9;
      return v13;
    }

    goto LABEL_14;
  }

  if ((v7 & 1) != 0) {
    goto LABEL_12;
  }
  -[PBSDisplayMode resolution](self, "resolution");
  if ((PBSDisplayResolutionIs720p(v9, v10) & 1) != 0) {
    goto LABEL_12;
  }
  -[PBSDisplayMode resolution](self, "resolution");
  v13 = PBSDisplayResolutionIs480p(v11, v12);
  if (v13) {
    goto LABEL_12;
  }
  return v13;
}
}

    if ([v5 length]) {
      v11 = (NSString *)[v5 copy];
    }
    else {
      v11 = self->_photoCollectionGroupName;
    }
    v12 = self->_photoCollectionGroupIdentifier;
    self->_photoCollectionGroupIdentifier = v11;

    photoCollectionGroupIdentifier = self->_photoCollectionGroupIdentifier;
  }

  return photoCollectionGroupIdentifier;
}
  }

  return self->_photoCollectionGroupProviderInfo;
}

void sub_10000AD78(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 representedObject]);
  id v5 = [v4 unsignedIntegerValue];

  objc_msgSend(v3, "setAccessoryTypes:", 2 * (v5 == objc_msgSend(*(id *)(a1 + 32), "voiceTriggerPhraseType")));
  id v6 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localizedDescriptionForVoiceTriggerPhraseType:v5]);
  [v3 setLocalizedDescription:v6];
}

id sub_10000B134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  0LL,  0LL,  a3,  0LL,  *(void *)(a1 + 32),  "_didSelectHomeItem:"));
  [v3 setAccessoryTypes:1];
  [v3 setUpdateBlock:&stru_10018E648];
  return v3;
}

void sub_10000B19C(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v5 = (id)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v3, "representedObject"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v5 name]);
  -[TSKSettingItem setLocalizedTitle:](v3, "setLocalizedTitle:", v4);
}

void sub_10000B674( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_10000B6B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 lastPathComponent]);
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472LL;
  v11 = sub_10000B7D8;
  v12 = &unk_10018E698;
  id v5 = v3;
  id v13 = v5;
  objc_copyWeak(&v14, (id *)(a1 + 32));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v4,  0LL,  0LL,  0LL,  &v9));

  objc_msgSend(v6, "setShouldPresentChildController:", 0, v9, v10, v11, v12);
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v5 lastPathComponent]);
  [v6 setDeepLinkKey:v7];

  objc_destroyWeak(&v14);
  return v6;
}

void sub_10000B7C0(_Unwind_Exception *a1)
{
}

TVSettingsPrivacyLogFileViewController *sub_10000B7D8(uint64_t a1)
{
  v2 = objc_alloc_init(&OBJC_CLASS___TVSettingsPrivacyLogFileViewController);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) lastPathComponent]);
  -[TVSettingsPrivacyLogFileViewController setTitle:](v2, "setTitle:", v3);

  -[TVSettingsPrivacyLogFileViewController setLogPath:](v2, "setLogPath:", *(void *)(a1 + 32));
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained logsFacade]);
  -[TVSettingsPrivacyLogFileViewController setLogsFacade:](v2, "setLogsFacade:", v5);

  -[TVSettingsPrivacyLogFileViewController setAllowViewing:]( v2,  "setAllowViewing:",  +[TVSettingsDiagnosticLogsFacade filePathIsSysdiagnose:]( &OBJC_CLASS___TVSettingsDiagnosticLogsFacade,  "filePathIsSysdiagnose:",  *(void *)(a1 + 32)) ^ 1);
  return v2;
}

TSKSettingItem *__cdecl sub_10000B9D0(id a1, TSKListSettingGroup *a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsTCCInfo);
  id v5 = v3;
  id v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      BOOL v7 = v6;
    }
    else {
      BOOL v7 = 0LL;
    }
  }

  else
  {
    BOOL v7 = 0LL;
  }

  id v8 = v7;

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 displayName]);
  uint64_t v10 = TSKLocString(@"PrivacyAllowAccess");
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = TSKLocString(@"PrivacyDenyAccess");
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v9,  0LL,  v8,  @"allowAccess",  v11,  v13));

  return (TSKSettingItem *)v14;
}

void sub_10000BF34(uint64_t a1, void *a2)
{
  v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "locationServicesEnabled") ^ 1);
}

id sub_10000BF78(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 title]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 explanatoryText]);
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v4 allowedAccessTypes]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem multiValueItemWithTitle:description:representedObject:keyPath:availableValues:]( &OBJC_CLASS___TSKSettingItem,  "multiValueItemWithTitle:description:representedObject:keyPath:availableValues:",  v5,  v6,  v4,  @"accessType",  v7));

  [v8 setUpdateBlock:*(void *)(a1 + 40)];
  [v8 setLocalizedValueFormatter:*(void *)(a1 + 32)];
  return v8;
}

void sub_10000C1A0(id a1, UIAlertAction *a2)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[TVSettingsLocationServicesFacade sharedInstance]( &OBJC_CLASS___TVSettingsLocationServicesFacade,  "sharedInstance"));
  [v2 setLocationServicesEnabled:0];
}

void sub_10000C1D8(id a1, UIAlertAction *a2)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[TVSettingsLocationServicesFacade sharedInstance]( &OBJC_CLASS___TVSettingsLocationServicesFacade,  "sharedInstance"));
  [v2 setLocationServicesEnabled:1];
}

void sub_10000C284(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1001E1580;
  qword_1001E1580 = (uint64_t)v1;
}

void sub_10000C3A4(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (!v2)
  {
    id v5 = (objc_class *)objc_opt_class(&OBJC_CLASS___TVSettingsSystemPairingsFacade);
    id v6 = NSStringFromClass(v5);
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Value for '%@' was unexpectedly nil. Expected %@.",  @"(__bridge id)observer",  v7));

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000F64CC();
    }
LABEL_11:
    _bs_set_crash_log_message([v8 UTF8String]);
    __break(0);
    JUMPOUT(0x10000C4B0LL);
  }

  id v3 = v2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsSystemPairingsFacade);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) == 0)
  {
    uint64_t v9 = (objc_class *)[v3 classForCoder];
    if (!v9) {
      uint64_t v9 = (objc_class *)objc_opt_class(v3);
    }
    uint64_t v10 = NSStringFromClass(v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    uint64_t v12 = (objc_class *)objc_opt_class(&OBJC_CLASS___TVSettingsSystemPairingsFacade);
    id v13 = NSStringFromClass(v12);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Value for '%@' was of unexpected class %@. Expected %@.",  @"(__bridge id)observer",  v11,  v14));

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000F64CC();
    }
    goto LABEL_11;
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10000D8DC;
  block[3] = &unk_10018E7A8;
  block[4] = v3;
  dispatch_async(&_dispatch_main_q, block);
}

void sub_10000C7F0(_Unwind_Exception *a1)
{
}

void sub_10000C858(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _queryPairedPeers];
}

void sub_10000C884(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _destroyPairingManager];
}

void sub_10000C8B0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (id *)(a1 + 32);
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _peerAdded:v5 options:a3];
}

void sub_10000C908(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (id *)(a1 + 32);
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _peerRemoved:v5 options:a3];
}

void sub_10000C960(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (id *)(a1 + 32);
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _peerChanged:v5 options:a3];
}

void sub_10000CA88(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v6 = a3;
  if (v6)
  {
    if (_TVSLogInternalLogLevel >= 3)
    {
      uint64_t v7 = TVSSystemLog;
      pthread_main_np();
      pthread_self();
      _TVSLogBase(v3, &_os_log_default, 65LL, 0LL, 3LL, v7);
    }
  }

  else
  {
    [*(id *)(a1 + 32) _updateFromCoreUtilsPairedPeers:v8 isDevice:1];
  }
}

void sub_10000CB5C(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v6 = a3;
  if (v6)
  {
    if (_TVSLogInternalLogLevel >= 3)
    {
      uint64_t v7 = TVSSystemLog;
      pthread_main_np();
      pthread_self();
      _TVSLogBase(v3, &_os_log_default, 65LL, 0LL, 3LL, v7);
    }
  }

  else
  {
    [*(id *)(a1 + 32) _updateFromCoreUtilsPairedPeers:v8 isDevice:0];
  }
}

void sub_10000CC30(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v6 = a3;
  if (v6)
  {
    if (_TVSLogInternalLogLevel >= 3)
    {
      uint64_t v7 = TVSSystemLog;
      pthread_main_np();
      pthread_self();
      _TVSLogBase(v3, &_os_log_default, 65LL, 0LL, 3LL, v7);
    }
  }

  else
  {
    [*(id *)(a1 + 32) _updateFromRemotePairingPairedHosts:v8];
  }
}

LABEL_9:
}

    -[TVSettingsResolutionViewController reloadSettingsIfNeeded](self, "reloadSettingsIfNeeded");
    goto LABEL_10;
  }

  if (off_1001DF280 == a6)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v17 = (id)objc_opt_class(self);
      uint64_t v18 = 2112;
      uint64_t v19 = v12;
      id v13 = v17;
      id v14 = "RES: %@: Received KVO notification for user visible sorted display modes. change=%@";
      goto LABEL_8;
    }

    goto LABEL_9;
  }

  v15.receiver = self;
  v15.super_class = (Class)&OBJC_CLASS___TVSettingsResolutionViewController;
  -[TVSettingsResolutionViewController observeValueForKeyPath:ofObject:change:context:]( &v15,  "observeValueForKeyPath:ofObject:change:context:",  v10,  v11,  v12,  a6);
LABEL_10:
}

    v11 = 0;
    goto LABEL_10;
  }

  -[TVSettingsDiagnosticLogsFacade _workQueue_loadLogs](self, "_workQueue_loadLogs");
  v11 = 1;
LABEL_10:

  return v11;
}
}

      uint64_t v24 = -1LL;
      goto LABEL_10;
    }
  }

          goto LABEL_12;
        }
      }

      else
      {
      }

      id v13 = objc_alloc_init(&OBJC_CLASS____TtC10TVSettings28TVSettingsUserErrorPresenter);
      id v14 = (void *)objc_claimAutoreleasedReturnValue( -[TVSettingsUserErrorPresenter addUserFailedAlertForError:]( v13,  "addUserFailedAlertForError:",  v5));

      [v7 presentViewController:v14 animated:1 completion:0];
      goto LABEL_12;
    }

    uint64_t v12 = sub_100097028();
    v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1000FA640();
    }
    goto LABEL_9;
  }

  (*(void (**)(void))(a1[6] + 16LL))();
}

      sub_1000F0924(v1);
      swift_release_n(v1, 2LL);
      return;
    }

    v11 = v8;
  }

  else if (!v10)
  {
    goto LABEL_9;
  }

  swift_release(v1);

LABEL_12:
  id v14 = swift_unknownObjectWeakLoadStrong(v2, v5);
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    v18[4] = sub_1000F1228;
    uint64_t v19 = v1;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256LL;
    v18[2] = sub_1000F1AD8;
    v18[3] = &unk_100195770;
    uint64_t v16 = _Block_copy(v18);
    id v17 = v19;
    swift_retain(v1);
    swift_release(v17);
    [v15 dismissViewControllerAnimated:1 completion:v16];
    swift_release(v1);
    _Block_release(v16);
  }

  else
  {
    swift_release(v1);
  }

id sub_10000CEF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  return [*(id *)(a1 + 32) _queryPairedPeers];
}

id sub_10000CF24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  return [*(id *)(a1 + 32) _queryPairedPeers];
}

void sub_10000CF54(uint64_t a1, void *a2)
{
  id v14 = a2;
  if (v14 && _TVSLogInternalLogLevel >= 3)
  {
    uint64_t v7 = TVSSystemLog;
    if (pthread_main_np()) {
      id v8 = @"Main:";
    }
    else {
      id v8 = &stru_100195DD8;
    }
    uint64_t v12 = v7;
    id v13 = v14;
    uint64_t v10 = v8;
    pthread_t v11 = pthread_self();
    _TVSLogBase(v2, &_os_log_default, 65LL, 0LL, 3LL, v7);
  }

  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v9, v4, v5, v6);
  }
  objc_msgSend(*(id *)(a1 + 32), "_queryPairedPeers", v10, v11, v12, v13);
}

uint64_t sub_10000D0F8(uint64_t a1, void *a2)
{
  if (a2 && _TVSLogInternalLogLevel >= 3)
  {
    uint64_t v4 = TVSSystemLog;
    id v5 = a2;
    pthread_main_np();
    pthread_self();
    _TVSLogBase( v2,  &_os_log_default,  65LL,  0LL,  3LL,  v4,  @"#T:[%@%p] #Error #%@ : Failed to retrieve per account pairings. [%@] ");
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

int64_t sub_10000D424(id a1, TVSettingsSystemPairingsPairing *a2, TVSettingsSystemPairingsPairing *a3)
{
  uint64_t v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsSystemPairingsPairing displayName](a2, "displayName"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsSystemPairingsPairing displayName](v4, "displayName"));

  id v7 = [v5 localizedCompare:v6];
  return (int64_t)v7;
}

id sub_10000D8DC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) remotePairingPairedHostsChanged];
}

  ;
}

void sub_10000D904( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

void sub_10000DDC8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10000DDF8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10000DEDC;
  v9[3] = &unk_10018E940;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  objc_copyWeak(&v13, (id *)(a1 + 40));
  id v10 = v5;
  id v11 = v6;
  id v7 = v6;
  id v8 = v5;
  dispatch_async(&_dispatch_main_q, v9);

  objc_destroyWeak(&v13);
  objc_destroyWeak(&v12);
}

void sub_10000DEDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v2 = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained && v2)
  {
    if (*(void *)(a1 + 32)) {
      objc_msgSend(WeakRetained, "_imageProxyDidLoad:withImage:", v2);
    }
    else {
      [WeakRetained _imageProxyDidFail:v2 withError:*(void *)(a1 + 40)];
    }
  }
}

void sub_10000E4E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, id location)
{
}

void sub_10000E55C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = v3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained dataSource]);
  uint64_t v7 = TSKLocString(@"WHAInHomeSectionTitleFragment");
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v6 home]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 name]);
  uint64_t v11 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v8, v10));

  uint64_t v21 = (void *)v11;
  [v5 setLocalizedTitle:v11];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  uint64_t v22 = v6;
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v6 existingRooms]);
  id v14 = [v13 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v24;
    do
    {
      for (i = 0LL; i != v15; i = (char *)i + 1)
      {
        if (*(void *)v24 != v16) {
          objc_enumerationMutation(v13);
        }
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  0LL,  0LL,  *(void *)(*((void *)&v23 + 1) + 8LL * (void)i),  0LL,  WeakRetained,  "_didSelectExistingRoomItem:"));
        [v18 setUpdateBlock:&stru_10018E988];
        [v12 addObject:v18];
      }

      id v15 = [v13 countByEnumeratingWithState:&v23 objects:v27 count:16];
    }

    while (v15);
  }

  [v5 setSettingItems:v12];
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v22 existingRooms]);
  id v20 = [v19 count];

  [v5 setHidden:v20 == 0];
}

void sub_10000E7B8(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v5 = (id)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v3, "representedObject"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v5 name]);
  -[TSKSettingItem setLocalizedTitle:](v3, "setLocalizedTitle:", v4);
}

void sub_10000E810(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v20 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v22 = v5;
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained dataSource]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v21 suggestedRoomNames]);
  id v9 = [v8 countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (v9)
  {
    uint64_t v10 = *(void *)v26;
    do
    {
      for (i = 0LL; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v26 != v10) {
          objc_enumerationMutation(v8);
        }
        id v12 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  *(void *)(*((void *)&v25 + 1) + 8LL * (void)i),  0LL,  *(void *)(*((void *)&v25 + 1) + 8LL * (void)i),  0LL,  WeakRetained,  "_didSelectSuggestedRoomItem:"));
        [v7 addObject:v12];
      }

      id v9 = [v8 countByEnumeratingWithState:&v25 objects:v29 count:16];
    }

    while (v9);
  }

  uint64_t v13 = TSKLocString(@"WHARoomOtherTitle");
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472LL;
  v23[2] = sub_10000EAE8;
  v23[3] = &unk_10018E9D8;
  objc_copyWeak(&v24, (id *)(a1 + 32));
  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v14,  0LL,  0LL,  0LL,  v23));

  [v15 setAccessoryTypes:0];
  [v7 addObject:v15];
  [v22 setSettingItems:v7];
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v21 existingRooms]);
  id v17 = [v16 count];

  if (v17)
  {
    uint64_t v18 = TSKLocString(@"WHASuggestedRoomsSectionTitle");
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  }

  else
  {
    uint64_t v19 = 0LL;
  }

  [v22 setLocalizedTitle:v19];

  objc_destroyWeak(&v24);
}

void sub_10000EAC0(_Unwind_Exception *a1)
{
}

id sub_10000EAE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _makeAddNewRoomViewController]);

  return v2;
}

void sub_10000EB20(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained dataSource]);
  objc_msgSend(v3, "setHidden:", objc_msgSend(v4, "canBeRemovedFromHome") ^ 1);
}

id sub_10000EDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = TVCSHomeLog(a1, a2);
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 136315138;
    uint64_t v7 = "-[TVSettingsWholeHomeAudioRoomPickerViewController _didSelectExistingRoomItem:]_block_invoke";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%s: Room picker did select existing room.",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 32) _moveOrAddLocalAccessoryToRoom:*(void *)(a1 + 40) inHome:*(void *)(a1 + 48)];
}

void sub_10000EEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = TVCSHomeLog(a1, a2);
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 136315138;
    uint64_t v10 = "-[TVSettingsWholeHomeAudioRoomPickerViewController _didSelectSuggestedRoomItem:]_block_invoke";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%s: Room picker did select suggested room.",  (uint8_t *)&v9,  0xCu);
  }

  id v5 = *(void **)(a1 + 32);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) representedObject]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dataSource]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 home]);
  [v5 _moveOrAddLocalAccessoryToRoomWithName:v6 inHome:v8];
}

void sub_10000F118(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  int v6 = *(void **)(a1 + 32);
  if (a2)
  {
    objc_msgSend(v6, "__moveOrAddLocalAccessoryToRoomWithName:inHome:", *(void *)(a1 + 40), a2);
  }

  else
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 delegate]);
    uint64_t v9 = TVCSHomeLog(v7, v8);
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1000F6568();
    }

    [v7 roomPickerViewControllerDidFinish:*(void *)(a1 + 32)];
  }
}

void sub_10000F2E8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v7 = v5;
  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "__moveOrAddLocalAccessoryToRoom:inHome:", a2, *(void *)(a1 + 40));
  }

  else
  {
    uint64_t v8 = TVCSHomeLog(v5, v6);
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1000F65D4();
    }

    [*(id *)(a1 + 32) _presentCreateRoomFailedViewControllerWithError:v7];
  }
}

void sub_10000F4A4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void **)(a1 + 32);
  if (a2)
  {
    objc_msgSend(v6, "__moveOrAddLocalAccessoryToRoom:inHome:", *(void *)(a1 + 40), a2);
  }

  else
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 delegate]);
    uint64_t v9 = TVCSHomeLog(v7, v8);
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1000F6640();
    }

    [v7 roomPickerViewControllerDidFinish:*(void *)(a1 + 32)];
  }
}

void sub_10000F73C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  uint64_t v6 = TVCSHomeLog(v4, v5);
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = v7;
  if (v3)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000F66AC();
    }
LABEL_10:

    goto LABEL_11;
  }

  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v19 = "-[TVSettingsWholeHomeAudioRoomPickerViewController __moveOrAddLocalAccessoryToRoom:inHome:]_block_invoke";
    __int16 v20 = 2048;
    uint64_t v21 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%s: Configure local accessory complete. {delegate=%p}",  buf,  0x16u);
  }

  if (*(_BYTE *)(a1 + 48))
  {
    uint64_t v11 = TVCSHomeLog(v9, v10);
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Updating device name because device and room name matched before room change",  buf,  2u);
    }

    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) name]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 localAccessory]);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_10000F928;
    v16[3] = &unk_10018EAA0;
    id v17 = v13;
    uint64_t v8 = v13;
    [v15 setConfiguredName:v8 completionHandler:v16];

    goto LABEL_10;
  }

void sub_10000F928(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = v3;
  if (v3)
  {
    uint64_t v6 = TVCSHomeLog(v3, v4);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000F6718();
    }
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsDeviceFacade sharedInstance](&OBJC_CLASS___TVSettingsDeviceFacade, "sharedInstance"));
    [v8 setName:*(void *)(a1 + 32)];
  }
}

id sub_10000FA10(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "__removeLocalAccessoryFromHome");
}

void sub_10000FB10(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v7 = v5;
  if (a2)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    uint64_t v10 = TVCSHomeLog(v8, v9);
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = 136315394;
      id v15 = "-[TVSettingsWholeHomeAudioRoomPickerViewController __removeLocalAccessoryFromHome]_block_invoke";
      __int16 v16 = 2048;
      id v17 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%s: Removed local accessory from home. {delegate=%p}",  (uint8_t *)&v14,  0x16u);
    }

    [v8 roomPickerViewControllerDidFinish:*(void *)(a1 + 32)];
  }

  else
  {
    uint64_t v12 = TVCSHomeLog(v5, v6);
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_1000F6784();
    }

    [*(id *)(a1 + 32) _showAccessoryRemoveFailed];
  }
}

void sub_10001000C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = TVCSHomeLog(a1, a2);
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 136315138;
    uint64_t v10 = "-[TVSettingsWholeHomeAudioRoomPickerViewController editingController:didProvideValue:forSettingItem:]_block_invoke";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%s: Room picker did add new room.",  (uint8_t *)&v9,  0xCu);
  }

  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 dataSource]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 home]);
  [v6 _moveOrAddLocalAccessoryToRoomWithName:v5 inHome:v8];
}

void sub_100010194(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

void sub_1000101A8( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

void sub_100010500(_Unwind_Exception *a1)
{
}

void sub_10001051C(id a1, PBSDisplayManagerUpdateRequest *a2)
{
}

void sub_100010528(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = (id *)(a1 + 40);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localizedDisplayString]);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_10001064C;
    v9[3] = &unk_10018E810;
    objc_copyWeak(&v10, v4);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsUnsupportedResolutionViewController unsupportedResolutionViewControllerWithModeName:completionHandler:]( &OBJC_CLASS___TVSettingsUnsupportedResolutionViewController,  "unsupportedResolutionViewControllerWithModeName:completionHandler:",  v6,  v9));
    [WeakRetained setRecoveryController:v7];
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
    [v8 presentViewController:v7 animated:1 completion:&stru_10018EB50];

    objc_destroyWeak(&v10);
  }
}

void sub_100010634(_Unwind_Exception *a1)
{
}

void sub_10001064C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setRecoveryController:0];
  [WeakRetained reloadSettings];
}

id sub_100010C08(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[PBSDisplayManager marketNameDisplayResolutionFormatterWithRefreshRate:]( &OBJC_CLASS___PBSDisplayManager,  "marketNameDisplayResolutionFormatterWithRefreshRate:",  0LL));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 stringForObjectValue:v4]);

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  0LL,  v4,  0LL,  WeakRetained,  "_selectedItem:"));

  [v8 setUpdateBlock:&stru_10018EB98];
  return v8;
}

void sub_100010CC4(id a1, TSKSettingItem *a2, id a3)
{
  id v15 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v15, "representedObject"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBSDisplayManager sharedInstance](&OBJC_CLASS___PBSDisplayManager, "sharedInstance"));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 currentDisplayMode]);

  else {
    uint64_t v6 = 0LL;
  }
  -[TSKSettingItem setAccessoryTypes:](v15, "setAccessoryTypes:", v6);
  [v3 refreshRate];
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
  if (!PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
  {
    if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
    {
      uint64_t v8 = @"AVDisplayModeRefreshRateDescriptionNTSC60";
      goto LABEL_11;
    }

    if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
    {
      uint64_t v8 = @"AVDisplayModeRefreshRateDescriptionPAL50";
      goto LABEL_11;
    }

    if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
    {
      uint64_t v8 = @"AVDisplayModeRefreshRateDescriptionNTSC30Exact";
      int v9 = &off_1001ACBA0;
      uint64_t v11 = &off_1001ACB88;
      id v10 = v7;
      goto LABEL_13;
    }

    if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
    {
      uint64_t v8 = @"AVDisplayModeRefreshRateDescriptionNTSC30";
      uint64_t v11 = &off_1001AF5E0;
    }

    else
    {
      if (!PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
      {
        if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
        {
          uint64_t v8 = @"AVDisplayModeRefreshRateDescriptionFilm24Exact";
          int v9 = &off_1001ACBD0;
          goto LABEL_6;
        }

        else {
          uint64_t v8 = @"AVDisplayModeRefreshRateDescriptionFormat";
        }
LABEL_11:
        id v10 = v7;
        int v9 = 0LL;
        goto LABEL_12;
      }

      uint64_t v8 = @"AVDisplayModeRefreshRateDescriptionPAL25";
      uint64_t v11 = &off_1001ACBB8;
    }

    id v10 = v7;
    int v9 = 0LL;
    goto LABEL_13;
  }

  uint64_t v8 = @"AVDisplayModeRefreshRateDescriptionNTSC60Exact";
  int v9 = &off_1001ACB88;
LABEL_6:
  id v10 = v7;
LABEL_12:
  uint64_t v11 = 0LL;
LABEL_13:
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[PBSDisplayManager localizedStringWithKey:refreshRate:frameRate:referenceRefreshRate:]( &OBJC_CLASS___PBSDisplayManager,  "localizedStringWithKey:refreshRate:frameRate:referenceRefreshRate:",  v8,  v10,  v9,  v11));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[PBSDisplayManager refreshRateFormatter](&OBJC_CLASS___PBSDisplayManager, "refreshRateFormatter"));
  int v14 = (void *)objc_claimAutoreleasedReturnValue([v13 stringForObjectValue:v3]);
  -[TSKSettingItem setLocalizedValue:](v15, "setLocalizedValue:", v14);

  -[TSKSettingItem setLocalizedDescription:](v15, "setLocalizedDescription:", v12);
}

TSKSettingItem *__cdecl sub_100012C20(id a1, TSKListSettingGroup *a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsTCCInfo);
  id v5 = v3;
  uint64_t v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0LL;
    }
  }

  else
  {
    uint64_t v7 = 0LL;
  }

  id v8 = v7;

  int v9 = (void *)objc_claimAutoreleasedReturnValue([v8 displayName]);
  uint64_t v10 = TSKLocString(@"PrivacyAllowAccess");
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = TSKLocString(@"PrivacyDenyAccess");
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  int v14 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v9,  0LL,  v8,  @"allowAccess",  v11,  v13));

  return (TSKSettingItem *)v14;
}

void sub_1000133D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000133EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    [WeakRetained _startTimer];
    [WeakRetained _loadNextImage:WeakRetained[7]];
  }

  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v1 postNotificationName:off_1001DF288 object:WeakRetained];
}

id sub_100013720(uint64_t a1)
{
  return [*(id *)(a1 + 40) setAlpha:0.0];
}

id sub_100013750(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_100013C78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_100013C9C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned int v6 = [v4 isPeopleCategory];
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedName]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedDescription]);
  if (v6)
  {
    int v9 = *(void **)(a1 + 32);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 availablePortraitClockCategoryFilters]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem multiValueItemWithTitle:description:representedObject:keyPath:availableValues:]( &OBJC_CLASS___TSKSettingItem,  "multiValueItemWithTitle:description:representedObject:keyPath:availableValues:",  v7,  v8,  v9,  @"portraitClockPeopleFilter",  v10));

    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) portraitClockPreviewViewController]);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_100013E58;
    v16[3] = &unk_10018EC30;
    id v17 = v12;
    id v13 = v12;
    [v11 setChildControllerBlock:v16];
    id v14 = [[TVSBlockFormatter alloc] initWithFormattingBlock:&stru_10018EC70];
    [v11 setLocalizedValueFormatter:v14];

    [WeakRetained setPeopleFilterItem:v11];
  }

  else
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v7,  v8,  v4,  @"isActive",  *(void *)(a1 + 40),  "_didSelectOptionItem:"));

    [v11 setUpdateBlock:&stru_10018EC90];
  }

  return v11;
}

id sub_100013E58(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsAmbientMultiValuePreviewViewController multiValueControllerWithSettingItem:]( &OBJC_CLASS___TVSettingsAmbientMultiValuePreviewViewController,  "multiValueControllerWithSettingItem:",  a2));
  [v3 setPreviewViewController:*(void *)(a1 + 32)];
  return v3;
}

NSString *__cdecl sub_100013E98(id a1, NSString *a2)
{
  return (NSString *)TSKLocString(a2);
}

void sub_100013EA0(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  uint64_t v4 = TSKLocString(@"SaverBackdropThemeShow");
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = TSKLocString(@"SaverBackdropThemeHide");
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = (id)objc_claimAutoreleasedReturnValue( +[TSKBoolFormatter formatterWithOnTitle:offTitle:]( &OBJC_CLASS___TSKBoolFormatter,  "formatterWithOnTitle:offTitle:",  v5,  v7));

  -[TSKSettingItem setLocalizedValueFormatter:](v3, "setLocalizedValueFormatter:", v8);
  -[TSKSettingItem setAvailableValues:](v3, "setAvailableValues:", &off_1001AEA88);
}

id sub_10001416C(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsAmbientMultiValuePreviewViewController multiValueControllerWithSettingItem:]( &OBJC_CLASS___TVSettingsAmbientMultiValuePreviewViewController,  "multiValueControllerWithSettingItem:",  a2));
  [v3 setPreviewViewController:*(void *)(a1 + 32)];
  return v3;
}

void sub_1000141AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v10 = (id)objc_opt_new(&OBJC_CLASS___NSDateComponents, v7);
  id v8 = [v5 integerValue];

  [v10 setSecond:v8];
  int v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stringFromDateComponents:v10]);
  [v6 setLocalizedValue:v9];
}

void sub_1000146E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_100014710(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _localizedTitleForPhotoCollectionGroup:v4]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 photoCollections]);
  id v8 = [v7 count];

  if (v8)
  {
    int v9 = (void *)objc_claimAutoreleasedReturnValue([v4 photoCollections]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 firstObject]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 providerInfo]);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 objectForKeyedSubscript:PBScreensaverProvidesSettingsUI]);

    if (v12)
    {
      id v13 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  0LL,  v4,  0LL,  WeakRetained,  "_launchAppForSettingItem:"));
      [v13 setAccessoryTypes:1];
    }

    else
    {
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472LL;
      v16[2] = sub_1000148CC;
      v16[3] = &unk_10018EC30;
      void v16[4] = WeakRetained;
      id v14 = objc_retainBlock(v16);
      id v13 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v6,  0LL,  v4,  0LL,  v14));
    }
  }

  else
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  0LL,  v4,  0LL,  WeakRetained,  "_didSelectSettingItem:"));
  }

  return v13;
}

TVSettingsPhotoCollectionGroupViewController *sub_1000148CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___TVSettingsPhotoCollectionGroupViewController);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 representedObject]);

  id v6 = -[TVSettingsPhotoCollectionGroupViewController initWithPhotoCollectionGroup:]( v4,  "initWithPhotoCollectionGroup:",  v5);
  -[TVSettingsPhotoCollectionGroupViewController setDelegate:](v6, "setDelegate:", *(void *)(a1 + 32));
  return v6;
}

void sub_100014E78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_100014EA0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 displayName]);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  0LL,  v4,  @"isSelected",  WeakRetained,  "_setNumberingSystem:"));

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 localeIdentifier]);
  [v7 setIdentifier:v8];

  [v7 setUpdateBlock:&stru_10018ED20];
  return v7;
}

void sub_100014F5C(id a1, TSKSettingItem *a2, NSNumber *a3)
{
  id v4 = a3;
  id v6 = a2;
  -[TSKSettingItem setLocalizedValue:](v6, "setLocalizedValue:", 0LL);
  LODWORD(a2) = -[NSNumber BOOLValue](v4, "BOOLValue");

  if ((_DWORD)a2) {
    uint64_t v5 = 2LL;
  }
  else {
    uint64_t v5 = 0LL;
  }
  -[TSKSettingItem setAccessoryTypes:](v6, "setAccessoryTypes:", v5);
}

void sub_1000151AC( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

uint64_t sub_1000151EC()
{
  return objc_opt_class(v0);
}

void sub_100015710(uint64_t a1, void *a2)
{
  id v14 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
  unsigned int v4 = [v3 odeonEnabled];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
  unsigned int v6 = [v5 odeonSupportsAtmos];

  [v14 setEnabled:v4 ^ 1];
  if ([*(id *)(a1 + 32) atmosAvailable])
  {
    if (v4)
    {
      uint64_t v7 = @"AVSurroundOdeonDolbyAtmosDisabledDescription";
      id v8 = @"AVSurroundOdeonDolbyAtmosEnabledDescription";
      BOOL v9 = v6 == 0;
    }

    else
    {
      unsigned int v11 = [*(id *)(a1 + 32) atmosEnabled];
      uint64_t v7 = @"AVSurroundDolbyAtmosDisabledDescription";
      id v8 = @"AVSurroundDolbyAtmosEnabledDescription";
      BOOL v9 = v11 == 0;
    }

    if (v9) {
      id v10 = v7;
    }
    else {
      id v10 = v8;
    }
  }

  else
  {
    id v10 = @"AVSurroundConvertFormatDescription";
    if ([*(id *)(a1 + 40) audioOutputFormat] != (id)1
      && [*(id *)(a1 + 40) audioOutputFormat])
    {
      id v10 = @"AVSurroundNoConvertFormatDescription";
    }
  }

  uint64_t v12 = TSKLocString(v10);
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  [v14 setLocalizedDescription:v13];
}

void sub_10001582C(uint64_t a1, void *a2)
{
  id v12 = a2;
  if ([*(id *)(a1 + 32) audioOutputFormat] == (id)2
    || [*(id *)(a1 + 32) audioOutputFormat] == (id)3)
  {
    [v12 setHidden:1];
  }

  else
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
    objc_msgSend(v12, "setHidden:", objc_msgSend(v3, "odeonEnabled"));
  }

  if ([*(id *)(a1 + 32) audioOutputFormat] == (id)1)
  {
    unsigned int v4 = [*(id *)(a1 + 40) atmosAvailable];
    uint64_t v5 = @"AVSurroundNewFormatDolbyDescription";
    unsigned int v6 = @"AVSurroundNewFormatDolbyWithAtmosAvailableDescription";
  }

  else
  {
    id v7 = [*(id *)(a1 + 32) audioOutputFormat];
    id v8 = v12;
    if (v7) {
      goto LABEL_13;
    }
    unsigned int v4 = [*(id *)(a1 + 40) atmosAvailable];
    uint64_t v5 = @"AVSurroundNewFormatStereoDescription";
    unsigned int v6 = @"AVSurroundNewFormatStereoWithAtmosAvailableDescription";
  }

  if (v4) {
    BOOL v9 = v6;
  }
  else {
    BOOL v9 = v5;
  }
  uint64_t v10 = TSKLocString(v9);
  unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  [v12 setLocalizedDescription:v11];

  id v8 = v12;
LABEL_13:
}

void sub_10001592C(uint64_t a1, void *a2)
{
  id v17 = a2;
  unsigned int v3 = [*(id *)(a1 + 32) atmosAvailable];
  unsigned int v4 = [*(id *)(a1 + 32) audioFormatConversionEnabled] ^ 1;
  unsigned int v5 = [*(id *)(a1 + 32) atmosAvailable] & v4;
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
  unsigned int v7 = [v6 odeonEnabled];

  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
  unsigned int v9 = [v8 odeonSupportsAtmos];

  uint64_t v10 = v3 ^ 1;
  [v17 setHidden:v10];
  v7 ^= 1u;
  [v17 setEnabled:v5 & v7];
  [v17 setLocalizedDescription:0];
  if ((v7 & 1) != 0)
  {
    if ((v10 | v4) != 1)
    {
      id v14 = @"AVSurroundDolbyAtmosAvailableButDisabledDescription";
      goto LABEL_9;
    }

    unsigned int v13 = [*(id *)(a1 + 32) atmosEnabled];
    unsigned int v11 = @"AVSurroundDolbyAtmosOff";
    BOOL v12 = v13 == 0;
  }

  else
  {
    unsigned int v11 = @"AVSurroundDolbyAtmosUnavailableOdeon";
    BOOL v12 = v9 == 0;
  }

  if (v12) {
    id v14 = v11;
  }
  else {
    id v14 = @"AVSurroundDolbyAtmosOn";
  }
LABEL_9:
  uint64_t v15 = TSKLocString(v14);
  __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  [v17 setLocalizedDescription:v16];
}

NSString *__cdecl sub_100015BC8(id a1, NSNumber *a2)
{
  uint64_t v2 = a2;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
  unsigned int v4 = [v3 odeonEnabled];

  if (v4)
  {
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
    unsigned int v6 = [v5 odeonSupportsAtmos];

    if (v6)
    {
      unsigned int v7 = +[NSBundle bundleForClass:]( &OBJC_CLASS___NSBundle,  "bundleForClass:",  objc_opt_class(&OBJC_CLASS___TSKSettingItem));
      id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
      goto LABEL_7;
    }
  }

  else
  {
    unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsAudioVideoFacade sharedInstance]( &OBJC_CLASS___TVSettingsAudioVideoFacade,  "sharedInstance"));
    unsigned int v10 = [v9 audioFormatConversionEnabled];

    if (!v10)
    {
      unsigned int v13 = -[NSNumber BOOLValue](v2, "BOOLValue");
      id v14 = +[NSBundle bundleForClass:]( &OBJC_CLASS___NSBundle,  "bundleForClass:",  objc_opt_class(&OBJC_CLASS___TSKSettingItem));
      id v8 = (void *)objc_claimAutoreleasedReturnValue(v14);
      if (!v13)
      {
        uint64_t v15 = @"SettingsOFF";
        goto LABEL_9;
      }

LABEL_7:
      uint64_t v15 = @"SettingsON";
LABEL_9:
      uint64_t v16 = TSKLocStringFromBundleCachingKey(v15, v8, 0LL, 0LL, @"Localizable");
      BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(v16);

      goto LABEL_10;
    }
  }

  uint64_t v11 = TSKLocString(@"AVSurroundNotAvailable");
  BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
LABEL_10:

  return (NSString *)v12;
}

  return v12;
}
}

  id v24 = 1LL;
LABEL_10:

  return v24;
}

    unsigned int v10 = 0LL;
    goto LABEL_8;
  }

  unsigned int v5 = TSKLocString(@"BluetoothDeviceRequiresFirmwareUpdateDescription");
  unsigned int v6 = objc_claimAutoreleasedReturnValue(v5);
LABEL_6:
  id v8 = (void *)v6;
  unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([v3 name]);
  unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v8, v9));

LABEL_8:
  -[TSKSettingItem setLocalizedDescription:](v11, "setLocalizedDescription:", v10);
}

  __int128 v23 = 3LL;
LABEL_11:
  __int128 v25 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v22, v23));

  __int128 v26 = 0LL;
LABEL_12:
  uint64_t v16 = (_UNKNOWN **)v25;
LABEL_13:
  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"activate"]);
  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v27 stringByRemovingPercentEncoding]);

  if (v28)
  {
    if ([v28 caseInsensitiveCompare:@"true"])
    {
      if ([v28 caseInsensitiveCompare:@"false"]) {
        __int128 v26 = v26;
      }
      else {
        __int128 v26 = 0LL;
      }
    }

    else
    {
      __int128 v26 = 1LL;
    }
  }

  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"animate"]);
  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v29 stringByRemovingPercentEncoding]);

  if ((objc_opt_respondsToSelector(v30, "BOOLValue") & 1) != 0) {
    uint64_t v31 = [v30 BOOLValue];
  }
  else {
    uint64_t v31 = 0LL;
  }
  id v24 = objc_alloc_init(&OBJC_CLASS____TVSettingsOpenURLConfig);
  -[_TVSettingsOpenURLConfig setOriginalURL:](v24, "setOriginalURL:", v6);
  -[_TVSettingsOpenURLConfig setParameters:](v24, "setParameters:", v8);
  -[_TVSettingsOpenURLConfig setParsedPathComponents:](v24, "setParsedPathComponents:", v16);
  -[_TVSettingsOpenURLConfig setShouldActivateLastComponent:](v24, "setShouldActivateLastComponent:", v26);
  -[_TVSettingsOpenURLConfig setShouldAnimateTransition:](v24, "setShouldAnimateTransition:", v31);

  unsigned int v10 = v71;
  id v14 = v72;
  uint64_t v15 = v73;
LABEL_26:

  return v24;
}

  swift_release(v1);
LABEL_22:
  if (qword_1001E0F38 != -1) {
    swift_once(&qword_1001E0F38, sub_1000F4110);
  }
  id v24 = type metadata accessor for Logger(0LL);
  sub_1000F6190(v24, (uint64_t)qword_1001E1340);
  __int128 v25 = v4;
  __int128 v26 = (os_log_s *)Logger.logObject.getter(v25);
  __int128 v27 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v26, v27))
  {
    __int128 v28 = swift_slowAlloc(22LL, -1LL);
    uint64_t v29 = (void ***)swift_slowAlloc(16LL, -1LL);
    *(_DWORD *)__int128 v28 = 138543618;
    uint64_t v30 = (void **)[v25 navigationController];
    uint64_t v31 = v30;
    if (v30) {
      aBlock = v30;
    }
    else {
      aBlock = 0LL;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v39, v28 + 4, v28 + 12);
    *uint64_t v29 = v31;
    *(_WORD *)(v28 + 12) = 2114;
    uint64_t v32 = [v25 navigationController];
    if (v32
      && (uint64_t v33 = v32,
          uint64_t v34 = (void **)[v32 topViewController],
          v33,
          v34))
    {
      aBlock = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v39, v28 + 14, v28 + 22);
    }

    else
    {
      aBlock = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v39, v28 + 14, v28 + 22);
      uint64_t v34 = 0LL;
    }

    v29[1] = v34;

    _os_log_impl( (void *)&_mh_execute_header,  v26,  v27,  "Dimissing, instead of popping, tap to add user. {navigationController=%{public}@, topViewControler=%{public}@}",  (uint8_t *)v28,  0x16u);
    uint64_t v35 = sub_1000ED6E0(&qword_1001E1428);
    swift_arrayDestroy(v29, 2LL, v35);
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  else
  {
  }

  v39[3] = sub_1000F6188;
  uint64_t v40 = v1;
  aBlock = _NSConcreteStackBlock;
  v39[0] = 1107296256LL;
  v39[1] = sub_1000F1AD8;
  v39[2] = &unk_1001959C8;
  uint64_t v36 = _Block_copy(&aBlock);
  uint64_t v37 = v40;
  swift_retain(v1);
  swift_release(v37);
  [v25 dismissViewControllerAnimated:1 completion:v36];

  swift_release(v1);
  _Block_release(v36);
}

void sub_100015EBC(id a1, UIAlertAction *a2)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[TVSettingsAudioVideoFacade sharedInstance](&OBJC_CLASS___TVSettingsAudioVideoFacade, "sharedInstance"));
  [v2 setAudioFormatConversionEnabled:1];
}

void sub_100015F84(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsAppearanceFacade);
  id v2 = (void *)qword_1001E1590;
  qword_1001E1590 = (uint64_t)v1;
}

void sub_1000160B4(uint64_t a1, uint64_t a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472LL;
  v2[2] = sub_100016110;
  v2[3] = &unk_10018EE18;
  v2[4] = *(void *)(a1 + 32);
  v2[5] = a2;
  dispatch_async(&_dispatch_main_q, v2);
}

id sub_100016110(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 16LL) = 0;
  return [*(id *)(a1 + 32) setSystemAppearance:*(void *)(a1 + 40)];
}

void sub_100016234(_Unwind_Exception *a1)
{
}

void sub_100016258(uint64_t a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000162D0;
  v4[3] = &unk_10018EE18;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v6 = a2;
  id v3 = WeakRetained;
  TVSPerformBlockOnMainThread(v4);
}

id sub_1000162D0(uint64_t a1)
{
  id result = *(id *)(a1 + 32);
  if (result)
  {
    id result = [result systemAppearance];
    if (result != *(id *)(a1 + 40)) {
      return objc_msgSend(*(id *)(a1 + 32), "setSystemAppearance:");
    }
  }

  return result;
}

NSCopying *__cdecl sub_100016C34(id a1, ALCity *a2)
{
  return (NSCopying *)-[ALCity classicIdentifier](a2, "classicIdentifier");
}

id sub_100017148(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedName]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedDescription]);
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  v6,  v4,  @"selected",  *(void *)(a1 + 32),  "_didSelectOptionItem:"));

  [v7 setUpdateBlock:&stru_10018EEC8];
  return v7;
}

void sub_1000171F0(id a1, TSKSettingItem *a2, NSNumber *a3)
{
  unsigned int v5 = a2;
  if (-[NSNumber BOOLValue](a3, "BOOLValue")) {
    uint64_t v4 = 2LL;
  }
  else {
    uint64_t v4 = 0LL;
  }
  -[TSKSettingItem setAccessoryTypes:](v5, "setAccessoryTypes:", v4);
  -[TSKSettingItem setLocalizedValue:](v5, "setLocalizedValue:", 0LL);
}

TSKSettingItem *__cdecl sub_100017554(id a1, TSKListSettingGroup *a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 accessoryName]);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v4,  0LL,  v3,  @"notificationsEnabled",  0LL,  0LL));

  return (TSKSettingItem *)v5;
}

void sub_100017EC4(_Unwind_Exception *a1)
{
}

void sub_100017F34(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v15 = a2;
  id v4 = a3;
  unsigned int v5 = v4;
  uint64_t v6 = qword_1001E22F8;
  uint64_t v7 = qword_1001E22F0;
  if ((id)qword_1001E22F0 == v4 || qword_1001E22F8 == (void)v4)
  {
    -[TSKSettingItem setLocalizedDescription:](v15, "setLocalizedDescription:", 0LL);
  }

  else
  {
    uint64_t v9 = TSKLocString(@"SaverDescriptionText");
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    -[TSKSettingItem setLocalizedDescription:](v15, "setLocalizedDescription:", v10);
  }

  if ((void *)v7 == v5)
  {
    BOOL v12 = @"SaverBackdropAerialTitle";
LABEL_12:
    uint64_t v13 = TSKLocString(v12);
    uint64_t v11 = objc_claimAutoreleasedReturnValue(v13);
    goto LABEL_13;
  }

  if ((void *)v6 == v5)
  {
    BOOL v12 = @"SaverBackdropMemoryTitle";
    goto LABEL_12;
  }

  uint64_t v11 = objc_claimAutoreleasedReturnValue([v5 valueForKey:@"collectionName"]);
LABEL_13:
  id v14 = (void *)v11;
  -[TSKSettingItem setLocalizedValue:](v15, "setLocalizedValue:", v11);
}

TVSettingsScreenSaverOptionsViewController *sub_100018028(uint64_t a1)
{
  return  -[TVSettingsScreenSaverOptionsViewController initWithFacade:optionsType:]( objc_alloc(&OBJC_CLASS___TVSettingsScreenSaverOptionsViewController),  "initWithFacade:optionsType:",  *(void *)(a1 + 32),  0LL);
}

void sub_10001805C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v7 = a2;
  id v4 = [v3 idleScreenSaverType];
  if (v4 == (id)TVISScreenSaverTypeAerial)
  {
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) idleScreenThemes]);
    BOOL v6 = [v5 count] == 0;
  }

  else
  {
    BOOL v6 = 1LL;
  }

  [v7 setHidden:v6];
  [v7 setLocalizedValue:0];
}

TVSettingsScreenSaverOptionsViewController *sub_1000180EC(uint64_t a1)
{
  return  -[TVSettingsScreenSaverOptionsViewController initWithFacade:optionsType:]( objc_alloc(&OBJC_CLASS___TVSettingsScreenSaverOptionsViewController),  "initWithFacade:optionsType:",  *(void *)(a1 + 32),  1LL);
}

void sub_100018120(uint64_t a1, void *a2, void *a3)
{
  unsigned int v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 idleScreenSaverType];
  id v9 = (id)TVISScreenSaverTypeMemory;
  if (v8 == (id)TVISScreenSaverTypeMemory)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) photosLibraryFilters]);
    id v12 = [v11 count];
    BOOL v10 = v12 != 0LL;

    if (v12)
    {
      uint64_t v13 = @"SaverBackdropLibraryEnabledDescription";
    }

    else if ([*(id *)(a1 + 32) hasPhotosCompletedInitialSync])
    {
      uint64_t v13 = @"SaverBackdropLibraryNotSetupDescription";
    }

    else
    {
      uint64_t v13 = @"SaverBackdropLibrarySyncingDescription";
    }

    uint64_t v14 = TSKLocString(v13);
    id v15 = (id)objc_claimAutoreleasedReturnValue(v14);
  }

  else
  {
    BOOL v10 = 0LL;
    id v15 = 0LL;
  }

  [v7 setHidden:v8 != v9];
  [v7 setEnabled:v10];
  [v7 setLocalizedValue:v6];

  [v7 setLocalizedDescription:v15];
}

void sub_100018240(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v10 = (id)objc_claimAutoreleasedReturnValue([v3 photosSourceFilter]);
  id v5 = [*(id *)(a1 + 32) idleScreenSaverType];
  BOOL v7 = v5 != (id)TVISScreenSaverTypeMemory || v10 == 0LL;
  [v4 setHidden:v7];
  objc_msgSend(v4, "setEnabled:", objc_msgSend(v10, "isDisabled") ^ 1);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) photosSourceStateString]);
  [v4 setLocalizedValue:v8];

  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _descriptionForToggleViewModel:v10]);
  [v4 setLocalizedDescription:v9];
}

void sub_100018314(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v4 = a2;
  id v3 = [v2 idleScreenSaverType];
  [v4 setHidden:v3 != (id)TVISScreenSaverTypeAerial];
}

NSString *__cdecl sub_100018368(id a1, NSString *a2)
{
  return (NSString *)TSKLocString(a2);
}

void sub_100018370(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateStartDelayItem:v6 value:v5];
}

void sub_1000183D4(uint64_t a1, void *a2)
{
  id v9 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v9 representedObject]);
  if ([v3 isEqualToString:TVScreenSaverStyleClassic])
  {
  }

  else
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v9 representedObject]);
    unsigned int v5 = [v4 isEqualToString:TVScreenSaverStyleKenBurns];

    if (!v5)
    {
      BOOL v7 = &selRef__selectStyle_;
      id v6 = v9;
      goto LABEL_6;
    }
  }

  objc_msgSend(v9, "setAccessoryTypes:", (unint64_t)objc_msgSend(v9, "accessoryTypes") | 1);
  id v6 = v9;
  BOOL v7 = &selRef__selectStyleAndShowTransitionsMenu_;
LABEL_6:
  [v6 setAction:*v7];
  [v9 setPlayButtonAction:"_playButtonPressed:"];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [v9 setTarget:WeakRetained];
}

void sub_1000184C8(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [*(id *)(a1 + 32) idleScreenSaverType];
  if (v3 == (id)TVISScreenSaverTypeMemory)
  {
    BOOL v4 = 1LL;
  }

  else
  {
    id v5 = [*(id *)(a1 + 32) idleScreenSaverType];
    BOOL v4 = v5 == (id)TVISScreenSaverTypeAerial;
  }

  [v6 setHidden:v4];
}

void sub_100018F28( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, id location)
{
}

void sub_100018FB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setCurrentTermIndex:*(void *)(a1 + 40)];
  [WeakRetained _showTermText];
}

void sub_100018FFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _completeWithResult:1];
}

void sub_10001902C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _completeWithResult:0];
}

void sub_100019190(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v2 betaTermsViewController:*(void *)(a1 + 32) didAcceptAllTerms:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1000193B4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v2 setHidden:0];

  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) view]);
  [v3 setHidden:1];
}

id sub_100019410(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v2 removeFromSuperview];

  [*(id *)(a1 + 32) removeFromParentViewController];
  return [*(id *)(a1 + 40) setNeedsFocusUpdate];
}

id sub_10001969C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_10001979C;
  v7[3] = &unk_10018E698;
  id v4 = v3;
  id v8 = v4;
  objc_copyWeak(&v9, &location);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v4,  0LL,  0LL,  0LL,  v7));
  [v5 setShouldPresentChildController:1];
  objc_destroyWeak(&v9);

  objc_destroyWeak(&location);
  return v5;
}

void sub_10001977C(_Unwind_Exception *a1)
{
}

id sub_10001979C(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  uint64_t v3 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained logPath]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsDiagnosticLogsFacade textForTableName:inPowerLog:]( &OBJC_CLASS___TVSettingsDiagnosticLogsFacade,  "textForTableName:inPowerLog:",  v3,  v5));
  id v7 = [v2 initWithTitle:v3 text:v6];

  return v7;
}

id sub_100019C04(uint64_t a1)
{
  return [*(id *)(a1 + 32) startCalibrationFlow];
}

id sub_100019C0C(uint64_t a1)
{
  double v2 = TVLAudioLatencyUnknown;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentDisplayMode]);
  +[TVLPersistenceManager setAudioLatency:forDisplayMode:]( &OBJC_CLASS___TVLPersistenceManager,  "setAudioLatency:forDisplayMode:",  v3,  v2);

  return [*(id *)(a1 + 40) dismiss];
}

id sub_100019C74(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

void sub_100019DA0(uint64_t a1, unsigned int a2)
{
  id v4 = sub_100019ED4();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    unsigned int v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Current Playback State: %u", buf, 8u);
  }

  if (a2 > 4 || a2 == 1)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(33LL, 0LL);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(global_queue);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_100019F14;
    v8[3] = &unk_10018F068;
    id v9 = *(id *)(a1 + 32);
    MRMediaRemoteSendCommandWithReply(3LL, 0LL, v7, v8);
  }

  else
  {
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  }

id sub_100019ED4()
{
  if (qword_1001E15A8 != -1) {
    dispatch_once(&qword_1001E15A8, &stru_10018F128);
  }
  return (id)qword_1001E15A0;
}

id sub_100019F14(uint64_t a1, CFArrayRef theArray)
{
  id result = (id)CFArrayGetCount(theArray);
  if (result)
  {
    unint64_t v5 = (unint64_t)result;
    CFIndex v6 = 0LL;
    unsigned int v7 = 1;
    while (1)
    {
      id result = objc_msgSend((id)CFArrayGetValueAtIndex(theArray, v6), "unsignedIntValue");
      if (!(_DWORD)result) {
        break;
      }
      CFIndex v6 = v7;
      if (v5 <= v7++) {
        return result;
      }
    }

    return (id)dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  }

  return result;
}

void sub_10001A354( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_10001A378(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_100019ED4();
  unsigned int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v23 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Completed enforcing HDMI. Error=%{public}@",  buf,  0xCu);
  }

  id v8 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v10 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained activityIndicatorView]);
    [v11 stopAnimating];

    if (a2)
    {
      [v10 dismissWithError:0];
    }

    else if (v5)
    {
      [v10 dismissWithError:v5];
    }

    else
    {
      id v12 = -[TVSettingsAudioLatencyCalibrationView initWithFrame:]( objc_alloc(&OBJC_CLASS___TVSettingsAudioLatencyCalibrationView),  "initWithFrame:",  *(double *)(a1 + 40),  *(double *)(a1 + 48),  *(double *)(a1 + 56),  *(double *)(a1 + 64));
      [v10 setCalibrationView:v12];

      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v10 calibrationView]);
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472LL;
      v20[2] = sub_10001A60C;
      v20[3] = &unk_10018E810;
      objc_copyWeak(&v21, v8);
      [v13 setDismissHandler:v20];

      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v10 calibrationView]);
      [v14 setUserInteractionEnabled:1];

      id v15 = (void *)objc_claimAutoreleasedReturnValue([v10 view]);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v10 calibrationView]);
      [v15 addSubview:v16];

      id v17 = (void *)objc_claimAutoreleasedReturnValue([v10 calibrationView]);
      [v17 setAlpha:0.0];

      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472LL;
      v19[2] = sub_10001A63C;
      v19[3] = &unk_10018E440;
      v19[4] = v10;
      uint64_t v18 = -[UIViewPropertyAnimator initWithDuration:curve:animations:]( objc_alloc(&OBJC_CLASS___UIViewPropertyAnimator),  "initWithDuration:curve:animations:",  0LL,  v19,  0.2);
      -[UIViewPropertyAnimator startAnimation](v18, "startAnimation");

      [v10 createSFService];
      objc_destroyWeak(&v21);
    }
  }
}

void sub_10001A5EC(_Unwind_Exception *a1)
{
}

void sub_10001A60C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissWithError:0];
}

void sub_10001A63C(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) calibrationView]);
  [v1 setAlpha:1.0];
}

id sub_10001A878(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

id sub_10001A880(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

id sub_10001A9C0(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_10001AA88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10001AAA8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained) {
    goto LABEL_209;
  }
  id v7 = sub_100019ED4();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    if (a2 > 299)
    {
      if (a2 > 799)
      {
        if (a2 <= 999)
        {
          switch(a2)
          {
            case 900:
              id v9 = "SU-No-SetupScanAttempt";
              break;
            case 901:
              id v9 = "SU-No-SetupStatusUpdate";
              break;
            case 902:
              id v9 = "SU-No-SetupWipeWifi";
              break;
            case 903:
              id v9 = "SU-No-SetupCancelled";
              break;
            case 904:
              id v9 = "SU-No-SetupObliterate";
              break;
            case 905:
              id v9 = "SU-No-SetupCannotCancel";
              break;
            case 906:
              id v9 = "SysDrop AirDrop Event";
              break;
            case 907:
              id v9 = "SysDrop Sysdiagnose Event";
              break;
            case 908:
              id v9 = "SysDrop Cancel Event";
              break;
            case 909:
              id v9 = "File Transfer Progress Event";
              break;
            case 910:
              id v9 = "File Transfer Completed Event";
              break;
            case 911:
              id v9 = "iOSWiFiSetup";
              break;
            case 912:
              id v9 = "HKPrimaryResidentSSIDFetchStart";
              break;
            case 913:
              id v9 = "LoggingProfileTransfer";
              break;
            default:
              switch(a2)
              {
                case 800:
                  id v9 = "AuthAccountsStart";
                  break;
                case 803:
                  id v9 = "AuthAccountsiCloudProgress";
                  break;
                case 804:
                  id v9 = "AuthAccountsStoreProgress";
                  break;
                case 805:
                  id v9 = "AuthAccountsGameCenterProgress";
                  break;
                default:
                  goto LABEL_167;
              }

              break;
          }

          goto LABEL_174;
        }

        if (a2 <= 1099)
        {
          if (a2 == 1000)
          {
            id v9 = "SecureIntentStart";
            goto LABEL_174;
          }

          if (a2 == 1001)
          {
            id v9 = "SecureIntentFinish";
            goto LABEL_174;
          }

          goto LABEL_167;
        }

        if (a2 == 1100)
        {
          id v9 = "OneTimeCodeDetected";
          goto LABEL_174;
        }

        if (a2 == 2000)
        {
          id v9 = "DependentStart";
          goto LABEL_174;
        }

        if (a2 != 2001) {
          goto LABEL_167;
        }
        id v9 = "DependentEnd";
      }

      else if (a2 <= 519)
      {
        if (a2 <= 410)
        {
          if (a2 <= 399)
          {
            if (a2 == 300)
            {
              id v9 = "BackupProgress";
              goto LABEL_174;
            }

            if (a2 == 310)
            {
              id v9 = "SyncProgress";
              goto LABEL_174;
            }

            goto LABEL_167;
          }

          if (a2 == 400)
          {
            id v9 = "StopSetup";
            goto LABEL_174;
          }

          if (a2 == 401)
          {
            id v9 = "PINPair";
            goto LABEL_174;
          }

          if (a2 != 410) {
            goto LABEL_167;
          }
          id v9 = "MigrateStart";
        }

        else
        {
          if (a2 > 430)
          {
            switch(a2)
            {
              case 431:
                id v9 = "eSimExternal2FAStop";
                goto LABEL_174;
              case 500:
                id v9 = "SiriWelcome";
                goto LABEL_174;
              case 510:
                id v9 = "SiriDialogA";
                goto LABEL_174;
            }

            goto LABEL_167;
          }

          if (a2 == 411)
          {
            id v9 = "MigrateStop";
            goto LABEL_174;
          }

          if (a2 == 420)
          {
            id v9 = "FileTransferReady";
            goto LABEL_174;
          }

          if (a2 != 430) {
            goto LABEL_167;
          }
          id v9 = "eSimExternal2FAStart";
        }
      }

      else if (a2 > 559)
      {
        if (a2 > 599)
        {
          switch(a2)
          {
            case 600:
              id v9 = "SiriSkipDemo";
              goto LABEL_174;
            case 700:
              id v9 = "StopSetupLEDs";
              goto LABEL_174;
            case 710:
              id v9 = "AudioPasscodeEnded";
              goto LABEL_174;
          }

          goto LABEL_167;
        }

        if (a2 == 560)
        {
          id v9 = "SiriDialogCMusic";
          goto LABEL_174;
        }

        if (a2 == 570)
        {
          id v9 = "SiriDialogCNews";
          goto LABEL_174;
        }

        if (a2 != 580) {
          goto LABEL_167;
        }
        id v9 = "SiriDialogCWeather";
      }

      else
      {
        if (a2 > 549)
        {
          switch(a2)
          {
            case 550:
              id v9 = "SiriDialogBWeather";
              goto LABEL_174;
            case 555:
              id v9 = "SiriDialogBClock";
              goto LABEL_174;
            case 558:
              id v9 = "SiriDialogBMusic";
              goto LABEL_174;
          }

          goto LABEL_167;
        }

        if (a2 == 520)
        {
          id v9 = "SiriDialogBStart";
          goto LABEL_174;
        }

        if (a2 == 530)
        {
          id v9 = "SiriDialogBHome";
          goto LABEL_174;
        }

        if (a2 != 540) {
          goto LABEL_167;
        }
        id v9 = "SiriDialogBNews";
      }
    }

    else if (a2 > 129)
    {
      if (a2 > 249)
      {
        switch(a2)
        {
          case 260:
            id v9 = "TVLSStart";
            break;
          case 261:
          case 262:
          case 263:
          case 265:
          case 266:
          case 267:
          case 268:
          case 269:
          case 271:
          case 273:
          case 275:
            goto LABEL_167;
          case 264:
            id v9 = "TVLSFinish";
            break;
          case 270:
            id v9 = "TVLSEstimateStart";
            break;
          case 272:
            id v9 = "TVLSEstimateFinal";
            break;
          case 274:
            id v9 = "TVLSEstimateFailed";
            break;
          case 276:
            id v9 = "TVLSTryAgain";
            break;
          case 277:
            id v9 = "TVLSToneBegan";
            break;
          case 278:
            id v9 = "TVLCalStart";
            break;
          case 279:
            id v9 = "TVLCalStep";
            break;
          case 280:
            id v9 = "TVLCalFailed";
            break;
          case 281:
            id v9 = "TVLCalTryAgain";
            break;
          case 282:
            id v9 = "TVLCalFinal";
            break;
          default:
            if (a2 != 250) {
              goto LABEL_167;
            }
            id v9 = "ReportSuccess";
            break;
        }

        goto LABEL_174;
      }

      if (a2 > 219)
      {
        switch(a2)
        {
          case 230:
            id v9 = "HomeKitStart";
            goto LABEL_174;
          case 231:
          case 232:
          case 233:
          case 235:
          case 237:
          case 238:
          case 239:
            goto LABEL_167;
          case 234:
            id v9 = "HomeKitSetupStart";
            goto LABEL_174;
          case 236:
            id v9 = "CDPSetupStart";
            goto LABEL_174;
          case 240:
            id v9 = "BuddyStarting";
            goto LABEL_174;
          case 241:
            id v9 = "BuddyProgress";
            goto LABEL_174;
          case 242:
            id v9 = "BuddyFinished";
            goto LABEL_174;
          default:
            if (a2 == 220)
            {
              id v9 = "iCloudStart";
            }

            else
            {
              if (a2 != 224) {
                goto LABEL_167;
              }
              id v9 = "AppleIDSetupStart";
            }

            break;
        }

        goto LABEL_174;
      }

      if (a2 <= 149)
      {
        if (a2 == 130)
        {
          id v9 = "WiFiPoweredOff";
          goto LABEL_174;
        }

        if (a2 == 140)
        {
          id v9 = "RecognizeVoice";
          goto LABEL_174;
        }

        goto LABEL_167;
      }

      if (a2 == 150)
      {
        id v9 = "SiriForEveryone";
        goto LABEL_174;
      }

      if (a2 == 200)
      {
        id v9 = "WiFiStart";
        goto LABEL_174;
      }

      if (a2 != 210) {
        goto LABEL_167;
      }
      id v9 = "ActivationStart";
    }

    else if (a2 > 79)
    {
      if (a2 <= 119)
      {
        switch(a2)
        {
          case 'P':
            id v9 = "BasicConfigStart";
            break;
          case 'Z':
            id v9 = "BasicConfigFinish";
            break;
          case '\\':
            id v9 = "StepStart";
            break;
          case '^':
            id v9 = "StepFinish";
            break;
          case '_':
            id v9 = "PreFinish";
            break;
            id v9 = "SetupFinished";
            break;
          case 'a':
            id v9 = "SetupResumed";
            break;
          case 'b':
            id v9 = "SetupSuspend";
            break;
          case 'c':
            id v9 = "SetupPeerSWUpdate";
            break;
          case 'd':
            id v9 = "Finished";
            break;
          default:
            goto LABEL_167;
        }

        goto LABEL_174;
      }

      if (a2 == 120)
      {
        id v9 = "CheckingiCloud";
        goto LABEL_174;
      }

      if (a2 == 122)
      {
        id v9 = "CheckingAppleMusic";
        goto LABEL_174;
      }

      if (a2 != 124) {
        goto LABEL_167;
      }
      id v9 = "CheckingAccount";
    }

    else
    {
      if (a2 <= 49)
      {
        if (a2 > 29)
        {
          switch(a2)
          {
            case 30:
              id v9 = "Error";
              break;
            case 31:
              id v9 = "SessionStarted";
              break;
            case 32:
              id v9 = "SessionEnded";
              break;
            case 33:
              id v9 = "SessionSecured";
              break;
            case 35:
              id v9 = "ConnectStart";
              break;
            case 40:
              id v9 = "PreAuthStart";
              break;
            default:
              goto LABEL_167;
          }

          goto LABEL_174;
        }

        switch(a2)
        {
          case 0:
            id v9 = "Invalid";
            goto LABEL_174;
          case 10:
            id v9 = "Start";
            goto LABEL_174;
          case 20:
            id v9 = "Final";
            goto LABEL_174;
        }

LABEL_167:
        id v9 = "?";
        goto LABEL_174;
      }

      if (a2 > 64)
      {
        if (a2 == 65)
        {
          id v9 = "SecurityAPCLoopStart";
          goto LABEL_174;
        }

        if (a2 == 70)
        {
          id v9 = "SecurityFinish";
          goto LABEL_174;
        }

        goto LABEL_167;
      }

      if (a2 == 50)
      {
        id v9 = "PreAuthFinish";
        goto LABEL_174;
      }

      if (a2 != 60) {
        goto LABEL_167;
      }
      id v9 = "SecurityStart";
    }

        id v9 = "?";
        goto LABEL_174;
      }

      if (a2 > 64)
      {
        if (a2 == 65)
        {
          id v9 = "SecurityAPCLoopStart";
          goto LABEL_174;
        }

        if (a2 == 70)
        {
          id v9 = "SecurityFinish";
          goto LABEL_174;
        }

        goto LABEL_167;
      }

      if (a2 == 50)
      {
        id v9 = "PreAuthFinish";
        goto LABEL_174;
      }

      if (a2 != 60) {
        goto LABEL_167;
      }
      id v9 = "SecurityStart";
    }

LABEL_174:
    int v39 = 136446466;
    uint64_t v40 = v9;
    __int16 v41 = 2114;
    id v42 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "TVLatency | EVENT | %{public}s | INFO | %{public}@",  (uint8_t *)&v39,  0x16u);
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
  uint64_t v11 = (uint64_t)[v10 currentState];

  id v12 = sub_100019ED4();
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = sub_10003644C(v11);
    id v15 = (char *)objc_claimAutoreleasedReturnValue(v14);
    int v39 = 138543362;
    uint64_t v40 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Current UI State: %{public}@",  (uint8_t *)&v39,  0xCu);
  }

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:TVLAudioLatencyEstimationProgressEventErrorObjectKey]);
  if (v16)
  {
    id v17 = sub_100019ED4();
    uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = sub_10003644C(4LL);
      __int16 v20 = (char *)objc_claimAutoreleasedReturnValue(v19);
      int v39 = 138543362;
      uint64_t v40 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "TVLatency | Forcing UI for state %{public}@",  (uint8_t *)&v39,  0xCu);
    }

    id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
    id v22 = v21;
    uint64_t v23 = 4LL;
LABEL_206:
    -[os_log_s setCalibrationState:withInfo:](v21, "setCalibrationState:withInfo:", v23, 0LL);
    goto LABEL_207;
  }

  id v24 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
  id v25 = [v24 currentState];

  if (v25 != (id)6)
  {
    switch(a2)
    {
      case 270:
        uint64_t v11 = 1LL;
        goto LABEL_203;
      case 271:
      case 273:
      case 275:
        goto LABEL_203;
      case 272:
        __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
        if ([v27 currentState] == (id)2)
        {

          uint64_t v11 = 5LL;
        }

        else
        {
          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
          id v32 = [v31 currentState];

          if (v32 == (id)5) {
            uint64_t v11 = 5LL;
          }
          else {
            uint64_t v11 = 4LL;
          }
        }

        goto LABEL_203;
      case 274:
        goto LABEL_208;
      case 276:
        uint64_t v11 = 3LL;
        goto LABEL_203;
      case 277:
        uint64_t v11 = 2LL;
        goto LABEL_203;
      default:
        if (a2 != 32)
        {
          if (a2 == 31) {
            uint64_t v11 = 0LL;
          }
          goto LABEL_203;
        }

        __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
        if (![v28 currentState]) {
          goto LABEL_198;
        }
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
        if ([v29 currentState] == (id)5) {
          goto LABEL_197;
        }
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
        if ([v30 currentState] == (id)3)
        {

LABEL_197:
LABEL_198:
        }

        else
        {
          uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
          id v38 = [v37 currentState];

          if (v38 != (id)4)
          {
            uint64_t v11 = 4LL;
LABEL_203:
            id v33 = sub_100019ED4();
            uint64_t v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
            if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v35 = sub_10003644C(v11);
              uint64_t v36 = (char *)objc_claimAutoreleasedReturnValue(v35);
              int v39 = 138543362;
              uint64_t v40 = v36;
              _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "TVLatency | Showing UI for state %{public}@",  (uint8_t *)&v39,  0xCu);
            }

            id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
            id v22 = v21;
            uint64_t v23 = v11;
            goto LABEL_206;
          }
        }

        uint64_t v11 = 6LL;
        goto LABEL_203;
    }
  }

  id v26 = sub_100019ED4();
  id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v39) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "We already have been dismissed! Returning early.",  (uint8_t *)&v39,  2u);
  }

    v69 = 136446466;
    v70 = v9;
    v71 = 2114;
    v72 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "TVLatency | EVENT | %{public}s | INFO | %{public}@",  (uint8_t *)&v69,  0x16u);
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
  uint64_t v11 = (uint64_t)[v10 currentState];

  id v12 = sub_100067514();
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = sub_100084C78(v11);
    id v15 = (char *)objc_claimAutoreleasedReturnValue(v14);
    v69 = 138543362;
    v70 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Current UI State: %{public}@",  (uint8_t *)&v69,  0xCu);
  }

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:TVLAudioLatencyEstimationProgressEventErrorObjectKey]);
  id v17 = objc_opt_class(&OBJC_CLASS___NSError);
  uint64_t v18 = v16;
  uint64_t v19 = v18;
  if (v17)
  {
    if ((objc_opt_isKindOfClass(v18, v17) & 1) != 0) {
      __int16 v20 = v19;
    }
    else {
      __int16 v20 = 0LL;
    }
  }

  else
  {
    __int16 v20 = 0LL;
  }

  id v21 = v20;

  if (v21)
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 userInfo]);
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 objectForKey:@"STATUS"]);
    id v24 = objc_opt_class(&OBJC_CLASS___NSNumber);
    id v25 = v23;
    id v26 = v25;
    if (v24)
    {
      if ((objc_opt_isKindOfClass(v25, v24) & 1) != 0) {
        __int128 v27 = v26;
      }
      else {
        __int128 v27 = 0LL;
      }
    }

    else
    {
      __int128 v27 = 0LL;
    }

    uint64_t v29 = v27;

    uint64_t v30 = sub_100067514();
    uint64_t v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      id v32 = sub_100084C78(10LL);
      id v33 = (char *)objc_claimAutoreleasedReturnValue(v32);
      v69 = 138543362;
      v70 = v33;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "TVLatency | Forcing UI for state %{public}@",  (uint8_t *)&v69,  0xCu);
    }

    if (v29) {
      uint64_t v34 = (uint64_t)[v29 BOOLValue];
    }
    else {
      uint64_t v34 = 1LL;
    }
    [WeakRetained _showError:v34];
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
    [v35 setCalibrationState:10];
  }

  else if (v11 == 11)
  {
    __int128 v28 = sub_100067514();
    uint64_t v29 = (id)objc_claimAutoreleasedReturnValue(v28);
    if (os_log_type_enabled((os_log_t)v29, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v69) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v29,  OS_LOG_TYPE_DEFAULT,  "We already have been dismissed! Returning early.",  (uint8_t *)&v69,  2u);
    }
  }

  else
  {
    switch(a2)
    {
      case 278:
      case 281:
        [WeakRetained _dismissError];
        uint64_t v11 = 2LL;
        break;
      case 279:
        uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"PHASE"]);
        uint64_t v37 = objc_opt_class(&OBJC_CLASS___NSString);
        id v38 = sub_1000693C0(v36, v37);
        int v39 = (void *)objc_claimAutoreleasedReturnValue(v38);

        uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"PROGRESS"]);
        __int16 v41 = objc_opt_class(&OBJC_CLASS___NSNumber);
        id v42 = sub_1000693C0(v40, v41);
        uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(v42);

        [v43 floatValue];
        v45 = v44;

        v46 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"CODEWORD"]);
        v47 = objc_opt_class(&OBJC_CLASS___NSNumber);
        v48 = sub_1000693C0(v46, v47);
        v49 = (void *)objc_claimAutoreleasedReturnValue(v48);

        if ([v39 isEqualToString:@"BEGIN"])
        {
          uint64_t v11 = 3LL;
        }

        else if ([v39 isEqualToString:@"RED"])
        {
          uint64_t v11 = 4LL;
        }

        else if ([v39 isEqualToString:@"GREEN"])
        {
          uint64_t v11 = 5LL;
        }

        else if ([v39 isEqualToString:@"BLUE"])
        {
          uint64_t v11 = 6LL;
        }

        else if ([v39 isEqualToString:@"WHITE"])
        {
          uint64_t v11 = 7LL;
        }

        else if ([v39 isEqualToString:@"RESULT"])
        {
          v50 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"RGB"]);
          v51 = objc_opt_class(&OBJC_CLASS___NSArray);
          v52 = sub_1000693C0(v50, v51);
          v53 = (void *)objc_claimAutoreleasedReturnValue(v52);

          if ([v53 count] == (id)4)
          {
            v54 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"TARGETWP"]);
            v55 = objc_opt_class(&OBJC_CLASS___NSNumber);
            v56 = sub_1000693C0(v54, v55);
            v57 = (void *)objc_claimAutoreleasedReturnValue(v56);

            v58 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
            v59 = objc_opt_class(&OBJC_CLASS___NSNumber);
            if ((objc_opt_isKindOfClass(v57, v59) & 1) != 0) {
              v60 = v57;
            }
            else {
              v60 = 0LL;
            }
            [v58 setResult:v53 targetWhitePoint:v60];

            v61 = (void *)objc_claimAutoreleasedReturnValue(+[PBSDisplayManager sharedInstance](&OBJC_CLASS___PBSDisplayManager, "sharedInstance"));
            v62 = (void *)objc_claimAutoreleasedReturnValue([v61 currentDisplayMode]);
            [v61 setColorCalibration:v53 forDisplayMode:v62];
          }
        }

        v63 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
        [v63 setCalibrationCodeword:v49];

        v64 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
        [v64 setCalibrationProgress:v45];

        break;
      case 280:
        goto LABEL_208;
      case 282:
        uint64_t v11 = 8LL;
        break;
      default:
        if (a2 == 32)
        {
          if ((unint64_t)(v11 - 8) > 2)
          {
            if ((unint64_t)(v11 - 3) <= 0xFFFFFFFFFFFFFFFDLL) {
LABEL_208:
            }
              [WeakRetained _showError:1];
            uint64_t v11 = 10LL;
          }

          else
          {
            [WeakRetained _dismissError];
            uint64_t v11 = 11LL;
          }
        }

        else if (a2 == 31)
        {
          uint64_t v11 = 1LL;
        }

        break;
    }

    v65 = sub_100067514();
    v66 = (os_log_s *)objc_claimAutoreleasedReturnValue(v65);
    if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
    {
      v67 = sub_100084C78(v11);
      v68 = (char *)objc_claimAutoreleasedReturnValue(v67);
      v69 = 138543362;
      v70 = v68;
      _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEFAULT,  "TVLatency | Showing UI for state %{public}@",  (uint8_t *)&v69,  0xCu);
    }

    uint64_t v29 = (id)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
    [v29 setCalibrationState:v11];
  }

LABEL_230:
}

LABEL_207:
LABEL_208:
LABEL_209:
}

void sub_10001B7D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.tvsettings", "AudioLatencyCalibration");
  double v2 = (void *)qword_1001E15A0;
  qword_1001E15A0 = (uint64_t)v1;
}

void sub_10001BC70( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

id sub_10001BCB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 displayName]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  0LL,  v4,  @"enabled",  WeakRetained,  "_configurationSelected:"));

  [v7 setUpdateBlock:&stru_10018F148];
  return v7;
}

void sub_10001BD50(id a1, TSKSettingItem *a2, id a3)
{
  id v5 = a2;
  else {
    uint64_t v4 = 0LL;
  }
  -[TSKSettingItem setAccessoryTypes:](v5, "setAccessoryTypes:", v4);
  -[TSKSettingItem setLocalizedValue:](v5, "setLocalizedValue:", 0LL);
}

TVSettingsVPNDetailsViewController *sub_10001BDA8(uint64_t a1)
{
  double v2 = objc_alloc(&OBJC_CLASS___TVSettingsVPNDetailsViewController);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activeConfiguration]);
  uint64_t v4 = -[TVSettingsVPNDetailsViewController initWithConfiguration:](v2, "initWithConfiguration:", v3);

  return v4;
}

void sub_10001BDFC(id a1, TSKSettingItem *a2, TVSettingsVPNConfiguration *a3)
{
}

void sub_10001D6B8(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"Type"]);
  if ([v4 isEqual:@"PSGroupSpecifier"])
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] groupFromSpecifierDictionary:v3 withItems:a1[5]]);
    if (v5)
    {
      [a1[6] insertObject:v5 atIndex:0];
      [a1[5] removeAllObjects];
    }

    goto LABEL_29;
  }

  if ([v4 isEqual:@"PSRadioGroupSpecifier"])
  {
    if ([a1[5] count])
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingGroup groupWithTitle:settingItems:]( &OBJC_CLASS___TSKSettingGroup,  "groupWithTitle:settingItems:",  0LL,  a1[5]));
      [a1[6] insertObject:v6 atIndex:0];
      [a1[5] removeAllObjects];
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] radioGroupFromSpecifierDictionary:v3]);
    if (!v5) {
      goto LABEL_29;
    }
    id v7 = a1[6];
    goto LABEL_28;
  }

  if ([v4 isEqual:@"PSChildPaneSpecifier"])
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([a1[4] childPaneItemFromSpecifierDictionary:v3]);
  }

  else if ([v4 isEqual:@"PSMultiValueSpecifier"])
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([a1[4] multiValueItemFromSpecifierDictionary:v3]);
  }

  else
  {
    if ([v4 isEqual:@"PSSliderSpecifier"])
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
      {
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"Key"]);
        int v10 = 138543362;
        uint64_t v11 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Preference items with type Slider aren't supported on tvOS. The item with key '%{public}@' won't be shown.",  (uint8_t *)&v10,  0xCu);
      }

      goto LABEL_30;
    }

    if ([v4 isEqual:@"PSTextFieldSpecifier"])
    {
      uint64_t v8 = objc_claimAutoreleasedReturnValue([a1[4] textItemFromSpecifierDictionary:v3]);
    }

    else if ([v4 isEqual:@"_TVPSLongTextSpecifier"])
    {
      uint64_t v8 = objc_claimAutoreleasedReturnValue([a1[4] longTextItemFromSpecifierDictionary:v3]);
    }

    else if ([v4 isEqual:@"PSToggleSwitchSpecifier"])
    {
      uint64_t v8 = objc_claimAutoreleasedReturnValue([a1[4] toggleItemFromSpecifierDictionary:v3]);
    }

    else if ([v4 isEqual:@"PSTitleValueSpecifier"])
    {
      uint64_t v8 = objc_claimAutoreleasedReturnValue([a1[4] titleItemFromSpecifierDictionary:v3]);
    }

    else
    {
      uint64_t v8 = objc_claimAutoreleasedReturnValue([a1[4] privacyItemFromSpecifierDictionary:v3]);
    }
  }

  id v5 = (void *)v8;
  if (v8)
  {
    id v7 = a1[5];
LABEL_28:
    [v7 insertObject:v5 atIndex:0];
LABEL_29:
  }

LABEL_30:
}

  id result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  __break(1u);
  return result;
}

void sub_10001D9A0(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "locationServicesEnabled"));
}

void sub_10001D9E4(id a1, TSKSettingItem *a2, id a3)
{
  id v7 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSRestrictionsSettings sharedInstance](&OBJC_CLASS___PBSRestrictionsSettings, "sharedInstance"));
  unsigned int v4 = [v3 allowsBackgroundAppRefreshModification];

  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsBackgroundAppRefreshFacade sharedInstance]( &OBJC_CLASS___TVSettingsBackgroundAppRefreshFacade,  "sharedInstance"));
  unsigned int v6 = [v5 backgroundAppRefreshEnabled];

  -[TSKSettingItem setEnabled:](v7, "setEnabled:", v4 & v6);
  -[TSKSettingItem setEditable:](v7, "setEditable:", v4 & v6);
}

void sub_10001DA78(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "crossAppTrackingAllowedSwitchEnabled"));
}

void sub_10001DABC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  else {
    unsigned int v6 = @"AppsAllowAccessMSODescriptionDeny";
  }
  uint64_t v7 = TSKLocString(v6);
  id v10 = (id)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) title]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v10, v8));
  [v5 setLocalizedDescription:v9];
}

void sub_10001E2E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10001E2FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = (id)objc_claimAutoreleasedReturnValue([WeakRetained layer]);
  double v2 = (void *)objc_claimAutoreleasedReturnValue([v1 sublayers]);
  [v2 makeObjectsPerformSelector:"removeFromSuperlayer"];
  while (1)
  {

    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained layer]);
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([v3 sublayers]);
    id v5 = [v4 count];
    id v6 = [WeakRetained _maximumImageCount];

    if (v5 >= v6) {
      break;
    }
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained loaderQueue]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 popNextImage]);

    id v1 = v8;
    id v9 = [v1 image];
    if (!v9)
    {

      break;
    }

    id v10 = v9;
    double v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained layer]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _createLayerForImage:v10]);
    [v2 addSublayer:v11];
  }

  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v12 postNotificationName:off_1001DF4F0 object:WeakRetained];

  [WeakRetained _updateAnimations];
}

NSValue *sub_10001EDA4(uint64_t a1, void *a2)
{
  return +[NSValue valueWithCGPoint:](&OBJC_CLASS___NSValue, "valueWithCGPoint:");
}

BOOL sub_10001F098(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a2 animationForKey:@"ParadeAnimation"]);
  uint64_t v7 = *(void **)(a1 + 32);
  if (v6 == v7) {
    *a4 = 1;
  }
  BOOL v8 = v6 == v7;

  return v8;
}

TSKSettingItem *__cdecl sub_10001F44C(id a1, TSKListSettingGroup *a2, TVSettingsNotificationSettings *a3)
{
  id v3 = a3;
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsNotificationSettings displayName](v3, "displayName"));
  if (!v4) {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsNotificationSettings identifier](v3, "identifier"));
  }
  uint64_t v5 = TSKLocString(@"NotificationsDescription");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v4,  v6,  v3,  @"allowsNotifications",  0LL,  0LL));

  return (TSKSettingItem *)v7;
}

void sub_10001F690(uint64_t a1, uint64_t a2)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) indexPathByAddingIndex:a2]);
  [*(id *)(a1 + 40) addObject:v3];
}

void sub_100020654(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  else {
    unsigned int v4 = @"iTMSAddPlaylistSongsOffDescription";
  }
  uint64_t v5 = TSKLocString(v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue(v5);
  [v3 setLocalizedDescription:v6];
}

void sub_1000206C0(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  else {
    unsigned int v4 = @"iTMSAddFavoriteSongsOffDescription";
  }
  uint64_t v5 = TSKLocString(v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue(v5);
  [v3 setLocalizedDescription:v6];
}

void sub_10002072C(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "canAddToPlaylist") ^ 1);
}

void sub_100020770(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  unsigned int v5 = [a3 BOOLValue];
  id v6 = @"MusicAudioQualitySurroundOffDescription";
  if (v5) {
    id v6 = @"MusicAudioQualitySurroundAutoDescription";
  }
  uint64_t v7 = v6;
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  uint64_t v9 = TSKLocStringFromBundleCachingKey(v7, v8, 1LL, 0LL, @"Oasis");
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  [v11 setLocalizedDescription:v10];
  objc_msgSend(v11, "setHidden:", objc_msgSend(*(id *)(a1 + 32), "supportsEnhancedAudio") ^ 1);
}

void sub_10002083C(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "supportsEnhancedAudio") ^ 1);
}

void sub_100020880(id a1, TSKSettingItem *a2, id a3)
{
  unsigned int v4 = a2;
  else {
    unsigned int v5 = @"MusicSoundCheckOFF";
  }
  uint64_t v6 = TSKLocString(v5);
  id v7 = (id)objc_claimAutoreleasedReturnValue(v6);
  -[TSKSettingItem setLocalizedDescription:](v4, "setLocalizedDescription:", v7);
}

void sub_1000208EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  else {
    uint64_t v6 = @"MusicUseListeningHistoryOFF";
  }
  uint64_t v7 = TSKLocString(v6);
  id v8 = (id)objc_claimAutoreleasedReturnValue(v7);
  [v5 setLocalizedDescription:v8];
  objc_msgSend(v5, "setHidden:", objc_msgSend(*(id *)(a1 + 32), "isAppleMusicSubscribed") ^ 1);
}

void sub_100020D70( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_100020DCC(uint64_t a1, void *a2)
{
  double v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateLoadVPNItem:v3];
}

void sub_100020E14(uint64_t a1, void *a2)
{
  double v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateCheckVPNItem:v3];
}

id sub_100021374()
{
  if (qword_1001E15C8 != -1) {
    dispatch_once(&qword_1001E15C8, &stru_10018F3B8);
  }
  return (id)qword_1001E15C0;
}

void sub_1000213B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [*(id *)(a1 + 32) _finishLoadingVPNProfileAtURL:*(void *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

void sub_1000217EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_10002180C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = sub_100021374();
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543618;
    id v19 = v8;
    __int16 v20 = 2114;
    id v21 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Fetch of VPN profile completed with response: %{public}@ error: %{public}@",  buf,  0x16u);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100021970;
  block[3] = &unk_10018F2F0;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v15 = v7;
  id v16 = v9;
  id v12 = v9;
  id v13 = v7;
  dispatch_async(&_dispatch_main_q, block);

  objc_destroyWeak(&v17);
}

void sub_100021970(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _VPNProfileLoaded:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

void sub_1000220F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_100022120(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = sub_100021374();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    id v9 = v8;
    if (v5)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_1000F6C7C();
      }
      uint64_t v10 = 3LL;
    }

    else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v11 = 0;
      uint64_t v10 = 2LL;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "VPN test succeeded", v11, 2u);
    }

    else
    {
      uint64_t v10 = 2LL;
    }

    [WeakRetained setConfigurationCheckState:v10];
    [WeakRetained reloadSettingsIfNeeded];
  }
}

void sub_1000223F8(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableCharacterSet URLQueryAllowedCharacterSet]( &OBJC_CLASS___NSMutableCharacterSet,  "URLQueryAllowedCharacterSet"));
  id v4 = [v1 mutableCopy];

  [v4 removeCharactersInString:@"?=&+"];
  id v2 = [v4 copy];
  id v3 = (void *)qword_1001E15B0;
  qword_1001E15B0 = (uint64_t)v2;
}

void sub_1000224A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings.softwareupdates", "VPN");
  id v2 = (void *)qword_1001E15C0;
  qword_1001E15C0 = (uint64_t)v1;
}

void sub_1000224D4( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

  ;
}

void sub_10002273C(_Unwind_Exception *a1)
{
}

void sub_100022768(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10002280C;
  v6[3] = &unk_10018F408;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  char v8 = a2;
  TVSPerformBlockOnMainThread(v6);
  objc_destroyWeak(&v7);
}

void sub_1000227F8(_Unwind_Exception *a1)
{
}

void sub_10002280C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setCheckingForUpdates:*(unsigned __int8 *)(a1 + 40)];
  [WeakRetained reloadSettingsIfNeeded];
}

void sub_100022D4C(_Unwind_Exception *a1)
{
}

void sub_100022DD8(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateSWUpdateItem:v3];
}

void sub_100022E20(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateBetaSoftwareItem:v3];
}

void sub_100022E68(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateInternalSettingsItem:v3];
}

void sub_1000231F8(id a1)
{
  os_log_t v1 = objc_opt_new(&OBJC_CLASS___NSDateComponentsFormatter);
  uint64_t v2 = (void *)qword_1001E15D0;
  qword_1001E15D0 = (uint64_t)v1;

  [(id)qword_1001E15D0 setUnitsStyle:3];
  [(id)qword_1001E15D0 setMaximumUnitCount:1];
  [(id)qword_1001E15D0 setFormattingContext:5];
  [(id)qword_1001E15D0 setIncludesApproximationPhrase:1];
  [(id)qword_1001E15D0 setIncludesTimeRemainingPhrase:1];
  [(id)qword_1001E15D0 setAllowedUnits:224];
}

void sub_100023338( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10002335C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBSSystemServiceConnection sharedConnection]( &OBJC_CLASS___PBSSystemServiceConnection,  "sharedConnection"));
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 osUpdateServiceProxy]);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_100023434;
    v8[3] = &unk_10018F430;
    objc_copyWeak(&v9, (id *)(a1 + 32));
    [v7 isUpdateRunningWithCompletion:v8];

    objc_destroyWeak(&v9);
  }
}

void sub_100023420(_Unwind_Exception *a1)
{
}

void sub_100023434(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000234D8;
  v6[3] = &unk_10018F408;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  char v8 = a2;
  TVSPerformBlockOnMainThread(v6);
  objc_destroyWeak(&v7);
}

void sub_1000234C4(_Unwind_Exception *a1)
{
}

void sub_1000234D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleCheckForUpdates:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10002369C(id a1, UIAlertAction *a2)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue( +[PBSSystemServiceConnection sharedConnection]( &OBJC_CLASS___PBSSystemServiceConnection,  "sharedConnection"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v3 osUpdateServiceProxy]);
  [v2 cancelUpdate];
}

id sub_1000237E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSettingsIfNeeded];
}

id sub_100023864(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSettingsIfNeeded];
}

id sub_1000238E0(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) defaultPreviewViewController]);
  LODWORD(v3) = 0;
  [v2 setProgress:0 animated:v3];

  return [*(id *)(a1 + 32) reloadSettingsIfNeeded];
}

id sub_1000239A0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateSWUpdateProgressFromData:*(void *)(a1 + 40)];
}

id sub_1000239FC(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) defaultPreviewViewController]);
  [v2 setShouldShowProgress:0];

  double v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) defaultPreviewViewController]);
  LODWORD(v4) = 0;
  [v3 setProgress:0 animated:v4];

  [*(id *)(a1 + 32) setLastProgressText:0];
  return [*(id *)(a1 + 32) reloadSettingsIfNeeded];
}

void sub_100024194( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000241C0(uint64_t a1, int a2)
{
  if (a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10002427C;
    block[3] = &unk_10018E810;
    objc_copyWeak(&v4, (id *)(a1 + 32));
    dispatch_async(&_dispatch_main_q, block);
    objc_destroyWeak(&v4);
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Failed to get list of beta software programs.",  v2,  2u);
  }

void sub_10002427C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[SDBetaManager sharedManager](&OBJC_CLASS___SDBetaManager, "sharedManager"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 availableBetaPrograms]);
  [WeakRetained setAvailableBetaSeedPrograms:v2];

  [WeakRetained reloadSettingsIfNeeded];
}

void sub_10002484C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, id location)
{
}

void sub_1000248BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setSelectedBetaSeedProgram:*(void *)(a1 + 32)];
  [WeakRetained _showConfirmationForEnrollmentInProgram:*(void *)(a1 + 32)];
}

void sub_100024904(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popToViewController:WeakRetained animated:1];
}

void sub_100024B90( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id location)
{
}

void sub_100024BD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) legalDocs]);
  if ([v2 count])
  {
    double v3 = -[TVSettingsBetaTermsViewController initWithTerms:]( objc_alloc(&OBJC_CLASS___TVSettingsBetaTermsViewController),  "initWithTerms:",  v2);
    -[TVSettingsBetaTermsViewController setDelegate:](v3, "setDelegate:", WeakRetained);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
    [v4 presentViewController:v3 animated:1 completion:0];
  }

  else
  {
    [WeakRetained betaTermsViewController:0 didAcceptAllTerms:1];
  }
}

void sub_100024C8C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popToViewController:WeakRetained animated:1];
}

TSKSettingItem *__cdecl sub_1000250A8(id a1, TSKListSettingGroup *a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsTCCInfo);
  id v5 = v3;
  uint64_t v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 displayName]);
  uint64_t v10 = TSKLocString(@"PrivacyAllowAccess");
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = TSKLocString(@"PrivacyDenyAccess");
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v9,  0LL,  v8,  @"allowAccess",  v11,  v13));

  return (TSKSettingItem *)v14;
}

void sub_1000252A4(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsVPNFacade);
  id v2 = (void *)qword_1001E15E0;
  qword_1001E15E0 = (uint64_t)v1;
}

void sub_1000253E4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100025400(uint64_t a1)
{
  id v2 = sub_100025480();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "VPN configurations changed", v5, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained loadConfigurationsWithCompletion:0];
}

id sub_100025480()
{
  if (qword_1001E15F8 != -1) {
    dispatch_once(&qword_1001E15F8, &stru_10018F628);
  }
  return (id)qword_1001E15F0;
}

void sub_10002557C(_Unwind_Exception *a1)
{
}

void sub_100025598(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100025480();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id WeakRetained = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000F6DC0((uint64_t)v6, WeakRetained);
    }
  }

  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  WeakRetained,  OS_LOG_TYPE_DEFAULT,  "Successfully loaded VPN configurations",  v11,  2u);
    }

    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 40));
    -[os_log_s _updateConfigurationsWithNEConfigurations:]( WeakRetained,  "_updateConfigurationsWithNEConfigurations:",  v5);
  }

  uint64_t v10 = *(void *)(a1 + 32);
  if (v10) {
    (*(void (**)(void))(v10 + 16))();
  }
}

void sub_10002574C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100025770(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_100025480();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000F6E30();
    }
  }

  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained loadConfigurationsWithCompletion:0];
  }
}

void sub_1000258F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100025918(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_100025480();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000F6E94();
    }

    uint64_t v6 = *(void *)(a1 + 40);
    if (v6) {
      (*(void (**)(void))(v6 + 16))();
    }
  }

  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained loadConfigurationsWithCompletion:*(void *)(a1 + 40)];
  }
}

NSString *__cdecl sub_1000259D0(id a1, TVSettingsVPNConfiguration *a2)
{
  return -[TVSettingsVPNConfiguration displayName](a2, "displayName");
}

void sub_100026300(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "VPNFacade");
  uint64_t v2 = (void *)qword_1001E15F0;
  qword_1001E15F0 = (uint64_t)v1;
}

void sub_100026330(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

  ;
}

void sub_100026724(id a1, UIAlertAction *a2)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[PBSSystemService sharedInstance](&OBJC_CLASS___PBSSystemService, "sharedInstance"));
  [v2 reboot];
}

void sub_100026C14( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_100026C38()
{
  if (qword_1001E1608 != -1) {
    dispatch_once(&qword_1001E1608, &stru_10018F6B0);
  }
  return (id)qword_1001E1600;
}

void sub_100026C78(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v6)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 domain]);
    if ([v8 isEqualToString:AKAppleIDAuthenticationErrorDomain])
    {
      id v9 = [v7 code];

      if (v9 == (id)-7003LL)
      {
        id v10 = sub_100026C38();
        id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "User cancelled FaceTime auth", v23, 2u);
        }

LABEL_16:
        id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
        [WeakRetained _signOutOfFaceTime];
        goto LABEL_18;
      }
    }

    else
    {
    }

    id v17 = sub_100026C38();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1000F701C((uint64_t)v7, v11);
    }
    goto LABEL_16;
  }

  id WeakRetained = (id)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:AKAuthenticationUsernameKey]);
  uint64_t v13 = objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:AKAuthenticationPasswordKey]);
  uint64_t v14 = (void *)v13;
  if (WeakRetained) {
    BOOL v15 = v13 == 0;
  }
  else {
    BOOL v15 = 1;
  }
  if (v15)
  {
    id v16 = sub_100026C38();
    uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_1000F6FDC(v18);
    }
  }

  else
  {
    uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[IMAccount tvs_accountWithFaceTimeService]( &OBJC_CLASS___IMAccount,  "tvs_accountWithFaceTimeService"));
    -[os_log_s setLogin:](v18, "setLogin:", WeakRetained);
    -[os_log_s setAutoLogin:](v18, "setAutoLogin:", 1LL);
    id v19 = (void *)objc_claimAutoreleasedReturnValue(+[IMAccountController sharedInstance](&OBJC_CLASS___IMAccountController, "sharedInstance"));
    [v19 addAccount:v18];

    -[os_log_s updateAuthorizationCredentials:token:](v18, "updateAuthorizationCredentials:token:", 0LL, 0LL);
    -[os_log_s setTemporaryPassword:](v18, "setTemporaryPassword:", v14);
    __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(+[IMAccountController sharedInstance](&OBJC_CLASS___IMAccountController, "sharedInstance"));
    [v20 activateAccount:v18];

    id v21 = (void *)objc_claimAutoreleasedReturnValue(+[IMDaemonController sharedInstance](&OBJC_CLASS___IMDaemonController, "sharedInstance"));
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s uniqueID](v18, "uniqueID"));
    [v21 authenticateAccount:v22];
  }

LABEL_18:
}
}

  v50 = TSKLocString(@"SpatialAudioSettingTitle");
  v51 = (void *)objc_claimAutoreleasedReturnValue(v50);
  v103 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingGroup groupWithTitle:settingItems:]( &OBJC_CLASS___TSKSettingGroup,  "groupWithTitle:settingItems:",  v51,  v107));

  v52 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  if (-[TVSettingsBluetoothInfoViewController _shouldShowAdaptiveVolumeSettings]( self,  "_shouldShowAdaptiveVolumeSettings"))
  {
    v53 = TSKLocString(@"AdaptiveVolumeTitle");
    v54 = (void *)objc_claimAutoreleasedReturnValue(v53);
    v55 = TSKLocString(@"AdaptiveVolumeDescription");
    v56 = (void *)objc_claimAutoreleasedReturnValue(v55);
    v57 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v54,  v56,  v21,  @"adaptiveVolumeEnabled",  0LL,  0LL));

    -[NSMutableArray addObject:](v52, "addObject:", v57);
    objc_storeStrong((id *)&self->_adaptiveVolumeItem, v57);
    v58 = self->_pivotItem;
    self->_pivotItem = (TSKSettingItem *)v57;
  }

  if (-[TVSettingsBluetoothInfoViewController _shouldShowSSLSettings](self, "_shouldShowSSLSettings"))
  {
    v59 = TSKLocString(@"SelectiveSpeechListeningTitle");
    v60 = (void *)objc_claimAutoreleasedReturnValue(v59);
    v61 = TSKLocString(@"SelectiveSpeechListeningDescription");
    v62 = (void *)objc_claimAutoreleasedReturnValue(v61);
    v63 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v60,  v62,  v21,  @"selectiveSpeechListeningEnabled",  0LL,  0LL));

    -[NSMutableArray addObject:](v52, "addObject:", v63);
    objc_storeStrong((id *)&self->_sslItem, v63);
    v64 = self->_pivotItem;
    self->_pivotItem = (TSKSettingItem *)v63;
  }

  v65 = TSKLocString(@"HearingSectionTitle");
  v66 = (void *)objc_claimAutoreleasedReturnValue(v65);
  v67 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingGroup groupWithTitle:settingItems:]( &OBJC_CLASS___TSKSettingGroup,  "groupWithTitle:settingItems:",  v66,  v52));

  v68 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  v69 = TSKLocString(@"BluetoothInfoManufacturerTitle");
  v70 = (void *)objc_claimAutoreleasedReturnValue(v69);
  v71 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  v70,  0LL,  v21,  @"manufacturer"));

  [v71 setUpdateBlock:&stru_100192180];
  -[NSMutableArray addObject:](v68, "addObject:", v71);
  v72 = TSKLocString(@"BluetoothInfoModelNumberTitle");
  v73 = (void *)objc_claimAutoreleasedReturnValue(v72);
  v74 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  v73,  0LL,  v21,  @"modelNumber"));

  [v74 setUpdateBlock:&stru_1001921A0];
  -[NSMutableArray addObject:](v68, "addObject:", v74);
  v75 = TSKLocString(@"BluetoothInfoSerialNumberTitle");
  v76 = (void *)objc_claimAutoreleasedReturnValue(v75);
  v77 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  v76,  0LL,  v21,  @"serialNumber"));

  [v77 setUpdateBlock:&stru_1001921C0];
  -[NSMutableArray addObject:](v68, "addObject:", v77);
  v78 = TSKLocString(@"BluetoothInfoFirmwareVersionTitle");
  v79 = (void *)objc_claimAutoreleasedReturnValue(v78);
  v80 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  v79,  0LL,  v21,  @"firmwareVersion"));

  [v80 setUpdateBlock:&stru_1001921E0];
  -[NSMutableArray addObject:](v68, "addObject:", v80);
  v81 = TSKLocString(@"BluetoothInfoHardwareVersionTitle");
  v82 = (void *)objc_claimAutoreleasedReturnValue(v81);
  v83 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  v82,  0LL,  v21,  @"hardwareVersion"));

  [v83 setUpdateBlock:&stru_100192200];
  -[NSMutableArray addObject:](v68, "addObject:", v83);
  v84 = TSKLocString(@"BluetoothInfoBatteryLevelTitle");
  v85 = (void *)objc_claimAutoreleasedReturnValue(v84);
  v86 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  v85,  0LL,  v21,  @"batteryLevel"));

  v87 = objc_opt_new(&OBJC_CLASS___NSNumberFormatter);
  -[NSNumberFormatter setNumberStyle:](v87, "setNumberStyle:", 3LL);
  v108[0] = _NSConcreteStackBlock;
  v108[1] = 3221225472LL;
  v108[2] = sub_100087948;
  v108[3] = &unk_10018E608;
  v88 = v87;
  v109 = v88;
  [v86 setUpdateBlock:v108];
  -[NSMutableArray addObject:](v68, "addObject:", v86);
  if (v106 == (id)1)
  {
    v89 = TSKLocString(@"BluetoothInfoRSSITitle");
    v90 = (void *)objc_claimAutoreleasedReturnValue(v89);
    v91 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  v90,  0LL,  v21,  @"RSSI"));

    [v91 setUpdateBlock:&stru_100192220];
    -[NSMutableArray addObject:](v68, "addObject:", v91);
  }

  else
  {
    v91 = v86;
  }

  v92 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  @"BT MAC (Internal)",  0LL,  v21,  @"tvset_BTLEMAC"));

  [v92 setUpdateBlock:&stru_100192240];
  -[NSMutableArray addObject:](v68, "addObject:", v92);
  v93 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  @"MT Firmware Version (Internal)",  0LL,  v21,  @"multitouchFirmwareVersion"));

  [v93 setUpdateBlock:&stru_100192260];
  -[NSMutableArray addObject:](v68, "addObject:", v93);
  v94 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  @"Supports Dev Firmware (Internal)",  0LL,  v21,  @"supportsDevFW"));

  v95 = (void *)objc_claimAutoreleasedReturnValue(+[TSKBoolFormatter yesNoFormatter](&OBJC_CLASS___TSKBoolFormatter, "yesNoFormatter"));
  [v94 setLocalizedValueFormatter:v95];

  [v94 setUpdateBlock:&stru_100192280];
  -[NSMutableArray addObject:](v68, "addObject:", v94);
  v96 = TSKLocString(@"BluetoothInfoSectionTitle");
  v97 = (void *)objc_claimAutoreleasedReturnValue(v96);
  v98 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingGroup groupWithTitle:settingItems:]( &OBJC_CLASS___TSKSettingGroup,  "groupWithTitle:settingItems:",  v97,  v68));

  [v98 setCanFocus:0];
  v125[0] = v104;
  v125[1] = v103;
  v125[2] = v67;
  v125[3] = v98;
  v99 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v125, 4LL));

  objc_destroyWeak(&v117);
  objc_destroyWeak(&location);

  return v99;
}
      }

      id v7 = [v5 countByEnumeratingWithState:&v26 objects:v31 count:16];
    }

    while (v7);
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v21));
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v3));
}
    }

    id v5 = [obj countByEnumeratingWithState:&v25 objects:v30 count:16];
  }

  while (v5);

  if (v6)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsAirPlayViewController indexPathForSettingItem:](v19, "indexPathForSettingItem:", v6));
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsAirPlayViewController tableView](v19, "tableView"));
    -[TVSettingsAirPlayViewController tableView:didSelectRowAtIndexPath:]( v19,  "tableView:didSelectRowAtIndexPath:",  v18,  v17);

LABEL_21:
  }

        id v17 = sub_1000CADE8();
        uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_1000FB764(v5, a3, v18);
        }

        -[TVSettingsUserProfileFacade _updateProfileWithServiceType:toAltDSID:]( self,  "_updateProfileWithServiceType:toAltDSID:",  a3,  0LL);
        goto LABEL_26;
      }

      if (a3) {
        goto LABEL_16;
      }
      id v6 = self->_accountStore;
      id v7 = (id)objc_claimAutoreleasedReturnValue([v5 iCloudAltDSID]);
      id v8 = objc_claimAutoreleasedReturnValue(-[ACAccountStore aa_appleAccountWithAltDSID:](v6, "aa_appleAccountWithAltDSID:", v7));
    }

    uint64_t v12 = (void *)v8;
    goto LABEL_12;
  }

  _Block_object_dispose(&v38, 8);
}

LABEL_14:
  }

  else
  {
    id v5 = 0LL;
  }

  return v5;
}
  }

  else
  {
    LOBYTE(v10) = 0;
  }

  return (char)v10;
}
}

    id v11 = -[NSBundle initWithPath:](objc_alloc(&OBJC_CLASS___NSBundle), "initWithPath:", v6);
    uint64_t v12 = +[CLLocationManager entityAuthorizationForLocationDictionary:]( &OBJC_CLASS___CLLocationManager,  "entityAuthorizationForLocationDictionary:",  v4);
    uint64_t v13 = v12;
    if ((v12 & 2) != 0)
    {
      BOOL v15 = &kCLCommonLocationWhenInUseUsageDescriptionKey;
    }

    else
    {
      if ((v12 & 4) == 0)
      {
        uint64_t v14 = 0LL;
        goto LABEL_23;
      }

      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[NSBundle objectForInfoDictionaryKey:]( v11,  "objectForInfoDictionaryKey:",  kCLCommonLocationAlwaysUsageDescriptionKey));
      if (v14)
      {
LABEL_23:
        id v16 = objc_opt_class(&OBJC_CLASS___NSString);
        if ((objc_opt_isKindOfClass(v14, v16) & 1) != 0) {
          id v17 = v14;
        }
        else {
          id v17 = 0LL;
        }
        uint64_t v18 = v17;

        if (v10 > 3) {
          id v19 = 0LL;
        }
        else {
          id v19 = (void *)qword_10012A268[v10];
        }
        __int16 v20 = 2LL;
        if ((v13 & 4) != 0) {
          __int16 v20 = 3LL;
        }
        if ((v13 & 6) != 0) {
          id v21 = v20;
        }
        else {
          id v21 = v13 & 1;
        }
        if (v21 != -[TVSettingsLocationItem accessType](self, "accessType"))
        {
          -[TVSettingsLocationItem willChangeValueForKey:](self, "willChangeValueForKey:", @"accessType");
          self->_accessType = v21;
          -[TVSettingsLocationItem didChangeValueForKey:](self, "didChangeValueForKey:", @"accessType");
        }

        id v22 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
        uint64_t v23 = +[CLLocationManager allowableAuthorizationForLocationDictionary:]( &OBJC_CLASS___CLLocationManager,  "allowableAuthorizationForLocationDictionary:",  v4);
        id v24 = v23;
        if ((v23 & 4) != 0)
        {
          -[NSMutableArray addObject:](v22, "addObject:", &off_1001AD2C0);
          if ((v24 & 2) == 0)
          {
LABEL_43:
            if ((v24 & 1) == 0)
            {
LABEL_45:
              id v25 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsLocationItem allowedAccessTypes](self, "allowedAccessTypes"));
              id v26 = -[NSMutableArray isEqual:](v22, "isEqual:", v25);

              if ((v26 & 1) == 0) {
                -[TVSettingsLocationItem setAllowedAccessTypes:](self, "setAllowedAccessTypes:", v22);
              }
              __int128 v27 = (NSDictionary *)[v4 copy];
              info = self->_info;
              self->_info = v27;

              goto LABEL_48;
            }

    [*(id *)(a1 + 32) invalidate];
    id v3 = v18;
  }
}
}

    if (![v6 isPaired])
    {
      id v9 = 0LL;
      goto LABEL_19;
    }

    id v17 = [(id)objc_opt_class(self) _linkErrorStringWithDevice:v6];
    BOOL v15 = objc_claimAutoreleasedReturnValue(v17);
    goto LABEL_18;
  }

  if (a3 == 1)
  {
    if (([v6 isPaired] & 1) == 0)
    {
      id v26 = TSKLocString(@"BTErrorPairingTimeout");
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v26);
      __int128 v27 = [(id)objc_opt_class(self) _genericPairingErrorStringWithDevice:v6];
      __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
      id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ %@",  v13,  v28));

      uint64_t v12 = 0LL;
      goto LABEL_25;
    }

    goto LABEL_14;
  }

  if (a3 != 109)
  {
LABEL_10:
    else {
      id v16 = [(id)objc_opt_class(self) _genericErrorStringWithDevice:v6];
    }
    BOOL v15 = objc_claimAutoreleasedReturnValue(v16);
    goto LABEL_18;
  }

  id v8 = [(id)objc_opt_class(self) _unsupportedDeviceErrorStringWithDevice:v6];
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  if (([v6 isPaired] & 1) == 0)
  {
    id v10 = TSKLocString(@"SettingsOK");
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472LL;
    v31[2] = sub_1000D4560;
    v31[3] = &unk_10018FF80;
    id v32 = v6;
    objc_copyWeak(&v33, &location);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v11,  1LL,  v31));

    objc_destroyWeak(&v33);
    uint64_t v13 = v32;
LABEL_25:

    goto LABEL_20;
  }

    id v16 = sub_1000DA028();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_17;
    }
    id v17 = *(_DWORD *)(a1 + 48);
    uint64_t v18 = sub_1000DB8FC(v17);
    id v19 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 67109634;
    *(_DWORD *)id v24 = v17;
    *(_WORD *)&v24[4] = 2082;
    *(void *)&v24[6] = v18;
    id v25 = 2048;
    id v26 = v19;
    uint64_t v13 = "AuthenticateAccounts: unhandled session event %d-%{public}s. {self=%p}";
    goto LABEL_16;
  }

  if (v2 != 30)
  {
    if (v2 == 31)
    {
      id v3 = sub_1000DA028();
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        id v5 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 134217984;
        *(void *)id v24 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "AuthenticateAccounts: session started. {self=%p}",  buf,  0xCu);
      }

      *(void *)(*(void *)(a1 + 32) + 72LL) = 2LL;
      id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16LL));
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472LL;
      v20[2] = sub_1000DB8F0;
      v20[3] = &unk_10018E468;
      id v7 = *(void *)(a1 + 32);
      id v21 = WeakRetained;
      id v22 = v7;
      id v8 = (os_log_s *)WeakRetained;
      dispatch_async(&_dispatch_main_q, v20);

      goto LABEL_17;
    }

    goto LABEL_14;
  }

  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKeyedSubscript:@"eo"]);
  uint64_t v14 = sub_1000DA028();
  BOOL v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
    sub_1000FCEA0(a1, v8);
  }

  [*(id *)(a1 + 32) _finishWithError:v8];
LABEL_17:
}

void sub_10002771C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings.IMAccounts", "TVSettingsIMAccountsFacade");
  id v2 = (void *)qword_1001E1600;
  qword_1001E1600 = (uint64_t)v1;
}

void sub_10002778C(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsBackgroundAppRefreshFacade);
  id v2 = (void *)qword_1001E1610;
  qword_1001E1610 = (uint64_t)v1;
}

void sub_1000277F4(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", @"com.apple.podcasts", 0LL));
  id v2 = (void *)qword_1001E1620;
  qword_1001E1620 = v1;
}

void sub_100027C14(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  if ([v5 applicationType] == (id)2
    || (id v6 = [(id)objc_opt_class(*(void *)(a1 + 32)) _allowedSystemApps],
        id v7 = (void *)objc_claimAutoreleasedReturnValue(v6),
        unsigned int v8 = [v7 containsObject:v11],
        v7,
        v8))
  {
    if (objc_msgSend(v5, "tvset_supportsBackgroundAppRefresh"))
    {
      id v9 = *(void **)(a1 + 40);
      id v10 = -[TVSettingsBackgroundAppRefreshSettings initWithIdentifier:]( objc_alloc(&OBJC_CLASS___TVSettingsBackgroundAppRefreshSettings),  "initWithIdentifier:",  v11);
      [v9 addObject:v10];
    }
  }
}

void sub_100027D78(uint64_t a1)
{
  id WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained + 3;
    id v4 = WeakRetained;
    os_unfair_lock_lock(WeakRetained + 3);
    unsigned int v3 = -[os_unfair_lock_s needsUpdate](v4, "needsUpdate");
    -[os_unfair_lock_s setNeedsUpdate:](v4, "setNeedsUpdate:", 0LL);
    os_unfair_lock_unlock(v2);
    id WeakRetained = v4;
    if (v3)
    {
      -[os_unfair_lock_s _updateApps](v4, "_updateApps");
      id WeakRetained = v4;
    }
  }
}

LABEL_13:
  return v9;
}

  return v9;
}

    BOOL v15 = objc_opt_class(&OBJC_CLASS___TVSettingsAppBundleViewController);
    if ((objc_opt_isKindOfClass(v9, v15) & 1) != 0)
    {
      id v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
      id v17 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsAppsFacade systemAppsWithSettings](self->_appsFacade, "systemAppsWithSettings"));
      [v16 addObjectsFromArray:v17];

      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsAppsFacade userAppsWithSettings](self->_appsFacade, "userAppsWithSettings"));
      [v16 addObjectsFromArray:v18];

      id v19 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsAppsViewController bundleID](v9, "bundleID"));
      __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(+[PBSAppInfoController sharedInstance](&OBJC_CLASS___PBSAppInfoController, "sharedInstance"));
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 appInfos]);
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 objectForKey:v19]);

      if ([v22 applicationType] == (id)2)
      {
        v27[0] = _NSConcreteStackBlock;
        v27[1] = 3221225472LL;
        v27[2] = sub_10008D734;
        v27[3] = &unk_100192588;
        __int128 v28 = v19;
        if ([v16 indexOfObjectPassingTest:v27] == (id)0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsAppsViewController navigationController](self, "navigationController"));
          [v23 dismissViewControllerAnimated:0 completion:0];

          id v24 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsAppsViewController navigationController](self, "navigationController"));
          id v25 = [v24 popToViewController:self animated:0];
        }
      }
    }
  }

  else
  {
    v26.receiver = self;
    v26.super_class = (Class)&OBJC_CLASS___TVSettingsAppsViewController;
    -[TVSettingsAppsViewController observeValueForKeyPath:ofObject:change:context:]( &v26,  "observeValueForKeyPath:ofObject:change:context:",  a3,  a4,  a5);
  }

  else {
    uint64_t v23 = 0;
  }
LABEL_16:

  return v23;
}

    id result = sub_1000ED328(a5, a6);
    *a1 = v13;
    return result;
  }

  if ((a6 & 0x1000000000000000LL) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000LL) != 0)
  {
    unsigned int v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }

  unsigned int v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "Swift/StringTesting.swift",  25LL,  2,  151LL,  0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    id result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableRawPointer.initializeMemory overlapping range",  58LL,  2LL,  "Swift/UnsafeRawPointer.swift",  28LL,  v14,  1173LL,  0);
    __break(1u);
    return result;
  }

int64_t sub_100028768(id a1, TSKSettingItem *a2, TSKSettingItem *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem localizedTitle](a2, "localizedTitle"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem localizedTitle](v4, "localizedTitle"));

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

NSString *sub_100028804(const __CFString *a1)
{
  uint64_t v1 = &stru_100195DD8;
  if (a1) {
    uint64_t v1 = a1;
  }
  return +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@%@",  @"UserWithAccountIdentifier=",  v1);
}

NSString *sub_100028850(const __CFString *a1)
{
  uint64_t v1 = &stru_100195DD8;
  if (a1) {
    uint64_t v1 = a1;
  }
  return +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@%@",  @"UserWithIdentifier=",  v1);
}

NSString *sub_10002889C(const __CFString *a1)
{
  uint64_t v1 = &stru_100195DD8;
  if (a1) {
    uint64_t v1 = a1;
  }
  return +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@%@",  @"SuggestedUserWithSuggestedUserIdentifier=",  v1);
}

id sub_100028F00()
{
  if (qword_1001E1638 != -1) {
    dispatch_once(&qword_1001E1638, &stru_10018FB30);
  }
  return (id)qword_1001E1630;
}

void sub_100029118( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100029140(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 localAccessory]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 home]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 hmHome]);

    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) homeUserInfo]);
    unsigned int v8 = [WeakRetained _isRMVEnabledInHome:v6 homeUserInfo:v7];

    id v9 = sub_100028F00();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 uniqueIdentifier]);
      int v12 = 138543618;
      uint64_t v13 = v11;
      __int16 v14 = 1024;
      unsigned int v15 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Home Setup Controller finished. {homeUniqueIdentifier = %{public}@, isHomeRMVEnabled=%d",  (uint8_t *)&v12,  0x12u);
    }

    [WeakRetained _finishTapToAddUserWithState:0];
  }
}

void sub_1000294CC(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a3 shortName]);
  [v8 setLocalizedValue:v5];

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) allUsers]);
  BOOL v7 = (unint64_t)[v6 count] < 2;

  [v8 setHidden:v7];
}

TVSettingsUserViewController *sub_1000297C8(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___TVSettingsUserViewController);
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) primaryUser]);
  id v4 = -[TVSettingsUserViewController initWithUser:](v2, "initWithUser:", v3);

  return v4;
}

void sub_10002981C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue([v2 primaryUser]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v6 name]);
  [v3 setLocalizedTitle:v4];

  objc_msgSend(v3, "setBadgeValue:", objc_msgSend(v6, "badgeCount"));
  [v3 setLocalizedValue:0];
  [v3 setHidden:v6 == 0];
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsUserProfilesViewController _deepLinkKeyForUser:]( &OBJC_CLASS___TVSettingsUserProfilesViewController,  "_deepLinkKeyForUser:",  v6));
  [v3 setDynamicDeepLinkKey:v5];
}

void sub_1000298D8(uint64_t a1, void *a2)
{
  id v10 = a2;
  [v10 setLocalizedValue:0];
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) guestUsers]);
  id v4 = [v3 count];

  if (v4) {
    id v5 = @"AccountsAddDefaultUserProfileDescriptionWithGuests";
  }
  else {
    id v5 = @"AccountsAddDefaultUserProfileDescription";
  }
  uint64_t v6 = TSKFeatureLocString("TVApp", "testarossa", v5);
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  [v10 setLocalizedDescription:v7];

  objc_msgSend(v10, "setHidden:", objc_msgSend(*(id *)(a1 + 32), "canAddPrimaryUser") ^ 1);
  LODWORD(v7) = [*(id *)(a1 + 32) isAddingPrimaryUser];
  objc_msgSend(v10, "setEnabled:", objc_msgSend(*(id *)(a1 + 32), "isAddingAnyUser") ^ 1);
  if ((_DWORD)v7) {
    uint64_t v8 = 4LL;
  }
  else {
    uint64_t v8 = 0LL;
  }
  [v10 setAccessoryTypes:v8];
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsUserProfilesViewController _addPrimaryUserDeepLinkKey]( &OBJC_CLASS___TVSettingsUserProfilesViewController,  "_addPrimaryUserDeepLinkKey"));
  [v10 setDynamicDeepLinkKey:v9];
}

id sub_100029AAC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 name]);
  uint64_t v6 = TSKLocString(@"AccountsAdditionalUserProfileDescription");
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_100029BE0;
  v15[3] = &unk_10018EC30;
  id v8 = v4;
  id v16 = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v5,  v7,  v8,  @"name",  v15));

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_100029C10;
  v12[3] = &unk_10018F7F0;
  id v13 = v8;
  id v14 = *(id *)(a1 + 32);
  id v10 = v8;
  [v9 setUpdateBlock:v12];

  return v9;
}

TVSettingsUserViewController *sub_100029BE0(uint64_t a1)
{
  return  -[TVSettingsUserViewController initWithUser:]( objc_alloc(&OBJC_CLASS___TVSettingsUserViewController),  "initWithUser:",  *(void *)(a1 + 32));
}

void sub_100029C10(uint64_t a1, void *a2, uint64_t a3)
{
  id v12 = a2;
  [v12 setLocalizedTitle:a3];
  objc_msgSend(v12, "setBadgeValue:", objc_msgSend(*(id *)(a1 + 32), "badgeCount"));
  [v12 setLocalizedValue:0];
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) primaryUser]);

  if (v5)
  {
    uint64_t v6 = TSKLocString(@"AccountsAdditionalUserProfileDescription");
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  }

  else
  {
    uint64_t v8 = TSKLocString(@"AccountsAdditionalUserProfileDescriptionWithoutDefaultUser");
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) shortName]);
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](&OBJC_CLASS___NSString, "localizedStringWithFormat:", v9, v10));
  }

  [v12 setLocalizedDescription:v7];

  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsUserProfilesViewController _deepLinkKeyForUser:]( &OBJC_CLASS___TVSettingsUserProfilesViewController,  "_deepLinkKeyForUser:",  *(void *)(a1 + 32)));
  [v12 setDynamicDeepLinkKey:v11];
}

void sub_100029E24(_Unwind_Exception *a1)
{
}

id sub_100029E48(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id *)(a1 + 40);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v5 fullName]);
  uint64_t v8 = TSKLocString(@"AccountsSuggestedUserProfileDescription");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v7,  v9,  v5,  0LL,  WeakRetained,  "_addSuggestedUser:"));

  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsUserProfilesViewController _addUserDeepLinkKeyForSuggestedUser:]( &OBJC_CLASS___TVSettingsUserProfilesViewController,  "_addUserDeepLinkKeyForSuggestedUser:",  v5));
  [v10 setDynamicDeepLinkKey:v11];

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_100029F74;
  v13[3] = &unk_10018F840;
  id v14 = *(id *)(a1 + 32);
  [v10 setUpdateBlock:v13];

  return v10;
}

void sub_100029F74(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "isAddingAnyUser") ^ 1);
}

void sub_10002A184(uint64_t a1, void *a2)
{
  id v15 = a2;
  [v15 setLocalizedValue:0];
  unsigned int v3 = [*(id *)(a1 + 32) isAddingGuestUser];
  unsigned int v4 = [*(id *)(a1 + 32) isAddingAnyUser];
  unsigned int v5 = [*(id *)(a1 + 32) canAddNewGuestUser];
  [v15 setEnabled:v5 & (v4 ^ 1)];
  if (v3) {
    uint64_t v6 = 4LL;
  }
  else {
    uint64_t v6 = 0LL;
  }
  [v15 setAccessoryTypes:v6];
  if (v5)
  {
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) guestUsers]);
    if ([v7 count])
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) primaryUser]);

      if (!v8)
      {
        id v9 = @"AccountsAddAdditionalUserProfileDescriptionWithGuestsButNoDefaultUser";
LABEL_11:
        uint64_t v12 = TSKFeatureLocString("TVApp", "testarossa", v9);
        uint64_t v11 = objc_claimAutoreleasedReturnValue(v12);
        goto LABEL_12;
      }
    }

    else
    {
    }

    id v9 = @"AccountsAddAdditionalUserProfileDescription";
    goto LABEL_11;
  }

  uint64_t v10 = TSKLocString(@"AccountsCannotAddMoreAdditionalUsersDescription");
  uint64_t v11 = objc_claimAutoreleasedReturnValue(v10);
LABEL_12:
  id v13 = (void *)v11;
  [v15 setLocalizedDescription:v11];

  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsUserProfilesViewController _addGuestUserDeepLinkKey]( &OBJC_CLASS___TVSettingsUserProfilesViewController,  "_addGuestUserDeepLinkKey"));
  [v15 setDynamicDeepLinkKey:v14];
}

void sub_10002A2D0(uint64_t a1, void *a2)
{
  id v9 = a2;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) guestUsers]);
  unint64_t v4 = (unint64_t)[v3 count];

  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) suggestedUsers]);
  unint64_t v6 = v4 | (unint64_t)[v5 count];

  if (v6)
  {
    uint64_t v8 = 0LL;
  }

  else
  {
    uint64_t v7 = TSKLocString(@"AccountsUserProfilesGuestUsersGroupTitle");
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  }

  [v9 setLocalizedTitle:v8];
}

void sub_10002A62C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10002A658(id a1, TSKSettingItem *a2, id a3)
{
  -[TSKSettingItem setHidden:](a2, "setHidden:", a3 == 0LL);
}

void sub_10002A668(uint64_t a1, void *a2)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained imAccountsFacade]);
  id v5 = [v4 faceTimeSignInStatus];

  id v6 = [WeakRetained shouldHideExpanse];
  if (v5 == (id)2) {
    uint64_t v7 = 0LL;
  }
  else {
    uint64_t v7 = v6 ^ 1;
  }
  [v8 setEnabled:v7];
  [v8 setHidden:v6];
  if (v5 == (id)2) {
    [v8 setLocalizedValue:&stru_100195DD8];
  }
}

void sub_10002ABB8(uint64_t a1)
{
  uint64_t v2 = -[TVSettingsTapToAddUserPresenter initWithUserType:allowsManualSignIn:]( objc_alloc(&OBJC_CLASS____TtC10TVSettings31TVSettingsTapToAddUserPresenter),  "initWithUserType:allowsManualSignIn:",  *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48));
  [*(id *)(a1 + 32) _startTapToAddFlowWithPresenter:v2];
}

void sub_10002AC08(uint64_t a1)
{
  uint64_t v2 = -[TVSettingsTapToAddUserPresenter initWithUserType:allowsManualSignIn:]( objc_alloc(&OBJC_CLASS____TtC10TVSettings31TVSettingsTapToAddUserPresenter),  "initWithUserType:allowsManualSignIn:",  1LL,  *(unsigned __int8 *)(a1 + 40));
  [*(id *)(a1 + 32) _startTapToAddFlowWithPresenter:v2];
}

void sub_10002AF6C(id a1, TSKSettingItem *a2, NSNumber *a3)
{
  unint64_t v4 = a2;
  -[TSKSettingItem setHidden:](v4, "setHidden:", -[NSNumber BOOLValue](a3, "BOOLValue"));
  id v6 = (id)objc_claimAutoreleasedReturnValue(+[PBSAppleConnectSettings sharedInstance](&OBJC_CLASS___PBSAppleConnectSettings, "sharedInstance"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v6 accountID]);
  -[TSKSettingItem setLocalizedValue:](v4, "setLocalizedValue:", v5);
}

void sub_10002B2A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id location)
{
}

void sub_10002B31C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained sandboxFacade]);
  uint64_t v5 = [v4 isAuthenticationInProgress] ^ 1;

  [v3 setEnabled:v5];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained sandboxFacade]);
  uint64_t v7 = [v6 isSandboxUIEnabled] ^ 1;

  [v3 setHidden:v7];
}

void sub_10002B3B0(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  uint64_t v5 = (id *)(a1 + 32);
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(v5);
  uint64_t v8 = TSKLocString(@"iTMSSignOutTitle");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  [v15 setLocalizedTitle:v9];

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 username]);
  [v15 setLocalizedValue:v10];

  [v15 setLocalizedDescription:0];
  [v15 setHidden:v6 == 0];
  if (v6)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained sandboxFacade]);
    unsigned int v12 = [v11 isSignOutInProgress];

    if (v12)
    {
      [v15 setEnabled:0];
      [v15 setAccessoryTypes:4];
      uint64_t v13 = TSKLocString(@"AccountSigningOutTitle");
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      [v15 setLocalizedTitle:v14];
    }

    else
    {
      [v15 setEnabled:1];
      [v15 setAccessoryTypes:0];
    }
  }
}

void sub_10002B4E8(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [v12 setLocalizedValue:0];
  unsigned int v7 = [v5 BOOLValue];

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained sandboxFacade]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 sandboxAccount]);

  [v12 setHidden:v9 != 0];
  if (!v9)
  {
    uint64_t v10 = v7 ^ 1;
    if (v7) {
      uint64_t v11 = 4LL;
    }
    else {
      uint64_t v11 = 0LL;
    }
    [v12 setEnabled:v10];
    [v12 setAccessoryTypes:v11];
  }
}

void sub_10002B82C(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sandboxFacade]);
  [v1 signOut];
}

void sub_10002BA40( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_10002BA74(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) versionInfo]);
  [v12 setLocalizedDescription:v6];

  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "ams_activeiTunesAccount"));

  [v12 setHidden:v8 != 0];
  if (!v8)
  {
    uint64_t v9 = objc_claimAutoreleasedReturnValue([v5 displayName]);
    [v12 setLocalizedValue:v9];

    LOBYTE(v9) = [v12 accessoryTypes];
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[TVSStoreFront sharedInstance](&OBJC_CLASS___TVSStoreFront, "sharedInstance"));
    unsigned int v11 = [v10 isChangingStoreFront];

    if (((((v9 & 4) == 0) ^ v11) & 1) == 0) {
      objc_msgSend(v12, "setAccessoryTypes:", (unint64_t)objc_msgSend(v12, "accessoryTypes") ^ 4);
    }
  }
}

void sub_10002BB8C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained userProfilesFacade]);
  if ([v4 isAddingAnyUser])
  {
    uint64_t v5 = 0LL;
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained sandboxFacade]);
    uint64_t v5 = [v6 isAuthenticationInProgress] ^ 1;
  }

  [v3 setEnabled:v5];
}

BOOL sub_10002BCF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (BSEqualStrings(v3, @"PrimaryUserProfile") && ![*(id *)(a1 + 32) type]
    || BSEqualStrings(v3, @"SelectedUserProfile")
    && ([*(id *)(a1 + 32) isSelected] & 1) != 0)
  {
    BOOL v4 = 1LL;
  }

  else
  {
    id v5 = sub_10002BDFC((uint64_t)@"UserWithIdentifier=", v3);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    if (v6
      && (unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]),
          unsigned __int8 v8 = [v6 isEqual:v7],
          v7,
          (v8 & 1) != 0))
    {
      BOOL v4 = 1LL;
    }

    else
    {
      id v9 = sub_10002BDFC((uint64_t)@"UserWithAccountIdentifier=", v3);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      BOOL v4 = v10 && ([*(id *)(a1 + 40) containsObject:v10] & 1) != 0;
    }
  }

  return v4;
}

id sub_10002BDFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 rangeOfString:a1] == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v5 = 0LL;
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 substringFromIndex:v4]);
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceCharacterSet](&OBJC_CLASS___NSCharacterSet, "whitespaceCharacterSet"));
    unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue([v6 stringByTrimmingCharactersInSet:v7]);

    if ([v8 length]) {
      id v5 = v8;
    }
    else {
      id v5 = 0LL;
    }
  }

  return v5;
}

BOOL sub_10002BED8(id a1, NSString *a2)
{
  uint64_t v2 = a2;
  else {
    char v3 = BSEqualStrings(v2, @"NewUser");
  }

  return v3;
}

BOOL sub_10002BF54(id a1, NSString *a2)
{
  uint64_t v2 = a2;
  if ((BSEqualStrings(v2, @"NewGuestUser") & 1) != 0) {
    char v3 = 1;
  }
  else {
    char v3 = BSEqualStrings(v2, @"NewUser");
  }

  return v3;
}

uint64_t sub_10002C04C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((BSEqualStrings(v3, @"SuggestedUser") & 1) != 0)
  {
    uint64_t v4 = 1LL;
  }

  else
  {
    id v5 = *(const __CFString **)(a1 + 32);
    if (!v5) {
      id v5 = &stru_100195DD8;
    }
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@%@",  @"SuggestedUserWithSuggestedUserIdentifier=",  v5));
    uint64_t v4 = BSEqualStrings(v3, v6);
  }

  return v4;
}

void sub_10002CE18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id *location)
{
}

void sub_10002CE60(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [*(id *)(a1 + 32) removePreferredLanguage:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) insertPreferredLanguage:*(void *)(a1 + 40) withVariants:0 atIndex:a2];
  id v5 = (void *)objc_opt_new(&OBJC_CLASS___PBSUpdateUserProfileAttributes);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredLanguages]);
  [v5 setPreferredLanguages:v6];

  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredInputModeList]);
  [v5 setPreferredInputModes:v7];

  unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue(+[PBSUserProfileManager sharedInstance](&OBJC_CLASS___PBSUserProfileManager, "sharedInstance"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) identifier]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_10002CF7C;
  v10[3] = &unk_10018F9F8;
  v10[4] = WeakRetained;
  [v8 updateUserProfileWithIdentifier:v9 attributes:v5 completionHandler:v10];
}

void sub_10002CF7C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10002CFD8;
  block[3] = &unk_10018E440;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
}

id sub_10002CFD8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _finishTapToAddUserWithState:1];
}

uint64_t sub_10002CFE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10002CFF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10002D178(_Unwind_Exception *a1)
{
}

void sub_10002D194(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _finishTapToAddUserWithState:2];
}

uint64_t sub_10002D1C4(uint64_t a1)
{
  id v2 = sub_100028F00();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "RMV view controller has completed.", v5, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10002D3F0(_Unwind_Exception *a1)
{
}

void sub_10002D420(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_10002D4A4;
  v3[3] = &unk_10018FA98;
  id v4 = *(id *)(a1 + 32);
  [WeakRetained dismissViewControllerAnimated:1 completion:v3];
}

uint64_t sub_10002D4A4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

void sub_10002D4BC(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10002D550;
  v5[3] = &unk_10018FAE8;
  id v6 = *(id *)(a1 + 32);
  char v7 = a2;
  [WeakRetained dismissViewControllerAnimated:1 completion:v5];
}

uint64_t sub_10002D550(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(unsigned __int8 *)(a1 + 40));
  }
  return result;
}

void sub_10002D8B0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "UserProfilesViewController");
  id v2 = (void *)qword_1001E1630;
  qword_1001E1630 = (uint64_t)v1;
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_10002D950()
{
  return objc_opt_class(v0);
}

  ;
}

uint64_t sub_10002D968()
{
  return objc_opt_class(v0);
}

id sub_10002DD44(uint64_t a1, void *a2)
{
  return [a2 _updateDeveloperBundleLoader];
}

void sub_10002E62C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
}

void sub_10002E6A0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _supervisionDescription]);
  [v3 setLocalizedDescription:v4];
}

TVSettingsUserProfilesViewController *sub_10002E6FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = -[TVSettingsUserProfileListFacade initWithFollowUpController:]( objc_alloc(&OBJC_CLASS___TVSettingsUserProfileListFacade),  "initWithFollowUpController:",  *(void *)(a1 + 32));
  id v5 = -[TVSettingsUserProfilesViewController initWithUserProfilesFacade:]( objc_alloc(&OBJC_CLASS___TVSettingsUserProfilesViewController),  "initWithUserProfilesFacade:",  v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 localizedTitle]);

  -[TVSettingsUserProfilesViewController setTitle:](v5, "setTitle:", v6);
  return v5;
}

void sub_10002E788(id a1, TSKSettingItem *a2, id a3)
{
}

void sub_10002E794(id a1, TSKSettingItem *a2, id a3)
{
  id v4 = a2;
  -[TSKSettingItem setHidden:](v4, "setHidden:", [a3 count] == 0);
  -[TSKSettingItem setLocalizedValue:](v4, "setLocalizedValue:", 0LL);
}

void sub_10002E7E8(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained developerBundleLoader]);
  [v7 setBundleLoader:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v7 bundleLoader]);
  if (v5)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    objc_msgSend(v7, "setHidden:", objc_msgSend(v6, "BOOLForKey:", @"HideInternalAndDeveloperSettings"));
  }

  else
  {
    [v7 setHidden:1];
  }
}

void sub_10002E89C(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  -[TSKSettingItem setHidden:]( v3,  "setHidden:",  [v4 BOOLForKey:@"IDSDiagnosticsEnabled"] ^ 1);
}

void sub_10002E8FC(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  -[TSKSettingItem setHidden:]( v3,  "setHidden:",  [v4 BOOLForKey:@"HideInternalAndDeveloperSettings"]);
}

void sub_10002E95C(id a1, TSKSettingItem *a2, FLTVSettingsItemModel *a3)
{
  id v9 = a2;
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[FLTVSettingsItemModel title](v4, "title"));
  -[TSKSettingItem setLocalizedTitle:](v9, "setLocalizedTitle:", v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[FLTVSettingsItemModel informativeText](v4, "informativeText"));
  -[TSKSettingItem setLocalizedDescription:](v9, "setLocalizedDescription:", v6);

  -[TSKSettingItem setBadgeValue:](v9, "setBadgeValue:", -[FLTVSettingsItemModel badgeCount](v4, "badgeCount"));
  if (v4) {
    uint64_t v7 = (uint64_t)-[FLTVSettingsItemModel shouldHide](v4, "shouldHide");
  }
  else {
    uint64_t v7 = 1LL;
  }
  -[TSKSettingItem setHidden:](v9, "setHidden:", v7);
  unint64_t v8 = (unint64_t)-[FLTVSettingsItemModel accessoryType](v4, "accessoryType");
  if (v8 <= 2) {
    -[TSKSettingItem setAccessoryTypes:](v9, "setAccessoryTypes:", qword_100129F40[v8]);
  }
}

void sub_10002EBE0(_Unwind_Exception *a1)
{
}

void sub_10002EC04(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    v7[3] = v2;
    void v7[4] = v3;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_10002EC9C;
    v5[3] = &unk_10018E568;
    objc_copyWeak(v7, (id *)(a1 + 40));
    id v6 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, v5);

    objc_destroyWeak(v7);
  }

void sub_10002EC9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v2 pushViewController:*(void *)(a1 + 32) animated:1];
}

LABEL_18:
}

      if ([v11 dynamicRange] == (id)538423557
        && objc_msgSend(v17, "tvs_isEqualResolutionAndRefreshRate:", v11))
      {
        if ([v11 SDRColorMapping] == (id)538424066)
        {
          id v26 = [v17 SDRChromaSubsampling];
          __int128 v27 = [v11 SDRChromaSubsampling];
        }

        else
        {
          id v26 = [v17 SDRColorMapping];
          __int128 v27 = [v11 SDRColorMapping];
        }

        if (v26 != v27)
        {
LABEL_26:
          __int128 v28 = 0;
          goto LABEL_27;
        }
      }

      else if ([v17 dynamicRange] != (id)538423557)
      {
        goto LABEL_26;
      }

      __int128 v28 = ((uint64_t (*)(void *, void *, unint64_t))v32[2])(v32, v17, v16);
LABEL_27:
      id v15 = v34;
      id v24 = v28;
      IsDolbyVision |= v28;
LABEL_28:
      id v5 = v5 & 0xFFFFFFFFFF000000LL | v22 | ((unint64_t)v23 << 8) | (v24 << 16);
      -[NSMutableDictionary tvs_setFoundColorMode:forDisplayMode:]( v15,  "tvs_setFoundColorMode:forDisplayMode:",  v5,  v17);
      if (IsDolbyVision && v33) {
        v33[2]();
      }

      ++v16;
    }

    while (v16 < (unint64_t)[v12 count]);
  }
}
}

void sub_10002F7D0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "isLoadingContentRestrictions") ^ 1);
}

void sub_10002F814(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v7 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 contentRestrictionsCountryCode]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v7 representedObject]);
  unsigned int v5 = [v3 isEqual:v4];

  if (v5) {
    uint64_t v6 = 2LL;
  }
  else {
    uint64_t v6 = 0LL;
  }
  [v7 setAccessoryTypes:v6];
}

NSString *__cdecl sub_10002F96C(id a1, id a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 displayNameForKey:NSLocaleCountryCode value:v2]);

  return (NSString *)v4;
}

void sub_10002FA44(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsDeviceFacade);
  id v2 = (void *)qword_1001E1640;
  qword_1001E1640 = (uint64_t)v1;

  objc_initWeak(&location, (id)qword_1001E1640);
  id v3 = -[NSUserDefaults initWithSuiteName:]( objc_alloc(&OBJC_CLASS___NSUserDefaults),  "initWithSuiteName:",  @"com.apple.PineBoard");
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSObservableKeyPath keyPathWithRootObject:path:]( &OBJC_CLASS___NSObservableKeyPath,  "keyPathWithRootObject:path:",  v3,  "SleepTimeoutInSeconds"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_10002FB70;
  v7[3] = &unk_10018FCA0;
  objc_copyWeak(&v8, &location);
  uint64_t v5 = objc_claimAutoreleasedReturnValue([v4 addObserverBlock:v7]);
  uint64_t v6 = (void *)qword_1001E1650;
  qword_1001E1650 = v5;

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void sub_10002FB4C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10002FB70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateSleepTimeoutValue];
}

void sub_10002FDB8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10002FDE0(uint64_t a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472LL;
  v1[2] = sub_10002FE64;
  v1[3] = &unk_10018E810;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  TVSPerformBlockOnMainThread(v1);
  objc_destroyWeak(&v2);
}

void sub_10002FE50(_Unwind_Exception *a1)
{
}

void sub_10002FE64(uint64_t a1)
{
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  id v2 = off_1001DF7B0[0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [v4 postNotificationName:v2 object:WeakRetained];
}

void sub_10002FEC8(id a1, __CFString *a2, __CFDictionary *a3)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[TVSettingsDeviceFacade sharedInstance](&OBJC_CLASS___TVSettingsDeviceFacade, "sharedInstance", a3));
  [v3 willChangeValueForKey:@"name"];
  [v3 didChangeValueForKey:@"name"];
}

void sub_10002FF1C()
{
  id v0 = (id)objc_claimAutoreleasedReturnValue(+[TVSettingsDeviceFacade sharedInstance](&OBJC_CLASS___TVSettingsDeviceFacade, "sharedInstance"));
  [v0 _updateAutomaticTimeZoneEnabled:1];
}

void sub_1000306B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000306D0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TVSTimeZoneUtility sharedInstance](&OBJC_CLASS___TVSTimeZoneUtility, "sharedInstance"));
  unsigned __int8 v3 = [v2 isAutomaticTimeZoneSelectionEnabled];

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100030784;
  v4[3] = &unk_10018F408;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  unsigned __int8 v6 = v3;
  BSDispatchMain(v4);
  objc_destroyWeak(&v5);
}

void sub_100030770(_Unwind_Exception *a1)
{
}

void sub_100030784(uint64_t a1)
{
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && WeakRetained[17] != *(unsigned __int8 *)(a1 + 40))
  {
    unsigned __int8 v3 = WeakRetained;
    [WeakRetained willChangeValueForKey:@"automaticTimeZoneSelectionEnabled"];
    v3[17] = *(_BYTE *)(a1 + 40);
    [v3 didChangeValueForKey:@"automaticTimeZoneSelectionEnabled"];
    id WeakRetained = v3;
  }
}

void sub_100030BA0(_Unwind_Exception *a1)
{
}

void sub_100030BC4(uint64_t a1, double a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100030C48;
  v4[3] = &unk_10018EE18;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v6 = a2;
  id v3 = WeakRetained;
  TVSPerformBlockOnMainThread(v4);
}

double *sub_100030C48(uint64_t a1)
{
  uint64_t result = *(double **)(a1 + 32);
  if (result)
  {
    if (result[5] != *(double *)(a1 + 40))
    {
      [result willChangeValueForKey:@"sleepTimeout"];
      *(void *)(*(void *)(a1 + 32) + 40LL) = *(void *)(a1 + 40);
      return (double *)[*(id *)(a1 + 32) didChangeValueForKey:@"sleepTimeout"];
    }
  }

  return result;
}

void sub_100030E10(id a1)
{
  io_registry_entry_t v1 = IORegistryEntryFromPath(kIOMainPortDefault, "IODeviceTree:/filesystems");
  if (v1)
  {
    io_object_t v2 = v1;
    CFTypeRef CFProperty = IORegistryEntryCreateCFProperty(v1, @"e-apfs", kCFAllocatorDefault, 0);
    if (CFProperty)
    {
      byte_1001E1658 = 1;
      CFRelease(CFProperty);
    }

    IOObjectRelease(v2);
  }

id sub_100030FF4(uint64_t a1)
{
  return [[OBPrivacySplashController alloc] initWithFlow:*(void *)(a1 + 32)];
}

uint64_t sub_100031024(float a1, float a2, float a3, float a4)
{
  if (a4 <= 1.0)
  {
    BOOL v4 = a4 >= 0.0 && a3 <= 1.0;
    if (v4 && a3 >= 0.0 && a2 <= 1.0 && a1 >= 0.0 && a1 <= 1.0 && a2 >= 0.0)
    {
      float v6 = (float)(1.0 - a4) + (float)(a1 * a4);
      uint64_t v7 = 0LL;
      int v8 = 0;
      float v9 = (float)(1.0 - a4) + (float)(a2 * a4);
      uint64_t v10 = 0LL;
      int v11 = 0;
      float v12 = (float)(1.0 - a4) + (float)(a3 * a4);
      int v13 = 1065353216;
      return CARenderServerSetAXMatrix(0LL, &v6);
    }
  }

  return result;
}

uint64_t sub_1000310EC()
{
  v6[0] = xmmword_100129F60;
  v6[1] = xmmword_100129F60;
  __asm { FMOV            V0.2S, #1.0 }

  uint64_t v7 = _D0;
  return CARenderServerSetAXMatrix(0LL, v6);
}

void sub_100031610( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10003162C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  io_object_t v2 = WeakRetained;
  if (WeakRetained)
  {
    if ((unint64_t)[WeakRetained[4] count] <= 9)
    {
      do
      {
        id v3 = objc_claimAutoreleasedReturnValue([v2[5] popNextImage]);
        id v4 = [v3 image];

        if (!v4) {
          break;
        }
        id v5 = -[UIImage initWithCGImage:](objc_alloc(&OBJC_CLASS___UIImage), "initWithCGImage:", v4);
        [v2 _addImageToAnimationContainer:v5];
      }

      while ((unint64_t)[v2[4] count] < 0xA);
    }

    float v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[4], "tvs_randomizedArray"));
    id v7 = [v6 mutableCopy];
    id v8 = v2[4];
    v2[4] = v7;

    v2[2] = 0LL;
    float v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](&OBJC_CLASS___UIScreen, "mainScreen"));
    [v9 bounds];
    double Width = CGRectGetWidth(v28);

    __int128 v25 = 0u;
    __int128 v26 = 0u;
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    id v11 = [v2[4] copy];
    id v12 = [v11 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v24;
      double v15 = 0.0;
LABEL_7:
      uint64_t v16 = 0LL;
      while (1)
      {
        if (*(void *)v24 != v14) {
          objc_enumerationMutation(v11);
        }
        id v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v23 + 1) + 8 * v16) image]);
        [v2 _addImageToAnimationContainer:v17];
        [v17 size];
        double v15 = v15 + v18;
        v2[2] = (char *)v2[2] + 1;

        if (v15 >= Width) {
          break;
        }
        if (v13 == (id)++v16)
        {
          id v13 = [v11 countByEnumeratingWithState:&v23 objects:v27 count:16];
          if (v13) {
            goto LABEL_7;
          }
          break;
        }
      }
    }

    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    [v19 postNotificationName:@"TVSettingsScrollingParadeViewWillDisplayNotification" object:v2];

    __int16 v20 = (dispatch_group_s *)v2[3];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000318C8;
    block[3] = &unk_10018E440;
    id v22 = v2;
    dispatch_group_notify(v20, &_dispatch_main_q, block);
  }
}

id sub_1000318C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startAnimations];
}

void sub_10003214C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && WeakRetained[8])
  {
    WeakRetained[8] = 0;
    io_object_t v2 = WeakRetained;
    [WeakRetained _startAnimations];
    id WeakRetained = v2;
  }
}

void sub_100032724(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) progressView]);
  LODWORD(v1) = 0;
  [v2 setProgressPercent:v1];
}

void sub_1000327CC(uint64_t a1)
{
  unsigned __int8 v2 = objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  PBSOSUpdateServiceKeyIsAvailable,  0);
  if (objc_msgSend(*(id *)(a1 + 32), "tvs_BOOLForKey:defaultValue:", PBSOSUpdateServiceKeyIsRestore, 0))
  {
    if ((v2 & 1) == 0)
    {
      id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) navigationController]);
      objc_msgSend(v3, "tvcs_popToViewControllerBelowViewController:", *(void *)(a1 + 40));
    }
  }

void sub_1000328A8(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) progressView]);
  LODWORD(v1) = 0;
  [v2 setProgressPercent:v1];
}

void sub_100032950(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bs_safeNumberForKey:", PBSOSUpdateServiceKeyProgressAmount));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) progressView]);
  [v5 floatValue];
  objc_msgSend(v2, "setProgressPercent:");

  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsSoftwareUpdatesViewController progressTextFromData:]( &OBJC_CLASS___TVSettingsSoftwareUpdatesViewController,  "progressTextFromData:",  *(void *)(a1 + 32)));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) progressView]);
  [v4 setStepText:v3];
}

void sub_100032A64(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) progressView]);
  [v2 setStepText:&stru_100195DD8];

  if ((objc_msgSend( *(id *)(a1 + 40),  "tvs_BOOLForKey:defaultValue:",  PBSOSUpdateServiceKeyDidSucceed,  0) & 1) == 0)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
    objc_msgSend(v3, "tvcs_popToViewControllerBelowViewController:", *(void *)(a1 + 32));
  }

void sub_100032B44(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  objc_msgSend(v2, "tvcs_popToViewControllerBelowViewController:", *(void *)(a1 + 32));
}

void sub_100032C08(uint64_t a1)
{
  if ((objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  PBSOSUpdateServiceKeyDidSucceed,  0) & 1) == 0)
  {
    [*(id *)(a1 + 40) setCancelOnExit:0];
    id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) navigationController]);
    objc_msgSend(v2, "tvcs_popToViewControllerBelowViewController:", *(void *)(a1 + 40));
  }

void sub_100032E9C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100032ECC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  objc_msgSend(v1, "tvcs_popToViewControllerBelowViewController:", WeakRetained);
}

void sub_100033034(id a1)
{
  double v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsAudioVideoFacade);
  id v2 = (void *)qword_1001E1668;
  qword_1001E1668 = (uint64_t)v1;
}

void sub_100033324( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100033348(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateAvailableAudioLanguageCodes:1];
}

id sub_10003398C()
{
  if (qword_1001E1690 != -1) {
    dispatch_once(&qword_1001E1690, &stru_10018FE30);
  }
  return (id)qword_1001E1688;
}

void sub_10003405C(id a1, BOOL a2)
{
  if (!a2)
  {
    id v2 = sub_10003398C();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1000F7490(v3);
    }
  }

void sub_100034390(_Unwind_Exception *a1)
{
}

void sub_1000343C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateSelectedSubtitleOption:1];
}

void sub_1000343F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateAvailableSubtitleLanguageOptions:1];
  [WeakRetained _updateSelectedSubtitleOption:1];
}

void sub_100034434(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateAvailableAudioLanguageCodes:1];
}

void sub_100034464(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateEnhanceDialogueSupportsLevels];
}

void sub_100034490(uint64_t a1)
{
  id v2 = sub_10003398C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Called to update level", v5, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateEnhanceDialogueLevel];
}

void sub_10003450C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateEnhanceDialogueLevel];
}

void sub_100035010(id a1)
{
  double v1 = (void *)qword_1001E1678;
  qword_1001E1678 = (uint64_t)&off_1001AEBF0;
}

int64_t sub_1000352F4(id a1, NSString *a2, NSString *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSInternationalization displayNameForLanguage:displayLanguage:]( &OBJC_CLASS___TVSInternationalization,  "displayNameForLanguage:displayLanguage:",  a2,  0LL));
  float v6 = (void *)objc_claimAutoreleasedReturnValue( +[TVSInternationalization displayNameForLanguage:displayLanguage:]( &OBJC_CLASS___TVSInternationalization,  "displayNameForLanguage:displayLanguage:",  v4,  0LL));

  id v7 = [v5 localizedCaseInsensitiveCompare:v6];
  return (int64_t)v7;
}

int64_t sub_100035378(id a1, NSString *a2, NSString *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSInternationalization displayNameForLanguage:displayLanguage:]( &OBJC_CLASS___TVSInternationalization,  "displayNameForLanguage:displayLanguage:",  a2,  0LL));
  float v6 = (void *)objc_claimAutoreleasedReturnValue( +[TVSInternationalization displayNameForLanguage:displayLanguage:]( &OBJC_CLASS___TVSInternationalization,  "displayNameForLanguage:displayLanguage:",  v4,  0LL));

  id v7 = [v5 localizedCaseInsensitiveCompare:v6];
  return (int64_t)v7;
}

void sub_1000354D4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings.AudioVideo", "TVSettingsAudioVideoFacade");
  id v2 = (void *)qword_1001E1688;
  qword_1001E1688 = (uint64_t)v1;
}

void sub_100035B30(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = (id)objc_claimAutoreleasedReturnValue([v3 representedObject]);
  objc_msgSend( v3,  "setAccessoryTypes:",  2 * (objc_msgSend(v5, "audioQuality") == objc_msgSend(*(id *)(a1 + 32), "audioQuality")));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v5 subtitle]);
  [v3 setLocalizedValue:v4];
}

void sub_1000361A0(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1001E1698;
  qword_1001E1698 = (uint64_t)v1;
}

CFStringRef sub_10003644C(uint64_t a1)
{
  else {
    return *(&off_10018FE78 + a1 - 1);
  }
}

id sub_100036DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) setClass:a3 forClassName:a2];
}

void sub_1000376C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1000376F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained actionButton]);
  CATransform3DMakeScale(&v3, 1.0, 1.0, 1.0);
  [v2 setTransform3D:&v3];
}

void sub_100037758(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained actionButton]);
  [v1 setAlpha:1.0];
}

void sub_100037854(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) actionButton]);
  [v2 setAlpha:0.0];

  CATransform3D v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) actionButton]);
  __int128 v4 = *(_OWORD *)&CATransform3DIdentity.m33;
  *(_OWORD *)&v8.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
  *(_OWORD *)&v8.m33 = v4;
  __int128 v5 = *(_OWORD *)&CATransform3DIdentity.m43;
  *(_OWORD *)&v8.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
  *(_OWORD *)&v8.m43 = v5;
  __int128 v6 = *(_OWORD *)&CATransform3DIdentity.m13;
  *(_OWORD *)&v8.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
  *(_OWORD *)&v8.m13 = v6;
  __int128 v7 = *(_OWORD *)&CATransform3DIdentity.m23;
  *(_OWORD *)&v8.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
  *(_OWORD *)&v8.m23 = v7;
  CATransform3DScale(&v9, &v8, 0.8, 0.8, 1.0);
  [v3 setTransform3D:&v9];
}

void sub_100037E70( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_100037EB4(uint64_t a1, void *a2, void *a3)
{
  __int128 v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateForgetNetworkItem:v6 value:v5];
}

BOOL sub_10003823C(id a1, UIViewController *a2, unint64_t a3, BOOL *a4)
{
  __int128 v4 = a2;
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___TVSettingsNetworkViewController);
  char isKindOfClass = objc_opt_isKindOfClass(v4, v5);

  return isKindOfClass & 1;
}

void sub_100038780( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
}

id sub_1000387EC(id *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] smartNotificationsFormatter]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 stringForObjectValue:v4]);

  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  CATransform3D v8 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  0LL,  v4,  0LL,  WeakRetained,  "_selectedItem:"));

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  v11[2] = sub_1000388F8;
  v11[3] = &unk_10018ED70;
  id v12 = a1[5];
  id v13 = v4;
  id v9 = v4;
  [v8 setUpdateBlock:v11];

  return v8;
}

void sub_1000388F8(uint64_t a1, void *a2)
{
  CATransform3D v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v3 smartNotificationsState]));
  else {
    uint64_t v5 = 0LL;
  }
  [v4 setAccessoryTypes:v5];
}

id sub_10003897C(id *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] significantEventTypesFormatter]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 stringForObjectValue:v4]);

  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  CATransform3D v8 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  0LL,  v4,  0LL,  WeakRetained,  "_toggledSignificantEventType:"));

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  v11[2] = sub_100038A8C;
  v11[3] = &unk_10018ED70;
  id v12 = v4;
  id v13 = a1[5];
  id v9 = v4;
  [v8 setUpdateBlock:v11];

  return v8;
}

void sub_100038A8C(uint64_t a1, void *a2)
{
  CATransform3D v3 = *(void **)(a1 + 32);
  id v4 = a2;
  unint64_t v5 = (unint64_t)[v3 unsignedIntegerValue];
  else {
    id v6 = @"SettingsON";
  }
  uint64_t v7 = TSKLocString(v6);
  id v8 = (id)objc_claimAutoreleasedReturnValue(v7);
  [v4 setLocalizedValue:v8];
}

void sub_100038B10(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v2 smartNotificationsState]));
  objc_msgSend(v3, "setHidden:", objc_msgSend(v4, "isEqual:", &off_1001ACE88) ^ 1);
}

id sub_100038B88(id *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  unint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] timesFormatter]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 stringForObjectValue:v4]);

  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  0LL,  v4,  0LL,  WeakRetained,  "_selectedTime:"));

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  v11[2] = sub_100038C94;
  v11[3] = &unk_10018ED70;
  id v12 = a1[5];
  id v13 = v4;
  id v9 = v4;
  [v8 setUpdateBlock:v11];

  return v8;
}

void sub_100038C94(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v3 triggerTime]));
  else {
    uint64_t v5 = 0LL;
  }
  [v4 setAccessoryTypes:v5];
}

void sub_100038D18(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v2 smartNotificationsState]));
  objc_msgSend(v3, "setHidden:", objc_msgSend(v4, "isEqual:", &off_1001ACEA0));
}

LABEL_8:
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsHomeKitActivityNotificationsViewController cameraProfile](self, "cameraProfile"));
    [v14 setSmartNotificationsState:v5];
    goto LABEL_9;
  }

  uint64_t v11 = @"HomeKitRecordingOffAlertMessage";
  id v12 = @"HomeKitRecordingOffAlertTitle";
LABEL_7:
  id v13 = TSKLocString(v12);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  double v15 = TSKLocString(v11);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  id v17 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  v14,  v16,  1LL));
  double v18 = TSKLocString(@"HomeKitRecordingOffAlertButtonTitle");
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  __int16 v20 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v19,  0LL,  0LL));
  [v17 addAction:v20];

  id v21 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  0LL,  1LL,  0LL));
  [v17 addAction:v21];

  -[TVSettingsHomeKitActivityNotificationsViewController presentViewController:animated:completion:]( self,  "presentViewController:animated:completion:",  v17,  1LL,  0LL);
LABEL_9:
}

  return v9;
}

  uint64_t v7 = (TVSettingsIPEntryViewController *)objc_claimAutoreleasedReturnValue( -[TVSettingsNetworkConfigureIPWizardViewController _viewControllerForState:]( self,  "_viewControllerForState:",  -[TVSettingsNetworkConfigureIPWizardViewController currentState]( self,  "currentState")));
  -[TVSettingsNetworkConfigureIPWizardViewController _transitionFrom:to:]( self,  "_transitionFrom:to:",  self->_currentViewController,  v7);
  currentViewController = self->_currentViewController;
  self->_currentViewController = v7;

LABEL_9:
}

void sub_1000395E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100039614(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) device]);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000396C8;
  v5[3] = &unk_10018E810;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  [v4 unpairWithCompletion:v5];

  objc_destroyWeak(&v6);
}

void sub_1000396B4(_Unwind_Exception *a1)
{
}

void sub_1000396C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popViewControllerAnimated:1];
}

void sub_100039DB0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, id a27)
{
}

void sub_100039E30(uint64_t a1, void *a2)
{
  id v10 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [v10 setLocalizedValue:0];
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained profileFacade]);
  objc_msgSend(v10, "setHidden:", objc_msgSend(v4, "isSigningInOrOutInProgress") ^ 1);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 valueForKeyPath:*(void *)(a1 + 32)]);

  if (v6) {
    uint64_t v7 = @"AccountSigningOutTitle";
  }
  else {
    uint64_t v7 = @"AccountSigningInTitle";
  }
  uint64_t v8 = TSKLocString(v7);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  [v10 setLocalizedTitle:v9];
}

void sub_100039F04(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  if ([a3 length])
  {
    uint64_t v5 = 1LL;
  }

  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained profileFacade]);
    uint64_t v5 = (uint64_t)[v7 isSigningInOrOutInProgress];
  }

  [v8 setHidden:v5];
}

void sub_100039F88(uint64_t a1, void *a2, void *a3)
{
  id v25 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = [v5 length];

  if (v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained profileFacade]);
    uint64_t v9 = (uint64_t)[v8 isSigningInOrOutInProgress];
  }

  else
  {
    uint64_t v9 = 1LL;
  }

  [v25 setHidden:v9];
  if ((_os_feature_enabled_impl("UserProfiles", "loreto") & 1) != 0)
  {
    uint64_t v10 = TSKLocString(@"iCloudSignOutTitle");
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    [v25 setLocalizedTitle:v11];
    goto LABEL_18;
  }

  if ([WeakRetained serviceType])
  {
    if ([WeakRetained serviceType] == (id)1)
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
      unsigned __int8 v13 = [v12 canSignOutOfiTunes];

      if ((v13 & 1) == 0)
      {
        uint64_t v14 = TSKLocString(@"AccountsUserRemoveUserDescriptionForHomeUserNoHomeNameFallback");
        double v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 name]);
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSString localizedStringWithFormat:]( &OBJC_CLASS___NSString,  "localizedStringWithFormat:",  v15,  v17));

LABEL_13:
        uint64_t v20 = 0LL;
        goto LABEL_14;
      }
    }
  }

  else
  {
    double v18 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
    unsigned __int8 v19 = [v18 canSignOutOfiCloud];

    if ((v19 & 1) == 0)
    {
      uint64_t v21 = TSKLocString(@"AccountsUserSignOutAppleAccountDisabledGuestDescription");
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v21);
      goto LABEL_13;
    }
  }

  uint64_t v11 = 0LL;
  uint64_t v20 = 1LL;
LABEL_14:
  [v25 setEnabled:v20];
  [v25 setLocalizedDescription:v11];
  if ((_DWORD)v20) {
    id v22 = @"iCloudSignOutTitle";
  }
  else {
    id v22 = @"iCloudSignOutDisabledTitle";
  }
  uint64_t v23 = TSKLocString(v22);
  __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  [v25 setLocalizedTitle:v24];

LABEL_18:
}

id sub_10003A448(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _signIn:0];
}

void sub_10003A454(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) profileFacade]);
  objc_msgSend(v2, "signInServiceType:presentingViewController:", *(void *)(*(void *)(a1 + 32) + 16));
}

void sub_10003A678( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10003A6A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) profileFacade]);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10003A754;
  v5[3] = &unk_10018F498;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  [v4 removeUserWithCompletion:v5];

  objc_destroyWeak(&v6);
}

void sub_10003A740(_Unwind_Exception *a1)
{
}

void sub_10003A754(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popViewControllerAnimated:1];
}

void sub_10003AA24( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_10003AA80(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  objc_msgSend(v3, "setHidden:", objc_msgSend(v4, "hasGameCenterAccount") ^ 1);
}

void sub_10003AAE0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
  BOOL v5 = [v4 effectiveBoolValueForSetting:MCFeatureGameCenterNearbyMultiplayerAllowed] != 2;

  [v3 setEnabled:v5];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  objc_msgSend(v3, "setHidden:", objc_msgSend(v6, "isPrimary") ^ 1);
}

void sub_10003BAD4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *location)
{
}

void sub_10003BB50(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateEthernetItem:v6 value:v5];
}

void sub_10003BBB4(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateWiFiItem:v6 value:v5];
}

id sub_10003BC18(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v1 = TSKWiFiLocString(@"TroubleshootingDescriptionText_WIFI");
    id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  else
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    uint64_t v4 = TSKLocStringFromBundleCachingKey( @"TroubleshootingDescriptionTextWiFiOnlyDevice_WIFI",  v3,  1LL,  1LL,  @"Localizable-J255");
    id v2 = (void *)objc_claimAutoreleasedReturnValue(v4);
  }

  id v5 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  uint64_t v6 = TSKLocString(@"TroubleshootingHeaderTitle");
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = [v5 initWithTitle:v7 text:v2];

  return v8;
}

void sub_10003BCDC(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  -[TSKSettingItem setHidden:]( v3,  "setHidden:",  +[TVSNetworkUtilities internetAvailable](&OBJC_CLASS___TVSNetworkUtilities, "internetAvailable"));
}

void sub_10003BD24(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 activeConfiguration]);
  if (v7) {
    uint64_t v8 = _os_feature_enabled_impl("TVSettings", "VPN") ^ 1;
  }
  else {
    uint64_t v8 = 1LL;
  }
  [v6 setHidden:v8];

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 displayName]);
  [v6 setLocalizedTitle:v9];

  id v13 = (id)objc_claimAutoreleasedReturnValue( +[TVSettingsVPNFacade connectionStatusFormatter]( &OBJC_CLASS___TVSettingsVPNFacade,  "connectionStatusFormatter"));
  id v10 = [v5 connectionStatus];

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v10));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v13 stringForObjectValue:v11]);
  [v6 setLocalizedValue:v12];
}

void sub_10003BE34(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive]);
}

void sub_10003BE8C(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive]);
}

void sub_10003BEE4(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive]);
}

void sub_10003BF3C(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive]);
}

void sub_10003BF94(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive]);
}

void sub_10003BFEC(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive]);
}

void sub_10003C044(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive]);
}

void sub_10003C09C(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive] ^ 1);
}

void sub_10003C0F4(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive] ^ 1);
}

void sub_10003C14C(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive] ^ 1);
}

void sub_10003C1A4(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive] ^ 1);
}

void sub_10003C1FC(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TVSEthernetInterface RJ45EthernetInterface](&OBJC_CLASS___TVSEthernetInterface, "RJ45EthernetInterface"));
  -[TSKSettingItem setHidden:](v3, "setHidden:", [v4 isActive] ^ 1);
}

void sub_10003C254(id a1, TSKSettingItem *a2, unint64_t a3, BOOL *a4)
{
}

void sub_10003C5CC(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) tableView]);
  [v2 scrollToRowAtIndexPath:*(void *)(a1 + 40) atScrollPosition:1 animated:0];
}

NSString *__cdecl sub_10003C66C(id a1, NSString *a2)
{
  id v2 = a2;
  id v3 = v2;
  if (v2)
  {
    id v4 = v2;
  }

  else
  {
    uint64_t v5 = TSKLocString(@"NetworkNoValue");
    id v4 = (NSString *)objc_claimAutoreleasedReturnValue(v5);
  }

  id v6 = v4;

  return v6;
}

NSString *__cdecl sub_10003C708(id a1, NSArray *a2)
{
  id v2 = a2;
  id v3 = v2;
  if (v2 && -[NSArray count](v2, "count"))
  {
    uint64_t v4 = objc_claimAutoreleasedReturnValue(-[NSArray componentsJoinedByString:](v3, "componentsJoinedByString:", @", "));
  }

  else
  {
    uint64_t v5 = TSKLocString(@"NetworkNoValue");
    uint64_t v4 = objc_claimAutoreleasedReturnValue(v5);
  }

  id v6 = (void *)v4;

  return (NSString *)v6;
}

void sub_10003CE70( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_10003CE98(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 photoCollectionGroupName]);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  0LL,  v4,  0LL,  WeakRetained,  "selectedItem:"));

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_10003CF8C;
  v10[3] = &unk_10018ED70;
  id v11 = *(id *)(a1 + 32);
  id v12 = v4;
  id v8 = v4;
  [v7 setUpdateBlock:v10];

  return v7;
}

void sub_10003CF8C(uint64_t a1, void *a2)
{
  id v24 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) selectedPhotoCollectionGroup]);
  id v4 = v3;
  if (v3 == *(void **)(a1 + 40))
  {
    uint64_t v7 = 2LL;
  }

  else
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 photoCollectionGroupIdentifier]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) photoCollectionGroupIdentifier]);
    else {
      uint64_t v7 = 0LL;
    }
  }

  [v24 setAccessoryTypes:v7];
  id v8 = *(void **)(a1 + 40);
  if (v8 != (void *)qword_1001E22F0)
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 photoCollections]);
    id v10 = [v9 count];
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 firstObject]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 providerInfo]);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 objectForKeyedSubscript:PBScreensaverProvidesSettingsUI]);
    unsigned int v14 = [v13 BOOLValue];

    id v8 = *(void **)(a1 + 40);
  }

  if (v8 == (void *)qword_1001E2300)
  {
    double v15 = (void *)objc_claimAutoreleasedReturnValue([v8 photoCollectionGroupDescription]);
    [v24 setLocalizedDescription:v15];

    objc_msgSend(v24, "setAccessoryTypes:", (unint64_t)objc_msgSend(v24, "accessoryTypes") | 1);
    if (([*(id *)(a1 + 32) myPhotosScreenSaverOptionShouldBeEnabled] & 1) == 0)
    {
      uint64_t v18 = TSKLocString(@"iCloudPhotoSetUpValue");
      unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      [v24 setLocalizedValue:v19];

      [v24 setAccessoryTypes:0];
      uint64_t v20 = TSKLocString(@"SaverBackdropPhotosSetupDescription");
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
      [v24 setLocalizedDescription:v21];
LABEL_19:

      goto LABEL_20;
    }

    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v4 photoCollectionGroupIdentifier]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_1001E22F8 photoCollectionGroupIdentifier]);
    if ([v16 isEqualToString:v17])
    {

LABEL_18:
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v4 photoCollectionGroupName]);
      [v24 setLocalizedValue:v21];
      goto LABEL_19;
    }

    id v22 = (void *)objc_claimAutoreleasedReturnValue([v4 photoCollectionGroupIdentifier]);
    unsigned int v23 = [v22 isEqualToString:@"com.apple.TVPhotos"];

    if (v23) {
      goto LABEL_18;
    }
  }

LABEL_20:
}
    }

    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray objectAtIndexedSubscript:](self->_valueViews, "objectAtIndexedSubscript:", v12));
    uint64_t v21 = objc_opt_class(&OBJC_CLASS___UILabel);
    if ((objc_opt_isKindOfClass(v20, v21) & 1) == 0)
    {
      [v20 removeFromSuperview];
      id v22 = -[TVSettingsInfoCell _newValueLabel](self, "_newValueLabel");

      -[NSMutableArray setObject:atIndexedSubscript:](self->_valueViews, "setObject:atIndexedSubscript:", v22, v12);
      unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsInfoCell contentView](self, "contentView"));
      [v23 addSubview:v22];

      uint64_t v20 = v22;
    }

    unsigned int v14 = (__objc2_class *)v15;
    [v20 setText:v16];
    [v20 sizeToFit];
    [v20 setHidden:0];
LABEL_19:

    goto LABEL_20;
  }

  -[TVSettingsAmbientFacade setSelectedPhotoSource:](self, "setSelectedPhotoSource:", v16);
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v16 localizedName]);
  -[TVSettingsAmbientFacade setSelectedPhotoSourceValue:](self, "setSelectedPhotoSourceValue:", v20);

  uint64_t v21 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  id v22 = [v15 mutableCopy];
  unsigned int v23 = objc_claimAutoreleasedReturnValue([v22 firstObject]);
  if (v23)
  {
    id v24 = (void *)v23;
    do
    {
      [v22 removeObjectAtIndex:0];
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 childItems]);
      __int128 v26 = [v25 count];

      if (v26)
      {
        __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v24 childItems]);
        [v22 addObjectsFromArray:v27];
      }

      else
      {
        CGRect v28 = (void *)objc_claimAutoreleasedReturnValue([v24 identifier]);
        -[NSMutableDictionary setObject:forKeyedSubscript:](v21, "setObject:forKeyedSubscript:", v24, v28);
      }

      uint64_t v29 = objc_claimAutoreleasedReturnValue([v22 firstObject]);

      id v24 = (void *)v29;
    }

    while (v29);
  }

  -[TVSettingsAmbientFacade setLeafPhotoSourcesByIdentifier:](self, "setLeafPhotoSourcesByIdentifier:", v21);
}

  -[TVSettingsAmbientFacade setSelectedTransitionStyle:](self, "setSelectedTransitionStyle:", v13);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v13 localizedName]);
  -[TVSettingsAmbientFacade setSelectedTransitionStyleValue:](self, "setSelectedTransitionStyleValue:", v17);
}

    id v17 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
    goto LABEL_21;
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
LABEL_22:
}

      id v6 = v30;
    }

    if ((unint64_t)v6 > 2)
    {
      __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsHDMIEnforcer preferredMediaDestination](self, "preferredMediaDestination"));

      __int128 v27 = sub_1000B3B30();
      CGRect v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      uint64_t v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);
      if (v26)
      {
        if (v29)
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "Odeon is enabled, disabling...", buf, 2u);
        }

        -[TVSettingsHDMIEnforcer disableOdeon](self, "disableOdeon");
      }

      else
      {
        if (v29)
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "Waiting for HDMI", buf, 2u);
        }

        -[TVSettingsHDMIEnforcer startWaitingForHDMI](self, "startWaitingForHDMI");
      }
    }

    else
    {
      id v24 = sub_1000B3B30();
      id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "eARC is enabled, disabling...", buf, 2u);
      }

      -[TVSettingsHDMIEnforcer disableEARC](self, "disableEARC");
    }
  }

      __break(1u);
      goto LABEL_21;
    }
  }

  else if (*(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    goto LABEL_3;
  }

  swift_bridgeObjectRelease(v5);
  objc_msgSend(v1, "bs_addChildViewController:", a1);
  v47 = [a1 view];
  if (!v47)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }

  uint64_t v37 = [v1 view];
  if (v37)
  {
    id v38 = v37;
    [v37 bounds];
    uint64_t v40 = v39;
    id v42 = v41;
    uint64_t v44 = v43;
    v46 = v45;

    objc_msgSend(v47, "setFrame:", v40, v42, v44, v46);
    return;
  }

  __int128 v26 = String._bridgeToObjectiveC()();
  __int128 v27 = (id)TSKLocString(v26);

  if (v27)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    uint64_t v29 = v28;

    __int128 v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
  }

  if (v5)
  {
    uint64_t v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }

  else
  {
    uint64_t v30 = 0LL;
  }

  uint64_t v31 =  [(id)objc_opt_self(UIAlertController) alertControllerWithTitle:v27 message:v30 preferredStyle:1];

  if (v25) {
    [v31 addAction:v25];
  }
  if (v9)
  {
    id v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }

  else
  {
    id v32 = 0LL;
  }

  id v33 = [(id)objc_opt_self(UIAlertAction) actionWithTitle:v32 style:1 handler:0];

  [v31 addAction:v33];
  return v31;
}

void sub_10003D5C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10003D5E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _openSettings];
}

void sub_10003D75C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10003D784(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _turnOnWelcomeSectionType:a2];
}

void sub_10003D994(_Unwind_Exception *a1)
{
}

void sub_10003D9B0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10003DA28;
  block[3] = &unk_10018E810;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async(&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_10003DA28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _openiCloudPhotosTypesViewControllerAnimated:0];
    id v2 = (void *)objc_claimAutoreleasedReturnValue([v3 iCloudWelcomeViewController]);
    [v2 dismissViewControllerAnimated:1 completion:0];

    id WeakRetained = v3;
  }
}

uint64_t sub_10003DA84(uint64_t result, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16LL))();
  }
  return result;
}

uint64_t sub_10003DA98(uint64_t result, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16LL))();
  }
  return result;
}

void sub_10003ED60( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
}

id sub_10003EDD4(id *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a1[4] stringForObjectValue:v4]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a1[5] stringForObjectValue:v4]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([a1[6] preferredLanguagesManager]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 defaultInputModeVariantsForLanguageIdentifier:v4]);

  if ([v9 count])
  {
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    v17[2] = sub_10003EFA4;
    v17[3] = &unk_100190300;
    id v18 = v4;
    id v19 = v7;
    id v20 = v6;
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v20,  0LL,  v18,  0LL,  v17));
  }

  else
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  0LL,  v4,  0LL,  WeakRetained,  0LL));
  }

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_10003EFF0;
  v14[3] = &unk_10018ED70;
  id v15 = v6;
  id v16 = v7;
  id v11 = v7;
  id v12 = v6;
  [v10 setUpdateBlock:v14];

  return v10;
}

TVSettingsLanguageInputModeViewController *sub_10003EFA4(void *a1)
{
  id v2 = -[TVSettingsLanguageInputModeViewController initWithLanguageIdentifier:]( objc_alloc(&OBJC_CLASS___TVSettingsLanguageInputModeViewController),  "initWithLanguageIdentifier:",  a1[4]);
  id v3 = v2;
  uint64_t v4 = a1[5];
  if (!v4) {
    uint64_t v4 = a1[6];
  }
  -[TVSettingsLanguageInputModeViewController setTitle:](v2, "setTitle:", v4);
  return v3;
}

void sub_10003EFF0(uint64_t a1, void *a2)
{
  id v3 = a2;
}

TVSettingsLanguageViewController *sub_10003F038(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___TVSettingsLanguageViewController);
  uint64_t v5 = TSKLocString(@"LanguagePreferredAddTitle");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  -[TVSettingsLanguageViewController setTitle:](v4, "setTitle:", v6);

  -[TVSettingsLanguageViewController setMarkSystemLanguage:](v4, "setMarkSystemLanguage:", 0LL);
  uint64_t v7 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained languageListFilter]);
  -[TVSettingsLanguageViewController setLanguageFilter:](v4, "setLanguageFilter:", v9);

  objc_initWeak(&location, v4);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  v11[2] = sub_10003F190;
  v11[3] = &unk_100190350;
  objc_copyWeak(&v12, v7);
  objc_copyWeak(&v13, &location);
  -[TVSettingsLanguageViewController setLanguageSelectionHandler:](v4, "setLanguageSelectionHandler:", v11);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v12);
  objc_destroyWeak(&location);

  return v4;
}

void sub_10003F16C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10003F190(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v5 = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained addPreferredLanguageWithIdentifier:v4 presenter:v5 completion:0];
}

void sub_10003F200(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained tableView]);
  objc_msgSend(v3, "setHidden:", objc_msgSend(v4, "isEditing"));
}

void sub_100040960(_Unwind_Exception *a1)
{
}

void sub_1000409AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    uint64_t v3 = TVCSLanguageLog();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v8 = 138412290;
      uint64_t v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Adding language %@ as system language",  (uint8_t *)&v8,  0xCu);
    }

    id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained preferredLanguagesManager]);
    [v6 setSystemLanguage:*(void *)(a1 + 32) withVariants:*(void *)(a1 + 40)];

    [WeakRetained prepareLanguageChangeAfterSiriActivation];
  }

  uint64_t v7 = *(void *)(a1 + 48);
  if (v7) {
    (*(void (**)(void))(v7 + 16))();
  }
}

void sub_100040AA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    uint64_t v3 = TVCSLanguageLog();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v8 = 138412290;
      uint64_t v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Adding language %@ as secondary langauge",  (uint8_t *)&v8,  0xCu);
    }

    id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained preferredLanguagesManager]);
    [v6 addPreferredLanguage:*(void *)(a1 + 32) withVariants:*(void *)(a1 + 40)];

    [WeakRetained prepareLanguageChangeAfterSiriActivation];
  }

  uint64_t v7 = *(void *)(a1 + 48);
  if (v7) {
    (*(void (**)(void))(v7 + 16))();
  }
}

uint64_t sub_100040B94(uint64_t a1)
{
  uint64_t v2 = TVCSLanguageLog();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Cancel adding language %@", (uint8_t *)&v6, 0xCu);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100040FD0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100040FF4(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && (a2 & 1) == 0)
  {
    id v5 = WeakRetained;
    [WeakRetained commitLanguageChanges:*(unsigned __int8 *)(a1 + 40)];
    id WeakRetained = v5;
  }
}

void sub_100041314( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100041338(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadSettingsIfNeeded];
}

void sub_1000417CC(_Unwind_Exception *a1)
{
}

uint64_t sub_100041808(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 bestSiriLanguageForLanguage:*(void *)(a1 + 40)]);
  [v2 setLanguage:v3 completion:0];

  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

uint64_t sub_100041884(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 bestSiriLanguageForLanguage:*(void *)(a1 + 40)]);
  [v2 setLanguage:v3 completion:0];

  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

void sub_1000418E8(uint64_t a1)
{
  id v4 = [[OBPrivacySplashController alloc] initWithFlow:*(void *)(a1 + 32)];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v3 presentViewController:v4 animated:1 completion:0];
}

uint64_t sub_100041958(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained preferredLanguagesManager]);
  [v3 revertPreferredLanguages];

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

NSString *__cdecl sub_1000419D4(id a1, id a2)
{
  id v2 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:NSLocaleCountryCode]);

  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSLocale componentsFromLocaleIdentifier:]( &OBJC_CLASS___NSLocale,  "componentsFromLocaleIdentifier:",  v2));
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:NSLocaleCountryCode]);

  if (v6) {
    id v7 = (id)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:NSLocaleCountryCode]);
  }
  else {
    id v7 = v4;
  }
  int v8 = v7;
  id v9 = v2;
  id v10 = v9;
  if ([v8 isEqualToString:v4])
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale baseLanguageFromLanguage:](&OBJC_CLASS___NSLocale, "baseLanguageFromLanguage:", v9));
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale localeWithLocaleIdentifier:](&OBJC_CLASS___NSLocale, "localeWithLocaleIdentifier:", v9));
  if (+[IntlUtility forceCapitalizationInLanguageLists]( &OBJC_CLASS___IntlUtility,  "forceCapitalizationInLanguageLists")) {
    uint64_t v12 = 4LL;
  }
  else {
    uint64_t v12 = 3LL;
  }
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 localizedStringForLanguage:v10 context:v12]);

  if (v13) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = v9;
  }
  id v15 = v14;

  return v15;
}

NSString *__cdecl sub_100041B54(id a1, id a2)
{
  id v2 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:NSLocaleCountryCode]);

  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSLocale componentsFromLocaleIdentifier:]( &OBJC_CLASS___NSLocale,  "componentsFromLocaleIdentifier:",  v2));
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:NSLocaleCountryCode]);

  if (v6) {
    id v7 = (id)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:NSLocaleCountryCode]);
  }
  else {
    id v7 = v4;
  }
  int v8 = v7;
  id v9 = v2;
  id v10 = v9;
  if ([v8 isEqualToString:v4])
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale baseLanguageFromLanguage:](&OBJC_CLASS___NSLocale, "baseLanguageFromLanguage:", v9));
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale localeWithLocaleIdentifier:](&OBJC_CLASS___NSLocale, "localeWithLocaleIdentifier:", v9));
  if (+[IntlUtility forceCapitalizationInLanguageLists]( &OBJC_CLASS___IntlUtility,  "forceCapitalizationInLanguageLists")) {
    uint64_t v12 = 4LL;
  }
  else {
    uint64_t v12 = 3LL;
  }
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 localizedStringForLanguage:v10 context:v12]);

  unsigned int v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale baseLanguageFromLanguage:](&OBJC_CLASS___NSLocale, "baseLanguageFromLanguage:", v10));
  id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale _deviceLanguage](&OBJC_CLASS___NSLocale, "_deviceLanguage"));
  id v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale baseLanguageFromLanguage:](&OBJC_CLASS___NSLocale, "baseLanguageFromLanguage:", v15));
  unsigned __int8 v17 = [v14 isEqualToString:v16];

  if ((v17 & 1) != 0)
  {
    id v18 = 0LL;
  }

  else
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue(+[IPLanguage languageWithIdentifier:](&OBJC_CLASS___IPLanguage, "languageWithIdentifier:", v10));
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 localizedStringForName]);

    else {
      uint64_t v21 = v20;
    }
    id v18 = v21;
  }

  return (NSString *)v18;
}

void sub_100042430( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_100042920( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10004293C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    [WeakRetained _startTimer];
    [WeakRetained _loadNextImage:WeakRetained[1]];
  }

  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v1 postNotificationName:off_1001DF9D0 object:WeakRetained];
}

id sub_100042BDC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 40) + 16) setAlpha:0.0];
}

void sub_100042C18(uint64_t a1)
{
}

void sub_100043244( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

TVSettingsAppBundleViewController *sub_100043260(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___TVSettingsAppBundleViewController);
  -[TVSettingsAppBundleViewController setTitle:](v2, "setTitle:", *(void *)(a1 + 32));
  -[TVSettingsAppBundleViewController setBundleID:](v2, "setBundleID:", *(void *)(a1 + 40));
  -[TVSettingsAppBundleViewController setSettingsBundle:](v2, "setSettingsBundle:", *(void *)(a1 + 48));
  -[TVSettingsAppBundleViewController setContainerPath:](v2, "setContainerPath:", *(void *)(a1 + 56));
  -[TVSettingsAppBundleViewController setPlistName:](v2, "setPlistName:", *(void *)(a1 + 64));
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  -[TVSettingsAppBundleViewController setItemFactory:](v2, "setItemFactory:", WeakRetained);

  return v2;
}

id sub_100043774(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 bundle]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stringsTable]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 localizedStringForKey:v4 value:&stru_100195DD8 table:v6]);

  return v7;
}

id sub_1000437F4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 bundle]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stringsTable]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 localizedStringForKey:v4 value:&stru_100195DD8 table:v6]);

  return v7;
}

id sub_100043B2C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 bundle]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stringsTable]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 localizedStringForKey:v4 value:&stru_100195DD8 table:v6]);

  return v7;
}

id sub_100043FD0(uint64_t a1)
{
  return  [[TVSUITextAlertController alloc] initWithTitle:*(void *)(a1 + 32) text:*(void *)(a1 + 40)];
}

id sub_1000444F8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 bundle]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stringsTable]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 localizedStringForKey:v4 value:&stru_100195DD8 table:v6]);

  return v7;
}

void sub_100044A28(uint64_t a1, uint64_t a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100048790;
  block[3] = &unk_10018E7A8;
  void block[4] = a2;
  dispatch_async(&_dispatch_main_q, block);
}

void sub_10004686C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, id location)
{
}

void sub_1000468E4(id a1, TSKSettingItem *a2, id a3)
{
  id v9 = a2;
  id v4 = a3;
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  if ((objc_opt_isKindOfClass(v4, v5) & 1) != 0)
  {
    int v6 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"localizedTitle"]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"localizedDescription"]);
    int v8 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"localizedValue"]);
    -[TSKSettingItem setLocalizedTitle:](v9, "setLocalizedTitle:", v6);
    -[TSKSettingItem setLocalizedDescription:](v9, "setLocalizedDescription:", v7);
    -[TSKSettingItem setLocalizedValue:](v9, "setLocalizedValue:", v8);
  }

  -[TSKSettingItem setDeepLinkKey:](v9, "setDeepLinkKey:", @"AUDIO_OUTPUT_LINK");
}

void sub_1000469CC(id a1, TSKSettingItem *a2, id a3)
{
  id v7 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v7, "representedObject"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 selectedRoute]);
  uint64_t v5 = v4;
  if (v4)
  {
    int v6 = (void *)objc_claimAutoreleasedReturnValue([v4 volumeControl]);
    -[TSKSettingItem setHidden:](v7, "setHidden:", v6 == 0LL);
  }

  else
  {
    -[TSKSettingItem setHidden:](v7, "setHidden:", 1LL);
  }
}

void sub_100046A58(uint64_t a1, void *a2)
{
  id v12 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
  unsigned int v4 = [v3 odeonEnabled];

  if (v4)
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
    unsigned int v6 = [v5 odeonSupportsAtmos];

    if (v6) {
      id v7 = @"AVDolbySurroundSoundOdeonWithAtmosDescription";
    }
    else {
      id v7 = @"AVDolbySurroundSoundAutoWithAtmosDisabledDescription";
    }
  }

  else
  {
    unsigned int v8 = [*(id *)(a1 + 32) atmosAvailable];
    id v9 = [*(id *)(a1 + 40) audioOutputFormat];
    if (v8)
    {
      if (v9 == (id)2)
      {
        id v7 = @"AVDolbySurroundSoundWithAtmosDescription";
      }

      else if ([*(id *)(a1 + 40) audioOutputFormat] == (id)3)
      {
        id v7 = @"AVDolbySurroundSoundAutoWithAtmosDisabledDescription";
      }

      else
      {
        id v7 = @"AVDolbySurroundSoundConvertFormatWithAtmosAvailableDescription";
      }
    }

    else
    {
      id v7 = @"AVDolbySurroundSoundDescription";
      if (v9 != (id)2 && [*(id *)(a1 + 40) audioOutputFormat] != (id)3) {
        id v7 = @"AVDolbySurroundSoundWithConvertFormatDescription";
      }
    }
  }

  uint64_t v10 = TSKLocString(v7);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  [v12 setLocalizedDescription:v11];
}

void sub_100046B84(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend( v3,  "setHidden:",  !+[TVSettingsAudioVideoViewController _hardwareSupportsAC3Decode]( TVSettingsAudioVideoViewController,  "_hardwareSupportsAC3Decode") | objc_msgSend(v2, "reduceLoudSoundsIsAvailable"));
}

void sub_100046BDC(uint64_t a1, void *a2)
{
  id v4 = a2;
  else {
    uint64_t v3 = 1LL;
  }
  [v4 setHidden:v3];
}

void sub_100046C34(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "enhanceDialogueSupportsLevels") ^ 1);
}

void sub_100046C78(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "reduceLoudSoundsIsAvailable") ^ 1);
}

void sub_100046CBC(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue([v2 availableAudioLanguageCodes]);
  [v3 setAvailableValues:v4];
}

void sub_100046D0C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue([v2 availableSubtitleLanguageOptions]);
  [v3 setAvailableValues:v4];
}

void sub_100046D5C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue([v2 displayAssistantActionInfo]);
  [v3 setHidden:v6 == 0];
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v6 localizedTitle]);
  [v3 setLocalizedTitle:v4];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v6 localizedDescription]);
  [v3 setLocalizedDescription:v5];
}

void sub_100046DF0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue([v2 preferredDisplaySizeIdentifier]);
  objc_msgSend(v3, "setHidden:", objc_msgSend(v4, "isEqual:", PBSDisplaySizeIdentifier16x9) ^ 1);
}

void sub_100046E50(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue([v2 preferredDisplaySizeIdentifier]);
  objc_msgSend(v3, "setHidden:", objc_msgSend(v4, "isEqual:", PBSDisplaySizeIdentifier16x9));
}

void sub_100046EB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[PBSDisplayManager marketNameDisplayResolutionFormatterWithRefreshRate:]( &OBJC_CLASS___PBSDisplayManager,  "marketNameDisplayResolutionFormatterWithRefreshRate:",  0LL));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentDisplayMode]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v6 stringForObjectValue:v4]);
  [v3 setLocalizedValue:v5];
}

void sub_100046F40(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSDisplayManager sharedInstance](&OBJC_CLASS___PBSDisplayManager, "sharedInstance"));
  if ([v3 displaySupportsHDR10Plus])
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentDisplayMode]);
    BOOL v5 = [v4 dynamicRange] != (id)538423556;
  }

  else
  {
    BOOL v5 = 1LL;
  }

  [v6 setHidden:v5];
}

void sub_100046FD8(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userVisibleSDRColorMappingModes]);
  [v12 setAvailableValues:v3];

  uint64_t v4 = TSKLocString(@"AVSDRColorMappingDescription");
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) currentDisplayMode]);
  int v7 = PBSDisplayResolutionIs4K([v6 resolution]);

  if (v7)
  {
    uint64_t v8 = TSKLocString(@"AVSDRColorMappingHighSpeedCableDescription");
    uint64_t v9 = objc_claimAutoreleasedReturnValue(v8);

    BOOL v5 = (void *)v9;
  }

  [v12 setLocalizedDescription:v5];
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) currentDisplayMode]);
  BOOL v11 = [v10 dynamicRange] != (id)538423557;

  [v12 setHidden:v11];
}

void sub_1000470C8(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userVisibleSDRChromaModes]);
  [v6 setAvailableValues:v3];

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) currentDisplayMode]);
  if ([v4 SDRColorMapping] == (id)538424066) {
    uint64_t v5 = PBSDisplayResolutionIs4K([v4 resolution]) ^ 1;
  }
  else {
    uint64_t v5 = 1LL;
  }
  [v6 setHidden:v5];
}

void sub_100047160(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v7 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 userVisibleHDRChromaModes]);
  [v7 setAvailableValues:v4];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) currentDisplayMode]);
  BOOL v6 = [v5 dynamicRange] != (id)538423556;

  [v7 setHidden:v6];
}

void sub_1000471E8(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsAudioVideoViewController _nativeModeSwitchingOptionsFormatter]( &OBJC_CLASS___TVSettingsAudioVideoViewController,  "_nativeModeSwitchingOptionsFormatter"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 stringForObjectValue:*(void *)(a1 + 32)]);
  [v6 setLocalizedValue:v4];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) currentDisplayMode]);
  LODWORD(v3) = PBSDisplayResolutionIsFullHD([v5 resolution]);

  [v6 setHidden:v3 ^ 1];
}

void sub_100047288(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "deemed4KCapable") ^ 1);
}

id sub_1000472CC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = objc_claimAutoreleasedReturnValue([v2 currentDisplayMode]);
  id v4 = [v2 colorCalibrationStatusForDisplayMode:v3];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentDisplayMode]);
  LOBYTE(v3) = PBSDynamicRangeIsDolbyVision([v5 dynamicRange]);

  if ((v3 & 1) != 0)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    id v7 = @"AVDisplayAdjustmentDolbyDescription";
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    if (v4 == (id)2) {
      id v7 = @"AVDisplayAdjustmentConfirmedDescription";
    }
    else {
      id v7 = @"AVDisplayAdjustmentDescription";
    }
  }

  uint64_t v8 = TSKLocStringFromBundleCachingKey(v7, v6, 1LL, 0LL, @"Localizable-Colorimeter");
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v11 = [WeakRetained _areDisplayFiltersEnabled];

  if (v11)
  {
    uint64_t v12 = TSKLocString(@"AVAccessibilityDisplayFiltersWarning");
    id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    uint64_t v14 = objc_claimAutoreleasedReturnValue([v9 stringByAppendingFormat:@"\n%@", v13]);

    uint64_t v9 = (void *)v14;
  }

  return v9;
}

void sub_100047410(uint64_t a1, void *a2)
{
  id v15 = a2;
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 currentDisplayMode]);
  id v5 = [v3 colorCalibrationStatusForDisplayMode:v4];

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentDisplayMode]);
  int IsDolbyVision = PBSDynamicRangeIsDolbyVision([v6 dynamicRange]);

  if (IsDolbyVision)
  {
    [v15 setEnabled:0];
  }

  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    objc_msgSend(v15, "setEnabled:", objc_msgSend(WeakRetained, "_areDisplayFiltersEnabled") ^ 1);
  }

  if (v5 == (id)2)
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    uint64_t v10 = @"AVDisplayAdjustmentValueValid";
  }

  else
  {
    if (v5 != (id)1)
    {
      [v15 setLocalizedValue:0];
      goto LABEL_10;
    }

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    uint64_t v10 = @"AVDisplayAdjustmentValueApplied";
  }

  uint64_t v11 = TSKLocStringFromBundleCachingKey(v10, v9, 1LL, 0LL, @"Localizable-Colorimeter");
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  [v15 setLocalizedValue:v12];

LABEL_10:
  uint64_t v13 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  [v15 setLocalizedDescription:v14];

  [v15 setEnabledInStoreDemoMode:0];
}

void sub_100047584(uint64_t a1, void *a2)
{
  id v11 = a2;
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 currentDisplayMode]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 audioLatencyForDisplayMode:v4]);
  [v5 doubleValue];
  double v7 = v6;
  double v8 = TVLAudioLatencyUnknown;

  if (v7 <= v8)
  {
    [v11 setLocalizedValue:0];
  }

  else
  {
    uint64_t v9 = TSKLocString(@"WirelessAudioSyncValueApplied");
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    [v11 setLocalizedValue:v10];
  }
}

void sub_10004763C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained _areDisplayFiltersEnabled])
  {
    uint64_t v4 = TSKLocString(@"AVAccessibilityDisplayFiltersWarning");
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    [v6 setLocalizedDescription:v5];
  }

  else
  {
    [v6 setLocalizedDescription:0];
  }
}

__CFString *sub_100047720(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
  unsigned int v3 = [v2 odeonEnabled];

  if (!v3)
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[TVPAudioVideoSettings sharedInstance](&OBJC_CLASS___TVPAudioVideoSettings, "sharedInstance"));
    id v10 = [v9 audioOutputFormat];

    id v11 = @"AVSurroundAuto";
    switch((unint64_t)v10)
    {
      case 0uLL:
        unsigned int v12 = [*(id *)(a1 + 32) _hardwareSupportsAC3Decode];
        id v6 = @"AVSurroundOff";
        double v7 = @"AVSurroundStereo";
        goto LABEL_6;
      case 1uLL:
        unsigned int v12 = [*(id *)(a1 + 32) _hardwareSupportsAC3Decode];
        id v6 = @"AVSurroundOn";
        double v7 = @"AVSurroundDolby";
LABEL_6:
        BOOL v8 = v12 == 0;
        goto LABEL_7;
      case 2uLL:
        id v16 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsAudioVideoFacade sharedInstance]( &OBJC_CLASS___TVSettingsAudioVideoFacade,  "sharedInstance"));
        unsigned __int8 v17 = [v16 atmosAvailable];

        if ((v17 & 1) != 0)
        {
          id v11 = @"AVSurroundAutoWithAtmos";
        }

        else if ([*(id *)(a1 + 32) _hardwareSupportsAC3Decode])
        {
          id v11 = @"AVSurroundBest";
        }

        goto LABEL_10;
      case 3uLL:
        goto LABEL_10;
      default:
        uint64_t v14 = &stru_100195DD8;
        return v14;
    }
  }

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsHomeKitFacade sharedInstance](&OBJC_CLASS___TVSettingsHomeKitFacade, "sharedInstance"));
  unsigned int v5 = [v4 odeonSupportsAtmos];

  id v6 = @"AVSurroundBest";
  double v7 = @"AVSurroundAutoWithAtmos";
  BOOL v8 = v5 == 0;
LABEL_7:
  if (v8) {
    id v11 = v6;
  }
  else {
    id v11 = v7;
  }
LABEL_10:
  uint64_t v13 = TSKLocString(v11);
  uint64_t v14 = (__CFString *)objc_claimAutoreleasedReturnValue(v13);
  return v14;
}

NSString *__cdecl sub_1000478AC(id a1, NSNumber *a2)
{
  id v2 = a2;
  uint64_t v3 = TSKLocString(@"AVEnhanceDialogueLevelOff");
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  unsigned int v5 = -[NSNumber integerValue](v2, "integerValue");

  if ((unint64_t)(v5 - 1) <= 2)
  {
    uint64_t v6 = TSKLocString(*(&off_1001906B0 + (void)(v5 - 1)));
    uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);

    uint64_t v4 = (void *)v7;
  }

  return (NSString *)v4;
}

NSString *__cdecl sub_100047950(id a1, NSNumber *a2)
{
  id v2 = a2;
  uint64_t v3 = TSKLocString(@"AVEnhanceDialogueLevelOffDescription");
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  unsigned int v5 = -[NSNumber integerValue](v2, "integerValue");

  if ((unint64_t)(v5 - 1) <= 2)
  {
    uint64_t v6 = TSKLocString(*(&off_1001906C8 + (void)(v5 - 1)));
    uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);

    uint64_t v4 = (void *)v7;
  }

  return (NSString *)v4;
}

NSString *__cdecl sub_1000479F4(id a1, NSString *a2)
{
  id v2 = a2;
  if (-[NSString isEqual:](v2, "isEqual:", off_1001DF7C8))
  {
    uint64_t v3 = TSKLocString(@"AVAudioLanguageDefault");
    uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  }

  else
  {
    uint64_t v4 = objc_claimAutoreleasedReturnValue( +[TVSInternationalization displayNameForLanguage:displayLanguage:]( &OBJC_CLASS___TVSInternationalization,  "displayNameForLanguage:displayLanguage:",  v2,  0LL));
  }

  unsigned int v5 = (NSString *)v4;
  if (!v4) {
    unsigned int v5 = v2;
  }

  return v5;
}

NSString *__cdecl sub_100047A94(id a1, NSString *a2)
{
  id v2 = a2;
  if (-[NSString isEqual:](v2, "isEqual:", off_1001DF7B8[0]))
  {
    uint64_t v3 = @"AVSubtitleModeOff";
  }

  else
  {
    if (!-[NSString isEqual:](v2, "isEqual:", off_1001DF7C0[0]))
    {
      uint64_t v5 = objc_claimAutoreleasedReturnValue( +[TVSInternationalization displayNameForLanguage:displayLanguage:]( &OBJC_CLASS___TVSInternationalization,  "displayNameForLanguage:displayLanguage:",  v2,  0LL));
      goto LABEL_7;
    }

    uint64_t v3 = @"AVSubtitleModeAuto";
  }

  uint64_t v4 = TSKLocString(v3);
  uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
LABEL_7:
  uint64_t v6 = (void *)v5;

  return (NSString *)v6;
}

id sub_100047BC4(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", round(v3 * 10.0) / 10.0));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 stringFromNumber:v5]);

  return v6;
}

NSString *__cdecl sub_100047C54(id a1, TVSettingsDisplayModeFacade *a2)
{
  id v2 = a2;
  unsigned int v3 = -[TVSettingsDisplayModeFacade shouldModeSwitchForDynamicRange](v2, "shouldModeSwitchForDynamicRange");
  unsigned int v4 = -[TVSettingsDisplayModeFacade shouldModeSwitchForFrameRate](v2, "shouldModeSwitchForFrameRate");

  uint64_t v5 = @"AVNativeModeSwitchingFormatToMatchVideoOff";
  if (v4) {
    uint64_t v5 = @"AVNativeModeSwitchingFormatToMatchVideoFrameRate";
  }
  uint64_t v6 = @"AVNativeModeSwitchingFormatToMatchVideoRangeAndFrameRate";
  if (!v4) {
    uint64_t v6 = @"AVNativeModeSwitchingFormatToMatchVideoRange";
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v5;
  }
  uint64_t v8 = TSKLocString(v7);
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(v8);
}

void sub_1000483B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_100048404(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsDisplayModeFacade sharedInstance]( &OBJC_CLASS___TVSettingsDisplayModeFacade,  "sharedInstance"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000484BC;
  v5[3] = &unk_100190690;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  [v4 resetVideoSettingsWithCompletion:v5];

  objc_destroyWeak(&v6);
}

void sub_1000484A8(_Unwind_Exception *a1)
{
}

void sub_1000484BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_copyWeak(&to, (id *)(a1 + 32));
  id v4 = objc_loadWeakRetained(&to);
  [v4 reloadSettingsIfNeeded];

  objc_destroyWeak(&to);
}

void sub_100048514( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_100048528(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsDisplayModeFacade sharedInstance]( &OBJC_CLASS___TVSettingsDisplayModeFacade,  "sharedInstance"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1000485D4;
  v3[3] = &unk_100190690;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  [v2 resetVideoSettingsWithCompletion:v3];

  objc_destroyWeak(&v4);
}

void sub_1000485C0(_Unwind_Exception *a1)
{
}

void sub_1000485D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_copyWeak(&to, (id *)(a1 + 32));
  id v4 = objc_loadWeakRetained(&to);
  [v4 reloadSettingsIfNeeded];

  objc_destroyWeak(&to);
}

void sub_10004862C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

id sub_100048790(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSettingsIfNeeded];
}

void sub_100048E84(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "isContentUnlocked"));
}

void sub_100048EC8(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v7 = (id)objc_claimAutoreleasedReturnValue([v3 modeType]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) availableModeTypes]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectAtIndex:0]);
  objc_msgSend(v4, "setHidden:", objc_msgSend(v7, "isEqualToString:", v6));
}

void sub_100048F58(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "videoPlaybackRestricted") ^ 1);
}

void sub_100048F9C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v7 = (id)objc_claimAutoreleasedReturnValue([v3 modeType]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) availableModeTypes]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectAtIndex:0]);
  objc_msgSend(v4, "setHidden:", objc_msgSend(v7, "isEqualToString:", v6));
}

void sub_10004902C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "isDirty") ^ 1);
}

void sub_100049070(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "isDirty") ^ 1);
}

id sub_100049368()
{
  if (qword_1001E16B0 != -1) {
    dispatch_once(&qword_1001E16B0, &stru_1001906E0);
  }
  return (id)qword_1001E16A8;
}

void sub_100049B90(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "StoreDemoMode");
  id v2 = (void *)qword_1001E16A8;
  qword_1001E16A8 = (uint64_t)v1;
}

LABEL_21:
}

  CGRect v28 = [v6 copy];
  return v28;
}

        __break(1u);
        goto LABEL_22;
      }

void sub_10004A3F8(id a1, UIView *a2, unint64_t a3, BOOL *a4)
{
}

void sub_10004A404(id a1, UIView *a2, unint64_t a3, BOOL *a4)
{
}

void sub_10004A600(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 1.0));
  id v2 = (void *)qword_1001E16B8;
  qword_1001E16B8 = v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 1.0));
  id v4 = (void *)qword_1001E16C0;
  qword_1001E16C0 = v3;
}

void sub_10004A6D4(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:kTCCServiceMediaLibrary];
  id v2 = (void *)qword_1001E16D0;
  qword_1001E16D0 = (uint64_t)v1;
}

void sub_10004B978( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *a10, id *a11, id *a12, id *a13, id *location, id *a15, id *a16, id *a17, id *a18)
{
}

id sub_10004BB60(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _nameViewControllerForItem:v3]);

  return v5;
}

void sub_10004BBB4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setCanFocus:", objc_msgSend(v2, "isNameModificationAllowed"));
}

void sub_10004BBF8(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateDiagnosticsItem:v3];
}

void sub_10004BC40(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "showPartNumberAndFirmwareVersion") ^ 1);
}

void sub_10004BC90(uint64_t a1, void *a2, uint64_t a3)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(v8, "setHidden:", objc_msgSend(WeakRetained, "showPartNumberAndFirmwareVersion"));

  if (!a3)
  {
    uint64_t v6 = TSKLocString(@"NotApplicable");
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    [v8 setLocalizedValue:v7];
  }
}

void sub_10004BD0C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained showPartNumberAndFirmwareVersion])
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[TVSDevice HDMIFirmwareVersion](&OBJC_CLASS___TVSDevice, "HDMIFirmwareVersion"));
    objc_msgSend(v5, "setHidden:", objc_msgSend(v4, "length") != 0);
  }

  else
  {
    [v5 setHidden:0];
  }
}

void sub_10004BD90(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "showPartNumberAndFirmwareVersion") ^ 1);
}

void sub_10004BDE0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "_showWiFiSettings") ^ 1);
}

void sub_10004BE30(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "_showWiFiSettings"));
}

void sub_10004BE80(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  uint64_t v4 = TSKLocString(@"AboutActivationFailedValue");
  id v5 = (id)objc_claimAutoreleasedReturnValue(v4);
  -[TSKSettingItem setLocalizedValue:](v3, "setLocalizedValue:", v5);
}

void sub_10004BED0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "currentMoreInfoItemType") != (id)1);
}

void sub_10004BF24(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "currentMoreInfoItemType") != (id)2);
}

void sub_10004BF78(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "currentMoreInfoItemType") != (id)3);
}

void sub_10004BFCC(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "currentMoreInfoItemType") != (id)4);
}

void sub_10004C020(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a3 UUIDString]);
  [v5 setLocalizedValue:v6];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(v5, "setHidden:", objc_msgSend(WeakRetained, "currentMoreInfoItemType") != (id)5);
}

void sub_10004C0A0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "currentMoreInfoItemType") != (id)6);
}

void sub_10004C0F4(id a1, TSKSettingItem *a2, unint64_t a3, BOOL *a4)
{
}

void sub_10004C100(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v4 = a2;
  -[TSKSettingItem setHidden:](v4, "setHidden:", [a3 count] == 0);
  -[TSKSettingItem setLocalizedValue:](v4, "setLocalizedValue:", 0LL);
}

void sub_10004C940(_Unwind_Exception *a1)
{
}

void sub_10004C990(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = TSKLocString(@"AboutDiagnosticsTicketPlaceholder");
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  [v3 setPlaceholder:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [v3 setDelegate:WeakRetained];
}

void sub_10004CA08(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 5);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([a1[4] textFields]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectAtIndex:0]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 text]);

  [WeakRetained setDiagnosticsTicketController:0];
  id v5 = objc_loadWeakRetained(a1 + 6);
  [v5 dismissViewControllerAnimated:1 completion:0];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained diagnostics]);
  [v6 launchWithTicketNumber:v4];
}

void sub_10004CAC0(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  [v2 dismissViewControllerAnimated:1 completion:0];
}

void sub_10004D040(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsDeviceFacade sharedInstance](&OBJC_CLASS___TVSettingsDeviceFacade, "sharedInstance"));
  [v4 setName:v3];

  id v6 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  id v5 = [v6 popToViewController:*(void *)(a1 + 32) animated:1];
}

void sub_10004D0C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  if (v3)
  {
    uint64_t v6 = TVCSHomeLog(v3, v4);
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000F78B8((uint64_t)v5, v7);
    }

    [*(id *)(a1 + 32) _presentSetAccessoryNameFailedViewControllerWithError:v5];
  }

  else
  {
    uint64_t v8 = *(void *)(a1 + 48);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localAccessory]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 name]);
    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v10);
  }
}

void sub_10004D478(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:kTCCServicePhotos];
  id v2 = (void *)qword_1001E16E0;
  qword_1001E16E0 = (uint64_t)v1;
}

void sub_10004DA78(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v7 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 currentLocale]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v7 representedObject]);
  unsigned int v5 = [v3 isEqual:v4];

  if (v5) {
    uint64_t v6 = 2LL;
  }
  else {
    uint64_t v6 = 0LL;
  }
  [v7 setAccessoryTypes:v6];
}

void sub_10004E2DC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
}

void sub_10004E388(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleAlertAction:1];
}

void sub_10004E3B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleAlertAction:0];
}

void sub_10004E3E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend( WeakRetained,  "handleAlertAction:",  objc_msgSend(*(id *)(a1 + 32), "isEqual:", *(void *)(a1 + 40)) ^ 1);
}

void sub_10004E430(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setSelectedRegion:0];
}

NSString *__cdecl sub_10004E488(id a1, id a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 displayNameForKey:NSLocaleCountryCode value:v2]);

  return (NSString *)v4;
}

void sub_10004E690( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10004E6B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadSettingsIfNeeded];
}

void sub_10004EB2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10004EB48(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v3)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1000F7940((uint64_t)v3);
      if (!WeakRetained) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }

    if (WeakRetained) {
LABEL_4:
    }
      WeakRetained[8] = *(_BYTE *)(a1 + 40);
  }

LABEL_5:
}

    uint64_t v6 = -[NSXPCConnection initWithServiceName:]( objc_alloc(&OBJC_CLASS___NSXPCConnection),  "initWithServiceName:",  @"com.apple.DiagnosticsSessionAvailibility");
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSXPCInterface interfaceWithProtocol:]( &OBJC_CLASS___NSXPCInterface,  "interfaceWithProtocol:",  &OBJC_PROTOCOL___DADiagnosticsSessionAvailabilityProtocol));
    -[NSXPCConnection setRemoteObjectInterface:](v6, "setRemoteObjectInterface:", v7);

    -[NSXPCConnection resume](v6, "resume");
    -[TVSettingsDiagnosticsController setPingOutstanding:](self, "setPingOutstanding:", 1LL);
    objc_initWeak(location, self);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[NSXPCConnection remoteObjectProxy](v6, "remoteObjectProxy"));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_1000610BC;
    v10[3] = &unk_100190F48;
    uint64_t v9 = v6;
    uint64_t v11 = v9;
    objc_copyWeak(&v12, location);
    [v8 checkAvailabilityWithReply:v10];

    objc_destroyWeak(&v12);
    objc_destroyWeak(location);
  }
}

    -[UILabel setHidden:](self->_activityTextLabel, "setHidden:", 0LL);
    return;
  }

  if (self->_activityIndicatorHidden) {
    goto LABEL_5;
  }
}

  *a1 = v8;
  if ((a6 & 0x8000000000000000LL) != 0) {
    return 0LL;
  }
  else {
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL, __dst);
  }
}

void sub_10004F024(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:kTCCServiceMSO];
  id v2 = (void *)qword_1001E16F0;
  qword_1001E16F0 = (uint64_t)v1;
}

void sub_10004F330( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10004F34C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = (id)objc_claimAutoreleasedReturnValue([WeakRetained completionHandler]);

  id v2 = v3;
  if (v3)
  {
    (*((void (**)(id))v3 + 2))(v3);
    id v2 = v3;
  }
}

UIViewController *__cdecl sub_10004F700(id a1, TSKSettingItem *a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLicenseUtilities acknowledgementsPath]( &OBJC_CLASS___TVSettingsLicenseUtilities,  "acknowledgementsPath"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithContentsOfFile:encoding:error:]( &OBJC_CLASS___NSString,  "stringWithContentsOfFile:encoding:error:",  v3,  4LL,  0LL));

  id v5 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem localizedTitle](v2, "localizedTitle"));

  id v7 = [v5 initWithTitle:v6 text:v4];
  return (UIViewController *)v7;
}

UIViewController *__cdecl sub_10004F7AC(id a1, TSKSettingItem *a2)
{
  id v2 = a2;
  id v3 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem localizedTitle](v2, "localizedTitle"));

  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLicenseUtilities legalSafetyText]( &OBJC_CLASS___TVSettingsLicenseUtilities,  "legalSafetyText"));
  id v6 = [v3 initWithTitle:v4 text:v5];

  return (UIViewController *)v6;
}

void sub_10004FA80( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10004FAA4(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setSupportedMultiUserLanguageCodes:v3];

  [WeakRetained reloadSettingsIfNeeded];
}

void sub_10005009C(uint64_t a1)
{
  uint64_t v2 = TSKLocString(@"ManageSubscriptionsAlertTitle");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = TSKLocString(@"ManageSubscriptionsAlertMessage");
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v9 = (id)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  v3,  v5,  1LL));

  uint64_t v6 = TSKLocString(@"ManageSubscriptionsAlertOK");
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v7,  1LL,  0LL));

  [v9 addAction:v8];
  [*(id *)(a1 + 32) presentViewController:v9 animated:1 completion:0];
}

void sub_10005050C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100050530(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000505D4;
  v5[3] = &unk_10018F498;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  [v4 removeUserWithCompletion:v5];
  objc_destroyWeak(&v6);
}

void sub_1000505C0(_Unwind_Exception *a1)
{
}

void sub_1000505D4(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
    id v3 = [v2 popViewControllerAnimated:1];
  }

void sub_100050BF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100050C0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissViewControllerAnimated:1 completion:0];
}

id sub_100050C98(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:0 completion:0];
}

id sub_100050D00(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

void sub_100050DD8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100050DF4(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = (id *)(a1 + 32);
    id v3 = a2;
    id WeakRetained = objc_loadWeakRetained(v2);
    [WeakRetained _showRMVErrorAlertForError:v3];
  }

void sub_100050F54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_100050F70(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  0LL,  0LL,  v4,  @"accessoryType",  WeakRetained,  "_handleFollowUpItem:"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10005103C;
  v9[3] = &unk_10018E608;
  id v10 = v4;
  id v7 = v4;
  [v6 setUpdateBlock:v9];

  return v6;
}

void sub_10005103C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) title]);
  [v6 setLocalizedTitle:v3];

  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) informativeText]);
  [v6 setLocalizedDescription:v4];

  objc_msgSend(v6, "setBadgeValue:", objc_msgSend(*(id *)(a1 + 32), "badgeCount"));
  [v6 setLocalizedValue:0];
  unint64_t v5 = (unint64_t)[*(id *)(a1 + 32) accessoryType];
  if (v5 <= 2) {
    [v6 setAccessoryTypes:qword_10012A008[v5]];
  }
}

void sub_1000515AC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *a12, id *location)
{
}

void sub_100051640(id a1, TSKSettingItem *a2, NSNumber *a3)
{
  id v4 = a3;
  id v6 = a2;
  -[TSKSettingItem setLocalizedValue:](v6, "setLocalizedValue:", 0LL);
  BOOL v5 = -[NSNumber BOOLValue](v4, "BOOLValue");

  -[TSKSettingItem setHidden:](v6, "setHidden:", v5);
}

TVSettingsUserAppleIDServiceViewController *sub_10005169C(uint64_t a1)
{
  uint64_t v2 = objc_alloc(&OBJC_CLASS___TVSettingsUserAppleIDServiceViewController);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  BOOL v5 = -[TVSettingsUserAppleIDServiceViewController initWithUser:serviceType:](v2, "initWithUser:serviceType:", v4, 0LL);

  return v5;
}

void sub_100051708(uint64_t a1, void *a2, void *a3)
{
  id v13 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);

  [v13 setLocalizedValue:v5];
  if ([v7 hasiCloudAccount]
    && ([v7 canSignOutOfiCloud] & 1) == 0)
  {
    uint64_t v9 = 0LL;
    uint64_t v10 = 0LL;
    else {
      uint64_t v8 = @"AccountsUserSignOutAppleAccountDisabledGuestDescription";
    }
  }

  else
  {
    else {
      uint64_t v8 = @"AccountsEditAdditionalUserProfileIcloudDescription";
    }
    uint64_t v9 = 1LL;
    uint64_t v10 = 1LL;
  }

  uint64_t v11 = TSKLocString(v8);
  unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  [v13 setEnabled:v9];
  [v13 setAccessoryTypes:v10];
  [v13 setLocalizedDescription:v12];
}

TVSettingsUserAppleIDServiceViewController *sub_100051820(uint64_t a1)
{
  uint64_t v2 = objc_alloc(&OBJC_CLASS___TVSettingsUserAppleIDServiceViewController);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  id v5 = -[TVSettingsUserAppleIDServiceViewController initWithUser:serviceType:](v2, "initWithUser:serviceType:", v4, 1LL);

  return v5;
}

void sub_10005188C(id a1, TSKSettingItem *a2, NSString *a3)
{
}

TVSettingsUserAppleIDServiceViewController *sub_100051894(uint64_t a1)
{
  uint64_t v2 = objc_alloc(&OBJC_CLASS___TVSettingsUserAppleIDServiceViewController);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  id v5 = -[TVSettingsUserAppleIDServiceViewController initWithUser:serviceType:](v2, "initWithUser:serviceType:", v4, 2LL);

  return v5;
}

void sub_100051900(id a1, TSKSettingItem *a2, NSString *a3)
{
}

void sub_100051BB0(_Unwind_Exception *a1)
{
}

void sub_100051BFC(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  unsigned int v5 = [v4 isPrimary];

  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  unsigned int v7 = [v6 hasiCloudAccount];

  [v3 setHidden:v5 & v7 ^ 1];
}

TVSettingsUserProfilePhotosViewController *sub_100051C88(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = -[TVSettingsUserProfilePhotosViewController initWithUserProfileFacade:]( objc_alloc(&OBJC_CLASS___TVSettingsUserProfilePhotosViewController),  "initWithUserProfileFacade:",  *(void *)(a1 + 32));
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 localizedTitle]);

  -[TVSettingsUserProfilePhotosViewController setTitle:](v4, "setTitle:", v5);
  return v4;
}

void sub_100051CF8(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _iCloudPhotoSectionValueUsingUserProfileFacade:*(void *)(a1 + 32)]);
  [v4 setLocalizedValue:v5];
}

LABEL_10:
  return v5;
}

  return v18;
}

void sub_100052020( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10005205C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  unsigned int v5 = [v4 isPrimary];

  [v3 setHidden:v5 ^ 1];
}

void sub_1000520C8(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v10 = (id)objc_claimAutoreleasedReturnValue(+[IMSharedWithYouManager sharedManager](&OBJC_CLASS___IMSharedWithYouManager, "sharedManager"));
  unsigned int v4 = [v10 isSharedWithYouEnabled];
  unsigned int v5 = +[NSBundle bundleForClass:]( &OBJC_CLASS___NSBundle,  "bundleForClass:",  objc_opt_class(&OBJC_CLASS___TSKSettingItem));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  if (v4) {
    unsigned int v7 = @"SettingsON";
  }
  else {
    unsigned int v7 = @"SettingsOFF";
  }
  uint64_t v8 = TSKLocStringFromBundleCachingKey(v7, v6, 0LL, 0LL, @"Localizable");
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  -[TSKSettingItem setLocalizedValue:](v3, "setLocalizedValue:", v9);
}

void sub_100052644( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, id a27)
{
}

void sub_1000526C0(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  uint64_t v5 = [v4 hasiTunesAccount] ^ 1;

  [v6 setHidden:v5];
}

void sub_10005272C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 passwordSetting]);

  if ([v5 isUpdatingAsnPaidSetting])
  {
    [v3 setAccessoryTypes:4];
    [v3 setLocalizedValue:0];
    uint64_t v6 = 0LL;
  }

  else
  {
    uint64_t v6 = [v5 isUpdatingAsnFreeSetting] ^ 1;
    [v3 setAccessoryTypes:0];
  }

  [v3 setEnabled:v6];
}

void sub_1000527E4(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 passwordSetting]);

  unsigned int v9 = [v8 isUpdatingAsnFreeSetting];
  uint64_t v10 = 0LL;
  if ([v8 asnPaidSettingValue] != (id)3 && (v9 & 1) == 0) {
    uint64_t v10 = [v8 isUpdatingAsnPaidSetting] ^ 1;
  }
  if (v9) {
    uint64_t v11 = 4LL;
  }
  else {
    uint64_t v11 = 0LL;
  }
  [v15 setAccessoryTypes:v11];
  if (v9) {
    [v15 setLocalizedValue:0];
  }
  [v15 setEnabled:v10];
  if ([v15 isEnabled])
  {
    else {
      unsigned int v12 = @"iTMSFreeNoDescription";
    }
    uint64_t v13 = TSKLocString(v12);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  }

  else
  {
    uint64_t v14 = 0LL;
  }

  [v15 setLocalizedDescription:v14];
}

void sub_100052BA4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_100052BE4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  uint64_t v5 = [v4 hasiCloudAccount] ^ 1;

  [v6 setHidden:v5];
}

void sub_100052C50(id a1)
{
  id v1 = +[NSBundle bundleForClass:]( &OBJC_CLASS___NSBundle,  "bundleForClass:",  objc_opt_class(&OBJC_CLASS___TSKSettingItem));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  uint64_t v3 = TSKLocStringFromBundleCachingKey(@"SettingsOFF", v2, 0LL, 0LL, @"Localizable");
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = +[NSBundle bundleForClass:]( &OBJC_CLASS___NSBundle,  "bundleForClass:",  objc_opt_class(&OBJC_CLASS___TSKSettingItem),  v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = TSKLocStringFromBundleCachingKey(@"SettingsON", v6, 0LL, 0LL, @"Localizable");
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  v12[1] = v8;
  v12[2] = &stru_100195DD8;
  unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v12, 3LL));

  uint64_t v10 = -[TSKMappingFormatter initWithInputs:outputs:]( objc_alloc(&OBJC_CLASS___TSKMappingFormatter),  "initWithInputs:outputs:",  &off_1001AED28,  v9);
  uint64_t v11 = (void *)qword_1001E1700;
  qword_1001E1700 = (uint64_t)v10;
}

void sub_100052DB0(uint64_t a1, void *a2)
{
  id v20 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained userProfileFacade]);
  unint64_t v5 = (unint64_t)[v4 recognizeMyVoiceState];

  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained userProfileFacade]);
  unint64_t v7 = (unint64_t)[v6 recognizeMyVoiceAvailability];

  uint64_t v8 = @"AccountsUserSiriRecognizeMyVoiceSynchronizingDescription";
  if (v5 | v7) {
    uint64_t v9 = 0LL;
  }
  else {
    uint64_t v9 = 4LL;
  }
  if (v5 | v7) {
    uint64_t v8 = @"AccountsUserSiriRecognizeMyVoiceDescription";
  }
  if (v5 == -1LL) {
    uint64_t v10 = 4LL;
  }
  else {
    uint64_t v10 = v9;
  }
  BOOL v11 = v5 != -1LL && (v5 | v7) != 0;
  if (v5 == -1LL) {
    unsigned int v12 = @"AccountsUserSiriRecognizeMyVoiceSynchronizingDescription";
  }
  else {
    unsigned int v12 = v8;
  }
  [v20 setAccessoryTypes:v10];
  [v20 setEnabled:v11];
  uint64_t v13 = TSKLocRMVString(v12);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  [v20 setLocalizedDescription:v14];

  id v15 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSSiriSettings sharedInstance](&OBJC_CLASS___TVCSSiriSettings, "sharedInstance"));
  id v16 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained supportedMultiUserLanguageCodes]);
  unsigned __int8 v17 = (void *)objc_claimAutoreleasedReturnValue([v15 language]);
  unsigned int v18 = [v16 containsObject:v17];

  else {
    uint64_t v19 = 1LL;
  }
  [v20 setHidden:v19];
}

void sub_100053108(_Unwind_Exception *a1)
{
}

void sub_100053124(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = (id *)(a1 + 32);
    id v3 = a2;
    id WeakRetained = objc_loadWeakRetained(v2);
    [WeakRetained _showRMVErrorAlertForError:v3];
  }

void sub_1000536B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11, id *a12, id *a13)
{
}

id sub_100053794(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _makeAccountUserChangeNameChildViewController]);

  return v2;
}

void sub_1000537CC(id a1, TSKSettingItem *a2, id a3)
{
}

id sub_1000537D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _manageSubscriptionsViewController]);

  return v2;
}

void sub_100053810(uint64_t a1, void *a2)
{
  id v13 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  uint64_t v5 = [v4 hasiTunesAccount] ^ 1;

  [v13 setHidden:v5];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained userProfileFacade]);
  id v7 = [v6 userHasActiveiTunes];

  [v13 setEnabled:v7];
  if ((v7 & 1) != 0)
  {
    uint64_t v8 = 0LL;
  }

  else
  {
    uint64_t v9 = TSKLocString(@"AccountsUserSubscriptionsDisabledDescription");
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v9);
  }

  [v13 setLocalizedDescription:v8];
  [v13 setLocalizedValue:0];
  unint64_t v10 = (unint64_t)[v13 accessoryTypes];
  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained itmsFacade]);
  unsigned int v12 = [v11 isManagedSubscriptionsURLLoaded];

  if (((v10 >> 2) & 1) == v12) {
    objc_msgSend(v13, "setAccessoryTypes:", (unint64_t)objc_msgSend(v13, "accessoryTypes") ^ 4);
  }
}

void sub_100053930(uint64_t a1, void *a2)
{
  id v11 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained userProfileFacade]);
  id v6 = [v5 isSingleUserDevice];

  [v11 setHidden:v6];
  [v11 setAccessoryTypes:0];
  id v7 = [v4 groupRecommendationsConsent];
  if (v7)
  {
    if (v7 == (id)2)
    {
      uint64_t v8 = @"AccountsUserGroupRecommendationsOffValue";
      goto LABEL_7;
    }

    if (v7 == (id)1)
    {
      uint64_t v8 = @"AccountsUserGroupRecommendationsOnValue";
LABEL_7:
      uint64_t v9 = TSKLocString(v8);
      unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      [v11 setLocalizedValue:v10];
    }
  }

  else
  {
    [v11 setLocalizedValue:0];
    [v11 setAccessoryTypes:4];
  }
}

void sub_100053A24(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained userProfileFacade]);
  uint64_t v5 = [v4 isSingleUserDevice] ^ 1;

  [v3 setHidden:v5];
}

void sub_100053A90(uint64_t a1, void *a2, void *a3)
{
  id v17 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [v17 setLocalizedValue:0];
  id v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained user]);
  unsigned int v8 = [v7 canBeRemoved];
  unsigned __int8 v9 = [v17 accessoryTypes];
  unsigned int v10 = [v5 BOOLValue];

  [v17 setEnabled:v8 & (v10 ^ 1)];
  if (((v10 ^ ((v9 & 4) == 0LL)) & 1) == 0) {
    objc_msgSend(v17, "setAccessoryTypes:", (unint64_t)objc_msgSend(v17, "accessoryTypes") ^ 4);
  }
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 name]);
  if (v8)
  {
    else {
      unsigned int v12 = @"AccountsUserRemoveUserDescriptionAdditionalUser";
    }
    uint64_t v13 = TSKLocString(v12);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    [v17 setLocalizedDescription:v14];
  }

  else
  {
    uint64_t v15 = TSKLocString(@"AccountsUserRemoveUserDescriptionForHomeUserNoHomeNameFallback");
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v15);
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString localizedStringWithFormat:]( &OBJC_CLASS___NSString,  "localizedStringWithFormat:",  v14,  v11));
    [v17 setLocalizedDescription:v16];
  }
}

void sub_10005401C(_Unwind_Exception *a1)
{
}

void sub_100054050(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsTapToRepairUserPresenterConfiguration);
  -[TVSettingsTapToRepairUserPresenterConfiguration setCopyStyle:](v1, "setCopyStyle:", 0LL);
  -[TVSettingsTapToRepairUserPresenterConfiguration setNeedsCDPRepair:](v1, "setNeedsCDPRepair:", 1LL);
  -[TVSettingsTapToRepairUserPresenterConfiguration setShouldEnableRecognizeMyVoiceAfterRepair:]( v1,  "setShouldEnableRecognizeMyVoiceAfterRepair:",  1LL);
  [WeakRetained _startTapToRepairUserWithConfiguration:v1];
}

void sub_1000540C0(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100054154;
  v5[3] = &unk_10018FAE8;
  char v7 = a2;
  id v6 = *(id *)(a1 + 32);
  [WeakRetained dismissViewControllerAnimated:1 completion:v5];
}

uint64_t sub_100054154(uint64_t result)
{
  if (*(_BYTE *)(result + 40)) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16LL))();
  }
  return result;
}

void sub_100054758(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "UserViewController");
  uint64_t v2 = (void *)qword_1001E1710;
  qword_1001E1710 = (uint64_t)v1;
}

id sub_100054B88(uint64_t a1)
{
  return _[*(id *)(a1 + 32) startPopTransition];
}

id sub_100054B90(uint64_t a1)
{
  return [*(id *)(a1 + 32) startPushTransition];
}

void sub_100054E68(uint64_t a1)
{
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[TransitionTester sharedTransitionTester](&OBJC_CLASS___TransitionTester, "sharedTransitionTester"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) window]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 rootViewController]);
  [v4 setMainViewController:v3];

  [v4 setTotalTestsToRun:*(int *)(a1 + 40)];
  [v4 runTest];
}

void sub_100055134(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _findFirstViewOfClass:*(void *)(a1 + 64) inViewHierarchy:*(void *)(a1 + 40) depth:20]);
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 56);
    *(_DWORD *)buf = 138412546;
    uint64_t v11 = v3;
    __int16 v12 = 2112;
    uint64_t v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "%@ running with %@",  buf,  0x16u);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](&OBJC_CLASS___UIApplication, "sharedApplication"));
  [v5 startedTest:*(void *)(a1 + 48)];

  double v6 = (double)*(int *)(a1 + 72);
  double v7 = *(float *)(a1 + 76);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1000552A4;
  v8[3] = &unk_10018EC08;
  id v9 = *(id *)(a1 + 48);
  objc_msgSend( v2,  "_simulateScrollWithTranslation:duration:willBeginDragging:didEndDragging:willBeginDecelerating:didEndDecelerating:",  0,  v8,  0,  0,  0.0,  v6,  v7);
}

void sub_1000552A4(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0LL, 0LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10005532C;
  block[3] = &unk_10018E440;
  id v4 = *(id *)(a1 + 32);
  dispatch_after(v2, &_dispatch_main_q, block);
}

void sub_10005532C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](&OBJC_CLASS___UIApplication, "sharedApplication"));
  [v2 finishedTest:*(void *)(a1 + 32)];
}

id sub_100055B74(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) objectForKeyedSubscript:a2];
}

id sub_1000566BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedName]);
  double v6 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedDescription]);
  double v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  v6,  v4,  @"selected",  *(void *)(a1 + 32),  "_didSelectEffectItem:"));

  [v7 setUpdateBlock:&stru_100190B48];
  return v7;
}

void sub_100056764(id a1, TSKSettingItem *a2, NSNumber *a3)
{
  id v5 = a2;
  if (-[NSNumber BOOLValue](a3, "BOOLValue")) {
    uint64_t v4 = 2LL;
  }
  else {
    uint64_t v4 = 0LL;
  }
  -[TSKSettingItem setAccessoryTypes:](v5, "setAccessoryTypes:", v4);
  -[TSKSettingItem setLocalizedValue:](v5, "setLocalizedValue:", 0LL);
}

TSKSettingItem *__cdecl sub_100056EF0(id a1, TSKListSettingGroup *a2, TILexiconEntry *a3)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  0LL,  0LL,  a3,  @"userInput"));
  [v3 setUpdateBlock:&stru_100190BA8];
  return (TSKSettingItem *)v3;
}

void sub_100056F40(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v4 = a2;
  -[TSKSettingItem setLocalizedTitle:](v4, "setLocalizedTitle:", a3);
  -[TSKSettingItem setLocalizedValue:](v4, "setLocalizedValue:", 0LL);
}

void sub_100057228( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10005724C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained emailFacade]);
  uint64_t v4 = *(void *)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000572D4;
  v5[3] = &unk_10018E440;
  void v5[4] = WeakRetained;
  [v3 deleteEntry:v4 completion:v5];
}

id sub_1000572D4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) emailFacade]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 previouslyUsedEmails]);
  id v4 = [v3 count];

  if (!v4)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) tableView]);
    [v5 setEditing:0];
  }

  [*(id *)(a1 + 32) reloadSettings];
  return +[TVCSMetrics reportAction:](&OBJC_CLASS___TVCSMetrics, "reportAction:", 9LL);
}

void sub_1000574D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000574FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained emailFacade]);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_100057574;
  v3[3] = &unk_10018E440;
  void v3[4] = WeakRetained;
  [v2 clearAllEntriesWithCompletion:v3];
}

id sub_100057574(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) tableView]);
  [v2 setEditing:0];

  [*(id *)(a1 + 32) reloadSettings];
  return +[TVCSMetrics reportAction:](&OBJC_CLASS___TVCSMetrics, "reportAction:", 10LL);
}

id sub_1000580FC()
{
  if (qword_1001E1788 != -1) {
    dispatch_once(&qword_1001E1788, &stru_100190CC0);
  }
  return (id)qword_1001E1780;
}

id sub_10005813C(uint64_t a1)
{
  return +[TVSettingsOSUpdateConfigurationManager _completeSetCurrentConfiguration:withData:error:]( &OBJC_CLASS___TVSettingsOSUpdateConfigurationManager,  "_completeSetCurrentConfiguration:withData:error:",  *(void *)(a1 + 32),  0LL,  *(void *)(a1 + 40));
}

void sub_100058154(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100058244;
  block[3] = &unk_100190BD0;
  id v14 = *(id *)(a1 + 32);
  id v15 = v8;
  id v16 = v7;
  id v17 = v9;
  id v18 = *(id *)(a1 + 40);
  id v10 = v9;
  id v11 = v7;
  id v12 = v8;
  dispatch_async(&_dispatch_main_q, block);
}

id sub_100058244(void *a1)
{
  id v2 = sub_1000580FC();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = a1[4];
    uint64_t v5 = a1[5];
    uint64_t v6 = a1[6];
    uint64_t v7 = a1[7];
    int v9 = 138544130;
    uint64_t v10 = v4;
    __int16 v11 = 2114;
    uint64_t v12 = v5;
    __int16 v13 = 2114;
    uint64_t v14 = v6;
    __int16 v15 = 2114;
    uint64_t v16 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Fetch of OSUpdate configuration profile %{public}@ response: %{public}@ document: %{public}@ error: %{public}@",  (uint8_t *)&v9,  0x2Au);
  }

  return +[TVSettingsOSUpdateConfigurationManager _completeSetCurrentConfiguration:withData:error:]( &OBJC_CLASS___TVSettingsOSUpdateConfigurationManager,  "_completeSetCurrentConfiguration:withData:error:",  a1[8],  a1[6],  a1[7]);
}

id sub_10005831C(uint64_t a1)
{
  return +[TVSettingsOSUpdateConfigurationManager _completeSetCurrentConfiguration:withData:error:]( &OBJC_CLASS___TVSettingsOSUpdateConfigurationManager,  "_completeSetCurrentConfiguration:withData:error:",  *(void *)(a1 + 32),  0LL,  0LL);
}

void sub_100058378(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsOSUpdateConfiguration);
  id v2 = (void *)qword_1001E1738;
  qword_1001E1738 = (uint64_t)v1;

  uint64_t v3 = (void *)qword_1001E1738;
  uint64_t v4 = TSKLocString(@"SettingsOSUpdateConfigurationNameShipping");
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  [v3 setRawName:v5];

  uint64_t v6 = (void *)qword_1001E1738;
  uint64_t v7 = TSKLocString(@"SettingsOSUpdateConfigurationDescShipping");
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  [v6 setLongDescription:v8];

  [(id)qword_1001E1738 setIdentifier:off_1001DFB48];
  objc_msgSend((id)qword_1001E1738, "setUuid_deprecated:", off_1001DFB40);
  [(id)qword_1001E1738 setRequiresVPN:0];
  [(id)qword_1001E1738 setRequiresAppleConnect:0];
  [(id)qword_1001E1738 setRequiredProfileURL:0];
  [(id)qword_1001E1738 setAudienceOverride:0];
}

void sub_100058490(id a1)
{
  unsigned int v23 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsOSUpdateConfiguration);
  uint64_t v2 = TSKLocString(@"Green");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  -[TVSettingsOSUpdateConfiguration setRawName:](v1, "setRawName:", v3);

  uint64_t v4 = TSKLocString(@"SettingsOSUpdateConfigurationDescCarry");
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsOSUpdateConfiguration rawName](v1, "rawName"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v5, v6));

  -[TVSettingsOSUpdateConfiguration setLongDescription:](v1, "setLongDescription:", v7);
  -[TVSettingsOSUpdateConfiguration setIdentifier:](v1, "setIdentifier:", @"com.apple.tvOS.fcgreen");
  -[TVSettingsOSUpdateConfiguration setUuid_deprecated:]( v1,  "setUuid_deprecated:",  @"F27E06DA-A15B-11EB-BCBC-0242AC130002");
  -[TVSettingsOSUpdateConfiguration setRequiresVPN:](v1, "setRequiresVPN:", 1LL);
  -[TVSettingsOSUpdateConfiguration setRequiresAppleConnect:](v1, "setRequiresAppleConnect:", 1LL);
  -[TVSettingsOSUpdateConfiguration setRequiredProfileURL:]( v1,  "setRequiredProfileURL:",  @"https://basejumper.apple.com/atv/fcg.mc");
  -[TVSettingsOSUpdateConfiguration setAudienceOverride:](v1, "setAudienceOverride:", 0LL);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsOSUpdateConfiguration rawName](v1, "rawName"));
  -[NSMutableDictionary setObject:forKey:](v23, "setObject:forKey:", v1, v8);

  int v9 = objc_alloc_init(&OBJC_CLASS___TVSettingsOSUpdateConfiguration);
  -[TVSettingsOSUpdateConfiguration setRawName:](v9, "setRawName:", @"Amber");
  uint64_t v10 = TSKLocString(@"SettingsOSUpdateConfigurationDescCarry");
  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsOSUpdateConfiguration rawName](v9, "rawName"));
  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v11, v12));

  -[TVSettingsOSUpdateConfiguration setLongDescription:](v9, "setLongDescription:", v13);
  -[TVSettingsOSUpdateConfiguration setIdentifier:](v9, "setIdentifier:", @"com.apple.tvOS.fcamber");
  -[TVSettingsOSUpdateConfiguration setUuid_deprecated:]( v9,  "setUuid_deprecated:",  @"1EB218EA-8681-11EB-8DCD-0242AC130003");
  -[TVSettingsOSUpdateConfiguration setRequiresVPN:](v9, "setRequiresVPN:", 1LL);
  -[TVSettingsOSUpdateConfiguration setRequiresAppleConnect:](v9, "setRequiresAppleConnect:", 1LL);
  -[TVSettingsOSUpdateConfiguration setRequiredProfileURL:]( v9,  "setRequiredProfileURL:",  @"https://basejumper.apple.com/atv/fca.mc");
  -[TVSettingsOSUpdateConfiguration setAudienceOverride:](v9, "setAudienceOverride:", 0LL);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsOSUpdateConfiguration rawName](v9, "rawName"));
  -[NSMutableDictionary setObject:forKey:](v23, "setObject:forKey:", v9, v14);

  __int16 v15 = objc_alloc_init(&OBJC_CLASS___TVSettingsOSUpdateConfiguration);
  -[TVSettingsOSUpdateConfiguration setRawName:](v15, "setRawName:", @"Purple");
  uint64_t v16 = TSKLocString(@"SettingsOSUpdateConfigurationDescCarry");
  id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  id v18 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsOSUpdateConfiguration rawName](v15, "rawName"));
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v17, v18));

  -[TVSettingsOSUpdateConfiguration setLongDescription:](v15, "setLongDescription:", v19);
  -[TVSettingsOSUpdateConfiguration setIdentifier:](v15, "setIdentifier:", @"com.apple.tvOS.fcpurple");
  -[TVSettingsOSUpdateConfiguration setUuid_deprecated:]( v15,  "setUuid_deprecated:",  @"71649508-8682-11EB-8DCD-0242AC130003");
  -[TVSettingsOSUpdateConfiguration setRequiresVPN:](v15, "setRequiresVPN:", 1LL);
  -[TVSettingsOSUpdateConfiguration setRequiresAppleConnect:](v15, "setRequiresAppleConnect:", 1LL);
  -[TVSettingsOSUpdateConfiguration setRequiredProfileURL:]( v15,  "setRequiredProfileURL:",  @"https://basejumper.apple.com/atv/fcp.mc");
  -[TVSettingsOSUpdateConfiguration setAudienceOverride:](v15, "setAudienceOverride:", 0LL);
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsOSUpdateConfiguration rawName](v15, "rawName"));
  -[NSMutableDictionary setObject:forKey:](v23, "setObject:forKey:", v15, v20);

  id v21 = -[NSMutableDictionary copy](v23, "copy");
  id v22 = (void *)qword_1001E1748;
  qword_1001E1748 = (uint64_t)v21;
}

void sub_100058C6C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  if (v7)
  {
    id v8 = sub_1000580FC();
    int v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1000F7ECC();
    }
  }

  else
  {
    if ([v6 length])
    {
      [*(id *)(a1 + 40) _processLivAPIResultData:v6 withCompletion:*(void *)(a1 + 32)];
      goto LABEL_7;
    }

    id v10 = sub_1000580FC();
    int v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1000F7EA0();
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
LABEL_7:
}

void sub_100058D88(id a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v1 postNotificationName:off_1001DFB58 object:0 userInfo:0];
}

void sub_1000596D8(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 postNotificationName:off_1001DFB68 object:0 userInfo:*(void *)(a1 + 32)];
}

void sub_100059E68(id a1)
{
  id v1 = (const __CFBoolean *)MGCopyAnswer(@"SigningFuse", 0LL);
  if (v1)
  {
    id v2 = v1;
    CFTypeID v3 = CFGetTypeID(v1);
    if (v3 == CFBooleanGetTypeID()) {
      byte_1001E1770 = CFBooleanGetValue(v2) != 0;
    }
    CFRelease(v2);
  }

void sub_10005A6F4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "OSUpdateConfiguration");
  id v2 = (void *)qword_1001E1780;
  qword_1001E1780 = (uint64_t)v1;
}

void sub_10005A724( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_10005A998(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  int v9 = objc_opt_new(&OBJC_CLASS___NSDateComponents);
  id v7 = [v5 integerValue];

  -[NSDateComponents setSecond:](v9, "setSecond:", v7);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stringFromDateComponents:v9]);
  [v6 setLocalizedValue:v8];
}

id sub_10005C3C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:*(double *)(a1 + 40)];
}

void sub_10005CA38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_10005CA60(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 photoCollectionGroupName]);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  0LL,  v4,  0LL,  WeakRetained,  "selectedItem:"));

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_10005CB54;
  v10[3] = &unk_10018ED70;
  id v11 = *(id *)(a1 + 32);
  id v12 = v4;
  id v8 = v4;
  [v7 setUpdateBlock:v10];

  return v7;
}

void sub_10005CB54(uint64_t a1, void *a2)
{
  id v16 = a2;
  CFTypeID v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) selectedPhotoCollectionGroup]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 photoCollectionGroupIdentifier]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) photoCollectionGroupIdentifier]);
  unsigned int v6 = [v4 isEqual:v5];

  if (v6) {
    uint64_t v7 = 2LL;
  }
  else {
    uint64_t v7 = 0LL;
  }
  [v16 setAccessoryTypes:v7];
  if (*(void *)(a1 + 40) == qword_1001E22F8
    || (objc_msgSend(v16, "setAccessoryTypes:", (unint64_t)objc_msgSend(v16, "accessoryTypes") | 1),
        id v8 = *(void **)(a1 + 40),
        v8 == (void *)qword_1001E22F8))
  {
    if ([*(id *)(a1 + 32) primaryUseriCloudPhotoLibraryEnabled])
    {
      if (([*(id *)(a1 + 32) photosSourceHasMemories] & 1) == 0
        && [*(id *)(a1 + 32) hasPhotosCompletedInitialSync])
      {
        [v16 setEnabled:0];
      }
    }

    else
    {
      uint64_t v13 = TSKLocString(@"iCloudPhotoSetUpValue");
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      [v16 setLocalizedValue:v14];
    }

    uint64_t v12 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) photoCollectionGroupDescription]);
    goto LABEL_14;
  }

  int v9 = (void *)objc_claimAutoreleasedReturnValue([v8 photoCollectionGroupIdentifier]);
  unsigned int v10 = [v9 isEqualToString:@"com.apple.TVPhotos"];

  if (v10)
  {
    uint64_t v11 = TSKLocString(@"SaverBackdropAblumsDescription");
    uint64_t v12 = objc_claimAutoreleasedReturnValue(v11);
LABEL_14:
    __int16 v15 = (void *)v12;
    [v16 setLocalizedDescription:v12];
  }
}

UIViewController *__cdecl sub_10005D184(id a1, TSKSettingItem *a2)
{
  id v2 = a2;
  id v3 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem localizedTitle](v2, "localizedTitle"));

  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLicenseUtilities softwareLicenseText]( &OBJC_CLASS___TVSettingsLicenseUtilities,  "softwareLicenseText"));
  id v6 = [v3 initWithTitle:v4 text:v5];

  return (UIViewController *)v6;
}

UIViewController *__cdecl sub_10005D208(id a1, TSKSettingItem *a2)
{
  id v2 = a2;
  id v3 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem localizedTitle](v2, "localizedTitle"));

  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLicenseUtilities gameCenterTermsText]( &OBJC_CLASS___TVSettingsLicenseUtilities,  "gameCenterTermsText"));
  id v6 = [v3 initWithTitle:v4 text:v5];

  return (UIViewController *)v6;
}

UIViewController *__cdecl sub_10005D28C(id a1, TSKSettingItem *a2)
{
  id v2 = a2;
  id v3 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem localizedTitle](v2, "localizedTitle"));

  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLicenseUtilities iCloudTermsText]( &OBJC_CLASS___TVSettingsLicenseUtilities,  "iCloudTermsText"));
  id v6 = [v3 initWithTitle:v4 text:v5];

  return (UIViewController *)v6;
}

UIViewController *__cdecl sub_10005D310(id a1, TSKSettingItem *a2)
{
  id v2 = a2;
  id v3 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem localizedTitle](v2, "localizedTitle"));

  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLicenseUtilities iTunesTermsText]( &OBJC_CLASS___TVSettingsLicenseUtilities,  "iTunesTermsText"));
  id v6 = [v3 initWithTitle:v4 text:v5];

  return (UIViewController *)v6;
}

UIViewController *__cdecl sub_10005D394(id a1, TSKSettingItem *a2)
{
  id v2 = a2;
  id v3 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem localizedTitle](v2, "localizedTitle"));

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsLicenseUtilities warrantyText](&OBJC_CLASS___TVSettingsLicenseUtilities, "warrantyText"));
  id v6 = [v3 initWithTitle:v4 text:v5];

  return (UIViewController *)v6;
}

id sub_10005D5C8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _ok];
}

void sub_10005D6A0(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsHomeScreenSyncFacade);
  id v2 = (void *)qword_1001E1790;
  qword_1001E1790 = (uint64_t)v1;
}

void sub_10005D810( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10005D83C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "HeadBoard preferences changed .......",  v4,  2u);
  }

  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained headBoardPreferences]);
  id v3 = [v2 BOOLForKey:@"iCloudSyncEnabled"];

  [WeakRetained setHomeScreenSyncEnabled:v3];
}

void sub_10005DE3C(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  unint64_t v3 = *(void *)(*(void *)(a1 + 32) + 24LL) - 1LL;
  id v4 = sub_10005E4A0();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = v5;
  if (v3 > 1)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userProfile]);
      unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);
      int v11 = *(unsigned __int8 *)(a1 + 48);
      *(_DWORD *)buf = 134218498;
      uint64_t v64 = v8;
      __int16 v65 = 2114;
      *(void *)v66 = v10;
      *(_WORD *)&v66[8] = 1024;
      *(_DWORD *)&v66[10] = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Starting Prox Repair User... {self=%p, userProfileIdentifier=%{public}@, needsCDPRepair=%{BOOL}d}",  buf,  0x1Cu);
    }

    *(void *)(*(void *)(a1 + 32) + 24LL) = 1LL;
    uint64_t v12 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userProfile]);
    uint64_t v13 = *(void **)(*(void *)(a1 + 32) + 32LL);
    *(void *)(*(void *)(a1 + 32) + 32LL) = v12;

    id v6 = (os_log_s *)[[PBSUserProfileAccountInfo alloc] initWithUserProfile:*(void *)(*(void *)(a1 + 32) + 32)];
    uint64_t v14 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
    __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s iCloudAccount](v6, "iCloudAccount"));
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 identifier]);
    -[NSMutableSet bs_safeAddObject:](v14, "bs_safeAddObject:", v16);

    id v17 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s iTunesAccount](v6, "iTunesAccount"));
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 identifier]);
    -[NSMutableSet bs_safeAddObject:](v14, "bs_safeAddObject:", v18);

    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s gameCenterAccount](v6, "gameCenterAccount"));
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 identifier]);
    -[NSMutableSet bs_safeAddObject:](v14, "bs_safeAddObject:", v20);

    if ((unint64_t)-[NSMutableSet count](v14, "count") > 2)
    {
      uint64_t v22 = 0LL;
      unsigned int v27 = 0;
    }

    else
    {
      id v21 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s iCloudAccount](v6, "iCloudAccount"));
      LODWORD(v22) = v21 == 0LL;

      unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s iTunesAccount](v6, "iTunesAccount"));
      BOOL v24 = v23 == 0LL;

      if (v24) {
        LODWORD(v22) = v22 | 2;
      }
      id v25 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s gameCenterAccount](v6, "gameCenterAccount"));
      BOOL v26 = v25 == 0LL;

      if (v26) {
        uint64_t v22 = v22 | 4;
      }
      else {
        uint64_t v22 = v22;
      }
      unsigned int v27 = 1;
    }

    if (*(_BYTE *)(a1 + 48)) {
      uint64_t v28 = v27 | 2;
    }
    else {
      uint64_t v28 = v27;
    }
    if ((_DWORD)v28)
    {
      if ((v28 & 1) != 0 && ![*((id *)*v2 + 4) type])
      {
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore defaultStore](&OBJC_CLASS___ACAccountStore, "defaultStore"));
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "aa_primaryAppleAccount"));
        BOOL v31 = v30 == 0LL;

        if (v31)
        {
          id v32 = sub_10005E4A0();
          id v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "Removing all HK pairing identities.",  buf,  2u);
          }

          uint64_t v34 = objc_alloc_init(&OBJC_CLASS___HMHomeManager);
          -[HMHomeManager removeAllHomeKitPairingIdentities](v34, "removeAllHomeKitPairingIdentities");
          id v35 = sub_10005E4A0();
          uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "Removed all HK pairing identities.",  buf,  2u);
          }
        }
      }

      uint64_t v37 = -[PBSIgnoreUserProfileAccountNotificationsAssertion initWithIdentifier:]( objc_alloc(&OBJC_CLASS___PBSIgnoreUserProfileAccountNotificationsAssertion),  "initWithIdentifier:",  @"Prox Repair User");
      id v38 = (void *)*((void *)*v2 + 6);
      *((void *)*v2 + 6) = v37;

      [*((id *)*v2 + 6) acquire];
      int v39 = objc_alloc(&OBJC_CLASS___RBSAssertion);
      uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue(+[RBSTarget currentProcess](&OBJC_CLASS___RBSTarget, "currentProcess"));
      __int16 v41 = (void *)objc_claimAutoreleasedReturnValue( +[RBSDomainAttribute attributeWithDomain:name:]( &OBJC_CLASS___RBSDomainAttribute,  "attributeWithDomain:name:",  @"com.apple.common",  @"FinishTaskUninterruptable"));
      v62 = v41;
      id v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v62, 1LL));
      uint64_t v43 = -[RBSAssertion initWithExplanation:target:attributes:]( v39,  "initWithExplanation:target:attributes:",  @"Prox Repair User",  v40,  v42);
      uint64_t v44 = (void *)*((void *)*v2 + 7);
      *((void *)*v2 + 7) = v43;

      [*((id *)*v2 + 7) acquireWithInvalidationHandler:&stru_100190DC0];
      id v45 = objc_alloc_init(&OBJC_CLASS___SFAuthenticateAccountsServiceConfiguration);
      [v45 setServiceType:v28];
      [v45 setTargetedAccountTypes:v22];
      [v45 setExistingAccountsIdentifiers:v14];
      v46 = objc_alloc_init(&OBJC_CLASS___SFAuthenticateAccountsService);
      v47 = (void *)*((void *)*v2 + 2);
      *((void *)*v2 + 2) = v46;

      [*((id *)*v2 + 2) setConfiguration:v45];
      objc_msgSend(*((id *)*v2 + 2), "setDelegate:");
      objc_initWeak((id *)buf, *v2);
      v48 = (void *)*((void *)*v2 + 2);
      v57 = _NSConcreteStackBlock;
      uint64_t v58 = 3221225472LL;
      v59 = sub_10005E534;
      v60 = &unk_10018F108;
      objc_copyWeak(&v61, (id *)buf);
      [v48 setProgressHandler:&v57];
      objc_msgSend(*((id *)*v2 + 2), "activate", v57, v58, v59, v60);
      v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
      [v49 addObserver:*v2 selector:"_cancelIfNotConnectedYet" name:UIApplicationWillResignActiveNotification object:0];

      objc_destroyWeak(&v61);
      objc_destroyWeak((id *)buf);
    }

    else
    {
      id v50 = sub_10005E4A0();
      id v45 = (id)objc_claimAutoreleasedReturnValue(v50);
      if (os_log_type_enabled((os_log_t)v45, OS_LOG_TYPE_FAULT))
      {
        uint64_t v51 = *(void *)(a1 + 32);
        uint64_t v53 = *(void *)(a1 + 40);
        v52 = (unsigned __int8 *)(a1 + 32);
        int v54 = v52[16];
        v55 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v51 + 32) identifier]);
        uint64_t v56 = *(void *)(*(void *)v52 + 32LL);
        *(_DWORD *)buf = 138413058;
        uint64_t v64 = v53;
        __int16 v65 = 1024;
        *(_DWORD *)v66 = v54;
        *(_WORD *)&v66[4] = 2114;
        *(void *)&v66[6] = v55;
        __int16 v67 = 2112;
        uint64_t v68 = v56;
        _os_log_fault_impl( (void *)&_mh_execute_header,  (os_log_t)v45,  OS_LOG_TYPE_FAULT,  "Invalid service type. {user: %@, needsCDPRepair: %{BOOL}d, userProfileIdentifier: %{public}@, userProfile: %@}",  buf,  0x26u);
      }
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    sub_1000F85AC((uint64_t *)v2, v6, v7);
  }
}

void sub_10005E478( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

id sub_10005E4A0()
{
  if (qword_1001E17A8 != -1) {
    dispatch_once(&qword_1001E17A8, &stru_100190F20);
  }
  return (id)qword_1001E17A0;
}

void sub_10005E4E0(id a1, RBSAssertion *a2, NSError *a3)
{
  unint64_t v3 = a3;
  if (v3)
  {
    id v4 = sub_10005E4A0();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000F8628();
    }
  }
}

void sub_10005E534(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _handleAuthServiceProgressEvent:a2 info:v5];
}

void sub_10005E648(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if ((unint64_t)(v2[3] - 1LL) > 1)
  {
    [v2 _cleanUp];
  }

  else
  {
    id v3 = sub_10005E4A0();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v8 = 134217984;
      uint64_t v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Prox repair user cancelled by user. {self=%p}",  (uint8_t *)&v8,  0xCu);
    }

    *(void *)(*(void *)(a1 + 32) + 24LL) = 3LL;
    [*(id *)(*(void *)(a1 + 32) + 16) invalidate];
    id v6 = *(void **)(a1 + 32);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"TVSettingsUserProxRepairManagerErrorDomain",  1LL,  0LL));
    [v6 _finishWithError:v7];
  }

void sub_10005E9AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10005E9CC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) configuration]);
  if (([v2 serviceType] & 1) == 0 || !*(void *)(a1 + 40))
  {

    goto LABEL_12;
  }

  uint64_t v3 = *(void *)(a1 + 48);

  if (!v3)
  {
LABEL_12:
    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 1;
    return;
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) configuration]);
  unsigned __int8 v5 = [v4 targetedAccountTypes];

  if ((v5 & 1) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = *(void **)(*(void *)(a1 + 32) + 64LL);
    id v16 = 0LL;
    unsigned __int8 v8 = [v7 canSignInUserWithiCloudAltDSID:v6 error:&v16];
    id v9 = v16;
    unsigned int v10 = v9;
    if ((v8 & 1) == 0)
    {
      [*(id *)(a1 + 32) _finishWithError:v9];
      *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 0;

      return;
    }
  }

  if ((v5 & 4) != 0)
  {
    int v11 = *(void **)(*(void *)(a1 + 32) + 64LL);
    uint64_t v12 = *(void *)(a1 + 48);
    id v15 = 0LL;
    unsigned __int8 v13 = [v11 canSignInUserWithGameCenterAltDSID:v12 error:&v15];
    id v14 = v15;
    if ((v13 & 1) == 0)
    {
      [*(id *)(a1 + 32) _finishWithError:v14];
      *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 0;
    }
  }

id sub_10005EB74(uint64_t a1)
{
  return [*(id *)(a1 + 32) _adoptPersona];
}

id sub_10005EBF4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _restorePersona];
}

id sub_10005EC98(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) authenticatedAccounts]);
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 80);
  *(void *)(v3 + 80) = v2;

  return [*(id *)(a1 + 32) _finish];
}

void sub_10005ED80(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 48);
  if (v2 <= 31)
  {
    if (v2 == 30)
    {
      id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKeyedSubscript:@"eo"]);
      id v15 = sub_10005E4A0();
      id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_1000F8688(a1, (uint64_t)v14, v16);
      }

      [*(id *)(a1 + 32) _finishWithError:v14];
      goto LABEL_17;
    }

    if (v2 == 31)
    {
      id v3 = sub_10005E4A0();
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v5 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 134217984;
        *(void *)id v25 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Prox repair session started. {self=%p}",  buf,  0xCu);
      }

      *(void *)(*(void *)(a1 + 32) + 24LL) = 2LL;
      id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8LL));
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472LL;
      v21[2] = sub_10005F020;
      v21[3] = &unk_10018E468;
      uint64_t v7 = *(void *)(a1 + 32);
      id v22 = WeakRetained;
      uint64_t v23 = v7;
      id v8 = WeakRetained;
      dispatch_async(&_dispatch_main_q, v21);

      return;
    }

LABEL_17:
    return;
  }

  if (v2 != 32 && v2 != 100) {
    goto LABEL_15;
  }
  id v9 = sub_10005E4A0();
  unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *(_DWORD *)(a1 + 48);
    uint64_t v12 = sub_10005F02C(v11);
    uint64_t v13 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 67109634;
    *(_DWORD *)id v25 = v11;
    *(_WORD *)&v25[4] = 2082;
    *(void *)&v25[6] = v12;
    __int16 v26 = 2048;
    uint64_t v27 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Prox repair session final event. {event=%d-%{public}s}, self=%p}",  buf,  0x1Cu);
  }

  [*(id *)(a1 + 32) _finish];
}

  [v22 setLocalizedDescription:v14];
  [v22 setEnabled:v8 & ((v9 | v11) ^ 1)];
}

id sub_10005F020(uint64_t a1)
{
  return _[*(id *)(a1 + 32) proxRepairManagerDidStart:*(void *)(a1 + 40)];
}

const char *sub_10005F02C(int a1)
{
  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300) {
              return "BackupProgress";
            }
            if (a1 == 310) {
              return "SyncProgress";
            }
          }

          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }

        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }

        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }

      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }

        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }

      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }

      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }

      return "?";
    }

    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000) {
          return "SecureIntentStart";
        }
        if (a1 == 1001) {
          return "SecureIntentFinish";
        }
      }

      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }

      return "?";
    }

    switch(a1)
    {
      case 900:
        uint64_t result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        uint64_t result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        uint64_t result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        uint64_t result = "SU-No-SetupCancelled";
        break;
      case 904:
        uint64_t result = "SU-No-SetupObliterate";
        break;
      case 905:
        uint64_t result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        uint64_t result = "SysDrop AirDrop Event";
        break;
      case 907:
        uint64_t result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        uint64_t result = "SysDrop Cancel Event";
        break;
      case 909:
        uint64_t result = "File Transfer Progress Event";
        break;
      case 910:
        uint64_t result = "File Transfer Completed Event";
        break;
      case 911:
        uint64_t result = "iOSWiFiSetup";
        break;
      case 912:
        uint64_t result = "HKPrimaryResidentSSIDFetchStart";
        break;
      case 913:
        uint64_t result = "LoggingProfileTransfer";
        break;
      default:
        switch(a1)
        {
          case 800:
            uint64_t result = "AuthAccountsStart";
            break;
          case 803:
            uint64_t result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            uint64_t result = "AuthAccountsStoreProgress";
            break;
          case 805:
            uint64_t result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }

        break;
    }
  }

  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          uint64_t result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          uint64_t result = "TVLSFinish";
          break;
        case 270:
          uint64_t result = "TVLSEstimateStart";
          break;
        case 272:
          uint64_t result = "TVLSEstimateFinal";
          break;
        case 274:
          uint64_t result = "TVLSEstimateFailed";
          break;
        case 276:
          uint64_t result = "TVLSTryAgain";
          break;
        case 277:
          uint64_t result = "TVLSToneBegan";
          break;
        case 278:
          uint64_t result = "TVLCalStart";
          break;
        case 279:
          uint64_t result = "TVLCalStep";
          break;
        case 280:
          uint64_t result = "TVLCalFailed";
          break;
        case 281:
          uint64_t result = "TVLCalTryAgain";
          break;
        case 282:
          uint64_t result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250) {
            return "?";
          }
          uint64_t result = "ReportSuccess";
          break;
      }
    }

    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130) {
            return "WiFiPoweredOff";
          }
          if (a1 == 140) {
            return "RecognizeVoice";
          }
        }

        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }

        return "?";
      }

      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            uint64_t result = "iCloudStart";
          }

          else
          {
            if (a1 != 224) {
              return "?";
            }
            uint64_t result = "AppleIDSetupStart";
          }

          break;
      }
    }
  }

  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65) {
            return "SecurityAPCLoopStart";
          }
          if (a1 == 70) {
            return "SecurityFinish";
          }
        }

        else
        {
          if (a1 == 50) {
            return "PreAuthFinish";
          }
          if (a1 == 60) {
            return "SecurityStart";
          }
        }
      }

      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              uint64_t result = "Error";
              break;
            case 31:
              uint64_t result = "SessionStarted";
              break;
            case 32:
              uint64_t result = "SessionEnded";
              break;
            case 33:
              uint64_t result = "SessionSecured";
              break;
            case 35:
              uint64_t result = "ConnectStart";
              break;
            case 40:
              uint64_t result = "PreAuthStart";
              break;
            default:
              return "?";
          }

          return result;
        }

        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }

      return "?";
    }

    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }

      return "?";
    }

    switch(a1)
    {
      case 'P':
        uint64_t result = "BasicConfigStart";
        break;
      case 'Z':
        uint64_t result = "BasicConfigFinish";
        break;
      case '\\':
        uint64_t result = "StepStart";
        break;
      case '^':
        uint64_t result = "StepFinish";
        break;
      case '_':
        uint64_t result = "PreFinish";
        break;
        uint64_t result = "SetupFinished";
        break;
      case 'a':
        uint64_t result = "SetupResumed";
        break;
      case 'b':
        uint64_t result = "SetupSuspend";
        break;
      case 'c':
        uint64_t result = "SetupPeerSWUpdate";
        break;
      case 'd':
        uint64_t result = "Finished";
        break;
      default:
        return "?";
    }
  }

  return result;
}

void sub_10005F82C(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 32) type])
  {
    int v2 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) personaUniqueString]);
    if (*(void *)(*(void *)(a1 + 32) + 88LL))
    {
      id v3 = sub_10005E4A0();
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) identifier]);
        *(_DWORD *)buf = 138543618;
        int v18 = v5;
        __int16 v19 = 2114;
        uint64_t v20 = v2;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Already adopting a persona, cannot adopt another nor the same twice. {userProfileIdentifier=%{public}@, person aUniqueString=%{public}@}",  buf,  0x16u);
      }
    }

    else
    {
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[UMUserPersona currentPersona](&OBJC_CLASS___UMUserPersona, "currentPersona"));
      id v16 = 0LL;
      id v7 = -[os_log_s copyCurrentPersonaContextWithError:](v4, "copyCurrentPersonaContextWithError:", &v16);
      id v8 = v16;
      if (v7)
      {
        objc_storeStrong((id *)(*(void *)(a1 + 32) + 88LL), v7);
        id v9 = sub_10005E4A0();
        unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543362;
          int v18 = v2;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Adopting persona. {personaUniqueString=%{public}@}",  buf,  0xCu);
        }

        int v11 = (void *)objc_claimAutoreleasedReturnValue( -[os_log_s generateAndRestorePersonaContextWithPersonaUniqueString:]( v4,  "generateAndRestorePersonaContextWithPersonaUniqueString:",  v2));
        if (v11)
        {
          id v12 = sub_10005E4A0();
          uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
            sub_1000F8764();
          }

          [*(id *)(a1 + 32) _finishWithError:v11];
        }
      }

      else
      {
        id v14 = sub_10005E4A0();
        id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_1000F8704();
        }

        [*(id *)(a1 + 32) _finishWithError:v8];
      }
    }
  }

  else
  {
    id v6 = sub_10005E4A0();
    int v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "No persona adoption for Primary user.", buf, 2u);
    }
  }
}

void sub_10005FB2C(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 88LL))
  {
    id v2 = sub_10005E4A0();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 88LL);
      int v9 = 138412290;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Restoring persona. {savedPersonaContext=%@}",  (uint8_t *)&v9,  0xCu);
    }

    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[UMUserPersona currentPersona](&OBJC_CLASS___UMUserPersona, "currentPersona"));
    id v6 = [v5 restorePersonaWithSavedPersonaContext:*(void *)(*(void *)(a1 + 32) + 88)];

    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = *(void **)(v7 + 88);
    *(void *)(v7 + 8_Block_object_dispose(va, 8) = 0LL;
  }

void sub_10005FC94(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 24) != 4LL)
  {
    *(void *)(v1 + 24) = 4LL;
    id v3 = sub_10005E4A0();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v5 + 32) identifier]);
      *(_DWORD *)buf = 134218242;
      uint64_t v43 = v5;
      __int16 v44 = 2114;
      id v45 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Finished Prox Repair User. {self=%p, userProfileIdentifier=%{public}@}",  buf,  0x16u);
    }

    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) configuration]);
    unsigned __int8 v8 = [v7 serviceType];

    if ((v8 & 1) == 0) {
      goto LABEL_5;
    }
    id v13 = objc_alloc_init(&OBJC_CLASS___PBSUpdateUserProfileAttributes);
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    id v14 = *(id *)(*(void *)(a1 + 32) + 80LL);
    id v15 = [v14 countByEnumeratingWithState:&v37 objects:v41 count:16];
    if (v15)
    {
      id v17 = v15;
      uint64_t v18 = *(void *)v38;
      *(void *)&__int128 v16 = 134218242LL;
      __int128 v32 = v16;
      do
      {
        for (i = 0LL; i != v17; i = (char *)i + 1)
        {
          if (*(void *)v38 != v18) {
            objc_enumerationMutation(v14);
          }
          uint64_t v20 = *(void **)(*((void *)&v37 + 1) + 8LL * (void)i);
          switch(objc_msgSend(v20, "type", v32))
          {
            case 0u:
              id v21 = sub_10005E4A0();
              id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
              if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
              {
                unsigned int v23 = [v20 type];
                *(_DWORD *)buf = v32;
                uint64_t v43 = v23;
                __int16 v44 = 2112;
                id v45 = v20;
                _os_log_error_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "Unknown account type was signed in, it will be ignored. {type=%ld, accountInfo=%@}",  buf,  0x16u);
              }

              break;
            case 1u:
              BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) iCloudAltDSID]);

              if (v24) {
                continue;
              }
              id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 altDSID]);
              [v13 setICloudAltDSID:v22];
              break;
            case 2u:
              id v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) iTunesAltDSID]);

              if (v25) {
                continue;
              }
              id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 altDSID]);
              [v13 setITunesAltDSID:v22];
              break;
            case 3u:
              __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) gameCenterAltDSID]);

              if (v26) {
                continue;
              }
              id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 altDSID]);
              [v13 setGameCenterAltDSID:v22];
              break;
            default:
              continue;
          }
        }

        id v17 = [v14 countByEnumeratingWithState:&v37 objects:v41 count:16];
      }

      while (v17);
    }

    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v13 iCloudAltDSID]);
    if (v27 || (uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v13 iTunesAltDSID])) != 0)
    {
    }

    else
    {
      BOOL v31 = (void *)objc_claimAutoreleasedReturnValue([v13 gameCenterAltDSID]);

      if (!v31)
      {

LABEL_5:
        [*(id *)(a1 + 32) _cleanUp];
        id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8LL));
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_100060380;
        block[3] = &unk_10018E468;
        uint64_t v10 = (id *)v34;
        uint64_t v11 = *(void *)(a1 + 32);
        v34[0] = WeakRetained;
        v34[1] = v11;
        id v12 = WeakRetained;
        dispatch_async(&_dispatch_main_q, block);
LABEL_27:

        return;
      }
    }

    uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(+[PBSUserProfileManager sharedInstance](&OBJC_CLASS___PBSUserProfileManager, "sharedInstance"));
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) identifier]);
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472LL;
    void v35[2] = sub_1000600E8;
    v35[3] = &unk_100190EB0;
    uint64_t v10 = (id *)v36;
    uint64_t v30 = *(void *)(a1 + 32);
    v36[0] = v13;
    v36[1] = v30;
    id v12 = v13;
    [v28 updateUserProfileWithIdentifier:v29 attributes:v12 completionHandler:v35];

    goto LABEL_27;
  }

void sub_1000600E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_10005E4A0();
  unsigned __int8 v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  int v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000F87D8(v5, a1, v9);
    }

    [*(id *)(a1 + 40) _finishWithError:v6];
  }

  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
      uint64_t v11 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      *(void *)&uint8_t buf[4] = v10;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "User updated. {userProfileIdentifier=%{public}@, attributes=%@}",  buf,  0x16u);
    }

    *(void *)buf = 0LL;
    *(void *)&buf[8] = buf;
    *(void *)&buf[16] = 0x3032000000LL;
    unsigned int v23 = sub_100060318;
    BOOL v24 = sub_100060328;
    id v25 = 0LL;
    uint64_t v12 = *(void *)(a1 + 40);
    id v13 = *(void **)(v12 + 40);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    uint64_t v18 = sub_100060330;
    __int16 v19 = &unk_100190E60;
    uint64_t v20 = v12;
    id v21 = buf;
    id v14 = v17;
    id v15 = v13;
    [v15 lock];
    v18((uint64_t)v14);

    [v15 unlock];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_100060370;
    v16[3] = &unk_100190E88;
    void v16[4] = *(void *)(a1 + 40);
    void v16[5] = buf;
    dispatch_async(&_dispatch_main_q, v16);
    _Block_object_dispose(buf, 8);
  }
}

void sub_1000602F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_100060318(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100060328(uint64_t a1)
{
}

void sub_100060330(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8LL));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = WeakRetained;
}

id sub_100060370(uint64_t a1)
{
  return _[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) proxRepairManagerDidFinish:*(void *)(a1 + 32)];
}

id sub_100060380(uint64_t a1)
{
  return _[*(id *)(a1 + 32) proxRepairManagerDidFinish:*(void *)(a1 + 40)];
}

void sub_100060428(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 24LL) != 4LL)
  {
    id v2 = sub_10005E4A0();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 134218242;
      uint64_t v20 = v4;
      __int16 v21 = 2114;
      uint64_t v22 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Prox repair user finished with error. {self=%p, error=%{public}@}",  buf,  0x16u);
    }

    *(void *)(*(void *)(a1 + 32) + 24LL) = 4LL;
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) domain]);
    else {
      BOOL v7 = 0;
    }

    objc_initWeak((id *)buf, *(id *)(a1 + 32));
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_100060698;
    v15[3] = &unk_100190F00;
    objc_copyWeak(&v17, (id *)buf);
    BOOL v18 = v7;
    id v16 = *(id *)(a1 + 40);
    unsigned __int8 v8 = objc_retainBlock(v15);
    if ([*(id *)(*(void *)(a1 + 32) + 80) count])
    {
      id v9 = sub_10005E4A0();
      uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v14 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "Cleaning up leftover unused accounts, if any...",  v14,  2u);
      }

      uint64_t v11 = *(void **)(*(void *)(a1 + 32) + 72LL);
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472LL;
      v12[2] = sub_100060868;
      void v12[3] = &unk_10018FA98;
      id v13 = v8;
      objc_msgSend(v11, "tvsettings_removeAccountsNotUsedByUserProfilesWithCompletion:", v12);
    }

    else
    {
      ((void (*)(void *))v8[2])(v8);
    }

    objc_destroyWeak(&v17);
    objc_destroyWeak((id *)buf);
  }

void sub_100060674(_Unwind_Exception *a1)
{
}

void sub_100060698(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    v16[0] = 0LL;
    v16[1] = v16;
    v16[2] = 0x3032000000LL;
    v16[3] = sub_100060318;
    void v16[4] = sub_100060328;
    id v17 = 0LL;
    uint64_t v4 = (void *)*((void *)WeakRetained + 5);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    uint64_t v12 = sub_1000607FC;
    id v13 = &unk_100190E60;
    id v14 = WeakRetained;
    id v15 = v16;
    uint64_t v5 = v11;
    id v6 = v4;
    [v6 lock];
    v12((uint64_t)v5);

    [v6 unlock];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_10006083C;
    v7[3] = &unk_100190ED8;
    char v10 = *(_BYTE *)(a1 + 48);
    id v9 = v16;
    void v7[4] = v3;
    id v8 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, v7);

    _Block_object_dispose(v16, 8);
  }
}

void sub_1000607E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

void sub_1000607FC(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_10006083C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(_BYTE *)(a1 + 56)) {
    return _objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40),  "proxRepairManagerUserDidCancel:",  v4,  a4);
  }
  else {
    return _[*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) proxRepairManager:v4 didFinishWithError:*(void *)(a1 + 40)];
  }
}

uint64_t sub_100060868(uint64_t a1)
{
  id v2 = sub_10005E4A0();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Clean up leftover unused accounts completed.",  v5,  2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100060954(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 removeObserver:*(void *)(a1 + 32) name:UIApplicationWillResignActiveNotification object:0];

  [*(id *)(a1 + 32) _restorePersona];
  [*(id *)(*(void *)(a1 + 32) + 16) invalidate];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = 0LL;

  [*(id *)(*(void *)(a1 + 32) + 48) relinquish];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 48);
  *(void *)(v5 + 4_Block_object_dispose(va, 8) = 0LL;

  [*(id *)(*(void *)(a1 + 32) + 56) invalidate];
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(void **)(v7 + 56);
  *(void *)(v7 + 56) = 0LL;

  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(void **)(v9 + 32);
  *(void *)(v9 + 32) = 0LL;

  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void **)(v11 + 80);
  *(void *)(v11 + 80) = 0LL;
}

void *sub_100060A90(void *result)
{
  if (*(void *)(result[4] + 24LL) == 1LL)
  {
    uint64_t v1 = result;
    id v2 = sub_10005E4A0();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Stopping since TVSettings isn't active anymore and we didn't actually started much.",  v4,  2u);
    }

    return [(id)v1[4] stop];
  }

  return result;
}

void sub_100060C84(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings.userProfiles", "TVSettingsUserProxRepairManager");
  id v2 = (void *)qword_1001E17A0;
  qword_1001E17A0 = (uint64_t)v1;
}

void sub_100060CB4(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_100061090( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000610BC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v11 = WeakRetained;
    [WeakRetained setPingOutstanding:0];
    unsigned int v6 = +[TVSettingsUtilities pidForApplication:]( &OBJC_CLASS___TVSettingsUtilities,  "pidForApplication:",  @"com.apple.TVDiagnostics");
    if (a2)
    {
      int v7 = v6;
      id v8 = [v11 sessionState];
      if (v7 <= 0)
      {
        uint64_t v5 = v11;
        if (v8 != (id)1)
        {
          uint64_t v9 = 1LL;
          goto LABEL_10;
        }
      }

      else
      {
        uint64_t v5 = v11;
        if (v8 != (id)2)
        {
          uint64_t v9 = 2LL;
LABEL_10:
          [v5 setSessionState:v9];
          uint64_t v5 = v11;
        }
      }
    }

    else
    {
      id v10 = [v11 sessionState];
      uint64_t v5 = v11;
      if (v10)
      {
        uint64_t v9 = 0LL;
        goto LABEL_10;
      }
    }
  }
}

void sub_1000612D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1000612F0(uint64_t a1, char a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100061488(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsITMSFacade);
  id v2 = (void *)qword_1001E17B8;
  qword_1001E17B8 = (uint64_t)v1;
}

void sub_100061754(_Unwind_Exception *a1)
{
}

void sub_1000617C0(_Unwind_Exception *a1)
{
}

void sub_1000618E8(_Unwind_Exception *a1)
{
}

void sub_100061CD4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100061D30;
  block[3] = &unk_10018E440;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
}

id sub_100061D30(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateAutoDownloadApps];
}

id sub_100061FD0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateAutoDownloadAppsPerCloudSyncPreferences];
}

void sub_100062530( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100062554(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedCacheDeletePreferences]( &OBJC_CLASS___TVSPreferences,  "sharedCacheDeletePreferences"));
  objc_msgSend( WeakRetained,  "setDisplayQuotaExceededIfNeeded:",  objc_msgSend(v1, "shouldDisplayApplicationsQuotaExceededMessage"));

  [WeakRetained _updateQuotaMessage];
}

void sub_10006286C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

id sub_1000628AC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 name]);
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  v5,  0LL,  v4,  @"size"));

  [v6 setLocalizedValueFormatter:*(void *)(a1 + 32)];
  return v6;
}

void sub_100062928(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained usageFacade]);
  else {
    uint64_t v5 = 0LL;
  }

  [v3 setAccessoryTypes:v5];
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained quotaMessage]);
  [v3 setLocalizedDescription:v6];
}

void sub_100062E84(_Unwind_Exception *a1)
{
}

void sub_100062EA8(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_100062F28;
  v3[3] = &unk_10018EF78;
  objc_copyWeak(v4, (id *)(a1 + 32));
  v4[1] = a2;
  dispatch_async(&_dispatch_main_q, v3);
  objc_destroyWeak(v4);
}

void sub_100062F28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v14 = WeakRetained;
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4 == 2)
    {
      uint64_t v7 = TSKLocString(@"LocalStorageQuotaExceededMessage");
      id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedCacheDeletePreferences]( &OBJC_CLASS___TVSPreferences,  "sharedCacheDeletePreferences"));
      [v9 setShouldDisplayApplicationsQuotaExceededMessage:1];
    }

    else
    {
      if (v4 == 1)
      {
        id v10 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedCacheDeletePreferences]( &OBJC_CLASS___TVSPreferences,  "sharedCacheDeletePreferences"));
        [v10 setShouldDisplayApplicationsQuotaExceededMessage:0];

        [v14 setDisplayQuotaExceededIfNeeded:0];
      }

      else if (!v4 && _TVSLogInternalLogLevel >= 3)
      {
        uint64_t v5 = TVSSystemLog;
        if (pthread_main_np()) {
          unsigned int v6 = @"Main:";
        }
        else {
          unsigned int v6 = &stru_100195DD8;
        }
        pthread_t v12 = pthread_self();
        uint64_t v13 = v5;
        uint64_t v11 = v6;
        _TVSLogBase(v1, &_os_log_default, 65LL, 0LL, 3LL, v5);
      }

      id v8 = 0LL;
    }

    objc_msgSend(v14, "setQuotaMessage:", v8, v11, v12, v13);
    [v14 reloadSettingsIfNeeded];

    id WeakRetained = v14;
  }
}

void sub_1000631EC(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsUIScaleFacade);
  uint64_t v2 = (void *)qword_1001E17C8;
  qword_1001E17C8 = (uint64_t)v1;
}

void sub_1000635B8(id a1)
{
  id v1 = -[TVSettingsCloudMediaLibraryFacade _init](objc_alloc(&OBJC_CLASS___TVSettingsCloudMediaLibraryFacade), "_init");
  uint64_t v2 = (void *)qword_1001E17D8;
  qword_1001E17D8 = (uint64_t)v1;
}

void sub_100063A1C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

id sub_100063A38()
{
  if (qword_1001E17F0 != -1) {
    dispatch_once(&qword_1001E17F0, &stru_100191128);
  }
  return (id)qword_1001E17E8;
}

void sub_100063A78(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _updateSyncState];
  }

void sub_100063B80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _reinitializeState];
}

void sub_100063C80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateSyncState];
}

void sub_100063D80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateSyncState];
}

void sub_100063E80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateAddToLibraryBehavior];
}

void sub_100063F80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateAddToLibraryBehavior];
}

void sub_10006435C(_Unwind_Exception *a1)
{
}

void sub_100064378(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _initializeSyncState];
}

void sub_100064530(id a1, ICStoreRequestContext *a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  -[ICStoreRequestContext setIdentityStore:](v4, "setIdentityStore:", v2);

  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  -[ICStoreRequestContext setIdentity:](v4, "setIdentity:", v3);

  -[ICStoreRequestContext setAllowsExpiredBags:](v4, "setAllowsExpiredBags:", 1LL);
}

void sub_1000645B4(uint64_t a1, void *a2, void *a3)
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_100064674;
  v8[3] = &unk_1001910E0;
  id v9 = a2;
  id v10 = a3;
  uint64_t v5 = *(void **)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 32);
  id v12 = v5;
  id v6 = v10;
  id v7 = v9;
  dispatch_async(&_dispatch_main_q, v8);
}

void sub_100064674(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) subscriptionStatus]);
  id v3 = v2;
  if (*(void *)(a1 + 40)) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = v2 == 0LL;
  }
  if (v4)
  {
    id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) cachedSubscriptionStatus]);
  }

  else
  {
    id v5 = v2;
    [*(id *)(a1 + 48) setCachedSubscriptionStatus:v5];
  }

  if (*(void *)(a1 + 40))
  {
    id v6 = sub_100063A38();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000F8930((uint64_t *)(a1 + 40), v7);
    }
  }

  if (v5)
  {
    if (!v3)
    {
      id v8 = sub_100063A38();
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v21[0]) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Failed getting subscription status, falling back to previously cached status.",  (uint8_t *)v21,  2u);
      }
    }

    id v10 = [v5 hasCapability:128];
    objc_msgSend(*(id *)(a1 + 48), "setITunesMatchSubscribed:", objc_msgSend(v5, "isMatchEnabled"));
    [*(id *)(a1 + 48) setAppleMusicSubscribed:v10];
    uint64_t v11 = *(void **)(a1 + 48);
    else {
      uint64_t v12 = 2LL;
    }
    [v11 setCloudStatus:v12];
    objc_msgSend( *(id *)(a1 + 48),  "setSupportsEnhancedAudio:",  objc_msgSend(*(id *)(a1 + 48), "_isEnhancedAudioAvailable"));
    id v13 = sub_100063A38();
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v15 = [*(id *)(a1 + 48) isITunesMatchSubscribed];
      unsigned int v16 = [*(id *)(a1 + 48) isAppleMusicSubscribed];
      id v17 = objc_msgSend( (id)objc_opt_class(*(void *)(a1 + 48)),  "_debugNameForCloudStatus:",  objc_msgSend(*(id *)(a1 + 48), "cloudStatus"));
      BOOL v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
      v21[0] = 67109634;
      v21[1] = v15;
      __int16 v22 = 1024;
      unsigned int v23 = v16;
      __int16 v24 = 2112;
      id v25 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Got subscription status: iTunes Match %{BOOL}d, Apple Music %{BOOL}d, Cloud Status %@",  (uint8_t *)v21,  0x18u);
    }
  }

  else
  {
    id v19 = sub_100063A38();
    uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v21[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Subscription status is not available.",  (uint8_t *)v21,  2u);
    }

    [*(id *)(a1 + 48) setITunesMatchSubscribed:0];
    [*(id *)(a1 + 48) setAppleMusicSubscribed:0];
    [*(id *)(a1 + 48) setCloudStatus:0];
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
}

void sub_100064A38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    BOOL v4 = WeakRetained;
    id v3 = [WeakRetained syncState];
    uint64_t v2 = v4;
    if (!v3)
    {
      [v4 _updateSyncState];
      uint64_t v2 = v4;
    }
  }
}

void sub_100064F8C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "CloudMediaLibraryFacade");
  uint64_t v2 = (void *)qword_1001E17E8;
  qword_1001E17E8 = (uint64_t)v1;
}

void sub_100065020(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "TVSettingsSystemPairingsViewController");
  uint64_t v2 = (void *)qword_1001E17F8;
  qword_1001E17F8 = (uint64_t)v1;
}

TSKSettingItem *__cdecl sub_100065600(id a1, TSKListSettingGroup *a2, TVSettingsSystemPairingsPairing *a3)
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1000656C4;
  v8[3] = &unk_10018EC30;
  id v9 = a3;
  id v3 = v9;
  BOOL v4 = objc_retainBlock(v8);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsSystemPairingsPairing displayName](v3, "displayName"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v5,  0LL,  v3,  0LL,  v4));

  return (TSKSettingItem *)v6;
}

TVSettingsSystemPairingDetailViewController *sub_1000656C4(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___TVSettingsSystemPairingDetailViewController);
  -[TVSettingsSystemPairingDetailViewController setDevice:](v2, "setDevice:", *(void *)(a1 + 32));
  return v2;
}

void sub_100065D2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id location)
{
}

id sub_100065D7C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userInterfaceStyleFormatter]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 stringForObjectValue:v4]);

  uint64_t v7 = TSKLocString(@"UserInterfaceStyleDetailedDescription");
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  v8,  v4,  0LL,  WeakRetained,  0LL));

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_100065E9C;
  v13[3] = &unk_10018ED70;
  id v14 = *(id *)(a1 + 32);
  id v15 = v4;
  id v11 = v4;
  [v10 setUpdateBlock:v13];

  return v10;
}

void sub_100065E9C(uint64_t a1, void *a2)
{
  id v8 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [*(id *)(a1 + 32) systemAppearance]));
  [v8 setAction:"selectItem:"];
  else {
    uint64_t v4 = 0LL;
  }
  [v8 setAccessoryTypes:v4];
  if ([*(id *)(a1 + 40) isEqual:&off_1001AD008])
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLocationServicesFacade sharedInstance]( &OBJC_CLASS___TVSettingsLocationServicesFacade,  "sharedInstance"));
    unsigned int v6 = [v5 locationServicesEnabled];

    BOOL v7 = sub_100065F7C();
    if (!v6 || v7) {
      [v8 setAction:"_promptUserToEnablePermissions"];
    }
  }
}

BOOL sub_100065F7C()
{
  id v0 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLocationServicesFacade sharedInstance]( &OBJC_CLASS___TVSettingsLocationServicesFacade,  "sharedInstance"));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([v0 pineBoardItem]);

  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 info]);
  unsigned __int8 v3 = +[CLLocationManager entityAuthorizationForLocationDictionary:]( &OBJC_CLASS___CLLocationManager,  "entityAuthorizationForLocationDictionary:",  v2);

  uint64_t v4 = objc_claimAutoreleasedReturnValue( +[TVSettingsLocationServicesFacade sharedInstance]( &OBJC_CLASS___TVSettingsLocationServicesFacade,  "sharedInstance"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([(id)v4 timeZoneItem]);

  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 info]);
  LOBYTE(v4) = +[CLLocationManager entityAuthorizationForLocationDictionary:]( &OBJC_CLASS___CLLocationManager,  "entityAuthorizationForLocationDictionary:",  v6);

  BOOL v7 = (v4 & 4) == 0 || (v3 & 4) == 0LL;
  return v7;
}

id sub_100066058(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userInterfaceStyleFormatter]);
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 stringForObjectValue:v4]);

  uint64_t v7 = TSKLocString(@"UIScaleDescription");
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  v8,  v4,  0LL,  WeakRetained,  0LL));

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_100066178;
  v13[3] = &unk_10018ED70;
  id v14 = *(id *)(a1 + 32);
  id v15 = v4;
  id v11 = v4;
  [v10 setUpdateBlock:v13];

  return v10;
}

void sub_100066178(uint64_t a1, void *a2)
{
  unsigned __int8 v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v3 uiScale]));
  [v4 setAction:"selectUIScale:"];
  else {
    uint64_t v5 = 0LL;
  }
  [v4 setAccessoryTypes:v5];
}

void sub_100066558( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100066578(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBSRestrictionService sharedInstance](&OBJC_CLASS___PBSRestrictionService, "sharedInstance"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _OWORD v6[2] = sub_100066640;
  v6[3] = &unk_100191200;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v5 = [v4 validateRestrictionForSetting:4 allowInteraction:1 withCompletion:v6];

  objc_destroyWeak(&v7);
}

void sub_10006662C(_Unwind_Exception *a1)
{
}

void sub_100066640(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (!a2 && WeakRetained)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000666BC;
    block[3] = &unk_10018E440;
    void block[4] = WeakRetained;
    dispatch_async(&_dispatch_main_q, block);
  }
}

void sub_1000666BC(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLocationServicesFacade sharedInstance]( &OBJC_CLASS___TVSettingsLocationServicesFacade,  "sharedInstance"));
  [v2 setLocationServicesEnabled:1];

  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsDeviceFacade sharedInstance](&OBJC_CLASS___TVSettingsDeviceFacade, "sharedInstance"));
  [v3 setAutomaticTimeZoneSelectionEnabled:1];

  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLocationServicesFacade sharedInstance]( &OBJC_CLASS___TVSettingsLocationServicesFacade,  "sharedInstance"));
  id v6 = (id)objc_claimAutoreleasedReturnValue([v4 timeZoneItem]);

  [v6 setAccessType:3];
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsAppearanceFacade sharedInstance]( &OBJC_CLASS___TVSettingsAppearanceFacade,  "sharedInstance"));
  [v5 setSystemAppearance:2];

  [*(id *)(a1 + 32) reloadSettings];
}

void sub_100066A48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100066A68(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    if (a2)
    {
      +[TVLDisplayColorCalibrator calibrationPreferred:inPreview:]( &OBJC_CLASS___TVLDisplayColorCalibrator,  "calibrationPreferred:inPreview:",  1LL,  WeakRetained[3] != 0LL);
      [v5 _dismiss];
    }

    else
    {
      [WeakRetained _promptToRevert];
    }

    id v4 = v5;
  }
}

void sub_100067010( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, id *a12, id *a13)
{
}

void sub_10006708C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _startCalibrationFlow];
}

void sub_1000670B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showResults];
}

void sub_1000670E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v2 = *(void **)(a1 + 32);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 currentDisplayMode]);
    [v2 setColorCalibration:0 forDisplayMode:v3];

    +[TVLDisplayColorCalibrator calibrationPreferred:inPreview:]( &OBJC_CLASS___TVLDisplayColorCalibrator,  "calibrationPreferred:inPreview:",  0LL,  0LL);
    [WeakRetained _dismiss];
  }
}

void sub_100067160(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismiss];
}

void sub_10006718C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismiss];
}

id sub_1000671B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) loadVideoAsset];
}

void sub_10006738C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000673B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
  [v1 setAlpha:0.0];
}

id sub_100067514()
{
  if (qword_1001E1810 != -1) {
    dispatch_once(&qword_1001E1810, &stru_100191268);
  }
  return (id)qword_1001E1808;
}

void sub_1000676B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000676DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
  [v1 setAlpha:1.0];
}

void sub_100067800( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100067828(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
  [v1 setAlpha:1.0];
}

void sub_1000679A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000679C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained colorCalibrationService]);
    [v3 invalidate];

    [v2 setColorCalibrationService:0];
  }

  id v4 = sub_100067514();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Dismissed", v6, 2u);
  }
}

void sub_100067D18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_100067D58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_100067514();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Remove Calibration", v6, 2u);
    }

    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBSDisplayManager sharedInstance](&OBJC_CLASS___PBSDisplayManager, "sharedInstance"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 currentDisplayMode]);
    [v4 setColorCalibration:0 forDisplayMode:v5];

    +[TVLDisplayColorCalibrator calibrationPreferred:inPreview:]( &OBJC_CLASS___TVLDisplayColorCalibrator,  "calibrationPreferred:inPreview:",  0LL,  WeakRetained[3] != 0LL);
    [WeakRetained _dismiss];
  }
}

void sub_100067E3C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_100067514();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Use Calibration", v4, 2u);
    }

    +[TVLDisplayColorCalibrator calibrationPreferred:inPreview:]( &OBJC_CLASS___TVLDisplayColorCalibrator,  "calibrationPreferred:inPreview:",  1LL,  WeakRetained[3] != 0LL);
    [WeakRetained _dismiss];
  }
}

void sub_100067EE0(id a1, UIAlertAction *a2)
{
  id v2 = sub_100067514();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Dismiss Remove Calibration Alert", v4, 2u);
  }
}

void sub_1000681BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1000681FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = sub_100067514();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Retry Calibration", v4, 2u);
  }

  [WeakRetained _sendRetry];
}

void sub_100068278(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismiss];
}

void sub_1000683BC(_Unwind_Exception *a1)
{
}

void sub_1000683D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = sub_100067514();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Retry sent", v5, 2u);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained calibrationView]);
  [v4 setCalibrationState:2];
}

void sub_100068528( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100068548(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained) {
    goto LABEL_230;
  }
  id v7 = sub_100067514();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    if (a2 > 299)
    {
      if (a2 > 799)
      {
        if (a2 <= 999)
        {
          switch(a2)
          {
            case 900:
              id v9 = "SU-No-SetupScanAttempt";
              break;
            case 901:
              id v9 = "SU-No-SetupStatusUpdate";
              break;
            case 902:
              id v9 = "SU-No-SetupWipeWifi";
              break;
            case 903:
              id v9 = "SU-No-SetupCancelled";
              break;
            case 904:
              id v9 = "SU-No-SetupObliterate";
              break;
            case 905:
              id v9 = "SU-No-SetupCannotCancel";
              break;
            case 906:
              id v9 = "SysDrop AirDrop Event";
              break;
            case 907:
              id v9 = "SysDrop Sysdiagnose Event";
              break;
            case 908:
              id v9 = "SysDrop Cancel Event";
              break;
            case 909:
              id v9 = "File Transfer Progress Event";
              break;
            case 910:
              id v9 = "File Transfer Completed Event";
              break;
            case 911:
              id v9 = "iOSWiFiSetup";
              break;
            case 912:
              id v9 = "HKPrimaryResidentSSIDFetchStart";
              break;
            case 913:
              id v9 = "LoggingProfileTransfer";
              break;
            default:
              switch(a2)
              {
                case 800:
                  id v9 = "AuthAccountsStart";
                  break;
                case 803:
                  id v9 = "AuthAccountsiCloudProgress";
                  break;
                case 804:
                  id v9 = "AuthAccountsStoreProgress";
                  break;
                case 805:
                  id v9 = "AuthAccountsGameCenterProgress";
                  break;
                default:
                  goto LABEL_167;
              }

              break;
          }

          goto LABEL_174;
        }

        if (a2 <= 1099)
        {
          if (a2 == 1000)
          {
            id v9 = "SecureIntentStart";
            goto LABEL_174;
          }

          if (a2 == 1001)
          {
            id v9 = "SecureIntentFinish";
            goto LABEL_174;
          }

          goto LABEL_167;
        }

        if (a2 == 1100)
        {
          id v9 = "OneTimeCodeDetected";
          goto LABEL_174;
        }

        if (a2 == 2000)
        {
          id v9 = "DependentStart";
          goto LABEL_174;
        }

        if (a2 != 2001) {
          goto LABEL_167;
        }
        id v9 = "DependentEnd";
      }

      else if (a2 <= 519)
      {
        if (a2 <= 410)
        {
          if (a2 <= 399)
          {
            if (a2 == 300)
            {
              id v9 = "BackupProgress";
              goto LABEL_174;
            }

            if (a2 == 310)
            {
              id v9 = "SyncProgress";
              goto LABEL_174;
            }

            goto LABEL_167;
          }

          if (a2 == 400)
          {
            id v9 = "StopSetup";
            goto LABEL_174;
          }

          if (a2 == 401)
          {
            id v9 = "PINPair";
            goto LABEL_174;
          }

          if (a2 != 410) {
            goto LABEL_167;
          }
          id v9 = "MigrateStart";
        }

        else
        {
          if (a2 > 430)
          {
            switch(a2)
            {
              case 431:
                id v9 = "eSimExternal2FAStop";
                goto LABEL_174;
              case 500:
                id v9 = "SiriWelcome";
                goto LABEL_174;
              case 510:
                id v9 = "SiriDialogA";
                goto LABEL_174;
            }

            goto LABEL_167;
          }

          if (a2 == 411)
          {
            id v9 = "MigrateStop";
            goto LABEL_174;
          }

          if (a2 == 420)
          {
            id v9 = "FileTransferReady";
            goto LABEL_174;
          }

          if (a2 != 430) {
            goto LABEL_167;
          }
          id v9 = "eSimExternal2FAStart";
        }
      }

      else if (a2 > 559)
      {
        if (a2 > 599)
        {
          switch(a2)
          {
            case 600:
              id v9 = "SiriSkipDemo";
              goto LABEL_174;
            case 700:
              id v9 = "StopSetupLEDs";
              goto LABEL_174;
            case 710:
              id v9 = "AudioPasscodeEnded";
              goto LABEL_174;
          }

          goto LABEL_167;
        }

        if (a2 == 560)
        {
          id v9 = "SiriDialogCMusic";
          goto LABEL_174;
        }

        if (a2 == 570)
        {
          id v9 = "SiriDialogCNews";
          goto LABEL_174;
        }

        if (a2 != 580) {
          goto LABEL_167;
        }
        id v9 = "SiriDialogCWeather";
      }

      else
      {
        if (a2 > 549)
        {
          switch(a2)
          {
            case 550:
              id v9 = "SiriDialogBWeather";
              goto LABEL_174;
            case 555:
              id v9 = "SiriDialogBClock";
              goto LABEL_174;
            case 558:
              id v9 = "SiriDialogBMusic";
              goto LABEL_174;
          }

          goto LABEL_167;
        }

        if (a2 == 520)
        {
          id v9 = "SiriDialogBStart";
          goto LABEL_174;
        }

        if (a2 == 530)
        {
          id v9 = "SiriDialogBHome";
          goto LABEL_174;
        }

        if (a2 != 540) {
          goto LABEL_167;
        }
        id v9 = "SiriDialogBNews";
      }
    }

    else if (a2 > 129)
    {
      if (a2 > 249)
      {
        switch(a2)
        {
          case 260:
            id v9 = "TVLSStart";
            break;
          case 261:
          case 262:
          case 263:
          case 265:
          case 266:
          case 267:
          case 268:
          case 269:
          case 271:
          case 273:
          case 275:
            goto LABEL_167;
          case 264:
            id v9 = "TVLSFinish";
            break;
          case 270:
            id v9 = "TVLSEstimateStart";
            break;
          case 272:
            id v9 = "TVLSEstimateFinal";
            break;
          case 274:
            id v9 = "TVLSEstimateFailed";
            break;
          case 276:
            id v9 = "TVLSTryAgain";
            break;
          case 277:
            id v9 = "TVLSToneBegan";
            break;
          case 278:
            id v9 = "TVLCalStart";
            break;
          case 279:
            id v9 = "TVLCalStep";
            break;
          case 280:
            id v9 = "TVLCalFailed";
            break;
          case 281:
            id v9 = "TVLCalTryAgain";
            break;
          case 282:
            id v9 = "TVLCalFinal";
            break;
          default:
            if (a2 != 250) {
              goto LABEL_167;
            }
            id v9 = "ReportSuccess";
            break;
        }

        goto LABEL_174;
      }

      if (a2 > 219)
      {
        switch(a2)
        {
          case 230:
            id v9 = "HomeKitStart";
            goto LABEL_174;
          case 231:
          case 232:
          case 233:
          case 235:
          case 237:
          case 238:
          case 239:
            goto LABEL_167;
          case 234:
            id v9 = "HomeKitSetupStart";
            goto LABEL_174;
          case 236:
            id v9 = "CDPSetupStart";
            goto LABEL_174;
          case 240:
            id v9 = "BuddyStarting";
            goto LABEL_174;
          case 241:
            id v9 = "BuddyProgress";
            goto LABEL_174;
          case 242:
            id v9 = "BuddyFinished";
            goto LABEL_174;
          default:
            if (a2 == 220)
            {
              id v9 = "iCloudStart";
            }

            else
            {
              if (a2 != 224) {
                goto LABEL_167;
              }
              id v9 = "AppleIDSetupStart";
            }

            break;
        }

        goto LABEL_174;
      }

      if (a2 <= 149)
      {
        if (a2 == 130)
        {
          id v9 = "WiFiPoweredOff";
          goto LABEL_174;
        }

        if (a2 == 140)
        {
          id v9 = "RecognizeVoice";
          goto LABEL_174;
        }

        goto LABEL_167;
      }

      if (a2 == 150)
      {
        id v9 = "SiriForEveryone";
        goto LABEL_174;
      }

      if (a2 == 200)
      {
        id v9 = "WiFiStart";
        goto LABEL_174;
      }

      if (a2 != 210) {
        goto LABEL_167;
      }
      id v9 = "ActivationStart";
    }

    else if (a2 > 79)
    {
      if (a2 <= 119)
      {
        switch(a2)
        {
          case 'P':
            id v9 = "BasicConfigStart";
            break;
          case 'Z':
            id v9 = "BasicConfigFinish";
            break;
          case '\\':
            id v9 = "StepStart";
            break;
          case '^':
            id v9 = "StepFinish";
            break;
          case '_':
            id v9 = "PreFinish";
            break;
            id v9 = "SetupFinished";
            break;
          case 'a':
            id v9 = "SetupResumed";
            break;
          case 'b':
            id v9 = "SetupSuspend";
            break;
          case 'c':
            id v9 = "SetupPeerSWUpdate";
            break;
          case 'd':
            id v9 = "Finished";
            break;
          default:
            goto LABEL_167;
        }

        goto LABEL_174;
      }

      if (a2 == 120)
      {
        id v9 = "CheckingiCloud";
        goto LABEL_174;
      }

      if (a2 == 122)
      {
        id v9 = "CheckingAppleMusic";
        goto LABEL_174;
      }

      if (a2 != 124) {
        goto LABEL_167;
      }
      id v9 = "CheckingAccount";
    }

    else
    {
      if (a2 <= 49)
      {
        if (a2 > 29)
        {
          switch(a2)
          {
            case 30:
              id v9 = "Error";
              break;
            case 31:
              id v9 = "SessionStarted";
              break;
            case 32:
              id v9 = "SessionEnded";
              break;
            case 33:
              id v9 = "SessionSecured";
              break;
            case 35:
              id v9 = "ConnectStart";
              break;
            case 40:
              id v9 = "PreAuthStart";
              break;
            default:
              goto LABEL_167;
          }

          goto LABEL_174;
        }

        switch(a2)
        {
          case 0:
            id v9 = "Invalid";
            goto LABEL_174;
          case 10:
            id v9 = "Start";
            goto LABEL_174;
          case 20:
            id v9 = "Final";
            goto LABEL_174;
        }

id sub_1000693C0(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = v3;
  if (a2)
  {
    if ((objc_opt_isKindOfClass(v3, a2) & 1) != 0) {
      id v5 = v4;
    }
    else {
      id v5 = 0LL;
    }
  }

  else
  {
    id v5 = 0LL;
  }

  id v6 = v5;

  return v6;
}

void sub_100069518(id a1)
{
  os_log_t v1 = os_log_create("com.apple.tvsettings", "ColorCalibration");
  id v2 = (void *)qword_1001E1808;
  qword_1001E1808 = (uint64_t)v1;
}

void sub_1000698A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_1000698E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _styleItemForStyle:v4]);

  return v6;
}

void sub_100069A78(uint64_t a1, void *a2)
{
  id v5 = a2;
  objc_msgSend(v5, "setHidden:", objc_msgSend(*(id *)(a1 + 32), "isActive") ^ 1);
  objc_msgSend(v5, "setEnabled:", objc_msgSend(*(id *)(a1 + 32), "isDisabled") ^ 1);
  if (*(_BYTE *)(a1 + 40))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) selectedValue]);
    [v5 setLocalizedValue:v3];

    uint64_t v4 = 1LL;
  }

  else
  {
    [v5 setLocalizedValue:0];
    else {
      uint64_t v4 = 0LL;
    }
  }

  [v5 setAccessoryTypes:v4];
}

TVSettingsAmbientPhotoTransitionEffectsViewController *sub_100069CE8(void *a1)
{
  return  -[TVSettingsAmbientPhotoTransitionEffectsViewController initWithTransitionStyle:ambientFacade:previewViewController:]( objc_alloc(&OBJC_CLASS___TVSettingsAmbientPhotoTransitionEffectsViewController),  "initWithTransitionStyle:ambientFacade:previewViewController:",  a1[4],  a1[5],  a1[6]);
}

void sub_10006A0A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10006A0C8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TZUpdate sharedInstance](&OBJC_CLASS___TZUpdate, "sharedInstance"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_10006A174;
  v3[3] = &unk_10018F498;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  [v2 isUpdateWaitingWithCompletion:v3];
  objc_destroyWeak(&v4);
}

void sub_10006A160(_Unwind_Exception *a1)
{
}

void sub_10006A174(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setIsTimeZoneUpdateAvailable:a2];
}

void sub_10006C074( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *location, id *a13, id *a14, id *a15, uint64_t a16, id *a17, id *a18)
{
}

void sub_10006C1F0(uint64_t a1, void *a2, void *a3)
{
  id v21 = a2;
  id v5 = a3;
  [v5 doubleValue];
  double v7 = v6;
  unsigned int v8 = [*(id *)(a1 + 32) isSleepDisabledByProfile];
  unsigned int v9 = v8;
  if (v7 <= 0.0) {
    int v10 = 1;
  }
  else {
    int v10 = v8;
  }
  if (v10) {
    uint64_t v11 = @"SleepTimeNeverTitle";
  }
  else {
    uint64_t v11 = @"SleepTimeTitle";
  }
  uint64_t v12 = TSKLocString(v11);
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  [v21 setLocalizedTitle:v13];

  [v21 setEnabled:v9 ^ 1];
  uint64_t v14 = TSKLocString(@"SleepTimeDescription");
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  id v16 = [v15 mutableCopy];

  if ((v10 & 1) != 0 || v7 >= 1200.0)
  {
    if (v10) {
      uint64_t v17 = @"SleepNeverEUWarning";
    }
    else {
      uint64_t v17 = @"SleepDelayEUWarning";
    }
    [v16 appendString:@"\n"];
    uint64_t v18 = TSKLocString(v17);
    id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    [v16 appendString:v19];
  }

  [v21 setLocalizedDescription:v16];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _formatSleepTimeoutItem:v21 withValue:v5];
}

void sub_10006C34C(id a1, TSKSettingItem *a2, id a3)
{
  double v6 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale preferredLanguages](&OBJC_CLASS___NSLocale, "preferredLanguages"));
  if ((unint64_t)[v3 count] >= 2)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v3 count]));
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumberFormatter localizedStringFromNumber:numberStyle:]( &OBJC_CLASS___NSNumberFormatter,  "localizedStringFromNumber:numberStyle:",  v4,  1LL));
    -[TSKSettingItem setLocalizedValue:](v6, "setLocalizedValue:", v5);
  }
}

void sub_10006C3F8(id a1, TSKSettingItem *a2, id a3)
{
  double v7 = a2;
  uint64_t v3 = UIKeyboardRequiresLinearStyleForActiveInputModes(0LL) ^ 1;
  -[TSKSettingItem setEnabled:](v7, "setEnabled:", v3);
  if ((v3 & 1) == 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    uint64_t v5 = TSKLocStringFromBundleCachingKey(@"KeyboardTypeAuto", v4, 1LL, 0LL, @"Localizable-B519");
    double v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    -[TSKSettingItem setLocalizedValue:](v7, "setLocalizedValue:", v6);
  }
}

void sub_10006C490(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend(v4, "setEnabled:", objc_msgSend(v3, "isDictationSupportedForPreferredLanguages"));
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _dictationDescription]);
  [v4 setLocalizedDescription:v5];
}

TVSettingsNumbersViewController *sub_10006C50C(uint64_t a1)
{
  return  -[TVSettingsNumbersViewController initWithNumberingSystemsFacade:]( objc_alloc(&OBJC_CLASS___TVSettingsNumbersViewController),  "initWithNumberingSystemsFacade:",  *(void *)(a1 + 32));
}

void sub_10006C53C(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a3 shortDisplayName]);
  [v8 setLocalizedValue:v5];

  double v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) availableNumberingSystems]);
  BOOL v7 = (unint64_t)[v6 count] < 2;

  [v8 setHidden:v7];
}

void sub_10006C5BC(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v3 = a2;
  -[TSKSettingItem setHidden:]( v3,  "setHidden:",  +[TVSettingsBluetoothFacade isBTKeyboardConnected]( &OBJC_CLASS___TVSettingsBluetoothFacade,  "isBTKeyboardConnected") ^ 1);
}

void sub_10006C604(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "isSiriEnabled"));
}

void sub_10006C648(id *a1, void *a2)
{
  id v3 = a1 + 6;
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained bluetoothFacade]);
  uint64_t v6 = [v5 hasPairedDoAPDevice] ^ 1;

  if (_os_feature_enabled_impl("CoreSpeech", "support_js"))
  {
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained bluetoothFacade]);
    if ([v7 hasPairedJSDevice])
    {
      id v8 = a1[4];
      unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([v8 language]);
      LODWORD(v_Block_object_dispose(va, 8) = [v8 isCompactVoiceTriggerAvailableForLanguageCode:v9];

      uint64_t v6 = v8 | v6;
    }
  }

  [v4 setHidden:v6];
  objc_msgSend(v4, "setEnabled:", objc_msgSend(a1[4], "isSiriEnabled"));
  int v10 = (void *)objc_claimAutoreleasedReturnValue([a1[5] localizedTriggerString:@"SiriHSAccessoriesDescription"]);
  [v4 setLocalizedDescription:v10];

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([a1[5] localizedTriggerString:@"SiriHSAccessoriesTitle"]);
  [v4 setLocalizedTitle:v11];
}

id sub_10006C784()
{
  if (qword_1001E1830 != -1) {
    dispatch_once(&qword_1001E1830, &stru_100191558);
  }
  return (id)qword_1001E1828;
}

TVSettingsSiriVoiceTriggerViewController *sub_10006C7C4(uint64_t a1)
{
  return  -[TVSettingsSiriVoiceTriggerViewController initWithVoiceTriggerFacade:]( objc_alloc(&OBJC_CLASS___TVSettingsSiriVoiceTriggerViewController),  "initWithVoiceTriggerFacade:",  *(void *)(a1 + 32));
}

void sub_10006C7F4(id *a1, void *a2)
{
  id v3 = a1 + 6;
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained bluetoothFacade]);
  if ([v5 hasPairedJSDevice])
  {
    id v6 = a1[4];
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v6 language]);
    uint64_t v8 = [v6 isCompactVoiceTriggerAvailableForLanguageCode:v7] ^ 1;
  }

  else
  {
    uint64_t v8 = 1LL;
  }

  [v4 setHidden:v8];
  objc_msgSend(v4, "setEnabled:", objc_msgSend(a1[4], "isSiriEnabled"));
  unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( a1[5],  "localizedDescriptionForVoiceTriggerPhraseType:",  objc_msgSend(a1[5], "voiceTriggerPhraseType")));
  [v4 setLocalizedDescription:v9];
}

id sub_10006C8E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _siriDeleteHistoryViewController]);

  return v2;
}

void sub_10006C918(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v7 = [v5 unsignedIntegerValue];

  [WeakRetained _updateSiriDeleteHistoryItem:v6 optInStatus:v7];
}

void sub_10006C98C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "isSiriEnabled"));
  id v6 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  uint64_t v4 = TSKLocStringFromBundleCachingKey( @"SiriAlwaysShowSpeechDescription",  v6,  1LL,  0LL,  @"Localizable-J255");
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  [v3 setLocalizedDescription:v5];
}

void sub_10006CA20(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "isSiriEnabled"));
  uint64_t v4 = TSKLocString(@"SiriOSAItemDescription");
  id v5 = (id)objc_claimAutoreleasedReturnValue(v4);
  [v3 setLocalizedDescription:v5];
}

void sub_10006CA88(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "isSiriEnabled"));
  [v3 setLocalizedValue:0];
  uint64_t v4 = TSKLocString(@"SiriTCCItemDescription");
  id v5 = (id)objc_claimAutoreleasedReturnValue(v4);
  [v3 setLocalizedDescription:v5];
}

void sub_10006CAFC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSRestrictionsController sharedInstance]( &OBJC_CLASS___TVCSRestrictionsController,  "sharedInstance"));
  objc_msgSend(v6, "setEnabled:", objc_msgSend(v7, "isAutomaticDateAndTimeLockedDown") ^ 1);

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateAutomaticTimeZoneItem:v6 value:v5];
}

void sub_10006CB8C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateTimeZoneItem:v6 value:v5];
}

id sub_10006CBF0(uint64_t a1, void *a2)
{
  if ([a2 BOOLValue])
  {
    uint64_t v3 = TSKLocString(@"TimeZone24HrValue");
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _timeZoneNumberFormatter]);
    id v6 = v5;
    id v7 = &off_1001AD080;
  }

  else
  {
    uint64_t v8 = TSKLocString(@"TimeZone12HrValue");
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v8);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _timeZoneNumberFormatter]);
    id v6 = v5;
    id v7 = &off_1001AD098;
  }

  unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([v5 stringFromNumber:v7]);
  int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v4, v9));

  return v10;
}

void sub_10006CCC0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 activeConfiguration]);
  [v6 setHidden:v7 == 0];

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 displayName]);
  [v6 setLocalizedTitle:v8];

  id v12 = (id)objc_claimAutoreleasedReturnValue( +[TVSettingsVPNFacade connectionStatusFormatter]( &OBJC_CLASS___TVSettingsVPNFacade,  "connectionStatusFormatter"));
  id v9 = [v5 connectionStatus];

  int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v9));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v12 stringForObjectValue:v10]);
  [v6 setLocalizedValue:v11];
}

void sub_10006CDB4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v5 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 configurations]);
  BOOL v4 = [v3 count] == 0;

  [v5 setHidden:v4];
}

void sub_10006CE10(id a1, TSKSettingItem *a2, id a3)
{
  int v10 = a2;
  id v4 = a3;
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  if ((objc_opt_isKindOfClass(v4, v5) & 1) != 0)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"localizedTitle"]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"localizedValue"]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"hidden"]);
    uint64_t v9 = (uint64_t)[v8 BOOLValue];

    -[TSKSettingItem setLocalizedTitle:](v10, "setLocalizedTitle:", v6);
    -[TSKSettingItem setLocalizedValue:](v10, "setLocalizedValue:", v7);
  }

  else
  {
    uint64_t v9 = 1LL;
  }

  -[TSKSettingItem setHidden:](v10, "setHidden:", v9);
  -[TSKSettingItem setDeepLinkKey:](v10, "setDeepLinkKey:", @"PROFILES_LINK");
}

void sub_10006CF10(id a1, TSKSettingItem *a2, id a3)
{
  int v10 = a2;
  id v4 = a3;
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  if ((objc_opt_isKindOfClass(v4, v5) & 1) != 0)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"localizedTitle"]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"localizedValue"]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"hidden"]);
    uint64_t v9 = (uint64_t)[v8 BOOLValue];

    -[TSKSettingItem setLocalizedTitle:](v10, "setLocalizedTitle:", v6);
    -[TSKSettingItem setLocalizedValue:](v10, "setLocalizedValue:", v7);
  }

  else
  {
    uint64_t v9 = 1LL;
  }

  -[TSKSettingItem setHidden:](v10, "setHidden:", v9);
  -[TSKSettingItem setDeepLinkKey:](v10, "setDeepLinkKey:", @"PROFILES_LINK");
}

id sub_10006D28C(id result, int a2)
{
  if (a2)
  {
    uint64_t v2 = *((void *)result + 4);
    uint64_t v3 = *((void *)result + 5);
    uint64_t v4 = *((void *)result + 6);
    v5.receiver = (id)*((void *)result + 7);
    v5.super_class = (Class)&OBJC_CLASS___TVSettingsGeneralViewController;
    return objc_msgSendSuper2(&v5, "editingController:didProvideValue:forSettingItem:", v2, v3, v4);
  }

  return result;
}

void sub_10006D90C(id a1, UIAlertAction *a2)
{
  id v2 = sub_10006C784();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)objc_super v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "User want to enable location services. Enabling automatic time zone selection",  v5,  2u);
  }

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsDeviceFacade sharedInstance](&OBJC_CLASS___TVSettingsDeviceFacade, "sharedInstance"));
  [v4 setAutomaticTimeZoneSelectionEnabled:1];
}

void sub_10006D990(id a1, UIAlertAction *a2)
{
  id v2 = sub_10006C784();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "User does not want to enable location services. Will not enable automatic time zone selection",  v4,  2u);
  }
}

id sub_10006DBE8(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 localizedNameForSiriLanguage:v3 inDisplayLanguage:0]);
  objc_super v5 = v4;
  if (!v4) {
    uint64_t v4 = v3;
  }
  id v6 = v4;

  return v6;
}

NSString *__cdecl sub_10006DC70(id a1, id a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:NSLocaleCountryCode]);

  objc_super v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSLocale componentsFromLocaleIdentifier:]( &OBJC_CLASS___NSLocale,  "componentsFromLocaleIdentifier:",  v2));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:NSLocaleCountryCode]);

  id v7 = v2;
  uint64_t v8 = v7;
  if ([v4 isEqualToString:v6])
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale baseLanguageFromLanguage:](&OBJC_CLASS___NSLocale, "baseLanguageFromLanguage:", v7));
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[TVSInternationalization displayNameForLanguage:]( &OBJC_CLASS___TVSInternationalization,  "displayNameForLanguage:",  v8));

  return (NSString *)v9;
}

NSString *__cdecl sub_10006DD8C(id a1, id a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 displayNameForKey:NSLocaleCountryCode value:v2]);

  return (NSString *)v4;
}

void sub_10006DE6C(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___NSNumberFormatter);
  id v2 = (void *)qword_1001E1818;
  qword_1001E1818 = (uint64_t)v1;
}

void sub_10006E008(_Unwind_Exception *a1)
{
}

void sub_10006E02C(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    v7[3] = v2;
    void v7[4] = v3;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_10006E0C4;
    v5[3] = &unk_10018E568;
    objc_copyWeak(v7, (id *)(a1 + 40));
    id v6 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, v5);

    objc_destroyWeak(v7);
  }

void sub_10006E0C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v2 pushViewController:*(void *)(a1 + 32) animated:1];
}

void sub_10006E5B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_10006E5F0(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSSiriSettings sharedInstance](&OBJC_CLASS___TVCSSiriSettings, "sharedInstance"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _OWORD v6[2] = sub_10006E6D0;
  v6[3] = &unk_100190690;
  a1 += 4;
  objc_copyWeak(&v7, a1);
  [v4 deleteSiriHistoryWithCompletion:v6];

  id WeakRetained = objc_loadWeakRetained(a1);
  [WeakRetained setDeleteSiriHistoryState:1];
  [WeakRetained reloadSettingsIfNeeded];

  objc_destroyWeak(&v7);
}

void sub_10006E6B8(_Unwind_Exception *a1)
{
}

void sub_10006E6D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _OWORD v6[2] = sub_10006E760;
  v6[3] = &unk_10018E468;
  id v7 = v3;
  id v8 = WeakRetained;
  id v5 = v3;
  dispatch_async(&_dispatch_main_q, v6);
}

id sub_10006E760(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  [*(id *)(a1 + 40) setDeleteSiriHistoryState:2 * (v2 == 0)];
  id result = [*(id *)(a1 + 40) reloadSettingsIfNeeded];
  if (v2) {
    return _[*(id *)(a1 + 40) _showDeleteSiriHistoryFailedDialog];
  }
  return result;
}

void sub_10006E7AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setDeleteSiriHistoryState:0];
  [WeakRetained reloadSettingsIfNeeded];
}

void sub_10006EDBC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, id location)
{
}

uint64_t sub_10006EDE0(uint64_t result, int a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    id v3 = sub_10006C784();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Timed out checking RMV status, proceeding with language change as normal",  v5,  2u);
    }

    return (*(uint64_t (**)(void))(*(void *)(v2 + 32) + 16LL))();
  }

  return result;
}

void sub_10006EE5C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  if (a2 == 1 && [*(id *)(a1 + 32) signal])
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10006F0A4;
    block[3] = &unk_10018E440;
    id v20 = *(id *)(a1 + 40);
    dispatch_async(&_dispatch_main_q, block);
    id v7 = sub_10006C784();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "RMV is enabled, fetching supported language codes",  buf,  2u);
    }

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained siriSettingsConnection]);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_10006F0AC;
    v15[3] = &unk_1001914E8;
    id v16 = *(id *)(a1 + 48);
    id v10 = *(id *)(a1 + 88);
    uint64_t v17 = *(void *)(a1 + 56);
    id v18 = v10;
    [v9 fetchSupportedMultiUserLanguageCodes:v15];
  }

  id v11 = sub_10006C784();
  id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) identifier]);
    uint64_t v14 = *(void *)(a1 + 72);
    *(_DWORD *)buf = 134219010;
    uint64_t v22 = a2;
    __int16 v23 = 2114;
    uint64_t v24 = v13;
    __int16 v25 = 2160;
    uint64_t v26 = 1752392040LL;
    __int16 v27 = 2112;
    uint64_t v28 = v14;
    __int16 v29 = 2114;
    id v30 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "RMV state for user. {state=%ld, userIdentifier=%{public}@, iCloudAltDSID=%{mask.hash}@, error=%{public}@}",  buf,  0x34u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 80));
}

id sub_10006F0A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_10006F0AC(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 containsObject:*(void *)(a1 + 32)];
  id v4 = sub_10006C784();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    unsigned int v26 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "User is attempting to change language. {supportsSiriMultiuser=%{BOOL}d}",  buf,  8u);
  }

  if (v3) {
    id v6 = @"SiriLanguageChangeRMVWarningSupportedLanguageDescription";
  }
  else {
    id v6 = @"SiriLanguageChangeRMVWarningUnsupportedLanguageDescription";
  }
  uint64_t v7 = TSKLocRMVString(v6);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v9 = TSKLocString(@"SiriLanguageChangeWarningTitle");
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  v10,  v8,  1LL));

  uint64_t v12 = TSKLocRMVString(@"SiriLanguageChangeLanguageButton");
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472LL;
  v23[2] = sub_10006F324;
  v23[3] = &unk_10018FA48;
  id v24 = *(id *)(a1 + 48);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v13,  0LL,  v23));

  uint64_t v15 = TSKLocRMVString(@"SiriLanguageCancelButton");
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  _DWORD v21[2] = sub_10006F39C;
  v21[3] = &unk_10018FA48;
  id v22 = *(id *)(a1 + 48);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v16,  1LL,  v21));

  [v11 addAction:v17];
  [v11 addAction:v14];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_10006F414;
  v19[3] = &unk_10018E468;
  v19[4] = *(void *)(a1 + 40);
  id v20 = v11;
  id v18 = v11;
  dispatch_async(&_dispatch_main_q, v19);
}

uint64_t sub_10006F324(uint64_t a1)
{
  id v2 = sub_10006C784();
  unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "User elected to change Siri language in RMV prompt",  v5,  2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10006F39C(uint64_t a1)
{
  id v2 = sub_10006C784();
  unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "User elected to cancel Siri language change in RMV prompt",  v5,  2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10006F414(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  [v2 dismissViewControllerAnimated:1 completion:0];

  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  [v3 presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

uint64_t sub_10006F47C(uint64_t a1)
{
  uint64_t result = (uint64_t)[*(id *)(a1 + 40) hasBeenSignalled];
  if ((result & 1) == 0)
  {
    id v3 = sub_10006C784();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "RMV is not enabled, proceeding with language change as normal",  v5,  2u);
    }

    return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }

  return result;
}

void sub_10006F69C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "GeneralViewController");
  id v2 = (void *)qword_1001E1828;
  qword_1001E1828 = (uint64_t)v1;
}

void sub_10006FB94(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v8 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 uniqueIdentifier]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v8 representedObject]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 uniqueIdentifier]);
  unsigned int v6 = [v3 isEqual:v5];

  if (v6) {
    uint64_t v7 = 2LL;
  }
  else {
    uint64_t v7 = 0LL;
  }
  [v8 setAccessoryTypes:v7];
}

void sub_10006FE80(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) navigationController]);
  id v2 = [v3 popViewControllerAnimated:1];
}

uint64_t start(int a1, char **a2)
{
  id v4 = objc_autoreleasePoolPush();
  id v5 = (objc_class *)objc_opt_class(&OBJC_CLASS___TVSettingsApplication);
  unsigned int v6 = NSStringFromClass(v5);
  uint64_t v7 = (NSString *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = (objc_class *)objc_opt_class(&OBJC_CLASS___TVSettingsAppDelegate);
  uint64_t v9 = NSStringFromClass(v8);
  id v10 = (NSString *)objc_claimAutoreleasedReturnValue(v9);
  uint64_t v11 = UIApplicationMain(a1, a2, v7, v10);

  objc_autoreleasePoolPop(v4);
  return v11;
}

void sub_1000701D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000701F8(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue(+[PBSAppleConnectSettings sharedInstance](&OBJC_CLASS___PBSAppleConnectSettings, "sharedInstance"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v6 accountID]);
  if ([v4 length]) {
    id v5 = v4;
  }
  else {
    id v5 = 0LL;
  }
  -[TSKSettingItem setLocalizedValue:](v3, "setLocalizedValue:", v5);
}

void sub_100070264(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (([WeakRetained _isSecureWiFiProfileLoaded] & 1) != 0
    || ![*(id *)(a1 + 32) isEnabled])
  {
    [v6 setEnabled:0];
  }

  else
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountID]);
    if ([v4 length])
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) password]);
      objc_msgSend(v6, "setEnabled:", objc_msgSend(v5, "length") != 0);
    }

    else
    {
      [v6 setEnabled:0];
    }
  }
}

id sub_1000706D8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_secureWiFiProfileLoaded:error:");
}

id sub_100070B2C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateStatus];
}

void sub_100070EEC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

UIViewController *__cdecl sub_100070F28(id a1, TSKSettingItem *a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[TVSEthernetInterface RJ45EthernetInterface]( &OBJC_CLASS___TVSEthernetInterface,  "RJ45EthernetInterface"));

  if (v2)
  {
    uint64_t v3 = TSKWiFiLocString(@"TroubleshootingDescriptionText_WIFI");
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  }

  else
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    uint64_t v6 = TSKLocStringFromBundleCachingKey( @"TroubleshootingDescriptionTextWiFiOnlyDevice_WIFI",  v5,  1LL,  1LL,  @"Localizable-J255");
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v6);
  }

  id v7 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  uint64_t v8 = TSKLocString(@"TroubleshootingHeaderTitle");
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  id v10 = [v7 initWithTitle:v9 text:v4];

  return (UIViewController *)v10;
}

UIViewController *__cdecl sub_100071000(id a1, TSKSettingItem *a2)
{
  return (UIViewController *)objc_alloc_init(&OBJC_CLASS___TVSettingsWhatsNewViewController);
}

id sub_10007101C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _resetViewController]);

  return v2;
}

id sub_100071220(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _showConfirmReset];
}

id sub_100071228(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _showConfirmRestore];
}

id sub_100071398(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleResetAllSettings];
}

void sub_100071508(uint64_t a1)
{
  uint64_t v3 = -[TVSettingsOSRestoreViewController initWithNibName:bundle:]( objc_alloc(&OBJC_CLASS___TVSettingsOSRestoreViewController),  "initWithNibName:bundle:",  0LL,  0LL);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  [v2 pushViewController:v3 animated:1];
}

void sub_100071768(uint64_t a1, void *a2)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _OWORD v6[2] = sub_1000717F8;
  v6[3] = &unk_10018EA28;
  id v7 = a2;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v8 = v3;
  uint64_t v9 = v4;
  id v5 = v7;
  TVSPerformBlockOnMainThread(v6);
}

void sub_1000717F8(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    [*(id *)(a1 + 40) dismissViewControllerAnimated:0 completion:0];
    uint64_t v2 = TSKLocString(@"ResetFailedText");
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    id v8 = (id)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  0LL,  v3,  1LL));

    uint64_t v4 = TSKLocString(@"SettingsOK");
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v5,  1LL,  0LL));

    [v8 addAction:v6];
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) navigationController]);
    [v7 presentViewController:v8 animated:1 completion:0];
  }

void sub_100072044(_Unwind_Exception *a1)
{
}

void sub_10007209C(uint64_t a1, void *a2)
{
  id v5 = a2;
  if (+[TVSDevice supportsQMSAndVRR](&OBJC_CLASS___TVSDevice, "supportsQMSAndVRR")
    && [*(id *)(a1 + 32) shouldModeSwitchForFrameRate])
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSDisplayManager sharedInstance](&OBJC_CLASS___PBSDisplayManager, "sharedInstance"));
    uint64_t v4 = [v3 displaySupportsVRR] ^ 1;
  }

  else
  {
    uint64_t v4 = 1LL;
  }

  [v5 setHidden:v4];
}

void sub_10007211C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setLocalizedValue:0];
  unsigned int v4 = [*(id *)(a1 + 32) displaySupportsQMS];
  unsigned int v5 = [*(id *)(a1 + 40) shouldModeSwitchForFrameRate];
  unsigned int v6 = [*(id *)(a1 + 40) shouldUseQMSForFrameRateSwitching];
  id v10 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) bestNearbyModeForQMS]);
  unsigned int v7 = v6 ^ 1;
  if (!v10) {
    unsigned int v7 = 1;
  }
  if (v4) {
    BOOL v8 = v5 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8) {
    uint64_t v9 = 1LL;
  }
  else {
    uint64_t v9 = v7;
  }
  [v3 setHidden:v9];
}

id sub_1000721C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue( +[PBSDisplayManager marketNameDisplayResolutionFormatterWithRefreshRate:]( &OBJC_CLASS___PBSDisplayManager,  "marketNameDisplayResolutionFormatterWithRefreshRate:",  0LL));
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 stringForObjectValue:v4]);

  [v4 refreshRate];
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
  if (!PBSDisplayRefreshRateEqualToRefreshRate([v4 refreshRate]))
  {
    if (PBSDisplayRefreshRateEqualToRefreshRate([v4 refreshRate]))
    {
      BOOL v8 = @"AVNativeModeSwitchingUnverifiedModesDescriptionNTSC60";
      goto LABEL_8;
    }

    if (PBSDisplayRefreshRateEqualToRefreshRate([v4 refreshRate]))
    {
      BOOL v8 = @"AVNativeModeSwitchingUnverifiedModesDescriptionPAL50";
      goto LABEL_8;
    }

    if (PBSDisplayRefreshRateEqualToRefreshRate([v4 refreshRate]))
    {
      BOOL v8 = @"AVNativeModeSwitchingUnverifiedModesDescriptionNTSC30Exact";
      uint64_t v9 = &off_1001AD170;
      uint64_t v11 = &off_1001AD158;
      id v10 = v7;
      goto LABEL_10;
    }

    if (PBSDisplayRefreshRateEqualToRefreshRate([v4 refreshRate]))
    {
      BOOL v8 = @"AVNativeModeSwitchingUnverifiedModesDescriptionNTSC30";
      uint64_t v11 = &off_1001AF6D0;
    }

    else
    {
      if (!PBSDisplayRefreshRateEqualToRefreshRate([v4 refreshRate]))
      {
        if (PBSDisplayRefreshRateEqualToRefreshRate([v4 refreshRate]))
        {
          BOOL v8 = @"AVNativeModeSwitchingUnverifiedModesDescriptionFilm24Exact";
          uint64_t v9 = &off_1001AD1A0;
          goto LABEL_3;
        }

        if (!PBSDisplayRefreshRateEqualToRefreshRate([v4 refreshRate]))
        {
          uint64_t v18 = TSKLocString(@"AVNativeModeSwitchingUnverifiedModesDescription");
          uint64_t v12 = objc_claimAutoreleasedReturnValue(v18);
          goto LABEL_11;
        }

        BOOL v8 = @"AVNativeModeSwitchingUnverifiedModesDescriptionFilm24";
LABEL_8:
        id v10 = v7;
        uint64_t v9 = 0LL;
        goto LABEL_9;
      }

      BOOL v8 = @"AVNativeModeSwitchingUnverifiedModesDescriptionPAL25";
      uint64_t v11 = &off_1001AD188;
    }

    id v10 = v7;
    uint64_t v9 = 0LL;
    goto LABEL_10;
  }

  BOOL v8 = @"AVNativeModeSwitchingUnverifiedModesDescriptionNTSC60Exact";
  uint64_t v9 = &off_1001AD158;
LABEL_3:
  id v10 = v7;
LABEL_9:
  uint64_t v11 = 0LL;
LABEL_10:
  uint64_t v12 = objc_claimAutoreleasedReturnValue( +[PBSDisplayManager localizedStringWithKey:refreshRate:frameRate:referenceRefreshRate:]( &OBJC_CLASS___PBSDisplayManager,  "localizedStringWithKey:refreshRate:frameRate:referenceRefreshRate:",  v8,  v10,  v9,  v11));
LABEL_11:
  id v13 = (void *)v12;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  v13,  v4,  0LL,  WeakRetained,  0LL));

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_1000724A4;
  v19[3] = &unk_10018E608;
  id v20 = v4;
  id v16 = v4;
  [v15 setUpdateBlock:v19];

  return v15;
}

void sub_1000724A4(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSDisplayManager refreshRateFormatter](&OBJC_CLASS___PBSDisplayManager, "refreshRateFormatter"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 stringForObjectValue:*(void *)(a1 + 32)]);
  [v5 setLocalizedValue:v4];

  [v5 setAction:"_selectUnverifiedDisplayModeItem:"];
}

void sub_100072520(uint64_t a1, void *a2)
{
  id v5 = a2;
  [v5 setCanFocus:0];
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) unverifiedDisplayModes]);
  BOOL v4 = [v3 count] != 0;

  [v5 setHidden:v4];
}

void sub_1000727B4(id a1, PBSDisplayManagerUpdateRequest *a2)
{
}

id sub_100072888(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "aa_altDSID"));
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_100072B54(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 isEqualToString:ACAccountTypeIdentifierAppleAccount])
  {
    uint64_t v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aa_appleAccountWithAltDSID:", v6));
LABEL_10:
    BOOL v8 = (os_log_s *)v7;
    goto LABEL_11;
  }

  if (![v5 isEqualToString:ACAccountTypeIdentifieriTunesStore])
  {
    if (![v5 isEqualToString:ACAccountTypeIdentifierGameCenter])
    {
      id v16 = sub_100072DA4();
      BOOL v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        int v17 = 138543362;
        uint64_t v18 = (uint64_t)v5;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Unsupported account type, ignoring it. {accountTypeIdentifier=%{public}@}",  (uint8_t *)&v17,  0xCu);
      }

      goto LABEL_13;
    }

    uint64_t v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tvsettings_gameCenterAccountWithAltDSID:", v6));
    goto LABEL_10;
  }

  BOOL v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ams_iTunesAccountWithAltDSID:", v6));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s ams_homeIdentifier](v8, "ams_homeIdentifier"));

  if (v9)
  {
    id v10 = sub_100072DA4();
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s ams_homeIdentifier](v8, "ams_homeIdentifier"));
      id v13 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s ams_homeUserIdentifiers](v8, "ams_homeUserIdentifiers"));
      id v14 = [v13 count];
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s ams_homeUserHiddenIdentifiers](v8, "ams_homeUserHiddenIdentifiers"));
      int v17 = 141559042;
      uint64_t v18 = 1752392040LL;
      __int16 v19 = 2112;
      id v20 = v6;
      __int16 v21 = 2114;
      id v22 = v12;
      __int16 v23 = 2048;
      id v24 = v14;
      __int16 v25 = 2048;
      id v26 = [v15 count];
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Request to remove iTunes account associated with Home, account won't be removed. {iTunesAltDSID=%{mask.hash}@, h omeIdentifier=%{public}@, visibleHomeUserIdentifiers.count=%ld, hiddenHomeUserIdentifiers.count=%ld}",  (uint8_t *)&v17,  0x34u);
    }

    goto LABEL_13;
  }

id sub_100072DA4()
{
  if (qword_1001E1840 != -1) {
    dispatch_once(&qword_1001E1840, &stru_100191758);
  }
  return (id)qword_1001E1838;
}

void sub_100072DE4(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  if ((a2 & 1) != 0)
  {
    id v6 = sub_100072DA4();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Account removed successfully.", v10, 2u);
    }
  }

  else
  {
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) identifier]);
    id v8 = sub_100072DA4();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1000F8B48((uint64_t)v7, v5, v9);
    }
  }
}

uint64_t sub_100072EB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100073190( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1000731BC(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 8);
  id v8 = WeakRetained;
  if (v6)
  {
    id v9 = sub_100072DA4();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1000F8C1C(v6, v10);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000735C4;
    block[3] = &unk_10018FA98;
    __int128 v39 = (NSMutableDictionary *)a1[7];
    dispatch_async(&_dispatch_main_q, block);
    uint64_t v11 = v39;
    goto LABEL_28;
  }

  id v26 = WeakRetained;
  uint64_t v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  id v27 = v5;
  id v12 = v5;
  id v13 = [v12 countByEnumeratingWithState:&v34 objects:v42 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v35;
    uint64_t v16 = ACAccountTypeIdentifierAppleAccount;
    uint64_t v28 = ACAccountTypeIdentifierGameCenter;
    do
    {
      for (i = 0LL; i != v14; i = (char *)i + 1)
      {
        if (*(void *)v35 != v15) {
          objc_enumerationMutation(v12);
        }
        uint64_t v18 = *(void **)(*((void *)&v34 + 1) + 8LL * (void)i);
        __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "aa_altDSID", v26));
        if (objc_msgSend(v18, "tvs_isAppleAccount")
          && ([a1[4] containsObject:v19] & 1) == 0)
        {
          id v23 = sub_100072DA4();
          __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            uint64_t v41 = v18;
            _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Removing iCloud account, it's not associated to a user. {account=%@}",  buf,  0xCu);
          }

          uint64_t v22 = v16;
          goto LABEL_20;
        }

        if ([a1[5] _isGameCenterAccount:v18]
          && ([a1[6] containsObject:v19] & 1) == 0)
        {
          id v20 = sub_100072DA4();
          __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            uint64_t v41 = v18;
            _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Removing Game Center account, it's not associated to a user. {account=%@}",  buf,  0xCu);
          }

          uint64_t v22 = v28;
LABEL_20:

          -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v19, v22);
        }
      }

      id v14 = [v12 countByEnumeratingWithState:&v34 objects:v42 count:16];
    }

    while (v14);
  }

  if (-[NSMutableDictionary count](v11, "count"))
  {
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472LL;
    v29[2] = sub_1000735DC;
    v29[3] = &unk_100191538;
    id v8 = v26;
    v29[4] = v26;
    uint64_t v11 = v11;
    id v30 = v11;
    id v31 = a1[7];
    dispatch_async(&_dispatch_main_q, v29);

    id v6 = 0LL;
    id v5 = v27;
  }

  else
  {
    id v24 = sub_100072DA4();
    __int16 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    id v6 = 0LL;
    id v5 = v27;
    id v8 = v26;
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "No unused accounts to remove.", buf, 2u);
    }

    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472LL;
    v32[2] = sub_1000735D0;
    v32[3] = &unk_10018FA98;
    id v33 = a1[7];
    dispatch_async(&_dispatch_main_q, v32);
  }

LABEL_28:
}

uint64_t sub_1000735C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000735D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1000735DC(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "tvsettings_removeAccountsWithTuples:completion:",  *(void *)(a1 + 40),  *(void *)(a1 + 48));
}

void sub_100073648(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "ACAccountStore+TVSettings");
  uint64_t v2 = (void *)qword_1001E1838;
  qword_1001E1838 = (uint64_t)v1;
}

void sub_1000736B8(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsMusicAudioQualityFacade);
  uint64_t v2 = (void *)qword_1001E1850;
  qword_1001E1850 = (uint64_t)v1;
}

void sub_100073F94( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id a25)
{
}

TVSettingsOSUpdateSelectConfigurationViewController *sub_100074010(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained trainMap]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 colorMap]);
    id v5 = -[TVSettingsOSUpdateSelectConfigurationViewController initWithTrains:andColors:]( objc_alloc(&OBJC_CLASS___TVSettingsOSUpdateSelectConfigurationViewController),  "initWithTrains:andColors:",  v3,  v4);
    uint64_t v6 = TSKLocString(@"SettingsOSUpdateConfigurationTitle");
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    -[TVSettingsOSUpdateSelectConfigurationViewController setTitle:](v5, "setTitle:", v7);
  }

  else
  {
    id v5 = 0LL;
  }

  return v5;
}

void sub_1000740C0(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateConfigurationItem:v6 withValue:v5];
}

void sub_100074124(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateCheckConfigurationItem:v3];
}

void sub_1000744E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString string](&OBJC_CLASS___NSMutableString, "string"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsOSUpdateConfigurationManager currentConfiguration]( &OBJC_CLASS___TVSettingsOSUpdateConfigurationManager,  "currentConfiguration"));
  if ([v2 requiresAppleConnect])
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSAppleConnectSettings sharedInstance](&OBJC_CLASS___PBSAppleConnectSettings, "sharedInstance"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 accountID]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 password]);
    if (![v4 length] || !objc_msgSend(v5, "length"))
    {
      uint64_t v14 = TSKLocString(@"SettingsVPNMissingAppleConnectCredentialsMessage");
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      [WeakRetained _warnAbout:v15];

      [WeakRetained setConfigurationCheckState:3];
      [WeakRetained reloadSettingsIfNeeded];
      [v1 appendFormat:@"AC:❌ "];

LABEL_20:
      goto LABEL_21;
    }

    [v1 appendFormat:@"AC:✔︎ "];
  }

  if ([v2 requiresVPN])
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSVPNSettings sharedInstance](&OBJC_CLASS___PBSVPNSettings, "sharedInstance"));
    if (![v3 isProfileLoaded])
    {
      uint64_t v18 = TSKLocString(@"SettingsOSUpdateMissingVPNProfileMessage");
      __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      [WeakRetained _warnAbout:v19];

      [WeakRetained setConfigurationCheckState:3];
      [WeakRetained reloadSettingsIfNeeded];
      id v20 = @"VPN:❌ ";
LABEL_19:
      [v1 appendFormat:v20];
      goto LABEL_20;
    }

    [v1 appendFormat:@"VPN:✔︎ "];
  }

  if (([v2 isConfigurationProfileLoaded] & 1) == 0)
  {
    uint64_t v16 = TSKLocString(@"SettingsOSUpdateMissingCarryProfileMessage");
    int v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    [WeakRetained _warnAbout:v17];

    [WeakRetained setConfigurationCheckState:3];
    [WeakRetained reloadSettingsIfNeeded];
    [v1 appendFormat:@"Profile:❌ "];
LABEL_21:
    [WeakRetained setLastConfigurationCheckResult:v1];
    goto LABEL_22;
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([v2 requiredProfileURL]);
  id v7 = [v6 length];

  if (v7) {
    [v1 appendFormat:@"Profile:✔︎ "];
  }
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v2 audienceOverride]);
  id v9 = [v8 length];

  if (!v9) {
    goto LABEL_14;
  }
  uint64_t v11 = MAGetPallasAudience(@"com.apple.MobileAsset.SoftwareUpdate", v10);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v11);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v2 audienceOverride]);
  unsigned int v13 = [v12 isEqualToString:v3];

  if (!v13)
  {
    uint64_t v21 = TSKLocString(@"SettingsOSUpdateMismatchedAudienceseMessage");
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    [WeakRetained _warnAbout:v22];

    [WeakRetained setConfigurationCheckState:3];
    [WeakRetained reloadSettingsIfNeeded];
    id v20 = @"Audience:❌ ";
    goto LABEL_19;
  }

  [v1 appendFormat:@"Audience:✔︎ "];

LABEL_14:
  [WeakRetained setLastConfigurationCheckResult:v1];
  [WeakRetained setConfigurationCheckState:2];
  [WeakRetained reloadSettingsIfNeeded];
LABEL_22:
}

id sub_10007532C(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

id sub_100075CDC(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

id sub_100075FAC(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

BOOL sub_100076344(id a1, TVSettingsPortraitClockCategoryItem *a2, unint64_t a3, BOOL *a4)
{
  return -[TVSettingsPortraitClockCategoryItem isPeopleCategory](a2, "isPeopleCategory", a3, a4);
}

void sub_1000765E0(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_1000F8DC4();
  }
}

BOOL sub_100076628(id a1, TVSettingsPortraitClockCategoryItem *a2, unint64_t a3, BOOL *a4)
{
  return -[TVSettingsPortraitClockCategoryItem isPeopleCategory](a2, "isPeopleCategory", a3, a4);
}

void sub_100076CDC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id location)
{
}

void sub_100076D10(id a1, UIAlertAction *a2)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue( +[NSURL URLWithString:]( &OBJC_CLASS___NSURL,  "URLWithString:",  @"prefs:root=USERS&primaryUser=true&action=setUpiCloudPhotos&animate=YES"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](&OBJC_CLASS___LSApplicationWorkspace, "defaultWorkspace"));
  [v2 openSensitiveURL:v3 withOptions:0];
}

void sub_100076D74(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100076DEC;
  block[3] = &unk_10018E810;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async(&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_100076DEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissViewControllerAnimated:1 completion:0];
}

void sub_100076E20(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (a2 == 1)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_100076F34;
    v8[3] = &unk_10018FA70;
    id v5 = &v9;
    id v7 = *(void **)(a1 + 32);
    id v9 = *(id *)(a1 + 40);
    [v7 setiCloudSharedPhotosEnabled:1 presentingViewController:WeakRetained propertySetCompletion:v8];
    goto LABEL_5;
  }

  if (!a2)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_100076F20;
    v10[3] = &unk_10018FA70;
    id v5 = &v11;
    id v6 = *(void **)(a1 + 32);
    id v11 = *(id *)(a1 + 40);
    [v6 setiCloudPhotoLibraryEnabled:1 presentingViewController:WeakRetained propertySetCompletion:v10];
LABEL_5:
  }
}

uint64_t sub_100076F20(uint64_t result, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16LL))();
  }
  return result;
}

uint64_t sub_100076F34(uint64_t result, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16LL))();
  }
  return result;
}

void sub_100077128(_Unwind_Exception *a1)
{
}

void sub_100077194(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000F8E38();
    }
  }

  else
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_100077268;
    v7[3] = &unk_10018E568;
    objc_copyWeak(&v9, (id *)(a1 + 32));
    id v8 = v5;
    dispatch_async(&_dispatch_main_q, v7);

    objc_destroyWeak(&v9);
  }
}

void sub_100077268(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateAerialThemesWithOptions:*(void *)(a1 + 32)];
}

void sub_1000772A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000F8EAC();
    }
  }

  else
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_100077378;
    v7[3] = &unk_10018E568;
    objc_copyWeak(&v9, (id *)(a1 + 32));
    id v8 = v5;
    dispatch_async(&_dispatch_main_q, v7);

    objc_destroyWeak(&v9);
  }
}

void sub_100077378(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updatePhotoSourcesWithObjects:*(void *)(a1 + 32)];
  [WeakRetained _updateTrantionStylesViewModel];
}

void sub_1000773BC(uint64_t a1, char a2, char a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  if (v10)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000F8F20();
    }
  }

  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000774A8;
    block[3] = &unk_100191910;
    objc_copyWeak(&v13, (id *)(a1 + 32));
    char v14 = a2;
    char v15 = a3;
    id v12 = v9;
    dispatch_async(&_dispatch_main_q, block);

    objc_destroyWeak(&v13);
  }
}

void sub_1000774A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updatePortraitClockWithEnabled:*(unsigned __int8 *)(a1 + 48) fallback:*(unsigned __int8 *)(a1 + 49) options:*(void *)(a1 + 32)];
}

void sub_1000776A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000776CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000F8F94();
    }
  }

  else
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_1000777A0;
    v7[3] = &unk_10018E568;
    objc_copyWeak(&v9, (id *)(a1 + 32));
    id v8 = v5;
    dispatch_async(&_dispatch_main_q, v7);

    objc_destroyWeak(&v9);
  }
}

void sub_1000777A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateTransitionStylesWithObjects:*(void *)(a1 + 32)];
}

BOOL sub_100077D78(id a1, TVSettingsAmbientPhotoSourceMenuItem *a2, unint64_t a3, BOOL *a4)
{
  return -[TVSettingsAmbientPhotoSourceMenuItem isMyPhotosOption](a2, "isMyPhotosOption", a3, a4);
}

void sub_100078408(uint64_t a1, void *a2, void *a3)
{
  id v20 = a2;
  id v6 = a3;
  if (v6)
  {
    if (_TVSLogInternalLogLevel >= 5)
    {
      uint64_t v7 = TVSSystemLog;
      if (pthread_main_np()) {
        id v8 = @"Main:";
      }
      else {
        id v8 = &stru_100195DD8;
      }
      pthread_t v9 = pthread_self();
      uint64_t v18 = *(void *)(a1 + 32);
      id v19 = v6;
      pthread_t v16 = v9;
      uint64_t v17 = v7;
      char v15 = v8;
LABEL_12:
      _TVSLogBase(v3, &_os_log_default, 1LL, 0LL, 5LL, v7);
    }
  }

  else if (_TVSLogInternalLogLevel >= 5)
  {
    uint64_t v7 = TVSSystemLog;
    if (pthread_main_np()) {
      id v10 = @"Main:";
    }
    else {
      id v10 = &stru_100195DD8;
    }
    pthread_t v11 = pthread_self();
    uint64_t v17 = v7;
    uint64_t v18 = *(void *)(a1 + 32);
    char v15 = v10;
    pthread_t v16 = v11;
    goto LABEL_12;
  }

  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[UIApplication sharedApplication]( &OBJC_CLASS___UIApplication,  "sharedApplication",  v15,  v16,  v17,  v18,  v19));
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 delegate]);
  char v14 = (void *)objc_claimAutoreleasedReturnValue([v13 window]);
  [v14 setUserInteractionEnabled:1];
}

id sub_100078C1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) previewImageURL];
}

id sub_100078C24(uint64_t a1)
{
  return [*(id *)(a1 + 32) identifier];
}

id sub_100078C2C(uint64_t a1)
{
  return [*(id *)(a1 + 32) localizedName];
}

id sub_100078C34(uint64_t a1)
{
  return [*(id *)(a1 + 32) localizedDescription];
}

id sub_100078C3C(uint64_t a1)
{
  return [*(id *)(a1 + 32) isActive];
}

id sub_100078C44(uint64_t a1)
{
  return [*(id *)(a1 + 32) isDisabled];
}

id sub_100078C4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) preferredOrder];
}

BOOL sub_100079348(id a1, TVSettingsAmbientMenuItem *a2, unint64_t a3, BOOL *a4)
{
  return -[TVSettingsAmbientMenuItem isSelected](a2, "isSelected", a3, a4);
}

id sub_100079444(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

id sub_100079AC0(unint64_t a1)
{
  if (a1 > 3) {
    return 0LL;
  }
  uint64_t v1 = TSKLocString(*(&off_100191B30 + a1));
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

LABEL_19:
  return v9;
}

    goto LABEL_20;
  }

  id v13 = 0;
LABEL_26:

  return v13;
}

  id v12 = 0LL;
LABEL_20:
  uint64_t v18 = TSKLocString(@"BTErrorHeader");
  id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  id v20 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  v19,  v9,  1LL));

  if (!v12)
  {
    uint64_t v21 = TSKLocString(@"SettingsOK");
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472LL;
    v29[2] = sub_1000D45BC;
    v29[3] = &unk_10018F4E8;
    objc_copyWeak(&v30, &location);
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v22,  1LL,  v29));

    objc_destroyWeak(&v30);
  }

  [v20 addAction:v12];
  id v23 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsBluetoothViewController navigationController](self, "navigationController"));
  id v24 = [v23 popToViewController:self animated:1];

  __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsBluetoothViewController navigationController](self, "navigationController"));
  [v25 presentViewController:v20 animated:1 completion:0];

  -[TVSettingsBluetoothViewController setErrorAlert:](self, "setErrorAlert:", v20);
  objc_destroyWeak(&location);
LABEL_23:
}

    objc_msgSend(*(id *)(a1 + 48), "removeAllObjects", v23, v24, v25, v26);
    goto LABEL_20;
  }

  objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40),  "_setInitialFocusedSettingItem:",  v23,  v24,  v25,  v26);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) _prepareChildViewControllerWithItem:v30[5]]);
  if (![(id)v30[5] shouldPresentChildController])
  {
    if (v17)
    {
      id v19 = (void **)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
      uint64_t v18 = v17;
      goto LABEL_14;
    }

    if (!*(_BYTE *)(a1 + 72)) {
      goto LABEL_15;
    }
  }

  uint64_t v18 = (void *)v30[5];
  id v19 = (void **)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL);
LABEL_14:
  uint64_t v21 = v18;
  uint64_t v22 = *v19;
  void *v19 = v21;

LABEL_15:
  _Block_object_dispose(&v29, 8);

LABEL_16:
  if (v8 == *(id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL))
  {
LABEL_20:
    *a4 = 1;
    goto LABEL_21;
  }

  objc_msgSend(*(id *)(a1 + 48), "addObject:");
LABEL_21:
}

void sub_100079FCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = TVCSHomeLog(v3, v4);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000F9008();
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
    pthread_t v9 = (void *)v8;
    id v10 = @"enabled";
    if (!*(_BYTE *)(a1 + 40)) {
      id v10 = @"disabled";
    }
    int v11 = 138412546;
    uint64_t v12 = v8;
    __int16 v13 = 2112;
    char v14 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%@ successfully %@ doorbell notifications",  (uint8_t *)&v11,  0x16u);
  }
}

void sub_10007A28C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = TVCSHomeLog(v3, v4);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000F90A8();
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
    id v9 = sub_100079AC0(*(void *)(a1 + 40));
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    int v11 = 138412546;
    uint64_t v12 = v8;
    __int16 v13 = 2112;
    char v14 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%@ successfully set smart notifications state to %@",  (uint8_t *)&v11,  0x16u);
  }
}

void sub_10007A440(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = TVCSHomeLog(v3, v4);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000F9150();
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
    id v9 = (void *)v8;
    id v10 = @"enabled";
    if (!*(_BYTE *)(a1 + 40)) {
      id v10 = @"disabled";
    }
    int v11 = 138412546;
    uint64_t v12 = v8;
    __int16 v13 = 2112;
    char v14 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%@ successfully %@ legacy motion notifications",  (uint8_t *)&v11,  0x16u);
  }
}

void sub_10007A6B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = TVCSHomeLog(v3, v4);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000F91F0();
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
    uint64_t v9 = *(void *)(a1 + 40);
    int v10 = 138412546;
    int v11 = v8;
    __int16 v12 = 2048;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%@ successfully toggled activity type %lu",  (uint8_t *)&v10,  0x16u);
  }
}

BOOL sub_10007ABD8(id a1, HFCondition *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___HFCameraSmartDetectionCondition);
  char isKindOfClass = objc_opt_isKindOfClass(v2, v3);

  return isKindOfClass & 1;
}

void sub_10007AC20(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = TVCSHomeLog(v3, v4);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000F9288();
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
    uint64_t v9 = *(void *)(a1 + 40);
    int v10 = 138412546;
    int v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%@ successfully set motion bulletin condition to %@",  (uint8_t *)&v10,  0x16u);
  }
}

void sub_10007AD1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = TVCSHomeLog(v3, v4);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000F930C();
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
    uint64_t v9 = *(void *)(a1 + 40);
    int v10 = 138412546;
    int v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%@ successfully set smart bulletin condition to %@",  (uint8_t *)&v10,  0x16u);
  }
}

void sub_10007AE18(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = TVCSHomeLog(v3, v4);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000F9288();
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
    uint64_t v9 = *(void *)(a1 + 40);
    int v10 = 138412546;
    int v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%@ successfully set motion bulletin condition to %@",  (uint8_t *)&v10,  0x16u);
  }
}

void sub_10007B0EC( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

  ;
}

uint64_t sub_10007B138(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

  ;
}

void sub_10007B190(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsAppleRemoteFacade);
  id v2 = (void *)qword_1001E1858;
  qword_1001E1858 = (uint64_t)v1;
}

id sub_10007B2C4()
{
  if (qword_1001E1870 != -1) {
    dispatch_once(&qword_1001E1870, &stru_100191B90);
  }
  return (id)qword_1001E1868;
}

id sub_10007B610(uint64_t a1)
{
  v6[0] = @"value";
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  v6[1] = @"remoteType";
  v7[0] = v2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 40)));
  v7[1] = v3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  2LL));

  return v4;
}

void sub_10007BAB4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "AppleRemoteFacade");
  id v2 = (void *)qword_1001E1868;
  qword_1001E1868 = (uint64_t)v1;
}

void sub_10007BF20( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10007BF44(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10007BFF4;
  v5[3] = &unk_10018E568;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v4 = v3;
  id v6 = v4;
  TVSPerformBlockOnMainThread(v5);

  objc_destroyWeak(&v7);
}

void sub_10007BFE0(_Unwind_Exception *a1)
{
}

void sub_10007BFF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setPhotoAssets:*(void *)(a1 + 32)];
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained gridView]);
  [v2 reloadData];

  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained gridView]);
  [v3 layoutIfNeeded];

  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained gridView]);
  [v4 becomeFirstResponder];
}

void sub_10007CA64( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10007CA80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  objc_msgSend(v1, "tvcs_popToViewControllerBelowViewController:", WeakRetained);
}

void sub_10007CF58(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v2 setAlpha:1.0];

  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) view]);
  [v3 setAlpha:0.0];
}

id sub_10007CFB4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) view]);
  [v2 removeFromSuperview];

  return [*(id *)(a1 + 48) removeFromParentViewController];
}

id sub_10007D38C(uint64_t a1)
{
  return [*(id *)(a1 + 32) identifier];
}

id sub_10007D394(uint64_t a1)
{
  return [*(id *)(a1 + 32) name];
}

id sub_10007D39C(uint64_t a1)
{
  return [*(id *)(a1 + 32) model];
}

id sub_10007D3A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) isDedicated];
}

void sub_10007D574(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1001E1878;
  qword_1001E1878 = (uint64_t)v1;
}

void sub_10007D814(_Unwind_Exception *a1)
{
}

void sub_10007D868(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = sub_10007D938();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int v7 = 138412290;
      id v8 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Continuity camera dedicated device changed: %@",  (uint8_t *)&v7,  0xCu);
    }

    [WeakRetained _updateDevices];
  }
}

id sub_10007D938()
{
  if (qword_1001E1890 != -1) {
    dispatch_once(&qword_1001E1890, &stru_100191C78);
  }
  return (id)qword_1001E1888;
}

void sub_10007D978(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateDevices];
    id WeakRetained = v2;
  }
}

void sub_10007D9A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained) {
    WeakRetained[8] = 0;
  }
}

void sub_10007D9C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = sub_10007D938();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    int v7 = v6;
    if (v3)
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
        sub_1000F9390((uint64_t)v3, v7);
      }
      char v8 = 0;
    }

    else
    {
      char v8 = 1;
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)int v10 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Continuity camera discovery session activated",  v10,  2u);
      }
    }

    WeakRetained[8] = v8;
    uint64_t v9 = *(void *)(a1 + 32);
    if (v9) {
      (*(void (**)(uint64_t, id))(v9 + 16))(v9, v3);
    }
  }
}

id sub_10007DBA8(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 persistentIdentifier]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

id sub_10007DE08(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 persistentIdentifier]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_10007DED8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "TVSettingsContinuityCameraFacade");
  id v2 = (void *)qword_1001E1888;
  qword_1001E1888 = (uint64_t)v1;
}

void sub_10007DF48(id a1)
{
  v4[0] = @"/System/Library/LocationBundles/TimeZone.bundle";
  v4[1] = @"/System/Library/PrivateFrameworks/HomeKitDaemon.framework";
  id v4[2] = @"com.apple.PineBoard";
  v4[3] = @"/System/Library/LocationBundles/SystemCustomization.bundle";
  void v4[4] = @"/System/Library/PrivateFrameworks/MobileWiFi.framework";
  v4[5] = @"/System/Library/PrivateFrameworks/CoreParsec.framework";
  v4[6] = @"/System/Library/LocationBundles/Routine.bundle";
  v4[7] = @"/System/Library/LocationBundles/IdleScreenLocation.bundle";
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v4, 8LL));
  uint64_t v2 = objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithArray:](&OBJC_CLASS___NSMutableArray, "arrayWithArray:", v1));

  id v3 = (void *)qword_1001E1898;
  qword_1001E1898 = v2;
}

void sub_10007E070(id a1)
{
  id v3 = @"/System/Library/PrivateFrameworks/AssistantServices.framework";
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v3, 1LL));
  uint64_t v2 = (void *)qword_1001E18A8;
  qword_1001E18A8 = v1;
}

LABEL_44:
            -[NSMutableArray addObject:](v22, "addObject:", &off_1001AD2F0);
            goto LABEL_45;
          }
        }

        else if ((v23 & 2) == 0)
        {
          goto LABEL_43;
        }

        -[NSMutableArray addObject:](v22, "addObject:", &off_1001AD2D8);
        if ((v24 & 1) == 0) {
          goto LABEL_45;
        }
        goto LABEL_44;
      }

      char v15 = &kCLCommonLocationUsageDescriptionKey;
    }

    char v14 = (void *)objc_claimAutoreleasedReturnValue(-[NSBundle objectForInfoDictionaryKey:](v11, "objectForInfoDictionaryKey:", *v15));
    goto LABEL_23;
  }

  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG)) {
    sub_1000F9404((uint64_t)v6);
  }
LABEL_48:
}

void sub_10007E9B8(_Unwind_Exception *a1)
{
}

void sub_10007E9D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!WeakRetained)
  {
    id v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"strongSelf != nil"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000F948C(a1);
    }
    _bs_set_crash_log_message([v23 UTF8String]);
    __break(0);
LABEL_32:
    JUMPOUT(0x10007EC7CLL);
  }

  char v8 = WeakRetained;
  if (!v6)
  {
    uint64_t v9 = objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:AKAuthenticationAlternateDSIDKey]);
    if (!v9)
    {
      id v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"altDSID != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_1000F9540(a1);
      }
      _bs_set_crash_log_message([v24 UTF8String]);
      __break(0);
      JUMPOUT(0x10007ECDCLL);
    }

    int v10 = (void *)v9;
    id v11 = [v8 userProfileAuthenticationType];
    if (v11)
    {
      if (v11 != (id)1)
      {
LABEL_29:
        __int16 v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"validationError != nil"));
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          sub_1000F95F4(a1);
        }
        _bs_set_crash_log_message([v25 UTF8String]);
        __break(0);
        goto LABEL_32;
      }

      id v12 = [*(id *)(a1 + 40) serviceType];
      if (v12 == (id)6)
      {
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v8 validator]);
        id v26 = 0LL;
        unsigned __int8 v14 = [v13 canSignInUserWithGameCenterAltDSID:v10 error:&v26];
        char v15 = v26;
      }

      else
      {
        if (v12 != (id)1)
        {
          if (qword_1001E18C0 != -1) {
            dispatch_once(&qword_1001E18C0, &stru_100191D10);
          }
          uint64_t v18 = (void *)qword_1001E18B8;
          if (os_log_type_enabled((os_log_t)qword_1001E18B8, OS_LOG_TYPE_INFO))
          {
            id v19 = *(void **)(a1 + 40);
            id v20 = v18;
            id v21 = [v19 serviceType];
            uint64_t v22 = *(void *)(a1 + 40);
            *(_DWORD *)buf = 134218242;
            id v30 = v21;
            __int16 v31 = 2112;
            uint64_t v32 = v22;
            _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Service type used won't be validated for duplicate user profiles. {serviceType=%ld, context=%@}",  buf,  0x16u);
          }

          id v16 = 0LL;
          goto LABEL_20;
        }

        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v8 validator]);
        id v27 = 0LL;
        unsigned __int8 v14 = [v13 canSignInUserWithiCloudAltDSID:v10 error:&v27];
        char v15 = v27;
      }
    }

    else
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v8 validator]);
      uint64_t v28 = 0LL;
      unsigned __int8 v14 = [v13 canAddUserWithAltDSID:v10 error:&v28];
      char v15 = v28;
    }

    id v16 = v15;

    if ((v14 & 1) == 0)
    {
      if (v16)
      {
        uint64_t v17 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
LABEL_21:
        v17();

        goto LABEL_22;
      }

      goto LABEL_29;
    }

void sub_10007EDB4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings.userProfiles", "UserProfileAppleIDAuthenticationController");
  uint64_t v2 = (void *)qword_1001E18B8;
  qword_1001E18B8 = (uint64_t)v1;
}

  ;
}

uint64_t sub_10007EE0C()
{
  return objc_opt_class(*(void *)(v0 + 32));
}

  ;
}

  ;
}

id sub_10007F0B4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [a2 SDRColorMapping]));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);

  return v4;
}

id sub_10007F26C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (*(void *)(a1 + 40) == 538423556LL) {
    id v3 = [a2 HDR10ChromaSubsampling];
  }
  else {
    id v3 = [a2 SDRChromaSubsampling];
  }
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v4]);

  return v5;
}

id sub_10007F46C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!_os_feature_enabled_impl("PineBoard", "hydrangea")
    || [v3 dynamicRange] != (id)538423556
    || !+[TVSDevice supportsHDR10Plus](&OBJC_CLASS___TVSDevice, "supportsHDR10Plus"))
  {
    goto LABEL_8;
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBSDisplayManager sharedInstance](&OBJC_CLASS___PBSDisplayManager, "sharedInstance"));
  if (([v4 displaySupportsHDR10Plus] & 1) == 0)
  {

    goto LABEL_8;
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBSDisplayManager sharedInstance](&OBJC_CLASS___PBSDisplayManager, "sharedInstance"));
  unsigned int v6 = [v5 hdr10PlusMetadataEnabled];

  if (!v6)
  {
LABEL_8:
    int v10 = *(void **)(a1 + 32);
    int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v3 dynamicRange]));
    uint64_t v9 = objc_claimAutoreleasedReturnValue([v10 objectForKeyedSubscript:v7]);
    goto LABEL_9;
  }

  int v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  uint64_t v8 = TSKLocStringFromBundleCachingKey(@"AVDynamicRangeHDR10Plus", v7, 1LL, 0LL, @"Localizable-HDR10Plus");
  uint64_t v9 = objc_claimAutoreleasedReturnValue(v8);
LABEL_9:
  id v11 = (void *)v9;

  return v11;
}

id sub_10007F634(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 resolution];
  double v5 = v4;
  double v7 = v6;
  if (+[TVSDevice supportsUHDAndHDR](&OBJC_CLASS___TVSDevice, "supportsUHDAndHDR"))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dynamicRangeColorFormatter]);
    uint64_t v9 = (__CFString *)objc_claimAutoreleasedReturnValue([v8 stringForObjectValue:v3]);
  }

  else
  {
    uint64_t v9 = &stru_100195DD8;
  }

  id v10 = [v3 refreshRate];
  uint64_t v12 = v11;
  if (PBSDisplayResolutionIs4K(v10))
  {
    if (*(_BYTE *)(a1 + 40))
    {
      uint64_t v13 = TSKLocString(@"DisplayModeProgressiveMarketNameUHDResolutionRefreshRateFormat");
      unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      uint64_t v25 = v12;
    }

    else
    {
      uint64_t v17 = TSKLocString(@"DisplayModeProgressiveMarketNameUHDResolutionFormat");
      unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue(v17);
    }

    uint64_t v18 = +[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v14, v9, v25, v26, v27);
  }

  else
  {
    unint64_t v15 = llround(v7);
    if ((PBSDisplayResolutionIs1080p(v5, v7) & 1) != 0
      || (PBSDisplayResolutionIs720p(v5, v7) & 1) != 0
      || (PBSDisplayResolutionIs576p(v5, v7) & 1) != 0
      || PBSDisplayResolutionIs480p(v5, v7))
    {
      if (*(_BYTE *)(a1 + 40))
      {
        uint64_t v16 = TSKLocString(@"DisplayModeProgressiveMarketNameResolutionRefreshRateFormat");
        unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue(v16);
        uint64_t v26 = v12;
      }

      else
      {
        uint64_t v19 = TSKLocString(@"DisplayModeProgressiveMarketNameResolutionFormat");
        unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue(v19);
      }

      uint64_t v18 = +[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v14, v15, v9, v26, v27);
    }

    else
    {
      unint64_t v22 = llround(v5);
      if (*(_BYTE *)(a1 + 40))
      {
        uint64_t v23 = TSKLocString(@"DisplayModeProgressiveOtherResolutionRefreshRateFormat");
        unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue(v23);
        uint64_t v27 = v12;
      }

      else
      {
        uint64_t v24 = TSKLocString(@"DisplayModeProgressiveOtherResolutionFormat");
        unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue(v24);
      }

      uint64_t v18 = +[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v14, v22, v15, v9, v27);
    }
  }

  id v20 = (void *)objc_claimAutoreleasedReturnValue(v18);

  return v20;
}

id sub_10007F894(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_1001E18D0 != -1) {
    dispatch_once(&qword_1001E18D0, &stru_100191DA0);
  }
  double v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  double v5 = (void *)objc_claimAutoreleasedReturnValue( [v4 localizedStringForKey:@"AVDisplayModeRefreshRateItemFormat" value:&stru_100195DD8 table:0]);

  if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
  {
    double v6 = *(void **)(a1 + 32);
    double v7 = &off_1001AD3F8;
LABEL_11:
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v6 localizedStringWithUnits:0 value:v7]);
    uint64_t v9 = *(void **)(a1 + 32);
    id v10 = v7;
    goto LABEL_12;
  }

  if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localizedStringWithUnits:0 value:&off_1001AD3F8]);
    uint64_t v9 = *(void **)(a1 + 32);
    id v10 = &off_1001AF6E0;
  }

  else
  {
    if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
    {
      double v6 = *(void **)(a1 + 32);
      double v7 = &off_1001AD410;
      goto LABEL_11;
    }

    if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
    {
      double v6 = *(void **)(a1 + 32);
      double v7 = &off_1001AD428;
      goto LABEL_11;
    }

    if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localizedStringWithUnits:0 value:&off_1001AD428]);
      uint64_t v9 = *(void **)(a1 + 32);
      id v10 = &off_1001AF6F0;
      goto LABEL_12;
    }

    if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
    {
      double v6 = *(void **)(a1 + 32);
      double v7 = &off_1001AD440;
      goto LABEL_11;
    }

    if (PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
    {
      double v6 = *(void **)(a1 + 32);
      double v7 = &off_1001AD458;
      goto LABEL_11;
    }

    if (!PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]))
    {
      unsigned __int8 v14 = *(void **)(a1 + 32);
      [v3 refreshRate];
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v14 localizedStringWithUnits:1 value:v8]);
      goto LABEL_13;
    }

    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localizedStringWithUnits:0 value:&off_1001AD458]);
    uint64_t v9 = *(void **)(a1 + 32);
    id v10 = &off_1001AF700;
  }

void sub_10007FBB0(id a1)
{
  os_log_t v1 = objc_opt_new(&OBJC_CLASS___NSNumberFormatter);
  uint64_t v2 = (void *)qword_1001E18C8;
  qword_1001E18C8 = (uint64_t)v1;

  id v3 = (void *)qword_1001E18C8;
  double v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale autoupdatingCurrentLocale](&OBJC_CLASS___NSLocale, "autoupdatingCurrentLocale"));
  [v3 setLocale:v4];

  [(id)qword_1001E18C8 setNumberStyle:1];
  [(id)qword_1001E18C8 setUsesGroupingSeparator:1];
  [(id)qword_1001E18C8 setGroupingSize:3];
  _[(id)qword_1001E18C8 setMaximumFractionDigits:0];
}

id sub_10007FCA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) refreshRateFormatter]);
  double v5 = (void *)objc_claimAutoreleasedReturnValue([v4 stringForObjectValue:v3]);

  if ([v3 dynamicRange] == (id)538423557 && objc_msgSend(v3, "SDRColorMapping") == (id)538424066)
  {
    double v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) SDRChromaFormatter]);
  }

  else
  {
    if ([v3 dynamicRange] != (id)538423556)
    {
LABEL_8:
      id v9 = v5;
      goto LABEL_9;
    }

    double v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) HDR10ChromaFormatter]);
  }

  double v7 = v6;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v6 stringForObjectValue:v3]);

  if (!v8) {
    goto LABEL_8;
  }
  id v9 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@ %@", v8, v5));

LABEL_9:
  return v9;
}

void sub_10007FEDC(id a1)
{
  os_log_t v1 = objc_opt_new(&OBJC_CLASS___NSNumberFormatter);
  uint64_t v2 = (void *)qword_1001E18D8;
  qword_1001E18D8 = (uint64_t)v1;

  id v3 = (void *)qword_1001E18D8;
  double v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale autoupdatingCurrentLocale](&OBJC_CLASS___NSLocale, "autoupdatingCurrentLocale"));
  [v3 setLocale:v4];

  [(id)qword_1001E18D8 setNumberStyle:1];
  [(id)qword_1001E18D8 setUsesGroupingSeparator:1];
  [(id)qword_1001E18D8 setGroupingSize:3];
  _[(id)qword_1001E18D8 setMaximumFractionDigits:3];
}

LABEL_6:
  uint64_t v18 = -[NSMutableAttributedString copy](v9, "copy");
  return v18;
}
}

void sub_100081A80( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id *location)
{
}

void sub_100081B38(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "areRestrictionsEnabled"));
}

id sub_100081B7C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  double v7 = (void *)objc_claimAutoreleasedReturnValue([v6 shortName]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v7,  0LL,  v6,  0LL,  *(void *)(a1 + 32),  "_toggleBypassRestrictionsItem:"));

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_100081CA4;
  v11[3] = &unk_100191E08;
  objc_copyWeak(&v14, (id *)(a1 + 48));
  id v12 = *(id *)(a1 + 40);
  id v9 = v6;
  id v13 = v9;
  [v8 setUpdateBlock:v11];

  objc_destroyWeak(&v14);
  return v8;
}

void sub_100081C90(_Unwind_Exception *a1)
{
}

void sub_100081CA4(id *a1, void *a2)
{
  id v18 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    unsigned int v4 = [a1[4] isLoadingBypassRestrictions];
    id v5 = a1[4];
    id v6 = (void *)objc_claimAutoreleasedReturnValue([a1[5] identifier]);
    unsigned __int8 v7 = [v5 allowsRestrictionsBypassUsingCompanionDeviceForUserWithIdentifier:v6];

    [v18 setEnabled:v4 ^ 1];
    if (v4) {
      uint64_t v8 = 4LL;
    }
    else {
      uint64_t v8 = 0LL;
    }
    [v18 setAccessoryTypes:v8];
    if ((v7 & 1) != 0)
    {
      uint64_t v9 = TSKLocString(@"RestrictionsAllowValue");
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      [v18 setLocalizedValue:v10];

      uint64_t v11 = @"RestrictionsUserBypassWithDeviceAllowDescription";
    }

    else
    {
      uint64_t v12 = TSKLocString(@"RestrictionsBlockValue");
      id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      [v18 setLocalizedValue:v13];

      uint64_t v11 = @"RestrictionsUserBypassWithDeviceBlockDescription";
    }

    uint64_t v14 = TSKLocString(v11);
    unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([a1[5] shortName]);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v15, v16));
    [v18 setLocalizedDescription:v17];

    if (v4) {
      [v18 setLocalizedValue:0];
    }
  }
}

void sub_100081E14(uint64_t a1, void *a2)
{
  id v6 = a2;
  unsigned int v3 = [*(id *)(a1 + 32) isLoadingContentRestrictions];
  if (v3) {
    uint64_t v4 = 4LL;
  }
  else {
    uint64_t v4 = 0LL;
  }
  [v6 setAccessoryTypes:v4];
  uint64_t v5 = v3 ^ 1;
  [v6 setEnabled:v5];
  if ((v5 & 1) == 0) {
    [v6 setLocalizedValue:0];
  }
}

void sub_100081E84(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v4 = a2;
  else {
    uint64_t v5 = @"RestrictionsMusicSocialFeaturesHide";
  }
  uint64_t v6 = TSKLocString(v5);
  id v7 = (id)objc_claimAutoreleasedReturnValue(v6);
  -[TSKSettingItem setLocalizedDescription:](v4, "setLocalizedDescription:", v7);
}

void sub_100081EF0(uint64_t a1, void *a2)
{
  id v6 = a2;
  unsigned int v3 = [*(id *)(a1 + 32) isLoadingContentRestrictions];
  [v6 setEnabled:v3 ^ 1];
  if (v3) {
    uint64_t v4 = 4LL;
  }
  else {
    uint64_t v4 = 0LL;
  }
  [v6 setAccessoryTypes:v4];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) availableMovieRestrictions]);
  [v6 setAvailableValues:v5];
}

void sub_100081F88(uint64_t a1, void *a2)
{
  id v6 = a2;
  unsigned int v3 = [*(id *)(a1 + 32) isLoadingContentRestrictions];
  [v6 setEnabled:v3 ^ 1];
  if (v3) {
    uint64_t v4 = 4LL;
  }
  else {
    uint64_t v4 = 0LL;
  }
  [v6 setAccessoryTypes:v4];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) availableTVShowRestrictions]);
  [v6 setAvailableValues:v5];
}

void sub_100082020(uint64_t a1, void *a2)
{
  id v6 = a2;
  unsigned int v3 = [*(id *)(a1 + 32) isLoadingContentRestrictions];
  [v6 setEnabled:v3 ^ 1];
  if (v3) {
    uint64_t v4 = 4LL;
  }
  else {
    uint64_t v4 = 0LL;
  }
  [v6 setAccessoryTypes:v4];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) availableAppRestrictions]);
  [v6 setAvailableValues:v5];
}

void sub_1000820B8(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v4 = a2;
  else {
    uint64_t v5 = @"RestrictionsSiriExplicitLanguageHideDescription";
  }
  uint64_t v6 = TSKLocString(v5);
  id v7 = (id)objc_claimAutoreleasedReturnValue(v6);
  -[TSKSettingItem setLocalizedDescription:](v4, "setLocalizedDescription:", v7);
}

void sub_100082124(id a1, TSKSettingItem *a2, id a3)
{
  unsigned int v3 = a2;
  -[TSKSettingItem setHidden:]( v3,  "setHidden:",  SFIsAppWithBundleIDInstalled(@"com.apple.TVBooks") ^ 1);
}

void sub_100082160(uint64_t a1, void *a2)
{
  unsigned int v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend(v4, "setHidden:", objc_msgSend(v3, "isGameCenterEnabled") ^ 1);
  objc_msgSend(v4, "setEnabled:", objc_msgSend(*(id *)(a1 + 32), "areRestrictionsEnabled"));
}

void sub_1000821BC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "isAllowsRemoteAppPairingLockedDown") ^ 1);
}

NSString *__cdecl sub_100082674(id a1, id a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 displayNameForKey:NSLocaleCountryCode value:v2]);

  return (NSString *)v4;
}

NSString *__cdecl sub_100082704(id a1, id a2)
{
  return (NSString *)[a2 localizedTitle];
}

NSString *__cdecl sub_100082734(id a1, id a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 localizedDescription]);
  id v4 = v3;
  if (v3) {
    id v5 = v3;
  }
  else {
    id v5 = (id)objc_claimAutoreleasedReturnValue([v2 localizedTitle]);
  }
  uint64_t v6 = v5;

  return (NSString *)v6;
}

void sub_100082864( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10008288C(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _handleSetPasscodeResult:v7];
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 navigationController]);
    id v6 = [v5 popViewControllerAnimated:1];
  }
}

void sub_1000829E8(_Unwind_Exception *a1)
{
}

void sub_100082A0C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (!a2)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_100082AA0;
    v5[3] = &unk_10018E468;
    id v6 = *(id *)(a1 + 32);
    id v7 = WeakRetained;
    dispatch_async(&_dispatch_main_q, v5);
  }
}

uint64_t sub_100082AA0(uint64_t a1)
{
  return AnalyticsSendEvent(@"com.apple.appletv.restrictions.disable", 0LL);
}

void sub_100082BF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100082C18(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v8 = WeakRetained;
  if (a3 == 1)
  {
    [v5 shake];
  }

  else if (a3)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
    id v19 = [v18 popViewControllerAnimated:1];
  }

  else
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
    id v10 = objc_alloc(&OBJC_CLASS___TVSettingsRestrictionsSetPasscodeViewController);
    uint64_t v11 = TSKLocString(@"RestrictionsPasscodeChangeTitle");
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    uint64_t v13 = TSKLocString(@"RestrictionsPasscodeChangePrompt");
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    id v20 = _NSConcreteStackBlock;
    uint64_t v21 = 3221225472LL;
    unint64_t v22 = sub_100082DBC;
    uint64_t v23 = &unk_100191F40;
    objc_copyWeak(&v25, v6);
    id v15 = v9;
    id v24 = v15;
    uint64_t v16 = -[TVSettingsRestrictionsSetPasscodeViewController initWithTitle:prompt:completion:]( v10,  "initWithTitle:prompt:completion:",  v12,  v14,  &v20);

    id v17 = objc_msgSend(v15, "popViewControllerAnimated:", 0, v20, v21, v22, v23);
    [v15 pushViewController:v16 animated:0];

    objc_destroyWeak(&v25);
  }
}

void sub_100082DA4(_Unwind_Exception *a1)
{
}

id sub_100082DBC(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _handleSetPasscodeResult:v4];

  return [*(id *)(a1 + 32) popViewControllerAnimated:1];
}

void sub_100083FFC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100084018(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _setString:*(void *)(a1 + 32) forObjectWithName:@"Screen_02_Text" bold:1];
}

id sub_100084B00(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) setAlpha:1.0];
}

CFStringRef sub_100084C78(uint64_t a1)
{
  else {
    return off_100191FF8[a1 - 1];
  }
}

id sub_100084F70(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedName]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedDescription]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  v6,  v4,  @"isActive",  *(void *)(a1 + 32),  "_didSelectThemeItem:"));

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_10008505C;
  v10[3] = &unk_10018E608;
  id v11 = v4;
  id v8 = v4;
  [v7 setUpdateBlock:v10];

  return v7;
}

void sub_10008505C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = TSKLocString(@"SaverBackdropThemeShow");
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = TSKLocString(@"SaverBackdropThemeHide");
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = (id)objc_claimAutoreleasedReturnValue( +[TSKBoolFormatter formatterWithOnTitle:offTitle:]( &OBJC_CLASS___TSKBoolFormatter,  "formatterWithOnTitle:offTitle:",  v5,  v7));

  [v3 setLocalizedValueFormatter:v8];
  [v3 setAvailableValues:&off_1001AEF98];
  objc_msgSend(v3, "setEnabled:", objc_msgSend(*(id *)(a1 + 32), "isDisabled") ^ 1);
}

id sub_10008541C(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsAmbientMultiValuePreviewViewController multiValueControllerWithSettingItem:]( &OBJC_CLASS___TVSettingsAmbientMultiValuePreviewViewController,  "multiValueControllerWithSettingItem:",  a2));
  [v3 setPreviewViewController:*(void *)(a1 + 32)];
  return v3;
}

NSString *__cdecl sub_10008545C(id a1, NSString *a2)
{
  return (NSString *)TSKLocString(a2);
}

TSKSettingItem *__cdecl sub_100085654(id a1, TSKListSettingGroup *a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsTCCInfo);
  id v5 = v3;
  uint64_t v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 displayName]);
  uint64_t v10 = TSKLocString(@"PrivacyAllowWhileUsing");
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = TSKLocString(@"PrivacyDenyAccess");
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v9,  0LL,  v8,  @"allowAccess",  v11,  v13));

  return (TSKSettingItem *)v14;
}

void sub_100085884(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:kTCCServiceUserTracking];
  uint64_t v2 = (void *)qword_1001E18E8;
  qword_1001E18E8 = (uint64_t)v1;
}

void sub_100085A28(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 33LL) = *(_BYTE *)(a1 + 40);
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) adTrackingTransparency]);
  [v2 setCrossAppTrackingAllowed:*(unsigned __int8 *)(*(void *)(a1 + 32) + 33)];
}

BOOL sub_100085AD4(id a1, TVSettingsTCCInfo *a2)
{
  return -[TVSettingsTCCInfo allowAccess](a2, "allowAccess");
}

id sub_100085CA4()
{
  if (qword_1001E1900 != -1) {
    dispatch_once(&qword_1001E1900, &stru_1001920F8);
  }
  return (id)qword_1001E18F8;
}

uint64_t sub_100086334(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 32LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10008634C(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 33LL) = *(_BYTE *)(result + 40);
  return result;
}

void sub_100086464(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "CrossAppTrackingFacade");
  id v2 = (void *)qword_1001E18F8;
  qword_1001E18F8 = (uint64_t)v1;
}

void sub_1000864D4(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[TVSPreferences preferencesWithDomain:]( &OBJC_CLASS___TVSPreferences,  "preferencesWithDomain:",  @"com.apple.TVSettings"));
  id v2 = (void *)qword_1001E1908;
  qword_1001E1908 = v1;
}

void sub_100086678(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "locationServicesEnabled") ^ 1);
}

id sub_1000866BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 title]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 explanatoryText]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 allowedAccessTypes]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem multiValueItemWithTitle:description:representedObject:keyPath:availableValues:]( &OBJC_CLASS___TSKSettingItem,  "multiValueItemWithTitle:description:representedObject:keyPath:availableValues:",  v5,  v6,  v4,  @"accessType",  v7));

  [v8 setUpdateBlock:*(void *)(a1 + 40)];
  [v8 setLocalizedValueFormatter:*(void *)(a1 + 32)];
  return v8;
}

void sub_1000875AC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, id a40)
{
}

void sub_10008762C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v7 = a2;
  id v4 = [v3 state];
  if (*(_BYTE *)(a1 + 40)) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = v4 == 0LL;
  }
  uint64_t v6 = !v5;
  [v7 setHidden:v6];
}

void sub_100087680(uint64_t a1, void *a2)
{
  id v6 = a2;
  unint64_t v3 = +[TVSettingsBluetoothFacade numberOfConnectedRemotes]( &OBJC_CLASS___TVSettingsBluetoothFacade,  "numberOfConnectedRemotes");
  if (*(_BYTE *)(a1 + 40)) {
    BOOL v4 = v3 > 1;
  }
  else {
    BOOL v4 = 1;
  }
  else {
    uint64_t v5 = 1LL;
  }
  [v6 setHidden:v5];
}

id sub_1000876F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _makeDeviceNameChildViewController]);

  return v2;
}

void sub_10008772C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  if (*(_BYTE *)(a1 + 40))
  {
    uint64_t v4 = 1LL;
  }

  else
  {
    uint64_t v4 = [*(id *)(a1 + 32) isConnected] ^ 1;
    id v3 = v5;
  }

  [v3 setHidden:v4];
}

void sub_100087780(uint64_t a1, void *a2)
{
  id v6 = a2;
  unint64_t v3 = +[TVSettingsBluetoothFacade numberOfConnectedRemotes]( &OBJC_CLASS___TVSettingsBluetoothFacade,  "numberOfConnectedRemotes");
  if (*(_BYTE *)(a1 + 40)) {
    BOOL v4 = v3 > 1;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    id v5 = 0LL;
  }
  else {
    id v5 = [*(id *)(a1 + 32) isConnected];
  }
  [v6 setHidden:v5];
}

void sub_1000877E8(id a1, TSKSettingItem *a2, id a3)
{
  unint64_t v3 = a2;
  -[TSKSettingItem setEnabled:](v3, "setEnabled:", 0LL);
  uint64_t v4 = TSKLocString(@"SoundProfileSettingNotAvailableValue");
  id v5 = (id)objc_claimAutoreleasedReturnValue(v4);
  -[TSKSettingItem setLocalizedValue:](v3, "setLocalizedValue:", v5);
}

void sub_100087840(id a1, TSKSettingItem *a2, id a3)
{
  -[TSKSettingItem setHidden:](a2, "setHidden:", a3 == 0LL);
}

void sub_100087850(id a1, TSKSettingItem *a2, id a3)
{
  -[TSKSettingItem setHidden:](a2, "setHidden:", a3 == 0LL);
}

void sub_100087860(id a1, TSKSettingItem *a2, id a3)
{
  -[TSKSettingItem setHidden:](a2, "setHidden:", a3 == 0LL);
}

void sub_100087870(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v4 = a2;
  id v7 = v4;
  if (a3)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v4, "representedObject"));
    -[TSKSettingItem setHidden:](v7, "setHidden:", [v5 isConnected] ^ 1);

    id v6 = (TSKSettingItem *)v5;
  }

  else
  {
    -[TSKSettingItem setHidden:](v4, "setHidden:", 1LL);
    id v6 = v7;
  }
}

void sub_1000878DC(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v4 = a2;
  id v7 = v4;
  if (a3)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v4, "representedObject"));
    -[TSKSettingItem setHidden:](v7, "setHidden:", [v5 isConnected] ^ 1);

    id v6 = (TSKSettingItem *)v5;
  }

  else
  {
    -[TSKSettingItem setHidden:](v4, "setHidden:", 1LL);
    id v6 = v7;
  }
}

void sub_100087948(uint64_t a1, void *a2, void *a3)
{
  id v13 = a2;
  id v5 = a3;
  [v5 doubleValue];
  double v7 = v6 / 100.0;
  if (v7 > 1.0) {
    double v7 = 1.0;
  }
  id v8 = *(void **)(a1 + 32);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", fmax(v7, 0.0)));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 stringFromNumber:v9]);
  [v13 setLocalizedValue:v10];

  unint64_t v11 = (unint64_t)[v5 integerValue];
  if ((v11 & 0x8000000000000000LL) != 0)
  {
    [v13 setHidden:1];
  }

  else
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v13 representedObject]);
    objc_msgSend(v13, "setHidden:", objc_msgSend(v12, "isConnected") ^ 1);
  }
}

void sub_100087A38(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v12 = a2;
  id v4 = a3;
  if ([v4 integerValue])
  {
    uint64_t v5 = (uint64_t)[v4 integerValue];
    double v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"%ld",  [v4 integerValue]));
    if (v5 > -85)
    {
      if (v5 > -70) {
        double v7 = @"BluetothInfoRSSIStrongValue";
      }
      else {
        double v7 = @"BluetothInfoRSSIMediumValue";
      }
    }

    else
    {
      double v7 = @"BluetothInfoRSSIWeakValue";
    }

    uint64_t v8 = TSKLocString(v7);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](&OBJC_CLASS___NSString, "localizedStringWithFormat:", v9, v6));
    -[TSKSettingItem setLocalizedValue:](v12, "setLocalizedValue:", v10);
  }

  if (v4)
  {
    unint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v12, "representedObject"));
    -[TSKSettingItem setHidden:](v12, "setHidden:", [v11 isConnected] ^ 1);
  }

  else
  {
    -[TSKSettingItem setHidden:](v12, "setHidden:", 1LL);
  }
}

void sub_100087B68(id a1, TSKSettingItem *a2, id a3)
{
  double v6 = a2;
  unsigned __int8 v4 = +[TVSDevice runningAnInternalBuild](&OBJC_CLASS___TVSDevice, "runningAnInternalBuild");
  if (a3 && (v4 & 1) != 0)
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v6, "representedObject"));
    -[TSKSettingItem setHidden:](v6, "setHidden:", [v5 isConnected] ^ 1);
  }

  else
  {
    -[TSKSettingItem setHidden:](v6, "setHidden:", 1LL);
  }
}

void sub_100087BE0(id a1, TSKSettingItem *a2, id a3)
{
  double v6 = a2;
  unsigned __int8 v4 = +[TVSDevice runningAnInternalBuild](&OBJC_CLASS___TVSDevice, "runningAnInternalBuild");
  if (a3 && (v4 & 1) != 0)
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v6, "representedObject"));
    -[TSKSettingItem setHidden:](v6, "setHidden:", [v5 isConnected] ^ 1);
  }

  else
  {
    -[TSKSettingItem setHidden:](v6, "setHidden:", 1LL);
  }
}

void sub_100087C58(id a1, TSKSettingItem *a2, id a3)
{
  unsigned __int8 v4 = a2;
  if ((+[TVSDevice runningAnInternalBuild](&OBJC_CLASS___TVSDevice, "runningAnInternalBuild") & 1) != 0)
  {
    unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v4, "representedObject"));
    -[TSKSettingItem setHidden:](v4, "setHidden:", [v3 isConnected] ^ 1);
  }

  else
  {
    -[TSKSettingItem setHidden:](v4, "setHidden:", 1LL);
  }
}

void sub_100087F48(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) tableView]);
  [v2 scrollToRowAtIndexPath:*(void *)(a1 + 40) atScrollPosition:1 animated:0];
}

id sub_100088120(uint64_t a1)
{
  v6[0] = @"headset";
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) headsetTypeDescription]);
  v6[1] = @"value";
  v7[0] = v2;
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
  v7[1] = v3;
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  2LL));

  return v4;
}

id sub_10008836C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_1000885D8(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) navigationController]);
  id v2 = [v3 popViewControllerAnimated:1];
}

id sub_1000888F0(uint64_t a1)
{
  uint64_t v5 = @"headset";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _bluetoothDevice]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 headsetTypeDescription]);
  double v6 = v2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v6,  &v5,  1LL));

  return v3;
}

void sub_100088C90(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _bluetoothDevice]);
  [v1 readRSSI];
}

void sub_100088FE4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_100089018(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v6)
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v6 view]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained view]);
    [v10 bounds];
    objc_msgSend(v9, "setFrame:");

    [WeakRetained addChildViewController:v6];
    unint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained view]);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v6 view]);
    [v11 addSubview:v12];

    [v6 didMoveToParentViewController:WeakRetained];
  }

  else
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000F9748((uint64_t)v7);
    }
    [WeakRetained dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_100089128(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissViewControllerAnimated:1 completion:0];
}

id sub_10008960C()
{
  if (qword_1001E1920 != -1) {
    dispatch_once(&qword_1001E1920, &stru_100192430);
  }
  return (id)qword_1001E1918;
}

uint64_t sub_10008964C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000897BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100089C68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, id location)
{
}

void sub_100089C9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = sub_10008960C();
  unsigned __int8 v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained account]);
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138412802;
    unint64_t v11 = v5;
    __int16 v12 = 2048;
    uint64_t v13 = v6;
    __int16 v14 = 2048;
    uint64_t v15 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Update password setting completed successfully. {account=%@, paidSetting=%ld, freeSetting=%ld}",  buf,  0x20u);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100089DC8;
  block[3] = &unk_1001923C0;
  void block[4] = WeakRetained;
  __int128 v9 = *(_OWORD *)(a1 + 40);
  dispatch_async(&_dispatch_main_q, block);
}

id sub_100089DC8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setIsUpdatingAsnFreeSetting:0];
}

void sub_100089E04(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = sub_10008960C();
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained account]);
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 domain]);
    *(_DWORD *)buf = 138413570;
    uint64_t v13 = v7;
    __int16 v14 = 2048;
    uint64_t v15 = v8;
    __int16 v16 = 2048;
    uint64_t v17 = v9;
    __int16 v18 = 2114;
    id v19 = v10;
    __int16 v20 = 2048;
    id v21 = [v3 code];
    __int16 v22 = 2112;
    id v23 = v3;
    _os_log_error_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "Failed to update password setting. {account=%@, paidSetting=%ld, freeSetting=%ld, errorDomain=%{public}@, errorCod e=%ld, error=%@}",  buf,  0x3Eu);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100089F84;
  block[3] = &unk_10018E440;
  void block[4] = WeakRetained;
  dispatch_async(&_dispatch_main_q, block);
}

id sub_100089F84(uint64_t a1)
{
  return [*(id *)(a1 + 32) setIsUpdatingAsnFreeSetting:0];
}

void sub_10008A244(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "AccountsFacadePasswordSetting");
  id v2 = (void *)qword_1001E1918;
  qword_1001E1918 = (uint64_t)v1;
}

void sub_10008A9D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
}

uint64_t sub_10008AA00(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10008AA10(uint64_t a1)
{
}

void sub_10008AA18(uint64_t a1, xpc_object_t object)
{
  xpc_type_t type = xpc_get_type(object);
  if (object == &_xpc_error_connection_interrupted && type == (xpc_type_t)&_xpc_type_error)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8LL);
    uint64_t v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = 0LL;
  }

void sub_10008AB4C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) loadLogFilePaths]);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_10008ABD4;
  v4[3] = &unk_10018E468;
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v2;
  id v3 = v2;
  dispatch_async(&_dispatch_main_q, v4);
}

id sub_10008ABD4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned __int8 v4 = *(void **)(v3 + 8);
  *(void *)(v3 + _Block_object_dispose(va, 8) = v2;

  return [*(id *)(a1 + 32) didChangeValueForKey:@"logFilePaths"];
}

int64_t sub_10008B160(id a1, id a2, id a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a2 lastPathComponent]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 lastPathComponent]);

  id v7 = [v5 localizedCaseInsensitiveCompare:v6];
  return (int64_t)v7;
}

uint64_t sub_10008B218()
{
  if (qword_1001E1930 != -1) {
    dispatch_once(&qword_1001E1930, &stru_1001924B8);
  }
  off_1001DFF88[0] = (uint64_t (*)())dlsym((void *)qword_1001E1928, "setupAWDConnection");
  return off_1001DFF88[0]();
}

uint64_t sub_10008B26C()
{
  if (qword_1001E1930 != -1) {
    dispatch_once(&qword_1001E1930, &stru_1001924B8);
  }
  off_1001DFF90[0] = (uint64_t (*)())dlsym((void *)qword_1001E1928, "teardownAWDConnection");
  return off_1001DFF90[0]();
}

uint64_t sub_10008B2C0(uint64_t a1)
{
  if (qword_1001E1930 != -1) {
    dispatch_once(&qword_1001E1930, &stru_1001924B8);
  }
  off_1001DFF98 = (uint64_t (*)())dlsym((void *)qword_1001E1928, "createDescriptionForMetriclogFile");
  return ((uint64_t (*)(uint64_t))off_1001DFF98)(a1);
}

void sub_10008B328(id a1)
{
  qword_1001E1928 = (uint64_t)dlopen("/usr/lib/libAWDSupport.dylib", 2);
  if (!qword_1001E1928) {
    NSLog(@"### Failed to Soft Link: /usr/lib/libAWDSupport.dylib");
  }
}

void sub_10008B718( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_10008B758(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateCrossAppTrackingItem:v6 value:v5];
}

UIViewController *__cdecl sub_10008B7BC(id a1, TSKSettingItem *a2)
{
  id v2 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  uint64_t v3 = TSKLocString(@"CrossAppTrackingTitle");
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = TSKLocString(@"CrossAppTrackingLearnMoreText");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = [v2 initWithTitle:v4 text:v6];

  return (UIViewController *)v7;
}

id sub_10008B834(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 displayName]);
  uint64_t v6 = TSKLocString(@"CrossAppTrackingAppDescription");
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = TSKLocString(@"CrossAppTrackingAllowAccess");
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  uint64_t v10 = TSKLocString(@"CrossAppTrackingDenyAccess");
  unint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  __int16 v12 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v5,  v7,  v4,  @"allowAccess",  v9,  v11));

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_10008B964;
  v14[3] = &unk_10018E608;
  id v15 = *(id *)(a1 + 32);
  [v12 setUpdateBlock:v14];
  [v12 setMinimizeTruncationOfLocalizedValue:1];

  return v12;
}

void sub_10008B964(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "crossAppTrackingAllowedSwitchEnabled"));
}

id sub_10008BC44(uint64_t a1)
{
  return _[*(id *)(a1 + 32) disallowAccessForAllApps];
}

id sub_10008BC70(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCrossAppTrackingAllowed:0];
}

void sub_10008C2DC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10008C30C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (!a4)
  {
    id v4 = (id *)(a1 + 32);
    id v5 = a2;
    id WeakRetained = objc_loadWeakRetained(v4);
    [WeakRetained _decodeTermsData:v5];
  }

void sub_10008CE38(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v5 = (id)objc_claimAutoreleasedReturnValue(+[TVCKStoreAccountManager sharedInstance](&OBJC_CLASS___TVCKStoreAccountManager, "sharedInstance"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v5 activeAccount]);
  -[TSKSettingItem setHidden:](v3, "setHidden:", v4 == 0LL);
}

TSKSettingItem *__cdecl sub_10008CEA0(id a1, TSKListSettingGroup *a2, PBSAppInfo *a3)
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PBSAppInfo localizedName](v3, "localizedName"));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10008CFD0;
  v13[3] = &unk_1001904D0;
  id v5 = v3;
  __int16 v14 = v5;
  id v15 = v4;
  id v6 = v4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v6,  0LL,  v5,  0LL,  v13));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[PBSAppInfo bundleIdentifier](v5, "bundleIdentifier"));
  [v7 setDeepLinkKey:v8];

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_10008D1A0;
  v11[3] = &unk_10018E608;
  __int16 v12 = v5;
  uint64_t v9 = v5;
  [v7 setUpdateBlock:v11];

  return (TSKSettingItem *)v7;
}

TVSettingsAppBundleViewController *sub_10008CFD0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleIdentifier]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleURL]);
  id v4 = v3;
  if (v3)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 URLByAppendingPathComponent:@"Settings.bundle"]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle bundleWithURL:](&OBJC_CLASS___NSBundle, "bundleWithURL:", v5));

    id v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tvset_dataContainerURL"));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 path]);

    if (v6) {
      BOOL v9 = v8 == 0LL;
    }
    else {
      BOOL v9 = 1;
    }
    if (v9 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      int v13 = 138544130;
      __int16 v14 = v4;
      __int16 v15 = 2114;
      __int16 v16 = v6;
      __int16 v17 = 2114;
      __int16 v18 = v8;
      __int16 v19 = 2112;
      uint64_t v20 = v12;
      _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "App's setting bundle doesn't seem right. {appBundleURL=%{public}@, bundle=%{public}@, containerPath=%{public}@, appInfo=%@}",  (uint8_t *)&v13,  0x2Au);
    }

    uint64_t v10 = objc_alloc_init(&OBJC_CLASS___TVSettingsAppBundleViewController);
    -[TVSettingsAppBundleViewController setSettingsBundle:](v10, "setSettingsBundle:", v6);
    -[TVSettingsAppBundleViewController setPlistName:](v10, "setPlistName:", @"Root");
    -[TVSettingsAppBundleViewController setContainerPath:](v10, "setContainerPath:", v8);
    -[TVSettingsAppBundleViewController setBundleID:](v10, "setBundleID:", v2);
    -[TVSettingsAppBundleViewController setRoot:](v10, "setRoot:", 1LL);
    -[TVSettingsAppBundleViewController setTitle:](v10, "setTitle:", *(void *)(a1 + 40));
  }

  else
  {
    uint64_t v10 = 0LL;
  }

  return v10;
}

void sub_10008D1A0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue([v2 bundleIdentifier]);
  objc_msgSend( v3,  "setHidden:",  +[TVSettingsAppsFacade settingsNeededForBundleID:]( TVSettingsAppsFacade,  "settingsNeededForBundleID:",  v4) ^ 1);
}

id sub_10008D734(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 bundleIdentifier]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_10008DBE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = objc_alloc_init(&OBJC_CLASS___TVCSUserProfilesAnalyticsEditUserOverrideNameEvent);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 homeUserIdentifier]);
    [v4 setIsHomeUser:v5 != 0];

    TVCSUserProfilesAnalyticsSendEvent(v4);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    void v6[2] = sub_10008DCB8;
    v6[3] = &unk_10018E468;
    void v6[4] = *(void *)(a1 + 32);
    id v7 = v3;
    dispatch_async(&_dispatch_main_q, v6);
  }
}

id sub_10008DCB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateWithUserProfile:*(void *)(a1 + 40) postKVONotifications:1];
}

void sub_10008E228(uint64_t a1)
{
  if ([*(id *)(a1 + 40) type])
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) homeUserIdentifier]);
    id v3 = (uint64_t *)(a1 + 32);
    *(_BYTE *)(*(void *)(a1 + 32) + 13LL) = v2 == 0LL;
  }

  else
  {
    id v3 = (uint64_t *)(a1 + 32);
    *(_BYTE *)(*(void *)(a1 + 32) + 13LL) = 1;
  }

  id v39 = [[PBSUserProfileAccountInfo alloc] initWithAccountStore:*(void *)(*(void *)(a1 + 32) + 104) userProfile:*(void *)(a1 + 40)];
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v39 formattedFullName]);
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 32);
  *(void *)(v5 + 32) = v4;

  uint64_t v7 = objc_claimAutoreleasedReturnValue([v39 formattedShortName]);
  uint64_t v8 = *(void *)(a1 + 32);
  BOOL v9 = *(void **)(v8 + 24);
  *(void *)(v8 + 24) = v7;

  *(void *)(*(void *)(a1 + 32) + 88) = objc_msgSend( *(id *)(a1 + 32),  "_groupRecommendationsConsentFromPBSConsent:",  objc_msgSend(*(id *)(a1 + 40), "groupRecommendationsConsent"));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v39 iCloudAccount]);
  *(_BYTE *)(*(void *)(a1 + 32) + 9LL) = v10 != 0LL;
  uint64_t v11 = objc_claimAutoreleasedReturnValue([v10 username]);
  uint64_t v12 = *(void *)(a1 + 32);
  int v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;

  if (*(_BYTE *)(*(void *)(a1 + 32) + 9LL))
  {
    __int16 v14 = (void *)objc_claimAutoreleasedReturnValue(+[AKAccountManager sharedInstance](&OBJC_CLASS___AKAccountManager, "sharedInstance"));
    __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) iCloudAltDSID]);
    __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([v14 authKitAccountWithAltDSID:v15]);
  }

  else
  {
    __int16 v16 = 0LL;
  }

  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v39 iTunesAccount]);
  __int16 v18 = v17;
  uint64_t v19 = *v3;
  if (v17)
  {
    *(_BYTE *)(v19 + 10) = 1;
    uint64_t v20 = objc_claimAutoreleasedReturnValue([v17 username]);
    id v21 = *(void **)(*v3 + 48);
    *(void *)(*v3 + 4_Block_object_dispose(va, 8) = v20;

    __int16 v22 = -[TVSettingsAccountsFacadePasswordSetting initWithAccount:amsBag:]( objc_alloc(&OBJC_CLASS___TVSettingsAccountsFacadePasswordSetting),  "initWithAccount:amsBag:",  v18,  *(void *)(*v3 + 96));
    id v23 = *(void **)(*v3 + 80);
    *(void *)(*v3 + 80) = v22;
  }

  else
  {
    *(_BYTE *)(v19 + 10) = 0;
    id v24 = *(void **)(*v3 + 48);
    *(void *)(*v3 + 4_Block_object_dispose(va, 8) = 0LL;

    id v23 = *(void **)(*v3 + 80);
    *(void *)(*v3 + 80) = 0LL;
  }

  if ((_os_feature_enabled_impl("UserProfiles", "loreto") & 1) == 0)
  {
    *(_BYTE *)(*(void *)(a1 + 32) + 14) = [*(id *)(a1 + 40) type] != 0;
    if ([*(id *)(a1 + 40) type])
    {
      id v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) homeUserIdentifier]);
      *(_BYTE *)(*(void *)(a1 + 32) + 15LL) = v25 == 0LL;
    }

    else
    {
      *(_BYTE *)(*v3 + 15) = 1;
    }
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v39 gameCenterAccount]);
  *(_BYTE *)(*v3 + 11) = v26 != 0LL;
  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v39 gameCenterAccount]);
  uint64_t v28 = objc_claimAutoreleasedReturnValue([v27 username]);
  __int16 v29 = *(void **)(*v3 + 56);
  *(void *)(*v3 + 56) = v28;

  id v30 = (_BYTE *)*v3;
  char v31 = *(_BYTE *)(*v3 + 9);
  if (v31)
  {
    char v31 = v30[10];
    if (v31) {
      char v31 = v30[11] != 0;
    }
  }

  v30[12] = v31;
  uint64_t v32 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  id v33 = (void *)objc_claimAutoreleasedReturnValue([v10 identifier]);
  -[NSMutableSet bs_safeAddObject:](v32, "bs_safeAddObject:", v33);

  __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v18 identifier]);
  -[NSMutableSet bs_safeAddObject:](v32, "bs_safeAddObject:", v34);

  __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v26 identifier]);
  -[NSMutableSet bs_safeAddObject:](v32, "bs_safeAddObject:", v35);

  if (v16)
  {
    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v16 identifier]);
    -[NSMutableSet bs_safeAddObject:](v32, "bs_safeAddObject:", v36);
  }

  id v37 = -[NSMutableSet copy](v32, "copy");
  id v38 = *(void **)(*v3 + 64);
  *(void *)(*v3 + 64) = v37;
}

void sub_10008E79C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "TVSettingsUser");
  id v2 = (void *)qword_1001E1940;
  qword_1001E1940 = (uint64_t)v1;
}

void sub_10008EB98(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138543618;
      uint64_t v8 = v6;
      __int16 v9 = 2048;
      uint64_t v10 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Finished uninstalling or offloading application. {bundleIdentifier=%{public}@, disposition=%lu}",  (uint8_t *)&v7,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1000F9A38(a1, (uint64_t)v5);
  }
}

void sub_10008ED54(_Unwind_Exception *a1)
{
}

BOOL sub_10008ED70(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 appData]);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472LL;
  v18[2] = sub_10008EF30;
  v18[3] = &unk_1001925F8;
  uint64_t v6 = v4;
  uint64_t v19 = v6;
  [v5 enumerateKeysAndObjectsUsingBlock:v18];

  int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSSortDescriptor sortDescriptorWithKey:ascending:]( &OBJC_CLASS___NSSortDescriptor,  "sortDescriptorWithKey:ascending:",  @"size",  0LL));
  uint64_t v20 = v7;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v20, 1LL));
  -[NSMutableArray sortUsingDescriptors:](v6, "sortUsingDescriptors:", v8);

  BOOL v9 = [v3 status] == 0;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10008F2DC;
  block[3] = &unk_100192620;
  objc_copyWeak(&v16, (id *)(a1 + 32));
  BOOL v17 = v9;
  __int16 v14 = v6;
  id v15 = v3;
  id v10 = v3;
  uint64_t v11 = v6;
  dispatch_async(&_dispatch_main_q, block);

  objc_destroyWeak(&v16);
  return v9;
}

void sub_10008EF30(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 intersectsSet:qword_1001E1950])
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      int v18 = 138412290;
      id v19 = v5;
      int v7 = "Ignoring space calculation for app (%@)";
LABEL_7:
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  v7,  (uint8_t *)&v18,  0xCu);
    }
  }

  else if ((unint64_t)[v5 count] < 2)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 anyObject]);
    BOOL v9 = sub_10008F154(v8);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    uint64_t v11 = v10;
    if (v10 && ([v10 applicationHasMIDBasedSINF] & 1) == 0)
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  (char *)[v6 fixedSize] + (void)objc_msgSend(v6, "dataSize")));
      int v13 = objc_alloc(&OBJC_CLASS___TVSettingsUsageAppRecord);
      __int16 v14 = (void *)objc_claimAutoreleasedReturnValue([v11 localizedName]);
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v11 shortVersionString]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 vendorName]);
      BOOL v17 = -[TVSettingsUsageAppRecord initWithName:bundleIdentifier:bundleVersion:vendor:size:]( v13,  "initWithName:bundleIdentifier:bundleVersion:vendor:size:",  v14,  v8,  v15,  v16,  v12);

      [*(id *)(a1 + 32) addObject:v17];
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    int v18 = 138412290;
    id v19 = v5;
    int v7 = "Ignoring space calculation for shared container (%@)";
    goto LABEL_7;
  }
}

LSApplicationRecord *sub_10008F154(void *a1)
{
  id v1 = a1;
  id v9 = 0LL;
  uint64_t v2 = -[LSApplicationRecord initWithBundleIdentifier:allowPlaceholder:error:]( objc_alloc(&OBJC_CLASS___LSApplicationRecord),  "initWithBundleIdentifier:allowPlaceholder:error:",  v1,  1LL,  &v9);
  id v3 = v9;
  if (v3)
  {
    uint64_t v4 = v3;
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v11 = v1;
      __int16 v12 = 2112;
      id v13 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Error fetching application record for bundle %@ (error %@)",  buf,  0x16u);
    }

    id v8 = 0LL;
    id v5 = -[LSApplicationRecord initWithBundleIdentifierOfSystemPlaceholder:error:]( objc_alloc(&OBJC_CLASS___LSApplicationRecord),  "initWithBundleIdentifierOfSystemPlaceholder:error:",  v1,  &v8);
    id v6 = v8;

    if (v6)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        id v11 = v1;
        __int16 v12 = 2112;
        id v13 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Error fetching placeholder record for bundle %@ (error %@)",  buf,  0x16u);
      }
    }
  }

  else
  {
    id v5 = v2;
  }

  return v5;
}

void sub_10008F2DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setLoadingInstalledApps:*(_BYTE *)(a1 + 56) == 0];
  [WeakRetained setInstalledUserApps:*(void *)(a1 + 32)];
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [*(id *)(a1 + 40) diskUsed]));
  [WeakRetained setUsedAppStorage:v2];
}

void sub_10008F3F0(uint64_t a1)
{
  v15[0] = 0LL;
  v15[1] = v15;
  v15[2] = 0x2020000000LL;
  *(double *)&v15[3] = (double)(unint64_t)+[TVSDiskSpaceUtility totalApplicationUsage]( &OBJC_CLASS___TVSDiskSpaceUtility,  "totalApplicationUsage");
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSAppInfoController sharedInstance](&OBJC_CLASS___PBSAppInfoController, "sharedInstance"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 appInfos]);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10008F5F0;
  v13[3] = &unk_100192670;
  id v5 = v2;
  __int16 v14 = v5;
  [v4 enumerateKeysAndObjectsUsingBlock:v13];

  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSSortDescriptor sortDescriptorWithKey:ascending:]( &OBJC_CLASS___NSSortDescriptor,  "sortDescriptorWithKey:ascending:",  @"size",  0LL));
  id v16 = v6;
  int v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v16, 1LL));
  -[NSMutableArray sortUsingDescriptors:](v5, "sortUsingDescriptors:", v7);

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10008F708;
  v9[3] = &unk_100192698;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v10 = v5;
  id v11 = v15;
  id v8 = v5;
  dispatch_async(&_dispatch_main_q, v9);

  objc_destroyWeak(&v12);
  _Block_object_dispose(v15, 8);
}

void sub_10008F5CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_10008F5F0(uint64_t a1, uint64_t a2, void *a3)
{
  id v15 = a3;
  BOOL v4 = [v15 applicationType] == (id)2;
  id v5 = v15;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "tvset_applicationRecord"));
    int v7 = v6;
    if (v6 && ([v6 applicationHasMIDBasedSINF] & 1) == 0)
    {
      id v8 = objc_alloc(&OBJC_CLASS___TVSettingsUsageAppRecord);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 localizedName]);
      id v10 = (void *)objc_claimAutoreleasedReturnValue([v15 bundleIdentifier]);
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 shortVersionString]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 diskUsage]);
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 staticUsage]);
      __int16 v14 = -[TVSettingsUsageAppRecord initWithName:bundleIdentifier:bundleVersion:vendor:size:]( v8,  "initWithName:bundleIdentifier:bundleVersion:vendor:size:",  v9,  v10,  v11,  0LL,  v13);

      [*(id *)(a1 + 32) addObject:v14];
    }

    id v5 = v15;
  }
}

void sub_10008F708(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setLoadingInstalledApps:0];
  [WeakRetained setInstalledUserApps:*(void *)(a1 + 32)];
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL)));
  [WeakRetained setUsedAppStorage:v2];
}

void sub_10008FC14(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:kTCCServiceBluetoothPeripheral];
  uint64_t v2 = (void *)qword_1001E1958;
  qword_1001E1958 = (uint64_t)v1;
}

void sub_10008FCC0(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:kTCCServiceBluetoothAlways];
  uint64_t v2 = (void *)qword_1001E1968;
  qword_1001E1968 = (uint64_t)v1;
}

void sub_10008FEA0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_10008FEC8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) allowedRemotesFormatter]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 stringForObjectValue:v4]);

  int v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) allowedRemotesDescriptionFormatter]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 stringForObjectValue:v4]);

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v6,  v8,  v4,  0LL,  WeakRetained,  "_selectedItem:"));

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10008FFFC;
  v13[3] = &unk_10018ED70;
  id v14 = *(id *)(a1 + 32);
  id v15 = v4;
  id v11 = v4;
  [v10 setUpdateBlock:v13];

  return v10;
}

void sub_10008FFFC(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v3 secureAccessoryAllowedRemotes]));
  else {
    uint64_t v5 = 0LL;
  }
  [v4 setAccessoryTypes:v5];
}

void sub_100090328( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100090354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _selectedAllowedRemotes:*(void *)(a1 + 40)];
  }

void sub_100090770(uint64_t a1, void *a2)
{
  id v7 = a2;
  if (*(_BYTE *)(a1 + 40))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[TVSInternationalization systemLanguage](&OBJC_CLASS___TVSInternationalization, "systemLanguage"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v7 representedObject]);
    unsigned int v5 = [v3 isEqual:v4];

    if (v5) {
      uint64_t v6 = 2LL;
    }
    else {
      uint64_t v6 = 0LL;
    }
    [v7 setAccessoryTypes:v6];
  }

  [v7 setLocalizedValue:*(void *)(a1 + 32)];
}

NSString *__cdecl sub_100090B94(id a1, id a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSInternationalization displayNameForLanguage:displayLanguage:]( &OBJC_CLASS___TVSInternationalization,  "displayNameForLanguage:displayLanguage:",  v2,  v2));
  id v4 = v3;
  if (!v3) {
    id v3 = v2;
  }
  unsigned int v5 = v3;

  return v5;
}

NSString *__cdecl sub_100090C20(id a1, id a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSInternationalization displayNameForLanguage:displayLanguage:]( &OBJC_CLASS___TVSInternationalization,  "displayNameForLanguage:displayLanguage:",  v2,  0LL));
  id v4 = v3;
  if (!v3) {
    id v3 = v2;
  }
  unsigned int v5 = v3;

  return v5;
}

NSString *sub_100090DC4(void *a1)
{
  id v1 = a1;
  [v1 resolution];
  unint64_t v3 = llround(v2);
  [v1 resolution];
  unint64_t v5 = llround(v4);
  [v1 refreshRate];
  uint64_t v7 = v6;

  return +[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%ldx%ld(%.5g)", v3, v5, v7);
}

void sub_100091108(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  double v2 = (void *)qword_1001E1978;
  qword_1001E1978 = (uint64_t)v1;
}

void sub_100091BF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

void sub_100091C18(uint64_t a1, void *a2)
{
  id v13 = a2;
  if (![v13 isVirtual])
  {
    [*(id *)(a1 + 40) canHandleHighBandwidthModes];
    goto LABEL_6;
  }

  [*(id *)(a1 + 32) resolution];
  double v4 = v3;
  double v6 = v5;
  id v7 = [v13 resolution];
  int v10 = PBSDisplayResolutionEqualToResolution(v7, v4, v6, v8, v9);
  if ([*(id *)(a1 + 40) canHandleHighBandwidthModes])
  {
    if (!v10) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }

  if (v10 && ([v13 isAboveBandwidthThreshold] & 1) == 0)
  {
LABEL_9:
    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) lastObject]);
    unsigned int v12 = [v11 isEqual:v13];

    if (v12) {
      ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);
    }
    else {
      [*(id *)(a1 + 48) addObject:v13];
    }
  }

uint64_t sub_100091D08(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) containsObject:a2] ^ 1;
}

id sub_1000926C8(id a1, NSString *a2)
{
  return (id)PBSLocalizedStringForIdentifier(a2);
}

id sub_100092738(id a1, NSString *a2)
{
  uint64_t v2 = PBSLocalizedStringForIdentifier(a2);
  double v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  double v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@ - Desc", v3));

  return v4;
}

uint64_t sub_100092C70(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (([*(id *)(a1 + 32) canHandleHighBandwidthModes] & 1) != 0
    || ![v5 isAboveBandwidthThreshold])
  {
    uint64_t v8 = 1LL;
  }

  else
  {
    while (1)
    {
      if (++a3 >= (unint64_t)[*(id *)(a1 + 40) count])
      {
        int v9 = 0;
        goto LABEL_13;
      }

      double v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectAtIndexedSubscript:a3]);
      if (!objc_msgSend(v5, "tvs_isEqualResolutionAndRefreshRate:", v6)
        || (id v7 = [v6 dynamicRange], v7 != objc_msgSend(v5, "dynamicRange")))
      {
        int v9 = 0;
        goto LABEL_12;
      }
    }

    int v9 = 1;
LABEL_12:

LABEL_13:
    uint64_t v8 = v9 ^ 1u;
  }

  return v8;
}

uint64_t sub_100092EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

void sub_100092EE8(id a1, PBSDisplayManagerUpdateRequest *a2)
{
}

void sub_100092FB8(id a1, PBSDisplayManagerUpdateRequest *a2)
{
  uint64_t v2 = a2;
  -[PBSDisplayManagerUpdateRequest setTreatDisplayModeAsFallback:](v2, "setTreatDisplayModeAsFallback:", 1LL);
  -[PBSDisplayManagerUpdateRequest setWriteDisplayModeToDisk:](v2, "setWriteDisplayModeToDisk:", 1LL);
}

int64_t sub_100093410(id a1, PBSDisplayMode *a2, PBSDisplayMode *a3)
{
  double v4 = a2;
  id v5 = a3;
  -[PBSDisplayMode resolution](v4, "resolution");
  double v7 = v6;
  -[PBSDisplayMode resolution](v5, "resolution");
  if (v7 > v8) {
    goto LABEL_9;
  }
  -[PBSDisplayMode resolution](v4, "resolution");
  double v10 = v9;
  -[PBSDisplayMode resolution](v5, "resolution");
  if (v10 >= v11)
  {
    -[PBSDisplayMode resolution](v4, "resolution");
    double v13 = v12;
    -[PBSDisplayMode resolution](v5, "resolution");
    if (v13 > v14) {
      goto LABEL_9;
    }
    -[PBSDisplayMode resolution](v4, "resolution");
    double v16 = v15;
    -[PBSDisplayMode resolution](v5, "resolution");
    if (v16 >= v17)
    {
      -[PBSDisplayMode refreshRate](v4, "refreshRate");
      double v19 = v18;
      -[PBSDisplayMode refreshRate](v5, "refreshRate");
      if (v19 <= v20)
      {
        -[PBSDisplayMode refreshRate](v4, "refreshRate");
        double v22 = v21;
        -[PBSDisplayMode refreshRate](v5, "refreshRate");
        if (v22 < v23) {
          goto LABEL_7;
        }
        id v25 = -[PBSDisplayMode dynamicRange](v4, "dynamicRange");
        if ((uint64_t)v25 >= (uint64_t)-[PBSDisplayMode dynamicRange](v5, "dynamicRange"))
        {
          id v27 = -[PBSDisplayMode dynamicRange](v4, "dynamicRange");
          int64_t v24 = (uint64_t)v27 > (uint64_t)-[PBSDisplayMode dynamicRange](v5, "dynamicRange");
          goto LABEL_10;
        }
      }

void sub_100093548(uint64_t a1, void *a2)
{
  id v12 = a2;
  if (objc_msgSend(v12, "tvs_isCommonResolutionByShowing4KModes:", *(unsigned __int8 *)(a1 + 48)))
  {
    unsigned int v3 = objc_msgSend(*(id *)(a1 + 32), "tvs_foundColorModeForDisplayMode:", v12);
    id v4 = [v12 dynamicRange];
    unint64_t v5 = (unint64_t)v4 - 538423554;
    if (v4 == (id)538423557) {
      unsigned int v6 = 1;
    }
    else {
      unsigned int v6 = BYTE2(v3);
    }
    if (v4 == (id)538423556) {
      char v7 = 1;
    }
    else {
      char v7 = BYTE1(v3);
    }
    if (v4 == (id)538423556) {
      unsigned int v6 = BYTE2(v3);
    }
    BOOL v8 = v5 >= 2;
    if (v5 >= 2) {
      unsigned __int8 v9 = v7;
    }
    else {
      unsigned __int8 v9 = BYTE1(v3);
    }
    if (v8) {
      unsigned __int8 v10 = v3;
    }
    else {
      unsigned __int8 v10 = 1;
    }
    if (v8) {
      uint64_t v11 = v6;
    }
    else {
      uint64_t v11 = BYTE2(v3);
    }
    objc_msgSend( *(id *)(a1 + 32),  "tvs_setFoundColorMode:forDisplayMode:",  ((unint64_t)v9 << 8) | (v11 << 16) | v10,  v12);
    [*(id *)(a1 + 40) addObject:v12];
  }
}

void sub_10009362C(uint64_t a1, void *a2)
{
  id v3 = a2;
}

void sub_100093678(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v34 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v33 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v30 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int16 v29 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v32 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  char v31 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v28 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  unint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v27 = a1;
  unsigned int v6 = [v3 isEqualToArray:*(void *)(a1 + 32)];
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  id v7 = v3;
  id v8 = [v7 countByEnumeratingWithState:&v35 objects:v39 count:16];
  if (!v8) {
    goto LABEL_28;
  }
  id v9 = v8;
  uint64_t v10 = *(void *)v36;
  do
  {
    uint64_t v11 = 0LL;
    do
    {
      if (*(void *)v36 != v10) {
        objc_enumerationMutation(v7);
      }
      id v12 = *(void **)(*((void *)&v35 + 1) + 8LL * (void)v11);
      [v12 refreshRate];
      if (v13 <= 40.0)
      {
        double v14 = v5;
        if ((v6 & 1) != 0) {
          goto LABEL_23;
        }
        if (fabs(v13 + -24.0) < 0.1)
        {
          BOOL v15 = PBSDisplayRefreshRateEqualToRefreshRate(v5) == 0;
          double v17 = v31;
          double v16 = v32;
          goto LABEL_20;
        }

        if (fabs(v13 + -30.0) < 0.1)
        {
          BOOL v15 = PBSDisplayRefreshRateEqualToRefreshRate(v5) == 0;
          double v17 = v29;
          double v16 = v30;
LABEL_20:
          if (v15) {
            double v14 = v16;
          }
          else {
            double v14 = v17;
          }
          goto LABEL_23;
        }

        double v14 = v28;
        if (fabs(v13 + -25.0) >= 0.1) {
          double v14 = v5;
        }
      }

      else if (fabs(v13 + -60.0) >= 0.1)
      {
        if (fabs(v13 + -50.0) >= 0.1) {
          double v14 = v5;
        }
        else {
          double v14 = v34;
        }
      }

      else
      {
        double v14 = v4;
        if ((v6 & 1) == 0)
        {
          if ((PBSDisplayRefreshRateEqualToRefreshRate(v4) & 1) != 0) {
            double v14 = v33;
          }
          else {
            double v14 = v4;
          }
        }
      }

LABEL_23:
      -[NSMutableArray addObject:](v14, "addObject:", v12);
      uint64_t v11 = (char *)v11 + 1;
    }

    while (v9 != v11);
    id v18 = [v7 countByEnumeratingWithState:&v35 objects:v39 count:16];
    id v9 = v18;
  }

  while (v18);
LABEL_28:

  double v19 = *(void **)(v27 + 40);
  if (v6)
  {
    [v19 setCommonResolutionsModes60Hz:v4];
    double v20 = v34;
    [*(id *)(v27 + 40) setCommonResolutionsModes50Hz:v34];
    [*(id *)(v27 + 40) setCommonResolutionsModesOthers:v5];
    double v22 = v32;
    double v21 = v33;
    int64_t v24 = v29;
    double v23 = v30;
    id v25 = v31;
    uint64_t v26 = v28;
  }

  else
  {
    [v19 setOtherResolutionsModes60Hz:v4];
    [*(id *)(v27 + 40) setOtherResolutionsModesExact60Hz:v33];
    double v23 = v30;
    [*(id *)(v27 + 40) setOtherResolutionsModes30Hz:v30];
    int64_t v24 = v29;
    [*(id *)(v27 + 40) setOtherResolutionsModesExact30Hz:v29];
    double v22 = v32;
    [*(id *)(v27 + 40) setOtherResolutionsModes24Hz:v32];
    id v25 = v31;
    [*(id *)(v27 + 40) setOtherResolutionsModesExact24Hz:v31];
    double v20 = v34;
    [*(id *)(v27 + 40) setOtherResolutionsModes50Hz:v34];
    uint64_t v26 = v28;
    [*(id *)(v27 + 40) setOtherResolutionsModes25Hz:v28];
    double v21 = v33;
    [*(id *)(v27 + 40) setOtherResolutionsModesOthers:v5];
  }
}
}

void sub_1000944F8( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

id sub_1000946FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  unint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedName]);
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedDescription]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  v6,  v4,  @"selected",  *(void *)(a1 + 32),  "_didSelectOptionItem:"));

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000947E8;
  v10[3] = &unk_10018F7C8;
  id v11 = v4;
  id v8 = v4;
  [v7 setUpdateBlock:v10];

  return v7;
}

void sub_1000947E8(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  else {
    uint64_t v5 = 0LL;
  }
  [v7 setAccessoryTypes:v5];
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localizedAccessoryText]);
  [v7 setLocalizedValue:v6];

  objc_msgSend(v7, "setEnabled:", objc_msgSend(*(id *)(a1 + 32), "disabled") ^ 1);
}

void sub_1000962C0(id a1)
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[UIFontDescriptor preferredFontDescriptorWithTextStyle:]( &OBJC_CLASS___UIFontDescriptor,  "preferredFontDescriptorWithTextStyle:",  UIFontTextStyleTitle1));
  id v1 = (void *)objc_claimAutoreleasedReturnValue([v4 fontDescriptorWithSymbolicTraits:2]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue(+[UIFont fontWithDescriptor:size:](&OBJC_CLASS___UIFont, "fontWithDescriptor:size:", v1, 0.0));
  id v3 = (void *)qword_1001E1988;
  qword_1001E1988 = v2;
}

void sub_100096384(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[UIFont preferredFontForTextStyle:]( &OBJC_CLASS___UIFont,  "preferredFontForTextStyle:",  UIFontTextStyleHeadline));
  uint64_t v2 = (void *)qword_1001E1998;
  qword_1001E1998 = v1;
}

void sub_100096728(uint64_t a1)
{
  if (a1)
  {
    __int128 v37 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) userProfilesSnapshot]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 allUserProfiles]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 allValues]);

    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    id obj = v5;
    id v6 = [obj countByEnumeratingWithState:&v40 objects:v50 count:16];
    if (v6)
    {
      id v8 = v6;
      id v39 = 0LL;
      id v9 = 0LL;
      uint64_t v10 = *(void *)v41;
      *(void *)&__int128 v7 = 138543874LL;
      __int128 v35 = v7;
      do
      {
        for (i = 0LL; i != v8; i = (char *)i + 1)
        {
          if (*(void *)v41 != v10) {
            objc_enumerationMutation(obj);
          }
          id v12 = *(void **)(*((void *)&v40 + 1) + 8LL * (void)i);
          double v13 = *(void **)(a1 + 120);
          double v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "identifier", v35));
          BOOL v15 = (TVSettingsUser *)objc_claimAutoreleasedReturnValue([v13 objectForKeyedSubscript:v14]);

          if (v15) {
            -[TVSettingsUser updateWithUserProfile:](v15, "updateWithUserProfile:", v12);
          }
          else {
            BOOL v15 = -[TVSettingsUser initWithUserProfile:amsBag:]( objc_alloc(&OBJC_CLASS___TVSettingsUser),  "initWithUserProfile:amsBag:",  v12,  *(void *)(a1 + 72));
          }
          double v16 = (void *)objc_claimAutoreleasedReturnValue([v12 identifier]);
          -[NSMutableDictionary setObject:forKeyedSubscript:](v2, "setObject:forKeyedSubscript:", v15, v16);

          id v17 = [v12 type];
          if (v17 == (id)1)
          {
            -[NSMutableArray addObject:](v37, "addObject:", v15);
          }

          else if (v17)
          {
            id v21 = sub_100097028();
            double v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
            {
              id v24 = [v12 type];
              *(_DWORD *)buf = 134218242;
              id v45 = v24;
              __int16 v46 = 2112;
              uint64_t v47 = (uint64_t)v12;
              _os_log_error_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "Unrecognized profile type, ignoring profile. {type=%ld, profile=%@}",  buf,  0x16u);
            }
          }

          else
          {
            if (v9)
            {
              id v18 = sub_100097028();
              double v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
              if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT))
              {
                __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsUser identifier](v9, "identifier"));
                uint64_t v25 = objc_claimAutoreleasedReturnValue(-[TVSettingsUser identifier](v15, "identifier"));
                *(_DWORD *)buf = v35;
                id v45 = v36;
                __int16 v46 = 2114;
                uint64_t v47 = v25;
                uint64_t v26 = (void *)v25;
                __int16 v48 = 2112;
                v49 = v12;
                _os_log_fault_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_FAULT,  "Another user was already the primary. Previous primary user will be lost. {previousPrimaryUserIdentifi er=%{public}@, newPrimaryUserIdentifier=%{public}@, profile=%@}",  buf,  0x20u);
              }
            }

            double v20 = v15;

            id v9 = v20;
          }

          if ([v12 isSelected])
          {
            double v23 = v15;

            id v39 = v23;
          }
        }

        id v8 = [obj countByEnumeratingWithState:&v40 objects:v50 count:16];
      }

      while (v8);
    }

    else
    {
      id v39 = 0LL;
      id v9 = 0LL;
    }

    id v27 = -[NSMutableDictionary copy](v2, "copy");
    uint64_t v28 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = v27;

    sub_100097C58(a1);
    [(id)a1 willChangeValueForKey:@"primaryUser"];
    [(id)a1 willChangeValueForKey:@"guestUsers"];
    [(id)a1 willChangeValueForKey:@"selectedUser"];
    [(id)a1 willChangeValueForKey:@"canAddPrimaryUser"];
    [(id)a1 willChangeValueForKey:@"canAddNewGuestUser"];
    __int16 v29 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v9;
    id v30 = v9;

    id v31 = -[NSMutableArray copy](v37, "copy");
    uint64_t v32 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v31;

    id v33 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v39;
    __int128 v34 = v39;

    *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v30 == 0LL;
    *(_BYTE *)(a1 + 9) = [*(id *)(a1 + 48) canAddNewUserWithType:1];
    [(id)a1 didChangeValueForKey:@"primaryUser"];
    [(id)a1 didChangeValueForKey:@"guestUsers"];
    [(id)a1 didChangeValueForKey:@"selectedUser"];
    [(id)a1 didChangeValueForKey:@"canAddPrimaryUser"];
    [(id)a1 didChangeValueForKey:@"canAddNewGuestUser"];
  }

void sub_100096BB0(uint64_t a1)
{
  if (a1)
  {
    id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) suggestedUserProfileSnapshot]);
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v5 activeSuggestedUserProfiles]);
    uint64_t v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "bs_map:", &stru_1001929F0));
    [(id)a1 willChangeValueForKey:@"suggestedUsers"];
    id v4 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v3;

    [(id)a1 didChangeValueForKey:@"suggestedUsers"];
  }

void *sub_100096D28(void *result, uint64_t a2)
{
  if (result)
  {
    uint64_t v3 = result;
    if (result[10] != a2)
    {
      [result willChangeValueForKey:@"isAddingPrimaryUser"];
      [v3 willChangeValueForKey:@"isAddingGuestUser"];
      v3[10] = a2;
      [v3 didChangeValueForKey:@"isAddingPrimaryUser"];
      return [v3 didChangeValueForKey:@"isAddingGuestUser"];
    }
  }

  return result;
}

id sub_100097028()
{
  if (qword_1001E19B0 != -1) {
    dispatch_once(&qword_1001E19B0, &stru_100192BC0);
  }
  return (id)qword_1001E19A8;
}

void sub_100097068(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (a1)
  {
    id v9 = sub_100097028();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      __int128 v37 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Adding new user... {userProfileType=%ld}",  buf,  0xCu);
    }

    if (_os_feature_enabled_impl("AppleIDSetup", "Sandstone"))
    {
      if (a2) {
        uint64_t v11 = 3LL;
      }
      else {
        uint64_t v11 = 2LL;
      }
      sub_100098064((void *)a1, v11, v7, v8);
    }

    else
    {
      id v12 = -[PBSIgnoreUserProfileAccountNotificationsAssertion initWithIdentifier:]( objc_alloc(&OBJC_CLASS___PBSIgnoreUserProfileAccountNotificationsAssertion),  "initWithIdentifier:",  @"Add User Manually");
      double v13 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = v12;

      [*(id *)(a1 + 104) acquire];
      int v14 = _os_feature_enabled_impl("CoreCDP", "MultiUserManatee") ^ 1;
      if (!a2) {
        LOBYTE(v14) = 0;
      }
      if ((v14 & 1) == 0)
      {
        BOOL v15 = objc_alloc_init(&OBJC_CLASS___CDPTVUIController);
        double v16 = *(void **)(a1 + 136);
        *(void *)(a1 + 136) = v15;
      }

      id v17 = objc_alloc_init(&OBJC_CLASS___AKAppleIDAuthenticationTVContext);
      [v17 setPresentingViewController:v8];
      [v17 setServiceType:1];
      uint64_t v18 = TSKLocString(@"AccountSignInAlertReason");
      double v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      [v17 setReason:v19];

      [v17 setSupportsPiggybacking:1];
      double v20 = -[TVSettingsUserProfileAppleIDAuthenticationController initWithUserProfileAuthenticationType:]( objc_alloc(&OBJC_CLASS___TVSettingsUserProfileAppleIDAuthenticationController),  "initWithUserProfileAuthenticationType:",  0LL);
      objc_initWeak((id *)buf, (id)a1);
      v33[0] = _NSConcreteStackBlock;
      v33[1] = 3221225472LL;
      v33[2] = sub_10009867C;
      v33[3] = &unk_100192AB0;
      objc_copyWeak(v35, (id *)buf);
      v35[1] = a2;
      id v34 = v8;
      id v21 = objc_retainBlock(v33);
      id v22 = sub_100097028();
      double v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_INFO,  "Cleaning up unused accounts before manually adding a new user, if any...",  v32,  2u);
      }

      id v24 = *(void **)(a1 + 128);
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472LL;
      v28[2] = sub_100098D64;
      v28[3] = &unk_100191538;
      uint64_t v25 = v20;
      __int16 v29 = v25;
      id v26 = v17;
      id v30 = v26;
      id v27 = v21;
      id v31 = v27;
      objc_msgSend(v24, "tvsettings_removeAccountsNotUsedByUserProfilesWithCompletion:", v28);

      objc_destroyWeak(v35);
      objc_destroyWeak((id *)buf);
    }
  }
}

void sub_100097398( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id location)
{
}

void sub_1000973BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = sub_100097028();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000F9C80();
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100097518;
    block[3] = &unk_10018EA28;
    void block[4] = *(void *)(a1 + 32);
    id v15 = v5;
    id v16 = *(id *)(a1 + 40);
    dispatch_async(&_dispatch_main_q, block);
  }

  else
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([a2 objectForKeyedSubscript:kUMUserPersonaUniqueStringKey]);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_10009784C;
    v11[3] = &unk_10018EA28;
    id v9 = *(void **)(a1 + 40);
    void v11[4] = *(void *)(a1 + 32);
    id v12 = v8;
    id v13 = v9;
    id v10 = v8;
    dispatch_async(&_dispatch_main_q, v11);
  }
}

void sub_100097518(uint64_t a1)
{
}

void sub_100097528(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!a1) {
    goto LABEL_16;
  }
  id v7 = sub_100097028();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
    sub_1000F9DEC();
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 domain]);
  if (![v9 isEqualToString:AKAppleIDAuthenticationErrorDomain])
  {

    goto LABEL_8;
  }

  id v10 = [v5 code];

  if (v10 != (id)-7003LL)
  {
LABEL_8:
    uint64_t v11 = *(void *)(a1 + 80);
    if (!v11)
    {
      id v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"_isAddingUser != _FacadeIsAddingUserNo"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_1000F9CFC("_finishAddingUserWithError:presentingViewController:", a1, (uint64_t)v21);
      }
      _bs_set_crash_log_message([v21 UTF8String]);
      __break(0);
      JUMPOUT(0x100097844LL);
    }

    BOOL v12 = v11 != 1;
    id v13 = objc_alloc_init(&OBJC_CLASS___TVCSUserProfilesAnalyticsAddUserFailedEvent);
    [v13 setActionType:0];
    [v13 setUserType:v12];
    [v13 setError:v5];
    TVCSUserProfilesAnalyticsSendEvent(v13);
  }

  if (*(_BYTE *)(a1 + 11))
  {
    int v14 = *(void **)(a1 + 88);
    if (v14)
    {
      id v15 = v14;
      id v16 = sub_100097028();
      id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v5 domain]);
        *(_DWORD *)buf = 138544130;
        id v28 = v15;
        __int16 v29 = 2114;
        id v30 = v18;
        __int16 v31 = 2048;
        id v32 = [v5 code];
        __int16 v33 = 2112;
        id v34 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Deleting persona for failed attempt to add user. {personaUniqueString=%{public}@, errorDomain=%{public}@, erro rCode=%ld, error=%@}",  buf,  0x2Au);
      }

      double v19 = (void *)objc_claimAutoreleasedReturnValue(+[UMUserManager sharedManager](&OBJC_CLASS___UMUserManager, "sharedManager"));
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 3221225472LL;
      v25[2] = sub_100099F00;
      v25[3] = &unk_10018EAA0;
      id v26 = v15;
      id v20 = v15;
      [v19 deleteUserPersonaWithPersonaUniqueString:v20 passcodeData:0 completionHandler:v25];
    }
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100099F64;
  block[3] = &unk_10018EA28;
  void block[4] = a1;
  id v23 = v5;
  id v24 = v6;
  dispatch_async(&_dispatch_main_q, block);

LABEL_16:
}

void sub_10009784C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    *(_BYTE *)(v2 + 11) = 1;
    uint64_t v3 = *(void *)(a1 + 32);
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  sub_1000978AC(v3, *(void **)(a1 + 40));
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    sub_100097068(v4, (void *)1, 0LL, *(void **)(a1 + 48));
  }
}

void sub_1000978AC(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 88), a2);
  }
}

void sub_100097A60(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) != 0)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_100097B28;
    v9[3] = &unk_10018E468;
    id v6 = *(void **)(a1 + 40);
    void v9[4] = *(void *)(a1 + 32);
    id v10 = v6;
    dispatch_async(&_dispatch_main_q, v9);
  }

  else
  {
    id v7 = sub_100097028();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000F9E68(a1, v5, v8);
    }
  }
}

void sub_100097B28(uint64_t a1)
{
}

void sub_100097B34(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 40), a2);
  }
}

void sub_100097C58(uint64_t a1)
{
  if (a1 && *(void *)(a1 + 64))
  {
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 120) allValues]);
    id v2 = [obj countByEnumeratingWithState:&v18 objects:v23 count:16];
    if (v2)
    {
      id v3 = v2;
      uint64_t v4 = *(void *)v19;
      do
      {
        for (i = 0LL; i != v3; i = (char *)i + 1)
        {
          if (*(void *)v19 != v4) {
            objc_enumerationMutation(obj);
          }
          id v6 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
          __int128 v14 = 0u;
          __int128 v15 = 0u;
          __int128 v16 = 0u;
          __int128 v17 = 0u;
          id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 accountIdentifiers]);
          id v8 = [v7 countByEnumeratingWithState:&v14 objects:v22 count:16];
          if (v8)
          {
            id v9 = v8;
            uint64_t v10 = 0LL;
            uint64_t v11 = *(void *)v15;
            do
            {
              for (j = 0LL; j != v9; j = (char *)j + 1)
              {
                if (*(void *)v15 != v11) {
                  objc_enumerationMutation(v7);
                }
                v10 += (uint64_t)[*(id *)(a1 + 64) accountItemsCountForAccountWithIdentifier:*(void *)(*((void *)&v14 + 1) + 8 * (void)j)];
              }

              id v9 = [v7 countByEnumeratingWithState:&v14 objects:v22 count:16];
            }

            while (v9);
          }

          else
          {
            uint64_t v10 = 0LL;
          }

          [v6 setBadgeCount:v10];
        }

        id v3 = [obj countByEnumeratingWithState:&v18 objects:v23 count:16];
      }

      while (v3);
    }
  }

void sub_100097EA4(uint64_t a1)
{
}

void sub_100097F3C(uint64_t a1)
{
}

uint64_t sub_100097FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if ((_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v4 + 16))(v4, 1LL, *(void *)(a1 + 32), 0LL);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v4 + 16))(v4, a2, 0LL, a3);
  }
}

id sub_100098020(id a1, PBSSuggestedUserProfile *a2)
{
  id v2 = a2;
  id v3 = -[TVSettingsSuggestedUser initWithSuggestedUserProfile:]( objc_alloc(&OBJC_CLASS___TVSettingsSuggestedUser),  "initWithSuggestedUserProfile:",  v2);

  return v3;
}

void sub_100098064(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (a1)
  {
    if ((_os_feature_enabled_impl("AppleIDSetup", "Sandstone") & 1) != 0)
    {
      id v9 = objc_alloc_init(&OBJC_CLASS___AISSetupContext);
      [v9 setShouldCreateDeviceUser:1];
      [v9 setDeviceUserKind:a2];
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", AIDAServiceTypeCloud));
      [v9 setRequiredServiceTypes:v10];

      v41[0] = AIDAServiceTypeStore;
      v41[1] = AIDAServiceTypeGameCenter;
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v41, 2LL));
      BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v11));
      [v9 setDesiredServiceTypes:v12];

      [v9 setShouldBackgroundDesiredServices:0];
      [v9 setRemoteRole:2];
      if (v7)
      {
        id v13 = objc_alloc(&OBJC_CLASS___AISSetupContextCandidateAccount);
        __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v7 altDSID]);
        __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v7 accountUsername]);
        __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v7 nameComponents]);
        id v17 = [v13 initWithAltDSID:v14 username:v15 nameComponents:v16];

        [v9 setCandidateAccount:v17];
      }

      objc_initWeak(&location, a1);
      id v18 = [[AISSetupViewController alloc] initWithContext:v9];
      objc_initWeak(&v39, v8);
      objc_initWeak(&v38, v18);
      __int128 v19 = &off_100129000;
      if (v7)
      {
        uint64_t v20 = TSKLocString(@"AccountsSuppressSuggestedUserButtonTitle");
        __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
        id v22 = (void *)objc_claimAutoreleasedReturnValue([v7 shortName]);
        id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v21, v22));

        v35[0] = _NSConcreteStackBlock;
        v35[1] = 3221225472LL;
        id v35[2] = sub_1000984DC;
        v35[3] = &unk_100192A18;
        objc_copyWeak(&v37, &location);
        id v36 = v7;
        id v24 = (void *)objc_claimAutoreleasedReturnValue( +[UIAction actionWithTitle:image:identifier:handler:]( &OBJC_CLASS___UIAction,  "actionWithTitle:image:identifier:handler:",  v23,  0LL,  0LL,  v35));
        [v18 setDontSuggestUserAction:v24];

        objc_destroyWeak(&v37);
        __int128 v19 = &off_100129000;
      }

      v34[0] = _NSConcreteStackBlock;
      uint64_t v25 = *((void *)v19 + 406);
      v34[1] = v25;
      void v34[2] = sub_100098530;
      v34[3] = &unk_100192A40;
      v34[4] = a1;
      v34[5] = a2;
      [v18 setReportHandler:v34];
      id v26 = sub_100097028();
      id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_INFO,  "Cleaning up unused accounts before adding a new user, if any...",  buf,  2u);
      }

      id v28 = (void *)a1[16];
      v30[0] = _NSConcreteStackBlock;
      v30[1] = v25;
      v30[2] = sub_100098668;
      v30[3] = &unk_10018E468;
      id v31 = v8;
      id v29 = v18;
      id v32 = v29;
      objc_msgSend(v28, "tvsettings_removeAccountsNotUsedByUserProfilesWithCompletion:", v30);

      objc_destroyWeak(&v38);
      objc_destroyWeak(&v39);

      objc_destroyWeak(&location);
    }

    else
    {
      sub_100096D28(a1, 0LL);
    }
  }
}

void sub_100098484(_Unwind_Exception *a1)
{
}

void sub_1000984DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  [WeakRetained suppressSuggestedUserWithIdentifier:v2];
}

void sub_100098530(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100097028();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000FA0A0(a1, (uint64_t)v6, v9);
    }
  }

  else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "User added, Apple Account setup completed. {setupReport=%@}",  buf,  0xCu);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10009865C;
  block[3] = &unk_10018E440;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
}

void *sub_10009865C(uint64_t a1)
{
  return sub_100096D28(*(void **)(a1 + 32), 0LL);
}

id sub_100098668(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

void sub_10009867C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (!WeakRetained)
  {
    id v10 = sub_100097028();
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1000FA11C(a1, v11, v12, v13, v14, v15, v16, v17);
    }
    goto LABEL_14;
  }

  if (!v6)
  {
    id v18 = objc_alloc(&OBJC_CLASS___RBSAssertion);
    __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(+[RBSTarget currentProcess](&OBJC_CLASS___RBSTarget, "currentProcess"));
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[RBSDomainAttribute attributeWithDomain:name:]( &OBJC_CLASS___RBSDomainAttribute,  "attributeWithDomain:name:",  @"com.apple.common",  @"FinishTaskUninterruptable"));
    __int128 v35 = v20;
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v35, 1LL));
    uint64_t v11 = -[RBSAssertion initWithExplanation:target:attributes:]( v18,  "initWithExplanation:target:attributes:",  @"Add User Manually",  v19,  v21);

    -[os_log_s acquireWithInvalidationHandler:](v11, "acquireWithInvalidationHandler:", &stru_100192A60);
    objc_storeStrong(WeakRetained + 14, v11);
    id v22 = objc_alloc_init(&OBJC_CLASS___PBSCreateUserProfileAttributes);
    [v22 setType:*(void *)(a1 + 48)];
    id v23 = WeakRetained[11];
    id v24 = v23;
    if (!*(void *)(a1 + 48) && v23)
    {
      id v25 = sub_100097028();
      id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_FAULT)) {
        sub_1000FA184();
      }

      id v24 = 0LL;
    }

    [v22 setPersonaUniqueString:v24];
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472LL;
    v28[2] = sub_1000989D8;
    v28[3] = &unk_100192A88;
    void v28[4] = WeakRetained;
    id v29 = v5;
    id v30 = v22;
    id v31 = *(id *)(a1 + 32);
    id v27 = v22;
    dispatch_async(&_dispatch_main_q, v28);

LABEL_14:
    goto LABEL_15;
  }

  id v8 = sub_100097028();
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
    sub_1000FA1F0(a1, v6);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100098974;
  block[3] = &unk_10018EA28;
  void block[4] = WeakRetained;
  id v33 = v6;
  id v34 = *(id *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);

LABEL_15:
}

void sub_100098974(uint64_t a1)
{
}

void sub_100098984(id a1, RBSAssertion *a2, NSError *a3)
{
  id v3 = a3;
  if (v3)
  {
    id v4 = sub_100097028();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000FA278();
    }
  }
}

void sub_1000989D8(uint64_t a1)
{
}

void sub_1000989E8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v25 = a4;
  if (a1)
  {
    id v9 = sub_100097028();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Signing in iCloud...", buf, 2u);
    }

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore defaultStore](&OBJC_CLASS___ACAccountStore, "defaultStore"));
    uint64_t v12 = dispatch_group_create();
    dispatch_group_enter(v12);
    *(void *)buf = 0LL;
    id v38 = buf;
    uint64_t v39 = 0x3032000000LL;
    __int128 v40 = sub_100099314;
    __int128 v41 = sub_100099324;
    id v42 = 0LL;
    id v36 = 0LL;
    char v13 = sub_10009932C(a1, &v36);
    id v14 = v36;
    uint64_t v15 = v14;
    if ((v13 & 1) != 0)
    {
      id v22 = v14;
      id v24 = [[AIDAServiceOwnersManager alloc] initWithAccountStore:v11];
      id v23 = v11;
      id v16 = objc_alloc_init(&OBJC_CLASS___AIDAMutableServiceContext);
      [v16 setAuthenticationResults:v7];
      [v16 setOperationUIPermissions:1];
      [v16 setViewController:v25];
      [v16 setCdpUiProvider:*(void *)(a1 + 136)];
      uint64_t v17 = AIDAServiceTypeCloud;
      uint64_t v43 = AIDAServiceTypeCloud;
      uint64_t v44 = a1;
      id v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v44,  &v43,  1LL));
      [v16 setSignInContexts:v18];

      v30[0] = _NSConcreteStackBlock;
      v30[1] = 3221225472LL;
      v30[2] = sub_100099564;
      v30[3] = &unk_100192B50;
      __int128 v35 = buf;
      __int128 v19 = v12;
      id v31 = v19;
      id v32 = v7;
      id v20 = v8;
      id v33 = v20;
      id v21 = v25;
      id v34 = v21;
      [v24 signInService:v17 withContext:v16 completion:v30];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100099794;
      block[3] = &unk_100192B78;
      void block[4] = a1;
      id v29 = buf;
      id v27 = v21;
      id v28 = v20;
      dispatch_group_notify(v19, &_dispatch_main_q, block);

      uint64_t v11 = v23;
      uint64_t v15 = v22;
    }

    else
    {
      sub_100097528(a1, v14, v25);
    }

    _Block_object_dispose(buf, 8);
  }
}

void sub_100098D3C(_Unwind_Exception *a1)
{
}

id sub_100098D64(uint64_t a1)
{
  return [*(id *)(a1 + 32) authenticateWithContext:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

void sub_100098D74(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  objc_opt_self(a1);
  id v10 = sub_100097028();
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Signing In iTunes...", buf, 2u);
  }

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:AKAuthenticationUsernameKey]);
  char v13 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:AKAuthenticationAlternateDSIDKey]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:AKAuthenticationPasswordKey]);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:AKAuthenticationDSIDKey]);

  id v16 = objc_alloc_init(&OBJC_CLASS___AMSAuthenticateOptions);
  [v16 setAuthenticationType:1];
  id v17 = [[AMSUIAuthenticateTask alloc] initWithAccount:0 presentingViewController:v8 options:v16];

  [v17 setUsername:v12];
  [v17 setDSID:v15];
  [v17 setAltDSID:v13];
  [v17 setPassword:v14];
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 performAuthentication]);
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472LL;
  v23[2] = sub_100098FC4;
  v23[3] = &unk_100192AD8;
  id v19 = v7;
  id v24 = v19;
  [v18 addSuccessBlock:v23];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  _DWORD v21[2] = sub_100099040;
  v21[3] = &unk_10018E8D8;
  id v22 = v19;
  id v20 = v19;
  [v18 addErrorBlock:v21];
}

uint64_t sub_100098FC4(uint64_t a1)
{
  id v2 = sub_100097028();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Sign In iTunes successful.", v5, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100099040(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100097028();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
    sub_1000FA2D8();
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000990B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_self(a1);
  id v7 = sub_100097028();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Signing In Game Center...", buf, 2u);
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:AKAuthenticationUsernameKey]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:AKAuthenticationPasswordKey]);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:AKAuthenticationAlternateDSIDKey]);

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10009920C;
  v13[3] = &unk_100192B00;
  id v14 = v5;
  id v12 = v5;
  +[GKLocalPlayer authenticatePlayerWithUsername:password:altDSID:completionHandler:]( &OBJC_CLASS___GKLocalPlayer,  "authenticatePlayerWithUsername:password:altDSID:completionHandler:",  v9,  v10,  v11,  v13);
}

void sub_10009920C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id v8 = sub_100097028();
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
    sub_1000FA3D0();
  }

  id v10 = sub_100097028();
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = v11;
  if (v6)
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Sign in Game Center successful.", v14, 2u);
    }

    char v13 = *(void (**)(void))(*(void *)(a1 + 32) + 16LL);
  }

  else
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1000FA354();
    }

    char v13 = *(void (**)(void))(*(void *)(a1 + 32) + 16LL);
  }

  v13();
}

uint64_t sub_100099314(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100099324(uint64_t a1)
{
}

uint64_t sub_10009932C(uint64_t a1, void *a2)
{
  BOOL v2 = a1;
  if (a1)
  {
    id v3 = (void *)(a1 + 88);
    if (*(void *)(a1 + 88))
    {
      id v4 = (id *)(a1 + 96);
      if (*(void *)(a1 + 96))
      {
        id v5 = sub_100097028();
        id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v7 = *v3;
          *(_DWORD *)buf = 138543362;
          uint64_t v22 = v7;
          _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Already adopting a persona, cannot adopt another nor the same twice. {personaUniqueString=%{public}@}",  buf,  0xCu);
        }

        BOOL v2 = 1LL;
      }

      else
      {
        id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[UMUserPersona currentPersona](&OBJC_CLASS___UMUserPersona, "currentPersona"));
        id v20 = 0LL;
        id v9 = -[os_log_s copyCurrentPersonaContextWithError:](v6, "copyCurrentPersonaContextWithError:", &v20);
        id v10 = v20;
        if (v9)
        {
          objc_storeStrong(v4, v9);
          id v11 = sub_100097028();
          id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v13 = *v3;
            *(_DWORD *)buf = 138543362;
            uint64_t v22 = v13;
            _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Adopting persona. {personaUniqueString=%{public}@}",  buf,  0xCu);
          }

          id v14 = (void *)objc_claimAutoreleasedReturnValue( -[os_log_s generateAndRestorePersonaContextWithPersonaUniqueString:]( v6,  "generateAndRestorePersonaContextWithPersonaUniqueString:",  *v3));
          BOOL v2 = v14 == 0LL;
          if (v14)
          {
            id v15 = sub_100097028();
            id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
            if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
              sub_1000FA4C8((uint64_t)v3, v14);
            }

            if (a2) {
              *a2 = v14;
            }
          }
        }

        else
        {
          id v17 = sub_100097028();
          id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_1000FA44C();
          }

          BOOL v2 = 0LL;
          if (a2) {
            *a2 = v10;
          }
        }
      }
    }

    else
    {
      return 1LL;
    }
  }

  return v2;
}

void sub_100099564(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = sub_100097028();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000FA550();
    }

    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL), a3);
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }

  else
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKeyedSubscript:AKAuthenticationAlternateDSIDKey]);
    [*(id *)(a1 + 48) setICloudAltDSID:v8];
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    v18[2] = sub_10009973C;
    v18[3] = &unk_100192B28;
    id v9 = *(void **)(a1 + 40);
    id v10 = *(void **)(a1 + 56);
    id v19 = *(id *)(a1 + 48);
    id v11 = v8;
    id v20 = v11;
    id v21 = *(id *)(a1 + 32);
    sub_100098D74((uint64_t)&OBJC_CLASS___TVSettingsUserProfileListFacade, v9, v10, v18);
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_100099768;
    v14[3] = &unk_100192B28;
    id v12 = *(void **)(a1 + 40);
    id v15 = *(id *)(a1 + 48);
    id v16 = v11;
    id v17 = *(id *)(a1 + 32);
    id v13 = v11;
    sub_1000990B0((uint64_t)&OBJC_CLASS___TVSettingsUserProfileListFacade, v12, v14);
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

void sub_10009973C(uint64_t a1, int a2)
{
  if (a2) {
    [*(id *)(a1 + 32) setITunesAltDSID:*(void *)(a1 + 40)];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_100099768(uint64_t a1, int a2)
{
  if (a2) {
    [*(id *)(a1 + 32) setGameCenterAltDSID:*(void *)(a1 + 40)];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_100099794(uint64_t a1)
{
  BOOL v2 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(a1 + 40);
  if (v2) {
    sub_100097528(v3, v2, v4);
  }
  else {
    sub_1000998C4(v3, *(void **)(a1 + 48), v4);
  }
}

void sub_1000997E0(uint64_t a1)
{
  if (a1 && *(void *)(a1 + 96))
  {
    id v2 = sub_100097028();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 96);
      int v8 = 138412290;
      uint64_t v9 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Restoring persona. {savedPersonaContext=%@}",  (uint8_t *)&v8,  0xCu);
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[UMUserPersona currentPersona](&OBJC_CLASS___UMUserPersona, "currentPersona"));
    id v6 = [v5 restorePersonaWithSavedPersonaContext:*(void *)(a1 + 96)];

    uint64_t v7 = *(void **)(a1 + 96);
    *(void *)(a1 + 96) = 0LL;
  }

void sub_1000998C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    if (_os_feature_enabled_impl("PineBoard", "UserProfileLanguages"))
    {
      id v7 = sub_100097028();
      int v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Finished signing in, initializing preferred languages for new user...",  buf,  2u);
      }

      id v9 = *(id *)(a1 + 144);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "preferredLanguagesFromLanguages:forUserType:", 0, objc_msgSend(v5, "type")));

      id v11 = -[TVCSPreferredLanguagesManager initWithLanguages:inputModes:updateFromPreferences:]( objc_alloc(&OBJC_CLASS___TVCSPreferredLanguagesManager),  "initWithLanguages:inputModes:updateFromPreferences:",  v10,  0LL,  0LL);
      id v12 = (void *)objc_claimAutoreleasedReturnValue(-[TVCSPreferredLanguagesManager preferredLanguages](v11, "preferredLanguages"));
      id v13 = (void *)objc_claimAutoreleasedReturnValue(-[TVCSPreferredLanguagesManager preferredInputModeList](v11, "preferredInputModeList"));
      id v14 = sub_100097028();
      id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543618;
        id v24 = v12;
        __int16 v25 = 2114;
        id v26 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "New user: {preferredLanguages=%{public}@, preferredInputModes=%{public}@",  buf,  0x16u);
      }

      [v5 setPreferredLanguages:v12];
      [v5 setPreferredInputModes:v13];
      id v16 = sub_100097028();
      id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Finished setting up languages, creating user profile...",  buf,  2u);
      }
    }

    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[PBSUserProfileManager sharedInstance](&OBJC_CLASS___PBSUserProfileManager, "sharedInstance"));
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472LL;
    v19[2] = sub_100099B54;
    v19[3] = &unk_100192BA0;
    id v20 = v5;
    uint64_t v21 = a1;
    id v22 = v6;
    [v18 createUserProfileWithAttributes:v20 completionHandler:v19];
  }
}

void sub_100099B54(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100097028();
  int v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000FA5B0();
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100099D24;
    block[3] = &unk_10018EA28;
    void block[4] = *(void *)(a1 + 40);
    id v14 = v6;
    id v15 = *(id *)(a1 + 48);
    dispatch_async(&_dispatch_main_q, block);
  }

  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = [*(id *)(a1 + 32) type];
      *(_DWORD *)buf = 134218242;
      id v17 = v10;
      __int16 v18 = 2112;
      id v19 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "New user added. {userProfileType=%ld, userProfile=%@}",  buf,  0x16u);
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSUserProfilesAnalyticsAddUserEvent addUserEventWithActionType:userProfile:]( &OBJC_CLASS___TVCSUserProfilesAnalyticsAddUserEvent,  "addUserEventWithActionType:userProfile:",  0LL,  v5));
    TVCSUserProfilesAnalyticsSendEvent(v11);

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_100099D34;
    void v12[3] = &unk_10018E440;
    void v12[4] = *(void *)(a1 + 40);
    dispatch_async(&_dispatch_main_q, v12);
  }
}

void sub_100099D24(uint64_t a1)
{
}

void *sub_100099D34(uint64_t a1)
{
  return sub_100096D28(*(void **)(a1 + 32), 0LL);
}

void sub_100099D60(uint64_t a1)
{
  if (a1)
  {
    sub_1000997E0(a1);
    *(_BYTE *)(a1 + 11) = 0;
    id v2 = *(void **)(a1 + 88);
    *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 176), 8) = 0LL;

    [*(id *)(a1 + 104) relinquish];
    uint64_t v3 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = 0LL;

    [*(id *)(a1 + 112) invalidate];
    uint64_t v4 = *(void **)(a1 + 112);
    *(void *)(a1 + 112) = 0LL;
  }

void sub_100099DBC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (a1)
  {
    if (v6)
    {
      int v8 = (void *)objc_claimAutoreleasedReturnValue([v5 domain]);
      if ([v8 isEqualToString:AKAppleIDAuthenticationErrorDomain])
      {
        id v9 = [v5 code];

        if (v9 == (id)-7003LL)
        {
          id v10 = sub_100097028();
          id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)id v15 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "Ignoring error dialog because it was just an user action to cancel.",  v15,  2u);
          }

void sub_100099F00(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_100097028();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000FA6A0(a1, v3);
    }
  }
}

void sub_100099F64(uint64_t a1)
{
}

void sub_10009A0B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings.userProfiles", "TVSettingsUserProfileListFacade");
  id v2 = (void *)qword_1001E19A8;
  qword_1001E19A8 = (uint64_t)v1;
}

  ;
}

  ;
}

id sub_10009A138()
{
  return [v0 code];
}

void sub_10009A144( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_10009A168( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

  ;
}

id sub_10009B1B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateTCCInfo];
}

void sub_10009C100( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
}

void sub_10009C154(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsDeviceFacade sharedInstance](&OBJC_CLASS___TVSettingsDeviceFacade, "sharedInstance"));
  unsigned int v8 = [v7 isSendDataToAppleLockedDown];

  [v6 setEnabled:v8 ^ 1];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateSendDataItem:v6 value:v5];
}

void sub_10009C1F0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v6 = a2;
  LODWORD(v3) = [v3 shouldSendDataToApple];
  unsigned int v4 = [*(id *)(a1 + 32) isSendDataToAppleLockedDown];
  uint64_t v5 = ((v3 ^ 1) & v4 | [*(id *)(a1 + 32) isSendAppAnalyticsLockedDown]) ^ 1;
  objc_msgSend(v6, "setHidden:");
  [v6 setEnabled:v5];
}

void sub_10009C270(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "isSiriAvailable"));
}

void sub_10009C2B4(uint64_t a1, void *a2)
{
  id v7 = a2;
  if ([*(id *)(a1 + 32) shouldSendDataToApple])
  {
    [v7 setLocalizedDescription:0];
  }

  else
  {
    uint64_t v3 = TSKLocString(@"DiagnosticDataWillNotSendDescription");
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    [v7 setLocalizedDescription:v4];
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  else {
    uint64_t v6 = 1LL;
  }
  [v7 setAccessoryTypes:v6];
}

id sub_10009C674(uint64_t a1)
{
  return +[TSKSettingItem setValue:forSettingItem:]( &OBJC_CLASS___TSKSettingItem,  "setValue:forSettingItem:",  &__kCFBooleanTrue,  *(void *)(a1 + 32));
}

id sub_10009C690(uint64_t a1)
{
  return +[TSKSettingItem setValue:forSettingItem:]( &OBJC_CLASS___TSKSettingItem,  "setValue:forSettingItem:",  &__kCFBooleanFalse,  *(void *)(a1 + 32));
}

id sub_10009C8A8(uint64_t a1)
{
  return +[TSKSettingItem setValue:forSettingItem:]( &OBJC_CLASS___TSKSettingItem,  "setValue:forSettingItem:",  &__kCFBooleanTrue,  *(void *)(a1 + 32));
}

id sub_10009C8C4(uint64_t a1)
{
  return +[TSKSettingItem setValue:forSettingItem:]( &OBJC_CLASS___TSKSettingItem,  "setValue:forSettingItem:",  &__kCFBooleanFalse,  *(void *)(a1 + 32));
}

void sub_10009C9E8(_Unwind_Exception *a1)
{
}

void sub_10009CA0C(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    v7[3] = v2;
    void v7[4] = v3;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_10009CAA4;
    v5[3] = &unk_10018E568;
    objc_copyWeak(v7, (id *)(a1 + 40));
    id v6 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, v5);

    objc_destroyWeak(v7);
  }

void sub_10009CAA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v2 pushViewController:*(void *)(a1 + 32) animated:1];
}

void sub_10009CC00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472LL;
  v2[2] = sub_10009CCA0;
  v2[3] = &unk_100192BE8;
  objc_copyWeak(&v3, (id *)(a1 + 40));
  +[Libsysdiagnose sysdiagnoseWithMetadata:onCompletion:]( &OBJC_CLASS___Libsysdiagnose,  "sysdiagnoseWithMetadata:onCompletion:",  v1,  v2);
  objc_destroyWeak(&v3);
}

void sub_10009CC8C(_Unwind_Exception *a1)
{
}

void sub_10009CCA0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10009CD64;
  block[3] = &unk_10018F2F0;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v10 = v5;
  id v11 = v6;
  id v7 = v6;
  id v8 = v5;
  dispatch_async(&_dispatch_main_q, block);

  objc_destroyWeak(&v12);
}

void sub_10009CD64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setRunningSysdiagnose:0];
  [WeakRetained reloadSettingsIfNeeded];
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = @"Successfully ran";
    uint64_t v4 = *(void *)(a1 + 40);
    if (!*(void *)(a1 + 32)) {
      id v3 = @"Failed to run";
    }
    *(_DWORD *)buf = 138412546;
    id v16 = v3;
    __int16 v17 = 2112;
    uint64_t v18 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "%@ sysdiagnose with error: %@",  buf,  0x16u);
  }

  if (!*(void *)(a1 + 40) && [*(id *)(a1 + 32) length])
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", *(void *)(a1 + 32)));
    id v6 = objc_alloc(&OBJC_CLASS___SFAirDropSharingViewControllerTV);
    id v14 = v5;
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v14, 1LL));
    id v8 = [v6 initWithSharingItems:v7];

    objc_initWeak((id *)buf, v8);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_10009CF98;
    v11[3] = &unk_10018F5A0;
    id v9 = v5;
    id v12 = v9;
    objc_copyWeak(&v13, (id *)buf);
    [v8 setCompletionHandler:v11];
    id v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
    [v10 presentViewController:v8 animated:1 completion:0];

    objc_destroyWeak(&v13);
    objc_destroyWeak((id *)buf);
  }
}

void sub_10009CF70( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10009CF98(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412546;
    uint64_t v7 = v4;
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Failed to AirDrop sysdiagnose file %@ [%@]",  (uint8_t *)&v6,  0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained dismissViewControllerAnimated:1 completion:0];
}

void sub_10009D5B8(id a1, TSKSettingItem *a2, id a3)
{
  v12[0] = &off_1001AD5A8;
  id v4 = a3;
  id v5 = a2;
  uint64_t v6 = TSKLocString(@"SettingsMovieFavoritesSortByDateDescription");
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v12[1] = &off_1001AD5C0;
  v13[0] = v7;
  uint64_t v8 = TSKLocString(@"SettingsMovieFavoritesSortAlphabeticallyDescription");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v13[1] = v9;
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v12,  2LL));

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKeyedSubscript:v4]);
  -[TSKSettingItem setLocalizedDescription:](v5, "setLocalizedDescription:", v11);
}

void sub_10009D6C4(id a1, TSKSettingItem *a2, id a3)
{
  v12[0] = &off_1001AD5A8;
  id v4 = a3;
  id v5 = a2;
  uint64_t v6 = TSKLocString(@"SettingsFavoritesSortByDateDescription");
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v12[1] = &off_1001AD5C0;
  v13[0] = v7;
  uint64_t v8 = TSKLocString(@"SettingsFavoritesSortAlphabeticallyDescription");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v13[1] = v9;
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v12,  2LL));

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKeyedSubscript:v4]);
  -[TSKSettingItem setLocalizedDescription:](v5, "setLocalizedDescription:", v11);
}

id sub_10009DB30(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 displayName]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  0LL,  v4,  0LL,  *(void *)(a1 + 32),  "_editIRConfiguration:"));

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
  [v6 setIdentifier:v7];

  [v6 setAccessoryTypes:1];
  return v6;
}

void sub_10009DEF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
}

void sub_10009DF40(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v5 dismissViewControllerAnimated:1 completion:0];

  uint64_t v6 = objc_alloc_init(&OBJC_CLASS___TVSettingsRenameIRDeviceViewController);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remotesFacade]);
  -[TVSettingsRenameIRDeviceViewController setRemotesFacade:](v6, "setRemotesFacade:", v7);

  -[TVSettingsRenameIRDeviceViewController setConfiguration:](v6, "setConfiguration:", *(void *)(a1 + 32));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10009E07C;
  v9[3] = &unk_10018E810;
  objc_copyWeak(&v10, (id *)(a1 + 40));
  -[TVSettingsRenameIRDeviceViewController setCompletionHandler:](v6, "setCompletionHandler:", v9);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v8 pushViewController:v6 animated:1];

  objc_destroyWeak(&v10);
}

void sub_10009E064(_Unwind_Exception *a1)
{
}

void sub_10009E07C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popToViewController:WeakRetained animated:1];
}

void sub_10009E0D0(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a1[4] navigationController]);
  [v4 dismissViewControllerAnimated:1 completion:0];

  uint64_t v5 = TSKLocString(@"RCDeleteIRDeviceDescriptionText");
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a1[5] localizedTitle]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v6, v7));

  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  v8,  0LL,  1LL));
  uint64_t v10 = TSKLocString(@"RCDeleteIRDeviceConfirmButtonTitle");
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_10009E2F4;
  v19[3] = &unk_10018F4C0;
  uint64_t v12 = a1 + 7;
  objc_copyWeak(&v21, a1 + 7);
  id v20 = a1[6];
  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v11,  2LL,  v19));

  [v9 addAction:v13];
  uint64_t v14 = TSKLocString(@"RCDeleteIRDeviceCancelText");
  id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v15,  1LL,  0LL));

  [v9 addAction:v16];
  id WeakRetained = objc_loadWeakRetained(v12);
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v18 presentViewController:v9 animated:1 completion:0];

  objc_destroyWeak(&v21);
}

void sub_10009E2D8(_Unwind_Exception *a1)
{
}

void sub_10009E2F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remotesFacade]);
  uint64_t v6 = *(void *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_10009E3C8;
  v7[3] = &unk_10018E810;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  [v5 deleteConfiguration:v6 withCompletionHandler:v7];

  objc_destroyWeak(&v8);
}

void sub_10009E3B4(_Unwind_Exception *a1)
{
}

void sub_10009E3C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popViewControllerAnimated:1];
}

void sub_10009E418(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  [v1 dismissViewControllerAnimated:1 completion:0];
}

void sub_10009F44C(id a1, BOOL a2, NSError *a3)
{
  if (!a2 && _TVSLogInternalLogLevel >= 3)
  {
    uint64_t v4 = TVSSystemLog;
    uint64_t v5 = a3;
    pthread_main_np();
    pthread_self();
    _TVSLogBase(v3, &_os_log_default, 65LL, 0LL, 3LL, v4);
  }

void sub_10009F668(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  objc_msgSend( v5,  "_setAppearanceFor:selected:",  v6,  objc_msgSend(a2, "longValue") == (id)objc_msgSend(*(id *)(a1 + 32), "currentActionBeingLearned"));
}

void sub_10009F9DC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) completionHandler]);

  if (v2)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) completionHandler]);
    (*((void (**)(id, void, void))v3 + 2))(v3, *(void *)(a1 + 40), *(void *)(a1 + 48));
  }

void sub_1000A0234(_Unwind_Exception *a1)
{
}

void sub_1000A0250(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (a2)
  {
    WeakRetained[8] &= ~0x20u;
  }

  else
  {
    id v28 = WeakRetained;
    uint64_t v5 = TSKLocString(@"RCLearnRemoteInstructionText");
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    uint64_t v7 = PBSLocalizedStringFromCoreControlAction(*(unsigned int *)(a1 + 56));
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v6, v8));
    uint64_t v10 = TSKLocString(@"RCLearnRemoteSubInstructionText");
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    uint64_t v12 = PBSLocalizedStringFromCoreControlAction(*(unsigned int *)(a1 + 56));
    id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v11, v13));
    id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@\n%@", v9, v14));

    id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) instructionLabel]);
    __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 font]);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor labelColor](&OBJC_CLASS___UIColor, "labelColor"));
    uint64_t v19 = TSKAttributedSymbolLocString(v15, &off_1001AF818, v17, v18);
    id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

    id v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) instructionLabel]);
    [v21 setAttributedText:v20];

    id v22 = (void *)objc_claimAutoreleasedReturnValue([v28 activityLabel]);
    uint64_t v23 = TSKLocString(@"RCLearnRemoteLearningErrorActivityText");
    id v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
    uint64_t v25 = PBSLocalizedStringFromCoreControlAction(*(unsigned int *)(a1 + 56));
    id v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    id v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v24, v26));
    [v22 setText:v27];

    v28[8] |= 0x20u;
    [*(id *)(a1 + 40) relearnCurrentActionWithCompletion:&stru_100192D48];

    id WeakRetained = v28;
  }
}

uint64_t sub_1000A0498(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000A04A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000A0CFC(uint64_t a1, unsigned int a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7 = *(void *)(a1 + 32);
  id v33 = a5;
  id v30 = a4;
  id v32 = (void *)objc_claimAutoreleasedReturnValue( +[UIImage systemImageNamed:withConfiguration:]( &OBJC_CLASS___UIImage,  "systemImageNamed:withConfiguration:",  a3,  v7));
  id v9 = -[UIImageView initWithImage:](objc_alloc(&OBJC_CLASS___UIImageView), "initWithImage:", v32);
  -[UIImageView setTranslatesAutoresizingMaskIntoConstraints:](v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0LL);
  id v10 = objc_alloc_init(&OBJC_CLASS____UIFloatingContentView);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 contentView]);
  [v11 addSubview:v9];

  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 setUseShadowImage:0];
  [v10 setUnfocusedShadowRadius:34.0];
  [v10 setUnfocusedShadowOpacity:0.0];
  [v10 setUnfocusedShadowVerticalOffset:22.0];
  objc_msgSend(v10, "setContentMotionRotation:translation:", CGPointZero.x, CGPointZero.y, CGPointZero.x, CGPointZero.y);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](&OBJC_CLASS___UIColor, "clearColor"));
  [v10 setBackgroundColor:v12 forState:0];

  id v13 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor whiteColor](&OBJC_CLASS___UIColor, "whiteColor"));
  [v10 setBackgroundColor:v13 forState:4];

  [v10 setCornerRadius:*(double *)(a1 + 48)];
  [v10 setClipsToBounds:0];
  uint64_t v27 = a1;
  id v28 = (void *)objc_claimAutoreleasedReturnValue([v10 widthAnchor]);
  id v26 = (void *)objc_claimAutoreleasedReturnValue([v28 constraintEqualToConstant:*(double *)(a1 + 56)]);
  v34[0] = v26;
  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v10 heightAnchor]);
  id v24 = (void *)objc_claimAutoreleasedReturnValue([v25 constraintEqualToConstant:*(double *)(a1 + 64)]);
  v34[1] = v24;
  id v29 = v9;
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[UIImageView centerXAnchor](v9, "centerXAnchor"));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v10 contentView]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 centerXAnchor]);
  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v14 constraintEqualToAnchor:v16]);
  void v34[2] = v17;
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[UIImageView centerYAnchor](v29, "centerYAnchor"));
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v10 contentView]);
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 centerYAnchor]);
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v18 constraintEqualToAnchor:v20]);
  v34[3] = v21;
  id v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v34, 4LL));
  +[NSLayoutConstraint activateConstraints:](&OBJC_CLASS___NSLayoutConstraint, "activateConstraints:", v22);

  [*(id *)(v27 + 40) _setAppearanceFor:v10 selected:0];
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2));
  [v30 setObject:v10 forKey:v23];

  [v33 addObject:v10];
}

void sub_1000A117C(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.3));
  uint64_t v2 = (void *)qword_1001E19B8;
  qword_1001E19B8 = v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 1.0));
  uint64_t v4 = (void *)qword_1001E19C0;
  qword_1001E19C0 = v3;

  uint64_t v5 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 0.4));
  id v6 = (void *)qword_1001E19C8;
  qword_1001E19C8 = v5;

  uint64_t v7 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 1.0));
  id v8 = (void *)qword_1001E19D0;
  qword_1001E19D0 = v7;
}

void sub_1000A1C9C(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v7 = a2;
  if (!a3)
  {
    uint64_t v4 = TSKLocString(@"OSUpdateMenuValueNone");
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    -[TSKSettingItem setLocalizedValue:](v7, "setLocalizedValue:", v5);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[PBSAppleConnectSettings sharedInstance](&OBJC_CLASS___PBSAppleConnectSettings, "sharedInstance"));
  -[TSKSettingItem setEnabled:](v7, "setEnabled:", [v6 isEnabled]);
}

void sub_1000A1D1C(id a1, TSKSettingItem *a2, id a3)
{
  id v8 = a2;
  if (a3) {
    uint64_t v4 = @"OSUpdateMenuValuePasswordEntered";
  }
  else {
    uint64_t v4 = @"OSUpdateMenuValueNone";
  }
  uint64_t v5 = TSKLocString(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  -[TSKSettingItem setLocalizedValue:](v8, "setLocalizedValue:", v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBSAppleConnectSettings sharedInstance](&OBJC_CLASS___PBSAppleConnectSettings, "sharedInstance"));
  -[TSKSettingItem setEnabled:](v8, "setEnabled:", [v7 isEnabled]);
}

void sub_1000A1F70(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = sub_1000A201C();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Running CDP-specific user repair.", v8, 2u);
  }

  uint64_t v7 = objc_alloc_init(&OBJC_CLASS___NSSet);
  sub_1000A205C(v4, v3, v7);
}

id sub_1000A201C()
{
  if (qword_1001E19E8 != -1) {
    dispatch_once(&qword_1001E19E8, &stru_100192EA0);
  }
  return (id)qword_1001E19E0;
}

void sub_1000A205C(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (_os_feature_enabled_impl("AppleIDSetup", "SandstoneRepair"))
  {
    id v8 = sub_1000A201C();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Running AppleIDSetup repair flow.", buf, 2u);
    }

    id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 user]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 userProfile]);

    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 iCloudAltDSID]);
    id v13 = objc_alloc(&OBJC_CLASS___AISRepairContext);
    if (v12)
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v11 iCloudAltDSID]);
      id v15 = [v13 initWithAltDSID:v14];

      id v16 = (void *)objc_claimAutoreleasedReturnValue([v11 identifier]);
      [v15 setUserProfileIdentifier:v16];
    }

    else
    {
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v11 identifier]);
      id v15 = [v13 initWithUserProfileIdentifier:v16];
    }

    [v15 setRequiredServiceTypes:v7];
    [v15 setRemoteRole:2];
    id v17 = sub_1000A201C();
    uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      id v23 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "Starting AISRepairViewController. {context=%@}",  buf,  0xCu);
    }

    id v19 = [[AISRepairViewController alloc] initWithContext:v15];
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472LL;
    v20[2] = sub_1000A25F8;
    v20[3] = &unk_100192EC8;
    id v21 = v5;
    [v19 setReportHandler:v20];
    [v6 presentViewController:v19 animated:1 completion:0];
  }

  else
  {
    [v5 startFlowWithPresentingViewController:v6];
  }
}

void sub_1000A22E4(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = sub_1000A201C();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v21 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Running finishing signing in user repair.",  v21,  2u);
  }

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 user]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 userProfile]);
  id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  uint64_t v10 = objc_claimAutoreleasedReturnValue([v8 iCloudAltDSID]);
  if (!v10
    || (v11 = (void *)v10, unsigned __int8 v12 = [v7 hasiCloudAccount],
                           v11,
                           (v12 & 1) == 0))
  {
    -[NSMutableSet addObject:](v9, "addObject:", AIDAServiceTypeCloud);
  }

  uint64_t v13 = objc_claimAutoreleasedReturnValue([v8 iTunesAltDSID]);
  if (!v13
    || (uint64_t v14 = (void *)v13, v15 = [v7 hasiTunesAccount],
                           v14,
                           (v15 & 1) == 0))
  {
    -[NSMutableSet addObject:](v9, "addObject:", AIDAServiceTypeStore);
  }

  uint64_t v16 = objc_claimAutoreleasedReturnValue([v8 gameCenterAltDSID]);
  if (!v16
    || (id v17 = (void *)v16,
        unsigned __int8 v18 = [v7 hasGameCenterAccount],
        v17,
        (v18 & 1) == 0))
  {
    -[NSMutableSet addObject:](v9, "addObject:", AIDAServiceTypeGameCenter);
  }

  if (-[NSMutableSet count](v9, "count"))
  {
    sub_1000A205C(v3, v4, v9);
  }

  else
  {
    id v19 = sub_1000A201C();
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_1000FA728(v8, v7, v20);
    }
  }
}

void sub_1000A24B8(void *a1, void *a2, unint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = sub_1000A201C();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Running single service user repair.", v13, 2u);
  }

  if (a3 <= 2 && (id v9 = (os_log_s *)*(id *)*(&off_100192EE8 + a3)) != 0LL)
  {
    uint64_t v10 = v9;
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v9));
    sub_1000A205C(v5, v6, v11);
  }

  else
  {
    id v12 = sub_1000A201C();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1000FA894(v5, a3, v10);
    }
  }
}

void sub_1000A25C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings.userProfiles", "TVSettingsTapToRepairUserPresenter");
  uint64_t v2 = (void *)qword_1001E19E0;
  qword_1001E19E0 = (uint64_t)v1;
}

void sub_1000A25F8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000A201C();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000FA968((uint64_t)v6, v9);
    }
  }

  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = 138412290;
      id v11 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "User repair complete. {setupReport=%@}",  (uint8_t *)&v10,  0xCu);
    }

    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    if ((objc_opt_respondsToSelector(v9, "tapToRepairUserDidFinish:") & 1) != 0) {
      -[os_log_s tapToRepairUserDidFinish:](v9, "tapToRepairUserDidFinish:", *(void *)(a1 + 32));
    }
  }
}

void sub_1000A274C(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsLockdownPairingsFacade);
  uint64_t v2 = (void *)qword_1001E19F0;
  qword_1001E19F0 = (uint64_t)v1;
}

uint64_t sub_1000A282C(uint64_t a1)
{
  return lockdown_enable_wireless_pairing(*(unsigned __int8 *)(a1 + 32));
}

TSKSettingItem *__cdecl sub_1000A2CE0(id a1, TSKListSettingGroup *a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsTCCInfo);
  id v5 = v3;
  id v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 displayName]);
  uint64_t v10 = TSKLocString(@"PrivacyAllowAccess");
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = TSKLocString(@"PrivacyDenyAccess");
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v9,  0LL,  v8,  @"allowAccess",  v11,  v13));

  return (TSKSettingItem *)v14;
}

id sub_1000A30C4(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_1000A31A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateSharedLibraryEnabledState];
}

BOOL sub_1000A333C(uint64_t a1, void *a2)
{
  return [a2 sharingFilter] == *(id *)(a1 + 32);
}

void sub_1000A36D8(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:kTCCServiceSiri];
  uint64_t v2 = (void *)qword_1001E1A00;
  qword_1001E1A00 = (uint64_t)v1;
}

void sub_1000A37E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (qword_1001E1A18 != -1) {
      dispatch_once(&qword_1001E1A18, &stru_100193010);
    }
    id v7 = (void *)qword_1001E1A10;
    if (os_log_type_enabled((os_log_t)qword_1001E1A10, OS_LOG_TYPE_ERROR)) {
      sub_1000FA9DC(v7, v6);
    }
  }

  else
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithBlock:](&OBJC_CLASS___NSPredicate, "predicateWithBlock:", &stru_100192FC8));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 filteredArrayUsingPredicate:v8]);

    if ([v9 count])
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) fetchEnabledAppIds]);
      __int128 v21 = 0u;
      __int128 v22 = 0u;
      __int128 v23 = 0u;
      __int128 v24 = 0u;
      id v20 = v9;
      id v11 = v9;
      id v12 = [v11 countByEnumeratingWithState:&v21 objects:v25 count:16];
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = *(void *)v22;
        do
        {
          for (i = 0LL; i != v13; i = (char *)i + 1)
          {
            if (*(void *)v22 != v14) {
              objc_enumerationMutation(v11);
            }
            uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v21 + 1) + 8 * (void)i) bundleIdentifier]);
            id v17 = [v10 containsObject:v16];
            unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) infoForIdentifier:v16]);
            if (v18)
            {
              id v19 = v18;
              [v18 setAllowAccess:v17];
            }

            else
            {
              id v19 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsTCCInfo infoWithFacade:identifier:allowed:]( &OBJC_CLASS___TVSettingsTCCInfo,  "infoWithFacade:identifier:allowed:",  *(void *)(a1 + 32),  v16,  v17));
            }

            [*(id *)(a1 + 40) setObject:v19 forKey:v16];
          }

          id v13 = [v11 countByEnumeratingWithState:&v21 objects:v25 count:16];
        }

        while (v13);
      }

      id v6 = 0LL;
      id v9 = v20;
    }
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

BOOL sub_1000A3A2C(id a1, id a2, NSDictionary *a3)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "applicationType", a3));
  char v4 = [v3 isEqualToString:LSSystemApplicationType] ^ 1;

  return v4;
}

void sub_1000A3C40(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "SiriAccessFacade");
  uint64_t v2 = (void *)qword_1001E1A10;
  qword_1001E1A10 = (uint64_t)v1;
}

void sub_1000A3CE4(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:kTCCServiceCamera];
  uint64_t v2 = (void *)qword_1001E1A20;
  qword_1001E1A20 = (uint64_t)v1;
}

TSKSettingItem *__cdecl sub_1000A42A0(id a1, TSKListSettingGroup *a2, NSString *a3)
{
  return (TSKSettingItem *)+[TSKSettingItem titleItemWithTitle:description:representedObject:keyPath:]( &OBJC_CLASS___TSKSettingItem,  "titleItemWithTitle:description:representedObject:keyPath:",  a3,  0LL,  0LL,  0LL);
}

void sub_1000A4330(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsScreenSaverFacade);
  uint64_t v2 = (void *)qword_1001E1A30;
  qword_1001E1A30 = (uint64_t)v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue( +[TVSPreferences preferencesWithDomain:]( &OBJC_CLASS___TVSPreferences,  "preferencesWithDomain:",  @"com.apple.airplay"));
  char v4 = *(void **)(qword_1001E1A30 + 32);
  *(void *)(qword_1001E1A30 + 32) = v3;

  uint64_t v5 = objc_claimAutoreleasedReturnValue( +[TVSPreferences addObserverForDomain:withDistributedSynchronizationHandler:]( &OBJC_CLASS___TVSPreferences,  "addObserverForDomain:withDistributedSynchronizationHandler:",  @"com.apple.airplay",  0LL));
  id v6 = (void *)qword_1001E1A38;
  qword_1001E1A38 = v5;
}

void sub_1000A4788( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000A47B4(uint64_t a1)
{
  uint64_t v2 = objc_alloc(&OBJC_CLASS___TVPhotoCollectionGroup);
  uint64_t v3 = TSKLocString(@"SaverBackdropAerialTitle");
  char v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = -[TVPhotoCollectionGroup initWithName:](v2, "initWithName:", v4);
  id v6 = (void *)qword_1001E22F0;
  qword_1001E22F0 = (uint64_t)v5;

  id v7 = objc_alloc(&OBJC_CLASS___TVPhotoCollectionGroup);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _memoryScreenSaverIdentifier]);
  uint64_t v9 = TSKLocString(@"SaverBackdropMemoryDescription");
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = -[TVPhotoCollectionGroup initWithName:description:](v7, "initWithName:description:", v8, v10);
  id v12 = (void *)qword_1001E22F8;
  qword_1001E22F8 = (uint64_t)v11;

  id v13 = objc_alloc(&OBJC_CLASS___TVPhotoCollectionGroup);
  id v18 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _iCloudPhotosScreenSaverIdentifier]);
  uint64_t v14 = TSKLocString(@"SaverBackdropMyPhotosDescription");
  unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  uint64_t v16 = -[TVPhotoCollectionGroup initWithName:description:](v13, "initWithName:description:", v18, v15);
  id v17 = (void *)qword_1001E2300;
  qword_1001E2300 = (uint64_t)v16;
}

id sub_1000A48DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _fetchPhotoCollections];
}

void sub_1000A48E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained invalidateCachedAvailablePhotoCollectionGroups];
}

void sub_1000A4B04(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___TVISScreenSaverServiceController);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_1000A4BB0;
  v4[3] = &unk_10018E568;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  uint64_t v5 = v2;
  uint64_t v3 = v2;
  dispatch_async(&_dispatch_main_q, v4);

  objc_destroyWeak(&v6);
}

void sub_1000A4BB0(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained;
    [*(id *)(a1 + 32) addObserver:WeakRetained];
    objc_storeStrong(v3 + 21, *(id *)(a1 + 32));
    [v3 _updateActiveThemes];
    id WeakRetained = v3;
  }
}

int64_t sub_1000A577C(id a1, TVPhotoCollectionGroup *a2, TVPhotoCollectionGroup *a3)
{
  char v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[TVPhotoCollectionGroup photoCollections](a2, "photoCollections"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 firstObject]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 collectionName]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[TVPhotoCollectionGroup photoCollections](v4, "photoCollections"));

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 firstObject]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 collectionName]);
  id v11 = [v7 localizedCaseInsensitiveCompare:v10];

  return (int64_t)v11;
}

void sub_1000A59D8(id *a1, void *a2)
{
  id v3 = a2;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  id v4 = a1[4];
  id v5 = [v4 countByEnumeratingWithState:&v22 objects:v27 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v23;
    while (2)
    {
      for (i = 0LL; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v23 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v22 + 1) + 8LL * (void)i);
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 photoCollectionGroupIdentifier]);
        LODWORD(v9) = [v10 isEqualToString:v9];

        if ((_DWORD)v9)
        {
          [a1[5] addObject:v3];
          goto LABEL_11;
        }
      }

      id v6 = [v4 countByEnumeratingWithState:&v22 objects:v27 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }

void sub_1000A5E50(_Unwind_Exception *a1)
{
}

void sub_1000A5E70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_1000A5EEC;
    v5[3] = &unk_10018EE18;
    uint64_t v4 = *(void *)(a1 + 40);
    void v5[4] = WeakRetained;
    void v5[5] = v4;
    dispatch_async(&_dispatch_main_q, v5);
  }
}

id sub_1000A5EEC(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 64LL) = *(void *)(a1 + 40);
  return [*(id *)(a1 + 32) didChangeValueForKey:@"idleScreenSaverType"];
}

LABEL_46:
}

int64_t sub_1000A6B08(id a1, TVSettingsScreenSaverViewModel *a2, TVSettingsScreenSaverViewModel *a3)
{
  uint64_t v4 = a3;
  int64_t v5 = -[TVSettingsScreenSaverViewModel preferredOrder](a2, "preferredOrder");
  int64_t v6 = -[TVSettingsScreenSaverViewModel preferredOrder](v4, "preferredOrder");

  return v5 > v6;
}

void sub_1000A6E9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateActiveThemes];
}

void sub_1000A71BC(uint64_t a1, void *a2, void *a3)
{
  id v20 = a2;
  id v6 = a3;
  if (v6)
  {
    if (_TVSLogInternalLogLevel >= 5)
    {
      uint64_t v7 = TVSSystemLog;
      if (pthread_main_np()) {
        id v8 = @"Main:";
      }
      else {
        id v8 = &stru_100195DD8;
      }
      pthread_t v9 = pthread_self();
      uint64_t v18 = *(void *)(a1 + 32);
      id v19 = v6;
      pthread_t v16 = v9;
      uint64_t v17 = v7;
      unsigned __int8 v15 = v8;
LABEL_12:
      _TVSLogBase(v3, &_os_log_default, 1LL, 0LL, 5LL, v7);
    }
  }

  else if (_TVSLogInternalLogLevel >= 5)
  {
    uint64_t v7 = TVSSystemLog;
    if (pthread_main_np()) {
      uint64_t v10 = @"Main:";
    }
    else {
      uint64_t v10 = &stru_100195DD8;
    }
    pthread_t v11 = pthread_self();
    uint64_t v17 = v7;
    uint64_t v18 = *(void *)(a1 + 32);
    unsigned __int8 v15 = v10;
    pthread_t v16 = v11;
    goto LABEL_12;
  }

  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[UIApplication sharedApplication]( &OBJC_CLASS___UIApplication,  "sharedApplication",  v15,  v16,  v17,  v18,  v19));
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 delegate]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 window]);
  [v14 setUserInteractionEnabled:1];
}

void sub_1000A7398(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  [*(id *)(a1 + 32) willChangeValueForKey:@"availablePhotoCollections"];
  [*(id *)(a1 + 32) willChangeValueForKey:@"selectedPhotoCollection"];
  id v6 = [v10 copy];
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(void **)(v7 + 8);
  *(void *)(v7 + _Block_object_dispose((const void *)(v1 - 176), 8) = v6;

  pthread_t v9 = v5;
  if (!v5) {
    pthread_t v9 = (void *)objc_claimAutoreleasedReturnValue([v10 firstObject]);
  }
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16LL), v9);
  if (!v5) {

  }
  [*(id *)(a1 + 32) _invalidatePhotoCollections];
  [*(id *)(a1 + 32) didChangeValueForKey:@"availablePhotoCollections"];
  [*(id *)(a1 + 32) didChangeValueForKey:@"selectedPhotoCollection"];
  *(_BYTE *)(*(void *)(a1 + 32) + 48LL) = 0;
}

void sub_1000A784C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updatePhotosSourceHasMemories];
}

void sub_1000A7878(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateActiveThemes];
}

void sub_1000A78A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateActiveThemes];
}

void sub_1000A78D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateActiveThemes];
}

void sub_1000A8318(_Unwind_Exception *a1)
{
}

void sub_1000A833C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    id v18 = v3;
    id v5 = v3;
    id v6 = [v5 countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v22;
      while (2)
      {
        for (i = 0LL; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v22 != v8) {
            objc_enumerationMutation(v5);
          }
          id v10 = *(void **)(*((void *)&v21 + 1) + 8LL * (void)i);
          pthread_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 identifier]);
          id v12 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained identifier]);
          unsigned int v13 = [v11 isEqual:v12];

          if (v13)
          {
            uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v10 btAddressData]);
            if ([v14 length] == (id)6)
            {
              unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "tvs_lowercaseHexString"));
              pthread_t v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "tvs_MACAddressStringFromHexString"));

              block[0] = _NSConcreteStackBlock;
              block[1] = 3221225472LL;
              block[2] = sub_1000A8534;
              block[3] = &unk_10018E468;
              void block[4] = WeakRetained;
              id v20 = v16;
              id v17 = v16;
              dispatch_async(&_dispatch_main_q, block);
            }

            goto LABEL_14;
          }
        }

        id v7 = [v5 countByEnumeratingWithState:&v21 objects:v25 count:16];
        if (v7) {
          continue;
        }
        break;
      }
    }

id sub_1000A8534(uint64_t a1)
{
  return [*(id *)(a1 + 32) didChangeValueForKey:@"tvset_BTLEMAC"];
}

void sub_1000A91F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000A9218(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (a2 == 2)
  {
    id v5 = sub_1000A92F8();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 138412290;
      id v8 = [v4 session];
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Session %@ canceled", (uint8_t *)&v7, 0xCu);
    }

    ne_session_release([v4 session]);
  }

  else if (a2 == 1)
  {
    [WeakRetained _getConnectionStatus];
  }
}

id sub_1000A92F8()
{
  if (qword_1001E1A68 != -1) {
    dispatch_once(&qword_1001E1A68, &stru_100193270);
  }
  return (id)qword_1001E1A60;
}

void sub_1000A94A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000A94CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained sessionStatus] != 3)
  {
    if ([WeakRetained sessionStatus] == 1)
    {
      id v19 = sub_1000A92F8();
      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v41 = WeakRetained;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Configuration %@ session state is now disconnected",  buf,  0xCu);
      }

      [WeakRetained setRemoteAddress:0];
      [WeakRetained setIpAddresses:0];
      [WeakRetained setSessionConnectTime:0];
      [WeakRetained setDomains:0];
      goto LABEL_39;
    }

    if ([WeakRetained sessionStatus] == 2)
    {
      id v21 = sub_1000A92F8();
      id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v41 = WeakRetained;
        __int128 v22 = "Configuration %@ session state is now connecting";
LABEL_37:
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v22, buf, 0xCu);
      }
    }

    else if ([WeakRetained sessionStatus] == 5)
    {
      id v28 = sub_1000A92F8();
      id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v41 = WeakRetained;
        __int128 v22 = "Configuration %@ session state is now disconnecting";
        goto LABEL_37;
      }
    }

    else
    {
      id v37 = sub_1000A92F8();
      id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v41 = WeakRetained;
        __int128 v22 = "Configuration %@ session state is now reasserting";
        goto LABEL_37;
      }
    }

LABEL_38:
    goto LABEL_39;
  }

  [WeakRetained _startConnectionTimer];
  if (v3)
  {
    xpc_object_t value = xpc_dictionary_get_value(v3, "VPN");
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(value);
    string = xpc_dictionary_get_string(v6, "RemoteAddress");
    if (string)
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", string));
      [WeakRetained setRemoteAddress:v8];
    }

    xpc_object_t v9 = xpc_dictionary_get_value(v3, "IPv4");
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    xpc_object_t v11 = xpc_dictionary_get_value(v3, "IPv6");
    uint64_t v12 = objc_claimAutoreleasedReturnValue(v11);
    unsigned int v13 = (void *)v12;
    if (v10)
    {
      xpc_object_t v14 = xpc_dictionary_get_value(v10, "Addresses");
      unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      pthread_t v16 = v15;
      if (v15 && xpc_array_get_count(v15) && (id v17 = xpc_array_get_string(v16, 0LL)) != 0LL) {
        id v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v17));
      }
      else {
        id v18 = 0LL;
      }

      if (v13) {
        goto LABEL_19;
      }
    }

    else
    {
      id v18 = 0LL;
      if (v12)
      {
LABEL_19:
        xpc_object_t v23 = xpc_dictionary_get_value(v13, "Addresses");
        __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
        __int128 v25 = v24;
        if (v24 && xpc_array_get_count(v24) && (id v26 = xpc_array_get_string(v25, 0LL)) != 0LL) {
          uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v26));
        }
        else {
          uint64_t v27 = 0LL;
        }

        goto LABEL_30;
      }
    }

    uint64_t v27 = 0LL;
LABEL_30:
    id v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    objc_msgSend(v29, "bs_safeAddObject:", v18);
    objc_msgSend(v29, "bs_safeAddObject:", v27);
    id v30 = [v29 copy];
    [WeakRetained setIpAddresses:v30];

    id v31 = +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  xpc_dictionary_get_int64(v6, "ConnectTime"));
    id v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
    [WeakRetained setSessionConnectTime:v32];

    xpc_object_t v33 = xpc_dictionary_get_value(v3, "DNSSupplementalMatchDomains");
    id v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
    __int128 v35 = v34;
    if (v34 && xpc_get_type(v34) == (xpc_type_t)&_xpc_type_array)
    {
      applier[0] = _NSConcreteStackBlock;
      applier[1] = 3221225472LL;
      applier[2] = sub_1000A997C;
      applier[3] = &unk_100193208;
      uint64_t v39 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
      id v36 = v39;
      xpc_array_apply(v35, applier);
      [WeakRetained setDomains:v36];
    }

    goto LABEL_38;
  }

LABEL_39:
}

uint64_t sub_1000A997C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = v4;
  if (v4)
  {
    if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_string)
    {
      string_ptr = xpc_string_get_string_ptr(v5);
      if (string_ptr)
      {
        int v7 = *(void **)(a1 + 32);
        id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", string_ptr));
        [v7 addObject:v8];
      }
    }
  }

  return 1LL;
}

void sub_1000A9B88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000A9BAC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateConnectTimeString];
}

void sub_1000A9C90( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000A9CB4(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setSessionStatus:a2];
  [WeakRetained _updateConnectionStatus];
  [WeakRetained _cancelConnectionTimer];
  [WeakRetained _updateExtendedStatusValues];
}

void sub_1000A9D94(id a1)
{
  if (!mach_timebase_info(&info))
  {
    LODWORD(v1) = info.numer;
    LODWORD(v2) = info.denom;
    *(double *)&qword_1001E1A50 = (double)v1 / (double)v2 / 1000.0 / 1000000.0;
  }

void sub_1000AA21C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "VPNConfiguration");
  unint64_t v2 = (void *)qword_1001E1A60;
  qword_1001E1A60 = (uint64_t)v1;
}

void sub_1000AA28C(id a1)
{
  id v1 = -[TVSettingsAppsFacade _init](objc_alloc(&OBJC_CLASS___TVSettingsAppsFacade), "_init");
  unint64_t v2 = (void *)qword_1001E1A70;
  qword_1001E1A70 = (uint64_t)v1;
}

void sub_1000AADDC(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  @"com.apple.podcasts",  @"com.apple.Fitness",  @"com.apple.TVPhotos",  0LL));
  unint64_t v2 = (void *)qword_1001E1A80;
  qword_1001E1A80 = v1;
}

void sub_1000AAF34(uint64_t a1)
{
  v14[0] = kCFUserNotificationAlertHeaderKey;
  v14[1] = kCFUserNotificationDefaultButtonTitleKey;
  v15[0] = @"Enter URL";
  v15[1] = @"OK";
  v14[2] = kCFUserNotificationOtherButtonTitleKey;
  v14[3] = kCFUserNotificationTextFieldTitlesKey;
  v15[2] = @"Cancel";
  v15[3] = &off_1001AF130;
  void v14[4] = kCFUserNotificationTextFieldValuesKey;
  void v15[4] = &off_1001AF148;
  unint64_t v2 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v15,  v14,  5LL));
  id v3 = CFUserNotificationCreate(0LL, 0.0, 0LL, 0LL, v2);
  if (v3)
  {
    id v4 = v3;
    if (CFUserNotificationReceiveResponse(v3, 240.0, &v13)) {
      CFDictionaryRef ResponseDictionary = 0LL;
    }
    else {
      CFDictionaryRef ResponseDictionary = CFUserNotificationGetResponseDictionary(v4);
    }
    id v6 = ResponseDictionary;
    CFRelease(v4);
  }

  else
  {
    id v6 = 0LL;
  }

  int v7 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary objectForKey:](v6, "objectForKey:", kCFUserNotificationTextFieldValuesKey));
  if (v7)
  {
    uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSArray);
    if ((objc_opt_isKindOfClass(v7, v8) & 1) != 0) {
      xpc_object_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 firstObject]);
    }
    else {
      xpc_object_t v9 = 0LL;
    }
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSString);
    if ((objc_opt_isKindOfClass(v7, v10) & 1) != 0) {
      xpc_object_t v11 = v7;
    }
    else {
      xpc_object_t v11 = v9;
    }
    id v12 = v11;

    [*(id *)(a1 + 32) _trySomeStuffWithURLString:v12];
  }
}

void sub_1000AB450(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT)) {
    sub_1000FAC04(a1, (uint64_t)v6);
  }
}

void sub_1000AB698(uint64_t a1, void *a2, void *a3)
{
  id v13 = a2;
  id v5 = a3;
  id v6 = [v5 applicationType];
  id v7 = v6;
  if (v6 == (id)2
    || v6 == (id)1
    && (id v8 = [(id)objc_opt_class(*(void *)(a1 + 32)) _allowedSystemApps],
        xpc_object_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8),
        unsigned int v10 = [v9 containsObject:v13],
        v9,
        v10))
  {
    xpc_object_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "tvset_applicationRecord"));
    if (([v11 hasSettingsBundle] & 1) != 0
      || [*(id *)(a1 + 32) _shouldShowTCCSettingForBundleIdentifier:v13])
    {
      [*(id *)(a1 + 40) addObject:v13];
      uint64_t v12 = 56LL;
      if (v7 == (id)1) {
        uint64_t v12 = 48LL;
      }
      [*(id *)(a1 + v12) addObject:v5];
    }
  }
}

int64_t sub_1000AB77C(id a1, PBSAppInfo *a2, PBSAppInfo *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PBSAppInfo localizedName](a2, "localizedName"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PBSAppInfo localizedName](v4, "localizedName"));

  id v7 = [v5 caseInsensitiveCompare:v6];
  return (int64_t)v7;
}

void sub_1000AB898(uint64_t a1)
{
  id WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    unint64_t v2 = WeakRetained + 5;
    id v4 = WeakRetained;
    os_unfair_lock_lock(WeakRetained + 5);
    unsigned int v3 = -[os_unfair_lock_s needsUpdate](v4, "needsUpdate");
    -[os_unfair_lock_s setNeedsUpdate:](v4, "setNeedsUpdate:", 0LL);
    os_unfair_lock_unlock(v2);
    id WeakRetained = v4;
    if (v3)
    {
      -[os_unfair_lock_s _updateApps](v4, "_updateApps");
      id WeakRetained = v4;
    }
  }
}

void sub_1000AB9DC(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsLocationServicesFacade);
  unint64_t v2 = (void *)qword_1001E1A90;
  qword_1001E1A90 = (uint64_t)v1;
}

void sub_1000ABAA0()
{
  id v0 = (id)objc_claimAutoreleasedReturnValue( +[TVSettingsLocationServicesFacade sharedInstance]( &OBJC_CLASS___TVSettingsLocationServicesFacade,  "sharedInstance"));
  [v0 _updateItems:1];
}

id sub_1000ABC88(uint64_t a1, void *a2)
{
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

id sub_1000ABCC8(uint64_t a1, void *a2)
{
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

NSString *__cdecl sub_1000ABD30(id a1, id a2)
{
  id v2 = a2;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLocationServicesFacade sharedInstance]( &OBJC_CLASS___TVSettingsLocationServicesFacade,  "sharedInstance"));
  unsigned int v4 = [v3 locationServicesEnabled];

  id v5 = @"LocationAccessNever";
  if (v4)
  {
    id v6 = [v2 unsignedIntegerValue];
    id v7 = @"LocationAccessWhenInUse";
    if (v6 != (id)2) {
      id v7 = @"LocationAccessNever";
    }
    if (v6 == (id)3) {
      id v5 = @"LocationAccessAlways";
    }
    else {
      id v5 = v7;
    }
  }

  uint64_t v8 = TSKLocString(v5);
  xpc_object_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  return (NSString *)v9;
}

id sub_1000ABE1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateItems:1];
}

void sub_1000ABE68(id a1)
{
  v3[0] = @"com.apple.PineBoard";
  v3[1] = @"com.apple.TVIdleScreen";
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v3, 2LL));
  id v2 = (void *)qword_1001E1AA0;
  qword_1001E1AA0 = v1;
}

void sub_1000AC23C(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:a2]);
  [v5 setInfo:v6];
}

void sub_1000AC29C(uint64_t a1, void *a2)
{
  unsigned int v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:v4]);
  id v5 = -[TVSettingsLocationItem initWithInfo:identifier:]( objc_alloc(&OBJC_CLASS___TVSettingsLocationItem),  "initWithInfo:identifier:",  v6,  v4);
  [*(id *)(*(void *)(a1 + 40) + 40) setObject:v5 forKey:v4];
}

void sub_1000AC324(uint64_t a1, void *a2)
{
  id v10 = a2;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "objectForKeyedSubscript:"));
  if (v3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _hiddenSystemServices]);
    unsigned __int8 v5 = [v4 containsObject:v10];

    if ((v5 & 1) == 0) {
      [*(id *)(a1 + 40) addObject:v3];
    }
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    unsigned int v7 = [v6 isEqual:@"/System/Library/LocationBundles/TimeZone.bundle"];

    if (v7) {
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 24LL), v3);
    }
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    unsigned int v9 = [v8 isEqual:@"com.apple.PineBoard"];

    if (v9) {
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 32LL), v3);
    }
  }
}

int64_t sub_1000AC424(id a1, TVSettingsLocationItem *a2, TVSettingsLocationItem *a3)
{
  id v4 = a3;
  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsLocationItem title](a2, "title"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsLocationItem title](v4, "title"));

  id v7 = [v5 localizedCaseInsensitiveCompare:v6];
  return (int64_t)v7;
}

void sub_1000AC490(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsLocationItem appSystemServices](&OBJC_CLASS___TVSettingsLocationItem, "appSystemServices"));
  if (![v6 containsObject:v10])
  {
    if ([v5 type] == (id)2)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsLocationItem allowedSystemServices]( &OBJC_CLASS___TVSettingsLocationItem,  "allowedSystemServices"));
      if (![v7 containsObject:v10])
      {
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _hiddenSystemServices]);
        unsigned __int8 v9 = [v8 containsObject:v10];

        if ((v9 & 1) != 0) {
          goto LABEL_8;
        }
        goto LABEL_3;
      }
    }

    goto LABEL_8;
  }

LABEL_3:
  [*(id *)(a1 + 40) addObject:v5];
LABEL_8:
}

int64_t sub_1000AC578(id a1, TVSettingsLocationItem *a2, TVSettingsLocationItem *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsLocationItem title](a2, "title"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsLocationItem title](v4, "title"));

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

void sub_1000AC870( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1000AC8AC(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _onActivePosterChangedWithObserverState:v4];
}

void sub_1000AC8F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _onPosterCollectionChangedWithUpdatedCollection:v5];
}

void sub_1000ACAC4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000ACAF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_1000ACBC8();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000FAC90();
    }
  }

  else
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    void v6[2] = sub_1000ACC08;
    v6[3] = &unk_10018E568;
    objc_copyWeak(&v8, (id *)(a1 + 40));
    id v7 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, v6);

    objc_destroyWeak(&v8);
  }
}

id sub_1000ACBC8()
{
  if (qword_1001E1AB8 != -1) {
    dispatch_once(&qword_1001E1AB8, &stru_100193550);
  }
  return (id)qword_1001E1AB0;
}

void sub_1000ACC08(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setSelectedPosterItem:*(void *)(a1 + 32)];
}

void sub_1000AD214(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "TVSettingsPosterBoardFacade");
  id v2 = (void *)qword_1001E1AB0;
  qword_1001E1AB0 = (uint64_t)v1;
}

void sub_1000AD474(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:kTCCServiceWillow];
  id v2 = (void *)qword_1001E1AC0;
  qword_1001E1AC0 = (uint64_t)v1;
}

void sub_1000AE0C0(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  objc_sync_enter(v2);
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = *(unsigned __int8 *)(v3 + 32);
  *(_BYTE *)(v3 + 32) = 0;
  objc_sync_exit(v2);

  if (v4)
  {
    [*(id *)(a1 + 32) _updateResidentDevices];
    [*(id *)(a1 + 32) _updateCameraProfiles];
    [*(id *)(a1 + 32) _updateSecureServices];
  }

id sub_1000AE76C(uint64_t a1, void *a2, void *a3)
{
  int v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v7 = v6;
  if (v4)
  {
    id v8 = (uint64_t (**)(void, void, void))objc_claimAutoreleasedReturnValue([v4 sortedHomeKitItemComparator]);
    unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue([v7 cameraItem]);

    id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 cameraItem]);
    id v11 = (id)((uint64_t (**)(void, void *, void *))v8)[2](v8, v9, v10);
  }

  else
  {
    id v8 = (uint64_t (**)(void, void, void))objc_claimAutoreleasedReturnValue([v6 name]);

    unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue([v5 name]);
    id v11 = [v8 compare:v9];
  }

  return v11;
}

int64_t sub_1000AE844(id a1, TVSettingsHomeKitCameraProfile *a2, TVSettingsHomeKitCameraProfile *a3)
{
  int v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsHomeKitCameraProfile name](a2, "name"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsHomeKitCameraProfile name](v4, "name"));

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

id sub_1000AEBB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateCameraProfiles];
}

TSKSettingItem *__cdecl sub_1000AF29C(id a1, TSKListSettingGroup *a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsTCCInfo);
  id v5 = v3;
  id v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 displayName]);
  uint64_t v10 = TSKLocString(@"PrivacyAllowAccess");
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = TSKLocString(@"PrivacyDenyAccess");
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  xpc_object_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v9,  0LL,  v8,  @"allowAccess",  v11,  v13));

  return (TSKSettingItem *)v14;
}

id sub_1000AF6AC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  0LL,  0LL,  v4,  0LL,  v3,  "_didSelectConfiguration:"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);

  [v5 setIdentifier:v6];
  [v5 setUpdateBlock:&stru_100193620];
  return v5;
}

void sub_1000AF748(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v12 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v12, "representedObject"));
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsRemoteConfiguration);
  id v5 = v3;
  id v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 displayName]);
  -[TSKSettingItem setLocalizedTitle:](v12, "setLocalizedTitle:", v9);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 displayDescription]);
  -[TSKSettingItem setLocalizedDescription:](v12, "setLocalizedDescription:", v10);

  LODWORD(v10) = [v8 isSelected];
  if ((_DWORD)v10) {
    uint64_t v11 = 2LL;
  }
  else {
    uint64_t v11 = 0LL;
  }
  -[TSKSettingItem setAccessoryTypes:](v12, "setAccessoryTypes:", v11);
}

void sub_1000AF82C(id a1, TSKSettingItem *a2, NSArray *a3)
{
  uint64_t v4 = a3;
  id v6 = a2;
  -[TSKSettingItem setLocalizedValue:](v6, "setLocalizedValue:", 0LL);
  NSUInteger v5 = -[NSArray count](v4, "count");

  -[TSKSettingItem setHidden:](v6, "setHidden:", v5 == 0);
}

BOOL sub_1000AF9E8(id a1, TVSettingsRemoteConfiguration *a2)
{
  return -[TVSettingsRemoteConfiguration isSelected](a2, "isSelected");
}

void sub_1000AFAE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000AFB00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = TSKLocString(@"RCAddManualVolumeControlFinishedDialogTitle");
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    uint64_t v4 = TSKLocString(@"RCAddManualVolumeControlFinishedDescriptionText");
    NSUInteger v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  v3,  v5,  1LL));

    uint64_t v7 = TSKLocString(@"RCAddManualVolumeControlFinishedOkayDialogActionTitle");
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_1000AFC34;
    v11[3] = &unk_10018F018;
    void v11[4] = WeakRetained;
    unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v8,  1LL,  v11));

    [v6 addAction:v9];
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
    [v10 presentViewController:v6 animated:1 completion:0];
  }
}

id sub_1000AFC34(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  id v3 = [v2 popToViewController:*(void *)(a1 + 32) animated:1];

  return [*(id *)(a1 + 32) reloadSettingsIfNeeded];
}

void sub_1000AFF54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

BOOL sub_1000AFF7C(id a1, TVSettingsRemoteConfiguration *a2)
{
  return -[TVSettingsRemoteConfiguration isSelected](a2, "isSelected");
}

void sub_1000AFF88(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained[1] selectConfiguration:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

id sub_1000B078C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  NSUInteger v5 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedName]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedDescriptionText]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  v6,  v4,  @"isActive",  *(void *)(a1 + 32),  "didSelectOptionItem:"));

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000B087C;
  v10[3] = &unk_10018ED70;
  void v10[4] = *(void *)(a1 + 32);
  id v11 = v4;
  id v8 = v4;
  [v7 setUpdateBlock:v10];

  return v7;
}

void sub_1000B087C(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = [*(id *)(a1 + 32) optionsType];
  if (v3 == (id)1)
  {
    unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue([v12 localizedValue]);
    id v10 = [v9 integerValue];

    [v12 setLocalizedValue:0];
    if (v10) {
      uint64_t v11 = 2LL;
    }
    else {
      uint64_t v11 = 0LL;
    }
    [v12 setAccessoryTypes:v11];
  }

  else if (!v3)
  {
    uint64_t v4 = TSKLocString(@"SaverBackdropThemeShow");
    NSUInteger v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    uint64_t v6 = TSKLocString(@"SaverBackdropThemeHide");
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[TSKBoolFormatter formatterWithOnTitle:offTitle:]( &OBJC_CLASS___TSKBoolFormatter,  "formatterWithOnTitle:offTitle:",  v5,  v7));

    [v12 setLocalizedValueFormatter:v8];
    [v12 setAvailableValues:&off_1001AF1F0];
  }

  objc_msgSend(v12, "setEnabled:", objc_msgSend(*(id *)(a1 + 40), "isDisabled") ^ 1);
}

void sub_1000B15B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11, id *a12, id *a13, id *a14)
{
}

UIViewController *__cdecl sub_1000B170C(id a1, TSKSettingItem *a2)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___TVSettingsAppleConnectSettingsViewController);
  uint64_t v3 = TSKLocString(@"AccountsAppleConnectSettingsTitle");
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  -[TVSettingsAppleConnectSettingsViewController setTitle:](v2, "setTitle:", v4);

  return (UIViewController *)v2;
}

void sub_1000B175C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateAppleConnectItem:v3];
}

UIViewController *__cdecl sub_1000B17A4(id a1, TSKSettingItem *a2)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___TVSettingsInternalVPNViewController);
  uint64_t v3 = TSKLocString(@"SettingsVPNTitle");
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  -[TVSettingsInternalVPNViewController setTitle:](v2, "setTitle:", v4);

  return (UIViewController *)v2;
}

void sub_1000B17F4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateVPNItem:v3];
}

TVSettingsOSUpdateConfigurationViewController *sub_1000B183C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained trainMap]);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 colorMap]);
    NSUInteger v5 = -[TVSettingsOSUpdateConfigurationViewController initWithColorMap:andTrainMap:]( objc_alloc(&OBJC_CLASS___TVSettingsOSUpdateConfigurationViewController),  "initWithColorMap:andTrainMap:",  v4,  v3);
    uint64_t v6 = TSKLocString(@"SettingsOSUpdateConfigurationTitle");
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    -[TVSettingsOSUpdateConfigurationViewController setTitle:](v5, "setTitle:", v7);
  }

  else
  {
    NSUInteger v5 = 0LL;
  }

  return v5;
}

void sub_1000B18EC(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = v5;
    id v8 = [WeakRetained configurationLoadingState];
    [v14 setAccessoryTypes:1];
    if (!v7 || v8 == (id)1)
    {
      if (v8 == (id)1) {
        id v10 = @"SettingsOSUpdateConfigurationFetchingText";
      }
      else {
        id v10 = @"SettingsOSUpdateConfigurationInvalidTrainMenuText";
      }
      uint64_t v11 = TSKLocString(v10);
      uint64_t v9 = objc_claimAutoreleasedReturnValue(v11);
    }

    else
    {
      uint64_t v9 = objc_claimAutoreleasedReturnValue([v7 fullName]);
    }

    id v12 = (void *)v9;
    [v14 setLocalizedValue:v9];

    id v13 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _descriptionForConfiguration:v7]);
    [v14 setLocalizedDescription:v13];
  }
}

void sub_1000B19E4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "_shouldShowAdvancedSettings") ^ 1);
}

void sub_1000B1A34(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "_shouldShowAdvancedSettings") ^ 1);
}

void sub_1000B1A84(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "_shouldShowAdvancedSettings") ^ 1);
}

void sub_1000B1AD4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "_shouldShowAdvancedSettings") ^ 1);
}

void sub_1000B1B24(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "_shouldShowAdvancedSettings") ^ 1);
}

void sub_1000B1B74(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "setHidden:", objc_msgSend(WeakRetained, "_shouldShowAdvancedSettings") ^ 1);
}

id sub_1000B1CDC(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472LL;
  v2[2] = sub_1000B1D3C;
  v2[3] = &unk_100193798;
  void v2[4] = *(void *)(a1 + 32);
  return +[TVSettingsOSUpdateConfigurationManager availableTrainsAndConfigurationsFromLivAPIWithCompletion:]( &OBJC_CLASS___TVSettingsOSUpdateConfigurationManager,  "availableTrainsAndConfigurationsFromLivAPIWithCompletion:",  v2);
}

void sub_1000B1D3C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000B1DEC;
  block[3] = &unk_10018EA28;
  uint64_t v7 = *(void *)(a1 + 32);
  id v11 = v6;
  uint64_t v12 = v7;
  id v13 = v5;
  id v8 = v5;
  id v9 = v6;
  dispatch_async(&_dispatch_main_q, block);
}

id sub_1000B1DEC(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count]) {
    [*(id *)(a1 + 40) setColorMap:*(void *)(a1 + 32)];
  }
  [*(id *)(a1 + 40) setTrainMap:*(void *)(a1 + 48)];
  [*(id *)(a1 + 40) setConfigurationLoadingState:0];
  return [*(id *)(a1 + 40) reloadSettingsIfNeeded];
}

void sub_1000B2650(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    *((_BYTE *)WeakRetained + 16) = 1;
    uint64_t v2 = (id *)WeakRetained;
    [*((id *)WeakRetained + 1) setHidden:0];
    [v2[4] startAnimating];
    id WeakRetained = v2;
  }
}

TSKSettingItem *__cdecl sub_1000B2B5C(id a1, TSKListSettingGroup *a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsTCCInfo);
  id v5 = v3;
  id v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0LL;
    }
  }

  else
  {
    uint64_t v7 = 0LL;
  }

  id v8 = v7;

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 displayName]);
  uint64_t v10 = TSKLocString(@"PrivacyAllowAccess");
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = TSKLocString(@"PrivacyDenyAccess");
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v9,  0LL,  v8,  @"allowAccess",  v11,  v13));

  return (TSKSettingItem *)v14;
}

void sub_1000B2D58(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsiTunesMoviesFacade);
  uint64_t v2 = (void *)qword_1001E1AD0;
  qword_1001E1AD0 = (uint64_t)v1;
}

void sub_1000B3140(id a1, TSKSettingItem *a2, id a3)
{
  id v5 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSRestrictionsSettings sharedInstance](&OBJC_CLASS___PBSRestrictionsSettings, "sharedInstance"));
  id v4 = [v3 allowsBackgroundAppRefreshModification];

  -[TSKSettingItem setEnabled:](v5, "setEnabled:", v4);
  -[TSKSettingItem setEditable:](v5, "setEditable:", v4);
}

TSKSettingItem *__cdecl sub_1000B31A8(id a1, TSKListSettingGroup *a2, TVSettingsBackgroundAppRefreshSettings *a3)
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsBackgroundAppRefreshSettings displayName](v3, "displayName"));
  uint64_t v5 = TSKLocString(@"BackgroundAppRefreshDescription");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v4,  v6,  v3,  @"allowsBackgroundAppRefresh",  0LL,  0LL));

  [v7 setUpdateBlock:&stru_100193858];
  return (TSKSettingItem *)v7;
}

void sub_1000B3244(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v7 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSRestrictionsSettings sharedInstance](&OBJC_CLASS___PBSRestrictionsSettings, "sharedInstance"));
  unsigned int v4 = [v3 allowsBackgroundAppRefreshModification];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsBackgroundAppRefreshFacade sharedInstance]( &OBJC_CLASS___TVSettingsBackgroundAppRefreshFacade,  "sharedInstance"));
  unsigned int v6 = [v5 backgroundAppRefreshEnabled];

  -[TSKSettingItem setEnabled:](v7, "setEnabled:", v4 & v6);
  -[TSKSettingItem setEditable:](v7, "setEditable:", v4 & v6);
}

void sub_1000B334C(uint64_t a1)
{
  id v1 = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  uint64_t v2 = (void *)qword_1001E1AE0;
  qword_1001E1AE0 = (uint64_t)v1;
}

id sub_1000B36A0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) enforceHDMIOutput];
}

id sub_1000B3B30()
{
  if (qword_1001E1AF8 != -1) {
    dispatch_once(&qword_1001E1AF8, &stru_100193940);
  }
  return (id)qword_1001E1AF0;
}

void sub_1000B3BC8(uint64_t a1)
{
  double v3 = v2;
  id v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  pthread_t v16 = sub_1000B3D9C;
  id v17 = &unk_100193880;
  objc_copyWeak(&v18, &location);
  uint64_t v4 = objc_claimAutoreleasedReturnValue( +[NSTimer scheduledTimerWithTimeInterval:repeats:block:]( &OBJC_CLASS___NSTimer,  "scheduledTimerWithTimeInterval:repeats:block:",  0LL,  &v14,  v3));
  uint64_t v5 = *(void *)(a1 + 32);
  unsigned int v6 = *(void **)(v5 + 8);
  *(void *)(v5 + _Block_object_dispose((const void *)(v1 - 176), 8) = v4;

  *(_BYTE *)(*(void *)(a1 + 32) + 24LL) = 0;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSNotificationCenter defaultCenter]( &OBJC_CLASS___NSNotificationCenter,  "defaultCenter",  v14,  v15,  v16,  v17));
  [v7 addObserver:*(void *)(a1 + 32) selector:"discoverySessionDidChangeAvailableOutputDevices" name:AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification object:0];

  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v8 addObserver:*(void *)(a1 + 32) selector:"outputDevicesDidChange" name:AVOutputContextOutputDevicesDidChangeNotification object:0];

  id v9 = *(void **)(a1 + 32);
  uint64_t v10 = -[AVOutputDeviceDiscoverySession initWithDeviceFeatures:]( objc_alloc(&OBJC_CLASS___AVOutputDeviceDiscoverySession),  "initWithDeviceFeatures:",  1LL);
  [v9 setDiscoverySession:v10];

  id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) discoverySession]);
  [v11 setDiscoveryMode:2];

  uint64_t v12 = *(id **)(a1 + 32);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12[4] availableOutputDevices]);
  [v12 _updateAvailableOutputDevices:v13];

  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);
}

void sub_1000B3D74( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000B3D9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = (void *)WeakRetained[1];
  WeakRetained[1] = 0LL;

  double v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"TVSettingsHDMIEnforcerErrorDomain",  -1201LL,  0LL));
  [WeakRetained completeWithError:v2];
}

id sub_1000B3E64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(v2 + 8);
  *(void *)(v2 + _Block_object_dispose((const void *)(v1 - 176), 8) = 0LL;

  uint64_t v4 = *(_BYTE **)(a1 + 32);
  if (!v4[25]) {
    return [v4 completeWithError:0];
  }
  id v5 = sub_1000B3B30();
  unsigned int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Setting HDMI has been cancelled...", v8, 2u);
  }

  return [*(id *)(a1 + 32) cancel];
}

void sub_1000B3F68(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 72LL);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t, void))(v2 + 16))(v2, 1LL, 0LL);
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void **)(v3 + 72);
    *(void *)(v3 + 72) = 0LL;
  }

void sub_1000B4034(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 72LL);
  if (v2)
  {
    (*(void (**)(uint64_t, void, void))(v2 + 16))(v2, 0LL, *(void *)(a1 + 40));
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void **)(v3 + 72);
    *(void *)(v3 + 72) = 0LL;
  }

void sub_1000B40DC(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472LL;
  v2[2] = sub_1000B41A8;
  v2[3] = &unk_10018F430;
  objc_copyWeak(&v3, &location);
  [v1 updateLocalAccessoryAudioDestination:0 forceUpdateWithUnavailableDestination:0 completionHandler:v2];

  objc_destroyWeak(&v3);
  objc_destroyWeak(&location);
}

void sub_1000B4184(_Unwind_Exception *a1)
{
}

void sub_1000B41A8(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = sub_1000B3B30();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v6)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Temporarily disabled Odeon", buf, 2u);
    }

    [WeakRetained startWaitingForHDMI];
  }

  else
  {
    if (v6)
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Failed to disable Odeon", v8, 2u);
    }

    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"TVSettingsHDMIEnforcerErrorDomain",  -1201LL,  0LL));
    [WeakRetained completeWithError:v7];
  }
}

void sub_1000B42F4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSEARCConfigurator sharedInstance](&OBJC_CLASS___PBSEARCConfigurator, "sharedInstance"));
  [v2 addEARCObserver:*(void *)(a1 + 32)];

  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSEARCConfigurator sharedInstance](&OBJC_CLASS___PBSEARCConfigurator, "sharedInstance"));
  [v3 enableEARC:0];

  *(_BYTE *)(*(void *)(a1 + 32) + 26LL) = 1;
  objc_initWeak(&location, *(id *)(a1 + 32));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1000B4418;
  v7[3] = &unk_100191FD8;
  objc_copyWeak(&v8, &location);
  void v7[4] = *(void *)(a1 + 32);
  uint64_t v4 = objc_claimAutoreleasedReturnValue( +[NSTimer scheduledTimerWithTimeInterval:repeats:block:]( &OBJC_CLASS___NSTimer,  "scheduledTimerWithTimeInterval:repeats:block:",  0LL,  v7,  2.0));
  uint64_t v5 = *(void *)(a1 + 32);
  BOOL v6 = *(void **)(v5 + 16);
  *(void *)(v5 + 16) = v4;

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void sub_1000B43FC(_Unwind_Exception *a1)
{
}

void sub_1000B4418(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = sub_1000B3B30();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Timeout waiting for eARC status change", v9, 2u);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBSEARCConfigurator sharedInstance](&OBJC_CLASS___PBSEARCConfigurator, "sharedInstance"));
  [v5 removeEARCObserver:*(void *)(a1 + 32)];

  BOOL v6 = (void *)WeakRetained[2];
  WeakRetained[2] = 0LL;

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBSEARCConfigurator sharedInstance](&OBJC_CLASS___PBSEARCConfigurator, "sharedInstance"));
  [v7 enableEARC:1];

  *((_BYTE *)WeakRetained + 26) = 0;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"TVSettingsHDMIEnforcerErrorDomain",  -1201LL,  0LL));
  [WeakRetained completeWithError:v8];
}

void *sub_1000B46F8(void *result)
{
  if (!result[5])
  {
    uint64_t result = (void *)result[4];
    if (result[2]) {
      return _[result finishWaitingForEARCToDisable];
    }
  }

  return result;
}

void sub_1000B4944(_Unwind_Exception *a1)
{
}

void sub_1000B4958(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6 = a2;
  if ([v6 deviceType] == (id)4 && objc_msgSend(v6, "deviceSubType") == (id)8)
  {
    id v7 = sub_1000B3B30();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Local Device Found: %{public}@", buf, 0xCu);
    }

    *a4 = 1;
    *(_BYTE *)(*(void *)(a1 + 32) + 24LL) = 1;
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[AVOutputContext sharedAudioPresentationOutputContext]( &OBJC_CLASS___AVOutputContext,  "sharedAudioPresentationOutputContext"));
    id v11 = v6;
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v11, 1LL));
    [v9 setOutputDevices:v10];
  }
}

void sub_1000B4A84(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_1000B4C4C;
  v15[3] = &unk_1001938D0;
  id v5 = v3;
  uint64_t v6 = *(void *)(a1 + 40);
  id v16 = v5;
  uint64_t v17 = v6;
  id v7 = [v4 indexOfObjectPassingTest:v15];
  if (v7 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v8 = v7;
    id v9 = sub_1000B3B30();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectAtIndex:v8]);
      *(_DWORD *)buf = 138543362;
      id v19 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Matched Preferred Output Device: %{public}@",  buf,  0xCu);
    }

    uint64_t v12 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectAtIndex:v8]);
    if (!v12)
    {
      id v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"outputDevice != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_1000FAE70(a1, (void *)(a1 + 40), (uint64_t)v14);
      }
      _bs_set_crash_log_message([v14 UTF8String]);
      __break(0);
      JUMPOUT(0x1000B4C44LL);
    }

    id v13 = (void *)v12;
    [*(id *)(*(void *)(a1 + 40) + 48) addObject:v12];
  }
}

uint64_t sub_1000B4C4C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6 = *(void **)(a1 + 32);
  id v7 = a2;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 deviceID]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 deviceID]);

  if ([v8 isEqualToString:v9])
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) deviceID]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mediaDestinationDeviceID]);
    unsigned __int8 v12 = [v10 isEqualToString:v11];

    if ((v12 & 1) == 0)
    {
      uint64_t result = 1LL;
      *a4 = 1;
      return result;
    }
  }

  else
  {
  }

  return 0LL;
}

void *sub_1000B4E14(uint64_t a1)
{
  uint64_t result = [*(id *)(a1 + 32) isCurrentOutputDeviceHDMI];
  if ((_DWORD)result)
  {
    uint64_t result = *(void **)(a1 + 32);
    if (result[1]) {
      return [result finishWaitingForHMDI];
    }
  }

  return result;
}

void sub_1000B4EFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 8))
  {
    *(_BYTE *)(v2 + 25) = 1;
    [*(id *)(a1 + 32) finishWaitingForHMDI];
    uint64_t v2 = *(void *)(a1 + 32);
  }

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1000B5034;
  v9[3] = &unk_10018E440;
  void v9[4] = v2;
  id v3 = objc_retainBlock(v9);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredMediaDestination]);

  if (v4)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredMediaDestination]);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1000B5110;
    v7[3] = &unk_100193920;
    void v7[4] = *(void *)(a1 + 32);
    id v8 = v3;
    [v5 updateLocalAccessoryAudioDestination:v6 forceUpdateWithUnavailableDestination:0 completionHandler:v7];
  }

  else
  {
    ((void (*)(void *))v3[2])(v3);
  }
}

void sub_1000B5034(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 48) count])
  {
    id v2 = sub_1000B3B30();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 48LL);
      int v6 = 138543362;
      uint64_t v7 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Restoring Available Output Devices: %{public}@",  (uint8_t *)&v6,  0xCu);
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[AVOutputContext sharedAudioPresentationOutputContext]( &OBJC_CLASS___AVOutputContext,  "sharedAudioPresentationOutputContext"));
    [v5 setOutputDevices:*(void *)(*(void *)(a1 + 32) + 48)];
  }

uint64_t sub_1000B5110(uint64_t a1, int a2)
{
  id v4 = sub_1000B3B30();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = @"failed";
    if (a2) {
      int v6 = @"succeeded";
    }
    int v8 = 138412290;
    id v9 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Re-enable Odeon %@", (uint8_t *)&v8, 0xCu);
  }

  [*(id *)(a1 + 32) reenableEARCIfNecessary];
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1000B52FC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.tvsettings", "HDMIEnforcer");
  id v2 = (void *)qword_1001E1AF0;
  qword_1001E1AF0 = (uint64_t)v1;
}

void sub_1000B553C(id a1)
{
}

void sub_1000B5564(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000FAF74();
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_INFO,  "Activated continuity camera discovery",  v3,  2u);
  }
}

void sub_1000B5AF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[PBSSystemService sharedInstance](&OBJC_CLASS___PBSSystemService, "sharedInstance"));
  [v4 pairAppleRemote:*(unsigned __int8 *)(a1 + 32) completion:v3];
}

void sub_1000B5D04( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000B5D30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _learnNewRemote];
    id WeakRetained = v2;
  }
}

void sub_1000B6264( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
}

void sub_1000B62E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = objc_alloc_init(&OBJC_CLASS___TVSettingsRenameIRDeviceViewController);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remotesFacade]);
  -[TVSettingsRenameIRDeviceViewController setRemotesFacade:](v5, "setRemotesFacade:", v6);

  -[TVSettingsRenameIRDeviceViewController setConfiguration:](v5, "setConfiguration:", *(void *)(a1 + 32));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1000B6404;
  v8[3] = &unk_10018E810;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  -[TVSettingsRenameIRDeviceViewController setCompletionHandler:](v5, "setCompletionHandler:", v8);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v7 pushViewController:v5 animated:1];

  objc_destroyWeak(&v9);
}

void sub_1000B63EC(_Unwind_Exception *a1)
{
}

void sub_1000B6404(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popToViewController:WeakRetained animated:1];
}

void sub_1000B6458(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(&OBJC_CLASS___TVSettingsLearnRemoteViewController);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] UUID]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBSExternalControlIRLearningConfiguration basicConfigurationForDeviceWithUUID:]( &OBJC_CLASS___PBSExternalControlIRLearningConfiguration,  "basicConfigurationForDeviceWithUUID:",  v5));
  -[TVSettingsLearnRemoteViewController setConfiguration:](v4, "setConfiguration:", v6);

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1000B6588;
  v9[3] = &unk_1001936C8;
  a1 += 5;
  objc_copyWeak(&v10, a1);
  -[TVSettingsLearnRemoteViewController setCompletionHandler:](v4, "setCompletionHandler:", v9);
  id WeakRetained = objc_loadWeakRetained(a1);
  int v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v8 pushViewController:v4 animated:1];

  objc_destroyWeak(&v10);
}

void sub_1000B6570(_Unwind_Exception *a1)
{
}

void sub_1000B6588(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popToViewController:WeakRetained animated:1];
}

void sub_1000B65DC(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(&OBJC_CLASS___TVSettingsLearnRemoteViewController);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] UUID]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBSExternalControlIRLearningConfiguration playbackConfigurationForDeviceWithUUID:]( &OBJC_CLASS___PBSExternalControlIRLearningConfiguration,  "playbackConfigurationForDeviceWithUUID:",  v5));
  -[TVSettingsLearnRemoteViewController setConfiguration:](v4, "setConfiguration:", v6);

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1000B670C;
  v9[3] = &unk_1001936C8;
  a1 += 5;
  objc_copyWeak(&v10, a1);
  -[TVSettingsLearnRemoteViewController setCompletionHandler:](v4, "setCompletionHandler:", v9);
  id WeakRetained = objc_loadWeakRetained(a1);
  int v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v8 pushViewController:v4 animated:1];

  objc_destroyWeak(&v10);
}

void sub_1000B66F4(_Unwind_Exception *a1)
{
}

void sub_1000B670C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popToViewController:WeakRetained animated:1];
}

void sub_1000B6760(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(&OBJC_CLASS___TVSettingsLearnRemoteViewController);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] UUID]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBSExternalControlIRLearningConfiguration guideConfigurationForDeviceWithUUID:]( &OBJC_CLASS___PBSExternalControlIRLearningConfiguration,  "guideConfigurationForDeviceWithUUID:",  v5));
  -[TVSettingsLearnRemoteViewController setConfiguration:](v4, "setConfiguration:", v6);

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1000B6890;
  v9[3] = &unk_1001936C8;
  a1 += 5;
  objc_copyWeak(&v10, a1);
  -[TVSettingsLearnRemoteViewController setCompletionHandler:](v4, "setCompletionHandler:", v9);
  id WeakRetained = objc_loadWeakRetained(a1);
  int v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v8 pushViewController:v4 animated:1];

  objc_destroyWeak(&v10);
}

void sub_1000B6878(_Unwind_Exception *a1)
{
}

void sub_1000B6890(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popToViewController:WeakRetained animated:1];
}

void sub_1000B68E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = TSKLocString(@"RCDeleteLearnedRemoteDescriptionText");
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  int v6 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  v5,  0LL,  1LL));

  uint64_t v7 = TSKLocString(@"RCDeleteLearnedRemoteConfirmButtonTitle");
  int v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 3221225472LL;
  id v18 = sub_1000B6AAC;
  id v19 = &unk_10018F4C0;
  id v9 = (id *)(a1 + 40);
  objc_copyWeak(&v21, (id *)(a1 + 40));
  id v20 = *(id *)(a1 + 32);
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v8,  2LL,  &v16));

  objc_msgSend(v6, "addAction:", v10, v16, v17, v18, v19);
  uint64_t v11 = TSKLocString(@"RCDeleteLearnedRemoteCancelButtonTitle");
  unsigned __int8 v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v12,  1LL,  0LL));

  [v6 addAction:v13];
  id WeakRetained = objc_loadWeakRetained(v9);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v15 presentViewController:v6 animated:1 completion:0];

  objc_destroyWeak(&v21);
}

void sub_1000B6A90(_Unwind_Exception *a1)
{
}

void sub_1000B6AAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remotesFacade]);
  uint64_t v6 = *(void *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1000B6B80;
  v7[3] = &unk_10018E810;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  [v5 deleteConfiguration:v6 withCompletionHandler:v7];

  objc_destroyWeak(&v8);
}

void sub_1000B6B6C(_Unwind_Exception *a1)
{
}

void sub_1000B6B80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v1 dismissViewControllerAnimated:1 completion:0];
}

void sub_1000B6DA4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000B6DE0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Continuity camera picker completed, reloading...",  v11,  2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadSettingsIfNeeded];
  if (v5 && !v6)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained continuityCameraFacade]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 UUIDString]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 deviceForIdentifier:v9]);

    [WeakRetained _sendDedicatedCameraSetupCompleteAnalyticsWithDevice:v10];
  }
}

id sub_1000B6FF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v3 = @"continuityDeviceModel";
  uint64_t v4 = v1;
  return (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v4,  &v3,  1LL));
}

void sub_1000B77D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, id location)
{
}

void sub_1000B7818(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "supportsClickpadModes") ^ 1);
}

void sub_1000B785C(uint64_t a1, void *a2)
{
  id v4 = a2;
  objc_msgSend(v4, "setHidden:", objc_msgSend(*(id *)(a1 + 32), "supportsSensitivity") ^ 1);
  else {
    BOOL v3 = 1LL;
  }
  [v4 setEnabled:v3];
}

uint64_t sub_1000B78CC()
{
  uint64_t v4 = 0LL;
  id v5 = &v4;
  uint64_t v6 = 0x2020000000LL;
  id v0 = (uint64_t (*)(void))off_1001E1B08;
  uint64_t v7 = off_1001E1B08;
  if (!off_1001E1B08)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    void v3[2] = sub_1000BAAC8;
    v3[3] = &unk_100193B18;
    void v3[4] = &v4;
    sub_1000BAAC8((uint64_t)v3);
    id v0 = (uint64_t (*)(void))v5[3];
  }

  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    id v2 = (_Unwind_Exception *)sub_1000FB0B8();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v2);
  }

  return v0();
}

void sub_1000B7980(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  if ([a3 BOOLValue])
  {
    [v11 setAttributedLocalizedDescription:*(void *)(a1 + 32)];
    [v11 setLocalizedDescription:0];
  }

  else
  {
    uint64_t v5 = TSKLocString(@"RemoteTVButtonDescriptionHomeScreen");
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    [v11 setLocalizedDescription:v6];

    [v11 setAttributedLocalizedDescription:0];
  }

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBSAppInfoController sharedInstance](&OBJC_CLASS___PBSAppInfoController, "sharedInstance"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 appInfos]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"com.apple.TVWatchList"]);
  BOOL v10 = v9 == 0LL;

  [v11 setHidden:v10];
}

id sub_1000B7A64(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = TSKLocString(@"BluetoothAppleRemoteTitle");
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v6,  0LL,  v4,  @"state",  &stru_1001939E8));

  [v7 setLocalizedValueFormatter:*(void *)(a1 + 32)];
  [v7 setEnabledInStoreDemoMode:0];
  id v8 = objc_opt_new(&OBJC_CLASS___NSMutableAttributedString);
  if (+[TVSDevice runningAnInternalBuild](&OBJC_CLASS___TVSDevice, "runningAnInternalBuild"))
  {
    id v9 = -[NSAttributedString initWithString:attributes:]( objc_alloc(&OBJC_CLASS___NSAttributedString),  "initWithString:attributes:",  @"(Internal Only) [4x Play/Pause] = Unpair",  0LL);
    -[NSMutableAttributedString appendAttributedString:](v8, "appendAttributedString:", v9);
  }

  [v7 setAttributedLocalizedDescription:v8];
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue( +[TSKKonamiCode codeWithSequence:action:]( &OBJC_CLASS___TSKKonamiCode,  "codeWithSequence:action:",  &off_1001AF220,  "_activateKonamiCodeForUnpair:"));
  [v7 addKonamiCode:v10];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [v7 setTarget:WeakRetained];

  return v7;
}

UIViewController *__cdecl sub_1000B7BAC(id a1, TSKSettingItem *a2)
{
  id v2 = a2;
  BOOL v3 = objc_alloc_init(&OBJC_CLASS___TVSettingsBluetoothInfoViewController);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem localizedTitle](v2, "localizedTitle"));

  -[TVSettingsBluetoothInfoViewController setTitle:](v3, "setTitle:", v4);
  return (UIViewController *)v3;
}

void sub_1000B82F0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, id location)
{
}

void sub_1000B83AC(id *a1, void *a2)
{
  id v12 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained(a1 + 6);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[8] dedicatedDevice]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[8] connectedDevice]);
  if (v5)
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[8] connectedDevice]);
    unsigned int v7 = [v6 isDedicated] ^ 1;
  }

  else
  {
    unsigned int v7 = 0;
  }

  [v12 setEnabled:v7 ^ 1];
  if (!v4)
  {
    uint64_t v10 = TSKLocString(@"DedicatedCameraSetupValue");
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v10);
    if ((v7 & 1) != 0) {
      goto LABEL_6;
    }
LABEL_8:
    id v9 = a1 + 5;
    goto LABEL_9;
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 name]);
  if (!v7) {
    goto LABEL_8;
  }
LABEL_6:
  id v9 = a1 + 4;
LABEL_9:
  id v11 = *v9;
  [v12 setLocalizedValue:v8];
  [v12 setLocalizedDescription:v11];
}

TVSettingsBluetoothViewController *sub_1000B84C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___TVSettingsBluetoothViewController);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained bluetoothFacade]);
  unsigned int v7 = -[TVSettingsBluetoothViewController initWithFacade:](v4, "initWithFacade:", v6);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 localizedTitle]);
  -[TVSettingsBluetoothViewController setTitle:](v7, "setTitle:", v8);

  return v7;
}

void sub_1000B8560(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  else {
    id v4 = @"RCPairRemoteTitle";
  }
  uint64_t v5 = TSKLocString(v4);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  [v3 setLocalizedTitle:v6];
}

id sub_1000B85D8(uint64_t a1, char a2)
{
  uint64_t v4 = TSKLocString(@"RCLearnRemoteTitle");
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = TSKLocString(@"RCLearnRemoteInstructionalText");
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  v7,  0LL,  0LL,  *(void *)(a1 + 32),  "_didSelectLearnNewRemoteItem:"));

  objc_msgSend(v8, "setEnabled:", objc_msgSend(*(id *)(a1 + 40), "isReadyForUse"));
  [v8 setAccessoryTypes:1];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000B8728;
  v10[3] = &unk_100193A38;
  objc_copyWeak(&v11, &location);
  char v12 = a2;
  [v8 setUpdateBlock:v10];
  objc_destroyWeak(&v11);
  objc_destroyWeak(&location);
  return v8;
}

void sub_1000B8704( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000B8728(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = (id)objc_claimAutoreleasedReturnValue( +[PBSExternalControlFeature featureForType:]( &OBJC_CLASS___PBSExternalControlFeature,  "featureForType:",  4LL));
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v5, "isReadyForUse"));
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend( v3,  "setHidden:",  *(unsigned __int8 *)(a1 + 40) == objc_msgSend(WeakRetained, "_showLearnedRemotes"));
}

id sub_1000B87B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 deviceName]);
  uint64_t v6 = TSKLocString(@"RCLearnedRemoteItemInstructionalText");
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  v7,  v4,  0LL,  WeakRetained,  "_didSelectLearnedRemoteItem:"));

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
  [v9 setIdentifier:v10];

  objc_msgSend(v9, "setEnabled:", objc_msgSend(*(id *)(a1 + 32), "isReadyForUse"));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1000B88E8;
  v13[3] = &unk_10018E608;
  id v14 = v4;
  id v11 = v4;
  [v9 setUpdateBlock:v13];

  return v9;
}

void sub_1000B88E8(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue([v2 displayName]);
  [v3 setLocalizedTitle:v4];
}

void sub_1000B8B9C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_1000B8BBC(uint64_t a1, void *a2)
{
  id v23 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PBSExternalControlFeature featureForType:]( &OBJC_CLASS___PBSExternalControlFeature,  "featureForType:",  0LL));
  id v5 = @"RCIRPowerTitle";
  if ([v4 isConfiguredForUse])
  {
    id v6 = [v4 transport];
    BOOL v7 = v6 == (id)1;
    if (v6 == (id)1) {
      id v5 = @"RCCECPowerTitle";
    }
  }

  else
  {
    BOOL v7 = 0;
  }

  uint64_t v8 = TSKLocString(v5);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  [v23 setLocalizedTitle:v9];

  uint64_t v10 = @"RCTogglePowerOffValue";
  if ([v4 isReadyForUse])
  {
    unsigned int v11 = [v4 isConfiguredForUse];
    char v12 = v11;
    if (v11) {
      uint64_t v10 = @"RCTogglePowerOnValue";
    }
  }

  else
  {
    char v12 = 0;
  }

  uint64_t v13 = TSKLocString(v10);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  [v23 setLocalizedValue:v14];

  id v15 = [WeakRetained _canProgramBluetoothRemote];
  id v16 = @"RCIRPowerInstructionalTextNoRemote";
  if ((_DWORD)v15) {
    id v16 = @"RCIRPowerInstructionalText";
  }
  if (v7) {
    uint64_t v17 = @"RCCECPowerInstructionalText";
  }
  else {
    uint64_t v17 = v16;
  }
  uint64_t v18 = TSKLocString(v17);
  id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  if ((v12 & 1) == 0 && v7)
  {
    uint64_t v20 = TSKLocString(@"RCDisabledCECInstructionalText");
    id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
    uint64_t v22 = objc_claimAutoreleasedReturnValue([v19 stringByAppendingString:v21]);

    id v19 = (void *)v22;
  }

  [v23 setLocalizedDescription:v19];
  if (!v7) {
    [v23 setEnabled:v15];
  }
}

void sub_1000B903C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_1000B9070(uint64_t a1, void *a2)
{
  id v22 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stringForCurrentVolumePolicy]);
  [v22 setLocalizedValue:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[PBSExternalControlFeature featureForType:]( &OBJC_CLASS___PBSExternalControlFeature,  "featureForType:",  0LL));
  id v6 = [v5 transport];
  else {
    unsigned int v7 = 0;
  }
  unsigned int v8 = [WeakRetained _canProgramBluetoothRemote];
  unsigned int v9 = [WeakRetained _isAudioUsingARC];
  unsigned int v10 = [WeakRetained cachedAudioOutputIsHomeTheater];
  unsigned int v11 = v10;
  if (v9)
  {
    char v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    uint64_t v13 = TSKLocStringFromBundleCachingKey( @"RCVCInstructionalTextHomeTheater",  v12,  1LL,  0LL,  @"Localizable-j305");
    id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  }

  else
  {
    if (v10)
    {
      uint64_t v15 = TSKLocString(@"RCVCInstructionalTextOdeon");
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v15);
      goto LABEL_17;
    }

    if ((v8 & 1) != 0) {
      id v16 = @"RCVCInstructionalText";
    }
    else {
      id v16 = @"RCVCInstructionalTextNoRemote";
    }
    uint64_t v17 = TSKLocString(v16);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(v17);
  }

  if (v6 == (id)1) {
    int v18 = v7;
  }
  else {
    int v18 = 1;
  }
  if (((v18 | v11) & 1) == 0)
  {
    uint64_t v19 = TSKLocString(@"RCDisabledCECInstructionalText");
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
    uint64_t v21 = objc_claimAutoreleasedReturnValue([v14 stringByAppendingString:v20]);

    id v14 = (void *)v21;
  }

void sub_1000B9244(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = 1;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[PBSExternalControlFeature featureForType:]( &OBJC_CLASS___PBSExternalControlFeature,  "featureForType:",  1LL));
  if ([v6 isEnabled])
  {
    else {
      BOOL v4 = 1;
    }
  }

  uint64_t v5 = [*(id *)(*(void *)(a1 + 32) + 32) volumeControlTargetDeviceType] != (id)2 || v4;
  [v3 setHidden:v5];
}

void sub_1000B955C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000B957C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained externalControlSystem]);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_1000B962C;
    v8[3] = &unk_100193AB0;
    void v8[4] = v6;
    id v9 = v4;
    [v7 getNameForExternalIRDeviceWithUUID:v9 withCompletion:v8];
  }
}

id sub_1000B962C(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _showLearnedRemoteOptionsAlertForDevice:*(void *)(a1 + 40) withName:a2];
}

void sub_1000B98B4(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  id v2 = [v3 popToViewController:*(void *)(a1 + 32) animated:1];
}

id sub_1000B9900(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _setUpPlaybackButtonsForRemoteWithUUID:*(void *)(a1 + 40)];
}

id sub_1000B990C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _setUpGuideButtonsForRemoteWithUUID:*(void *)(a1 + 40)];
}

void sub_1000B9AA4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000B9ACC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained externalControlSystem]);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_1000B9B68;
    v8[3] = &unk_100190838;
    void v8[4] = v6;
    [v7 getNameForExternalIRDeviceWithUUID:v4 withCompletion:v8];
  }
}

id sub_1000B9B68(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _showLearnedRemoteFinishedAlertWithName:a2];
}

void sub_1000B9D00( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000B9D28(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained externalControlSystem]);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_1000B9DC4;
    v8[3] = &unk_100190838;
    void v8[4] = v6;
    [v7 getNameForExternalIRDeviceWithUUID:v4 withCompletion:v8];
  }
}

id sub_1000B9DC4(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _showLearnedRemoteFinishedAlertWithName:a2];
}

void sub_1000B9F2C(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  id v2 = [v3 popToViewController:*(void *)(a1 + 32) animated:1];
}

void sub_1000B9F84(id a1, id a2)
{
  id v2 = a2;
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[PBSSystemService sharedInstance](&OBJC_CLASS___PBSSystemService, "sharedInstance"));
  [v3 fetchPairedAppleRemoteStateWithCompletion:v2];
}

uint64_t sub_1000BA060(uint64_t a1, char a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_1000BA0B8;
  v3[3] = &unk_10018EFA0;
  void v3[4] = *(void *)(a1 + 32);
  char v4 = a2;
  return TVSPerformBlockOnMainThread(v3);
}

id sub_1000BA0B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSettingsIfNeeded];
}

LABEL_24:
      sub_1000FB2B0(v26, v27, v28, v29, v30, v31, v32, v33);
      goto LABEL_25;
    }

    __int128 v24 = [v8 volumeControlTargetDeviceType];
    if (v24 == (id)1)
    {
      __int128 v25 = @"RCVCCECVolumeControlTV";
    }

    else
    {
      if (v24 != (id)2)
      {
        uint64_t v19 = 0LL;
LABEL_29:
        if ([v19 length])
        {
          uint64_t v20 = @"RCVCManualCECWithNameValue";
          goto LABEL_51;
        }

LABEL_50:
        uint64_t v20 = @"RCVCAutoViaCECValue";
        goto LABEL_51;
      }

      __int128 v25 = @"RCVCCECVolumeControlAVR";
    }

    uint64_t v34 = TSKLocString(v25);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v34);
    goto LABEL_29;
  }

  id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  uint64_t v15 = TSKLocStringFromBundleCachingKey(@"RCVCAutoViaARCValue", v14, 1LL, 0LL, @"Localizable-j305");
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

LABEL_14:
  uint64_t v19 = 0LL;
LABEL_15:
  id v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v16, v19));

  return v22;
}

void *sub_1000BAAC8(uint64_t a1)
{
  uint64_t v5 = 0LL;
  if (!qword_1001E1B10)
  {
    __int128 v6 = off_100193B38;
    uint64_t v7 = 0LL;
    qword_1001E1B10 = _sl_dlopen(&v6, &v5);
    id v3 = v5;
    id v2 = (void *)qword_1001E1B10;
    if (qword_1001E1B10)
    {
      if (!v5) {
        goto LABEL_5;
      }
    }

    else
    {
      id v3 = (char *)abort_report_np("%s", v5);
    }

    free(v3);
    goto LABEL_5;
  }

  id v2 = (void *)qword_1001E1B10;
LABEL_5:
  uint64_t result = dlsym(v2, "WLKIsRegulatedSKU");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  off_1001E1B08 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_1000BAFF8(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 0.6));
  id v2 = (void *)qword_1001E1B18;
  qword_1001E1B18 = v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.9));
  char v4 = (void *)qword_1001E1B20;
  qword_1001E1B20 = v3;
}

void sub_1000BB060(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 0.7));
  id v2 = (void *)qword_1001E1B30;
  qword_1001E1B30 = v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.7));
  char v4 = (void *)qword_1001E1B38;
  qword_1001E1B38 = v3;
}

void sub_1000BB3A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000BB3E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((unint64_t)[v3 count] >= 0x15)
  {
    char v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "tvs_randomizedArray"));
    uint64_t v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "subarrayWithRange:", 0, 20));

    id v3 = (id)v5;
  }

  __int128 v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "tvs_arrayByMappingObjectsUsingBlock:", &stru_100193BB0));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1000BB584;
  v8[3] = &unk_10018F2F0;
  objc_copyWeak(&v11, (id *)(a1 + 40));
  id v7 = v6;
  id v9 = v7;
  id v10 = *(id *)(a1 + 32);
  TVSPerformBlockOnMainThread(v8);

  objc_destroyWeak(&v11);
}

void sub_1000BB4E8(_Unwind_Exception *a1)
{
}

id sub_1000BB4FC(id a1, TVPhotoAsset *a2, unint64_t a3)
{
  id v3 = a2;
  char v4 = objc_alloc(&OBJC_CLASS___TVImageProxy);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[TVPhotoAsset fullResolutionURL](v3, "fullResolutionURL"));

  __int128 v6 = (void *)objc_claimAutoreleasedReturnValue(+[TVURLImageLoader sharedInstance](&OBJC_CLASS___TVURLImageLoader, "sharedInstance"));
  id v7 = -[TVImageProxy initWithObject:imageLoader:groupType:](v4, "initWithObject:imageLoader:groupType:", v5, v6, 0LL);

  return v7;
}

void sub_1000BB584(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _updateViewWithImageProxies:*(void *)(a1 + 32) inCollection:*(void *)(a1 + 40)];
}

void sub_1000BC2B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id location, char a23)
{
}

uint64_t sub_1000BC300(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000BC310(uint64_t a1)
{
}

void sub_1000BC318(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  if (v2)
  {
    [v2 removeFromSuperview];
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8LL);
    char v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = 0LL;
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained removeFromSuperview];

  id v7 = objc_loadWeakRetained((id *)(a1 + 48));
  if (v7)
  {
    id v6 = objc_loadWeakRetained((id *)(a1 + 56));
    [v6 addSubview:v7];
  }
}

void sub_1000BC3A4(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 postNotificationName:@"TVSettingsDeckImageViewReadyNotification" object:*(void *)(a1 + 32)];
}

id sub_1000BC4A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_1000BC5BC(id *a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*((id *)a1[4] + 5) superview]);

  if (v2)
  {
    [*((id *)a1[4] + 5) removeFromSuperview];
    uint64_t v3 = a1[4];
    char v4 = (void *)v3[5];
    void v3[5] = 0LL;
  }

  objc_storeStrong((id *)a1[4] + 5, a1[5]);
  [a1[6] removeFromSuperview];
  return [a1[4] addSubview:*((void *)a1[4] + 5)];
}

void sub_1000BCA40( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000BCA64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
    id v4 = objc_msgSend(v3, "pbs_needsHomeKitAutoOnboarding");

    uint64_t v7 = TVCSHomeLog(v5, v6);
    unsigned int v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      int v13 = 134218496;
      id v14 = WeakRetained;
      __int16 v15 = 1024;
      unsigned int v16 = [WeakRetained lastPBSNeedsHomeKitAutoOnboardingValue];
      __int16 v17 = 1024;
      int v18 = (int)v4;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "NeedsHomeKitAutoOnboarding's prefs domain changed. {self=%p, lastKnownValue=%{BOOl}d, currentValue=%{BOOL}d}",  (uint8_t *)&v13,  0x18u);
    }

    id v9 = [WeakRetained lastPBSNeedsHomeKitAutoOnboardingValue];
    if ((_DWORD)v4 != (_DWORD)v9)
    {
      uint64_t v11 = TVCSHomeLog(v9, v10);
      char v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 67109120;
        LODWORD(v14) = (_DWORD)v4;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "NeedsHomeKitAutoOnboarding changed. {pbs_needsHomeKitAutoOnboarding=%{BOOL}d}",  (uint8_t *)&v13,  8u);
      }

      [WeakRetained setLastPBSNeedsHomeKitAutoOnboardingValue:v4];
      [WeakRetained reloadSettingsIfNeeded];
    }
  }
}

void sub_1000BDB40( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *a12, id *location, uint64_t a14, id *a15, uint64_t a16, id *a17)
{
}

void sub_1000BDC50(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend( v4,  "setEnabled:",  objc_msgSend(v3, "isSettingsModificationAllowed") & objc_msgSend( *(id *)(a1 + 32),  "enabled"));
}

void sub_1000BDCA4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v5 = a2;
  else {
    BOOL v4 = 0LL;
  }
  [v5 setHidden:v4];
  objc_msgSend(v5, "setEnabled:", objc_msgSend(*(id *)(a1 + 40), "enabled"));
}

void sub_1000BDD18(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "enabled"));
}

void sub_1000BDD5C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "homeConfigurationState") != (id)1);
}

id sub_1000BDDA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _homeNoiCloudAccountAlertViewController]);

  return v2;
}

void sub_1000BDDDC(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ([*(id *)(a1 + 32) homeConfigurationState] == (id)7)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
    objc_msgSend(v4, "setHidden:", objc_msgSend(v3, "pbs_needsHomeKitAutoOnboarding"));
  }

  else
  {
    [v4 setHidden:1];
  }
}

void sub_1000BDE54(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ((char *)[*(id *)(a1 + 32) homeConfigurationState] - 3 > (char *)1)
  {
    [v4 setHidden:1];
  }

  else
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
    objc_msgSend(v4, "setHidden:", objc_msgSend(v3, "pbs_needsHomeKitAutoOnboarding"));
  }
}

id sub_1000BDED0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _homeNeedsUserInterentionAlertViewController]);

  return v2;
}

void sub_1000BDF08(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ([*(id *)(a1 + 32) homeConfigurationState] == (id)6)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
    objc_msgSend(v4, "setHidden:", objc_msgSend(v3, "pbs_needsHomeKitAutoOnboarding"));
  }

  else
  {
    [v4 setHidden:1];
  }
}

id sub_1000BDF80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _homeNeedsUserInterentionAlertViewController]);

  return v2;
}

void sub_1000BDFB8(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
  if (!objc_msgSend(v3, "pbs_needsHomeKitAutoOnboarding"))
  {

    goto LABEL_5;
  }

  id v4 = [*(id *)(a1 + 32) homeConfigurationState];

  if (v4 == (id)1)
  {
LABEL_5:
    BOOL v5 = [*(id *)(a1 + 32) homeConfigurationState] != (id)5;
    goto LABEL_6;
  }

  BOOL v5 = 0LL;
LABEL_6:
  [v6 setHidden:v5];
  [v6 setEnabled:0];
  [v6 setAccessoryTypes:4];
}

id sub_1000BE060(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _makeDeviceNameChildViewControllerWithItem:v3]);

  return v5;
}

void sub_1000BE0B4(uint64_t a1, void *a2, void *a3)
{
  id v13 = a3;
  BOOL v5 = *(void **)(a1 + 32);
  id v6 = a2;
  if ([v5 homeConfigurationState] == (id)4)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localAccessory]);
    unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 room]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 name]);

    id v10 = v13;
    BOOL v11 = ![v9 length]
       || ![v10 length]
       || [v10 caseInsensitiveCompare:v9] == 0;
  }

  else
  {
    BOOL v11 = 1LL;
  }

  [v6 setHidden:v11];
  char v12 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
  objc_msgSend(v6, "setEnabled:", objc_msgSend(v12, "isDeviceNameModificationAllowed"));
}

void sub_1000BE1C4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "isDeviceNameModificationAllowed") ^ 1);
}

void sub_1000BE208(id a1, TSKSettingItem *a2, id a3)
{
  id v4 = a2;
  -[TSKSettingItem setHidden:](v4, "setHidden:", [a3 count] == 0);
  -[TSKSettingItem setLocalizedValue:](v4, "setLocalizedValue:", 0LL);
}

void sub_1000BE25C(id a1, TSKSettingItem *a2, id a3)
{
  id v4 = a2;
  -[TSKSettingItem setHidden:](v4, "setHidden:", [a3 count] == 0);
  -[TSKSettingItem setLocalizedValue:](v4, "setLocalizedValue:", 0LL);
}

void sub_1000BE2B0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "canAccessHomeData") ^ 1);
}

id sub_1000BE2F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = v6;
  [v9 setDelegate:WeakRetained];
  id v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained accountManager]);
  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue([v10 activeAccount]);
  BOOL v12 = v11 == 0LL;

  [v5 setHidden:v12];
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v9 home]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 name]);
  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v14,  0LL,  v9,  @"enabled",  WeakRetained,  "_toggleResidenceEnabled:"));

  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  void v17[2] = sub_1000BE470;
  v17[3] = &unk_10018E9B0;
  objc_copyWeak(&v18, v7);
  [v15 setUpdateBlock:v17];
  objc_destroyWeak(&v18);

  return v15;
}

void sub_1000BE45C(_Unwind_Exception *a1)
{
}

void sub_1000BE470(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v15 representedObject]);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue([v6 home]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 name]);
  [v15 setLocalizedTitle:v9];

  id v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained updatingResidentDevices]);
  LODWORD(v9) = [v10 containsObject:v6];

  if ((_DWORD)v9)
  {
    [v15 setLocalizedValue:0];
    uint64_t v11 = 4LL;
  }

  else
  {
    else {
      BOOL v12 = @"HomeKitNotConnectedValue";
    }
    uint64_t v13 = TSKLocString(v12);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    [v15 setLocalizedValue:v14];

    uint64_t v11 = 0LL;
  }

  [v15 setAccessoryTypes:v11];
}

void sub_1000BE594(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "hasOptedToHH2"));
}

void sub_1000BE5D8(id a1, TSKSettingItem *a2, NSNumber *a3)
{
  id v4 = a3;
  id v6 = a2;
  -[TSKSettingItem setLocalizedValue:](v6, "setLocalizedValue:", 0LL);
  BOOL v5 = -[NSNumber BOOLValue](v4, "BOOLValue");

  -[TSKSettingItem setHidden:](v6, "setHidden:", v5);
}

void sub_1000BEB38(_Unwind_Exception *a1)
{
}

void sub_1000BEB5C(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    v7[3] = v2;
    void v7[4] = v3;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_1000BEBF4;
    v5[3] = &unk_10018E568;
    objc_copyWeak(v7, (id *)(a1 + 40));
    id v6 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, v5);

    objc_destroyWeak(v7);
  }

void sub_1000BEBF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  [v2 pushViewController:*(void *)(a1 + 32) animated:1];
}

void sub_1000BEED8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000BEEF4(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472LL;
  v2[2] = sub_1000BEF84;
  v2[3] = &unk_10018E568;
  objc_copyWeak(&v4, (id *)(a1 + 40));
  id v3 = *(id *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, v2);

  objc_destroyWeak(&v4);
}

void sub_1000BEF84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained updatingResidentDevices]);
  [v2 removeObject:*(void *)(a1 + 32)];

  [WeakRetained reloadSettingsIfNeeded];
}

void sub_1000BF2D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[TVSettingsDeviceFacade sharedInstance](&OBJC_CLASS___TVSettingsDeviceFacade, "sharedInstance"));
  [v4 setName:v3];

  id v6 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) navigationController]);
  id v5 = [v6 popToViewController:*(void *)(a1 + 32) animated:1];
}

void sub_1000BF354(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  if (v3)
  {
    uint64_t v6 = TVCSHomeLog(v3, v4);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000FB34C((uint64_t)v5, v7);
    }

    [*(id *)(a1 + 32) _presentSetAccessoryNameFailedViewControllerWithError:v5];
  }

  else
  {
    uint64_t v8 = *(void *)(a1 + 48);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localAccessory]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 name]);
    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v10);
  }
}

TVSettingsHomeKitActivityNotificationsViewController *sub_1000BFF18(uint64_t a1)
{
  return  -[TVSettingsHomeKitActivityNotificationsViewController initWithCameraProfile:]( objc_alloc(&OBJC_CLASS___TVSettingsHomeKitActivityNotificationsViewController),  "initWithCameraProfile:",  *(void *)(a1 + 32));
}

void sub_1000BFF48(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0LL;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8LL * (void)v6);
        objc_msgSend(v7, "setEnabled:", objc_msgSend(*(id *)(a1 + 40), "controlCenterAndSiriEnabled", (void)v8));
        objc_msgSend(v7, "setHidden:", objc_msgSend(*(id *)(a1 + 40), "controlCenterAndSiriEnabled") ^ 1);
        uint64_t v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v4);
  }
}

void sub_1000C026C(id a1)
{
  id v1 = -[TVSettingsHomePodSettingsFacade _init](objc_alloc(&OBJC_CLASS___TVSettingsHomePodSettingsFacade), "_init");
  id v2 = (void *)qword_1001E1B48;
  qword_1001E1B48 = (uint64_t)v1;
}

void sub_1000C0404( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000C0428(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _processResults:v4 lateNightAvailable:*(unsigned __int8 *)(a1 + 40) enhanceDialogueAvailable:*(unsigned __int8 *)(a1 + 41)];
}

void sub_1000C057C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000C05A0(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _processResults:v4 lateNightAvailable:*(unsigned __int8 *)(a1 + 40) enhanceDialogueAvailable:*(unsigned __int8 *)(a1 + 41)];
}

void sub_1000C0900( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
}

uint64_t sub_1000C0938(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000C0948(uint64_t a1)
{
}

void sub_1000C0950(uint64_t a1, char a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_1000C09C0;
  v4[3] = &unk_100193D38;
  char v6 = a2;
  __int128 v3 = *(_OWORD *)(a1 + 32);
  id v2 = (id)v3;
  __int128 v5 = v3;
  BSDispatchMain(v4);
}

void sub_1000C09C0(uint64_t a1)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = *(_BYTE *)(a1 + 48);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000C09D8(uint64_t a1, char a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_1000C0A48;
  v4[3] = &unk_100193D38;
  char v6 = a2;
  __int128 v3 = *(_OWORD *)(a1 + 32);
  id v2 = (id)v3;
  __int128 v5 = v3;
  BSDispatchMain(v4);
}

void sub_1000C0A48(uint64_t a1)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = *(_BYTE *)(a1 + 48);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000C0A60(uint64_t a1, void *a2)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  void v6[2] = sub_1000C0AF8;
  v6[3] = &unk_100193D88;
  id v7 = a2;
  __int128 v5 = *(_OWORD *)(a1 + 32);
  id v3 = (id)v5;
  __int128 v8 = v5;
  id v4 = v7;
  BSDispatchMain(v6);
}

void sub_1000C0AF8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1000C0B34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _processResults:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) lateNightAvailable:*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) enhanceDialogueAvailable:*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
}

void sub_1000C0C4C(_Unwind_Exception *a1)
{
}

void sub_1000C0C68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (!WeakRetained) {
    goto LABEL_23;
  }
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  uint64_t v23 = a1;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (!v4) {
    goto LABEL_19;
  }
  id v5 = v4;
  uint64_t v6 = *(void *)v26;
  uint64_t v7 = HPSKeyPathEnhanceDialog;
  uint64_t v24 = HPSKeyPathLateNightMode;
  __int128 v8 = &_s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF_ptr;
  do
  {
    for (i = 0LL; i != v5; i = (char *)i + 1)
    {
      if (*(void *)v26 != v6) {
        objc_enumerationMutation(v3);
      }
      __int128 v10 = *(void **)(*((void *)&v25 + 1) + 8LL * (void)i);
      __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "error", v23));

      if (!v11)
      {
        BOOL v12 = (void *)objc_claimAutoreleasedReturnValue([v10 setting]);
        uint64_t v13 = objc_opt_class(v8[365]);
        char isKindOfClass = objc_opt_isKindOfClass(v12, v13);

        if ((isKindOfClass & 1) != 0)
        {
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v10 setting]);
          unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([v10 setting]);
          __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 keyPath]);

          if ([v17 isEqual:v7])
          {
            unsigned int v18 = [v15 BOOLeanValue];
            if (WeakRetained[8] != v18)
            {
              char v19 = v18;
              [WeakRetained willChangeValueForKey:@"enhanceDialogue"];
              WeakRetained[8] = v19;
              uint64_t v20 = @"enhanceDialogue";
              __int128 v8 = &_s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF_ptr;
              goto LABEL_15;
            }
          }

          else if ([v17 isEqual:v24])
          {
            unsigned int v21 = [v15 BOOLeanValue];
            if (WeakRetained[10] != v21)
            {
              char v22 = v21;
              [WeakRetained willChangeValueForKey:@"reduceLoudSounds"];
              WeakRetained[10] = v22;
              uint64_t v20 = @"reduceLoudSounds";
LABEL_15:
              [WeakRetained didChangeValueForKey:v20];
            }
          }

          continue;
        }
      }
    }

    id v5 = [v3 countByEnumeratingWithState:&v25 objects:v29 count:16];
  }

  while (v5);
LABEL_19:

  if (*(unsigned __int8 *)(v23 + 48) != WeakRetained[11])
  {
    [WeakRetained willChangeValueForKey:@"reduceLoudSoundsIsAvailable"];
    WeakRetained[11] = *(_BYTE *)(v23 + 48);
    [WeakRetained didChangeValueForKey:@"reduceLoudSoundsIsAvailable"];
  }

  if (*(unsigned __int8 *)(v23 + 49) != WeakRetained[9])
  {
    [WeakRetained willChangeValueForKey:@"enhanceDialogueIsAvailable"];
    WeakRetained[9] = *(_BYTE *)(v23 + 49);
    [WeakRetained didChangeValueForKey:@"enhanceDialogueIsAvailable"];
  }

id sub_1000C1910(uint64_t a1)
{
  return [*(id *)(a1 + 32) localeIdentifier];
}

void sub_1000C2D94(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 1.0));
  uint64_t v2 = (void *)qword_1001E1B58;
  qword_1001E1B58 = v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 1.0));
  id v4 = (void *)qword_1001E1B60;
  qword_1001E1B60 = v3;
}

id sub_1000C3044(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 8LL) = 1;
  return [*(id *)(a1 + 32) setAlpha:*(double *)(a1 + 40)];
}

void *sub_1000C3068(void *result, int a2)
{
  uint64_t v2 = result;
  if (a2)
  {
    uint64_t v3 = (void *)result[4];
    [v3 highlightProgress];
    objc_msgSend(v3, "primaryHighlightAlphaForHighlightProgress:");
    uint64_t result = objc_msgSend(v3, "setAlpha:");
  }

  *(_BYTE *)(v2[4] + 8LL) = 0;
  return result;
}

void sub_1000C30C4(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.3));
  uint64_t v2 = (void *)qword_1001E1B70;
  qword_1001E1B70 = v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue( +[UIColor colorWithRed:green:blue:alpha:]( &OBJC_CLASS___UIColor,  "colorWithRed:green:blue:alpha:",  0.501960784,  0.482352941,  0.501960784,  0.1));
  id v4 = (void *)qword_1001E1B78;
  qword_1001E1B78 = v3;
}

void sub_1000C37E4(uint64_t a1, void *a2)
{
  id v20 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v20 representedObject]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 providerInfo]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:PBScreensaverProvidesSettingsUI]);
  unsigned int v6 = [v5 BOOLValue];

  if (v6) {
    objc_msgSend(v20, "setAccessoryTypes:", (unint64_t)objc_msgSend(v20, "accessoryTypes") | 1);
  }
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) selectedPhotoCollection]);
  __int128 v8 = (void *)objc_claimAutoreleasedReturnValue([v7 collectionIdentifier]);
  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([v3 collectionIdentifier]);
  unsigned int v10 = [v8 isEqualToString:v9];

  if (v10) {
    objc_msgSend(v20, "setAccessoryTypes:", (unint64_t)objc_msgSend(v20, "accessoryTypes") | 2);
  }
  if (v4 && (objc_msgSend(v4, "tvs_BOOLForKey:defaultValue:", PBScreensaverShowInSettings, 1) & 1) == 0)
  {
    BOOL v12 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedScreenSaverPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedScreenSaverPreferences"));
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v3 collectionIdentifier]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 getScreenSaverDisplayStatusForBundleIdentifier:v13]);

    if ([v14 count])
    {
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 objectForKey:TVScreenSaverEnabledKey]);
      unsigned int v16 = [v15 BOOLValue];
    }

    else
    {
      unsigned int v16 = 0;
    }

    __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v3 collectionIdentifier]);
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v12 screenSaverPhotoCollectionIdentifier]);
    unsigned int v19 = [v17 isEqualToString:v18] | v16;

    uint64_t v11 = v19 ^ 1;
  }

  else
  {
    uint64_t v11 = 0LL;
  }

  [v20 setHidden:v11];
}

NSString *__cdecl sub_1000C3B1C(id a1, TVPhotoCollection *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedScreenSaverPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedScreenSaverPreferences"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[TVPhotoCollection providerInfo](v2, "providerInfo"));
  id v5 = v4;
  if (v4
    && (objc_msgSend(v4, "tvs_BOOLForKey:defaultValue:", PBScreensaverShowInSettings, 1) & 1) == 0
    && (unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(-[TVPhotoCollection collectionIdentifier](v2, "collectionIdentifier")),
        uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 screenSaverPhotoCollectionIdentifier]),
        unsigned int v8 = [v6 isEqualToString:v7],
        v7,
        v6,
        v8))
  {
    uint64_t v9 = objc_claimAutoreleasedReturnValue([v3 screenSaverName]);
  }

  else
  {
    uint64_t v9 = objc_claimAutoreleasedReturnValue(-[TVPhotoCollection collectionName](v2, "collectionName"));
  }

  unsigned int v10 = (void *)v9;

  return (NSString *)v10;
}

void sub_1000C3CF8(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 0.6));
  uint64_t v2 = (void *)qword_1001E1B88;
  qword_1001E1B88 = v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.9));
  id v4 = (void *)qword_1001E1B90;
  qword_1001E1B90 = v3;
}

void sub_1000C3F24(uint64_t a1, void *a2)
{
  id v31 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSDisplayManager sharedInstance](&OBJC_CLASS___PBSDisplayManager, "sharedInstance"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 currentDisplayMode]);

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) commonResolutionsModes60Hz]);
  unsigned __int8 v6 = [v5 containsObject:v4];

  if ((v6 & 1) != 0
    || (uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) commonResolutionsModes50Hz]),
        unsigned __int8 v8 = [v7 containsObject:v4],
        v7,
        (v8 & 1) != 0)
    || (uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) commonResolutionsModesOthers]),
        unsigned __int8 v10 = [v9 containsObject:v4],
        v9,
        (v10 & 1) != 0))
  {
    uint64_t v11 = 0LL;
  }

  else
  {
    id v29 = (void *)objc_claimAutoreleasedReturnValue( +[PBSDisplayManager marketNameDisplayResolutionFormatterWithRefreshRate:]( &OBJC_CLASS___PBSDisplayManager,  "marketNameDisplayResolutionFormatterWithRefreshRate:",  1LL));
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v29 stringForObjectValue:v4]);
  }

  [v31 setLocalizedValue:v11];
  BOOL v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) otherResolutionsModes60Hz]);
  id v13 = [v12 count];

  if (v13) {
    goto LABEL_13;
  }
  id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) otherResolutionsModesExact60Hz]);
  id v15 = [v14 count];

  if (v15) {
    goto LABEL_13;
  }
  unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) otherResolutionsModes30Hz]);
  id v17 = [v16 count];

  if (v17) {
    goto LABEL_13;
  }
  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) otherResolutionsModesExact30Hz]);
  id v19 = [v18 count];

  if (v19) {
    goto LABEL_13;
  }
  id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) otherResolutionsModes24Hz]);
  id v21 = [v20 count];

  if (v21) {
    goto LABEL_13;
  }
  char v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) otherResolutionsModesExact24Hz]);
  id v23 = [v22 count];

  if (v23
    || (uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) otherResolutionsModes50Hz]),
        id v25 = [v24 count],
        v24,
        v25)
    || (__int128 v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) otherResolutionsModes25Hz]),
        id v27 = [v26 count],
        v26,
        v27))
  {
LABEL_13:
    BOOL v28 = 0LL;
  }

  else
  {
    id v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) otherResolutionsModesOthers]);
    BOOL v28 = [v30 count] == 0;
  }

  [v31 setHidden:v28];
}

void sub_1000C4A8C(_Unwind_Exception *a1)
{
}

void sub_1000C4AC4(uint64_t a1, void *a2, void *a3, char a4)
{
  id v7 = a2;
  id v8 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v7)
  {
    [v7 setEnableCache:1];
    unsigned __int8 v10 = (void *)objc_claimAutoreleasedReturnValue( +[UIImage imageWithCGImage:]( UIImage, "imageWithCGImage:", [v7 image]));
  }

  else
  {
    unsigned __int8 v10 = 0LL;
  }

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_1000C4C50;
  v15[3] = &unk_100193EA0;
  objc_copyWeak(&v19, (id *)(a1 + 40));
  id v11 = WeakRetained;
  id v16 = v11;
  id v12 = v10;
  id v17 = v12;
  char v20 = a4;
  id v13 = v8;
  id v18 = v13;
  id v14 = objc_retainBlock(v15);
  if (+[NSThread isMainThread](&OBJC_CLASS___NSThread, "isMainThread")) {
    ((void (*)(void *))v14[2])(v14);
  }
  else {
    dispatch_async(&_dispatch_main_q, v14);
  }

  objc_destroyWeak(&v19);
}

void sub_1000C4C3C(_Unwind_Exception *a1)
{
}

void sub_1000C4C50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained imageProxy]);
    unsigned int v4 = [v3 isEqual:*(void *)(a1 + 32)];

    id WeakRetained = v7;
    if (v4)
    {
      if (*(void *)(a1 + 40) && *(_BYTE *)(a1 + 64)) {
        objc_msgSend(v7, "_setImage:");
      }
      [v7 setImageLoaded:*(unsigned __int8 *)(a1 + 64)];
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v7 completion]);

      id WeakRetained = v7;
      if (v5)
      {
        unsigned __int8 v6 = (void (**)(void, void, void, void))objc_claimAutoreleasedReturnValue([v7 completion]);
        v6[2](v6, *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 64));

        [v7 setCompletion:0];
        id WeakRetained = v7;
      }
    }
  }
}

void sub_1000C4D24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = *(void **)(a1 + 32);
  if ((id)v3[10] == WeakRetained)
  {
    id v5 = WeakRetained;
    unsigned int v4 = (void (**)(void, void, void, void))objc_claimAutoreleasedReturnValue([v3 completion]);
    v4[2](v4, 0LL, 0LL, 1LL);

    [*(id *)(a1 + 32) setCompletion:0];
    [*(id *)(a1 + 32) setImageLoaded:0];
    id WeakRetained = v5;
  }
}

void sub_1000C584C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000C5874(uint64_t a1, void *a2)
{
  if (a2 && _TVSLogInternalLogLevel >= 3)
  {
    uint64_t v4 = TVSSystemLog;
    id v5 = a2;
    pthread_main_np();
    pthread_self();
    _TVSLogBase(v2, &_os_log_default, 65LL, 0LL, 3LL, v4);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained dismissViewControllerAnimated:1 completion:0];
}

void sub_1000C5B38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000C5B64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained logsFacade]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained logPath]);
  [v1 deleteLogFileAtPath:v2];

  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v4 = [v3 popViewControllerAnimated:1];
}

void sub_1000C5F18(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "isEnabledOnDevice"));
}

TSKSettingItem *__cdecl sub_1000C5F5C(id a1, TSKListSettingGroup *a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsTCCInfo);
  id v5 = v3;
  unsigned __int8 v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 displayName]);
  uint64_t v10 = TSKLocString(@"PrivacyAllowAccess");
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = TSKLocString(@"PrivacyDenyAccess");
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:]( &OBJC_CLASS___TSKSettingItem,  "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:",  v9,  0LL,  v8,  @"allowAccess",  v11,  v13));

  return (TSKSettingItem *)v14;
}

void sub_1000C6054(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "isEnabledOnDevice"));
}

void sub_1000C61DC(id a1, UIAlertAction *a2)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[TVProfileService sharedInstance](&OBJC_CLASS___TVProfileService, "sharedInstance"));
  [v2 resetAccountIdentifiers];
}

int64_t sub_1000C62A4(id a1, id a2, id a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a2 rawName]);
  unsigned __int8 v6 = (void *)objc_claimAutoreleasedReturnValue([v4 rawName]);

  id v7 = [v5 caseInsensitiveCompare:v6];
  return (int64_t)v7;
}

int64_t sub_1000C64D0(id a1, id a2, id a3)
{
  return (int64_t)[a2 localizedCaseInsensitiveCompare:a3];
}

void sub_1000C68C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id a25)
{
}

id sub_1000C692C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 rawName]);
  id v8 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v7,  0LL,  v6,  0LL,  WeakRetained,  "_selectedConfiguration:"));

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  void v12[2] = sub_1000C6A48;
  void v12[3] = &unk_10018E9B0;
  objc_copyWeak(&v13, v8);
  [v10 setUpdateBlock:v12];
  objc_destroyWeak(&v13);

  return v10;
}

void sub_1000C6A34(_Unwind_Exception *a1)
{
}

void sub_1000C6A48(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateConfigurationItem:v6 withValue:v5];
}

void sub_1000C6AAC(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v7 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 currentTrainInfoText]);
  [v7 setLocalizedDescription:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) trainAudiences]);
  BOOL v6 = [v5 count] != 0;

  [v7 setAccessoryTypes:v6];
  [v7 setEnabled:v6];
}

id sub_1000C6B38(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 rawName]);
  id v8 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v7,  0LL,  v6,  0LL,  WeakRetained,  "_selectedConfiguration:"));

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  void v12[2] = sub_1000C6C54;
  void v12[3] = &unk_10018E9B0;
  objc_copyWeak(&v13, v8);
  [v10 setUpdateBlock:v12];
  objc_destroyWeak(&v13);

  return v10;
}

void sub_1000C6C40(_Unwind_Exception *a1)
{
}

void sub_1000C6C54(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateConfigurationItem:v6 withValue:v5];
}

int64_t sub_1000C7228(id a1, id a2, id a3)
{
  return (int64_t)[a2 localizedCaseInsensitiveCompare:a3];
}

void sub_1000C798C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_1000C79B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _localizedTitleForPhotoCollection:v6]);

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1000C7AC0;
  v13[3] = &unk_10018E9D8;
  objc_copyWeak(&v14, v7);
  uint64_t v10 = objc_retainBlock(v13);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v9,  0LL,  v6,  0LL,  v10));

  objc_destroyWeak(&v14);
  return v11;
}

void sub_1000C7AAC(_Unwind_Exception *a1)
{
}

TVSettingsPhotoCollectionViewController *sub_1000C7AC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(&OBJC_CLASS___TVSettingsPhotoCollectionViewController);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  -[TVSettingsPhotoCollectionViewController setDelegate:](v4, "setDelegate:", WeakRetained);

  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 representedObject]);
  -[TVSettingsPhotoCollectionViewController setCollection:](v4, "setCollection:", v6);

  return v4;
}

void sub_1000C7E7C(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 0.6));
  id v2 = (void *)qword_1001E1BA0;
  qword_1001E1BA0 = v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.9));
  id v4 = (void *)qword_1001E1BA8;
  qword_1001E1BA8 = v3;
}

id sub_1000C811C()
{
  if (qword_1001E1BC0 != -1) {
    dispatch_once(&qword_1001E1BC0, &stru_100194040);
  }
  return (id)qword_1001E1BB8;
}

void sub_1000C85E4(uint64_t a1)
{
  id v2 = sub_1000C811C();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = *(void **)(a1 + 32);
    if (v4) {
      [v4 currentTime];
    }
    else {
      memset(&time, 0, sizeof(time));
    }
    Float64 Seconds = CMTimeGetSeconds(&time);
    *(_DWORD *)buf = 134217984;
    Float64 v23 = Seconds;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "addBoundaryTimeObserverForTimes fired at time: %f",  buf,  0xCu);
  }

  id v6 = objc_alloc(&OBJC_CLASS___UIViewPropertyAnimator);
  double v7 = *(double *)(a1 + 48);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_1000C87C4;
  v19[3] = &unk_10018E440;
  id v20 = *(id *)(a1 + 40);
  id v8 = -[UIViewPropertyAnimator initWithDuration:curve:animations:]( v6,  "initWithDuration:curve:animations:",  1LL,  v19,  v7);
  uint64_t v9 = objc_alloc(&OBJC_CLASS___UIViewPropertyAnimator);
  double v10 = *(double *)(a1 + 48);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  void v17[2] = sub_1000C883C;
  v17[3] = &unk_10018E440;
  id v18 = *(id *)(a1 + 40);
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 3221225472LL;
  id v14 = sub_1000C88B0;
  id v15 = &unk_10018EE40;
  id v16 = -[UIViewPropertyAnimator initWithDuration:curve:animations:]( v9,  "initWithDuration:curve:animations:",  2LL,  v17,  v10);
  id v11 = v16;
  -[UIViewPropertyAnimator addCompletion:](v8, "addCompletion:", &v12);
  -[UIViewPropertyAnimator startAnimation](v8, "startAnimation", v12, v13, v14, v15);
}

id sub_1000C87C4(uint64_t a1)
{
  id v2 = sub_1000C811C();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Animating fadeView to alpha=0.9", v5, 2u);
  }

  return [*(id *)(a1 + 32) setAlpha:0.95];
}

id sub_1000C883C(uint64_t a1)
{
  id v2 = sub_1000C811C();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Animating fadeView to alpha=0.0", v5, 2u);
  }

  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_1000C88B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) startAnimation];
}

id sub_1000C8918(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(*(void *)(a1 + 32) + 24) removeTimeObserver:a2];
}

void sub_1000C8A40(id a1)
{
  os_log_t v1 = os_log_create("com.apple.tvsettings", "AVPlayer");
  id v2 = (void *)qword_1001E1BB8;
  qword_1001E1BB8 = (uint64_t)v1;
}

id sub_1000C8B24(uint64_t a1, void *a2)
{
  return [a2 _resetStateFromPreferences];
}

void sub_1000C8D88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000C8DA4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000C8E1C;
  block[3] = &unk_10018E810;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async(&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_1000C8E1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained preferredLanguagesManager]);
  [v1 applyInputModesChanges];
}

void sub_1000C918C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_1000C91B4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  double v7 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained inputModeFacade]);
  double v10 = (void *)objc_claimAutoreleasedReturnValue([v9 preferredLanguagesManager]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 displayNameForKeyboardInputModeVariantWithLanguageIdentifier:v6]);

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v11,  0LL,  v6,  0LL,  WeakRetained,  "toggleInputMode:"));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_1000C92F0;
  v14[3] = &unk_10018E9B0;
  objc_copyWeak(&v15, v7);
  [v12 setUpdateBlock:v14];
  objc_destroyWeak(&v15);

  return v12;
}

void sub_1000C92DC(_Unwind_Exception *a1)
{
}

void sub_1000C92F0(uint64_t a1, void *a2)
{
  id v10 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained inputModeFacade]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v10 representedObject]);
  unsigned int v6 = [v4 isInputModeEnabled:v5];

  if (v6) {
    double v7 = @"SettingsON";
  }
  else {
    double v7 = @"SettingsOFF";
  }
  uint64_t v8 = TSKLocString(v7);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  [v10 setLocalizedValue:v9];
}

void sub_1000C9C54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

id sub_1000C9CB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _myPhotosItemForSource:v4]);

  return v6;
}

id sub_1000C9D08(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _otherItemForSource:v4]);

  return v6;
}

void sub_1000C9E24(uint64_t a1, void *a2)
{
  id v5 = a2;
  objc_msgSend(v5, "setHidden:", objc_msgSend(*(id *)(a1 + 32), "isActive") ^ 1);
  objc_msgSend(v5, "setEnabled:", objc_msgSend(*(id *)(a1 + 32), "isDisabled") ^ 1);
  if ([*(id *)(a1 + 32) isNavigating])
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) selectedValue]);
    [v5 setLocalizedValue:v3];

    uint64_t v4 = 1LL;
  }

  else
  {
    [v5 setLocalizedValue:0];
    else {
      uint64_t v4 = 0LL;
    }
  }

  [v5 setAccessoryTypes:v4];
}

void sub_1000C9FB8(uint64_t a1, void *a2)
{
  id v10 = a2;
  objc_msgSend(v10, "setHidden:", objc_msgSend(*(id *)(a1 + 32), "isActive") ^ 1);
  if ([*(id *)(a1 + 32) isDisabled])
  {
    uint64_t v3 = TSKLocString(@"iCloudPhotoSetUpValue");
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    [v10 setLocalizedValue:v4];

    [v10 setAccessoryTypes:0];
    uint64_t v5 = TSKLocString(@"SaverBackdropYourPhotosSetupDescription");
    uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);
  }

  else
  {
    if ([*(id *)(a1 + 32) isNavigating])
    {
      double v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) selectedValue]);
      [v10 setLocalizedValue:v7];

      uint64_t v8 = 1LL;
    }

    else
    {
      [v10 setLocalizedValue:0];
      else {
        uint64_t v8 = 0LL;
      }
    }

    [v10 setAccessoryTypes:v8];
    uint64_t v6 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localizedDescription]);
  }

  uint64_t v9 = (void *)v6;
  [v10 setLocalizedDescription:v6];
}

TVSettingsAmbientPhotoSourcesViewController *sub_1000CA288(void *a1)
{
  return  -[TVSettingsAmbientPhotoSourcesViewController initWithPhotoSource:ambientFacade:previewViewController:]( objc_alloc(&OBJC_CLASS___TVSettingsAmbientPhotoSourcesViewController),  "initWithPhotoSource:ambientFacade:previewViewController:",  a1[4],  a1[5],  a1[6]);
}

TVSettingsAmbientPhotoTransitionStylesViewController *sub_1000CA3D8(uint64_t a1)
{
  return  -[TVSettingsAmbientPhotoTransitionStylesViewController initWithAmbientFacade:previewViewController:]( objc_alloc(&OBJC_CLASS___TVSettingsAmbientPhotoTransitionStylesViewController),  "initWithAmbientFacade:previewViewController:",  *(void *)(a1 + 32),  *(void *)(a1 + 40));
}

void sub_1000CA408(id a1, TSKSettingItem *a2, id a3)
{
  -[TSKSettingItem setHidden:](a2, "setHidden:", a3 == 0LL);
}

void sub_1000CA6D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_1000CA700(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 displayName]);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  0LL,  v4,  @"trusted",  WeakRetained,  "_toggleTrust:"));

  uint64_t v8 = TSKLocString(@"AnchorCertTrustedValue");
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  uint64_t v10 = TSKLocString(@"AnchorCertNotTrustedValue");
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[TSKBoolFormatter formatterWithOnTitle:offTitle:]( &OBJC_CLASS___TSKBoolFormatter,  "formatterWithOnTitle:offTitle:",  v9,  v11));
  [v7 setLocalizedValueFormatter:v12];

  [v7 setUpdateBlock:&stru_1001940D0];
  return v7;
}

void sub_1000CA7FC(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v3, "representedObject"));
  -[TSKSettingItem setEnabled:](v3, "setEnabled:", [v4 isRestricted] ^ 1);
}

id sub_1000CA9F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setTrusted:1];
}

void sub_1000CADBC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_1000CADE8()
{
  if (qword_1001E1BD0 != -1) {
    dispatch_once(&qword_1001E1BD0, &stru_100194640);
  }
  return (id)qword_1001E1BC8;
}

void sub_1000CAE28(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (!v2)
  {
    double v7 = (objc_class *)objc_opt_class(&OBJC_CLASS___TVSettingsUserProfileFacade);
    uint64_t v8 = NSStringFromClass(v7);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Value for '%@' was unexpectedly nil. Expected %@.",  @"(__bridge id)observer",  v9));

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000FB4D4();
    }
LABEL_13:
    _bs_set_crash_log_message([v10 UTF8String]);
    __break(0);
    JUMPOUT(0x1000CAF5CLL);
  }

  uint64_t v3 = v2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___TVSettingsUserProfileFacade);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) == 0)
  {
    id v11 = (objc_class *)[v3 classForCoder];
    if (!v11) {
      id v11 = (objc_class *)objc_opt_class(v3);
    }
    uint64_t v12 = NSStringFromClass(v11);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    id v14 = (objc_class *)objc_opt_class(&OBJC_CLASS___TVSettingsUserProfileFacade);
    id v15 = NSStringFromClass(v14);
    id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Value for '%@' was of unexpected class %@. Expected %@.",  @"(__bridge id)observer",  v13,  v16));

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000FB4D4();
    }
    goto LABEL_13;
  }

  id v5 = sub_1000CADE8();
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
    sub_1000FB57C();
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000D23A4;
  block[3] = &unk_10018E7A8;
  void block[4] = v3;
  dispatch_async(&_dispatch_main_q, block);
}

void sub_1000CB000(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v6)
  {
    id v8 = sub_1000CADE8();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT)) {
      sub_1000FB628();
    }
  }

  else
  {
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    v18[2] = sub_1000CB168;
    v18[3] = &unk_1001916C0;
    id v11 = *(void **)(a1 + 32);
    uint64_t v10 = (id *)(a1 + 32);
    id v19 = v11;
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bs_firstObjectPassingTest:", v18));
    if (v12)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000CB1D8;
      block[3] = &unk_10018E468;
      id v16 = (os_log_s *)WeakRetained;
      id v17 = v12;
      dispatch_async(&_dispatch_main_q, block);

      uint64_t v13 = v16;
    }

    else
    {
      id v14 = sub_1000CADE8();
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_1000FB5A8(v10);
      }
    }

    uint64_t v9 = v19;
  }
}

id sub_1000CB168(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "aa_altDSID"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userProfile]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 iCloudAltDSID]);
  id v6 = [v3 isEqualToString:v5];

  return v6;
}

id sub_1000CB1D8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateiCloudPhotoValues];
}

void sub_1000CB610( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000CB634(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _acquireAssertionsWithName:@"Sign In Service"];
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2 == 2)
  {
    [WeakRetained _signInGameCenterWithPresentingViewController:*(void *)(a1 + 32)];
    goto LABEL_7;
  }

  if (v2 == 1)
  {
    [WeakRetained _signIniTunesWithPresentingViewController:*(void *)(a1 + 32)];
    goto LABEL_7;
  }

  uint64_t v3 = WeakRetained;
  if (!v2)
  {
    [WeakRetained _signIniCloudWithPresentingViewController:*(void *)(a1 + 32)];
LABEL_7:
    uint64_t v3 = WeakRetained;
  }
}

void sub_1000CBAF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

id sub_1000CBB18(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a3 iTunesAltDSID]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iTunesAltDSID]);
  id v6 = [v4 isEqualToString:v5];

  return v6;
}

void sub_1000CBB78(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  double v7 = WeakRetained;
  if (a2)
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_1000CBC74;
    v13[3] = &unk_10018EE18;
    uint64_t v8 = *(void *)(a1 + 48);
    void v13[4] = WeakRetained;
    v13[5] = v8;
    uint64_t v9 = v13;
  }

  else
  {
    id v10 = sub_1000CADE8();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1000FB87C(a1, v5, v11);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000CBC84;
    block[3] = &unk_10018E440;
    void block[4] = v7;
    uint64_t v9 = block;
  }

  dispatch_async(&_dispatch_main_q, v9);
}

id sub_1000CBC74(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateProfileWithServiceType:*(void *)(a1 + 40) toAltDSID:0];
}

id sub_1000CBC84(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cleanUpAfterSigningInOrOut];
}

void sub_1000CBEF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000CBF18(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[3] userProfile]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 personaUniqueString]);

  if (v5)
  {
    id v6 = sub_1000CADE8();
    double v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[3] identifier]);
      *(_DWORD *)buf = 138543618;
      id v14 = v8;
      __int16 v15 = 2114;
      id v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Terminating apps before deleting user... {userIdentifier=%{public}@, personaUniqueString=%{public}@}",  buf,  0x16u);
    }

    id v9 = WeakRetained[7];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_1000CC0C0;
    v10[3] = &unk_10018FAC0;
    objc_copyWeak(&v12, v2);
    id v11 = *(id *)(a1 + 32);
    [v9 terminateGracefullyApplicationsRunningWithPersonaUniqueString:v5 completionHandler:v10];

    objc_destroyWeak(&v12);
  }

  else
  {
    [WeakRetained _afterTerminatingAppsRemoveUserWithCompletion:*(void *)(a1 + 32)];
  }
}

void sub_1000CC0A4(_Unwind_Exception *a1)
{
}

void sub_1000CC0C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _afterTerminatingAppsRemoveUserWithCompletion:*(void *)(a1 + 32)];
}

void sub_1000CC24C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, a2);
  }
  [*(id *)(*(void *)(a1 + 32) + 104) invalidate];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 104);
  *(void *)(v5 + 104) = 0LL;
}

void sub_1000CC2A4(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) != 0)
  {
    id v6 = dispatch_group_create();
    double v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);

    if (v8)
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v7,  "setObject:forKeyedSubscript:",  v9,  ACAccountTypeIdentifierAppleAccount);
    }

    id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iTunesAltDSID]);

    if (v10)
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue(+[PBSUserProfileManager sharedInstance](&OBJC_CLASS___PBSUserProfileManager, "sharedInstance"));
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 userProfilesSnapshot]);
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 userProfiles]);
      v51[0] = _NSConcreteStackBlock;
      v51[1] = 3221225472LL;
      v51[2] = sub_1000CC890;
      v51[3] = &unk_100194120;
      id v52 = *(id *)(a1 + 32);
      id v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "bs_filter:", v51));

      if ((unint64_t)[v14 count] > 1)
      {
        id v18 = sub_1000CADE8();
        __int16 v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          id v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
          id v20 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iTunesAltDSID]);
          *(_DWORD *)buf = 138543618;
          id v56 = v19;
          __int16 v57 = 2112;
          uint64_t v58 = v20;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "iTunes account is still in use, it won't be removed. {userProfileIdentifier=%{public}@, iTunesAltDSID=%@}",  buf,  0x16u);
        }
      }

      else
      {
        __int16 v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iTunesAltDSID]);
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v7,  "setObject:forKeyedSubscript:",  v15,  ACAccountTypeIdentifieriTunesStore);
      }
    }

    id v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) gameCenterAltDSID]);

    if (v21)
    {
      char v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) gameCenterAltDSID]);
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v7,  "setObject:forKeyedSubscript:",  v22,  ACAccountTypeIdentifierGameCenter);
    }

    id v23 = sub_1000CADE8();
    uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      id v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
      *(_DWORD *)buf = 138543618;
      id v56 = v25;
      __int16 v57 = 2112;
      uint64_t v58 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Removing accounts... {userIdentifier=%{public}@, accounts=%@}",  buf,  0x16u);
    }

    dispatch_group_enter(v6);
    __int128 v26 = *(void **)(a1 + 48);
    id v27 = *(void **)(*(void *)(a1 + 40) + 80LL);
    v48[0] = _NSConcreteStackBlock;
    v48[1] = 3221225472LL;
    v48[2] = sub_1000CC8F0;
    v48[3] = &unk_10018E468;
    id v49 = v26;
    BOOL v28 = v6;
    id v50 = v28;
    objc_msgSend(v27, "tvsettings_removeAccountsWithTuples:completion:", v7, v48);
    if ([*(id *)(*(void *)(a1 + 40) + 24) hasiTunesAccount])
    {
      id v29 = (void *)objc_claimAutoreleasedReturnValue( -[NSMutableDictionary objectForKeyedSubscript:]( v7,  "objectForKeyedSubscript:",  ACAccountTypeIdentifieriTunesStore));

      if (v29)
      {
        id v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 24) iTunesUsername]);
        id v31 = (void *)objc_claimAutoreleasedReturnValue( +[TVHKMediaServerDiscoverySettings sharedInstance]( &OBJC_CLASS___TVHKMediaServerDiscoverySettings,  "sharedInstance"));
        id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 mediaServerDiscoveryConfiguration]);
        xpc_object_t v33 = (void *)objc_claimAutoreleasedReturnValue([v32 homeSharingAccountName]);

        if (v33 && BSEqualStrings(v30, v33))
        {
          dispatch_group_enter(v28);
          id v34 = sub_1000CADE8();
          __int128 v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
          if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "Signing out of Home Sharing.", buf, 2u);
          }

          v46[0] = _NSConcreteStackBlock;
          v46[1] = 3221225472LL;
          v46[2] = sub_1000CCAE0;
          v46[3] = &unk_10018EAF0;
          uint64_t v47 = v28;
          [v31 setMediaServerDiscoveryConfigurationWithMode:0 homeSharingAccountName:0 homeSharingPassword:0 completionHandler:v46];
        }
      }
    }

    unsigned __int8 v36 = [*(id *)(*(void *)(a1 + 40) + 24) isPrimary];
    unsigned __int8 v37 = [*(id *)(*(void *)(a1 + 40) + 24) isPrimary];
    v40[0] = _NSConcreteStackBlock;
    v40[1] = 3221225472LL;
    v40[2] = sub_1000CCB4C;
    v40[3] = &unk_1001941C0;
    id v38 = *(id *)(a1 + 32);
    uint64_t v39 = *(void *)(a1 + 40);
    id v41 = v38;
    uint64_t v42 = v39;
    id v43 = *(id *)(a1 + 56);
    unsigned __int8 v44 = v36;
    unsigned __int8 v45 = v37;
    dispatch_group_notify(v28, &_dispatch_main_q, v40);
  }

  else
  {
    id v16 = sub_1000CADE8();
    id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_1000FBA60();
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000CC85C;
    block[3] = &unk_100194198;
    void block[4] = *(void *)(a1 + 40);
    id v54 = *(id *)(a1 + 56);
    dispatch_async(&_dispatch_main_q, block);
  }
}

uint64_t sub_1000CC85C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

id sub_1000CC890(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a3 iTunesAltDSID]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iTunesAltDSID]);
  id v6 = [v4 isEqualToString:v5];

  return v6;
}

void sub_1000CC8F0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
    id v2 = sub_1000CADE8();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v11 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Deleting persona... {personaUniqueString=%{public}@}",  buf,  0xCu);
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[UMUserManager sharedManager](&OBJC_CLASS___UMUserManager, "sharedManager"));
    id v6 = *(void **)(a1 + 32);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1000CCA38;
    v7[3] = &unk_100191650;
    id v8 = v6;
    id v9 = *(id *)(a1 + 40);
    [v5 deleteUserPersonaWithPersonaUniqueString:v8 passcodeData:0 completionHandler:v7];
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1000CCA38(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000CADE8();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000FBAFC();
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)double v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Persona deleted.", v7, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1000CCAE0(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v6 = sub_1000CADE8();
    double v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000FBBAC();
    }
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000CCB4C(uint64_t a1)
{
  id v2 = sub_1000CADE8();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "User removed.", v6, 2u);
  }

  id v4 = objc_alloc_init(&OBJC_CLASS___TVCSUserProfilesAnalyticsRemoveUserEvent);
  [v4 setActionType:0];
  objc_msgSend(v4, "setUserType:", objc_msgSend(*(id *)(a1 + 32), "type"));
  TVCSUserProfilesAnalyticsSendEvent(v4);
  [*(id *)(a1 + 40) setIsRemovingUser:0];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  [*(id *)(a1 + 40) setUserHasBeenRemoved:1];
  if (*(_BYTE *)(a1 + 56)) {
    [*(id *)(a1 + 40) _setIdleScreenSaverTypeToDefaultIfNeccessary];
  }
  if (*(_BYTE *)(a1 + 57))
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[TVSPreferences sharedPhotosPreferences](&OBJC_CLASS___TVSPreferences, "sharedPhotosPreferences"));
    [v5 resetSelectedSharingFilter];
  }
}

void sub_1000CCE58(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000CCEC8;
    block[3] = &unk_10018FA98;
    id v2 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, block);
  }

uint64_t sub_1000CCEC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000CCED4(void *a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (!v5)
  {
LABEL_4:
    id v9 = sub_1000CADE8();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = a1[4];
      int v15 = 138543618;
      uint64_t v16 = v11;
      __int16 v17 = 1024;
      LODWORD(v1_Block_object_dispose((const void *)(v36 - 136), 8) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "iCloud Terms UI completed. {userIdentifier=%{public}@, termsAccepted=%{BOOL}d}",  (uint8_t *)&v15,  0x12u);
    }

    goto LABEL_9;
  }

  double v7 = (void *)objc_claimAutoreleasedReturnValue([v5 domain]);
  if ([v7 isEqual:TVServicesErrorDomain])
  {
    id v8 = [v6 code];

    if (v8 == (id)1101) {
      goto LABEL_4;
    }
  }

  else
  {
  }

  id v12 = sub_1000CADE8();
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    uint64_t v13 = a1[4];
    uint64_t v14 = a1[5];
    int v15 = 138544386;
    uint64_t v16 = v13;
    __int16 v17 = 2160;
    uint64_t v18 = 1752392040LL;
    __int16 v19 = 2112;
    uint64_t v20 = v14;
    __int16 v21 = 1024;
    int v22 = a2;
    __int16 v23 = 2114;
    uint64_t v24 = v6;
    _os_log_error_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "iCloud Terms UI completed with error. {userIdentifier=%{public}@, altDSID=%{mask.hash}@, termsAccepted=%{BOOL}d, e rror=%{public}@}",  (uint8_t *)&v15,  0x30u);
  }

void sub_1000CD714(_Unwind_Exception *a1)
{
}

void sub_1000CD73C(uint64_t a1)
{
  id v2 = sub_1000CADE8();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
    uint64_t v5 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    id v10 = v4;
    __int16 v11 = 2112;
    uint64_t v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Recognize My Voice session finished handler called. {userIdentifier=%{public}@, request=%@}",  buf,  0x16u);
  }

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  void v6[2] = sub_1000CD874;
  v6[3] = &unk_10018FAC0;
  objc_copyWeak(&v8, (id *)(a1 + 56));
  id v7 = *(id *)(a1 + 48);
  dispatch_async(&_dispatch_main_q, v6);

  objc_destroyWeak(&v8);
}

void sub_1000CD874(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _setIsRecognizeMyVoiceEnabled:1 completion:*(void *)(a1 + 32)];
}

void sub_1000CD8B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 domain]);
  if ([v4 isEqual:CPSErrorDomain])
  {
    id v5 = [v3 code];

    if (v5 == (id)104)
    {
      id v6 = sub_1000CADE8();
      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Enabling Recognize My Voice canceled by user.",  buf,  2u);
      }

      goto LABEL_8;
    }
  }

  else
  {
  }

  id v8 = sub_1000CADE8();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    sub_1000FBD48();
  }
LABEL_8:

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_1000CD9FC;
  v11[3] = &unk_10018E888;
  id v9 = *(id *)(a1 + 48);
  id v12 = v3;
  id v13 = v9;
  id v10 = v3;
  dispatch_async(&_dispatch_main_q, v11);
}

uint64_t sub_1000CD9FC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_1000CDC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

void sub_1000CDD34(uint64_t a1)
{
  id v13 = (id)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) userProfile]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v13 identifier]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userProfilesSnapshot]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 userProfileWithIdentifier:v2]);

  id v5 = *(void **)(a1 + 32);
  if (!v4)
  {
    [v5 setUserHasBeenRemoved:1];
LABEL_5:
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = *(void **)(v7 + 88);
    *(void *)(v7 + 8_Block_object_dispose((const void *)(v36 - 136), 8) = 0LL;

    [*(id *)(a1 + 32) _updateiCloudPhotoValues];
    goto LABEL_6;
  }

  [v5 _updateRecognizeMyVoiceAvailability];
  [*(id *)(a1 + 32) _updateRecognizeMyVoiceState];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 iCloudAltDSID]);

  if (!v6) {
    goto LABEL_5;
  }
LABEL_6:
  id v9 = *(void **)(a1 + 32);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userProfilesSnapshot]);
  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 userProfiles]);
  BOOL v12 = (unint64_t)[v11 count] < 2;

  [v9 setIsSingleUserDevice:v12];
}

void sub_1000CDEC0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aa_altDSID"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 24) userProfile]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 iCloudAltDSID]);
  unsigned int v5 = [v2 isEqualToString:v4];

  if (v5)
  {
    objc_storeStrong((id *)(*(void *)(a1 + 40) + 88LL), *(id *)(a1 + 32));
    [*(id *)(a1 + 40) _updateiCloudPhotoValues];
  }

uint64_t sub_1000CE00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if ((_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v4 + 16))(v4, 1LL, *(void *)(a1 + 32), 0LL);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v4 + 16))(v4, a2, 0LL, a3);
  }
}

void sub_1000CE184(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000CADE8();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000FBEB8(a1, v6, v9);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000CE36C;
    block[3] = &unk_10018E440;
    void block[4] = *(void *)(a1 + 40);
    dispatch_async(&_dispatch_main_q, block);
  }

  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      uint64_t v15 = v10;
      __int16 v16 = 2048;
      id v17 = [v5 groupRecommendationsConsent];
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Group recommendations consent udpated. {identifier=%{public}@, consent=%ld}",  buf,  0x16u);
    }

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1000CE32C;
    void v12[3] = &unk_10018E468;
    void v12[4] = *(void *)(a1 + 40);
    id v13 = v5;
    dispatch_async(&_dispatch_main_q, v12);
  }
}

void sub_1000CE32C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) user]);
  [v2 updateWithUserProfile:*(void *)(a1 + 40)];
}

void sub_1000CE36C(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) user]);
  [v1 setIsUpdatingGroupRecommendationsConsent:1];
}

void sub_1000CE5A8(_Unwind_Exception *a1)
{
}

void sub_1000CE5C8(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v4 = objc_claimAutoreleasedReturnValue([WeakRetained iCloudAccount]);
  id v5 = (void *)v4;
  if (WeakRetained && v4)
  {
    if ([*(id *)(a1 + 32) isEqual:kAccountDataclassCloudPhotos]
      && *(_BYTE *)(a1 + 56)
      && WeakRetained[15])
    {
      id v6 = sub_1000CADE8();
      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134218240;
        uint64_t v18 = WeakRetained;
        __int16 v19 = 2048;
        uint64_t v20 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Disabling My Photo Stream because iCloud Photo Library is being enabled. {self_ptr=%p, account_ptr=%p}",  buf,  0x16u);
      }

      [v5 setEnabled:0 forDataclass:kAccountDataclassMediaStream];
    }

    [v5 setEnabled:*(unsigned __int8 *)(a1 + 56) forDataclass:*(void *)(a1 + 32)];
    id v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained accountStore]);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1000CE80C;
    void v12[3] = &unk_100194300;
    objc_copyWeak(&v15, v2);
    char v16 = *(_BYTE *)(a1 + 56);
    id v13 = *(id *)(a1 + 32);
    id v14 = *(id *)(a1 + 40);
    [v8 saveAccount:v5 withCompletionHandler:v12];

    objc_destroyWeak(&v15);
  }

  else
  {
    id v9 = sub_1000CADE8();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1000FC00C((uint64_t)WeakRetained, (uint64_t)v5, v10);
    }

    uint64_t v11 = *(void *)(a1 + 40);
    if (v11) {
      (*(void (**)(uint64_t, void))(v11 + 16))(v11, 0LL);
    }
  }
}

void sub_1000CE7F0(_Unwind_Exception *a1)
{
}

void sub_1000CE80C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000CE8E4;
  block[3] = &unk_1001942D8;
  objc_copyWeak(&v12, (id *)(a1 + 48));
  char v13 = *(_BYTE *)(a1 + 56);
  id v6 = *(id *)(a1 + 32);
  char v14 = a2;
  id v9 = v6;
  id v10 = v5;
  id v11 = *(id *)(a1 + 40);
  id v7 = v5;
  dispatch_async(&_dispatch_main_q, block);

  objc_destroyWeak(&v12);
}

uint64_t sub_1000CE8E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _updateIcloudAccountWithEnabled:*(unsigned __int8 *)(a1 + 64) dataclass:*(void *)(a1 + 32) success:*(unsigned __int8 *)(a1 + 65) error:*(void *)(a1 + 40)];

  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

uint64_t sub_1000CE93C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }
  id v4 = sub_1000CADE8();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
    sub_1000FC084();
  }

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

void sub_1000CED44(_Unwind_Exception *a1)
{
}

void sub_1000CED74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472LL;
    id v4[2] = sub_1000CEE00;
    v4[3] = &unk_100194198;
    void v4[4] = WeakRetained;
    id v5 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, v4);
  }
}

uint64_t sub_1000CEE00(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

void sub_1000CEE44(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 domain]);
    if ([v5 isEqualToString:CPSErrorDomain] && objc_msgSend(v3, "code") == (id)104)
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 userInfo]);
      id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:CPSCancellationReasonErrorKey]);
      unsigned int v8 = [v7 isEqual:&off_1001AD8F0];

      if (v8)
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_1000CF06C;
        block[3] = &unk_1001943A0;
        objc_copyWeak(&v18, a1 + 6);
        id v16 = a1[4];
        id v17 = a1[5];
        dispatch_async(&_dispatch_main_q, block);

        objc_destroyWeak(&v18);
        goto LABEL_15;
      }
    }

    else
    {
    }

    id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 domain]);
    if ([v9 isEqualToString:AKAppleIDAuthenticationErrorDomain])
    {
      id v10 = [v3 code];

      if (v10 == (id)-7003LL)
      {
LABEL_14:
        v13[0] = _NSConcreteStackBlock;
        v13[1] = 3221225472LL;
        void v13[2] = sub_1000CF0A8;
        v13[3] = &unk_10018FA98;
        id v14 = a1[5];
        dispatch_async(&_dispatch_main_q, v13);

        goto LABEL_15;
      }
    }

    else
    {
    }

    id v11 = sub_1000CADE8();
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1000FC0B0();
    }

    goto LABEL_14;
  }

void sub_1000CF06C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _usePasswordAuthWithPresentingViewController:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
}

uint64_t sub_1000CF0A8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

void sub_1000CF278( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000CF294(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (!WeakRetained) {
    goto LABEL_4;
  }
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 domain]);
  if ([v6 isEqualToString:AKAppleIDAuthenticationErrorDomain])
  {
    id v7 = [v4 code];

    if (v7 == (id)-7003LL)
    {
LABEL_4:
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000CF450;
      block[3] = &unk_10018FA98;
      id v16 = *(id *)(a1 + 32);
      dispatch_async(&_dispatch_main_q, block);
      unsigned int v8 = v16;
      goto LABEL_11;
    }
  }

  else
  {
  }

  if (v4)
  {
    id v9 = sub_1000CADE8();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1000FC0B0();
    }

    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_1000CF4AC;
    v11[3] = &unk_10018FA98;
    id v12 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, v11);
    unsigned int v8 = v12;
  }

  else
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_1000CF468;
    v13[3] = &unk_100194198;
    void v13[4] = WeakRetained;
    id v14 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, v13);
    unsigned int v8 = v14;
  }

uint64_t sub_1000CF450(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

uint64_t sub_1000CF468(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

uint64_t sub_1000CF4AC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

void sub_1000CF7C4(_Unwind_Exception *a1)
{
}

void sub_1000CF7E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (v6)
  {
    id v8 = sub_1000CADE8();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1000FC2C4();
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000CFA04;
    block[3] = &unk_10018E440;
    void block[4] = WeakRetained;
    dispatch_async(&_dispatch_main_q, block);
    goto LABEL_7;
  }

  if (v5)
  {
    id v10 = objc_alloc_init(&OBJC_CLASS___TVCSUserProfilesAnalyticsEditUserServiceEvent);
    [v10 setServiceType:*(void *)(a1 + 72)];
    [v10 setActionType:*(_BYTE *)(a1 + 88) == 0];
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 homeUserIdentifier]);
    [v10 setIsHomeUser:v11 != 0];

    TVCSUserProfilesAnalyticsSendEvent(v10);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_1000CF9C8;
    v14[3] = &unk_10018E468;
    void v14[4] = WeakRetained;
    id v15 = v5;
    dispatch_async(&_dispatch_main_q, v14);

LABEL_7:
    return;
  }

  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"userProfile != nil"));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_1000FC1F8(a1);
  }
  _bs_set_crash_log_message([v12 UTF8String]);
  __break(0);
}

id sub_1000CF9C8(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) user]);
  [v2 updateWithUserProfile:*(void *)(a1 + 40)];

  return [*(id *)(a1 + 32) _cleanUpAfterSigningInOrOut];
}

id sub_1000CFA04(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cleanUpAfterSigningInOrOut];
}

#error "1000CFC30: call analysis failed (funcsize=62)"
id sub_1000CFC38(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) domain]);
  if ([v2 isEqualToString:AKAppleIDAuthenticationErrorDomain])
  {
    id v3 = [*(id *)(a1 + 32) code];

    if (v3 == (id)-7003LL) {
      return [*(id *)(a1 + 40) _cleanUpAfterSigningInOrOut];
    }
  }

  else
  {
  }

  [*(id *)(a1 + 40) _presentDialogWithError:*(void *)(a1 + 32) presentingViewController:*(void *)(a1 + 48)];
  return [*(id *)(a1 + 40) _cleanUpAfterSigningInOrOut];
}

void sub_1000CFD70(_Unwind_Exception *a1)
{
}

void sub_1000CFD8C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v8 = WeakRetained;
  if (!v6 && WeakRetained)
  {
    if ([WeakRetained _adoptPersona])
    {
      id v9 = [[AIDAServiceOwnersManager alloc] initWithAccountStore:v8[10]];
      id v10 = objc_alloc_init(&OBJC_CLASS___AIDAMutableServiceContext);
      [v10 setAuthenticationResults:v5];
      [v10 setOperationUIPermissions:1];
      [v10 setViewController:*(void *)(a1 + 32)];
      [v10 setCdpUiProvider:v8[9]];
      uint64_t v11 = AIDAServiceTypeCloud;
      uint64_t v20 = AIDAServiceTypeCloud;
      uint64_t v21 = *(void *)(a1 + 40);
      id v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v21,  &v20,  1LL));
      [v10 setSignInContexts:v12];

      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472LL;
      v15[2] = sub_1000CFFBC;
      v15[3] = &unk_100194468;
      objc_copyWeak(&v18, (id *)(a1 + 48));
      id v13 = v5;
      uint64_t v14 = *(void *)(a1 + 40);
      id v16 = v13;
      uint64_t v17 = v14;
      [v9 signInService:v11 withContext:v10 completion:v15];

      objc_destroyWeak(&v18);
    }

    else
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000CFFB4;
      block[3] = &unk_10018E440;
      void block[4] = v8;
      dispatch_async(&_dispatch_main_q, block);
    }
  }
}

void sub_1000CFF98(_Unwind_Exception *a1)
{
}

id sub_1000CFFB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cleanUpAfterSigningInOrOut];
}

void sub_1000CFFBC(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _restorePersona];
  if (a2)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKeyedSubscript:AKAuthenticationAlternateDSIDKey]);
    block = _NSConcreteStackBlock;
    uint64_t v23 = 3221225472LL;
    uint64_t v24 = sub_1000D00F0;
    id v25 = &unk_10018E468;
    uint64_t v26 = (uint64_t)WeakRetained;
    id v27 = v7;
    id v8 = v7;
    dispatch_async(&_dispatch_main_q, &block);
  }

  else
  {
    id v9 = sub_1000CADE8();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1000FC498( a1,  (uint64_t)v5,  (uint64_t)v10,  v11,  v12,  v13,  v14,  v15,  v16,  (uint64_t)v17,  v18,  (uint64_t)v19,  (uint64_t)v20,  v21,  (uint64_t)block,  v23,  (uint64_t)v24,  (uint64_t)v25,  v26,  (uint64_t)v27,  v28,  v29,  v30,  v31);
    }

    uint64_t v17 = _NSConcreteStackBlock;
    uint64_t v18 = 3221225472LL;
    __int16 v19 = sub_1000D0100;
    uint64_t v20 = &unk_10018E440;
    uint64_t v21 = (uint64_t)WeakRetained;
    dispatch_async(&_dispatch_main_q, &v17);
  }
}

id sub_1000D00F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateProfileWithServiceType:0 toAltDSID:*(void *)(a1 + 40)];
}

id sub_1000D0100(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cleanUpAfterSigningInOrOut];
}

void sub_1000D0228(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) _restorePersona];
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 account]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "ams_altDSID"));

  if (v5)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000D0354;
    block[3] = &unk_10018E468;
    void block[4] = *(void *)(a1 + 32);
    id v9 = v5;
    id v6 = v5;
    dispatch_async(&_dispatch_main_q, block);
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"altDSID != nil"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000FC558();
    }
    _bs_set_crash_log_message([v7 UTF8String]);
    __break(0);
  }

id sub_1000D0354(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateProfileWithServiceType:1 toAltDSID:*(void *)(a1 + 40)];
}

#error "1000D0410: call analysis failed (funcsize=43)"
id sub_1000D0418(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cleanUpAfterSigningInOrOut];
}

void sub_1000D04DC(_Unwind_Exception *a1)
{
}

void sub_1000D04F8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (!v6)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:AKAuthenticationUsernameKey]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:AKAuthenticationPasswordKey]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:AKAuthenticationAlternateDSIDKey]);
    if ([WeakRetained _adoptPersona])
    {
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472LL;
      void v11[2] = sub_1000D06D4;
      v11[3] = &unk_1001944E0;
      objc_copyWeak(&v15, (id *)(a1 + 40));
      id v12 = v10;
      id v13 = *(id *)(a1 + 32);
      id v14 = 0LL;
      +[GKLocalPlayer authenticatePlayerWithUsername:password:altDSID:completionHandler:]( &OBJC_CLASS___GKLocalPlayer,  "authenticatePlayerWithUsername:password:altDSID:completionHandler:",  v8,  v9,  v12,  v11);

      objc_destroyWeak(&v15);
    }

    else
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000D06CC;
      block[3] = &unk_10018E440;
      void block[4] = WeakRetained;
      dispatch_async(&_dispatch_main_q, block);
    }
  }
}

void sub_1000D06B8(_Unwind_Exception *a1)
{
}

id sub_1000D06CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cleanUpAfterSigningInOrOut];
}

void sub_1000D06D4(id *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  [WeakRetained _restorePersona];
  if (v7)
  {
    id v9 = sub_1000CADE8();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1000FC6E0( (uint64_t)WeakRetained,  (uint64_t)v7,  (uint64_t)v10,  v11,  v12,  v13,  v14,  v15,  v18,  (uint64_t)block,  v20,  (uint64_t)v21,  (uint64_t)v22,  v23,  (uint64_t)v24,  (uint64_t)v25,  (uint64_t)v26,  v27,  (uint64_t)v28,  (uint64_t)v29,  v30,  (uint64_t)v31,  (uint64_t)v32,  (uint64_t)v33);
    }

    block = _NSConcreteStackBlock;
    uint64_t v20 = 3221225472LL;
    uint64_t v21 = sub_1000D08AC;
    int v22 = &unk_10018EA28;
    uint64_t v23 = (uint64_t)WeakRetained;
    uint8_t v16 = &v24;
    id v24 = a1[6];
    uint64_t v17 = &v25;
    id v25 = a1[5];
    dispatch_async(&_dispatch_main_q, &block);
  }

  else
  {
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 3221225472LL;
    uint64_t v28 = sub_1000D0858;
    uint64_t v29 = &unk_100192A88;
    uint64_t v30 = (uint64_t)WeakRetained;
    uint8_t v16 = &v31;
    id v31 = a1[4];
    uint64_t v17 = &v32;
    id v32 = v6;
    id v33 = a1[5];
    dispatch_async(&_dispatch_main_q, &v26);
  }
}

id sub_1000D0858(uint64_t a1)
{
  id result = *(id *)(a1 + 48);
  if (result)
  {
    [result setModalTransitionStyle:2];
    return [*(id *)(a1 + 56) presentViewController:*(void *)(a1 + 48) animated:1 completion:0];
  }

  return result;
}

void sub_1000D08AC(id *a1)
{
  uint64_t v2 = TSKLocString(@"GameCenterSignInErrorTitle");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a1[5] localizedDescription]);
  id v8 = (id)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  v3,  v4,  1LL));

  uint64_t v5 = TSKLocString(@"GameCenterSignInErrorCancel");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v6,  1LL,  0LL));
  [v8 addAction:v7];

  [a1[6] presentViewController:v8 animated:1 completion:0];
}

void sub_1000D0F4C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = sub_1000CADE8();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000FC920(a1);
    }
  }
}

void sub_1000D1168(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 72);
  id v3 = *(void **)(a1 + 32);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) iCloudAltDSID]);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1000D125C;
  v7[3] = &unk_100194580;
  objc_copyWeak(v10, (id *)(a1 + 56));
  char v11 = *(_BYTE *)(a1 + 72);
  id v5 = *(id *)(a1 + 40);
  id v6 = *(void **)(a1 + 64);
  id v8 = v5;
  v10[1] = v6;
  id v9 = *(id *)(a1 + 48);
  [v3 setSiriRMVState:v2 foriCloudAltDSID:v4 completion:v7];

  objc_destroyWeak(v10);
}

void sub_1000D1248(_Unwind_Exception *a1)
{
}

void sub_1000D125C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = sub_1000CADE8();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000FC998( a1,  (uint64_t)v3,  (uint64_t)v7,  v8,  v9,  v10,  v11,  v12,  v17,  SHIDWORD(v17),  block,  v19,  (uint64_t)v20,  v21,  (uint64_t)v22,  v23,  v24,  buf,  *(uint64_t *)v26,  *(uint64_t *)&v26[8],  *(uint64_t *)&v26[16],  *(uint64_t *)&v26[24],  v27);
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = *(unsigned __int8 *)(a1 + 64);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
    LODWORD(buf) = 67109890;
    HIDWORD(buf) = v13;
    *(_WORD *)uint64_t v26 = 2114;
    *(void *)&v26[2] = v14;
    *(_WORD *)&v26[10] = 2160;
    *(void *)&v26[12] = 1752392040LL;
    *(_WORD *)&v26[20] = 2112;
    *(void *)&v26[22] = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Recognize my voice state successfully set. {isEnabled=%{BOOL}d, userIdentifier=%{public}@, altDSID=%{mask.hash}@}",  (uint8_t *)&buf,  0x26u);
  }

  *(void *)&__int128 block = _NSConcreteStackBlock;
  *((void *)&block + 1) = 3221225472LL;
  *(void *)&__int128 v19 = sub_1000D1420;
  *((void *)&v19 + 1) = &unk_100194558;
  LOBYTE(v24) = *(_BYTE *)(a1 + 64);
  uint64_t v23 = *(void *)(a1 + 56);
  id v20 = v3;
  uint64_t v21 = (uint64_t)WeakRetained;
  id v22 = *(id *)(a1 + 40);
  id v16 = v3;
  dispatch_async(&_dispatch_main_q, &block);
}

uint64_t sub_1000D1420(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    uint64_t v2 = *(void *)(a1 + 56);
  }
  else {
    uint64_t v2 = TVCSTriStateBoolForBool(*(unsigned __int8 *)(a1 + 64));
  }
  [*(id *)(a1 + 40) setRecognizeMyVoiceState:v2];
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_1000D159C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) iCloudAltDSID]);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_1000D165C;
  v4[3] = &unk_1001945D0;
  objc_copyWeak(&v6, (id *)(a1 + 48));
  id v5 = *(id *)(a1 + 40);
  [v2 getSiriRMVStatusForiCloudAltDSID:v3 completion:v4];

  objc_destroyWeak(&v6);
}

void sub_1000D1648(_Unwind_Exception *a1)
{
}

void sub_1000D165C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = sub_1000CADE8();
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v9 = v8;
  if (v5)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
      *(_DWORD *)uint64_t buf = 134219010;
      uint64_t v14 = a2;
      __int16 v15 = 2114;
      id v16 = v10;
      __int16 v17 = 2160;
      uint64_t v18 = 1752392040LL;
      __int16 v19 = 2112;
      id v20 = v11;
      __int16 v21 = 2114;
      id v22 = v5;
      _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "Failed to fetch recognize my voice state. {state=%ld, userIdentifier=%{public}@, altDSID=%{mask.hash}@, error=%{public}@}",  buf,  0x34u);
LABEL_6:
    }
  }

  else if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
    *(_DWORD *)uint64_t buf = 134218754;
    uint64_t v14 = a2;
    __int16 v15 = 2114;
    id v16 = v10;
    __int16 v17 = 2160;
    uint64_t v18 = 1752392040LL;
    __int16 v19 = 2112;
    id v20 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "State of recognize my voice for user. {state=%ld, userIdentifier=%{public}@, altDSID=%{mask.hash}@}",  buf,  0x2Au);
    goto LABEL_6;
  }

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  void v12[2] = sub_1000D185C;
  void v12[3] = &unk_10018EE18;
  void v12[4] = WeakRetained;
  void v12[5] = a2;
  dispatch_async(&_dispatch_main_q, v12);
}

id sub_1000D185C(id result)
{
  unint64_t v1 = *((void *)result + 5);
  if (v1 <= 3) {
    return [*((id *)result + 4) setRecognizeMyVoiceState:qword_10012A3D0[v1]];
  }
  return result;
}

void sub_1000D1AC4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[CDPContext contextForAccountWithAltDSID:]( &OBJC_CLASS___CDPContext,  "contextForAccountWithAltDSID:",  v2));

  id v4 = [[CDPStateController alloc] initWithContext:v3];
  unsigned int v5 = [v4 isManateeAvailable:0];
  id v6 = sub_1000CADE8();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = v7;
  if (v5)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
      *(_DWORD *)uint64_t buf = 138543874;
      id v22 = v9;
      __int16 v23 = 2160;
      uint64_t v24 = 1752392040LL;
      __int16 v25 = 2112;
      uint64_t v26 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "Manatee is available, proceeding with voice profile check. {userIdentifier=%{public}@, altDSID=%{mask.hash}@}",  buf,  0x20u);
    }

    uint64_t v11 = *(void **)(a1 + 40);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    v18[2] = sub_1000D1DAC;
    v18[3] = &unk_100194620;
    int v13 = &v20;
    objc_copyWeak(&v20, (id *)(a1 + 48));
    id v19 = *(id *)(a1 + 32);
    [v11 isVoiceProfileAvailableForiCloudAltDSID:v12 completion:v18];
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
      __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
      *(_DWORD *)uint64_t buf = 138543874;
      id v22 = v14;
      __int16 v23 = 2160;
      uint64_t v24 = 1752392040LL;
      __int16 v25 = 2112;
      uint64_t v26 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Voice profile availability not ready, Manatee isn't available. {userIdentifier=%{public}@, altDSID=%{mask.hash}@}",  buf,  0x20u);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000D1F50;
    block[3] = &unk_10018E810;
    int v13 = &v17;
    objc_copyWeak(&v17, (id *)(a1 + 48));
    dispatch_async(&_dispatch_main_q, block);
  }

  objc_destroyWeak(v13);
}

void sub_1000D1D90(_Unwind_Exception *a1)
{
}

void sub_1000D1DAC(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = sub_1000CADE8();
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v9 = v8;
  if (v5)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000FCA78();
    }
  }

  else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
    *(_DWORD *)uint64_t buf = 67109890;
    int v15 = a2;
    __int16 v16 = 2114;
    id v17 = v10;
    __int16 v18 = 2160;
    uint64_t v19 = 1752392040LL;
    __int16 v20 = 2112;
    __int16 v21 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Voice profile availability. {isAvailable=%{BOOL}d, userIdentifier=%{public}@, altDSID=%{mask.hash}@}",  buf,  0x26u);
  }

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  void v12[2] = sub_1000D1F38;
  void v12[3] = &unk_10018EFA0;
  char v13 = a2;
  void v12[4] = WeakRetained;
  dispatch_async(&_dispatch_main_q, v12);
}

id sub_1000D1F38(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40)) {
    uint64_t v1 = 3LL;
  }
  else {
    uint64_t v1 = 1LL;
  }
  return [*(id *)(a1 + 32) setRecognizeMyVoiceAvailability:v1];
}

void sub_1000D1F50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setRecognizeMyVoiceAvailability:2];
}

id sub_1000D200C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateRecognizeMyVoiceAvailability];
}

void sub_1000D2374(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings.userProfiles", "TVSettingsUserProfileFacade");
  uint64_t v2 = (void *)qword_1001E1BC8;
  qword_1001E1BC8 = (uint64_t)v1;
}

id sub_1000D23A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateRecognizeMyVoiceState];
}

  ;
}

  ;
}

void sub_1000D23F0(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

  ;
}

void sub_1000D242C( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_1000D2440( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

id sub_1000D2490()
{
  return [v0 code];
}

void sub_1000D249C( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_1000D24B0(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

  ;
}

  ;
}

  ;
}

  ;
}

  ;
}

id sub_1000D2518()
{
  return [v0 code];
}

void sub_1000D322C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

UIViewController *__cdecl sub_1000D327C(id a1, TSKSettingItem *a2)
{
  id v2 = objc_alloc(&OBJC_CLASS___TVSUITextAlertController);
  uint64_t v3 = TVCSLocalizedString(@"GameControllerHelpTitle");
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = TVCSLocalizedString(@"GameControllerHelpDescription");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = [v2 initWithTitle:v4 text:v6];

  [v7 setShouldCenterAlignShortText:0];
  return (UIViewController *)v7;
}

TSKSettingItem *__cdecl sub_1000D3300(id a1, TSKListSettingGroup *a2, TVSBluetoothDevice *a3)
{
  uint64_t v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[TVSBluetoothDevice name](v3, "name"));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:]( &OBJC_CLASS___TSKSettingItem,  "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:",  v4,  0LL,  v3,  @"state",  &stru_1001946C0));

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  unsigned int v7 = [v6 fileExistsAtPath:@"/System/Library/PreferenceBundles/GameControllerTVSettings.bundle"];

  if (v7)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSBundle bundleWithPath:]( &OBJC_CLASS___NSBundle,  "bundleWithPath:",  @"/System/Library/PreferenceBundles/GameControllerTVSettings.bundle"));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[TSKBundleLoader loaderWithBundle:](&OBJC_CLASS___TSKBundleLoader, "loaderWithBundle:", v8));
    [v5 setBundleLoader:v9];
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsBluetoothFacade deviceStatusFormatterForDeviceType:headsetType:showConnectedState:]( &OBJC_CLASS___TVSettingsBluetoothFacade,  "deviceStatusFormatterForDeviceType:headsetType:showConnectedState:",  -[TVSBluetoothDevice type](v3, "type"),  -[TVSBluetoothDevice headsetType](v3, "headsetType"),  1LL));
  [v5 setLocalizedValueFormatter:v10];
  [v5 setUpdateBlock:&stru_1001946E0];

  return (TSKSettingItem *)v5;
}

UIViewController *__cdecl sub_1000D3444(id a1, TSKSettingItem *a2)
{
  id v2 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v2, "representedObject"));
  if ([v3 type] != (id)4) {
    goto LABEL_9;
  }
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem bundleLoader](v2, "bundleLoader"));

  if (!v4) {
    goto LABEL_9;
  }
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem bundleLoader](v2, "bundleLoader"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 loadViewController]);
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___TSKViewController);
  id v8 = v6;
  uint64_t v9 = v8;
  if (v7) {
    uint64_t v10 = (objc_opt_isKindOfClass(v8, v7) & 1) != 0 ? v9 : 0LL;
  }
  else {
    uint64_t v10 = 0LL;
  }
  uint64_t v11 = v10;

  if (!v11) {
LABEL_9:
  }
    uint64_t v11 = objc_alloc_init(&OBJC_CLASS___TVSettingsBluetoothInfoViewController);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v3 name]);
  -[TVSettingsBluetoothInfoViewController setTitle:](v11, "setTitle:", v12);

  return (UIViewController *)v11;
}

void sub_1000D354C(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v11 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v11, "representedObject"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "tvset_pairedDeviceDisplayName"));
  -[TSKSettingItem setLocalizedTitle:](v11, "setLocalizedTitle:", v4);

  if ([v3 state] != (id)2) {
    goto LABEL_7;
  }
  if (![v3 requiresFirmwareUpdate])
  {
    if ([v3 hasPoorBehavior])
    {
      uint64_t v7 = TSKWiFiLocString(@"BluetoothDevicePoorBehaviorDescriptionFormat_WIFI");
      uint64_t v6 = objc_claimAutoreleasedReturnValue(v7);
      goto LABEL_6;
    }

id sub_1000D3654(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 name]);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  0LL,  v4,  @"state",  WeakRetained,  "_connectDevice:"));

  [v7 setUpdateBlock:&stru_100194700];
  return v7;
}

void sub_1000D36F0(id a1, TSKSettingItem *a2, id a3)
{
  id v4 = a3;
  uint64_t v5 = a2;
  id v8 = (id)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v5, "representedObject"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v8 name]);
  -[TSKSettingItem setHidden:](v5, "setHidden:", [v6 length] == 0);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v8 name]);
  -[TSKSettingItem setLocalizedTitle:](v5, "setLocalizedTitle:", v7);

  -[TSKSettingItem setLocalizedValue:](v5, "setLocalizedValue:", 0LL);
  LODWORD(v7) = [v4 integerValue] == (id)1;

  -[TSKSettingItem setAccessoryTypes:](v5, "setAccessoryTypes:", 4LL * v7);
}

void sub_1000D452C(_Unwind_Exception *a1)
{
}

void sub_1000D4560(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[TVSBluetoothManager sharedInstance](&OBJC_CLASS___TVSBluetoothManager, "sharedInstance"));
  [v2 unpairDevice:*(void *)(a1 + 32)];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setErrorAlert:0];
}

void sub_1000D45BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setErrorAlert:0];
}

void sub_1000D5284(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setHidden:", objc_msgSend(v2, "iCloudPhotoLibraryEnabled") ^ 1);
}

void sub_1000D52C8(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (([*(id *)(a1 + 32) iCloudPhotoStreamEnabled] & 1) != 0
    || ([*(id *)(a1 + 32) iCloudPhotoLibraryEnabled] & 1) == 0)
  {
    uint64_t v3 = [*(id *)(a1 + 32) iCloudPhotoStreamAvailable] ^ 1;
  }

  else
  {
    uint64_t v3 = 1LL;
  }

  [v4 setHidden:v3];
}

id sub_1000D53EC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedName]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[TSKSettingItem actionItemWithTitle:description:representedObject:keyPath:target:action:]( &OBJC_CLASS___TSKSettingItem,  "actionItemWithTitle:description:representedObject:keyPath:target:action:",  v5,  0LL,  v4,  @"selected",  *(void *)(a1 + 32),  "_didSelectSharingFilterItem:"));

  [v6 setUpdateBlock:&stru_100194908];
  return v6;
}

void sub_1000D5478(id a1, TSKSettingItem *a2, id a3)
{
  uint64_t v3 = a2;
  id v5 = (id)objc_claimAutoreleasedReturnValue(-[TSKSettingItem representedObject](v3, "representedObject"));
  -[TSKSettingItem setLocalizedValue:](v3, "setLocalizedValue:", 0LL);
  else {
    uint64_t v4 = 0LL;
  }
  -[TSKSettingItem setAccessoryTypes:](v3, "setAccessoryTypes:", v4);
}

void sub_1000D57B8(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___TVSettingsInterfaceFactory);
  uint64_t v2 = (void *)qword_1001E1BD8;
  qword_1001E1BD8 = (uint64_t)v1;
}

void sub_1000D6C1C(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 0.6));
  uint64_t v2 = (void *)qword_1001E1BE8;
  qword_1001E1BE8 = v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.9));
  uint64_t v4 = (void *)qword_1001E1BF0;
  qword_1001E1BF0 = v3;
}

void sub_1000D7350( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11, id *a12)
{
}

id sub_1000D743C(uint64_t a1, void *a2)
{
  uint64_t v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedTitle]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedDescription]);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( [WeakRetained _autoConfigureViewControllerWithTitle:v6 message:v7 interface:*(void *)(a1 + 32) dnsOnly:0]);
  return v8;
}

void sub_1000D74D4(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateIPItem:v6 value:v5];
}

void sub_1000D7538(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateIPItem:v6 value:v5];
}

void sub_1000D759C(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateIPItem:v6 value:v5];
}

id sub_1000D7600(uint64_t a1, void *a2)
{
  uint64_t v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedTitle]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedDescription]);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( [WeakRetained _autoConfigureViewControllerWithTitle:v6 message:v7 interface:*(void *)(a1 + 32) dnsOnly:1]);
  return v8;
}

void sub_1000D7698(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateDNSItem:v6 value:v5];
}

void sub_1000D7850( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000D7874(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained navigationController]);
  id v2 = [v1 popToViewController:WeakRetained animated:1];
}

id sub_1000D7AFC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _configureInterfaceForDHCP:*(void *)(a1 + 40)];
}

void sub_1000D7B08(uint64_t a1)
{
  id v2 = &off_10018D378;
  if (*(_BYTE *)(a1 + 48)) {
    id v2 = off_10018D370;
  }
  id v4 = [objc_alloc(*v2) initWithInterface:*(void *)(a1 + 32)];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) navigationController]);
  [v3 pushViewController:v4 animated:1];
}

id sub_1000D800C()
{
  if (qword_1001E1C08 != -1) {
    dispatch_once(&qword_1001E1C08, &stru_1001949E0);
  }
  return (id)qword_1001E1C00;
}

void *sub_1000D8484(void *a1, void *a2)
{
  id v3 = [a2 unsignedIntegerValue];
  if (v3 == (id)2)
  {
    uint64_t v7 = (void *)a1[4];
    id v8 = @"SiriHSJSItemTitle";
LABEL_7:
    a1 = (void *)objc_claimAutoreleasedReturnValue([v7 localizedJSTriggerString:v8]);
    return a1;
  }

  if (v3 == (id)1)
  {
    uint64_t v7 = (void *)a1[4];
    id v8 = @"SiriHSItemTitle";
    goto LABEL_7;
  }

  if (!v3)
  {
    id v4 = +[NSBundle bundleForClass:]( &OBJC_CLASS___NSBundle,  "bundleForClass:",  objc_opt_class(&OBJC_CLASS___TSKSettingItem));
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    uint64_t v6 = TSKLocStringFromBundleCachingKey(@"SettingsOFF", v5, 0LL, 0LL, @"Localizable");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v6);
  }

  return a1;
}

void sub_1000D8568(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "SiriVoiceTriggerFacade");
  id v2 = (void *)qword_1001E1C00;
  qword_1001E1C00 = (uint64_t)v1;
}

int64_t sub_1000D8B38(id a1, TVCSRoom *a2, TVCSRoom *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[TVCSRoom name](a2, "name"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[TVCSRoom name](v4, "name"));

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

id sub_1000D8E14(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a2 name]);
  id v7 = [v6 isEqual:*(void *)(a1 + 32)];

  if ((_DWORD)v7) {
    *a4 = 1;
  }
  return v7;
}

TVSettingsVPNDomainsViewController *sub_1000D95D4(uint64_t a1)
{
  return  -[TVSettingsVPNDomainsViewController initWithConfiguration:]( objc_alloc(&OBJC_CLASS___TVSettingsVPNDomainsViewController),  "initWithConfiguration:",  *(void *)(a1 + 32));
}

void sub_1000D9604(id a1, TSKSettingItem *a2, NSArray *a3)
{
  id v4 = a2;
  -[TSKSettingItem setHidden:](v4, "setHidden:", -[NSArray count](a3, "count") == 0);
  -[TSKSettingItem setLocalizedValue:](v4, "setLocalizedValue:", 0LL);
}

void sub_1000D9658(id a1, TSKSettingItem *a2, NSString *a3)
{
  -[TSKSettingItem setHidden:](a2, "setHidden:", a3 == 0LL);
}

void sub_1000D9668(id a1, TSKSettingItem *a2, NSArray *a3)
{
  -[TSKSettingItem setHidden:](a2, "setHidden:", a3 == 0LL);
}

void sub_1000D9678(id a1, TSKSettingItem *a2, NSString *a3)
{
  -[TSKSettingItem setHidden:](a2, "setHidden:", a3 == 0LL);
}

id sub_1000D9870(uint64_t a1)
{
  return _[*(id *)(a1 + 32) removeConfiguration];
}

void sub_1000D994C(_Unwind_Exception *a1)
{
}

void sub_1000D9970(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_1000D99F4;
  v3[3] = &unk_10018E468;
  id v4 = *(id *)(a1 + 32);
  id v5 = WeakRetained;
  dispatch_async(&_dispatch_main_q, v3);
}

void sub_1000D99F4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configurations]);
  id v3 = *(void **)(a1 + 40);
  if (v2) {
    id v4 = v3;
  }
  else {
    id v4 = (id)objc_claimAutoreleasedReturnValue([v3 editingDelegate]);
  }
  id v6 = v4;

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) navigationController]);
  objc_msgSend(v5, "tvcs_popToViewControllerBelowViewController:", v6);
}

void sub_1000D9B08(_Unwind_Exception *a1)
{
}

__CFString *sub_1000D9B2C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v5 = [v3 unsignedIntegerValue];

  id v6 = @"L2TP";
  switch((unint64_t)v5)
  {
    case 0uLL:
    case 4uLL:
      break;
    case 1uLL:
      id v6 = @"PPTP";
      break;
    case 2uLL:
      id v6 = @"IPsec";
      break;
    case 5uLL:
      id v6 = @"Relay";
      break;
    default:
      id v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained configuration]);
      id v6 = (__CFString *)objc_claimAutoreleasedReturnValue([v7 applicationName]);

      break;
  }

  return v6;
}

NSString *__cdecl sub_1000D9C10(id a1, NSArray *a2)
{
  uint64_t v2 = a2;
  if (-[NSArray count](v2, "count"))
  {
    uint64_t v3 = objc_claimAutoreleasedReturnValue(-[NSArray componentsJoinedByString:](v2, "componentsJoinedByString:", @", "));
  }

  else
  {
    uint64_t v4 = TSKLocString(@"VPNNoValue");
    uint64_t v3 = objc_claimAutoreleasedReturnValue(v4);
  }

  id v5 = (void *)v3;

  return (NSString *)v5;
}

void sub_1000D9EA0(uint64_t a1)
{
  id v2 = sub_1000DA028();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(v4 + 48);
    uint64_t v6 = *(void *)(v4 + 32);
    *(_DWORD *)uint64_t buf = 134218498;
    uint64_t v14 = v4;
    __int16 v15 = 2048;
    uint64_t v16 = v5;
    __int16 v17 = 2114;
    uint64_t v18 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Tap to add user Start called. {self=%p userProfileType=%ld, personaIdentifier=%{public}@}",  buf,  0x20u);
  }

  id v7 = *(void **)(a1 + 32);
  if (v7[4] || v7[6] != 1LL)
  {
    [v7 _start];
  }

  else
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[UMUserManager sharedManager](&OBJC_CLASS___UMUserManager, "sharedManager"));
    uint64_t v11 = kUMUserPersonaTypeKey;
    uint64_t v12 = &off_1001AD908;
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v12,  &v11,  1LL));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    id v10[2] = sub_1000DA068;
    v10[3] = &unk_100194B38;
    void v10[4] = *(void *)(a1 + 32);
    [v8 createUserPersona:v9 passcodeData:0 completionHandler:v10];
  }

id sub_1000DA028()
{
  if (qword_1001E1C20 != -1) {
    dispatch_once(&qword_1001E1C20, &stru_100194BC8);
  }
  return (id)qword_1001E1C18;
}

void sub_1000DA068(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_1000DA028();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000FCC28(v6);
    }

    [*(id *)(a1 + 32) _finishWithError:v6];
  }

  else
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) lock]);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1000DA160;
    void v12[3] = &unk_10018E468;
    id v10 = v5;
    uint64_t v11 = *(void *)(a1 + 32);
    id v13 = v10;
    uint64_t v14 = v11;
    objc_msgSend(v9, "lock", _NSConcreteStackBlock, 3221225472);
    sub_1000DA160((uint64_t)v12);
    [v9 unlock];
  }
}

void sub_1000DA160(uint64_t a1)
{
  id v2 = (uint64_t *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKeyedSubscript:kUMUserPersonaUniqueStringKey]);
  if (v3)
  {
    *(_BYTE *)(*(void *)(a1 + 40) + 8LL) = 1;
    objc_storeStrong((id *)(*(void *)(a1 + 40) + 32LL), v3);
    [*(id *)(a1 + 40) _start];
  }

  else
  {
    id v4 = sub_1000DA028();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT)) {
      sub_1000FCCA8(v2, v5);
    }

    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"TVSettingsTapToAddUserManagerErrorDomain",  1LL,  0LL));
    [*(id *)(a1 + 40) _finishWithError:v6];
  }
}

void sub_1000DA2AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 72);
  if ((unint64_t)(v3 - 1) >= 2)
  {
    if (v3 == 4)
    {
      id v11 = [*(id *)(v2 + 120) homeConfigurationState];
      id v12 = sub_1000DA028();
      id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        uint64_t v15 = TVCSHomeConfigurationStateToString(v11);
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
        int v17 = 134218498;
        uint64_t v18 = v14;
        __int16 v19 = 2048;
        id v20 = v11;
        __int16 v21 = 2114;
        id v22 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Tap to add user finished but user cancelled while waiting for HomeKit setup. {self=%p homeConfigurationState=%ld-%{public}@}",  (uint8_t *)&v17,  0x20u);
      }

      [*(id *)(a1 + 32) _cleanUp];
    }

    else
    {
      [(id)v2 _cleanUp];
    }
  }

  else
  {
    id v4 = sub_1000DA028();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      id v7 = *(void **)(v6 + 48);
      id v8 = *(void **)(v6 + 32);
      int v17 = 134218498;
      uint64_t v18 = v6;
      __int16 v19 = 2048;
      id v20 = v7;
      __int16 v21 = 2114;
      id v22 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Tap to add user cancelled by user. {self=%p userProfileType=%ld, personaIdentifier=%{public}@}",  (uint8_t *)&v17,  0x20u);
    }

    *(void *)(*(void *)(a1 + 32) + 72LL) = 3LL;
    [*(id *)(*(void *)(a1 + 32) + 24) invalidate];
    uint64_t v9 = *(void **)(a1 + 32);
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"TVSettingsTapToAddUserManagerErrorDomain",  2LL,  0LL));
    [v9 _finishWithError:v10];
  }

void sub_1000DA550(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 16LL));

  if (v2 != WeakRetained) {
    objc_storeWeak((id *)(*(void *)(a1 + 40) + 16LL), *(id *)(a1 + 32));
  }
}

void sub_1000DA7D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000DA7F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 96LL);
  uint64_t v4 = *(void *)(a1 + 48);
  id v7 = 0LL;
  unsigned __int8 v5 = [v3 canAddUserWithiCloudAltDSID:v2 gameCenterAltDSID:v4 error:&v7];
  id v6 = v7;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = v5;
  if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL)) {
    [*(id *)(a1 + 32) _finishWithError:v6];
  }
}

id sub_1000DA8F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _adoptPersona];
}

id sub_1000DA970(uint64_t a1)
{
  return [*(id *)(a1 + 32) _restorePersona];
}

id sub_1000DAA14(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) authenticatedAccounts]);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 56);
  *(void *)(v3 + 56) = v2;

  uint64_t v5 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) knownHomeUserIdentifiers]);
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 64);
  *(void *)(v6 + 64) = v5;

  if (_os_feature_enabled_impl("PineBoard", "UserProfileLanguages"))
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) preferredLanguageCode]);
    uint64_t v9 = *(void *)(a1 + 32);
    id v10 = *(void **)(v9 + 136);
    *(void *)(v9 + 136) = v8;

    uint64_t v11 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localeIdentifier]);
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = *(void **)(v12 + 144);
    *(void *)(v12 + 144) = v11;

    uint64_t v14 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) preferredLanguages]);
    uint64_t v15 = *(void *)(a1 + 32);
    uint64_t v16 = *(void **)(v15 + 152);
    *(void *)(v15 + 152) = v14;
  }

  *(_BYTE *)(*(void *)(a1 + 32) + 9) = [*(id *)(a1 + 40) isVoiceProfileAvailable];
  return [*(id *)(a1 + 32) _finish];
}

void sub_1000DABB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(void *)(v1 + 24))
  {
    *(void *)(v1 + 72) = 1LL;
    id v3 = sub_1000DA028();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = *(void *)(v5 + 48);
      *(_DWORD *)uint64_t buf = 134218240;
      uint64_t v32 = v5;
      __int16 v33 = 2048;
      uint64_t v34 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Starting Tap to Add User... {self=%p, userProfileType=%ld}",  buf,  0x16u);
    }

    id v7 = -[PBSIgnoreUserProfileAccountNotificationsAssertion initWithIdentifier:]( objc_alloc(&OBJC_CLASS___PBSIgnoreUserProfileAccountNotificationsAssertion),  "initWithIdentifier:",  @"Tap to Add User");
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = *(void **)(v8 + 80);
    *(void *)(v8 + 80) = v7;

    [*(id *)(*(void *)(a1 + 32) + 80) acquire];
    id v10 = objc_alloc(&OBJC_CLASS___RBSAssertion);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[RBSTarget currentProcess](&OBJC_CLASS___RBSTarget, "currentProcess"));
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[RBSDomainAttribute attributeWithDomain:name:]( &OBJC_CLASS___RBSDomainAttribute,  "attributeWithDomain:name:",  @"com.apple.common",  @"FinishTaskUninterruptable"));
    uint64_t v30 = v12;
    id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v30, 1LL));
    uint64_t v14 = -[RBSAssertion initWithExplanation:target:attributes:]( v10,  "initWithExplanation:target:attributes:",  @"Tap to Add User",  v11,  v13);
    uint64_t v15 = *(void **)(*(void *)(a1 + 32) + 88LL);
    *(void *)(*(void *)(a1 + 32) + 88LL) = v14;

    [*(id *)(*(void *)(a1 + 32) + 88) acquireWithInvalidationHandler:&stru_100194B80];
    objc_initWeak((id *)buf, *(id *)(a1 + 32));
    id v16 = objc_alloc_init(&OBJC_CLASS___SFAuthenticateAccountsServiceConfiguration);
    [v16 setServiceType:0];
    [v16 setIsHomeSharingSetupNeeded:*(void *)(*(void *)(a1 + 32) + 48) == 0];
    [v16 setIsHomeKitSetupNeeded:*(void *)(*(void *)(a1 + 32) + 48) == 0];
    int v17 = objc_alloc_init(&OBJC_CLASS___SFAuthenticateAccountsService);
    uint64_t v18 = *(void *)(a1 + 32);
    __int16 v19 = *(void **)(v18 + 24);
    *(void *)(v18 + 24) = v17;

    [*(id *)(*(void *)(a1 + 32) + 24) setConfiguration:v16];
    objc_msgSend(*(id *)(*(void *)(a1 + 32) + 24), "setDelegate:");
    id v20 = *(void **)(*(void *)(a1 + 32) + 24LL);
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472LL;
    v28[2] = sub_1000DAFD4;
    v28[3] = &unk_10018F108;
    objc_copyWeak(&v29, (id *)buf);
    [v20 setProgressHandler:v28];
    id v21 = sub_1000DA028();
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "Cleaning up unused accounts before activating Tap to Add service, if any...",  v27,  2u);
    }

    __int16 v23 = *(void **)(*(void *)(a1 + 32) + 112LL);
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472LL;
    v25[2] = sub_1000DB02C;
    v25[3] = &unk_10018E810;
    objc_copyWeak(&v26, (id *)buf);
    objc_msgSend(v23, "tvsettings_removeAccountsNotUsedByUserProfilesWithCompletion:", v25);
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    [v24 addObserver:*(void *)(a1 + 32) selector:"_cancelIfNotConnectedYet" name:UIApplicationWillResignActiveNotification object:0];

    objc_destroyWeak(&v26);
    objc_destroyWeak(&v29);

    objc_destroyWeak((id *)buf);
  }

void sub_1000DAF38(_Unwind_Exception *a1)
{
}

void sub_1000DAF80(id a1, RBSAssertion *a2, NSError *a3)
{
  uint64_t v3 = a3;
  if (v3)
  {
    id v4 = sub_1000DA028();
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000FCD20((uint64_t)v3, v5);
    }
  }
}

void sub_1000DAFD4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _handleSetupServiceProgressEvent:a2 info:v5];
}

void sub_1000DB02C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v3 = (void *)*((void *)WeakRetained + 13);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_1000DB0B8;
    v5[3] = &unk_10018E440;
    void v5[4] = WeakRetained;
    id v4 = v3;
    [v4 lock];
    sub_1000DB0B8((uint64_t)v5);
    [v4 unlock];
  }
}

id sub_1000DB0B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(void *)(v1 + 48))
  {
    id v3 = sub_1000DA028();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Removing all HK pairing identities.", buf, 2u);
    }

    id v5 = objc_alloc_init(&OBJC_CLASS___HMHomeManager);
    -[HMHomeManager removeAllHomeKitPairingIdentities](v5, "removeAllHomeKitPairingIdentities");
    id v6 = sub_1000DA028();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Removed all HK pairing identities.", v9, 2u);
    }

    uint64_t v1 = *(void *)(a1 + 32);
  }

  return [*(id *)(v1 + 24) activate];
}

void sub_1000DB214(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 48))
  {
    if (*(void *)(v1 + 40))
    {
      id v3 = sub_1000DA028();
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v5 = *((void *)*v2 + 4);
        *(_DWORD *)uint64_t buf = 138543362;
        uint64_t v23 = v5;
        id v6 = "Already adopting a persona, cannot adopt another nor the same twice. {personaUniqueString=%{public}@}";
        id v7 = v4;
        os_log_type_t v8 = OS_LOG_TYPE_DEFAULT;
        uint32_t v9 = 12;
LABEL_7:
        _os_log_impl((void *)&_mh_execute_header, v7, v8, v6, buf, v9);
      }
    }

    else
    {
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[UMUserPersona currentPersona](&OBJC_CLASS___UMUserPersona, "currentPersona"));
      id v21 = 0LL;
      id v11 = -[os_log_s copyCurrentPersonaContextWithError:](v4, "copyCurrentPersonaContextWithError:", &v21);
      id v12 = v21;
      if (v11)
      {
        objc_storeStrong((id *)*v2 + 5, v11);
        id v13 = sub_1000DA028();
        uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v15 = *((void *)*v2 + 4);
          *(_DWORD *)uint64_t buf = 138543362;
          uint64_t v23 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Adopting persona. {personaUniqueString=%{public}@}",  buf,  0xCu);
        }

        id v16 = (void *)objc_claimAutoreleasedReturnValue( -[os_log_s generateAndRestorePersonaContextWithPersonaUniqueString:]( v4,  "generateAndRestorePersonaContextWithPersonaUniqueString:",  *((void *)*v2 + 4)));
        if (v16)
        {
          id v17 = sub_1000DA028();
          uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_1000FCE14((uint64_t)v2, v16);
          }

          [*v2 _finishWithError:v16];
        }
      }

      else
      {
        id v19 = sub_1000DA028();
        id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          sub_1000FCD94(v12);
        }

        [*v2 _finishWithError:v12];
      }
    }
  }

  else
  {
    id v10 = sub_1000DA028();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      id v6 = "No persona adoption, adding a Primary user.";
      id v7 = v4;
      os_log_type_t v8 = OS_LOG_TYPE_INFO;
      uint32_t v9 = 2;
      goto LABEL_7;
    }
  }
}

void sub_1000DB4D8(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 40LL))
  {
    id v2 = sub_1000DA028();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 40LL);
      int v9 = 138412290;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Restoring persona. {savedPersonaContext=%@}",  (uint8_t *)&v9,  0xCu);
    }

    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[UMUserPersona currentPersona](&OBJC_CLASS___UMUserPersona, "currentPersona"));
    id v6 = [v5 restorePersonaWithSavedPersonaContext:*(void *)(*(void *)(a1 + 32) + 40)];

    uint64_t v7 = *(void *)(a1 + 32);
    os_log_type_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = 0LL;
  }

void sub_1000DB674(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 48);
  if (v2 > 31)
  {
    if (v2 == 32 || v2 == 100)
    {
      id v9 = sub_1000DA028();
      os_log_type_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_17;
      }
      int v10 = *(_DWORD *)(a1 + 48);
      id v11 = sub_1000DB8FC(v10);
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 67109634;
      *(_DWORD *)uint64_t v24 = v10;
      *(_WORD *)&v24[4] = 2082;
      *(void *)&v24[6] = v11;
      __int16 v25 = 2048;
      uint64_t v26 = v12;
      id v13 = "AuthenticateAccounts: session %d-%{public}s. {self=%p}";
LABEL_16:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v13, buf, 0x1Cu);
      goto LABEL_17;
    }

id sub_1000DB8F0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) tapToAddUserManagerDidStart:*(void *)(a1 + 40)];
}

const char *sub_1000DB8FC(int a1)
{
  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300) {
              return "BackupProgress";
            }
            if (a1 == 310) {
              return "SyncProgress";
            }
          }

          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }

        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }

        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }

      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }

        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }

      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }

      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }

      return "?";
    }

    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000) {
          return "SecureIntentStart";
        }
        if (a1 == 1001) {
          return "SecureIntentFinish";
        }
      }

      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }

      return "?";
    }

    switch(a1)
    {
      case 900:
        uint64_t result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        uint64_t result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        uint64_t result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        uint64_t result = "SU-No-SetupCancelled";
        break;
      case 904:
        uint64_t result = "SU-No-SetupObliterate";
        break;
      case 905:
        uint64_t result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        uint64_t result = "SysDrop AirDrop Event";
        break;
      case 907:
        uint64_t result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        uint64_t result = "SysDrop Cancel Event";
        break;
      case 909:
        uint64_t result = "File Transfer Progress Event";
        break;
      case 910:
        uint64_t result = "File Transfer Completed Event";
        break;
      case 911:
        uint64_t result = "iOSWiFiSetup";
        break;
      case 912:
        uint64_t result = "HKPrimaryResidentSSIDFetchStart";
        break;
      case 913:
        uint64_t result = "LoggingProfileTransfer";
        break;
      default:
        switch(a1)
        {
          case 800:
            uint64_t result = "AuthAccountsStart";
            break;
          case 803:
            uint64_t result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            uint64_t result = "AuthAccountsStoreProgress";
            break;
          case 805:
            uint64_t result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }

        break;
    }
  }

  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          uint64_t result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          uint64_t result = "TVLSFinish";
          break;
        case 270:
          uint64_t result = "TVLSEstimateStart";
          break;
        case 272:
          uint64_t result = "TVLSEstimateFinal";
          break;
        case 274:
          uint64_t result = "TVLSEstimateFailed";
          break;
        case 276:
          uint64_t result = "TVLSTryAgain";
          break;
        case 277:
          uint64_t result = "TVLSToneBegan";
          break;
        case 278:
          uint64_t result = "TVLCalStart";
          break;
        case 279:
          uint64_t result = "TVLCalStep";
          break;
        case 280:
          uint64_t result = "TVLCalFailed";
          break;
        case 281:
          uint64_t result = "TVLCalTryAgain";
          break;
        case 282:
          uint64_t result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250) {
            return "?";
          }
          uint64_t result = "ReportSuccess";
          break;
      }
    }

    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130) {
            return "WiFiPoweredOff";
          }
          if (a1 == 140) {
            return "RecognizeVoice";
          }
        }

        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }

        return "?";
      }

      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            uint64_t result = "iCloudStart";
          }

          else
          {
            if (a1 != 224) {
              return "?";
            }
            uint64_t result = "AppleIDSetupStart";
          }

          break;
      }
    }
  }

  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65) {
            return "SecurityAPCLoopStart";
          }
          if (a1 == 70) {
            return "SecurityFinish";
          }
        }

        else
        {
          if (a1 == 50) {
            return "PreAuthFinish";
          }
          if (a1 == 60) {
            return "SecurityStart";
          }
        }
      }

      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              uint64_t result = "Error";
              break;
            case 31:
              uint64_t result = "SessionStarted";
              break;
            case 32:
              uint64_t result = "SessionEnded";
              break;
            case 33:
              uint64_t result = "SessionSecured";
              break;
            case 35:
              uint64_t result = "ConnectStart";
              break;
            case 40:
              uint64_t result = "PreAuthStart";
              break;
            default:
              return "?";
          }

          return result;
        }

        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }

      return "?";
    }

    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }

      return "?";
    }

    switch(a1)
    {
      case 'P':
        uint64_t result = "BasicConfigStart";
        break;
      case 'Z':
        uint64_t result = "BasicConfigFinish";
        break;
      case '\\':
        uint64_t result = "StepStart";
        break;
      case '^':
        uint64_t result = "StepFinish";
        break;
      case '_':
        uint64_t result = "PreFinish";
        break;
        uint64_t result = "SetupFinished";
        break;
      case 'a':
        uint64_t result = "SetupResumed";
        break;
      case 'b':
        uint64_t result = "SetupSuspend";
        break;
      case 'c':
        uint64_t result = "SetupPeerSWUpdate";
        break;
      case 'd':
        uint64_t result = "Finished";
        break;
      default:
        return "?";
    }
  }

  return result;
}

void sub_1000DC0FC(uint64_t a1)
{
  if ((*(void *)(*(void *)(a1 + 32) + 72LL) & 0xFFFFFFFFFFFFFFFELL) != 4)
  {
    id v2 = sub_1000DA028();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void **)(a1 + 32);
      uint64_t v5 = (void *)v4[6];
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v66 = (unint64_t)v4;
      __int16 v67 = 2048;
      uint64_t v68 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Finished Tap to Add User. {self=%p, userProfileType=%ld}",  buf,  0x16u);
    }

    if ([*(id *)(*(void *)(a1 + 32) + 56) count])
    {
      id v6 = objc_alloc_init(&OBJC_CLASS___PBSCreateUserProfileAttributes);
      [v6 setType:*(void *)(*(void *)(a1 + 32) + 48)];
      [v6 setPersonaUniqueString:*(void *)(*(void *)(a1 + 32) + 32)];
      if (_os_feature_enabled_impl("PineBoard", "UserProfileLanguages"))
      {
        uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userProfilesValidator]);
        os_log_type_t v8 = (void *)objc_claimAutoreleasedReturnValue( [v7 preferredLanguagesFromLanguages:*(void *)(*(void *)(a1 + 32) + 152) forUserType:*(void *)(*(void *)(a1 + 32) + 48)]);

        id v9 = -[TVCSPreferredLanguagesManager initWithLanguages:inputModes:updateFromPreferences:]( objc_alloc(&OBJC_CLASS___TVCSPreferredLanguagesManager),  "initWithLanguages:inputModes:updateFromPreferences:",  v8,  0LL,  0LL);
        int v10 = (void *)objc_claimAutoreleasedReturnValue(-[TVCSPreferredLanguagesManager preferredLanguages](v9, "preferredLanguages"));
        id v11 = (void *)objc_claimAutoreleasedReturnValue(-[TVCSPreferredLanguagesManager preferredInputModeList](v9, "preferredInputModeList"));
        id v12 = sub_1000DA028();
        id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 138543618;
          unint64_t v66 = (unint64_t)v10;
          __int16 v67 = 2114;
          uint64_t v68 = v11;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Tap-To-Add user: {preferredLanguages=%{public}@, preferredInputModes=%{public}@",  buf,  0x16u);
        }

        [v6 setPreferredLanguages:v10];
        [v6 setPreferredInputModes:v11];
        id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 localeIdentifier]);

        id v16 = *(void **)(*(void *)(a1 + 32) + 144LL);
        if (v16 && ([v16 isEqual:v15] & 1) == 0)
        {
          id v17 = sub_1000DA028();
          uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            unint64_t v19 = *(void *)(*(void *)(a1 + 32) + 144LL);
            *(_DWORD *)uint64_t buf = 138543618;
            unint64_t v66 = v19;
            __int16 v67 = 2114;
            uint64_t v68 = v15;
            _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Warning: new user's locale {userLocale=%{public}@} does not match the device locale {deviceLocale=%{public }@} – preferred languages may change",  buf,  0x16u);
          }
        }
      }

      __int128 v62 = 0u;
      __int128 v63 = 0u;
      __int128 v60 = 0u;
      __int128 v61 = 0u;
      uint64_t v52 = a1;
      id v20 = *(id *)(*(void *)(a1 + 32) + 56LL);
      id v21 = [v20 countByEnumeratingWithState:&v60 objects:v71 count:16];
      if (v21)
      {
        id v22 = v21;
        uint64_t v23 = *(void *)v61;
        do
        {
          for (i = 0LL; i != v22; i = (char *)i + 1)
          {
            if (*(void *)v61 != v23) {
              objc_enumerationMutation(v20);
            }
            __int16 v25 = *(void **)(*((void *)&v60 + 1) + 8LL * (void)i);
            switch([v25 type])
            {
              case 0u:
                id v26 = sub_1000DA028();
                uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
                if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
                {
                  unsigned int v28 = [v25 type];
                  *(_DWORD *)uint64_t buf = 134218242;
                  unint64_t v66 = v28;
                  __int16 v67 = 2112;
                  uint64_t v68 = v25;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "Unknown account type was signed in, it will be ignored. {type=%ld, accountInfo=%@}",  buf,  0x16u);
                }

                goto LABEL_25;
              case 1u:
                uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 altDSID]);
                [v6 setICloudAltDSID:v27];
                goto LABEL_25;
              case 2u:
                uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 altDSID]);
                [v6 setITunesAltDSID:v27];
                goto LABEL_25;
              case 3u:
                uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 altDSID]);
                [v6 setGameCenterAltDSID:v27];
LABEL_25:

                break;
              default:
                continue;
            }
          }

          id v22 = [v20 countByEnumeratingWithState:&v60 objects:v71 count:16];
        }

        while (v22);
      }

      uint64_t v29 = v52;
      if ([*(id *)(*(void *)(v52 + 32) + 64) count])
      {
        id v30 = sub_1000DA028();
        id v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          unint64_t v32 = *(void *)(v52 + 32);
          __int16 v33 = *(void **)(v32 + 48);
          id v34 = [*(id *)(v32 + 64) count];
          *(_DWORD *)uint64_t buf = 134218496;
          unint64_t v66 = v32;
          __int16 v67 = 2048;
          uint64_t v68 = v33;
          __int16 v69 = 2048;
          id v70 = v34;
          _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "Associating known home user identifiers to new user profile. {self=%p, userProfileType=%ld, homeUserIdentifiersCount=%ld}",  buf,  0x20u);
        }

        __int128 v35 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
        __int128 v56 = 0u;
        __int128 v57 = 0u;
        __int128 v58 = 0u;
        __int128 v59 = 0u;
        id v36 = *(id *)(*(void *)(v52 + 32) + 64LL);
        id v37 = [v36 countByEnumeratingWithState:&v56 objects:v64 count:16];
        if (v37)
        {
          id v38 = v37;
          uint64_t v39 = *(void *)v57;
          do
          {
            for (j = 0LL; j != v38; j = (char *)j + 1)
            {
              if (*(void *)v57 != v39) {
                objc_enumerationMutation(v36);
              }
              id v41 = *(void **)(*((void *)&v56 + 1) + 8LL * (void)j);
              id v42 = objc_alloc(&OBJC_CLASS___PBSScopedHomeUserIdentifier);
              id v43 = (void *)objc_claimAutoreleasedReturnValue([v41 homeUniqueIdentifier]);
              unsigned __int8 v44 = (void *)objc_claimAutoreleasedReturnValue([v41 userUniqueIdentifier]);
              id v45 = [v42 initWithHomeUniqueIdentifier:v43 userUniqueIdentifier:v44];

              -[NSMutableSet addObject:](v35, "addObject:", v45);
            }

            id v38 = [v36 countByEnumeratingWithState:&v56 objects:v64 count:16];
          }

          while (v38);
        }

        id v46 = -[NSMutableSet copy](v35, "copy");
        [v6 setKnownHomeUserIdentifiers:v46];

        uint64_t v29 = v52;
      }

      uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(+[PBSUserProfileManager sharedInstance](&OBJC_CLASS___PBSUserProfileManager, "sharedInstance"));
      v53[0] = _NSConcreteStackBlock;
      v53[1] = 3221225472LL;
      v53[2] = sub_1000DC7E0;
      v53[3] = &unk_100190EB0;
      uint64_t v48 = *(void *)(v29 + 32);
      id v54 = v6;
      uint64_t v55 = v48;
      id v49 = v6;
      [v47 createUserProfileWithAttributes:v49 completionHandler:v53];
    }

    else
    {
      id v50 = sub_1000DA028();
      uint64_t v51 = (os_log_s *)objc_claimAutoreleasedReturnValue(v50);
      if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
        sub_1000FCF28(v51);
      }

      id v49 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"TVSettingsTapToAddUserManagerErrorDomain",  3LL,  0LL));
      [*(id *)(a1 + 32) _finishWithError:v49];
    }
  }

void sub_1000DC7E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000DA028();
  os_log_type_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000FCF68(a1, v9);
    }

    [*(id *)(a1 + 40) _finishWithError:v6];
  }

  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = [*(id *)(a1 + 32) type];
      uint64_t v11 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 134218242;
      id v27 = v10;
      __int16 v28 = 2112;
      uint64_t v29 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "New user added. {userProfileType=%ld, attributes=%@}",  buf,  0x16u);
    }

    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSUserProfilesAnalyticsAddUserEvent addUserEventWithActionType:userProfile:]( &OBJC_CLASS___TVCSUserProfilesAnalyticsAddUserEvent,  "addUserEventWithActionType:userProfile:",  1LL,  v5));
    TVCSUserProfilesAnalyticsSendEvent(v12);
    uint64_t v13 = *(void *)(a1 + 40);
    id v14 = *(void **)(v13 + 104);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472LL;
    v24[2] = sub_1000DC9EC;
    v24[3] = &unk_10018E468;
    v24[4] = v13;
    id v25 = v5;
    id v15 = v14;
    [v15 lock];
    sub_1000DC9EC((uint64_t)v24);
    [v15 unlock];

    id v16 = *(void **)(a1 + 32);
    id v17 = *(void **)(*(void *)(a1 + 40) + 104LL);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    _DWORD v21[2] = sub_1000DC9F8;
    v21[3] = &unk_10018E468;
    id v18 = v16;
    uint64_t v19 = *(void *)(a1 + 40);
    id v22 = v18;
    uint64_t v23 = v19;
    id v20 = v17;
    objc_msgSend(v20, "lock", _NSConcreteStackBlock, 3221225472);
    sub_1000DC9F8((uint64_t)v21);
    [v20 unlock];
  }
}

void sub_1000DC9EC(uint64_t a1)
{
}

void sub_1000DC9F8(uint64_t a1)
{
  id v2 = sub_1000DA028();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    id v4 = [*(id *)(a1 + 32) type];
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
    unsigned int v6 = [*(id *)(*(void *)(a1 + 40) + 24) homeKitSetupDidSucceed];
    *(_DWORD *)uint64_t buf = 134218496;
    id v20 = v4;
    __int16 v21 = 1024;
    BOOL v22 = v5 != 0LL;
    __int16 v23 = 1024;
    unsigned int v24 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Deciding if we have pending HomeKit setup. {userProfileType=%ld, iCloudSignedIn=%{BOOL}d, didHomeKitPairingSucceeded=%{BOOL}d}",  buf,  0x18u);
  }

  if (![*(id *)(a1 + 32) type]
    && (uint64_t v12 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID])) != 0
    && (uint64_t v13 = (void *)v12,
        unsigned int v14 = [*(id *)(*(void *)(a1 + 40) + 24) homeKitSetupDidSucceed],
        v13,
        v14))
  {
    *(void *)(*(void *)(a1 + 40) + 72LL) = 4LL;
    [*(id *)(*(void *)(a1 + 40) + 24) invalidate];
    [*(id *)(a1 + 40) _beginHomeKitSetup];
  }

  else
  {
    *(void *)(*(void *)(a1 + 40) + 72LL) = 5LL;
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _result]);
    [*(id *)(a1 + 40) _cleanUp];
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 16LL));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000DCBF0;
    block[3] = &unk_10018EA28;
    uint64_t v9 = *(void *)(a1 + 40);
    id v16 = WeakRetained;
    uint64_t v17 = v9;
    id v18 = v7;
    id v10 = v7;
    id v11 = WeakRetained;
    dispatch_async(&_dispatch_main_q, block);
  }

id sub_1000DCBF0(uint64_t a1)
{
  id v2 = sub_1000DA028();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 134217984;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Tap to add user finished. {delegate=%p}",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 32) tapToAddUserManager:*(void *)(a1 + 40) didFinishWithResult:*(void *)(a1 + 48)];
}

void sub_1000DCD18(uint64_t a1)
{
  id v2 = sub_1000DA028();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)uint64_t buf = 134217984;
    uint64_t v17 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Setting up HomeKit. {self=%p}", buf, 0xCu);
  }

  int v6 = (void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 32);
  if (*(void *)(v5 + 48))
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"_userProfileType == PBSUserProfileTypePrimary"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1000FD008(a1, (void *)(a1 + 32), (uint64_t)v12);
    }
    _bs_set_crash_log_message([v12 UTF8String]);
    __break(0);
    JUMPOUT(0x1000DCED0LL);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(v5 + 16));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000DCED8;
  block[3] = &unk_10018E468;
  uint64_t v8 = *v6;
  id v14 = WeakRetained;
  uint64_t v15 = v8;
  id v9 = WeakRetained;
  dispatch_async(&_dispatch_main_q, block);
  uint64_t v10 = objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
  id v11 = *(void **)(*v6 + 120LL);
  *(void *)(*v6 + 120LL) = v10;

  [*(id *)(*v6 + 120) addObserver:*v6 forKeyPath:@"homeConfigurationState" options:4 context:off_1001E0B18];
}

uint64_t sub_1000DCED8(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector(*(void *)(a1 + 32), "tapToAddUserManagerWillBeginHomeKitSetup:");
  if ((result & 1) != 0) {
    return (uint64_t)_[*(id *)(a1 + 32) tapToAddUserManagerWillBeginHomeKitSetup:*(void *)(a1 + 40)];
  }
  return result;
}

void sub_1000DCF90(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 120) homeConfigurationState];
  id v3 = sub_1000DA028();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = TVCSHomeConfigurationStateToString(v2);
    int v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    *(_DWORD *)uint64_t buf = 134218242;
    id v31 = v2;
    __int16 v32 = 2114;
    __int16 v33 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Home configuration state change. {state=%ld, state_str=%{public}@}",  buf,  0x16u);
  }

  if (v2 == (id)2)
  {
    id v15 = sub_1000DA028();
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Home configuration entered unconfigured state.",  buf,  2u);
    }

    [*(id *)(*(void *)(a1 + 32) + 120) startBrowsingForLocalAccessory];
  }

  else
  {
    if (v2 == (id)3)
    {
      id v17 = sub_1000DA028();
      id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Home configuration is ready to pick home/room for local accessory.",  buf,  2u);
      }

      [*(id *)(*(void *)(a1 + 32) + 120) stopBrowsingForLocalAccessory];
      *(void *)(*(void *)(a1 + 32) + 72LL) = 5LL;
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _result]);
      [*(id *)(a1 + 32) _cleanUp];
      id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16LL));
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472LL;
      v22[2] = sub_1000DD364;
      v22[3] = &unk_10018EA28;
      uint64_t v21 = *(void *)(a1 + 32);
      id v23 = WeakRetained;
      uint64_t v24 = v21;
      id v25 = v19;
      id v12 = v19;
      id v13 = WeakRetained;
      dispatch_async(&_dispatch_main_q, v22);

      id v14 = v23;
    }

    else
    {
      if (v2 != (id)4) {
        return;
      }
      id v7 = sub_1000DA028();
      uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Home configuration state is done, finishing without prompting for home/room picker.",  buf,  2u);
      }

      [*(id *)(*(void *)(a1 + 32) + 120) stopBrowsingForLocalAccessory];
      *(void *)(*(void *)(a1 + 32) + 72LL) = 5LL;
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _result]);
      [*(id *)(a1 + 32) _cleanUp];
      id v10 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16LL));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000DD2B4;
      block[3] = &unk_10018EA28;
      uint64_t v11 = *(void *)(a1 + 32);
      id v27 = v10;
      uint64_t v28 = v11;
      id v29 = v9;
      id v12 = v9;
      id v13 = v10;
      dispatch_async(&_dispatch_main_q, block);

      id v14 = v27;
    }
  }

id sub_1000DD2B4(uint64_t a1)
{
  id v2 = sub_1000DA028();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 134217984;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Tap to add user finished. {delegate=%p}",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 32) tapToAddUserManager:*(void *)(a1 + 40) didFinishWithResult:*(void *)(a1 + 48)];
}

id sub_1000DD364(uint64_t a1)
{
  return _[*(id *)(a1 + 32) tapToAddUserManager:*(void *)(a1 + 40) didFinishWithUnconfiguredHomeKitLocalAccessoryWithResult:*(void *)(a1 + 48)];
}

void sub_1000DD410(uint64_t a1)
{
  if ((*(void *)(*(void *)(a1 + 32) + 72LL) & 0xFFFFFFFFFFFFFFFELL) == 4) {
    return;
  }
  id v2 = sub_1000DA028();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void **)(a1 + 32);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) domain]);
    id v6 = [*(id *)(a1 + 40) code];
    uint64_t v7 = *(void *)(a1 + 40);
    *(_DWORD *)uint64_t buf = 134218754;
    id v46 = v4;
    __int16 v47 = 2114;
    uint64_t v48 = v5;
    __int16 v49 = 2048;
    id v50 = v6;
    __int16 v51 = 2112;
    uint64_t v52 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Tap to add user finished with error. {self=%p, errorDomain=%{public}@, errorCode=%ld, error=%@}",  buf,  0x2Au);
  }

  *(void *)(*(void *)(a1 + 32) + 72LL) = 5LL;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) domain]);
  if (([v8 isEqualToString:@"TVSettingsTapToAddUserManagerErrorDomain"] & 1) == 0)
  {

    goto LABEL_8;
  }

  id v9 = [*(id *)(a1 + 40) code];

  if (v9 != (id)2)
  {
LABEL_8:
    id v11 = objc_alloc_init(&OBJC_CLASS___TVCSUserProfilesAnalyticsAddUserFailedEvent);
    [v11 setActionType:1];
    [v11 setUserType:*(void *)(*(void *)(a1 + 32) + 48)];
    [v11 setError:*(void *)(a1 + 40)];
    TVCSUserProfilesAnalyticsSendEvent(v11);

    char v10 = 0;
    goto LABEL_9;
  }

  char v10 = 1;
LABEL_9:
  v41[0] = _NSConcreteStackBlock;
  v41[1] = 3221225472LL;
  void v41[2] = sub_1000DD8A0;
  v41[3] = &unk_100190DE8;
  id v12 = *(void **)(a1 + 40);
  v41[4] = *(void *)(a1 + 32);
  char v43 = v10;
  id v42 = v12;
  id v13 = objc_retainBlock(v41);
  if ([*(id *)(*(void *)(a1 + 32) + 56) count])
  {
    __int16 v32 = v13;
    id v14 = sub_1000DA028();
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      id v16 = *(void **)(*(void *)(a1 + 32) + 56LL);
      *(_DWORD *)uint64_t buf = 138412290;
      id v46 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Cleaning up signed in accounts since we finished with error. {signedInAccounts=%@}",  buf,  0xCu);
    }

    id v17 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    uint64_t v33 = a1;
    id v18 = *(id *)(*(void *)(a1 + 32) + 56LL);
    id v19 = [v18 countByEnumeratingWithState:&v37 objects:v44 count:16];
    if (v19)
    {
      id v20 = v19;
      uint64_t v21 = *(void *)v38;
      id v34 = (void *)ACAccountTypeIdentifierGameCenter;
      BOOL v22 = (void *)ACAccountTypeIdentifieriTunesStore;
      id v23 = (void *)ACAccountTypeIdentifierAppleAccount;
      do
      {
        for (i = 0LL; i != v20; i = (char *)i + 1)
        {
          if (*(void *)v38 != v21) {
            objc_enumerationMutation(v18);
          }
          id v25 = *(void **)(*((void *)&v37 + 1) + 8LL * (void)i);
          unsigned int v26 = objc_msgSend(v25, "type", v32);
          id v27 = v23;
          switch(v26)
          {
            case 0u:
              id v28 = sub_1000DA028();
              id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
              if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)uint64_t buf = 138412290;
                id v46 = v25;
                _os_log_error_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_ERROR,  "Unknown account type was signed in, it will be ignored. {accountInfo=%@}",  buf,  0xCu);
              }

              goto LABEL_25;
            case 1u:
              goto LABEL_22;
            case 2u:
              id v27 = v22;
              goto LABEL_22;
            case 3u:
              id v27 = v34;
LABEL_22:
              id v29 = v27;
              break;
            default:
              id v29 = 0LL;
              break;
          }

          id v30 = (void *)objc_claimAutoreleasedReturnValue([v25 altDSID]);
          -[NSMutableDictionary setObject:forKeyedSubscript:](v17, "setObject:forKeyedSubscript:", v30, v29);

LABEL_25:
        }

        id v20 = [v18 countByEnumeratingWithState:&v37 objects:v44 count:16];
      }

      while (v20);
    }

    id v31 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore defaultStore](&OBJC_CLASS___ACAccountStore, "defaultStore"));
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472LL;
    id v35[2] = sub_1000DD974;
    v35[3] = &unk_100194198;
    id v13 = v32;
    void v35[4] = *(void *)(v33 + 32);
    id v36 = v32;
    objc_msgSend(v31, "tvsettings_removeAccountsWithTuples:completion:", v17, v35);
  }

  else
  {
    ((void (*)(void *))v13[2])(v13);
  }
}

void sub_1000DD8A0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  void v6[2] = sub_1000DD954;
  v6[3] = &unk_100194BA8;
  char v10 = *(_BYTE *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(a1 + 40);
  id v7 = v2;
  uint64_t v8 = v3;
  id v9 = v4;
  id v5 = v2;
  dispatch_async(&_dispatch_main_q, v6);
}

id sub_1000DD954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = *(unsigned __int8 *)(a1 + 56);
  id v6 = *(void **)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  if (v5) {
    return _objc_msgSend(v6, "tapToAddUserManagerUserCancelled:", v7, a4);
  }
  else {
    return _[v6 tapToAddUserManager:v7 didFinishWithError:*(void *)(a1 + 48)];
  }
}

void sub_1000DD974(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  id v2 = *(void **)(*(void *)(a1 + 32) + 104LL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_1000DD9FC;
  v4[3] = &unk_10018FA98;
  id v5 = v1;
  id v3 = v2;
  [v3 lock];
  sub_1000DD9FC((uint64_t)v4);
  [v3 unlock];
}

uint64_t sub_1000DD9FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000DDA80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 48) == 1LL)
  {
    if (*(_BYTE *)(v1 + 8))
    {
      id v2 = *(void **)(v1 + 32);
      if (v2)
      {
        id v4 = v2;
        id v5 = sub_1000DA028();
        id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v7 = *(void *)(a1 + 32);
          *(_DWORD *)uint64_t buf = 134218242;
          uint64_t v13 = v7;
          __int16 v14 = 2114;
          id v15 = v4;
          _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Deleting persona. {self=%p, personaUniqueString=%{public}@}",  buf,  0x16u);
        }

        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[UMUserManager sharedManager](&OBJC_CLASS___UMUserManager, "sharedManager"));
        v10[0] = _NSConcreteStackBlock;
        v10[1] = 3221225472LL;
        id v10[2] = sub_1000DDBD0;
        v10[3] = &unk_10018EAA0;
        id v11 = v4;
        id v9 = v4;
        [v8 deleteUserPersonaWithPersonaUniqueString:v9 passcodeData:0 completionHandler:v10];
      }
    }
  }

void sub_1000DDBD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_1000DA028();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000FA6A0(a1, v3);
    }
  }
}

void sub_1000DDCAC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 removeObserver:*(void *)(a1 + 32) name:UIApplicationWillResignActiveNotification object:0];

  [*(id *)(*(void *)(a1 + 32) + 120) removeObserver:*(void *)(a1 + 32) forKeyPath:@"homeConfigurationState" context:off_1001E0B18];
  [*(id *)(a1 + 32) _restorePersona];
  [*(id *)(*(void *)(a1 + 32) + 24) invalidate];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = 0LL;

  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 32);
  *(void *)(v5 + 32) = 0LL;

  *(_BYTE *)(*(void *)(a1 + 32) + 8LL) = 0;
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void **)(v7 + 56);
  *(void *)(v7 + 56) = 0LL;

  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(void **)(v9 + 64);
  *(void *)(v9 + 64) = 0LL;

  [*(id *)(*(void *)(a1 + 32) + 80) relinquish];
  uint64_t v11 = *(void *)(a1 + 32);
  id v12 = *(void **)(v11 + 80);
  *(void *)(v11 + 80) = 0LL;

  [*(id *)(*(void *)(a1 + 32) + 88) invalidate];
  uint64_t v13 = *(void *)(a1 + 32);
  __int16 v14 = *(void **)(v13 + 88);
  *(void *)(v13 + 8_Block_object_dispose(va, 8) = 0LL;

  uint64_t v15 = *(void *)(a1 + 32);
  id v16 = *(void **)(v15 + 120);
  *(void *)(v15 + 120) = 0LL;

  uint64_t v17 = *(void *)(a1 + 32);
  id v18 = *(void **)(v17 + 128);
  *(void *)(v17 + 12_Block_object_dispose(va, 8) = 0LL;

  *(_BYTE *)(*(void *)(a1 + 32) + 9LL) = 0;
}

void *sub_1000DDE48(void *result)
{
  if (*(void *)(result[4] + 72LL) == 1LL)
  {
    uint64_t v1 = result;
    id v2 = sub_1000DA028();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Stopping since TVSettings isn't active anymore and we didn't actually started much.",  v4,  2u);
    }

    return [(id)v1[4] stop];
  }

  return result;
}

void sub_1000DE0FC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1000DE124(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000DE134(uint64_t a1)
{
}

void sub_1000DE13C(uint64_t a1)
{
  id v2 = -[TVSettingsTapToAddUserResult initWithUserProfile:isVoiceProfileAvailable:homeUserInfo:]( objc_alloc(&OBJC_CLASS___TVSettingsTapToAddUserResult),  "initWithUserProfile:isVoiceProfileAvailable:homeUserInfo:",  *(void *)(*(void *)(a1 + 32) + 128LL),  *(unsigned __int8 *)(*(void *)(a1 + 32) + 9LL),  *(void *)(*(void *)(a1 + 32) + 64LL));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000DE3E0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings.userProfiles", "TVSettingsTapToAddUserManager");
  id v2 = (void *)qword_1001E1C18;
  qword_1001E1C18 = (uint64_t)v1;
}

NSString *__cdecl sub_1000DE438(id a1, id a2)
{
  if ([a2 unsignedIntegerValue]) {
    id v2 = @"SettingsON";
  }
  else {
    id v2 = @"SettingsOFF";
  }
  uint64_t v3 = TSKLocString(v2);
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(v3);
}

void sub_1000DEB58(_Unwind_Exception *a1)
{
}

void sub_1000DEBAC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend(v3, "setEnabled:", objc_msgSend(v2, "mode") != 0);
}

void sub_1000DEBF4(id a1, TSKSettingItem *a2, id a3)
{
  id v4 = a2;
  -[TSKSettingItem setEnabled:](v4, "setEnabled:", [a3 unsignedIntegerValue] != (id)3);
}

void sub_1000DEC3C(id a1, TSKSettingItem *a2, id a3)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsCRDViewController _makeRequireCodeEveryTimeHomeChildViewControllerBlock]( &OBJC_CLASS___TVSettingsCRDViewController,  "_makeRequireCodeEveryTimeHomeChildViewControllerBlock"));
  -[TSKSettingItem setChildControllerBlock:](v3, "setChildControllerBlock:", v4);

  id v5 = (id)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
  -[TSKSettingItem setEnabled:](v3, "setEnabled:", [v5 isAirPlaySecuritySettingsUIAllowed]);
}

void sub_1000DECB8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v6 = a2;
  id v3 = [v2 mode];
  BOOL v5 = v3 != (id)3 && v3 != 0LL;
  [v6 setEnabled:v5];
  [v6 setLocalizedValue:0];
}

id sub_1000DED10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _CRDBackgroundPhotoViewController]);

  return v2;
}

void sub_1000DED48(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  if (v5)
  {
    id v6 = v5;
  }

  else
  {
    uint64_t v7 = TSKLocString(@"APCRDBackgroundNoneTitle");
    id v6 = (id)objc_claimAutoreleasedReturnValue(v7);
  }

  uint64_t v8 = v6;
  [v9 setLocalizedValue:v6];
}

id sub_1000DF4D8(uint64_t a1)
{
  uint64_t v2 = TSKLocString(@"APCRDEveryTimeCodeTitle");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = TSKLocString(@"APCRDEveryTimeCodeRemoveFromHomeMessage");
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  v3,  v5,  1LL));

  uint64_t v7 = TSKLocString(@"APCRDEveryTimeCodeRemoveFromHome");
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_1000DF62C;
  v14[3] = &unk_100194C70;
  void v14[4] = *(void *)(a1 + 32);
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v8,  2LL,  v14));
  [v6 addAction:v9];

  uint64_t v10 = TSKLocString(@"Cancel");
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v11,  1LL,  0LL));
  [v6 addAction:v12];

  return v6;
}

id sub_1000DF62C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _removeFromHomeAndEnableEveryTimeCode];
}

void sub_1000DF670(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  uint64_t v4 = a3;
  id v6 = v4;
  if (v3)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBSAirPlaySettings sharedInstance](&OBJC_CLASS___PBSAirPlaySettings, "sharedInstance"));
    [v7 setSecurityType:1];
  }

  else
  {
    uint64_t v8 = TVCSHomeLog(v4, v5);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_ERROR)) {
      sub_1000FD114((uint64_t)v6, (os_log_s *)v7);
    }
  }
}

id sub_1000DFCAC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateAction];
}

id sub_1000DFCB4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _cancelAction];
}

id sub_1000DFE64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  BOOL v3 = @"actionTaken";
  uint64_t v4 = v1;
  return (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v4,  &v3,  1LL));
}

BOOL sub_1000E00B0(id a1, UIViewController *a2, unint64_t a3, BOOL *a4)
{
  return -[UIViewController tvsui_guardedByPIN](a2, "tvsui_guardedByPIN", a3, a4);
}

id sub_1000E01DC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) popToRootViewControllerAnimated:0];
}

id sub_1000E0438()
{
  if (qword_1001E1C38 != -1) {
    dispatch_once(&qword_1001E1C38, &stru_100194D90);
  }
  return (id)qword_1001E1C30;
}

void sub_1000E06B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_1000E06EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000E06FC(uint64_t a1)
{
}

void sub_1000E0704(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7 = a2;
  id v8 = *(id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
  if ([v7 isEqual:@"/"])
  {
    id v9 = objc_alloc_init(&OBJC_CLASS___TVSettingsMainViewController);
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8LL);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    goto LABEL_16;
  }

  uint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
  uint64_t v13 = objc_opt_class(&OBJC_CLASS___TSKViewController);
  if ((objc_opt_isKindOfClass(v12, v13) & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v29 = 0LL;
  id v30 = &v29;
  uint64_t v31 = 0x3032000000LL;
  __int16 v32 = sub_1000E06EC;
  uint64_t v33 = sub_1000E06FC;
  id v34 = 0LL;
  id v14 = *(id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
  if ((objc_opt_respondsToSelector(v14, "prepareForDeepLinkWithURL:") & 1) != 0)
  {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) originalURL]);
    [v14 prepareForDeepLinkWithURL:v15];
  }

  id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) _settingGroups]);
  id v23 = _NSConcreteStackBlock;
  uint64_t v24 = 3221225472LL;
  id v25 = sub_1000E0A04;
  unsigned int v26 = &unk_100194D48;
  id v27 = v7;
  id v28 = &v29;
  [v16 enumerateObjectsUsingBlock:&v23];

  if (!v30[5])
  {
    if (*(_BYTE *)(a1 + 72))
    {
      id v20 = objc_msgSend(*(id *)(a1 + 40), "count", v23, v24, v25, v26);

      _Block_object_dispose(&v29, 8);
      if ((id)(a3 + 1) == v20) {
        goto LABEL_16;
      }
    }

    else
    {

      _Block_object_dispose(&v29, 8);
    }

void sub_1000E09E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000E0A04(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a2 settingItems]);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1000E0AAC;
  v9[3] = &unk_100194D20;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  id v10 = v7;
  uint64_t v11 = v8;
  [v6 enumerateObjectsUsingBlock:v9];

  *a4 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) != 0LL;
}

void sub_1000E0AAC(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  id v7 = a2;
  *a4 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) != 0LL;
}

void sub_1000E0B24(uint64_t a1)
{
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v23;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v23 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v22 + 1) + 8LL * (void)i);
        if ((objc_opt_respondsToSelector(v7, "setLastDeepLinkURL:") & 1) != 0)
        {
          uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) originalURL]);
          [v7 setLastDeepLinkURL:v8];
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }

    while (v4);
  }

  id v9 = *(id *)(*(void *)(a1 + 48) + 8LL);
  objc_msgSend( v9,  "setViewControllers:animated:",  *(void *)(a1 + 32),  objc_msgSend(*(id *)(a1 + 40), "shouldAnimateTransition"));
  if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000E0D6C;
    block[3] = &unk_100190E60;
    id v10 = v9;
    uint64_t v11 = *(void *)(a1 + 56);
    id v20 = v10;
    uint64_t v21 = v11;
    dispatch_async(&_dispatch_main_q, block);
    uint64_t v12 = v20;
LABEL_14:

    goto LABEL_15;
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) parameters]);

  if (v13)
  {
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_1000E0DE4;
    v16[3] = &unk_10018EA28;
    int8x16_t v15 = *(int8x16_t *)(a1 + 40);
    id v14 = (id)v15.i64[0];
    int8x16_t v17 = vextq_s8(v15, v15, 8uLL);
    id v18 = v9;
    dispatch_async(&_dispatch_main_q, v16);

    uint64_t v12 = (void *)v17.i64[1];
    goto LABEL_14;
  }

void sub_1000E0D6C(uint64_t a1)
{
  id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) topViewController]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue( [v4 indexPathForSettingItem:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v4 tableView]);
  [v4 tableView:v3 didSelectRowAtIndexPath:v2];
}

void sub_1000E0DE4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) parameters]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) topViewController]);
  [v2 _handleAuthKitURLIfNeededFromResourceDictionary:v4 overViewController:v3];
}

void sub_1000E10B0(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___AKAppleIDAuthenticationController);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_1000E1140;
  v4[3] = &unk_100194B38;
  uint64_t v3 = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  -[AKAppleIDAuthenticationController authenticateWithContext:completion:]( v2,  "authenticateWithContext:completion:",  v3,  v4);
}

void sub_1000E1140(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_1000E0438();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = v6;
  if (v4)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000FD298(v4, v7);
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Surrogate UI authentication done.", buf, 2u);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000E122C;
  block[3] = &unk_10018E440;
  id v9 = *(id *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
}

id sub_1000E122C(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

LABEL_65:
    goto LABEL_66;
  }

  if ([v13 isEqual:@"General"])
  {
    if ([v72 containsString:kMCSettingsURLComponentProfilesOverview])
    {

      unsigned int v26 = 0LL;
      id v16 = &off_1001AF430;
      goto LABEL_13;
    }

LABEL_66:
    unsigned int v26 = 0LL;
    goto LABEL_13;
  }

  if ([v13 isEqual:@"SUBSCRIPTIONS"])
  {
    v83[0] = @"/";
    v83[1] = @"AccountsTitle";
    v83[2] = @"SelectedUserProfile";
    v83[3] = @"AccountsUserSubscriptionsTitle";
    __int128 v40 = v83;
    id v41 = 4LL;
LABEL_63:
    __int128 v25 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v40, v41));

LABEL_35:
    unsigned int v26 = 1LL;
    goto LABEL_12;
  }

  if ([v13 isEqual:@"DefaultAudioOutput"])
  {

    unsigned int v26 = 0LL;
    id v16 = &off_1001AF448;
    goto LABEL_13;
  }

  if ([v13 isEqual:@"Home"])
  {
    id v42 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"cfuAction"]);
    char v43 = [v42 isEqual:@"finishSetup"];

    if (v43)
    {

      id v16 = &off_1001AF460;
    }

    else
    {
      unsigned __int8 v44 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"cfuAction"]);
      id v45 = [v44 isEqual:@"updateOS"];

      if (v45)
      {

        id v16 = &off_1001AF478;
      }
    }

    goto LABEL_54;
  }

  if ([v13 isEqual:@"GameControllers"])
  {

    unsigned int v26 = 0LL;
    id v16 = &off_1001AF490;
    goto LABEL_13;
  }

  if ([v13 isEqual:@"GameControllersHelp"])
  {

    unsigned int v26 = 0LL;
    id v16 = &off_1001AF4A8;
    goto LABEL_13;
  }

  if (![v13 isEqual:@"USERS"])
  {
    if (([v13 isEqual:@"NEW_USER"] & 1) != 0
      || [v13 isEqual:@"TAP_TO_ADD_NEW_USER"])
    {
      v78[0] = @"/";
      v78[1] = @"AccountsTitle";
      v78[2] = @"NewUser";
      __int128 v40 = v78;
    }

    else
    {
      if (([v13 isEqual:@"NEW_GUEST_USER"] & 1) == 0
        && ![v13 isEqual:@"TAP_TO_ADD_NEW_GUEST_USER"])
      {
        if ([v13 isEqual:@"SUGGESTED_USER"])
        {
          v76[0] = @"/";
          v76[1] = @"AccountsTitle";
          __int128 v59 = (__CFString *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"suggestedUserIdentifier"]);
          __int128 v60 = sub_10002889C(v59);
          __int128 v61 = (void *)objc_claimAutoreleasedReturnValue(v60);
          v76[2] = v61;
          uint64_t v53 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v76, 3LL));

          unsigned int v26 = 1LL;
          goto LABEL_88;
        }

        if ([v13 isEqual:@"LANGUAGE"])
        {
          v75[0] = @"/";
          v75[1] = @"GeneralTitle";
          v75[2] = @"LANGUAGE";
          __int128 v22 = v75;
        }

        else
        {
          if (![v13 isEqual:@"REGION"])
          {
            if ([v13 isEqual:@"NetworkRecording"])
            {
              if ([v72 isEqual:@"NetworkRecording"])
              {

                unsigned int v26 = 0LL;
                id v16 = &off_1001AF4D8;
                goto LABEL_13;
              }

              goto LABEL_66;
            }

            if ([v13 isEqual:@"SoftwareUpdate"])
            {

              unsigned int v26 = 0LL;
              id v16 = &off_1001AF4F0;
              goto LABEL_13;
            }

            if ([v13 isEqual:@"ACCESSIBILITY"])
            {

              uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"path"]);
              if (!v64)
              {
                unsigned int v26 = 0LL;
                id v16 = &off_1001AF508;
                goto LABEL_13;
              }

              id v65 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"path"]);
              __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v65 componentsSeparatedByString:@"/"]);

              id v16 = (_UNKNOWN **)objc_claimAutoreleasedReturnValue([&off_1001AF508 arrayByAddingObjectsFromArray:v38]);
            }

            else
            {
              if ([v13 isEqual:@"Network"])
              {
                if ([v72 isEqual:@"WifiPicker"])
                {

                  unsigned int v26 = 0LL;
                  id v16 = &off_1001AF520;
                }

                else
                {
                  uint64_t v68 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"cfuAction"]);
                  __int16 v69 = [v68 isEqual:@"launchCaptive"];

                  unsigned int v26 = 0LL;
                  if (v69) {
                    id v16 = &off_1001AF538;
                  }
                  else {
                    id v16 = &off_1001AF550;
                  }
                }

                goto LABEL_13;
              }

              if ([v13 isEqual:@"TV"])
              {

                if (![v72 isEqual:@"Connect"])
                {
                  unsigned int v26 = 0LL;
                  id v16 = &off_1001AF568;
                  goto LABEL_13;
                }

                unint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"id"]);

                if (v66)
                {
                  __int16 v67 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"id"]);
                  id v16 = (_UNKNOWN **)objc_claimAutoreleasedReturnValue([&off_1001AF568 arrayByAddingObject:v67]);
                }

                else
                {
                  id v16 = (_UNKNOWN **)objc_claimAutoreleasedReturnValue([&off_1001AF568 arrayByAddingObject:v72]);
                }

                goto LABEL_66;
              }

              if (![v13 isEqual:@"ScreenSaver"])
              {
                if ([v13 isEqual:@"LOCATION_SERVICES"])
                {

                  unsigned int v26 = 0LL;
                  id v16 = &off_1001AF5C8;
                  goto LABEL_13;
                }

                goto LABEL_66;
              }

              __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"category"]);
              if ([v38 isEqual:@"Photos"])
              {

                id v16 = &off_1001AF580;
              }

              else
              {
                id v70 = [v38 isEqual:@"PortraitClock"];

                if (v70) {
                  id v16 = &off_1001AF598;
                }
                else {
                  id v16 = &off_1001AF5B0;
                }
              }
            }

            goto LABEL_65;
          }

          v74[0] = @"/";
          v74[1] = @"GeneralTitle";
          v74[2] = @"REGION";
          __int128 v22 = v74;
        }

        goto LABEL_7;
      }

      v77[0] = @"/";
      v77[1] = @"AccountsTitle";
      v77[2] = @"NewGuestUser";
      __int128 v40 = v77;
    }

    id v41 = 3LL;
    goto LABEL_63;
  }

  id v46 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"userIdentifier"]);

  if (v46)
  {
    v82[0] = @"/";
    v82[1] = @"AccountsTitle";
    __int16 v47 = (__CFString *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"userIdentifier"]);
    uint64_t v48 = sub_100028850(v47);
    __int16 v49 = (void *)objc_claimAutoreleasedReturnValue(v48);
    v82[2] = v49;
    id v50 = v82;
LABEL_87:
    uint64_t v53 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v50, 3LL));

    unsigned int v26 = 0LL;
LABEL_88:
    id v16 = (_UNKNOWN **)v53;
    goto LABEL_13;
  }

  __int16 v51 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"accountIdentifier"]);

  if (v51)
  {
    v81[0] = @"/";
    v81[1] = @"AccountsTitle";
    __int16 v47 = (__CFString *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"accountIdentifier"]);
    uint64_t v52 = sub_100028804(v47);
    __int16 v49 = (void *)objc_claimAutoreleasedReturnValue(v52);
    v81[2] = v49;
    id v50 = v81;
    goto LABEL_87;
  }

  id v54 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"primaryUser"]);
  uint64_t v55 = [v54 BOOLValue];

  if (!v55)
  {

    unsigned int v26 = 0LL;
    id v16 = &off_1001AF4C0;
    goto LABEL_13;
  }

  __int128 v56 = (void *)objc_claimAutoreleasedReturnValue(+[PBSUserProfileManager sharedInstance](&OBJC_CLASS___PBSUserProfileManager, "sharedInstance"));
  __int128 v57 = (void *)objc_claimAutoreleasedReturnValue([v56 userProfilesSnapshot]);
  __int128 v58 = (void *)objc_claimAutoreleasedReturnValue([v57 primaryUserProfile]);

  if (v58)
  {
    v80[0] = @"/";
    v80[1] = @"AccountsTitle";
    v80[2] = @"PrimaryUserProfile";
    __int128 v22 = v80;
  }

  else
  {
    __int128 v62 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"action"]);
    __int128 v63 = [v62 isEqual:@"setUpiCloudPhotos"];

    if (!v63) {
      goto LABEL_66;
    }
    v79[0] = @"/";
    v79[1] = @"AccountsTitle";
    v79[2] = @"NewUser";
    __int128 v22 = v79;
  }

void sub_1000E26B8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "AppDelegate");
  id v2 = (void *)qword_1001E1C30;
  qword_1001E1C30 = (uint64_t)v1;
}

TVSettingsAmbientChoosePosterViewController *sub_1000E2AE0(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___TVSettingsAmbientChoosePosterViewController);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) ambientFacade]);
  id v4 = -[TVSettingsAmbientChoosePosterViewController initWithAmbientFacade:posterBoardFacade:]( v2,  "initWithAmbientFacade:posterBoardFacade:",  v3,  *(void *)(a1 + 40));

  return v4;
}

void sub_1000E2B40(id a1, TSKSettingItem *a2, _TtC10TVSettings20TVSettingsPosterItem *a3)
{
  id v4 = a2;
  id v5 = (id)objc_claimAutoreleasedReturnValue(-[TVSettingsPosterItem localizedName](a3, "localizedName"));
  -[TSKSettingItem setLocalizedValue:](v4, "setLocalizedValue:", v5);
}

void sub_1000E2C80(id a1, TSKSettingItem *a2, id a3)
{
  id v14 = a3;
  id v4 = a2;
  if ((uint64_t)[v14 integerValue] <= 0)
  {
    uint64_t v10 = TSKLocString(@"SaverStartDelayNeverTitle");
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v10);
    uint64_t v11 = TSKLocString(@"SaverDelayNever");
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v11);
  }

  else
  {
    uint64_t v5 = TSKLocString(@"SaverStartDelayActionTitle");
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    id v7 = objc_opt_new(&OBJC_CLASS___NSDateComponentsFormatter);
    -[NSDateComponentsFormatter setUnitsStyle:](v7, "setUnitsStyle:", 3LL);
    -[NSDateComponentsFormatter setAllowedUnits:](v7, "setAllowedUnits:", 64LL);
    uint64_t v8 = objc_opt_new(&OBJC_CLASS___NSDateComponents);
    -[NSDateComponents setMinute:](v8, "setMinute:", [v14 integerValue]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[NSDateComponentsFormatter stringFromDateComponents:](v7, "stringFromDateComponents:", v8));
  }

  -[TSKSettingItem setLocalizedTitle:](v4, "setLocalizedTitle:", v6);
  -[TSKSettingItem setLocalizedValue:](v4, "setLocalizedValue:", v9);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
  BOOL v13 = [v12 effectiveBoolValueForSetting:MCFeatureAutomaticScreenSaverAllowed] != 2;

  -[TSKSettingItem setEnabled:](v4, "setEnabled:", v13);
}

TVSettingsAmbientAerialOptionsViewController *sub_1000E2F90(uint64_t a1)
{
  return  -[TVSettingsAmbientAerialOptionsViewController initWithAmbientFacade:]( objc_alloc(&OBJC_CLASS___TVSettingsAmbientAerialOptionsViewController),  "initWithAmbientFacade:",  *(void *)(a1 + 32));
}

TVSettingsAmbientPhotoOptionsViewController *sub_1000E3098(uint64_t a1)
{
  return  -[TVSettingsAmbientPhotoOptionsViewController initWithAmbientFacade:]( objc_alloc(&OBJC_CLASS___TVSettingsAmbientPhotoOptionsViewController),  "initWithAmbientFacade:",  *(void *)(a1 + 32));
}

void sub_1000E31A4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  if ([v2 isPortraitClockEnabled])
  {
    [v3 setLocalizedValue:0];
    id v4 = @"SaverBackdropPortraitClockDescription";
    uint64_t v5 = 1LL;
  }

  else
  {
    uint64_t v6 = TSKLocString(@"iCloudPhotoSetUpValue");
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    [v3 setLocalizedValue:v7];

    uint64_t v5 = 0LL;
    id v4 = @"SaverBackdropPortraitClockSetupDescription";
  }

  [v3 setAccessoryTypes:v5];
  uint64_t v8 = TSKLocString(v4);
  id v9 = (id)objc_claimAutoreleasedReturnValue(v8);
  [v3 setLocalizedDescription:v9];
}

id sub_1000E3AF4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateBatterySymbolConfiguration];
}

void sub_1000E3EAC(id a1)
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor labelColor](&OBJC_CLASS___UIColor, "labelColor"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[UITraitCollection traitCollectionWithUserInterfaceStyle:]( &OBJC_CLASS___UITraitCollection,  "traitCollectionWithUserInterfaceStyle:",  2LL));
  uint64_t v3 = objc_claimAutoreleasedReturnValue([v1 resolvedColorWithTraitCollection:v2]);
  id v4 = (void *)qword_1001E1C40;
  qword_1001E1C40 = v3;

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor labelColor](&OBJC_CLASS___UIColor, "labelColor"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[UITraitCollection traitCollectionWithUserInterfaceStyle:]( &OBJC_CLASS___UITraitCollection,  "traitCollectionWithUserInterfaceStyle:",  1LL));
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v5 resolvedColorWithTraitCollection:v6]);
  uint64_t v8 = (void *)qword_1001E1C48;
  qword_1001E1C48 = v7;

  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor secondaryLabelColor](&OBJC_CLASS___UIColor, "secondaryLabelColor"));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[UITraitCollection traitCollectionWithUserInterfaceStyle:]( &OBJC_CLASS___UITraitCollection,  "traitCollectionWithUserInterfaceStyle:",  2LL));
  uint64_t v11 = objc_claimAutoreleasedReturnValue([v9 resolvedColorWithTraitCollection:v10]);
  uint64_t v12 = (void *)qword_1001E1C50;
  qword_1001E1C50 = v11;

  BOOL v13 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor secondaryLabelColor](&OBJC_CLASS___UIColor, "secondaryLabelColor"));
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[UITraitCollection traitCollectionWithUserInterfaceStyle:]( &OBJC_CLASS___UITraitCollection,  "traitCollectionWithUserInterfaceStyle:",  1LL));
  uint64_t v15 = objc_claimAutoreleasedReturnValue([v13 resolvedColorWithTraitCollection:v14]);
  id v16 = (void *)qword_1001E1C58;
  qword_1001E1C58 = v15;

  int8x16_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor systemGreenColor](&OBJC_CLASS___UIColor, "systemGreenColor"));
  id v18 = (void *)objc_claimAutoreleasedReturnValue( +[UITraitCollection traitCollectionWithUserInterfaceStyle:]( &OBJC_CLASS___UITraitCollection,  "traitCollectionWithUserInterfaceStyle:",  2LL));
  uint64_t v19 = objc_claimAutoreleasedReturnValue([v17 resolvedColorWithTraitCollection:v18]);
  id v20 = (void *)qword_1001E1C60;
  qword_1001E1C60 = v19;

  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor systemGreenColor](&OBJC_CLASS___UIColor, "systemGreenColor"));
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue( +[UITraitCollection traitCollectionWithUserInterfaceStyle:]( &OBJC_CLASS___UITraitCollection,  "traitCollectionWithUserInterfaceStyle:",  1LL));
  uint64_t v23 = objc_claimAutoreleasedReturnValue([v21 resolvedColorWithTraitCollection:v22]);
  __int128 v24 = (void *)qword_1001E1C68;
  qword_1001E1C68 = v23;

  __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor systemRedColor](&OBJC_CLASS___UIColor, "systemRedColor"));
  unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue( +[UITraitCollection traitCollectionWithUserInterfaceStyle:]( &OBJC_CLASS___UITraitCollection,  "traitCollectionWithUserInterfaceStyle:",  2LL));
  uint64_t v27 = objc_claimAutoreleasedReturnValue([v25 resolvedColorWithTraitCollection:v26]);
  id v28 = (void *)qword_1001E1C70;
  qword_1001E1C70 = v27;

  id v32 = (id)objc_claimAutoreleasedReturnValue(+[UIColor systemRedColor](&OBJC_CLASS___UIColor, "systemRedColor"));
  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue( +[UITraitCollection traitCollectionWithUserInterfaceStyle:]( &OBJC_CLASS___UITraitCollection,  "traitCollectionWithUserInterfaceStyle:",  1LL));
  uint64_t v30 = objc_claimAutoreleasedReturnValue([v32 resolvedColorWithTraitCollection:v29]);
  uint64_t v31 = (void *)qword_1001E1C78;
  qword_1001E1C78 = v30;
}

id sub_1000E4744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _updateAccount:a2 error:a3];
}

void sub_1000E47EC(id a1)
{
  uint64_t v1 = TVCSHomeLog(a1);
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Reloading configuration.", v4, 2u);
  }

  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
  [v3 reloadHomeConfiguration];
}

void sub_1000E4AF0(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) tapToSetupView]);
  [v1 stopAnimatingSpinner];
}

void sub_1000E4B20(uint64_t a1)
{
  uint64_t v2 = TVCSHomeLog(a1);
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Reloading configuration.", v5, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _abortWaitingForConfigurationStateChange];
}

void sub_1000E4B9C(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) tapToSetupView]);
  [v1 startAnimatingSpinner];
}

id sub_1000E51F8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleHomeConfigurationStateChange];
}

void sub_1000E53B0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = TSKLocString(@"WHASetupFooter");
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) username]);
    id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v3, v4));

    [*(id *)(*(void *)(a1 + 40) + 24) setFooter:v5];
  }

  else
  {
    [*(id *)(*(void *)(a1 + 40) + 24) setFooter:0];
  }

void sub_1000E5D48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, id location)
{
}

void sub_1000E5D84(uint64_t a1, void *a2)
{
  id v10 = a2;
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v10 representedObject]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 stringForObjectValue:v4]);
  [v10 setLocalizedDescription:v5];

  if (![*(id *)(a1 + 40) enabled])
  {
    uint64_t v9 = 1LL;
    uint64_t v8 = v10;
    goto LABEL_8;
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v10 representedObject]);
  if ([v6 integerValue] != (id)2)
  {

    uint64_t v8 = v10;
    goto LABEL_7;
  }

  id v7 = [*(id *)(a1 + 48) homeConfigurationState];

  uint64_t v8 = v10;
  if (v7 == (id)4)
  {
LABEL_7:
    uint64_t v9 = 0LL;
    goto LABEL_8;
  }

  uint64_t v9 = 1LL;
LABEL_8:
  [v8 setHidden:v9];
}

void sub_1000E5E5C(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 accessType];
  unsigned int v9 = [*(id *)(a1 + 32) enabled] ^ 1;
  if (v8 == (id)2) {
    uint64_t v10 = 1LL;
  }
  else {
    uint64_t v10 = v9;
  }
  [v7 setHidden:v10];
  id v11 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) stringForObjectValue:v6]);

  [v7 setLocalizedDescription:v11];
}

TSKTextInputViewController *sub_1000E5EF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___TSKTextInputViewController);
  uint64_t v3 = TSKLocString(@"APSecurityChangePasswordTitle");
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  -[TSKTextInputViewController setHeaderText:](v2, "setHeaderText:", v4);

  uint64_t v5 = TSKLocString(@"APSecurityChangePasswordMessage");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  -[TSKTextInputViewController setMessageText:](v2, "setMessageText:", v6);

  -[TSKTextInputViewController setEditingDelegate:](v2, "setEditingDelegate:", WeakRetained);
  [WeakRetained setPasswordViewController:v2];

  return v2;
}

void sub_1000E5F98(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v9 = a2;
  id v4 = [v3 accessType];
  id v5 = [*(id *)(a1 + 32) securityType];
  unsigned int v6 = [*(id *)(a1 + 32) enabled];
  if (v4 != (id)2 && v5 == (id)2) {
    uint64_t v8 = v6 ^ 1;
  }
  else {
    uint64_t v8 = 1LL;
  }
  [v9 setHidden:v8];
}

void sub_1000E6390(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:&stru_100195DD8];
  uint64_t v2 = (void *)qword_1001E1C88;
  qword_1001E1C88 = (uint64_t)v1;

  id v3 = (id)objc_claimAutoreleasedReturnValue(+[TVProfileService sharedInstance](&OBJC_CLASS___TVProfileService, "sharedInstance"));
  [v3 fetchIsEnabledOnDevice:&stru_100194EA0];
}

void sub_1000E63F4(id a1, BOOL a2)
{
}

void sub_1000E65CC(uint64_t a1, void *a2)
{
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  id obj = a2;
  id v3 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v20;
    do
    {
      unsigned int v6 = 0LL;
      do
      {
        if (*(void *)v20 != v5) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void *)(*((void *)&v19 + 1) + 8LL * (void)v6);
        dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[TVProfileService sharedInstance](&OBJC_CLASS___TVProfileService, "sharedInstance"));
        v13[0] = _NSConcreteStackBlock;
        v13[1] = 3221225472LL;
        void v13[2] = sub_1000E6770;
        v13[3] = &unk_100194EF0;
        id v9 = *(id *)(a1 + 40);
        uint64_t v10 = *(void *)(a1 + 48);
        id v11 = *(void **)(a1 + 56);
        id v14 = v9;
        uint64_t v15 = v10;
        uint64_t v16 = v7;
        id v17 = v11;
        id v18 = *(id *)(a1 + 32);
        [v8 fetchIsApplicationAllowedAccess:v7 result:v13];

        unsigned int v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
    }

    while (v4);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000E6770(uint64_t a1, char a2)
{
  id v3 = *(dispatch_queue_s **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000E6804;
  block[3] = &unk_100194EC8;
  __int128 v5 = *(_OWORD *)(a1 + 40);
  char v8 = a2;
  id v6 = *(id *)(a1 + 56);
  id v7 = *(id *)(a1 + 64);
  dispatch_async(v3, block);
}

void sub_1000E6804(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) infoForIdentifier:*(void *)(a1 + 40)]);
  id v4 = v2;
  if (v2)
  {
    [v2 setAllowAccess:*(unsigned __int8 *)(a1 + 64)];
    [*(id *)(a1 + 48) setObject:v4 forKeyedSubscript:*(void *)(a1 + 40)];
  }

  else
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSettingsTCCInfo infoWithFacade:identifier:allowed:]( &OBJC_CLASS___TVSettingsTCCInfo,  "infoWithFacade:identifier:allowed:",  *(void *)(a1 + 32),  *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 64)));
    [*(id *)(a1 + 48) setObject:v3 forKeyedSubscript:*(void *)(a1 + 40)];
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_1000E6B50( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000E6B70(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  __int128 v5 = WeakRetained;
  if (v3 && WeakRetained)
  {
    [v3 setEnableCache:1];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    void v6[2] = sub_1000E6C08;
    v6[3] = &unk_10018E468;
    id v7 = v3;
    char v8 = v5;
    TVSPerformBlockOnMainThread(v6);
  }
}

void sub_1000E6C08(uint64_t a1)
{
  id v3 = objc_claimAutoreleasedReturnValue( +[UIImage imageWithCGImage:]( UIImage, "imageWithCGImage:", [*(id *)(a1 + 32) image]));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) imageView]);
  [v2 setImage:v3];
}

void sub_1000E6F6C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000E6F8C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if ([v5 length])
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) passcodeToConfirm]);

      if (v4) {
        [WeakRetained _verifyPasscode:v5];
      }
      else {
        [WeakRetained _promptForConfirmationOfPasscode:v5];
      }
    }

    else
    {
      [WeakRetained _userDidCancel];
    }
  }
}

void sub_1000E7364( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000E7390(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _callCompletionHandlerWithPasscode:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

id sub_1000E7700()
{
  if (qword_1001E1CA0 != -1) {
    dispatch_once(&qword_1001E1CA0, &stru_100194FF8);
  }
  return (id)qword_1001E1C98;
}

void sub_1000E7740(uint64_t a1, int a2)
{
  id v4 = sub_1000E7700();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    v7[0] = 67109378;
    v7[1] = a2;
    __int16 v8 = 2114;
    uint64_t v9 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "Selected remote configuration. {result=%{BOOL}d, configuration=%{public}@}",  (uint8_t *)v7,  0x12u);
  }
}

void sub_1000E7928(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = sub_1000E7700();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000FD55C((uint64_t)v4, v6, v7, v8, v9, v10, v11, v12);
    }
  }

  uint64_t v13 = *(void *)(a1 + 32);
  if (v13) {
    (*(void (**)(void))(v13 + 16))();
  }
}

void sub_1000E7AE8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = sub_1000E7700();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000FD5C4((uint64_t)v4, v6, v7, v8, v9, v10, v11, v12);
    }
  }

  uint64_t v13 = *(void *)(a1 + 32);
  if (v13) {
    (*(void (**)(void))(v13 + 16))();
  }
}

void sub_1000E7D40( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

uint64_t sub_1000E7D64(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000E7D74(uint64_t a1)
{
}

void sub_1000E7D7C(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000E7DC8(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

id sub_1000E7E14(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) updateVersion];
  uint64_t v3 = *(void *)(a1 + 56);
  if ((uint64_t)result <= v3)
  {
    *(void *)(*(void *)(a1 + 32) + 40LL) = v3;
    return _[*(id *)(a1 + 32) _updateWithVolumeConfigurations:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) thirdPartyRemotesConfigurations:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
  }

  return result;
}

TVSettingsRemoteConfiguration *sub_1000E8270(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (*(_BYTE *)(a1 + 40)) {
    id v5 = 0LL;
  }
  else {
    id v5 = [v3 isEqual:*(void *)(a1 + 32)];
  }
  uint64_t v6 = TSKLocString(@"RCVCManualMenuItemViaIRTemplate");
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 configurationName]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v7, v8));

  uint64_t v10 = TSKLocString(@"RCVCManualMenuItemViaIRDescription");
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v4 configurationName]);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v11, v12));

  id v14 = -[TVSettingsRemoteConfiguration initWithDisplayName:displayDescription:isSelected:underlyingConfiguration:]( objc_alloc(&OBJC_CLASS___TVSettingsRemoteConfiguration),  "initWithDisplayName:displayDescription:isSelected:underlyingConfiguration:",  v9,  v13,  v5,  v4);
  return v14;
}

BOOL sub_1000E8394(id a1, TVSettingsRemoteConfiguration *a2)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(-[TVSettingsRemoteConfiguration underlyingConfiguration](a2, "underlyingConfiguration"));
  id v3 = v2;
  if (v2) {
    unsigned int v4 = [v2 isBuiltIn] ^ 1;
  }
  else {
    LOBYTE(v4) = 0;
  }

  return v4;
}

TVSettingsRemoteConfiguration *sub_1000E83DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = v3;
  if (*(_BYTE *)(a1 + 40)) {
    id v5 = 0LL;
  }
  else {
    id v5 = [v3 isEqual:*(void *)(a1 + 32)];
  }
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 configurationName]);
  uint64_t v7 = -[TVSettingsRemoteConfiguration initWithDisplayName:displayDescription:isSelected:underlyingConfiguration:]( objc_alloc(&OBJC_CLASS___TVSettingsRemoteConfiguration),  "initWithDisplayName:displayDescription:isSelected:underlyingConfiguration:",  v6,  &stru_100195DD8,  v5,  v4);

  return v7;
}

id sub_1000E8530(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSelector:"_fetchConfigurations" withObject:0 afterDelay:0.1];
}

id sub_1000E8AA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) identifier];
}

id sub_1000E8AAC(uint64_t a1)
{
  return [*(id *)(a1 + 32) displayName];
}

id sub_1000E8AB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) isSelected];
}

id sub_1000E8ABC(uint64_t a1)
{
  return [*(id *)(a1 + 32) underlyingConfiguration];
}

id sub_1000E8AC4(uint64_t a1)
{
  return [*(id *)(a1 + 32) UUID];
}

id sub_1000E8ACC(uint64_t a1)
{
  return [*(id *)(a1 + 32) deviceName];
}

id sub_1000E8B94(uint64_t a1)
{
  id v2 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 16) withName:@"identifier"];
  id v3 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 24) withName:@"displayName"];
  id v4 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 32) withName:@"displayDescription"];
  id v5 =  [*(id *)(a1 + 32) appendBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 8) withName:@"isSelected"];
  id v6 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 40) withName:@"UUID"];
  id v7 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 48) withName:@"deviceName"];
  return  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 64) withName:@"underlyingConfiguration"];
}

void sub_1000E8D90(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "TVSettingsRemotesFacade");
  id v2 = (void *)qword_1001E1C98;
  qword_1001E1C98 = (uint64_t)v1;
}

BOOL sub_1000E8E2C(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v7 = a2;
  unint64_t v8 = a3;
  uint64_t v9 = (void *)v8;
  if (a1)
  {
    if (v7 | v8)
    {
      uint64_t v65 = 0LL;
      unint64_t v66 = &v65;
      uint64_t v67 = 0x2020000000LL;
      char v68 = 0;
      uint64_t v61 = 0LL;
      __int128 v62 = &v61;
      uint64_t v63 = 0x2020000000LL;
      char v64 = 0;
      uint64_t v55 = 0LL;
      __int128 v56 = &v55;
      uint64_t v57 = 0x3032000000LL;
      __int128 v58 = sub_1000E98AC;
      __int128 v59 = sub_1000E98BC;
      id v60 = 0LL;
      id v11 = sub_1000E98C4((uint64_t)&OBJC_CLASS___TVSettingsUserProfilesValidator);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      id v45 = _NSConcreteStackBlock;
      uint64_t v46 = 3221225472LL;
      __int16 v47 = sub_1000E9920;
      uint64_t v48 = &unk_1001950A8;
      uint64_t v49 = a1;
      id v50 = (id)v7;
      uint64_t v52 = &v65;
      uint64_t v53 = &v55;
      id v51 = v9;
      id v54 = &v61;
      [v12 enumerateKeysAndObjectsUsingBlock:&v45];

      if (*((_BYTE *)v66 + 24) || *((_BYTE *)v62 + 24))
      {
        uint64_t v13 = (void *)v56[5];
        if (!v13)
        {
          uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"The user that is currently using the account is required."));
          id v30 = &_os_log_default;
          if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            uint64_t v31 = NSStringFromSelector("_canSignInWithiCloudAltDSID:gameCenterAltDSID:error:");
            id v32 = (id)objc_claimAutoreleasedReturnValue(v31);
            uint64_t v33 = (objc_class *)objc_opt_class(a1);
            id v34 = NSStringFromClass(v33);
            __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
            *(_DWORD *)uint64_t buf = 138544642;
            id v72 = v32;
            __int16 v73 = 2114;
            v74 = v35;
            __int16 v75 = 2048;
            uint64_t v76 = a1;
            __int16 v77 = 2114;
            v78 = @"TVSettingsUserProfilesValidator.m";
            __int16 v79 = 1024;
            int v80 = 187;
            __int16 v81 = 2114;
            v82 = v29;
            _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  buf,  0x3Au);
          }

          uint64_t v36 = _bs_set_crash_log_message([v29 UTF8String]);
          sub_1000FD10C(v36);
        }

        id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 userProfile]);
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 identifier]);
        BOOL v16 = v15 == 0LL;

        if (v16)
        {
          __int128 v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"The user identifier which the account is in use is required."));
          id v38 = &_os_log_default;
          if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            __int128 v39 = NSStringFromSelector("_canSignInWithiCloudAltDSID:gameCenterAltDSID:error:");
            id v40 = (id)objc_claimAutoreleasedReturnValue(v39);
            id v41 = (objc_class *)objc_opt_class(a1);
            id v42 = NSStringFromClass(v41);
            char v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
            *(_DWORD *)uint64_t buf = 138544642;
            id v72 = v40;
            __int16 v73 = 2114;
            v74 = v43;
            __int16 v75 = 2048;
            uint64_t v76 = a1;
            __int16 v77 = 2114;
            v78 = @"TVSettingsUserProfilesValidator.m";
            __int16 v79 = 1024;
            int v80 = 188;
            __int16 v81 = 2114;
            v82 = v37;
            _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  buf,  0x3Au);
          }

          uint64_t v44 = _bs_set_crash_log_message([v37 UTF8String]);
          sub_1000FD10C(v44);
        }

        uint64_t v17 = TSKLocString(@"AccountsUserAccountsAlreadyInUseErrorMessageFormat");
        id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
        __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([(id)v56[5] formattedShortName]);
        __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([(id)v56[5] formattedFullName]);
        __int128 v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSString localizedStringWithFormat:]( &OBJC_CLASS___NSString,  "localizedStringWithFormat:",  v18,  v19,  v20,  v45,  v46,  v47,  v48,  v49,  v50));

        v70[0] = v21;
        v69[0] = NSLocalizedDescriptionKey;
        v69[1] = @"UserIdentifier";
        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([(id)v56[5] userProfile]);
        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 identifier]);
        v70[1] = v23;
        v69[2] = @"FormattedShortName";
        __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([(id)v56[5] formattedShortName]);
        v70[2] = v24;
        __int128 v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v70,  v69,  3LL));

        unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"TVSettingsUserProfilesValidatorErrorDomain",  1LL,  v25));
        uint64_t v27 = v26;
        if (a4) {
          *a4 = v26;
        }
      }

      else
      {
        uint64_t v27 = 0LL;
      }

      BOOL v10 = v27 == 0LL;

      _Block_object_dispose(&v55, 8);
      _Block_object_dispose(&v61, 8);
      _Block_object_dispose(&v65, 8);
    }

    else
    {
      BOOL v10 = 1LL;
    }
  }

  else
  {
    BOOL v10 = 0LL;
  }

  return v10;
}

void sub_1000E9388( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

id sub_1000E9768()
{
  if (qword_1001E1CB0 != -1) {
    dispatch_once(&qword_1001E1CB0, &stru_1001950C8);
  }
  return (id)qword_1001E1CA8;
}

BOOL sub_1000E97A8(id a1, id a2, NSDictionary *a3)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale baseLanguageFromLanguage:](&OBJC_CLASS___NSLocale, "baseLanguageFromLanguage:", v3));
  if (v4
    && (id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale baseSystemLanguages](&OBJC_CLASS___NSLocale, "baseSystemLanguages")),
        unsigned __int8 v6 = [v5 containsObject:v4],
        v5,
        (v6 & 1) != 0))
  {
    BOOL v7 = 1;
  }

  else
  {
    id v8 = sub_1000E9768();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138543362;
      id v12 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Removing language {%{public}@} from consideration for a preferred language",  (uint8_t *)&v11,  0xCu);
    }

    BOOL v7 = 0;
  }

  return v7;
}

uint64_t sub_1000E98AC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000E98BC(uint64_t a1)
{
}

id sub_1000E98C4(uint64_t a1)
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBSUserProfileManager sharedInstance](&OBJC_CLASS___PBSUserProfileManager, "sharedInstance"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 userProfilesSnapshot]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 userProfiles]);

  return v3;
}

void sub_1000E9920(void *a1, void *a2, void *a3, _BYTE *a4)
{
  id v7 = a2;
  id v8 = a3;
  uint64_t v38 = 0LL;
  __int128 v39 = &v38;
  uint64_t v40 = 0x3032000000LL;
  id v41 = sub_1000E98AC;
  id v42 = sub_1000E98BC;
  id v43 = 0LL;
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3221225472LL;
  id v35[2] = sub_1000E9C58;
  v35[3] = &unk_100195058;
  uint64_t v9 = a1[4];
  __int128 v37 = &v38;
  void v35[4] = v9;
  id v10 = v8;
  id v36 = v10;
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472LL;
  v33[2] = sub_1000E9CBC;
  v33[3] = &unk_100195080;
  int v11 = objc_retainBlock(v35);
  id v34 = v11;
  id v12 = objc_retainBlock(v33);
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472LL;
  v31[2] = sub_1000E9CFC;
  v31[3] = &unk_100195080;
  uint64_t v13 = v11;
  id v32 = v13;
  id v14 = objc_retainBlock(v31);
  uint64_t v15 = a1[5];
  if (v15)
  {
    BOOL v16 = (void *)objc_claimAutoreleasedReturnValue([v10 iCloudAltDSID]);
    if ((BSEqualStrings(v15, v16) & 1) != 0)
    {
      uint64_t v17 = ((uint64_t (*)(void *))v12[2])(v12);
      id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
      BOOL v19 = v18 == 0LL;

      if (!v19)
      {
        id v20 = sub_1000E9768();
        __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        {
          __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v10 identifier]);
          sub_1000FD6E8(v22, (uint64_t)v10, (uint64_t)v44);
        }

        *(_BYTE *)(*(void *)(a1[7] + 8LL) + 24LL) = 1;
        objc_storeStrong((id *)(*(void *)(a1[8] + 8LL) + 40LL), (id)v39[5]);
LABEL_14:
        *a4 = 1;
        goto LABEL_16;
      }
    }

    else
    {
    }
  }

  uint64_t v23 = a1[6];
  if (v23)
  {
    __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v10 gameCenterAltDSID]);
    if ((BSEqualStrings(v23, v24) & 1) == 0)
    {

      goto LABEL_16;
    }

    uint64_t v25 = ((uint64_t (*)(void *))v14[2])(v14);
    unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    BOOL v27 = v26 == 0LL;

    if (!v27)
    {
      id v28 = sub_1000E9768();
      uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        id v30 = (void *)objc_claimAutoreleasedReturnValue([v10 identifier]);
        sub_1000FD6A0(v30, (uint64_t)v10, (uint64_t)v44);
      }

      *(_BYTE *)(*(void *)(a1[9] + 8LL) + 24LL) = 1;
      objc_storeStrong((id *)(*(void *)(a1[8] + 8LL) + 40LL), (id)v39[5]);
      goto LABEL_14;
    }
  }

void sub_1000E9C30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

id sub_1000E9C58(void *a1)
{
  id v2 = *(void **)(*(void *)(a1[6] + 8LL) + 40LL);
  if (!v2)
  {
    id v3 = [[PBSUserProfileAccountInfo alloc] initWithAccountStore:*(void *)(a1[4] + 16) userProfile:a1[5]];
    uint64_t v4 = *(void *)(a1[6] + 8LL);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;

    id v2 = *(void **)(*(void *)(a1[6] + 8LL) + 40LL);
  }

  return v2;
}

id sub_1000E9CBC(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 iCloudAccount]);

  return v3;
}

id sub_1000E9CFC(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 gameCenterAccount]);

  return v3;
}

void sub_1000E9D60(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings.userProfiles", "UserProfilesValidator");
  id v2 = (void *)qword_1001E1CA8;
  qword_1001E1CA8 = (uint64_t)v1;
}

void sub_1000E9D90(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, os_log_s *a4@<X8>)
{
}

uint64_t sub_1000E9DA0(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2112;
  *(void *)(a3 + 14) = a2;
  return result;
}

void sub_1000EA8B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000EA8D0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _DWORD v7[2] = sub_1000EA97C;
  v7[3] = &unk_10018E810;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  TVSPerformBlockOnMainThread(v7);
  objc_destroyWeak(&v8);
}

void sub_1000EA968(_Unwind_Exception *a1)
{
}

void sub_1000EA97C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setIsAuthenticationInProgress:0];
  [WeakRetained updateSandboxAccountState];
}

void sub_1000EAA88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000EAAA4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    if (qword_1001E1CC0 != -1) {
      dispatch_once(&qword_1001E1CC0, &stru_100195110);
    }
    id v5 = (void *)qword_1001E1CB8;
    if (os_log_type_enabled((os_log_t)qword_1001E1CB8, OS_LOG_TYPE_ERROR)) {
      sub_1000FD730(v5, v4);
    }
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000EAB88;
  block[3] = &unk_10018E810;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  dispatch_async(&_dispatch_main_q, block);
  objc_destroyWeak(&v7);
}

void sub_1000EAB88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setIsSignOutInProgress:0];
  [WeakRetained updateSandboxAccountState];
}

id sub_1000EAC74(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSelector:"updateSandboxAccountState" withObject:0 afterDelay:0.5];
}

void sub_1000EAD10(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "SandboxFacade");
  id v2 = (void *)qword_1001E1CB8;
  qword_1001E1CB8 = (uint64_t)v1;
}

NSString *__cdecl sub_1000EAD68(id a1, NSNumber *a2)
{
  NSUInteger v2 = -[NSNumber unsignedIntegerValue](a2, "unsignedIntegerValue");
  id v3 = +[NSBundle bundleForClass:]( &OBJC_CLASS___NSBundle,  "bundleForClass:",  objc_opt_class(&OBJC_CLASS___TSKSettingItem));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if (v2 == 1) {
    id v5 = @"SettingsON";
  }
  else {
    id v5 = @"SettingsOFF";
  }
  uint64_t v6 = TSKLocStringFromBundleCachingKey(v5, v4, 0LL, 0LL, @"Localizable");
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  return (NSString *)v7;
}

void sub_1000EAE68(uint64_t a1)
{
  id v1 = [objc_alloc((Class)objc_opt_class(*(void *)(a1 + 32))) initWithServiceName:kTCCServiceMicrophone];
  NSUInteger v2 = (void *)qword_1001E1CC8;
  qword_1001E1CC8 = (uint64_t)v1;
}

id sub_1000EB004()
{
  if (qword_1001E1CE0[0] != -1) {
    dispatch_once(qword_1001E1CE0, &stru_100195150);
  }
  return (id)qword_1001E1CD8;
}

void sub_1000EB730(id a1)
{
  os_log_t v1 = os_log_create("com.apple.TVSettings", "HomeSetupController");
  NSUInteger v2 = (void *)qword_1001E1CD8;
  qword_1001E1CD8 = (uint64_t)v1;
}

void *sub_1000EB760()
{
  id result = (void *)sub_1000F2668((uint64_t)&off_100195268);
  off_1001E0F30 = result;
  return result;
}

id sub_1000EB7A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + *a3 + 8);
  swift_bridgeObjectRetain(v3);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

id sub_1000EB89C(void *a1)
{
  v133 = (void *)type metadata accessor for IdlePosterState(0LL);
  uint64_t v131 = *(v133 - 1);
  ((void (*)(void))__chkstk_darwin)();
  v132 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for URL(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  ((void (*)(void))__chkstk_darwin)();
  id v7 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for IdlePosterInfo(0LL);
  uint64_t v134 = *(void *)(v8 - 8);
  uint64_t v135 = v8;
  ((void (*)(void))__chkstk_darwin)();
  v136 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000ED6E0(&qword_1001E0FE0);
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  id v12 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  id v14 = (char *)&v125 - v13;
  uint64_t v15 = &v1[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_logger];
  BOOL v16 = v1;
  v139 = v15;
  Logger.init(subsystem:category:)( 0xD00000000000001CLL,  0x8000000100140310LL,  0x7449726574736F50LL,  0xEA00000000006D65LL);
  v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_selected] = 0;
  uint64_t v17 = OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_previewImageNameForBundleIdentifiers;
  unint64_t v18 = sub_1000F2668((uint64_t)&off_100195388);
  uint64_t v138 = v17;
  *(void *)&v16[v17] = v18;
  uint64_t v19 = OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_orderForBundleIdentifiers;
  unint64_t v20 = sub_1000F2788((uint64_t)&off_100195428);
  uint64_t v137 = v19;
  *(void *)&v16[v19] = v20;
  id v21 = [a1 serverUUID];
  if (v21)
  {
    uint64_t v23 = v21;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = type metadata accessor for UUID(0LL, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v12, 0LL, 1LL, v25);
  }

  else
  {
    uint64_t v25 = type metadata accessor for UUID(0LL, v22);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v12, 1LL, 1LL, v25);
  }

  sub_1000ED764((uint64_t)v12, (uint64_t)v14);
  type metadata accessor for UUID(0LL, v26);
  uint64_t v27 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v14, 1LL, v25) != 1)
  {
    uint64_t v29 = UUID.uuidString.getter();
    uint64_t v31 = v30;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v25);
    id v32 = (uint64_t *)&v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_identifier];
    *id v32 = v29;
    v32[1] = v31;
    uint64_t v33 = OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_model;
    *(void *)&v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_model] = a1;
    id v34 = a1;
    id v35 = [v34 providerBundleIdentifier];
    id v36 = v35;
    if (!v35)
    {
      id v28 = v139;
      uint64_t v46 = (os_log_s *)Logger.logObject.getter(0LL);
      os_log_type_t v47 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v48 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v46,  v47,  "Unable to create TVSettingsPosterItem due to unknown bundleID.",  v48,  2u);
        swift_slowDealloc(v48, -1LL, -1LL);
      }

      goto LABEL_18;
    }

    v128 = v32;
    uint64_t v129 = v33;
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    uint64_t v38 = v36;
    uint64_t v39 = v37;
    uint64_t v41 = v40;
    v130 = v38;

    id v42 = (uint64_t *)&v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_bundleIdentifier];
    *id v42 = v39;
    v42[1] = v41;
    uint64_t v43 = swift_bridgeObjectRetain(v41);
    uint64_t v44 = v136;
    uint64_t v45 = PRSPosterConfiguration.getIdlePosterInfo()(v43);
    if ((IdlePosterInfo.shouldHideInSwitcher.getter(v45) & 1) != 0)
    {

      swift_bridgeObjectRelease(v41);
      (*(void (**)(char *, uint64_t))(v134 + 8))(v44, v135);
      id v28 = v139;
      id v32 = v128;
      uint64_t v33 = v129;
      id v36 = v130;
LABEL_18:
      swift_bridgeObjectRelease(v32[1]);

      if (v36) {
        swift_bridgeObjectRelease(*(void *)&v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_bundleIdentifier
      }
                                                + 8]);
      goto LABEL_20;
    }

    id v49 = objc_allocWithZone(&OBJC_CLASS___LSApplicationExtensionRecord);
    swift_bridgeObjectRetain(v41);
    uint64_t v127 = v39;
    id v50 = (char *)sub_1000ECC44(v39, v41);
    uint64_t v126 = v41;
    id v51 = v50;
    id v52 = [v50 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    id v53 = objc_allocWithZone(&OBJC_CLASS___NSBundle);
    URL._bridgeToObjectiveC()(v54);
    __int128 v56 = v55;
    id v57 = [v53 initWithURL:v55];

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v36 = v130;
    if (!v57)
    {
      v132 = v51;
      unint64_t v80 = v126;
      uint64_t v81 = swift_bridgeObjectRetain(v126);
      id v28 = v139;
      v82 = (os_log_s *)Logger.logObject.getter(v81);
      os_log_type_t v83 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v82, v83))
      {
        v133 = v34;
        v84 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        v85 = (void *)swift_slowAlloc(32LL, -1LL);
        id v143 = v85;
        *(_DWORD *)v84 = 136315138;
        swift_bridgeObjectRetain(v80);
        uint64_t v141 = sub_1000ED0A0(v127, v80, (uint64_t *)&v143);
        id v28 = v139;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &v142, v84 + 4, v84 + 12);
        swift_bridgeObjectRelease_n(v80, 3LL);
        _os_log_impl( (void *)&_mh_execute_header,  v82,  v83,  "Unable to create TVSettingsPosterItem. Can not create bundle for id: %s.",  v84,  0xCu);
        swift_arrayDestroy(v85, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v85, -1LL, -1LL);
        swift_slowDealloc(v84, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(v80, 2LL);
      }

      (*(void (**)(char *, uint64_t))(v134 + 8))(v136, v135);
      id v32 = v128;
      uint64_t v33 = v129;
      goto LABEL_18;
    }

    id v143 = 0LL;
    id v58 = v57;
    __int128 v59 = v34;
    id v60 = v58;
    uint64_t v61 = v59;
    id v62 = objc_msgSend(v59, "pr_loadOtherMetadataWithError:", &v143);
    id v63 = v143;
    char v64 = v136;
    if (v62)
    {
      uint64_t v65 = v62;
      id v66 = v143;
      id v67 = [v65 displayNameLocalizationKey];

      uint64_t v68 = v131;
      if (v67)
      {
        id v69 = [v60 localizedStringForKey:v67 value:0 table:0];

        uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
        unint64_t v72 = v71;

        v74 = &v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedName];
        *(void *)&v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedName] = v70;
      }

      else
      {

        v74 = &v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedName];
        *(void *)&v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedName] = 0LL;
        unint64_t v72 = 0xE000000000000000LL;
      }

      uint64_t v88 = v126;
    }

    else
    {
      id v86 = v143;

      uint64_t v87 = _convertNSErrorToError(_:)(v63);
      swift_willThrow();
      uint64_t v73 = swift_errorRelease(v87);
      v74 = &v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedName];
      *(void *)&v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedName] = 0LL;
      unint64_t v72 = 0xE000000000000000LL;
      uint64_t v88 = v126;
      uint64_t v68 = v131;
    }

    *((void *)v74 + 1) = v72;
    v89 = v132;
    IdlePosterInfo.posterState.getter(v73);
    v90 = v133;
    int v91 = (*(uint64_t (**)(char *, void *))(v68 + 88))(v89, v133);
    if (v91 == enum case for IdlePosterState.uninitialized(_:))
    {
      (*(void (**)(char *, void *))(v68 + 96))(v89, v90);
      swift_bridgeObjectRelease(*((void *)v89 + 1));
      unint64_t v92 = sub_1000F2668((uint64_t)&off_100195328);
      if (*(void *)(v92 + 16))
      {
        swift_bridgeObjectRetain(v88);
        unint64_t v93 = sub_1000F2D4C(v127, v88);
        if ((v94 & 1) != 0)
        {
          uint64_t v95 = *(void *)(*(void *)(v92 + 56) + 16 * v93 + 8);
          swift_bridgeObjectRetain(v95);
          swift_bridgeObjectRelease_n(v88, 2LL);
          swift_bridgeObjectRelease(v92);
          NSString v96 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v95);
          id v97 = (id)TSKLocString(v96);

          if (v97)
          {
            uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
            unint64_t v100 = v99;
          }

          else
          {
            uint64_t v98 = 0LL;
            unint64_t v100 = 0xE000000000000000LL;
          }

          NSString v119 = String._bridgeToObjectiveC()();
          id v120 = (id)TSKLocString(v119);

          if (v120)
          {
            id v111 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v120);
            uint64_t v113 = v121;
          }

          else
          {
            id v111 = 0LL;
            uint64_t v113 = 0LL;
          }

          char v115 = 0;
          char v114 = 1;
          goto LABEL_61;
        }

        swift_bridgeObjectRelease_n(v88, 2LL);
      }

      else
      {
        swift_bridgeObjectRelease(v88);
      }

      swift_bridgeObjectRelease(v92);
      id v111 = 0LL;
      uint64_t v113 = 0LL;
      char v114 = 0;
      uint64_t v98 = 0LL;
      unint64_t v100 = 0xE000000000000000LL;
      char v115 = 1;
LABEL_61:
      v122 = (uint64_t *)&v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedDescription];
      uint64_t *v122 = v98;
      v122[1] = v100;
      v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_disabled] = v115;
      v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_showICloudSetupWhenSelected] = v114;
      v123 = &v16[OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedAccessoryText];
      *(void *)v123 = v111;
      *((void *)v123 + 1) = v113;

      v124 = (objc_class *)type metadata accessor for TVSettingsPosterItem(0LL);
      v140.receiver = v16;
      v140.super_class = v124;
      id v78 = objc_msgSendSuper2(&v140, "init");

      (*(void (**)(char *, uint64_t))(v134 + 8))(v64, v135);
      return v78;
    }

    if (v91 == enum case for IdlePosterState.loading(_:))
    {
      swift_bridgeObjectRelease(v88);
      (*(void (**)(char *, void *))(v68 + 96))(v89, v90);
      swift_bridgeObjectRelease(*((void *)v89 + 1));
      NSString v101 = String._bridgeToObjectiveC()();
      id v102 = (id)TSKLocString(v101);

      if (v102)
      {
        uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
        unint64_t v100 = v103;
      }

      else
      {
        uint64_t v98 = 0LL;
        unint64_t v100 = 0xE000000000000000LL;
      }

      NSString v116 = String._bridgeToObjectiveC()();
      id v117 = (id)TSKLocString(v116);

      if (v117)
      {
        id v111 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v117);
        uint64_t v113 = v118;
      }

      else
      {
        id v111 = 0LL;
        uint64_t v113 = 0LL;
      }

      char v114 = 0;
      char v115 = 1;
      goto LABEL_61;
    }

    if (v91 == enum case for IdlePosterState.normal(_:))
    {
      if (qword_1001E0F28 != -1) {
        swift_once(&qword_1001E0F28, sub_1000EB760);
      }
      v104 = off_1001E0F30;
      uint64_t v105 = v127;
      if (*((void *)off_1001E0F30 + 2))
      {
        swift_bridgeObjectRetain(v88);
        unint64_t v106 = sub_1000F2D4C(v105, v88);
        if ((v107 & 1) != 0)
        {
          uint64_t v108 = v88;
          uint64_t v109 = *(void *)(v104[7] + 16 * v106 + 8);
          swift_bridgeObjectRetain(v109);
          swift_bridgeObjectRelease_n(v108, 2LL);
          NSString v110 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v109);
          id v111 = (id)TSKLocString(v110);

          if (v111)
          {
            uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
            unint64_t v100 = v112;

            id v111 = 0LL;
            uint64_t v113 = 0LL;
            char v114 = 0;
            char v115 = 0;
            goto LABEL_61;
          }

LABEL_60:
          uint64_t v113 = 0LL;
          char v114 = 0;
          char v115 = 0;
          uint64_t v98 = 0LL;
          unint64_t v100 = 0xE000000000000000LL;
          goto LABEL_61;
        }

        swift_bridgeObjectRelease_n(v88, 2LL);
      }

      else
      {
        swift_bridgeObjectRelease(v88);
      }
    }

    else
    {
      swift_bridgeObjectRelease(v88);
      (*(void (**)(char *, void *))(v68 + 8))(v89, v90);
    }

    id v111 = 0LL;
    goto LABEL_60;
  }

  sub_1000ED7AC((uint64_t)v14, &qword_1001E0FE0);
  id v28 = v139;
LABEL_20:
  uint64_t v75 = type metadata accessor for Logger(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v75 - 8) + 8LL))(v28, v75);
  swift_bridgeObjectRelease(*(void *)&v16[v138]);
  uint64_t v76 = *(void *)&v16[v137];

  swift_bridgeObjectRelease(v76);
  uint64_t v77 = type metadata accessor for TVSettingsPosterItem(0LL);
  swift_deallocPartialClassInstance( v16,  v77,  *(unsigned int *)((swift_isaMask & *(void *)v16) + 0x30LL),  *(unsigned __int16 *)((swift_isaMask & *(void *)v16) + 0x34LL));
  return 0LL;
}

unint64_t sub_1000EC664(char a1)
{
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_bundleIdentifier);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_bundleIdentifier + 8);
  if ((v4 != 0xD000000000000021LL || v3 != 0x800000010013FE30LL)
    && (_stringCompareWithSmolCheck(_:_:expecting:)( *(void *)(v1 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_bundleIdentifier),  *(void *)(v1 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_bundleIdentifier + 8),  0xD000000000000021LL,  0x800000010013FE30LL,  0LL) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_previewImageNameForBundleIdentifiers);
    if (*(void *)(v7 + 16))
    {
      swift_bridgeObjectRetain(v3);
      unint64_t v8 = sub_1000F2D4C(v4, v3);
      if ((v9 & 1) != 0)
      {
        uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
        uint64_t v5 = *v10;
        swift_bridgeObjectRetain(v10[1]);
        swift_bridgeObjectRelease(v3);
        return v5;
      }

      swift_bridgeObjectRelease(v3);
    }

    return 0LL;
  }

  if ((a1 & 1) != 0) {
    return 0xD00000000000001DLL;
  }
  else {
    return 0xD000000000000020LL;
  }
}

uint64_t sub_1000EC7F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000ED6E0(&qword_1001E0FD0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000EC998();
  uint64_t v8 = sub_1000EC998();
  if (v7 < v8) {
    return -1LL;
  }
  if (v8 < v7) {
    return 1LL;
  }
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedName + 8);
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedName);
  uint64_t v19 = v10;
  uint64_t v11 = (uint64_t *)(a1 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedName);
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_localizedName + 8);
  uint64_t v16 = *v11;
  uint64_t v17 = v12;
  uint64_t v13 = type metadata accessor for Locale(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v6, 1LL, 1LL, v13);
  unint64_t v14 = sub_1000ED720();
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  uint64_t v9 = StringProtocol.compare<A>(_:options:range:locale:)( &v16,  0LL,  0LL,  0LL,  1LL,  v6,  &type metadata for String,  &type metadata for String,  v14,  v14);
  sub_1000ED7AC((uint64_t)v6, &qword_1001E0FD0);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v19);
  return v9;
}

uint64_t sub_1000EC998()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_orderForBundleIdentifiers);
  if (!*(void *)(v2 + 16)) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC10TVSettings20TVSettingsPosterItem_bundleIdentifier);
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  swift_bridgeObjectRetain(v4);
  unint64_t v6 = sub_1000F2D4C(v5, v4);
  if ((v7 & 1) != 0) {
    uint64_t v8 = *(void *)(*(void *)(v2 + 56) + 8 * v6);
  }
  else {
    uint64_t v8 = 0x7FFFFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRelease(v4);
  return v8;
}

id sub_1000ECA48()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVSettingsPosterItem(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000ECB50()
{
  return type metadata accessor for TVSettingsPosterItem(0LL);
}

uint64_t type metadata accessor for TVSettingsPosterItem(uint64_t a1)
{
  uint64_t result = qword_1001E0FC0;
  if (!qword_1001E0FC0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TVSettingsPosterItem);
  }
  return result;
}

uint64_t sub_1000ECB94(uint64_t a1)
{
  v4[0] = &unk_10012A518;
  v4[1] = &unk_10012A518;
  id v4[2] = &unk_10012A518;
  v4[3] = &unk_10012A530;
  void v4[4] = &unk_10012A548;
  void v4[5] = &unk_10012A548;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = &unk_10012A518;
  uint64_t result = type metadata accessor for Logger(319LL);
  if (v3 <= 0x3F)
  {
    void v4[8] = *(void *)(result - 8) + 64LL;
    v4[9] = &unk_10012A548;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 12LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

id sub_1000ECC44(uint64_t a1, uint64_t a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v10 = 0LL;
  id v5 = [v2 initWithBundleIdentifier:v4 error:&v10];

  id v6 = v10;
  if (v5)
  {
    id v7 = v10;
  }

  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)(v6);

    swift_willThrow();
  }

  return v5;
}

uint64_t sub_1000ECD0C(uint64_t a1, uint64_t a2)
{
  return sub_1000ECE54(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_1000ECD18(uint64_t a1, id *a2)
{
  uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  uint64_t v5 = v8;
  if (v8)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    uint64_t result = swift_bridgeObjectRelease(v5);
  }

  else
  {
    NSString v6 = 0LL;
  }

  *a2 = v6;
  return result;
}

uint64_t sub_1000ECD8C(uint64_t a1, id *a2)
{
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  char v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  uint64_t v5 = v9;
  if (v9)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }

  else
  {
    NSString v6 = 0LL;
  }

  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_1000ECE08@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v2;
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

uint64_t sub_1000ECE48(uint64_t a1, uint64_t a2)
{
  return sub_1000ECE54(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000ECE54(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  uint64_t v7 = v6;
  uint64_t v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_1000ECE90(uint64_t a1)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  uint64_t v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000ECED0(uint64_t a1)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  uint64_t v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  Swift::Int v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1000ECF40(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  uint64_t v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    char v10 = 1;
    uint64_t v9 = v5;
  }

  else
  {
    uint64_t v9 = v7;
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0LL);
  }

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_1000ECFC8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_1000ED00C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000ED034(uint64_t a1)
{
  uint64_t v2 = sub_1000ED908(&qword_1001E1010, (uint64_t)&unk_10012A66C);
  uint64_t v3 = sub_1000ED908(&qword_1001E1018, (uint64_t)&unk_10012A60C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000ED0A0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000ED170(v13, 0LL, 0LL, 1, a1, a2);
  uint64_t v8 = v13[0];
  if (v6)
  {
    uint64_t v9 = v6;
    ObjectType = (void *)swift_getObjectType(v6, v7);
    v13[0] = v9;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000ED808((uint64_t)v13, *a3);
      *a3 = v10 + 32;
    }
  }

  else
  {
    ObjectType = &type metadata for _StringGuts;
    v13[0] = a1;
    v13[1] = a2;
    uint64_t v11 = *a3;
    if (*a3)
    {
      sub_1000ED808((uint64_t)v13, *a3);
      *a3 = v11 + 32;
    }

    swift_bridgeObjectRetain(a2);
  }

  sub_1000ED7E8(v13);
  return v8;
}

uint64_t sub_1000ED170(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000LL) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0LL, HIBYTE(a6) & 0xF, __dst, a3);
            uint64_t result = 0LL;
            *a1 = (uint64_t)__dst;
            return result;
          }

          goto LABEL_17;
        }
      }
    }

uint64_t sub_1000ED328(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1000ED3BC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000ED594(0, *(void *)(v2 + 16) + 1LL, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1000ED594(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1000ED3BC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000LL) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    while (1)
    {
      uint64_t v5 = sub_1000ED530(v4, 0LL);
      if (v4 < 0) {
        break;
      }
      uint64_t v6 = v5;
      uint64_t v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0) {
        goto LABEL_14;
      }
      if (v7 == v4) {
        return v6;
      }
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "invalid Collection: less than 'count' elements in collection",  60LL,  2LL,  "Swift/ContiguousArrayBuffer.swift",  33LL,  v10,  1122LL,  0);
      __break(1u);
LABEL_10:
      uint64_t v4 = String.UTF8View._foreignCount()();
      if (!v4) {
        return &_swiftEmptyArrayStorage;
      }
    }

    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableBufferPointer with negative count",  46LL,  2LL,  "Swift/UnsafeBufferPointer.swift",  31LL,  v10,  71LL,  0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Insufficient space allocated to copy string contents",  52LL,  2LL,  "Swift/StringUTF8View.swift",  26LL,  v10,  430LL,  0);
    __break(1u);
  }

  else
  {
    return &_swiftEmptyArrayStorage;
  }

  return result;
}

void *sub_1000ED530(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v4 = sub_1000ED6E0(&qword_1001E0FE8);
  uint64_t v5 = (void *)swift_allocObject(v4, v2 + 32, 7LL);
  size_t v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_1000ED594(char a1, int64_t a2, char a3, char *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        goto LABEL_30;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000ED6E0(&qword_1001E0FE8);
    uint64_t v11 = (char *)swift_allocObject(v10, v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  int v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8]) {
      memmove(v13, v14, v8);
    }
    *((void *)a4 + 2) = 0LL;
    goto LABEL_28;
  }

  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }

uint64_t sub_1000ED6E0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0LL, 0LL);
    *a1 = result;
  }

  return result;
}

unint64_t sub_1000ED720()
{
  unint64_t result = qword_1001E0FD8;
  if (!qword_1001E0FD8)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1001E0FD8);
  }

  return result;
}

uint64_t sub_1000ED764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000ED6E0(&qword_1001E0FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000ED7AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000ED6E0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

uint64_t sub_1000ED7E8(void *a1)
{
  uint64_t v1 = *(void *)(a1[3] - 8LL);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0) {
    return swift_release(*a1);
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000ED808(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for RPTrustedHostInfoKey()
{
  if (!qword_1001E0FF0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(0LL, &unk_1001954D0);
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1001E0FF0);
    }
  }

uint64_t sub_1000ED89C()
{
  return sub_1000ED908(&qword_1001E0FF8, (uint64_t)&unk_10012A5D0);
}

uint64_t sub_1000ED8C0()
{
  return sub_1000ED908(&qword_1001E1000, (uint64_t)&unk_10012A5A4);
}

uint64_t sub_1000ED8E4()
{
  return sub_1000ED908(&qword_1001E1008, (uint64_t)&unk_10012A640);
}

uint64_t sub_1000ED908(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RPTrustedHostInfoKey();
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

id sub_1000ED948(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_instructionsViewController] = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_imageView] = 0LL;
  uint64_t v3 = v1;
  id v4 = [a1 copy];
  _bridgeAnyObjectToAny(_:)(v10);
  swift_unknownObjectRelease(v4);
  uint64_t v5 = type metadata accessor for TVSettingsProxCardInstructionsViewController.Configuration();
  swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v5, 7LL);
  *(void *)&v3[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_configuration] = v9;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for TVSettingsProxCardInstructionsViewController();
  id v6 = objc_msgSendSuper2(&v8, "initWithNibName:bundle:", 0, 0);
  [v6 setModalPresentationStyle:8];

  return v6;
}

void sub_1000EDAE0()
{
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for TVSettingsProxCardInstructionsViewController();
  objc_msgSendSuper2(&v20, "viewDidLoad");
  id v1 = [objc_allocWithZone(TVSUIStackedButtonsViewControllerConfiguration) init];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_configuration];
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8);
  if (v3) {
    unint64_t v4 = *(void *)(v2 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8);
  }
  else {
    unint64_t v4 = 0xE000000000000000LL;
  }
  swift_bridgeObjectRetain(v3);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  [v1 setTitle:v5];

  uint64_t v6 = *(void *)(v2 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body + 8);
  if (v6) {
    unint64_t v7 = *(void *)(v2 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body + 8);
  }
  else {
    unint64_t v7 = 0xE000000000000000LL;
  }
  swift_bridgeObjectRetain(v6);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  [v1 setSubtitle:v8];

  uint64_t v9 = *(void *)(v2 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_buttons);
  sub_1000EF884(0LL, &qword_1001E1110, &OBJC_CLASS___UIAction_ptr);
  swift_bridgeObjectRetain(v9);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  [v1 setButtons:isa];

  [v1 setFooterAction:*(void *)(v2 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_footerAction)];
  id v11 = [objc_allocWithZone(TVSUIStackedButtonsViewController) initWithConfiguration:v1];
  NSString v12 = String._bridgeToObjectiveC()();
  uint64_t v13 = (void *)objc_opt_self(&OBJC_CLASS___UIImage);
  id v14 = [v13 imageNamed:v12];

  id v15 = [objc_allocWithZone(UIImageView) initWithImage:v14];
  if (MGGetProductType() == 3865897231LL)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [v13 imageNamed:v16];

    [v15 setImage:v17];
  }

  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setSupplementaryView:v15];
  uint64_t v18 = *(void **)&v0[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_imageView];
  *(void *)&v0[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_imageView] = v15;
  id v19 = v15;

  sub_1000EE930();
  [v0 showViewController:v11 sender:0];
}

void sub_1000EDE58(void *a1, uint64_t a2, uint64_t a3, const char **a4, void *a5)
{
  v14.receiver = a1;
  v14.super_class = (Class)type metadata accessor for TVSettingsProxCardInstructionsViewController();
  NSString v8 = *a4;
  uint64_t v9 = (char *)v14.receiver;
  objc_msgSendSuper2(&v14, v8, a3);
  uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_configuration] + *a5;
  id v11 = *(void (**)(uint64_t))v10;
  if (*(void *)v10)
  {
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t v13 = swift_retain(v12);
    v11(v13);
    sub_1000EF748((uint64_t)v11, v12);
  }
}

void sub_1000EDEF8(void *a1)
{
  id v3 = [v1 childViewControllers];
  uint64_t v4 = sub_1000EF884(0LL, (unint64_t *)&unk_1001E1430, &OBJC_CLASS___UIViewController_ptr);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      uint64_t v35 = v5;
    }
    else {
      uint64_t v35 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v5);
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v5);
    if (v36)
    {
LABEL_3:
      if ((v5 & 0xC000000000000001LL) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v5);
      }

      else
      {
        if (!*(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10))
        {
          __break(1u);
          goto LABEL_20;
        }

        id v6 = *(id *)(v5 + 32);
      }

      unint64_t v7 = v6;
      swift_bridgeObjectRelease(v5);
      objc_msgSend(v1, "bs_addChildViewController:", a1);
      id v8 = [a1 view];
      if (v8)
      {
        uint64_t v9 = v8;
        id v10 = [v1 view];
        if (v10)
        {
          id v11 = v10;
          [v10 bounds];
          double v13 = v12;
          double v15 = v14;
          double v17 = v16;
          double v19 = v18;

          objc_msgSend(v9, "setFrame:", v13, v15, v17, v19);
          id v20 = [a1 view];
          if (v20)
          {
            id v21 = v20;
            [v20 setHidden:1];

            id v22 = [v1 view];
            if (v22)
            {
              uint64_t v23 = v22;
              uint64_t v24 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
              uint64_t v25 = swift_allocObject(&unk_100195698, 32LL, 7LL);
              *(void *)(v25 + 16) = a1;
              *(void *)(v25 + 24) = v7;
              id v52 = sub_1000EF8E8;
              uint64_t v53 = v25;
              aBlock = _NSConcreteStackBlock;
              uint64_t v49 = 1107296256LL;
              id v50 = sub_1000F1AD8;
              id v51 = &unk_1001956B0;
              uint64_t v26 = _Block_copy(&aBlock);
              uint64_t v27 = v53;
              id v28 = a1;
              id v29 = v7;
              swift_release(v27);
              uint64_t v30 = swift_allocObject(&unk_1001956E8, 32LL, 7LL);
              *(void *)(v30 + 16) = v1;
              *(void *)(v30 + 24) = v29;
              id v52 = sub_1000EF8F0;
              uint64_t v53 = v30;
              aBlock = _NSConcreteStackBlock;
              uint64_t v49 = 1107296256LL;
              id v50 = sub_1000EE374;
              id v51 = &unk_100195700;
              uint64_t v31 = _Block_copy(&aBlock);
              uint64_t v32 = v53;
              id v33 = v29;
              id v34 = v1;
              swift_release(v32);
              [v24 transitionWithView:v23 duration:5242880 options:v26 animations:v31 completion:0.5];
              _Block_release(v31);
              _Block_release(v26);

              return;
            }

            goto LABEL_23;
          }

LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }

LABEL_25:
  __break(1u);
}

void sub_1000EE2E4(void *a1, void *a2)
{
  id v3 = [a1 view];
  if (v3)
  {
    uint64_t v4 = v3;
    [v3 setHidden:0];

    id v5 = [a2 view];
    if (v5)
    {
      id v6 = v5;
      [v5 setHidden:1];

      return;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
}

uint64_t sub_1000EE374(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void sub_1000EE434()
{
  uint64_t v1 = OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_instructionsViewController;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_instructionsViewController];
  if (v2) {
    uint64_t v3 = *(char **)&v0[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_instructionsViewController];
  }
  else {
    uint64_t v3 = (char *)[objc_allocWithZone((Class)type metadata accessor for DetailedInstructionsViewController()) init];
  }
  uint64_t v4 = OBJC_IVAR____TtC10TVSettingsP33_FC551CFD2E3FD394F7751CAAC1BC26AD34DetailedInstructionsViewController_tapToSetupView;
  id v5 = *(void **)&v3[OBJC_IVAR____TtC10TVSettingsP33_FC551CFD2E3FD394F7751CAAC1BC26AD34DetailedInstructionsViewController_tapToSetupView];
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_configuration];
  uint64_t v7 = *(void *)(v6 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle + 8);
  if (v7)
  {
    unint64_t v8 = *(void *)(v6 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle + 8);
  }

  else
  {
    uint64_t v9 = *(void *)(v6 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8);
    if (v9) {
      unint64_t v8 = *(void *)(v6 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8);
    }
    else {
      unint64_t v8 = 0xE000000000000000LL;
    }
    swift_bridgeObjectRetain(v9);
    uint64_t v7 = 0LL;
  }

  id v10 = v2;
  swift_bridgeObjectRetain(v7);
  id v11 = v5;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  [v11 setTitle:v12];

  uint64_t v13 = *(void *)(v6 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions + 8);
  if (v13) {
    unint64_t v14 = *(void *)(v6 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions + 8);
  }
  else {
    unint64_t v14 = 0xE000000000000000LL;
  }
  id v15 = *(id *)&v3[v4];
  swift_bridgeObjectRetain(v13);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  [v15 setInstructions:v16];

  [v0 showViewController:v3 sender:0];
  double v17 = *(void **)&v0[v1];
  *(void *)&v0[v1] = v3;
  uint64_t v26 = v3;

  uint64_t v18 = *(void *)(v6 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter + 8);
  if (v18)
  {
    uint64_t v19 = *(void *)(v6 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter);
    id v20 = (void *)objc_opt_self(&OBJC_CLASS___NSTimer);
    id v21 = (void *)swift_allocObject(&unk_100195648, 40LL, 7LL);
    _DWORD v21[2] = v26;
    v21[3] = v19;
    void v21[4] = v18;
    aBlock[4] = sub_1000EF7F0;
    id v28 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1000EE6FC;
    aBlock[3] = &unk_100195660;
    id v22 = _Block_copy(aBlock);
    uint64_t v23 = v28;
    uint64_t v24 = v26;
    swift_bridgeObjectRetain(v18);
    swift_release(v23);
    id v25 = [v20 scheduledTimerWithTimeInterval:0 repeats:v22 block:3.0];

    _Block_release(v22);
  }

  else
  {
  }

void sub_1000EE6FC(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4();
  swift_release(v3);
}

void sub_1000EE780(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_instructionsViewController;
  uint64_t v5 = *(void *)(v2
                 + OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_instructionsViewController);
  if (v5 || (sub_1000EE434(), (uint64_t v5 = *(void *)(v2 + v4)) != 0))
  {
    uint64_t v6 = *(void **)(v5
                  + OBJC_IVAR____TtC10TVSettingsP33_FC551CFD2E3FD394F7751CAAC1BC26AD34DetailedInstructionsViewController_tapToSetupView);
    if (a2) {
      unint64_t v7 = a2;
    }
    else {
      unint64_t v7 = 0xE000000000000000LL;
    }
    id v8 = v6;
    swift_bridgeObjectRetain(a2);
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    [v8 setTitle:v9];

    uint64_t v10 = *(void *)(v2 + v4);
    if (v10) {
      [*(id *)(v10 + OBJC_IVAR____TtC10TVSettingsP33_FC551CFD2E3FD394F7751CAAC1BC26AD34DetailedInstructionsViewController_tapToSetupView) startAnimatingSpinner];
    }
  }

void sub_1000EE930()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 userInterfaceStyle];

  uint64_t v3 = &kCAFilterPlusL;
  if (v2 != (id)2) {
    uint64_t v3 = &kCAFilterPlusD;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  uint64_t v5 = v4;
  id v6 = objc_allocWithZone(&OBJC_CLASS___CAFilter);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  id v10 = [v6 initWithType:v7];

  id v8 = *(void **)&v0[OBJC_IVAR____TtC10TVSettings44TVSettingsProxCardInstructionsViewController_imageView];
  if (v8)
  {
    id v9 = [v8 layer];
    [v9 setCompositingFilter:v10];
  }
}

id sub_1000EEA44(uint64_t a1)
{
  return sub_1000EF6D8(a1, type metadata accessor for TVSettingsProxCardInstructionsViewController);
}

uint64_t type metadata accessor for TVSettingsProxCardInstructionsViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC10TVSettings44TVSettingsProxCardInstructionsViewController);
}

id sub_1000EEC20(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a1 + *a3;
  uint64_t v4 = *(void *)(v3 + 8);
  if (v4)
  {
    swift_bridgeObjectRetain(*(void *)(v3 + 8));
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
  }

  else
  {
    NSString v5 = 0LL;
  }

  return v5;
}

uint64_t sub_1000EEC84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  }

  else
  {
    uint64_t v6 = 0LL;
    uint64_t v7 = 0LL;
  }

  id v8 = (uint64_t *)(a1 + *a4);
  uint64_t v9 = v8[1];
  uint64_t *v8 = v6;
  v8[1] = v7;
  return swift_bridgeObjectRelease(v9);
}

id sub_1000EED64(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4 = (void *)(a1 + *a3);
  if (!*v4) {
    return 0LL;
  }
  uint64_t v5 = v4[1];
  void v9[4] = *v4;
  uint64_t v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256LL;
  v9[2] = sub_1000F1AD8;
  v9[3] = a4;
  uint64_t v6 = _Block_copy(v9);
  uint64_t v7 = v10;
  swift_retain(v5);
  swift_release(v7);
  return v6;
}

uint64_t sub_1000EEE60@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (objc_class *)type metadata accessor for TVSettingsProxCardInstructionsViewController.Configuration();
  uint64_t v4 = (char *)[objc_allocWithZone(v3) init];
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8);
  uint64_t v6 = &v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title];
  uint64_t v7 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8];
  *(void *)uint64_t v6 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title);
  *((void *)v6 + 1) = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body + 8);
  uint64_t v9 = &v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body];
  uint64_t v10 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body + 8];
  *(void *)uint64_t v9 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body);
  *((void *)v9 + 1) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v10);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_buttons);
  uint64_t v12 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_buttons];
  *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_buttons] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle + 8);
  unint64_t v14 = &v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle];
  uint64_t v15 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle + 8];
  *(void *)unint64_t v14 = *(void *)(v1
                             + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle);
  *((void *)v14 + 1) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v15);
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions + 8);
  double v17 = &v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions];
  uint64_t v18 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions + 8];
  *(void *)double v17 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions);
  *((void *)v17 + 1) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v18);
  uint64_t v19 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter + 8);
  id v20 = &v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter];
  uint64_t v21 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter + 8];
  *(void *)id v20 = *(void *)(v1
                             + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter);
  *((void *)v20 + 1) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v21);
  id v22 = *(void **)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_footerAction);
  uint64_t v23 = *(void **)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_footerAction];
  *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_footerAction] = v22;
  id v24 = v22;

  uint64_t v25 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler);
  uint64_t v26 = *(void *)(v1
                  + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler
                  + 8);
  uint64_t v27 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler];
  uint64_t v28 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler];
  uint64_t v29 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler + 8];
  *uint64_t v27 = v25;
  v27[1] = v26;
  sub_1000EF738(v25, v26);
  sub_1000EF748(v28, v29);
  uint64_t v30 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler);
  uint64_t v31 = *(void *)(v1 + OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler + 8);
  uint64_t v32 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler];
  uint64_t v33 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler];
  uint64_t v34 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler + 8];
  *uint64_t v32 = v30;
  v32[1] = v31;
  sub_1000EF738(v30, v31);
  uint64_t result = sub_1000EF748(v33, v34);
  a1[3] = v3;
  *a1 = v4;
  return result;
}

id sub_1000EF068()
{
  uint64_t v1 = &v0[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title];
  *(void *)uint64_t v1 = 0LL;
  *((void *)v1 + 1) = 0LL;
  id v2 = &v0[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body];
  *(void *)id v2 = 0LL;
  *((void *)v2 + 1) = 0LL;
  *(void *)&v0[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_buttons] = &_swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_footerAction] = 0LL;
  uint64_t v3 = &v0[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle];
  *(void *)uint64_t v3 = 0LL;
  *((void *)v3 + 1) = 0LL;
  uint64_t v4 = &v0[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions];
  *(void *)uint64_t v4 = 0LL;
  *((void *)v4 + 1) = 0LL;
  uint64_t v5 = &v0[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter];
  *(void *)uint64_t v5 = 0LL;
  *((void *)v5 + 1) = 0LL;
  uint64_t v6 = &v0[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler];
  *(void *)uint64_t v6 = 0LL;
  *((void *)v6 + 1) = 0LL;
  uint64_t v7 = &v0[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler];
  uint64_t v8 = (objc_class *)type metadata accessor for TVSettingsProxCardInstructionsViewController.Configuration();
  *(void *)uint64_t v7 = 0LL;
  *((void *)v7 + 1) = 0LL;
  v10.receiver = v0;
  v10.super_class = v8;
  return objc_msgSendSuper2(&v10, "init");
}

id sub_1000EF150(uint64_t a1)
{
  return sub_1000EF6D8(a1, type metadata accessor for TVSettingsProxCardInstructionsViewController.Configuration);
}

uint64_t type metadata accessor for TVSettingsProxCardInstructionsViewController.Configuration()
{
  return objc_opt_self(&OBJC_CLASS___TVSettingsProxCardInstructionsViewControllerConfiguration);
}

void sub_1000EF318()
{
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for DetailedInstructionsViewController();
  objc_msgSendSuper2(&v28, "viewDidLoad");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10TVSettingsP33_FC551CFD2E3FD394F7751CAAC1BC26AD34DetailedInstructionsViewController_tapToSetupView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }

  uint64_t v3 = v2;
  [v2 addSubview:v1];

  uint64_t v4 = sub_1000ED6E0(&qword_1001E1100);
  uint64_t v5 = swift_allocObject(v4, 64LL, 7LL);
  *(_OWORD *)(v5 + 16) = xmmword_10012A710;
  id v6 = [v1 leadingAnchor];
  id v7 = [v0 view];
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }

  uint64_t v8 = v7;
  id v9 = [v7 leadingAnchor];

  id v10 = [v6 constraintEqualToAnchor:v9];
  *(void *)(v5 + 32) = v10;
  id v11 = [v1 trailingAnchor];
  id v12 = [v0 view];
  if (!v12)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }

  uint64_t v13 = v12;
  id v14 = [v12 trailingAnchor];

  id v15 = [v11 constraintEqualToAnchor:v14];
  *(void *)(v5 + 40) = v15;
  id v16 = [v1 topAnchor];
  id v17 = [v0 view];
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  uint64_t v18 = v17;
  id v19 = [v17 topAnchor];

  id v20 = [v16 constraintEqualToAnchor:v19];
  *(void *)(v5 + 4_Block_object_dispose((const void *)(v29 - 144), 8) = v20;
  id v21 = [v1 bottomAnchor];
  id v22 = [v0 view];
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = (void *)objc_opt_self(&OBJC_CLASS___NSLayoutConstraint);
    id v25 = [v23 bottomAnchor];

    id v26 = [v21 constraintEqualToAnchor:v25];
    *(void *)(v5 + 56) = v26;
    specialized Array._endMutation()();
    sub_1000EF884(0LL, &qword_1001E1108, &OBJC_CLASS___NSLayoutConstraint_ptr);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
    [v24 activateConstraints:isa];

    return;
  }

void sub_1000EF690(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v8 = a4;
  _swift_stdlib_reportUnimplementedInitializer(a5, a6, "init(nibName:bundle:)", 21LL, 0LL);
  __break(1u);
}

id sub_1000EF6C8()
{
  return sub_1000EF6D8(0LL, type metadata accessor for DetailedInstructionsViewController);
}

id sub_1000EF6D8(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for DetailedInstructionsViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC10TVSettingsP33_FC551CFD2E3FD394F7751CAAC1BC26AD34DetailedInstructionsViewController);
}

uint64_t sub_1000EF738(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_retain(a2);
  }
  return result;
}

uint64_t sub_1000EF748(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_release(a2);
  }
  return result;
}

void *sub_1000EF758(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) + 16LL) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80LL)));
  return result;
}

uint64_t sub_1000EF77C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000EF7A0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16LL))();
}

uint64_t sub_1000EF7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000EF7BC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000EF7C4()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1000EF7F0()
{
  id v2 = String._bridgeToObjectiveC()();
  [v1 setFooter:v2];
}

uint64_t sub_1000EF844(uint64_t a1)
{
  uint64_t v2 = sub_1000ED6E0(&qword_1001E1118);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1000EF884(uint64_t a1, unint64_t *a2, void *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t v5 = objc_opt_self(*a3);
    uint64_t result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }

  return result;
}

uint64_t sub_1000EF8BC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1000EF8E8()
{
}

id sub_1000EF8F0()
{
  return objc_msgSend(*(id *)(v0 + 16), "bs_removeChildViewController:", *(void *)(v0 + 24));
}

char *sub_1000EF980(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_user] = a1;
  uint64_t v5 = v2;
  id v6 = a1;
  id v7 = [a2 copy];
  _bridgeAnyObjectToAny(_:)(v17);
  swift_unknownObjectRelease(v7);
  uint64_t v8 = type metadata accessor for TVSettingsTapToRepairUserPresenter.Configuration();
  swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, v8, 7LL);
  *(void *)&v5[OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_configuration] = v16;
  id v9 = [objc_allocWithZone((Class)TVSettingsUserProxRepairManager) init];
  *(void *)&v5[OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_proxRepairManager] = v9;

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for TVSettingsTapToRepairUserPresenter();
  id v10 = (char *)objc_msgSendSuper2(&v15, "init");
  id v11 = *(void **)&v10[OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_proxRepairManager];
  id v12 = v10;
  id v13 = v11;
  [v13 setDelegate:v12];

  return v12;
}

id sub_1000EFB28()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_proxRepairManager];
  [v1 setDelegate:0];
  [v1 stop];
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for TVSettingsTapToRepairUserPresenter();
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_1000EFC78(void *a1)
{
  uint64_t v2 = v1;
  swift_unknownObjectWeakAssign( v1 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_presentingViewController,  a1);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = (id)TSKWiFiLocString(v4);

  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    uint64_t v8 = v7;
  }

  else
  {
    uint64_t v6 = 0LL;
    uint64_t v8 = 0LL;
  }

  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = (id)TSKLocString(v9);

  if (v10)
  {
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    uint64_t v92 = v12;
    uint64_t v93 = v11;
  }

  else
  {
    uint64_t v92 = 0LL;
    uint64_t v93 = 0LL;
  }

  uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_configuration);
  uint64_t v14 = *(void *)(v13 + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_cancelActionTitle + 8);
  if (v14)
  {
    uint64_t v15 = *(void *)(v13 + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_cancelActionTitle);
    unint64_t v16 = *(void *)(v13 + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_cancelActionTitle + 8);
  }

  else
  {
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = (id)TSKLocString(v17);

    if (v18)
    {
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      unint64_t v16 = v19;
    }

    else
    {
      uint64_t v15 = 0LL;
      unint64_t v16 = 0xE000000000000000LL;
    }
  }

  uint64_t v20 = *(void *)(v13 + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_copyStyle);
  id v95 = v8;
  id v97 = a1;
  unint64_t v94 = v16;
  if (v20 == 1)
  {
    uint64_t v21 = v6;
    swift_bridgeObjectRetain(v14);
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = (id)TSKLocString(v22);

    if (v23)
    {
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      uint64_t v26 = v25;
    }

    else
    {
      uint64_t v24 = 0LL;
      uint64_t v26 = 0LL;
    }

    uint64_t v30 = v15;
    NSString v31 = String._bridgeToObjectiveC()();
    id v32 = (id)TSKLocString(v31);

    if (v32)
    {
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      uint64_t v35 = v34;
    }

    else
    {
      uint64_t v33 = 0LL;
      uint64_t v35 = 0LL;
    }

    goto LABEL_33;
  }

  if (v20)
  {
    uint64_t v98 = *(void *)(v13 + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_copyStyle);
    swift_bridgeObjectRetain(v14);
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)( &type metadata for TVSettingsTapToRepairUserPresenter.CopyStyle,  &v98,  &type metadata for TVSettingsTapToRepairUserPresenter.CopyStyle,  &type metadata for Int);
    __break(1u);
    return;
  }

  uint64_t v21 = v6;
  swift_bridgeObjectRetain(v14);
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = (id)TSKLocString(v27);

  if (v28)
  {
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    uint64_t v26 = v29;
  }

  else
  {
    uint64_t v24 = 0LL;
    uint64_t v26 = 0LL;
  }

  NSString v36 = String._bridgeToObjectiveC()();
  id v37 = (id)TSKLocRMVString(v36);

  if (v37)
  {
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    uint64_t v40 = v39;
  }

  else
  {
    uint64_t v38 = 0LL;
    uint64_t v40 = 0LL;
  }

  uint64_t v30 = v15;
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = (id)TSKLocRMVString(v41);

  if (v42)
  {
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    uint64_t v35 = v43;

    if (!v40) {
      goto LABEL_33;
    }
LABEL_30:
    id v44 =  [*(id *)(v2 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_user) iCloudUsername];
    if (v44)
    {
      double v45 = v44;
      swift_bridgeObjectRelease(v35);
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      uint64_t v48 = v47;

      uint64_t v49 = sub_1000ED6E0((uint64_t *)&unk_1001E1440);
      uint64_t v50 = swift_allocObject(v49, 72LL, 7LL);
      *(_OWORD *)(v50 + 16) = xmmword_10012A790;
      *(void *)(v50 + 56) = &type metadata for String;
      *(void *)(v50 + 64) = sub_1000F1294();
      *(void *)(v50 + 32) = v46;
      *(void *)(v50 + 40) = v48;
      uint64_t v33 = String.init(format:_:)(v38, v40, v50);
      uint64_t v35 = v51;
    }

    swift_bridgeObjectRelease(v40);
    goto LABEL_33;
  }

  uint64_t v33 = 0LL;
  uint64_t v35 = 0LL;
  if (v40) {
    goto LABEL_30;
  }
LABEL_33:
  NSString v52 = String._bridgeToObjectiveC()();
  id v53 = (id)TSKLocString(v52);

  if (v53)
  {
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    unint64_t v56 = v55;
  }

  else
  {
    uint64_t v54 = 0LL;
    unint64_t v56 = 0xE000000000000000LL;
  }

  id v57 = (char *)[objc_allocWithZone((Class)type metadata accessor for TVSettingsProxCardInstructionsViewController.Configuration()) init];
  id v58 = (uint64_t *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title];
  uint64_t v59 = *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8];
  *id v58 = v24;
  v58[1] = v26;
  swift_bridgeObjectRelease(v59);
  id v60 = (uint64_t *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body];
  uint64_t v61 = *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body + 8];
  uint64_t *v60 = v33;
  v60[1] = v35;
  swift_bridgeObjectRelease(v61);
  id v62 = &v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle];
  uint64_t v63 = *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle + 8];
  *(void *)id v62 = 0LL;
  *((void *)v62 + 1) = 0LL;
  swift_bridgeObjectRelease(v63);
  char v64 = (uint64_t *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions];
  uint64_t v65 = *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions + 8];
  *char v64 = v21;
  v64[1] = (uint64_t)v95;
  swift_bridgeObjectRelease(v65);
  id v66 = (uint64_t *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter];
  uint64_t v67 = *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter + 8];
  uint64_t *v66 = v93;
  v66[1] = v92;
  swift_bridgeObjectRelease(v67);
  sub_1000EF884(0LL, &qword_1001E1110, &OBJC_CLASS___UIAction_ptr);
  uint64_t v68 = swift_allocObject(&unk_100195758, 24LL, 7LL);
  swift_unknownObjectWeakInit(v68 + 16, v2);
  id v69 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v54,  v56,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1000F1248,  v68);
  uint64_t v70 = swift_allocObject(&unk_100195758, 24LL, 7LL);
  swift_unknownObjectWeakInit(v70 + 16, v2);
  unint64_t v71 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v30,  v94,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1000F1250,  v70);
  uint64_t v72 = sub_1000ED6E0(&qword_1001E1100);
  uint64_t v73 = swift_allocObject(v72, 48LL, 7LL);
  *(_OWORD *)(v73 + 16) = xmmword_10012A7A0;
  *(void *)(v73 + 32) = v69;
  *(void *)(v73 + 40) = v71;
  uint64_t v98 = v73;
  specialized Array._endMutation()();
  uint64_t v74 = *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_buttons];
  *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_buttons] = v98;
  id v96 = v69;
  id v75 = v71;
  swift_bridgeObjectRelease(v74);
  uint64_t v76 = swift_allocObject(&unk_100195758, 24LL, 7LL);
  swift_unknownObjectWeakInit(v76 + 16, v2);
  uint64_t v77 = (void (**)())&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler];
  uint64_t v78 = *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler];
  uint64_t v79 = *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler
                      + 8];
  *uint64_t v77 = sub_1000F1258;
  v77[1] = (void (*)())v76;
  sub_1000EF748(v78, v79);
  unint64_t v80 = *(void **)(v2 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_proxRepairManager);
  uint64_t v81 = swift_allocObject(&unk_1001957A8, 24LL, 7LL);
  *(void *)(v81 + 16) = v80;
  v82 = (id (**)())&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler];
  uint64_t v83 = *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler];
  uint64_t v84 = *(void *)&v57[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler + 8];
  os_log_s *v82 = sub_1000F1284;
  v82[1] = (id (*)())v81;
  id v85 = v80;
  sub_1000EF748(v83, v84);
  id v86 = objc_allocWithZone((Class)type metadata accessor for TVSettingsProxCardInstructionsViewController());
  uint64_t v87 = v57;
  uint64_t v88 = (char *)sub_1000ED948(v87);
  swift_unknownObjectWeakAssign( v2 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_instructionsViewController,  v88);
  id v89 = [v97 navigationController];
  if (v89)
  {
    v90 = v89;
    [v89 pushViewController:v88 animated:1];

    int v91 = v87;
  }

  else
  {
    [v97 presentViewController:v88 animated:1 completion:0];
    int v91 = v88;
    uint64_t v88 = v87;
  }
}

void sub_1000F0478(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    id v7 = (void *)swift_unknownObjectWeakLoadStrong( Strong + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_instructionsViewController,  v5);

    if (v7)
    {
      sub_1000EE434();
    }
  }

void sub_1000F04E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_proxRepairManager) stop];
    sub_1000F06FC();
    swift_unknownObjectWeakAssign( &v5[OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_presentingViewController],  0LL);
    id v7 = (void *)swift_unknownObjectWeakLoadStrong( &v5[OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_delegate],  v6);
    if (v7)
    {
      uint64_t v8 = v7;

      swift_unknownObjectRelease(v8);
    }

    else
    {
    }
  }

void sub_1000F05B8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    NSString v4 = (char *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_proxRepairManager) startWithUser:*(void *)&v4[OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_user] needsCDPRepair:*(unsigned __int8 *)(*(void *)&v4[OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_configuration] + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_needsCDPRepair)];
  }

void sub_1000F06FC()
{
  uint64_t v1 = swift_allocObject(&unk_100195758, 24LL, 7LL);
  swift_unknownObjectWeakInit(v1 + 16, v0);
  uint64_t v2 = v0 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_presentingViewController;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( v0 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_presentingViewController,  v3);
  if (!Strong) {
    goto LABEL_12;
  }
  uint64_t v6 = (void *)Strong;
  swift_retain(v1);
  id v7 = [v6 navigationController];

  if (!v7) {
    goto LABEL_7;
  }
  id v8 = [v7 topViewController];
  uint64_t v10 = swift_unknownObjectWeakLoadStrong( v0 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_instructionsViewController,  v9);
  uint64_t v11 = (void *)v10;
  if (v8)
  {
    if (v10)
    {
      sub_1000EF884(0LL, (unint64_t *)&unk_1001E1430, &OBJC_CLASS___UIViewController_ptr);
      id v12 = v8;
      char v13 = static NSObject.== infix(_:_:)();

      if ((v13 & 1) == 0)
      {

LABEL_7:
        swift_release(v1);
        goto LABEL_12;
      }

void sub_1000F0924(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong( Strong + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_delegate,  v4);
    if (v6)
    {
      id v7 = v6;

      swift_unknownObjectRelease(v7);
    }

    else
    {
    }
  }

uint64_t type metadata accessor for TVSettingsTapToRepairUserPresenter()
{
  return objc_opt_self(&OBJC_CLASS____TtC10TVSettings34TVSettingsTapToRepairUserPresenter);
}

BOOL sub_1000F0B54(void *a1, void *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1000F0B68()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)(v3, 0LL);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1000F0BAC()
{
}

Swift::Int sub_1000F0BD4(uint64_t a1)
{
  Swift::UInt v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void *sub_1000F0C14@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1LL && *result != 0LL;
  *(void *)a2 = *result == 1LL;
  *(_BYTE *)(a2 + _Block_object_dispose((const void *)(v29 - 144), 8) = v2;
  return result;
}

void sub_1000F0C44(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000F0DC8@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  ObjectType = (objc_class *)swift_getObjectType(v2, a1);
  uint64_t v5 = [objc_allocWithZone(ObjectType) init];
  *(void *)&v5[OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_copyStyle] = *(void *)(v2 + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_copyStyle);
  v5[OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_needsCDPRepair] = *(_BYTE *)(v2
                                                                                            + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_needsCDPRepair);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_cancelActionTitle + 8);
  id v7 = &v5[OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_cancelActionTitle];
  uint64_t v8 = *(void *)&v5[OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_cancelActionTitle + 8];
  void *v7 = *(void *)(v2 + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_cancelActionTitle);
  v7[1] = v6;
  swift_bridgeObjectRetain(v6);
  uint64_t result = swift_bridgeObjectRelease(v8);
  v5[OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_shouldEnableRecognizeMyVoiceAfterRepair] = *(_BYTE *)(v2 + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_shouldEnableRecognizeMyVoiceAfterRepair);
  a2[3] = ObjectType;
  *a2 = v5;
  return result;
}

id sub_1000F0ED0(uint64_t a1, uint64_t a2)
{
  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for TVSettingsTapToRepairUserPresenter.Configuration()
{
  return objc_opt_self(&OBJC_CLASS___TVSettingsTapToRepairUserPresenterConfiguration);
}

ValueMetadata *type metadata accessor for TVSettingsTapToRepairUserPresenter.CopyStyle()
{
  return &type metadata for TVSettingsTapToRepairUserPresenter.CopyStyle;
}

unint64_t sub_1000F0F4C()
{
  unint64_t result = qword_1001E1220;
  if (!qword_1001E1220)
  {
    unint64_t result = swift_getWitnessTable(&unk_10012A880, &type metadata for TVSettingsTapToRepairUserPresenter.CopyStyle);
    atomic_store(result, (unint64_t *)&qword_1001E1220);
  }

  return result;
}

uint64_t sub_1000F0F90()
{
  if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_configuration)
                 + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_copyStyle) > 1uLL)
  {
    uint64_t v10 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_configuration)
                    + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_copyStyle);
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)( &type metadata for TVSettingsTapToRepairUserPresenter.CopyStyle,  &v10,  &type metadata for TVSettingsTapToRepairUserPresenter.CopyStyle,  &type metadata for Int);
    __break(1u);
  }

  else
  {
    NSString v1 = String._bridgeToObjectiveC()();
    id v2 = (id)TSKLocString(v1);

    if (v2)
    {
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
      unint64_t v6 = v5;
    }

    else
    {
      uint64_t v4 = 0LL;
      unint64_t v6 = 0LL;
    }

    uint64_t Strong = swift_unknownObjectWeakLoadStrong( v0 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_instructionsViewController,  v3);
    if (Strong)
    {
      uint64_t v8 = (void *)Strong;
      sub_1000EE780(v4, v6);
    }

    return swift_bridgeObjectRelease(v6);
  }

  return result;
}

void *sub_1000F10B0()
{
  int v1 = *(unsigned __int8 *)(*(void *)(v0
                                      + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_configuration)
                          + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_shouldEnableRecognizeMyVoiceAfterRepair);
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong( v0 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_delegate,  v2);
  uint64_t v4 = result;
  if (v1 != 1)
  {
    if (!result) {
      return result;
    }
    goto LABEL_6;
  }

  if (result)
  {
LABEL_6:
    [v4 tapToRepairUserDidFinish:v0];
    return (void *)swift_unknownObjectRelease(v4);
  }

  return result;
}

void sub_1000F1158(uint64_t a1)
{
  id v3 = [objc_allocWithZone((Class)type metadata accessor for TVSettingsUserErrorPresenter()) init];
  id v7 = (id)sub_1000F33C4( a1,  *(void *)(*(void *)(v1 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_configuration)
                       + OBJC_IVAR___TVSettingsTapToRepairUserPresenterConfiguration_copyStyle));

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong( v1 + OBJC_IVAR____TtC10TVSettings34TVSettingsTapToRepairUserPresenter_presentingViewController,  v4);
  if (Strong)
  {
    unint64_t v6 = Strong;
    [Strong presentViewController:v7 animated:1 completion:0];
  }
}

uint64_t sub_1000F1204()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000F1228()
{
}

uint64_t sub_1000F1230(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000F1240(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_1000F1248(uint64_t a1)
{
}

void sub_1000F1250(uint64_t a1)
{
}

void sub_1000F1258()
{
}

uint64_t sub_1000F1260()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_1000F1284()
{
  return [*(id *)(v0 + 16) stop];
}

unint64_t sub_1000F1294()
{
  unint64_t result = qword_1001E1228;
  if (!qword_1001E1228)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1001E1228);
  }

  return result;
}

uint64_t sub_1000F12D8(uint64_t a1)
{
  return a1;
}

id sub_1000F139C()
{
  return sub_1000EF6D8(0LL, (uint64_t (*)(void))type metadata accessor for RemotePairingPairedHost);
}

uint64_t sub_1000F1400()
{
  return type metadata accessor for RemotePairingPairedHost(0LL);
}

uint64_t type metadata accessor for RemotePairingPairedHost(uint64_t a1)
{
  uint64_t result = qword_1001E1258;
  if (!qword_1001E1258) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RemotePairingPairedHost);
  }
  return result;
}

uint64_t sub_1000F1444(uint64_t a1, uint64_t a2)
{
  uint64_t result = type metadata accessor for UUID(319LL, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    v5[1] = &unk_10012A8C8;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 2LL, v5, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

void sub_1000F1654(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0LL;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_1000F16A0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v9 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v12 = (void *)swift_allocObject(&unk_100195828, 40LL, 7LL);
  void v12[2] = a1;
  void v12[3] = a2;
  void v12[4] = a3;
  uint64_t v13 = swift_allocObject(&unk_100195850, 32LL, 7LL);
  *(void *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1000F247C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_1000F24AC;
  uint64_t v26 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1000F1AD8;
  aBlock[3] = &unk_100195868;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  swift_retain(a3);
  uint64_t v16 = swift_retain(v12);
  static DispatchQoS.unspecified.getter(v16);
  uint64_t v24 = &_swiftEmptyArrayStorage;
  uint64_t v17 = sub_1000F25A8( &qword_1001E1298,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v18 = sub_1000ED6E0(&qword_1001E12A0);
  uint64_t v19 = sub_1000F25E8(&qword_1001E12A8, &qword_1001E12A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v18, v19, v6, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v8, v14);
  _Block_release(v14);
  swift_release(v12);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  return swift_release(v26);
}

uint64_t sub_1000F18D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a3;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = (void *)swift_allocObject(&unk_1001958A0, 48LL, 7LL);
  v16[2] = a4;
  v16[3] = a5;
  void v16[4] = a1;
  void v16[5] = a2;
  aBlock[4] = sub_1000F2544;
  id v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1000F1AD8;
  aBlock[3] = &unk_1001958B8;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain(a5);
  swift_bridgeObjectRetain(a1);
  uint64_t v18 = swift_errorRetain(a2);
  static DispatchQoS.unspecified.getter(v18);
  uint64_t v26 = &_swiftEmptyArrayStorage;
  uint64_t v19 = sub_1000F25A8( &qword_1001E1298,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v20 = sub_1000ED6E0(&qword_1001E12A0);
  uint64_t v21 = sub_1000F25E8(&qword_1001E12A8, &qword_1001E12A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v20, v21, v9, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release(v28);
}

uint64_t sub_1000F1AD8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_1000F1B04(void (*a1)(void *, id))
{
  unint64_t v28 = 0LL;
  id v2 = (id)RemotePairingGetTrustedHostInfoAndReturnError(&v28);
  uint64_t v3 = (void *)v28;
  if (v2)
  {
    id v4 = v2;
    uint64_t v5 = sub_1000ED6E0(&qword_1001E12B8);
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);
    id v7 = v3;

    uint64_t v8 = &_swiftEmptyArrayStorage;
    unint64_t v28 = (unint64_t)&_swiftEmptyArrayStorage;
    uint64_t v9 = *(void *)(v6 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain(v6);
      for (uint64_t i = 0LL; i != v9; ++i)
      {
        uint64_t v12 = *(void *)(v6 + 8 * i + 32);
        uint64_t v27 = v12;
        swift_bridgeObjectRetain(v12);
        sub_1000F1DE0(&v27, &v29);
        uint64_t v13 = swift_bridgeObjectRelease(v12);
        uint64_t v14 = v29;
        if (v29)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          unint64_t v16 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v15 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v16 >= v15 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1LL);
          }
          uint64_t v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
          specialized Array._endMutation()(v11);
        }
      }

      swift_bridgeObjectRelease(v6);
      uint64_t v8 = (void *)v28;
    }

    swift_bridgeObjectRelease(v6);
    a1(v8, 0LL);

    swift_bridgeObjectRelease(v8);
  }

  else
  {
    id v17 = (id)v28;
    if (!v28)
    {
      uint64_t v18 = sub_1000ED6E0(&qword_1001E12B0);
      uint64_t inited = swift_initStackObject(v18, v30);
      *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10012A790;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
      *(void *)(inited + 40) = v20;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 4_Block_object_dispose((const void *)(v29 - 144), 8) = 0xD000000000000019LL;
      *(void *)(inited + 56) = 0x8000000100141150LL;
      unint64_t v21 = sub_1000F2898(inited);
      id v22 = objc_allocWithZone(&OBJC_CLASS___NSError);
      NSString v23 = String._bridgeToObjectiveC()();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v21);
      id v17 = [v22 initWithDomain:v23 code:1 userInfo:isa];
    }

    id v25 = v17;
    id v26 = v3;
    a1(0LL, v25);
  }

uint64_t sub_1000F1DE0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1000ED6E0(&qword_1001E0FE0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for UUID(0LL, v7);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = *a1;
  if (!*(void *)(v15 + 16))
  {
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    goto LABEL_10;
  }

  id v16 = RPTrustedHostInfoKeyIdentifier;
  unint64_t v17 = sub_1000F2DB0((uint64_t)v16);
  if ((v18 & 1) == 0)
  {
    __int128 v35 = 0u;
    __int128 v36 = 0u;

    goto LABEL_10;
  }

  sub_1000ED808(*(void *)(v15 + 56) + 32 * v17, (uint64_t)&v35);

  if (!*((void *)&v36 + 1))
  {
LABEL_10:
    sub_1000ED7AC((uint64_t)&v35, &qword_1001E1118);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v6, 1LL, 1LL, v8);
    goto LABEL_11;
  }

  int v19 = swift_dynamicCast(v6, &v35, (char *)&type metadata for Any + 8, v8, 6LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, v19 ^ 1u, 1LL, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1LL, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v6, v8);
    if (*(void *)(v15 + 16))
    {
      id v20 = RPTrustedHostInfoKeyHostName;
      unint64_t v21 = sub_1000F2DB0((uint64_t)v20);
      if ((v22 & 1) != 0)
      {
        sub_1000ED808(*(void *)(v15 + 56) + 32 * v21, (uint64_t)&v35);
      }

      else
      {
        __int128 v35 = 0u;
        __int128 v36 = 0u;
      }

      if (*((void *)&v36 + 1))
      {
        if ((swift_dynamicCast(v34, &v35, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          uint64_t v37 = v34[0];
          uint64_t v32 = v34[1];
          id v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
          v25(v12, v14, v8);
          id v26 = (objc_class *)type metadata accessor for RemotePairingPairedHost(0LL);
          uint64_t v27 = (char *)objc_allocWithZone(v26);
          v25(&v27[OBJC_IVAR____TtC10TVSettings23RemotePairingPairedHost_identifier], v12, v8);
          unint64_t v28 = &v27[OBJC_IVAR____TtC10TVSettings23RemotePairingPairedHost_name];
          uint64_t v29 = v32;
          *(void *)unint64_t v28 = v37;
          *((void *)v28 + 1) = v29;
          v33.receiver = v27;
          v33.super_class = v26;
          id v24 = objc_msgSendSuper2(&v33, "init");
          uint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
          v30(v12, v8);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)(v14, v8);
          goto LABEL_13;
        }

        goto LABEL_20;
      }
    }

    else
    {
      __int128 v35 = 0u;
      __int128 v36 = 0u;
    }

    sub_1000ED7AC((uint64_t)&v35, &qword_1001E1118);
LABEL_20:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    goto LABEL_12;
  }

id sub_1000F217C()
{
  uint64_t v19 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v1 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = OBJC_IVAR____TtC10TVSettings27RemotePairingPairingManager__remotePairingQueue;
  v17[1] = sub_1000F256C();
  id v10 = v0;
  static DispatchQoS.unspecified.getter(v10);
  unint64_t v21 = &_swiftEmptyArrayStorage;
  uint64_t v11 = sub_1000F25A8( &qword_1001E12C8,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v12 = sub_1000ED6E0(&qword_1001E12D0);
  uint64_t v13 = sub_1000F25E8(&qword_1001E12D8, &qword_1001E12D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v12, v13, v4, v11);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))( v3,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v19);
  uint64_t v14 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000030LL,  0x8000000100141170LL,  v9,  v6,  v3,  0LL);
  *(void *)(v17[2] + v1_Block_object_dispose((const void *)(v29 - 144), 8) = v14;

  uint64_t v15 = (objc_class *)type metadata accessor for RemotePairingPairingManager();
  v20.receiver = v10;
  v20.super_class = v15;
  return objc_msgSendSuper2(&v20, "init");
}

void sub_1000F2370(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa = a1;
  if (a1)
  {
    type metadata accessor for RemotePairingPairedHost(0LL);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }

  if (a2) {
    uint64_t v6 = _convertErrorToNSError(_:)(a2);
  }
  else {
    uint64_t v6 = 0LL;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);
}

id sub_1000F2414(uint64_t a1)
{
  return sub_1000EF6D8(a1, type metadata accessor for RemotePairingPairingManager);
}

uint64_t type metadata accessor for RemotePairingPairingManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC10TVSettings27RemotePairingPairingManager);
}

uint64_t sub_1000F2450()
{
  swift_release(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1000F247C(uint64_t a1, uint64_t a2)
{
  return sub_1000F18D0(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1000F2488()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1000F24AC()
{
}

uint64_t sub_1000F24B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000F24C4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000F24CC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2( 255LL,  (char *)a1 + (int)result,  -(result >> 32),  0LL,  0LL);
    *a1 = result;
  }

  return result;
}

uint64_t sub_1000F2510()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1000F2544()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_1000F256C()
{
  unint64_t result = qword_1001E12C0;
  if (!qword_1001E12C0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_dispatch_queue);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001E12C0);
  }

  return result;
}

uint64_t sub_1000F25A8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = a2(255LL);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1000F25E8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_1000F24CC(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1000F2628()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000F264C(objc_class *a1, uint64_t a2)
{
}

void sub_1000F2654(uint64_t a1)
{
}

unint64_t sub_1000F2668(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000ED6E0((uint64_t *)&unk_1001E1330);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = *(v6 - 3);
    uint64_t v8 = *(v6 - 2);
    uint64_t v10 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    unint64_t result = sub_1000F2D4C(v7, v8);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v13 = (uint64_t *)(v4[6] + 16 * result);
    uint64_t *v13 = v7;
    v13[1] = v8;
    uint64_t v14 = (void *)(v4[7] + 16 * result);
    void *v14 = v10;
    v14[1] = v9;
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, 1LL);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v6 += 4;
    id v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000F2788(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000ED6E0(&qword_1001E1328);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain(v8);
    unint64_t result = sub_1000F2D4C(v7, v8);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    char v12 = (uint64_t *)(v4[6] + 16 * result);
    uint64_t *v12 = v7;
    v12[1] = v8;
    *(void *)(v4[7] + 8 * result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v6 += 3;
    id v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000F2898(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000ED6E0(&qword_1001E1318);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1000F3D20(v7, (uint64_t)&v16, &qword_1001E1320);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_1000F2D4C(v16, v17);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    char v12 = (uint64_t *)(v4[6] + 16 * result);
    uint64_t *v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_1000F3D64(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    id v4[2] = v15;
    v7 += 48LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_1000F2AB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1000ED6E0(&qword_1001E1310);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  unint64_t v23 = 0LL;
  unint64_t v24 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(47LL);
  swift_bridgeObjectRelease(v24);
  unint64_t v23 = 0xD000000000000020LL;
  unint64_t v24 = 0x8000000100141370LL;
  v11._countAndFlagsBits = a2;
  v11._object = a3;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0x6574616D696E6126LL;
  v12._object = (void *)0xED0000657572743DLL;
  String.append(_:)(v12);
  unint64_t v13 = v24;
  URL.init(string:)(v23, v24);
  swift_bridgeObjectRelease(v13);
  id result = [(id)objc_opt_self(LSApplicationWorkspace) defaultWorkspace];
  if (result)
  {
    uint64_t v15 = result;
    sub_1000F3D20((uint64_t)v10, (uint64_t)v8, &qword_1001E1310);
    uint64_t v16 = type metadata accessor for URL(0LL);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v19 = 0LL;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1LL, v16) != 1)
    {
      URL._bridgeToObjectiveC()(v18);
      uint64_t v19 = v20;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
    }

    unint64_t v21 = sub_1000F2898((uint64_t)&_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v21);
    [v15 openSensitiveURL:v19 withOptions:isa];

    return (id)sub_1000ED7AC((uint64_t)v10, &qword_1001E1310);
  }

  else
  {
    __break(1u);
  }

  return result;
}

id sub_1000F2CFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVSettingsUserErrorPresenter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TVSettingsUserErrorPresenter()
{
  return objc_opt_self(&OBJC_CLASS____TtC10TVSettings28TVSettingsUserErrorPresenter);
}

unint64_t sub_1000F2D4C(uint64_t a1, uint64_t a2)
{
  Swift::Int v5 = Hasher._finalize()();
  return sub_1000F2E30(a1, a2, v5);
}

unint64_t sub_1000F2DB0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  uint64_t v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  Swift::Int v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_1000F2F10(a1, v7);
}

unint64_t sub_1000F2E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    uint64_t v11 = v10[1];
    BOOL v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0LL) & 1) == 0)
    {
      uint64_t v13 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v13;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          break;
        }
        BOOL v14 = (void *)(v9 + 16 * v6);
        uint64_t v15 = v14[1];
        BOOL v16 = *v14 == a1 && v15 == a2;
      }

      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0LL) & 1) == 0);
    }
  }

  return v6;
}

unint64_t sub_1000F2F10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(void *)(*(void *)(v2 + 48) + 8 * v5));
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2LL);
      return v5;
    }

    uint64_t v13 = v11;
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0LL);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      uint64_t v15 = ~v4;
      unint64_t v5 = (v5 + 1) & v15;
      if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0)
      {
        while (1)
        {
          uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(void *)(*(void *)(v2 + 48) + 8 * v5));
          uint64_t v9 = v17;
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19) {
            break;
          }
          uint64_t v21 = v19;
          char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0LL);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v15;
            if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0) {
              continue;
            }
          }

          return v5;
        }

        goto LABEL_16;
      }
    }
  }

  return v5;
}

uint64_t sub_1000F3084(uint64_t a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = (id)TSKLocString(v2);

  if (v3)
  {
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = (id)TSKLocString(v5);

  if (v6)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v9 = v8;

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"UserIdentifier");
    uint64_t v12 = v11;
    if (*(void *)(a1 + 16) && (unint64_t v13 = sub_1000F2D4C(v10, v11), (v14 & 1) != 0))
    {
      sub_1000ED808(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v31);
      swift_bridgeObjectRelease(v12);
      if (!*((void *)&v32 + 1))
      {
LABEL_14:
        swift_bridgeObjectRelease(v9);
        sub_1000ED7AC((uint64_t)&v31, &qword_1001E1118);
        return v4;
      }

      uint64_t v15 = v35;
      uint64_t v12 = v36;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"FormattedShortName");
      uint64_t v18 = v17;
      if (*(void *)(a1 + 16) && (unint64_t v19 = sub_1000F2D4C(v16, v17), (v20 & 1) != 0))
      {
        sub_1000ED808(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&v31);
      }

      else
      {
        __int128 v31 = 0u;
        __int128 v32 = 0u;
      }

      swift_bridgeObjectRelease(v18);
      if (*((void *)&v32 + 1))
      {
        if ((swift_dynamicCast(&v35, &v31, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          uint64_t v22 = v35;
          uint64_t v23 = v36;
          uint64_t v24 = sub_1000ED6E0((uint64_t *)&unk_1001E1440);
          uint64_t v25 = swift_allocObject(v24, 72LL, 7LL);
          *(_OWORD *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10012A790;
          *(void *)(v25 + 56) = &type metadata for String;
          *(void *)(v25 + 64) = sub_1000F1294();
          *(void *)(v25 + 32) = v22;
          *(void *)(v25 + 40) = v23;
          String.init(format:_:)(v7, v9, v25);
          uint64_t v27 = v26;
          swift_bridgeObjectRelease(v9);
          uint64_t v28 = swift_allocObject(&unk_100195940, 32LL, 7LL);
          *(void *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = v15;
          *(void *)(v28 + 24) = v12;
          NSString v29 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v27);
          objc_super v33 = sub_1000F3D00;
          uint64_t v34 = v28;
          *(void *)&__int128 v31 = _NSConcreteStackBlock;
          *((void *)&v31 + 1) = 1107296256LL;
          *(void *)&__int128 v32 = sub_1000EE6FC;
          *((void *)&v32 + 1) = &unk_100195958;
          uint64_t v30 = _Block_copy(&v31);
          swift_release(v34);
           [(id)objc_opt_self(UIAlertAction) actionWithTitle:v29 style:0 handler:v30];
          _Block_release(v30);

          return v4;
        }

        swift_bridgeObjectRelease(v12);
LABEL_21:
        swift_bridgeObjectRelease(v9);
        return v4;
      }
    }

    else
    {
      __int128 v31 = 0u;
      __int128 v32 = 0u;
    }

    swift_bridgeObjectRelease(v12);
    goto LABEL_14;
  }

  return v4;
}

uint64_t sub_1000F33C4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    if (a2)
    {
      uint64_t v53 = a2;
      uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)( &type metadata for TVSettingsTapToRepairUserPresenter.CopyStyle,  &v53,  &type metadata for TVSettingsTapToRepairUserPresenter.CopyStyle,  &type metadata for Int);
      __break(1u);
      return result;
    }

    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = (id)TSKLocString(v7);

    if (v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      uint64_t v6 = v9;
    }

    else
    {
      uint64_t v6 = 0LL;
    }

    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = (id)TSKLocString(v33);

    if (v34)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      uint64_t v13 = v35;
    }

    else
    {
      uint64_t v13 = 0LL;
    }

    NSString v36 = String._bridgeToObjectiveC()();
    id v32 = (id)TSKLocString(v36);

    if (!v32)
    {
      uint64_t v17 = 0LL;
      if (!v6) {
        goto LABEL_35;
      }
      goto LABEL_32;
    }

    static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    uint64_t v17 = v37;

    goto LABEL_30;
  }

  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = (id)TSKLocString(v3);

  if (v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    uint64_t v6 = v5;
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = (id)TSKLocString(v10);

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    uint64_t v13 = v12;
  }

  else
  {
    uint64_t v13 = 0LL;
  }

  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = (id)TSKLocString(v14);

  if (v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    uint64_t v17 = v16;
  }

  else
  {
    uint64_t v17 = 0LL;
  }

  swift_getErrorValue(a1, v52, v51);
  uint64_t v18 = dispatch thunk of Error._domain.getter(v51[1], v51[2]);
  uint64_t v20 = v19;
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"TVSettingsUserProfilesValidatorErrorDomain");
  uint64_t v23 = v21;
  if (v18 == v22 && v20 == v21)
  {
    swift_bridgeObjectRelease_n(v20, 2LL);
  }

  else
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v21, 0LL);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v23);
    if ((v24 & 1) == 0)
    {
LABEL_30:
      id v32 = 0LL;
LABEL_31:
      if (!v6) {
        goto LABEL_35;
      }
      goto LABEL_32;
    }
  }

  swift_bridgeObjectRelease(v13);
  swift_getErrorValue(a1, v50, v49);
  Error.localizedDescription.getter(v49[1], v49[2]);
  uint64_t v13 = v25;
  swift_getErrorValue(a1, v48, v47);
  if (dispatch thunk of Error._code.getter(v47[1], v47[2]) != 1) {
    goto LABEL_30;
  }
  swift_getErrorValue(a1, v46, v45);
  uint64_t v26 = dispatch thunk of Error._userInfo.getter(v45[1], v45[2]);
  if (!v26) {
    goto LABEL_30;
  }
  uint64_t v53 = v26;
  uint64_t v27 = sub_1000ED6E0(&qword_1001E1308);
  uint64_t v28 = v44;
  sub_1000F3084(v44);
  uint64_t v30 = v29;
  id v32 = v31;
  swift_bridgeObjectRelease(v28);
  if (!v30) {
    goto LABEL_31;
  }
  swift_bridgeObjectRelease(v17);
  uint64_t v17 = v30;
  if (!v6)
  {
LABEL_35:
    NSString v38 = 0LL;
    if (!v13) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }

LABEL_32:
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  if (!v13)
  {
LABEL_36:
    NSString v39 = 0LL;
    goto LABEL_37;
  }

LABEL_33:
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
LABEL_37:
  id v40 =  [(id)objc_opt_self(UIAlertController) alertControllerWithTitle:v38 message:v39 preferredStyle:1];

  if (v32) {
    [v40 addAction:v32];
  }
  if (v17)
  {
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }

  else
  {
    NSString v41 = 0LL;
  }

  id v42 = [(id)objc_opt_self(UIAlertAction) actionWithTitle:v41 style:1 handler:0];

  [v40 addAction:v42];
  return (uint64_t)v40;
}

id sub_1000F38C0(uint64_t a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = (id)TSKLocString(v2);

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    uint64_t v5 = v4;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = (id)TSKLocString(v6);

  if (v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    uint64_t v9 = v8;
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = (id)TSKLocString(v10);

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    uint64_t v13 = v12;
  }

  else
  {
    uint64_t v13 = 0LL;
  }

  swift_getErrorValue(a1, v47, v46);
  uint64_t v14 = dispatch thunk of Error._domain.getter(v46[1], v46[2]);
  uint64_t v16 = v15;
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"TVSettingsUserProfilesValidatorErrorDomain");
  uint64_t v19 = v17;
  if (v14 == v18 && v16 == v17)
  {
    swift_bridgeObjectRelease_n(v16, 2LL);
  }

  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0LL);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v19);
    if ((v20 & 1) == 0) {
      goto LABEL_25;
    }
  }

  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v5);
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = (id)TSKLocString(v21);

  if (v22)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    uint64_t v5 = v23;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  swift_getErrorValue(a1, v45, v44);
  Error.localizedDescription.getter(v44[1], v44[2]);
  uint64_t v9 = v24;
  swift_getErrorValue(a1, v43, v42);
  if (dispatch thunk of Error._code.getter(v42[1], v42[2]) != 1
    || (swift_getErrorValue(a1, v41, v40), (uint64_t v25 = dispatch thunk of Error._userInfo.getter(v40[1], v40[2])) == 0)
    || (uint64_t v39 = v25,
        uint64_t v26 = sub_1000ED6E0(&qword_1001E1308),
        (swift_dynamicCast(&v38, &v39, (char *)&type metadata for Swift.AnyObject + 8, v26, 6LL) & 1) == 0))
  {
LABEL_25:
    __int128 v31 = 0LL;
    if (v5) {
      goto LABEL_23;
    }
LABEL_26:
    NSString v32 = 0LL;
    if (v9) {
      goto LABEL_24;
    }
    goto LABEL_27;
  }

  uint64_t v27 = v38;
  sub_1000F3084(v38);
  uint64_t v29 = v28;
  __int128 v31 = v30;
  swift_bridgeObjectRelease(v27);
  if (v29)
  {
    swift_bridgeObjectRelease(v13);
    uint64_t v13 = v29;
  }

  if (!v5) {
    goto LABEL_26;
  }
LABEL_23:
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  if (v9)
  {
LABEL_24:
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    goto LABEL_28;
  }

LABEL_27:
  NSString v33 = 0LL;
LABEL_28:
  id v34 =  [(id)objc_opt_self(UIAlertController) alertControllerWithTitle:v32 message:v33 preferredStyle:1];

  if (v31) {
    [v34 addAction:v31];
  }
  if (v13)
  {
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
  }

  else
  {
    NSString v35 = 0LL;
  }

  id v36 = [(id)objc_opt_self(UIAlertAction) actionWithTitle:v35 style:1 handler:0];

  [v34 addAction:v36];
  return v34;
}

uint64_t sub_1000F3CDC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id sub_1000F3D00(uint64_t a1)
{
  return sub_1000F2AB8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1000F3D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000F3D18(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000F3D20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000ED6E0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  return a2;
}

_OWORD *sub_1000F3D64(_OWORD *a1, _OWORD *a2)
{
  __int128 v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

id sub_1000F3D74(uint64_t a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = (id)TSKLocString(v2);

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    uint64_t v5 = v4;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = (id)TSKLocString(v6);

  if (v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    uint64_t v9 = v8;
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  swift_getErrorValue(a1, v44, v43);
  uint64_t v10 = dispatch thunk of Error._domain.getter(v43[1], v43[2]);
  uint64_t v12 = v11;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"TVSettingsUserProfilesValidatorErrorDomain");
  if (v10 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n(v12, 2LL);
  }

  else
  {
    uint64_t v16 = v14;
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0LL);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) == 0)
    {
LABEL_19:
      uint64_t v25 = 0LL;
      goto LABEL_20;
    }
  }

  swift_bridgeObjectRelease(v5);
  swift_getErrorValue(a1, v42, v41);
  Error.localizedDescription.getter(v41[1], v41[2]);
  uint64_t v5 = v18;
  swift_getErrorValue(a1, v40, v39);
  if (dispatch thunk of Error._code.getter(v39[1], v39[2]) != 1) {
    goto LABEL_19;
  }
  swift_getErrorValue(a1, v38, v37);
  uint64_t v19 = dispatch thunk of Error._userInfo.getter(v37[1], v37[2]);
  if (!v19) {
    goto LABEL_19;
  }
  uint64_t v36 = v19;
  uint64_t v20 = sub_1000ED6E0(&qword_1001E1308);
  uint64_t v21 = v35;
  sub_1000F3084(v35);
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  swift_bridgeObjectRelease(v21);
  if (v23)
  {
    swift_bridgeObjectRelease(v9);
    uint64_t v9 = v23;
  }

uint64_t sub_1000F4110()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_1000F61C0(v0, qword_1001E1340);
  sub_1000F6190(v0, (uint64_t)qword_1001E1340);
  return Logger.init(subsystem:category:)( 0xD000000000000021LL,  0x80000001001416D0LL,  0xD000000000000015LL,  0x8000000100141700LL);
}

uint64_t sub_1000F4204(unint64_t a1, char a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_1000F4244(a1, a2);
}

uint64_t sub_1000F4244(unint64_t a1, char a2)
{
  id v5 = &v2[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_suggestedUserIdentifier];
  *(void *)id v5 = 0LL;
  *((void *)v5 + 1) = 0LL;
  NSString v6 = &v2[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_suggestedUserShortName];
  *(void *)NSString v6 = 0LL;
  *((void *)v6 + 1) = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_userType] = a1;
  if (a1 >= 3)
  {
    unint64_t v15 = a1;
    uint64_t v13 = v2;
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)( &type metadata for TVSettingsTapToAddUserPresenter.UserType,  &v15,  &type metadata for TVSettingsTapToAddUserPresenter.UserType,  &type metadata for Int);
    __break(1u);
  }

  else
  {
    uint64_t v7 = qword_10012AA08[a1];
    id v8 = objc_allocWithZone((Class)&OBJC_CLASS___TVSettingsTapToAddUserManager);
    uint64_t v9 = v2;
    id v10 = [v8 initWithUserProfileType:v7];
    *(void *)&v9[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_tapToAddUserManager] = v10;
    v9[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_allowsManualSignIn] = a2 & 1;

    v14.receiver = v9;
    v14.super_class = (Class)type metadata accessor for TVSettingsTapToAddUserPresenter();
    uint64_t v11 = (char *)objc_msgSendSuper2(&v14, "init");
    [*(id *)&v11[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_tapToAddUserManager] setDelegate:v11];
    return (uint64_t)v11;
  }

  return result;
}

char *sub_1000F43C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)[v4 initWithUserType:2 allowsManualSignIn:1];
  id v10 = &v9[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_suggestedUserIdentifier];
  uint64_t v11 = *(void *)&v9[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_suggestedUserIdentifier + 8];
  *(void *)id v10 = a1;
  *((void *)v10 + 1) = a2;
  uint64_t v12 = v9;
  swift_bridgeObjectRelease(v11);
  uint64_t v13 = &v12[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_suggestedUserShortName];
  uint64_t v14 = *(void *)&v12[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_suggestedUserShortName + 8];
  *(void *)uint64_t v13 = a3;
  *((void *)v13 + 1) = a4;

  swift_bridgeObjectRelease(v14);
  return v12;
}

id sub_1000F44B0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_tapToAddUserManager];
  [v1 setDelegate:0];
  [v1 stop];
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for TVSettingsTapToAddUserPresenter();
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_1000F4608(void *a1)
{
  uint64_t v2 = v1;
  objc_super v3 = a1;
  swift_unknownObjectWeakAssign( v1 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_presentingViewController,  a1);
  uint64_t v4 = (char *)[objc_allocWithZone((Class)type metadata accessor for TVSettingsProxCardInstructionsViewController.Configuration()) init];
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = (id)TSKLocString(v5);

  if (v6)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    unint64_t v9 = v8;
  }

  else
  {
    uint64_t v7 = 0LL;
    unint64_t v9 = 0xE000000000000000LL;
  }

  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_userType);
  if (!v10)
  {
    NSString v34 = String._bridgeToObjectiveC()();
    id v35 = (id)TSKLocString(v34);

    if (v35)
    {
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      uint64_t v38 = v37;
    }

    else
    {
      uint64_t v36 = 0LL;
      uint64_t v38 = 0LL;
    }

    uint64_t v49 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title];
    uint64_t v50 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8];
    uint64_t *v49 = v36;
    v49[1] = v38;
    swift_bridgeObjectRelease(v50);
    NSString v51 = String._bridgeToObjectiveC()();
    id v52 = (id)TSKLocString(v51);

    if (v52)
    {
      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
      uint64_t v55 = v54;
    }

    else
    {
      uint64_t v53 = 0LL;
      uint64_t v55 = 0LL;
    }

    unint64_t v56 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body];
    uint64_t v57 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body + 8];
    *unint64_t v56 = v53;
    v56[1] = v55;
    swift_bridgeObjectRelease(v57);
    NSString v58 = String._bridgeToObjectiveC()();
    id v59 = (id)TSKLocString(v58);

    if (!v59)
    {
      uint64_t v60 = 0LL;
      uint64_t v61 = 0LL;
LABEL_31:
      uint64_t v73 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle];
      uint64_t v74 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle + 8];
      *uint64_t v73 = v60;
      v73[1] = v61;
      swift_bridgeObjectRelease(v74);
      NSString v75 = String._bridgeToObjectiveC()();
      id v76 = (id)TSKWiFiLocString(v75);

      if (v76)
      {
        uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
        uint64_t v79 = v78;
      }

      else
      {
        uint64_t v77 = 0LL;
        uint64_t v79 = 0LL;
      }

      unint64_t v80 = &OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions;
      goto LABEL_53;
    }

LABEL_29:
    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
    uint64_t v61 = v72;

    goto LABEL_31;
  }

  if (v10 != 2)
  {
    if (v10 != 1)
    {
      unint64_t v182 = *(void *)(v2 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_userType);
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)( &type metadata for TVSettingsTapToAddUserPresenter.UserType,  &v182,  &type metadata for TVSettingsTapToAddUserPresenter.UserType,  &type metadata for Int);
      __break(1u);
      return;
    }

    NSString v39 = String._bridgeToObjectiveC()();
    id v40 = (id)TSKLocString(v39);

    if (v40)
    {
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      uint64_t v43 = v42;
    }

    else
    {
      uint64_t v41 = 0LL;
      uint64_t v43 = 0LL;
    }

    id v62 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title];
    uint64_t v63 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8];
    uint64_t *v62 = v41;
    v62[1] = v43;
    swift_bridgeObjectRelease(v63);
    NSString v64 = String._bridgeToObjectiveC()();
    id v65 = (id)TSKLocString(v64);

    if (v65)
    {
      uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
      uint64_t v68 = v67;
    }

    else
    {
      uint64_t v66 = 0LL;
      uint64_t v68 = 0LL;
    }

    id v69 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body];
    uint64_t v70 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body + 8];
    *id v69 = v66;
    v69[1] = v68;
    swift_bridgeObjectRelease(v70);
    NSString v71 = String._bridgeToObjectiveC()();
    id v59 = (id)TSKLocString(v71);

    if (!v59)
    {
      uint64_t v60 = 0LL;
      uint64_t v61 = 0LL;
      goto LABEL_31;
    }

    goto LABEL_29;
  }

  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_suggestedUserShortName + 8);
  if (!v11)
  {
    NSString v44 = String._bridgeToObjectiveC()();
    id v45 = (id)TSKLocString(v44);

    if (v45)
    {
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      uint64_t v48 = v47;
    }

    else
    {
      uint64_t v46 = 0LL;
      uint64_t v48 = 0LL;
    }

    unint64_t v106 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title];
    uint64_t v107 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8];
    *unint64_t v106 = v46;
    v106[1] = v48;
    swift_bridgeObjectRelease(v107);
    NSString v108 = String._bridgeToObjectiveC()();
    id v109 = (id)TSKLocString(v108);

    if (v109)
    {
      uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(v109);
      uint64_t v112 = v111;
    }

    else
    {
      uint64_t v110 = 0LL;
      uint64_t v112 = 0LL;
    }

    uint64_t v113 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle];
    uint64_t v114 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle + 8];
    *uint64_t v113 = v110;
    v113[1] = v112;
    swift_bridgeObjectRelease(v114);
    NSString v115 = String._bridgeToObjectiveC()();
    id v116 = (id)TSKWiFiLocString(v115);

    if (v116)
    {
      uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
      uint64_t v103 = v117;
    }

    else
    {
      uint64_t v101 = 0LL;
      uint64_t v103 = 0LL;
    }

    goto LABEL_48;
  }

  uint64_t v178 = v7;
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_suggestedUserShortName);
  swift_bridgeObjectRetain(v11);
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = (id)TSKLocString(v13);

  id v180 = v3;
  if (v14)
  {
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    uint64_t v17 = v16;

    uint64_t v18 = sub_1000ED6E0((uint64_t *)&unk_1001E1440);
    uint64_t v19 = swift_allocObject(v18, 72LL, 7LL);
    *(_OWORD *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10012A790;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_1000F1294();
    *(void *)(v19 + 32) = v12;
    *(void *)(v19 + 40) = v11;
    swift_bridgeObjectRetain(v11);
    uint64_t v20 = String.init(format:_:)(v15, v17, v19);
    uint64_t v22 = v21;
    uint64_t v23 = v17;
    objc_super v3 = v180;
    swift_bridgeObjectRelease(v23);
    uint64_t v24 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title];
    uint64_t v25 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_title + 8];
    *uint64_t v24 = v20;
    v24[1] = v22;
    swift_bridgeObjectRelease(v25);
  }

  uint64_t v179 = v12;
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = (id)TSKLocString(v26);

  if (v27)
  {
    swift_bridgeObjectRelease(v9);
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    uint64_t v30 = v29;

    uint64_t v31 = sub_1000ED6E0((uint64_t *)&unk_1001E1440);
    uint64_t v32 = swift_allocObject(v31, 72LL, 7LL);
    *(_OWORD *)(v32 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10012A790;
    *(void *)(v32 + 56) = &type metadata for String;
    *(void *)(v32 + 64) = sub_1000F1294();
    *(void *)(v32 + 32) = v179;
    *(void *)(v32 + 40) = v11;
    swift_bridgeObjectRetain(v11);
    uint64_t v7 = String.init(format:_:)(v28, v30, v32);
    unint64_t v9 = v33;
    swift_bridgeObjectRelease(v30);
  }

  else
  {
    uint64_t v7 = v178;
  }

  NSString v81 = String._bridgeToObjectiveC()();
  id v82 = (id)TSKLocString(v81);

  if (v82)
  {
    uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
    uint64_t v85 = v84;

    uint64_t v86 = sub_1000ED6E0((uint64_t *)&unk_1001E1440);
    uint64_t v87 = swift_allocObject(v86, 72LL, 7LL);
    *(_OWORD *)(v87 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10012A790;
    *(void *)(v87 + 56) = &type metadata for String;
    *(void *)(v87 + 64) = sub_1000F1294();
    *(void *)(v87 + 32) = v179;
    *(void *)(v87 + 40) = v11;
    swift_bridgeObjectRetain(v11);
    uint64_t v88 = String.init(format:_:)(v83, v85, v87);
    uint64_t v90 = v89;
    uint64_t v91 = v85;
    objc_super v3 = v180;
    swift_bridgeObjectRelease(v91);
    uint64_t v92 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle];
    uint64_t v93 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsTitle + 8];
    *uint64_t v92 = v88;
    v92[1] = v90;
    swift_bridgeObjectRelease(v93);
  }

  NSString v94 = String._bridgeToObjectiveC()();
  id v95 = (id)TSKWiFiLocString(v94);

  if (v95)
  {
    uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
    uint64_t v98 = v97;

    uint64_t v99 = sub_1000ED6E0((uint64_t *)&unk_1001E1440);
    uint64_t v100 = swift_allocObject(v99, 72LL, 7LL);
    *(_OWORD *)(v100 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10012A790;
    *(void *)(v100 + 56) = &type metadata for String;
    *(void *)(v100 + 64) = sub_1000F1294();
    *(void *)(v100 + 32) = v179;
    *(void *)(v100 + 40) = v11;
    uint64_t v101 = String.init(format:_:)(v96, v98, v100);
    uint64_t v103 = v102;
    uint64_t v104 = v98;
    objc_super v3 = v180;
    swift_bridgeObjectRelease(v104);
LABEL_48:
    uint64_t v118 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions];
    uint64_t v105 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructions + 8];
    *uint64_t v118 = v101;
    v118[1] = v103;
    goto LABEL_49;
  }

  uint64_t v105 = v11;
LABEL_49:
  swift_bridgeObjectRelease(v105);
  NSString v119 = String._bridgeToObjectiveC()();
  id v120 = (id)TSKLocString(v119);

  if (v120)
  {
    uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v120);
    uint64_t v79 = v121;
  }

  else
  {
    uint64_t v77 = 0LL;
    uint64_t v79 = 0LL;
  }

  unint64_t v80 = &OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_body;
LABEL_53:
  v122 = (uint64_t *)&v4[*v80];
  uint64_t v123 = v122[1];
  uint64_t *v122 = v77;
  v122[1] = v79;
  swift_bridgeObjectRelease(v123);
  NSString v124 = String._bridgeToObjectiveC()();
  id v125 = (id)TSKLocString(v124);

  if (v125)
  {
    uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)(v125);
    uint64_t v128 = v127;
  }

  else
  {
    uint64_t v126 = 0LL;
    uint64_t v128 = 0LL;
  }

  uint64_t v129 = (uint64_t *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter];
  uint64_t v130 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_instructionsFooter + 8];
  *uint64_t v129 = v126;
  v129[1] = v128;
  swift_bridgeObjectRelease(v130);
  unint64_t v182 = (unint64_t)&_swiftEmptyArrayStorage;
  sub_1000EF884(0LL, &qword_1001E1110, &OBJC_CLASS___UIAction_ptr);
  uint64_t v131 = swift_allocObject(&unk_1001959B0, 24LL, 7LL);
  swift_unknownObjectWeakInit(v131 + 16, v2);
  id v181 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v7,  v9,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1000F6200,  v131);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v181);
  unint64_t v133 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v132 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v133 >= v132 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v132 > 1, v133 + 1, 1LL);
  }
  uint64_t v134 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v133, v181);
  specialized Array._endMutation()(v134);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_allowsManualSignIn) == 1)
  {
    NSString v135 = String._bridgeToObjectiveC()();
    id v136 = (id)TSKLocString(v135);

    if (v136)
    {
      uint64_t v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(v136);
      unint64_t v139 = v138;
    }

    else
    {
      uint64_t v137 = 0LL;
      unint64_t v139 = 0xE000000000000000LL;
    }

    uint64_t v140 = swift_allocObject(&unk_1001959B0, 24LL, 7LL);
    swift_unknownObjectWeakInit(v140 + 16, v2);
    id v141 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v137,  v139,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1000F6244,  v140);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v141);
    unint64_t v143 = *(void *)((v182 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v142 = *(void *)((v182 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v143 >= v142 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v142 > 1, v143 + 1, 1LL);
    }
    uint64_t v144 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v143, v141);
    specialized Array._endMutation()(v144);
  }

  uint64_t v145 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_buttons];
  *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_buttons] = v182;
  swift_bridgeObjectRelease(v145);
  if (v10 == 2)
  {
    NSString v146 = String._bridgeToObjectiveC()();
    id v147 = (id)TSKLocString(v146);

    if (v147)
    {
      uint64_t v148 = static String._unconditionallyBridgeFromObjectiveC(_:)(v147);
      uint64_t v150 = v149;

      uint64_t v151 = *(void *)(v2 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_suggestedUserShortName + 8);
      if (v151)
      {
        uint64_t v152 = *(void *)(v2 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_suggestedUserShortName);
        uint64_t v153 = sub_1000ED6E0((uint64_t *)&unk_1001E1440);
        uint64_t v154 = swift_allocObject(v153, 72LL, 7LL);
        *(_OWORD *)(v154 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10012A790;
        *(void *)(v154 + 56) = &type metadata for String;
        *(void *)(v154 + 64) = sub_1000F1294();
        *(void *)(v154 + 32) = v152;
        *(void *)(v154 + 40) = v151;
        swift_bridgeObjectRetain(v151);
        uint64_t v155 = String.init(format:_:)(v148, v150, v154);
        uint64_t v157 = v156;
        swift_bridgeObjectRelease(v150);
        uint64_t v158 = swift_allocObject(&unk_1001959B0, 24LL, 7LL);
        swift_unknownObjectWeakInit(v158 + 16, v2);
        uint64_t v159 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v155,  v157,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1000F623C,  v158);
        v160 = *(void **)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_footerAction];
        *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_footerAction] = v159;
      }

      else
      {
        swift_bridgeObjectRelease(v150);
      }
    }
  }

  v161 = *(void **)(v2 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_tapToAddUserManager);
  uint64_t v162 = swift_allocObject(&unk_100195A00, 24LL, 7LL);
  *(void *)(v162 + swift_unknownObjectWeakDestroy(v0 + 16) = v161;
  v163 = (id (**)())&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler];
  uint64_t v164 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler];
  uint64_t v165 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_startAdvertisingHandler
                      + 8];
  *v163 = sub_1000F622C;
  v163[1] = (id (*)())v162;
  id v166 = v161;
  sub_1000EF748(v164, v165);
  uint64_t v167 = swift_allocObject(&unk_100195A28, 24LL, 7LL);
  *(void *)(v167 + swift_unknownObjectWeakDestroy(v0 + 16) = v166;
  v168 = (id (**)())&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler];
  uint64_t v169 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler];
  uint64_t v170 = *(void *)&v4[OBJC_IVAR___TVSettingsProxCardInstructionsViewControllerConfiguration_stopAdvertisingHandler + 8];
  *v168 = sub_1000F1284;
  v168[1] = (id (*)())v167;
  id v171 = v166;
  sub_1000EF748(v169, v170);
  id v172 = objc_allocWithZone((Class)type metadata accessor for TVSettingsProxCardInstructionsViewController());
  v173 = v4;
  v174 = (char *)sub_1000ED948(v173);
  swift_unknownObjectWeakAssign( v2 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_instructionsViewController,  v174);
  id v175 = [v3 navigationController];
  if (v175)
  {
    v176 = v175;
    [v175 pushViewController:v174 animated:1];

    v177 = v173;
  }

  else
  {
    [v3 presentViewController:v174 animated:1 completion:0];
    v177 = v174;
    v174 = v173;
  }
}

void sub_1000F5494(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    id v6 = (void *)Strong;
    uint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong( Strong + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_instructionsViewController,  v5);

    if (v7)
    {
      sub_1000EE434();
    }
  }

void sub_1000F5500(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_tapToAddUserManager) stop];
    sub_1000F571C();
    swift_unknownObjectWeakAssign( &v5[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_presentingViewController],  0LL);
    uint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong( &v5[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_delegate],  v6);
    if (v7)
    {
      unint64_t v8 = v7;
      [v7 tapToAddUserPresenterManualSignInTriggered:v5];

      swift_unknownObjectRelease(v8);
    }

    else
    {
    }
  }

void sub_1000F55B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    uint64_t v6 = (char *)Strong;
    uint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong( Strong + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_delegate,  v5);
    if (v7)
    {
      unint64_t v8 = v7;
      [v7 tapToAddUserPresenterDidSuppressSuggestion:v6];
      swift_unknownObjectRelease(v8);
    }

    [*(id *)&v6[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_tapToAddUserManager] stop];
    sub_1000F571C();
    swift_unknownObjectWeakAssign( &v6[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_presentingViewController],  0LL);
  }

void sub_1000F571C()
{
  uint64_t v1 = swift_allocObject(&unk_1001959B0, 24LL, 7LL);
  swift_unknownObjectWeakInit(v1 + 16, v0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( v0 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_presentingViewController,  v2);
  if (!Strong)
  {
    uint64_t v13 = qword_1001E0F38;
    swift_retain(v1);
    if (v13 != -1) {
      swift_once(&qword_1001E0F38, sub_1000F4110);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    uint64_t v15 = sub_1000F6190(v14, (uint64_t)qword_1001E1340);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  v17,  "Attempted to dismiss tap to add user but missing presenting view controller to do so.",  v18,  2u);
      swift_slowDealloc(v18, -1LL, -1LL);
    }

    sub_1000F5CA0(v1);
    goto LABEL_19;
  }

  uint64_t v4 = (void *)Strong;
  swift_retain(v1);
  id v5 = [v4 navigationController];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [v5 topViewController];
    uint64_t v9 = swift_unknownObjectWeakLoadStrong( v0 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_instructionsViewController,  v8);
    uint64_t v10 = (void *)v9;
    if (v7)
    {
      if (v9)
      {
        sub_1000EF884(0LL, (unint64_t *)&unk_1001E1430, &OBJC_CLASS___UIViewController_ptr);
        id v11 = v7;
        char v12 = static NSObject.== infix(_:_:)();

        if ((v12 & 1) == 0)
        {

          goto LABEL_7;
        }

        goto LABEL_14;
      }

      uint64_t v10 = v7;
    }

    else if (!v9)
    {
LABEL_14:
      if (qword_1001E0F38 != -1) {
        swift_once(&qword_1001E0F38, sub_1000F4110);
      }
      uint64_t v19 = type metadata accessor for Logger(0LL);
      uint64_t v20 = sub_1000F6190(v19, (uint64_t)qword_1001E1340);
      uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
      os_log_type_t v22 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  v22,  "Popping tap to add user out of the navigation stack.",  v23,  2u);
        swift_slowDealloc(v23, -1LL, -1LL);
      }

      sub_1000F5CA0(v1);
LABEL_19:
      swift_release_n(v1, 2LL);
      return;
    }

    swift_release(v1);

    goto LABEL_22;
  }

void sub_1000F5CA0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    id v5 = (void *)Strong;
    uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong( Strong + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_delegate,  v4);
    if (v6)
    {
      id v7 = v6;

      swift_unknownObjectRelease(v7);
    }

    else
    {
    }
  }

uint64_t type metadata accessor for TVSettingsTapToAddUserPresenter()
{
  return objc_opt_self(&OBJC_CLASS____TtC10TVSettings31TVSettingsTapToAddUserPresenter);
}

uint64_t *sub_1000F5D90@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  *(void *)a2 = v2;
  *(_BYTE *)(a2 + _Block_object_dispose((const void *)(v29 - 144), 8) = v3;
  return result;
}

void sub_1000F5E8C(void *a1, uint64_t a2, void *a3, void *a4, SEL *a5)
{
  id v13 = a3;
  id v8 = a4;
  uint64_t v9 = a1;
  sub_1000F571C();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong( &v9[OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_delegate],  v10);
  if (Strong)
  {
    char v12 = Strong;
    objc_msgSend(Strong, *a5, v9, v8);

    swift_unknownObjectRelease(v12);
  }

  else
  {
  }
}

ValueMetadata *type metadata accessor for TVSettingsTapToAddUserPresenter.UserType()
{
  return &type metadata for TVSettingsTapToAddUserPresenter.UserType;
}

unint64_t sub_1000F5FE0()
{
  unint64_t result = qword_1001E1420;
  if (!qword_1001E1420)
  {
    unint64_t result = swift_getWitnessTable(&unk_10012A9DC, &type metadata for TVSettingsTapToAddUserPresenter.UserType);
    atomic_store(result, (unint64_t *)&qword_1001E1420);
  }

  return result;
}

uint64_t sub_1000F6024(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong( v2 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_instructionsViewController,  a2);
  if (result)
  {
    uint64_t v4 = (void *)result;
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = (id)TSKLocString(v5);

    if (v6)
    {
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      unint64_t v9 = v8;
    }

    else
    {
      uint64_t v7 = 0LL;
      unint64_t v9 = 0LL;
    }

    sub_1000EE780(v7, v9);

    return swift_bridgeObjectRelease(v9);
  }

  return result;
}

void sub_1000F60D0(uint64_t a1)
{
  id v3 = [objc_allocWithZone((Class)type metadata accessor for TVSettingsUserErrorPresenter()) init];
  id v7 = sub_1000F38C0(a1);

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong( v1 + OBJC_IVAR____TtC10TVSettings31TVSettingsTapToAddUserPresenter_presentingViewController,  v4);
  if (Strong)
  {
    id v6 = Strong;
    [Strong presentViewController:v7 animated:1 completion:0];
  }
}

uint64_t sub_1000F6164()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1000F6188()
{
}

uint64_t sub_1000F6190(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(void *)(a1 - 8) + 82LL) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1000F61A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000F61B8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t *sub_1000F61C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    uint64_t v4 = swift_slowAlloc(*(void *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }

  return a2;
}

void sub_1000F6200(uint64_t a1)
{
}

uint64_t sub_1000F6208()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_1000F622C()
{
  return [*(id *)(v0 + 16) start];
}

void sub_1000F623C(uint64_t a1)
{
}

void sub_1000F6244(uint64_t a1)
{
}

uint64_t sub_1000F6250()
{
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(&OBJC_CLASS____TtC10TVSettingsP33_45AF67EBE21E3E44344C5F37BE1E39D719ResourceBundleClass);
}

void sub_1000F6280(uint64_t *a1, os_log_s *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138543362;
  uint64_t v4 = v2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "TV settings notifications item is missing a localized name. {identifier=%{public}@}",  (uint8_t *)&v3,  0xCu);
}

void sub_1000F62F8(uint64_t a1, os_log_s *a2)
{
  int v2 = 136315394;
  int v3 = "-[TVSettingsAirPlayFacade setSecurityMode:]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "%s: Unable to generate AirPlay password. %@",  (uint8_t *)&v2,  0x16u);
  sub_100008E18();
}

void sub_1000F637C( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000F63EC( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000F645C( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000F64CC()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void RemotePairingPairedHostsChangedHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)"));
  sub_10000D920();
  sub_10000D8E4();
  sub_10000D904( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v1,  "failure in %{public}@ (%{public}@:%i) : %{public}@",  v2,  v3,  v4,  v5,  v6);

  sub_10000D914();
}

void sub_1000F6568()
{
  int v2 = 136315650;
  sub_100010174();
  sub_100010194( (void *)&_mh_execute_header,  v0,  v1,  "%s: Failed to create default home. {delegate=%p, error: %{public}@}",  v2);
  sub_1000101CC();
}

void sub_1000F65D4()
{
}

void sub_1000F6640()
{
  int v2 = 136315650;
  sub_100010174();
  sub_100010194( (void *)&_mh_execute_header,  v0,  v1,  "%s: Failed to create default home. {delegate=%p, error: %{public}@}",  v2);
  sub_1000101CC();
}

void sub_1000F66AC()
{
  int v2 = 136315650;
  sub_100010174();
  sub_100010194( (void *)&_mh_execute_header,  v0,  v1,  "%s: Failed to configure local accessory. {delegate=%p, error: %{public}@}",  v2);
  sub_1000101CC();
}

void sub_1000F6718()
{
}

void sub_1000F6784()
{
}

void sub_1000F67F0(const char *a1, uint64_t a2)
{
  uint64_t v3 = NSStringFromSelector(a1);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = (objc_class *)objc_opt_class(a2);
  uint8_t v6 = NSStringFromClass(v5);
  char v12 = (void *)objc_claimAutoreleasedReturnValue(v6);
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v7,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v8,  v9,  v10,  v11,  2u);

  sub_1000151BC();
}

void sub_1000F68D4(const char *a1)
{
  uint64_t v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_1000151EC();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_100015184();
  sub_1000151CC();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F6978(uint8_t *buf, uint64_t a2, void *a3)
{
  *(_DWORD *)uint64_t buf = 138412290;
  *a3 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Bad term title data, skipping [%@]",  buf,  0xCu);
}

void sub_1000F69C0()
{
}

void sub_1000F6A20()
{
}

void sub_1000F6A80()
{
}

void sub_1000F6AAC()
{
}

void sub_1000F6AD8()
{
}

void sub_1000F6B04()
{
}

void sub_1000F6B30()
{
}

void sub_1000F6B90()
{
}

void sub_1000F6BF0()
{
}

void sub_1000F6C1C()
{
}

void sub_1000F6C7C()
{
}

void sub_1000F6CDC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 selectedBetaSeedProgram]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 title]);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Failed to enroll this Apple TV in the %@ program.",  (uint8_t *)&v3,  0xCu);
}

void sub_1000F6D80(uint8_t *buf, _BYTE *a2)
{
  *uint64_t buf = 0;
  *a2 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Empty name for beta seed program, skipping.",  buf,  2u);
}

void sub_1000F6DC0(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Error loading VPN configurations %@",  (uint8_t *)&v2,  0xCu);
  sub_100008E18();
}

void sub_1000F6E30()
{
}

void sub_1000F6E94()
{
}

void sub_1000F6EF8(id *a1, os_log_s *a2)
{
  id v4 = *a1;
  unsigned int v5 = [*a1 hasiCloudAccount];
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([*a1 iCloudUsername]);
  int v7 = 138413058;
  id v8 = v4;
  __int16 v9 = 1024;
  unsigned int v10 = v5;
  __int16 v11 = 2160;
  uint64_t v12 = 1752392040LL;
  __int16 v13 = 2112;
  uint64_t v14 = v6;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to update FaceTime, there is no iCloud account to prompt for password. {primaryUser=%@, hasiCloudAccount=%{BO OL}d, username=%{mask.hash}@}",  (uint8_t *)&v7,  0x26u);
}

void sub_1000F6FDC(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Missing username or password -- skipping login",  v1,  2u);
}

void sub_1000F701C(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Error authenticating with AuthKit: %{public}@",  (uint8_t *)&v2,  0xCu);
}

void sub_1000F7090()
{
  int v2 = NSStringFromSelector(v1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D950();
  id v4 = NSStringFromClass(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F7138()
{
  int v2 = NSStringFromSelector(v1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D950();
  id v4 = NSStringFromClass(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F71E0()
{
  int v2 = NSStringFromSelector(v1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D950();
  id v4 = NSStringFromClass(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F7288()
{
  int v2 = NSStringFromSelector(v1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D950();
  id v4 = NSStringFromClass(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F7330(const char *a1)
{
  int v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D968();
  id v4 = NSStringFromClass(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D928();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F73E0(const char *a1)
{
  int v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D968();
  id v4 = NSStringFromClass(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D928();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F7490(os_log_t log)
{
  *(_WORD *)SEL v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to switch track audio status", v1, 2u);
}

void sub_1000F74D0(const char *a1)
{
  int v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D950();
  id v4 = NSStringFromClass(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_100042410();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F7574(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Sender: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_1000F75E8(os_log_t log)
{
  *(_WORD *)SEL v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unhandled editing button event", v1, 2u);
}

void sub_1000F7628()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale _deviceLanguage](&OBJC_CLASS___NSLocale, "_deviceLanguage"));
  sub_100042430( (void *)&_mh_execute_header,  v1,  v2,  "Cannot retrieve correct system language info. Using fallback language: %@",  v3,  v4,  v5,  v6,  2u);

  sub_100042444();
}

void sub_1000F76B0()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale _deviceLanguage](&OBJC_CLASS___NSLocale, "_deviceLanguage"));
  sub_100042430( (void *)&_mh_execute_header,  v1,  v2,  "Cannot retrieve correct language info from preferred languages manager. Using fallback language: %@",  v3,  v4,  v5,  v6,  2u);

  sub_100042444();
}

void sub_1000F7738()
{
}

void sub_1000F7798()
{
}

void sub_1000F77F8()
{
}

void sub_1000F7858()
{
}

void sub_1000F78B8(uint64_t a1, os_log_s *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[TVSettingsAboutViewController _setDeviceName:]_block_invoke";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "%s: Unable to set local accessory name. Error: %@",  (uint8_t *)&v2,  0x16u);
}

void sub_1000F7940(uint64_t a1)
{
  int v1 = 138412290;
  uint64_t v2 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Failed to update HMBulletinBoardNotification with error %@",  (uint8_t *)&v1,  0xCu);
}

void sub_1000F79BC(uint64_t a1)
{
  int v1 = 138412290;
  uint64_t v2 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_FAULT,  "Using fallback RegulatoryImage modelNumber '%{Public}@'",  (uint8_t *)&v1,  0xCu);
}

void sub_1000F7A38(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = 134218240;
  uint64_t v5 = v2;
  __int16 v6 = 2048;
  uint64_t v7 = v3;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Cannot rename an unknown device. {configuration=%p, uuid=%p}",  (uint8_t *)&v4,  0x16u);
}

void sub_1000F7AC8(const char *a1)
{
  uint64_t v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D968();
  int v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D928();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F7B78(const char *a1)
{
  uint64_t v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D968();
  int v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D928();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F7C28(const char *a1)
{
  uint64_t v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D968();
  int v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D928();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F7CD8(const char *a1)
{
  uint64_t v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D950();
  int v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F7D8C(uint64_t a1, uint64_t a2)
{
  int v2 = 138543618;
  uint64_t v3 = a1;
  __int16 v4 = 2114;
  uint64_t v5 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Error fetching process handle for bundle ID. {bundleID=%{public}@, error=%{public}@}",  (uint8_t *)&v2,  0x16u);
}

void sub_1000F7E14()
{
}

void sub_1000F7E40()
{
}

void sub_1000F7EA0()
{
}

void sub_1000F7ECC()
{
}

void sub_1000F7F2C()
{
}

void sub_1000F7F8C()
{
}

void sub_1000F7FEC()
{
}

void sub_1000F804C()
{
}

void sub_1000F80AC()
{
}

void sub_1000F810C()
{
}

void sub_1000F816C()
{
}

void sub_1000F8198()
{
}

void sub_1000F81C4()
{
}

void sub_1000F81F0()
{
}

void sub_1000F821C()
{
}

void sub_1000F827C()
{
}

void sub_1000F82DC()
{
}

void sub_1000F833C(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 rawName]);
  sub_1000224E4();
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "OSUpdate configuration profile %{public}@ not found or returned no data.",  v4,  0xCu);
}

void sub_1000F83CC( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000F8434()
{
  __int16 v3 = 2048;
  uint64_t v4 = v0;
  _os_log_error_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_ERROR,  "Failed to set pallas audience to %{public}@ [%lld].",  v2,  0x16u);
  sub_100008E18();
}

void sub_1000F84B0(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = NSStringFromSelector(a1);
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (objc_class *)objc_opt_class(a2);
  uint64_t v8 = NSStringFromClass(v7);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  int v10 = 138544642;
  uint8_t v11 = v6;
  __int16 v12 = 2114;
  __int16 v13 = v9;
  __int16 v14 = 2048;
  uint64_t v15 = a2;
  __int16 v16 = 2114;
  os_log_type_t v17 = @"TVSettingsTapToSetupView.m";
  __int16 v18 = 1024;
  int v19 = 209;
  __int16 v20 = 2114;
  uint64_t v21 = a3;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  (uint8_t *)&v10,  0x3Au);
}

void sub_1000F85AC(uint64_t *a1, os_log_s *a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 24);
  int v5 = 134218240;
  uint64_t v6 = v3;
  __int16 v7 = 2048;
  uint64_t v8 = v4;
  sub_100060CB4( (void *)&_mh_execute_header,  a2,  a3,  "Cannot start, invalid initial state. {self=%p, state=%ld}",  (uint8_t *)&v5);
  sub_100008E18();
}

void sub_1000F8628()
{
  sub_100008E08( (void *)&_mh_execute_header,  v0,  v1,  "Failed to acquire process assertion or it was invalidated. {error=%{public}@}",  v2,  v3,  v4,  v5,  v6);
  sub_100008E18();
}

void sub_1000F8688(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 134218242;
  uint64_t v5 = v3;
  __int16 v6 = 2114;
  uint64_t v7 = a2;
  sub_100060CB4( (void *)&_mh_execute_header,  a3,  (uint64_t)a3,  "Prox repair session error. {self=%p, error=%{public}@}",  (uint8_t *)&v4);
  sub_100008E18();
}

void sub_1000F8704()
{
  sub_100008E08( (void *)&_mh_execute_header,  v0,  v1,  "Failed to save the state of the current persona, before switching to the new persona. {error=%{public}@}",  v2,  v3,  v4,  v5,  v6);
  sub_100008E18();
}

void sub_1000F8764()
{
  __int16 v3 = 2114;
  uint64_t v4 = v0;
  sub_100060CB4( (void *)&_mh_execute_header,  v1,  (uint64_t)v1,  "Failed to change persona context to new persona. {personaUniqueString=%{public}@, error=%{public}@}",  v2);
  sub_100008E18();
}

void sub_1000F87D8(void *a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 identifier]);
  sub_1000224E4();
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  sub_100060CB4( (void *)&_mh_execute_header,  a3,  v6,  "Failed to update user profile. {userProfileIdentifier=%{public}@, attributes=%@}",  v7);
}

void sub_1000F8880(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[TVSStoreURLBag sharedInstance](&OBJC_CLASS___TVSStoreURLBag, "sharedInstance"));
  v3[0] = 67109378;
  v3[1] = [v2 isValid];
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Manage Subscriptions URL not found. {TVSStoreURLBag.isValid=%{BOOL}d, TVSStoreURLBag.itml-app-urls=%@}",  (uint8_t *)v3,  0x12u);
}

void sub_1000F8930(uint64_t *a1, os_log_s *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Error getting subscription status: %@",  (uint8_t *)&v3,  0xCu);
}

void sub_1000F89A8(char a1, void *a2, os_log_s *a3)
{
  int v5 = a1 & 1;
  unsigned int v6 = [a2 locationServicesEnabled];
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a2 timeZoneItem]);
  v8[0] = 67109632;
  v8[1] = v5;
  __int16 v9 = 1024;
  unsigned int v10 = v6;
  __int16 v11 = 1024;
  BOOL v12 = [v7 accessType] == (id)3;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_DEBUG,  "Updating Automatic Time Zone item. internetAvailable=%{BOOL}d, locationServicesEnabled=%{BOOL}d, timeZoneLocationSer vicesAllowed=%{BOOL}d",  (uint8_t *)v8,  0x14u);
}

void sub_1000F8A7C(uint64_t a1, void *a2, os_log_s *a3)
{
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([a2 cityNameForCityID:a1]);
  int v7 = 138412802;
  uint64_t v8 = a1;
  __int16 v9 = 2112;
  unsigned int v10 = v6;
  __int16 v11 = 1024;
  unsigned int v12 = [a2 isAutomaticTimeZoneSelectionEnabled];
  _os_log_debug_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_DEBUG,  "Updating Time Zone item. cityID=%@, cityName=%@, isAutomaticTimeZoneSelectionEnabled=%{BOOL}d",  (uint8_t *)&v7,  0x1Cu);
}

void sub_1000F8B48(uint64_t a1, void *a2, os_log_s *a3)
{
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([a2 domain]);
  int v7 = 138544130;
  uint64_t v8 = a1;
  __int16 v9 = 2114;
  unsigned int v10 = v6;
  __int16 v11 = 2048;
  id v12 = [a2 code];
  __int16 v13 = 2112;
  __int16 v14 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Failed to remove account. {identifier=%{public}@, errorDomain=%{public}@, errorCode=%ld, error=%@}",  (uint8_t *)&v7,  0x2Au);
}

void sub_1000F8C1C(void *a1, os_log_s *a2)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 domain]);
  int v5 = 138543874;
  unsigned int v6 = v4;
  __int16 v7 = 2048;
  id v8 = [a1 code];
  __int16 v9 = 2112;
  unsigned int v10 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Error fetching all iCloud and Game Center accounts. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  (uint8_t *)&v5,  0x20u);
}

void sub_1000F8CDC()
{
}

void sub_1000F8D50()
{
}

void sub_1000F8DC4()
{
}

void sub_1000F8E38()
{
}

void sub_1000F8EAC()
{
}

void sub_1000F8F20()
{
}

void sub_1000F8F94()
{
}

void sub_1000F9008()
{
  id v1 = [(id)sub_10007B138(v0) name];
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  sub_10007B110();
  sub_10007B0EC( (void *)&_mh_execute_header,  v3,  v4,  "%@ failed to %@ doorbell notifications with error %@",  v5,  v6,  v7,  v8,  2u);

  sub_10007B100();
}

void sub_1000F90A8()
{
  id v2 = [(id)sub_10007B138(v1) name];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = sub_100079AC0(*(void *)(v0 + 40));
  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10007B0EC( (void *)&_mh_execute_header,  v5,  v6,  "%@ failed to set smart notifications state to %@ with error %@",  v7,  v8,  v9,  v10,  2u);

  sub_10007B100();
}

void sub_1000F9150()
{
  id v1 = [(id)sub_10007B138(v0) name];
  id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  sub_10007B110();
  sub_10007B0EC( (void *)&_mh_execute_header,  v3,  v4,  "%@ failed to %@ legacy motion notifications with error %@",  v5,  v6,  v7,  v8,  2u);

  sub_10007B100();
}

void sub_1000F91F0()
{
  id v2 = [(id)sub_10007B138(v1) name];
  objc_claimAutoreleasedReturnValue(v2);
  sub_10007B144();
  sub_10007B0EC( (void *)&_mh_execute_header,  v3,  v4,  "%@ failed to toggle activity type %lu with error %@",  v5,  v6,  v7,  v8,  2u);

  sub_10007B100();
}

void sub_1000F9288()
{
  id v2 = [(id)sub_10007B138(v1) name];
  objc_claimAutoreleasedReturnValue(v2);
  sub_10007B144();
  sub_10007B110();
  sub_10007B0EC( (void *)&_mh_execute_header,  v3,  v4,  "%@ failed to set motion bulletin condition to %@ with error %@",  v5,  v6,  v7,  v8,  2u);

  sub_10007B100();
}

void sub_1000F930C()
{
  id v2 = [(id)sub_10007B138(v1) name];
  objc_claimAutoreleasedReturnValue(v2);
  sub_10007B144();
  sub_10007B110();
  sub_10007B0EC( (void *)&_mh_execute_header,  v3,  v4,  "%@ failed to set smart bulletin condition to %@ with error %@",  v5,  v6,  v7,  v8,  2u);

  sub_10007B100();
}

void sub_1000F9390(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Continuity camera discovery session failed to activate with error: %@",  (uint8_t *)&v2,  0xCu);
}

void sub_1000F9404(uint64_t a1)
{
  int v1 = 138412546;
  uint64_t v2 = 0LL;
  __int16 v3 = 2112;
  uint64_t v4 = a1;
  _os_log_debug_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEBUG,  "Skipping %@ - %@ location bundle because it's not in our allow list",  (uint8_t *)&v1,  0x16u);
}

void sub_1000F948C(uint64_t a1)
{
  uint64_t v2 = NSStringFromSelector(*(SEL *)(a1 + 64));
  objc_claimAutoreleasedReturnValue(v2);
  __int16 v3 = (objc_class *)sub_10007EE0C();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10007EDE4();
  sub_10007EE28();
  sub_10007EE18();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F9540(uint64_t a1)
{
  uint64_t v2 = NSStringFromSelector(*(SEL *)(a1 + 64));
  objc_claimAutoreleasedReturnValue(v2);
  __int16 v3 = (objc_class *)sub_10007EE0C();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10007EDE4();
  sub_10007EE28();
  sub_10007EE18();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F95F4(uint64_t a1)
{
  uint64_t v2 = NSStringFromSelector(*(SEL *)(a1 + 64));
  objc_claimAutoreleasedReturnValue(v2);
  __int16 v3 = (objc_class *)sub_10007EE0C();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10007EDE4();
  sub_10007EE28();
  sub_10007EE18();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F96A8()
{
  uint64_t v0 = (objc_class *)objc_opt_class(&OBJC_CLASS___TVSBluetoothDevice);
  int v1 = NSStringFromClass(v0);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_FAULT,  "Bluetooth Info VC expected an object of class: %@",  (uint8_t *)&v3,  0xCu);
}

void sub_1000F9748(uint64_t a1)
{
  int v1 = 138412290;
  uint64_t v2 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Unable to load What's New : %@",  (uint8_t *)&v1,  0xCu);
}

void sub_1000F97C4(const char *a1)
{
  uint64_t v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  int v3 = (objc_class *)sub_10002D950();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F9880(const char *a1)
{
  uint64_t v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  int v3 = (objc_class *)sub_10002D950();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000F993C(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = NSStringFromSelector(a1);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (objc_class *)objc_opt_class(a2);
  uint64_t v8 = NSStringFromClass(v7);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  int v10 = 138544642;
  uint8_t v11 = v6;
  __int16 v12 = 2114;
  __int16 v13 = v9;
  __int16 v14 = 2048;
  uint64_t v15 = a2;
  __int16 v16 = 2114;
  os_log_type_t v17 = @"TVSettingsUsageFacade.m";
  __int16 v18 = 1024;
  int v19 = 87;
  __int16 v20 = 2114;
  uint64_t v21 = a3;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  (uint8_t *)&v10,  0x3Au);
}

void sub_1000F9A38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138543618;
  uint64_t v4 = v2;
  __int16 v5 = 2114;
  uint64_t v6 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Failed to uninstall application. {bundleIdentifier=%{public}@, error=%{public}@}",  (uint8_t *)&v3,  0x16u);
}

void sub_1000F9AC4(void *a1)
{
  unsigned int v2 = [a1 hasiCloudAccount];
  int v3 = (void *)objc_claimAutoreleasedReturnValue([a1 iCloudUsername]);
  int v4 = 138413058;
  __int16 v5 = a1;
  __int16 v6 = 1024;
  unsigned int v7 = v2;
  __int16 v8 = 2160;
  uint64_t v9 = 1752392040LL;
  __int16 v10 = 2112;
  uint8_t v11 = v3;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Request to reduce security failed, there is no iCloud account to prompt for password. {primaryUser=%@, hasiCloudAcco unt=%{BOOL}d, username=%{mask.hash}@}",  (uint8_t *)&v4,  0x26u);
}

void sub_1000F9BA0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000F9C0C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000F9C80()
{
  sub_10007B0EC( (void *)&_mh_execute_header,  v2,  v3,  "Failed to create persona. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  v4,  v5,  v6,  v7,  v8);

  sub_10007B100();
}

void sub_1000F9CFC(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = NSStringFromSelector(a1);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (objc_class *)objc_opt_class(a2);
  uint8_t v8 = NSStringFromClass(v7);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  sub_10009A198();
  uint64_t v13 = v10;
  __int16 v14 = 2048;
  uint64_t v15 = a2;
  __int16 v16 = v11;
  os_log_type_t v17 = @"TVSettingsUserProfileListFacade.m";
  __int16 v18 = 1024;
  int v19 = 798;
  __int16 v20 = v11;
  uint64_t v21 = a3;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v12,  0x3Au);
}

void sub_1000F9DEC()
{
  sub_10007B0EC( (void *)&_mh_execute_header,  v2,  v3,  "Finished with error. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  v4,  v5,  v6,  v7,  v8);

  sub_10007B100();
}

void sub_1000F9E68(uint64_t a1, void *a2, os_log_s *a3)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) selectedUser]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 identifier]);
  uint8_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) identifier]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([a2 domain]);
  [a2 code];
  sub_10009A198();
  uint64_t v13 = v8;
  __int16 v14 = v10;
  uint64_t v15 = v9;
  __int16 v16 = 2048;
  uint64_t v17 = v11;
  __int16 v18 = 2112;
  int v19 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Failed to switch selected user. {currentUserIdentifier=%{public}@, newUserIdentifier=%{public}@, errorDomain=%{publi c}@, errorCode=%ld, error=%@}",  v12,  0x34u);
}

void sub_1000F9F78(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) userProfilesSnapshot]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 userProfiles]);
  [v2 count];
  sub_1000224E4();
  sub_10009A168( (void *)&_mh_execute_header,  v3,  v4,  "Processing PineBoard user profiles did update. {userProfilesCount=%ld}",  v5,  v6,  v7,  v8,  v9);

  sub_10009A188();
}

void sub_1000FA00C(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) suggestedUserProfileSnapshot]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 suggestedUserProfiles]);
  [v2 count];
  sub_1000224E4();
  sub_10009A168( (void *)&_mh_execute_header,  v3,  v4,  "Processing PineBoard suggested user profiles did update. {suggestedUserProfilesCount=%ld}",  v5,  v6,  v7,  v8,  v9);

  sub_10009A188();
}

void sub_1000FA0A0(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v3 = *(void *)(a1 + 40);
  int v4 = 134218242;
  uint64_t v5 = v3;
  __int16 v6 = 2114;
  uint64_t v7 = a2;
  sub_100060CB4( (void *)&_mh_execute_header,  a3,  (uint64_t)a3,  "Failed to add user. {profileKind=%ld, error=%{public}@}",  (uint8_t *)&v4);
  sub_100008E18();
}

void sub_1000FA11C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100008E08( (void *)&_mh_execute_header,  a2,  a3,  "Authentication completed but self is gone. {userProfileType=%ld}",  a5,  a6,  a7,  a8,  0);
  sub_100008E18();
}

void sub_1000FA184()
{
  _os_log_fault_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "Invalid state, there is a persona present when adding a Primary user. {personaUniqueString=%{public}@}",  v1,  0xCu);
  sub_100008E18();
}

void sub_1000FA1F0(uint64_t a1, void *a2)
{
  sub_10009A144( (void *)&_mh_execute_header,  v3,  v4,  "Error authenticating account for new user. {userProfileType=%ld, errorDomain=%{public}@, errorCode=%ld, error=%@}",  v5,  v6,  v7,  v8,  v9);

  sub_10009A158();
}

void sub_1000FA278()
{
  sub_100008E08( (void *)&_mh_execute_header,  v0,  v1,  "Failed to acquire process assertion. {error=%{public}@}",  v2,  v3,  v4,  v5,  v6);
  sub_100008E18();
}

void sub_1000FA2D8()
{
  sub_10007B0EC( (void *)&_mh_execute_header,  v2,  v3,  "Sign In iTunes failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  v4,  v5,  v6,  v7,  v8);

  sub_10007B100();
}

void sub_1000FA354()
{
  sub_10007B0EC( (void *)&_mh_execute_header,  v2,  v3,  "Sign in Game Center failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  v4,  v5,  v6,  v7,  v8);

  sub_10007B100();
}

void sub_1000FA3D0()
{
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_debug_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEBUG,  "Game Center sign in finished. {player=%@, error=%@}",  v2,  0x16u);
  sub_100008E18();
}

void sub_1000FA44C()
{
  sub_10007B0EC( (void *)&_mh_execute_header,  v2,  v3,  "Failed to save the state of the current persona, before switching to the new persona. {errorDomain=%{public}@, error Code=%ld, error=%@}",  v4,  v5,  v6,  v7,  v8);

  sub_10007B100();
}

void sub_1000FA4C8(uint64_t a1, void *a2)
{
  sub_10009A144( (void *)&_mh_execute_header,  v3,  v4,  "Failed to change persona context to new persona. {personaUniqueString=%{public}@, errorDomain=%{public}@, errorCode=%ld, error=%@}",  v5,  v6,  v7,  v8,  v9);

  sub_10009A158();
}

void sub_1000FA550()
{
  sub_100008E08((void *)&_mh_execute_header, v0, v1, "iCloud Sign In failed. {error=%{public}@}", v2, v3, v4, v5, v6);
  sub_100008E18();
}

void sub_1000FA5B0()
{
  __int16 v5 = 2112;
  uint64_t v6 = v2;
  sub_100060CB4( (void *)&_mh_execute_header,  v0,  v3,  "Failed to create user profile. {userProfileType=%ld, attributes=%@}",  v4);
}

void sub_1000FA640()
{
  sub_100008E08( (void *)&_mh_execute_header,  v0,  v1,  "Cannot display error dialog, missing presenting view controller. {error=%{public}@}",  v2,  v3,  v4,  v5,  v6);
  sub_100008E18();
}

void sub_1000FA6A0(uint64_t a1, void *a2)
{
  sub_10009A144( (void *)&_mh_execute_header,  v3,  v4,  "Failed to delete newly created persona. {personaUniqueString=%{public}@, errorDomain=%{public}@, errorCode=%ld, error=%@}",  v5,  v6,  v7,  v8,  v9);

  sub_10009A158();
}

void sub_1000FA728(void *a1, void *a2, os_log_s *a3)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a1 identifier]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a1 iCloudAltDSID]);
  unsigned int v8 = [a2 hasiCloudAccount];
  uint8_t v9 = (void *)objc_claimAutoreleasedReturnValue([a1 iTunesAltDSID]);
  unsigned int v10 = [a2 hasiTunesAccount];
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([a1 gameCenterAltDSID]);
  int v12 = 138545666;
  uint64_t v13 = v6;
  __int16 v14 = 2160;
  uint64_t v15 = 1752392040LL;
  __int16 v16 = 2112;
  uint64_t v17 = v7;
  __int16 v18 = 1024;
  unsigned int v19 = v8;
  __int16 v20 = 2160;
  uint64_t v21 = 1752392040LL;
  __int16 v22 = 2112;
  uint64_t v23 = v9;
  __int16 v24 = 1024;
  unsigned int v25 = v10;
  __int16 v26 = 2160;
  uint64_t v27 = 1752392040LL;
  __int16 v28 = 2112;
  uint64_t v29 = v11;
  __int16 v30 = 1024;
  unsigned int v31 = [a2 hasGameCenterAccount];
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Nothing to finish signing in for user, all services are set. {identifier=%{public}@, iCloudAltDSID=%{mask.hash}@, ha siCloudAccount=%{BOOL}d, iTunesAltDSID=%{mask.hash}@, hasiTunesAccount=%{BOOL}d, gameCenterAltDSID=%{mask.hash}@, ha sGameCenterAccount=%{BOOL}d}",  (uint8_t *)&v12,  0x5Au);
}

void sub_1000FA894(void *a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1 user]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 userProfile]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 identifier]);
  int v8 = 138543618;
  uint8_t v9 = v7;
  __int16 v10 = 2048;
  uint64_t v11 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Failed single service user repair, missing service type to sign in. {identifier=%{public}@, serviceType=%ld}",  (uint8_t *)&v8,  0x16u);
}

void sub_1000FA968(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to repair user. {error=%{public}@}",  (uint8_t *)&v2,  0xCu);
}

void sub_1000FA9DC(void *a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a2 localizedDescription]);
  int v5 = 138543362;
  uint64_t v6 = v4;
  _os_log_error_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Error loading intents capable apps: %{public}@",  (uint8_t *)&v5,  0xCu);
}

void sub_1000FAA80(uint64_t a1, uint64_t a2)
{
  int v2 = 138543618;
  uint64_t v3 = a1;
  __int16 v4 = 2114;
  uint64_t v5 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Cannot create a containerized preference without domain or container path. {domain=%{public}@, containerPath=%{public}@}",  (uint8_t *)&v2,  0x16u);
}

void sub_1000FAB08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int v2 = 138543362;
  uint64_t v3 = v1;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Invalid preference key, it is either nil or empty. {domain=%{public}@}",  (uint8_t *)&v2,  0xCu);
}

void sub_1000FAB88(uint64_t a1)
{
  int v1 = 138412290;
  uint64_t v2 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_FAULT,  "#Alert #SYSTEM App OTA rejected for invalid URL (%@)",  (uint8_t *)&v1,  0xCu);
}

void sub_1000FAC04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412546;
  uint64_t v4 = v2;
  __int16 v5 = 2114;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_FAULT,  "#Alert #SYSTEM Failed to add manifest request %@ : %{public}@",  (uint8_t *)&v3,  0x16u);
}

void sub_1000FAC90()
{
}

void sub_1000FAD00()
{
}

void sub_1000FAD70(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = NSStringFromSelector(a1);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (objc_class *)objc_opt_class(a2);
  int v8 = NSStringFromClass(v7);
  uint8_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  int v10 = 138544642;
  uint64_t v11 = v6;
  __int16 v12 = 2114;
  uint64_t v13 = v9;
  __int16 v14 = 2048;
  uint64_t v15 = a2;
  __int16 v16 = 2114;
  uint64_t v17 = @"TVSettingsSelectIRConfigurationViewController.m";
  __int16 v18 = 1024;
  int v19 = 138;
  __int16 v20 = 2114;
  uint64_t v21 = a3;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  (uint8_t *)&v10,  0x3Au);
}

void sub_1000FAE70(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = NSStringFromSelector(*(SEL *)(a1 + 48));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (objc_class *)objc_opt_class(*a2);
  int v8 = NSStringFromClass(v7);
  uint8_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  uint64_t v10 = *a2;
  int v11 = 138544642;
  __int16 v12 = v6;
  __int16 v13 = 2114;
  __int16 v14 = v9;
  __int16 v15 = 2048;
  uint64_t v16 = v10;
  __int16 v17 = 2114;
  __int16 v18 = @"TVSettingsHDMIEnforcer.m";
  __int16 v19 = 1024;
  int v20 = 309;
  __int16 v21 = 2114;
  uint64_t v22 = a3;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  (uint8_t *)&v11,  0x3Au);
}

void sub_1000FAF74()
{
}

void sub_1000FAFE8()
{
}

void sub_1000FB050()
{
  sub_1000944F8( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v0,  "Dequeue of TVSettingsBluetoothCell returned nil. Path: %{public}@.",  v1,  v2,  v3,  v4,  v5);
  sub_100008E18();
}

uint64_t sub_1000FB0B8()
{
  uint64_t v0 = dlerror();
  uint64_t v1 = abort_report_np("%s", v0);
  return sub_1000FB0D8(v1);
}

void sub_1000FB0D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FB10C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FB140(void *a1, char a2)
{
  v4[0] = 67109632;
  v4[1] = [a1 cachedAudioOutputDeviceType];
  __int16 v5 = 1024;
  unsigned int v6 = [a1 cachedAudioOutputDeviceSubtype];
  __int16 v7 = 1024;
  int v8 = a2 & 1;
  _os_log_debug_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEBUG,  "Caching audio output device: %u / %u ht:%{BOOL}d",  (uint8_t *)v4,  0x14u);
}

void sub_1000FB1FC()
{
}

void sub_1000FB270()
{
  *(_WORD *)uint64_t v0 = 0;
  _os_log_debug_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEBUG,  "Updating audio endpoint info.",  v0,  2u);
  sub_1000224F0();
}

void sub_1000FB2B0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FB2E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FB318( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FB34C(uint64_t a1, os_log_s *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[TVSettingsAirPlayViewController _setDeviceName:]_block_invoke";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "%s: Unable to set local accessory name. Error: %@",  (uint8_t *)&v2,  0x16u);
}

void sub_1000FB3D4(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 localizedDescription]);
  int v4 = 138543362;
  uint64_t v5 = v3;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Error setting audio category: %{public}@",  (uint8_t *)&v4,  0xCu);
}

void sub_1000FB468(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Failed to setup crossfade because _queuePlayer was nil",  v1,  2u);
}

void sub_1000FB4A8()
{
}

void sub_1000FB4D4()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void RecognizeMyVoiceChangedHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)"));
  int v2 = 138544130;
  uint64_t v3 = v0;
  sub_1000D24BC();
  sub_1000D2450();
  sub_1000D24B0( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v1,  "failure in %{public}@ (%{public}@:%i) : %{public}@",  (uint8_t *)&v2);

  sub_10000D914();
}

void sub_1000FB57C()
{
}

void sub_1000FB5A8(id *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*a1 userProfile]);
  sub_1000224E4();
  sub_1000D242C( (void *)&_mh_execute_header,  v2,  v3,  "iCloud ACAccount for the user was not found. {userProfile=%@}",  v4,  v5,  v6,  v7,  v8);

  sub_1000101CC();
}

void sub_1000FB628()
{
  _os_log_fault_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "Failed to register ACMonitoredAccountStore. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  v3,  0x20u);

  sub_10007B100();
}

void sub_1000FB6B4(const char *a1)
{
  id v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D968();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D928();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000FB764(void *a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 identifier]);
  sub_1000D24C8();
  sub_100060CB4( (void *)&_mh_execute_header,  a3,  v5,  "Failed to sign out of service, account no found. Removing from profile. {userIdentifier=%{public}@, serviceType=%ld}",  v6);

  sub_10009A188();
}

void sub_1000FB7F0(void *a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 identifier]);
  sub_1000D24C8();
  sub_100060CB4( (void *)&_mh_execute_header,  a3,  v5,  "User cannot sign out of its last service, remove the user instead. {userIdentifier=%{public}@, serviceType=%ld}",  v6);

  sub_10009A188();
}

#error "1000FB904: call analysis failed (funcsize=44)"
void sub_1000FB934()
{
  void *v0;
  SEL v1;
  NSString *v2;
  objc_class *v3;
  NSString *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t v11;
  sub_10002D95C();
  id v2 = NSStringFromSelector(v1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D950();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000FB9DC(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 24) identifier]);
  sub_1000224E4();
  sub_1000D242C( (void *)&_mh_execute_header,  v2,  v3,  "User removal already in progress, ignoring request to remove user. {userIdentifier=%{public}@}",  v4,  v5,  v6,  v7,  v8);

  sub_1000101CC();
}

void sub_1000FBA60()
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v3 + 32) identifier]);
  objc_claimAutoreleasedReturnValue([v1 domain]);
  sub_1000D2518();
  sub_1000D23FC();
  sub_1000D23F0( (void *)&_mh_execute_header,  v0,  v5,  "Failed to remove user profile. {userIdentifier=%{public}@, errorDomain=%{public}@, errorCode=%ld, error=%@}",  v6);

  sub_10009A158();
}

void sub_1000FBAFC()
{
  uint64_t v4 = *(void *)(v3 + 32);
  objc_claimAutoreleasedReturnValue([v5 domain]);
  sub_10009A138();
  int v8 = 138544130;
  uint64_t v9 = v4;
  sub_1000D24BC();
  uint64_t v10 = v2;
  __int16 v11 = 2048;
  uint64_t v12 = v6;
  __int16 v13 = 2112;
  uint64_t v14 = v1;
  sub_1000D23F0( (void *)&_mh_execute_header,  v0,  v7,  "Failed to deleted persona. {personaUniqueString=%{public}@, errorDomain=%{public}@, errorCode=%ld, error=%@}",  (uint8_t *)&v8);

  sub_10009A158();
}

void sub_1000FBBAC()
{
  sub_10007B0EC( (void *)&_mh_execute_header,  v2,  v3,  "Failed to sign out of Home Sharing. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  v4,  v5,  v6,  v7,  v8);

  sub_10007B100();
}

void sub_1000FBC28()
{
  uint64_t v3 = v0;
  _os_log_error_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_ERROR,  "Cannot show iCloud Terms UI, account not found. {userIdentifier=%{public}@, altDSID=%{mask.hash}@}",  v2,  0x20u);
  sub_1000101CC();
}

void sub_1000FBCA0()
{
  uint64_t v2 = NSStringFromSelector(v1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D950();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000FBD48()
{
  SEL v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v0 + 32) identifier]);
  sub_1000224E4();
  sub_10007B0EC( (void *)&_mh_execute_header,  v2,  v3,  "Recognize My Voice session failed handler called. {userIdentifier=%{public}@, request=%@ error=%{public}@}",  v4,  v5,  v6,  v7,  v8);

  sub_10007B100();
}

void sub_1000FBDE4()
{
}

void sub_1000FBE10()
{
  uint64_t v2 = NSStringFromSelector(v1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D950();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D8E0();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

#error "1000FBF30: call analysis failed (funcsize=39)"
void sub_1000FBF5C(const char *a1)
{
  void *v1;
  NSString *v2;
  objc_class *v3;
  NSString *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t v11;
  uint64_t v2 = NSStringFromSelector(a1);
  objc_claimAutoreleasedReturnValue(v2);
  uint64_t v3 = (objc_class *)sub_10002D968();
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_10002D928();
  sub_10002D908();
  sub_10002D918();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v6,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v7,  v8,  v9,  v10,  v11);

  sub_1000151BC();
}

void sub_1000FC00C(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  int v3 = 134218240;
  uint64_t v4 = a1;
  __int16 v5 = 2048;
  uint64_t v6 = a2;
  sub_100060CB4( (void *)&_mh_execute_header,  a3,  (uint64_t)a3,  "Update iCloud Photo Settings callback called but there is no account to update. {self_ptr=%p, account_ptr=%p}",  (uint8_t *)&v3);
  sub_100008E18();
}

void sub_1000FC084()
{
}

void sub_1000FC0B0()
{
  sub_10007B0EC( (void *)&_mh_execute_header,  v2,  v3,  "Failed to authenticate to set iCloud Photo setting for the device. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  v4,  v5,  v6,  v7,  v8);

  sub_10007B100();
}

void sub_1000FC12C()
{
  id v3 = *v2;
  unsigned int v4 = [*v2 hasiCloudAccount];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*v1 iCloudUsername]);
  int v7 = 138413058;
  id v8 = v3;
  __int16 v9 = 1024;
  unsigned int v10 = v4;
  __int16 v11 = 2160;
  uint64_t v12 = 1752392040LL;
  __int16 v13 = 2112;
  uint64_t v14 = v5;
  sub_1000D24B0( (void *)&_mh_execute_header,  v0,  v6,  "Failed to authenticate to set iCloud Photo setting, there is no iCloud account to prompt for password. {user=%@, has iCloudAccount=%{BOOL}d, username=%{mask.hash}@}",  (uint8_t *)&v7);

  sub_10007B100();
}

void sub_1000FC1F8(uint64_t a1)
{
  uint64_t v2 = NSStringFromSelector(*(SEL *)(a1 + 64));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  unsigned int v4 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v5 = NSStringFromClass(v4);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  sub_10007EDE4();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v7,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v8,  v9,  v10,  v11,  v12);

  sub_1000151BC();
}

void sub_1000FC2C4()
{
  uint64_t v4 = v3[10];
  uint64_t v5 = v3[5];
  BOOL v6 = v3[6] == 0LL;
  objc_claimAutoreleasedReturnValue([v7 domain]);
  int v8 = 138544642;
  uint64_t v9 = v5;
  __int16 v10 = 2048;
  uint64_t v11 = v4;
  __int16 v12 = 1024;
  BOOL v13 = v6;
  __int16 v14 = 2114;
  __int16 v15 = v2;
  __int16 v16 = 2048;
  id v17 = sub_10009A138();
  __int16 v18 = 2112;
  uint64_t v19 = v1;
  _os_log_error_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_ERROR,  "Error updating profile account. {identifier=%{public}@, serviceType=%ld, isRemovingService=%{BOOL}d errorDomain=%{pu blic}@, errorCode=%ld, error=%@}",  (uint8_t *)&v8,  0x3Au);
}

void sub_1000FC3B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, int a10, __int16 a11, __int16 a12, id a13, __int128 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  a23 = v26;
  a24 = v27;
  sub_10002D95C();
  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v28 + 32) user]);
  __int16 v30 = (void *)objc_claimAutoreleasedReturnValue([v29 userProfile]);
  id v31 = [v30 type];
  id v32 = (void *)objc_claimAutoreleasedReturnValue([v25 domain]);
  id v33 = [v25 code];
  LODWORD(va_start(va, a9) = 134218754;
  *(void *)((char *)&a9 + 4) = v31;
  WORD6(va_start(va, a9) = 2114;
  *(void *)((char *)&a9 + 14) = v32;
  a12 = 2048;
  a13 = v33;
  LOWORD(a14) = 2112;
  *(void *)((char *)&a14 + 2) = v25;
  sub_1000D23F0( (void *)&_mh_execute_header,  v24,  v34,  "Error authenticating account. {userProfileType=%ld, errorDomain=%{public}@, errorCode=%ld, error=%@}",  (uint8_t *)&a9);

  sub_1000D23AC();
}

void sub_1000FC498( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  a23 = v25;
  a24 = v26;
  uint64_t v28 = v27;
  __int16 v30 = v29;
  id v32 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v31 + 40) user]);
  id v33 = (void *)objc_claimAutoreleasedReturnValue([v32 userProfile]);
  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v33 identifier]);
  objc_claimAutoreleasedReturnValue([v30 domain]);
  sub_1000D2490();
  sub_1000D23C0();
  sub_1000D23F0( (void *)&_mh_execute_header,  v28,  v35,  "Sign In iCloud failed. {userIdentifier=%{public}@, errorDomain=%{public}@, errorCode=%ld, error=%@}",  &a9);

  sub_1000D23AC();
}

void sub_1000FC558()
{
  uint64_t v2 = NSStringFromSelector(*(SEL *)(v1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (objc_class *)objc_opt_class(*v0);
  uint64_t v5 = NSStringFromClass(v4);
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  sub_10007EDE4();
  sub_1000151AC( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v7,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  v8,  v9,  v10,  v11,  v12);

  sub_1000151BC();
}

void sub_1000FC620( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  a23 = v25;
  a24 = v26;
  uint64_t v28 = v27;
  __int16 v30 = v29;
  id v32 = (void *)objc_claimAutoreleasedReturnValue([*v31 user]);
  id v33 = (void *)objc_claimAutoreleasedReturnValue([v32 userProfile]);
  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v33 identifier]);
  objc_claimAutoreleasedReturnValue([v30 domain]);
  sub_1000D2490();
  sub_1000D23C0();
  sub_1000D23F0( (void *)&_mh_execute_header,  v28,  v35,  "Sign In iTunes failed. {userIdentifier=%{public}@, errorDomain=%{public}@, errorCode=%ld, error=%@}",  &a9);

  sub_1000D23AC();
}

void sub_1000FC6E0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  a23 = v25;
  a24 = v26;
  uint64_t v28 = v27;
  __int16 v30 = v29;
  id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 user]);
  id v33 = (void *)objc_claimAutoreleasedReturnValue([v32 userProfile]);
  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v33 identifier]);
  objc_claimAutoreleasedReturnValue([v30 domain]);
  sub_1000D2490();
  sub_1000D23C0();
  sub_1000D23F0( (void *)&_mh_execute_header,  v28,  v35,  "Sign In Game Center failed. {userIdentifier=%{public}@, errorDomain=%{public}@, errorCode=%ld, error=%@}",  &a9);

  sub_1000D23AC();
}

void sub_1000FC79C(id *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*a1 userProfile]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 personaUniqueString]);
  sub_1000224E4();
  sub_1000D242C( (void *)&_mh_execute_header,  v3,  v4,  "Non primary user is missing the persona unique string. {userIdentifier=%{public}@}",  v5,  v6,  v7,  v8,  v9);

  sub_10009A188();
}

void sub_1000FC82C()
{
  sub_1000D23F0( (void *)&_mh_execute_header,  v0,  v3,  "Failed to change persona context to new persona. {personaUniqueString=%{public}@, errorDomain=%{public}@, errorCode=%ld, error=%@}",  v4);

  sub_10009A158();
}

void sub_1000FC8B4()
{
  _os_log_error_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_ERROR,  "Cannot display error dialog, missing presenting view controller. {error=%{public}@}",  v1,  0xCu);
  sub_100008E18();
}

void sub_1000FC920(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v4 = 138543618;
  uint64_t v5 = v1;
  sub_1000D24BC();
  uint64_t v6 = v2;
  sub_100060CB4( (void *)&_mh_execute_header,  v3,  (uint64_t)v3,  "Failed to acquire process assertion. {explanation=%{public}@, error=%{public}@}",  (uint8_t *)&v4);
  sub_100008E18();
}

void sub_1000FC998( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, __int128 a11, __int128 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23)
{
  a22 = v26;
  a23 = v27;
  sub_10007B128();
  int v29 = *(unsigned __int8 *)(v28 + 64);
  __int16 v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v28 + 32) identifier]);
  id v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v25 + 32) iCloudAltDSID]);
  a9 = 67110146;
  a10 = v29;
  LOWORD(a11) = 2114;
  *(void *)((char *)&a11 + 2) = v30;
  WORD5(a11) = 2160;
  *(void *)((char *)&a11 + 12) = 1752392040LL;
  WORD2(a12) = 2112;
  *(void *)((char *)&a12 + 6) = v31;
  HIWORD(a12) = 2114;
  a13 = v24;
  _os_log_error_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "Failed to set recognize my voice state. {attemptedToSetStateTo=%{BOOL}d, userIdentifier=%{public}@, altDSID=%{mask.h ash}@, error=%{public}@}",  (uint8_t *)&a9,  0x30u);

  sub_1000D23AC();
}

void sub_1000FCA78()
{
  int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v3 + 32) identifier]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v2 + 32) iCloudAltDSID]);
  int v8 = 138544130;
  uint8_t v9 = v4;
  sub_1000D2470();
  uint64_t v10 = v6;
  __int16 v11 = 2114;
  uint64_t v12 = v1;
  sub_1000D23F0( (void *)&_mh_execute_header,  v0,  v7,  "Failed to fetch initial voice profile state. {userIdentifier=%{public}@, altDSID=%{mask.hash}@, error=%{public}@}",  (uint8_t *)&v8);

  sub_10009A158();
}

void sub_1000FCB2C()
{
}

void sub_1000FCB58( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FCBC0( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FCC28(void *a1)
{
  sub_10007B0EC( (void *)&_mh_execute_header,  v2,  v3,  "Failed to create persona. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  v4,  v5,  v6,  v7,  v8);

  sub_10007B100();
}

void sub_1000FCCA8(uint64_t *a1, os_log_s *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "No error creating the persona but there is no personaUniqueString, bailing out. {dict=%@}",  (uint8_t *)&v3,  0xCu);
}

void sub_1000FCD20(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to acquire process assertion. {error=%{public}@}",  (uint8_t *)&v2,  0xCu);
}

void sub_1000FCD94(void *a1)
{
  sub_10007B0EC( (void *)&_mh_execute_header,  v2,  v3,  "Failed to save the state of the current persona, before switching to the new persona. {errorDomain=%{public}@, error Code=%ld, error=%@}",  v4,  v5,  v6,  v7,  v8);

  sub_10007B100();
}

void sub_1000FCE14(uint64_t a1, void *a2)
{
  sub_10009A144( (void *)&_mh_execute_header,  v3,  v4,  "Failed to change persona context to new persona. {personaUniqueString=%{public}@, errorDomain=%{public}@, errorCode=%ld, error=%@}",  v5,  v6,  v7,  v8,  v9);

  sub_10009A158();
}

void sub_1000FCEA0(uint64_t a1, void *a2)
{
  sub_10009A144( (void *)&_mh_execute_header,  v3,  v4,  "AuthenticateAccounts: session error. {self=%p, errorDomain=%{public}@, errorCode=%ld, error=%@}",  v5,  v6,  v7,  v8,  v9);

  sub_10009A158();
}

void sub_1000FCF28(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Tap to add finished without error and without any signed in account, no user will be created.",  v1,  2u);
}

void sub_1000FCF68(uint64_t a1, os_log_s *a2)
{
  id v4 = [*(id *)(a1 + 32) type];
  uint64_t v5 = *(void *)(a1 + 32);
  int v6 = 134218242;
  id v7 = v4;
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to create user profile. {userProfileType=%ld, attributes=%@}",  (uint8_t *)&v6,  0x16u);
}

void sub_1000FD008(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = NSStringFromSelector(*(SEL *)(a1 + 40));
  int v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (objc_class *)objc_opt_class(*a2);
  __int16 v8 = NSStringFromClass(v7);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  uint64_t v10 = *a2;
  int v11 = 138544642;
  uint64_t v12 = v6;
  __int16 v13 = 2114;
  __int16 v14 = v9;
  __int16 v15 = 2048;
  uint64_t v16 = v10;
  __int16 v17 = 2114;
  __int16 v18 = @"TVSettingsTapToAddUserManager.m";
  __int16 v19 = 1024;
  int v20 = 511;
  __int16 v21 = 2114;
  uint64_t v22 = a3;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  (uint8_t *)&v11,  0x3Au);
}

void sub_1000FD114(uint64_t a1, os_log_s *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "+[TVSettingsCRDViewController _removeFromHomeAndEnableEveryTimeCode]_block_invoke";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "%s Failed to remove accessory from home. %@",  (uint8_t *)&v2,  0x16u);
}

void sub_1000FD19C(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = NSStringFromSelector(a1);
  int v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (objc_class *)objc_opt_class(a2);
  __int16 v8 = NSStringFromClass(v7);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  int v10 = 138544642;
  int v11 = v6;
  __int16 v12 = 2114;
  __int16 v13 = v9;
  __int16 v14 = 2048;
  uint64_t v15 = a2;
  __int16 v16 = 2114;
  __int16 v17 = @"TVSettingsHomeKitUpdateOSViewController.m";
  __int16 v18 = 1024;
  int v19 = 95;
  __int16 v20 = 2114;
  uint64_t v21 = a3;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@",  (uint8_t *)&v10,  0x3Au);
}

void sub_1000FD298(void *a1, os_log_s *a2)
{
  __int16 v4 = (void *)objc_claimAutoreleasedReturnValue([a1 domain]);
  int v5 = 138543874;
  int v6 = v4;
  __int16 v7 = 2048;
  id v8 = [a1 code];
  __int16 v9 = 2112;
  int v10 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Surrogate UI authentication failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  (uint8_t *)&v5,  0x20u);
}

void sub_1000FD358( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FD38C( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FD3C0(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2114;
  uint64_t v6 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "No active user, URL requires active user to navigate to the proper screen. Falling back to Accounts screen. {url=%@, root=%{public}@}",  (uint8_t *)&v3,  0x16u);
}

void sub_1000FD444( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FD474( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FD4A4( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000FD4D4(uint64_t a1, os_log_s *a2)
{
  int v2 = 136315394;
  int v3 = "-[TVSettingsAirPlayAccessViewController _setAirPlayPassword:]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "%s: Unable to save AirPlay password. %@",  (uint8_t *)&v2,  0x16u);
}

void sub_1000FD55C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100008E08( (void *)&_mh_execute_header,  a2,  a3,  "Failed to delete IR device. {error=%{public}@}",  a5,  a6,  a7,  a8,  2u);
}

void sub_1000FD5C4( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100008E08( (void *)&_mh_execute_header,  a2,  a3,  "Failed to rename IR device. {error=%{public}@}",  a5,  a6,  a7,  a8,  2u);
}

void sub_1000FD62C(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Primary user has no language information? {primaryUser=%{public}@",  (uint8_t *)&v2,  0xCu);
}

void sub_1000FD6A0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000E9D90( (void *)&_mh_execute_header,  "Game Center account is already in use by existing user. {existingUserProfileIdentifier=%{public}@, existingUserProfile=%@}",  v4,  v5);
}

void sub_1000FD6E8(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000E9D90( (void *)&_mh_execute_header,  "iCloud account is already in use by existing user. {existingUserProfileIdentifier=%{public}@, existingUserProfile=%@}",  v4,  v5);
}

void sub_1000FD730(void *a1, void *a2)
{
  uint64_t v3 = a1;
  __int16 v4 = (void *)objc_claimAutoreleasedReturnValue([a2 domain]);
  int v5 = 138543874;
  uint64_t v6 = v4;
  __int16 v7 = 2048;
  id v8 = [a2 code];
  __int16 v9 = 2112;
  int v10 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Failed to remove sandbox account. {errorDomain=%{public}@, errorCode=%ld, error=%@}",  (uint8_t *)&v5,  0x20u);
}

id objc_msgSend_CATransform3DValue(void *a1, const char *a2, ...)
{
  return _[a1 CATransform3DValue];
}

id objc_msgSend_CECConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 CECConfiguration];
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGPointValue(void *a1, const char *a2, ...)
{
  return _[a1 CGPointValue];
}

id objc_msgSend_HDMIFirmwareVersion(void *a1, const char *a2, ...)
{
  return _[a1 HDMIFirmwareVersion];
}

id objc_msgSend_HDR10ChromaFormatter(void *a1, const char *a2, ...)
{
  return _[a1 HDR10ChromaFormatter];
}

id objc_msgSend_HDR10ChromaSubsampling(void *a1, const char *a2, ...)
{
  return _[a1 HDR10ChromaSubsampling];
}

id objc_msgSend_HTTP2RelayURL(void *a1, const char *a2, ...)
{
  return _[a1 HTTP2RelayURL];
}

id objc_msgSend_HTTP3RelayURL(void *a1, const char *a2, ...)
{
  return _[a1 HTTP3RelayURL];
}

id objc_msgSend_IPAddress(void *a1, const char *a2, ...)
{
  return _[a1 IPAddress];
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_MSOSettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "MSOSettingsNeededForBundleID:");
}

id objc_msgSend_RJ45EthernetInterface(void *a1, const char *a2, ...)
{
  return _[a1 RJ45EthernetInterface];
}

id objc_msgSend_SDRChromaFormatter(void *a1, const char *a2, ...)
{
  return _[a1 SDRChromaFormatter];
}

id objc_msgSend_SDRChromaSubsampling(void *a1, const char *a2, ...)
{
  return _[a1 SDRChromaSubsampling];
}

id objc_msgSend_SDRColorMapping(void *a1, const char *a2, ...)
{
  return _[a1 SDRColorMapping];
}

id objc_msgSend_SDRColorMappingFormatter(void *a1, const char *a2, ...)
{
  return _[a1 SDRColorMappingFormatter];
}

id objc_msgSend_UIBackgroundModes(void *a1, const char *a2, ...)
{
  return _[a1 UIBackgroundModes];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLAssetWithURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLAssetWithURL:options:");
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:");
}

id objc_msgSend_URLQueryAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLQueryAllowedCharacterSet];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_VPN(void *a1, const char *a2, ...)
{
  return _[a1 VPN];
}

id objc_msgSend_WiFiInterface(void *a1, const char *a2, ...)
{
  return _[a1 WiFiInterface];
}

id objc_msgSend__CRDBackgroundPhotoViewController(void *a1, const char *a2, ...)
{
  return _[a1 _CRDBackgroundPhotoViewController];
}

id objc_msgSend__MPMusicResolutionForAudioQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_MPMusicResolutionForAudioQuality:");
}

id objc_msgSend__URLQueryParameterAllowedCharacters(void *a1, const char *a2, ...)
{
  return _[a1 _URLQueryParameterAllowedCharacters];
}

id objc_msgSend__VPNProfileLoaded_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_VPNProfileLoaded:error:");
}

id objc_msgSend___moveOrAddLocalAccessoryToRoom_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__moveOrAddLocalAccessoryToRoom:inHome:");
}

id objc_msgSend___moveOrAddLocalAccessoryToRoomWithName_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__moveOrAddLocalAccessoryToRoomWithName:inHome:");
}

id objc_msgSend__abortWaitingForConfigurationStateChange(void *a1, const char *a2, ...)
{
  return _[a1 _abortWaitingForConfigurationStateChange];
}

id objc_msgSend__accessibilitySettingsBundlePath(void *a1, const char *a2, ...)
{
  return _[a1 _accessibilitySettingsBundlePath];
}

id objc_msgSend__accessory(void *a1, const char *a2, ...)
{
  return _[a1 _accessory];
}

id objc_msgSend__acquireAssertionsWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acquireAssertionsWithName:");
}

id objc_msgSend__actionItemForSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionItemForSource:");
}

id objc_msgSend__actionItemForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionItemForStyle:");
}

id objc_msgSend__activationDelayItem(void *a1, const char *a2, ...)
{
  return _[a1 _activationDelayItem];
}

id objc_msgSend__addBoundaryTimeObservers(void *a1, const char *a2, ...)
{
  return _[a1 _addBoundaryTimeObservers];
}

id objc_msgSend__addGuestUserDeepLinkKey(void *a1, const char *a2, ...)
{
  return _[a1 _addGuestUserDeepLinkKey];
}

id objc_msgSend__addGuestUserGroup(void *a1, const char *a2, ...)
{
  return _[a1 _addGuestUserGroup];
}

id objc_msgSend__addImageToAnimationContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addImageToAnimationContainer:");
}

id objc_msgSend__addPowerMenuItemsTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPowerMenuItemsTo:");
}

id objc_msgSend__addPrimaryUserDeepLinkKey(void *a1, const char *a2, ...)
{
  return _[a1 _addPrimaryUserDeepLinkKey];
}

id objc_msgSend__addUserDeepLinkKeyForSuggestedUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addUserDeepLinkKeyForSuggestedUser:");
}

id objc_msgSend__addUserProfileFacadeObservers(void *a1, const char *a2, ...)
{
  return _[a1 _addUserProfileFacadeObservers];
}

id objc_msgSend__addVolumeMenuItemsTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVolumeMenuItemsTo:");
}

id objc_msgSend__adjustState(void *a1, const char *a2, ...)
{
  return _[a1 _adjustState];
}

id objc_msgSend__adoptPersona(void *a1, const char *a2, ...)
{
  return _[a1 _adoptPersona];
}

id objc_msgSend__advanceMoreInfoItem(void *a1, const char *a2, ...)
{
  return _[a1 _advanceMoreInfoItem];
}

id objc_msgSend__aerialOptionsItem(void *a1, const char *a2, ...)
{
  return _[a1 _aerialOptionsItem];
}

id objc_msgSend__afterTerminatingAppsRemoveUserWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_afterTerminatingAppsRemoveUserWithCompletion:");
}

id objc_msgSend__allSharingFilters(void *a1, const char *a2, ...)
{
  return _[a1 _allSharingFilters];
}

id objc_msgSend__allowRestrictBoolFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _allowRestrictBoolFormatter];
}

id objc_msgSend__allowRestrictFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _allowRestrictFormatter];
}

id objc_msgSend__allowedPhotoCollectionGroups(void *a1, const char *a2, ...)
{
  return _[a1 _allowedPhotoCollectionGroups];
}

id objc_msgSend__allowedSystemApps(void *a1, const char *a2, ...)
{
  return _[a1 _allowedSystemApps];
}

id objc_msgSend__animateInVideoPlayerView(void *a1, const char *a2, ...)
{
  return _[a1 _animateInVideoPlayerView];
}

id objc_msgSend__appleConnect(void *a1, const char *a2, ...)
{
  return _[a1 _appleConnect];
}

id objc_msgSend__appleIDs(void *a1, const char *a2, ...)
{
  return _[a1 _appleIDs];
}

id objc_msgSend__appleIdOptions(void *a1, const char *a2, ...)
{
  return _[a1 _appleIdOptions];
}

id objc_msgSend__appleRemoteSettingGroups(void *a1, const char *a2, ...)
{
  return _[a1 _appleRemoteSettingGroups];
}

id objc_msgSend__areDisplayFiltersEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _areDisplayFiltersEnabled];
}

id objc_msgSend__atmosOptionFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _atmosOptionFormatter];
}

id objc_msgSend__attributedStringForAlertDetailMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedStringForAlertDetailMessage:");
}

id objc_msgSend__attributedStringWithString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedStringWithString:attributes:");
}

id objc_msgSend__attributesWithFont_color_kerning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributesWithFont:color:kerning:");
}

id objc_msgSend__audiencesForTrainAudience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_audiencesForTrainAudience:");
}

id objc_msgSend__audioLanguageFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _audioLanguageFormatter];
}

id objc_msgSend__audioQualityForMPMusicResolution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_audioQualityForMPMusicResolution:");
}

id objc_msgSend__authenticateForServiceType_presentingViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authenticateForServiceType:presentingViewController:completion:");
}

id objc_msgSend__autoConfigureViewControllerWithTitle_message_interface_dnsOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autoConfigureViewControllerWithTitle:message:interface:dnsOnly:");
}

id objc_msgSend__autocapitalizationTypeFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autocapitalizationTypeFromString:");
}

id objc_msgSend__autocorrectionTypeFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autocorrectionTypeFromString:");
}

id objc_msgSend__availableDefaultAudioLanguages(void *a1, const char *a2, ...)
{
  return _[a1 _availableDefaultAudioLanguages];
}

id objc_msgSend__availableDefaultSubtitleLanguages(void *a1, const char *a2, ...)
{
  return _[a1 _availableDefaultSubtitleLanguages];
}

id objc_msgSend__availableLocalesUpdated(void *a1, const char *a2, ...)
{
  return _[a1 _availableLocalesUpdated];
}

id objc_msgSend__baselineOffsetFromBottom(void *a1, const char *a2, ...)
{
  return _[a1 _baselineOffsetFromBottom];
}

id objc_msgSend__beginHomeKitSetup(void *a1, const char *a2, ...)
{
  return _[a1 _beginHomeKitSetup];
}

id objc_msgSend__bluetoothDevice(void *a1, const char *a2, ...)
{
  return _[a1 _bluetoothDevice];
}

id objc_msgSend__booksRatingFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _booksRatingFormatter];
}

id objc_msgSend__buildActionImageViews(void *a1, const char *a2, ...)
{
  return _[a1 _buildActionImageViews];
}

id objc_msgSend__byteCountFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _byteCountFormatter];
}

id objc_msgSend__callCompletionHandlerWithPasscode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callCompletionHandlerWithPasscode:");
}

id objc_msgSend__canProgramBluetoothRemote(void *a1, const char *a2, ...)
{
  return _[a1 _canProgramBluetoothRemote];
}

id objc_msgSend__cancelConnectionTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelConnectionTimer];
}

id objc_msgSend__categoriesGroup(void *a1, const char *a2, ...)
{
  return _[a1 _categoriesGroup];
}

id objc_msgSend__checkForPreloadCompletion(void *a1, const char *a2, ...)
{
  return _[a1 _checkForPreloadCompletion];
}

id objc_msgSend__checkLanguageListForUserProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkLanguageListForUserProfile:");
}

id objc_msgSend__childPanelItemForSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_childPanelItemForSource:");
}

id objc_msgSend__childPanelItemForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_childPanelItemForStyle:");
}

id objc_msgSend__chooseScreenSaverItem(void *a1, const char *a2, ...)
{
  return _[a1 _chooseScreenSaverItem];
}

id objc_msgSend__cleanUp(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUp];
}

id objc_msgSend__cleanUpAfterSigningInOrOut(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpAfterSigningInOrOut];
}

id objc_msgSend__clearDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearDevices:");
}

id objc_msgSend__clearLastKnownDeviceSyncState(void *a1, const char *a2, ...)
{
  return _[a1 _clearLastKnownDeviceSyncState];
}

id objc_msgSend__clearPendingCompletion(void *a1, const char *a2, ...)
{
  return _[a1 _clearPendingCompletion];
}

id objc_msgSend__completeSetCurrentConfiguration_withData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeSetCurrentConfiguration:withData:error:");
}

id objc_msgSend__completeWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeWithResult:");
}

id objc_msgSend__conditionForTriggerTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_conditionForTriggerTime:");
}

id objc_msgSend__configurationForAudience_inTrain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationForAudience:inTrain:");
}

id objc_msgSend__configurationWithHierarchicalColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationWithHierarchicalColors:");
}

id objc_msgSend__configureButtonStackForAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureButtonStackForAction:");
}

id objc_msgSend__configureDNSAddressVC(void *a1, const char *a2, ...)
{
  return _[a1 _configureDNSAddressVC];
}

id objc_msgSend__configureIPAddressVC(void *a1, const char *a2, ...)
{
  return _[a1 _configureIPAddressVC];
}

id objc_msgSend__configureItemFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _configureItemFormatter];
}

id objc_msgSend__configurePairingManager(void *a1, const char *a2, ...)
{
  return _[a1 _configurePairingManager];
}

id objc_msgSend__configureRouterAddressVC(void *a1, const char *a2, ...)
{
  return _[a1 _configureRouterAddressVC];
}

id objc_msgSend__configureSubnetMaskVC(void *a1, const char *a2, ...)
{
  return _[a1 _configureSubnetMaskVC];
}

id objc_msgSend__confirmCECVolumeControlForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_confirmCECVolumeControlForConfiguration:");
}

id objc_msgSend__connectToIMAgent(void *a1, const char *a2, ...)
{
  return _[a1 _connectToIMAgent];
}

id objc_msgSend__contentFilterRegionFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _contentFilterRegionFormatter];
}

id objc_msgSend__convertTimeToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertTimeToString:");
}

id objc_msgSend__crdView(void *a1, const char *a2, ...)
{
  return _[a1 _crdView];
}

id objc_msgSend__createCustomPhotoCollectionGroups(void *a1, const char *a2, ...)
{
  return _[a1 _createCustomPhotoCollectionGroups];
}

id objc_msgSend__createItemWithInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createItemWithInfo:");
}

id objc_msgSend__createLayerForImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createLayerForImage:");
}

id objc_msgSend__createSFService(void *a1, const char *a2, ...)
{
  return _[a1 _createSFService];
}

id objc_msgSend__crossfadeToImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_crossfadeToImage:");
}

id objc_msgSend__currentAudienceOverride(void *a1, const char *a2, ...)
{
  return _[a1 _currentAudienceOverride];
}

id objc_msgSend__currentQueueSize(void *a1, const char *a2, ...)
{
  return _[a1 _currentQueueSize];
}

id objc_msgSend__currentUserGroup(void *a1, const char *a2, ...)
{
  return _[a1 _currentUserGroup];
}

id objc_msgSend__debugNameForCloudStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugNameForCloudStatus:");
}

id objc_msgSend__debugNameForSyncState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugNameForSyncState:");
}

id objc_msgSend__decodeTermsData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decodeTermsData:");
}

id objc_msgSend__deepLinkKeyForUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deepLinkKeyForUser:");
}

id objc_msgSend__defaultAttributesForFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultAttributesForFont:");
}

id objc_msgSend__deletePersonaIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _deletePersonaIfNeeded];
}

id objc_msgSend__deleteSiriHistoryStateString(void *a1, const char *a2, ...)
{
  return _[a1 _deleteSiriHistoryStateString];
}

id objc_msgSend__descriptionForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_descriptionForConfiguration:");
}

id objc_msgSend__descriptionForToggleViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_descriptionForToggleViewModel:");
}

id objc_msgSend__destroyPairingManager(void *a1, const char *a2, ...)
{
  return _[a1 _destroyPairingManager];
}

id objc_msgSend__deviceAccountsGroup(void *a1, const char *a2, ...)
{
  return _[a1 _deviceAccountsGroup];
}

id objc_msgSend__deviceLanguage(void *a1, const char *a2, ...)
{
  return _[a1 _deviceLanguage];
}

id objc_msgSend__devicePairingAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_devicePairingAction:");
}

id objc_msgSend__deviceSortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 _deviceSortDescriptors];
}

id objc_msgSend__dictationDescription(void *a1, const char *a2, ...)
{
  return _[a1 _dictationDescription];
}

id objc_msgSend__dismiss(void *a1, const char *a2, ...)
{
  return _[a1 _dismiss];
}

id objc_msgSend__dismissError(void *a1, const char *a2, ...)
{
  return _[a1 _dismissError];
}

id objc_msgSend__displayNameForCertificate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayNameForCertificate:");
}

id objc_msgSend__displayNameFromConfigurationName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayNameFromConfigurationName:");
}

id objc_msgSend__displayPlaceholderView(void *a1, const char *a2, ...)
{
  return _[a1 _displayPlaceholderView];
}

id objc_msgSend__dissolveToPendingView(void *a1, const char *a2, ...)
{
  return _[a1 _dissolveToPendingView];
}

id objc_msgSend__doorbellBulletinNotification(void *a1, const char *a2, ...)
{
  return _[a1 _doorbellBulletinNotification];
}

id objc_msgSend__downloadFrequencyItem(void *a1, const char *a2, ...)
{
  return _[a1 _downloadFrequencyItem];
}

id objc_msgSend__edgeAntialiasingOnSelectedRestrictedToLeftRightEdge(void *a1, const char *a2, ...)
{
  return _[a1 _edgeAntialiasingOnSelectedRestrictedToLeftRightEdge];
}

id objc_msgSend__elapsedTimeSinceStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_elapsedTimeSinceStartTime:");
}

id objc_msgSend__enableEdgeAntialiasingOnSelected(void *a1, const char *a2, ...)
{
  return _[a1 _enableEdgeAntialiasingOnSelected];
}

id objc_msgSend__enhanceDialogueFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _enhanceDialogueFormatter];
}

id objc_msgSend__enhanceDialogueLevelPrefKey(void *a1, const char *a2, ...)
{
  return _[a1 _enhanceDialogueLevelPrefKey];
}

id objc_msgSend__enhanceDialogueLevelsDescriptionFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _enhanceDialogueLevelsDescriptionFormatter];
}

id objc_msgSend__enhanceDialogueSupportsAXLevels(void *a1, const char *a2, ...)
{
  return _[a1 _enhanceDialogueSupportsAXLevels];
}

id objc_msgSend__enumerateValidColorModesFromSortedModes_existingFiltering_withBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateValidColorModesFromSortedModes:existingFiltering:withBlock:");
}

id objc_msgSend__existingFaceTimeAccount(void *a1, const char *a2, ...)
{
  return _[a1 _existingFaceTimeAccount];
}

id objc_msgSend__explicitMusicFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _explicitMusicFormatter];
}

id objc_msgSend__facade(void *a1, const char *a2, ...)
{
  return _[a1 _facade];
}

id objc_msgSend__fetchAppUsageInfo(void *a1, const char *a2, ...)
{
  return _[a1 _fetchAppUsageInfo];
}

id objc_msgSend__fetchAppleRemotePairedState(void *a1, const char *a2, ...)
{
  return _[a1 _fetchAppleRemotePairedState];
}

id objc_msgSend__fetchBackupLocalConfigurations(void *a1, const char *a2, ...)
{
  return _[a1 _fetchBackupLocalConfigurations];
}

id objc_msgSend__fetchConfigurations(void *a1, const char *a2, ...)
{
  return _[a1 _fetchConfigurations];
}

id objc_msgSend__fetchCurrentConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _fetchCurrentConfiguration];
}

id objc_msgSend__fetchPhotoCollectionGroups(void *a1, const char *a2, ...)
{
  return _[a1 _fetchPhotoCollectionGroups];
}

id objc_msgSend__fetchPhotoCollections(void *a1, const char *a2, ...)
{
  return _[a1 _fetchPhotoCollections];
}

id objc_msgSend__fillQueue(void *a1, const char *a2, ...)
{
  return _[a1 _fillQueue];
}

id objc_msgSend__findFirstViewOfClass_inViewHierarchy_depth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findFirstViewOfClass:inViewHierarchy:depth:");
}

id objc_msgSend__finish(void *a1, const char *a2, ...)
{
  return _[a1 _finish];
}

id objc_msgSend__finishLoadingVPNProfileAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishLoadingVPNProfileAtURL:");
}

id objc_msgSend__finishTapToAddUserWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishTapToAddUserWithState:");
}

id objc_msgSend__finishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishWithError:");
}

id objc_msgSend__flatImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flatImageWithColor:");
}

id objc_msgSend__followUps(void *a1, const char *a2, ...)
{
  return _[a1 _followUps];
}

id objc_msgSend__formatSleepTimeoutItem_withValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formatSleepTimeoutItem:withValue:");
}

id objc_msgSend__gameCenterOptions(void *a1, const char *a2, ...)
{
  return _[a1 _gameCenterOptions];
}

id objc_msgSend__genericErrorStringWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_genericErrorStringWithDevice:");
}

id objc_msgSend__genericPairingErrorStringWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_genericPairingErrorStringWithDevice:");
}

id objc_msgSend__getBuiltinTerms(void *a1, const char *a2, ...)
{
  return _[a1 _getBuiltinTerms];
}

id objc_msgSend__getConnectionStatus(void *a1, const char *a2, ...)
{
  return _[a1 _getConnectionStatus];
}

id objc_msgSend__getSandboxAccount(void *a1, const char *a2, ...)
{
  return _[a1 _getSandboxAccount];
}

id objc_msgSend__goToPhotoSettingsIfPossible(void *a1, const char *a2, ...)
{
  return _[a1 _goToPhotoSettingsIfPossible];
}

id objc_msgSend__gradientMask(void *a1, const char *a2, ...)
{
  return _[a1 _gradientMask];
}

id objc_msgSend__groupRecommendationsConsentFromPBSConsent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_groupRecommendationsConsentFromPBSConsent:");
}

id objc_msgSend__guestUsersGroup(void *a1, const char *a2, ...)
{
  return _[a1 _guestUsersGroup];
}

id objc_msgSend__handleAuthKitURLIfNeededFromResourceDictionary_overViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAuthKitURLIfNeededFromResourceDictionary:overViewController:");
}

id objc_msgSend__handleAuthServiceProgressEvent_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAuthServiceProgressEvent:info:");
}

id objc_msgSend__handleCheckForUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCheckForUpdates:");
}

id objc_msgSend__handleConfigurationInProgressChange(void *a1, const char *a2, ...)
{
  return _[a1 _handleConfigurationInProgressChange];
}

id objc_msgSend__handleFinishHomeSetupCFUAction(void *a1, const char *a2, ...)
{
  return _[a1 _handleFinishHomeSetupCFUAction];
}

id objc_msgSend__handleHomeConfigurationStateChange(void *a1, const char *a2, ...)
{
  return _[a1 _handleHomeConfigurationStateChange];
}

id objc_msgSend__handleSetPasscodeResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPasscodeResult:");
}

id objc_msgSend__handleSetupServiceProgressEvent_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetupServiceProgressEvent:info:");
}

id objc_msgSend__hardwareSupportsAC3Decode(void *a1, const char *a2, ...)
{
  return _[a1 _hardwareSupportsAC3Decode];
}

id objc_msgSend__hasTiltID(void *a1, const char *a2, ...)
{
  return _[a1 _hasTiltID];
}

id objc_msgSend__headlineFont(void *a1, const char *a2, ...)
{
  return _[a1 _headlineFont];
}

id objc_msgSend__hiddenSystemServices(void *a1, const char *a2, ...)
{
  return _[a1 _hiddenSystemServices];
}

id objc_msgSend__hideBox(void *a1, const char *a2, ...)
{
  return _[a1 _hideBox];
}

id objc_msgSend__hideProgressView(void *a1, const char *a2, ...)
{
  return _[a1 _hideProgressView];
}

id objc_msgSend__homeNeedsUserInterentionAlertViewController(void *a1, const char *a2, ...)
{
  return _[a1 _homeNeedsUserInterentionAlertViewController];
}

id objc_msgSend__homeNoiCloudAccountAlertViewController(void *a1, const char *a2, ...)
{
  return _[a1 _homeNoiCloudAccountAlertViewController];
}

id objc_msgSend__iCloudPhotoSectionValueUsingUserProfileFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iCloudPhotoSectionValueUsingUserProfileFacade:");
}

id objc_msgSend__iCloudPhotosGroup(void *a1, const char *a2, ...)
{
  return _[a1 _iCloudPhotosGroup];
}

id objc_msgSend__iCloudPhotosScreenSaverIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _iCloudPhotosScreenSaverIdentifier];
}

id objc_msgSend__identifierForSharingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForSharingFilter:");
}

id objc_msgSend__imageProxiesToLoad(void *a1, const char *a2, ...)
{
  return _[a1 _imageProxiesToLoad];
}

id objc_msgSend__imageProxyDidFail_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageProxyDidFail:withError:");
}

id objc_msgSend__imageProxyDidLoad_withImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageProxyDidLoad:withImage:");
}

id objc_msgSend__imageProxyToLoadNext(void *a1, const char *a2, ...)
{
  return _[a1 _imageProxyToLoadNext];
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _[a1 _init];
}

id objc_msgSend__initialState(void *a1, const char *a2, ...)
{
  return _[a1 _initialState];
}

id objc_msgSend__initializeBetaSeedPrograms(void *a1, const char *a2, ...)
{
  return _[a1 _initializeBetaSeedPrograms];
}

id objc_msgSend__initializeState(void *a1, const char *a2, ...)
{
  return _[a1 _initializeState];
}

id objc_msgSend__initializeSyncState(void *a1, const char *a2, ...)
{
  return _[a1 _initializeSyncState];
}

id objc_msgSend__intents_findSiriEntitledAppsContainingAnIntentsExtensionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intents_findSiriEntitledAppsContainingAnIntentsExtensionWithCompletion:");
}

id objc_msgSend__invalidatePhotoCollections(void *a1, const char *a2, ...)
{
  return _[a1 _invalidatePhotoCollections];
}

id objc_msgSend__ipEntryView(void *a1, const char *a2, ...)
{
  return _[a1 _ipEntryView];
}

id objc_msgSend__isAudioUsingARC(void *a1, const char *a2, ...)
{
  return _[a1 _isAudioUsingARC];
}

id objc_msgSend__isAudioUsingAirPlayOther(void *a1, const char *a2, ...)
{
  return _[a1 _isAudioUsingAirPlayOther];
}

id objc_msgSend__isAudioUsingBTHeadphones(void *a1, const char *a2, ...)
{
  return _[a1 _isAudioUsingBTHeadphones];
}

id objc_msgSend__isAudioUsingBTSpeakers(void *a1, const char *a2, ...)
{
  return _[a1 _isAudioUsingBTSpeakers];
}

id objc_msgSend__isAudioUsingHomeTheater(void *a1, const char *a2, ...)
{
  return _[a1 _isAudioUsingHomeTheater];
}

id objc_msgSend__isConfirmed(void *a1, const char *a2, ...)
{
  return _[a1 _isConfirmed];
}

id objc_msgSend__isEnhancedAudioAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _isEnhancedAudioAvailable];
}

id objc_msgSend__isGameCenterAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isGameCenterAccount:");
}

id objc_msgSend__isLanguage_equivalentTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isLanguage:equivalentTo:");
}

id objc_msgSend__isRMVEnabledInHome_homeUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRMVEnabledInHome:homeUserInfo:");
}

id objc_msgSend__isSecureWiFiProfileLoaded(void *a1, const char *a2, ...)
{
  return _[a1 _isSecureWiFiProfileLoaded];
}

id objc_msgSend__keyValueDictionaryForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyValueDictionaryForURL:");
}

id objc_msgSend__keyboardTypeFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyboardTypeFromString:");
}

id objc_msgSend__languageFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _languageFormatter];
}

id objc_msgSend__learnNewRemote(void *a1, const char *a2, ...)
{
  return _[a1 _learnNewRemote];
}

id objc_msgSend__legacyMotionBulletinNotification(void *a1, const char *a2, ...)
{
  return _[a1 _legacyMotionBulletinNotification];
}

id objc_msgSend__linkErrorStringWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_linkErrorStringWithDevice:");
}

id objc_msgSend__loadImage(void *a1, const char *a2, ...)
{
  return _[a1 _loadImage];
}

id objc_msgSend__loadNextImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadNextImage:");
}

id objc_msgSend__loadPendingImages(void *a1, const char *a2, ...)
{
  return _[a1 _loadPendingImages];
}

id objc_msgSend__loadSettingGroupWithBundlesInDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadSettingGroupWithBundlesInDirectory:");
}

id objc_msgSend__localeFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _localeFormatter];
}

id objc_msgSend__localeUpdated(void *a1, const char *a2, ...)
{
  return _[a1 _localeUpdated];
}

id objc_msgSend__localizedLanguageFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _localizedLanguageFormatter];
}

id objc_msgSend__localizedTitleForPhotoCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedTitleForPhotoCollection:");
}

id objc_msgSend__localizedTitleForPhotoCollectionGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedTitleForPhotoCollectionGroup:");
}

id objc_msgSend__location(void *a1, const char *a2, ...)
{
  return _[a1 _location];
}

id objc_msgSend__makeAccountUserChangeNameChildViewController(void *a1, const char *a2, ...)
{
  return _[a1 _makeAccountUserChangeNameChildViewController];
}

id objc_msgSend__makeAddNewRoomViewController(void *a1, const char *a2, ...)
{
  return _[a1 _makeAddNewRoomViewController];
}

id objc_msgSend__makeDeviceNameChildViewController(void *a1, const char *a2, ...)
{
  return _[a1 _makeDeviceNameChildViewController];
}

id objc_msgSend__makeDeviceNameChildViewControllerWithItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeDeviceNameChildViewControllerWithItem:");
}

id objc_msgSend__makeHomePickerViewController(void *a1, const char *a2, ...)
{
  return _[a1 _makeHomePickerViewController];
}

id objc_msgSend__makeRequireCodeEveryTimeHomeChildViewControllerBlock(void *a1, const char *a2, ...)
{
  return _[a1 _makeRequireCodeEveryTimeHomeChildViewControllerBlock];
}

id objc_msgSend__makeRoomPickerViewController(void *a1, const char *a2, ...)
{
  return _[a1 _makeRoomPickerViewController];
}

id objc_msgSend__makeRoomPickerViewControllerWithHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeRoomPickerViewControllerWithHome:");
}

id objc_msgSend__manage(void *a1, const char *a2, ...)
{
  return _[a1 _manage];
}

id objc_msgSend__manageSubscriptionsViewController(void *a1, const char *a2, ...)
{
  return _[a1 _manageSubscriptionsViewController];
}

id objc_msgSend__managerDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_managerDidUpdate:");
}

id objc_msgSend__maximumImageCount(void *a1, const char *a2, ...)
{
  return _[a1 _maximumImageCount];
}

id objc_msgSend__maximumImageSize(void *a1, const char *a2, ...)
{
  return _[a1 _maximumImageSize];
}

id objc_msgSend__mediaLibraryHasContent(void *a1, const char *a2, ...)
{
  return _[a1 _mediaLibraryHasContent];
}

id objc_msgSend__memoryScreenSaverIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _memoryScreenSaverIdentifier];
}

id objc_msgSend__modelFromSettingsOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modelFromSettingsOption:");
}

id objc_msgSend__moveOrAddLocalAccessoryToRoom_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveOrAddLocalAccessoryToRoom:inHome:");
}

id objc_msgSend__moveOrAddLocalAccessoryToRoomWithName_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveOrAddLocalAccessoryToRoomWithName:inHome:");
}

id objc_msgSend__multiChannelAudioFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _multiChannelAudioFormatter];
}

id objc_msgSend__myPhotosItemForSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_myPhotosItemForSource:");
}

id objc_msgSend__nameViewControllerForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nameViewControllerForItem:");
}

id objc_msgSend__nativeModeSwitchingOptionsFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _nativeModeSwitchingOptionsFormatter];
}

id objc_msgSend__newCRDView(void *a1, const char *a2, ...)
{
  return _[a1 _newCRDView];
}

id objc_msgSend__newTitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 _newTitleLabel];
}

id objc_msgSend__newValueLabel(void *a1, const char *a2, ...)
{
  return _[a1 _newValueLabel];
}

id objc_msgSend__octetForBlockIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_octetForBlockIndex:");
}

id objc_msgSend__offerToRestartWithPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_offerToRestartWithPresentingViewController:");
}

id objc_msgSend__onActivePosterChangedWithObserverState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onActivePosterChangedWithObserverState:");
}

id objc_msgSend__onPosterCollectionChangedWithUpdatedCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onPosterCollectionChangedWithUpdatedCollection:");
}

id objc_msgSend__openApplicationWithIdentifer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openApplicationWithIdentifer:");
}

id objc_msgSend__openSettings(void *a1, const char *a2, ...)
{
  return _[a1 _openSettings];
}

id objc_msgSend__openURLConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openURLConfiguration:");
}

id objc_msgSend__openiCloudPhotosTypesViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openiCloudPhotosTypesViewControllerAnimated:");
}

id objc_msgSend__otherItemForSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_otherItemForSource:");
}

id objc_msgSend__overscanAdjustmentFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _overscanAdjustmentFormatter];
}

id objc_msgSend__paradeThreshold(void *a1, const char *a2, ...)
{
  return _[a1 _paradeThreshold];
}

id objc_msgSend__peerAdded_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_peerAdded:options:");
}

id objc_msgSend__peerChanged_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_peerChanged:options:");
}

id objc_msgSend__peerRemoved_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_peerRemoved:options:");
}

id objc_msgSend__photoCollectionTitleFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _photoCollectionTitleFormatter];
}

id objc_msgSend__photoOptionsItem(void *a1, const char *a2, ...)
{
  return _[a1 _photoOptionsItem];
}

id objc_msgSend__playSpatialVideo(void *a1, const char *a2, ...)
{
  return _[a1 _playSpatialVideo];
}

id objc_msgSend__playStereoVideo(void *a1, const char *a2, ...)
{
  return _[a1 _playStereoVideo];
}

id objc_msgSend__pollForSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pollForSession:");
}

id objc_msgSend__popToMainNetworkController(void *a1, const char *a2, ...)
{
  return _[a1 _popToMainNetworkController];
}

id objc_msgSend__portraitClockCategoryHideAllowedWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_portraitClockCategoryHideAllowedWithID:");
}

id objc_msgSend__portraitClockOptionsItem(void *a1, const char *a2, ...)
{
  return _[a1 _portraitClockOptionsItem];
}

id objc_msgSend__postAlertWithErrorCode_forDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postAlertWithErrorCode:forDevice:");
}

id objc_msgSend__preferredFontForTextStyle_variant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:variant:");
}

id objc_msgSend__preloadViewController(void *a1, const char *a2, ...)
{
  return _[a1 _preloadViewController];
}

id objc_msgSend__prepareChildViewControllerWithItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareChildViewControllerWithItem:");
}

id objc_msgSend__presentCreateRoomFailedViewControllerWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentCreateRoomFailedViewControllerWithError:");
}

id objc_msgSend__presentDialogWithError_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentDialogWithError:presentingViewController:");
}

id objc_msgSend__presentOTAWarningAlertWithPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentOTAWarningAlertWithPresentingViewController:");
}

id objc_msgSend__presentRegionsAlertController(void *a1, const char *a2, ...)
{
  return _[a1 _presentRegionsAlertController];
}

id objc_msgSend__presentSetAccessoryNameFailedViewControllerWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentSetAccessoryNameFailedViewControllerWithError:");
}

id objc_msgSend__previewForTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_previewForTheme:");
}

id objc_msgSend__primaryUserGroup(void *a1, const char *a2, ...)
{
  return _[a1 _primaryUserGroup];
}

id objc_msgSend__primaryiCloudOptions(void *a1, const char *a2, ...)
{
  return _[a1 _primaryiCloudOptions];
}

id objc_msgSend__processLivAPIResultData_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processLivAPIResultData:withCompletion:");
}

id objc_msgSend__processResults_lateNightAvailable_enhanceDialogueAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processResults:lateNightAvailable:enhanceDialogueAvailable:");
}

id objc_msgSend__promptForConfirmationOfPasscode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptForConfirmationOfPasscode:");
}

id objc_msgSend__promptForRMVWithLanguage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptForRMVWithLanguage:completion:");
}

id objc_msgSend__promptPrimaryLanguage_orOtherLanguage_forUserProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptPrimaryLanguage:orOtherLanguage:forUserProfile:");
}

id objc_msgSend__promptRMVForUserProfile_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptRMVForUserProfile:completion:");
}

id objc_msgSend__promptRecognizeUserForUserProfile_isVoiceProfileAvailable_isHomeRMVEnabled_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptRecognizeUserForUserProfile:isVoiceProfileAvailable:isHomeRMVEnabled:");
}

id objc_msgSend__promptText(void *a1, const char *a2, ...)
{
  return _[a1 _promptText];
}

id objc_msgSend__promptToRevert(void *a1, const char *a2, ...)
{
  return _[a1 _promptToRevert];
}

id objc_msgSend__queryPairedPeers(void *a1, const char *a2, ...)
{
  return _[a1 _queryPairedPeers];
}

id objc_msgSend__ratingFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _ratingFormatter];
}

id objc_msgSend__ratingLongFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _ratingLongFormatter];
}

id objc_msgSend__recalculateBestQMSModeSet(void *a1, const char *a2, ...)
{
  return _[a1 _recalculateBestQMSModeSet];
}

id objc_msgSend__recalculatedUnverifiedModes(void *a1, const char *a2, ...)
{
  return _[a1 _recalculatedUnverifiedModes];
}

id objc_msgSend__recalculatedUserVisibleHDRChromaModes(void *a1, const char *a2, ...)
{
  return _[a1 _recalculatedUserVisibleHDRChromaModes];
}

id objc_msgSend__recalculatedUserVisibleSDRChromaModes(void *a1, const char *a2, ...)
{
  return _[a1 _recalculatedUserVisibleSDRChromaModes];
}

id objc_msgSend__recalculatedUserVisibleSDRColorMappingModes(void *a1, const char *a2, ...)
{
  return _[a1 _recalculatedUserVisibleSDRColorMappingModes];
}

id objc_msgSend__regulatoryImage(void *a1, const char *a2, ...)
{
  return _[a1 _regulatoryImage];
}

id objc_msgSend__reinitializeState(void *a1, const char *a2, ...)
{
  return _[a1 _reinitializeState];
}

id objc_msgSend__reloadDataFromCache(void *a1, const char *a2, ...)
{
  return _[a1 _reloadDataFromCache];
}

id objc_msgSend__reloadNumberingSystems(void *a1, const char *a2, ...)
{
  return _[a1 _reloadNumberingSystems];
}

id objc_msgSend__remoteSettingsGroups(void *a1, const char *a2, ...)
{
  return _[a1 _remoteSettingsGroups];
}

id objc_msgSend__removeBoundaryTimeObservers(void *a1, const char *a2, ...)
{
  return _[a1 _removeBoundaryTimeObservers];
}

id objc_msgSend__removeCurrentProfileIfPresent(void *a1, const char *a2, ...)
{
  return _[a1 _removeCurrentProfileIfPresent];
}

id objc_msgSend__removeUserProfileFacadeObservers(void *a1, const char *a2, ...)
{
  return _[a1 _removeUserProfileFacadeObservers];
}

id objc_msgSend__renameDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_renameDevice:");
}

id objc_msgSend__requirePassword(void *a1, const char *a2, ...)
{
  return _[a1 _requirePassword];
}

id objc_msgSend__resetAdvertisingIdentifierIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _resetAdvertisingIdentifierIfNeeded];
}

id objc_msgSend__resetStateFromPreferences(void *a1, const char *a2, ...)
{
  return _[a1 _resetStateFromPreferences];
}

id objc_msgSend__resetViewController(void *a1, const char *a2, ...)
{
  return _[a1 _resetViewController];
}

id objc_msgSend__restorePersona(void *a1, const char *a2, ...)
{
  return _[a1 _restorePersona];
}

id objc_msgSend__result(void *a1, const char *a2, ...)
{
  return _[a1 _result];
}

id objc_msgSend__sandboxAccount(void *a1, const char *a2, ...)
{
  return _[a1 _sandboxAccount];
}

id objc_msgSend__sectionContentInset(void *a1, const char *a2, ...)
{
  return _[a1 _sectionContentInset];
}

id objc_msgSend__secureWiFiProfileLoaded_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_secureWiFiProfileLoaded:error:");
}

id objc_msgSend__selectedAllowedRemotes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectedAllowedRemotes:");
}

id objc_msgSend__sendAnalyticsEventCausedByActionType_newValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendAnalyticsEventCausedByActionType:newValue:");
}

id objc_msgSend__sendDedicatedCameraSetupCompleteAnalyticsWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendDedicatedCameraSetupCompleteAnalyticsWithDevice:");
}

id objc_msgSend__sendRetry(void *a1, const char *a2, ...)
{
  return _[a1 _sendRetry];
}

id objc_msgSend__setAirPlayPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAirPlayPassword:");
}

id objc_msgSend__setAppearanceFor_selected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAppearanceFor:selected:");
}

id objc_msgSend__setAttributedDetailMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAttributedDetailMessage:");
}

id objc_msgSend__setAutomaticConfigurationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAutomaticConfigurationEnabled:");
}

id objc_msgSend__setCurrentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentConfiguration:");
}

id objc_msgSend__setDeviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDeviceName:");
}

id objc_msgSend__setHighlightProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHighlightProgress:");
}

id objc_msgSend__setIdleScreenSaverTypeToDefaultIfNeccessary(void *a1, const char *a2, ...)
{
  return _[a1 _setIdleScreenSaverTypeToDefaultIfNeccessary];
}

id objc_msgSend__setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setImage:");
}

id objc_msgSend__setInitialFocusedSettingItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setInitialFocusedSettingItem:");
}

id objc_msgSend__setIsRecognizeMyVoiceEnabled_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIsRecognizeMyVoiceEnabled:completion:");
}

id objc_msgSend__setNeedsResidentDeviceAndAccessoryUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _setNeedsResidentDeviceAndAccessoryUpdate];
}

id objc_msgSend__setPaidSettingValue_freeSettingValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPaidSettingValue:freeSettingValue:");
}

id objc_msgSend__setPendingCompletion_fromState_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPendingCompletion:fromState:toState:");
}

id objc_msgSend__setSectionContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSectionContentInset:");
}

id objc_msgSend__setShouldShowAdvancedSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShouldShowAdvancedSettings:");
}

id objc_msgSend__setShouldShowInternalSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShouldShowInternalSettings:");
}

id objc_msgSend__setString_forObjectWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setString:forObjectWithName:");
}

id objc_msgSend__setString_forObjectWithName_bold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setString:forObjectWithName:bold:");
}

id objc_msgSend__setText_forLabel_withDirectionForward_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setText:forLabel:withDirectionForward:");
}

id objc_msgSend__settingChangedToHidden_categoryID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_settingChangedToHidden:categoryID:");
}

id objc_msgSend__settingGroups(void *a1, const char *a2, ...)
{
  return _[a1 _settingGroups];
}

id objc_msgSend__setupAVPlayerForVideoNamed_playerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupAVPlayerForVideoNamed:playerView:");
}

id objc_msgSend__setupDialogueView(void *a1, const char *a2, ...)
{
  return _[a1 _setupDialogueView];
}

id objc_msgSend__setupEventHandler(void *a1, const char *a2, ...)
{
  return _[a1 _setupEventHandler];
}

id objc_msgSend__setupItemManager(void *a1, const char *a2, ...)
{
  return _[a1 _setupItemManager];
}

id objc_msgSend__setupViews(void *a1, const char *a2, ...)
{
  return _[a1 _setupViews];
}

id objc_msgSend__sharedWithYou(void *a1, const char *a2, ...)
{
  return _[a1 _sharedWithYou];
}

id objc_msgSend__sharingFilterGroup(void *a1, const char *a2, ...)
{
  return _[a1 _sharingFilterGroup];
}

id objc_msgSend__shouldHandleTestURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldHandleTestURL:");
}

id objc_msgSend__shouldShowAdaptiveVolumeSettings(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowAdaptiveVolumeSettings];
}

id objc_msgSend__shouldShowAdvancedSettings(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowAdvancedSettings];
}

id objc_msgSend__shouldShowInternalSettings(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowInternalSettings];
}

id objc_msgSend__shouldShowSSLSettings(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowSSLSettings];
}

id objc_msgSend__shouldShowSpatialAudioSettings(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowSpatialAudioSettings];
}

id objc_msgSend__shouldShowTCCSettingForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowTCCSettingForBundleIdentifier:");
}

id objc_msgSend__shouldShowUpdateProgressForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowUpdateProgressForItem:");
}

id objc_msgSend__showAccessoryRemoveFailed(void *a1, const char *a2, ...)
{
  return _[a1 _showAccessoryRemoveFailed];
}

id objc_msgSend__showButtons(void *a1, const char *a2, ...)
{
  return _[a1 _showButtons];
}

id objc_msgSend__showConfirmationForEnrollmentInProgram_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showConfirmationForEnrollmentInProgram:");
}

id objc_msgSend__showDeleteConfirmationForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDeleteConfirmationForItem:");
}

id objc_msgSend__showDuringMusicItem(void *a1, const char *a2, ...)
{
  return _[a1 _showDuringMusicItem];
}

id objc_msgSend__showError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showError:");
}

id objc_msgSend__showLearnedRemotes(void *a1, const char *a2, ...)
{
  return _[a1 _showLearnedRemotes];
}

id objc_msgSend__showProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showProgress:");
}

id objc_msgSend__showRMVErrorAlertForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showRMVErrorAlertForError:");
}

id objc_msgSend__showResults(void *a1, const char *a2, ...)
{
  return _[a1 _showResults];
}

id objc_msgSend__showSelectedLearnedRemoteOptionsAlertForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSelectedLearnedRemoteOptionsAlertForConfiguration:");
}

id objc_msgSend__showSystemControlUnavailableDialog(void *a1, const char *a2, ...)
{
  return _[a1 _showSystemControlUnavailableDialog];
}

id objc_msgSend__showTermText(void *a1, const char *a2, ...)
{
  return _[a1 _showTermText];
}

id objc_msgSend__showWiFiSettings(void *a1, const char *a2, ...)
{
  return _[a1 _showWiFiSettings];
}

id objc_msgSend__signInGameCenterWithPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_signInGameCenterWithPresentingViewController:");
}

id objc_msgSend__signIniCloudWithPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_signIniCloudWithPresentingViewController:");
}

id objc_msgSend__signIniTunesWithPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_signIniTunesWithPresentingViewController:");
}

id objc_msgSend__signOutOfFaceTime(void *a1, const char *a2, ...)
{
  return _[a1 _signOutOfFaceTime];
}

id objc_msgSend__simulateScrollWithTranslation_duration_willBeginDragging_didEndDragging_willBeginDecelerating_didEndDecelerating_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_simulateScrollWithTranslation:duration:willBeginDragging:didEndDragging:willBeginDecelerating:didEndDecelerating:");
}

id objc_msgSend__siri(void *a1, const char *a2, ...)
{
  return _[a1 _siri];
}

id objc_msgSend__siriDeleteHistoryViewController(void *a1, const char *a2, ...)
{
  return _[a1 _siriDeleteHistoryViewController];
}

id objc_msgSend__siriLanguageFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _siriLanguageFormatter];
}

id objc_msgSend__sleepTimeouts(void *a1, const char *a2, ...)
{
  return _[a1 _sleepTimeouts];
}

id objc_msgSend__smartDetectionBulletinNotification(void *a1, const char *a2, ...)
{
  return _[a1 _smartDetectionBulletinNotification];
}

id objc_msgSend__sortedDisplayModesForUserPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortedDisplayModesForUserPresentation:");
}

id objc_msgSend__specifierSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specifierSupported:");
}

id objc_msgSend__start(void *a1, const char *a2, ...)
{
  return _[a1 _start];
}

id objc_msgSend__startAnimations(void *a1, const char *a2, ...)
{
  return _[a1 _startAnimations];
}

id objc_msgSend__startCalibrationFlow(void *a1, const char *a2, ...)
{
  return _[a1 _startCalibrationFlow];
}

id objc_msgSend__startConnectionTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startConnectionTimer];
}

id objc_msgSend__startObservingTCCInfos(void *a1, const char *a2, ...)
{
  return _[a1 _startObservingTCCInfos];
}

id objc_msgSend__startPairingServices(void *a1, const char *a2, ...)
{
  return _[a1 _startPairingServices];
}

id objc_msgSend__startRSSIFetchTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startRSSIFetchTimer];
}

id objc_msgSend__startTapToAddFlowWithPresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTapToAddFlowWithPresenter:");
}

id objc_msgSend__startTapToAddFlowWithPresenter_suggestedUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTapToAddFlowWithPresenter:suggestedUser:");
}

id objc_msgSend__startTapToRepairThenEnableRMVWithPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTapToRepairThenEnableRMVWithPrompt:");
}

id objc_msgSend__startTapToRepairUserWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTapToRepairUserWithConfiguration:");
}

id objc_msgSend__startTapToRepairUserWithCopyStyle_needsCDPRepair_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTapToRepairUserWithCopyStyle:needsCDPRepair:");
}

id objc_msgSend__startTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startTimer];
}

id objc_msgSend__stopAnimations(void *a1, const char *a2, ...)
{
  return _[a1 _stopAnimations];
}

id objc_msgSend__stopObservingTCCInfos(void *a1, const char *a2, ...)
{
  return _[a1 _stopObservingTCCInfos];
}

id objc_msgSend__stopPairingServices(void *a1, const char *a2, ...)
{
  return _[a1 _stopPairingServices];
}

id objc_msgSend__stopRSSIFetchTimer(void *a1, const char *a2, ...)
{
  return _[a1 _stopRSSIFetchTimer];
}

id objc_msgSend__styleItemForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_styleItemForStyle:");
}

id objc_msgSend__sublayerWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sublayerWithAnimation:");
}

id objc_msgSend__subtitleOptionFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _subtitleOptionFormatter];
}

id objc_msgSend__suggestedUserGroup(void *a1, const char *a2, ...)
{
  return _[a1 _suggestedUserGroup];
}

id objc_msgSend__supervisionDescription(void *a1, const char *a2, ...)
{
  return _[a1 _supervisionDescription];
}

id objc_msgSend__systemControlSettingsGroups(void *a1, const char *a2, ...)
{
  return _[a1 _systemControlSettingsGroups];
}

id objc_msgSend__systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:withConfiguration:");
}

id objc_msgSend__termsRequest(void *a1, const char *a2, ...)
{
  return _[a1 _termsRequest];
}

id objc_msgSend__timeZoneNumberFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _timeZoneNumberFormatter];
}

id objc_msgSend__title1FontEmphasized(void *a1, const char *a2, ...)
{
  return _[a1 _title1FontEmphasized];
}

id objc_msgSend__transitionFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionFrom:to:");
}

id objc_msgSend__transitionStylesItem(void *a1, const char *a2, ...)
{
  return _[a1 _transitionStylesItem];
}

id objc_msgSend__transitionToViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionToViewController:animated:");
}

id objc_msgSend__triggerLogCopy(void *a1, const char *a2, ...)
{
  return _[a1 _triggerLogCopy];
}

id objc_msgSend__trySomeStuffWithURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trySomeStuffWithURLString:");
}

id objc_msgSend__turnOnWelcomeSectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_turnOnWelcomeSectionType:");
}

id objc_msgSend__unsupportedDeviceErrorStringWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unsupportedDeviceErrorStringWithDevice:");
}

id objc_msgSend__updateActiveThemes(void *a1, const char *a2, ...)
{
  return _[a1 _updateActiveThemes];
}

id objc_msgSend__updateAddToLibraryBehavior(void *a1, const char *a2, ...)
{
  return _[a1 _updateAddToLibraryBehavior];
}

id objc_msgSend__updateAerialThemesWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAerialThemesWithOptions:");
}

id objc_msgSend__updateAnimationForLayer_timeOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAnimationForLayer:timeOffset:");
}

id objc_msgSend__updateAnimations(void *a1, const char *a2, ...)
{
  return _[a1 _updateAnimations];
}

id objc_msgSend__updateAppleConnectItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAppleConnectItem:");
}

id objc_msgSend__updateAppleRemotePairedStateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAppleRemotePairedStateWithBlock:");
}

id objc_msgSend__updateApps(void *a1, const char *a2, ...)
{
  return _[a1 _updateApps];
}

id objc_msgSend__updateAudioEndpointInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updateAudioEndpointInfo];
}

id objc_msgSend__updateAutoDownloadApps(void *a1, const char *a2, ...)
{
  return _[a1 _updateAutoDownloadApps];
}

id objc_msgSend__updateAutoDownloadAppsPerCloudSyncPreferences(void *a1, const char *a2, ...)
{
  return _[a1 _updateAutoDownloadAppsPerCloudSyncPreferences];
}

id objc_msgSend__updateAutomaticSubtitles(void *a1, const char *a2, ...)
{
  return _[a1 _updateAutomaticSubtitles];
}

id objc_msgSend__updateAutomaticTimeZoneEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAutomaticTimeZoneEnabled:");
}

id objc_msgSend__updateAutomaticTimeZoneItem_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAutomaticTimeZoneItem:value:");
}

id objc_msgSend__updateAvailableAudioLanguageCodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAvailableAudioLanguageCodes:");
}

id objc_msgSend__updateAvailableOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAvailableOutputDevices:");
}

id objc_msgSend__updateAvailableSubtitleLanguageOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAvailableSubtitleLanguageOptions:");
}

id objc_msgSend__updateBatteryImage(void *a1, const char *a2, ...)
{
  return _[a1 _updateBatteryImage];
}

id objc_msgSend__updateBatterySymbolConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _updateBatterySymbolConfiguration];
}

id objc_msgSend__updateBetaSoftwareItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBetaSoftwareItem:");
}

id objc_msgSend__updateBulletinSettingsSynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBulletinSettingsSynchronously:");
}

id objc_msgSend__updateCPLStatus(void *a1, const char *a2, ...)
{
  return _[a1 _updateCPLStatus];
}

id objc_msgSend__updateCameraProfiles(void *a1, const char *a2, ...)
{
  return _[a1 _updateCameraProfiles];
}

id objc_msgSend__updateCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 _updateCapabilities];
}

id objc_msgSend__updateCertificates(void *a1, const char *a2, ...)
{
  return _[a1 _updateCertificates];
}

id objc_msgSend__updateCheckConfigurationItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCheckConfigurationItem:");
}

id objc_msgSend__updateCheckVPNItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCheckVPNItem:");
}

id objc_msgSend__updateCompositingEffects(void *a1, const char *a2, ...)
{
  return _[a1 _updateCompositingEffects];
}

id objc_msgSend__updateConfigurationItem_withValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateConfigurationItem:withValue:");
}

id objc_msgSend__updateConfigurationsWithNEConfigurations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateConfigurationsWithNEConfigurations:");
}

id objc_msgSend__updateConnectTimeString(void *a1, const char *a2, ...)
{
  return _[a1 _updateConnectTimeString];
}

id objc_msgSend__updateConnectedDevicesWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateConnectedDevicesWithSet:");
}

id objc_msgSend__updateConnectionStatus(void *a1, const char *a2, ...)
{
  return _[a1 _updateConnectionStatus];
}

id objc_msgSend__updateCrossAppTrackingItem_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCrossAppTrackingItem:value:");
}

id objc_msgSend__updateCrossAppTrackingStateAndNotify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCrossAppTrackingStateAndNotify:");
}

id objc_msgSend__updateCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 _updateCurrentLocale];
}

id objc_msgSend__updateDNSItem_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDNSItem:value:");
}

id objc_msgSend__updateDeveloperBundleLoader(void *a1, const char *a2, ...)
{
  return _[a1 _updateDeveloperBundleLoader];
}

id objc_msgSend__updateDeviceDisplayFromDeviceMap(void *a1, const char *a2, ...)
{
  return _[a1 _updateDeviceDisplayFromDeviceMap];
}

id objc_msgSend__updateDevices(void *a1, const char *a2, ...)
{
  return _[a1 _updateDevices];
}

id objc_msgSend__updateDiagnosticsItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDiagnosticsItem:");
}

id objc_msgSend__updateDigitLimits(void *a1, const char *a2, ...)
{
  return _[a1 _updateDigitLimits];
}

id objc_msgSend__updateEnhanceDialogueLevel(void *a1, const char *a2, ...)
{
  return _[a1 _updateEnhanceDialogueLevel];
}

id objc_msgSend__updateEnhanceDialogueSupportsLevels(void *a1, const char *a2, ...)
{
  return _[a1 _updateEnhanceDialogueSupportsLevels];
}

id objc_msgSend__updateEthernetItem_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateEthernetItem:value:");
}

id objc_msgSend__updateExtendedStatusValues(void *a1, const char *a2, ...)
{
  return _[a1 _updateExtendedStatusValues];
}

id objc_msgSend__updateFaceTimeStatus(void *a1, const char *a2, ...)
{
  return _[a1 _updateFaceTimeStatus];
}

id objc_msgSend__updateForgetNetworkItem_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateForgetNetworkItem:value:");
}

id objc_msgSend__updateFrequencyGroup(void *a1, const char *a2, ...)
{
  return _[a1 _updateFrequencyGroup];
}

id objc_msgSend__updateFromCoreUtilsPairedPeers_isDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFromCoreUtilsPairedPeers:isDevice:");
}

id objc_msgSend__updateFromRemotePairingPairedHosts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFromRemotePairingPairedHosts:");
}

id objc_msgSend__updateGroupRecommendationsConsentToAuthorized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateGroupRecommendationsConsentToAuthorized:");
}

id objc_msgSend__updateGuardedState(void *a1, const char *a2, ...)
{
  return _[a1 _updateGuardedState];
}

id objc_msgSend__updateHasPairedDoAPOrJSDeviceWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHasPairedDoAPOrJSDeviceWithSet:");
}

id objc_msgSend__updateIPItem_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateIPItem:value:");
}

id objc_msgSend__updateIcloudAccountWithEnabled_dataclass_success_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateIcloudAccountWithEnabled:dataclass:success:error:");
}

id objc_msgSend__updateImageViewWithPlaceholderImageIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateImageViewWithPlaceholderImageIfNeeded];
}

id objc_msgSend__updateInternalSettingsItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateInternalSettingsItem:");
}

id objc_msgSend__updateItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateItems:");
}

id objc_msgSend__updateKeyframes(void *a1, const char *a2, ...)
{
  return _[a1 _updateKeyframes];
}

id objc_msgSend__updateLoadVPNItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLoadVPNItem:");
}

id objc_msgSend__updateLocaleForces24HourTime(void *a1, const char *a2, ...)
{
  return _[a1 _updateLocaleForces24HourTime];
}

id objc_msgSend__updateMatches(void *a1, const char *a2, ...)
{
  return _[a1 _updateMatches];
}

id objc_msgSend__updateMyDevicesWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateMyDevicesWithSet:");
}

id objc_msgSend__updateNavigationItem(void *a1, const char *a2, ...)
{
  return _[a1 _updateNavigationItem];
}

id objc_msgSend__updateOtherDevicesWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateOtherDevicesWithSet:");
}

id objc_msgSend__updatePhotoCollectionWithIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePhotoCollectionWithIndexPath:");
}

id objc_msgSend__updatePhotoSourcesWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePhotoSourcesWithObjects:");
}

id objc_msgSend__updatePhotosSourceHasMemories(void *a1, const char *a2, ...)
{
  return _[a1 _updatePhotosSourceHasMemories];
}

id objc_msgSend__updatePlaybackQuality(void *a1, const char *a2, ...)
{
  return _[a1 _updatePlaybackQuality];
}

id objc_msgSend__updatePortraitClockWithEnabled_fallback_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePortraitClockWithEnabled:fallback:options:");
}

id objc_msgSend__updateProfileWithServiceType_toAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateProfileWithServiceType:toAltDSID:");
}

id objc_msgSend__updateProgressViewWithProgress_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateProgressViewWithProgress:animated:");
}

id objc_msgSend__updatePropertyForKey_updateBlock_notify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePropertyForKey:updateBlock:notify:");
}

id objc_msgSend__updateQuotaMessage(void *a1, const char *a2, ...)
{
  return _[a1 _updateQuotaMessage];
}

id objc_msgSend__updateRecognizeMyVoiceAvailability(void *a1, const char *a2, ...)
{
  return _[a1 _updateRecognizeMyVoiceAvailability];
}

id objc_msgSend__updateRecognizeMyVoiceState(void *a1, const char *a2, ...)
{
  return _[a1 _updateRecognizeMyVoiceState];
}

id objc_msgSend__updateRemotesWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRemotesWithSet:");
}

id objc_msgSend__updateResidentDevices(void *a1, const char *a2, ...)
{
  return _[a1 _updateResidentDevices];
}

id objc_msgSend__updateSWUpdateItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSWUpdateItem:");
}

id objc_msgSend__updateSecureServices(void *a1, const char *a2, ...)
{
  return _[a1 _updateSecureServices];
}

id objc_msgSend__updateSelectedSubtitleOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSelectedSubtitleOption:");
}

id objc_msgSend__updateSendDataItem_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSendDataItem:value:");
}

id objc_msgSend__updateSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSettings:");
}

id objc_msgSend__updateSharedLibraryEnabledState(void *a1, const char *a2, ...)
{
  return _[a1 _updateSharedLibraryEnabledState];
}

id objc_msgSend__updateShowOnSkipBack(void *a1, const char *a2, ...)
{
  return _[a1 _updateShowOnSkipBack];
}

id objc_msgSend__updateShowWhenMuted(void *a1, const char *a2, ...)
{
  return _[a1 _updateShowWhenMuted];
}

id objc_msgSend__updateSiriDeleteHistoryItem_optInStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSiriDeleteHistoryItem:optInStatus:");
}

id objc_msgSend__updateSleepTimeoutValue(void *a1, const char *a2, ...)
{
  return _[a1 _updateSleepTimeoutValue];
}

id objc_msgSend__updateStartDelayItem_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStartDelayItem:value:");
}

id objc_msgSend__updateSubscriptionStatusWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSubscriptionStatusWithCompletion:");
}

id objc_msgSend__updateSubviewsWithTitles_values_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSubviewsWithTitles:values:");
}

id objc_msgSend__updateSyncState(void *a1, const char *a2, ...)
{
  return _[a1 _updateSyncState];
}

id objc_msgSend__updateSystemAppearance(void *a1, const char *a2, ...)
{
  return _[a1 _updateSystemAppearance];
}

id objc_msgSend__updateTCCInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updateTCCInfo];
}

id objc_msgSend__updateTextLabelAppearance(void *a1, const char *a2, ...)
{
  return _[a1 _updateTextLabelAppearance];
}

id objc_msgSend__updateTimeZoneItem_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTimeZoneItem:value:");
}

id objc_msgSend__updateTransitionStylesWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTransitionStylesWithObjects:");
}

id objc_msgSend__updateTrantionStylesViewModel(void *a1, const char *a2, ...)
{
  return _[a1 _updateTrantionStylesViewModel];
}

id objc_msgSend__updateUIScale(void *a1, const char *a2, ...)
{
  return _[a1 _updateUIScale];
}

id objc_msgSend__updateVPNItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVPNItem:");
}

id objc_msgSend__updateValues(void *a1, const char *a2, ...)
{
  return _[a1 _updateValues];
}

id objc_msgSend__updateViewModels(void *a1, const char *a2, ...)
{
  return _[a1 _updateViewModels];
}

id objc_msgSend__updateViewWithImageProxies_inCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateViewWithImageProxies:inCollection:");
}

id objc_msgSend__updateWiFiItem_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWiFiItem:value:");
}

id objc_msgSend__updateWithUserProfile_postKVONotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWithUserProfile:postKVONotifications:");
}

id objc_msgSend__updateiCloudPhotoValues(void *a1, const char *a2, ...)
{
  return _[a1 _updateiCloudPhotoValues];
}

id objc_msgSend__urlForResultsVideoForBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_urlForResultsVideoForBundle:");
}

id objc_msgSend__useCompanionAuthWithPresentingViewController_dataclass_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_useCompanionAuthWithPresentingViewController:dataclass:completion:");
}

id objc_msgSend__usePasswordAuthWithPresentingViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_usePasswordAuthWithPresentingViewController:completion:");
}

id objc_msgSend__userDidCancel(void *a1, const char *a2, ...)
{
  return _[a1 _userDidCancel];
}

id objc_msgSend__verifyPasscode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_verifyPasscode:");
}

id objc_msgSend__viewControllerForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewControllerForState:");
}

id objc_msgSend__viewTypeForNumberOfImages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewTypeForNumberOfImages:");
}

id objc_msgSend__volumeFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _volumeFormatter];
}

id objc_msgSend__warnAbout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_warnAbout:");
}

id objc_msgSend__warnAboutBadVPNURL(void *a1, const char *a2, ...)
{
  return _[a1 _warnAboutBadVPNURL];
}

id objc_msgSend__warnAboutMissingAppleConnectCredentials(void *a1, const char *a2, ...)
{
  return _[a1 _warnAboutMissingAppleConnectCredentials];
}

id objc_msgSend__workQueue_loadLogs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_workQueue_loadLogs");
}

id objc_msgSend_aa_addAuthTokenOrBasicAuthHeaderWithAccount_preferUsingPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_addAuthTokenOrBasicAuthHeaderWithAccount:preferUsingPassword:");
}

id objc_msgSend_aa_altDSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_altDSID");
}

id objc_msgSend_aa_appleAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_appleAccountWithAltDSID:");
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryAppleAccount");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_acceptsDeepLinkPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptsDeepLinkPathComponent:");
}

id objc_msgSend_accessDescriptionFormatter(void *a1, const char *a2, ...)
{
  return _[a1 accessDescriptionFormatter];
}

id objc_msgSend_accessType(void *a1, const char *a2, ...)
{
  return _[a1 accessType];
}

id objc_msgSend_accessTypeFormatter(void *a1, const char *a2, ...)
{
  return _[a1 accessTypeFormatter];
}

id objc_msgSend_accessValueFormatter(void *a1, const char *a2, ...)
{
  return _[a1 accessValueFormatter];
}

id objc_msgSend_accessories(void *a1, const char *a2, ...)
{
  return _[a1 accessories];
}

id objc_msgSend_accessory(void *a1, const char *a2, ...)
{
  return _[a1 accessory];
}

id objc_msgSend_accessoryImageView(void *a1, const char *a2, ...)
{
  return _[a1 accessoryImageView];
}

id objc_msgSend_accessoryName(void *a1, const char *a2, ...)
{
  return _[a1 accessoryName];
}

id objc_msgSend_accessoryType(void *a1, const char *a2, ...)
{
  return _[a1 accessoryType];
}

id objc_msgSend_accessoryTypes(void *a1, const char *a2, ...)
{
  return _[a1 accessoryTypes];
}

id objc_msgSend_accessoryView(void *a1, const char *a2, ...)
{
  return _[a1 accessoryView];
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return _[a1 account];
}

id objc_msgSend_accountID(void *a1, const char *a2, ...)
{
  return _[a1 accountID];
}

id objc_msgSend_accountIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 accountIdentifiers];
}

id objc_msgSend_accountItemsCountForAccountWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountItemsCountForAccountWithIdentifier:");
}

id objc_msgSend_accountManager(void *a1, const char *a2, ...)
{
  return _[a1 accountManager];
}

id objc_msgSend_accountName(void *a1, const char *a2, ...)
{
  return _[a1 accountName];
}

id objc_msgSend_accountStore(void *a1, const char *a2, ...)
{
  return _[a1 accountStore];
}

id objc_msgSend_accountType(void *a1, const char *a2, ...)
{
  return _[a1 accountType];
}

id objc_msgSend_accountTypeWithAccountTypeIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountTypeWithAccountTypeIdentifier:");
}

id objc_msgSend_accountUsername(void *a1, const char *a2, ...)
{
  return _[a1 accountUsername];
}

id objc_msgSend_accountsForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountsForService:");
}

id objc_msgSend_accountsWithAccountType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountsWithAccountType:");
}

id objc_msgSend_accountsWithAccountTypeIdentifiers_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountsWithAccountTypeIdentifiers:completion:");
}

id objc_msgSend_acknowledgementsPath(void *a1, const char *a2, ...)
{
  return _[a1 acknowledgementsPath];
}

id objc_msgSend_acquire(void *a1, const char *a2, ...)
{
  return _[a1 acquire];
}

id objc_msgSend_acquireWithInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireWithInvalidationHandler:");
}

id objc_msgSend_actionButton(void *a1, const char *a2, ...)
{
  return _[a1 actionButton];
}

id objc_msgSend_actionItemWithTitle_description_representedObject_keyPath_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionItemWithTitle:description:representedObject:keyPath:target:action:");
}

id objc_msgSend_actionViewMap(void *a1, const char *a2, ...)
{
  return _[a1 actionViewMap];
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:image:identifier:handler:");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_actions(void *a1, const char *a2, ...)
{
  return _[a1 actions];
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _[a1 activate];
}

id objc_msgSend_activateAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateAccount:");
}

id objc_msgSend_activateCategoryWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateCategoryWithIdentifier:completion:");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activatePhotosSourceFilter_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activatePhotosSourceFilter:completion:");
}

id objc_msgSend_activateScreenSaver(void *a1, const char *a2, ...)
{
  return _[a1 activateScreenSaver];
}

id objc_msgSend_activateScreenSaverForPosterBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateScreenSaverForPosterBundleID:");
}

id objc_msgSend_activateScreenSaverType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateScreenSaverType:completion:");
}

id objc_msgSend_activateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithCompletion:");
}

id objc_msgSend_activateWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithConfiguration:");
}

id objc_msgSend_activationDelay(void *a1, const char *a2, ...)
{
  return _[a1 activationDelay];
}

id objc_msgSend_activeAccount(void *a1, const char *a2, ...)
{
  return _[a1 activeAccount];
}

id objc_msgSend_activeConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 activeConfiguration];
}

id objc_msgSend_activePoster(void *a1, const char *a2, ...)
{
  return _[a1 activePoster];
}

id objc_msgSend_activeScreenSaver(void *a1, const char *a2, ...)
{
  return _[a1 activeScreenSaver];
}

id objc_msgSend_activeSectionInfo(void *a1, const char *a2, ...)
{
  return _[a1 activeSectionInfo];
}

id objc_msgSend_activeSuggestedUserProfiles(void *a1, const char *a2, ...)
{
  return _[a1 activeSuggestedUserProfiles];
}

id objc_msgSend_activityIndicatorView(void *a1, const char *a2, ...)
{
  return _[a1 activityIndicatorView];
}

id objc_msgSend_activityLabel(void *a1, const char *a2, ...)
{
  return _[a1 activityLabel];
}

id objc_msgSend_adTrackingTransparency(void *a1, const char *a2, ...)
{
  return _[a1 adTrackingTransparency];
}

id objc_msgSend_adaptiveVolumeSupported(void *a1, const char *a2, ...)
{
  return _[a1 adaptiveVolumeSupported];
}

id objc_msgSend_addAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAccount:");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addAliases_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAliases:");
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimations:");
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttribute:value:range:");
}

id objc_msgSend_addBoundaryTimeObserverForTimes_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBoundaryTimeObserverForTimes:queue:usingBlock:");
}

id objc_msgSend_addButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addButton:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCompletion:");
}

id objc_msgSend_addCondition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCondition:");
}

id objc_msgSend_addCoordinatedAnimations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCoordinatedAnimations:completion:");
}

id objc_msgSend_addEARCObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEARCObserver:");
}

id objc_msgSend_addErrorBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addErrorBlock:");
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFinishBlock:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addGroup(void *a1, const char *a2, ...)
{
  return _[a1 addGroup];
}

id objc_msgSend_addGuestUserWithPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGuestUserWithPresentingViewController:");
}

id objc_msgSend_addGuestUserWithSuggestedUser_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGuestUserWithSuggestedUser:presentingViewController:");
}

id objc_msgSend_addKonamiCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addKonamiCode:");
}

id objc_msgSend_addLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLayoutGuide:");
}

id objc_msgSend_addListenerID_capabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addListenerID:capabilities:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserverBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverBlock:");
}

id objc_msgSend_addObserverForDomain_withDistributedSynchronizationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForDomain:withDistributedSynchronizationHandler:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addPreferredLanguage_withVariants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPreferredLanguage:withVariants:");
}

id objc_msgSend_addPreferredLanguageWithIdentifier_presenter_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPreferredLanguageWithIdentifier:presenter:completion:");
}

id objc_msgSend_addPrimaryUserWithPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPrimaryUserWithPresentingViewController:");
}

id objc_msgSend_addProfileIdentifierToDisabledList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addProfileIdentifierToDisabledList:");
}

id objc_msgSend_addScanObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addScanObserver:");
}

id objc_msgSend_addStateObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStateObserver:");
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSublayer:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addSuccessBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSuccessBlock:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addTextFieldWithConfigurationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTextFieldWithConfigurationHandler:");
}

id objc_msgSend_addUserEventWithActionType_userProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUserEventWithActionType:userProfile:");
}

id objc_msgSend_addUserFailedAlertForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUserFailedAlertForError:");
}

id objc_msgSend_addValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addValue:forHTTPHeaderField:");
}

id objc_msgSend_addingToPlaylistAddsToLibrary(void *a1, const char *a2, ...)
{
  return _[a1 addingToPlaylistAddsToLibrary];
}

id objc_msgSend_addressString(void *a1, const char *a2, ...)
{
  return _[a1 addressString];
}

id objc_msgSend_aerialThemes(void *a1, const char *a2, ...)
{
  return _[a1 aerialThemes];
}

id objc_msgSend_airPlayProperties(void *a1, const char *a2, ...)
{
  return _[a1 airPlayProperties];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_alertTitleForEventType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertTitleForEventType:");
}

id objc_msgSend_aliasesToRegister(void *a1, const char *a2, ...)
{
  return _[a1 aliasesToRegister];
}

id objc_msgSend_allInputModeIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 allInputModeIdentifiers];
}

id objc_msgSend_allItems(void *a1, const char *a2, ...)
{
  return _[a1 allItems];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allOwnedHomes(void *a1, const char *a2, ...)
{
  return _[a1 allOwnedHomes];
}

id objc_msgSend_allUserProfiles(void *a1, const char *a2, ...)
{
  return _[a1 allUserProfiles];
}

id objc_msgSend_allUsers(void *a1, const char *a2, ...)
{
  return _[a1 allUsers];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allowViewing(void *a1, const char *a2, ...)
{
  return _[a1 allowViewing];
}

id objc_msgSend_allowableAuthorizationForLocationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowableAuthorizationForLocationDictionary:");
}

id objc_msgSend_allowedAccessTypes(void *a1, const char *a2, ...)
{
  return _[a1 allowedAccessTypes];
}

id objc_msgSend_allowedRemotesDescriptionFormatter(void *a1, const char *a2, ...)
{
  return _[a1 allowedRemotesDescriptionFormatter];
}

id objc_msgSend_allowedRemotesFormatter(void *a1, const char *a2, ...)
{
  return _[a1 allowedRemotesFormatter];
}

id objc_msgSend_allowedSystemServices(void *a1, const char *a2, ...)
{
  return _[a1 allowedSystemServices];
}

id objc_msgSend_allowsBackgroundAppRefreshModification(void *a1, const char *a2, ...)
{
  return _[a1 allowsBackgroundAppRefreshModification];
}

id objc_msgSend_allowsConferenceRoomDisplaySettingsUI(void *a1, const char *a2, ...)
{
  return _[a1 allowsConferenceRoomDisplaySettingsUI];
}

id objc_msgSend_allowsNotifications(void *a1, const char *a2, ...)
{
  return _[a1 allowsNotifications];
}

id objc_msgSend_allowsRestrictionsBypassUsingCompanionDeviceForUserWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsRestrictionsBypassUsingCompanionDeviceForUserWithIdentifier:");
}

id objc_msgSend_allowsScreenSaverOverMusic(void *a1, const char *a2, ...)
{
  return _[a1 allowsScreenSaverOverMusic];
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return _[a1 alpha];
}

id objc_msgSend_altDSID(void *a1, const char *a2, ...)
{
  return _[a1 altDSID];
}

id objc_msgSend_ambientFacade(void *a1, const char *a2, ...)
{
  return _[a1 ambientFacade];
}

id objc_msgSend_amsBag(void *a1, const char *a2, ...)
{
  return _[a1 amsBag];
}

id objc_msgSend_ams_activeiTunesAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_activeiTunesAccount");
}

id objc_msgSend_ams_altDSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_altDSID");
}

id objc_msgSend_ams_freePasswordPromptSetting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_freePasswordPromptSetting");
}

id objc_msgSend_ams_homeIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_homeIdentifier");
}

id objc_msgSend_ams_homeUserHiddenIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_homeUserHiddenIdentifiers");
}

id objc_msgSend_ams_homeUserIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_homeUserIdentifiers");
}

id objc_msgSend_ams_iTunesAccountForAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_iTunesAccountForAccount:");
}

id objc_msgSend_ams_iTunesAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_iTunesAccountWithAltDSID:");
}

id objc_msgSend_ams_paidPasswordPromptSetting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_paidPasswordPromptSetting");
}

id objc_msgSend_ams_setFreePasswordPromptSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_setFreePasswordPromptSetting:");
}

id objc_msgSend_ams_setPaidPasswordPromptSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_setPaidPasswordPromptSetting:");
}

id objc_msgSend_ams_sharedAccountStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_sharedAccountStore");
}

id objc_msgSend_ams_sharedAccountStoreForMediaType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_sharedAccountStoreForMediaType:");
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return _[a1 animation];
}

id objc_msgSend_animationForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationForKey:");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appData(void *a1, const char *a2, ...)
{
  return _[a1 appData];
}

id objc_msgSend_appIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 appIdentifier];
}

id objc_msgSend_appInfos(void *a1, const char *a2, ...)
{
  return _[a1 appInfos];
}

id objc_msgSend_appSystemServices(void *a1, const char *a2, ...)
{
  return _[a1 appSystemServices];
}

id objc_msgSend_appearanceWhenContainedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceWhenContainedIn:");
}

id objc_msgSend_appearanceWhenContainedInInstancesOfClasses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceWhenContainedInInstancesOfClasses:");
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendAttributedString:");
}

id objc_msgSend_appendBodySectionWithName_multilinePrefix_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBodySectionWithName:multilinePrefix:block:");
}

id objc_msgSend_appendBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBool:");
}

id objc_msgSend_appendBool_counterpart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBool:counterpart:");
}

id objc_msgSend_appendBool_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBool:withName:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendInteger:");
}

id objc_msgSend_appendInteger_counterpart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendInteger:counterpart:");
}

id objc_msgSend_appendObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendObject:");
}

id objc_msgSend_appendObject_counterpart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendObject:counterpart:");
}

id objc_msgSend_appendObject_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendObject:withName:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appendString_counterpart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:counterpart:");
}

id objc_msgSend_appendString_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:withName:");
}

id objc_msgSend_application_openURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "application:openURL:options:");
}

id objc_msgSend_applicationCapacity(void *a1, const char *a2, ...)
{
  return _[a1 applicationCapacity];
}

id objc_msgSend_applicationHasMIDBasedSINF(void *a1, const char *a2, ...)
{
  return _[a1 applicationHasMIDBasedSINF];
}

id objc_msgSend_applicationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 applicationIdentifier];
}

id objc_msgSend_applicationItems(void *a1, const char *a2, ...)
{
  return _[a1 applicationItems];
}

id objc_msgSend_applicationName(void *a1, const char *a2, ...)
{
  return _[a1 applicationName];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_applicationType(void *a1, const char *a2, ...)
{
  return _[a1 applicationType];
}

id objc_msgSend_applyChanges(void *a1, const char *a2, ...)
{
  return _[a1 applyChanges];
}

id objc_msgSend_applyInputModesChanges(void *a1, const char *a2, ...)
{
  return _[a1 applyInputModesChanges];
}

id objc_msgSend_applyPreferredLanguagesChanges(void *a1, const char *a2, ...)
{
  return _[a1 applyPreferredLanguagesChanges];
}

id objc_msgSend_areRestrictionsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 areRestrictionsEnabled];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_arrowImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrowImage:");
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _[a1 ascender];
}

id objc_msgSend_asnFreeSetting(void *a1, const char *a2, ...)
{
  return _[a1 asnFreeSetting];
}

id objc_msgSend_asnPaidSettingValue(void *a1, const char *a2, ...)
{
  return _[a1 asnPaidSettingValue];
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return _[a1 asset];
}

id objc_msgSend_associatedNetwork(void *a1, const char *a2, ...)
{
  return _[a1 associatedNetwork];
}

id objc_msgSend_atmosAvailable(void *a1, const char *a2, ...)
{
  return _[a1 atmosAvailable];
}

id objc_msgSend_atmosEnabled(void *a1, const char *a2, ...)
{
  return _[a1 atmosEnabled];
}

id objc_msgSend_attributeWithDomain_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeWithDomain:name:");
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_audienceOverride(void *a1, const char *a2, ...)
{
  return _[a1 audienceOverride];
}

id objc_msgSend_audioDestinationController(void *a1, const char *a2, ...)
{
  return _[a1 audioDestinationController];
}

id objc_msgSend_audioFormatConversionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 audioFormatConversionEnabled];
}

id objc_msgSend_audioLatencyForDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioLatencyForDisplayMode:");
}

id objc_msgSend_audioOutputFormat(void *a1, const char *a2, ...)
{
  return _[a1 audioOutputFormat];
}

id objc_msgSend_audioQuality(void *a1, const char *a2, ...)
{
  return _[a1 audioQuality];
}

id objc_msgSend_authKitAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authKitAccountWithAltDSID:");
}

id objc_msgSend_authenticateAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticateAccount:");
}

id objc_msgSend_authenticatePlayerWithUsername_password_altDSID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticatePlayerWithUsername:password:altDSID:completionHandler:");
}

id objc_msgSend_authenticateWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticateWithContext:completion:");
}

id objc_msgSend_authenticatedAccounts(void *a1, const char *a2, ...)
{
  return _[a1 authenticatedAccounts];
}

id objc_msgSend_authorizationStatusForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationStatusForBundleIdentifier:");
}

id objc_msgSend_automaticDownloadKinds(void *a1, const char *a2, ...)
{
  return _[a1 automaticDownloadKinds];
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingCurrentLocale];
}

id objc_msgSend_availableAccessModes(void *a1, const char *a2, ...)
{
  return _[a1 availableAccessModes];
}

id objc_msgSend_availableAccessories(void *a1, const char *a2, ...)
{
  return _[a1 availableAccessories];
}

id objc_msgSend_availableActivationDelays(void *a1, const char *a2, ...)
{
  return _[a1 availableActivationDelays];
}

id objc_msgSend_availableAppRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 availableAppRestrictions];
}

id objc_msgSend_availableAudioLanguageCodes(void *a1, const char *a2, ...)
{
  return _[a1 availableAudioLanguageCodes];
}

id objc_msgSend_availableBetaPrograms(void *a1, const char *a2, ...)
{
  return _[a1 availableBetaPrograms];
}

id objc_msgSend_availableBetaSeedPrograms(void *a1, const char *a2, ...)
{
  return _[a1 availableBetaSeedPrograms];
}

id objc_msgSend_availableClickpadModeValues(void *a1, const char *a2, ...)
{
  return _[a1 availableClickpadModeValues];
}

id objc_msgSend_availableContentRestrictionCountryCodes(void *a1, const char *a2, ...)
{
  return _[a1 availableContentRestrictionCountryCodes];
}

id objc_msgSend_availableEnhanceDialogueLevels(void *a1, const char *a2, ...)
{
  return _[a1 availableEnhanceDialogueLevels];
}

id objc_msgSend_availableIdleScreenRefreshIntervals(void *a1, const char *a2, ...)
{
  return _[a1 availableIdleScreenRefreshIntervals];
}

id objc_msgSend_availableLanguages(void *a1, const char *a2, ...)
{
  return _[a1 availableLanguages];
}

id objc_msgSend_availableLocales(void *a1, const char *a2, ...)
{
  return _[a1 availableLocales];
}

id objc_msgSend_availableModeTypes(void *a1, const char *a2, ...)
{
  return _[a1 availableModeTypes];
}

id objc_msgSend_availableMovieRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 availableMovieRestrictions];
}

id objc_msgSend_availableNames(void *a1, const char *a2, ...)
{
  return _[a1 availableNames];
}

id objc_msgSend_availableNumberingSystems(void *a1, const char *a2, ...)
{
  return _[a1 availableNumberingSystems];
}

id objc_msgSend_availableOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 availableOutputDevices];
}

id objc_msgSend_availablePhotoCollectionGroups(void *a1, const char *a2, ...)
{
  return _[a1 availablePhotoCollectionGroups];
}

id objc_msgSend_availablePhotoCollections(void *a1, const char *a2, ...)
{
  return _[a1 availablePhotoCollections];
}

id objc_msgSend_availablePortraitClockCategoryFilters(void *a1, const char *a2, ...)
{
  return _[a1 availablePortraitClockCategoryFilters];
}

id objc_msgSend_availablePortraitClockUpdateIntervals(void *a1, const char *a2, ...)
{
  return _[a1 availablePortraitClockUpdateIntervals];
}

id objc_msgSend_availablePosters(void *a1, const char *a2, ...)
{
  return _[a1 availablePosters];
}

id objc_msgSend_availableRefreshIntervals(void *a1, const char *a2, ...)
{
  return _[a1 availableRefreshIntervals];
}

id objc_msgSend_availableSecurityModes(void *a1, const char *a2, ...)
{
  return _[a1 availableSecurityModes];
}

id objc_msgSend_availableSensitivityValues(void *a1, const char *a2, ...)
{
  return _[a1 availableSensitivityValues];
}

id objc_msgSend_availableSubtitleLanguageOptions(void *a1, const char *a2, ...)
{
  return _[a1 availableSubtitleLanguageOptions];
}

id objc_msgSend_availableSystemLanguages(void *a1, const char *a2, ...)
{
  return _[a1 availableSystemLanguages];
}

id objc_msgSend_availableTVShowRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 availableTVShowRestrictions];
}

id objc_msgSend_availableTimesPerSlide(void *a1, const char *a2, ...)
{
  return _[a1 availableTimesPerSlide];
}

id objc_msgSend_availableTrainsAndConfigurationsFromLivAPIWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availableTrainsAndConfigurationsFromLivAPIWithCompletion:");
}

id objc_msgSend_availableUsers(void *a1, const char *a2, ...)
{
  return _[a1 availableUsers];
}

id objc_msgSend_backGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 backGestureRecognizer];
}

id objc_msgSend_backgroundAppRefreshEnabled(void *a1, const char *a2, ...)
{
  return _[a1 backgroundAppRefreshEnabled];
}

id objc_msgSend_backgroundAppRefreshSettingForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundAppRefreshSettingForIdentifier:");
}

id objc_msgSend_backgroundAppRefreshSettings(void *a1, const char *a2, ...)
{
  return _[a1 backgroundAppRefreshSettings];
}

id objc_msgSend_backgroundAppRefreshSettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundAppRefreshSettingsNeededForBundleID:");
}

id objc_msgSend_backupLocalConfigurations(void *a1, const char *a2, ...)
{
  return _[a1 backupLocalConfigurations];
}

id objc_msgSend_badgeCount(void *a1, const char *a2, ...)
{
  return _[a1 badgeCount];
}

id objc_msgSend_bagForProfile_profileVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bagForProfile:profileVersion:");
}

id objc_msgSend_bagSubProfile(void *a1, const char *a2, ...)
{
  return _[a1 bagSubProfile];
}

id objc_msgSend_bagSubProfileVersion(void *a1, const char *a2, ...)
{
  return _[a1 bagSubProfileVersion];
}

id objc_msgSend_baseLanguageFromLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseLanguageFromLanguage:");
}

id objc_msgSend_baseSystemLanguages(void *a1, const char *a2, ...)
{
  return _[a1 baseSystemLanguages];
}

id objc_msgSend_basicConfigurationForDeviceWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "basicConfigurationForDeviceWithUUID:");
}

id objc_msgSend_batteryLevel(void *a1, const char *a2, ...)
{
  return _[a1 batteryLevel];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _[a1 begin];
}

id objc_msgSend_beginGeneratingLibraryChangeNotifications(void *a1, const char *a2, ...)
{
  return _[a1 beginGeneratingLibraryChangeNotifications];
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _[a1 beginUpdates];
}

id objc_msgSend_bestNearbyModeForQMS(void *a1, const char *a2, ...)
{
  return _[a1 bestNearbyModeForQMS];
}

id objc_msgSend_bestQMSCompatibilityModeSetNearMode_usingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestQMSCompatibilityModeSetNearMode:usingState:");
}

id objc_msgSend_bestSiriLanguageForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestSiriLanguageForLanguage:");
}

id objc_msgSend_betaTermsViewController_didAcceptAllTerms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "betaTermsViewController:didAcceptAllTerms:");
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_bluetoothFacade(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothFacade];
}

id objc_msgSend_bluetoothPrivacySettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothPrivacySettingsNeededForBundleID:");
}

id objc_msgSend_bluetoothUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothUserDefaults];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:defaultValue:");
}

id objc_msgSend_BOOLForPreferenceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForPreferenceKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_BOOLeanValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLeanValue];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_bottomTextLabel(void *a1, const char *a2, ...)
{
  return _[a1 bottomTextLabel];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bs_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_addChildViewController:");
}

id objc_msgSend_bs_each_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_each:");
}

id objc_msgSend_bs_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_filter:");
}

id objc_msgSend_bs_firstObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_firstObjectPassingTest:");
}

id objc_msgSend_bs_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_map:");
}

id objc_msgSend_bs_safeAddObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_safeAddObject:");
}

id objc_msgSend_bs_safeNumberForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_safeNumberForKey:");
}

id objc_msgSend_bs_safeObjectForKey_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_safeObjectForKey:ofType:");
}

id objc_msgSend_bs_safeStringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_safeStringForKey:");
}

id objc_msgSend_btAddressData(void *a1, const char *a2, ...)
{
  return _[a1 btAddressData];
}

id objc_msgSend_build(void *a1, const char *a2, ...)
{
  return _[a1 build];
}

id objc_msgSend_builder(void *a1, const char *a2, ...)
{
  return _[a1 builder];
}

id objc_msgSend_builderWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "builderWithObject:");
}

id objc_msgSend_builderWithObject_ofExpectedClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "builderWithObject:ofExpectedClass:");
}

id objc_msgSend_bulletinBoardNotification(void *a1, const char *a2, ...)
{
  return _[a1 bulletinBoardNotification];
}

id objc_msgSend_bundle(void *a1, const char *a2, ...)
{
  return _[a1 bundle];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleID(void *a1, const char *a2, ...)
{
  return _[a1 bundleID];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleIdentifiersWithSettings(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifiersWithSettings];
}

id objc_msgSend_bundleLoader(void *a1, const char *a2, ...)
{
  return _[a1 bundleLoader];
}

id objc_msgSend_bundleRecordWithApplicationIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleRecordWithApplicationIdentifier:error:");
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _[a1 bundleURL];
}

id objc_msgSend_bundleWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithPath:");
}

id objc_msgSend_bundleWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithURL:");
}

id objc_msgSend_buttonStackView(void *a1, const char *a2, ...)
{
  return _[a1 buttonStackView];
}

id objc_msgSend_buttonWithTitle_type_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithTitle:type:handler:");
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cableCheckRequestFromSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cableCheckRequestFromSource:");
}

id objc_msgSend_cachedAudioOutputDeviceSubtype(void *a1, const char *a2, ...)
{
  return _[a1 cachedAudioOutputDeviceSubtype];
}

id objc_msgSend_cachedAudioOutputDeviceType(void *a1, const char *a2, ...)
{
  return _[a1 cachedAudioOutputDeviceType];
}

id objc_msgSend_cachedAudioOutputIsHomeTheater(void *a1, const char *a2, ...)
{
  return _[a1 cachedAudioOutputIsHomeTheater];
}

id objc_msgSend_cachedSubscriptionStatus(void *a1, const char *a2, ...)
{
  return _[a1 cachedSubscriptionStatus];
}

id objc_msgSend_calibrationPreferred_inPreview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calibrationPreferred:inPreview:");
}

id objc_msgSend_calibrationView(void *a1, const char *a2, ...)
{
  return _[a1 calibrationView];
}

id objc_msgSend_cameraItem(void *a1, const char *a2, ...)
{
  return _[a1 cameraItem];
}

id objc_msgSend_cameraProfile(void *a1, const char *a2, ...)
{
  return _[a1 cameraProfile];
}

id objc_msgSend_cameraProfiles(void *a1, const char *a2, ...)
{
  return _[a1 cameraProfiles];
}

id objc_msgSend_cameraSettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cameraSettingsNeededForBundleID:");
}

id objc_msgSend_canAccessHomeData(void *a1, const char *a2, ...)
{
  return _[a1 canAccessHomeData];
}

id objc_msgSend_canAddNewGuestUser(void *a1, const char *a2, ...)
{
  return _[a1 canAddNewGuestUser];
}

id objc_msgSend_canAddNewUserWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAddNewUserWithType:");
}

id objc_msgSend_canAddPrimaryUser(void *a1, const char *a2, ...)
{
  return _[a1 canAddPrimaryUser];
}

id objc_msgSend_canAddToPlaylist(void *a1, const char *a2, ...)
{
  return _[a1 canAddToPlaylist];
}

id objc_msgSend_canAddUserWithAltDSID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAddUserWithAltDSID:error:");
}

id objc_msgSend_canAddUserWithiCloudAltDSID_gameCenterAltDSID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAddUserWithiCloudAltDSID:gameCenterAltDSID:error:");
}

id objc_msgSend_canBeRemoved(void *a1, const char *a2, ...)
{
  return _[a1 canBeRemoved];
}

id objc_msgSend_canBeRemovedFromHome(void *a1, const char *a2, ...)
{
  return _[a1 canBeRemovedFromHome];
}

id objc_msgSend_canEnableRecognizeMyVoice(void *a1, const char *a2, ...)
{
  return _[a1 canEnableRecognizeMyVoice];
}

id objc_msgSend_canFocus(void *a1, const char *a2, ...)
{
  return _[a1 canFocus];
}

id objc_msgSend_canHandleHighBandwidthModes(void *a1, const char *a2, ...)
{
  return _[a1 canHandleHighBandwidthModes];
}

id objc_msgSend_canSendMessages(void *a1, const char *a2, ...)
{
  return _[a1 canSendMessages];
}

id objc_msgSend_canSignInUserWithGameCenterAltDSID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSignInUserWithGameCenterAltDSID:error:");
}

id objc_msgSend_canSignInUserWithiCloudAltDSID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSignInUserWithiCloudAltDSID:error:");
}

id objc_msgSend_canSignOutOfServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSignOutOfServiceType:");
}

id objc_msgSend_canSignOutOfiCloud(void *a1, const char *a2, ...)
{
  return _[a1 canSignOutOfiCloud];
}

id objc_msgSend_canSignOutOfiTunes(void *a1, const char *a2, ...)
{
  return _[a1 canSignOutOfiTunes];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelButton(void *a1, const char *a2, ...)
{
  return _[a1 cancelButton];
}

id objc_msgSend_cancelLearningWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelLearningWithCompletion:");
}

id objc_msgSend_cancelOnExit(void *a1, const char *a2, ...)
{
  return _[a1 cancelOnExit];
}

id objc_msgSend_cancelPINPairing(void *a1, const char *a2, ...)
{
  return _[a1 cancelPINPairing];
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreviousPerformRequestsWithTarget:selector:object:");
}

id objc_msgSend_cancelUpdate(void *a1, const char *a2, ...)
{
  return _[a1 cancelUpdate];
}

id objc_msgSend_capitalizeFirstPartOfCountry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "capitalizeFirstPartOfCountry:");
}

id objc_msgSend_capitalizedString(void *a1, const char *a2, ...)
{
  return _[a1 capitalizedString];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_categories(void *a1, const char *a2, ...)
{
  return _[a1 categories];
}

id objc_msgSend_category(void *a1, const char *a2, ...)
{
  return _[a1 category];
}

id objc_msgSend_categoryFilter(void *a1, const char *a2, ...)
{
  return _[a1 categoryFilter];
}

id objc_msgSend_categoryType(void *a1, const char *a2, ...)
{
  return _[a1 categoryType];
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerXAnchor];
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerYAnchor];
}

id objc_msgSend_cert(void *a1, const char *a2, ...)
{
  return _[a1 cert];
}

id objc_msgSend_changeKind(void *a1, const char *a2, ...)
{
  return _[a1 changeKind];
}

id objc_msgSend_changeModeTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeModeTo:");
}

id objc_msgSend_changesFromObjects_toObjects_withIdentifierBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changesFromObjects:toObjects:withIdentifierBlock:");
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterSetWithCharactersInString:");
}

id objc_msgSend_checkAvailabilityWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkAvailabilityWithReply:");
}

id objc_msgSend_checkAvailabilityWithTicketNumber_response_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkAvailabilityWithTicketNumber:response:");
}

id objc_msgSend_checkForUpdate(void *a1, const char *a2, ...)
{
  return _[a1 checkForUpdate];
}

id objc_msgSend_checkForUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkForUpdates:");
}

id objc_msgSend_checkTicketNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkTicketNumber:");
}

id objc_msgSend_checkingForUpdates(void *a1, const char *a2, ...)
{
  return _[a1 checkingForUpdates];
}

id objc_msgSend_childItems(void *a1, const char *a2, ...)
{
  return _[a1 childItems];
}

id objc_msgSend_childPaneItemFromSpecifierDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childPaneItemFromSpecifierDictionary:");
}

id objc_msgSend_childPaneItemWithBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childPaneItemWithBundle:");
}

id objc_msgSend_childPaneItemWithBundle_representedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childPaneItemWithBundle:representedObject:");
}

id objc_msgSend_childPaneItemWithTitle_description_representedObject_keyPath_childControllerBlock_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childPaneItemWithTitle:description:representedObject:keyPath:childControllerBlock:");
}

id objc_msgSend_childPaneItemWithTitle_description_representedObject_keyPath_childControllerClass_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childPaneItemWithTitle:description:representedObject:keyPath:childControllerClass:");
}

id objc_msgSend_citiesMatchingName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "citiesMatchingName:");
}

id objc_msgSend_cityNameForCityID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cityNameForCityID:");
}

id objc_msgSend_cityscapesCategoryID(void *a1, const char *a2, ...)
{
  return _[a1 cityscapesCategoryID];
}

id objc_msgSend_classForCoder(void *a1, const char *a2, ...)
{
  return _[a1 classForCoder];
}

id objc_msgSend_classicIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 classicIdentifier];
}

id objc_msgSend_clearAdvertisingIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 clearAdvertisingIdentifier];
}

id objc_msgSend_clearAllEntriesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearAllEntriesWithCompletion:");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clearConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 clearConfiguration];
}

id objc_msgSend_clearEntryAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearEntryAnimated:");
}

id objc_msgSend_clearRecentInputForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearRecentInputForIdentifier:");
}

id objc_msgSend_clickpadMode(void *a1, const char *a2, ...)
{
  return _[a1 clickpadMode];
}

id objc_msgSend_clickpadModeFormatter(void *a1, const char *a2, ...)
{
  return _[a1 clickpadModeFormatter];
}

id objc_msgSend_clientInfo(void *a1, const char *a2, ...)
{
  return _[a1 clientInfo];
}

id objc_msgSend_clientInfoHeader(void *a1, const char *a2, ...)
{
  return _[a1 clientInfoHeader];
}

id objc_msgSend_closestModeToMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closestModeToMode:");
}

id objc_msgSend_cloudAddToPlaylistBehavior(void *a1, const char *a2, ...)
{
  return _[a1 cloudAddToPlaylistBehavior];
}

id objc_msgSend_cloudConfigurationDetails(void *a1, const char *a2, ...)
{
  return _[a1 cloudConfigurationDetails];
}

id objc_msgSend_cloudStatus(void *a1, const char *a2, ...)
{
  return _[a1 cloudStatus];
}

id objc_msgSend_clusterType(void *a1, const char *a2, ...)
{
  return _[a1 clusterType];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_codeWithSequence_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "codeWithSequence:action:");
}

id objc_msgSend_collection(void *a1, const char *a2, ...)
{
  return _[a1 collection];
}

id objc_msgSend_collectionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 collectionIdentifier];
}

id objc_msgSend_collectionName(void *a1, const char *a2, ...)
{
  return _[a1 collectionName];
}

id objc_msgSend_collections(void *a1, const char *a2, ...)
{
  return _[a1 collections];
}

id objc_msgSend_colorCalibrationForDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorCalibrationForDisplayMode:");
}

id objc_msgSend_colorCalibrationService(void *a1, const char *a2, ...)
{
  return _[a1 colorCalibrationService];
}

id objc_msgSend_colorCalibrationStatusForDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorCalibrationStatusForDisplayMode:");
}

id objc_msgSend_colorMap(void *a1, const char *a2, ...)
{
  return _[a1 colorMap];
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithAlphaComponent:");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return _[a1 commit];
}

id objc_msgSend_commitChanges(void *a1, const char *a2, ...)
{
  return _[a1 commitChanges];
}

id objc_msgSend_commitChangesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commitChangesWithCompletion:");
}

id objc_msgSend_commitLanguageChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commitLanguageChanges:");
}

id objc_msgSend_commitWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commitWithCompletionHandler:");
}

id objc_msgSend_commonResolutionsModes50Hz(void *a1, const char *a2, ...)
{
  return _[a1 commonResolutionsModes50Hz];
}

id objc_msgSend_commonResolutionsModes60Hz(void *a1, const char *a2, ...)
{
  return _[a1 commonResolutionsModes60Hz];
}

id objc_msgSend_commonResolutionsModesOthers(void *a1, const char *a2, ...)
{
  return _[a1 commonResolutionsModesOthers];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_completeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completeWithError:");
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _[a1 completion];
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return _[a1 completionHandler];
}

id objc_msgSend_components(void *a1, const char *a2, ...)
{
  return _[a1 components];
}

id objc_msgSend_components_fromDate_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:toDate:options:");
}

id objc_msgSend_componentsFromLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsFromLocaleIdentifier:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_componentsWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsWithString:");
}

id objc_msgSend_condition(void *a1, const char *a2, ...)
{
  return _[a1 condition];
}

id objc_msgSend_conditionCollectionForPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conditionCollectionForPredicate:");
}

id objc_msgSend_conditions(void *a1, const char *a2, ...)
{
  return _[a1 conditions];
}

id objc_msgSend_conferenceRoomDisplayMessage(void *a1, const char *a2, ...)
{
  return _[a1 conferenceRoomDisplayMessage];
}

id objc_msgSend_configWithAppSettingsURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configWithAppSettingsURL:");
}

id objc_msgSend_configWithPrefsURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configWithPrefsURL:options:");
}

id objc_msgSend_configWithSettingsURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configWithSettingsURL:");
}

id objc_msgSend_configWithTVProviderURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configWithTVProviderURL:");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationByApplyingConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationByApplyingConfiguration:");
}

id objc_msgSend_configurationCheckState(void *a1, const char *a2, ...)
{
  return _[a1 configurationCheckState];
}

id objc_msgSend_configurationLoadingState(void *a1, const char *a2, ...)
{
  return _[a1 configurationLoadingState];
}

id objc_msgSend_configurationName(void *a1, const char *a2, ...)
{
  return _[a1 configurationName];
}

id objc_msgSend_configurationType(void *a1, const char *a2, ...)
{
  return _[a1 configurationType];
}

id objc_msgSend_configurationUUID(void *a1, const char *a2, ...)
{
  return _[a1 configurationUUID];
}

id objc_msgSend_configurationWithHierarchicalColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithHierarchicalColor:");
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:");
}

id objc_msgSend_configurationWithPointSize_weight_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:weight:scale:");
}

id objc_msgSend_configurationWithTextStyle_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithTextStyle:scale:");
}

id objc_msgSend_configurations(void *a1, const char *a2, ...)
{
  return _[a1 configurations];
}

id objc_msgSend_confirmSiriActivationIfNeededWithNewLanguage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confirmSiriActivationIfNeededWithNewLanguage:completion:");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connect(void *a1, const char *a2, ...)
{
  return _[a1 connect];
}

id objc_msgSend_connectDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectDevice:");
}

id objc_msgSend_connectedBluetoothRemote(void *a1, const char *a2, ...)
{
  return _[a1 connectedBluetoothRemote];
}

id objc_msgSend_connectedDevice(void *a1, const char *a2, ...)
{
  return _[a1 connectedDevice];
}

id objc_msgSend_connectedDevices(void *a1, const char *a2, ...)
{
  return _[a1 connectedDevices];
}

id objc_msgSend_connectionStatus(void *a1, const char *a2, ...)
{
  return _[a1 connectionStatus];
}

id objc_msgSend_connectionStatusFormatter(void *a1, const char *a2, ...)
{
  return _[a1 connectionStatusFormatter];
}

id objc_msgSend_connectionTimer(void *a1, const char *a2, ...)
{
  return _[a1 connectionTimer];
}

id objc_msgSend_connectionTypeFormatter(void *a1, const char *a2, ...)
{
  return _[a1 connectionTypeFormatter];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintEqualToAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:multiplier:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToConstant:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:multiplier:");
}

id objc_msgSend_constraintLessThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToConstant:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_containerPath(void *a1, const char *a2, ...)
{
  return _[a1 containerPath];
}

id objc_msgSend_contains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contains:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _[a1 content];
}

id objc_msgSend_contentContainer(void *a1, const char *a2, ...)
{
  return _[a1 contentContainer];
}

id objc_msgSend_contentRestrictionsCountryCode(void *a1, const char *a2, ...)
{
  return _[a1 contentRestrictionsCountryCode];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_contents(void *a1, const char *a2, ...)
{
  return _[a1 contents];
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtPath:error:");
}

id objc_msgSend_contextForAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextForAccountWithAltDSID:");
}

id objc_msgSend_continuityCameraFacade(void *a1, const char *a2, ...)
{
  return _[a1 continuityCameraFacade];
}

id objc_msgSend_controlCenterAndSiriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 controlCenterAndSiriEnabled];
}

id objc_msgSend_controller_didSelectAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller:didSelectAsset:");
}

id objc_msgSend_controller_didSelectAsset_inCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller:didSelectAsset:inCollection:");
}

id objc_msgSend_controller_didSelectAsset_inCollection_collectionGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller:didSelectAsset:inCollection:collectionGroup:");
}

id objc_msgSend_controller_didSelectCollectionGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller:didSelectCollectionGroup:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyCurrentPersonaContextWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCurrentPersonaContextWithError:");
}

id objc_msgSend_cornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 cornerRadius];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForObject:");
}

id objc_msgSend_countryCode(void *a1, const char *a2, ...)
{
  return _[a1 countryCode];
}

id objc_msgSend_crdModeFormatter(void *a1, const char *a2, ...)
{
  return _[a1 crdModeFormatter];
}

id objc_msgSend_crdPreviewViewController(void *a1, const char *a2, ...)
{
  return _[a1 crdPreviewViewController];
}

id objc_msgSend_createDefaultHomeWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDefaultHomeWithCompletionHandler:");
}

id objc_msgSend_createRoomNamed_inHome_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRoomNamed:inHome:completionHandler:");
}

id objc_msgSend_createSFService(void *a1, const char *a2, ...)
{
  return _[a1 createSFService];
}

id objc_msgSend_createUserPersona_passcodeData_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createUserPersona:passcodeData:completionHandler:");
}

id objc_msgSend_createUserProfileWithAttributes_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createUserProfileWithAttributes:completionHandler:");
}

id objc_msgSend_crossAppTrackingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 crossAppTrackingAllowed];
}

id objc_msgSend_crossAppTrackingAllowedSwitchEnabled(void *a1, const char *a2, ...)
{
  return _[a1 crossAppTrackingAllowedSwitchEnabled];
}

id objc_msgSend_crossAppTrackingSettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "crossAppTrackingSettingsNeededForBundleID:");
}

id objc_msgSend_currentActionBeingLearned(void *a1, const char *a2, ...)
{
  return _[a1 currentActionBeingLearned];
}

id objc_msgSend_currentAppContext(void *a1, const char *a2, ...)
{
  return _[a1 currentAppContext];
}

id objc_msgSend_currentChildViewController(void *a1, const char *a2, ...)
{
  return _[a1 currentChildViewController];
}

id objc_msgSend_currentCollation(void *a1, const char *a2, ...)
{
  return _[a1 currentCollation];
}

id objc_msgSend_currentConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 currentConfiguration];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentDisplayMode(void *a1, const char *a2, ...)
{
  return _[a1 currentDisplayMode];
}

id objc_msgSend_currentItem(void *a1, const char *a2, ...)
{
  return _[a1 currentItem];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentMoreInfoItemType(void *a1, const char *a2, ...)
{
  return _[a1 currentMoreInfoItemType];
}

id objc_msgSend_currentNumberingSystem(void *a1, const char *a2, ...)
{
  return _[a1 currentNumberingSystem];
}

id objc_msgSend_currentOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 currentOutputDevices];
}

id objc_msgSend_currentPersona(void *a1, const char *a2, ...)
{
  return _[a1 currentPersona];
}

id objc_msgSend_currentProcess(void *a1, const char *a2, ...)
{
  return _[a1 currentProcess];
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _[a1 currentState];
}

id objc_msgSend_currentTermIndex(void *a1, const char *a2, ...)
{
  return _[a1 currentTermIndex];
}

id objc_msgSend_currentThread(void *a1, const char *a2, ...)
{
  return _[a1 currentThread];
}

id objc_msgSend_currentTime(void *a1, const char *a2, ...)
{
  return _[a1 currentTime];
}

id objc_msgSend_currentTrainInfoText(void *a1, const char *a2, ...)
{
  return _[a1 currentTrainInfoText];
}

id objc_msgSend_cycleInterval(void *a1, const char *a2, ...)
{
  return _[a1 cycleInterval];
}

id objc_msgSend_dataContainerURL(void *a1, const char *a2, ...)
{
  return _[a1 dataContainerURL];
}

id objc_msgSend_dataSharingOptInStatus(void *a1, const char *a2, ...)
{
  return _[a1 dataSharingOptInStatus];
}

id objc_msgSend_dataSize(void *a1, const char *a2, ...)
{
  return _[a1 dataSize];
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataTaskWithRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataTaskWithRequest:completionHandler:");
}

id objc_msgSend_dataTaskWithURL_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataTaskWithURL:completionHandler:");
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:");
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_deactivateAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateAccount:");
}

id objc_msgSend_deactivateCategoryWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateCategoryWithIdentifier:completion:");
}

id objc_msgSend_declinedLegal(void *a1, const char *a2, ...)
{
  return _[a1 declinedLegal];
}

id objc_msgSend_decodeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectForKey:");
}

id objc_msgSend_dedicatedDevice(void *a1, const char *a2, ...)
{
  return _[a1 dedicatedDevice];
}

id objc_msgSend_deemed4KCapable(void *a1, const char *a2, ...)
{
  return _[a1 deemed4KCapable];
}

id objc_msgSend_deepestSelectedItemFromItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deepestSelectedItemFromItem:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultConditionForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultConditionForType:");
}

id objc_msgSend_defaultConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 defaultConfiguration];
}

id objc_msgSend_defaultIdentityStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultIdentityStore];
}

id objc_msgSend_defaultInputModeVariantsForLanguageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultInputModeVariantsForLanguageIdentifier:");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultMediaLibrary(void *a1, const char *a2, ...)
{
  return _[a1 defaultMediaLibrary];
}

id objc_msgSend_defaultPreviewViewController(void *a1, const char *a2, ...)
{
  return _[a1 defaultPreviewViewController];
}

id objc_msgSend_defaultSessionConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 defaultSessionConfiguration];
}

id objc_msgSend_defaultSizeForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSizeForStyle:");
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultStore];
}

id objc_msgSend_defaultUserSignedIn(void *a1, const char *a2, ...)
{
  return _[a1 defaultUserSignedIn];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_defaultsForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultsForDomain:");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_deleteAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAccount:");
}

id objc_msgSend_deleteConfiguration_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteConfiguration:withCompletionHandler:");
}

id objc_msgSend_deleteEntry_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEntry:completion:");
}

id objc_msgSend_deleteLogFileAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteLogFileAtPath:");
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_deleteSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSections:withRowAnimation:");
}

id objc_msgSend_deleteSiriHistoryState(void *a1, const char *a2, ...)
{
  return _[a1 deleteSiriHistoryState];
}

id objc_msgSend_deleteSiriHistoryWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSiriHistoryWithCompletion:");
}

id objc_msgSend_deleteUserPersonaWithPersonaUniqueString_passcodeData_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteUserPersonaWithPersonaUniqueString:passcodeData:completionHandler:");
}

id objc_msgSend_depthKeyframes(void *a1, const char *a2, ...)
{
  return _[a1 depthKeyframes];
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:");
}

id objc_msgSend_descriptionBuilderWithMultilinePrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionBuilderWithMultilinePrefix:");
}

id objc_msgSend_descriptionLabel(void *a1, const char *a2, ...)
{
  return _[a1 descriptionLabel];
}

id objc_msgSend_descriptor(void *a1, const char *a2, ...)
{
  return _[a1 descriptor];
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _[a1 destination];
}

id objc_msgSend_destinationIndexes(void *a1, const char *a2, ...)
{
  return _[a1 destinationIndexes];
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return _[a1 detailTextLabel];
}

id objc_msgSend_developerBundleLoader(void *a1, const char *a2, ...)
{
  return _[a1 developerBundleLoader];
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return _[a1 device];
}

id objc_msgSend_deviceCapacity(void *a1, const char *a2, ...)
{
  return _[a1 deviceCapacity];
}

id objc_msgSend_deviceFlags(void *a1, const char *a2, ...)
{
  return _[a1 deviceFlags];
}

id objc_msgSend_deviceForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceForIdentifier:");
}

id objc_msgSend_deviceID(void *a1, const char *a2, ...)
{
  return _[a1 deviceID];
}

id objc_msgSend_deviceManagementBundlePath(void *a1, const char *a2, ...)
{
  return _[a1 deviceManagementBundlePath];
}

id objc_msgSend_deviceName(void *a1, const char *a2, ...)
{
  return _[a1 deviceName];
}

id objc_msgSend_deviceStatusFormatterForDeviceType_headsetType_showConnectedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceStatusFormatterForDeviceType:headsetType:showConnectedState:");
}

id objc_msgSend_deviceSubType(void *a1, const char *a2, ...)
{
  return _[a1 deviceSubType];
}

id objc_msgSend_deviceSubtype(void *a1, const char *a2, ...)
{
  return _[a1 deviceSubtype];
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _[a1 deviceType];
}

id objc_msgSend_deviceUUID(void *a1, const char *a2, ...)
{
  return _[a1 deviceUUID];
}

id objc_msgSend_deviceWithPairedPeer_isDevicePairing_createIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceWithPairedPeer:isDevicePairing:createIfNecessary:");
}

id objc_msgSend_deviceWithRemotePairingPairedHost_createIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceWithRemotePairingPairedHost:createIfNecessary:");
}

id objc_msgSend_diagnostics(void *a1, const char *a2, ...)
{
  return _[a1 diagnostics];
}

id objc_msgSend_diagnosticsTicketController(void *a1, const char *a2, ...)
{
  return _[a1 diagnosticsTicketController];
}

id objc_msgSend_dialogueView(void *a1, const char *a2, ...)
{
  return _[a1 dialogueView];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfFile:");
}

id objc_msgSend_dictionaryWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfURL:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeValueForKey:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_digitGroupView(void *a1, const char *a2, ...)
{
  return _[a1 digitGroupView];
}

id objc_msgSend_disableEARC(void *a1, const char *a2, ...)
{
  return _[a1 disableEARC];
}

id objc_msgSend_disableOdeon(void *a1, const char *a2, ...)
{
  return _[a1 disableOdeon];
}

id objc_msgSend_disableRecognizeMyVoiceWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableRecognizeMyVoiceWithCompletion:");
}

id objc_msgSend_disableRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 disableRestrictions];
}

id objc_msgSend_disabled(void *a1, const char *a2, ...)
{
  return _[a1 disabled];
}

id objc_msgSend_disassociateNetwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disassociateNetwork:");
}

id objc_msgSend_disconnect(void *a1, const char *a2, ...)
{
  return _[a1 disconnect];
}

id objc_msgSend_disconnectDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectDevice:");
}

id objc_msgSend_discoveredDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoveredDevices];
}

id objc_msgSend_discoverySession(void *a1, const char *a2, ...)
{
  return _[a1 discoverySession];
}

id objc_msgSend_diskUsage(void *a1, const char *a2, ...)
{
  return _[a1 diskUsage];
}

id objc_msgSend_diskUsed(void *a1, const char *a2, ...)
{
  return _[a1 diskUsed];
}

id objc_msgSend_dismiss(void *a1, const char *a2, ...)
{
  return _[a1 dismiss];
}

id objc_msgSend_dismissHandler(void *a1, const char *a2, ...)
{
  return _[a1 dismissHandler];
}

id objc_msgSend_dismissModalViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissModalViewControllerAnimated:");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dismissWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissWithError:");
}

id objc_msgSend_displayAssistantActionInfo(void *a1, const char *a2, ...)
{
  return _[a1 displayAssistantActionInfo];
}

id objc_msgSend_displayDescription(void *a1, const char *a2, ...)
{
  return _[a1 displayDescription];
}

id objc_msgSend_displayGamut(void *a1, const char *a2, ...)
{
  return _[a1 displayGamut];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayNameForKey_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayNameForKey:value:");
}

id objc_msgSend_displayNameForKeyboardInputModeVariantWithLanguageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayNameForKeyboardInputModeVariantWithLanguageIdentifier:");
}

id objc_msgSend_displayNameForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayNameForLanguage:");
}

id objc_msgSend_displayNameForLanguage_context_displayLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayNameForLanguage:context:displayLanguage:");
}

id objc_msgSend_displayNameForLanguage_displayLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayNameForLanguage:displayLanguage:");
}

id objc_msgSend_displayNameIncludingCountry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayNameIncludingCountry:");
}

id objc_msgSend_displayResolutionFormatter(void *a1, const char *a2, ...)
{
  return _[a1 displayResolutionFormatter];
}

id objc_msgSend_displayScale(void *a1, const char *a2, ...)
{
  return _[a1 displayScale];
}

id objc_msgSend_displaySharedAlbums(void *a1, const char *a2, ...)
{
  return _[a1 displaySharedAlbums];
}

id objc_msgSend_displaySupportsHDR10Plus(void *a1, const char *a2, ...)
{
  return _[a1 displaySupportsHDR10Plus];
}

id objc_msgSend_displaySupportsQMS(void *a1, const char *a2, ...)
{
  return _[a1 displaySupportsQMS];
}

id objc_msgSend_displaySupportsVRR(void *a1, const char *a2, ...)
{
  return _[a1 displaySupportsVRR];
}

id objc_msgSend_displayVolumeUI(void *a1, const char *a2, ...)
{
  return _[a1 displayVolumeUI];
}

id objc_msgSend_dnsAddresses(void *a1, const char *a2, ...)
{
  return _[a1 dnsAddresses];
}

id objc_msgSend_dnsValueFormatter(void *a1, const char *a2, ...)
{
  return _[a1 dnsValueFormatter];
}

id objc_msgSend_documentLoaderWithRequestProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentLoaderWithRequestProperties:");
}

id objc_msgSend_doesNotRecognizeSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doesNotRecognizeSelector:");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doneButton(void *a1, const char *a2, ...)
{
  return _[a1 doneButton];
}

id objc_msgSend_doneButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 doneButtonItem];
}

id objc_msgSend_doubleForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleForKey:defaultValue:");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downloadPriorityAssertion(void *a1, const char *a2, ...)
{
  return _[a1 downloadPriorityAssertion];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_dynamicRange(void *a1, const char *a2, ...)
{
  return _[a1 dynamicRange];
}

id objc_msgSend_dynamicRangeColorFormatter(void *a1, const char *a2, ...)
{
  return _[a1 dynamicRangeColorFormatter];
}

id objc_msgSend_eARCStatus(void *a1, const char *a2, ...)
{
  return _[a1 eARCStatus];
}

id objc_msgSend_earlierDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earlierDate:");
}

id objc_msgSend_editButton(void *a1, const char *a2, ...)
{
  return _[a1 editButton];
}

id objc_msgSend_editButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 editButtonItem];
}

id objc_msgSend_editingController_didCancelForSettingItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editingController:didCancelForSettingItem:");
}

id objc_msgSend_editingController_didProvideValue_forSettingItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editingController:didProvideValue:forSettingItem:");
}

id objc_msgSend_editingDelegate(void *a1, const char *a2, ...)
{
  return _[a1 editingDelegate];
}

id objc_msgSend_editingItem(void *a1, const char *a2, ...)
{
  return _[a1 editingItem];
}

id objc_msgSend_effectForBlurEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectForBlurEffect:");
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithStyle:");
}

id objc_msgSend_effectiveBoolValueForSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveBoolValueForSetting:");
}

id objc_msgSend_effectiveUserInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 effectiveUserInterfaceLayoutDirection];
}

id objc_msgSend_effectiveVolumeButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 effectiveVolumeButtonConfiguration];
}

id objc_msgSend_effects(void *a1, const char *a2, ...)
{
  return _[a1 effects];
}

id objc_msgSend_emailFacade(void *a1, const char *a2, ...)
{
  return _[a1 emailFacade];
}

id objc_msgSend_emptyValueFormatter(void *a1, const char *a2, ...)
{
  return _[a1 emptyValueFormatter];
}

id objc_msgSend_enableAnimation(void *a1, const char *a2, ...)
{
  return _[a1 enableAnimation];
}

id objc_msgSend_enableAtmos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableAtmos:");
}

id objc_msgSend_enableDistributedSyncForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableDistributedSyncForDomain:");
}

id objc_msgSend_enableEARC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableEARC:");
}

id objc_msgSend_enableHDR10PlusMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableHDR10PlusMetadata:");
}

id objc_msgSend_enableModeSwitchingForDynamicRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableModeSwitchingForDynamicRange:");
}

id objc_msgSend_enableModeSwitchingForFrameRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableModeSwitchingForFrameRate:");
}

id objc_msgSend_enableNetworkManagement(void *a1, const char *a2, ...)
{
  return _[a1 enableNetworkManagement];
}

id objc_msgSend_enableQMSForFrameRateSwitching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableQMSForFrameRateSwitching:");
}

id objc_msgSend_enableRecognizeMyVoiceWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableRecognizeMyVoiceWithCompletion:");
}

id objc_msgSend_enableRestrictionsWithPasscode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableRestrictionsWithPasscode:");
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return _[a1 enabled];
}

id objc_msgSend_enabledInputModeIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 enabledInputModeIdentifiers];
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _[a1 endUpdates];
}

id objc_msgSend_enforcementTimeout(void *a1, const char *a2, ...)
{
  return _[a1 enforcementTimeout];
}

id objc_msgSend_enhanceDialogue(void *a1, const char *a2, ...)
{
  return _[a1 enhanceDialogue];
}

id objc_msgSend_enhanceDialogueIsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 enhanceDialogueIsAvailable];
}

id objc_msgSend_enhanceDialogueSupportsLevels(void *a1, const char *a2, ...)
{
  return _[a1 enhanceDialogueSupportsLevels];
}

id objc_msgSend_enrollInBetaProgram_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enrollInBetaProgram:");
}

id objc_msgSend_enteredPIN_forDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enteredPIN:forDevice:");
}

id objc_msgSend_entityAuthorizationForLocationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityAuthorizationForLocationDictionary:");
}

id objc_msgSend_entries(void *a1, const char *a2, ...)
{
  return _[a1 entries];
}

id objc_msgSend_enumerateIndexesWithOptions_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateIndexesWithOptions:usingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsWithOptions_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsWithOptions:usingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsWithOptions_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsWithOptions:usingBlock:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_ephemeralSessionConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 ephemeralSessionConfiguration];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorAlert(void *a1, const char *a2, ...)
{
  return _[a1 errorAlert];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_executablePath(void *a1, const char *a2, ...)
{
  return _[a1 executablePath];
}

id objc_msgSend_executeActionForItemModel_presentationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeActionForItemModel:presentationContext:");
}

id objc_msgSend_existingRooms(void *a1, const char *a2, ...)
{
  return _[a1 existingRooms];
}

id objc_msgSend_expectedSize(void *a1, const char *a2, ...)
{
  return _[a1 expectedSize];
}

id objc_msgSend_explanatoryText(void *a1, const char *a2, ...)
{
  return _[a1 explanatoryText];
}

id objc_msgSend_externalControlSystem(void *a1, const char *a2, ...)
{
  return _[a1 externalControlSystem];
}

id objc_msgSend_facade(void *a1, const char *a2, ...)
{
  return _[a1 facade];
}

id objc_msgSend_faceTimeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeEnabled];
}

id objc_msgSend_faceTimeSignInStatus(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeSignInStatus];
}

id objc_msgSend_fallbackDisplayMode(void *a1, const char *a2, ...)
{
  return _[a1 fallbackDisplayMode];
}

id objc_msgSend_favoriteSongAddToLibraryBehavior(void *a1, const char *a2, ...)
{
  return _[a1 favoriteSongAddToLibraryBehavior];
}

id objc_msgSend_favoritingAddsToLibrary(void *a1, const char *a2, ...)
{
  return _[a1 favoritingAddsToLibrary];
}

id objc_msgSend_featureForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "featureForType:");
}

id objc_msgSend_fetchActiveAccountWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActiveAccountWithCompletion:");
}

id objc_msgSend_fetchApplicationsStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchApplicationsStateWithCompletion:");
}

id objc_msgSend_fetchAssetsForCollectionWithIdentifier_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAssetsForCollectionWithIdentifier:options:completion:");
}

id objc_msgSend_fetchEnabledAppIds(void *a1, const char *a2, ...)
{
  return _[a1 fetchEnabledAppIds];
}

id objc_msgSend_fetchIdentifiersOfEntitledInstalledApplications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchIdentifiersOfEntitledInstalledApplications:");
}

id objc_msgSend_fetchInfoMapping(void *a1, const char *a2, ...)
{
  return _[a1 fetchInfoMapping];
}

id objc_msgSend_fetchIsApplicationAllowedAccess_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchIsApplicationAllowedAccess:result:");
}

id objc_msgSend_fetchIsEnabledOnDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchIsEnabledOnDevice:");
}

id objc_msgSend_fetchPairedAppleRemoteStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPairedAppleRemoteStateWithCompletion:");
}

id objc_msgSend_fetchPhotoCollectionsInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPhotoCollectionsInfoWithCompletion:");
}

id objc_msgSend_fetchSupportedMultiUserLanguageCodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSupportedMultiUserLanguageCodes:");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_filePathIsPowerLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filePathIsPowerLog:");
}

id objc_msgSend_filePathIsSysdiagnose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filePathIsSysdiagnose:");
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return _[a1 fileSize];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_filterAvailableContentGroups_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterAvailableContentGroups:withOptions:");
}

id objc_msgSend_filterDeviceScan(void *a1, const char *a2, ...)
{
  return _[a1 filterDeviceScan];
}

id objc_msgSend_filterWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterWithType:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_finishDecoding(void *a1, const char *a2, ...)
{
  return _[a1 finishDecoding];
}

id objc_msgSend_finishWaitingForHMDI(void *a1, const char *a2, ...)
{
  return _[a1 finishWaitingForHMDI];
}

id objc_msgSend_finishedTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedTest:");
}

id objc_msgSend_finishedTest_extraResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedTest:extraResults:");
}

id objc_msgSend_firstBaselineAnchor(void *a1, const char *a2, ...)
{
  return _[a1 firstBaselineAnchor];
}

id objc_msgSend_firstIndex(void *a1, const char *a2, ...)
{
  return _[a1 firstIndex];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_fixedSize(void *a1, const char *a2, ...)
{
  return _[a1 fixedSize];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_flow(void *a1, const char *a2, ...)
{
  return _[a1 flow];
}

id objc_msgSend_focusButton(void *a1, const char *a2, ...)
{
  return _[a1 focusButton];
}

id objc_msgSend_focusedView(void *a1, const char *a2, ...)
{
  return _[a1 focusedView];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_fontDescriptorWithSymbolicTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorWithSymbolicTraits:");
}

id objc_msgSend_fontSize(void *a1, const char *a2, ...)
{
  return _[a1 fontSize];
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithDescriptor:size:");
}

id objc_msgSend_fontWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithSize:");
}

id objc_msgSend_forceCapitalizationInLanguageLists(void *a1, const char *a2, ...)
{
  return _[a1 forceCapitalizationInLanguageLists];
}

id objc_msgSend_forgetHomeConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forgetHomeConfiguration:");
}

id objc_msgSend_formattedFullName(void *a1, const char *a2, ...)
{
  return _[a1 formattedFullName];
}

id objc_msgSend_formattedShortName(void *a1, const char *a2, ...)
{
  return _[a1 formattedShortName];
}

id objc_msgSend_formatterWithOnTitle_offTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formatterWithOnTitle:offTitle:");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_frequencePreviewViewController(void *a1, const char *a2, ...)
{
  return _[a1 frequencePreviewViewController];
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _[a1 fullName];
}

id objc_msgSend_fullResolutionURL(void *a1, const char *a2, ...)
{
  return _[a1 fullResolutionURL];
}

id objc_msgSend_functionWithControlPoints__::(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithControlPoints::::");
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_futureWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "futureWithResult:");
}

id objc_msgSend_gameCenterAccount(void *a1, const char *a2, ...)
{
  return _[a1 gameCenterAccount];
}

id objc_msgSend_gameCenterAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 gameCenterAltDSID];
}

id objc_msgSend_gameCenterTermsText(void *a1, const char *a2, ...)
{
  return _[a1 gameCenterTermsText];
}

id objc_msgSend_generateAndRestorePersonaContextWithPersonaUniqueString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateAndRestorePersonaContextWithPersonaUniqueString:");
}

id objc_msgSend_generateColorBarLayerContents(void *a1, const char *a2, ...)
{
  return _[a1 generateColorBarLayerContents];
}

id objc_msgSend_generateMediaPasswordWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateMediaPasswordWithError:");
}

id objc_msgSend_getAvailableIRLearningConfigurationsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAvailableIRLearningConfigurationsWithCompletion:");
}

id objc_msgSend_getChanges(void *a1, const char *a2, ...)
{
  return _[a1 getChanges];
}

id objc_msgSend_getDevicesWithFlags_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDevicesWithFlags:completionHandler:");
}

id objc_msgSend_getNameForExternalIRDeviceWithUUID_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getNameForExternalIRDeviceWithUUID:withCompletion:");
}

id objc_msgSend_getPairedPeersWithOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPairedPeersWithOptions:completion:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getScreenSaverDisplayStatusForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getScreenSaverDisplayStatusForBundleIdentifier:");
}

id objc_msgSend_getSectionInfoForActiveSectionsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSectionInfoForActiveSectionsWithCompletion:");
}

id objc_msgSend_getSiriRMVStatusForiCloudAltDSID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSiriRMVStatusForiCloudAltDSID:completion:");
}

id objc_msgSend_getUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUUIDBytes:");
}

id objc_msgSend_getValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getValue:");
}

id objc_msgSend_getVolumeButtonConfigurationsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getVolumeButtonConfigurationsWithCompletion:");
}

id objc_msgSend_grade(void *a1, const char *a2, ...)
{
  return _[a1 grade];
}

id objc_msgSend_grayColor(void *a1, const char *a2, ...)
{
  return _[a1 grayColor];
}

id objc_msgSend_gridView(void *a1, const char *a2, ...)
{
  return _[a1 gridView];
}

id objc_msgSend_groupFromSpecifierDictionary_withItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupFromSpecifierDictionary:withItems:");
}

id objc_msgSend_groupRecommendationsConsent(void *a1, const char *a2, ...)
{
  return _[a1 groupRecommendationsConsent];
}

id objc_msgSend_groupWithTitle_settingGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupWithTitle:settingGroups:");
}

id objc_msgSend_groupWithTitle_settingItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupWithTitle:settingItems:");
}

id objc_msgSend_guestUsers(void *a1, const char *a2, ...)
{
  return _[a1 guestUsers];
}

id objc_msgSend_guideConfigurationForDeviceWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "guideConfigurationForDeviceWithUUID:");
}

id objc_msgSend_handleAlertAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAlertAction:");
}

id objc_msgSend_handleEditingButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEditingButton:");
}

id objc_msgSend_handleForPredicate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleForPredicate:error:");
}

id objc_msgSend_handleTestURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleTestURL:");
}

id objc_msgSend_hasAnyMemories(void *a1, const char *a2, ...)
{
  return _[a1 hasAnyMemories];
}

id objc_msgSend_hasBeenSignalled(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenSignalled];
}

id objc_msgSend_hasCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCapability:");
}

id objc_msgSend_hasCompletedInitialSync(void *a1, const char *a2, ...)
{
  return _[a1 hasCompletedInitialSync];
}

id objc_msgSend_hasGameCenterAccount(void *a1, const char *a2, ...)
{
  return _[a1 hasGameCenterAccount];
}

id objc_msgSend_hasListenerForID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasListenerForID:");
}

id objc_msgSend_hasOptedToHH2(void *a1, const char *a2, ...)
{
  return _[a1 hasOptedToHH2];
}

id objc_msgSend_hasPairedDoAPDevice(void *a1, const char *a2, ...)
{
  return _[a1 hasPairedDoAPDevice];
}

id objc_msgSend_hasPairedDoAPOnlyDevice(void *a1, const char *a2, ...)
{
  return _[a1 hasPairedDoAPOnlyDevice];
}

id objc_msgSend_hasPairedJSDevice(void *a1, const char *a2, ...)
{
  return _[a1 hasPairedJSDevice];
}

id objc_msgSend_hasPhotosCompletedInitialSync(void *a1, const char *a2, ...)
{
  return _[a1 hasPhotosCompletedInitialSync];
}

id objc_msgSend_hasPoorBehavior(void *a1, const char *a2, ...)
{
  return _[a1 hasPoorBehavior];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasSettingsBundle(void *a1, const char *a2, ...)
{
  return _[a1 hasSettingsBundle];
}

id objc_msgSend_hasSharedLibraryOrPreview(void *a1, const char *a2, ...)
{
  return _[a1 hasSharedLibraryOrPreview];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hasiCloudAccount(void *a1, const char *a2, ...)
{
  return _[a1 hasiCloudAccount];
}

id objc_msgSend_hasiTunesAccount(void *a1, const char *a2, ...)
{
  return _[a1 hasiTunesAccount];
}

id objc_msgSend_hdr10PlusMetadataEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hdr10PlusMetadataEnabled];
}

id objc_msgSend_headBoardPreferences(void *a1, const char *a2, ...)
{
  return _[a1 headBoardPreferences];
}

id objc_msgSend_headsetType(void *a1, const char *a2, ...)
{
  return _[a1 headsetType];
}

id objc_msgSend_headsetTypeDescription(void *a1, const char *a2, ...)
{
  return _[a1 headsetTypeDescription];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 heightAnchor];
}

id objc_msgSend_hf_cameraIsNotSetToRecord(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_cameraIsNotSetToRecord");
}

id objc_msgSend_hf_hasDoorbellService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_hasDoorbellService");
}

id objc_msgSend_hf_serviceOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_serviceOfType:");
}

id objc_msgSend_hf_shouldBeOnForContextType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_shouldBeOnForContextType:");
}

id objc_msgSend_hiddenDigitImage(void *a1, const char *a2, ...)
{
  return _[a1 hiddenDigitImage];
}

id objc_msgSend_hideActionButton(void *a1, const char *a2, ...)
{
  return _[a1 hideActionButton];
}

id objc_msgSend_hideAppleConnectItem(void *a1, const char *a2, ...)
{
  return _[a1 hideAppleConnectItem];
}

id objc_msgSend_highQualityAudioEnabled(void *a1, const char *a2, ...)
{
  return _[a1 highQualityAudioEnabled];
}

id objc_msgSend_highlightProgress(void *a1, const char *a2, ...)
{
  return _[a1 highlightProgress];
}

id objc_msgSend_hmAccessory(void *a1, const char *a2, ...)
{
  return _[a1 hmAccessory];
}

id objc_msgSend_hmHome(void *a1, const char *a2, ...)
{
  return _[a1 hmHome];
}

id objc_msgSend_hmRoom(void *a1, const char *a2, ...)
{
  return _[a1 hmRoom];
}

id objc_msgSend_home(void *a1, const char *a2, ...)
{
  return _[a1 home];
}

id objc_msgSend_homeConfigurationState(void *a1, const char *a2, ...)
{
  return _[a1 homeConfigurationState];
}

id objc_msgSend_homeKitSettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeKitSettingsNeededForBundleID:");
}

id objc_msgSend_homeKitSetupDidSucceed(void *a1, const char *a2, ...)
{
  return _[a1 homeKitSetupDidSucceed];
}

id objc_msgSend_homePickerViewController_didSelectHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homePickerViewController:didSelectHome:");
}

id objc_msgSend_homePodVariant(void *a1, const char *a2, ...)
{
  return _[a1 homePodVariant];
}

id objc_msgSend_homeScreenSyncEnabled(void *a1, const char *a2, ...)
{
  return _[a1 homeScreenSyncEnabled];
}

id objc_msgSend_homeSharingAccountName(void *a1, const char *a2, ...)
{
  return _[a1 homeSharingAccountName];
}

id objc_msgSend_homeUniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 homeUniqueIdentifier];
}

id objc_msgSend_homeUserIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 homeUserIdentifier];
}

id objc_msgSend_homeUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 homeUserInfo];
}

id objc_msgSend_homes(void *a1, const char *a2, ...)
{
  return _[a1 homes];
}

id objc_msgSend_iCloudAccount(void *a1, const char *a2, ...)
{
  return _[a1 iCloudAccount];
}

id objc_msgSend_iCloudAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 iCloudAltDSID];
}

id objc_msgSend_iCloudPhotoLibraryEnabled(void *a1, const char *a2, ...)
{
  return _[a1 iCloudPhotoLibraryEnabled];
}

id objc_msgSend_iCloudPhotoStreamAvailable(void *a1, const char *a2, ...)
{
  return _[a1 iCloudPhotoStreamAvailable];
}

id objc_msgSend_iCloudPhotoStreamEnabled(void *a1, const char *a2, ...)
{
  return _[a1 iCloudPhotoStreamEnabled];
}

id objc_msgSend_iCloudSharedPhotosEnabled(void *a1, const char *a2, ...)
{
  return _[a1 iCloudSharedPhotosEnabled];
}

id objc_msgSend_iCloudTermsText(void *a1, const char *a2, ...)
{
  return _[a1 iCloudTermsText];
}

id objc_msgSend_iCloudUsername(void *a1, const char *a2, ...)
{
  return _[a1 iCloudUsername];
}

id objc_msgSend_iCloudWelcomeViewController(void *a1, const char *a2, ...)
{
  return _[a1 iCloudWelcomeViewController];
}

id objc_msgSend_iTunesAccount(void *a1, const char *a2, ...)
{
  return _[a1 iTunesAccount];
}

id objc_msgSend_iTunesAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 iTunesAltDSID];
}

id objc_msgSend_iTunesFileVideoResolution(void *a1, const char *a2, ...)
{
  return _[a1 iTunesFileVideoResolution];
}

id objc_msgSend_iTunesTermsText(void *a1, const char *a2, ...)
{
  return _[a1 iTunesTermsText];
}

id objc_msgSend_iTunesUsername(void *a1, const char *a2, ...)
{
  return _[a1 iTunesUsername];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_idleScreenSaverType(void *a1, const char *a2, ...)
{
  return _[a1 idleScreenSaverType];
}

id objc_msgSend_idleScreenThemes(void *a1, const char *a2, ...)
{
  return _[a1 idleScreenThemes];
}

id objc_msgSend_imAccountsFacade(void *a1, const char *a2, ...)
{
  return _[a1 imAccountsFacade];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_imageForSignalStrength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForSignalStrength:");
}

id objc_msgSend_imageFrame(void *a1, const char *a2, ...)
{
  return _[a1 imageFrame];
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:");
}

id objc_msgSend_imageProxy(void *a1, const char *a2, ...)
{
  return _[a1 imageProxy];
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _[a1 imageView];
}

id objc_msgSend_imageWithActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithActions:");
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:");
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithData:");
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_includesRelays(void *a1, const char *a2, ...)
{
  return _[a1 includesRelays];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObjectIdenticalTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectIdenticalTo:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexPathByAddingIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathByAddingIndex:");
}

id objc_msgSend_indexPathForItem_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForItem:inSection:");
}

id objc_msgSend_indexPathForLastFocusedItem(void *a1, const char *a2, ...)
{
  return _[a1 indexPathForLastFocusedItem];
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForRow:inSection:");
}

id objc_msgSend_indexPathForSettingItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForSettingItem:");
}

id objc_msgSend_indexPathWithIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathWithIndex:");
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndex:");
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_info(void *a1, const char *a2, ...)
{
  return _[a1 info];
}

id objc_msgSend_infoArray(void *a1, const char *a2, ...)
{
  return _[a1 infoArray];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_infoForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoForIdentifier:");
}

id objc_msgSend_infoWithFacade_identifier_allowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoWithFacade:identifier:allowed:");
}

id objc_msgSend_informativeText(void *a1, const char *a2, ...)
{
  return _[a1 informativeText];
}

id objc_msgSend_initDisplaySharedAlbums_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initDisplaySharedAlbums:");
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingFromData:error:");
}

id objc_msgSend_initRemoteCameraDevicePicker(void *a1, const char *a2, ...)
{
  return _[a1 initRemoteCameraDevicePicker];
}

id objc_msgSend_initWithAccount_amsBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccount:amsBag:");
}

id objc_msgSend_initWithAccount_freeSetting_paidSetting_delegate_bag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccount:freeSetting:paidSetting:delegate:bag:");
}

id objc_msgSend_initWithAccount_presentingViewController_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccount:presentingViewController:options:");
}

id objc_msgSend_initWithAccountIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccountIdentifiers:");
}

id objc_msgSend_initWithAccountStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccountStore:");
}

id objc_msgSend_initWithAccountStore_userProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccountStore:userProfile:");
}

id objc_msgSend_initWithAccountTypes_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccountTypes:delegate:");
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityIndicatorStyle:");
}

id objc_msgSend_initWithAdvertisingType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAdvertisingType:");
}

id objc_msgSend_initWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAltDSID:");
}

id objc_msgSend_initWithAltDSID_username_nameComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAltDSID:username:nameComponents:");
}

id objc_msgSend_initWithAmbientFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAmbientFacade:");
}

id objc_msgSend_initWithAmbientFacade_posterBoardFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAmbientFacade:posterBoardFacade:");
}

id objc_msgSend_initWithAmbientFacade_previewViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAmbientFacade:previewViewController:");
}

id objc_msgSend_initWithAppContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAppContext:");
}

id objc_msgSend_initWithApplicationBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationBundleIdentifier:");
}

id objc_msgSend_initWithArrangedSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArrangedSubviews:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAudioQuality_title_subtitle_moreInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAudioQuality:title:subtitle:moreInfo:");
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:target:action:");
}

id objc_msgSend_initWithBase64EncodedString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBase64EncodedString:options:");
}

id objc_msgSend_initWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBlock:");
}

id objc_msgSend_initWithBluetoothDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBluetoothDevice:");
}

id objc_msgSend_initWithBluetoothFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBluetoothFacade:");
}

id objc_msgSend_initWithBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBounds:");
}

id objc_msgSend_initWithBundle_appIdentifier_containerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundle:appIdentifier:containerPath:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithBundleIdentifierOfSystemPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifierOfSystemPlaceholder:error:");
}

id objc_msgSend_initWithCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCGImage:");
}

id objc_msgSend_initWithCalendarIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCalendarIdentifier:");
}

id objc_msgSend_initWithCameraItem_controlCenterAndSiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCameraItem:controlCenterAndSiriEnabled:");
}

id objc_msgSend_initWithCameraProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCameraProfile:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithCategoryModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCategoryModel:");
}

id objc_msgSend_initWithColorMap_andTrainMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithColorMap:andTrainMap:");
}

id objc_msgSend_initWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCompletion:");
}

id objc_msgSend_initWithConditions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConditions:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithConfiguration_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:dataSource:");
}

id objc_msgSend_initWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfFile:");
}

id objc_msgSend_initWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:");
}

id objc_msgSend_initWithContext_window_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:window:delegate:");
}

id objc_msgSend_initWithCoreUtilsPairedPeer_isDevicePairing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCoreUtilsPairedPeer:isDevicePairing:");
}

id objc_msgSend_initWithCriteria_modes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCriteria:modes:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithDatabaseFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseFile:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDestinationDisplayMode_kind_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDestinationDisplayMode:kind:source:");
}

id objc_msgSend_initWithDeviceFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceFeatures:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDisplayMode_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDisplayMode:reason:");
}

id objc_msgSend_initWithDisplayName_displayDescription_isSelected_underlyingConfiguration_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDisplayName:displayDescription:isSelected:underlyingConfiguration:");
}

id objc_msgSend_initWithDomain_containerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:containerPath:");
}

id objc_msgSend_initWithDomain_key_containerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:key:containerPath:");
}

id objc_msgSend_initWithDomain_notifyChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:notifyChanges:");
}

id objc_msgSend_initWithDuration_curve_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDuration:curve:animations:");
}

id objc_msgSend_initWithDuration_timingParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDuration:timingParameters:");
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffect:");
}

id objc_msgSend_initWithExplanation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExplanation:");
}

id objc_msgSend_initWithExplanation_target_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExplanation:target:attributes:");
}

id objc_msgSend_initWithFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFacade:");
}

id objc_msgSend_initWithFacade_optionsType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFacade:optionsType:");
}

id objc_msgSend_initWithFlow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFlow:");
}

id objc_msgSend_initWithFollowUpController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFollowUpController:");
}

id objc_msgSend_initWithFormattingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormattingBlock:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_collectionViewLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:collectionViewLayout:");
}

id objc_msgSend_initWithHMService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHMService:");
}

id objc_msgSend_initWithHandlingClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandlingClass:");
}

id objc_msgSend_initWithHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHome:");
}

id objc_msgSend_initWithHomeMangerConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHomeMangerConfiguration:");
}

id objc_msgSend_initWithHomeUniqueIdentifier_userUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHomeUniqueIdentifier:userUniqueIdentifier:");
}

id objc_msgSend_initWithIPAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIPAddress:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdentifier_localizedName_localizedDescription_previewImageURL_active_disabled_preferredOrder_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithIdentifier:localizedName:localizedDescription:previewImageURL:active:disabled:preferredOrder:");
}

id objc_msgSend_initWithIdentifier_localizedName_localizedDescriptionText_previewImageURL_isDisabled_preferredOrder_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithIdentifier:localizedName:localizedDescriptionText:previewImageURL:isDisabled:preferredOrder:");
}

id objc_msgSend_initWithIdentifier_type_displayName_displayDescription_isSelected_underlyingConfiguration_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:type:displayName:displayDescription:isSelected:underlyingConfiguration:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:");
}

id objc_msgSend_initWithImage_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:identifier:");
}

id objc_msgSend_initWithImageAssetName_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageAssetName:inBundle:");
}

id objc_msgSend_initWithImageURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageURL:");
}

id objc_msgSend_initWithInfo_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInfo:identifier:");
}

id objc_msgSend_initWithInputs_outputs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInputs:outputs:");
}

id objc_msgSend_initWithInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInterface:");
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItems:");
}

id objc_msgSend_initWithKeyPath_BOOLeanValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyPath:BOOLeanValue:");
}

id objc_msgSend_initWithLangauge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLangauge:");
}

id objc_msgSend_initWithLanguageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguageIdentifier:");
}

id objc_msgSend_initWithLanguages_inputModes_updateFromPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguages:inputModes:updateFromPreferences:");
}

id objc_msgSend_initWithLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLayer:");
}

id objc_msgSend_initWithLocaleIdentifier_displayName_shortDisplayName_isSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocaleIdentifier:displayName:shortDisplayName:isSelected:");
}

id objc_msgSend_initWithMass_stiffness_damping_initialVelocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMass:stiffness:damping:initialVelocity:");
}

id objc_msgSend_initWithModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithModel:");
}

id objc_msgSend_initWithNEConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNEConfiguration:");
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:");
}

id objc_msgSend_initWithName_bundleIdentifier_bundleVersion_vendor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:bundleIdentifier:bundleVersion:vendor:size:");
}

id objc_msgSend_initWithName_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:description:");
}

id objc_msgSend_initWithNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNavigationController:");
}

id objc_msgSend_initWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNibName:bundle:");
}

id objc_msgSend_initWithNumberOfDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNumberOfDigits:");
}

id objc_msgSend_initWithNumberingSystemsFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNumberingSystemsFacade:");
}

id objc_msgSend_initWithObject_imageLoader_groupType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:imageLoader:groupType:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithOffSettingsOption_onSettingsOption_disabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOffSettingsOption:onSettingsOption:disabled:");
}

id objc_msgSend_initWithPackageName_type_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPackageName:type:inBundle:");
}

id objc_msgSend_initWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:");
}

id objc_msgSend_initWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPattern:options:error:");
}

id objc_msgSend_initWithPhotoCollectionGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPhotoCollectionGroup:");
}

id objc_msgSend_initWithPhotoCollections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPhotoCollections:");
}

id objc_msgSend_initWithPhotoLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPhotoLibrary:");
}

id objc_msgSend_initWithPhotoSource_ambientFacade_previewViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPhotoSource:ambientFacade:previewViewController:");
}

id objc_msgSend_initWithPhotoSourceModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPhotoSourceModel:");
}

id objc_msgSend_initWithPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPredicate:");
}

id objc_msgSend_initWithPreferredLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPreferredLanguages:");
}

id objc_msgSend_initWithProgressViewStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProgressViewStyle:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithRPDevice_isDedicated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRPDevice:isDedicated:");
}

id objc_msgSend_initWithRemotePairingPairedHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRemotePairingPairedHost:");
}

id objc_msgSend_initWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:");
}

id objc_msgSend_initWithRequest_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:presentingViewController:");
}

id objc_msgSend_initWithRole_needsSandboxExtensions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRole:needsSandboxExtensions:");
}

id objc_msgSend_initWithRoles_needsSandboxExtensions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoles:needsSandboxExtensions:");
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootViewController:");
}

id objc_msgSend_initWithScaleToSize_scaleMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithScaleToSize:scaleMode:");
}

id objc_msgSend_initWithSearchResultsController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSearchResultsController:");
}

id objc_msgSend_initWithService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:");
}

id objc_msgSend_initWithServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceName:");
}

id objc_msgSend_initWithSharingFilter_localizedName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSharingFilter:localizedName:");
}

id objc_msgSend_initWithSharingItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSharingItems:");
}

id objc_msgSend_initWithSpatialEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSpatialEnabled:");
}

id objc_msgSend_initWithStoreRequestContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStoreRequestContext:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:attributes:");
}

id objc_msgSend_initWithSuggestedUserIdentifier_suggestedUserShortName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuggestedUserIdentifier:suggestedUserShortName:");
}

id objc_msgSend_initWithSuggestedUserProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuggestedUserProfile:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithSurrogateID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSurrogateID:");
}

id objc_msgSend_initWithTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTableView:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTerms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTerms:");
}

id objc_msgSend_initWithTextAlignment_location_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTextAlignment:location:options:");
}

id objc_msgSend_initWithTimeout_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeout:queue:completion:");
}

id objc_msgSend_initWithTimingCurveProviderType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimingCurveProviderType:");
}

id objc_msgSend_initWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:");
}

id objc_msgSend_initWithTitle_description_representedObject_keyPath_readOnly_accessoryTypes_childControllerClass_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithTitle:description:representedObject:keyPath:readOnly:accessoryTypes:childControllerClass:");
}

id objc_msgSend_initWithTitle_prompt_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:prompt:completion:");
}

id objc_msgSend_initWithTitle_representedObject_keyPath_availableValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:representedObject:keyPath:availableValues:");
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:style:target:action:");
}

id objc_msgSend_initWithTitle_text_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:text:");
}

id objc_msgSend_initWithTitle_text_footers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:text:footers:");
}

id objc_msgSend_initWithTrains_andColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTrains:andColors:");
}

id objc_msgSend_initWithTransitionEffectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransitionEffectModel:");
}

id objc_msgSend_initWithTransitionStyle_ambientFacade_previewViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransitionStyle:ambientFacade:previewViewController:");
}

id objc_msgSend_initWithTransitionStyleModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransitionStyleModel:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithURL_cachePolicy_timeoutInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:cachePolicy:timeoutInterval:");
}

id objc_msgSend_initWithURLRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURLRequest:");
}

id objc_msgSend_initWithUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUser:");
}

id objc_msgSend_initWithUser_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUser:configuration:");
}

id objc_msgSend_initWithUser_serviceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUser:serviceType:");
}

id objc_msgSend_initWithUserProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserProfile:");
}

id objc_msgSend_initWithUserProfile_amsBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserProfile:amsBag:");
}

id objc_msgSend_initWithUserProfile_isVoiceProfileAvailable_homeUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserProfile:isVoiceProfileAvailable:homeUserInfo:");
}

id objc_msgSend_initWithUserProfileAuthenticationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserProfileAuthenticationType:");
}

id objc_msgSend_initWithUserProfileFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserProfileFacade:");
}

id objc_msgSend_initWithUserProfileIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserProfileIdentifier:");
}

id objc_msgSend_initWithUserProfileIdentifier_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserProfileIdentifier:configuration:");
}

id objc_msgSend_initWithUserProfilesFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserProfilesFacade:");
}

id objc_msgSend_initWithUserType_allowsManualSignIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserType:allowsManualSignIn:");
}

id objc_msgSend_initWithVoiceTriggerFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVoiceTriggerFacade:");
}

id objc_msgSend_initWithiCloudAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithiCloudAltDSID:");
}

id objc_msgSend_inputModeFacade(void *a1, const char *a2, ...)
{
  return _[a1 inputModeFacade];
}

id objc_msgSend_inputs(void *a1, const char *a2, ...)
{
  return _[a1 inputs];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertPreferredLanguage_withVariants_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertPreferredLanguage:withVariants:atIndex:");
}

id objc_msgSend_insertRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_insertSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSections:withRowAnimation:");
}

id objc_msgSend_insertSublayer_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSublayer:atIndex:");
}

id objc_msgSend_insertSubview_aboveSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:aboveSubview:");
}

id objc_msgSend_insertSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:atIndex:");
}

id objc_msgSend_insertions(void *a1, const char *a2, ...)
{
  return _[a1 insertions];
}

id objc_msgSend_installProfileData_outError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installProfileData:outError:");
}

id objc_msgSend_installedProfileIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 installedProfileIdentifiers];
}

id objc_msgSend_installedProfileWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installedProfileWithIdentifier:");
}

id objc_msgSend_installedProfilesWithFilterFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installedProfilesWithFilterFlags:");
}

id objc_msgSend_instructionLabel(void *a1, const char *a2, ...)
{
  return _[a1 instructionLabel];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerForKey:");
}

id objc_msgSend_integerForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerForKey:defaultValue:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interface(void *a1, const char *a2, ...)
{
  return _[a1 interface];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_internetAvailable(void *a1, const char *a2, ...)
{
  return _[a1 internetAvailable];
}

id objc_msgSend_intersectsSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectsSet:");
}

id objc_msgSend_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return _[a1 intrinsicContentSize];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateCachedAvailablePhotoCollectionGroups(void *a1, const char *a2, ...)
{
  return _[a1 invalidateCachedAvailablePhotoCollectionGroups];
}

id objc_msgSend_invalidateSystemAppearance(void *a1, const char *a2, ...)
{
  return _[a1 invalidateSystemAppearance];
}

id objc_msgSend_inverseUniqueID(void *a1, const char *a2, ...)
{
  return _[a1 inverseUniqueID];
}

id objc_msgSend_ipAddress(void *a1, const char *a2, ...)
{
  return _[a1 ipAddress];
}

id objc_msgSend_ipAddressesFormatter(void *a1, const char *a2, ...)
{
  return _[a1 ipAddressesFormatter];
}

id objc_msgSend_ipEntryViewControllerDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ipEntryViewControllerDidFinish:");
}

id objc_msgSend_ipEntryViewDidFinishEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ipEntryViewDidFinishEditing:");
}

id objc_msgSend_ipEntryViewIPAddressDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ipEntryViewIPAddressDidChange:");
}

id objc_msgSend_isAboveBandwidthThreshold(void *a1, const char *a2, ...)
{
  return _[a1 isAboveBandwidthThreshold];
}

id objc_msgSend_isActivated(void *a1, const char *a2, ...)
{
  return _[a1 isActivated];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isAddingAnyUser(void *a1, const char *a2, ...)
{
  return _[a1 isAddingAnyUser];
}

id objc_msgSend_isAddingGuestUser(void *a1, const char *a2, ...)
{
  return _[a1 isAddingGuestUser];
}

id objc_msgSend_isAddingPrimaryUser(void *a1, const char *a2, ...)
{
  return _[a1 isAddingPrimaryUser];
}

id objc_msgSend_isAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 isAdvertising];
}

id objc_msgSend_isAirPlaySecuritySettingsUIAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isAirPlaySecuritySettingsUIAllowed];
}

id objc_msgSend_isAllowsRemoteAppPairingLockedDown(void *a1, const char *a2, ...)
{
  return _[a1 isAllowsRemoteAppPairingLockedDown];
}

id objc_msgSend_isAnimating(void *a1, const char *a2, ...)
{
  return _[a1 isAnimating];
}

id objc_msgSend_isAppEnabledForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAppEnabledForBundleID:");
}

id objc_msgSend_isAppStoreVendable(void *a1, const char *a2, ...)
{
  return _[a1 isAppStoreVendable];
}

id objc_msgSend_isAppleMusicSubscribed(void *a1, const char *a2, ...)
{
  return _[a1 isAppleMusicSubscribed];
}

id objc_msgSend_isAuthenticationInProgress(void *a1, const char *a2, ...)
{
  return _[a1 isAuthenticationInProgress];
}

id objc_msgSend_isAutoAppDownloadsEnabledForAccountIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAutoAppDownloadsEnabledForAccountIdentifier:");
}

id objc_msgSend_isAutomaticAppUpdatesAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isAutomaticAppUpdatesAllowed];
}

id objc_msgSend_isAutomaticDateAndTimeLockedDown(void *a1, const char *a2, ...)
{
  return _[a1 isAutomaticDateAndTimeLockedDown];
}

id objc_msgSend_isAutomaticTimeZoneSelectionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAutomaticTimeZoneSelectionEnabled];
}

id objc_msgSend_isAutomaticallyConfigured(void *a1, const char *a2, ...)
{
  return _[a1 isAutomaticallyConfigured];
}

id objc_msgSend_isBTKeyboardConnected(void *a1, const char *a2, ...)
{
  return _[a1 isBTKeyboardConnected];
}

id objc_msgSend_isBoolSettingLockedDownByRestrictions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBoolSettingLockedDownByRestrictions:");
}

id objc_msgSend_isBuiltIn(void *a1, const char *a2, ...)
{
  return _[a1 isBuiltIn];
}

id objc_msgSend_isCarryOrLiveOnConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 isCarryOrLiveOnConfiguration];
}

id objc_msgSend_isCategoryFilterEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isCategoryFilterEnabled];
}

id objc_msgSend_isChangingStoreFront(void *a1, const char *a2, ...)
{
  return _[a1 isChangingStoreFront];
}

id objc_msgSend_isCharging(void *a1, const char *a2, ...)
{
  return _[a1 isCharging];
}

id objc_msgSend_isCheckingForUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCheckingForUpdates:");
}

id objc_msgSend_isCloudLibraryInitialImport(void *a1, const char *a2, ...)
{
  return _[a1 isCloudLibraryInitialImport];
}

id objc_msgSend_isCompactVoiceTriggerAvailableForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCompactVoiceTriggerAvailableForLanguageCode:");
}

id objc_msgSend_isConfigurationInProgress(void *a1, const char *a2, ...)
{
  return _[a1 isConfigurationInProgress];
}

id objc_msgSend_isConfigurationProfileLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isConfigurationProfileLoaded];
}

id objc_msgSend_isConfiguredForUse(void *a1, const char *a2, ...)
{
  return _[a1 isConfiguredForUse];
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return _[a1 isConnected];
}

id objc_msgSend_isContentFrozen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isContentFrozen:");
}

id objc_msgSend_isContentUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 isContentUnlocked];
}

id objc_msgSend_isCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentDevice];
}

id objc_msgSend_isCurrentOutputDeviceHDMI(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentOutputDeviceHDMI];
}

id objc_msgSend_isDaylightSavingTime(void *a1, const char *a2, ...)
{
  return _[a1 isDaylightSavingTime];
}

id objc_msgSend_isDedicated(void *a1, const char *a2, ...)
{
  return _[a1 isDedicated];
}

id objc_msgSend_isDescendantOfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDescendantOfView:");
}

id objc_msgSend_isDeviceNameModificationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceNameModificationAllowed];
}

id objc_msgSend_isDeviceSleepAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceSleepAllowed];
}

id objc_msgSend_isDictationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isDictationEnabled];
}

id objc_msgSend_isDictationSupportedForPreferredLanguages(void *a1, const char *a2, ...)
{
  return _[a1 isDictationSupportedForPreferredLanguages];
}

id objc_msgSend_isDictationSupportedForSystemLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDictationSupportedForSystemLanguage:");
}

id objc_msgSend_isDirty(void *a1, const char *a2, ...)
{
  return _[a1 isDirty];
}

id objc_msgSend_isDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isDisabled];
}

id objc_msgSend_isDolbyAtmosAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isDolbyAtmosAvailable];
}

id objc_msgSend_isDolbyDigitalEncoderAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isDolbyDigitalEncoderAvailable];
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _[a1 isEditing];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEnabledForDataclass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnabledForDataclass:");
}

id objc_msgSend_isEnabledOnDevice(void *a1, const char *a2, ...)
{
  return _[a1 isEnabledOnDevice];
}

id objc_msgSend_isEnhancedAudioAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isEnhancedAudioAvailable];
}

id objc_msgSend_isEnrolled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnrolled:");
}

id objc_msgSend_isEnrolledInBetaProgram(void *a1, const char *a2, ...)
{
  return _[a1 isEnrolledInBetaProgram];
}

id objc_msgSend_isEnrolledInDeKOTA(void *a1, const char *a2, ...)
{
  return _[a1 isEnrolledInDeKOTA];
}

id objc_msgSend_isEqual(void *a1, const char *a2, ...)
{
  return _[a1 isEqual];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isEquivalentTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEquivalentTo:");
}

id objc_msgSend_isExpanseSupported(void *a1, const char *a2, ...)
{
  return _[a1 isExpanseSupported];
}

id objc_msgSend_isFocused(void *a1, const char *a2, ...)
{
  return _[a1 isFocused];
}

id objc_msgSend_isGameCenterEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isGameCenterEnabled];
}

id objc_msgSend_isGeometryFlipped(void *a1, const char *a2, ...)
{
  return _[a1 isGeometryFlipped];
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _[a1 isHidden];
}

id objc_msgSend_isITunesMatchSubscribed(void *a1, const char *a2, ...)
{
  return _[a1 isITunesMatchSubscribed];
}

id objc_msgSend_isImageLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isImageLoaded];
}

id objc_msgSend_isInEar(void *a1, const char *a2, ...)
{
  return _[a1 isInEar];
}

id objc_msgSend_isInputModeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInputModeEnabled:");
}

id objc_msgSend_isJaliscoInitialImport(void *a1, const char *a2, ...)
{
  return _[a1 isJaliscoInitialImport];
}

id objc_msgSend_isLearningInProgress(void *a1, const char *a2, ...)
{
  return _[a1 isLearningInProgress];
}

id objc_msgSend_isLoadingBypassRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 isLoadingBypassRestrictions];
}

id objc_msgSend_isLoadingContentRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 isLoadingContentRestrictions];
}

id objc_msgSend_isMagicPaired(void *a1, const char *a2, ...)
{
  return _[a1 isMagicPaired];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _[a1 isMainThread];
}

id objc_msgSend_isManagedByProfile(void *a1, const char *a2, ...)
{
  return _[a1 isManagedByProfile];
}

id objc_msgSend_isManagedSubscriptionsURLLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isManagedSubscriptionsURLLoaded];
}

id objc_msgSend_isManateeAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isManateeAvailable:");
}

id objc_msgSend_isMatchEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isMatchEnabled];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isMusicAlbums(void *a1, const char *a2, ...)
{
  return _[a1 isMusicAlbums];
}

id objc_msgSend_isMusicAlbumsSelected(void *a1, const char *a2, ...)
{
  return _[a1 isMusicAlbumsSelected];
}

id objc_msgSend_isMyPhotosCategory(void *a1, const char *a2, ...)
{
  return _[a1 isMyPhotosCategory];
}

id objc_msgSend_isMyPhotosOption(void *a1, const char *a2, ...)
{
  return _[a1 isMyPhotosOption];
}

id objc_msgSend_isNameModificationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isNameModificationAllowed];
}

id objc_msgSend_isNavigating(void *a1, const char *a2, ...)
{
  return _[a1 isNavigating];
}

id objc_msgSend_isObservingTCCInfos(void *a1, const char *a2, ...)
{
  return _[a1 isObservingTCCInfos];
}

id objc_msgSend_isOnDemandEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isOnDemandEnabled];
}

id objc_msgSend_isPaired(void *a1, const char *a2, ...)
{
  return _[a1 isPaired];
}

id objc_msgSend_isPairedWithAppleRemote(void *a1, const char *a2, ...)
{
  return _[a1 isPairedWithAppleRemote];
}

id objc_msgSend_isPairing(void *a1, const char *a2, ...)
{
  return _[a1 isPairing];
}

id objc_msgSend_isPaused(void *a1, const char *a2, ...)
{
  return _[a1 isPaused];
}

id objc_msgSend_isPeopleCategory(void *a1, const char *a2, ...)
{
  return _[a1 isPeopleCategory];
}

id objc_msgSend_isPlaceholder(void *a1, const char *a2, ...)
{
  return _[a1 isPlaceholder];
}

id objc_msgSend_isPortraitClockEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isPortraitClockEnabled];
}

id objc_msgSend_isPrimary(void *a1, const char *a2, ...)
{
  return _[a1 isPrimary];
}

id objc_msgSend_isProfileBacked(void *a1, const char *a2, ...)
{
  return _[a1 isProfileBacked];
}

id objc_msgSend_isProfileLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isProfileLoaded];
}

id objc_msgSend_isProvisionallyEnrolled(void *a1, const char *a2, ...)
{
  return _[a1 isProvisionallyEnrolled];
}

id objc_msgSend_isRMVEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isRMVEnabled];
}

id objc_msgSend_isReadyForUse(void *a1, const char *a2, ...)
{
  return _[a1 isReadyForUse];
}

id objc_msgSend_isRemoteAppPairingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isRemoteAppPairingAllowed];
}

id objc_msgSend_isRemovingUser(void *a1, const char *a2, ...)
{
  return _[a1 isRemovingUser];
}

id objc_msgSend_isRestricted(void *a1, const char *a2, ...)
{
  return _[a1 isRestricted];
}

id objc_msgSend_isRoot(void *a1, const char *a2, ...)
{
  return _[a1 isRoot];
}

id objc_msgSend_isRunning(void *a1, const char *a2, ...)
{
  return _[a1 isRunning];
}

id objc_msgSend_isSandboxUIEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSandboxUIEnabled];
}

id objc_msgSend_isSelected(void *a1, const char *a2, ...)
{
  return _[a1 isSelected];
}

id objc_msgSend_isSendAppAnalyticsLockedDown(void *a1, const char *a2, ...)
{
  return _[a1 isSendAppAnalyticsLockedDown];
}

id objc_msgSend_isSendDataToAppleLockedDown(void *a1, const char *a2, ...)
{
  return _[a1 isSendDataToAppleLockedDown];
}

id objc_msgSend_isSettingAvailableForKeyPath_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSettingAvailableForKeyPath:completionHandler:");
}

id objc_msgSend_isSettingsModificationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isSettingsModificationAllowed];
}

id objc_msgSend_isSharedLibraryEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSharedLibraryEnabled];
}

id objc_msgSend_isSharedWithYouEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSharedWithYouEnabled];
}

id objc_msgSend_isSignOutInProgress(void *a1, const char *a2, ...)
{
  return _[a1 isSignOutInProgress];
}

id objc_msgSend_isSigningInOrOutInProgress(void *a1, const char *a2, ...)
{
  return _[a1 isSigningInOrOutInProgress];
}

id objc_msgSend_isSingleUserDevice(void *a1, const char *a2, ...)
{
  return _[a1 isSingleUserDevice];
}

id objc_msgSend_isSiriAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isSiriAvailable];
}

id objc_msgSend_isSiriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSiriEnabled];
}

id objc_msgSend_isSiriSupportedForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSiriSupportedForLanguage:");
}

id objc_msgSend_isSleepDisabledByProfile(void *a1, const char *a2, ...)
{
  return _[a1 isSleepDisabledByProfile];
}

id objc_msgSend_isSlideshowCategory(void *a1, const char *a2, ...)
{
  return _[a1 isSlideshowCategory];
}

id objc_msgSend_isSlideshowOption(void *a1, const char *a2, ...)
{
  return _[a1 isSlideshowOption];
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubclassOfClass:");
}

id objc_msgSend_isSupervised(void *a1, const char *a2, ...)
{
  return _[a1 isSupervised];
}

id objc_msgSend_isSupported(void *a1, const char *a2, ...)
{
  return _[a1 isSupported];
}

id objc_msgSend_isTimeZoneUpdateAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isTimeZoneUpdateAvailable];
}

id objc_msgSend_isTrusted(void *a1, const char *a2, ...)
{
  return _[a1 isTrusted];
}

id objc_msgSend_isUpdateRunningWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUpdateRunningWithCompletion:");
}

id objc_msgSend_isUpdateWaitingWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUpdateWaitingWithCompletion:");
}

id objc_msgSend_isUpdatingAsnFreeSetting(void *a1, const char *a2, ...)
{
  return _[a1 isUpdatingAsnFreeSetting];
}

id objc_msgSend_isUpdatingAsnPaidSetting(void *a1, const char *a2, ...)
{
  return _[a1 isUpdatingAsnPaidSetting];
}

id objc_msgSend_isUpdatingPairedAppleRemoteState(void *a1, const char *a2, ...)
{
  return _[a1 isUpdatingPairedAppleRemoteState];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_isValidMediaPassword_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidMediaPassword:error:");
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isViewLoaded];
}

id objc_msgSend_isVirtual(void *a1, const char *a2, ...)
{
  return _[a1 isVirtual];
}

id objc_msgSend_isVoiceProfileAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isVoiceProfileAvailable];
}

id objc_msgSend_isVoiceProfileAvailableForiCloudAltDSID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVoiceProfileAvailableForiCloudAltDSID:completion:");
}

id objc_msgSend_isVoiceTriggerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isVoiceTriggerEnabled];
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _[a1 item];
}

id objc_msgSend_itemForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemForBundleID:");
}

id objc_msgSend_itemManager(void *a1, const char *a2, ...)
{
  return _[a1 itemManager];
}

id objc_msgSend_itmsFacade(void *a1, const char *a2, ...)
{
  return _[a1 itmsFacade];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_keyCommandWithKeyCodes_modifierFlags_buttonType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyCommandWithKeyCodes:modifierFlags:buttonType:");
}

id objc_msgSend_keyPath(void *a1, const char *a2, ...)
{
  return _[a1 keyPath];
}

id objc_msgSend_keyPathWithRootObject_path_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyPathWithRootObject:path:");
}

id objc_msgSend_killPhotoSourcesDaemon(void *a1, const char *a2, ...)
{
  return _[a1 killPhotoSourcesDaemon];
}

id objc_msgSend_killStoreApps(void *a1, const char *a2, ...)
{
  return _[a1 killStoreApps];
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return _[a1 kind];
}

id objc_msgSend_knockForEntry(void *a1, const char *a2, ...)
{
  return _[a1 knockForEntry];
}

id objc_msgSend_knockTimer(void *a1, const char *a2, ...)
{
  return _[a1 knockTimer];
}

id objc_msgSend_knownHomeUserIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 knownHomeUserIdentifiers];
}

id objc_msgSend_knownPosterItemWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knownPosterItemWithID:");
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_language(void *a1, const char *a2, ...)
{
  return _[a1 language];
}

id objc_msgSend_languageFormatter(void *a1, const char *a2, ...)
{
  return _[a1 languageFormatter];
}

id objc_msgSend_languageFromLanguage_byReplacingRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageFromLanguage:byReplacingRegion:");
}

id objc_msgSend_languageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 languageIdentifier];
}

id objc_msgSend_languageIdentifierWithoutCurrentRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIdentifierWithoutCurrentRegion:");
}

id objc_msgSend_languageImage(void *a1, const char *a2, ...)
{
  return _[a1 languageImage];
}

id objc_msgSend_languageListFilter(void *a1, const char *a2, ...)
{
  return _[a1 languageListFilter];
}

id objc_msgSend_languageSelectionHandler(void *a1, const char *a2, ...)
{
  return _[a1 languageSelectionHandler];
}

id objc_msgSend_languageWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageWithIdentifier:");
}

id objc_msgSend_lastBaselineAnchor(void *a1, const char *a2, ...)
{
  return _[a1 lastBaselineAnchor];
}

id objc_msgSend_lastCheckDate(void *a1, const char *a2, ...)
{
  return _[a1 lastCheckDate];
}

id objc_msgSend_lastConfigurationCheckResult(void *a1, const char *a2, ...)
{
  return _[a1 lastConfigurationCheckResult];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPBSNeedsHomeKitAutoOnboardingValue(void *a1, const char *a2, ...)
{
  return _[a1 lastPBSNeedsHomeKitAutoOnboardingValue];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastProgressText(void *a1, const char *a2, ...)
{
  return _[a1 lastProgressText];
}

id objc_msgSend_latestResults(void *a1, const char *a2, ...)
{
  return _[a1 latestResults];
}

id objc_msgSend_launchCRDApp(void *a1, const char *a2, ...)
{
  return _[a1 launchCRDApp];
}

id objc_msgSend_launchHomeCaptiveViewServiceIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 launchHomeCaptiveViewServiceIfNeeded];
}

id objc_msgSend_launchPhotoSourcesDaemon(void *a1, const char *a2, ...)
{
  return _[a1 launchPhotoSourcesDaemon];
}

id objc_msgSend_launchWithTicketNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchWithTicketNumber:");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_leafPhotoSourcesByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 leafPhotoSourcesByIdentifier];
}

id objc_msgSend_learnNextActionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "learnNextActionWithCompletion:");
}

id objc_msgSend_learnPreviousActionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "learnPreviousActionWithCompletion:");
}

id objc_msgSend_learnedActions(void *a1, const char *a2, ...)
{
  return _[a1 learnedActions];
}

id objc_msgSend_learnedDeviceUUID(void *a1, const char *a2, ...)
{
  return _[a1 learnedDeviceUUID];
}

id objc_msgSend_learningHeaderStackView(void *a1, const char *a2, ...)
{
  return _[a1 learningHeaderStackView];
}

id objc_msgSend_learningManager(void *a1, const char *a2, ...)
{
  return _[a1 learningManager];
}

id objc_msgSend_learningProgressStackView(void *a1, const char *a2, ...)
{
  return _[a1 learningProgressStackView];
}

id objc_msgSend_learningStackView(void *a1, const char *a2, ...)
{
  return _[a1 learningStackView];
}

id objc_msgSend_legalDocs(void *a1, const char *a2, ...)
{
  return _[a1 legalDocs];
}

id objc_msgSend_legalSafetyText(void *a1, const char *a2, ...)
{
  return _[a1 legalSafetyText];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lightGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 lightGrayColor];
}

id objc_msgSend_linkWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkWithBundleIdentifier:");
}

id objc_msgSend_listGroupWithTitle_representedObject_keyPath_configurationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listGroupWithTitle:representedObject:keyPath:configurationBlock:");
}

id objc_msgSend_listPairedHostsInvokingCompletionHandlerOnQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listPairedHostsInvokingCompletionHandlerOnQueue:completion:");
}

id objc_msgSend_listedExtensions(void *a1, const char *a2, ...)
{
  return _[a1 listedExtensions];
}

id objc_msgSend_load(void *a1, const char *a2, ...)
{
  return _[a1 load];
}

id objc_msgSend_loadConfigurationsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadConfigurationsWithCompletion:");
}

id objc_msgSend_loadConfigurationsWithCompletionQueue_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadConfigurationsWithCompletionQueue:handler:");
}

id objc_msgSend_loadLogFilePaths(void *a1, const char *a2, ...)
{
  return _[a1 loadLogFilePaths];
}

id objc_msgSend_loadVideoAsset(void *a1, const char *a2, ...)
{
  return _[a1 loadVideoAsset];
}

id objc_msgSend_loadViewController(void *a1, const char *a2, ...)
{
  return _[a1 loadViewController];
}

id objc_msgSend_loadWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadWithCompletionHandler:");
}

id objc_msgSend_loaderQueue(void *a1, const char *a2, ...)
{
  return _[a1 loaderQueue];
}

id objc_msgSend_loaderWithBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loaderWithBundle:");
}

id objc_msgSend_loadingInstalledApps(void *a1, const char *a2, ...)
{
  return _[a1 loadingInstalledApps];
}

id objc_msgSend_loadingProfile(void *a1, const char *a2, ...)
{
  return _[a1 loadingProfile];
}

id objc_msgSend_localAccessory(void *a1, const char *a2, ...)
{
  return _[a1 localAccessory];
}

id objc_msgSend_locale(void *a1, const char *a2, ...)
{
  return _[a1 locale];
}

id objc_msgSend_localeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localeIdentifier];
}

id objc_msgSend_localeIdentifierFromComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeIdentifierFromComponents:");
}

id objc_msgSend_localeRefreshRate(void *a1, const char *a2, ...)
{
  return _[a1 localeRefreshRate];
}

id objc_msgSend_localeWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeWithLocaleIdentifier:");
}

id objc_msgSend_localizedAccessoryText(void *a1, const char *a2, ...)
{
  return _[a1 localizedAccessoryText];
}

id objc_msgSend_localizedButtonCaption(void *a1, const char *a2, ...)
{
  return _[a1 localizedButtonCaption];
}

id objc_msgSend_localizedButtonTitle(void *a1, const char *a2, ...)
{
  return _[a1 localizedButtonTitle];
}

id objc_msgSend_localizedCaseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCaseInsensitiveCompare:");
}

id objc_msgSend_localizedCompactVoiceTriggerPhraseForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCompactVoiceTriggerPhraseForLanguageCode:");
}

id objc_msgSend_localizedCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCompare:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedDescriptionForItemInViewController_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescriptionForItemInViewController:atIndexPath:");
}

id objc_msgSend_localizedDescriptionForVoiceTriggerPhraseType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescriptionForVoiceTriggerPhraseType:");
}

id objc_msgSend_localizedDescriptionText(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescriptionText];
}

id objc_msgSend_localizedDisplayString(void *a1, const char *a2, ...)
{
  return _[a1 localizedDisplayString];
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return _[a1 localizedFailureReason];
}

id objc_msgSend_localizedJSTriggerString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedJSTriggerString:");
}

id objc_msgSend_localizedLanguageDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedLanguageDisplayName:");
}

id objc_msgSend_localizedLanguageFormatter(void *a1, const char *a2, ...)
{
  return _[a1 localizedLanguageFormatter];
}

id objc_msgSend_localizedMessageForHomeKitError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedMessageForHomeKitError:");
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedName_locale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedName:locale:");
}

id objc_msgSend_localizedNameForSiriLanguage_inDisplayLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForSiriLanguage:inDisplayLanguage:");
}

id objc_msgSend_localizedRecoverySuggestion(void *a1, const char *a2, ...)
{
  return _[a1 localizedRecoverySuggestion];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringForLanguage_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForLanguage:context:");
}

id objc_msgSend_localizedStringForName(void *a1, const char *a2, ...)
{
  return _[a1 localizedStringForName];
}

id objc_msgSend_localizedStringForNumberingSystem_short_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForNumberingSystem:short:");
}

id objc_msgSend_localizedStringForRegion_context_short_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForRegion:context:short:");
}

id objc_msgSend_localizedStringFromDate_dateStyle_timeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromDate:dateStyle:timeStyle:");
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromNumber:numberStyle:");
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_localizedStringWithKey_refreshRate_frameRate_referenceRefreshRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithKey:refreshRate:frameRate:referenceRefreshRate:");
}

id objc_msgSend_localizedStringWithUnits_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithUnits:value:");
}

id objc_msgSend_localizedTitle(void *a1, const char *a2, ...)
{
  return _[a1 localizedTitle];
}

id objc_msgSend_localizedTriggerString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedTriggerString:");
}

id objc_msgSend_localizedValue(void *a1, const char *a2, ...)
{
  return _[a1 localizedValue];
}

id objc_msgSend_localizedValueForSettingItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedValueForSettingItem:");
}

id objc_msgSend_localizedValueFormatter(void *a1, const char *a2, ...)
{
  return _[a1 localizedValueFormatter];
}

id objc_msgSend_localizedVoiceTriggerPhraseForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedVoiceTriggerPhraseForLanguageCode:");
}

id objc_msgSend_locationServicesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 locationServicesEnabled];
}

id objc_msgSend_locationSettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationSettingsNeededForBundleID:");
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return _[a1 lock];
}

id objc_msgSend_lockDemoContent(void *a1, const char *a2, ...)
{
  return _[a1 lockDemoContent];
}

id objc_msgSend_lockedDownRootCertificatesWithOutLocalizedSourceDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockedDownRootCertificatesWithOutLocalizedSourceDescription:");
}

id objc_msgSend_logFilePaths(void *a1, const char *a2, ...)
{
  return _[a1 logFilePaths];
}

id objc_msgSend_logPath(void *a1, const char *a2, ...)
{
  return _[a1 logPath];
}

id objc_msgSend_login(void *a1, const char *a2, ...)
{
  return _[a1 login];
}

id objc_msgSend_logsFacade(void *a1, const char *a2, ...)
{
  return _[a1 logsFacade];
}

id objc_msgSend_longDescription(void *a1, const char *a2, ...)
{
  return _[a1 longDescription];
}

id objc_msgSend_longTextItemFromSpecifierDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longTextItemFromSpecifierDictionary:");
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _[a1 longValue];
}

id objc_msgSend_lsRecord(void *a1, const char *a2, ...)
{
  return _[a1 lsRecord];
}

id objc_msgSend_macAddress(void *a1, const char *a2, ...)
{
  return _[a1 macAddress];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyAndVisible];
}

id objc_msgSend_makeObjectsPerformSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeObjectsPerformSelector:");
}

id objc_msgSend_manageSubscriptionsURL(void *a1, const char *a2, ...)
{
  return _[a1 manageSubscriptionsURL];
}

id objc_msgSend_managedPersonas(void *a1, const char *a2, ...)
{
  return _[a1 managedPersonas];
}

id objc_msgSend_markSystemLanguage(void *a1, const char *a2, ...)
{
  return _[a1 markSystemLanguage];
}

id objc_msgSend_marketNameDisplayResolutionFormatterWithRefreshRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "marketNameDisplayResolutionFormatterWithRefreshRate:");
}

id objc_msgSend_marketingPartNumber(void *a1, const char *a2, ...)
{
  return _[a1 marketingPartNumber];
}

id objc_msgSend_matchDomains(void *a1, const char *a2, ...)
{
  return _[a1 matchDomains];
}

id objc_msgSend_matchStatus(void *a1, const char *a2, ...)
{
  return _[a1 matchStatus];
}

id objc_msgSend_matchedLanguagesFromAvailableLanguages_forPreferredLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchedLanguagesFromAvailableLanguages:forPreferredLanguages:");
}

id objc_msgSend_matchesInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchesInString:options:range:");
}

id objc_msgSend_mediaDestinationDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 mediaDestinationDeviceID];
}

id objc_msgSend_mediaLibrarySettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaLibrarySettingsNeededForBundleID:");
}

id objc_msgSend_mediaProfile(void *a1, const char *a2, ...)
{
  return _[a1 mediaProfile];
}

id objc_msgSend_mediaServerDiscoveryConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 mediaServerDiscoveryConfiguration];
}

id objc_msgSend_memoriesContentEnabled(void *a1, const char *a2, ...)
{
  return _[a1 memoriesContentEnabled];
}

id objc_msgSend_menuRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 menuRecognizer];
}

id objc_msgSend_metadataContainer(void *a1, const char *a2, ...)
{
  return _[a1 metadataContainer];
}

id objc_msgSend_microphoneSettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "microphoneSettingsNeededForBundleID:");
}

id objc_msgSend_minusAutomaticDownloadKinds_withCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusAutomaticDownloadKinds:withCompletionBlock:");
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_minute(void *a1, const char *a2, ...)
{
  return _[a1 minute];
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return _[a1 mode];
}

id objc_msgSend_modeType(void *a1, const char *a2, ...)
{
  return _[a1 modeType];
}

id objc_msgSend_modeTypeEnum(void *a1, const char *a2, ...)
{
  return _[a1 modeTypeEnum];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modelNumber(void *a1, const char *a2, ...)
{
  return _[a1 modelNumber];
}

id objc_msgSend_modifyDevice_settings_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modifyDevice:settings:completion:");
}

id objc_msgSend_moreInfo(void *a1, const char *a2, ...)
{
  return _[a1 moreInfo];
}

id objc_msgSend_moveOrAddLocalAccessoryToRoom_inHome_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveOrAddLocalAccessoryToRoom:inHome:completionHandler:");
}

id objc_msgSend_movePreferredLanguageAtIndex_toIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "movePreferredLanguageAtIndex:toIndex:");
}

id objc_msgSend_moveRowAtIndexPath_toIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveRowAtIndexPath:toIndexPath:");
}

id objc_msgSend_moveSection_toSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveSection:toSection:");
}

id objc_msgSend_multiValueControllerWithSettingItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multiValueControllerWithSettingItem:");
}

id objc_msgSend_multiValueItemFromSpecifierDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multiValueItemFromSpecifierDictionary:");
}

id objc_msgSend_multiValueItemWithTitle_description_representedObject_keyPath_availableValues_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multiValueItemWithTitle:description:representedObject:keyPath:availableValues:");
}

id objc_msgSend_musicAdvertisingIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 musicAdvertisingIdentifier];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_myDevices(void *a1, const char *a2, ...)
{
  return _[a1 myDevices];
}

id objc_msgSend_myPhotosScreenSaverOptionShouldBeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 myPhotosScreenSaverOptionShouldBeEnabled];
}

id objc_msgSend_myPhotosScreenSaverSelected(void *a1, const char *a2, ...)
{
  return _[a1 myPhotosScreenSaverSelected];
}

id objc_msgSend_na_any_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_any:");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameComponents(void *a1, const char *a2, ...)
{
  return _[a1 nameComponents];
}

id objc_msgSend_nameViewController(void *a1, const char *a2, ...)
{
  return _[a1 nameViewController];
}

id objc_msgSend_natureCategoryID(void *a1, const char *a2, ...)
{
  return _[a1 natureCategoryID];
}

id objc_msgSend_navigateToPhotoSourceWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigateToPhotoSourceWithID:");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_neConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 neConfiguration];
}

id objc_msgSend_needsCDPRepair(void *a1, const char *a2, ...)
{
  return _[a1 needsCDPRepair];
}

id objc_msgSend_needsOSUpdateToRunHH2(void *a1, const char *a2, ...)
{
  return _[a1 needsOSUpdateToRunHH2];
}

id objc_msgSend_needsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 needsUpdate];
}

id objc_msgSend_networkName(void *a1, const char *a2, ...)
{
  return _[a1 networkName];
}

id objc_msgSend_newDataTransitionDuration(void *a1, const char *a2, ...)
{
  return _[a1 newDataTransitionDuration];
}

id objc_msgSend_nextFocusedIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 nextFocusedIndexPath];
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return _[a1 nextObject];
}

id objc_msgSend_notificationSettingForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationSettingForIdentifier:");
}

id objc_msgSend_notificationSettings(void *a1, const char *a2, ...)
{
  return _[a1 notificationSettings];
}

id objc_msgSend_notificationSettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationSettingsNeededForBundleID:");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numberOfAppsAllowingCrossAppTracking(void *a1, const char *a2, ...)
{
  return _[a1 numberOfAppsAllowingCrossAppTracking];
}

id objc_msgSend_numberOfConnectedRemotes(void *a1, const char *a2, ...)
{
  return _[a1 numberOfConnectedRemotes];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_numberingSystem(void *a1, const char *a2, ...)
{
  return _[a1 numberingSystem];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForInfoDictionaryKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForInfoDictionaryKey:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsAtIndexes:");
}

id objc_msgSend_objectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsPassingTest:");
}

id objc_msgSend_obliterateDataPreservingPaths_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "obliterateDataPreservingPaths:withCompletion:");
}

id objc_msgSend_odeonEnabled(void *a1, const char *a2, ...)
{
  return _[a1 odeonEnabled];
}

id objc_msgSend_odeonSupportsAtmos(void *a1, const char *a2, ...)
{
  return _[a1 odeonSupportsAtmos];
}

id objc_msgSend_offConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 offConfiguration];
}

id objc_msgSend_offIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 offIdentifier];
}

id objc_msgSend_offeredEnableAssistant(void *a1, const char *a2, ...)
{
  return _[a1 offeredEnableAssistant];
}

id objc_msgSend_onDemandCapable(void *a1, const char *a2, ...)
{
  return _[a1 onDemandCapable];
}

id objc_msgSend_onDemandRules(void *a1, const char *a2, ...)
{
  return _[a1 onDemandRules];
}

id objc_msgSend_onIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 onIdentifier];
}

id objc_msgSend_onOffFormatter(void *a1, const char *a2, ...)
{
  return _[a1 onOffFormatter];
}

id objc_msgSend_onSelection(void *a1, const char *a2, ...)
{
  return _[a1 onSelection];
}

id objc_msgSend_onState(void *a1, const char *a2, ...)
{
  return _[a1 onState];
}

id objc_msgSend_openApplication_withOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplication:withOptions:completion:");
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSensitiveURL:withOptions:");
}

id objc_msgSend_openURL_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:withCompletionHandler:");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_optionsType(void *a1, const char *a2, ...)
{
  return _[a1 optionsType];
}

id objc_msgSend_originalURL(void *a1, const char *a2, ...)
{
  return _[a1 originalURL];
}

id objc_msgSend_osUpdateServiceProxy(void *a1, const char *a2, ...)
{
  return _[a1 osUpdateServiceProxy];
}

id objc_msgSend_otherDevices(void *a1, const char *a2, ...)
{
  return _[a1 otherDevices];
}

id objc_msgSend_otherResolutionsModes24Hz(void *a1, const char *a2, ...)
{
  return _[a1 otherResolutionsModes24Hz];
}

id objc_msgSend_otherResolutionsModes25Hz(void *a1, const char *a2, ...)
{
  return _[a1 otherResolutionsModes25Hz];
}

id objc_msgSend_otherResolutionsModes30Hz(void *a1, const char *a2, ...)
{
  return _[a1 otherResolutionsModes30Hz];
}

id objc_msgSend_otherResolutionsModes50Hz(void *a1, const char *a2, ...)
{
  return _[a1 otherResolutionsModes50Hz];
}

id objc_msgSend_otherResolutionsModes60Hz(void *a1, const char *a2, ...)
{
  return _[a1 otherResolutionsModes60Hz];
}

id objc_msgSend_otherResolutionsModesExact24Hz(void *a1, const char *a2, ...)
{
  return _[a1 otherResolutionsModesExact24Hz];
}

id objc_msgSend_otherResolutionsModesExact30Hz(void *a1, const char *a2, ...)
{
  return _[a1 otherResolutionsModesExact30Hz];
}

id objc_msgSend_otherResolutionsModesExact60Hz(void *a1, const char *a2, ...)
{
  return _[a1 otherResolutionsModesExact60Hz];
}

id objc_msgSend_otherResolutionsModesOthers(void *a1, const char *a2, ...)
{
  return _[a1 otherResolutionsModesOthers];
}

id objc_msgSend_outputDevices(void *a1, const char *a2, ...)
{
  return _[a1 outputDevices];
}

id objc_msgSend_packageWithContentsOfURL_type_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "packageWithContentsOfURL:type:options:error:");
}

id objc_msgSend_padding(void *a1, const char *a2, ...)
{
  return _[a1 padding];
}

id objc_msgSend_pairAppleRemote_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairAppleRemote:completion:");
}

id objc_msgSend_pairedCUDevices(void *a1, const char *a2, ...)
{
  return _[a1 pairedCUDevices];
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return _[a1 pairedDevices];
}

id objc_msgSend_pairedDevicesInDisplayOrder(void *a1, const char *a2, ...)
{
  return _[a1 pairedDevicesInDisplayOrder];
}

id objc_msgSend_pairingDevice(void *a1, const char *a2, ...)
{
  return _[a1 pairingDevice];
}

id objc_msgSend_parameters(void *a1, const char *a2, ...)
{
  return _[a1 parameters];
}

id objc_msgSend_parentMenuItem(void *a1, const char *a2, ...)
{
  return _[a1 parentMenuItem];
}

id objc_msgSend_parsedPathComponents(void *a1, const char *a2, ...)
{
  return _[a1 parsedPathComponents];
}

id objc_msgSend_passcodeDigitView_didChangeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "passcodeDigitView:didChangeText:");
}

id objc_msgSend_passcodeDigitViewDidBecomeFocused_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "passcodeDigitViewDidBecomeFocused:");
}

id objc_msgSend_passcodeDigitViewDidResignFocus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "passcodeDigitViewDidResignFocus:");
}

id objc_msgSend_passcodeEntryViewController(void *a1, const char *a2, ...)
{
  return _[a1 passcodeEntryViewController];
}

id objc_msgSend_passcodeToConfirm(void *a1, const char *a2, ...)
{
  return _[a1 passcodeToConfirm];
}

id objc_msgSend_password(void *a1, const char *a2, ...)
{
  return _[a1 password];
}

id objc_msgSend_passwordSetting(void *a1, const char *a2, ...)
{
  return _[a1 passwordSetting];
}

id objc_msgSend_passwordViewController(void *a1, const char *a2, ...)
{
  return _[a1 passwordViewController];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return _[a1 pathComponents];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_pauseImageLoad(void *a1, const char *a2, ...)
{
  return _[a1 pauseImageLoad];
}

id objc_msgSend_payloadInfo(void *a1, const char *a2, ...)
{
  return _[a1 payloadInfo];
}

id objc_msgSend_payloadOrganization(void *a1, const char *a2, ...)
{
  return _[a1 payloadOrganization];
}

id objc_msgSend_payloads(void *a1, const char *a2, ...)
{
  return _[a1 payloads];
}

id objc_msgSend_pbs_homeKitCamerasFilter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbs_homeKitCamerasFilter");
}

id objc_msgSend_pbs_homeKitDisabledCameras(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbs_homeKitDisabledCameras");
}

id objc_msgSend_pbs_needsHomeKitAutoOnboarding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbs_needsHomeKitAutoOnboarding");
}

id objc_msgSend_pbs_secureHomeKitAccessoryAllowedRemotes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbs_secureHomeKitAccessoryAllowedRemotes");
}

id objc_msgSend_pbs_setHomeKitCamerasFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbs_setHomeKitCamerasFilter:");
}

id objc_msgSend_pbs_setHomeKitDisabledCameras_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbs_setHomeKitDisabledCameras:");
}

id objc_msgSend_pbs_setNeedsHomeKitAutoOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbs_setNeedsHomeKitAutoOnboarding:");
}

id objc_msgSend_pbs_setRMVShownToUserWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbs_setRMVShownToUserWithIdentifier:");
}

id objc_msgSend_pbs_setSecureHomeKitAccessoryAllowedRemotes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbs_setSecureHomeKitAccessoryAllowedRemotes:");
}

id objc_msgSend_pbs_watchListButtonBehaviorEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbs_watchListButtonBehaviorEnabled");
}

id objc_msgSend_peerDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 peerDeviceIdentifier];
}

id objc_msgSend_peopleCategoryID(void *a1, const char *a2, ...)
{
  return _[a1 peopleCategoryID];
}

id objc_msgSend_peopleFilterItem(void *a1, const char *a2, ...)
{
  return _[a1 peopleFilterItem];
}

id objc_msgSend_percentEncodedQueryItems(void *a1, const char *a2, ...)
{
  return _[a1 percentEncodedQueryItems];
}

id objc_msgSend_performAuthentication(void *a1, const char *a2, ...)
{
  return _[a1 performAuthentication];
}

id objc_msgSend_performMigrationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 performMigrationIfNeeded];
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:afterDelay:");
}

id objc_msgSend_performSubscriptionStatusRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSubscriptionStatusRequest:withCompletionHandler:");
}

id objc_msgSend_performSync(void *a1, const char *a2, ...)
{
  return _[a1 performSync];
}

id objc_msgSend_performWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithOptions:");
}

id objc_msgSend_persistentIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 persistentIdentifier];
}

id objc_msgSend_personFamiliarityOptions(void *a1, const char *a2, ...)
{
  return _[a1 personFamiliarityOptions];
}

id objc_msgSend_personaUniqueString(void *a1, const char *a2, ...)
{
  return _[a1 personaUniqueString];
}

id objc_msgSend_petsCategoryID(void *a1, const char *a2, ...)
{
  return _[a1 petsCategoryID];
}

id objc_msgSend_phase(void *a1, const char *a2, ...)
{
  return _[a1 phase];
}

id objc_msgSend_photoCollectionGroup(void *a1, const char *a2, ...)
{
  return _[a1 photoCollectionGroup];
}

id objc_msgSend_photoCollectionGroupDescription(void *a1, const char *a2, ...)
{
  return _[a1 photoCollectionGroupDescription];
}

id objc_msgSend_photoCollectionGroupIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 photoCollectionGroupIdentifier];
}

id objc_msgSend_photoCollectionGroupName(void *a1, const char *a2, ...)
{
  return _[a1 photoCollectionGroupName];
}

id objc_msgSend_photoCollectionGroupProviderInfo(void *a1, const char *a2, ...)
{
  return _[a1 photoCollectionGroupProviderInfo];
}

id objc_msgSend_photoCollectionGroupsForController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "photoCollectionGroupsForController:");
}

id objc_msgSend_photoCollections(void *a1, const char *a2, ...)
{
  return _[a1 photoCollections];
}

id objc_msgSend_photoSource(void *a1, const char *a2, ...)
{
  return _[a1 photoSource];
}

id objc_msgSend_photosLibraryFilters(void *a1, const char *a2, ...)
{
  return _[a1 photosLibraryFilters];
}

id objc_msgSend_photosPreferences(void *a1, const char *a2, ...)
{
  return _[a1 photosPreferences];
}

id objc_msgSend_photosPreviewViewController(void *a1, const char *a2, ...)
{
  return _[a1 photosPreviewViewController];
}

id objc_msgSend_photosSettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "photosSettingsNeededForBundleID:");
}

id objc_msgSend_photosSetupOptions(void *a1, const char *a2, ...)
{
  return _[a1 photosSetupOptions];
}

id objc_msgSend_photosSharingFilters(void *a1, const char *a2, ...)
{
  return _[a1 photosSharingFilters];
}

id objc_msgSend_photosSourceFilter(void *a1, const char *a2, ...)
{
  return _[a1 photosSourceFilter];
}

id objc_msgSend_photosSourceFilters(void *a1, const char *a2, ...)
{
  return _[a1 photosSourceFilters];
}

id objc_msgSend_photosSourceHasMemories(void *a1, const char *a2, ...)
{
  return _[a1 photosSourceHasMemories];
}

id objc_msgSend_photosSourceStateString(void *a1, const char *a2, ...)
{
  return _[a1 photosSourceStateString];
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _[a1 pid];
}

id objc_msgSend_pidForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pidForApplication:");
}

id objc_msgSend_pineBoardItem(void *a1, const char *a2, ...)
{
  return _[a1 pineBoardItem];
}

id objc_msgSend_pineBoardServicesUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 pineBoardServicesUserDefaults];
}

id objc_msgSend_pingOutstanding(void *a1, const char *a2, ...)
{
  return _[a1 pingOutstanding];
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return _[a1 play];
}

id objc_msgSend_playImmediatelyAtRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playImmediatelyAtRate:");
}

id objc_msgSend_playInLoopWithRate_crossfadeDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playInLoopWithRate:crossfadeDuration:");
}

id objc_msgSend_playbackConfigurationForDeviceWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playbackConfigurationForDeviceWithUUID:");
}

id objc_msgSend_playbackQuality(void *a1, const char *a2, ...)
{
  return _[a1 playbackQuality];
}

id objc_msgSend_player(void *a1, const char *a2, ...)
{
  return _[a1 player];
}

id objc_msgSend_playerItemWithAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerItemWithAsset:");
}

id objc_msgSend_playerItemWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerItemWithURL:");
}

id objc_msgSend_playerLayer(void *a1, const char *a2, ...)
{
  return _[a1 playerLayer];
}

id objc_msgSend_playerLooperWithPlayer_templateItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerLooperWithPlayer:templateItem:");
}

id objc_msgSend_playerWithPlayerItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerWithPlayerItem:");
}

id objc_msgSend_plistName(void *a1, const char *a2, ...)
{
  return _[a1 plistName];
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _[a1 pointSize];
}

id objc_msgSend_pollForSession(void *a1, const char *a2, ...)
{
  return _[a1 pollForSession];
}

id objc_msgSend_popNextImage(void *a1, const char *a2, ...)
{
  return _[a1 popNextImage];
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToRootViewControllerAnimated:");
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToViewController:animated:");
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popViewControllerAnimated:");
}

id objc_msgSend_portraitClockCategories(void *a1, const char *a2, ...)
{
  return _[a1 portraitClockCategories];
}

id objc_msgSend_portraitClockFallback(void *a1, const char *a2, ...)
{
  return _[a1 portraitClockFallback];
}

id objc_msgSend_portraitClockPreferences(void *a1, const char *a2, ...)
{
  return _[a1 portraitClockPreferences];
}

id objc_msgSend_portraitClockPreviewViewController(void *a1, const char *a2, ...)
{
  return _[a1 portraitClockPreviewViewController];
}

id objc_msgSend_portraitClockUpdateInterval(void *a1, const char *a2, ...)
{
  return _[a1 portraitClockUpdateInterval];
}

id objc_msgSend_positionKeyframes(void *a1, const char *a2, ...)
{
  return _[a1 positionKeyframes];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_posterBoardFacade(void *a1, const char *a2, ...)
{
  return _[a1 posterBoardFacade];
}

id objc_msgSend_posterPreviewViewController(void *a1, const char *a2, ...)
{
  return _[a1 posterPreviewViewController];
}

id objc_msgSend_predicate(void *a1, const char *a2, ...)
{
  return _[a1 predicate];
}

id objc_msgSend_predicateForSignificantEventTypes_personFamiliarityOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForSignificantEventTypes:personFamiliarityOptions:");
}

id objc_msgSend_predicateMatchingBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateMatchingBundleIdentifier:");
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithBlock:");
}

id objc_msgSend_preferencesWithDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferencesWithDomain:");
}

id objc_msgSend_preferredAudioLanguageCode(void *a1, const char *a2, ...)
{
  return _[a1 preferredAudioLanguageCode];
}

id objc_msgSend_preferredDisplaySizeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 preferredDisplaySizeIdentifier];
}

id objc_msgSend_preferredDisplaySizeOptionFormatter(void *a1, const char *a2, ...)
{
  return _[a1 preferredDisplaySizeOptionFormatter];
}

id objc_msgSend_preferredDisplaySizeOptions(void *a1, const char *a2, ...)
{
  return _[a1 preferredDisplaySizeOptions];
}

id objc_msgSend_preferredFocusEnvironments(void *a1, const char *a2, ...)
{
  return _[a1 preferredFocusEnvironments];
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontDescriptorWithTextStyle:");
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredInputModeList(void *a1, const char *a2, ...)
{
  return _[a1 preferredInputModeList];
}

id objc_msgSend_preferredInputModes(void *a1, const char *a2, ...)
{
  return _[a1 preferredInputModes];
}

id objc_msgSend_preferredInterface(void *a1, const char *a2, ...)
{
  return _[a1 preferredInterface];
}

id objc_msgSend_preferredLanguageCode(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguageCode];
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguages];
}

id objc_msgSend_preferredLanguagesFromLanguages_forUserType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredLanguagesFromLanguages:forUserType:");
}

id objc_msgSend_preferredLanguagesGroup(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguagesGroup];
}

id objc_msgSend_preferredLanguagesGroupCount(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguagesGroupCount];
}

id objc_msgSend_preferredLanguagesManager(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguagesManager];
}

id objc_msgSend_preferredMediaDestination(void *a1, const char *a2, ...)
{
  return _[a1 preferredMediaDestination];
}

id objc_msgSend_preferredMusicHighBandwidthResolution(void *a1, const char *a2, ...)
{
  return _[a1 preferredMusicHighBandwidthResolution];
}

id objc_msgSend_preferredOrder(void *a1, const char *a2, ...)
{
  return _[a1 preferredOrder];
}

id objc_msgSend_preferredSubtitleLanguageCode(void *a1, const char *a2, ...)
{
  return _[a1 preferredSubtitleLanguageCode];
}

id objc_msgSend_prefersSpatialAudio(void *a1, const char *a2, ...)
{
  return _[a1 prefersSpatialAudio];
}

id objc_msgSend_prefetchScreensaverCollections(void *a1, const char *a2, ...)
{
  return _[a1 prefetchScreensaverCollections];
}

id objc_msgSend_preloadImageCount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preloadImageCount:withCompletionHandler:");
}

id objc_msgSend_prepareForDeepLinkWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForDeepLinkWithURL:");
}

id objc_msgSend_prepareLanguageChangeAfterSiriActivation(void *a1, const char *a2, ...)
{
  return _[a1 prepareLanguageChangeAfterSiriActivation];
}

id objc_msgSend_present(void *a1, const char *a2, ...)
{
  return _[a1 present];
}

id objc_msgSend_presentDisplayAssistantWithRequest_dismissHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentDisplayAssistantWithRequest:dismissHandler:");
}

id objc_msgSend_presentTermsUIForAccount_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentTermsUIForAccount:completion:");
}

id objc_msgSend_presentTermsUIForiCloudAccountWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentTermsUIForiCloudAccountWithCompletion:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentationRequest(void *a1, const char *a2, ...)
{
  return _[a1 presentationRequest];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presenterForPrivacySplashWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presenterForPrivacySplashWithIdentifier:");
}

id objc_msgSend_previewImageAssetName(void *a1, const char *a2, ...)
{
  return _[a1 previewImageAssetName];
}

id objc_msgSend_previewImageNameWithIsMusicAlbumsSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previewImageNameWithIsMusicAlbumsSelected:");
}

id objc_msgSend_previewImageURL(void *a1, const char *a2, ...)
{
  return _[a1 previewImageURL];
}

id objc_msgSend_previewPageAudioEnabled(void *a1, const char *a2, ...)
{
  return _[a1 previewPageAudioEnabled];
}

id objc_msgSend_previouslyUsedEmails(void *a1, const char *a2, ...)
{
  return _[a1 previouslyUsedEmails];
}

id objc_msgSend_primaryEntityClassForLocationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryEntityClassForLocationDictionary:");
}

id objc_msgSend_primaryHighlightAlphaForHighlightProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryHighlightAlphaForHighlightProgress:");
}

id objc_msgSend_primaryUser(void *a1, const char *a2, ...)
{
  return _[a1 primaryUser];
}

id objc_msgSend_primaryUserProfile(void *a1, const char *a2, ...)
{
  return _[a1 primaryUserProfile];
}

id objc_msgSend_primaryUseriCloudPhotoLibraryEnabled(void *a1, const char *a2, ...)
{
  return _[a1 primaryUseriCloudPhotoLibraryEnabled];
}

id objc_msgSend_primaryUseriCloudSharedPhotosEnabled(void *a1, const char *a2, ...)
{
  return _[a1 primaryUseriCloudSharedPhotosEnabled];
}

id objc_msgSend_principalClass(void *a1, const char *a2, ...)
{
  return _[a1 principalClass];
}

id objc_msgSend_privacyItemFromSpecifierDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privacyItemFromSpecifierDictionary:");
}

id objc_msgSend_privacyItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privacyItemWithIdentifier:");
}

id objc_msgSend_productType(void *a1, const char *a2, ...)
{
  return _[a1 productType];
}

id objc_msgSend_profile(void *a1, const char *a2, ...)
{
  return _[a1 profile];
}

id objc_msgSend_profileExpiryDate(void *a1, const char *a2, ...)
{
  return _[a1 profileExpiryDate];
}

id objc_msgSend_profileFacade(void *a1, const char *a2, ...)
{
  return _[a1 profileFacade];
}

id objc_msgSend_profileIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 profileIdentifier];
}

id objc_msgSend_profileValidationStatus(void *a1, const char *a2, ...)
{
  return _[a1 profileValidationStatus];
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _[a1 progress];
}

id objc_msgSend_progressTextFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressTextFromData:");
}

id objc_msgSend_progressView(void *a1, const char *a2, ...)
{
  return _[a1 progressView];
}

id objc_msgSend_promptLabel(void *a1, const char *a2, ...)
{
  return _[a1 promptLabel];
}

id objc_msgSend_protocol(void *a1, const char *a2, ...)
{
  return _[a1 protocol];
}

id objc_msgSend_providerInfo(void *a1, const char *a2, ...)
{
  return _[a1 providerInfo];
}

id objc_msgSend_provisionedDataclasses(void *a1, const char *a2, ...)
{
  return _[a1 provisionedDataclasses];
}

id objc_msgSend_publishedObjectNames(void *a1, const char *a2, ...)
{
  return _[a1 publishedObjectNames];
}

id objc_msgSend_publishedObjectWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishedObjectWithName:");
}

id objc_msgSend_purgeTopShelfContentForApplicationIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purgeTopShelfContentForApplicationIdentifiers:");
}

id objc_msgSend_pushRoomPickerFromInitialViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushRoomPickerFromInitialViewController:");
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushViewController:animated:");
}

id objc_msgSend_queryAerialThemesWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryAerialThemesWithReply:");
}

id objc_msgSend_queryChildItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryChildItemWithIdentifier:");
}

id objc_msgSend_queryItemWithName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryItemWithName:value:");
}

id objc_msgSend_queryPhotoSlideShowStylesWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryPhotoSlideShowStylesWithReply:");
}

id objc_msgSend_queryPhotoSourceOptionsWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryPhotoSourceOptionsWithReply:");
}

id objc_msgSend_queryPortraitClockStateWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryPortraitClockStateWithReply:");
}

id objc_msgSend_queryProgramsForSystemAccountsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryProgramsForSystemAccountsWithCompletion:");
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_quotaMessage(void *a1, const char *a2, ...)
{
  return _[a1 quotaMessage];
}

id objc_msgSend_radioGroupFromSpecifierDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "radioGroupFromSpecifierDictionary:");
}

id objc_msgSend_radioGroupWithTitle_representedObject_keyPath_availableValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "radioGroupWithTitle:representedObject:keyPath:availableValues:");
}

id objc_msgSend_radioSettingsGroup_didSelectItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "radioSettingsGroup:didSelectItem:");
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return _[a1 range];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rawName(void *a1, const char *a2, ...)
{
  return _[a1 rawName];
}

id objc_msgSend_readRSSI(void *a1, const char *a2, ...)
{
  return _[a1 readRSSI];
}

id objc_msgSend_reboot(void *a1, const char *a2, ...)
{
  return _[a1 reboot];
}

id objc_msgSend_recentInputForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recentInputForIdentifier:");
}

id objc_msgSend_recognizeMyVoiceAvailability(void *a1, const char *a2, ...)
{
  return _[a1 recognizeMyVoiceAvailability];
}

id objc_msgSend_recognizeMyVoiceState(void *a1, const char *a2, ...)
{
  return _[a1 recognizeMyVoiceState];
}

id objc_msgSend_recordingDisabled(void *a1, const char *a2, ...)
{
  return _[a1 recordingDisabled];
}

id objc_msgSend_recordingEventTriggers(void *a1, const char *a2, ...)
{
  return _[a1 recordingEventTriggers];
}

id objc_msgSend_reduceLoudSoundsIsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 reduceLoudSoundsIsAvailable];
}

id objc_msgSend_reenableEARCIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 reenableEARCIfNecessary];
}

id objc_msgSend_refresh(void *a1, const char *a2, ...)
{
  return _[a1 refresh];
}

id objc_msgSend_refreshRate(void *a1, const char *a2, ...)
{
  return _[a1 refreshRate];
}

id objc_msgSend_refreshRateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 refreshRateFormatter];
}

id objc_msgSend_region(void *a1, const char *a2, ...)
{
  return _[a1 region];
}

id objc_msgSend_regionInfo(void *a1, const char *a2, ...)
{
  return _[a1 regionInfo];
}

id objc_msgSend_registerAccount(void *a1, const char *a2, ...)
{
  return _[a1 registerAccount];
}

id objc_msgSend_registerChangeObserver_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerChangeObserver:context:");
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellReuseIdentifier:");
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellWithReuseIdentifier:");
}

id objc_msgSend_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:");
}

id objc_msgSend_registerMigration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerMigration:");
}

id objc_msgSend_registerPrimaryAppleAccount(void *a1, const char *a2, ...)
{
  return _[a1 registerPrimaryAppleAccount];
}

id objc_msgSend_registerWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerWithCompletion:");
}

id objc_msgSend_registrationStatus(void *a1, const char *a2, ...)
{
  return _[a1 registrationStatus];
}

id objc_msgSend_relatedLanguagesForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relatedLanguagesForLanguage:");
}

id objc_msgSend_relaunch(void *a1, const char *a2, ...)
{
  return _[a1 relaunch];
}

id objc_msgSend_relay(void *a1, const char *a2, ...)
{
  return _[a1 relay];
}

id objc_msgSend_relays(void *a1, const char *a2, ...)
{
  return _[a1 relays];
}

id objc_msgSend_relearnCurrentActionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relearnCurrentActionWithCompletion:");
}

id objc_msgSend_relinquish(void *a1, const char *a2, ...)
{
  return _[a1 relinquish];
}

id objc_msgSend_relinquishHDMIEnforcement(void *a1, const char *a2, ...)
{
  return _[a1 relinquishHDMIEnforcement];
}

id objc_msgSend_reloadAndUpdateAllItemsFromSenderSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadAndUpdateAllItemsFromSenderSelector:");
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _[a1 reloadData];
}

id objc_msgSend_reloadHomeConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 reloadHomeConfiguration];
}

id objc_msgSend_reloadIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 reloadIfNeeded];
}

id objc_msgSend_reloadSettings(void *a1, const char *a2, ...)
{
  return _[a1 reloadSettings];
}

id objc_msgSend_reloadSettingsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 reloadSettingsIfNeeded];
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectProxy];
}

id objc_msgSend_remoteType(void *a1, const char *a2, ...)
{
  return _[a1 remoteType];
}

id objc_msgSend_remotes(void *a1, const char *a2, ...)
{
  return _[a1 remotes];
}

id objc_msgSend_remotesFacade(void *a1, const char *a2, ...)
{
  return _[a1 remotesFacade];
}

id objc_msgSend_removeAccount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAccount:withCompletionHandler:");
}

id objc_msgSend_removeAllHomeKitPairingIdentities(void *a1, const char *a2, ...)
{
  return _[a1 removeAllHomeKitPairingIdentities];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAnimationForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAnimationForKey:");
}

id objc_msgSend_removeCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCharactersInString:");
}

id objc_msgSend_removeCondition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCondition:");
}

id objc_msgSend_removeConfiguration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConfiguration:completion:");
}

id objc_msgSend_removeConfiguration_withCompletionQueue_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConfiguration:withCompletionQueue:handler:");
}

id objc_msgSend_removeCoreUtilsPairingWithIdentifier_isDevice_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCoreUtilsPairingWithIdentifier:isDevice:withCompletion:");
}

id objc_msgSend_removeDeviceWithPairedPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDeviceWithPairedPeer:");
}

id objc_msgSend_removeDomainObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDomainObserver:");
}

id objc_msgSend_removeEARCObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEARCObserver:");
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return _[a1 removeFromParentViewController];
}

id objc_msgSend_removeFromSuperlayer(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperlayer];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeGestureRecognizer:");
}

id objc_msgSend_removeIRDeviceWithUUID_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeIRDeviceWithUUID:withCompletion:");
}

id objc_msgSend_removeInput_forSystemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeInput:forSystemIdentifier:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsAtIndexes:");
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsForKeys:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removePairedPeer_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePairedPeer:options:completion:");
}

id objc_msgSend_removePairingWithIdentifier_invokingCompletionHandlerOnQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePairingWithIdentifier:invokingCompletionHandlerOnQueue:completion:");
}

id objc_msgSend_removePreferredLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePreferredLanguage:");
}

id objc_msgSend_removePreferredLanguageAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePreferredLanguageAtIndex:");
}

id objc_msgSend_removeProfileIdentifierFromDisabledList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeProfileIdentifierFromDisabledList:");
}

id objc_msgSend_removeProfileWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeProfileWithIdentifier:");
}

id objc_msgSend_removeScanObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeScanObserver:");
}

id objc_msgSend_removeStateObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeStateObserver:");
}

id objc_msgSend_removeUserProfileWithIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeUserProfileWithIdentifier:completionHandler:");
}

id objc_msgSend_removeUserWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeUserWithCompletion:");
}

id objc_msgSend_renderableUILanguages(void *a1, const char *a2, ...)
{
  return _[a1 renderableUILanguages];
}

id objc_msgSend_reportAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportAction:");
}

id objc_msgSend_reportChangeFor_toValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportChangeFor:toValue:");
}

id objc_msgSend_representedObject(void *a1, const char *a2, ...)
{
  return _[a1 representedObject];
}

id objc_msgSend_requestUnenroll(void *a1, const char *a2, ...)
{
  return _[a1 requestUnenroll];
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:");
}

id objc_msgSend_requiredProfileURL(void *a1, const char *a2, ...)
{
  return _[a1 requiredProfileURL];
}

id objc_msgSend_requiresAppleConnect(void *a1, const char *a2, ...)
{
  return _[a1 requiresAppleConnect];
}

id objc_msgSend_requiresFirmwareUpdate(void *a1, const char *a2, ...)
{
  return _[a1 requiresFirmwareUpdate];
}

id objc_msgSend_requiresVPN(void *a1, const char *a2, ...)
{
  return _[a1 requiresVPN];
}

id objc_msgSend_resetAccountIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 resetAccountIdentifiers];
}

id objc_msgSend_resetAdvertisingIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 resetAdvertisingIdentifier];
}

id objc_msgSend_resetRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 resetRestrictions];
}

id objc_msgSend_resetSelectedSharingFilter(void *a1, const char *a2, ...)
{
  return _[a1 resetSelectedSharingFilter];
}

id objc_msgSend_resetToFactoryDefault(void *a1, const char *a2, ...)
{
  return _[a1 resetToFactoryDefault];
}

id objc_msgSend_resetVideoSettingsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetVideoSettingsWithCompletion:");
}

id objc_msgSend_residentDevices(void *a1, const char *a2, ...)
{
  return _[a1 residentDevices];
}

id objc_msgSend_resolution(void *a1, const char *a2, ...)
{
  return _[a1 resolution];
}

id objc_msgSend_resolutionGroupsForCommonModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolutionGroupsForCommonModes:");
}

id objc_msgSend_resolutionItemConfigurationBlock(void *a1, const char *a2, ...)
{
  return _[a1 resolutionItemConfigurationBlock];
}

id objc_msgSend_resolvedColorWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvedColorWithTraitCollection:");
}

id objc_msgSend_resourceSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 resourceSpecifier];
}

id objc_msgSend_restore(void *a1, const char *a2, ...)
{
  return _[a1 restore];
}

id objc_msgSend_restoreDefaults(void *a1, const char *a2, ...)
{
  return _[a1 restoreDefaults];
}

id objc_msgSend_restorePersonaWithSavedPersonaContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restorePersonaWithSavedPersonaContext:");
}

id objc_msgSend_restrictionsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 restrictionsEnabled];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_revertPreferredLanguages(void *a1, const char *a2, ...)
{
  return _[a1 revertPreferredLanguages];
}

id objc_msgSend_room(void *a1, const char *a2, ...)
{
  return _[a1 room];
}

id objc_msgSend_roomNameFormatter(void *a1, const char *a2, ...)
{
  return _[a1 roomNameFormatter];
}

id objc_msgSend_roomPickerViewControllerDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "roomPickerViewControllerDidFinish:");
}

id objc_msgSend_rooms(void *a1, const char *a2, ...)
{
  return _[a1 rooms];
}

id objc_msgSend_rootLayer(void *a1, const char *a2, ...)
{
  return _[a1 rootLayer];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_routerAddress(void *a1, const char *a2, ...)
{
  return _[a1 routerAddress];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_rssiFetchTimer(void *a1, const char *a2, ...)
{
  return _[a1 rssiFetchTimer];
}

id objc_msgSend_runTest(void *a1, const char *a2, ...)
{
  return _[a1 runTest];
}

id objc_msgSend_runningAnInternalBuild(void *a1, const char *a2, ...)
{
  return _[a1 runningAnInternalBuild];
}

id objc_msgSend_runningPropertyAnimatorWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runningPropertyAnimatorWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_runningSysdiagnose(void *a1, const char *a2, ...)
{
  return _[a1 runningSysdiagnose];
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaInsets];
}

id objc_msgSend_sandboxAccount(void *a1, const char *a2, ...)
{
  return _[a1 sandboxAccount];
}

id objc_msgSend_sandboxFacade(void *a1, const char *a2, ...)
{
  return _[a1 sandboxFacade];
}

id objc_msgSend_saveAccount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveAccount:withCompletionHandler:");
}

id objc_msgSend_saveConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveConfiguration:");
}

id objc_msgSend_saveConfiguration_withCompletionQueue_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveConfiguration:withCompletionQueue:handler:");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scheduledTimerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:repeats:block:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_screen(void *a1, const char *a2, ...)
{
  return _[a1 screen];
}

id objc_msgSend_screenSaverConfigurationURLString(void *a1, const char *a2, ...)
{
  return _[a1 screenSaverConfigurationURLString];
}

id objc_msgSend_screenSaverName(void *a1, const char *a2, ...)
{
  return _[a1 screenSaverName];
}

id objc_msgSend_screenSaverPhotoCollectionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 screenSaverPhotoCollectionIdentifier];
}

id objc_msgSend_screenSaverPreferences(void *a1, const char *a2, ...)
{
  return _[a1 screenSaverPreferences];
}

id objc_msgSend_screenSaverStyle(void *a1, const char *a2, ...)
{
  return _[a1 screenSaverStyle];
}

id objc_msgSend_screenSaverStyleFormatter(void *a1, const char *a2, ...)
{
  return _[a1 screenSaverStyleFormatter];
}

id objc_msgSend_scrollToRowAtIndexPath_atScrollPosition_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToRowAtIndexPath:atScrollPosition:animated:");
}

id objc_msgSend_searchBar(void *a1, const char *a2, ...)
{
  return _[a1 searchBar];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _[a1 section];
}

id objc_msgSend_sectionForObject_collationStringSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForObject:collationStringSelector:");
}

id objc_msgSend_sectionID(void *a1, const char *a2, ...)
{
  return _[a1 sectionID];
}

id objc_msgSend_sectionIndexTitles(void *a1, const char *a2, ...)
{
  return _[a1 sectionIndexTitles];
}

id objc_msgSend_sectionInfos(void *a1, const char *a2, ...)
{
  return _[a1 sectionInfos];
}

id objc_msgSend_secureAccessoryAllowedRemotes(void *a1, const char *a2, ...)
{
  return _[a1 secureAccessoryAllowedRemotes];
}

id objc_msgSend_securityDescriptionFormatter(void *a1, const char *a2, ...)
{
  return _[a1 securityDescriptionFormatter];
}

id objc_msgSend_securityLevelForAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "securityLevelForAccount:");
}

id objc_msgSend_securityType(void *a1, const char *a2, ...)
{
  return _[a1 securityType];
}

id objc_msgSend_selectConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectConfiguration:");
}

id objc_msgSend_selectItem_unselectItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectItem:unselectItem:");
}

id objc_msgSend_selectUserProfileWithIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectUserProfileWithIdentifier:completionHandler:");
}

id objc_msgSend_selectVolumeButtonConfiguration_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectVolumeButtonConfiguration:withCompletion:");
}

id objc_msgSend_selectedBetaSeedProgram(void *a1, const char *a2, ...)
{
  return _[a1 selectedBetaSeedProgram];
}

id objc_msgSend_selectedPhotoCollection(void *a1, const char *a2, ...)
{
  return _[a1 selectedPhotoCollection];
}

id objc_msgSend_selectedPhotoCollectionGroup(void *a1, const char *a2, ...)
{
  return _[a1 selectedPhotoCollectionGroup];
}

id objc_msgSend_selectedPhotoSource(void *a1, const char *a2, ...)
{
  return _[a1 selectedPhotoSource];
}

id objc_msgSend_selectedPosterItem(void *a1, const char *a2, ...)
{
  return _[a1 selectedPosterItem];
}

id objc_msgSend_selectedRegion(void *a1, const char *a2, ...)
{
  return _[a1 selectedRegion];
}

id objc_msgSend_selectedRoute(void *a1, const char *a2, ...)
{
  return _[a1 selectedRoute];
}

id objc_msgSend_selectedSegmentIndex(void *a1, const char *a2, ...)
{
  return _[a1 selectedSegmentIndex];
}

id objc_msgSend_selectedSharingFilter(void *a1, const char *a2, ...)
{
  return _[a1 selectedSharingFilter];
}

id objc_msgSend_selectedSharingFilterWithDefaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedSharingFilterWithDefaultValue:");
}

id objc_msgSend_selectedTransitionStyle(void *a1, const char *a2, ...)
{
  return _[a1 selectedTransitionStyle];
}

id objc_msgSend_selectedUser(void *a1, const char *a2, ...)
{
  return _[a1 selectedUser];
}

id objc_msgSend_selectedUserProfile(void *a1, const char *a2, ...)
{
  return _[a1 selectedUserProfile];
}

id objc_msgSend_selectedValue(void *a1, const char *a2, ...)
{
  return _[a1 selectedValue];
}

id objc_msgSend_selectedVolumeButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 selectedVolumeButtonConfiguration];
}

id objc_msgSend_selectiveSpeechListeningSupported(void *a1, const char *a2, ...)
{
  return _[a1 selectiveSpeechListeningSupported];
}

id objc_msgSend_sendAnalyticsEventWihActionTakenValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAnalyticsEventWihActionTakenValue:");
}

id objc_msgSend_sendSetupAction_info_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSetupAction:info:responseHandler:");
}

id objc_msgSend_sensitivityFormatter(void *a1, const char *a2, ...)
{
  return _[a1 sensitivityFormatter];
}

id objc_msgSend_serverAddress(void *a1, const char *a2, ...)
{
  return _[a1 serverAddress];
}

id objc_msgSend_service(void *a1, const char *a2, ...)
{
  return _[a1 service];
}

id objc_msgSend_serviceProxy(void *a1, const char *a2, ...)
{
  return _[a1 serviceProxy];
}

id objc_msgSend_serviceType(void *a1, const char *a2, ...)
{
  return _[a1 serviceType];
}

id objc_msgSend_serviceWithDefaultShellEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 serviceWithDefaultShellEndpoint];
}

id objc_msgSend_servicesWithTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "servicesWithTypes:");
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return _[a1 session];
}

id objc_msgSend_sessionConnectTime(void *a1, const char *a2, ...)
{
  return _[a1 sessionConnectTime];
}

id objc_msgSend_sessionState(void *a1, const char *a2, ...)
{
  return _[a1 sessionState];
}

id objc_msgSend_sessionStatus(void *a1, const char *a2, ...)
{
  return _[a1 sessionStatus];
}

id objc_msgSend_sessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionWithConfiguration:");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccessType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessType:");
}

id objc_msgSend_setAccessibilityValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityValue:");
}

id objc_msgSend_setAccessoryImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryImageView:");
}

id objc_msgSend_setAccessoryTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryTypes:");
}

id objc_msgSend_setAccessoryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryView:");
}

id objc_msgSend_setAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountID:");
}

id objc_msgSend_setAccountIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountIdentifiers:");
}

id objc_msgSend_setAccountMediaType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountMediaType:");
}

id objc_msgSend_setAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAction:");
}

id objc_msgSend_setActionSafeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionSafeText:");
}

id objc_msgSend_setActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionType:");
}

id objc_msgSend_setActionViewMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionViewMap:");
}

id objc_msgSend_setActivationDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationDelay:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActiveConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveConfiguration:");
}

id objc_msgSend_setActiveConfiguration_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveConfiguration:presentingViewController:");
}

id objc_msgSend_setActivePosterRoleObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivePosterRoleObserver:");
}

id objc_msgSend_setActivityIndicatorDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityIndicatorDelay:");
}

id objc_msgSend_setActivityLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityLabel:");
}

id objc_msgSend_setActivityText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityText:");
}

id objc_msgSend_setAddGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddGroup:");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAdjustsImageWhenAncestorFocused_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsImageWhenAncestorFocused:");
}

id objc_msgSend_setAerialThemes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAerialThemes:");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAllowAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowAccess:");
}

id objc_msgSend_setAllowAccess_forInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowAccess:forInfo:");
}

id objc_msgSend_setAllowMenuToDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowMenuToDismiss:");
}

id objc_msgSend_setAllowViewing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowViewing:");
}

id objc_msgSend_setAllowedAccess_toApplicationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedAccess:toApplicationWithIdentifier:");
}

id objc_msgSend_setAllowedAccessTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedAccessTypes:");
}

id objc_msgSend_setAllowedAudioSpatializationFormats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedAudioSpatializationFormats:");
}

id objc_msgSend_setAllowedPressTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedPressTypes:");
}

id objc_msgSend_setAllowedTouchTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedTouchTypes:");
}

id objc_msgSend_setAllowedUnits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedUnits:");
}

id objc_msgSend_setAllowsEdgeAntialiasing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsEdgeAntialiasing:");
}

id objc_msgSend_setAllowsExpiredBags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsExpiredBags:");
}

id objc_msgSend_setAllowsFallbackToExpiredStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsFallbackToExpiredStatus:");
}

id objc_msgSend_setAllowsFallbackToStatusNeedingReload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsFallbackToStatusNeedingReload:");
}

id objc_msgSend_setAllowsFloats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsFloats:");
}

id objc_msgSend_setAllowsGroupBlending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsGroupBlending:");
}

id objc_msgSend_setAllowsGroupOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsGroupOpacity:");
}

id objc_msgSend_setAllowsNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsNotifications:");
}

id objc_msgSend_setAllowsRestrictionsBypassUsingCompanionDevice_forUserWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsRestrictionsBypassUsingCompanionDevice:forUserWithIdentifier:");
}

id objc_msgSend_setAllowsScreenSaverOverMusic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsScreenSaverOverMusic:");
}

id objc_msgSend_setAllowsSelectionDuringEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsSelectionDuringEditing:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAltDSID:");
}

id objc_msgSend_setAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimations:");
}

id objc_msgSend_setAppleAccountAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleAccountAltDSID:");
}

id objc_msgSend_setAppleMusicSubscribed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleMusicSubscribed:");
}

id objc_msgSend_setApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationIdentifier:");
}

id objc_msgSend_setApplicationItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationItems:");
}

id objc_msgSend_setApplicationName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationName:");
}

id objc_msgSend_setArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArray:");
}

id objc_msgSend_setAsnFreeSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsnFreeSetting:");
}

id objc_msgSend_setAsnFreeSetting_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsnFreeSetting:presentingViewController:");
}

id objc_msgSend_setAsnPaidSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsnPaidSetting:");
}

id objc_msgSend_setAsnPaidSetting_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsnPaidSetting:presentingViewController:");
}

id objc_msgSend_setAttributedDescriptionText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedDescriptionText:");
}

id objc_msgSend_setAttributedLocalizedDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedLocalizedDescription:");
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedText:");
}

id objc_msgSend_setAudienceOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudienceOverride:");
}

id objc_msgSend_setAudioFormatConversionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioFormatConversionEnabled:");
}

id objc_msgSend_setAudioLatency_forDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioLatency:forDisplayMode:");
}

id objc_msgSend_setAudioOutputFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioOutputFormat:");
}

id objc_msgSend_setAudioQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioQuality:");
}

id objc_msgSend_setAuthenticationNeededToChangeiCloudPhotoOptions(void *a1, const char *a2, ...)
{
  return _[a1 setAuthenticationNeededToChangeiCloudPhotoOptions];
}

id objc_msgSend_setAuthenticationResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthenticationResults:");
}

id objc_msgSend_setAuthenticationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthenticationType:");
}

id objc_msgSend_setAuthorizationStatusByType_forBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthorizationStatusByType:forBundleIdentifier:");
}

id objc_msgSend_setAutoAppDownloadsEnabled_accountIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoAppDownloadsEnabled:accountIdentifier:");
}

id objc_msgSend_setAutoDownloadApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoDownloadApps:");
}

id objc_msgSend_setAutoHide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoHide:");
}

id objc_msgSend_setAutoLogin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoLogin:");
}

id objc_msgSend_setAutocapitalizationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutocapitalizationType:");
}

id objc_msgSend_setAutocorrectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutocorrectionType:");
}

id objc_msgSend_setAutomaticAppUpdatesAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticAppUpdatesAllowed:");
}

id objc_msgSend_setAutomaticTimeZoneSelectionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticTimeZoneSelectionEnabled:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAvailableBetaSeedPrograms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvailableBetaSeedPrograms:");
}

id objc_msgSend_setAvailablePosters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvailablePosters:");
}

id objc_msgSend_setAvailableValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvailableValues:");
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxis:");
}

id objc_msgSend_setBackGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackGestureRecognizer:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBackgroundColor_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:forState:");
}

id objc_msgSend_setBackgroundConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundConfiguration:");
}

id objc_msgSend_setBadgeCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeCount:");
}

id objc_msgSend_setBadgeValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeValue:");
}

id objc_msgSend_setBeginTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBeginTime:");
}

id objc_msgSend_setBestNearbyModeSetForQMS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBestNearbyModeSetForQMS:");
}

id objc_msgSend_setBluetoothDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothDevice:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBoolValue_forSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoolValue:forSetting:");
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderColor:");
}

id objc_msgSend_setBorderWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderWidth:");
}

id objc_msgSend_setBottomTextLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottomTextLabel:");
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounds:");
}

id objc_msgSend_setBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleID:");
}

id objc_msgSend_setBundleIdentifiersWithSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifiersWithSettings:");
}

id objc_msgSend_setBundleLoader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleLoader:");
}

id objc_msgSend_setButtonStackView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonStackView:");
}

id objc_msgSend_setButtons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtons:");
}

id objc_msgSend_setCacheOnLoad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCacheOnLoad:");
}

id objc_msgSend_setCachedAudioOutputDeviceSubtype_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedAudioOutputDeviceSubtype:");
}

id objc_msgSend_setCachedAudioOutputDeviceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedAudioOutputDeviceType:");
}

id objc_msgSend_setCachedAudioOutputIsHomeTheater_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedAudioOutputIsHomeTheater:");
}

id objc_msgSend_setCachedSubscriptionStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedSubscriptionStatus:");
}

id objc_msgSend_setCalibrationCodeword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalibrationCodeword:");
}

id objc_msgSend_setCalibrationProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalibrationProgress:");
}

id objc_msgSend_setCalibrationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalibrationState:");
}

id objc_msgSend_setCalibrationState_withInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalibrationState:withInfo:");
}

id objc_msgSend_setCalibrationView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalibrationView:");
}

id objc_msgSend_setCameraDevicePickerCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCameraDevicePickerCompletion:");
}

id objc_msgSend_setCameraFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCameraFilter:");
}

id objc_msgSend_setCanFocus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanFocus:");
}

id objc_msgSend_setCancelActionTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelActionTitle:");
}

id objc_msgSend_setCancelButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelButton:");
}

id objc_msgSend_setCancelOnExit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelOnExit:");
}

id objc_msgSend_setCancelsTouchesInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelsTouchesInView:");
}

id objc_msgSend_setCandidateAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCandidateAccount:");
}

id objc_msgSend_setCapabilities_forListenerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCapabilities:forListenerID:");
}

id objc_msgSend_setCapitalizationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCapitalizationType:");
}

id objc_msgSend_setCategory_withOptions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategory:withOptions:error:");
}

id objc_msgSend_setCategoryFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategoryFilter:");
}

id objc_msgSend_setCdpUiProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCdpUiProvider:");
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenter:");
}

id objc_msgSend_setCert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCert:");
}

id objc_msgSend_setChangedQueue_andHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangedQueue:andHandler:");
}

id objc_msgSend_setCheckingForUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckingForUpdates:");
}

id objc_msgSend_setChildControllerBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChildControllerBlock:");
}

id objc_msgSend_setChildControllerClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChildControllerClass:");
}

id objc_msgSend_setClipsSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClipsSubviews:");
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClipsToBounds:");
}

id objc_msgSend_setCloudAddToPlaylistBehavior_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudAddToPlaylistBehavior:completionHandler:");
}

id objc_msgSend_setCloudFavoriteSongAddToLibraryBehavior_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudFavoriteSongAddToLibraryBehavior:completionHandler:");
}

id objc_msgSend_setCloudStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudStatus:");
}

id objc_msgSend_setCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollection:");
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColor:");
}

id objc_msgSend_setColorCalibration_forDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColorCalibration:forDisplayMode:");
}

id objc_msgSend_setColorCalibrationService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColorCalibrationService:");
}

id objc_msgSend_setColorMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColorMap:");
}

id objc_msgSend_setColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColors:");
}

id objc_msgSend_setCommonResolutionsModes50Hz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommonResolutionsModes50Hz:");
}

id objc_msgSend_setCommonResolutionsModes60Hz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommonResolutionsModes60Hz:");
}

id objc_msgSend_setCommonResolutionsModesOthers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommonResolutionsModesOthers:");
}

id objc_msgSend_setComparesArrayDeeply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setComparesArrayDeeply:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionHandler:");
}

id objc_msgSend_setCompositingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompositingFilter:");
}

id objc_msgSend_setCondition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCondition:");
}

id objc_msgSend_setConferenceRoomDisplayBackgroundPhoto_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConferenceRoomDisplayBackgroundPhoto:");
}

id objc_msgSend_setConferenceRoomDisplayBackgroundPhotoName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConferenceRoomDisplayBackgroundPhotoName:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConfigurationCheckState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigurationCheckState:");
}

id objc_msgSend_setConfigurationLoadingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigurationLoadingState:");
}

id objc_msgSend_setConfigurations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigurations:");
}

id objc_msgSend_setConfiguredName_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguredName:completionHandler:");
}

id objc_msgSend_setConnectedDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectedDevices:");
}

id objc_msgSend_setConnectionStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionStatus:");
}

id objc_msgSend_setConnectionTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionTimer:");
}

id objc_msgSend_setConnectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionType:");
}

id objc_msgSend_setContainerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerPath:");
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCompressionResistancePriority:forAxis:");
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInset:");
}

id objc_msgSend_setContentInsetAdjustmentBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsetAdjustmentBehavior:");
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMode:");
}

id objc_msgSend_setContentMotionRotation_translation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMotionRotation:translation:");
}

id objc_msgSend_setContentRestrictionsCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentRestrictionsCountryCode:");
}

id objc_msgSend_setContentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentView:");
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContents:");
}

id objc_msgSend_setContentsFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentsFormat:");
}

id objc_msgSend_setContentsRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentsRect:");
}

id objc_msgSend_setControlState_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlState:animated:");
}

id objc_msgSend_setCopyStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCopyStyle:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setCrdPreviewViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCrdPreviewViewController:");
}

id objc_msgSend_setCrossAppTrackingAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCrossAppTrackingAllowed:");
}

id objc_msgSend_setCrossfadeDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCrossfadeDuration:");
}

id objc_msgSend_setCrossfadePeriod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCrossfadePeriod:");
}

id objc_msgSend_setCurrentActionBeingLearned_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentActionBeingLearned:");
}

id objc_msgSend_setCurrentChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentChildViewController:");
}

id objc_msgSend_setCurrentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentConfiguration:");
}

id objc_msgSend_setCurrentNumberingSystem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentNumberingSystem:");
}

id objc_msgSend_setCurrentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentState:");
}

id objc_msgSend_setCurrentTermIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTermIndex:");
}

id objc_msgSend_setCurrentTrainInfoText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTrainInfoText:");
}

id objc_msgSend_setCurrentTrainName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTrainName:");
}

id objc_msgSend_setCustomText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomText:");
}

id objc_msgSend_setDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDSID:");
}

id objc_msgSend_setDataSharingOptInStatus_propagateToHomeAccessories_source_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSharingOptInStatus:propagateToHomeAccessories:source:reason:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDecorator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDecorator:");
}

id objc_msgSend_setDedicatedDeviceChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDedicatedDeviceChangedHandler:");
}

id objc_msgSend_setDeepLinkKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeepLinkKey:");
}

id objc_msgSend_setDeepLinkableWhenHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeepLinkableWhenHidden:");
}

id objc_msgSend_setDefaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultValue:");
}

id objc_msgSend_setDefinesPresentationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefinesPresentationContext:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDeleteSiriHistoryState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeleteSiriHistoryState:");
}

id objc_msgSend_setDepthKeyframes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDepthKeyframes:");
}

id objc_msgSend_setDescriptionLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescriptionLabel:");
}

id objc_msgSend_setDescriptionText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescriptionText:");
}

id objc_msgSend_setDesiredServiceTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesiredServiceTypes:");
}

id objc_msgSend_setDetailedLocalizedDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailedLocalizedDescription:");
}

id objc_msgSend_setDetailedLocalizedDescriptionValueFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailedLocalizedDescriptionValueFormatter:");
}

id objc_msgSend_setDetailedLocalizedTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailedLocalizedTitle:");
}

id objc_msgSend_setDetailedLocalizedValueFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailedLocalizedValueFormatter:");
}

id objc_msgSend_setDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevice:");
}

id objc_msgSend_setDeviceActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceActionType:");
}

id objc_msgSend_setDeviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceName:");
}

id objc_msgSend_setDevicePairedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevicePairedHandler:");
}

id objc_msgSend_setDeviceRegion_changePrimaryLanguage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceRegion:changePrimaryLanguage:completion:");
}

id objc_msgSend_setDeviceUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceUUID:");
}

id objc_msgSend_setDeviceUnpairedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceUnpairedHandler:");
}

id objc_msgSend_setDeviceUserKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceUserKind:");
}

id objc_msgSend_setDiagnostics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiagnostics:");
}

id objc_msgSend_setDiagnosticsTicketController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiagnosticsTicketController:");
}

id objc_msgSend_setDialogueView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDialogueView:");
}

id objc_msgSend_setDictationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictationEnabled:");
}

id objc_msgSend_setDimsBackgroundDuringPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDimsBackgroundDuringPresentation:");
}

id objc_msgSend_setDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirection:");
}

id objc_msgSend_setDirty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirty:");
}

id objc_msgSend_setDiscoveryFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryFlags:");
}

id objc_msgSend_setDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:");
}

id objc_msgSend_setDiscoverySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverySession:");
}

id objc_msgSend_setDiscoverySessionStateChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverySessionStateChangedHandler:");
}

id objc_msgSend_setDiscretionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscretionary:");
}

id objc_msgSend_setDismissHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissHandler:");
}

id objc_msgSend_setDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDispatchQueue:");
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayName:");
}

id objc_msgSend_setDisplayQuotaExceededIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayQuotaExceededIfNeeded:");
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistribution:");
}

id objc_msgSend_setDividerImage_forLeftSegmentState_rightSegmentState_barMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDividerImage:forLeftSegmentState:rightSegmentState:barMetrics:");
}

id objc_msgSend_setDomains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomains:");
}

id objc_msgSend_setDoneButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoneButton:");
}

id objc_msgSend_setDontSuggestUserAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDontSuggestUserAction:");
}

id objc_msgSend_setDoorbellNotificationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoorbellNotificationsEnabled:");
}

id objc_msgSend_setDownButtonRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownButtonRecognizer:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setDynamicDeepLinkKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDynamicDeepLinkKey:");
}

id objc_msgSend_setEdgeAntialiasingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEdgeAntialiasingMask:");
}

id objc_msgSend_setEditButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditButton:");
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditable:");
}

id objc_msgSend_setEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:");
}

id objc_msgSend_setEditingDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditingDelegate:");
}

id objc_msgSend_setEnableCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableCache:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEnabled_forDataclass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:forDataclass:");
}

id objc_msgSend_setEnabledInStoreDemoMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabledInStoreDemoMode:");
}

id objc_msgSend_setEnabledOnDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabledOnDevice:");
}

id objc_msgSend_setEntityAuthorization_forLocationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntityAuthorization:forLocationDictionary:");
}

id objc_msgSend_setEntryCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntryCompletionHandler:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setError:");
}

id objc_msgSend_setErrorAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorAlert:");
}

id objc_msgSend_setExistingAccountsIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExistingAccountsIdentifiers:");
}

id objc_msgSend_setExistingRooms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExistingRooms:");
}

id objc_msgSend_setExplanatoryText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExplanatoryText:");
}

id objc_msgSend_setExtendedInterfaceCreator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtendedInterfaceCreator:");
}

id objc_msgSend_setFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFacade:");
}

id objc_msgSend_setFillMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillMode:");
}

id objc_msgSend_setFilterDeviceScan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilterDeviceScan:");
}

id objc_msgSend_setFilters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilters:");
}

id objc_msgSend_setFirstLineHeadIndent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstLineHeadIndent:");
}

id objc_msgSend_setFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFlags:");
}

id objc_msgSend_setFocusButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFocusButton:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontSize:");
}

id objc_msgSend_setFooter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFooter:");
}

id objc_msgSend_setFooterText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFooterText:");
}

id objc_msgSend_setFormattingContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFormattingContext:");
}

id objc_msgSend_setForwardPlaybackEndTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForwardPlaybackEndTime:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromValue:");
}

id objc_msgSend_setFullscreenText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullscreenText:");
}

id objc_msgSend_setGameCenterAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGameCenterAltDSID:");
}

id objc_msgSend_setGeometryFlipped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGeometryFlipped:");
}

id objc_msgSend_setGrade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGrade:");
}

id objc_msgSend_setGroupingSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupingSize:");
}

id objc_msgSend_setHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandler:");
}

id objc_msgSend_setHasPairedDoAPDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPairedDoAPDevice:");
}

id objc_msgSend_setHasPairedDoAPOnlyDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPairedDoAPOnlyDevice:");
}

id objc_msgSend_setHasPairedJSDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPairedJSDevice:");
}

id objc_msgSend_setHasPhotosCompletedInitialSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPhotosCompletedInitialSync:");
}

id objc_msgSend_setHdr10PlusEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHdr10PlusEnabled:");
}

id objc_msgSend_setHeadIndent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadIndent:");
}

id objc_msgSend_setHeaderReferenceSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderReferenceSize:");
}

id objc_msgSend_setHeaderText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderText:");
}

id objc_msgSend_setHeadlineText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadlineText:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHidesNavigationBarDuringPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesNavigationBarDuringPresentation:");
}

id objc_msgSend_setHidesWhenStopped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesWhenStopped:");
}

id objc_msgSend_setHighQualityAudioEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighQualityAudioEnabled:");
}

id objc_msgSend_setHighlightedImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightedImage:");
}

id objc_msgSend_setHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHome:");
}

id objc_msgSend_setHomeScreenSyncEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeScreenSyncEnabled:");
}

id objc_msgSend_setICloudAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setICloudAccount:");
}

id objc_msgSend_setICloudAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setICloudAltDSID:");
}

id objc_msgSend_setICloudWelcomeViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setICloudWelcomeViewController:");
}

id objc_msgSend_setIPAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIPAddress:");
}

id objc_msgSend_setITunesAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setITunesAltDSID:");
}

id objc_msgSend_setITunesFileVideoResolution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setITunesFileVideoResolution:");
}

id objc_msgSend_setITunesMatchSubscribed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setITunesMatchSubscribed:");
}

id objc_msgSend_setITunesMaxHLSVideoResolution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setITunesMaxHLSVideoResolution:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentity:");
}

id objc_msgSend_setIdentityStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentityStore:");
}

id objc_msgSend_setIdleScreenEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleScreenEnabled:");
}

id objc_msgSend_setIdleScreenLibraryFilterTypeToActiveStateWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleScreenLibraryFilterTypeToActiveStateWithIdentifier:");
}

id objc_msgSend_setIdleScreenSaverType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleScreenSaverType:");
}

id objc_msgSend_setIdleScreenThemeWithViewModel_toActiveState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleScreenThemeWithViewModel:toActiveState:");
}

id objc_msgSend_setIdleTimerDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleTimerDisabled:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setImageLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageLoaded:");
}

id objc_msgSend_setImageProxies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageProxies:");
}

id objc_msgSend_setImageProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageProxy:");
}

id objc_msgSend_setIncludesApproximationPhrase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesApproximationPhrase:");
}

id objc_msgSend_setIncludesTimeRemainingPhrase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesTimeRemainingPhrase:");
}

id objc_msgSend_setInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfo:");
}

id objc_msgSend_setInfoArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfoArray:");
}

id objc_msgSend_setInitialStatesOfLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialStatesOfLayer:");
}

id objc_msgSend_setInitialStatesOfLayer_transitionSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialStatesOfLayer:transitionSpeed:");
}

id objc_msgSend_setInitialText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialText:");
}

id objc_msgSend_setInstalledUserApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstalledUserApps:");
}

id objc_msgSend_setInstructionLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstructionLabel:");
}

id objc_msgSend_setInstructionText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstructionText:");
}

id objc_msgSend_setInstructions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstructions:");
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteger:forKey:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setIpAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIpAddress:");
}

id objc_msgSend_setIpAddresses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIpAddresses:");
}

id objc_msgSend_setIsAuthenticationInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAuthenticationInProgress:");
}

id objc_msgSend_setIsEphemeral_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEphemeral:");
}

id objc_msgSend_setIsHomeKitSetupNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsHomeKitSetupNeeded:");
}

id objc_msgSend_setIsHomeSharingSetupNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsHomeSharingSetupNeeded:");
}

id objc_msgSend_setIsHomeUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsHomeUser:");
}

id objc_msgSend_setIsRemovingUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsRemovingUser:");
}

id objc_msgSend_setIsSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSelected:");
}

id objc_msgSend_setIsSignOutInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSignOutInProgress:");
}

id objc_msgSend_setIsSigningInOrOutInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSigningInOrOutInProgress:");
}

id objc_msgSend_setIsSingleUserDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSingleUserDevice:");
}

id objc_msgSend_setIsTimeZoneUpdateAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsTimeZoneUpdateAvailable:");
}

id objc_msgSend_setIsUpdatingAsnFreeSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUpdatingAsnFreeSetting:");
}

id objc_msgSend_setIsUpdatingAsnPaidSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUpdatingAsnPaidSetting:");
}

id objc_msgSend_setIsUpdatingGroupRecommendationsConsent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUpdatingGroupRecommendationsConsent:");
}

id objc_msgSend_setIsUsernameEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUsernameEditable:");
}

id objc_msgSend_setItemFactory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemFactory:");
}

id objc_msgSend_setItemSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemSize:");
}

id objc_msgSend_setItemUpdateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemUpdateBlock:");
}

id objc_msgSend_setJavaScriptApplicationURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setJavaScriptApplicationURL:");
}

id objc_msgSend_setKeyboardType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardType:");
}

id objc_msgSend_setKnockTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKnockTimer:");
}

id objc_msgSend_setKnownHomeUserIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKnownHomeUserIdentifiers:");
}

id objc_msgSend_setLanguage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguage:completion:");
}

id objc_msgSend_setLanguageFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageFilter:");
}

id objc_msgSend_setLanguageSelectionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageSelectionHandler:");
}

id objc_msgSend_setLastConfigurationCheckResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastConfigurationCheckResult:");
}

id objc_msgSend_setLastDeepLinkURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastDeepLinkURL:");
}

id objc_msgSend_setLastDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastDisplayMode:");
}

id objc_msgSend_setLastPBSNeedsHomeKitAutoOnboardingValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPBSNeedsHomeKitAutoOnboardingValue:");
}

id objc_msgSend_setLastProgressText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastProgressText:");
}

id objc_msgSend_setLaunchOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLaunchOptions:");
}

id objc_msgSend_setLeafPhotoSourcesByIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeafPhotoSourcesByIdentifier:");
}

id objc_msgSend_setLearnedActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLearnedActions:");
}

id objc_msgSend_setLearnedDeviceUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLearnedDeviceUUID:");
}

id objc_msgSend_setLearningHeaderStackView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLearningHeaderStackView:");
}

id objc_msgSend_setLearningProgressStackView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLearningProgressStackView:");
}

id objc_msgSend_setLearningStackView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLearningStackView:");
}

id objc_msgSend_setLeftTapGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftTapGestureRecognizer:");
}

id objc_msgSend_setLegacyMotionNotificationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLegacyMotionNotificationsEnabled:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setLoadingInstalledApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoadingInstalledApps:");
}

id objc_msgSend_setLoadingProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoadingProfile:");
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocale:");
}

id objc_msgSend_setLocaleAfterRegionChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocaleAfterRegionChange:");
}

id objc_msgSend_setLocaleOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocaleOnly:");
}

id objc_msgSend_setLocalizedDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedDescription:");
}

id objc_msgSend_setLocalizedElapsedTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedElapsedTime:");
}

id objc_msgSend_setLocalizedTextEntryInstructions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedTextEntryInstructions:");
}

id objc_msgSend_setLocalizedTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedTitle:");
}

id objc_msgSend_setLocalizedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedValue:");
}

id objc_msgSend_setLocalizedValueFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedValueFormatter:");
}

id objc_msgSend_setLocationServicesEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationServicesEnabled:");
}

id objc_msgSend_setLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocations:");
}

id objc_msgSend_setLockdownPairingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockdownPairingEnabled:");
}

id objc_msgSend_setLogPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogPath:");
}

id objc_msgSend_setLogin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogin:");
}

id objc_msgSend_setLogsFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogsFacade:");
}

id objc_msgSend_setLongDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLongDescription:");
}

id objc_msgSend_setLooper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLooper:");
}

id objc_msgSend_setMainViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainViewController:");
}

id objc_msgSend_setMarkSystemLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMarkSystemLanguage:");
}

id objc_msgSend_setMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMask:");
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasksToBounds:");
}

id objc_msgSend_setMaxDigitValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxDigitValue:");
}

id objc_msgSend_setMaximumUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumUnitCount:");
}

id objc_msgSend_setMediaDestinationDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaDestinationDeviceID:");
}

id objc_msgSend_setMediaServerDiscoveryConfigurationWithMode_homeSharingAccountName_homeSharingPassword_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "setMediaServerDiscoveryConfigurationWithMode:homeSharingAccountName:homeSharingPassword:completionHandler:");
}

id objc_msgSend_setMemoriesContentEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMemoriesContentEnabled:");
}

id objc_msgSend_setMenuRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenuRecognizer:");
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessage:");
}

id objc_msgSend_setMessageText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageText:");
}

id objc_msgSend_setMinimizeTruncationOfLocalizedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimizeTruncationOfLocalizedValue:");
}

id objc_msgSend_setMinimum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimum:");
}

id objc_msgSend_setMinimumInteritemSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumInteritemSpacing:");
}

id objc_msgSend_setMinimumLineHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumLineHeight:");
}

id objc_msgSend_setMinimumLineSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumLineSpacing:");
}

id objc_msgSend_setMinimumScaleFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumScaleFactor:");
}

id objc_msgSend_setMinute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinute:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setModalTransitionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalTransitionStyle:");
}

id objc_msgSend_setModeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModeType:");
}

id objc_msgSend_setMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMuted:");
}

id objc_msgSend_setMyDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMyDevices:");
}

id objc_msgSend_setMyPhotoSources_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMyPhotoSources:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setName_forConfiguration_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:forConfiguration:withCompletionHandler:");
}

id objc_msgSend_setName_forDeviceUUID_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:forDeviceUUID:withCompletionHandler:");
}

id objc_msgSend_setName_forExternalIRDeviceWithUUID_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:forExternalIRDeviceWithUUID:withCompletion:");
}

id objc_msgSend_setNameViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameViewController:");
}

id objc_msgSend_setNeConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeConfiguration:");
}

id objc_msgSend_setNeedsAuthenticationToChangeiCloudPhotoOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsAuthenticationToChangeiCloudPhotoOptions:");
}

id objc_msgSend_setNeedsCDPRepair_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsCDPRepair:");
}

id objc_msgSend_setNeedsFocusUpdate(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsFocusUpdate];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNeedsSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsSetup:");
}

id objc_msgSend_setNeedsUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUpdate:");
}

id objc_msgSend_setNetworkDetailsViewControllerClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetworkDetailsViewControllerClass:");
}

id objc_msgSend_setNetworkName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetworkName:");
}

id objc_msgSend_setNumberOfDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfDigits:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setNumberOfTapsRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfTapsRequired:");
}

id objc_msgSend_setNumberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberStyle:");
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:atIndexedSubscript:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObservingTCCInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservingTCCInfos:");
}

id objc_msgSend_setOfferedEnableAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOfferedEnableAssistant:");
}

id objc_msgSend_setOfferedEnableDictation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOfferedEnableDictation:");
}

id objc_msgSend_setOnDemandEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnDemandEnabled:");
}

id objc_msgSend_setOnSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnSelection:");
}

id objc_msgSend_setOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpacity:");
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpaque:");
}

id objc_msgSend_setOperationUIPermissions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationUIPermissions:");
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptions:");
}

id objc_msgSend_setOrganization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrganization:");
}

id objc_msgSend_setOriginalURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalURL:");
}

id objc_msgSend_setOtherDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherDevices:");
}

id objc_msgSend_setOtherPhotoSources_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherPhotoSources:");
}

id objc_msgSend_setOtherResolutionsModes24Hz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherResolutionsModes24Hz:");
}

id objc_msgSend_setOtherResolutionsModes25Hz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherResolutionsModes25Hz:");
}

id objc_msgSend_setOtherResolutionsModes30Hz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherResolutionsModes30Hz:");
}

id objc_msgSend_setOtherResolutionsModes50Hz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherResolutionsModes50Hz:");
}

id objc_msgSend_setOtherResolutionsModes60Hz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherResolutionsModes60Hz:");
}

id objc_msgSend_setOtherResolutionsModesExact24Hz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherResolutionsModesExact24Hz:");
}

id objc_msgSend_setOtherResolutionsModesExact30Hz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherResolutionsModesExact30Hz:");
}

id objc_msgSend_setOtherResolutionsModesExact60Hz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherResolutionsModesExact60Hz:");
}

id objc_msgSend_setOtherResolutionsModesOthers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherResolutionsModesOthers:");
}

id objc_msgSend_setOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevices:");
}

id objc_msgSend_setOverrideName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideName:");
}

id objc_msgSend_setOverrideUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideUserInterfaceStyle:");
}

id objc_msgSend_setPairedDevicesInDisplayOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedDevicesInDisplayOrder:");
}

id objc_msgSend_setPairedPeerAddedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedPeerAddedHandler:");
}

id objc_msgSend_setPairedPeerChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedPeerChangedHandler:");
}

id objc_msgSend_setPairedPeerRemovedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedPeerRemovedHandler:");
}

id objc_msgSend_setPairedWithAppleRemote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedWithAppleRemote:");
}

id objc_msgSend_setPairingDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingDevice:");
}

id objc_msgSend_setParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParameters:");
}

id objc_msgSend_setParsedPathComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParsedPathComponents:");
}

id objc_msgSend_setPasscodeToConfirm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPasscodeToConfirm:");
}

id objc_msgSend_setPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPassword:");
}

id objc_msgSend_setPasswordViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPasswordViewController:");
}

id objc_msgSend_setPauseImageLoad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPauseImageLoad:");
}

id objc_msgSend_setPaused_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaused:");
}

id objc_msgSend_setPbs_watchListButtonBehaviorEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPbs_watchListButtonBehaviorEnabled:");
}

id objc_msgSend_setPeopleFilterItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeopleFilterItem:");
}

id objc_msgSend_setPercentEncodedQueryItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPercentEncodedQueryItems:");
}

id objc_msgSend_setPersonaUniqueString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonaUniqueString:");
}

id objc_msgSend_setPhotoAssets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhotoAssets:");
}

id objc_msgSend_setPhotoCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhotoCollection:");
}

id objc_msgSend_setPhotoCollectionGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhotoCollectionGroups:");
}

id objc_msgSend_setPhotoSources_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhotoSources:");
}

id objc_msgSend_setPhotosSourceHasMemories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhotosSourceHasMemories:");
}

id objc_msgSend_setPingOutstanding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPingOutstanding:");
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholder:");
}

id objc_msgSend_setPlayButtonAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayButtonAction:");
}

id objc_msgSend_setPlayPauseButtonRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayPauseButtonRecognizer:");
}

id objc_msgSend_setPlaybackQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackQuality:");
}

id objc_msgSend_setPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayer:");
}

id objc_msgSend_setPlistName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlistName:");
}

id objc_msgSend_setPortraitClockCategories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPortraitClockCategories:");
}

id objc_msgSend_setPortraitClockEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPortraitClockEnabled:");
}

id objc_msgSend_setPortraitClockUpdateInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPortraitClockUpdateInterval:");
}

id objc_msgSend_setPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPosition:");
}

id objc_msgSend_setPositionKeyframes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPositionKeyframes:");
}

id objc_msgSend_setPosterPreviewViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPosterPreviewViewController:");
}

id objc_msgSend_setPostersCollectionRoleObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPostersCollectionRoleObserver:");
}

id objc_msgSend_setPreferredAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredAction:");
}

id objc_msgSend_setPreferredAudioLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredAudioLanguageCode:");
}

id objc_msgSend_setPreferredButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredButton:");
}

id objc_msgSend_setPreferredDisplaySizeIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredDisplaySizeIdentifier:");
}

id objc_msgSend_setPreferredInputModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredInputModes:");
}

id objc_msgSend_setPreferredLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredLanguages:");
}

id objc_msgSend_setPreferredLanguages_withVariants_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredLanguages:withVariants:completion:");
}

id objc_msgSend_setPreferredLanguagesGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredLanguagesGroup:");
}

id objc_msgSend_setPreferredMediaDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredMediaDestination:");
}

id objc_msgSend_setPreferredMusicHighBandwidthResolution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredMusicHighBandwidthResolution:");
}

id objc_msgSend_setPreferredOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredOutputDevices:");
}

id objc_msgSend_setPreferredSubtitleLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredSubtitleLanguageCode:");
}

id objc_msgSend_setPrefersSpatialAudio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersSpatialAudio:");
}

id objc_msgSend_setPresentationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationRequest:");
}

id objc_msgSend_setPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentingViewController:");
}

id objc_msgSend_setPreventsDisplaySleepDuringVideoPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreventsDisplaySleepDuringVideoPlayback:");
}

id objc_msgSend_setPreviewPageAudioEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviewPageAudioEnabled:");
}

id objc_msgSend_setPreviewViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviewViewController:");
}

id objc_msgSend_setPreviouslyUsedEmails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviouslyUsedEmails:");
}

id objc_msgSend_setPrimaryDNSAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryDNSAddress:");
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgress:");
}

id objc_msgSend_setProgress_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgress:animated:");
}

id objc_msgSend_setProgressHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressHandler:");
}

id objc_msgSend_setProgressPercent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressPercent:");
}

id objc_msgSend_setProgressView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressView:");
}

id objc_msgSend_setPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrompt:");
}

id objc_msgSend_setPromptText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPromptText:");
}

id objc_msgSend_setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueue:");
}

id objc_msgSend_setQuotaMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuotaMessage:");
}

id objc_msgSend_setRawDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRawDisplayName:");
}

id objc_msgSend_setRawName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRawName:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setRecognizeMyVoiceAvailability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecognizeMyVoiceAvailability:");
}

id objc_msgSend_setRecognizeMyVoiceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecognizeMyVoiceState:");
}

id objc_msgSend_setRecoveryController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecoveryController:");
}

id objc_msgSend_setRegion_updateFirstLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegion:updateFirstLanguage:");
}

id objc_msgSend_setRelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelay:");
}

id objc_msgSend_setRemoteAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteAddress:");
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteObjectInterface:");
}

id objc_msgSend_setRemoteRole_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteRole:");
}

id objc_msgSend_setRemotes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemotes:");
}

id objc_msgSend_setRemotesFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemotesFacade:");
}

id objc_msgSend_setRemovedOnCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemovedOnCompletion:");
}

id objc_msgSend_setReportHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReportHandler:");
}

id objc_msgSend_setRequestCachePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestCachePolicy:");
}

id objc_msgSend_setRequestUserConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestUserConfirmation:");
}

id objc_msgSend_setRequiredProfileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiredProfileURL:");
}

id objc_msgSend_setRequiredServiceTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiredServiceTypes:");
}

id objc_msgSend_setRequiresAppleConnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresAppleConnect:");
}

id objc_msgSend_setRequiresSecureCoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresSecureCoding:");
}

id objc_msgSend_setRequiresVPN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresVPN:");
}

id objc_msgSend_setResidentDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResidentDevices:");
}

id objc_msgSend_setRestricted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRestricted:");
}

id objc_msgSend_setResult_targetWhitePoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResult:targetWhitePoint:");
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItem:");
}

id objc_msgSend_setRightBarButtonItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItems:");
}

id objc_msgSend_setRightBarButtonItems_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItems:animated:");
}

id objc_msgSend_setRightButtonAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightButtonAction:");
}

id objc_msgSend_setRightTapGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightTapGestureRecognizer:");
}

id objc_msgSend_setRoot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoot:");
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootViewController:");
}

id objc_msgSend_setRouterAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouterAddress:");
}

id objc_msgSend_setRssiFetchTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRssiFetchTimer:");
}

id objc_msgSend_setRunningSysdiagnose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRunningSysdiagnose:");
}

id objc_msgSend_setScreenSaverDisplayStatusForBundleIdentifier_isEnabled_appInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenSaverDisplayStatusForBundleIdentifier:isEnabled:appInfo:");
}

id objc_msgSend_setScreenSaverStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenSaverStyle:");
}

id objc_msgSend_setScreenSaverWithPhotoSource_collection_name_style_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenSaverWithPhotoSource:collection:name:style:userInfo:");
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEnabled:");
}

id objc_msgSend_setSearchResultsUpdater_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchResultsUpdater:");
}

id objc_msgSend_setSearchString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchString:");
}

id objc_msgSend_setSecond_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecond:");
}

id objc_msgSend_setSectionInfo_forSectionID_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionInfo:forSectionID:withCompletion:");
}

id objc_msgSend_setSectionInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionInfos:");
}

id objc_msgSend_setSecure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecure:");
}

id objc_msgSend_setSecureAccessoryAllowedRemotes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecureAccessoryAllowedRemotes:");
}

id objc_msgSend_setSecureDigitEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecureDigitEntry:");
}

id objc_msgSend_setSecureServices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecureServices:");
}

id objc_msgSend_setSecureTextEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecureTextEntry:");
}

id objc_msgSend_setSecurityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecurityType:");
}

id objc_msgSend_setSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelected:");
}

id objc_msgSend_setSelectedBetaSeedProgram_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedBetaSeedProgram:");
}

id objc_msgSend_setSelectedPhotoCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPhotoCollection:");
}

id objc_msgSend_setSelectedPhotoSlideShowStyleWithStyleID_effectID_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPhotoSlideShowStyleWithStyleID:effectID:reply:");
}

id objc_msgSend_setSelectedPhotoSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPhotoSource:");
}

id objc_msgSend_setSelectedPhotoSourceValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPhotoSourceValue:");
}

id objc_msgSend_setSelectedPhotoSourceWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPhotoSourceWithID:");
}

id objc_msgSend_setSelectedPhotoSourceWithSourceID_collectionID_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPhotoSourceWithSourceID:collectionID:reply:");
}

id objc_msgSend_setSelectedPosterItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPosterItem:");
}

id objc_msgSend_setSelectedPosterWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPosterWithID:");
}

id objc_msgSend_setSelectedRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedRegion:");
}

id objc_msgSend_setSelectedSegmentIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedSegmentIndex:");
}

id objc_msgSend_setSelectedSharingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedSharingFilter:");
}

id objc_msgSend_setSelectedSharingFilterWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedSharingFilterWithID:");
}

id objc_msgSend_setSelectedTransitionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedTransitionStyle:");
}

id objc_msgSend_setSelectedTransitionStyleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedTransitionStyleValue:");
}

id objc_msgSend_setSelectedTransitionStyleWithStyleID_effectID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedTransitionStyleWithStyleID:effectID:");
}

id objc_msgSend_setSelectedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedValue:");
}

id objc_msgSend_setService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setService:");
}

id objc_msgSend_setServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceType:");
}

id objc_msgSend_setSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSession:");
}

id objc_msgSend_setSessionConnectTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionConnectTime:");
}

id objc_msgSend_setSessionFailedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionFailedHandler:");
}

id objc_msgSend_setSessionFinishedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionFinishedHandler:");
}

id objc_msgSend_setSessionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionState:");
}

id objc_msgSend_setSessionStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionStatus:");
}

id objc_msgSend_setSettingItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettingItems:");
}

id objc_msgSend_setSettingsBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettingsBundle:");
}

id objc_msgSend_setSharedAlbumsButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedAlbumsButton:");
}

id objc_msgSend_setSharedLibraryEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedLibraryEnabled:");
}

id objc_msgSend_setSharedWithYouEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedWithYouEnabled:");
}

id objc_msgSend_setSharingFilters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharingFilters:");
}

id objc_msgSend_setShouldActivateLastComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldActivateLastComponent:");
}

id objc_msgSend_setShouldAllowAppleIDCreation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAllowAppleIDCreation:");
}

id objc_msgSend_setShouldAnimateTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAnimateTransition:");
}

id objc_msgSend_setShouldAutomaticallyApplyUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAutomaticallyApplyUpdates:");
}

id objc_msgSend_setShouldBackgroundDesiredServices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldBackgroundDesiredServices:");
}

id objc_msgSend_setShouldCenterAlignShortText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldCenterAlignShortText:");
}

id objc_msgSend_setShouldCreateDeviceUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldCreateDeviceUser:");
}

id objc_msgSend_setShouldDismissAutomatically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDismissAutomatically:");
}

id objc_msgSend_setShouldDisplayApplicationsQuotaExceededMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDisplayApplicationsQuotaExceededMessage:");
}

id objc_msgSend_setShouldEnableRecognizeMyVoiceAfterRepair_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldEnableRecognizeMyVoiceAfterRepair:");
}

id objc_msgSend_setShouldModeSwitchForDynamicRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldModeSwitchForDynamicRange:");
}

id objc_msgSend_setShouldModeSwitchForFrameRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldModeSwitchForFrameRate:");
}

id objc_msgSend_setShouldPresentChildController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPresentChildController:");
}

id objc_msgSend_setShouldShowProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldShowProgress:");
}

id objc_msgSend_setShouldShowSpinner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldShowSpinner:");
}

id objc_msgSend_setShouldUseDHCP_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldUseDHCP:");
}

id objc_msgSend_setShouldUseDefaultDNS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldUseDefaultDNS:");
}

id objc_msgSend_setShouldUseQMSForFrameRateSwitching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldUseQMSForFrameRateSwitching:");
}

id objc_msgSend_setShowDemotionOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowDemotionOption:");
}

id objc_msgSend_setShowPartNumberAndFirmwareVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowPartNumberAndFirmwareVersion:");
}

id objc_msgSend_setSignInContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignInContexts:");
}

id objc_msgSend_setSignalStrength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignalStrength:");
}

id objc_msgSend_setSiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriEnabled:");
}

id objc_msgSend_setSiriRMVState_foriCloudAltDSID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriRMVState:foriCloudAltDSID:completion:");
}

id objc_msgSend_setSleepTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSleepTimeout:");
}

id objc_msgSend_setSmartNotificationItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmartNotificationItems:");
}

id objc_msgSend_setSmartNotificationsState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmartNotificationsState:");
}

id objc_msgSend_setSortedAudiencesForTrain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortedAudiencesForTrain:");
}

id objc_msgSend_setSortedTrainNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortedTrainNames:");
}

id objc_msgSend_setSortsByTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortsByTitle:");
}

id objc_msgSend_setSourceItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceItem:");
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpacing:");
}

id objc_msgSend_setSpatialAudioAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpatialAudioAllowed:");
}

id objc_msgSend_setSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeed:");
}

id objc_msgSend_setSpinnerText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpinnerText:");
}

id objc_msgSend_setStartProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartProgress:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setState_ofLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:ofLayer:");
}

id objc_msgSend_setState_ofLayer_transitionSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:ofLayer:transitionSpeed:");
}

id objc_msgSend_setStepText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStepText:");
}

id objc_msgSend_setStorageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStorageIdentifier:");
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setString:");
}

id objc_msgSend_setStringsTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStringsTable:");
}

id objc_msgSend_setSublayerTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSublayerTransform:");
}

id objc_msgSend_setSubnetMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubnetMask:");
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtitle:");
}

id objc_msgSend_setSubtitleDisplayType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtitleDisplayType:");
}

id objc_msgSend_setSubtype_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtype:");
}

id objc_msgSend_setSuggestedRoomNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestedRoomNames:");
}

id objc_msgSend_setSupplementaryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupplementaryView:");
}

id objc_msgSend_setSupportedMultiUserLanguageCodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedMultiUserLanguageCodes:");
}

id objc_msgSend_setSupportsEnhancedAudio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsEnhancedAudio:");
}

id objc_msgSend_setSupportsPiggybacking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsPiggybacking:");
}

id objc_msgSend_setSymbolConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSymbolConfiguration:");
}

id objc_msgSend_setSyncState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncState:");
}

id objc_msgSend_setSystemAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemAppearance:");
}

id objc_msgSend_setSystemLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemLanguage:");
}

id objc_msgSend_setSystemLanguage_withVariants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemLanguage:withVariants:");
}

id objc_msgSend_setSystemLanguageUnsupportedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemLanguageUnsupportedHandler:");
}

id objc_msgSend_setSystemServiceItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemServiceItems:");
}

id objc_msgSend_setTabBarObservedScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTabBarObservedScrollView:");
}

id objc_msgSend_setTabStops_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTabStops:");
}

id objc_msgSend_setTableHeaderView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableHeaderView:");
}

id objc_msgSend_setTableViewPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableViewPadding:");
}

id objc_msgSend_setTableViewWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableViewWidth:");
}

id objc_msgSend_setTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTag:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setTargetedAccountTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetedAccountTypes:");
}

id objc_msgSend_setTemporaryPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTemporaryPassword:");
}

id objc_msgSend_setTermTextVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTermTextVisible:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setThemePreviewViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThemePreviewViewController:");
}

id objc_msgSend_setTimeOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeOffset:");
}

id objc_msgSend_setTimeZoneCityID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZoneCityID:");
}

id objc_msgSend_setTimeoutIntervalForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutIntervalForRequest:");
}

id objc_msgSend_setTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimer:");
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimingFunction:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:forState:");
}

id objc_msgSend_setTitleLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleLabel:");
}

id objc_msgSend_setTitleText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleText:");
}

id objc_msgSend_setTitleTextAttributes_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleTextAttributes:forState:");
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToValue:");
}

id objc_msgSend_setTotalTestsToRun_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalTestsToRun:");
}

id objc_msgSend_setTrainAudiences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrainAudiences:");
}

id objc_msgSend_setTrainMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrainMap:");
}

id objc_msgSend_setTrainName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrainName:");
}

id objc_msgSend_setTransform3D_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransform3D:");
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransform:");
}

id objc_msgSend_setTransformKeyframes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransformKeyframes:");
}

id objc_msgSend_setTransitionSoundEffectsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionSoundEffectsEnabled:");
}

id objc_msgSend_setTransitionStyles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionStyles:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setTreatDisplayModeAsFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTreatDisplayModeAsFallback:");
}

id objc_msgSend_setTriggerTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTriggerTime:");
}

id objc_msgSend_setTrustCertificates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrustCertificates:");
}

id objc_msgSend_setTrusted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrusted:");
}

id objc_msgSend_setTurnOnButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTurnOnButton:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setUIScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUIScale:");
}

id objc_msgSend_setURLCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setURLCache:");
}

id objc_msgSend_setUnfocusedShadowOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnfocusedShadowOpacity:");
}

id objc_msgSend_setUnfocusedShadowRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnfocusedShadowRadius:");
}

id objc_msgSend_setUnfocusedShadowVerticalOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnfocusedShadowVerticalOffset:");
}

id objc_msgSend_setUnitsStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnitsStyle:");
}

id objc_msgSend_setUnverifiedDisplayModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnverifiedDisplayModes:");
}

id objc_msgSend_setUpPreview(void *a1, const char *a2, ...)
{
  return _[a1 setUpPreview];
}

id objc_msgSend_setUpdateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateBlock:");
}

id objc_msgSend_setUpdatingPairedAppleRemoteState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdatingPairedAppleRemoteState:");
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrl:");
}

id objc_msgSend_setUseIdleScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseIdleScreen:");
}

id objc_msgSend_setUseShadowImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseShadowImage:");
}

id objc_msgSend_setUsedAppStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsedAppStorage:");
}

id objc_msgSend_setUserActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserActionType:");
}

id objc_msgSend_setUserHasBeenRemoved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserHasBeenRemoved:");
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setUserProfileIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserProfileIdentifier:");
}

id objc_msgSend_setUserType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserType:");
}

id objc_msgSend_setUserVisibleHDRChromaModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserVisibleHDRChromaModes:");
}

id objc_msgSend_setUserVisibleSDRChromaModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserVisibleSDRChromaModes:");
}

id objc_msgSend_setUserVisibleSDRColorMappingModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserVisibleSDRColorMappingModes:");
}

id objc_msgSend_setUserVisibleSortedDisplayModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserVisibleSortedDisplayModes:");
}

id objc_msgSend_setUsername_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsername:");
}

id objc_msgSend_setUsesGroupingSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesGroupingSeparator:");
}

id objc_msgSend_setUuid_deprecated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUuid_deprecated:");
}

id objc_msgSend_setValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forHTTPHeaderField:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValue_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKeyPath:");
}

id objc_msgSend_setValue_forPreferenceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forPreferenceKey:");
}

id objc_msgSend_setValue_forRequestParameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forRequestParameter:");
}

id objc_msgSend_setValue_forSettingItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forSettingItem:");
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:");
}

id objc_msgSend_setVideoGravity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoGravity:");
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setView:");
}

id objc_msgSend_setViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewController:");
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:animated:");
}

id objc_msgSend_setVoiceTriggerEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceTriggerEnabled:");
}

id objc_msgSend_setVoiceTriggerPhraseType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceTriggerPhraseType:");
}

id objc_msgSend_setVpn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVpn:");
}

id objc_msgSend_setWaitsForConnectivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitsForConnectivity:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWriteDisplayModeToDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWriteDisplayModeToDisk:");
}

id objc_msgSend_setZPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZPosition:");
}

id objc_msgSend_set_appleIDContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_appleIDContext:");
}

id objc_msgSend_setiCloudPhotoLibraryEnabled_presentingViewController_propertySetCompletion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setiCloudPhotoLibraryEnabled:presentingViewController:propertySetCompletion:");
}

id objc_msgSend_setiCloudSharedPhotosEnabled_presentingViewController_propertySetCompletion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setiCloudSharedPhotosEnabled:presentingViewController:propertySetCompletion:");
}

id objc_msgSend_setting(void *a1, const char *a2, ...)
{
  return _[a1 setting];
}

id objc_msgSend_settingGroupAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingGroupAtIndex:");
}

id objc_msgSend_settingItem_didUpdateMetadataWithGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingItem:didUpdateMetadataWithGroup:");
}

id objc_msgSend_settingItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingItemAtIndexPath:");
}

id objc_msgSend_settingItems(void *a1, const char *a2, ...)
{
  return _[a1 settingItems];
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _[a1 settings];
}

id objc_msgSend_settingsBundle(void *a1, const char *a2, ...)
{
  return _[a1 settingsBundle];
}

id objc_msgSend_settingsConfigurationsByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 settingsConfigurationsByIdentifier];
}

id objc_msgSend_settingsForKeyPaths_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsForKeyPaths:completionHandler:");
}

id objc_msgSend_settingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsNeededForBundleID:");
}

id objc_msgSend_setup(void *a1, const char *a2, ...)
{
  return _[a1 setup];
}

id objc_msgSend_setupNetworkMonitoring(void *a1, const char *a2, ...)
{
  return _[a1 setupNetworkMonitoring];
}

id objc_msgSend_setupPhotoSources(void *a1, const char *a2, ...)
{
  return _[a1 setupPhotoSources];
}

id objc_msgSend_setupPhotosWithOptions_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupPhotosWithOptions:presentingViewController:");
}

id objc_msgSend_shake(void *a1, const char *a2, ...)
{
  return _[a1 shake];
}

id objc_msgSend_sharedAccessoryManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedAccessoryManager];
}

id objc_msgSend_sharedAlbumsButton(void *a1, const char *a2, ...)
{
  return _[a1 sharedAlbumsButton];
}

id objc_msgSend_sharedAppleTVServicesPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedAppleTVServicesPreferences];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedAudioPresentationOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedAudioPresentationOutputContext];
}

id objc_msgSend_sharedCacheDeletePreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedCacheDeletePreferences];
}

id objc_msgSend_sharedCloudController(void *a1, const char *a2, ...)
{
  return _[a1 sharedCloudController];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedController(void *a1, const char *a2, ...)
{
  return _[a1 sharedController];
}

id objc_msgSend_sharedInputModeController(void *a1, const char *a2, ...)
{
  return _[a1 sharedInputModeController];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedInterfaceFactory(void *a1, const char *a2, ...)
{
  return _[a1 sharedInterfaceFactory];
}

id objc_msgSend_sharedIntlUtility(void *a1, const char *a2, ...)
{
  return _[a1 sharedIntlUtility];
}

id objc_msgSend_sharedLibraryStatusProvider(void *a1, const char *a2, ...)
{
  return _[a1 sharedLibraryStatusProvider];
}

id objc_msgSend_sharedLibraryStatusProviderWithPhotoLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedLibraryStatusProviderWithPhotoLibrary:");
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedPhotoLibrary(void *a1, const char *a2, ...)
{
  return _[a1 sharedPhotoLibrary];
}

id objc_msgSend_sharedPhotosPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPhotosPreferences];
}

id objc_msgSend_sharedPineBoardServicesPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPineBoardServicesPreferences];
}

id objc_msgSend_sharedPortraitClockPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPortraitClockPreferences];
}

id objc_msgSend_sharedPreferencesController(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferencesController];
}

id objc_msgSend_sharedScreenSaverPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedScreenSaverPreferences];
}

id objc_msgSend_sharedStatusController(void *a1, const char *a2, ...)
{
  return _[a1 sharedStatusController];
}

id objc_msgSend_sharedSupport(void *a1, const char *a2, ...)
{
  return _[a1 sharedSupport];
}

id objc_msgSend_sharedSystem(void *a1, const char *a2, ...)
{
  return _[a1 sharedSystem];
}

id objc_msgSend_sharedTVSettingsPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedTVSettingsPreferences];
}

id objc_msgSend_sharedTransitionTester(void *a1, const char *a2, ...)
{
  return _[a1 sharedTransitionTester];
}

id objc_msgSend_sharingFilter(void *a1, const char *a2, ...)
{
  return _[a1 sharingFilter];
}

id objc_msgSend_sharingFilters(void *a1, const char *a2, ...)
{
  return _[a1 sharingFilters];
}

id objc_msgSend_shippingConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 shippingConfiguration];
}

id objc_msgSend_shortDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 shortDisplayName];
}

id objc_msgSend_shortName(void *a1, const char *a2, ...)
{
  return _[a1 shortName];
}

id objc_msgSend_shortVersionString(void *a1, const char *a2, ...)
{
  return _[a1 shortVersionString];
}

id objc_msgSend_shouldActivateLastComponent(void *a1, const char *a2, ...)
{
  return _[a1 shouldActivateLastComponent];
}

id objc_msgSend_shouldAllowAppOTA(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllowAppOTA];
}

id objc_msgSend_shouldAnimateTransition(void *a1, const char *a2, ...)
{
  return _[a1 shouldAnimateTransition];
}

id objc_msgSend_shouldAutomaticallyApplyUpdates(void *a1, const char *a2, ...)
{
  return _[a1 shouldAutomaticallyApplyUpdates];
}

id objc_msgSend_shouldDisplayApplicationsQuotaExceededMessage(void *a1, const char *a2, ...)
{
  return _[a1 shouldDisplayApplicationsQuotaExceededMessage];
}

id objc_msgSend_shouldEnableRecognizeMyVoiceAfterRepair(void *a1, const char *a2, ...)
{
  return _[a1 shouldEnableRecognizeMyVoiceAfterRepair];
}

id objc_msgSend_shouldHide(void *a1, const char *a2, ...)
{
  return _[a1 shouldHide];
}

id objc_msgSend_shouldHideExpanse(void *a1, const char *a2, ...)
{
  return _[a1 shouldHideExpanse];
}

id objc_msgSend_shouldModeSwitchForDynamicRange(void *a1, const char *a2, ...)
{
  return _[a1 shouldModeSwitchForDynamicRange];
}

id objc_msgSend_shouldModeSwitchForFrameRate(void *a1, const char *a2, ...)
{
  return _[a1 shouldModeSwitchForFrameRate];
}

id objc_msgSend_shouldPresentChildController(void *a1, const char *a2, ...)
{
  return _[a1 shouldPresentChildController];
}

id objc_msgSend_shouldSendDataToApple(void *a1, const char *a2, ...)
{
  return _[a1 shouldSendDataToApple];
}

id objc_msgSend_shouldShowDisplayAssistant(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowDisplayAssistant];
}

id objc_msgSend_shouldShowWhatsNewWithOptions_reply_dismissHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowWhatsNewWithOptions:reply:dismissHandler:");
}

id objc_msgSend_shouldUseDHCP(void *a1, const char *a2, ...)
{
  return _[a1 shouldUseDHCP];
}

id objc_msgSend_shouldUseDefaultDNS(void *a1, const char *a2, ...)
{
  return _[a1 shouldUseDefaultDNS];
}

id objc_msgSend_shouldUseQMSForFrameRateSwitching(void *a1, const char *a2, ...)
{
  return _[a1 shouldUseQMSForFrameRateSwitching];
}

id objc_msgSend_showActionButtonWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showActionButtonWithTitle:");
}

id objc_msgSend_showCategoryHideAlertWithPresentingViewController_categoryID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCategoryHideAlertWithPresentingViewController:categoryID:");
}

id objc_msgSend_showFallbackAlertWithPresentingViewController_categoryID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showFallbackAlertWithPresentingViewController:categoryID:");
}

id objc_msgSend_showICloudSetupWhenSelected(void *a1, const char *a2, ...)
{
  return _[a1 showICloudSetupWhenSelected];
}

id objc_msgSend_showPartNumberAndFirmwareVersion(void *a1, const char *a2, ...)
{
  return _[a1 showPartNumberAndFirmwareVersion];
}

id objc_msgSend_showSandboxAccountUI(void *a1, const char *a2, ...)
{
  return _[a1 showSandboxAccountUI];
}

id objc_msgSend_signInService_withContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signInService:withContext:completion:");
}

id objc_msgSend_signInServiceFailedAlertForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signInServiceFailedAlertForError:");
}

id objc_msgSend_signInServiceType_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signInServiceType:presentingViewController:");
}

id objc_msgSend_signOut(void *a1, const char *a2, ...)
{
  return _[a1 signOut];
}

id objc_msgSend_signOutOfServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signOutOfServiceType:");
}

id objc_msgSend_signal(void *a1, const char *a2, ...)
{
  return _[a1 signal];
}

id objc_msgSend_significantEventTypes(void *a1, const char *a2, ...)
{
  return _[a1 significantEventTypes];
}

id objc_msgSend_significantEventTypesFormatter(void *a1, const char *a2, ...)
{
  return _[a1 significantEventTypesFormatter];
}

id objc_msgSend_siriSettingsConnection(void *a1, const char *a2, ...)
{
  return _[a1 siriSettingsConnection];
}

id objc_msgSend_siriVoiceTriggerFacade(void *a1, const char *a2, ...)
{
  return _[a1 siriVoiceTriggerFacade];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_sleepSystemForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sleepSystemForReason:");
}

id objc_msgSend_sleepTimeoutWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sleepTimeoutWithCompletion:");
}

id objc_msgSend_smartNotificationBulletin(void *a1, const char *a2, ...)
{
  return _[a1 smartNotificationBulletin];
}

id objc_msgSend_smartNotificationItems(void *a1, const char *a2, ...)
{
  return _[a1 smartNotificationItems];
}

id objc_msgSend_smartNotificationsFormatter(void *a1, const char *a2, ...)
{
  return _[a1 smartNotificationsFormatter];
}

id objc_msgSend_smartNotificationsShortFormatter(void *a1, const char *a2, ...)
{
  return _[a1 smartNotificationsShortFormatter];
}

id objc_msgSend_smartNotificationsState(void *a1, const char *a2, ...)
{
  return _[a1 smartNotificationsState];
}

id objc_msgSend_softwareDisplaySize(void *a1, const char *a2, ...)
{
  return _[a1 softwareDisplaySize];
}

id objc_msgSend_softwareLicenseText(void *a1, const char *a2, ...)
{
  return _[a1 softwareLicenseText];
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortDescriptorWithKey_ascending_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:selector:");
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sortUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingDescriptors:");
}

id objc_msgSend_sortUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingSelector:");
}

id objc_msgSend_sortedArrayFromArray_collationStringSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayFromArray:collationStringSelector:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingDescriptors:");
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingSelector:");
}

id objc_msgSend_sortedDisplayModes(void *a1, const char *a2, ...)
{
  return _[a1 sortedDisplayModes];
}

id objc_msgSend_sortedHomeKitItemComparator(void *a1, const char *a2, ...)
{
  return _[a1 sortedHomeKitItemComparator];
}

id objc_msgSend_sortedModes(void *a1, const char *a2, ...)
{
  return _[a1 sortedModes];
}

id objc_msgSend_sortedTrainNames(void *a1, const char *a2, ...)
{
  return _[a1 sortedTrainNames];
}

id objc_msgSend_soundProfileSupported(void *a1, const char *a2, ...)
{
  return _[a1 soundProfileSupported];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_sourceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sourceIdentifier];
}

id objc_msgSend_sourceIndexes(void *a1, const char *a2, ...)
{
  return _[a1 sourceIndexes];
}

id objc_msgSend_sourceItem(void *a1, const char *a2, ...)
{
  return _[a1 sourceItem];
}

id objc_msgSend_sourceName(void *a1, const char *a2, ...)
{
  return _[a1 sourceName];
}

id objc_msgSend_spatialAudioAllowed(void *a1, const char *a2, ...)
{
  return _[a1 spatialAudioAllowed];
}

id objc_msgSend_spatialAudioSupported(void *a1, const char *a2, ...)
{
  return _[a1 spatialAudioSupported];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 startAdvertising];
}

id objc_msgSend_startAdvertisingForProximityKeyTransferWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAdvertisingForProximityKeyTransferWithType:");
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _[a1 startAnimating];
}

id objc_msgSend_startAnimatingSpinner(void *a1, const char *a2, ...)
{
  return _[a1 startAnimatingSpinner];
}

id objc_msgSend_startAnimatingSpinnerWithStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimatingSpinnerWithStatus:");
}

id objc_msgSend_startAnimation(void *a1, const char *a2, ...)
{
  return _[a1 startAnimation];
}

id objc_msgSend_startAnimationAfterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimationAfterDelay:");
}

id objc_msgSend_startBrowsingForLocalAccessory(void *a1, const char *a2, ...)
{
  return _[a1 startBrowsingForLocalAccessory];
}

id objc_msgSend_startCalibrationFlow(void *a1, const char *a2, ...)
{
  return _[a1 startCalibrationFlow];
}

id objc_msgSend_startConnectionMonitoring(void *a1, const char *a2, ...)
{
  return _[a1 startConnectionMonitoring];
}

id objc_msgSend_startFlowWithPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startFlowWithPresentingViewController:");
}

id objc_msgSend_startLearningForConfiguration_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startLearningForConfiguration:withCompletion:");
}

id objc_msgSend_startLogTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startLogTest:");
}

id objc_msgSend_startMonitoringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMonitoringWithOptions:");
}

id objc_msgSend_startObservingWithUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObservingWithUpdateHandler:");
}

id objc_msgSend_startPushTransition(void *a1, const char *a2, ...)
{
  return _[a1 startPushTransition];
}

id objc_msgSend_startScanning(void *a1, const char *a2, ...)
{
  return _[a1 startScanning];
}

id objc_msgSend_startScanningIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 startScanningIfNeeded];
}

id objc_msgSend_startScrollTestForScrollViewClass_fromViewHierarchy_testName_axis_options_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startScrollTestForScrollViewClass:fromViewHierarchy:testName:axis:options:");
}

id objc_msgSend_startWaitingForHDMI(void *a1, const char *a2, ...)
{
  return _[a1 startWaitingForHDMI];
}

id objc_msgSend_startWithManifestResponseBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startWithManifestResponseBlock:");
}

id objc_msgSend_startedTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startedTest:");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateController_didSetStateOfLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateController:didSetStateOfLayer:");
}

id objc_msgSend_stateController_transitionDidStart_speed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateController:transitionDidStart:speed:");
}

id objc_msgSend_stateController_transitionDidStop_completed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateController:transitionDidStop:completed:");
}

id objc_msgSend_stateOfLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateOfLayer:");
}

id objc_msgSend_stateWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateWithName:");
}

id objc_msgSend_staticUsage(void *a1, const char *a2, ...)
{
  return _[a1 staticUsage];
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _[a1 status];
}

id objc_msgSend_statusType(void *a1, const char *a2, ...)
{
  return _[a1 statusType];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 stopAdvertising];
}

id objc_msgSend_stopAdvertisingForProximityKeyTransfer(void *a1, const char *a2, ...)
{
  return _[a1 stopAdvertisingForProximityKeyTransfer];
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _[a1 stopAnimating];
}

id objc_msgSend_stopAnimatingSpinner(void *a1, const char *a2, ...)
{
  return _[a1 stopAnimatingSpinner];
}

id objc_msgSend_stopAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAnimation:");
}

id objc_msgSend_stopBrowsingForLocalAccessory(void *a1, const char *a2, ...)
{
  return _[a1 stopBrowsingForLocalAccessory];
}

id objc_msgSend_stopFlow(void *a1, const char *a2, ...)
{
  return _[a1 stopFlow];
}

id objc_msgSend_stopNowPlayingApplicationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 stopNowPlayingApplicationIfNeeded];
}

id objc_msgSend_stopObserving(void *a1, const char *a2, ...)
{
  return _[a1 stopObserving];
}

id objc_msgSend_stopScanning(void *a1, const char *a2, ...)
{
  return _[a1 stopScanning];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_string_withCapitalizedDisplayNamesForFirstLanguageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "string:withCapitalizedDisplayNamesForFirstLanguageIdentifier:");
}

id objc_msgSend_stringByAddingPercentEncodingWithAllowedCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAddingPercentEncodingWithAllowedCharacters:");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingPathExtension];
}

id objc_msgSend_stringByRemovingPercentEncoding(void *a1, const char *a2, ...)
{
  return _[a1 stringByRemovingPercentEncoding];
}

id objc_msgSend_stringByReplacingCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingCharactersInRange:withString:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringForCurrentVolumePolicy(void *a1, const char *a2, ...)
{
  return _[a1 stringForCurrentVolumePolicy];
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:");
}

id objc_msgSend_stringForObjectValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForObjectValue:");
}

id objc_msgSend_stringFromByteCount_countStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromByteCount:countStyle:");
}

id objc_msgSend_stringFromDateComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDateComponents:");
}

id objc_msgSend_stringFromNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromNumber:");
}

id objc_msgSend_stringFromTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromTimeInterval:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringValueOfTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValueOfTable:");
}

id objc_msgSend_stringWithContentsOfFile_encoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithContentsOfFile:encoding:error:");
}

id objc_msgSend_stringWithContentsOfFile_usedEncoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithContentsOfFile:usedEncoding:error:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithString:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_stringsTable(void *a1, const char *a2, ...)
{
  return _[a1 stringsTable];
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_sublayers(void *a1, const char *a2, ...)
{
  return _[a1 sublayers];
}

id objc_msgSend_subnetMask(void *a1, const char *a2, ...)
{
  return _[a1 subnetMask];
}

id objc_msgSend_subscriptionStatus(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionStatus];
}

id objc_msgSend_subsetRequiringVerificationByState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subsetRequiringVerificationByState:");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _[a1 subtitle];
}

id objc_msgSend_subtitleDisplayType(void *a1, const char *a2, ...)
{
  return _[a1 subtitleDisplayType];
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _[a1 subviews];
}

id objc_msgSend_succinctDescriptionBuilder(void *a1, const char *a2, ...)
{
  return _[a1 succinctDescriptionBuilder];
}

id objc_msgSend_suggestedRoomNames(void *a1, const char *a2, ...)
{
  return _[a1 suggestedRoomNames];
}

id objc_msgSend_suggestedRoomNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestedRoomNames:");
}

id objc_msgSend_suggestedUserIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 suggestedUserIdentifier];
}

id objc_msgSend_suggestedUserProfileSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 suggestedUserProfileSnapshot];
}

id objc_msgSend_suggestedUserProfiles(void *a1, const char *a2, ...)
{
  return _[a1 suggestedUserProfiles];
}

id objc_msgSend_suggestedUsers(void *a1, const char *a2, ...)
{
  return _[a1 suggestedUsers];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_supportedMultiUserLanguageCodes(void *a1, const char *a2, ...)
{
  return _[a1 supportedMultiUserLanguageCodes];
}

id objc_msgSend_supportsARCAndEARC(void *a1, const char *a2, ...)
{
  return _[a1 supportsARCAndEARC];
}

id objc_msgSend_supportsApplicationStorage(void *a1, const char *a2, ...)
{
  return _[a1 supportsApplicationStorage];
}

id objc_msgSend_supportsClickPadModes(void *a1, const char *a2, ...)
{
  return _[a1 supportsClickPadModes];
}

id objc_msgSend_supportsClickpadModes(void *a1, const char *a2, ...)
{
  return _[a1 supportsClickpadModes];
}

id objc_msgSend_supportsDoAP(void *a1, const char *a2, ...)
{
  return _[a1 supportsDoAP];
}

id objc_msgSend_supportsDoorbellNotifications(void *a1, const char *a2, ...)
{
  return _[a1 supportsDoorbellNotifications];
}

id objc_msgSend_supportsEnhancedAPFS(void *a1, const char *a2, ...)
{
  return _[a1 supportsEnhancedAPFS];
}

id objc_msgSend_supportsEnhancedAudio(void *a1, const char *a2, ...)
{
  return _[a1 supportsEnhancedAudio];
}

id objc_msgSend_supportsHDR10Plus(void *a1, const char *a2, ...)
{
  return _[a1 supportsHDR10Plus];
}

id objc_msgSend_supportsJS(void *a1, const char *a2, ...)
{
  return _[a1 supportsJS];
}

id objc_msgSend_supportsLegacyMotionNotifications(void *a1, const char *a2, ...)
{
  return _[a1 supportsLegacyMotionNotifications];
}

id objc_msgSend_supportsPublicIap(void *a1, const char *a2, ...)
{
  return _[a1 supportsPublicIap];
}

id objc_msgSend_supportsQMSAndVRR(void *a1, const char *a2, ...)
{
  return _[a1 supportsQMSAndVRR];
}

id objc_msgSend_supportsSensitivity(void *a1, const char *a2, ...)
{
  return _[a1 supportsSensitivity];
}

id objc_msgSend_supportsSmartNotifications(void *a1, const char *a2, ...)
{
  return _[a1 supportsSmartNotifications];
}

id objc_msgSend_supportsTouch(void *a1, const char *a2, ...)
{
  return _[a1 supportsTouch];
}

id objc_msgSend_supportsTouchRemote(void *a1, const char *a2, ...)
{
  return _[a1 supportsTouchRemote];
}

id objc_msgSend_supportsUHDAndHDR(void *a1, const char *a2, ...)
{
  return _[a1 supportsUHDAndHDR];
}

id objc_msgSend_supportsUltrawide(void *a1, const char *a2, ...)
{
  return _[a1 supportsUltrawide];
}

id objc_msgSend_suppressFromSettings(void *a1, const char *a2, ...)
{
  return _[a1 suppressFromSettings];
}

id objc_msgSend_suppressSuggestedUserWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suppressSuggestedUserWithIdentifier:");
}

id objc_msgSend_switchToStoreFrontWithLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchToStoreFrontWithLocale:");
}

id objc_msgSend_syncState(void *a1, const char *a2, ...)
{
  return _[a1 syncState];
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_synchronizeAllDomains(void *a1, const char *a2, ...)
{
  return _[a1 synchronizeAllDomains];
}

id objc_msgSend_synchronizeAutomaticDownloadKinds(void *a1, const char *a2, ...)
{
  return _[a1 synchronizeAutomaticDownloadKinds];
}

id objc_msgSend_sysdiagnoseWithMetadata_onCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sysdiagnoseWithMetadata:onCompletion:");
}

id objc_msgSend_systemAppearance(void *a1, const char *a2, ...)
{
  return _[a1 systemAppearance];
}

id objc_msgSend_systemAppearanceWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemAppearanceWithReply:");
}

id objc_msgSend_systemAppsWithSettings(void *a1, const char *a2, ...)
{
  return _[a1 systemAppsWithSettings];
}

id objc_msgSend_systemBuildVersion(void *a1, const char *a2, ...)
{
  return _[a1 systemBuildVersion];
}

id objc_msgSend_systemDarkGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemDarkGrayColor];
}

id objc_msgSend_systemDisplayLanguage(void *a1, const char *a2, ...)
{
  return _[a1 systemDisplayLanguage];
}

id objc_msgSend_systemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:weight:");
}

id objc_msgSend_systemGreenColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGreenColor];
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:withConfiguration:");
}

id objc_msgSend_systemLanguage(void *a1, const char *a2, ...)
{
  return _[a1 systemLanguage];
}

id objc_msgSend_systemName(void *a1, const char *a2, ...)
{
  return _[a1 systemName];
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _[a1 systemRedColor];
}

id objc_msgSend_systemServiceItems(void *a1, const char *a2, ...)
{
  return _[a1 systemServiceItems];
}

id objc_msgSend_systemServiceProxy(void *a1, const char *a2, ...)
{
  return _[a1 systemServiceProxy];
}

id objc_msgSend_systemSoftwareVersion(void *a1, const char *a2, ...)
{
  return _[a1 systemSoftwareVersion];
}

id objc_msgSend_systemVersion(void *a1, const char *a2, ...)
{
  return _[a1 systemVersion];
}

id objc_msgSend_tableNamesForPowerLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableNamesForPowerLog:");
}

id objc_msgSend_tableNamesFromDatabase(void *a1, const char *a2, ...)
{
  return _[a1 tableNamesFromDatabase];
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _[a1 tableView];
}

id objc_msgSend_tableView_didSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:didSelectRowAtIndexPath:");
}

id objc_msgSend_tableViewPadding(void *a1, const char *a2, ...)
{
  return _[a1 tableViewPadding];
}

id objc_msgSend_tag(void *a1, const char *a2, ...)
{
  return _[a1 tag];
}

id objc_msgSend_tapToAddUserManager_didFinishWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapToAddUserManager:didFinishWithResult:");
}

id objc_msgSend_tapToRepairUserDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapToRepairUserDidFinish:");
}

id objc_msgSend_tapToSetupView(void *a1, const char *a2, ...)
{
  return _[a1 tapToSetupView];
}

id objc_msgSend_targetedAccountTypes(void *a1, const char *a2, ...)
{
  return _[a1 targetedAccountTypes];
}

id objc_msgSend_termTextVisible(void *a1, const char *a2, ...)
{
  return _[a1 termTextVisible];
}

id objc_msgSend_terminateGracefullyApplicationsRunningWithPersonaUniqueString_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "terminateGracefullyApplicationsRunningWithPersonaUniqueString:completionHandler:");
}

id objc_msgSend_terms(void *a1, const char *a2, ...)
{
  return _[a1 terms];
}

id objc_msgSend_tertiaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 tertiaryLabelColor];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _[a1 textColor];
}

id objc_msgSend_textFields(void *a1, const char *a2, ...)
{
  return _[a1 textFields];
}

id objc_msgSend_textForContentsOfLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textForContentsOfLog:");
}

id objc_msgSend_textForTableName_inPowerLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textForTableName:inPowerLog:");
}

id objc_msgSend_textInputItemWithTitle_description_representedObject_keyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textInputItemWithTitle:description:representedObject:keyPath:");
}

id objc_msgSend_textItemFromSpecifierDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textItemFromSpecifierDictionary:");
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _[a1 textLabel];
}

id objc_msgSend_textRectForBounds_limitedToNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRectForBounds:limitedToNumberOfLines:");
}

id objc_msgSend_themePreviewViewController(void *a1, const char *a2, ...)
{
  return _[a1 themePreviewViewController];
}

id objc_msgSend_thirdPartyConfigurations(void *a1, const char *a2, ...)
{
  return _[a1 thirdPartyConfigurations];
}

id objc_msgSend_threadID(void *a1, const char *a2, ...)
{
  return _[a1 threadID];
}

id objc_msgSend_timeZone(void *a1, const char *a2, ...)
{
  return _[a1 timeZone];
}

id objc_msgSend_timeZoneCityID(void *a1, const char *a2, ...)
{
  return _[a1 timeZoneCityID];
}

id objc_msgSend_timeZoneCityName(void *a1, const char *a2, ...)
{
  return _[a1 timeZoneCityName];
}

id objc_msgSend_timeZoneItem(void *a1, const char *a2, ...)
{
  return _[a1 timeZoneItem];
}

id objc_msgSend_timeZoneTableViewController_didSelectCityWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeZoneTableViewController:didSelectCityWithIdentifier:");
}

id objc_msgSend_timeZoneWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeZoneWithName:");
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return _[a1 timer];
}

id objc_msgSend_timesFormatter(void *a1, const char *a2, ...)
{
  return _[a1 timesFormatter];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleItemFromSpecifierDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleItemFromSpecifierDictionary:");
}

id objc_msgSend_titleItemWithTitle_description_representedObject_keyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleItemWithTitle:description:representedObject:keyPath:");
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_toState(void *a1, const char *a2, ...)
{
  return _[a1 toState];
}

id objc_msgSend_toggleFormatter(void *a1, const char *a2, ...)
{
  return _[a1 toggleFormatter];
}

id objc_msgSend_toggleInputModeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleInputModeEnabled:");
}

id objc_msgSend_toggleItemFromSpecifierDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleItemFromSpecifierDictionary:");
}

id objc_msgSend_toggleItemWithTitle_description_representedObject_keyPath_onTitle_offTitle_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleItemWithTitle:description:representedObject:keyPath:onTitle:offTitle:");
}

id objc_msgSend_togglePolicyForFeature_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "togglePolicyForFeature:withCompletion:");
}

id objc_msgSend_toggleRecognizeMyVoiceWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleRecognizeMyVoiceWithCompletion:");
}

id objc_msgSend_toggledSignificantEventType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggledSignificantEventType:");
}

id objc_msgSend_tokenWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tokenWithError:");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _[a1 topViewController];
}

id objc_msgSend_totalApplicationUsage(void *a1, const char *a2, ...)
{
  return _[a1 totalApplicationUsage];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_trainAudiences(void *a1, const char *a2, ...)
{
  return _[a1 trainAudiences];
}

id objc_msgSend_trainMap(void *a1, const char *a2, ...)
{
  return _[a1 trainMap];
}

id objc_msgSend_trainName(void *a1, const char *a2, ...)
{
  return _[a1 trainName];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_traitCollectionWithUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionWithUserInterfaceStyle:");
}

id objc_msgSend_traits(void *a1, const char *a2, ...)
{
  return _[a1 traits];
}

id objc_msgSend_transformKeyframes(void *a1, const char *a2, ...)
{
  return _[a1 transformKeyframes];
}

id objc_msgSend_transitionDuration(void *a1, const char *a2, ...)
{
  return _[a1 transitionDuration];
}

id objc_msgSend_transitionSoundEffectsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 transitionSoundEffectsEnabled];
}

id objc_msgSend_transitionStyle(void *a1, const char *a2, ...)
{
  return _[a1 transitionStyle];
}

id objc_msgSend_transitionStyles(void *a1, const char *a2, ...)
{
  return _[a1 transitionStyles];
}

id objc_msgSend_transitionTypeFormatter(void *a1, const char *a2, ...)
{
  return _[a1 transitionTypeFormatter];
}

id objc_msgSend_transitionWithView_duration_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionWithView:duration:options:animations:completion:");
}

id objc_msgSend_transport(void *a1, const char *a2, ...)
{
  return _[a1 transport];
}

id objc_msgSend_transportType(void *a1, const char *a2, ...)
{
  return _[a1 transportType];
}

id objc_msgSend_treatDisplayModeAsFallback(void *a1, const char *a2, ...)
{
  return _[a1 treatDisplayModeAsFallback];
}

id objc_msgSend_triggerTime(void *a1, const char *a2, ...)
{
  return _[a1 triggerTime];
}

id objc_msgSend_tsk_updateItemsInSection_withChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsk_updateItemsInSection:withChanges:");
}

id objc_msgSend_turnOnButton(void *a1, const char *a2, ...)
{
  return _[a1 turnOnButton];
}

id objc_msgSend_tvButtonLaunchesTVApp(void *a1, const char *a2, ...)
{
  return _[a1 tvButtonLaunchesTVApp];
}

id objc_msgSend_tv_indexPathsForIndexSet_withOptions_prefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tv_indexPathsForIndexSet:withOptions:prefix:");
}

id objc_msgSend_tv_updateItemsInSection_withChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tv_updateItemsInSection:withChange:");
}

id objc_msgSend_tv_updateSectionsWithChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tv_updateSectionsWithChange:");
}

id objc_msgSend_tvcs_isAppleConnectOTAConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvcs_isAppleConnectOTAConfiguration");
}

id objc_msgSend_tvcs_popToViewControllerBelowViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvcs_popToViewControllerBelowViewController:");
}

id objc_msgSend_tvps_remoteClickpadMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvps_remoteClickpadMode");
}

id objc_msgSend_tvps_setRemoteClickpadMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvps_setRemoteClickpadMode:");
}

id objc_msgSend_tvps_userDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvps_userDefaults");
}

id objc_msgSend_tvs_IPAddress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_IPAddress");
}

id objc_msgSend_tvs_MACAddressStringFromHexString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_MACAddressStringFromHexString");
}

id objc_msgSend_tvs_accountWithFaceTimeService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_accountWithFaceTimeService");
}

id objc_msgSend_tvs_arrayByMappingObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_arrayByMappingObjectsUsingBlock:");
}

id objc_msgSend_tvs_arrayForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_arrayForKey:");
}

id objc_msgSend_tvs_BOOLForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_BOOLForKey:defaultValue:");
}

id objc_msgSend_tvs_faceTimeAccounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_faceTimeAccounts");
}

id objc_msgSend_tvs_faceTimeService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_faceTimeService");
}

id objc_msgSend_tvs_foundColorModeForDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_foundColorModeForDisplayMode:");
}

id objc_msgSend_tvs_isAppleAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_isAppleAccount");
}

id objc_msgSend_tvs_isCommonResolutionByShowing4KModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_isCommonResolutionByShowing4KModes:");
}

id objc_msgSend_tvs_isEqualResolutionAndRefreshRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_isEqualResolutionAndRefreshRate:");
}

id objc_msgSend_tvs_lowercaseHexString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_lowercaseHexString");
}

id objc_msgSend_tvs_objectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_objectsPassingTest:");
}

id objc_msgSend_tvs_randomizedArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_randomizedArray");
}

id objc_msgSend_tvs_setFoundColorMode_forDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_setFoundColorMode:forDisplayMode:");
}

id objc_msgSend_tvs_shallowIsEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_shallowIsEqualToArray:");
}

id objc_msgSend_tvs_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvs_stringForKey:");
}

id objc_msgSend_tvset_applicationRecord(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvset_applicationRecord");
}

id objc_msgSend_tvset_dataContainerURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvset_dataContainerURL");
}

id objc_msgSend_tvset_fetchBTLEMAC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvset_fetchBTLEMAC");
}

id objc_msgSend_tvset_pairedDeviceDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvset_pairedDeviceDisplayName");
}

id objc_msgSend_tvset_registerMigrations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvset_registerMigrations");
}

id objc_msgSend_tvset_supportsBackgroundAppRefresh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvset_supportsBackgroundAppRefresh");
}

id objc_msgSend_tvsettings_dataSharingStatusFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsettings_dataSharingStatusFormatter");
}

id objc_msgSend_tvsettings_gameCenterAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsettings_gameCenterAccountWithAltDSID:");
}

id objc_msgSend_tvsettings_removeAccountsNotUsedByUserProfilesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsettings_removeAccountsNotUsedByUserProfilesWithCompletion:");
}

id objc_msgSend_tvsettings_removeAccountsWithTuples_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsettings_removeAccountsWithTuples:completion:");
}

id objc_msgSend_tvsui_bundleIDsWithVideoRestriction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_bundleIDsWithVideoRestriction");
}

id objc_msgSend_tvsui_defaultIdleScreenEntriesConfigurationURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_defaultIdleScreenEntriesConfigurationURL");
}

id objc_msgSend_tvsui_defaultIdleScreenEntriesConfigurationURLforDemoMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_defaultIdleScreenEntriesConfigurationURLforDemoMode:");
}

id objc_msgSend_tvsui_idleScreenEntriesConfigurationURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_idleScreenEntriesConfigurationURL");
}

id objc_msgSend_tvsui_isRunningInStoreDemoMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_isRunningInStoreDemoMode");
}

id objc_msgSend_tvsui_setBundleIDsWithVideoRestriction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_setBundleIDsWithVideoRestriction:");
}

id objc_msgSend_tvsui_setIdleScreenEntriesConfigurationURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_setIdleScreenEntriesConfigurationURL:");
}

id objc_msgSend_tvsui_setStoreDemoModeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_setStoreDemoModeType:");
}

id objc_msgSend_tvsui_setVideoPlaybackTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_setVideoPlaybackTimeout:");
}

id objc_msgSend_tvsui_storeDemoModeType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_storeDemoModeType");
}

id objc_msgSend_tvsui_videoPlaybackTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_videoPlaybackTimeout");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_uiScale(void *a1, const char *a2, ...)
{
  return _[a1 uiScale];
}

id objc_msgSend_underlyingConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 underlyingConfiguration];
}

id objc_msgSend_unenrollFromBetaProgram(void *a1, const char *a2, ...)
{
  return _[a1 unenrollFromBetaProgram];
}

id objc_msgSend_unenrollWithOptions_outError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unenrollWithOptions:outError:");
}

id objc_msgSend_uninstallApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uninstallApp:");
}

id objc_msgSend_uninstallAppWithIdentity_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uninstallAppWithIdentity:options:completion:");
}

id objc_msgSend_unionAutomaticDownloadKinds_withCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionAutomaticDownloadKinds:withCompletionBlock:");
}

id objc_msgSend_uniqueID(void *a1, const char *a2, ...)
{
  return _[a1 uniqueID];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_unlock(void *a1, const char *a2, ...)
{
  return _[a1 unlock];
}

id objc_msgSend_unlockDemoContentWithOptions_outError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockDemoContentWithOptions:outError:");
}

id objc_msgSend_unpairDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unpairDevice:");
}

id objc_msgSend_unpairDevice_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unpairDevice:withCompletion:");
}

id objc_msgSend_unpairWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unpairWithCompletion:");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongLongValue];
}

id objc_msgSend_unsignedShortValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedShortValue];
}

id objc_msgSend_unsupportedResolutionViewControllerWithModeName_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsupportedResolutionViewControllerWithModeName:completionHandler:");
}

id objc_msgSend_unverifiedDisplayModes(void *a1, const char *a2, ...)
{
  return _[a1 unverifiedDisplayModes];
}

id objc_msgSend_update(void *a1, const char *a2, ...)
{
  return _[a1 update];
}

id objc_msgSend_updateActiveState_forAerialThemeWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateActiveState:forAerialThemeWithID:");
}

id objc_msgSend_updateActiveState_forPortraitClockCategoryWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateActiveState:forPortraitClockCategoryWithID:");
}

id objc_msgSend_updateActiveStateForAerialThemeWithID_activate_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateActiveStateForAerialThemeWithID:activate:reply:");
}

id objc_msgSend_updateActiveStateForPortraitClockCategoryWithID_activate_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateActiveStateForPortraitClockCategoryWithID:activate:reply:");
}

id objc_msgSend_updateAuthorizationCredentials_token_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAuthorizationCredentials:token:");
}

id objc_msgSend_updateDisplayManagerWithDisplayMode_reason_requestConfiguration_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDisplayManagerWithDisplayMode:reason:requestConfiguration:completion:");
}

id objc_msgSend_updateDisplayManagerWithRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDisplayManagerWithRequest:completion:");
}

id objc_msgSend_updateFilterForPortraitClockCategoryWithID_categoryFilter_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFilterForPortraitClockCategoryWithID:categoryFilter:reply:");
}

id objc_msgSend_updateGroupRecommendationsConsent_forUserProfileWithIdentifier_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateGroupRecommendationsConsent:forUserProfileWithIdentifier:completionHandler:");
}

id objc_msgSend_updateLocalAccessoryAudioDestination_forceUpdateWithUnavailableDestination_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "updateLocalAccessoryAudioDestination:forceUpdateWithUnavailableDestination:completionHandler:");
}

id objc_msgSend_updatePhotoCollectionGroups(void *a1, const char *a2, ...)
{
  return _[a1 updatePhotoCollectionGroups];
}

id objc_msgSend_updatePreferredLanguage_withVariants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePreferredLanguage:withVariants:");
}

id objc_msgSend_updateSandboxAccountState(void *a1, const char *a2, ...)
{
  return _[a1 updateSandboxAccountState];
}

id objc_msgSend_updateSelectedForRoleIdentifier_newlySelectedConfiguration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSelectedForRoleIdentifier:newlySelectedConfiguration:completion:");
}

id objc_msgSend_updateSettingForKeyPath_setting_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSettingForKeyPath:setting:completionHandler:");
}

id objc_msgSend_updateSoftwareDisplaySize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSoftwareDisplaySize:");
}

id objc_msgSend_updateStatusForRelay(void *a1, const char *a2, ...)
{
  return _[a1 updateStatusForRelay];
}

id objc_msgSend_updateSuppressedForSuggestedUserWithIdentifier_suppressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSuppressedForSuggestedUserWithIdentifier:suppressed:");
}

id objc_msgSend_updateType(void *a1, const char *a2, ...)
{
  return _[a1 updateType];
}

id objc_msgSend_updateUserProfileWithIdentifier_attributes_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUserProfileWithIdentifier:attributes:completionHandler:");
}

id objc_msgSend_updateVersion(void *a1, const char *a2, ...)
{
  return _[a1 updateVersion];
}

id objc_msgSend_updateViews(void *a1, const char *a2, ...)
{
  return _[a1 updateViews];
}

id objc_msgSend_updateViewsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateViewsAnimated:");
}

id objc_msgSend_updateWithCoreUtilsPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithCoreUtilsPeer:");
}

id objc_msgSend_updateWithNEConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithNEConfiguration:");
}

id objc_msgSend_updateWithUserProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithUserProfile:");
}

id objc_msgSend_updatedEnabled_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedEnabled:completionHandler:");
}

id objc_msgSend_updatingMultiValueItemWithTitle_description_representedObject_keyPath_availableValues_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatingMultiValueItemWithTitle:description:representedObject:keyPath:availableValues:");
}

id objc_msgSend_updatingResidentDevices(void *a1, const char *a2, ...)
{
  return _[a1 updatingResidentDevices];
}

id objc_msgSend_upgradeAttemptRequestFromSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upgradeAttemptRequestFromSource:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_urlScheme(void *a1, const char *a2, ...)
{
  return _[a1 urlScheme];
}

id objc_msgSend_usageFacade(void *a1, const char *a2, ...)
{
  return _[a1 usageFacade];
}

id objc_msgSend_useIdleScreen(void *a1, const char *a2, ...)
{
  return _[a1 useIdleScreen];
}

id objc_msgSend_user(void *a1, const char *a2, ...)
{
  return _[a1 user];
}

id objc_msgSend_userAccessSettingsNeededForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAccessSettingsNeededForBundleID:");
}

id objc_msgSend_userAgent(void *a1, const char *a2, ...)
{
  return _[a1 userAgent];
}

id objc_msgSend_userAppsWithSettings(void *a1, const char *a2, ...)
{
  return _[a1 userAppsWithSettings];
}

id objc_msgSend_userDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 userDeviceName];
}

id objc_msgSend_userHasActiveiTunes(void *a1, const char *a2, ...)
{
  return _[a1 userHasActiveiTunes];
}

id objc_msgSend_userHasBeenRemoved(void *a1, const char *a2, ...)
{
  return _[a1 userHasBeenRemoved];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInput(void *a1, const char *a2, ...)
{
  return _[a1 userInput];
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyle];
}

id objc_msgSend_userInterfaceStyleFormatter(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyleFormatter];
}

id objc_msgSend_userProfile(void *a1, const char *a2, ...)
{
  return _[a1 userProfile];
}

id objc_msgSend_userProfileAuthenticationType(void *a1, const char *a2, ...)
{
  return _[a1 userProfileAuthenticationType];
}

id objc_msgSend_userProfileFacade(void *a1, const char *a2, ...)
{
  return _[a1 userProfileFacade];
}

id objc_msgSend_userProfilePhotosFacade(void *a1, const char *a2, ...)
{
  return _[a1 userProfilePhotosFacade];
}

id objc_msgSend_userProfileWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userProfileWithIdentifier:");
}

id objc_msgSend_userProfiles(void *a1, const char *a2, ...)
{
  return _[a1 userProfiles];
}

id objc_msgSend_userProfilesFacade(void *a1, const char *a2, ...)
{
  return _[a1 userProfilesFacade];
}

id objc_msgSend_userProfilesSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 userProfilesSnapshot];
}

id objc_msgSend_userProfilesValidator(void *a1, const char *a2, ...)
{
  return _[a1 userProfilesValidator];
}

id objc_msgSend_userSettings(void *a1, const char *a2, ...)
{
  return _[a1 userSettings];
}

id objc_msgSend_userSupportsiCloudPhotoOptions(void *a1, const char *a2, ...)
{
  return _[a1 userSupportsiCloudPhotoOptions];
}

id objc_msgSend_userType(void *a1, const char *a2, ...)
{
  return _[a1 userType];
}

id objc_msgSend_userUniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 userUniqueIdentifier];
}

id objc_msgSend_userVisibleHDRChromaModes(void *a1, const char *a2, ...)
{
  return _[a1 userVisibleHDRChromaModes];
}

id objc_msgSend_userVisibleSDRChromaModes(void *a1, const char *a2, ...)
{
  return _[a1 userVisibleSDRChromaModes];
}

id objc_msgSend_userVisibleSDRColorMappingModes(void *a1, const char *a2, ...)
{
  return _[a1 userVisibleSDRColorMappingModes];
}

id objc_msgSend_userVisibleSortedDisplayModes(void *a1, const char *a2, ...)
{
  return _[a1 userVisibleSortedDisplayModes];
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _[a1 username];
}

id objc_msgSend_usesMetricSystem(void *a1, const char *a2, ...)
{
  return _[a1 usesMetricSystem];
}

id objc_msgSend_uuid_deprecated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uuid_deprecated");
}

id objc_msgSend_validateAliases_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAliases:");
}

id objc_msgSend_validateRestrictionForSetting_allowInteraction_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateRestrictionForSetting:allowInteraction:withCompletion:");
}

id objc_msgSend_validateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateWithError:");
}

id objc_msgSend_validator(void *a1, const char *a2, ...)
{
  return _[a1 validator];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKeyPath:");
}

id objc_msgSend_valueForPreferenceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForPreferenceKey:");
}

id objc_msgSend_valueForSettingItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForSettingItem:");
}

id objc_msgSend_valueWithBytes_objCType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithBytes:objCType:");
}

id objc_msgSend_valueWithCATransform3D_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCATransform3D:");
}

id objc_msgSend_valueWithCGPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCGPoint:");
}

id objc_msgSend_valueWithCMTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCMTime:");
}

id objc_msgSend_vendorName(void *a1, const char *a2, ...)
{
  return _[a1 vendorName];
}

id objc_msgSend_versionInfo(void *a1, const char *a2, ...)
{
  return _[a1 versionInfo];
}

id objc_msgSend_videoPlaybackRestricted(void *a1, const char *a2, ...)
{
  return _[a1 videoPlaybackRestricted];
}

id objc_msgSend_videoPlaybackRestrictionTimeout(void *a1, const char *a2, ...)
{
  return _[a1 videoPlaybackRestrictionTimeout];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_viewForDownloadStep(void *a1, const char *a2, ...)
{
  return _[a1 viewForDownloadStep];
}

id objc_msgSend_visibleSettingGroups(void *a1, const char *a2, ...)
{
  return _[a1 visibleSettingGroups];
}

id objc_msgSend_voiceTriggerFacade(void *a1, const char *a2, ...)
{
  return _[a1 voiceTriggerFacade];
}

id objc_msgSend_voiceTriggerPhraseFormatter(void *a1, const char *a2, ...)
{
  return _[a1 voiceTriggerPhraseFormatter];
}

id objc_msgSend_voiceTriggerPhraseType(void *a1, const char *a2, ...)
{
  return _[a1 voiceTriggerPhraseType];
}

id objc_msgSend_volumeConfigurationForDeviceWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeConfigurationForDeviceWithUUID:");
}

id objc_msgSend_volumeConfigurations(void *a1, const char *a2, ...)
{
  return _[a1 volumeConfigurations];
}

id objc_msgSend_volumeControl(void *a1, const char *a2, ...)
{
  return _[a1 volumeControl];
}

id objc_msgSend_volumeControlTargetDeviceType(void *a1, const char *a2, ...)
{
  return _[a1 volumeControlTargetDeviceType];
}

id objc_msgSend_vpn(void *a1, const char *a2, ...)
{
  return _[a1 vpn];
}

id objc_msgSend_vpnProfileServerURLString(void *a1, const char *a2, ...)
{
  return _[a1 vpnProfileServerURLString];
}

id objc_msgSend_wallpaperViewForVariant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperViewForVariant:");
}

id objc_msgSend_warnAboutMissingInputModes(void *a1, const char *a2, ...)
{
  return _[a1 warnAboutMissingInputModes];
}

id objc_msgSend_warrantyText(void *a1, const char *a2, ...)
{
  return _[a1 warrantyText];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceAndNewlineCharacterSet];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceCharacterSet];
}

id objc_msgSend_wholeHomeAudioRoomDataSourceDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wholeHomeAudioRoomDataSourceDidUpdate:");
}

id objc_msgSend_wholeHomeAudioRoomDataSourceHomeWasRemoved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wholeHomeAudioRoomDataSourceHomeWasRemoved:");
}

id objc_msgSend_wholeHomeAudioSetupViewControllerDidTransitionToConfiguredState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wholeHomeAudioSetupViewControllerDidTransitionToConfiguredState:");
}

id objc_msgSend_wholeHomeAudioSetupViewControllerDidTransitionToUnconfiguredWithLocalAccessoryState_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wholeHomeAudioSetupViewControllerDidTransitionToUnconfiguredWithLocalAccessoryState:");
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _[a1 widthAnchor];
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willChangeValueForKey:");
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willMoveToParentViewController:");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_workQueue(void *a1, const char *a2, ...)
{
  return _[a1 workQueue];
}

id objc_msgSend_yesNoFormatter(void *a1, const char *a2, ...)
{
  return _[a1 yesNoFormatter];
}