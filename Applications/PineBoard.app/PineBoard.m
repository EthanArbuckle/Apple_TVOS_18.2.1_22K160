void sub_1000062F8(id a1, void *a2)
{
  *(_BYTE *)a2 = 1;
}

id sub_100006648(uint64_t a1)
{
  return [*(id *)(a1 + 40) setAlpha:0.0];
}

id sub_10000667C(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

id sub_1000067AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

uint64_t sub_1000067C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}
}

  ;
}

id sub_100006A08(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

uint64_t sub_100006B80(uint64_t a1)
{
  v2 = *(void **)(a1 + 32);
  double v3 = 1.0;
  if (!*(_BYTE *)(a1 + 48)) {
    double v3 = 0.0;
  }
  [v2 setAlpha:v3];
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1000070EC(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100007150(id a1)
{
  v1 = objc_alloc(&OBJC_CLASS___PBPowerManager);
  v2 = (void *)qword_10046FED0;
  qword_10046FED0 = (uint64_t)v1;

  uint64_t v3 = qword_10046FED0;
  *(_DWORD *)(qword_10046FED0 + 8) = 0;
  *(void *)(v3 + 64) = 1LL;
  v4 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  v5 = *(void **)(qword_10046FED0 + 24);
  *(void *)(qword_10046FED0 + 24) = v4;

  v6 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  v7 = *(void **)(qword_10046FED0 + 48);
  *(void *)(qword_10046FED0 + 48) = v6;

  v8 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  v9 = *(void **)(qword_10046FED0 + 40);
  *(void *)(qword_10046FED0 + 40) = v8;

  v10 = NSClassFromString(@"PBPowerManagementTestImplementor");
  if (v10)
  {
    id v11 = objc_alloc_init(v10);
    v12 = *(void **)(qword_10046FED0 + 16);
    *(void *)(qword_10046FED0 + 16) = v11;
  }

  else
  {
    uint64_t v13 = qword_10046FED0;
    id v14 = (id)qword_10046FED0;
    v12 = *(void **)(v13 + 16);
    *(void *)(v13 + 16) = v14;
  }

  if ((objc_opt_respondsToSelector(*(void *)(qword_10046FED0 + 16), "finishInitialization") & 1) != 0) {
    [*(id *)(qword_10046FED0 + 16) finishInitialization];
  }
  +[PBDependencyCoordinator registerInstance:dependencyBlock:]( &OBJC_CLASS___PBDependencyCoordinator,  "registerInstance:dependencyBlock:",  qword_10046FED0,  &stru_1003CFFF8);
}

void sub_100007254(id a1, PBDependencyContext *a2)
{
  v2 = a2;
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___PBDefaultOpenAppTransitioner, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[PBDependencyContext instanceForClass:](v2, "instanceForClass:", v5));

  [v6 addObserver:qword_10046FED0];
}

void sub_100007C0C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (*(void *)(a1 + 32))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100007CB4;
    block[3] = &unk_1003D0020;
    id v8 = *(id *)(a1 + 32);
    char v9 = a2;
    id v7 = v5;
    dispatch_async(&_dispatch_main_q, block);
  }
}

uint64_t sub_100007CB4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48),  *(void *)(a1 + 32));
}

void sub_100008064(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (*(void *)(a1 + 32))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10000810C;
    block[3] = &unk_1003D0020;
    id v8 = *(id *)(a1 + 32);
    char v9 = a2;
    id v7 = v5;
    dispatch_async(&_dispatch_main_q, block);
  }
}

uint64_t sub_10000810C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48),  *(void *)(a1 + 32));
}

void sub_100008548(uint64_t a1)
{
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_locked_extractObserverList"));
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 8LL));
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v22 objects:v28 count:16];
  id v5 = &off_1002EB000;
  if (v4)
  {
    id v6 = v4;
    uint64_t v7 = *(void *)v23;
LABEL_3:
    uint64_t v8 = 0LL;
    while (1)
    {
      if (*(void *)v23 != v7) {
        objc_enumerationMutation(v3);
      }
      if (*(void *)(*(void *)(a1 + 32) + 64LL) != 1LL) {
        goto LABEL_13;
      }
      char v9 = *(void **)(*((void *)&v22 + 1) + 8 * v8);
      if ((objc_opt_respondsToSelector(v9, "powerManagerAllowSystemToSleep:") & 1) != 0)
      {
        v10 = (objc_class *)objc_opt_class(v9);
        Name = class_getName(v10);
        id v12 = sub_1000838E8();
        uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v27 = Name;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Asking observer of type '%{public}s' if system can sleep",  buf,  0xCu);
        }
      }

      if (v6 == (id)++v8)
      {
        id v6 = [v3 countByEnumeratingWithState:&v22 objects:v28 count:16];
        if (v6) {
          goto LABEL_3;
        }
LABEL_13:
        int v14 = 1;
        id v5 = &off_1002EB000;
        goto LABEL_18;
      }
    }

    id v15 = sub_1000838E8();
    v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    id v5 = &off_1002EB000;
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v27 = Name;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Skipping automatic sleep because an observer of type '%{public}s' rejected the attempt",  buf,  0xCu);
    }

    int v14 = 0;
  }

  else
  {
    int v14 = 1;
  }

LABEL_18:
  id v17 = sub_1000838E8();
  v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    v19 = sel_getName("powerManagerAllowSystemToSleep:");
    *(_DWORD *)buf = *((void *)v5 + 489);
    v27 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "All observers have responded to %{public}s",  buf,  0xCu);
  }

  if (v14)
  {
    id v20 = sub_1000838E8();
    v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "Proceeding to automatic sleep", buf, 2u);
    }

    [*(id *)(a1 + 32) sleepSystemWithReason:1];
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}
}
}
}

  return v15;
}

  id v17 = (void *)objc_claimAutoreleasedReturnValue( -[PBDisplayManager findMatchingLocaleMode:enforceVirtualCheck:]( self,  "findMatchingLocaleMode:enforceVirtualCheck:",  v5,  1LL));
  v18 = v17;
  if (!v17) {
    id v17 = v5;
  }
  v19 = v17;

  return v19;
}
}

  v21[3] = v11;
  if (v5) {
    v5[2](v5);
  }
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[PBRestrictionServiceRequestManager stateMachine](self, "stateMachine"));
  [v15 postEvent:@"Complete"];
LABEL_21:

  _Block_object_dispose(&v20, 8);
}
}

  __int128 v24 = v25 == -42584 || (v25 & 0xFFFFFFFD) == -42587;
  if ((v25 + 42587) <= 3 && v25 != -42586)
  {
    v37 = sub_1000839D8();
    v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218242;
      *(void *)&v79 = v25;
      v80 = 2114;
      v81 = v71;
      _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "FairPlay failure %ld for '%{public}@', attempting repair",  buf,  0x16u);
    }

    v39 = (void *)objc_claimAutoreleasedReturnValue([v70 options]);
    v40 = (void *)objc_claimAutoreleasedReturnValue([v39 dictionary]);
    v41 = objc_msgSend( v40,  "bs_safeObjectForKey:ofType:",  FBSOpenApplicationOptionKeyActivateSuspended,  objc_opt_class(NSNumber));
    v42 = (void *)objc_claimAutoreleasedReturnValue(v41);
    v43 = [v42 BOOLValue];

    repairService = self->_repairService;
    v45 = (void *)objc_claimAutoreleasedReturnValue([v11 applicationInfo]);
    -[PBApplicationRepairService repairApplication:background:completion:]( repairService,  "repairApplication:background:completion:",  v45,  v43,  0LL);

    if (v72)
    {
      v66 = v71;
      v46 = FBSOpenApplicationErrorCreate(6LL, @"Open app system request failing; app '%@' is being repaired");
      v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
      ((void (**)(id, void *))v72)[2](v72, v47);
    }
  }

void sub_100008B00(uint64_t a1)
{
}

void sub_100008B18(uint64_t a1)
{
  v2 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  Name = class_getName(v2);
  id v4 = sub_1000838E8();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = sel_getName(*(SEL *)(a1 + 56));
    *(_DWORD *)buf = 136446466;
    id v20 = Name;
    __int16 v21 = 2082;
    __int128 v22 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Telling observer of type '%{public}s' %{public}s",  buf,  0x16u);
  }

  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 64);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_100008C54;
  v14[3] = &unk_1003D0098;
  v10 = *(void **)(a1 + 48);
  id v11 = *(const char **)(a1 + 56);
  id v17 = Name;
  v18 = v11;
  id v12 = v10;
  uint64_t v13 = *(void *)(a1 + 32);
  id v15 = v12;
  uint64_t v16 = v13;
  objc_msgSend(v7, v11, v8, v9, v14);
}

id sub_100008C54(uint64_t a1)
{
  id v2 = sub_1000838E8();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 48);
    Name = sel_getName(*(SEL *)(a1 + 56));
    int v8 = 136446466;
    uint64_t v9 = v4;
    __int16 v10 = 2082;
    id v11 = Name;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Observer of type '%{public}s' responded to %{public}s",  (uint8_t *)&v8,  0x16u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  return (id)objc_opt_self(*(void *)(a1 + 40), v6);
}

void sub_100008D28(uint64_t a1)
{
  id v2 = sub_1000838E8();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    Name = sel_getName(*(SEL *)(a1 + 40));
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _stringFromReason:*(void *)(a1 + 48)]);
    *(_DWORD *)buf = 136446466;
    v46 = Name;
    __int16 v47 = 2114;
    v48 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "All observers have responded to %{public}s for '%{public}@'.",  buf,  0x16u);
  }

  uint64_t v6 = 3LL;
  if (!*(_BYTE *)(a1 + 56)) {
    uint64_t v6 = 1LL;
  }
  *(void *)(*(void *)(a1 + 32) + 64LL) = v6;
  uint64_t v7 = &selRef_powerManagerDidSleepSystem_reason_;
  if (!*(_BYTE *)(a1 + 56)) {
    uint64_t v7 = &selRef_powerManagerDidWakeSystem_reason_;
  }
  int v8 = *v7;
  if ((objc_opt_respondsToSelector(*(void *)(*(void *)(a1 + 32) + 16LL), *v7) & 1) != 0) {
    objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), v8, *(void *)(a1 + 32), *(void *)(a1 + 48));
  }
  __int128 v41 = 0u;
  __int128 v42 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  id v9 = *(id *)(*(void *)(a1 + 32) + 32LL);
  id v10 = [v9 countByEnumeratingWithState:&v39 objects:v44 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v40;
    do
    {
      for (i = 0LL; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v40 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void *)(*((void *)&v39 + 1) + 8LL * (void)i);
        if ((objc_opt_respondsToSelector(v14, v8) & 1) != 0)
        {
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000090F4;
          block[3] = &unk_1003D0098;
          uint64_t v15 = *(void *)(a1 + 32);
          void block[4] = v14;
          block[5] = v15;
          uint64_t v16 = *(void *)(a1 + 48);
          block[6] = v8;
          block[7] = v16;
          dispatch_async(&_dispatch_main_q, block);
        }
      }

      id v11 = [v9 countByEnumeratingWithState:&v39 objects:v44 count:16];
    }

    while (v11);
  }

  uint64_t v17 = *(void *)(a1 + 32);
  if (*(_BYTE *)(a1 + 56))
  {
    id v18 = *(id *)(v17 + 40);
    v19 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    uint64_t v20 = *(void *)(a1 + 32);
    __int16 v21 = *(void **)(v20 + 40);
    *(void *)(v20 + 40) = v19;
  }

  else
  {
    id v18 = *(id *)(v17 + 48);
    __int128 v22 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    uint64_t v23 = *(void *)(a1 + 32);
    __int16 v21 = *(void **)(v23 + 48);
    *(void *)(v23 + 48) = v22;
  }

  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  id v24 = v18;
  id v25 = [v24 countByEnumeratingWithState:&v34 objects:v43 count:16];
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = *(void *)v35;
    do
    {
      for (j = 0LL; j != v26; j = (char *)j + 1)
      {
        if (*(void *)v35 != v27) {
          objc_enumerationMutation(v24);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v34 + 1) + 8LL * (void)j) + 16LL))();
      }

      id v26 = [v24 countByEnumeratingWithState:&v34 objects:v43 count:16];
    }

    while (v26);
  }

  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472LL;
  v32[2] = sub_1000091CC;
  v32[3] = &unk_1003CFF08;
  id v33 = v24;
  id v29 = v24;
  dispatch_async(&_dispatch_main_q, v32);
  uint64_t v30 = *(void *)(a1 + 32);
  v31 = *(void **)(v30 + 32);
  *(void *)(v30 + 32) = 0LL;

  *(void *)(*(void *)(a1 + 32) + 56LL) = 0LL;
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 8LL));
}

id sub_1000090F4(uint64_t a1)
{
  id v2 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  Name = class_getName(v2);
  id v4 = sub_1000838E8();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = sel_getName(*(SEL *)(a1 + 48));
    int v8 = 136446466;
    id v9 = Name;
    __int16 v10 = 2082;
    id v11 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Telling observer of type '%{public}s' %{public}s",  (uint8_t *)&v8,  0x16u);
  }

  return objc_msgSend(*(id *)(a1 + 32), *(SEL *)(a1 + 48), *(void *)(a1 + 40), *(void *)(a1 + 56));
}

id sub_1000091CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeAllObjects];
}

void sub_100009200()
{
  v12[0] = @"AssertType";
  v12[1] = @"AssertLevel";
  v13[0] = @"PreventUserIdleSystemSleep";
  v13[1] = &off_1003FD410;
  v12[2] = @"AssertName";
  v13[2] = @"com.apple.appletv.idlesleepholdoff";
  v0 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v12,  3LL));
  if (IOPMAssertionCreateWithProperties(v0, (IOPMAssertionID *)&dword_10046FEE0))
  {
    id v1 = sub_1000838E8();
    id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_10026EBE8();
    }

    dword_10046FEE0 = 0;
  }

  int v3 = IOPMAssertionDeclareSystemActivity(@"com.apple.appletv.systemactivity.wakeup", &dword_10046FEE4, &v9);
  id v4 = sub_1000838E8();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10026EB88();
    }

    dword_10046FEE4 = 0;
  }

  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      if (v9) {
        uint64_t v7 = @" not ";
      }
      else {
        uint64_t v7 = @" ";
      }
      *(_DWORD *)buf = 138543362;
      id v11 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Set system activity assertion (sleep%{public}@reverted).",  buf,  0xCu);
    }

    dispatch_time_t v8 = dispatch_time(0LL, 30000000000LL);
    dispatch_after_f(v8, &_dispatch_main_q, 0LL, (dispatch_function_t)sub_100009E00);
  }
}

void sub_100009608(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v2 sleepDisplayWithReply:0];

  +[TVSBluetoothRemoteUtilities disconnectAllRemotesAndKeepPaired]( &OBJC_CLASS___TVSBluetoothRemoteUtilities,  "disconnectAllRemotesAndKeepPaired");
  id v3 = sub_100082C04();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    uint64_t v9 = 0x4014000000000000LL;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Scheduling restoration of sleep HID event routers in %.1f sec",  buf,  0xCu);
  }

  dispatch_time_t v5 = dispatch_time(0LL, 5000000000LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100009744;
  block[3] = &unk_1003D0110;
  id v7 = *(id *)(a1 + 32);
  dispatch_after(v5, &_dispatch_main_q, block);
}

uint64_t sub_100009744(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100009B38(uint64_t a1)
{
  id v2 = sub_100082C04();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    uint64_t v8 = 0x4014000000000000LL;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Scheduling restoration of normal HID event routers in %.1f sec",  buf,  0xCu);
  }

  dispatch_time_t v4 = dispatch_time(0LL, 5000000000LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100009C48;
  block[3] = &unk_1003D0110;
  id v6 = *(id *)(a1 + 32);
  dispatch_after(v4, &_dispatch_main_q, block);
}

uint64_t sub_100009C48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100009E00()
{
  if (dword_10046FEE4)
  {
    if (IOPMAssertionRelease(dword_10046FEE4))
    {
      id v0 = sub_1000838E8();
      id v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(v0);
      if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR)) {
        sub_10026ECA8();
      }
    }

    dword_10046FEE4 = 0;
  }

void sub_100009E68( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_100009E80( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_10000A520(_Unwind_Exception *a1)
{
}

void sub_10000A548(uint64_t a1)
{
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[13] setMigratingProfiles:0];
    objc_msgSend(v2, "_queue_handleProfilesMigrationCompletion");
  }
}

id sub_10000A588(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_queue_initializeProfilesStorage");
}

id sub_10000A61C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) invalidate];
}

id sub_10000A978(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_queue_beginIgnoringProfileAccountNotificationsWithReason:", *(void *)(a1 + 32));
}

id sub_10000AA18(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_queue_endIgnoringProfileAccountNotificationsWithReason:", *(void *)(a1 + 32));
}

id sub_10000AAB8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a2 + 40) endAllIgnoringProfileAccountNotificationsWithReason:*(void *)(a1 + 32)];
}

id sub_10000ABC0(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 48) hasActiveUserBulletin];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_10000ACE0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10000ACF0(uint64_t a1)
{
}

void sub_10000AD08(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) snapshot]);
  id v3 = (id *)(a1 + 40);
  dispatch_time_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) identifier]);
  dispatch_time_t v5 = (void *)objc_claimAutoreleasedReturnValue([v2 profileForSystemAppUserIdentifier:v4]);

  if (v5)
  {
    uint64_t v6 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 48) welcomeBulletinProfilePictureDataForProfile:v5]);
    uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
    uint64_t v8 = *(os_log_s **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }

  else
  {
    id v9 = sub_100084680();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10026F290(v3, v8);
    }
  }
}

void sub_10000B008( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
}

void sub_10000B020(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void **)(a1 + 32);
  if (v6)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_10000B0BC;
    v7[3] = &unk_1003D0020;
    id v9 = v6;
    char v10 = a2;
    id v8 = v5;
    BSDispatchMain(v7);
  }
}

uint64_t sub_10000B0BC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48),  *(void *)(a1 + 32));
}

void sub_10000B0E0(void *a1, void *a2)
{
  id v3 = (void *)a1[4];
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 updateProfileRequests]);
  uint64_t v6 = (id *)(*(void *)(a1[6] + 8LL) + 40LL);
  id obj = 0LL;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v4,  "_queue_updateProfileStoreWithAddProfileRequests:updateProfileRequests:removeProfileRequests:error:",  0,  v5,  0,  &obj));

  objc_storeStrong(v6, obj);
  (*(void (**)(void))(a1[5] + 16LL))();
}

void sub_10000B86C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    id v5 = a3;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
    (*(void (**)(uint64_t, void *, id))(v3 + 16))(v3, v6, v5);
  }

uint64_t sub_10000BD30(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10000C16C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10000C4E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    id v5 = a3;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
    (*(void (**)(uint64_t, void *, id))(v3 + 16))(v3, v6, v5);
  }

uint64_t sub_10000CA74(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10000CEF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
}

uint64_t sub_10000CF3C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_10000CF5C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) profileForSystemAppUserIdentifier:v3]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 identity]);

  if (!v5) {
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v3];
  }

  return v5;
}

void sub_10000D480(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

LABEL_9:
    return v14;
  }

  queue_profileStoreSnapshotController = self->_queue_profileStoreSnapshotController;
  if (queue_profileStoreSnapshotController)
  {
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    v18[2] = sub_10000D928;
    v18[3] = &unk_1003D0328;
    v19 = v10;
    uint64_t v20 = v11;
    __int16 v21 = v12;
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[PBProfileStoreSnapshotController updateWithBlock:error:]( queue_profileStoreSnapshotController,  "updateWithBlock:error:",  v18,  a6));
    if (v14) {
      -[PBLoretoUserProfileManager _queue_handleProfileStoreSnapshotUpdate:]( self,  "_queue_handleProfileStoreSnapshotUpdate:",  v14);
    }

    goto LABEL_9;
  }

  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"_queue_profileStoreSnapshotController"));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_10026FC90();
  }
  uint64_t result = (id) _bs_set_crash_log_message([v17 UTF8String]);
  __break(0);
  return result;
}
}
}
  }
}

    uint64_t v20 = v14;

    return v20;
  }

  if (v13)
  {
    uint64_t v15 = -[PBSBulletin initWithBulletin:](objc_alloc(&OBJC_CLASS___PBSBulletin), "initWithBulletin:", v9);
    -[PBSBulletin setMessage:](v15, "setMessage:", v10);
    -[PBBulletinService _setBulletinInfo:forBulletin:](self, "_setBulletinInfo:forBulletin:", 0LL, v9);
    -[PBBulletinService _setBulletinInfo:forBulletin:](self, "_setBulletinInfo:forBulletin:", v12, v15);
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472LL;
    v26[2] = sub_1000DDDF4;
    v26[3] = &unk_1003D0E50;
    uint64_t v16 = &v28;
    v28 = v11;
    uint64_t v17 = (id *)&v27;
    uint64_t v14 = v15;
    uint64_t v27 = v14;
    [v13 updateBannerWithNewBulletin:v14 replacingBulletin:v9 completionHandler:v26];
  }

  else
  {
    id v18 = [v9 copy];
    [v18 setMessage:v10];
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472LL;
    v23[2] = sub_1000DDE24;
    v23[3] = &unk_1003D0E50;
    uint64_t v16 = &v25;
    id v25 = v11;
    uint64_t v17 = (id *)&v24;
    uint64_t v14 = (PBSBulletin *)v18;
    id v24 = v14;
    v19 =  -[PBBulletinService _updateBulletin:withMessage:withCompletion:]( self,  "_updateBulletin:withMessage:withCompletion:",  v9,  v10,  v23);
  }

  if (v14) {
    goto LABEL_9;
  }
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"newBulletin != nil"));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_10027EE64(a2, (uint64_t)self, (uint64_t)v22);
  }
  uint64_t result = (id) _bs_set_crash_log_message([v22 UTF8String]);
  __break(0);
  return result;
}

  if ((v5 & 2) != 0)
  {
    v22.origin.x = x;
    v22.origin.y = y;
    v22.size.width = width;
    v22.size.height = height;
    MinX = CGRectGetMinY(v22);
    v23.origin.x = x;
    v23.origin.y = y;
    v23.size.width = width;
    v23.size.height = height;
    MaxX = CGRectGetMaxY(v23);
    uint64_t v16 = 0.0;
    uint64_t v17 = 0.0;
    uint64_t v14 = sub_100169BB8(&MinX, self->_y, &v16);
    switch(v14)
    {
      case 0:
        uint64_t v15 = 0.0;
        goto LABEL_16;
      case 2:
        [v11 addOffset:2 forAxis:v16];
        uint64_t v15 = v17;
        goto LABEL_16;
      case 1:
        uint64_t v15 = v16;
LABEL_16:
        [v11 addOffset:2 forAxis:v15];
        break;
    }
  }
}

  id v8 = sub_1000843B0();
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
    sub_100286388(v3, v7);
  }
LABEL_11:
}

    ++WeakRetained[9];
    objc_msgSend(WeakRetained, "_showTextEntryViewControllerForTextField:");
    goto LABEL_10;
  }

  if ((objc_opt_respondsToSelector(v8, "textEntry:didSubmitTextFieldAtIndex:") & 1) != 0) {
    [v9 textEntry:WeakRetained didSubmitTextFieldAtIndex:WeakRetained[9]];
  }
  if (v7 == (id)-1LL) {
    goto LABEL_9;
  }
  [WeakRetained _synchronizeEnteredValues];
  if ((objc_opt_respondsToSelector(v9, "textEntry:didSelectButtonAtIndex:") & 1) != 0) {
    [v9 textEntry:WeakRetained didSelectButtonAtIndex:v7];
  }
LABEL_10:

  return @"text field";
}
}
  }

  return v4;
}

        char v10 = (__CFString *)objc_claimAutoreleasedReturnValue([v3 currentState]);
LABEL_10:

        goto LABEL_11;
      }

      id v9 = @"BeginOnboarding";
    }

    [v3 postEvent:v9];
    goto LABEL_9;
  }

  char v10 = @"Finished";
LABEL_11:

  return v10;
}

    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[PBUserNotificationViewControllerAlert notification](self, "notification", a3));
    id v4 = (int)[v17 otherButtonIndex];

    goto LABEL_10;
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[PBUserNotificationViewControllerAlert waitViewSpec](self, "waitViewSpec"));
  if (-[PBUserNotificationViewControllerAlert waitActionButtonIndex](self, "waitActionButtonIndex") != v4
    || (uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 type]),
        id v8 = [v7 isEqualToString:PBSUserNotificationWaitViewTypeSharePlay],
        v7,
        !v8)
    || (id v9 = objc_alloc(&OBJC_CLASS___PBSharePlayWaitViewController),
        char v10 = (void *)objc_claimAutoreleasedReturnValue([v6 sharePlayDeviceName]),
        id v11 = -[PBSharePlayWaitViewController initWithDeviceName:deviceModel:]( v9,  "initWithDeviceName:deviceModel:",  v10,  [v6 sharePlayDeviceModel]),  v10,  !v11))
  {

    goto LABEL_8;
  }

  self->_inWaitMode = 1;
  -[PBUserNotificationViewControllerAlert _setActions:](self, "_setActions:", &__NSArray0__struct);
  -[PBUserNotificationViewControllerAlert setTitle:](self, "setTitle:", 0LL);
  -[PBUserNotificationViewControllerAlert setMessage:](self, "setMessage:", 0LL);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[PBSharePlayWaitViewController view](v11, "view"));
  [v12 sizeToFit];

  -[PBUserNotificationViewControllerAlert setContentViewController:](self, "setContentViewController:", v11);
  objc_initWeak(&location, self);
  uint64_t v13 = objc_claimAutoreleasedReturnValue([v6 dismissalDarwinNotification]);
  uint64_t v14 = (const char *)[v13 UTF8String];
  uint64_t v15 = &_dispatch_main_q;
  id v18 = _NSConcreteStackBlock;
  v19 = 3221225472LL;
  uint64_t v20 = sub_1001F224C;
  __int16 v21 = &unk_1003D1100;
  objc_copyWeak(&v23, &location);
  __int128 v22 = self;
  notify_register_dispatch(v14, &out_token, &_dispatch_main_q, &v18);

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[PBUserNotificationViewControllerAlert notification](self, "notification", v18, v19, v20, v21));
  [v16 didSelectButtonAtIndex:v4];

  objc_destroyWeak(&v23);
  objc_destroyWeak(&location);

LABEL_11:
}

void sub_10000D928(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = a2;
  [v4 setAddProfileRequests:v3];
  [v4 setUpdateProfileRequests:a1[5]];
  [v4 setRemoveProfileRequests:a1[6]];
}

void sub_10000DB38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10000DB60(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_queue_handleProfileStoreSnapshotUpdate:", v3);
}

LABEL_20:
      uint64_t v30 = v18;
      uint64_t v7 = v36;
      id v4 = v37;
      id v8 = v35;
      id v9 = v34;
    }

    else
    {
      uint64_t v30 = v18;
    }

    goto LABEL_24;
  }
}
}

  v28 = v37[5];

  _Block_object_dispose(&v36, 8);
  return v28;
}

  objc_destroyWeak(&location);

  return v20;
}
}

  swift_bridgeObjectRelease(v6);
  id v33 = swift_allocObject(&unk_1003DD868, 32LL, 7LL);
  *(void *)(v33 + 16) = v4;
  *(void *)(v33 + 24) = v14;
  v62 = (unint64_t)sub_100216B28;
  v63 = v33;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_1002156C8;
  v61 = (ValueMetadata *)&unk_1003DD880;
  __int128 v34 = _Block_copy(aBlock);
  __int128 v35 = v63;
  __int128 v36 = v14;
  __int128 v37 = v4;
  swift_release(v35);
  [a1 registerBlockObserver:v34];
  _Block_release(v34);
  if (qword_10046E308 != -1) {
    swift_once(&qword_10046E308, sub_10021487C);
  }
  sub_1002145FC(v59, (uint64_t)qword_100473028);
  v38 = v36;
  __int128 v39 = a1;
  __int128 v40 = v38;
  swift_bridgeObjectRetain(v6);
  __int128 v41 = v39;
  __int128 v42 = (os_log_s *)Logger.logObject.getter(v41);
  v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc(32LL, -1LL);
    v45 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
    v59 = swift_slowAlloc(32LL, -1LL);
    aBlock[0] = v59;
    *(_DWORD *)v44 = 138412802;
    v64 = (uint64_t)v40;
    v46 = (os_log_s *)v40;
    v57 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v44 + 4, v44 + 12);
    *v45 = v58;

    *(_WORD *)(v44 + 12) = 2112;
    v64 = (uint64_t)v41;
    __int16 v47 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v44 + 14, v44 + 22);
    v45[1] = (uint64_t)v41;

    *(_WORD *)(v44 + 22) = 2080;
    v49 = sub_100216B48(0LL, v48);
    v50 = swift_bridgeObjectRetain(v6);
    v51 = Array.description.getter(v50, v49);
    v53 = v52;
    swift_bridgeObjectRelease(v6);
    v64 = sub_100223358(v51, v53, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v44 + 24, v44 + 32);
    swift_bridgeObjectRelease_n(v6, 2LL);
    swift_bridgeObjectRelease(v53);
    _os_log_impl( (void *)&_mh_execute_header,  v42,  v43,  "Prepared transition with token: %@, transition: %@, aux transitions: %s",  (uint8_t *)v44,  0x20u);
    v54 = sub_100214624(&qword_10046EBD0);
    swift_arrayDestroy(v45, 2LL, v54);
    swift_slowDealloc(v45, -1LL, -1LL);
    v55 = v59;
    swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1LL, -1LL);
    swift_slowDealloc(v44, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v6, 2LL);
  }

    swift_bridgeObjectRelease(a5);
    goto LABEL_21;
  }

  return 0LL;
}

LABEL_25:
  if ((v9 & 1) == 0) {
    -[PBLoretoUserProfileManager _queue_notifyObserversDidUpdateRecommendationGroupSession]( self,  "_queue_notifyObserversDidUpdateRecommendationGroupSession");
  }
  -[PBLoretoUserProfileManager _notifyObserversDidUpdate](self, "_notifyObserversDidUpdate");

LABEL_28:
}

  if (a4) {
LABEL_26:
  }
    *a4 = v7;
LABEL_27:

  return (char)v12;
}
}

  __break(1u);
  return result;
}

    uint64_t v14 = (v25 - 1) & v25;
    uint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    id v18 = 16 * v17;
    v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    __int16 v21 = *v19;
    uint64_t v20 = v19[1];
    __int128 v22 = *(void *)(v30 + 72) * v17;
    sub_10022311C(*(void *)(v5 + 56) + v22, (uint64_t)v4);
    uint64_t v23 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v23 = v21;
    v23[1] = v20;
    sub_100225448((uint64_t)v4, *(void *)(v7 + 56) + v22);
    uint64_t result = (void *)swift_bridgeObjectRetain(v20);
  }

  id v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    uint64_t result = (void *)swift_release(v5);
    id v1 = v28;
    goto LABEL_28;
  }

  id v25 = *(void *)(v29 + 8 * v26);
  if (v25)
  {
    id v11 = v26;
    goto LABEL_25;
  }

  while (1)
  {
    id v11 = v26 + 1;
    if (__OFADD__(v26, 1LL)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    id v25 = *(void *)(v29 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }

    uint64_t v14 = (v26 - 1) & v26;
    uint64_t v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    id v18 = 16 * v17;
    v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    __int16 v21 = *v19;
    uint64_t v20 = v19[1];
    __int128 v22 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v22, v15);
    uint64_t v23 = v35;
    id v24 = (void *)(*(void *)(v35 + 48) + v18);
    *id v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v23 + 56) + v22, v3, v15);
    uint64_t result = (void *)swift_bridgeObjectRetain(v20);
  }

  uint64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    uint64_t result = (void *)swift_release(v4);
    v28 = v31;
    id v29 = v35;
    goto LABEL_28;
  }

  id v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    id v11 = v27;
    goto LABEL_25;
  }

  while (1)
  {
    id v11 = v27 + 1;
    if (__OFADD__(v27, 1LL)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_26;
    }
    id v26 = *(void *)(v32 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }

    uint64_t v13 = (v24 - 1) & v24;
    uint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    id v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    uint64_t v20 = 8 * v16;
    __int16 v21 = *(void **)(*(void *)(v3 + 56) + v20);
    __int128 v22 = (void *)(*(void *)(v5 + 48) + v17);
    *__int128 v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v19);
    uint64_t result = v21;
  }

  id v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  id v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    char v10 = v25;
    goto LABEL_25;
  }

  while (1)
  {
    char v10 = v25 + 1;
    if (__OFADD__(v25, 1LL)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    id v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }

    uint64_t v12 = (v21 - 1) & v21;
    uint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    id v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    v19 = v17;
    uint64_t result = (void *)swift_unknownObjectRetain(v18);
  }

  __int128 v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  __int16 v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    id v9 = v22;
    goto LABEL_25;
  }

  while (1)
  {
    id v9 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    __int16 v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }

id sub_10000E034(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 48) presentWelcomeBackBulletinWithReason:1];
}

void sub_10000E214(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "userProfileManager:didUpdateGroupRecommendationsSession:") & 1) != 0)
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    id v4 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 88LL);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_10000E2F0;
    v5[3] = &unk_1003D0378;
    objc_copyWeak(&v8, &location);
    id v6 = v3;
    id v7 = *(id *)(a1 + 40);
    dispatch_async(v4, v5);

    objc_destroyWeak(&v8);
    objc_destroyWeak(&location);
  }
}

void sub_10000E2F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained) {
    [*(id *)(a1 + 32) userProfileManager:WeakRetained didUpdateGroupRecommendationsSession:*(void *)(a1 + 40)];
  }
}

void sub_10000E3D4(id *a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "userProfileManager:didSwitchToUserWithIdentifier:previousUserIdentifier:") & 1) != 0)
  {
    objc_initWeak(&location, a1[4]);
    id v4 = (dispatch_queue_s *)*((void *)a1[4] + 11);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10000E4C4;
    block[3] = &unk_1003D03C8;
    objc_copyWeak(&v9, &location);
    id v6 = v3;
    id v7 = a1[5];
    id v8 = a1[6];
    dispatch_async(v4, block);

    objc_destroyWeak(&v9);
    objc_destroyWeak(&location);
  }
}

void sub_10000E4C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained) {
    [*(id *)(a1 + 32) userProfileManager:WeakRetained didSwitchToUserWithIdentifier:*(void *)(a1 + 40) previousUserIdentifier:*(void *)(a1 + 48)];
  }
}

void sub_10000E55C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "userProfileManagerDidUpdate:") & 1) != 0)
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    id v4 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 88LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10000E624;
    block[3] = &unk_1003D0418;
    objc_copyWeak(&v7, &location);
    id v6 = v3;
    dispatch_async(v4, block);

    objc_destroyWeak(&v7);
    objc_destroyWeak(&location);
  }
}

void sub_10000E624(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained) {
    [*(id *)(a1 + 32) userProfileManagerDidUpdate:WeakRetained];
  }
}

void sub_10000E75C( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

uint64_t sub_10000E76C()
{
  return objc_opt_class(v0);
}

  ;
}

void sub_10000E788(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

  ;
}

  ;
}

  ;
}

void sub_10000E7D4(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_10000E7E0( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

  ;
}

void sub_10000E814( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_10000EA04(_Unwind_Exception *a1)
{
}

void sub_10000EA24(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10000EAD8;
  v4[3] = &unk_1003D0468;
  id v5 = *(id *)(a1 + 32);
  objc_copyWeak(&v6, (id *)(a1 + 40));
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v6);
}

void sub_10000EAC4(_Unwind_Exception *a1)
{
}

void sub_10000EAD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10000EB80;
  v9[3] = &unk_1003CFF08;
  id v5 = v3;
  id v10 = v5;
  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v9);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = WeakRetained;
  if (WeakRetained)
  {
    id v8 = (void *)*((void *)WeakRetained + 5);
    *((void *)WeakRetained + 5) = 0LL;
  }
}

id sub_10000EB80(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_10000EDCC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_10000EDE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateDumpBuilder]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 build]);

  return v3;
}

void sub_10000FAF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10000FB2C(uint64_t a1, int a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (!WeakRetained) {
    goto LABEL_20;
  }
  if (![WeakRetained[3] isEqual:*(void *)(a1 + 32)])
  {
    id v14 = sub_100084338();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      Class = object_getClass(v5);
      Name = class_getName(Class);
      uint64_t v17 = sel_getName(*(SEL *)(a1 + 48));
      id v18 = v5[1];
      int v28 = 136446722;
      id v29 = Name;
      if (v18) {
        v19 = "on";
      }
      else {
        v19 = "off";
      }
      __int16 v30 = 2082;
      v31 = v17;
      __int16 v32 = 2082;
      id v33 = v19;
      uint64_t v20 = " [%{public}s %{public}s]: Confirmation completed but with stale confirmation ID. Will remain at state: %{public}s";
      __int16 v21 = v9;
      uint32_t v22 = 32;
      goto LABEL_18;
    }

LABEL_19:
    goto LABEL_20;
  }

  id v6 = v5[3];
  v5[3] = 0LL;

  id v7 = v5[1];
  id v8 = sub_100084338();
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (v7 || !a2)
  {
    if (v10)
    {
      uint64_t v23 = object_getClass(v5);
      id v24 = class_getName(v23);
      id v25 = sel_getName(*(SEL *)(a1 + 48));
      id v26 = v5[1];
      int v28 = 136446978;
      id v29 = v24;
      if (v26) {
        uint64_t v27 = "on";
      }
      else {
        uint64_t v27 = "off";
      }
      __int16 v30 = 2082;
      v31 = v25;
      __int16 v32 = 2082;
      id v33 = v27;
      __int16 v34 = 1024;
      int v35 = a2;
      uint64_t v20 = " [%{public}s %{public}s]: Confirmation completed but will *not* move to on state. state=%{public}s, allowSta"
            "teChange=%{BOOL}d";
      __int16 v21 = v9;
      uint32_t v22 = 38;
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, v20, (uint8_t *)&v28, v22);
      goto LABEL_19;
    }

    goto LABEL_19;
  }

  if (v10)
  {
    id v11 = object_getClass(v5);
    uint64_t v12 = class_getName(v11);
    uint64_t v13 = sel_getName(*(SEL *)(a1 + 48));
    int v28 = 136446466;
    id v29 = v12;
    __int16 v30 = 2082;
    v31 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  " [%{public}s %{public}s]: Confirmation completed will move to on state",  (uint8_t *)&v28,  0x16u);
  }

  v5[1] = (id)1;
  *((_BYTE *)v5 + 17) = 1;
  [v5 _enterOnStateAutomatically];
LABEL_20:
}

    uint64_t v17 = 0LL;
LABEL_20:

LABEL_21:
    goto LABEL_22;
  }

  uint64_t v17 = 0LL;
  if (a5) {
    *a5 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  200LL,  0LL));
  }
LABEL_22:

  return v17;
}

        id v11 = 0LL;
        goto LABEL_20;
      }

      if ((-[TVCSHome isMediaPeerToPeerEnabled](self->_hmHome, "isMediaPeerToPeerEnabled") & 1) != 0)
      {
        id v11 = 2LL;
        goto LABEL_20;
      }

      id v24 = ((uint64_t (*)(void))TVCSHomeLog)();
      uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_1002799A8(v16, v25, v26, v27, v28, v29, v30, v31);
      }
    }

    goto LABEL_19;
  }

  uint64_t v12 = [v3 accessType];
  if (v12 == (id)2)
  {
    uint64_t v13 = ((uint64_t (*)(void))TVCSHomeLog)();
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)v58 = 136315394;
      *(void *)&v58[4] = "-[PBHomeMediaAccessControlManager _handleHomeAccessoryUpdate]";
      *(_WORD *)&v58[12] = 2112;
      *(void *)&v58[14] = @"PBSAirPlayAccessTypeAny";
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%s: Setting AirPlay access type to %@ because the device is not part of a home.",  v58,  0x16u);
    }

    uint64_t v12 = [v3 setAccessType:0];
  }

LABEL_20:
  }

  if (!-[NSMutableArray count](self->_allSessions, "count"))
  {
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[PBSystemOverlayController presentationHandler](self, "presentationHandler"));
    [v20 invalidateSystemUIAtLevel:self->_layoutLevel];
  }

      return v5;
    case 4uLL:
      uint64_t v17 = sub_1000836CC();
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_18;
      }
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v4 assetId]);
      id v24 = 138543362;
      v25[0] = v15;
      uint64_t v16 = "Skipping asset being downloaded: %{public}@.";
      goto LABEL_16;
    case 5uLL:
      id v18 = sub_1000836CC();
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_18;
      }
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v4 assetId]);
      id v24 = 138543362;
      v25[0] = v15;
      uint64_t v16 = "Skipping asset required by OS: %{public}@.";
      goto LABEL_16;
    default:
      id v11 = sub_1000836CC();
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = [v4 state];
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v4 assetId]);
        id v24 = 67109378;
        LODWORD(v25[0]) = v12;
        WORD2(v25[0]) = 2114;
        *(void *)((char *)v25 + 6) = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Skipping asset in unexpected state [%d]: %{public}@.",  (uint8_t *)&v24,  0x12u);
      }

      goto LABEL_18;
  }

  id v29 = 0;
LABEL_20:

  return v29;
}

void sub_10001092C(id a1)
{
}

uint64_t sub_100011590(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 settings]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 clientProcess]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 state]);
  id v7 = [v6 taskState];

  unsigned int v8 = [v4 isUISubclass];
  unsigned int v9 = [v4 isForeground];
  unsigned int v10 = v9;
  if (v8 && v7 == (id)2 && ((v9 & 1) != 0 || !*(_BYTE *)(a1 + 32)))
  {
    uint64_t v13 = 1LL;
  }

  else
  {
    id v11 = sub_100084338();
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      int v15 = *(unsigned __int8 *)(a1 + 32);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v3 clientProcess]);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 bundleIdentifier]);
      v18[0] = 67110146;
      v18[1] = v15;
      __int16 v19 = 2112;
      uint64_t v20 = v17;
      __int16 v21 = 1024;
      unsigned int v22 = v8;
      __int16 v23 = 2048;
      id v24 = v7;
      __int16 v25 = 1024;
      unsigned int v26 = v10;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Skipping changing IdleModeEnabled to %d for scene of app %@; isUISubclass = %d, taskState = %ld, isForeground = %d",
        (uint8_t *)v18,
        0x28u);
    }

    uint64_t v13 = 0LL;
  }

  return v13;
}

id sub_100011730(uint64_t a1, void *a2)
{
  return [a2 setIdleModeEnabled:*(unsigned __int8 *)(a1 + 32)];
}

void sub_10001240C(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:NSKeyValueChangeNewKey]);
  id v2 = sub_100084338();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138543362;
    id v5 = v1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "screenSaverActivationDelayInMinutes observer: %{public}@",  (uint8_t *)&v4,  0xCu);
  }

  +[PBAttentionMonitor _noteATimeoutChanged:]( &OBJC_CLASS___PBAttentionMonitor,  "_noteATimeoutChanged:",  @"screenSaverActivationDelayInMinutes changed");
}

id sub_10001295C(uint64_t a1, int a2)
{
  if (a2)
  {
    [(id)qword_10046FF00 enterOffStateAutomatically];
    return [(id)qword_10046FF08 enterOffStateAutomatically];
  }

  else
  {
    id v4 = sub_100084338();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 136315138;
      id v7 = "-[ScreenSaverSM _enterOnStateAutomatically]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%s: ScreenSaverSM failed to bring up screen saver",  (uint8_t *)&v6,  0xCu);
    }

    return [*(id *)(a1 + 32) enterOffStateForced];
  }

void sub_100012C90(uint64_t a1)
{
  if (BSFloatGreaterThanFloat(*(double *)(*(void *)(a1 + 32) + 48LL), 0.0))
  {
    +[TVSBluetoothRemoteUtilities setConnectionKeepAliveTimeInSeconds:]( &OBJC_CLASS___TVSBluetoothRemoteUtilities,  "setConnectionKeepAliveTimeInSeconds:",  *(double *)(*(void *)(a1 + 32) + 48LL));
  }

  else
  {
    id v2 = sub_100084338();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v4 = 136315138;
      id v5 = "-[RemoteSleepSM init]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "%s: ignoring keep-alive timeout of 0",  (uint8_t *)&v4,  0xCu);
    }
  }

id sub_100013254(uint64_t a1)
{
  id v2 = sub_100084338();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = +[TVSBluetoothRemoteUtilities isAnyRemoteConnected]( &OBJC_CLASS___TVSBluetoothRemoteUtilities,  "isAnyRemoteConnected");
    id v5 = "-- no remotes";
    if (v4) {
      id v5 = "";
    }
    int v7 = 136315394;
    unsigned int v8 = "-[RemoteSleepSM _enterOffStateAutomatically]_block_invoke";
    __int16 v9 = 2080;
    unsigned int v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s: keep-alive tick %s", (uint8_t *)&v7, 0x16u);
  }

  *(double *)(*(void *)(a1 + 32) + 48LL) = *(double *)(a1 + 40) + 300.0;
  return +[TVSBluetoothRemoteUtilities setConnectionKeepAliveTimeInSeconds:]( &OBJC_CLASS___TVSBluetoothRemoteUtilities,  "setConnectionKeepAliveTimeInSeconds:",  *(double *)(*(void *)(a1 + 32) + 48LL));
}

void sub_100013AD8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100013B04(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
    unsigned int v3 = [v2 isDeviceSleepAllowed];

    if (WeakRetained[56] != v3)
    {
      WeakRetained[56] = v3;
      if (v3) {
        +[PBAttentionMonitor _noteATimeoutChanged:]( &OBJC_CLASS___PBAttentionMonitor,  "_noteATimeoutChanged:",  @"Sleep Allowed Changed");
      }
      else {
        +[PBAttentionMonitor resetAttention:]( &OBJC_CLASS___PBAttentionMonitor,  "resetAttention:",  @"Sleep Allowed Changed to NO");
      }
    }
  }
}

void sub_100013C70(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:NSKeyValueChangeNewKey]);
  id v2 = sub_100084338();
  unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138543362;
    id v5 = v1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "SleepTimeoutInSeconds observer: %{public}@",  (uint8_t *)&v4,  0xCu);
  }

  +[PBAttentionMonitor _noteATimeoutChanged:]( &OBJC_CLASS___PBAttentionMonitor,  "_noteATimeoutChanged:",  @"SleepTimeoutInSeconds setting changed");
}

void sub_1000140B4(uint64_t a1, int a2)
{
  if (a2)
  {
    unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
    int v4 = (void *)objc_claimAutoreleasedReturnValue([v3 sharedScheduledSleepManager]);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_100014170;
    v5[3] = &unk_1003D0600;
    id v6 = *(id *)(a1 + 32);
    char v7 = 1;
    [v4 getCurrentScheduledSleepWithCompletion:v5];
  }

  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

uint64_t sub_100014170(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2) {
    BOOL v4 = 0LL;
  }
  else {
    BOOL v4 = *(unsigned __int8 *)(a1 + 40) != 0;
  }
  return (*(uint64_t (**)(uint64_t, BOOL))(v3 + 16))(v3, v4);
}

id sub_100014250(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return [*(id *)(a1 + 32) enterOffStateForced];
  }
  [(id)qword_10046FEE8 adjustStateAutomatically];
  [(id)qword_10046FEF0 adjustStateAutomatically];
  [(id)qword_10046FEF8 adjustStateAutomatically];
  [(id)qword_10046FF28 adjustStateAutomatically];
  [(id)qword_10046FF30 adjustStateAutomatically];
  [(id)qword_10046FF00 enterOffStateAutomatically];
  [(id)qword_10046FF08 enterOffStateAutomatically];
  [(id)qword_10046FF10 enterOffStateAutomatically];
  [(id)qword_10046FF18 enterOffStateAutomatically];
  return [(id)qword_10046FF20 enterOffStateAutomatically];
}

void sub_1000149B0(id a1)
{
  id v1 = +[PBSSystemStatus systemAttentionState](&OBJC_CLASS___PBSSystemStatus, "systemAttentionState");
  id v2 = sub_100084338();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v1 == (id)7)
  {
    if (v4)
    {
      LOWORD(v45) = 0;
      id v5 = "System is asleep";
      id v6 = v3;
      uint32_t v7 = 2;
LABEL_32:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v5, (uint8_t *)&v45, v7);
    }
  }

  else
  {
    if (v4)
    {
      LOWORD(v45) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "    PBAttentionMonitor status report:",  (uint8_t *)&v45,  2u);
    }

    id v8 = sub_100084338();
    __int16 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FEE8 _logString]);
      int v45 = 138543362;
      id v46 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "        BackgroundTasksNormal: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v11 = sub_100084338();
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FEF0 _logString]);
      int v45 = 138543362;
      id v46 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "        BackgroundTasksIdle: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v14 = sub_100084338();
    int v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FEF8 _logString]);
      int v45 = 138543362;
      id v46 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "        BackgroundTasksLongIdle: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v17 = sub_100084338();
    id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v19 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FF00 _logString]);
      int v45 = 138543362;
      id v46 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "        PresenceDetection: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v20 = sub_100084338();
    __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FF08 _logString]);
      int v45 = 138543362;
      id v46 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "        Hilite: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v23 = sub_100084338();
    id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FF10 _logString]);
      int v45 = 138543362;
      id v46 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "        NowPlaying: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v26 = sub_100084338();
    uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      int v28 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FF18 _logString]);
      int v45 = 138543362;
      id v46 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "        CRD: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v29 = sub_100084338();
    __int16 v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      v31 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FF20 _logString]);
      int v45 = 138543362;
      id v46 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "        ScreenSaver: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v32 = sub_100084338();
    id v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v34 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FF28 _logString]);
      int v45 = 138543362;
      id v46 = v34;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "        RemoteSleep: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v35 = sub_100084338();
    __int128 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FF30 _logString]);
      int v45 = 138543362;
      id v46 = v37;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "        RemoteConnectedStandby: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v38 = sub_100084338();
    __int128 v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FF38 _logString]);
      int v45 = 138543362;
      id v46 = v40;
      _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "        Sleep: %{public}@",  (uint8_t *)&v45,  0xCu);
    }

    id v41 = [(id)qword_10046FF68 count];
    id v42 = sub_100084338();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v43 = +[PBAttentionMonitor _countOutstandingHighPriorityIdleAssertions]( &OBJC_CLASS___PBAttentionMonitor,  "_countOutstandingHighPriorityIdleAssertions");
      v44 = (const __CFString *)qword_10046FF68;
      int v45 = 134218498;
      if (!v41) {
        v44 = &stru_1003E2910;
      }
      id v46 = v41;
      __int16 v47 = 2048;
      unint64_t v48 = v43;
      __int16 v49 = 2114;
      v50 = v44;
      id v5 = "        IdlePreventionAssertions: (%lu, %lu high) %{public}@";
      id v6 = v3;
      uint32_t v7 = 32;
      goto LABEL_32;
    }
  }
}

id sub_100014F74(uint64_t a1)
{
  return [*(id *)(a1 + 32) _disallowIdleSleepIfNeeded];
}

void sub_100015100(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:NSKeyValueChangeNewKey]);
  id v2 = sub_100084338();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138543362;
    uint32_t v7 = v1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "currentDisplayMode observer: %{public}@",  (uint8_t *)&v6,  0xCu);
  }

  if (+[PBSSystemStatus systemAttentionState](&OBJC_CLASS___PBSSystemStatus, "systemAttentionState") != (id)1)
  {
    BOOL v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 currentDisplayMode]);

    if (v5) {
      +[PBAttentionMonitor resetAttention:]( &OBJC_CLASS___PBAttentionMonitor,  "resetAttention:",  @"PBDisplayManager.currentDisplayMode changed");
    }
  }
}

void sub_100015218(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:NSKeyValueChangeNewKey]);
  id v2 = sub_100084338();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138543362;
    id v5 = v1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "idleTimerAllowed observer: %{public}@",  (uint8_t *)&v4,  0xCu);
  }

  +[PBAttentionMonitor __reactToSomethingChanged:]( &OBJC_CLASS___PBAttentionMonitor,  "__reactToSomethingChanged:",  @"PBSystemAppSettings.idleTimerAllowed changed");
}

void sub_1000152E8(id a1)
{
}

void sub_10001598C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 enabledOffset];
  if (v4 > 0.0)
  {
    double v5 = v4;
    int v6 = *(void **)(a1 + 32);
    uint32_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:v7]);

    if (v8)
    {
      do
      {
        double v5 = v5 + 0.015625;
        __int16 v9 = *(void **)(a1 + 32);
        unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v5));
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:v10]);
      }

      while (v11);
    }

    uint64_t v12 = *(void **)(a1 + 32);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v5));
    [v12 setObject:v3 forKeyedSubscript:v13];

    [v3 setEnabledOffset:v5];
  }
}

void sub_100015A90(id a1, AWAttentionEvent *a2)
{
  id v2 = a2;
  id v3 = sub_100084338();
  double v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    sub_1002702F8();
  }

  id v5 = -[AWAttentionEvent eventMask](v2, "eventMask");
  id v6 = sub_100084338();
  uint32_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG);
  if (v5 == (id)1)
  {
    if (v8) {
      sub_1002702A0();
    }

    __int16 v9 = (void *)objc_claimAutoreleasedReturnValue(-[AWAttentionEvent associatedObject](v2, "associatedObject"));
    [v9 automaticEnable];
    unsigned int v10 = (objc_class *)objc_opt_class(v9);
    id v11 = NSStringFromClass(v10);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"AttentionLost:%@",  v12));
    +[PBAttentionMonitor __reactToSomethingChanged:]( &OBJC_CLASS___PBAttentionMonitor,  "__reactToSomethingChanged:",  v13);
  }

  else
  {
    if (v8) {
      sub_1002702CC();
    }

    +[PBAttentionMonitor __attentionRegained:]( &OBJC_CLASS___PBAttentionMonitor,  "__attentionRegained:",  @"AttentionAwareness");
  }
}

void sub_100015EE8(id a1, AWAttentionEvent *a2)
{
  id v2 = a2;
  id v3 = sub_100084338();
  double v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    sub_100270470();
  }

  id v5 = -[AWAttentionEvent eventMask](v2, "eventMask");
  id v6 = sub_100084338();
  uint32_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG);
  if (v5 == (id)1)
  {
    if (v8) {
      sub_100270418();
    }
  }

  else
  {
    if (v8) {
      sub_100270444();
    }

    [(id)qword_10046FF38 setAttentionalEvent:v2];
    +[PBAttentionMonitor __attentionRegained:]( &OBJC_CLASS___PBAttentionMonitor,  "__attentionRegained:",  @"AttentionAwareness");
  }
}

BOOL sub_100016B10(id a1, id a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([a2 reason]);
  unsigned __int8 v3 = [v2 containsString:TVCSHomeKitCameraIdleTimerAssertionReason];

  return v3;
}

void sub_100016E8C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_100016EA4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100016EB4(uint64_t a1)
{
}

void sub_100016ECC(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100016F40;
  block[3] = &unk_1003D0790;
  void block[4] = *(void *)(a1 + 40);
  dispatch_async(&_dispatch_main_q, block);
}

id sub_100016F40(uint64_t a1)
{
  return [(id)qword_10046FF78 removeObjectIdenticalTo:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
}

void sub_100016F6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100016FE4;
  block[3] = &unk_1003D0790;
  void block[4] = *(void *)(a1 + 40);
  dispatch_async(&_dispatch_main_q, block);
}

id sub_100016FE4(uint64_t a1)
{
  return [(id)qword_10046FF78 removeObjectIdenticalTo:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
}

id sub_100017010(uint64_t a1)
{
  return [(id)qword_10046FF78 addObject:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
}

void sub_100017988(id a1, BSSimpleAssertion *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100017A00;
  block[3] = &unk_1003CFF08;
  double v4 = a2;
  uint64_t v2 = v4;
  dispatch_async(&_dispatch_main_q, block);
}

id sub_100017A00(uint64_t a1)
{
  id v2 = sub_100084338();
  unsigned __int8 v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    double v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
    int v7 = 136315394;
    BOOL v8 = "+[PBAttentionMonitor acquireIdleTimerAssertionWithConfiguration:fromClient:forReason:]_block_invoke_2";
    __int16 v9 = 2114;
    unsigned int v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s: removing %{public}@", (uint8_t *)&v7, 0x16u);
  }

  [(id)qword_10046FF68 removeObject:*(void *)(a1 + 32)];
  id result = [(id)qword_10046FF38 isOff];
  if ((_DWORD)result)
  {
    if (+[PBAttentionMonitor _assertionIsHighPriority:]( &OBJC_CLASS___PBAttentionMonitor,  "_assertionIsHighPriority:",  *(void *)(a1 + 32)))
    {
      id v6 = @"-IdleAssertion (high priority)";
      return +[PBAttentionMonitor resetAttention:](&OBJC_CLASS___PBAttentionMonitor, "resetAttention:", v6);
    }

    id result = [(id)qword_10046FF20 isOff];
    if ((_DWORD)result)
    {
      id result = [(id)qword_10046FF68 count];
      if (!result)
      {
        id v6 = @"-IdleAssertion (normal)";
        return +[PBAttentionMonitor resetAttention:](&OBJC_CLASS___PBAttentionMonitor, "resetAttention:", v6);
      }
    }
  }

  return result;
}

id sub_100017B40(uint64_t a1)
{
  id v2 = sub_100084338();
  unsigned __int8 v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v7 = 136315394;
    BOOL v8 = "+[PBAttentionMonitor acquireIdleTimerAssertionWithConfiguration:fromClient:forReason:]_block_invoke";
    __int16 v9 = 2114;
    uint64_t v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s: adding %{public}@", (uint8_t *)&v7, 0x16u);
  }

  [(id)qword_10046FF68 addObject:*(void *)(a1 + 40)];
  id result = [(id)qword_10046FF38 isOff];
  if ((_DWORD)result)
  {
    if (+[PBAttentionMonitor _assertionIsHighPriority:]( &OBJC_CLASS___PBAttentionMonitor,  "_assertionIsHighPriority:",  *(void *)(a1 + 40)))
    {
      id v6 = @"+IdleAssertion (high priority)";
      return +[PBAttentionMonitor resetAttention:](&OBJC_CLASS___PBAttentionMonitor, "resetAttention:", v6);
    }

    id result = [(id)qword_10046FF20 isOff];
    if ((_DWORD)result)
    {
      id result = [(id)qword_10046FF68 count];
      if (result == (id)1)
      {
        id v6 = @"+IdleAssertion (normal)";
        return +[PBAttentionMonitor resetAttention:](&OBJC_CLASS___PBAttentionMonitor, "resetAttention:", v6);
      }
    }
  }

  return result;
}

void sub_100017F68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_100017F90(uint64_t a1, void *a2)
{
  if ([a2 eventMask] == (id)1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained fire];
  }

void sub_1000181E4(uint64_t a1)
{
  id v2 = (unsigned __int8 *)(*(void *)(a1 + 32) + 8LL);
  do
    int v3 = __ldaxr(v2);
  while (__stlxr(v3 + 1, v2));
  BOOL v4 = v3 == 101;
  uint64_t v5 = 48LL;
  if (v4) {
    uint64_t v5 = 40LL;
  }
  id v6 = (void (**)(void))objc_retainBlock(*(id *)(*(void *)(a1 + 32) + v5));
  uint64_t v7 = *(void *)(a1 + 32);
  BOOL v8 = *(void **)(v7 + 32);
  *(void *)(v7 + 32) = 0LL;

  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = 0LL;

  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void **)(v11 + 48);
  *(void *)(v11 + 4_Block_object_dispose(va, 8) = 0LL;

  uint64_t v13 = *(void **)(*(void *)(a1 + 32) + 56LL);
  id v22 = 0LL;
  unsigned __int8 v14 = [v13 invalidateWithError:&v22];
  id v15 = v22;
  if ((v14 & 1) == 0)
  {
    id v16 = sub_100084338();
    id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_100270940();
    }
  }

  uint64_t v18 = *(void *)(a1 + 32);
  __int16 v19 = *(void **)(v18 + 56);
  *(void *)(v18 + 56) = 0LL;

  if (v6) {
    v6[2](v6);
  }
  id v20 = (unsigned __int8 *)(*(void *)(a1 + 32) + 8LL);
  do
    unsigned __int8 v21 = __ldaxr(v20);
  while (__stlxr(v21 + 1, v20));
}

void sub_100018500( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_100018510( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

void sub_100018540( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_100018550( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_100018760(_Unwind_Exception *a1)
{
}

void sub_100018778(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  int v3 = (void *)objc_claimAutoreleasedReturnValue([v2 currentApplicationSceneHandle]);
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 clientProcessBundleIdentifier]);

  if (v4 && ([*(id *)(*(void *)(a1 + 32) + 16) containsObject:v4] & 1) != 0)
  {
    uint64_t v9 = PBAppLaunchOptionRelaunchedForUserProfileSwitch;
    uint64_t v10 = &__kCFBooleanTrue;
    id v5 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v10,  &v9,  1LL));
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[FBSOpenApplicationService serviceWithDefaultShellEndpoint]( &OBJC_CLASS___FBSOpenApplicationService,  "serviceWithDefaultShellEndpoint"));
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[FBSOpenApplicationOptions optionsWithDictionary:]( &OBJC_CLASS___FBSOpenApplicationOptions,  "optionsWithDictionary:",  v5));
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_100018988;
    v8[3] = &unk_1003D0868;
    v8[4] = *(void *)(a1 + 32);
    [v6 openApplication:v4 withOptions:v7 completion:v8];
  }

  else
  {
    id v5 = *(id *)(a1 + 32);
    objc_sync_enter(v5);
    [*(id *)(a1 + 32) willChangeValueForKey:@"finished"];
    [*(id *)(a1 + 32) willChangeValueForKey:@"executing"];
    *(_BYTE *)(*(void *)(a1 + 32) + 8LL) = 0;
    *(_BYTE *)(*(void *)(a1 + 32) + 9LL) = 1;
    [*(id *)(a1 + 32) didChangeValueForKey:@"executing"];
    [*(id *)(a1 + 32) didChangeValueForKey:@"finished"];
    objc_sync_exit(v5);
  }
}

void sub_10001896C(_Unwind_Exception *a1)
{
}

void sub_100018988(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(id *)(a1 + 32);
  objc_sync_enter(v7);
  [*(id *)(a1 + 32) willChangeValueForKey:@"finished"];
  [*(id *)(a1 + 32) willChangeValueForKey:@"executing"];
  *(_BYTE *)(*(void *)(a1 + 32) + 8LL) = 0;
  *(_BYTE *)(*(void *)(a1 + 32) + 9LL) = 1;
  [*(id *)(a1 + 32) didChangeValueForKey:@"executing"];
  [*(id *)(a1 + 32) didChangeValueForKey:@"finished"];
  objc_sync_exit(v7);
}

void sub_100018A48(_Unwind_Exception *a1)
{
}

void sub_100019070( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_10001908C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[1] postEvent:@"Success" withContext:0 userInfo:0];
  }
}

void sub_1000190D0(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_100019140;
  v3[3] = &unk_1003D08B8;
  id v4 = *(id *)(a1 + 32);
  [a2 addTransactionDidCompleteBlock:v3];
}

uint64_t sub_100019140(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100019C2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, id *a13, id *a14, id *a15, id *a16, id *a17, id *a18, id *a19, id *a20, id *a21, id *a22, id *a23, id *a24, id *a25, id *a26, id *a27, id *a28, id *a29, id *a30)
{
}

void sub_100019E10(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13 = a2;
  id v14 = a3;
  id v15 = a4;
  id v16 = a5;
  id v17 = a6;
  id v18 = a7;
  if (qword_10046FF88 != -1) {
    dispatch_once(&qword_10046FF88, &stru_1003D0900);
  }
  __int16 v19 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_10046FF80 objectForKey:v15]);
  id v20 = [v19 integerValue];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v22 = WeakRetained;
  if (WeakRetained && v20 != (id)WeakRetained[10])
  {
    [WeakRetained willChangeValueForKey:@"state"];
    v22[10] = v20;
    [v22 didChangeValueForKey:@"state"];
  }
}

void sub_100019F38(id a1)
{
  v3[0] = @"Initial";
  v3[1] = @"Preparing";
  v4[0] = &off_1003FD4E8;
  v4[1] = &off_1003FD500;
  v3[2] = @"Prepared";
  v3[3] = @"Presenting";
  v4[2] = &off_1003FD518;
  v4[3] = &off_1003FD530;
  void v3[4] = @"Presented";
  v3[5] = @"Dismissing";
  void v4[4] = &off_1003FD548;
  v4[5] = &off_1003FD560;
  v3[6] = @"Dismissed";
  v3[7] = @"Invalidated";
  v4[6] = &off_1003FD578;
  v4[7] = &off_1003FD590;
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  8LL));
  id v2 = (void *)qword_10046FF80;
  qword_10046FF80 = v1;
}

NSString *__cdecl sub_10001A048(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  id v5 = a2;
  id v6 = sub_100084158();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    sub_1002709A0();
  }

  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](v5, "currentState"));
  return (NSString *)v8;
}

id sub_10001A0AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"PresentationRequest"]);
  [WeakRetained _machineAddPendingPresentationRequest:v10];

  id v15 = _NSConcreteStackBlock;
  uint64_t v16 = 3221225472LL;
  id v17 = sub_10001A19C;
  id v18 = &unk_1003CFEB8;
  id v19 = v7;
  id v20 = v8;
  id v11 = v8;
  id v12 = v7;
  [v12 executeBlockAfterCurrentStateTransition:&v15];
  id v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "currentState", v15, v16, v17, v18));

  return v13;
}

id sub_10001A19C(uint64_t a1)
{
  return [*(id *)(a1 + 32) postEvent:@"Prepare" withContext:0 userInfo:*(void *)(a1 + 40)];
}

CFStringRef sub_10001A1C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a5;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10001A274;
  void v12[3] = &unk_1003CFEB8;
  id v13 = v7;
  id v14 = WeakRetained;
  id v10 = v7;
  [v8 executeBlockAfterCurrentStateTransition:v12];

  return @"Preparing";
}

void sub_10001A274(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:@"PresentationRequest"]);
  int v3 = *(void **)(a1 + 40);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 provider]);
  [v3 _machinePrepareUIWithProvider:v4];
}

CFStringRef sub_10001A2D4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_10001A3C8;
  v15[3] = &unk_1003D0418;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v13 = v12;
  id v16 = v13;
  [v9 executeBlockAfterCurrentStateTransition:v15];

  objc_destroyWeak(&v17);
  return @"Dismissed";
}

void sub_10001A3B4(_Unwind_Exception *a1)
{
}

void sub_10001A3C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:@"DismissalContext"]);
  [WeakRetained _machineNotifyDidCancelWithContext:v3];

  [WeakRetained _machineCleanup];
}

CFStringRef sub_10001A424(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v10 = objc_claimAutoreleasedReturnValue([v8 objectForKey:@"ViewController"]);
    id v11 = WeakRetained[7];
    WeakRetained[7] = (id)v10;

    [WeakRetained[7] setContentDelegate:WeakRetained];
    if ([WeakRetained isActive])
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[5] lastObject]);
      [WeakRetained[5] removeAllObjects];
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472LL;
      v15[2] = sub_10001A540;
      v15[3] = &unk_1003CFEB8;
      id v16 = v7;
      id v17 = v12;
      id v13 = v12;
      [v16 executeBlockAfterCurrentStateTransition:v15];
    }
  }

  return @"Prepared";
}

void sub_10001A540(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v1 = *(void *)(a1 + 40);
  id v4 = @"PresentationRequest";
  uint64_t v5 = v1;
  int v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));
  [v2 postEvent:@"Present" withContext:0 userInfo:v3];
}

CFStringRef sub_10001A5D8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_10001A6CC;
  v15[3] = &unk_1003D0418;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v13 = v12;
  id v16 = v13;
  [v9 executeBlockAfterCurrentStateTransition:v15];

  objc_destroyWeak(&v17);
  return @"Dismissed";
}

void sub_10001A6B8(_Unwind_Exception *a1)
{
}

void sub_10001A6CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:@"Error"]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 domain]);
  if ([v4 isEqualToString:BSTransactionErrorDomain])
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 userInfo]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bs_safeStringForKey:", BSTransactionErrorReasonKey));
    unsigned int v7 = [v6 isEqualToString:BSTransactionErrorReasonTimeout];

    if (v7)
    {
      id v8 = sub_100084158();
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT)) {
        sub_1002709CC(WeakRetained, (uint64_t)v3, v9);
      }
      goto LABEL_8;
    }
  }

  else
  {
  }

  id v10 = sub_100084158();
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
    sub_100270A5C(WeakRetained, (uint64_t)v3, v9);
  }
LABEL_8:

  id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:@"DismissalContext"]);
  [WeakRetained _machineNotifyDidCancelWithContext:v11];

  [WeakRetained _machineCleanup];
}

CFStringRef sub_10001A828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = (id *)(a1 + 32);
  id v6 = a5;
  id WeakRetained = objc_loadWeakRetained(v5);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:@"PresentationRequest"]);

  [WeakRetained _machineAddPendingPresentationRequest:v8];
  return @"Preparing";
}

id sub_10001A898(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v10 = WeakRetained;
  if (WeakRetained)
  {
    id v11 = WeakRetained[2];
    id v15 = _NSConcreteStackBlock;
    uint64_t v16 = 3221225472LL;
    id v17 = sub_10001A978;
    id v18 = &unk_1003CFEB8;
    id v19 = v11;
    id v20 = v8;
    id v12 = v11;
    [v7 executeBlockAfterCurrentStateTransition:&v15];
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "currentState", v15, v16, v17, v18));

  return v13;
}

void sub_10001A978(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"DismissalContext"]);
  [v1 interruptWithContext:v2];
}

CFStringRef sub_10001A9B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a5;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10001AA68;
  void v12[3] = &unk_1003CFEB8;
  void v12[4] = WeakRetained;
  id v13 = v7;
  id v10 = v7;
  [v8 executeBlockAfterCurrentStateTransition:v12];

  return @"Dismissed";
}

id sub_10001AA68(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  int v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"DismissalContext"]);
  [v2 _machineNotifyDidCancelWithContext:v3];

  return [*(id *)(a1 + 32) _machineCleanup];
}

__CFString *sub_10001AABC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained isActive])
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    v13[2] = sub_10001ABA4;
    void v13[3] = &unk_1003CFEB8;
    v13[4] = WeakRetained;
    id v14 = (id)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"PresentationRequest"]);
    id v10 = v14;
    [v7 executeBlockAfterCurrentStateTransition:v13];

    id v11 = @"Presenting";
  }

  else
  {
    id v11 = (__CFString *)objc_claimAutoreleasedReturnValue([v7 currentState]);
  }

  return v11;
}

id sub_10001ABA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _machinePresentUIWithRequest:*(void *)(a1 + 40)];
}

__CFString *sub_10001ABD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (WeakRetained && [WeakRetained[5] count])
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5[5] lastObject]);
    [v5[5] removeAllObjects];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_10001ACB4;
    v10[3] = &unk_1003CFEB8;
    v10[4] = v5;
    id v11 = v6;
    id v7 = v6;
    [v3 executeBlockAfterCurrentStateTransition:v10];

    id v8 = @"Presenting";
  }

  else
  {
    id v8 = (__CFString *)objc_claimAutoreleasedReturnValue([v3 currentState]);
  }

  return v8;
}

id sub_10001ACB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _machinePresentUIWithRequest:*(void *)(a1 + 40)];
}

CFStringRef sub_10001ACE0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a5;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10001AD90;
  void v12[3] = &unk_1003CFEB8;
  void v12[4] = WeakRetained;
  id v13 = v7;
  id v10 = v7;
  [v8 executeBlockAfterCurrentStateTransition:v12];

  return @"Dismissed";
}

id sub_10001AD90(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"DismissalContext"]);
  [v2 _machineNotifyDidCancelWithContext:v3];

  return [*(id *)(a1 + 32) _machineCleanup];
}

CFStringRef sub_10001ADE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a5;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10001AE94;
  void v12[3] = &unk_1003CFEB8;
  void v12[4] = WeakRetained;
  id v13 = v7;
  id v10 = v7;
  [v8 executeBlockAfterCurrentStateTransition:v12];

  return @"Dismissed";
}

id sub_10001AE94(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"DismissalContext"]);
  [v2 _machineNotifyDidCancelWithContext:v3];

  return [*(id *)(a1 + 32) _machineCleanup];
}

CFStringRef sub_10001AEE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_10001AF7C;
    v7[3] = &unk_1003CFEB8;
    void v7[4] = WeakRetained;
    id v8 = v3;
    [v8 executeBlockAfterCurrentStateTransition:v7];
  }

  return @"Presented";
}

void sub_10001AF7C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 48) lastObject]);
  [*(id *)(*(void *)(a1 + 32) + 48) removeAllObjects];
  if (v2)
  {
    id v3 = *(void **)(a1 + 40);
    uint64_t v5 = @"DismissalRequest";
    id v6 = v2;
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v6,  &v5,  1LL));
    [v3 postEvent:@"Dismiss" withContext:0 userInfo:v4];
  }
}

CFStringRef sub_10001B050(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10001B0D4;
  v6[3] = &unk_1003CFF08;
  v6[4] = WeakRetained;
  [v3 executeBlockAfterCurrentStateTransition:v6];

  return @"Dismissed";
}

id sub_10001B0D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _machineCleanup];
}

CFStringRef sub_10001B0EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v10 = WeakRetained;
  if (WeakRetained)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[6] lastObject]);
    [v10[5] removeAllObjects];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_10001B1C8;
    v14[3] = &unk_1003D09B8;
    void v14[4] = v10;
    id v15 = v8;
    id v16 = v11;
    id v12 = v11;
    [v7 executeBlockAfterCurrentStateTransition:v14];
  }

  return @"Dismissing";
}

id sub_10001B1C8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"DismissalContext"]);
  [v2 _machineNotifyWillDismissWithContext:v3];

  return [*(id *)(a1 + 32) _machineDismissUIWithRequest:*(void *)(a1 + 48)];
}

id sub_10001B220(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained(v2);
  uint64_t v5 = WeakRetained;
  if (WeakRetained && [WeakRetained[6] count])
  {
    id v6 = sub_100084158();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Cancelled dismissal", v12, 2u);
    }

    [v5[6] removeAllObjects];
  }

  else
  {
    id v8 = sub_100084158();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100270AEC();
    }
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v10;
}

id sub_10001B308(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v10 = WeakRetained;
  if (WeakRetained)
  {
    id v11 = WeakRetained[6];
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"DismissalRequest"]);
    [v11 addObject:v12];

    id v13 = v10[3];
    if ([v13 isInterruptible])
    {
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"DismissalContext"]);
      [v13 interruptWithContext:v14];
    }
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue([v7 currentState]);

  return v15;
}

id sub_10001B3E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v10 = WeakRetained;
  if (WeakRetained)
  {
    id v11 = WeakRetained[6];
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"DismissalRequest"]);
    [v11 addObject:v12];

    id v13 = v10[3];
    if ([v13 isInterruptible])
    {
      uint64_t v14 = objc_claimAutoreleasedReturnValue([v8 objectForKey:@"DismissalContext"]);
      [v13 interruptWithContext:v14];

      id v13 = (id)v14;
    }

    else
    {
      id v15 = sub_100084158();
      id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100270B18();
      }

      [v10[1] postEvent:@"Interrupted" withContext:0 userInfo:v8];
    }
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue([v7 currentState]);

  return v17;
}

NSString *__cdecl sub_10001B510(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  uint64_t v5 = a2;
  id v6 = sub_100084158();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    sub_100270B44();
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](v5, "currentState"));
  return (NSString *)v8;
}

CFStringRef sub_10001B574(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a5;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10001B624;
  void v12[3] = &unk_1003CFEB8;
  void v12[4] = WeakRetained;
  id v13 = v7;
  id v10 = v7;
  [v8 executeBlockAfterCurrentStateTransition:v12];

  return @"Dismissing";
}

void sub_10001B624(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"DismissalContext"]);
  [v2 _machineNotifyWillDismissWithContext:v3];

  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"DismissalRequest"]);
  [v4 _machineDismissUIWithRequest:v5];
}

CFStringRef sub_10001B698(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a5;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10001B748;
  void v12[3] = &unk_1003CFEB8;
  void v12[4] = WeakRetained;
  id v13 = v7;
  id v10 = v7;
  [v8 executeBlockAfterCurrentStateTransition:v12];

  return @"Dismissing";
}

void sub_10001B748(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"DismissalContext"]);
  [v2 _machineNotifyWillDismissWithContext:v3];

  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"DismissalRequest"]);
  [v4 _machineDismissUIWithRequest:v5];
}

CFStringRef sub_10001B7BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    [*((id *)WeakRetained + 7) setContentDelegate:0];
    id v6 = (void *)v5[7];
    v5[7] = 0LL;

    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_10001B868;
    v8[3] = &unk_1003CFEB8;
    v8[4] = v5;
    id v9 = v3;
    [v9 executeBlockAfterCurrentStateTransition:v8];
  }

  return @"Dismissed";
}

void sub_10001B868(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 40) count];
  id v3 = *(id **)(a1 + 32);
  if (v2)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3[5] lastObject]);
    [*(id *)(*(void *)(a1 + 32) + 40) removeAllObjects];
    uint64_t v5 = *(void **)(a1 + 40);
    id v7 = @"PresentationRequest";
    id v8 = v4;
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v8,  &v7,  1LL));
    [v5 postEvent:@"Present" withContext:0 userInfo:v6];
  }

  else
  {
    [v3 _machineCleanup];
  }

CFStringRef sub_10001B954(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a5;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10001BA20;
  void v13[3] = &unk_1003CFF08;
  v13[4] = WeakRetained;
  [v8 executeBlockAfterCurrentStateTransition:v13];

  id v10 = sub_100084158();
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
    sub_100270B70(v7, v11);
  }

  return @"Dismissed";
}

id sub_10001BA20(uint64_t a1)
{
  return [*(id *)(a1 + 32) _machineCleanup];
}

id sub_10001BA4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[5] removeAllObjects];
  }
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v6;
}

id sub_10001BAB0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = (id *)(a1 + 32);
  id v7 = a5;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKey:@"PresentationRequest"]);

  [WeakRetained _machineAddPendingPresentationRequest:v10];
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 currentState]);

  return v11;
}

CFStringRef sub_10001BB40(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_10001BC20;
  v14[3] = &unk_1003D0890;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  [v9 executeBlockAfterCurrentStateTransition:v14];
  objc_destroyWeak(&v15);

  return @"Invalidated";
}

void sub_10001BC0C(_Unwind_Exception *a1)
{
}

void sub_10001BC20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _machineNotifyDidInvalidate];
}

void sub_10001BD18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10001BD38(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10001BDD8;
  v4[3] = &unk_1003D0A00;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v5);
}

void sub_10001BDC4(_Unwind_Exception *a1)
{
}

void sub_10001BDD8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[2];
    if (([v3 isComplete] & 1) == 0 && !objc_msgSend(v3, "isFailed"))
    {
      id v11 = sub_100084158();
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 138412290;
        id v14 = v3;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Transaction completed (Preparation) -- no need to handle: %@",  (uint8_t *)&v13,  0xCu);
      }

      goto LABEL_19;
    }

    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 viewController]);
    uint64_t v5 = objc_claimAutoreleasedReturnValue([v3 error]);
    id v6 = (void *)v5;
    if (v4) {
      BOOL v7 = v5 == 0;
    }
    else {
      BOOL v7 = 0;
    }
    if (v7)
    {
      id v17 = @"ViewController";
      id v18 = v4;
      id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v18,  &v17,  1LL));
      id v9 = v2[1];
      id v10 = @"Success";
    }

    else
    {
      if ([v3 isInterrupted])
      {
        [v2[1] postEvent:@"Interrupted" withContext:0 userInfo:0];
LABEL_18:

LABEL_19:
        id v12 = v2[2];
        v2[2] = 0LL;

        goto LABEL_20;
      }

      if (v6)
      {
        id v15 = @"Error";
        id v16 = v6;
        id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v16,  &v15,  1LL));
      }

      else
      {
        id v8 = 0LL;
      }

      id v9 = v2[1];
      id v10 = @"Failure";
    }

    [v9 postEvent:v10 withContext:0 userInfo:v8];

    goto LABEL_18;
  }

void sub_10001C0CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10001C0EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10001C18C;
  v4[3] = &unk_1003D0A00;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v5);
}

void sub_10001C178(_Unwind_Exception *a1)
{
}

void sub_10001C18C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[3];
    if ([v3 isFailed])
    {
      uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 error]);
      id v5 = (void *)v4;
      if (v4)
      {
        id v14 = @"Error";
        uint64_t v15 = v4;
        id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v15,  &v14,  1LL));
      }

      else
      {
        id v6 = 0LL;
      }

      [v2[1] postEvent:@"Failure" withContext:0 userInfo:v6];
    }

    else if ([v3 isInterrupted])
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 interruptionContext]);

      if (v5)
      {
        id v12 = @"DismissalContext";
        BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v3 interruptionContext]);
        int v13 = v7;
        id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v13,  &v12,  1LL));
      }

      [v2[1] postEvent:@"Interrupted" withContext:0 userInfo:v5];
    }

    else
    {
      if ([v3 isComplete])
      {
        [v2[1] postEvent:@"Success" withContext:0 userInfo:0];
LABEL_14:
        id v8 = v2[3];
        v2[3] = 0LL;

        goto LABEL_15;
      }

      id v9 = sub_100084158();
      id v5 = (void *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = 138412290;
        id v11 = v3;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v5,  OS_LOG_TYPE_DEFAULT,  "Transaction completed (Presentation) -- no need to handle: %@",  (uint8_t *)&v10,  0xCu);
      }
    }

    goto LABEL_14;
  }

LABEL_15:
}

  id v9 = 1;
LABEL_16:
  id v12 = objc_alloc_init(&OBJC_CLASS___PBSOSUpdateDownload);
  int v13 = (void *)objc_claimAutoreleasedReturnValue(+[PBOSUpdateAssetManager sharedManager](&OBJC_CLASS___PBOSUpdateAssetManager, "sharedManager"));
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[PBOSSoftwareUpdateProcess assetReleaseDate](self, "assetReleaseDate"));
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 descriptorForAsset:v4 withReleaseDate:v14]);

  [v12 setDescriptor:v11];
  uint64_t v15 = objc_alloc_init(&OBJC_CLASS___PBSOSUpdateOperationProgress);
  id v16 = objc_claimAutoreleasedReturnValue(-[PBOSSoftwareUpdateProcess lastDownloadProgressNotification](self, "lastDownloadProgressNotification"));
  id v17 = (void *)v16;
  if (v9 && v16)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue( -[PBOSSoftwareUpdateProcess _downloadProgressPhaseForCurrentState]( self,  "_downloadProgressPhaseForCurrentState"));
    [v15 setPhase:v18];
    if ([v17 totalExpected])
    {
      id v20 = (float)(uint64_t)[v17 totalWritten];
      unsigned __int8 v21 = v20 / (float)(uint64_t)[v17 totalExpected];
    }

    else
    {
      unsigned __int8 v21 = 0.0;
    }

    *(float *)&id v19 = v21;
    [v15 setPercentComplete:v19];
    *(float *)&id v24 = v21;
    [v15 setNormalizedPercentComplete:v24];
    [v17 expectedTimeRemaining];
    objc_msgSend(v15, "setTimeRemaining:");
    [v15 setIsDone:0];
  }

  else if ([v4 state] == (id)2)
  {
    [v15 setPhase:&stru_1003E2910];
    LODWORD(v22) = 1120403456;
    [v15 setPercentComplete:v22];
    LODWORD(v23) = 1120403456;
    [v15 setNormalizedPercentComplete:v23];
    [v15 setTimeRemaining:0.0];
    [v15 setIsDone:1];
  }

  [v12 setProgress:v15];
  __int16 v25 = sub_1000836CC();
  id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG)) {
    sub_100273874();
  }

LABEL_27:
  return v12;
}
}

          id v23 = *v19;
          if (([v23 containsObject:v15] & 1) == 0)
          {
            id v24 = sub_100084680();
            __int16 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              unint64_t v43 = v14;
              _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Removing orphan account... {account=%@}",  buf,  0xCu);
            }

            v37[0] = _NSConcreteStackBlock;
            v37[1] = 3221225472LL;
            v37[2] = sub_1000DAD54;
            v37[3] = &unk_1003D28B0;
            v37[4] = v14;
            [WeakRetained removeAccount:v14 withCompletionHandler:v37];
          }

          goto LABEL_23;
        }
      }

      int v10 = [v8 countByEnumeratingWithState:&v38 objects:v48 count:16];
      if (!v10)
      {
LABEL_26:

        id v6 = v29;
        id v5 = v30;
        goto LABEL_27;
      }
    }
  }

  BOOL v7 = sub_100084680();
  id WeakRetained = (id)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled((os_log_t)WeakRetained, OS_LOG_TYPE_ERROR)) {
    sub_10027EBC4();
  }
LABEL_27:
}
}

  id v22 = 1;
LABEL_20:

  return v22;
}
}

  int v10 = (__IOHIDEvent *)[v6 _hidEvent];
  return v10;
}

          id v23 = *v19;
          if (([v23 containsObject:v15] & 1) == 0)
          {
            id v24 = sub_1001D3A8C();
            __int16 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              id v42 = (const char *)v14;
              _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Removing orphan account... {account=%@}",  buf,  0xCu);
            }

            v36[0] = _NSConcreteStackBlock;
            v36[1] = 3221225472LL;
            v36[2] = sub_1001D74F8;
            v36[3] = &unk_1003D28B0;
            v36[4] = v14;
            [WeakRetained removeAccount:v14 withCompletionHandler:v36];
          }

          goto LABEL_23;
        }
      }

      id v9 = [obj countByEnumeratingWithState:&v37 objects:v47 count:16];
      if (!v9)
      {
LABEL_26:

        id v6 = v28;
        id v5 = v29;
        goto LABEL_27;
      }
    }
  }

  BOOL v7 = sub_1001D3A8C();
  id WeakRetained = (id)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled((os_log_t)WeakRetained, OS_LOG_TYPE_ERROR)) {
    sub_100290A7C();
  }
LABEL_27:
}

  id v18 = (void *)objc_claimAutoreleasedReturnValue( +[PBCaptionsOnMuteController sharedInstance]( &OBJC_CLASS___PBCaptionsOnMuteController,  "sharedInstance"));
  [v18 noteVolumeLevel:self->_lastKnownCECVolumeLevel fromSource:0 sourceTracksVolumeLevel:v8];
}

  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

  type metadata accessor for PBCoordinatedTransitionFragmentType(0LL);
  id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
  return result;
}

void sub_10001C4F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10001C518(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10001C5B8;
  v4[3] = &unk_1003D0A00;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v5);
}

void sub_10001C5A4(_Unwind_Exception *a1)
{
}

void sub_10001C5B8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[4];
    if ([v3 isFailed])
    {
      uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 error]);
      id v5 = (os_log_s *)v4;
      if (v4)
      {
        id v11 = @"Error";
        uint64_t v12 = v4;
        id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v12,  &v11,  1LL));
      }

      else
      {
        id v6 = 0LL;
      }

      [v2[1] postEvent:@"Failure" withContext:0 userInfo:v6];
    }

    else
    {
      if ([v3 isComplete])
      {
        [v2[1] postEvent:@"Success" withContext:0 userInfo:0];
LABEL_12:
        id v8 = v2[4];
        v2[4] = 0LL;

        goto LABEL_13;
      }

      id v7 = sub_100084158();
      id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        int v9 = 138412290;
        id v10 = v3;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Transaction completed (Dismissal) -- no need to handle: %@",  (uint8_t *)&v9,  0xCu);
      }
    }

    goto LABEL_12;
  }

LABEL_13:
}
}

  id v32 = 0u;
  id v33 = 0u;
  __int16 v30 = 0u;
  v31 = 0u;
  id v17 = self->_openAppObservers;
  id v18 = -[NSHashTable countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v30,  v39,  16LL);
  if (v18)
  {
    id v19 = v18;
    id v20 = *(void *)v31;
    do
    {
      for (j = 0LL; j != v19; j = (char *)j + 1)
      {
        if (*(void *)v31 != v20) {
          objc_enumerationMutation(v17);
        }
        id v22 = *(void **)(*((void *)&v30 + 1) + 8LL * (void)j);
        if ((objc_opt_respondsToSelector(v22, "appTransitioner:didCompleteAppTransition:") & 1) != 0) {
          objc_msgSend(v22, "appTransitioner:didCompleteAppTransition:", self, v7, (void)v30);
        }
      }

      id v19 = -[NSHashTable countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v30,  v39,  16LL);
    }

    while (v19);
  }
}
}

    v4[2](v4, 0LL);
    goto LABEL_14;
  }

  int v13 = (void *)objc_claimAutoreleasedReturnValue(+[PBSSiriSettings sharedInstance](&OBJC_CLASS___PBSSiriSettings, "sharedInstance"));
  id v14 = [v13 isSiriEnabled];

  if ((v14 & 1) == 0)
  {
    uint64_t v27 = sub_1000843B0();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Skipping RMV upsell because Siri is not enabled. {userIdentifier=%{public}@}",  (uint8_t *)&buf,  0xCu);
    }

    goto LABEL_13;
  }

  *(void *)&buf = 0LL;
  *((void *)&buf + 1) = &buf;
  __int16 v47 = 0x2020000000LL;
  unint64_t v48 = 1;
  uint64_t v15 = dispatch_group_create();
  dispatch_group_enter(v15);
  siriConnection = self->_siriConnection;
  v41[0] = _NSConcreteStackBlock;
  v41[1] = 3221225472LL;
  v41[2] = sub_100147CD4;
  v41[3] = &unk_1003D9308;
  p_buf = &buf;
  id v17 = v7;
  id v42 = v17;
  id v18 = v4;
  v44 = v18;
  id v19 = v15;
  unint64_t v43 = v19;
  -[AFSettingsConnection getSiriRMVStatusForiCloudAltDSID:completion:]( siriConnection,  "getSiriRMVStatusForiCloudAltDSID:completion:",  v6,  v41);
  dispatch_group_enter(v19);
  id v20 = self->_siriConnection;
  v36[0] = _NSConcreteStackBlock;
  v36[1] = 3221225472LL;
  v36[2] = sub_100147E68;
  v36[3] = &unk_1003D9358;
  __int128 v40 = &buf;
  unsigned __int8 v21 = v17;
  uint64_t v37 = v21;
  id v22 = v18;
  __int128 v39 = v22;
  id v23 = v19;
  id v38 = v23;
  -[AFSettingsConnection isVoiceProfileAvailableForiCloudAltDSID:completion:]( v20,  "isVoiceProfileAvailableForiCloudAltDSID:completion:",  v6,  v36);
  dispatch_group_enter(v23);
  id v24 = self->_siriConnection;
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472LL;
  v31[2] = sub_100147FF0;
  v31[3] = &unk_1003D9380;
  id v35 = &buf;
  id v32 = v21;
  __int16 v25 = v22;
  __int16 v34 = v25;
  id v26 = v23;
  id v33 = v26;
  -[AFSettingsConnection fetchSupportedMultiUserLanguageCodes:](v24, "fetchSupportedMultiUserLanguageCodes:", v31);
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472LL;
  v28[2] = sub_1001481B8;
  v28[3] = &unk_1003D5710;
  __int16 v30 = &buf;
  id v29 = v25;
  dispatch_group_notify(v26, &_dispatch_main_q, v28);

  _Block_object_dispose(&buf, 8);
LABEL_14:
}

    id v7 = 0LL;
  }

  return v7;
}

  id v14 = 0LL;
LABEL_20:

  return v14;
}

          if ((v13 & 1) == 0)
          {
            id v19 = (void *)objc_claimAutoreleasedReturnValue(-[PBDisplayManager userSelectedDisplayMode](self, "userSelectedDisplayMode"));
            id v20 = [v9 isEqual:v19];

            if ((v20 & 1) == 0)
            {
              unsigned __int8 v21 = objc_alloc(&OBJC_CLASS___PBSDisplayManagerUpdateRequest);
              id v22 = (void *)objc_claimAutoreleasedReturnValue(-[PBDisplayManager userSelectedDisplayMode](self, "userSelectedDisplayMode"));
              if (a4 == 2) {
                id v23 = @"Presenting App Switcher";
              }
              else {
                id v23 = @"Presenting Screen Saver";
              }
              id v24 = -[PBSDisplayManagerUpdateRequest initWithDisplayMode:reason:]( v21,  "initWithDisplayMode:reason:",  v22,  v23);

              id v26 = PBSDisplayManagerUpdateRequestPassthroughKey;
              uint64_t v27 = &__kCFBooleanTrue;
              __int16 v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v27,  &v26,  1LL));
              -[PBSDisplayManagerUpdateRequest setUserInfo:](v24, "setUserInfo:", v25);

              -[PBDisplayManager updateDisplayManagerWithRequest:reply:]( self,  "updateDisplayManagerWithRequest:reply:",  v24,  0LL);
            }
          }

          goto LABEL_19;
        }
      }

      int v13 = 0;
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
  }

    id result = sub_1002235E0(a5, a6);
    *a1 = v13;
    return result;
  }

  if ((a6 & 0x1000000000000000LL) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000LL) != 0)
  {
    id v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }

  id v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "Swift/StringTesting.swift",  25LL,  2,  151LL,  0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    id result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableRawPointer.initializeMemory overlapping range",  58LL,  2LL,  "Swift/UnsafeRawPointer.swift",  28LL,  v14,  1173LL,  0);
    __break(1u);
    return result;
  }

void sub_10001D248( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
}

id sub_10001D2C0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "queue_processUpdates:", *(void *)(a1 + 40));
}

void sub_10001D2DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100082574();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FBS Added Apps: %@", (uint8_t *)&v8, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[_PBAppInfoStoreUpdate addApplicationInfos:]( &OBJC_CLASS____PBAppInfoStoreUpdate,  "addApplicationInfos:",  v3));
  [WeakRetained _enqueueUpdate:v7];
}

void sub_10001D3C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100082574();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FBS Removed Apps: %@", (uint8_t *)&v8, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[_PBAppInfoStoreUpdate removeApplicationInfos:]( &OBJC_CLASS____PBAppInfoStoreUpdate,  "removeApplicationInfos:",  v3));
  [WeakRetained _enqueueUpdate:v7];
}

void sub_10001D4B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100082574();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FBS Replaced Apps: %@", (uint8_t *)&v10, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 objectEnumerator]);
  int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 allObjects]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[_PBAppInfoStoreUpdate updateApplicationInfos:]( &OBJC_CLASS____PBAppInfoStoreUpdate,  "updateApplicationInfos:",  v8));
  [WeakRetained _enqueueUpdate:v9];
}

void sub_10001D5D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100082574();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FBS Demoted Apps: %@", (uint8_t *)&v8, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[_PBAppInfoStoreUpdate demoteApplicationInfos:]( &OBJC_CLASS____PBAppInfoStoreUpdate,  "demoteApplicationInfos:",  v3));
  [WeakRetained _enqueueUpdate:v7];
}

void sub_10001D6BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100082574();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "FBS Added Placeholders: %@",  (uint8_t *)&v8,  0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[_PBAppInfoStoreUpdate addPlaceholders:](&OBJC_CLASS____PBAppInfoStoreUpdate, "addPlaceholders:", v3));
  [WeakRetained _enqueueUpdate:v7];
}

void sub_10001D7A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100082574();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "FBS Cancelled Placeholders: %@",  (uint8_t *)&v8,  0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[_PBAppInfoStoreUpdate removePlaceholders:]( &OBJC_CLASS____PBAppInfoStoreUpdate,  "removePlaceholders:",  v3));
  [WeakRetained _enqueueUpdate:v7];
}

id sub_10001D9D4(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 removeObserver:*(void *)(a1 + 32)];
}

uint64_t sub_10001DAAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10001DABC(uint64_t a1)
{
}

void sub_10001DAD4(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 112) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10001DBC8(uint64_t a1)
{
}

id sub_10001DCC4(void *a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___NSUUID);
  uint64_t v3 = *(void *)(a1[6] + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return [*(id *)(a1[4] + 104) setObject:a1[5] forKey:*(void *)(*(void *)(a1[6] + 8) + 40)];
}

id sub_10001DD94(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 104) removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_10001DE68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v4, 1LL));
  objc_msgSend(WeakRetained, "queue_processUpdates:", v3);
}

void sub_10001E32C(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v17;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(v3);
        }
        int v8 = *(void **)(*((void *)&v16 + 1) + 8LL * (void)i);
        id v9 = *(void **)(*(void *)(a1 + 40) + 120LL);
        int v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "bundleIdentifier", (void)v16));
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKey:v10]);

        if (v11)
        {
          uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v8 alternateIconName]);
          [v11 setAlternateIconName:v12];

          -[NSMutableArray addObject:](v2, "addObject:", v11);
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }

    while (v5);
  }

  int v13 = *(void **)(a1 + 40);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[_PBAppInfoStoreUpdate updateAlternateAppIcons:]( &OBJC_CLASS____PBAppInfoStoreUpdate,  "updateAlternateAppIcons:",  v2));
  id v20 = v14;
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v20, 1LL));
  objc_msgSend(v13, "queue_processUpdates:", v15);
}

void sub_10001E590(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v3 = *(void **)(*(void *)(a1 + 32) + 120LL);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_10001E6A0;
  v8[3] = &unk_1003D0B00;
  id v4 = v2;
  id v9 = v4;
  [v3 enumerateKeysAndObjectsUsingBlock:v8];
  if (v4)
  {
    id v5 = *(void **)(a1 + 32);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[_PBAppInfoStoreUpdate updateLocalizations:]( &OBJC_CLASS____PBAppInfoStoreUpdate,  "updateLocalizations:",  v4));
    int v10 = v6;
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v10, 1LL));
    objc_msgSend(v5, "queue_processUpdates:", v7);
  }
}

void sub_10001E6A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedName]);
  [v4 _refreshLocalizedName];
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 localizedName]);
  unsigned __int8 v7 = [v5 isEqual:v6];

  if ((v7 & 1) == 0) {
    [*(id *)(a1 + 32) addObject:v4];
  }
}

void sub_10001F0E4(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_claimAutoreleasedReturnValue([*((id *)a1[4] + 14) objectForKey:v5]);
  if (v7)
  {
    int v8 = (PBAppInfo *)v7;
    if ([a1[6] containsObject:v5])
    {
      id v9 = -[PBAppInfo initWithApplicationPlaceholder:]( objc_alloc(&OBJC_CLASS___PBAppInfo),  "initWithApplicationPlaceholder:",  v6);
      int v10 = (PBAppInfo *)objc_claimAutoreleasedReturnValue( [a1[4] _appInfoWithUpdatedPolicy:1 updatedState:1 sourceAppInfo:v9 placeholder:v6]);

      [a1[7] setObject:v10 forKey:v8];
      [a1[8] addObject:v10];
      id v11 = v8;
LABEL_7:
      int v8 = v10;
      goto LABEL_8;
    }

    id v11 = (PBAppInfo *)objc_claimAutoreleasedReturnValue( [a1[4] _appInfoWithUpdatedPolicy:1 updatedState:1 sourceAppInfo:v8 placeholder:v6]);
    if (!-[PBAppInfo isEqual:](v11, "isEqual:", v8))
    {
      [a1[7] setObject:v11 forKey:v8];
      [a1[8] addObject:v11];
      int v10 = v11;

      goto LABEL_7;
    }
  }

  else
  {
    id v11 = -[PBAppInfo initWithApplicationPlaceholder:]( objc_alloc(&OBJC_CLASS___PBAppInfo),  "initWithApplicationPlaceholder:",  v6);
    int v8 = (PBAppInfo *)objc_claimAutoreleasedReturnValue( [a1[4] _appInfoWithUpdatedPolicy:1 updatedState:1 sourceAppInfo:v11 placeholder:v6]);
    [a1[5] addObject:v8];
  }

LABEL_8:
  [a1[9] setObject:v8 forKey:v5];
}

  [a1[9] setObject:v8 forKey:v5];
}

  return v5;
}
}

  return v3 != 0LL;
}

    LOBYTE(self) = 0;
    goto LABEL_13;
  }

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 currentApplicationSceneHandle]);

  if (v6)
  {
    int v13 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s clientProcessBundleIdentifier](v6, "clientProcessBundleIdentifier"));
    LOBYTE(self) = -[PBAppSwitcherManager shouldActivateForProcessWithIdentifier:]( self,  "shouldActivateForProcessWithIdentifier:",  v13);
  }

  else
  {
    int v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    LODWORD(self) = [v13 isKioskAppAutoLaunchEnabled] ^ 1;
  }

LABEL_13:
  return (char)self;
}

  return (char)v6;
}

  return v11;
}

  if (a5) {
    *a5 = v16;
  }

  return v15;
}

    free(v12);
    goto LABEL_9;
  }

  if (((1LL << a3) & 0x220E) != 0)
  {
    unint64_t v48 = 0u;
    memset(v49, 0, sizeof(v49));
    id v46 = 0u;
    __int16 v47 = 0u;
    v44 = 0u;
    int v45 = 0u;
    id v42 = 0u;
    unint64_t v43 = 0u;
    __int128 v40 = 0u;
    id v41 = 0u;
    id v38 = 0u;
    __int128 v39 = 0u;
    __int128 v36 = 0u;
    uint64_t v37 = 0u;
    id v35 = 0u;
    int v8 = sub_1000836CC();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      int v10 = 3LL;
    }
    else {
      int v10 = 2LL;
    }
    _os_log_send_and_compose_impl( v10,  0LL,  &v35,  250LL,  &_mh_execute_header,  v9,  16LL,  "Asset catalog failed to download on attempt %d [%d].",  COERCE_DOUBLE(67109376LL),  &v31);
    goto LABEL_7;
  }

  if (((1LL << a3) & 0x4001) == 0)
  {
    if (a3 == 18)
    {
      unint64_t v48 = 0u;
      memset(v49, 0, sizeof(v49));
      id v46 = 0u;
      __int16 v47 = 0u;
      v44 = 0u;
      int v45 = 0u;
      id v42 = 0u;
      unint64_t v43 = 0u;
      __int128 v40 = 0u;
      id v41 = 0u;
      id v38 = 0u;
      __int128 v39 = 0u;
      __int128 v36 = 0u;
      uint64_t v37 = 0u;
      id v35 = 0u;
      id v23 = sub_1000836CC();
      id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        __int16 v25 = 3LL;
      }
      else {
        __int16 v25 = 2LL;
      }
      v31 = 67109376;
      id v32 = v4;
      id v33 = 1024;
      __int16 v34 = 18;
      _os_log_send_and_compose_impl( v25,  0LL,  &v35,  250LL,  &_mh_execute_header,  v24,  16LL,  "Asset catalog failed to locate match on attempt %d [%d].",  &v31,  14);
      uint64_t v12 = v26;

      uint64_t v27 = sub_1000836CC();
      int v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
      _os_log_message_persist_impl(v12, 16LL, v28);

      if (v12 == &v35) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }

    goto LABEL_24;
  }

  unint64_t v48 = 0u;
  memset(v49, 0, sizeof(v49));
  id v46 = 0u;
  __int16 v47 = 0u;
  v44 = 0u;
  int v45 = 0u;
  id v42 = 0u;
  unint64_t v43 = 0u;
  __int128 v40 = 0u;
  id v41 = 0u;
  id v38 = 0u;
  __int128 v39 = 0u;
  __int128 v36 = 0u;
  uint64_t v37 = 0u;
  id v35 = 0u;
  __int128 v16 = sub_1000836CC();
  __int128 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
    __int128 v18 = 3LL;
  }
  else {
    __int128 v18 = 2LL;
  }
  v31 = 67109376;
  id v32 = v4;
  id v33 = 1024;
  __int16 v34 = a3;
  _os_log_send_and_compose_impl( v18,  0LL,  &v35,  250LL,  &_mh_execute_header,  v17,  0LL,  "Asset catalog downloaded or no change on attempt %d [%d].",  &v31,  14);
  id v20 = v19;

  unsigned __int8 v21 = sub_1000836CC();
  id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
  _os_log_message_persist_impl(v20, 0LL, v22);

  if (v20 != &v35) {
    free(v20);
  }
  uint64_t v15 = 0LL;
LABEL_17:
  +[PBOSSoftwareUpdateMonitor noteResourceFetchOfType:withResult:]( &OBJC_CLASS___PBOSSoftwareUpdateMonitor,  "noteResourceFetchOfType:withResult:",  v7,  v15);
}
}

      goto LABEL_23;
    }

    id v9 = (void *)objc_claimAutoreleasedReturnValue([v4 accountTypeIdentifier]);
    int v10 = [v9 isEqualToString:ACAccountTypeIdentifierAppleAccount];

    if (v10)
    {
      if ([v4 type] != (id)2) {
        goto LABEL_23;
      }
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 altDSID]);
      -[PBProfileAccountsController _didRemoveICloudAccountWithAltDSID:]( self,  "_didRemoveICloudAccountWithAltDSID:",  v11);
    }

    else
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v4 accountTypeIdentifier]);
      int v13 = [v12 isEqualToString:ACAccountTypeIdentifierGameCenter];

      if (v13)
      {
        if ([v4 type] != (id)2) {
          goto LABEL_23;
        }
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 altDSID]);
        -[PBProfileAccountsController _didRemoveGameCenterAccountWithAltDSID:]( self,  "_didRemoveGameCenterAccountWithAltDSID:",  v11);
      }

      else
      {
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v4 accountTypeIdentifier]);
        uint64_t v15 = [v14 isEqualToString:ACAccountTypeIdentifieriTunesStore];

        if (!v15)
        {
          __int128 v16 = sub_1001D3A8C();
          int v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
          if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT)) {
            sub_10028FF3C();
          }
          goto LABEL_8;
        }

        if ([v4 type])
        {
          if ([v4 type] != (id)2) {
            goto LABEL_23;
          }
          id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 altDSID]);
          -[PBProfileAccountsController _didRemoveITunesAccountWithAltDSID:]( self,  "_didRemoveITunesAccountWithAltDSID:",  v11);
        }

        else
        {
          id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 accountIdentifier]);
          -[PBProfileAccountsController _didAddITunesAccountWithAccountIdentifier:]( self,  "_didAddITunesAccountWithAccountIdentifier:",  v11);
        }
      }
    }

    goto LABEL_23;
  }

  -[PBProfileAccountsController _validateAndFixActiveITunesAccount](self, "_validateAndFixActiveITunesAccount");
LABEL_23:
}
}
}

    __int128 v17 = v8 + 1;
    if (__OFADD__(v8, 1LL))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }

    if (v17 >= v34) {
      goto LABEL_38;
    }
    __int128 v18 = *(void *)(v4 + 8 * v17);
    __int128 v19 = v8 + 1;
    if (!v18)
    {
      __int128 v19 = v8 + 2;
      if (v8 + 2 >= v34) {
        goto LABEL_38;
      }
      __int128 v18 = *(void *)(v4 + 8 * v19);
      if (!v18)
      {
        __int128 v19 = v8 + 3;
        if (v8 + 3 >= v34) {
          goto LABEL_38;
        }
        __int128 v18 = *(void *)(v4 + 8 * v19);
        if (!v18)
        {
          __int128 v19 = v8 + 4;
          if (v8 + 4 >= v34) {
            goto LABEL_38;
          }
          __int128 v18 = *(void *)(v4 + 8 * v19);
          if (!v18) {
            break;
          }
        }
      }
    }

void sub_10001F270(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_claimAutoreleasedReturnValue([*((id *)a1[4] + 14) objectForKey:v5]);
  if (v7)
  {
    int v8 = (PBAppInfo *)v7;
    if ([a1[6] containsObject:v5])
    {
      id v9 = -[PBAppInfo initWithApplicationInfo:](objc_alloc(&OBJC_CLASS___PBAppInfo), "initWithApplicationInfo:", v6);
      int v10 = (PBAppInfo *)objc_claimAutoreleasedReturnValue( [a1[4] _appInfoWithUpdatedPolicy:1 updatedState:1 sourceAppInfo:v9 applicationInfo:v6]);

      [a1[7] setObject:v10 forKey:v8];
      [a1[8] addObject:v10];
      id v11 = v8;
LABEL_7:
      int v8 = v10;
      goto LABEL_8;
    }

    id v11 = (PBAppInfo *)objc_claimAutoreleasedReturnValue( [a1[4] _appInfoWithUpdatedPolicy:1 updatedState:1 sourceAppInfo:v8 applicationInfo:v6]);
    if (!-[PBAppInfo isEqual:](v11, "isEqual:", v8))
    {
      [a1[7] setObject:v11 forKey:v8];
      [a1[8] addObject:v11];
      int v10 = v11;

      goto LABEL_7;
    }
  }

  else
  {
    id v11 = -[PBAppInfo initWithApplicationInfo:](objc_alloc(&OBJC_CLASS___PBAppInfo), "initWithApplicationInfo:", v6);
    int v8 = (PBAppInfo *)objc_claimAutoreleasedReturnValue( [a1[4] _appInfoWithUpdatedPolicy:1 updatedState:1 sourceAppInfo:v11 applicationInfo:v6]);
    [a1[5] addObject:v8];
  }

void sub_10001F3FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:a2]);

  if (!v6) {
    [*(id *)(a1 + 40) addObject:v5];
  }
}

void sub_10001F458(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  if (WeakRetained)
  {
    id v3 = sub_100082574();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = [*(id *)(a1 + 32) count];
      id v6 = [*(id *)(a1 + 40) count];
      id v7 = [*(id *)(a1 + 48) count];
      *(_DWORD *)buf = 134218496;
      id v29 = v5;
      __int16 v30 = 2048;
      id v31 = v6;
      __int16 v32 = 2048;
      id v33 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "updateAppInfo: Add(%lu) Remove(%lu) Update:(%lu)",  buf,  0x20u);
    }

    __int128 v24 = 0u;
    __int128 v25 = 0u;
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    id v8 = *(id *)(a1 + 56);
    id v9 = [v8 countByEnumeratingWithState:&v22 objects:v27 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v23;
      do
      {
        uint64_t v12 = 0LL;
        do
        {
          if (*(void *)v23 != v11) {
            objc_enumerationMutation(v8);
          }
          [*(id *)(*((void *)&v22 + 1) + 8 * (void)v12) appInfoStore:WeakRetained beginUpdatesWithAddedInfos:*(void *)(a1 + 32) removedInfos:*(void *)(a1 + 40) updatedInfos:*(void *)(a1 + 48) updatedConfiguration:*(void *)(a1 + 64)];
          uint64_t v12 = (char *)v12 + 1;
        }

        while (v10 != v12);
        id v10 = [v8 countByEnumeratingWithState:&v22 objects:v27 count:16];
      }

      while (v10);
    }

    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id v13 = *(id *)(a1 + 72);
    id v14 = [v13 countByEnumeratingWithState:&v18 objects:v26 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v19;
      do
      {
        __int128 v17 = 0LL;
        do
        {
          if (*(void *)v19 != v16) {
            objc_enumerationMutation(v13);
          }
          objc_msgSend( *(id *)(*((void *)&v18 + 1) + 8 * (void)v17),  "appInfoStoreEndUpdates:",  WeakRetained,  (void)v18);
          __int128 v17 = (char *)v17 + 1;
        }

        while (v15 != v17);
        id v15 = [v13 countByEnumeratingWithState:&v18 objects:v26 count:16];
      }

      while (v15);
    }
  }
}

void sub_100020188(id a1)
{
  v3[0] = &off_1003FD5A8;
  v3[1] = &off_1003FD5C0;
  v4[0] = @"Add";
  v4[1] = @"Remove";
  v3[2] = &off_1003FD5D8;
  v3[3] = &off_1003FD5F0;
  v4[2] = @"Update";
  v4[3] = @"Demote Apps";
  void v3[4] = &off_1003FD608;
  v3[5] = &off_1003FD620;
  void v4[4] = @"Add Placeholders";
  v4[5] = @"Remove Placeholders";
  v3[6] = &off_1003FD638;
  v3[7] = &off_1003FD650;
  v4[6] = @"Update Placeholders";
  v4[7] = @"Policy";
  void v3[8] = &off_1003FD668;
  v3[9] = &off_1003FD680;
  void v4[8] = @"Dynamic State";
  v4[9] = @"Alternate App Icons";
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  10LL));
  id v2 = (void *)qword_10046FF90;
  qword_10046FF90 = v1;
}

id sub_1000207E0(uint64_t a1, void *a2)
{
  return [a2 setUserInterfaceStyle:*(void *)(a1 + 32)];
}

void sub_100020A88(_Unwind_Exception *a1)
{
}

void sub_100020ABC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  if (WeakRetained) {
    [WeakRetained[9] invalidate];
  }
}

void sub_100020B10(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = sub_1000830B4();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100270E90(v4);
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    id v7 = (void *)*((void *)WeakRetained + 9);
    *((void *)WeakRetained + 9) = 0LL;
  }
}

void sub_100020B8C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (v5 && WeakRetained)
  {
    id v9 = -[PBSceneHandle initWithScene:](objc_alloc(&OBJC_CLASS___PBSceneHandle), "initWithScene:", v5);
    id v10 = (void *)*((void *)v8 + 11);
    *((void *)v8 + 11) = v9;

    [*((id *)v8 + 9) start];
  }

  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

void sub_100020D64(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 96) view]);
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8)
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_100020ED4;
    v15[3] = &unk_1003D0C58;
    id v9 = v15;
    id v2 = &v17;
    id v17 = v6;
    id v3 = &v18;
    id v18 = *(id *)(a1 + 48);
    uint64_t v4 = &v16;
    id v16 = *(id *)(a1 + 40);
  }

  else
  {
    id v9 = v6;
  }

  id v10 = objc_retainBlock(v9);
  uint64_t v11 = v10;
  if (*(_BYTE *)(a1 + 56))
  {
    [v7 setAlpha:0.0];
    uint64_t v12 = *(void **)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    v13[2] = sub_100020F3C;
    void v13[3] = &unk_1003CFF08;
    id v14 = v7;
    [v12 _transitionWithAnimations:v13 completion:v11];
  }

  else
  {
    ((void (*)(void *))v10[2])(v10);
  }

  if (v8)
  {
  }
}

void sub_100020ED4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) canSendResponse])
  {
    id v2 = *(void **)(a1 + 32);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[BSActionResponse response](&OBJC_CLASS___BSActionResponse, "response"));
    [v2 sendResponse:v3];
  }

id sub_100020F3C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_100021050(_Unwind_Exception *a1)
{
}

void sub_10002106C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 96) view]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 40);
  if (v9)
  {
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    v17[2] = sub_100021204;
    v17[3] = &unk_1003D0CA8;
    id v10 = v17;
    id v14 = &v18;
    id v18 = v7;
    uint64_t v2 = &v21;
    objc_copyWeak(&v21, (id *)(a1 + 48));
    id v3 = &v19;
    id v19 = v6;
    uint64_t v4 = &v20;
    id v20 = *(id *)(a1 + 40);
  }

  else
  {
    id v10 = v6;
  }

  uint64_t v11 = objc_retainBlock(v10);
  uint64_t v12 = v11;
  if (*(_BYTE *)(a1 + 56))
  {
    id v13 = *(void **)(a1 + 32);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_1000212A0;
    v15[3] = &unk_1003CFF08;
    id v16 = v8;
    [v13 _transitionWithAnimations:v15 completion:v12];
  }

  else
  {
    ((void (*)(void *))v11[2])(v11);
  }

  if (v9)
  {

    objc_destroyWeak(v2);
  }
}

void sub_1000211EC(_Unwind_Exception *exception_object)
{
  if (v2) {
    objc_destroyWeak(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100021204(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = WeakRetained[12];
    WeakRetained[12] = 0LL;

    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3[11] sceneIfExists]);
    id v6 = v3[11];
    v3[11] = 0LL;

    [v5 invalidate];
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

id sub_1000212A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

void sub_100021508( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

uint64_t sub_100021538(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100021548(uint64_t a1)
{
}

void sub_100021560(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  if (v3)
  {
    [v3 addObject:a2];
  }

  else
  {
    uint64_t v4 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](&OBJC_CLASS___NSMutableSet, "setWithObject:", a2));
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8LL);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;
  }

void sub_10002174C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_100021778(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateRequestsVisibilityStateWithScene:a2];
}

void sub_1000217AC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateStreamStateWithScene:a2];
}

void sub_100021C98(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 identity]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) specification]);
  [v4 setIdentifier:v6];
  [v4 setClientIdentity:v7];
  [v4 setSpecification:v8];
}

void sub_100021D44(uint64_t a1, void *a2)
{
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472LL;
  uint64_t v9 = sub_100021DD4;
  id v10 = &unk_1003D0D70;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v11 = v4;
  uint64_t v12 = v5;
  id v6 = a2;
  [v6 updateSettingsWithBlock:&v7];
  objc_msgSend(v6, "updateClientSettingsWithBlock:", &stru_1003D0DB0, v7, v8, v9, v10);
}

void sub_100021DD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___UIMutableApplicationSceneSettings);
  id v5 = v3;
  id v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[FBDisplayManager mainConfiguration](&OBJC_CLASS___FBDisplayManager, "mainConfiguration"));
  [v8 setDisplayConfiguration:v9];
  unsigned int v10 = sub_1001C9E00();
  id v11 = *(void **)(a1 + 32);
  if (v10) {
    [v11 fullDisplayBounds];
  }
  else {
    [v11 bounds];
  }
  objc_msgSend(v8, "setFrame:");
  [v8 setInterfaceOrientation:1];
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) traitCollection]);
  objc_msgSend(v8, "setUserInterfaceStyle:", objc_msgSend(v12, "userInterfaceStyle"));

  [v8 setLevel:sub_100103824(*(void *)(*(void *)(a1 + 40) + 56))];
  [v8 setForeground:1];
}

void sub_100021EF4(id a1, FBSMutableSceneClientSettings *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___PBUIMutableSystemHomeServiceCameraSceneClientSettings);
  uint64_t v4 = v2;
  id v5 = v4;
  if (v3)
  {
    if ((objc_opt_isKindOfClass(v4, v3) & 1) != 0) {
      id v6 = v5;
    }
    else {
      id v6 = 0LL;
    }
  }

  else
  {
    id v6 = 0LL;
  }

  id v7 = v6;

  -[FBSMutableSceneClientSettings setRequestsVisibility:](v7, "setRequestsVisibility:", 1LL);
}

void sub_100021F6C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  [a2 setForeground:1];
  objc_msgSend(v5, "pb_addAdditionalActions:", *(void *)(*(void *)(a1 + 32) + 32));
}

void sub_100021FC4(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_100022078;
  v7[3] = &unk_1003D0E28;
  id v10 = *(id *)(a1 + 40);
  char v11 = a2;
  id v8 = *(id *)(a1 + 32);
  id v9 = v5;
  id v6 = v5;
  dispatch_async(&_dispatch_main_q, v7);
}

uint64_t sub_100022078(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (*(_BYTE *)(a1 + 56)) {
    uint64_t v3 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v3 = 0LL;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 16))(v2, v3, *(void *)(a1 + 40));
}

void sub_100022148(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___UIMutableApplicationSceneSettings);
  id v5 = v3;
  id v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  if (v8) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

id sub_1000223EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) contentPresentingDidDismissContent:*(void *)(a1 + 40)];
}

uint64_t sub_1000224C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100022780(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [v2 remoteViewController:WeakRetained didUpdateStreamState:*(void *)(a1 + 40)];
}

void sub_100022C44(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_10006BE1C();
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  [v3 setDomain:v5];

  [v3 setService:PBSUserProfilePictureServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

id sub_100022CB0()
{
  if (qword_10046FFA8 != -1) {
    dispatch_once(&qword_10046FFA8, &stru_1003D0F38);
  }
  return (id)qword_10046FFA0;
}

void sub_100022F64(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSUserProfilePictureServiceConfigureConnection();
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
  [v3 setTargetQueue:*(void *)(*(void *)(a1 + 40) + 16)];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100023028;
  v4[3] = &unk_1003D0EF0;
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  id v7 = *(id *)(a1 + 32);
  [v3 setInvalidationHandler:v4];
}

id sub_100023028(uint64_t a1)
{
  id v2 = sub_100022CB0();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    int v7 = 138543618;
    uint64_t v8 = v4;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated {client=%{public}@, connection=%@}",  (uint8_t *)&v7,  0x16u);
  }

  return [*(id *)(a1 + 48) invalidate];
}

void sub_100023114(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfilePictures", "LoretoServiceListener");
  id v2 = (void *)qword_10046FFA0;
  qword_10046FFA0 = (uint64_t)v1;
}

void sub_10002383C(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 1.0));
  id v2 = (void *)qword_10046FFB0;
  qword_10046FFB0 = v1;
}

id sub_100023874()
{
  if (qword_10046FFC8 != -1) {
    dispatch_once(&qword_10046FFC8, &stru_1003D0F78);
  }
  return (id)qword_10046FFC0;
}

void sub_1000238B8(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 URLsForDirectory:14 inDomains:1]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 firstObject]);

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 bundleIdentifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 URLByAppendingPathComponent:v5 isDirectory:1]);

  int v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  [v7 createDirectoryAtURL:v6 withIntermediateDirectories:1 attributes:0 error:0];

  uint64_t v8 = objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:@"SuggestedUserProfiles.bin" isDirectory:0]);
  __int16 v9 = (void *)qword_10046FFC0;
  qword_10046FFC0 = v8;
}

id sub_1000239B4()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v1 = sub_100023874();
  id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 path]);
  id v4 = [v0 fileExistsAtPath:v3];

  return v4;
}

id sub_100023A20(uint64_t a1)
{
  id v2 = sub_100023874();
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PBSuggestedUserProfilesArchive archiveWithContentsOfURL:options:error:]( &OBJC_CLASS___PBSuggestedUserProfilesArchive,  "archiveWithContentsOfURL:options:error:",  v3,  0LL,  a1));

  return v4;
}

id sub_100023A80(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = sub_100023874();
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = [v3 writeToURL:v5 options:1 error:a2];

  return v6;
}

BOOL sub_100023ADC(uint64_t a1)
{
  id v2 = sub_100023874();
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  BOOL v4 = +[PBSuggestedUserProfilesArchive deleteArchiveAtURL:error:]( &OBJC_CLASS___PBSuggestedUserProfilesArchive,  "deleteArchiveAtURL:error:",  v3,  a1);

  return v4;
}

void sub_1000242EC(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

  ;
}

id sub_10002487C(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100024914(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_10046FFD0;
  qword_10046FFD0 = (uint64_t)v1;
}

void sub_1000249D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 instanceForClass:objc_opt_class(PBSystemGestureManager)];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  [*(id *)(a1 + 32) _setupGesturesWithManager:v5];
}

void sub_100024E30( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id location)
{
}

void sub_100024E58(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_100024F14;
  v7[3] = &unk_1003D0FD0;
  objc_copyWeak(&v10, (id *)(a1 + 40));
  id v5 = *(id *)(a1 + 32);
  id v8 = v4;
  id v9 = v5;
  char v11 = *(_BYTE *)(a1 + 48);
  id v6 = v4;
  dispatch_async(&_dispatch_main_q, v7);

  objc_destroyWeak(&v10);
}

void sub_100024F14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32)) {
      uint64_t v3 = 200LL;
    }
    else {
      uint64_t v3 = 100LL;
    }
    (*(void (**)(void, uint64_t))(*(void *)(a1 + 40) + 16LL))(*(void *)(a1 + 40), v3);
    if (*(void *)(a1 + 32) && *(_BYTE *)(a1 + 56))
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PBConferenceRoomDisplayManager sharedInstance]( &OBJC_CLASS___PBConferenceRoomDisplayManager,  "sharedInstance"));
      [v4 startCRDWithReason:2];
    }

    id v5 = (void *)WeakRetained[3];
    WeakRetained[3] = 0LL;
  }
}

void sub_10002508C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000250A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismiss];
}

void sub_100025520(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:PBSAssertionServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_10002583C(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSAssertionServiceConfigureConnection();
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000258DC;
  v4[3] = &unk_1003D1048;
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 32);
  [v3 setInvalidationHandler:v4];
}

void sub_1000258DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000F6D6C();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v7 = 138543618;
    uint64_t v8 = v6;
    __int16 v9 = 2112;
    id v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated {client=%{public}@, connection=%@}",  (uint8_t *)&v7,  0x16u);
  }

  [*(id *)(a1 + 40) invalidate];
}

void sub_100026020(id a1, NSString *a2, BSInvalidatable *a3, BOOL *a4)
{
}

void sub_100026300(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

id sub_100026AB8(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 handle]);
  id v4 = [v3 isEquivalentToHandle:*(void *)(a1 + 32)];

  return v4;
}

LABEL_11:
  return v5;
}

  return v6;
}

  objc_sync_exit(v6);
  return v8;
}

  objc_sync_exit(v6);
  return v8;
}

  return (char)v8;
}
}

    id v19 = [(id)objc_opt_class(self) _emptySessionWithSnapshot:v9];
    id v20 = (PBSGroupRecommendationsSession *)objc_claimAutoreleasedReturnValue(v19);
    goto LABEL_20;
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "pb_recommendationGroupIdentities"));
  char v11 = v10;
  if (v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = (id)objc_claimAutoreleasedReturnValue(+[NSSet set](&OBJC_CLASS___NSSet, "set"));
  }
  id v21 = v12;

  id v33 = _NSConcreteStackBlock;
  __int16 v34 = 3221225472LL;
  id v35 = sub_100115E48;
  __int128 v36 = &unk_1003D80A0;
  uint64_t v37 = v7;
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "bs_compactMap:", &v33));
  if (![v22 count])
  {
    __int128 v23 = sub_100115E04();
    __int128 v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v8 identity]);
      *(_DWORD *)buf = 136315394;
      __int128 v39 = "-[PBProfileRecommendationGroupsController activeSession]";
      __int128 v40 = 2114;
      id v41 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "%s: No recommendation group for active profile. Will create session containing just the active profile. {identity=%{public}@}",  buf,  0x16u);
    }
  }

  id v26 = (void *)objc_claimAutoreleasedReturnValue([v8 systemAppUserIdentifier]);
  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v22 setByAddingObject:v26]);

  if (![v27 count])
  {
    id v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[recommendationGroupUserIdentifiers count] > 0",  v33,  v34,  v35,  v36));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100282B7C(a2);
    }
    _bs_set_crash_log_message([v31 UTF8String]);
    __break(0);
    JUMPOUT(0x100115D98LL);
  }

  int v28 = (void *)objc_claimAutoreleasedReturnValue([v8 systemAppUserIdentifier]);
  id v29 = [v27 containsObject:v28];

  if ((v29 & 1) == 0)
  {
    __int16 v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[recommendationGroupUserIdentifiers containsObject:[activeProfile systemAppUserIdentifier]]",  v33,  v34,  v35,  v36));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100282C28(a2);
    }
    _bs_set_crash_log_message([v32 UTF8String]);
    __break(0);
    JUMPOUT(0x100115DFCLL);
  }

  id v20 = -[PBSGroupRecommendationsSession initWithUserIdentifiers:userProfilesSnapshot:]( objc_alloc(&OBJC_CLASS___PBSGroupRecommendationsSession),  "initWithUserIdentifiers:userProfilesSnapshot:",  v27,  v9);

LABEL_20:
  return v20;
}

  return v9;
}

  return v6;
}
}

  id v15 = -[PBLoretoUserProfileManagerClientPermission initWithEntitlement:auxiliaryEntitlements:isAllowed:]( self,  "initWithEntitlement:auxiliaryEntitlements:isAllowed:",  v9,  v10,  v12);
  return v15;
}
}

  return v6;
}
    }
  }

  if (self->_visibleState != a3)
  {
    self->_visibleState = a3;
    -[PBSiriManager _notifyObserversVisibleStateDidChange:](self, "_notifyObserversVisibleStateDidChange:", a3);
  }
}
}

  return (char)v6;
}

    v18[(v12 >> 6) + 8] |= 1LL << v12;
    __int128 v22 = (uint64_t *)(v18[6] + 16 * v12);
    *__int128 v22 = a2;
    v22[1] = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    __int128 v23 = v18[2];
    __int128 v24 = __OFADD__(v23, 1LL);
    __int128 v25 = v23 + 1;
    if (!v24)
    {
      _DWORD v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }

    goto LABEL_14;
  }

  sub_10022D268(v15, a4 & 1, &qword_10046F1A0);
  id v20 = sub_10022C7E0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    uint64_t v12 = v20;
    id v18 = (void *)*v5;
    if ((v16 & 1) != 0) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }

    v15[(v9 >> 6) + 8] |= 1LL << v9;
    id v20 = 8 * v9;
    *(void *)(v15[6] + v20) = a2;
    *(void *)(v15[7] + v20) = a1;
    id v21 = v15[2];
    __int128 v22 = __OFADD__(v21, 1LL);
    __int128 v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }

    goto LABEL_14;
  }

  sub_10022D570(v12, a3 & 1);
  id v18 = sub_10022C760((uint64_t)a2);
  if ((v13 & 1) == (v19 & 1))
  {
    __int16 v9 = v18;
    id v15 = (void *)*v4;
    if ((v13 & 1) != 0) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }

  a1[6] = -308909540;
  return result;
}

double sub_100026C70(double a1, double a2)
{
  return a2;
}

PBSOverlayLayoutElement *sub_100026EC4(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[PBSOverlayLayoutElementIdentifier identifierWithString:]( &OBJC_CLASS___PBSOverlayLayoutElementIdentifier,  "identifierWithString:",  a2));
  id v3 = -[PBSOverlayLayoutElement initWithIdentifier:]( objc_alloc(&OBJC_CLASS___PBSOverlayLayoutElement),  "initWithIdentifier:",  v2);

  return v3;
}

void sub_1000279C4(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 16LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  [*(id *)(a1 + 40) token]));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKey:v3]);

  if (v4)
  {
    id v5 = sub_100084428();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) identifier]);
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) description]);
      int v11 = 138543618;
      uint64_t v12 = v7;
      __int16 v13 = 2112;
      id v14 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Cancelling notification due to timeout. {contextIdentifier=%{public}@, notification=%@}",  (uint8_t *)&v11,  0x16u);
    }

    __int16 v9 = *(void **)(a1 + 32);
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  [*(id *)(a1 + 40) token]));
    [v9 _cancelUserNotificationWithToken:v10];
  }
}

void sub_100027FB4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_100027FF0(uint64_t a1, int token)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _dismissUserNotificationWithToken:*(void *)(a1 + 32)];
}

void sub_1000288F4(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) view]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v7 bounds];
  objc_msgSend(v6, "setFrame:");

  uint64_t v8 = *(void *)(a1 + 40);
  if (v8)
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_100028A6C;
    v15[3] = &unk_1003D1188;
    __int16 v9 = v15;
    id v2 = &v16;
    id v16 = v5;
    id v3 = &v17;
    id v17 = *(id *)(a1 + 40);
  }

  else
  {
    __int16 v9 = v5;
  }

  id v10 = objc_retainBlock(v9);
  int v11 = v10;
  if (*(_BYTE *)(a1 + 48))
  {
    [v6 setAlpha:0.0];
    uint64_t v12 = *(void **)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    v13[2] = sub_100028AA0;
    void v13[3] = &unk_1003CFF08;
    id v14 = v6;
    [v12 _transitionWithAnimations:v13 completion:v11];
  }

  else
  {
    ((void (*)(void *))v10[2])(v10);
  }

  if (v8)
  {
  }
}

uint64_t sub_100028A6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

id sub_100028AA0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_100028B70(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7)
  {
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_100028CB4;
    v16[3] = &unk_1003D1188;
    uint64_t v8 = v16;
    id v2 = &v17;
    id v17 = v5;
    id v3 = &v18;
    id v18 = *(id *)(a1 + 40);
  }

  else
  {
    uint64_t v8 = v5;
  }

  __int16 v9 = objc_retainBlock(v8);
  id v10 = v9;
  if (*(_BYTE *)(a1 + 48))
  {
    int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) view]);
    uint64_t v12 = *(void **)(a1 + 32);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_100028CE8;
    v14[3] = &unk_1003CFF08;
    id v15 = v11;
    id v13 = v11;
    [v12 _transitionWithAnimations:v14 completion:v10];
  }

  else
  {
    ((void (*)(void *))v9[2])(v9);
  }

  if (v7)
  {
  }
}

uint64_t sub_100028CB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

id sub_100028CE8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

uint64_t sub_100028DE0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

double sub_100028EB8(void *a1)
{
  id v1 = a1;
  if (sub_1001C9E00())
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    unsigned __int8 v3 = [v2 BOOLForKey:@"PBTVGeometryUseStandardBounds"];

    if ((v3 & 1) == 0)
    {
      [v1 nativeSize];
      double v5 = v4;
      double v7 = v6;
      [v1 bounds];
      if (v7 <= 0.0) {
        double v10 = 1.77777778;
      }
      else {
        double v10 = v5 / v7;
      }
      if (v9 <= 0.0) {
        double v11 = 1.77777778;
      }
      else {
        double v11 = v8 / v9;
      }
      BSFloatEqualToFloat(v10, 1.77777778);
      BSFloatEqualToFloat(v11, 1.77777778);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v1 nativeOrientation]);
    }
  }

  return 0.0;
}

void sub_100029B78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100029BB4(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  if (a3) {
    double v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _processKillCompletionForRelaunchApp]);
  }
  else {
    double v6 = 0LL;
  }
  [v5 killForReason:3 andReport:0 withDescription:*(void *)(a1 + 40) completion:v6];
}

void sub_100029C20(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (([WeakRetained isComplete] & 1) == 0 && a2)
  {
    id v6 = 0LL;
    unsigned int v4 = [WeakRetained shouldWatchdog:&v6];
    id v5 = v6;
    if (v4) {
      [WeakRetained _failForTimeoutWithDescription:v5];
    }
  }
}

id sub_10002A048(uint64_t a1, void *a2)
{
  unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue([a2 bundleIdentifier]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_10002A0F4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10002A150;
  block[3] = &unk_1003CFF08;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
}

id sub_10002A150(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2[7])
  {
    [v2 addMilestone:@"RequestRelaunchApp"];
    unsigned __int8 v3 = *(void **)(a1 + 32);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_10002A1E0;
    v5[3] = &unk_1003CFEE0;
    void v5[4] = v3;
    [v3 _attemptLaunchingRelaunchAppWithCompletion:v5];
    id v2 = *(void **)(a1 + 32);
  }

  return [v2 satisfyMilestone:@"RelaunchAppExited"];
}

id sub_10002A1E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) satisfyMilestone:@"RequestRelaunchApp"];
}

id sub_10002A3F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) satisfyMilestone:@"LaunchedRelaunchApp"];
}

id sub_10002A798(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mainDisplayManager]);
}

void sub_10002A8C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 instanceForClass:objc_opt_class(PBPowerManager)];
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  [v5 addObserver:*(void *)(a1 + 32)];
}

void sub_10002AC0C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_10046FFE0;
  qword_10046FFE0 = (uint64_t)v1;
}

void sub_10002B98C(id a1, NSDictionary *a2, NSError *a3)
{
  id v3 = a3;
  if (v3)
  {
    id v4 = sub_100082A9C();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1002724D8((uint64_t)v3, v5);
    }
  }
}

void sub_10002B9E0(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[ATVHIDSystemClient sharedInstance](&OBJC_CLASS___ATVHIDSystemClient, "sharedInstance"));
  objc_msgSend(v1, "setSILState_On");
}

void sub_10002C600(id a1)
{
  if (+[PBSSystemStatus isPresenceDetectionActive]( &OBJC_CLASS___PBSSystemStatus,  "isPresenceDetectionActive")) {
    +[PBDataReportingService startTimingForAction:](&OBJC_CLASS___PBDataReportingService, "startTimingForAction:", 6LL);
  }
  else {
    +[PBDataReportingService stopTimingForAction:](&OBJC_CLASS___PBDataReportingService, "stopTimingForAction:", 6LL);
  }
}

id sub_10002C63C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _internetAvailabilityDidChangeNotification];
}

void sub_10002C654(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a2 + 35))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100031710;
    block[3] = &unk_1003D0680;
    void block[4] = a2;
    dispatch_async(&_dispatch_main_q, block);
  }

void sub_10002C6BC(uint64_t a1, unsigned __int8 *a2)
{
  if (!IsAppleInternalBuild())
  {
    int v3 = a2[35];
    [a2 _hideSysdiagnoseIndication];
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    unsigned __int8 v5 = [v4 suppressIssueDataExport];

    if (v3)
    {
      if ((v5 & 1) == 0)
      {
        dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
        double v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
        dispatch_async(v7, &stru_1003D14D0);
      }
    }
  }

void sub_10002C748()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
  unsigned int v1 = objc_msgSend(v0, "pb_usesManagedDiagnostics");

  if (v1)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    int v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    dispatch_async(v3, &stru_1003D14F0);
  }

void sub_10002CAA4(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___FBSApplicationLibraryConfiguration);
  [v1 setApplicationInfoClass:objc_opt_class(PBApplicationInfo)];
  [v1 setApplicationPlaceholderClass:objc_opt_class(PBApplicationPlaceholder)];
  [v1 setAllowConcurrentLoading:1];
  id v2 = -[FBSApplicationLibrary initWithConfiguration:]( objc_alloc(&OBJC_CLASS___FBSApplicationLibrary),  "initWithConfiguration:",  v1);
  int v3 = (void *)qword_10046FFF0;
  qword_10046FFF0 = (uint64_t)v2;
}

void sub_10002CBA8(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___PBAppInfoPolicy);
  int v3 = objc_alloc_init(&OBJC_CLASS___PBAppInfoStateDataSource);
  id v4 = objc_alloc(&OBJC_CLASS___PBAppInfoStore);
  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedApplicationLibrary]);
  id v6 = -[PBAppInfoStore initWithApplicationLibrary:policy:dynamicStateDataSource:]( v4,  "initWithApplicationLibrary:policy:dynamicStateDataSource:",  v5,  v2,  v3);

  double v7 = (void *)qword_100470000;
  qword_100470000 = (uint64_t)v6;
}

void sub_10002CCB8(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedAppInfoStore]);
  id v2 = -[PBApplicationController initWithAppInfoStore:]( objc_alloc(&OBJC_CLASS___PBApplicationController),  "initWithAppInfoStore:",  v1);
  int v3 = (void *)qword_100470010;
  qword_100470010 = (uint64_t)v2;
}

LABEL_27:
}

  return v14;
}

  return v10;
}

            id v4 = v28;
            id v16 = v65;
            __int128 v22 = v69;
          }

          __int16 v34 = sub_100052300(v22, v16, v27);
          id v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
          __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v35 uniqueIdentifier]);
          uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:v36]);

          if (v37)
          {
            id v38 = (void *)objc_claimAutoreleasedReturnValue([v37 homeKitObject]);
            __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([v38 uniqueIdentifier]);
            [v66 addObject:v39];
          }
        }

        v68 = [obj countByEnumeratingWithState:&v76 objects:v87 count:16];
      }

      while (v68);
    }

    if ([v66 count])
    {
      __int128 v40 = (void *)objc_claimAutoreleasedReturnValue(+[PBSiriManager sharedInstance](&OBJC_CLASS___PBSiriManager, "sharedInstance"));
      [v40 dismissAssistant];

      id v41 = (void *)objc_claimAutoreleasedReturnValue(+[PBHomeUIManager sharedInstance](&OBJC_CLASS___PBHomeUIManager, "sharedInstance"));
      id v42 = (void *)objc_claimAutoreleasedReturnValue([v41 currentStreamState]);
      unint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v42 cameraIdentifiers]);
      v44 = [v43 intersectsSet:v66];

      int v45 = v62;
      if (v44)
      {
        id v46 = sub_1000842C0();
        __int16 v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
        if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v85 = v66;
          _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "PineBoard Intent handler skipping presentation because TVSystemHomeUI service is already showing one of the requested cameras: %@",  buf,  0xCu);
        }

        (*((void (**)(void))a1[6] + 2))();
      }

      else
      {
        v59 = (void *)objc_claimAutoreleasedReturnValue([v66 allObjects]);
        v60 = (void *)objc_claimAutoreleasedReturnValue( +[PBUISystemHomeServiceCameraActivationContext contextWithAccessoryIdentifiers:activationReason:]( &OBJC_CLASS___PBUISystemHomeServiceCameraActivationContext,  "contextWithAccessoryIdentifiers:activationReason:",  v59,  1LL));

        v61 = (void *)objc_claimAutoreleasedReturnValue(+[PBHomeUIManager sharedInstance](&OBJC_CLASS___PBHomeUIManager, "sharedInstance"));
        v70[0] = _NSConcreteStackBlock;
        v70[1] = 3221225472LL;
        v70[2] = sub_1001B3A98;
        v70[3] = &unk_1003CFF30;
        v71 = a1[6];
        [v61 presentCameraWithContext:v60 withCompletion:v70];
      }
    }

    else
    {
      unint64_t v48 = sub_1000842C0();
      __int16 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
      int v45 = v62;
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
        sub_10028CE90(v49, v50, v51, v52, v53, v54, v55, v56);
      }

      v57 = (void (**)(id, void, void *))a1[6];
      v58 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  303LL,  0LL));
      v57[2](v57, 0LL, v58);
    }
  }

          break;
        }
      }

      else
      {
      }

      uint64_t v27 = sub_100082CF4();
      int v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int16 v32 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Power standby requested: sleeping device.",  v32,  2u);
      }

      double v7 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
      id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 bundleIdentifier]);
      [v7 sleepRequestedByClient:v15 forReason:PBSSleepReasonCEC];
      goto LABEL_26;
    case 12LL:
      id v6 = sub_100082CF4();
      double v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v34 = 0;
        double v8 = "Power on requested";
        double v9 = (uint8_t *)&v34;
LABEL_21:
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v7, OS_LOG_TYPE_DEFAULT, v8, v9, 2u);
        goto LABEL_27;
      }

      goto LABEL_27;
  }
}

    double v7 = (v16 - 1) & v16;
    id v14 = __clz(__rbit64(v16)) + (v17 << 6);
    double v11 = v17;
LABEL_28:
    sub_100216C2C(*(void *)(a1 + 48) + 40 * v14, (uint64_t)v30);
    isa = AnyHashable._bridgeToObjectiveC()().isa;
    sub_100216C68((uint64_t)v30);
    id v21 = type metadata accessor for CoordinatedTransitionToken(0LL, v20);
    __int128 v22 = swift_dynamicCastClassUnconditional(isa, v21, 0LL, 0LL, 0LL);
    uint64_t result = NSObject._rawHashValue(seed:)(v3[5]);
    __int128 v23 = -1LL << *((_BYTE *)v3 + 32);
    __int128 v24 = result & ~v23;
    __int128 v25 = v24 >> 6;
    if (((-1LL << v24) & ~*(void *)&v9[8 * (v24 >> 6)]) != 0)
    {
      uint64_t v12 = __clz(__rbit64((-1LL << v24) & ~*(void *)&v9[8 * (v24 >> 6)])) | v24 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      id v26 = 0;
      uint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }

        int v28 = v25 == v27;
        if (v25 == v27) {
          __int128 v25 = 0LL;
        }
        v26 |= v28;
        id v29 = *(void *)&v9[8 * v25];
      }

      while (v29 == -1);
      uint64_t v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }

    *(void *)&v9[(v12 >> 3) & 0x1FFFFFFFFFFFFFF8LL] |= 1LL << v12;
    *(void *)(v3[6] + 8 * v12) = v22;
    ++v3[2];
  }

  id v18 = v11 + 5;
  if (v11 + 5 >= v8)
  {
LABEL_37:
    swift_release(v3);
    sub_100216C24(a1);
    return (Swift::Int)v3;
  }

  id v16 = *(void *)(v4 + 8 * v18);
  if (v16)
  {
    id v17 = v11 + 5;
    goto LABEL_27;
  }

  while (1)
  {
    id v17 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v17 >= v8) {
      goto LABEL_37;
    }
    id v16 = *(void *)(v4 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_27;
    }
  }

    uint64_t v12 = (v21 - 1) & v21;
    id v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    id v16 = 16 * v15;
    id v17 = (void *)(*(void *)(v2 + 48) + v16);
    id v18 = v17[1];
    id v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain(v18);
  }

  __int128 v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  id v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    double v9 = v22;
    goto LABEL_27;
  }

  while (1)
  {
    double v9 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    id v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }

void sub_10002D1F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v15 = va_arg(va2, void);
  uint64_t v17 = va_arg(va2, void);
  uint64_t v18 = va_arg(va2, void);
  uint64_t v19 = va_arg(va2, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va2, 8);
  _Unwind_Resume(a1);
}

void sub_10002D238(void *a1, void *a2)
{
  id v3 = a2;
  if ([v3 phase] == (id)3)
  {
    uint64_t v4 = a1[4];
  }

  else
  {
    if ([v3 phase] != (id)4) {
      goto LABEL_6;
    }
    uint64_t v4 = a1[5];
  }

  *(_BYTE *)(*(void *)(v4 + 8) + 24LL) = 1;
LABEL_6:
  uint64_t v5 = (uint64_t)[v3 type];
  if (v5 <= 16)
  {
    if (v5 == 5)
    {
      uint64_t v6 = 1LL;
      goto LABEL_18;
    }

    if (v5 == 6)
    {
      uint64_t v6 = 8LL;
      goto LABEL_18;
    }

LABEL_17:
    uint64_t v6 = 0x8000LL;
    goto LABEL_18;
  }

  if (v5 == 17)
  {
    uint64_t v6 = 16LL;
    goto LABEL_18;
  }

  if (v5 == 103)
  {
    uint64_t v6 = 2LL;
    goto LABEL_18;
  }

  if (v5 != 102) {
    goto LABEL_17;
  }
  uint64_t v6 = 4LL;
LABEL_18:
  *(void *)(*(void *)(a1[6] + 8LL) + 24LL) |= v6;
}
}
}

      uint64_t v15 = 0LL;
      goto LABEL_18;
    }
  }

  else
  {
    if (!*(_BYTE *)(a1 + 57)) {
      goto LABEL_17;
    }
    [*(id *)(a1 + 32) refreshRate];
    refreshed = PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]);
  }

  if (!refreshed) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void **)(a1 + 48);
LABEL_14:
  uint64_t v14 = [v13 dynamicRange];
  if (v14 != [v3 dynamicRange]) {
    goto LABEL_17;
  }
  if ([v3 SDRColorMapping] == (id)538424319)
  {
    uint64_t v15 = 1LL;
  }

  else
  {
    uint64_t v17 = [*(id *)(a1 + 48) SDRColorMapping];
    uint64_t v15 = v17 == [v3 SDRColorMapping];
  }

    uint64_t v10 = 0;
    goto LABEL_20;
  }

  if (!-[NSString isEqual:](v3, "isEqual:", TVSCDefaultSearchSemanticActionName))
  {
    if (v3)
    {
      uint64_t v10 = -[AXElement performAction:withValue:]( self->_accessibilityElement,  "performAction:withValue:",  2021LL,  v3);
      goto LABEL_20;
    }

    goto LABEL_17;
  }

  double v11 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary tvs_stringForKey:](v4, "tvs_stringForKey:", TVSCSchemaDotOrgQueryInputKey));
  if (v11
    && (-[AXElement scrollToVisible](self->_accessibilityElement, "scrollToVisible"),
        -[AXElement setNativeFocus](self->_accessibilityElement, "setNativeFocus")))
  {
    -[AXElement setValue:](self->_accessibilityElement, "setValue:", v11);
    uint64_t v10 = 1;
  }

  else
  {
    uint64_t v10 = 0;
  }

LABEL_20:
  return v10;
}
}

            double v9 = v18;
            double v8 = v17;
            double v7 = v28;
          }

          if (v16)
          {

            goto LABEL_26;
          }
        }

        uint64_t v10 = (char *)v10 + 1;
      }

      while (v10 != v7);
      double v7 = [v5 countByEnumeratingWithState:&v34 objects:v39 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }

  if (a3 != 101) {
    goto LABEL_30;
  }
  if (![v5 count]) {
    goto LABEL_30;
  }
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v5 anyObject]);
  id v16 = [v21 _hidEvent];

  if (!v16) {
    goto LABEL_30;
  }
LABEL_26:
  BaseAttributes = BKSHIDEventGetBaseAttributes(v16);
  __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(BaseAttributes);
  __int128 v24 = [v23 source];

  if (v24 == 9) {
    goto LABEL_31;
  }
  if (v24 != 4)
  {
LABEL_30:
    __int128 v25 = 0;
    goto LABEL_32;
  }

  if (!v27)
  {
LABEL_31:
    __int128 v25 = 1;
    goto LABEL_32;
  }

  __int128 v25 = +[PBHIDInterface isMultiButtonMFIGamePadEvent:]( &OBJC_CLASS___PBHIDInterface,  "isMultiButtonMFIGamePadEvent:",  v16);
LABEL_32:

  return v25;
}

  __int128 v23 = [v18 taskState] == 1;
LABEL_20:
  __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v18 assertions]);
  __int128 v25 = objc_msgSend(v24, "bs_containsObjectPassingTest:", &stru_1003DBF98);

  id v26 = -[PBApplicationProcessStateInfo initWithBundleIdentifier:pid:application:foregroundVisible:terminated:viewService:]( self,  "initWithBundleIdentifier:pid:application:foregroundVisible:terminated:viewService:",  v31,  [v7 pid],  v28,  v22,  v23,  v25);
  return v26;
}

    swift_release(*(void *)&v26[v117]);
    swift_release(*(void *)&v26[v116]);
    v85 = type metadata accessor for ProfilePictureCache(0LL);
    swift_defaultActor_destroy(v26);
    swift_deallocPartialClassInstance( v26,  v85,  *(unsigned int *)(*(void *)v26 + 48LL),  *(unsigned __int16 *)(*(void *)v26 + 52LL));
    return 0LL;
  }

  v56 = v124;
  v43( &v26[OBJC_IVAR____TtC9PineBoardP33_9B0B5184C89AD36639F392DF4791E3F719ProfilePictureCache_cacheDirectory],  (unint64_t)v49,  v124);
  static UTType.json.getter(v55);
  v57 = v110;
  URL.appendingPathComponent(_:conformingTo:)(0x73656972746E45LL, 0xE700000000000000LL, v40);
  v48(v40, v53);
  v58 = v57;
  v43( &v26[OBJC_IVAR____TtC9PineBoardP33_9B0B5184C89AD36639F392DF4791E3F719ProfilePictureCache_cacheEntriesFile],  (unint64_t)v57,  v56);
  v59 = sub_10022BCA0((uint64_t)&_swiftEmptyArrayStorage);
  v60 = &v26[OBJC_IVAR____TtC9PineBoardP33_9B0B5184C89AD36639F392DF4791E3F719ProfilePictureCache_cacheEntries];
  *(void *)&v26[OBJC_IVAR____TtC9PineBoardP33_9B0B5184C89AD36639F392DF4791E3F719ProfilePictureCache_cacheEntries] = v59;
  URL.path.getter();
  v62 = v61;
  v63 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v62);
  v64 = [v31 contentsAtPath:v63];

  if (v64)
  {
    v65 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v67 = v66;

    v68 = sub_100214624(&qword_10046EC60);
    v69 = sub_100225CA4();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v125, v68, v65, v67, v68, v69);
    v104 = v125;
    sub_100216DE8((uint64_t)v125);

    sub_100224F10(v65, v67);
    swift_release(v123);
    swift_release(v122);
    v105 = v124;
    v106 = (void (*)(char *, uint64_t))v119;
    ((void (*)(char *, uint64_t))v119)(v58, v124);
    v106(v49, v105);
    v106(v114, v105);
    swift_beginAccess(v60, &v125, 1LL, 0LL);
    v107 = *(void *)v60;
    *(void *)v60 = v104;
    swift_bridgeObjectRelease(v107);
  }

  else
  {
    swift_release(v123);
    swift_release(v122);

    v108 = v124;
    v109 = (void (*)(char *, uint64_t))v119;
    ((void (*)(char *, uint64_t))v119)(v58, v124);
    v109(v49, v108);
    v109(v114, v108);
  }

  return v26;
}

  __int16 v34 = v28;
  id v35 = _convertNSErrorToError(_:)(v28);

  swift_willThrow();
  swift_errorRetain(v35);
  __int128 v36 = swift_errorRetain(v35);
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  id v38 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v37, v38))
  {
    __int128 v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    __int128 v40 = (void *)swift_slowAlloc(32LL, -1LL);
    __int16 v49 = v40;
    *(_DWORD *)__int128 v39 = 136446210;
    id v46 = v35;
    swift_errorRetain(v35);
    id v41 = sub_100214624(&qword_10046EBE8);
    id v42 = String.init<A>(describing:)(&v46, v41);
    v44 = v43;
    id v46 = sub_100223358(v42, v43, (uint64_t *)&v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v39 + 4, v39 + 12);
    swift_bridgeObjectRelease(v44);
    swift_errorRelease(v35);
    swift_errorRelease(v35);
    _os_log_impl( (void *)&_mh_execute_header,  v37,  v38,  "Failed to ensure user profile picture cache directory exists. {error=%{public}s}",  v39,  0xCu);
    swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1LL, -1LL);
    swift_slowDealloc(v39, -1LL, -1LL);

    swift_errorRelease(v35);
  }

  else
  {

    swift_errorRelease(v35);
    swift_errorRelease(v35);
    swift_errorRelease(v35);
  }

  uint64_t v6 = *a1;
  double v7 = v6 >= 6;
  double v8 = v6 - 6;
  if (!v7) {
    double v8 = -1;
  }
  return (v8 + 1);
}

  uint64_t v6 = *a1;
  double v7 = v6 >= 4;
  double v8 = v6 - 4;
  if (!v7) {
    double v8 = -1;
  }
  return (v8 + 1);
}

void sub_10002D50C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5 || (a2 & 1) == 0)
  {
    id v6 = sub_100084338();
    double v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = 134218498;
      uint64_t v10 = v8;
      __int16 v11 = 1024;
      int v12 = a2;
      __int16 v13 = 2114;
      id v14 = v5;
      _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Attempt to send sleeping volume action %ld result:%d error:%{public}@",  (uint8_t *)&v9,  0x1Cu);
    }
  }
}

void sub_10002DDB0(id a1)
{
  LODWORD(v1) = info.numer;
  LODWORD(v2) = info.denom;
  *(double *)&qword_100470028 = (double)v1 / (double)v2 / 1000000000.0;
}

void sub_10002EA70(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (a2) {
    id v7 = v5;
  }
  else {
    id v7 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) fallbackDisplayMode]);
  }
  uint64_t v8 = v7;
  int v9 = -[PBSDisplayManagerUpdateRequest initWithDisplayMode:reason:]( objc_alloc(&OBJC_CLASS___PBSDisplayManagerUpdateRequest),  "initWithDisplayMode:reason:",  v7,  @"BSR iterating modes");
  uint64_t v11 = PBSDisplayManagerUpdateRequestPassthroughKey;
  int v12 = &__kCFBooleanTrue;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v12,  &v11,  1LL));
  -[PBSDisplayManagerUpdateRequest setUserInfo:](v9, "setUserInfo:", v10);

  -[PBSDisplayManagerUpdateRequest setWriteDisplayModeToDisk:](v9, "setWriteDisplayModeToDisk:", 1LL);
  -[PBSDisplayManagerUpdateRequest setAllowCoalescing:](v9, "setAllowCoalescing:", 0LL);
  [*(id *)(a1 + 32) updateDisplayManagerWithRequest:v9 reply:0];
}

void sub_10002EE18(id a1, BOOL a2)
{
  unint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBScreenSaverManager sharedInstance](&OBJC_CLASS___PBScreenSaverManager, "sharedInstance"));
  [v2 dismissScreenSaver];
}

void sub_10002EF54(id a1, BOOL a2)
{
  if (!a2)
  {
    unint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
    [v2 launchPostWakeDefaultApp];
  }

void sub_10002F338(uint64_t a1)
{
  uint64_t v2 = 3LL;
  else {
    uint64_t v3 = 3LL;
  }
  else {
    uint64_t v4 = v2;
  }
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBPowerManager sharedInstance](&OBJC_CLASS___PBPowerManager, "sharedInstance"));
  [v5 sleepSystemWithReason:v4];
}

uint64_t sub_10002F458(uint64_t result, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16LL))();
  }
  return result;
}

void sub_100030264(id a1, NSTimer *a2)
{
}

void sub_100030364(id a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[ATVHIDSystemClient sharedInstance](&OBJC_CLASS___ATVHIDSystemClient, "sharedInstance"));
  [v1 flashSILMorseCode:@"555"];

  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[ATVHIDSystemClient sharedInstance](&OBJC_CLASS___ATVHIDSystemClient, "sharedInstance"));
  objc_msgSend(v2, "setSILState_On");
}

void sub_100030728(uint64_t a1)
{
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v13;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v12 + 1) + 8LL * (void)i);
        uint64_t v8 = *(void **)(a1 + 40);
        int v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKeyedSubscript:v7]);
        objc_msgSend(v8, "setBool:forKey:", objc_msgSend(v9, "BOOLValue"), v7);
      }

      id v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v4);
  }

  notify_post(*(const char **)(a1 + 56));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Lessening UIKit logs",  v11,  2u);
  }

  id v10 = *(id *)(a1 + 48);
  objc_sync_enter(v10);
  byte_100470038 = 0;
  objc_sync_exit(v10);
}

void sub_100030B7C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) oldToNewConfiguration]);
  id v3 = [v2 count];

  if (v3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) oldToNewConfiguration]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 keyEnumerator]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 allObjects]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 firstObject]);

    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) oldToNewConfiguration]);
    int v9 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:v7]);

    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[PBSystemAppSettings sharedInstance](&OBJC_CLASS___PBSystemAppSettings, "sharedInstance"));
    [v10 updateWithConfiguration:v9];

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[PBAXFeatureManager sharedInstance](&OBJC_CLASS___PBAXFeatureManager, "sharedInstance"));
    [v11 updateWithConfiguration:v9];

    __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v9 kioskAppBundleIdentifier]);
    __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([v7 kioskAppBundleIdentifier]);
    if (v12 && ([v12 isEqual:v13] & 1) == 0)
    {
      id v15 = sub_1000839D8();
      id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        v64 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Launching %{public}@ because the kiosk app changed",  buf,  0xCu);
      }

      int v14 = 1;
    }

    else
    {
      int v14 = 0;
    }
  }

  else
  {
    int v14 = 0;
  }

  __int128 v57 = 0u;
  __int128 v58 = 0u;
  __int128 v55 = 0u;
  __int128 v56 = 0u;
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) addedAppInfos]);
  id v18 = [v17 countByEnumeratingWithState:&v55 objects:v62 count:16];
  if (v18)
  {
    id v19 = v18;
    int v49 = v14;
    uint64_t v20 = *(void *)v56;
    while (2)
    {
      for (i = 0LL; i != v19; i = (char *)i + 1)
      {
        if (*(void *)v56 != v20) {
          objc_enumerationMutation(v17);
        }
        __int128 v22 = *(void **)(*((void *)&v55 + 1) + 8LL * (void)i);
        __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 bundleIdentifier]);
        __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) configuration]);
        __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v24 kioskAppBundleIdentifier]);
        unsigned int v26 = [v23 isEqual:v25];

        if (v26)
        {
          id v27 = sub_1000839D8();
          int v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
          {
            id v29 = (void *)objc_claimAutoreleasedReturnValue([v22 bundleIdentifier]);
            *(_DWORD *)buf = 138543362;
            v64 = v29;
            _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Launching %{public}@ in single app mode because it is the kiosk app and it became available",  buf,  0xCu);
          }

          int v14 = 1;
          goto LABEL_22;
        }
      }

      id v19 = [v17 countByEnumeratingWithState:&v55 objects:v62 count:16];
      if (v19) {
        continue;
      }
      break;
    }

    int v14 = v49;
  }

LABEL_22:
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int16 v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) oldToNewUpdatedAppInfos]);
  id v31 = (void *)objc_claimAutoreleasedReturnValue([v30 objectEnumerator]);

  id v32 = [v31 countByEnumeratingWithState:&v51 objects:v61 count:16];
  if (v32)
  {
    id v33 = v32;
    int v50 = v14;
    uint64_t v34 = *(void *)v52;
    while (2)
    {
      for (j = 0LL; j != v33; j = (char *)j + 1)
      {
        if (*(void *)v52 != v34) {
          objc_enumerationMutation(v31);
        }
        __int128 v36 = *(void **)(*((void *)&v51 + 1) + 8LL * (void)j);
        uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([v36 bundleIdentifier]);
        id v38 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) configuration]);
        __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([v38 kioskAppBundleIdentifier]);
        unsigned int v40 = [v37 isEqual:v39];

        if (v40)
        {
          id v41 = sub_1000839D8();
          id v42 = (os_log_s *)objc_claimAutoreleasedReturnValue(v41);
          if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
          {
            unint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v36 bundleIdentifier]);
            *(_DWORD *)buf = 138543362;
            v64 = v43;
            _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "Re-launching %{public}@ in single app mode because it is the kiosk app and it was updated",  buf,  0xCu);
          }

          int v14 = 1;
          goto LABEL_34;
        }
      }

      id v33 = [v31 countByEnumeratingWithState:&v51 objects:v61 count:16];
      if (v33) {
        continue;
      }
      break;
    }

    int v14 = v50;
  }
}

          uint64_t v11 = (v16 - 1) & v16;
          v68 = v17;
          int v14 = __clz(__rbit64(v16)) + (v17 << 6);
        }

        id v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
        id v21 = *v19;
        uint64_t v20 = v19[1];
        Hasher.init(_seed:)(v71, *(void *)(v5 + 40));
        swift_bridgeObjectRetain(v20);
        String.hash(into:)(v71, v21, v20);
        __int128 v22 = Hasher._finalize()();
        __int128 v23 = -1LL << *(_BYTE *)(v5 + 32);
        __int128 v24 = v22 & ~v23;
        __int128 v25 = v24 >> 6;
        unsigned int v26 = 1LL << v24;
        if (((1LL << v24) & *(void *)(v12 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease(v20);
        uint64_t v8 = v68;
        uint64_t v5 = a3;
        id v4 = v72;
      }

      id v27 = *(void *)(a3 + 48);
      int v28 = (void *)(v27 + 16 * v24);
      id v29 = v28[1];
      __int16 v30 = *v28 == v21 && v29 == v20;
      if (!v30 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29, v21, v20, 0LL) & 1) == 0)
      {
        id v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          id v33 = i & v31;
          uint64_t v34 = (void *)(v27 + 16 * v33);
          id v35 = v34[1];
          __int128 v36 = *v34 == v21 && v35 == v20;
          if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v34, v35, v21, v20, 0LL) & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease(v20);
            __int128 v25 = v33 >> 6;
            unsigned int v26 = 1LL << v33;
            goto LABEL_38;
          }
        }

        goto LABEL_6;
      }

      uint64_t result = swift_bridgeObjectRelease(v20);
LABEL_38:
      uint64_t v8 = v68;
      uint64_t v5 = a3;
      v63[v25] |= v26;
      uint64_t v37 = __OFADD__(v67++, 1LL);
      id v4 = v72;
      if (v37) {
        goto LABEL_82;
      }
    }
  }

  id v38 = 0LL;
  v66 = a3 + 56;
  v67 = 0LL;
  __int128 v39 = 1LL << *(_BYTE *)(a3 + 32);
  if (v39 < 64) {
    unsigned int v40 = ~(-1LL << v39);
  }
  else {
    unsigned int v40 = -1LL;
  }
  id v41 = v40 & *(void *)(a3 + 56);
  v69 = (unint64_t)(v39 + 63) >> 6;
  id v42 = a4 + 56;
  while (1)
  {
    if (v41)
    {
      unint64_t v43 = __clz(__rbit64(v41));
      v41 &= v41 - 1;
      v44 = v43 | (v38 << 6);
      goto LABEL_63;
    }

    id v45 = v38 + 1;
    if (__OFADD__(v38, 1LL))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }

    if (v45 >= v69) {
      goto LABEL_79;
    }
    id v46 = *(void *)(v66 + 8 * v45);
    ++v38;
    if (!v46)
    {
      id v38 = v45 + 1;
      if (v45 + 1 >= v69) {
        goto LABEL_79;
      }
      id v46 = *(void *)(v66 + 8 * v38);
      if (!v46)
      {
        id v38 = v45 + 2;
        if (v45 + 2 >= v69) {
          goto LABEL_79;
        }
        id v46 = *(void *)(v66 + 8 * v38);
        if (!v46) {
          break;
        }
      }
    }

    uint64_t v8 = (v20 - 1) & v20;
    __int128 v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_5:
    __int128 v13 = *(void *)(a1 + 56);
    int v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    id v15 = *v14;
    id v16 = v14[1];
    uint64_t v17 = type metadata accessor for CacheEntry(0LL);
    sub_10022311C(v13 + *(void *)(*(void *)(v17 - 8) + 72LL) * v12, (uint64_t)v4 + *(int *)(v2 + 48));
    void *v4 = v15;
    v4[1] = v16;
    id v18 = (uint64_t)v4 + *(int *)(v2 + 48);
    swift_bridgeObjectRetain(v16);
    sub_1002222C0(v15, v16, v18);
    uint64_t result = sub_100225D28((uint64_t)v4, &qword_10046ED70);
  }

  id v21 = v19 + 4;
  if (v21 >= v24) {
    return swift_release(a1);
  }
  uint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    id v10 = v21;
    goto LABEL_22;
  }

  while (1)
  {
    id v10 = v21 + 1;
    if (__OFADD__(v21, 1LL)) {
      break;
    }
    if (v10 >= v24) {
      return swift_release(a1);
    }
    uint64_t v20 = *(void *)(v23 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }

    id v6 = (v20 - 1) & v20;
  }

  id v21 = v19 + 4;
  if (v21 >= v27)
  {
LABEL_29:
    swift_release(a1);
    return (uint64_t)v25;
  }

  uint64_t v20 = *(void *)(v26 + 8 * v21);
  if (v20)
  {
    uint64_t v8 = v21;
    goto LABEL_22;
  }

  while (1)
  {
    uint64_t v8 = v21 + 1;
    if (__OFADD__(v21, 1LL)) {
      break;
    }
    if (v8 >= v27) {
      goto LABEL_29;
    }
    uint64_t v20 = *(void *)(v26 + 8 * v8);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }

  __int128 v23 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1LL << a3;
  __int128 v24 = (uint64_t *)(*(void *)(v23 + 48) + 16 * a3);
  *__int128 v24 = v8;
  v24[1] = a2;
  __int128 v25 = *(void *)(v23 + 16);
  unsigned int v26 = __OFADD__(v25, 1LL);
  id v27 = v25 + 1;
  if (v26) {
    __break(1u);
  }
  else {
    *(void *)(v23 + 16) = v27;
  }
  return result;
}

    swift_bridgeObjectRelease(v14);
    unsigned int v40 = _swiftEmptyArrayStorage;
LABEL_23:
    id v41 = objc_msgSend(a1, "pb_updatedAppInfoSet", v46, v47, v48);
    id v42 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v41, v50);

    unint64_t v43 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR___PBApplicationController__applications);
    v44 = (uint64_t *)&v43[4];
    id v45 = v43 + 6;
    os_unfair_lock_lock(v43 + 6);
    sub_10022838C(v44, v11, (int64_t)v40, v42);
    os_unfair_lock_unlock(v45);
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v40);
    return swift_bridgeObjectRelease(v11);
  }

  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

LABEL_34:
  v44 = (void *)objc_claimAutoreleasedReturnValue( +[PBSConferenceRoomDisplaySettings sharedInstance]( &OBJC_CLASS___PBSConferenceRoomDisplaySettings,  "sharedInstance"));
  id v45 = [v44 mode];

  if (v14 && v45 == (id)3)
  {
    id v46 = sub_1000839D8();
    __int16 v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "Cancel kiosk app launch due to forced CRD mode",  buf,  2u);
    }
  }

  else
  {
    if (!v14) {
      return;
    }
    __int16 v47 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[PBAppDelegate sharedApplicationDelegate]( &OBJC_CLASS___PBAppDelegate,  "sharedApplicationDelegate"));
    uint64_t v59 = PBAppLaunchOptionDeactivation;
    v60 = &__kCFBooleanTrue;
    unint64_t v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v60,  &v59,  1LL));
    -[os_log_s openKioskApplicationWithReason:options:completion:]( v47,  "openKioskApplicationWithReason:options:completion:",  @"Launched in single app mode",  v48,  0LL);
  }
}

  -[PBOSSoftwareUpdateProcess setAsset:](self, "setAsset:", v71);
  -[PBOSSoftwareUpdateProcess setAssetReleaseDate:](self, "setAssetReleaseDate:", v9);
  -[PBOSSoftwareUpdateProcess setAssetIsLarge:](self, "setAssetIsLarge:", 0LL);
  unsigned int v40 = (void *)objc_claimAutoreleasedReturnValue(-[PBOSSoftwareUpdateProcess asset](self, "asset"));
  id v41 = (void *)objc_claimAutoreleasedReturnValue([v40 attributes]);
  id v32 = (void *)objc_claimAutoreleasedReturnValue([v41 objectForKey:ASAttributeDownloadSize]);

  if (v32)
  {
    id v42 = objc_opt_class(&OBJC_CLASS___NSNumber);
    if ((objc_opt_isKindOfClass(v32, v42) & 1) != 0) {
      -[PBOSSoftwareUpdateProcess setAssetIsLarge:]( self,  "setAssetIsLarge:",  (uint64_t)[v32 longLongValue] > 209715199);
    }
  }

  unint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(-[PBOSSoftwareUpdateProcess asset](self, "asset"));
  v44 = [v43 state];

  v73[0] = _NSConcreteStackBlock;
  v73[1] = 3221225472LL;
  v73[2] = sub_10004308C;
  v73[3] = &unk_1003CFF08;
  v73[4] = self;
  id v45 = objc_retainBlock(v73);
  if (v44 == (id)2)
  {
    if (-[PBOSSoftwareUpdateProcess _goodTimeToInstallAndReboot](self, "_goodTimeToInstallAndReboot"))
    {
      ((void (*)(void *))v45[2])(v45);
LABEL_52:

      goto LABEL_33;
    }
  }

  else if (-[PBOSSoftwareUpdateProcess _goodTimeToDownload](self, "_goodTimeToDownload"))
  {
    v91 = 0u;
    memset(v92, 0, sizeof(v92));
    v89 = 0u;
    v90 = 0u;
    v87 = 0u;
    v88 = 0u;
    v85 = 0u;
    v86 = 0u;
    v83 = 0u;
    v84 = 0u;
    v81 = 0u;
    v82 = 0u;
    v80 = 0u;
    memset(buf, 0, sizeof(buf));
    id v46 = sub_1000836CC();
    __int16 v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT)) {
      unint64_t v48 = 3LL;
    }
    else {
      unint64_t v48 = 2LL;
    }
    v74[0] = 0;
    int v49 = (uint8_t *)_os_log_send_and_compose_impl( v48,  0LL,  buf,  250LL,  &_mh_execute_header,  v47,  0LL,  "Reporting update available",  v74,  2);

    int v50 = sub_1000836CC();
    __int128 v51 = (void *)objc_claimAutoreleasedReturnValue(v50);
    _os_log_message_persist_impl(v49, 0LL, v51);

    if (v49 != buf) {
      free(v49);
    }
    v91 = 0u;
    memset(v92, 0, sizeof(v92));
    v89 = 0u;
    v90 = 0u;
    v87 = 0u;
    v88 = 0u;
    v85 = 0u;
    v86 = 0u;
    v83 = 0u;
    v84 = 0u;
    v81 = 0u;
    v82 = 0u;
    v80 = 0u;
    memset(buf, 0, sizeof(buf));
    __int128 v52 = sub_1000836CC();
    __int128 v53 = (os_log_s *)objc_claimAutoreleasedReturnValue(v52);
    if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT)) {
      __int128 v54 = 3LL;
    }
    else {
      __int128 v54 = 2LL;
    }
    v74[0] = 0;
    LODWORD(v6_Block_object_dispose(va, 8) = 2;
    __int128 v55 = (uint8_t *)_os_log_send_and_compose_impl( v54,  0LL,  buf,  250LL,  &_mh_execute_header,  v53,  0LL,  "Clearing any old assets...",  v74,  v68);

    __int128 v56 = sub_1000836CC();
    __int128 v57 = (void *)objc_claimAutoreleasedReturnValue(v56);
    _os_log_message_persist_impl(v55, 0LL, v57);

    if (v55 != buf) {
      free(v55);
    }
    __int128 v58 = (void *)objc_claimAutoreleasedReturnValue(+[PBOSUpdateAssetManager sharedManager](&OBJC_CLASS___PBOSUpdateAssetManager, "sharedManager"));
    v72[0] = _NSConcreteStackBlock;
    v72[1] = 3221225472LL;
    v72[2] = sub_100043130;
    v72[3] = &unk_1003D1BA0;
    v72[4] = v45;
    [v58 purgeLocalAssetsWithCompletion:v72];

    goto LABEL_52;
  }

  v91 = 0u;
  memset(v92, 0, sizeof(v92));
  v89 = 0u;
  v90 = 0u;
  v87 = 0u;
  v88 = 0u;
  v85 = 0u;
  v86 = 0u;
  v83 = 0u;
  v84 = 0u;
  v81 = 0u;
  v82 = 0u;
  v80 = 0u;
  memset(buf, 0, sizeof(buf));
  uint64_t v59 = sub_1000836CC();
  v60 = (os_log_s *)objc_claimAutoreleasedReturnValue(v59);
  if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT)) {
    v61 = 3LL;
  }
  else {
    v61 = 2LL;
  }
  v74[0] = 0;
  v62 = (uint8_t *)_os_log_send_and_compose_impl( v61,  0LL,  buf,  250LL,  &_mh_execute_header,  v60,  0LL,  "Reporting no updates - bad time to update",  v74,  2);

  v63 = sub_1000836CC();
  v64 = (void *)objc_claimAutoreleasedReturnValue(v63);
  _os_log_message_persist_impl(v62, 0LL, v64);

  if (v62 != buf) {
    free(v62);
  }
  v65 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  4LL,  0LL));
  -[PBOSSoftwareUpdateProcess _sendCheckFinishedNotificationForUpdateAvailable:withError:]( self,  "_sendCheckFinishedNotificationForUpdateAvailable:withError:",  0LL,  v65);
  v66 = (void *)objc_claimAutoreleasedReturnValue(-[PBOSSoftwareUpdateProcess machine](self, "machine"));
  [v66 postEvent:off_100469248 withContext:0 userInfo:0];

LABEL_27:
  v91 = 0u;
  memset(v92, 0, sizeof(v92));
  v89 = 0u;
  v90 = 0u;
  v87 = 0u;
  v88 = 0u;
  v85 = 0u;
  v86 = 0u;
  v83 = 0u;
  v84 = 0u;
  v81 = 0u;
  v82 = 0u;
  v80 = 0u;
  memset(buf, 0, sizeof(buf));
  uint64_t v34 = sub_1000836CC();
  id v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT)) {
    __int128 v36 = 3LL;
  }
  else {
    __int128 v36 = 2LL;
  }
  v74[0] = 0;
  LODWORD(v67) = 2;
  uint64_t v37 = (uint8_t *)_os_log_send_and_compose_impl( v36,  0LL,  buf,  250LL,  &_mh_execute_header,  v35,  0LL,  "Verifying beta catalog is up to date after check.",  v74,  v67);

  id v38 = sub_1000836CC();
  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
  _os_log_message_persist_impl(v37, 0LL, v39);

  if (v37 != buf) {
    free(v37);
  }
  id v32 = (void *)objc_claimAutoreleasedReturnValue(+[SDBetaManager sharedManager](&OBJC_CLASS___SDBetaManager, "sharedManager"));
  [v32 verifyCurrentCatalog];
LABEL_33:
}

  TVCSUserProfilesAnalyticsSendEvent(v47);
  __int16 v30 = objc_alloc(&OBJC_CLASS___PBAppInfoController);
  id v31 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedAppInfoStore](&OBJC_CLASS___PineBoard, "sharedAppInfoStore"));
  id v32 = (void *)objc_claimAutoreleasedReturnValue( +[PBAppInfoController enabledAndVisibleAppsFilter]( &OBJC_CLASS___PBAppInfoController,  "enabledAndVisibleAppsFilter"));
  id v33 = -[PBAppInfoController initWithInfoStore:filter:delegate:]( v30,  "initWithInfoStore:filter:delegate:",  v31,  v32,  0LL);

  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(-[PBAppInfoController appInfos](v33, "appInfos"));
  id v35 = (void *)objc_claimAutoreleasedReturnValue([v34 allValues]);
  __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "bs_compactMap:", &stru_1003D5A20));

  uint64_t v37 = objc_alloc_init(&OBJC_CLASS___TVCSUserProfilesAnalyticsAppsEvent);
  objc_msgSend(v37, "setAppCount:", objc_msgSend(v36, "count"));
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  id v38 = v36;
  __int128 v39 = [v38 countByEnumeratingWithState:&v52 objects:v64 count:16];
  if (v39)
  {
    unsigned int v40 = v39;
    id v41 = 0LL;
    id v42 = 0LL;
    unint64_t v43 = *(void *)v53;
    do
    {
      for (k = 0LL; k != v40; k = (char *)k + 1)
      {
        if (*(void *)v53 != v43) {
          objc_enumerationMutation(v38);
        }
        id v45 = *(void **)(*((void *)&v52 + 1) + 8LL * (void)k);
        v41 += [v45 hasRunAsCurrentUserEntitlement];
        v42 += [v45 hasGetCurrentUserEntitlement];
      }

      unsigned int v40 = [v38 countByEnumeratingWithState:&v52 objects:v64 count:16];
    }

    while (v40);
  }

  else
  {
    id v41 = 0LL;
    id v42 = 0LL;
  }

  [v37 setRunAsCurrentUserAppCount:v41];
  [v37 setGetCurrentUserAppCount:v42];
  TVCSUserProfilesAnalyticsSendEvent(v37);
}

  v99 = 0u;
  memset(v100, 0, sizeof(v100));
  v97 = 0u;
  v98 = 0u;
  v95 = 0u;
  v96 = 0u;
  v93 = 0u;
  v94 = 0u;
  v91 = 0u;
  v92 = 0u;
  v89 = 0u;
  v90 = 0u;
  v87 = 0u;
  v88 = 0u;
  v86 = 0u;
  __int128 v54 = sub_1000836CC();
  __int128 v55 = (os_log_s *)objc_claimAutoreleasedReturnValue(v54);
  if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT)) {
    __int128 v56 = 3LL;
  }
  else {
    __int128 v56 = 2LL;
  }
  LOWORD(v81) = 0;
  LODWORD(v62) = 2;
  _os_log_send_and_compose_impl( v56,  0LL,  &v86,  250LL,  &_mh_execute_header,  v55,  0LL,  "No matching installed asset found.",  &v81,  v62);
  __int128 v58 = v57;

  uint64_t v59 = sub_1000836CC();
  v60 = (void *)objc_claimAutoreleasedReturnValue(v59);
  _os_log_message_persist_impl(v58, 0LL, v60);

  if (v58 != &v86) {
    free(v58);
  }
  __int128 v53 = 0LL;
LABEL_40:
  uint64_t v11 = v63;
  v69[0] = _NSConcreteStackBlock;
  v69[1] = 3221225472LL;
  v69[2] = sub_1001226C0;
  v69[3] = &unk_1003D85D8;
  __int128 v22 = &v72;
  __int128 v23 = &v70;
  v72 = v7;
  v70 = v53;
  v71 = v26;
  v61 = v7;
  __int128 v24 = v53;
  dispatch_async(&_dispatch_main_q, v69);

LABEL_41:
}

  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(-[_PBScenePresentation scenePresenter](v14, "scenePresenter"));
  unsigned int v40 = (void *)objc_claimAutoreleasedReturnValue([v39 presentationView]);

  return v40;
}
}

id sub_1000311E4(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "_vpnBannerQueue_postVPNBannerForConfiguration:isActive:",  *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48));
}

void sub_1000312DC(uint64_t a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKeyedSubscript:NSKeyValueChangeNewKey]);
  uint64_t v3 = objc_opt_self(&OBJC_CLASS___NSNumber, v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  char isKindOfClass = objc_opt_isKindOfClass(v1, v4);

  if ((isKindOfClass & 1) != 0 && [v1 integerValue] == (id)3)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBBlackScreenRecoveryManager sharedInstance]( &OBJC_CLASS___PBBlackScreenRecoveryManager,  "sharedInstance"));
    [v6 dismiss];
  }
}

void sub_1000316E4(id a1)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT)) {
    sub_100272AF4();
  }
}

id sub_100031710(uint64_t a1)
{
  return [*(id *)(a1 + 32) _showSysdiagnoseIndication];
}

void sub_100031728(id a1)
{
  unint64_t v1 = objc_alloc_init(&OBJC_CLASS___PBIssueDataReporter);
  -[PBIssueDataReporter reportLatestIssueData](v1, "reportLatestIssueData");
}

void sub_100031758(id a1)
{
  unint64_t v1 = objc_alloc_init(&OBJC_CLASS___PBIssueDataReporter);
  -[PBIssueDataReporter reportLatestIssueData](v1, "reportLatestIssueData");
}

  ;
}

  ;
}

__CFString *sub_1000317AC(unint64_t a1)
{
  if (a1 >= 4) {
    unint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PBHIDButtonType(%lu)",  a1));
  }
  else {
    unint64_t v1 = off_1003D1550[a1];
  }
  return v1;
}

void sub_100031800(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  int v9 = a5;
  id v10 = sub_1000F6F4C();
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v12 = sub_1000317AC(a4);
    __int128 v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    v16[0] = 67109890;
    v16[1] = a1;
    __int16 v17 = 1024;
    int v18 = a2;
    __int16 v19 = 2114;
    uint64_t v20 = v13;
    __int16 v21 = 2048;
    uint64_t v22 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "forwardHIDButtonEventWithUsagePage: (0x%x, 0x%x) {type=%{public}@, senderID=0x%llx}",  (uint8_t *)v16,  0x22u);
  }

  if ((a4 & 1) != 0)
  {
    int v14 = (const void *)sub_100031970(a1, a2, a3, 1LL);
    v9[2](v9, v14);
    CFRelease(v14);
  }

  if ((a4 & 2) != 0)
  {
    id v15 = (const void *)sub_100031970(a1, a2, a3, 0LL);
    v9[2](v9, v15);
    CFRelease(v15);
  }
}

uint64_t sub_100031970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = mach_absolute_time();
  uint64_t KeyboardEvent = IOHIDEventCreateKeyboardEvent(kCFAllocatorDefault, v8, a1, a2, a4, 0LL);
  IOHIDEventSetSenderID(KeyboardEvent, a3);
  return KeyboardEvent;
}

void sub_1000319D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
}

void sub_1000319F4(id a1, __IOHIDEvent *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[BKSHIDEventDeferringEnvironment keyboardFocusEnvironment]( &OBJC_CLASS___BKSHIDEventDeferringEnvironment,  "keyboardFocusEnvironment"));
  BKSHIDEventSendToResolvedProcessForDeferringEnvironment(a2, v3);
}

void sub_100031A34(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  id v10 = sub_1000F6F4C();
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v12 = sub_1000317AC(a4);
    __int128 v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    v16[0] = 67110146;
    v16[1] = a1;
    __int16 v17 = 1024;
    int v18 = a2;
    __int16 v19 = 1024;
    int v20 = a5;
    __int16 v21 = 2114;
    uint64_t v22 = v13;
    __int16 v23 = 2048;
    uint64_t v24 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "sendHIDButtonEventWithUsagePage: (0x%x, 0x%x) {pid=%d, type=%{public}@, senderID=0x%llx}",  (uint8_t *)v16,  0x28u);
  }

  if ((a4 & 1) != 0)
  {
    int v14 = (const void *)sub_100031970(a1, a2, a3, 1LL);
    sub_100031B94((uint64_t)v14, a5);
    CFRelease(v14);
  }

  if ((a4 & 2) != 0)
  {
    id v15 = (const void *)sub_100031970(a1, a2, a3, 0LL);
    sub_100031B94((uint64_t)v15, a5);
    CFRelease(v15);
  }

void sub_100031B94(uint64_t a1, uint64_t a2)
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[BKSHIDEventDeferringEnvironment keyboardFocusEnvironment]( &OBJC_CLASS___BKSHIDEventDeferringEnvironment,  "keyboardFocusEnvironment"));
  BKSHIDEventSendToProcessAndFollowDeferringRules(a1, a2, 0LL, v4);
}

void sub_100031BE8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  id v9 = a5;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[FBProcessManager sharedInstance](&OBJC_CLASS___FBProcessManager, "sharedInstance"));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 applicationProcessesForBundleIdentifier:v9]);
  __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 firstObject]);

  if (v12)
  {
    sub_100031A34(a1, a2, a3, a4, (uint64_t)[v12 pid]);
  }

  else
  {
    id v13 = sub_1000F6F4C();
    int v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100272B34((uint64_t)v9, v14);
    }
  }
}

__IOHIDServiceClient *sub_100031CC4(__IOHIDServiceClient *result)
{
  uint64_t valuePtr = 0LL;
  if (result)
  {
    uint64_t result = (__IOHIDServiceClient *)IOHIDServiceClientGetRegistryID(result);
    if (result)
    {
      if (CFNumberGetValue(result, kCFNumberSInt64Type, &valuePtr)) {
        return (__IOHIDServiceClient *)valuePtr;
      }
      else {
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_100031D04(uint64_t a1, unsigned int a2, unsigned int a3)
{
  if (!a1) {
    return 0LL;
  }
  Children = (const __CFArray *)IOHIDEventGetChildren();
  if (!Children) {
    return 0LL;
  }
  id v6 = Children;
  if (CFArrayGetCount(Children) < 1) {
    return 0LL;
  }
  CFIndex v7 = 0LL;
  uint64_t v8 = a2;
  uint64_t v9 = a3;
  do
  {
    ValueAtIndex = CFArrayGetValueAtIndex(v6, v7);
    uint64_t IntegerValue = IOHIDEventGetIntegerValue(ValueAtIndex, 0x10000LL);
    uint64_t v12 = IOHIDEventGetIntegerValue(ValueAtIndex, 65537LL);
    BOOL v13 = IntegerValue == v8 && v12 == v9;
    uint64_t v14 = v13;
    if (v13) {
      break;
    }
    ++v7;
  }

  while (v7 < CFArrayGetCount(v6));
  return v14;
}

uint64_t sub_100031DB4(uint64_t a1, unsigned int a2)
{
  return sub_100031D04(a1, 0xFF13u, a2);
}

void sub_100032244(_Unwind_Exception *a1)
{
}

void sub_1000322A0()
{
}

void sub_1000322A8(uint64_t a1)
{
  unint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (([WeakRetained isComplete] & 1) == 0)
  {
    id v3 = sub_100083474();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      sub_100272C24(v4);
    }

    id v5 = objc_loadWeakRetained(v1);
    [v5 _failForTimeoutWithDescription:@"MediaRemote took too long to respond"];
  }
}

void sub_100032328(uint64_t a1, uint64_t a2, void *a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = sub_100083474();
  CFIndex v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
    sub_100272C64();
  }

  id v8 = a3;
  if (WeakRetained && ([WeakRetained isComplete] & 1) == 0)
  {
    objc_msgSend(WeakRetained, "_queue_handlePlaybackQueueResponse:error:", a2, v8);
    [WeakRetained satisfyMilestone:@"PBMRNowPlayingInfoResponseMilestone"];
  }
}

void sub_1000323C8(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = sub_100083474();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    sub_100272CC4();
  }

  if (WeakRetained && ([WeakRetained isComplete] & 1) == 0)
  {
    WeakRetained[4] = a2;
    [WeakRetained satisfyMilestone:@"PBMRGetPlaybackStateMilestone"];
  }
}

void sub_100032454(uint64_t a1, void *a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = sub_100083474();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    sub_100272D24();
  }

  if (WeakRetained && ([WeakRetained isComplete] & 1) == 0)
  {
    if (a2)
    {
      id v6 = [a2 copy];
      CFIndex v7 = (void *)WeakRetained[4];
      WeakRetained[4] = v6;
    }

    [WeakRetained satisfyMilestone:@"PBMRResolvePlayerPathMilestone"];
  }
}

id sub_10003275C(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1000327C0(id a1)
{
  unint64_t v1 = objc_alloc_init(&OBJC_CLASS___PBScreenSaverManager);
  uint64_t v2 = (void *)qword_100470048;
  qword_100470048 = (uint64_t)v1;
}

void sub_100032864(uint64_t a1)
{
  uint64_t v2 = objc_alloc(&OBJC_CLASS___FBSceneWorkspace);
  id v3 = NSStringFromClass(*(Class *)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = -[FBSceneWorkspace initWithIdentifier:](v2, "initWithIdentifier:", v4);
  id v6 = (void *)qword_100470058;
  qword_100470058 = (uint64_t)v5;
}

void sub_100032B4C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id location)
{
}

void sub_100032B9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  CFIndex v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  id v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  uint64_t v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  id v10 = NSStringFromClass(v9);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  6LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void **)(v13 + 48);
  *(void *)(v13 + 4_Block_object_dispose(va, 8) = v12;

  uint64_t v16 = objc_opt_self(&OBJC_CLASS___PBDefaultOpenAppTransitioner, v15);
  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  int v18 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v17]);

  [v18 addObserver:*(void *)(a1 + 32)];
  uint64_t v20 = objc_opt_self(&OBJC_CLASS___PBSiriManager, v19);
  __int16 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v21]);

  [v22 addObserver:*(void *)(a1 + 32)];
  __int16 v23 = *(void **)(a1 + 32);
  uint64_t v25 = objc_opt_self(&OBJC_CLASS___PBConferenceRoomDisplayManager, v24);
  unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
  id v27 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v26]);

  [v23 setConferenceRoomDisplayManager:v27];
}

void sub_100032D18(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained
    && BYSetupAssistantHasCompletedInitialRun([WeakRetained _updateActivationDelay]))
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      id v3 = (void *)objc_claimAutoreleasedReturnValue([v2[3] domain]);
      int v4 = 138412290;
      uint64_t v5 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Observer handler for domain %@ invoked. We notify the photo caching daemon...",  (uint8_t *)&v4,  0xCu);
    }

    [v2 _notifyPhotosSourcesDaemon];
  }
}

void sub_100032DF0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissScreenSaver];
}

void sub_100032E1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissScreenSaver];
}

void sub_100032FFC(_Unwind_Exception *a1)
{
}

void sub_100033018(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    if (v3) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v3, 1LL);
    }
  }

  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    uint64_t v5 = WeakRetained;
    if (WeakRetained)
    {
      [WeakRetained _activateScreenSaverForReason:*(void *)(a1 + 56) forPosterBundleID:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
    }

    else
    {
      uint64_t v6 = *(void *)(a1 + 40);
      if (v6) {
        (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0LL);
      }
    }
  }

void sub_100033414(_Unwind_Exception *a1)
{
}

void sub_100033430(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_1000334EC;
    v6[3] = &unk_1003D1610;
    id v7 = WeakRetained;
    id v8 = v3;
    [v7 canStopCRDWithResult:v6];
  }

  else
  {
    (*((void (**)(id, uint64_t))v3 + 2))(v3, 1LL);
  }
}

uint64_t sub_1000334EC(uint64_t a1, int a2)
{
  if (a2)
  {
    [*(id *)(a1 + 32) beginStopCRD];
    [*(id *)(a1 + 32) endStopCRD];
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_100033738( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10003375C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    int v4 = (void *)*((void *)WeakRetained + 4);
    *((void *)WeakRetained + 4) = 0LL;
  }

  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(void))(v5 + 16))();
  }
}

uint64_t sub_100034020(uint64_t a1, void *a2)
{
  if (![a2 pid])
  {
    id v3 = sub_100083D98();
    int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 136315138;
      id v7 = "-[PBScreenSaverManager _launchDemoAppIfNeededWithCompletion:]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%s - Demo app failed to run, falling back to screen saver",  (uint8_t *)&v6,  0xCu);
    }
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000341EC(id a1)
{
  uint64_t v1 = notify_register_check("com.apple.appletv.backgroundstate", &dword_100468C48);
  byte_100470068 = (_DWORD)v1 == 0;
  if ((_DWORD)v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_100083D98();
    int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100272F90(v2, v4, v5, v6, v7, v8, v9, v10);
    }
  }

  uint64_t v11 = objc_opt_new(&OBJC_CLASS___NSLock);
  uint64_t v12 = (void *)qword_100470070;
  qword_100470070 = (uint64_t)v11;
}

void sub_1000344D0(_Unwind_Exception *a1)
{
}

void sub_1000344EC(uint64_t a1)
{
  id v2 = sub_100083D98();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315138;
    uint64_t v6 = "-[PBScreenSaverManager _handleSiriDidChangeVisibleState:]_block_invoke";
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%s - Dismissing screensaver for fullscreen Siri",  (uint8_t *)&v5,  0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissScreenSaver];
}

void sub_100034C38(_Unwind_Exception *a1)
{
}

void sub_100034C84()
{
}

void sub_100034C8C()
{
}

void sub_100034C94(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = (id *)(a1 + 40);
  id v6 = a4;
  id WeakRetained = objc_loadWeakRetained(v5);
  unsigned int v8 = [v6 isEqualToString:@"canceled"];

  if (v8)
  {
    id v9 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16LL));
    uint64_t v10 = v9;
    if (v9 && (objc_opt_respondsToSelector(v9, "didCancelUserNotificationViewController:") & 1) != 0)
    {
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472LL;
      v11[2] = sub_100034D70;
      v11[3] = &unk_1003CFEB8;
      v11[4] = *(void *)(a1 + 32);
      v11[5] = WeakRetained;
      dispatch_async(&_dispatch_main_q, v11);
    }
  }
}

void sub_100034D70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16LL));
  [WeakRetained didCancelUserNotificationViewController:*(void *)(a1 + 40)];
}

CFStringRef sub_100034DB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  uint64_t v3 = WeakRetained[7];
  if (v3)
  {
    WeakRetained[7] = v3 - 1;
    objc_msgSend(WeakRetained, "_showTextEntryViewControllerForTextField:");
    int v4 = @"text field";
  }

  else
  {
    int v4 = @"canceled";
  }

  return v4;
}

CFStringRef sub_100034E10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showTextEntryViewControllerForTextField:WeakRetained[7]];

  return @"text field";
}

NSString *__cdecl sub_100034E50(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)@"canceled";
}

CFStringRef sub_100034E5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [v5 tag];
  if (v7 == (id)-1LL)
  {
    ++WeakRetained[7];
    objc_msgSend(WeakRetained, "_showTextEntryViewControllerForTextField:");
    uint64_t v15 = @"text field";
    goto LABEL_14;
  }

  id v8 = v7;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained notification]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained userValues]);
  [v9 setTextFieldEnteredValues:v10];

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained notification]);
  signed int v12 = [v11 dialogDefaultButtonIndex];

  if (v8 == (id)2)
  {
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained notification]);
    unsigned int v14 = [v13 defaultButtonIndex];
  }

  else if (v8 == (id)1)
  {
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained notification]);
    unsigned int v14 = [v13 alternateButtonIndex];
  }

  else
  {
    if (v8) {
      goto LABEL_10;
    }
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained notification]);
    unsigned int v14 = [v13 otherButtonIndex];
  }

  signed int v12 = v14;

LABEL_10:
  id v16 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16LL));
  __int16 v17 = v16;
  if (v16 && (objc_opt_respondsToSelector(v16, "userNotificationViewController:didSelectButtonIndex:") & 1) != 0)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10003502C;
    block[3] = &unk_1003D1718;
    id v20 = v17;
    __int16 v21 = WeakRetained;
    uint64_t v22 = v12;
    dispatch_async(&_dispatch_main_q, block);
  }

  uint64_t v15 = @"submitting";
LABEL_14:

  return v15;
}

id sub_10003502C(uint64_t a1)
{
  return [*(id *)(a1 + 32) userNotificationViewController:*(void *)(a1 + 40) didSelectButtonIndex:*(void *)(a1 + 48)];
}

void sub_1000350A4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) notification]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 alertHeader]);

  int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) notification]);
  id v5 = (id)objc_claimAutoreleasedReturnValue([v4 alertMessage]);

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) notification]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 textFieldTitles]);
  id v8 = [v7 count];

  if ((uint64_t)v8 > *(void *)(a1 + 40))
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) notification]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 textFieldTitles]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectAtIndex:*(void *)(a1 + 40)]);

    if (v5)
    {
      uint64_t v12 = objc_claimAutoreleasedReturnValue([v5 stringByAppendingFormat:@"\n%@", v11]);

      id v5 = (id)v12;
    }

    else
    {
      id v5 = v11;
    }
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(a1 + 32) + 64) objectAtIndex:*(void *)(*(void *)(a1 + 32) + 56)]);
  if (!v13)
  {
    unsigned int v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) notification]);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 textFieldInitialValues]);
  }

  id v16 = (void *)objc_opt_new(&OBJC_CLASS___TVSUITextEntryController);
  [v16 setDelegate:*(void *)(a1 + 32)];
  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 textField]);
  [v17 setText:v13];
  [v17 setAutocapitalizationType:0];
  [v17 setAutocorrectionType:1];
  [v17 setEnablesReturnKeyAutomatically:1];
  int v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) notification]);
  objc_msgSend(v17, "setKeyboardType:", objc_msgSend(v18, "keyboardTypeForTextField:", *(void *)(a1 + 40)));

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) notification]);
  objc_msgSend(v17, "setSecureTextEntry:", objc_msgSend(v19, "isSecureTextField:", *(void *)(a1 + 40)));

  if (*(void *)(*(void *)(a1 + 32) + 24LL) == 2LL) {
    uint64_t v20 = 1LL;
  }
  else {
    uint64_t v20 = 2LL;
  }
  [v17 setKeyboardAppearance:v20];
  __int16 v21 = (void *)objc_opt_new(&OBJC_CLASS___TVSUITextEntryHeaderView);
  if (v3)
  {
    uint64_t v22 = objc_alloc(&OBJC_CLASS___NSAttributedString);
    __int16 v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _titleStringAttributes]);
    uint64_t v24 = -[NSAttributedString initWithString:attributes:](v22, "initWithString:attributes:", v3, v23);
    [v21 setTitle:v24];
  }

  if (v5)
  {
    uint64_t v25 = objc_alloc(&OBJC_CLASS___NSAttributedString);
    unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _messageStringAttributes]);
    id v27 = -[NSAttributedString initWithString:attributes:](v25, "initWithString:attributes:", v5, v26);
    [v21 setMessage:v27];
  }

  [v16 setTopAccessoryView:v21];
  uint64_t v30 = 0x7FFFFFFFFFFFFFFFLL;
  int v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _buttonsForTextField:*(void *)(a1 + 40) defaultButtonIndex:&v30]);
  id v29 = -[PBUserNotificationTextEntryButtonView initWithButtons:]( objc_alloc(&OBJC_CLASS___PBUserNotificationTextEntryButtonView),  "initWithButtons:",  v28);
  -[PBUserNotificationTextEntryButtonView setDelegate:](v29, "setDelegate:", *(void *)(a1 + 32));
  -[PBUserNotificationTextEntryButtonView setDefaultButtonIndex:](v29, "setDefaultButtonIndex:", v30);
  [v16 setBottomAccessoryView:v29];
  [*(id *)(a1 + 32) _showChildViewController:v16];
}

void sub_100035C14(id a1)
{
  v6[0] = NSFontAttributeName;
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[UIFont preferredFontForTextStyle:]( &OBJC_CLASS___UIFont,  "preferredFontForTextStyle:",  UIFontTextStyleTitle3));
  v7[0] = v1;
  v6[1] = NSForegroundColorAttributeName;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.9));
  v7[1] = v2;
  v6[2] = NSBackgroundColorAttributeName;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](&OBJC_CLASS___UIColor, "clearColor"));
  v7[2] = v3;
  uint64_t v4 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  3LL));
  id v5 = (void *)qword_100470080;
  qword_100470080 = v4;
}

void sub_100035D70(id a1)
{
  v6[0] = NSFontAttributeName;
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[UIFont preferredFontForTextStyle:]( &OBJC_CLASS___UIFont,  "preferredFontForTextStyle:",  UIFontTextStyleBody));
  v7[0] = v1;
  v6[1] = NSForegroundColorAttributeName;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.9));
  v7[1] = v2;
  v6[2] = NSBackgroundColorAttributeName;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](&OBJC_CLASS___UIColor, "clearColor"));
  v7[2] = v3;
  uint64_t v4 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  3LL));
  id v5 = (void *)qword_100470090;
  qword_100470090 = v4;
}

void sub_1000362C0(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[4] addObserver:WeakRetained];
    [v2[5] addObserver:v2];
  }
}

id sub_1000368AC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_mainQueue_releasePausedBulletinsAssertion");
}

void sub_1000369A4(uint64_t a1)
{
  if (*(void *)(a1 + 56)) {
    goto LABEL_2;
  }
  __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) profiles]);
  id v22 = [v21 count];

  uint64_t v23 = *(void *)(a1 + 40);
  if (v22 == (id)1)
  {
    if (+[PBProfileBulletinController _didShowWelcomeBackBulletinForProfile:]( &OBJC_CLASS___PBProfileBulletinController,  "_didShowWelcomeBackBulletinForProfile:",  v23))
    {
      goto LABEL_13;
    }
  }

  else if (!+[PBProfileBulletinController _shouldShowWelcomeBackBulletinForProfile:]( &OBJC_CLASS___PBProfileBulletinController,  "_shouldShowWelcomeBackBulletinForProfile:",  v23))
  {
LABEL_13:
    objc_msgSend(*(id *)(a1 + 48), "_queue_releasePausedBulletinsAssertion");
    return;
  }

LABEL_2:
  id v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pb_personNameComponents"));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "up_vocativeName"));
  if (v3 || (uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "up_shortName"))) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) welcomeBulletinProfilePictureDataForProfile:*(void *)(a1 + 40)]);
    [v4 setObject:v5 forKeyedSubscript:PBSSystemBulletinImageDataKey];

    [v4 setObject:&__kCFBooleanTrue forKeyedSubscript:PBSWelcomeBackBulletinKey];
    [v4 setObject:v2 forKeyedSubscript:PBSWelcomeBackBulletinPersonNameComponentsKey];
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 64)));
    [v4 setObject:v6 forKeyedSubscript:@"_PBBulletinInsertAtFrontOfQueueKey"];

    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue( [v7 localizedStringForKey:@"WelcomeBackBulletinFirstNameTitle" value:&stru_1003E2910 table:@"Localizable-UserProfiles"]);

    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( [v9 localizedStringForKey:@"WelcomeBackBulletinShortFormFooterMessage" value:&stru_1003E2910 table:@"Localizable-UserProfiles"]);
    [v4 setObject:v10 forKeyedSubscript:PBSSystemBulletinFooterMessageKey];

    [v4 setObject:&off_1003FD6E0 forKeyedSubscript:PBSSystemBulletinTimeoutKey];
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](&OBJC_CLASS___NSString, "localizedStringWithFormat:", v8, v3));
    [v4 setObject:v11 forKeyedSubscript:PBSSystemBulletinTitleKey];

    uint64_t v12 = objc_alloc_init(&OBJC_CLASS___PBSBulletin);
    -[PBSBulletin setServiceIdentifier:](v12, "setServiceIdentifier:", PBSSystemBulletinServiceName);
    -[PBSBulletin setViewControllerClassName:]( v12,  "setViewControllerClassName:",  PBSSystemBulletinViewControllerClassName);
    -[PBSBulletin setMessage:](v12, "setMessage:", v4);
    uint64_t v13 = *(void *)(a1 + 48);
    unsigned int v14 = *(void **)(v13 + 72);
    if (v14)
    {
      unsigned __int8 v15 = [v14 isEqual:v12];
      uint64_t v13 = *(void *)(a1 + 48);
      if ((v15 & 1) == 0)
      {
        [*(id *)(v13 + 56) dismissBulletin:*(void *)(v13 + 72)];
        uint64_t v13 = *(void *)(a1 + 48);
      }
    }

    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472LL;
    v26[2] = sub_100036D50;
    v26[3] = &unk_1003CFF08;
    v26[4] = v13;
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472LL;
    v24[2] = sub_100036D68;
    v24[3] = &unk_1003D0048;
    uint64_t v25 = objc_retainBlock(v26);
    id v16 = v25;
    __int16 v17 = objc_retainBlock(v24);
    uint64_t v18 = *(void *)(a1 + 48);
    uint64_t v19 = *(void **)(v18 + 72);
    *(void *)(v18 + 72) = v12;
    uint64_t v20 = v12;

    [*(id *)(*(void *)(a1 + 48) + 56) _presentBulletin:v20 prepared:v16 withCompletion:v17];
    [(id)objc_opt_class(*(void *)(a1 + 48)) _setDidShowWelcomeBackBulletinForProfile:*(void *)(a1 + 40)];
  }

  else
  {
    objc_msgSend(*(id *)(a1 + 48), "_queue_releasePausedBulletinsAssertion");
  }
}

  id v2 = [[PBSUserProfileAccountInfo alloc] initWithAccountStore:*(void *)(*(void *)(a1 + 48) + 48) userProfile:*(void *)(a1 + 40)];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 _formattedVocativeName]);
  if (v3 || (uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 formattedShortName])) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 48) welcomeBulletinProfilePictureDataForUserProfile:*(void *)(a1 + 40)]);
    [v4 setObject:v5 forKeyedSubscript:PBSSystemBulletinImageDataKey];

    [v4 setObject:&__kCFBooleanTrue forKeyedSubscript:PBSWelcomeBackBulletinKey];
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v2 personNameComponents]);
    [v4 setObject:v6 forKeyedSubscript:PBSWelcomeBackBulletinPersonNameComponentsKey];

    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 64)));
    [v4 setObject:v7 forKeyedSubscript:@"_PBBulletinInsertAtFrontOfQueueKey"];

    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue( [v8 localizedStringForKey:@"WelcomeBackBulletinFirstNameTitle" value:&stru_1003E2910 table:@"Localizable-UserProfiles"]);

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( [v10 localizedStringForKey:@"WelcomeBackBulletinShortFormFooterMessage" value:&stru_1003E2910 table:@"Localizable-UserProfiles"]);
    [v4 setObject:v11 forKeyedSubscript:PBSSystemBulletinFooterMessageKey];

    [v4 setObject:&off_1003FDB00 forKeyedSubscript:PBSSystemBulletinTimeoutKey];
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](&OBJC_CLASS___NSString, "localizedStringWithFormat:", v9, v3));
    [v4 setObject:v12 forKeyedSubscript:PBSSystemBulletinTitleKey];

    uint64_t v13 = objc_alloc_init(&OBJC_CLASS___PBSBulletin);
    -[PBSBulletin setServiceIdentifier:](v13, "setServiceIdentifier:", PBSSystemBulletinServiceName);
    -[PBSBulletin setViewControllerClassName:]( v13,  "setViewControllerClassName:",  PBSSystemBulletinViewControllerClassName);
    -[PBSBulletin setMessage:](v13, "setMessage:", v4);
    unsigned int v14 = *(void *)(a1 + 48);
    unsigned __int8 v15 = *(void **)(v14 + 104);
    if (v15)
    {
      id v16 = [v15 isEqual:v13];
      unsigned int v14 = *(void *)(a1 + 48);
      if ((v16 & 1) == 0)
      {
        [*(id *)(v14 + 160) dismissBulletin:*(void *)(v14 + 104)];
        unsigned int v14 = *(void *)(a1 + 48);
      }
    }

    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472LL;
    v27[2] = sub_1000D3D64;
    v27[3] = &unk_1003CFF08;
    v27[4] = v14;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472LL;
    v25[2] = sub_1000D3D98;
    v25[3] = &unk_1003D0048;
    unsigned int v26 = objc_retainBlock(v27);
    __int16 v17 = v26;
    uint64_t v18 = objc_retainBlock(v25);
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v20 = *(void **)(v19 + 104);
    *(void *)(v19 + 104) = v13;
    __int16 v21 = v13;

    [*(id *)(*(void *)(a1 + 48) + 160) _presentBulletin:v21 prepared:v17 withCompletion:v18];
    sub_1000D3DB4((uint64_t)&OBJC_CLASS___PBLegacyUserProfileManager, *(void **)(a1 + 40));
  }

  else
  {
    sub_1000D37D8(*(void *)(a1 + 48));
  }
}

id sub_100036D50(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_mainQueue_releasePausedBulletinsAssertion");
}

uint64_t sub_100036D68(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return BSDispatchMain(*(void *)(result + 32));
  }
  return result;
}

void sub_100037088( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

id sub_1000370B4()
{
  if (qword_1004700A8 != -1) {
    dispatch_once(&qword_1004700A8, &stru_1003D17F0);
  }
  return (id)qword_1004700A0;
}

void sub_1000370F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_1000370B4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      id v8 = "-[PBProfileBulletinController presentationElementFocusCoordinator:didUpdateToActiveLayoutLevel:fromLevel:]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "%s: Automatic welcome back bulletin delay timer fired.",  buf,  0xCu);
    }

    [*((id *)WeakRetained + 3) invalidate];
    uint64_t v4 = (void *)*((void *)WeakRetained + 3);
    *((void *)WeakRetained + 3) = 0LL;

    id v5 = (dispatch_queue_s *)*((void *)WeakRetained + 6);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100037200;
    block[3] = &unk_1003CFF08;
    void block[4] = WeakRetained;
    dispatch_sync(v5, block);
  }
}

id sub_100037200(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_queue_presentWelcomeBackBulletinWithReason:", 0);
}

id sub_10003721C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)v2[9];
  if (v3)
  {
    v2[9] = 0LL;
    id v4 = v3;

    [*(id *)(*(void *)(a1 + 32) + 56) dismissBulletin:v4];
    id v2 = *(void **)(a1 + 32);
  }

  return objc_msgSend(v2, "_queue_releasePausedBulletinsAssertion");
}

void sub_1000372FC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 72) identifier]);
  int v4 = BSEqualStrings(v2, v3);

  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    id v6 = *(void **)(v5 + 72);
    *(void *)(v5 + 72) = 0LL;
  }

void sub_1000373EC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "ProfileBulletinController");
  id v2 = (void *)qword_1004700A0;
  qword_1004700A0 = (uint64_t)v1;
}

void sub_1000379BC(uint64_t a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(a1 + 32),  "pb_identityForApplicationIdentifier:role:",  @"com.apple.HeadBoard",  @"default"));
  id v2 = (void *)qword_1004700B0;
  qword_1004700B0 = v1;
}

void sub_100037B88(uint64_t a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(a1 + 32),  "pb_identityForApplicationIdentifier:role:",  @"com.apple.IdleScreen",  @"screensaver"));
  id v2 = (void *)qword_1004700C0;
  qword_1004700C0 = v1;
}

void sub_100037C88(uint64_t a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(a1 + 32),  "pb_identityForApplicationIdentifier:role:",  @"com.apple.TVWatchList",  @"default"));
  id v2 = (void *)qword_1004700D0;
  qword_1004700D0 = v1;
}

void sub_100037D88(uint64_t a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(a1 + 32),  "pb_identityForApplicationIdentifier:role:",  @"com.apple.TVConferenceRoomDisplay",  @"default"));
  id v2 = (void *)qword_1004700E0;
  qword_1004700E0 = v1;
}

void sub_100037E78( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

  ;
}

  ;
}

void sub_1000388E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = 0LL;
}

uint64_t sub_100038A24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 40) + 32LL) + 16LL))();
}

uint64_t sub_100038B58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 40) + 32LL) + 16LL))();
}

void sub_100039584( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, id a24)
{
}

id sub_1000395B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

void sub_1000395D4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    [*(id *)(a1 + 32) removeFromSuperview];
    id v3 = objc_loadWeakRetained(WeakRetained + 2);
    id v4 = WeakRetained[1];
    WeakRetained[1] = v3;

    objc_storeWeak(WeakRetained + 2, 0LL);
  }

  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    (*(void (**)(void))(v5 + 16))();
  }
}

void sub_100039658(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = (void *)*((void *)WeakRetained + 3);
    *((void *)WeakRetained + 3) = 0LL;
  }

  (*(void (**)(void, BOOL))(*(void *)(a1 + 32) + 16LL))(*(void *)(a1 + 32), a2 == 0);
}

void sub_1000398F0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100039908(uint64_t a1, uint64_t a2)
{
  uint64_t result = objc_opt_isKindOfClass(a2, *(void *)(a1 + 40));
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result & 1;
  return result;
}

id sub_100039944(__int16 a1, char a2, char a3, __int16 a4, char a5)
{
  uint64_t v10 = -[NSMutableString initWithString:](objc_alloc(&OBJC_CLASS___NSMutableString), "initWithString:", @"{\n");
  uint64_t v11 = -[NSMutableArray initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableArray), "initWithCapacity:", 16LL);
  id v32 = v10;
  -[NSMutableString appendFormat:](v10, "appendFormat:", @"  Resolutions: ");
  __int16 v12 = 1;
  do
  {
    if (((unsigned __int16)v12 & (unsigned __int16)~a1) == 0)
    {
      uint64_t v13 = @"4K";
      switch(v12)
      {
        case 1:
          break;
        case 2:
          uint64_t v13 = @"1080";
          break;
        case 3:
        case 5:
        case 6:
        case 7:
          goto LABEL_8;
        case 4:
          uint64_t v13 = @"720";
          break;
        case 8:
          uint64_t v13 = @"PAL";
          break;
        default:
          if (v12 == 16)
          {
            uint64_t v13 = @"NTSC";
          }

          else if (v12 == 32)
          {
            uint64_t v13 = @"8K";
          }

          else
          {
LABEL_8:
            uint64_t v13 = &stru_1003E2910;
          }

          break;
      }

      -[NSMutableArray addObject:](v11, "addObject:", v13);
    }

    BOOL v14 = (v12 & 0x17) == 0;
    v12 *= 2;
  }

  while (!v14);
  unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v11, "componentsJoinedByString:", @"|"));
  -[NSMutableString appendString:](v10, "appendString:", v15);

  -[NSMutableString appendString:](v10, "appendString:", @",\n");
  -[NSMutableArray removeAllObjects](v11, "removeAllObjects");
  -[NSMutableString appendString:](v10, "appendString:", @"  Refresh Rates: ");
  unsigned __int8 v16 = 1;
  do
  {
    if (v16 <= 0xFu)
    {
      __int16 v17 = @"NTSC Prog.";
      switch(v16)
      {
        case 1u:
          goto LABEL_32;
        case 2u:
          __int16 v17 = @"NTSC Int.";
          break;
        case 4u:
          __int16 v17 = @"NTSC Film";
          break;
        case 8u:
          __int16 v17 = @"PAL Prog.";
          break;
        default:
          goto LABEL_31;
      }

      goto LABEL_32;
    }

    if (v16 > 0x3Fu)
    {
      if (v16 == 64)
      {
        __int16 v17 = @"60Hz";
      }

      else
      {
        if (v16 != 128)
        {
LABEL_31:
          __int16 v17 = &stru_1003E2910;
          goto LABEL_32;
        }

        __int16 v17 = @"120Hz";
      }
    }

    else if (v16 == 16)
    {
      __int16 v17 = @"PAL Int.";
    }

    else
    {
      if (v16 != 32) {
        goto LABEL_31;
      }
      __int16 v17 = @"Film";
    }

LABEL_32:
    -[NSMutableArray addObject:](v11, "addObject:", v17);
LABEL_33:
    v16 *= 2;
  }

  while ((v16 & 0xFE) != 0);
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v11, "componentsJoinedByString:", @"|"));
  -[NSMutableString appendString:](v10, "appendString:", v18);

  -[NSMutableString appendString:](v10, "appendString:", @",\n");
  -[NSMutableArray removeAllObjects](v11, "removeAllObjects");
  -[NSMutableString appendString:](v10, "appendString:", @"  Color Gamuts: ");
  char v19 = 1;
  do
  {
    if ((v19 & ~a3) == 0)
    {
      uint64_t v20 = &stru_1003E2910;
      -[NSMutableArray addObject:](v11, "addObject:", v20);
    }

    BOOL v14 = (v19 & 3) == 0;
    v19 *= 2;
  }

  while (!v14);
  __int16 v21 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v11, "componentsJoinedByString:", @"|"));
  -[NSMutableString appendString:](v32, "appendString:", v21);

  -[NSMutableString appendString:](v32, "appendString:", @",\n");
  -[NSMutableArray removeAllObjects](v11, "removeAllObjects");
  -[NSMutableString appendString:](v32, "appendString:", @"  Display Modes: ");
  unsigned __int16 v22 = 1;
  while (2)
  {
    if ((v22 & (unsigned __int16)~a4) == 0)
    {
      if (v22 > 0x3Fu)
      {
        if (v22 > 0x1FFu)
        {
          switch(v22)
          {
            case 0x200u:
              uint64_t v23 = @"HDR 10 4:2:0";
              goto LABEL_66;
            case 0x400u:
              uint64_t v23 = @"HDR 10 RGB";
              goto LABEL_66;
            case 0x800u:
              uint64_t v23 = @"HDR 10+";
              goto LABEL_66;
          }
        }

        else
        {
          switch(v22)
          {
            case 0x40u:
              uint64_t v23 = @"DolbyVision LL";
              goto LABEL_66;
            case 0x80u:
              uint64_t v23 = @"HDR 10 4:4:4";
              goto LABEL_66;
            case 0x100u:
              uint64_t v23 = @"HDR 10 4:2:2";
              goto LABEL_66;
          }
        }

      if ((v27 & 1) != 0)
      {
        __int16 v12 = v52;
LABEL_34:

        goto LABEL_35;
      }

      if (v28 == 3)
      {
        __int16 v12 = v52;
      }

      else
      {
        __int16 v12 = v52;
        if (v28) {
          goto LABEL_45;
        }
      }

  if (v7)
  {
    id v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    [v42 postNotificationName:@"kPBInternationalizationLocaleDidChangeNotification" object:self];
  }
}

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  __break(1u);
  return result;
}

LABEL_60:
        uint64_t v23 = &stru_1003E2910;
        goto LABEL_66;
      }

      uint64_t v23 = @"YCbCr 4:4:4";
      switch(v22)
      {
        case 1u:
          break;
        case 2u:
          uint64_t v23 = @"YCbCr 4:2:2";
          break;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
          goto LABEL_60;
        case 4u:
          uint64_t v23 = @"YCbCr 4:2:0";
          break;
        case 8u:
          uint64_t v23 = @"RGB High";
          break;
        default:
          if (v22 == 16)
          {
            uint64_t v23 = @"RGB Low";
          }

          else
          {
            if (v22 != 32) {
              goto LABEL_60;
            }
            uint64_t v23 = @"DolbyVision";
          }

          break;
      }

LABEL_66:
      -[NSMutableArray addObject:](v11, "addObject:", v23);
    }

    BOOL v14 = (v22 & 0x7FF) == 0;
    v22 *= 2;
    if (!v14) {
      continue;
    }
    break;
  }

  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v11, "componentsJoinedByString:", @"|"));
  -[NSMutableString appendString:](v32, "appendString:", v24);

  -[NSMutableString appendString:](v32, "appendString:", @",\n");
  -[NSMutableArray removeAllObjects](v11, "removeAllObjects");
  -[NSMutableString appendString:](v32, "appendString:", @"  QMS/VRR: ");
  int v25 = 1;
  do
  {
    int v26 = v25;
    if ((v25 & ~a5) == 0)
    {
      else {
        id v27 = &stru_1003E2910;
      }
      else {
        int v28 = v27;
      }
      -[NSMutableArray addObject:](v11, "addObject:", v28);
    }

    int v25 = 2 * v26;
  }

  while ((v26 & 1) != 0);
  id v29 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v11, "componentsJoinedByString:", @"|"));
  -[NSMutableString appendString:](v32, "appendString:", v29);

  -[NSMutableString appendString:](v32, "appendString:", @"\n");
  -[NSMutableArray removeAllObjects](v11, "removeAllObjects");
  -[NSMutableString appendString:](v32, "appendString:", @"}");
  id v30 = -[NSMutableString copy](v32, "copy");

  return v30;
}

id sub_100039F24(__int16 a1, char a2, char a3, __int16 a4, char a5)
{
  uint64_t v10 = -[NSMutableData initWithLength:](objc_alloc(&OBJC_CLASS___NSMutableData), "initWithLength:", 7LL);
  uint64_t v11 = -[NSMutableData mutableBytes](v10, "mutableBytes");
  *uint64_t v11 = a1;
  v11[1] = a4;
  *((_BYTE *)v11 + 4) = a3;
  *((_BYTE *)v11 + 5) = a2;
  *((_BYTE *)v11 + 6) = a5;
  id v12 = -[NSMutableData copy](v10, "copy");

  return v12;
}

BOOL sub_100039FAC(void *a1, _WORD *a2, _BYTE *a3, _BYTE *a4, _WORD *a5, _BYTE *a6)
{
  id v11 = a1;
  id v12 = [v11 length];
  if ((unint64_t)v12 >= 6)
  {
    id v13 = v11;
    BOOL v14 = [v13 bytes];
    *a2 = *v14;
    *a5 = v14[1];
    *a4 = *((_BYTE *)v14 + 4);
    *a3 = *((_BYTE *)v14 + 5);
  }

  return (unint64_t)v12 > 5;
}

uint64_t start(int a1, char **a2)
{
  uint64_t v6 = mach_absolute_time();
  mach_timebase_info(&info);
  LODWORD(v2) = info.numer;
  LODWORD(v3) = info.denom;
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "---- ======== The system app is launching! Long live the system app! ======== ----",  buf,  2u);
  }

  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    double v7 = (double)v2 / (double)v3 / 1000000000.0;
    *(_DWORD *)buf = 134219008;
    uint64_t v43 = v6;
    __int16 v44 = 2048;
    double v45 = v7 * (double)v6;
    __int16 v46 = 2048;
    double v47 = 1.0 / v7;
    __int16 v48 = 1024;
    uint32_t numer = info.numer;
    __int16 v50 = 1024;
    uint32_t denom = info.denom;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "---- ======== (mach_absolute_time = %llu ticks, %.06f sec [%.03f ticks/sec, %u / %u]) ======== ----",  buf,  0x2Cu);
  }

  dword_1004700F0 = CARenderServerGetServerPort(0LL);
  if (!dword_1004700F0) {
    __break(1u);
  }
  NSSetUncaughtExceptionHandler((NSUncaughtExceptionHandler *)sub_10003A494);
  id v8 = objc_autoreleasePoolPush();
  uint64_t v10 = PBSBootLifecycleLog(v8, v9);
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_signpost_enabled(v11))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v11,  OS_SIGNPOST_INTERVAL_BEGIN,  0xEEEEB0B5B2B2EEEELL,  "Increment Boot Count",  "",  buf,  2u);
  }

  sub_1001C91D0();
  uint64_t v14 = PBSBootLifecycleLog(v12, v13);
  unsigned __int8 v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
  if (os_signpost_enabled(v15))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v15,  OS_SIGNPOST_INTERVAL_END,  0xEEEEB0B5B2B2EEEELL,  "Increment Boot Count",  "",  buf,  2u);
  }

  objc_autoreleasePoolPop(v8);
  unsigned __int8 v16 = objc_autoreleasePoolPush();
  uint64_t v18 = PBSBootLifecycleLog(v16, v17);
  char v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
  if (os_signpost_enabled(v19))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v19,  OS_SIGNPOST_INTERVAL_BEGIN,  0xEEEEB0B5B2B2EEEELL,  "Swizzle Localization Implementations",  "",  buf,  2u);
  }

  BSSetMainThreadPriorityFixedForUI(1LL);
  sub_1001C30F4();
  uint64_t v22 = PBSBootLifecycleLog(v20, v21);
  uint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
  if (os_signpost_enabled(v23))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v23,  OS_SIGNPOST_INTERVAL_END,  0xEEEEB0B5B2B2EEEELL,  "Swizzle Localization Implementations",  "",  buf,  2u);
  }

  objc_autoreleasePoolPop(v16);
  uint64_t v26 = PBSBootLifecycleLog(v24, v25);
  id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
  if (os_signpost_enabled(v27))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v27,  OS_SIGNPOST_INTERVAL_BEGIN,  0xEEEEB0B5B2B2EEEELL,  "FBS Shell Init",  "",  buf,  2u);
  }

  id v28 = (id)FBSystemShellInitialize(&stru_1003D18E8);
  uint64_t v30 = PBSBootLifecycleLog(v28, v29);
  id v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
  if (os_signpost_enabled(v31))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v31,  OS_SIGNPOST_INTERVAL_END,  0xEEEEB0B5B2B2EEEELL,  "FBS Shell Init",  "",  buf,  2u);
  }

  id v32 = objc_autoreleasePoolPush();
  id v33 = (objc_class *)objc_opt_class(&OBJC_CLASS___PineBoard);
  uint64_t v34 = NSStringFromClass(v33);
  id v35 = (NSString *)objc_claimAutoreleasedReturnValue(v34);
  __int128 v36 = (objc_class *)objc_opt_class(&OBJC_CLASS___PBAppDelegate);
  uint64_t v37 = NSStringFromClass(v36);
  id v38 = (NSString *)objc_claimAutoreleasedReturnValue(v37);
  objc_autoreleasePoolPop(v32);
  uint64_t v39 = UIApplicationMain(a1, a2, v35, v38);

  return v39;
}

void sub_10003A494(void *a1)
{
  id v1 = a1;
  mach_port_type_t ptype = 0;
  if (mach_port_type(mach_task_self_, dword_1004700F0, &ptype)) {
    BOOL v2 = 1;
  }
  else {
    BOOL v2 = (ptype & 0x70000) == 0;
  }
  if (v2)
  {
    do
      unsigned __int8 v3 = __ldaxr(byte_1004700F4);
    while (__stlxr(1u, byte_1004700F4));
    if ((v3 & 1) == 0) {
      exit(1);
    }
    _Exit(1);
  }
}

void sub_10003A51C(id a1, FBMutableSystemShellInitializationOptions *a2)
{
  BOOL v2 = a2;
  -[FBMutableSystemShellInitializationOptions setResetDarkBootState:](v2, "setResetDarkBootState:", 1LL);
  -[FBMutableSystemShellInitializationOptions setSystemSleepInterval:](v2, "setSystemSleepInterval:", 5.0);
  -[FBMutableSystemShellInitializationOptions setIndependentWatchdogPortName:]( v2,  "setIndependentWatchdogPortName:",  @"com.apple.PineBoard.oswatchdog");
  -[FBMutableSystemShellInitializationOptions setRegisterAdditionalServicesBlock:]( v2,  "setRegisterAdditionalServicesBlock:",  &stru_1003D1908);
}

void sub_10003A574(id a1)
{
}

PBApplicationProcessStateInfo *__cdecl sub_10003A590(id a1, BSProcessHandle *a2)
{
  BOOL v2 = a2;
  unsigned __int8 v3 = -[PBApplicationProcessStateInfo initWithProcessHandle:]( objc_alloc(&OBJC_CLASS___PBApplicationProcessStateInfo),  "initWithProcessHandle:",  v2);

  return v3;
}

void sub_10003A6F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void *sub_10003A714(void *a1, void *a2)
{
  unsigned __int8 v3 = a1;
  id v4 = a2;
  if (v4)
  {
    uint64_t v5 = v4;
    if (v3)
    {
      id v6 = [v4 copy];
      double v7 = (void *)v3[6];
      v3[6] = v6;

      *((_DWORD *)v3 + 2) = 0;
      objc_initWeak(&location, v3);
      id v8 = (objc_class *)objc_opt_class(v3);
      uint64_t v9 = NSStringFromClass(v8);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@(%p)",  v10,  v3));

      uint64_t v12 = &_dispatch_main_q;
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472LL;
      _DWORD v18[2] = sub_10003C4E8;
      v18[3] = &unk_1003D04B8;
      objc_copyWeak(&v19, &location);
      uint64_t v13 = BSLogAddStateCaptureBlockForUserRequestsOnlyWithTitle(&_dispatch_main_q, v11, v18);
      uint64_t v14 = objc_claimAutoreleasedReturnValue(v13);
      unsigned __int8 v15 = (void *)v3[3];
      v3[3] = v14;

      objc_destroyWeak(&v19);
      objc_destroyWeak(&location);
    }

    return v3;
  }

  else
  {
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"domain != ((void *)0)"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1002733C0((uint64_t)v17);
    }
    uint64_t result = (void *)_bs_set_crash_log_message([v17 UTF8String]);
    __break(0);
  }

  return result;
}

void sub_10003A8B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10003A8D8(uint64_t a1, void *a2)
{
  BOOL v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleStateChange:v3];
}

void sub_10003AECC(void *a1)
{
  if (a1[4])
  {
    BOOL v2 = (void *)a1[5];
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:"));
    [v2 appendString:v3 withName:@"childAssertion"];
  }

  if (a1[7])
  {
    id v4 = (void *)a1[5];
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:"));
    [v4 appendString:v5 withName:@"parentAssertion"];
  }

id sub_10003AF84(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = objc_msgSend((id)objc_opt_self(a1, v4), "_sharedInstance");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  double v7 = (void *)objc_claimAutoreleasedReturnValue([v6 _assertionForDomain:v3]);

  if (v7)
  {

    return v7;
  }

  else
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Requested domain must be found in the allowlist"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100273498();
    }
    id result = (id) _bs_set_crash_log_message([v9 UTF8String]);
    __break(0);
  }

  return result;
}

void sub_10003B73C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  BOOL v2 = (void *)qword_1004700F8;
  qword_1004700F8 = (uint64_t)v1;
}

id sub_10003B84C()
{
  return (id)objc_claimAutoreleasedReturnValue( +[_PBDistributedAssertionRegistry _sharedInstance]( &OBJC_CLASS____PBDistributedAssertionRegistry,  "_sharedInstance"));
}

id sub_10003BB04(void *a1)
{
  id v1 = a1;
  BOOL v2 = (void *)objc_claimAutoreleasedReturnValue([v1 clientProcess]);
  id v3 = [v2 pid];
  if (!(_DWORD)v3)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v1 clientHandle]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 processHandle]);
    id v3 = [v5 pid];
  }

  return v3;
}

id sub_10003BCA0(uint64_t a1)
{
  return [*(id *)(a1 + 32) distributedAssertion:*(void *)(a1 + 40) didChangeState:*(void *)(a1 + 40)];
}

uint64_t sub_10003C2F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (*(int *)(a1 + 32) >= 1 && [v3 pid] == *(_DWORD *)(a1 + 32)
    || ([v4 isViewService] & 1) != 0)
  {
    uint64_t v5 = 1LL;
  }

  else
  {
    uint64_t v5 = [v4 isApplication] ^ 1;
  }

  return v5;
}

id sub_10003C43C(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

id sub_10003C4E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateDumpBuilder]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 build]);

  return v3;
}

void sub_10003CCF8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, id location)
{
}

void sub_10003CD98(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained) {
    objc_msgSend(WeakRetained, "_didSelectButtonAtIndex:", (int)objc_msgSend(*(id *)(a1 + 32), "defaultButtonIndex"));
  }
}

void sub_10003CDDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained) {
    objc_msgSend(WeakRetained, "_didSelectButtonAtIndex:", (int)objc_msgSend(*(id *)(a1 + 32), "alternateButtonIndex"));
  }
}

void sub_10003CE20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained) {
    objc_msgSend(WeakRetained, "_didSelectButtonAtIndex:", (int)objc_msgSend(*(id *)(a1 + 32), "otherButtonIndex"));
  }
}

CFStringRef sub_10003D53C(uint64_t a1)
{
  else {
    return off_1003D1F28[a1 - 2];
  }
}

id sub_10003D5D0(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedProcess]);
}

void sub_10003D634(id a1)
{
  if (!qword_100470108)
  {
    uint64_t v1 = objc_alloc_init(&OBJC_CLASS___PBOSSoftwareUpdateProcess);
    BOOL v2 = (void *)qword_100470108;
    qword_100470108 = (uint64_t)v1;
  }

void sub_10003DB10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  uint64_t v4 = &off_100469220;
  if (!*(_BYTE *)(a1 + 40)) {
    uint64_t v4 = &off_100469228;
  }
  [WeakRetained _processEvent:*v4];
}

void sub_10003E180(id a1)
{
  if (!qword_100470118)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 2LL));
    v11[0] = v1;
    v12[0] = off_1004691F0;
    BOOL v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 6LL));
    v11[1] = v2;
    v12[1] = off_1004691F0;
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 7LL));
    v11[2] = v3;
    v12[2] = off_1004691F0;
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 8LL));
    v11[3] = v4;
    void v12[3] = off_1004691F0;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 3LL));
    v11[4] = v5;
    void v12[4] = off_100469238;
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 4LL));
    v11[5] = v6;
    void v12[5] = off_100469238;
    double v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 5LL));
    void v11[6] = v7;
    v12[6] = off_100469238;
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 9LL));
    v11[7] = v8;
    v12[7] = off_1004691F8;
    uint64_t v9 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v12,  v11,  8LL));
    uint64_t v10 = (void *)qword_100470118;
    qword_100470118 = v9;
  }

void sub_10003E7A0(id a1, int64_t a2)
{
  id v3 = sub_1000836CC();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG);
  if (a2)
  {
    if (v5) {
      sub_1002739DC(a2, v4);
    }
  }

  else if (v5)
  {
    sub_1002739B0();
  }
}

id sub_10003F83C(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  unsigned __int8 v16 = _NSConcreteStackBlock;
  uint64_t v17 = 3221225472LL;
  uint64_t v18 = sub_10003F964;
  id v19 = &unk_1003D0890;
  objc_copyWeak(&v20, &location);
  dispatch_async(&_dispatch_main_q, &v16);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "machine", v16, v17, v18, v19));
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 currentState]);

  objc_destroyWeak(&v20);
  objc_destroyWeak(&location);

  return v14;
}

void sub_10003F948( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10003F964(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = sub_1000836CC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
    BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v4 currentState]);
    int v7 = 138543362;
    id v8 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Ignoring auto check during state %{public}@.",  (uint8_t *)&v7,  0xCu);
  }

  [WeakRetained _sendCheckStartNotification];
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  7LL,  0LL));
  [WeakRetained _sendCheckFinishedNotificationForUpdateAvailable:0 withError:v6];
}

id sub_10003FA80(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10003FBB0;
  block[3] = &unk_1003D0418;
  objc_copyWeak(&v17, &location);
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) machine]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 currentState]);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);

  return v14;
}

void sub_10003FB94( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10003FBB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = sub_1000836CC();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 currentState]);
    int v8 = 138543362;
    id v9 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Ignoring manual check during state %{public}@.",  (uint8_t *)&v8,  0xCu);
  }

  [*(id *)(a1 + 32) _sendCheckStartNotification];
  int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  7LL,  0LL));
  [WeakRetained _sendCheckFinishedNotificationForUpdateAvailable:0 withError:v7];
}

id sub_10003FCD8(uint64_t a1)
{
  id v2 = sub_1000836CC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) machine]);
    BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v4 currentState]);
    int v9 = 138543362;
    id v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Ignoring restore during state %{public}@.",  (uint8_t *)&v9,  0xCu);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) machine]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 currentState]);

  return v7;
}

id sub_10003FDCC(uint64_t a1)
{
  id v2 = sub_1000836CC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) machine]);
    BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v4 currentState]);
    int v9 = 138543362;
    id v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Ignoring cancel during state %{public}@.",  (uint8_t *)&v9,  0xCu);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) machine]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 currentState]);

  return v7;
}

CFStringRef sub_10003FEC0(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472LL;
  v2[2] = sub_10003FF54;
  v2[3] = &unk_1003D0890;
  objc_copyWeak(&v3, &location);
  dispatch_async(&_dispatch_main_q, v2);
  objc_destroyWeak(&v3);
  objc_destroyWeak(&location);
  return @"purge";
}

void sub_10003FF54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _purgePreviousAssets];
}

CFStringRef sub_10003FF80(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_100040024;
  v3[3] = &unk_1003D0890;
  objc_copyWeak(&v4, &location);
  dispatch_async(&_dispatch_main_q, v3);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);
  return @"idle";
}

void sub_100040024(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _restoreAllPurgedApps];
}

CFStringRef sub_100040050(uint64_t a1)
{
  if ([*(id *)(a1 + 32) deferredAction] != (id)1)
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_100040104;
    v3[3] = &unk_1003D0890;
    objc_copyWeak(&v4, &location);
    dispatch_async(&_dispatch_main_q, v3);
    objc_destroyWeak(&v4);
    objc_destroyWeak(&location);
  }

  return @"idle";
}

void sub_100040104(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setAction:", objc_msgSend(WeakRetained, "deferredAction"));
  [WeakRetained setDeferredAction:1];
  [WeakRetained start];
}

CFStringRef sub_100040150(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_10004025C;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 3, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"autocheck";
}

void sub_100040240( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10004025C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _performCheck];
}

CFStringRef sub_100040288(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_100040394;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 3, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"manual-check";
}

void sub_100040378( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100040394(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _performCheck];
}

CFStringRef sub_1000403C0(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_1000404CC;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 3, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"manual-check";
}

void sub_1000404B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000404CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _performCheck];
}

CFStringRef sub_1000404F8(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_10004054C(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_1000405A8(uint64_t a1)
{
  return @"manual-check";
}

CFStringRef sub_1000405CC(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  +[PBOSSoftwareUpdateMonitor checkedForUpdateTriggeredManually:forRestore:result:]( PBOSSoftwareUpdateMonitor,  "checkedForUpdateTriggeredManually:forRestore:result:",  0,  [*(id *)(a1 + 32) _wasStartedForRestore],  2);
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_1000406FC;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 3, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"clear-asset-download-space";
}

void sub_1000406E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000406FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 removeObserver:WeakRetained name:TVSURLBagDidLoadNotification object:0];

  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained asset]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 attributes]);
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"Build"]);

  +[PBOSSoftwareUpdateMonitor prepareForUpdateToOSBuild:forRestore:triggeredManually:]( PBOSSoftwareUpdateMonitor,  "prepareForUpdateToOSBuild:forRestore:triggeredManually:",  v5,  [WeakRetained _wasStartedForRestore],  objc_msgSend(WeakRetained, "_wasStartedByBackgroundCheck") ^ 1);
  [WeakRetained _clearAssetDownloadSpace];
}

CFStringRef sub_1000407D0(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100040824(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100040880(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_1000408D4(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100040930(uint64_t a1)
{
  if (([*(id *)(a1 + 32) _wasStartedForRestore] & 1) != 0
    || [*(id *)(a1 + 32) action] == (id)7
    || [*(id *)(a1 + 32) action] == (id)8)
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_100040A40;
    v3[3] = &unk_1003D0890;
    objc_copyWeak(&v4, &location);
    dispatch_async(&_dispatch_main_q, v3);
    objc_destroyWeak(&v4);
    objc_destroyWeak(&location);
    return @"download-confirm";
  }

  if ([*(id *)(a1 + 32) action] != (id)6) {
    return @"download-confirm";
  }
  [*(id *)(a1 + 32) setState:2];
  return @"idle";
}

void sub_100040A40(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v2 postEvent:off_100469200 withContext:0 userInfo:0];
}

CFStringRef sub_100040A8C(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100040AE0(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100040B3C(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100040B74(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_100040C80;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 3, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"clear-asset-download-space";
}

void sub_100040C64( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100040C80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 removeObserver:WeakRetained name:TVSURLBagDidLoadNotification object:0];

  [WeakRetained setUserConfirmedApplyAtCheckTime:1];
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained asset]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 attributes]);
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"Build"]);

  +[PBOSSoftwareUpdateMonitor prepareForUpdateToOSBuild:forRestore:triggeredManually:]( PBOSSoftwareUpdateMonitor,  "prepareForUpdateToOSBuild:forRestore:triggeredManually:",  v5,  [WeakRetained _wasStartedForRestore],  objc_msgSend(WeakRetained, "_wasStartedByBackgroundCheck") ^ 1);
  [WeakRetained _clearAssetDownloadSpace];
}

CFStringRef sub_100040D60(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100040DB0(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100040E00(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_100040F0C;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 4, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"download";
}

void sub_100040EF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100040F0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _downloadAsset];
}

CFStringRef sub_100040F54(uint64_t a1)
{
  return @"cancel";
}

CFStringRef sub_100040FA4(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100040FF4(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) _goodTimeToInstallAndReboot];
  if ((v2 & 1) != 0
    || ([*(id *)(a1 + 32) _wasStartedForRestore] & 1) != 0
    || [*(id *)(a1 + 32) action] == (id)5
    || [*(id *)(a1 + 32) action] == (id)8)
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    int v7 = _NSConcreteStackBlock;
    uint64_t v8 = 3221225472LL;
    id v9 = sub_100041138;
    id v10 = &unk_1003D0890;
    objc_copyWeak(&v11, &location);
    dispatch_async(&_dispatch_main_q, &v7);
    objc_destroyWeak(&v11);
    objc_destroyWeak(&location);
  }

  if (objc_msgSend(*(id *)(a1 + 32), "action", v7, v8, v9, v10) == (id)7) {
    unsigned __int8 v3 = 0;
  }
  else {
    unsigned __int8 v3 = v2;
  }
  if ((v3 & 1) != 0)
  {
    id v4 = @"apply-confirm";
    uint64_t v5 = 5LL;
  }

  else
  {
    +[PBOSSoftwareUpdateMonitor noteStage:](&OBJC_CLASS___PBOSSoftwareUpdateMonitor, "noteStage:", off_10046C350[0]);
    [*(id *)(a1 + 32) _clearInternalStateOnReturnToIdle];
    id v4 = @"idle";
    uint64_t v5 = 2LL;
  }

  [*(id *)(a1 + 32) setState:v5];
  return v4;
}

void sub_100041138(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v2 postEvent:off_100469210 withContext:0 userInfo:0];
}

CFStringRef sub_100041184(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_1000411D4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_1000412E0;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 7, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"clear-brain-download-space";
}

void sub_1000412C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000412E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  if (v2)
  {
    unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBOSUpdateAssetManager sharedManager](&OBJC_CLASS___PBOSUpdateAssetManager, "sharedManager"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained asset]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained assetReleaseDate]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 descriptorForAsset:v4 withReleaseDate:v5]);

    uint64_t v8 = PBSOSUpdateServiceKeyAvailableUpdate;
    id v9 = v6;
    int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
    [v2 osUpdateProcessDidStartApplyWithData:v7];
  }

  +[PBOSSoftwareUpdateMonitor noteStage:](&OBJC_CLASS___PBOSSoftwareUpdateMonitor, "noteStage:", off_10046C368[0]);
  [WeakRetained _clearBrainDownloadSpace];
}

CFStringRef sub_10004141C(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_100041528;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 9, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"apply-recheck";
}

void sub_10004150C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100041528(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _recheckForNewerUpdate];
}

CFStringRef sub_100041554(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_100041660;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 9, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"apply-recheck-cleanup";
}

void sub_100041644( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100041660(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  unsigned __int8 v3 = v2;
  if (v2) {
    [v2 osUpdateProcessDidStartRedownloadWithData:0];
  }
  +[PBOSSoftwareUpdateMonitor noteStage:](&OBJC_CLASS___PBOSSoftwareUpdateMonitor, "noteStage:", off_10046C3C8[0]);
  [WeakRetained _cancelUpdateDuringApply];
  [WeakRetained _purgePreviousAssets];
}

CFStringRef sub_1000416D0(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_1000417DC;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 7, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"clear-brain-download-space";
}

void sub_1000417C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000417DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  if (v2)
  {
    unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBOSUpdateAssetManager sharedManager](&OBJC_CLASS___PBOSUpdateAssetManager, "sharedManager"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained asset]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained assetReleaseDate]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 descriptorForAsset:v4 withReleaseDate:v5]);

    uint64_t v8 = PBSOSUpdateServiceKeyAvailableUpdate;
    id v9 = v6;
    int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
    [v2 osUpdateProcessDidStartApplyWithData:v7];
  }

  +[PBOSSoftwareUpdateMonitor noteStage:](&OBJC_CLASS___PBOSSoftwareUpdateMonitor, "noteStage:", off_10046C368[0]);
  [WeakRetained _clearBrainDownloadSpace];
}

CFStringRef sub_100041918(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_100041A24;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 3, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"autocheck";
}

void sub_100041A08( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100041A24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setIsApplyingRecheckedUpdate:1];
  [WeakRetained _performCheck];
}

CFStringRef sub_100041A5C(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100041AAC(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_100041BB8;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 7, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"download-brain";
}

void sub_100041B9C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100041BB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _downloadBrain];
}

CFStringRef sub_100041BE4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_100041CF0;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 7, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"clear-prepare-space";
}

void sub_100041CD4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100041CF0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _clearPrepareAndApplySpace];
}

CFStringRef sub_100041D38(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100041D88(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100041DD8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  unsigned __int8 v16 = sub_100041EE4;
  id v17 = &unk_1003D0890;
  objc_copyWeak(&v18, &location);
  dispatch_async(&_dispatch_main_q, &v14);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 8, v14, v15, v16, v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return @"apply";
}

void sub_100041EC8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100041EE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _prepareAndApplyUpdate];
}

CFStringRef sub_100041F10(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100041F60(uint64_t a1)
{
  return @"reboot";
}

CFStringRef sub_100041FA8(uint64_t a1)
{
  return @"idle";
}

CFStringRef sub_100041FCC(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  objc_initWeak(&location, *(id *)(a1 + 32));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000420E0;
  block[3] = &unk_1003D0418;
  objc_copyWeak(&v15, &location);
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
  [*(id *)(a1 + 32) setState:10];
  objc_destroyWeak(&v15);
  objc_destroyWeak(&location);

  return @"cancel";
}

void sub_1000420C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000420E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = sub_1000836CC();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Ignoring manual check during cancel.", v6, 2u);
  }

  [*(id *)(a1 + 32) _sendCheckStartNotification];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  6LL,  0LL));
  [WeakRetained _sendCheckFinishedNotificationForUpdateAvailable:0 withError:v5];
}

void sub_1000422F4(_Unwind_Exception *a1)
{
}

void sub_100042318(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = sub_1000836CC();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138543362;
    id v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Prior asset purge completed (purged %{public}@ bytes).",  (uint8_t *)&v8,  0xCu);
  }

  [WeakRetained _restoreAllPurgedApps];
  int v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v7 postEvent:off_100469230 withContext:0 userInfo:0];
}

void sub_100042580(_Unwind_Exception *a1)
{
}

void sub_1000425A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = sub_1000836CC();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v7)
    {
      *(_DWORD *)buf = 138543362;
      id v14 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Found installed update %{public}@", buf, 0xCu);
    }

    int v8 = (void *)objc_claimAutoreleasedReturnValue(+[PBOSUpdateAssetManager sharedManager](&OBJC_CLASS___PBOSUpdateAssetManager, "sharedManager"));
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    v11[2] = sub_100042768;
    v11[3] = &unk_1003D1B28;
    id v12 = WeakRetained;
    [v8 installedAssetForUpdate:v3 withCompletion:v11];

    id v9 = v12;
  }

  else
  {
    if (v7)
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "No installed update found. Failing install only action.",  buf,  2u);
    }

    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  2LL,  0LL));
    [WeakRetained _sendCheckFinishedNotificationForUpdateAvailable:0 withError:v9];
    id v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
    [v10 postEvent:off_100469258 withContext:0 userInfo:0];
  }
}

id sub_100042768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return [*(id *)(a1 + 32) _foundAsset:a2 releaseDate:a3 error:a4];
}

void sub_10004278C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = (id *)(a1 + 32);
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  [WeakRetained _foundAsset:v9 releaseDate:v8 error:v7];
}

void sub_10004308C(uint64_t a1)
{
  if (([*(id *)(a1 + 32) _isManagedAction] & 1) == 0)
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v2 setLastCheckDate:v3];
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) machine]);
  [v4 postEvent:off_100469250 withContext:0 userInfo:0];
}

void sub_100043130(uint64_t a1, void *a2)
{
  id v3 = a2;
  memset(v13, 0, 250);
  id v4 = sub_1000836CC();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = 3LL;
  }
  else {
    uint64_t v6 = 2LL;
  }
  int v11 = 138543362;
  id v12 = v3;
  id v7 = (_OWORD *)_os_log_send_and_compose_impl( v6,  0LL,  v13,  250LL,  &_mh_execute_header,  v5,  0LL,  "Removed %{public}@ bytes.",  &v11,  12);

  id v8 = sub_1000836CC();
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  _os_log_message_persist_impl(v7, 0LL, v9);

  if (v7 != v13) {
    free(v7);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000432AC;
  block[3] = &unk_1003D0110;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
}

uint64_t sub_1000432AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000434C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_1000434F4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = WeakRetained;
  if (v7)
  {
    __int128 v82 = 0u;
    memset(v83, 0, sizeof(v83));
    __int128 v80 = 0u;
    __int128 v81 = 0u;
    __int128 v78 = 0u;
    __int128 v79 = 0u;
    __int128 v76 = 0u;
    __int128 v77 = 0u;
    __int128 v74 = 0u;
    __int128 v75 = 0u;
    __int128 v72 = 0u;
    __int128 v73 = 0u;
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    *(_OWORD *)buf = 0u;
    id v10 = sub_1000836CC();
    int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      uint64_t v12 = 3LL;
    }
    else {
      uint64_t v12 = 2LL;
    }
    int v61 = 138543362;
    id v62 = v7;
    uint64_t v13 = (uint8_t *)((uint64_t (*)(uint64_t, void, uint8_t *, uint64_t, const mach_header_64 *, os_log_s *, uint64_t, const char *, ...))_os_log_send_and_compose_impl)( v12,  0LL,  buf,  250LL,  &_mh_execute_header,  v11,  16LL,  "Failed to recheck asset version - trying to apply old version [%{public}@].",  &v61,  12);

    id v14 = sub_1000836CC();
    id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    _os_log_message_persist_impl(v13, 16LL, v15);

    if (v13 != buf) {
      free(v13);
    }
    int v16 = 0;
  }

  else
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained asset]);
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 attributes]);
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKey:@"OSVersion"]);

    v60 = v17;
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v17 attributes]);
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 objectForKey:@"Build"]);

    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v6 attributes]);
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 objectForKey:@"OSVersion"]);

    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v6 attributes]);
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v24 objectForKey:@"Build"]);

    __int128 v82 = 0u;
    memset(v83, 0, sizeof(v83));
    __int128 v80 = 0u;
    __int128 v81 = 0u;
    __int128 v78 = 0u;
    __int128 v79 = 0u;
    __int128 v76 = 0u;
    __int128 v77 = 0u;
    __int128 v74 = 0u;
    __int128 v75 = 0u;
    __int128 v72 = 0u;
    __int128 v73 = 0u;
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    *(_OWORD *)buf = 0u;
    id v26 = sub_1000836CC();
    id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    int v61 = 138544130;
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v28 = 3LL;
    }
    else {
      uint64_t v28 = 2LL;
    }
    id v62 = v19;
    __int16 v63 = 2114;
    v64 = v21;
    __int16 v65 = 2114;
    v66 = v23;
    __int16 v67 = 2114;
    v68 = v25;
    uint64_t v29 = (uint8_t *)((uint64_t (*)(uint64_t, void, uint8_t *, uint64_t, const mach_header_64 *, os_log_s *, void, const char *, ...))_os_log_send_and_compose_impl)( v28,  0LL,  buf,  250LL,  &_mh_execute_header,  v27,  0LL,  "Rechecking version (%{public}@/%{public}@ vs %{public}@/%{public}@)",  &v61,  42);

    id v30 = sub_1000836CC();
    id v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
    _os_log_message_persist_impl(v29, 0LL, v31);

    if (v29 != buf) {
      free(v29);
    }
    id v32 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
    unsigned int v33 = [v32 shouldForceRedownloadOnce];

    if (v33)
    {
      id v34 = sub_1000836CC();
      id v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "Forcing a recheck via default.", buf, 2u);
      }

      __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
      [v36 setShouldForceRedownloadOnce:0];
    }

    int64_t v37 = +[PBOSSoftwareUpdateProcess _compareOSVersion:andBuild:withOSVersion:andBuild:]( &OBJC_CLASS___PBOSSoftwareUpdateProcess,  "_compareOSVersion:andBuild:withOSVersion:andBuild:",  v19,  v21,  v23,  v25);
    unsigned int v38 = +[TVSDevice runningAnInternalBuild](&OBJC_CLASS___TVSDevice, "runningAnInternalBuild") & v33;
    if (v37 == -1) {
      int v16 = 1;
    }
    else {
      int v16 = v38;
    }
    if (v16 == 1)
    {
      __int128 v82 = 0uLL;
      memset(v83, 0, sizeof(v83));
      __int128 v80 = 0uLL;
      __int128 v81 = 0uLL;
      __int128 v78 = 0uLL;
      __int128 v79 = 0uLL;
      __int128 v76 = 0uLL;
      __int128 v77 = 0uLL;
      __int128 v74 = 0uLL;
      __int128 v75 = 0uLL;
      __int128 v72 = 0uLL;
      __int128 v73 = 0uLL;
      __int128 v70 = 0uLL;
      __int128 v71 = 0uLL;
      *(_OWORD *)buf = 0uLL;
      id v39 = sub_1000836CC();
      unsigned int v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v41 = 3LL;
      }
      else {
        uint64_t v41 = 2LL;
      }
      LOWORD(v61) = 0;
      LODWORD(v59) = 2;
      uint64_t v42 = ((uint64_t (*)(uint64_t, void, uint8_t *, uint64_t, const mach_header_64 *, os_log_s *, void, const char *, ...))_os_log_send_and_compose_impl)( v41,  0LL,  buf,  250LL,  &_mh_execute_header,  v40,  0LL,  "Need to redownload asset.",  &v61,  v59);
    }

    else
    {
      __int128 v82 = 0uLL;
      memset(v83, 0, sizeof(v83));
      __int128 v80 = 0uLL;
      __int128 v81 = 0uLL;
      __int128 v78 = 0uLL;
      __int128 v79 = 0uLL;
      __int128 v76 = 0uLL;
      __int128 v77 = 0uLL;
      __int128 v74 = 0uLL;
      __int128 v75 = 0uLL;
      __int128 v72 = 0uLL;
      __int128 v73 = 0uLL;
      __int128 v70 = 0uLL;
      __int128 v71 = 0uLL;
      *(_OWORD *)buf = 0uLL;
      id v43 = sub_1000836CC();
      unsigned int v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v43);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v44 = 3LL;
      }
      else {
        uint64_t v44 = 2LL;
      }
      LOWORD(v61) = 0;
      LODWORD(v59) = 2;
      uint64_t v42 = ((uint64_t (*)(uint64_t, void, uint8_t *, uint64_t, const mach_header_64 *, os_log_s *, void, const char *, ...))_os_log_send_and_compose_impl)( v44,  0LL,  buf,  250LL,  &_mh_execute_header,  v40,  0LL,  "Asset is still current.",  &v61,  v59);
    }

    double v45 = (uint8_t *)v42;

    id v46 = sub_1000836CC();
    double v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
    _os_log_message_persist_impl(v45, 0LL, v47);

    if (v45 != buf) {
      free(v45);
    }
  }

  __int16 v48 = (void *)objc_claimAutoreleasedReturnValue([v9 machine]);
  int v49 = v48;
  __int16 v50 = &off_100469298;
  if (!v16) {
    __int16 v50 = &off_1004692A0;
  }
  [v48 postEvent:*v50 withContext:0 userInfo:0];

  __int128 v82 = 0u;
  memset(v83, 0, sizeof(v83));
  __int128 v80 = 0u;
  __int128 v81 = 0u;
  __int128 v78 = 0u;
  __int128 v79 = 0u;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  __int128 v74 = 0u;
  __int128 v75 = 0u;
  __int128 v72 = 0u;
  __int128 v73 = 0u;
  __int128 v70 = 0u;
  __int128 v71 = 0u;
  *(_OWORD *)buf = 0u;
  id v51 = sub_1000836CC();
  __int128 v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
  if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v53 = 3LL;
  }
  else {
    uint64_t v53 = 2LL;
  }
  LOWORD(v61) = 0;
  LODWORD(v5_Block_object_dispose(va, 8) = 2;
  __int128 v54 = (uint8_t *)((uint64_t (*)(uint64_t, void, uint8_t *, uint64_t, const mach_header_64 *, os_log_s *, void, const char *, ...))_os_log_send_and_compose_impl)( v53,  0LL,  buf,  250LL,  &_mh_execute_header,  v52,  0LL,  "Verifying beta catalog is up to date after recheck.",  &v61,  v58);

  id v55 = sub_1000836CC();
  __int128 v56 = (void *)objc_claimAutoreleasedReturnValue(v55);
  _os_log_message_persist_impl(v54, 0LL, v56);

  if (v54 != buf) {
    free(v54);
  }
  __int128 v57 = (void *)objc_claimAutoreleasedReturnValue(+[SDBetaManager sharedManager](&OBJC_CLASS___SDBetaManager, "sharedManager"));
  [v57 verifyCurrentCatalog];
}

void sub_100044AF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, id location, uint64_t a32, id a33)
{
}

void sub_100044B48(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleAssetDownloadProgress:v3];
}

void sub_100044B88(uint64_t a1, void *a2)
{
  id v3 = a2;
  memset(v22, 0, 250);
  id v4 = sub_1000836CC();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = 3LL;
  }
  else {
    uint64_t v6 = 2LL;
  }
  if (*(_BYTE *)(a1 + 56)) {
    id v7 = &stru_1003E2910;
  }
  else {
    id v7 = @"non-";
  }
  int v20 = 138412290;
  uint64_t v21 = v7;
  _os_log_send_and_compose_impl( v6,  0LL,  v22,  250LL,  &_mh_execute_header,  v5,  0LL,  "Starting asset download... (%@discretionary)",  &v20,  12);
  id v9 = v8;

  id v10 = sub_1000836CC();
  int v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  _os_log_message_persist_impl(v9, 0LL, v11);

  if (v9 != v22) {
    free(v9);
  }
  id v12 = objc_alloc_init(&OBJC_CLASS___MADownloadOptions);
  [v12 setDiscretionary:*(unsigned __int8 *)(a1 + 56)];
  uint64_t v13 = *(void **)(a1 + 32);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  _DWORD v16[2] = sub_100044D98;
  v16[3] = &unk_1003D1BF0;
  objc_copyWeak(&v19, (id *)(a1 + 48));
  id v14 = *(id *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  id v17 = v14;
  uint64_t v18 = v15;
  [v13 startDownload:v12 then:v16];

  objc_destroyWeak(&v19);
}

void sub_100044D7C(_Unwind_Exception *a1)
{
}

void sub_100044D98(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [*(id *)(a1 + 32) refreshState];
  if (a2 > 9)
  {
    if (a2 == 48)
    {
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472LL;
      v10[2] = sub_1000451B4;
      v10[3] = &unk_1003D1718;
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v12 = 48LL;
      v10[4] = v6;
      id v11 = WeakRetained;
      dispatch_async(&_dispatch_main_q, v10);
      id v5 = v11;
      goto LABEL_10;
    }

    if (a2 != 10) {
      goto LABEL_8;
    }
LABEL_7:
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    _DWORD v16[2] = sub_100044F50;
    v16[3] = &unk_1003CFF08;
    id v17 = WeakRetained;
    dispatch_async(&_dispatch_main_q, v16);
    id v5 = v17;
    goto LABEL_10;
  }

  if (!a2) {
    goto LABEL_7;
  }
  if (a2 != 3)
  {
LABEL_8:
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_100045310;
    void v7[3] = &unk_1003D05A8;
    uint64_t v9 = a2;
    id v8 = WeakRetained;
    dispatch_async(&_dispatch_main_q, v7);
    id v5 = v8;
    goto LABEL_10;
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100045078;
  block[3] = &unk_1003D05A8;
  uint64_t v15 = 3LL;
  id v14 = WeakRetained;
  dispatch_async(&_dispatch_main_q, block);
  id v5 = v14;
LABEL_10:
}

id sub_100044F50(uint64_t a1)
{
  id v2 = sub_1000836CC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  v10[0] = 0;
  _os_log_send_and_compose_impl(v4, 0LL, v11, 250LL, &_mh_execute_header, v3, 0LL, "Asset download complete.", v10, 2);
  uint64_t v6 = v5;

  id v7 = sub_1000836CC();
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  _os_log_message_persist_impl(v6, 0LL, v8);

  if (v6 != v11) {
    free(v6);
  }
  return [*(id *)(a1 + 32) _processAssetDownloadSuccess];
}

id sub_100045078(uint64_t a1)
{
  id v2 = sub_1000836CC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);
  uint64_t v5 = *(void *)(a1 + 40);
  if (v4) {
    uint64_t v6 = 3LL;
  }
  else {
    uint64_t v6 = 2LL;
  }
  v12[0] = 67109120;
  v12[1] = v5;
  _os_log_send_and_compose_impl( v6,  0LL,  v13,  250LL,  &_mh_execute_header,  v3,  16LL,  "Asset download failed [%d].",  v12);
  id v8 = v7;

  id v9 = sub_1000836CC();
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  _os_log_message_persist_impl(v8, 16LL, v10);

  if (v8 != v13) {
    free(v8);
  }
  return [*(id *)(a1 + 32) _processAssetDownloadFailureWithResult:*(void *)(a1 + 40)];
}

id sub_1000451B4(uint64_t a1)
{
  id v2 = sub_1000836CC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  uint64_t v5 = *(void *)(a1 + 48);
  if (v4) {
    uint64_t v6 = 3LL;
  }
  else {
    uint64_t v6 = 2LL;
  }
  v14[0] = 67109120;
  v14[1] = v5;
  _os_log_send_and_compose_impl( v6,  0LL,  v15,  250LL,  &_mh_execute_header,  v3,  0LL,  "Asset download canceled [%d].",  v14);
  id v8 = v7;

  id v9 = sub_1000836CC();
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  _os_log_message_persist_impl(v8, 0LL, v10);

  if (v8 != v15) {
    free(v8);
  }
  id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) asset]);

  uint64_t v12 = *(void **)(a1 + 40);
  if (v11) {
    return [v12 _cancelUpdateDuringDownload];
  }
  else {
    return [v12 _cancelUpdatePreDownload];
  }
}

id sub_100045310(uint64_t a1)
{
  id v2 = sub_1000836CC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);
  uint64_t v5 = *(void *)(a1 + 40);
  if (v4) {
    uint64_t v6 = 3LL;
  }
  else {
    uint64_t v6 = 2LL;
  }
  v12[0] = 67109120;
  v12[1] = v5;
  _os_log_send_and_compose_impl( v6,  0LL,  v13,  250LL,  &_mh_execute_header,  v3,  16LL,  "Asset download failed with an unexpected error [%d].",  v12);
  id v8 = v7;

  id v9 = sub_1000836CC();
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  _os_log_message_persist_impl(v8, 16LL, v10);

  if (v8 != v13) {
    free(v8);
  }
  return [*(id *)(a1 + 32) _processAssetDownloadFailureWithResult:*(void *)(a1 + 40)];
}

void sub_10004544C(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleAssetDownloadProgress:v3];
}

id sub_100045B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) _handleBrainDownloadProgressCallbackWithState:a2 error:a3];
}

void sub_10004615C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  memset(v20, 0, 250);
  id v2 = sub_1000836CC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained asset]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 assetId]);
  int v18 = 138543362;
  id v19 = v6;
  _os_log_send_and_compose_impl( v4,  0LL,  v20,  250LL,  &_mh_execute_header,  v3,  16LL,  "Prepare update failed because the payload was not found: %{public}@",  &v18,  12);
  id v8 = v7;

  id v9 = sub_1000836CC();
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  _os_log_message_persist_impl(v8, 16LL, v10);

  if (v8 != v20) {
    free(v8);
  }
  id v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  if (v11)
  {
    v16[0] = PBSOSUpdateServiceKeyDidFailErrorCode;
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 10LL));
    v17[0] = v12;
    v17[1] = PBSOSUpdateServiceErrorDomain;
    v16[1] = PBSOSUpdateServiceKeyDidFailErrorDomain;
    _DWORD v16[2] = PBSOSUpdateServiceKeyDidSucceed;
    v17[2] = &__kCFBooleanFalse;
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v17,  v16,  3LL));

    id v14 = [v13 copy];
    [v11 osUpdateProcessDidFinishApplyWithData:v14];
  }

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v15 postEvent:off_100469280 withContext:0 userInfo:0];
}

void sub_1000463AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _prepareAndApplyUpdateThreadedWithImage:*(void *)(a1 + 32)];
}

void sub_1000475B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,id location)
{
}

uint64_t sub_100047658(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 performSelectorOnMainThread:"_updateProgressStatus:" withObject:a1 waitUntilDone:1];
  if ([v3 needToCancelMSUOperation])
  {
    id v4 = sub_1000836CC();
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138543362;
      uint64_t v9 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Attempting to cancel MSUOperation, status: %{public}@.",  (uint8_t *)&v8,  0xCu);
    }
  }

  else {
    uint64_t v6 = 0LL;
  }

  return v6;
}

void sub_100047744(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  [WeakRetained _purgePreviousAssets];
  if (v3)
  {
    v10[0] = PBSOSUpdateServiceKeyDidFailErrorCode;
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [*(id *)(a1 + 32) code]));
    v11[0] = v4;
    v10[1] = PBSOSUpdateServiceKeyDidFailErrorDomain;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) domain]);
    v11[1] = v5;
    v10[2] = PBSOSUpdateServiceKeyDidFailErrorString;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localizedDescription]);
    v10[3] = PBSOSUpdateServiceKeyDidSucceed;
    v11[2] = v6;
    v11[3] = &__kCFBooleanFalse;
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v11,  v10,  4LL));

    id v8 = [v7 copy];
    [v3 osUpdateProcessDidFinishApplyWithData:v8];
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v9 postEvent:off_100469280 withContext:0 userInfo:0];
}

uint64_t sub_1000478DC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000478EC(uint64_t a1)
{
}

void sub_100047904(uint64_t a1)
{
  uint64_t v2 = installationTextImagePath();
  uint64_t v3 = objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8LL);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10004793C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  [WeakRetained _purgePreviousAssets];
  if (v3)
  {
    v10[0] = PBSOSUpdateServiceKeyDidFailErrorCode;
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [*(id *)(a1 + 32) code]));
    v11[0] = v4;
    v10[1] = PBSOSUpdateServiceKeyDidFailErrorDomain;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) domain]);
    v11[1] = v5;
    v10[2] = PBSOSUpdateServiceKeyDidFailErrorString;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localizedDescription]);
    v10[3] = PBSOSUpdateServiceKeyDidSucceed;
    v11[2] = v6;
    v11[3] = &__kCFBooleanFalse;
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v11,  v10,  4LL));

    id v8 = [v7 copy];
    [v3 osUpdateProcessDidFinishApplyWithData:v8];
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v9 postEvent:off_100469280 withContext:0 userInfo:0];
}

void sub_100047AD4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained lastMSUPercentCompleted];
  *(float *)&double v4 = v3 + 2.0;
  float v2 = *(float *)&v4;
  [WeakRetained setLastMSUPercentCompleted:v4];
  uint64_t v8 = kMSUStatusKeyPercentComplete;
  *(float *)&double v5 = v2;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v5));
  uint64_t v9 = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));

  [WeakRetained _updateProgressStatus:v7];
}

void sub_100047BB8(uint64_t a1)
{
  id v2 = sub_1000836CC();
  float v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Beginning completion of update.", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  if (v5)
  {
    uint64_t v48 = PBSOSUpdateServiceKeyDidSucceed;
    int v49 = &__kCFBooleanTrue;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v49,  &v48,  1LL));
    id v7 = [v6 copy];
    [v5 osUpdateProcessDidFinishApplyWithData:v7];
  }

  +[TVSBluetoothRemoteUtilities setPostDisconnectAdvertiseTimeout:]( &OBJC_CLASS___TVSBluetoothRemoteUtilities,  "setPostDisconnectAdvertiseTimeout:",  900.0);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v8 postEvent:off_100469288 withContext:0 userInfo:0];

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[TVSDevice systemVersion](&OBJC_CLASS___TVSDevice, "systemVersion"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[TVSDevice systemBuildVersion](&OBJC_CLASS___TVSDevice, "systemBuildVersion"));
  __int128 v46 = 0u;
  memset(v47, 0, sizeof(v47));
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  *(_OWORD *)buf = 0u;
  id v11 = sub_1000836CC();
  uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v13 = 3LL;
  }
  else {
    uint64_t v13 = 2LL;
  }
  int v29 = 138543618;
  id v30 = v9;
  __int16 v31 = 2114;
  id v32 = v10;
  _os_log_send_and_compose_impl( v13,  0LL,  buf,  250LL,  &_mh_execute_header,  v12,  0LL,  "Update applied, marking last update from defaults [%{public}@/%{public}@]",  &v29,  22);
  uint64_t v15 = v14;

  id v16 = sub_1000836CC();
  id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  _os_log_message_persist_impl(v15, 0LL, v17);

  if (v15 != buf) {
    free(v15);
  }
  int v18 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
  [v18 setLastUpdatedFromOSVersion:v9];

  id v19 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
  [v19 setLastUpdatedFromOSBuildVersion:v10];

  __int128 v46 = 0u;
  memset(v47, 0, sizeof(v47));
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  *(_OWORD *)buf = 0u;
  id v20 = sub_1000836CC();
  uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v22 = 3LL;
  }
  else {
    uint64_t v22 = 2LL;
  }
  LOWORD(v29) = 0;
  LODWORD(v2_Block_object_dispose(va, 8) = 2;
  _os_log_send_and_compose_impl( v22,  0LL,  buf,  250LL,  &_mh_execute_header,  v21,  0LL,  "Update applied, Attempting to reboot in 2s...",  &v29,  v28);
  uint64_t v24 = v23;

  id v25 = sub_1000836CC();
  id v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
  _os_log_message_persist_impl(v24, 0LL, v26);

  if (v24 != buf) {
    free(v24);
  }
  dispatch_time_t v27 = dispatch_time(0LL, 2000000000LL);
  dispatch_after(v27, &_dispatch_main_q, &stru_1003D1C58);
}

void sub_100047F3C(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBSSystemService sharedInstance](&OBJC_CLASS___PBSSystemService, "sharedInstance"));
  [v1 reboot];

  memset(v10, 0, 250);
  id v2 = sub_1000836CC();
  float v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  v9[0] = 0;
  _os_log_send_and_compose_impl( v4,  0LL,  v10,  250LL,  &_mh_execute_header,  v3,  0LL,  "Should have rebooted by now; proceeding.",
    v9,
    2);
  uint64_t v6 = v5;

  id v7 = sub_1000836CC();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  _os_log_message_persist_impl(v6, 0LL, v8);

  if (v6 != v10) {
    free(v6);
  }
}

void sub_100048270(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  uint64_t v3 = objc_claimAutoreleasedReturnValue([WeakRetained currentDownload]);
  uint64_t v4 = (void *)v3;
  if (v2 && v3)
  {
    v8[0] = PBSOSUpdateServiceKeyProgressAmount;
    v8[1] = PBSOSUpdateServiceKeyProgressTime;
    v9[0] = &off_1003FECC0;
    v9[1] = &off_1003FD728;
    v8[2] = PBSOSUpdateServiceKeyProgressIsQueued;
    v8[3] = PBSOSUpdateServiceKeyCurrentDownload;
    v9[2] = &__kCFBooleanTrue;
    v9[3] = v3;
    double v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v9,  v8,  4LL));
    [v2 osUpdateProcessDidUpdateDownloadProgressWithData:v5];
  }

  else
  {
    if (v3) {
      goto LABEL_6;
    }
    id v6 = sub_1000836CC();
    double v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v7 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Skipping progress notificaiton - no current asset.",  v7,  2u);
    }
  }

LABEL_6:
}

void sub_1000483D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  uint64_t v4 = objc_claimAutoreleasedReturnValue([WeakRetained currentDownload]);
  id v6 = (void *)v4;
  if (v3 && v4)
  {
    v12[0] = PBSOSUpdateServiceKeyProgressAmount;
    LODWORD(v5) = *(_DWORD *)(a1 + 48);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v5));
    v13[0] = v7;
    v12[1] = PBSOSUpdateServiceKeyProgressTime;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 40)));
    v13[1] = v8;
    v13[2] = &__kCFBooleanFalse;
    v12[2] = PBSOSUpdateServiceKeyProgressIsQueued;
    void v12[3] = PBSOSUpdateServiceKeyCurrentDownload;
    void v13[3] = v6;
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v12,  4LL));

    [v3 osUpdateProcessDidUpdateDownloadProgressWithData:v9];
  }

  else
  {
    if (v4) {
      goto LABEL_6;
    }
    id v10 = sub_1000836CC();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Skipping progress notificaiton - no current asset.",  v11,  2u);
    }
  }

LABEL_6:
}

void sub_100048D38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  if (v3)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _resultUserInfoWithError:*(void *)(a1 + 32)]);
    [v4 setObject:&__kCFBooleanFalse forKey:PBSOSUpdateServiceKeyDidSucceed];
    id v5 = [v4 copy];
    [v3 osUpdateProcessDidFinishApplyWithData:v5];
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v6 postEvent:off_100469260 withContext:0 userInfo:0];
}

void sub_100048DF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);

  if (v3)
  {
    v8[0] = PBSOSUpdateServiceKeyProgressAmount;
    LODWORD(v4) = *(_DWORD *)(a1 + 40);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v4));
    v9[0] = v5;
    v8[1] = PBSOSUpdateServiceKeyProgressTime;
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", -1.0));
    v9[1] = v6;
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v9,  v8,  2LL));

    [v3 osUpdateProcessDidUpdateApplyProgressWithData:v7];
  }
}

void sub_100048EFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _resultUserInfoWithError:0]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
  [v2 setObject:v3 forKey:PBSOSUpdateServiceKeyDidSucceed];

  double v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v4 postEvent:off_100469268 withContext:0 userInfo:v2];
}

void sub_100048F9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  if (v2)
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  8LL,  0LL));
    double v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _resultUserInfoWithError:v3]);
    [v4 setObject:&__kCFBooleanFalse forKey:PBSOSUpdateServiceKeyDidSucceed];
    id v5 = [v4 copy];
    [v2 osUpdateProcessDidFinishApplyWithData:v5];
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v6 postEvent:off_100469260 withContext:0 userInfo:0];
}

LABEL_10:
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[PBOSSoftwareUpdateProcess delegate](self, "delegate"));
  if (v13)
  {
    *(float *)&id v14 = v8;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithFloat:]( &OBJC_CLASS___NSNumber,  "numberWithFloat:",  v14,  PBSOSUpdateServiceKeyProgressAmount));
    int v18 = v15;
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v18,  &v17,  1LL));

    [v13 osUpdateProcessDidUpdateApplyProgressWithData:v16];
  }

LABEL_13:
}
}
}

  return v9;
}

        queue_processAssertion = self->_queue_processAssertion;
        self->_queue_processAssertion = 0LL;

        goto LABEL_11;
      }
    }

    else
    {
    }

    id v14 = sub_100162388((id *)&self->super.isa);
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100287D00((uint64_t)v6, (uint64_t)v8, v12);
    }
    goto LABEL_10;
  }

  return @"Idle";
}
}
}
}

    id v7 = *((void *)*(&off_1003E21A0 + v3 - 1172345222)
         + (((((uint64_t (*)(void))*(&off_1003E21A0 + v3 - 1172345378))((*((_DWORD *)*(&off_1003E21A0 + v3 - 1172345355) + 6 * v6 + 1)
                                                                                                 - 2060126971)) == 0)
           * ((v3 ^ 0x45E094C4) - 1441)) ^ (v3 - 1172344823)));
    __asm { BR              X9 }
  }

  if (v4 == 575733987)
  {
    id v6 = 0;
    goto LABEL_10;
  }

  if (v4 == 575733990)
  {
    id v6 = 2;
    goto LABEL_10;
  }

void sub_10004A18C(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [a1[4] state];
  if (v3 || v4 == (id)3)
  {
    if (v3) {
      goto LABEL_27;
    }
    id v12 = +[TVSDiskSpaceUtility mediaFreeSpace](&OBJC_CLASS___TVSDiskSpaceUtility, "mediaFreeSpace");
    uint64_t v33 = 0LL;
    if ([a1[5] state] == (id)2) {
      unsigned int v13 = 1;
    }
    else {
      unsigned int v13 = [a1[5] spaceCheck:&v33];
    }
    __int128 v54 = 0u;
    memset(v55, 0, sizeof(v55));
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    *(_OWORD *)id location = 0u;
    id v14 = sub_1000836CC();
    uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v16 = 3LL;
    }
    else {
      uint64_t v16 = 2LL;
    }
    id v17 = [a1[5] state];
    uint64_t v18 = v33;
    v34[0] = 67109888;
    v34[1] = v17 == (id)2;
    if (!v13) {
      uint64_t v18 = -1LL;
    }
    __int16 v35 = 1024;
    unsigned int v36 = v13;
    __int16 v37 = 2048;
    uint64_t v38 = v18;
    __int16 v39 = 2048;
    id v40 = v12;
    _os_log_send_and_compose_impl( v16,  0LL,  location,  250LL,  &_mh_execute_header,  v15,  0LL,  "Asset download space REcheck: asset installed:%d enoughSpace:%d requiredSpace:%lld unusedSpace:%llu",  v34,  34,  block,  v28);
    id v20 = v19;

    id v21 = sub_1000836CC();
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    _os_log_message_persist_impl(v20, 0LL, v22);

    if (v20 != location) {
      free(v20);
    }
    if (v33 <= (uint64_t)v12)
    {
      id v3 = 0LL;
      goto LABEL_27;
    }

    __int128 v54 = 0u;
    memset(v55, 0, sizeof(v55));
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    *(_OWORD *)id location = 0u;
    id v23 = sub_1000836CC();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v24 = 3LL;
    }
    else {
      uint64_t v24 = 2LL;
    }
    LOWORD(v34[0]) = 0;
    LODWORD(v26) = 2;
    _os_log_send_and_compose_impl( v24,  0LL,  location,  250LL,  &_mh_execute_header,  v6,  0LL,  "Space insufficient on recheck. Failing update.",  v34,  v26);
  }

  else
  {
    __int128 v54 = 0u;
    memset(v55, 0, sizeof(v55));
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    *(_OWORD *)id location = 0u;
    id v5 = sub_1000836CC();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v7 = 3LL;
    }
    else {
      uint64_t v7 = 2LL;
    }
    LOWORD(v34[0]) = 0;
    _os_log_send_and_compose_impl( v7,  0LL,  location,  250LL,  &_mh_execute_header,  v6,  0LL,  "Space cleared but no longer checking asset download space. Failing update.",  v34,  2);
  }

  uint64_t v9 = v8;

  id v10 = sub_1000836CC();
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  _os_log_message_persist_impl(v9, 0LL, v11);

  if (v9 != location) {
    free(v9);
  }
  id v3 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  9LL,  0LL));
LABEL_27:
  objc_initWeak(location, a1[4]);
  block = _NSConcreteStackBlock;
  uint64_t v28 = 3221225472LL;
  int v29 = sub_10004A54C;
  id v30 = &unk_1003D1CD0;
  objc_copyWeak(v32, location);
  v32[1] = a1[6];
  id v31 = v3;
  id v25 = v3;
  dispatch_async(&_dispatch_main_q, &block);

  objc_destroyWeak(v32);
  objc_destroyWeak(location);
}

void sub_10004A54C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend( WeakRetained,  "_processDownloadSpaceCheckResultForRequiredSpace:hasSpace:error:",  *(void *)(a1 + 48),  *(void *)(a1 + 32) == 0);
}

void sub_10004A9EC(_Unwind_Exception *a1)
{
}

void sub_10004AA00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained brainLoader]);
  id v44 = 0LL;
  uint64_t v3 = (uint64_t)[v2 requiredDiskSpace:&v44];
  id v4 = v44;

  __int128 v66 = 0u;
  memset(v67, 0, 26);
  __int128 v64 = 0u;
  __int128 v65 = 0u;
  __int128 v62 = 0u;
  __int128 v63 = 0u;
  __int128 v60 = 0u;
  __int128 v61 = 0u;
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  __int128 v53 = 0u;
  id v5 = sub_1000836CC();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v7 = 3LL;
  }
  else {
    uint64_t v7 = 2LL;
  }
  int v45 = 134218242;
  uint64_t v46 = v3;
  __int16 v47 = 2114;
  id v48 = v4;
  _os_log_send_and_compose_impl( v7,  0LL,  &v53,  250LL,  &_mh_execute_header,  v6,  0LL,  "Async brain sizing returned required space:%lld error:%{public}@",  &v45,  22);
  uint64_t v9 = v8;

  id v10 = sub_1000836CC();
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  _os_log_message_persist_impl(v9, 0LL, v11);

  if (v9 != &v53) {
    free(v9);
  }
  id v12 = +[TVSDiskSpaceUtility mediaFreeSpace](&OBJC_CLASS___TVSDiskSpaceUtility, "mediaFreeSpace");
  id v13 = v12;
  *(_OWORD *)((char *)v67 + 10) = 0u;
  if (v4) {
    BOOL v14 = 1;
  }
  else {
    BOOL v14 = v3 < 0;
  }
  __int128 v66 = 0uLL;
  v67[0] = 0uLL;
  int v16 = !v14 && (uint64_t)v12 >= v3;
  __int128 v64 = 0uLL;
  __int128 v65 = 0uLL;
  __int128 v62 = 0uLL;
  __int128 v63 = 0uLL;
  __int128 v60 = 0uLL;
  __int128 v61 = 0uLL;
  __int128 v58 = 0uLL;
  __int128 v59 = 0uLL;
  __int128 v56 = 0uLL;
  __int128 v57 = 0uLL;
  __int128 v54 = 0uLL;
  __int128 v55 = 0uLL;
  __int128 v53 = 0uLL;
  id v17 = sub_1000836CC();
  uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);
  int v45 = 134218754;
  if (v19) {
    uint64_t v20 = 3LL;
  }
  else {
    uint64_t v20 = 2LL;
  }
  uint64_t v46 = v3;
  __int16 v47 = 2048;
  id v48 = v13;
  __int16 v49 = 1024;
  int v50 = v16;
  __int16 v51 = 2114;
  id v52 = v4;
  LODWORD(v35) = 38;
  _os_log_send_and_compose_impl( v20,  0LL,  &v53,  250LL,  &_mh_execute_header,  v18,  0LL,  "Brain download space check: requiredSpace:%lld unusedSpace:%llu enoughSpace:%d error:%{public}@",  &v45,  v35);
  uint64_t v22 = v21;

  id v23 = sub_1000836CC();
  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  _os_log_message_persist_impl(v22, 0LL, v24);

  if (v22 != &v53) {
    free(v22);
  }
  if (v4 || v3 < 1 || v3 <= (unint64_t)v13)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10004B148;
    block[3] = &unk_1003D1718;
    id v32 = &v39;
    id v39 = WeakRetained;
    uint64_t v41 = v3;
    id v40 = v4;
    id v34 = WeakRetained;
    dispatch_async(&_dispatch_main_q, block);
  }

  else
  {
    __int128 v66 = 0u;
    memset(v67, 0, 26);
    __int128 v64 = 0u;
    __int128 v65 = 0u;
    __int128 v62 = 0u;
    __int128 v63 = 0u;
    __int128 v60 = 0u;
    __int128 v61 = 0u;
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    __int128 v56 = 0u;
    __int128 v57 = 0u;
    __int128 v54 = 0u;
    __int128 v55 = 0u;
    __int128 v53 = 0u;
    id v25 = sub_1000836CC();
    uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v27 = 3LL;
    }
    else {
      uint64_t v27 = 2LL;
    }
    int v45 = 134218240;
    uint64_t v46 = v3;
    __int16 v47 = 2048;
    id v48 = v13;
    LODWORD(v36) = 22;
    _os_log_send_and_compose_impl( v27,  0LL,  &v53,  250LL,  &_mh_execute_header,  v26,  0LL,  "Insufficient space for brain download. Requesting total: %llu unused: %llu ...",  &v45,  v36);
    int v29 = v28;

    id v30 = sub_1000836CC();
    id v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
    _os_log_message_persist_impl(v29, 0LL, v31);

    if (v29 != &v53) {
      free(v29);
    }
    v42[0] = _NSConcreteStackBlock;
    v42[1] = 3221225472LL;
    v42[2] = sub_10004AE30;
    v42[3] = &unk_1003D1D20;
    id v32 = (id *)v43;
    uint64_t v33 = *(void *)(a1 + 32);
    v43[0] = WeakRetained;
    v43[1] = v33;
    [WeakRetained _clearSpace:v3 withCompletion:v42];
  }
}

void sub_10004AE30(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) state] == (id)7)
  {
    if (v3)
    {
      id v4 = 0LL;
      id v5 = v3;
    }

    else
    {
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) brainLoader]);
      id v27 = 0LL;
      id v4 = [v15 requiredDiskSpace:&v27];
      id v5 = v27;

      __int128 v45 = 0u;
      memset(v46, 0, sizeof(v46));
      __int128 v43 = 0u;
      __int128 v44 = 0u;
      __int128 v41 = 0u;
      __int128 v42 = 0u;
      __int128 v39 = 0u;
      __int128 v40 = 0u;
      __int128 v37 = 0u;
      __int128 v38 = 0u;
      __int128 v35 = 0u;
      __int128 v36 = 0u;
      __int128 v33 = 0u;
      __int128 v34 = 0u;
      __int128 v32 = 0u;
      id v16 = sub_1000836CC();
      id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v18 = 3LL;
      }
      else {
        uint64_t v18 = 2LL;
      }
      int v28 = 134218242;
      id v29 = v4;
      __int16 v30 = 2114;
      id v31 = v5;
      _os_log_send_and_compose_impl( v18,  0LL,  &v32,  250LL,  &_mh_execute_header,  v17,  0LL,  "Brain size recheck: requiredSpace:%lld error:%{public}@",  &v28,  22);
      uint64_t v20 = v19;

      id v21 = sub_1000836CC();
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
      _os_log_message_persist_impl(v20, 0LL, v22);

      if (v20 != &v32) {
        free(v20);
      }
    }
  }

  else
  {
    __int128 v45 = 0u;
    memset(v46, 0, sizeof(v46));
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    __int128 v32 = 0u;
    id v6 = sub_1000836CC();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v8 = 3LL;
    }
    else {
      uint64_t v8 = 2LL;
    }
    LOWORD(v2_Block_object_dispose(va, 8) = 0;
    _os_log_send_and_compose_impl( v8,  0LL,  &v32,  250LL,  &_mh_execute_header,  v7,  0LL,  "Space cleared but no longer checking brain download space. Failing update.",  &v28,  2);
    id v10 = v9;

    id v11 = sub_1000836CC();
    id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    _os_log_message_persist_impl(v10, 0LL, v12);

    if (v10 != &v32) {
      free(v10);
    }
    id v5 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  9LL,  0LL));

    id v4 = 0LL;
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10004B128;
  block[3] = &unk_1003D1718;
  id v13 = *(id *)(a1 + 32);
  id v25 = v5;
  id v26 = v4;
  id v24 = v13;
  id v14 = v5;
  dispatch_async(&_dispatch_main_q, block);
}

id sub_10004B128(uint64_t a1)
{
  return [*(id *)(a1 + 32) _processBrainDownloadSpaceCheckResultForBrainSize:*(void *)(a1 + 48) error:*(void *)(a1 + 40)];
}

id sub_10004B148(uint64_t a1)
{
  return [*(id *)(a1 + 32) _processBrainDownloadSpaceCheckResultForBrainSize:*(void *)(a1 + 48) error:*(void *)(a1 + 40)];
}

void sub_10004B688(_Unwind_Exception *a1)
{
}

void sub_10004B69C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained asset]);
  char v3 = MSUAssetCalculateInstallationSize([v2 attributes], &v18, &v19);

  if ((v3 & 1) == 0)
  {
    memset(v22, 0, 250);
    id v4 = sub_1000836CC();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    uint64_t v6 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR) ? 3LL : 2LL;
    int v20 = 138543362;
    uint64_t v21 = v19;
    _os_log_send_and_compose_impl( v6,  0LL,  v22,  250LL,  &_mh_execute_header,  v5,  16LL,  "Failed to get installation size from MSU [%{public}@].",  &v20,  12);
    uint64_t v8 = v7;

    id v9 = sub_1000836CC();
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    _os_log_message_persist_impl(v8, 16LL, v10);

    if (v8 != v22) {
      free(v8);
    }
  }

  unsigned int v11 = +[TVSDevice runningAnInternalBuild](&OBJC_CLASS___TVSDevice, "runningAnInternalBuild");
  uint64_t v12 = 3145728000LL;
  if (v11) {
    uint64_t v12 = 0x119400000LL;
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10004B87C;
  block[3] = &unk_1003D1D48;
  id v15 = WeakRetained;
  uint64_t v16 = v18;
  uint64_t v17 = v12;
  id v13 = WeakRetained;
  dispatch_async(&_dispatch_main_q, block);
}

id sub_10004B87C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _clearPrepareAndApplySpaceWithInstallationSize:*(void *)(a1 + 40) andPadding:*(void *)(a1 + 48)];
}

void sub_10004BBDC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, id location)
{
}

void sub_10004BC00(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained state] != (id)7)
  {
    __int128 v64 = 0u;
    memset(v65, 0, sizeof(v65));
    __int128 v62 = 0u;
    __int128 v63 = 0u;
    __int128 v60 = 0u;
    __int128 v61 = 0u;
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    __int128 v56 = 0u;
    __int128 v57 = 0u;
    __int128 v54 = 0u;
    __int128 v55 = 0u;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v51 = 0u;
    id v17 = sub_1000836CC();
    uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v19 = 3LL;
    }
    else {
      uint64_t v19 = 2LL;
    }
    LOWORD(v45) = 0;
    _os_log_send_and_compose_impl( v19,  0LL,  &v51,  250LL,  &_mh_execute_header,  v18,  0LL,  "Space cleared but no longer checking prepare/apply space. Failing update.",  &v45,  2);
    uint64_t v21 = v20;

    id v22 = sub_1000836CC();
    id v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
    _os_log_message_persist_impl(v21, 0LL, v23);

    if (v21 != &v51) {
      free(v21);
    }
    id v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  9LL,  0LL));

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10004C048;
    block[3] = &unk_1003D1718;
    id v25 = &v36;
    id v26 = WeakRetained;
    uint64_t v27 = *(void *)(a1 + 40);
    id v36 = v26;
    uint64_t v38 = v27;
    id v3 = v24;
    id v37 = v3;
    dispatch_async(&_dispatch_main_q, block);
    int v28 = v37;
    goto LABEL_24;
  }

  id v5 = +[TVSDiskSpaceUtility mediaFreeSpace](&OBJC_CLASS___TVSDiskSpaceUtility, "mediaFreeSpace");
  __int128 v64 = 0u;
  memset(v65, 0, sizeof(v65));
  __int128 v62 = 0u;
  __int128 v63 = 0u;
  __int128 v60 = 0u;
  __int128 v61 = 0u;
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  __int128 v51 = 0u;
  id v6 = sub_1000836CC();
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  uint64_t v9 = *(void *)(a1 + 40);
  if (v8) {
    uint64_t v10 = 3LL;
  }
  else {
    uint64_t v10 = 2LL;
  }
  int v45 = 134218498;
  uint64_t v46 = v9;
  __int16 v47 = 2048;
  id v48 = v5;
  __int16 v49 = 2114;
  id v50 = v3;
  _os_log_send_and_compose_impl( v10,  0LL,  &v51,  250LL,  &_mh_execute_header,  v7,  0LL,  "Prepare/Apply space recheck: required:%llu unused:%llu error:%{public}@",  &v45,  32);
  uint64_t v12 = v11;

  id v13 = sub_1000836CC();
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  _os_log_message_persist_impl(v12, 0LL, v14);

  if (v12 != &v51) {
    free(v12);
  }
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v3 domain]);
  else {
    BOOL v16 = 0;
  }

  if (*(void *)(a1 + 40) <= (unint64_t)v5 || (unint64_t v29 = *(void *)(a1 + 48)) == 0 || !v16)
  {
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3221225472LL;
    v41[2] = sub_10004C008;
    v41[3] = &unk_1003D1718;
    id v25 = &v42;
    id v33 = WeakRetained;
    uint64_t v34 = *(void *)(a1 + 40);
    id v42 = v33;
    uint64_t v44 = v34;
    id v3 = v3;
    id v43 = v3;
    dispatch_async(&_dispatch_main_q, v41);
    int v28 = v43;
LABEL_24:

    goto LABEL_25;
  }

  if (v29 >> 21 >= 0x7D) {
    unint64_t v30 = v29 >> 1;
  }
  else {
    unint64_t v30 = 0LL;
  }
  v39[0] = _NSConcreteStackBlock;
  v39[1] = 3221225472LL;
  v39[2] = sub_10004C028;
  v39[3] = &unk_1003D1D48;
  id v25 = (id *)v40;
  id v31 = WeakRetained;
  uint64_t v32 = *(void *)(a1 + 56);
  v40[0] = v31;
  v40[1] = v32;
  v40[2] = v30;
  dispatch_async(&_dispatch_main_q, v39);
LABEL_25:
}

id sub_10004C008(uint64_t a1)
{
  return [*(id *)(a1 + 32) _processPrepareAndApplySpaceCheckResultForRequiredSpace:*(void *)(a1 + 48) andError:*(void *)(a1 + 40)];
}

id sub_10004C028(uint64_t a1)
{
  return [*(id *)(a1 + 32) _clearPrepareAndApplySpaceWithInstallationSize:*(void *)(a1 + 40) andPadding:*(void *)(a1 + 48)];
}

id sub_10004C048(uint64_t a1)
{
  return [*(id *)(a1 + 32) _processPrepareAndApplySpaceCheckResultForRequiredSpace:*(void *)(a1 + 48) andError:*(void *)(a1 + 40)];
}

void sub_10004C068(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _processPrepareAndApplySpaceCheckResultForRequiredSpace:*(void *)(a1 + 40) andError:0];
}

void sub_10004C178(_Unwind_Exception *a1)
{
}

void sub_10004C18C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = (uint64_t (*)(uint64_t, uint64_t))+[TVSDiskSpaceUtility mediaFreeSpace]( &OBJC_CLASS___TVSDiskSpaceUtility,  "mediaFreeSpace");
    uint64_t v4 = *(void *)(a1 + 56);
    BOOL v5 = v4 <= (uint64_t)v3;
    uint64_t v6 = v4 - (void)v3;
    __int128 v143 = 0u;
    memset(v144, 0, sizeof(v144));
    if (v5) {
      uint64_t v7 = 0LL;
    }
    else {
      uint64_t v7 = (void *)v6;
    }
    __int128 v141 = 0uLL;
    __int128 v142 = 0uLL;
    __int128 v139 = 0uLL;
    __int128 v140 = 0uLL;
    __int128 v137 = 0uLL;
    __int128 v138 = 0uLL;
    __int128 v135 = 0uLL;
    __int128 v136 = 0uLL;
    __int128 v133 = 0uLL;
    __int128 v134 = 0uLL;
    __int128 v131 = 0uLL;
    __int128 v132 = 0uLL;
    __int128 buf = 0uLL;
    id v8 = sub_1000836CC();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
    uint64_t v11 = *(void *)(a1 + 56);
    if (v10) {
      uint64_t v12 = 3LL;
    }
    else {
      uint64_t v12 = 2LL;
    }
    *(_DWORD *)v126 = 134218496;
    *(void *)&v126[4] = v7;
    *(_WORD *)&v126[12] = 2048;
    *(void *)&v126[14] = v11;
    *(_WORD *)&v126[22] = 2048;
    v127 = v3;
    _os_log_send_and_compose_impl( v12,  0LL,  &buf,  250LL,  &_mh_execute_header,  v9,  0LL,  "Attempting to clear %lld bytes to end up with %lld unused. (currently %lld unused)",  v126,  32,  v116);
    id v14 = v13;

    id v15 = sub_1000836CC();
    BOOL v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    _os_log_message_persist_impl(v14, 0LL, v16);

    if (v14 != &buf) {
      free(v14);
    }
    dispatch_semaphore_t v17 = dispatch_semaphore_create(0LL);
    v121[0] = 0LL;
    v121[1] = v121;
    v121[2] = 0x2020000000LL;
    v121[3] = 0LL;
    *(void *)v126 = 0LL;
    *(void *)&v126[8] = v126;
    *(void *)&v126[16] = 0x3032000000LL;
    v127 = sub_1000478DC;
    v128 = sub_1000478EC;
    id v129 = 0LL;
    uint64_t v18 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    -[NSMutableDictionary setObject:forKey:]( v18,  "setObject:forKey:",  @"/private/var",  @"CACHE_DELETE_VOLUME");
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v7));
    -[NSMutableDictionary setObject:forKey:](v18, "setObject:forKey:", v19, @"CACHE_DELETE_AMOUNT");

    -[NSMutableDictionary setObject:forKey:](v18, "setObject:forKey:", &off_1003FD740, @"CACHE_DELETE_URGENCY");
    __int128 v143 = 0u;
    memset(v144, 0, sizeof(v144));
    __int128 v141 = 0u;
    __int128 v142 = 0u;
    __int128 v139 = 0u;
    __int128 v140 = 0u;
    __int128 v137 = 0u;
    __int128 v138 = 0u;
    __int128 v135 = 0u;
    __int128 v136 = 0u;
    __int128 v133 = 0u;
    __int128 v134 = 0u;
    __int128 v131 = 0u;
    __int128 v132 = 0u;
    __int128 buf = 0u;
    id v20 = sub_1000836CC();
    uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v22 = 3LL;
    }
    else {
      uint64_t v22 = 2LL;
    }
    int v122 = 134217984;
    int64_t v123 = (int64_t)v7;
    _os_log_send_and_compose_impl( v22,  0LL,  &buf,  250LL,  &_mh_execute_header,  v21,  0LL,  "Requesting CacheDelete for %lld bytes ...",  &v122);
    id v24 = v23;

    id v25 = sub_1000836CC();
    id v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    _os_log_message_persist_impl(v24, 0LL, v26);

    if (v24 != &buf) {
      free(v24);
    }
    v117[0] = _NSConcreteStackBlock;
    v117[1] = 3221225472LL;
    v117[2] = sub_10004CF74;
    v117[3] = &unk_1003D1DC0;
    v119 = v121;
    v120 = v126;
    uint64_t v27 = v17;
    v118 = v27;
    int v28 = (const void *)CacheDeletePurgeSpaceWithInfo(v18, v117);
    id v29 = sub_1000836CC();
    unint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "CacheDelete token %{public}@",  (uint8_t *)&buf,  0xCu);
    }

    dispatch_time_t v31 = dispatch_time(0LL, 120000000000LL);
    dispatch_semaphore_wait(v27, v31);
    sleep(2u);
    if (v28) {
      CFRelease(v28);
    }
    if (*(void *)(*(void *)&v126[8] + 40LL))
    {
      __int128 v143 = 0u;
      memset(v144, 0, sizeof(v144));
      __int128 v141 = 0u;
      __int128 v142 = 0u;
      __int128 v139 = 0u;
      __int128 v140 = 0u;
      __int128 v137 = 0u;
      __int128 v138 = 0u;
      __int128 v135 = 0u;
      __int128 v136 = 0u;
      __int128 v133 = 0u;
      __int128 v134 = 0u;
      __int128 v131 = 0u;
      __int128 v132 = 0u;
      __int128 buf = 0u;
      id v32 = sub_1000836CC();
      id v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
        uint64_t v34 = 3LL;
      }
      else {
        uint64_t v34 = 2LL;
      }
      int64_t v35 = *(void *)(*(void *)&v126[8] + 40LL);
      int v122 = 138543362;
      int64_t v123 = v35;
      LODWORD(v114) = 12;
      _os_log_send_and_compose_impl( v34,  0LL,  &buf,  250LL,  &_mh_execute_header,  v33,  16LL,  "Unable to clear sufficient space. CacheDelete failed: %{public}@",  &v122,  v114);
      id v37 = v36;

      id v38 = sub_1000836CC();
      __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
      _os_log_message_persist_impl(v37, 16LL, v39);

      if (v37 != &buf) {
        free(v37);
      }
    }

    else
    {
      __int128 v40 = +[TVSDiskSpaceUtility mediaFreeSpace](&OBJC_CLASS___TVSDiskSpaceUtility, "mediaFreeSpace");
      __int128 v143 = 0u;
      memset(v144, 0, sizeof(v144));
      __int128 v141 = 0u;
      __int128 v142 = 0u;
      __int128 v139 = 0u;
      __int128 v140 = 0u;
      __int128 v137 = 0u;
      __int128 v138 = 0u;
      __int128 v135 = 0u;
      __int128 v136 = 0u;
      __int128 v133 = 0u;
      __int128 v134 = 0u;
      __int128 v131 = 0u;
      __int128 v132 = 0u;
      __int128 buf = 0u;
      id v41 = sub_1000836CC();
      id v42 = (os_log_s *)objc_claimAutoreleasedReturnValue(v41);
      int64_t v43 = v40 - (_BYTE *)v3;
      if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v44 = 3LL;
      }
      else {
        uint64_t v44 = 2LL;
      }
      int v122 = 134218240;
      int64_t v123 = v43;
      __int16 v124 = 2048;
      v125 = v40;
      LODWORD(v114) = 22;
      _os_log_send_and_compose_impl( v44,  0LL,  &buf,  250LL,  &_mh_execute_header,  v42,  0LL,  "CacheDelete cleared %lld bytes. Free space now %lld bytes.",  &v122,  v114);
      uint64_t v46 = v45;

      id v47 = sub_1000836CC();
      id v48 = (void *)objc_claimAutoreleasedReturnValue(v47);
      _os_log_message_persist_impl(v46, 0LL, v48);

      if (v46 != &buf) {
        free(v46);
      }
      if ((uint64_t)v40 >= *(void *)(a1 + 56))
      {
        __int128 v143 = 0uLL;
        memset(v144, 0, sizeof(v144));
        __int128 v141 = 0uLL;
        __int128 v142 = 0uLL;
        __int128 v139 = 0uLL;
        __int128 v140 = 0uLL;
        __int128 v137 = 0uLL;
        __int128 v138 = 0uLL;
        __int128 v135 = 0uLL;
        __int128 v136 = 0uLL;
        __int128 v133 = 0uLL;
        __int128 v134 = 0uLL;
        __int128 v131 = 0uLL;
        __int128 v132 = 0uLL;
        __int128 buf = 0uLL;
        id v86 = sub_1000836CC();
        v87 = (os_log_s *)objc_claimAutoreleasedReturnValue(v86);
        if (os_log_type_enabled(v87, OS_LOG_TYPE_DEFAULT)) {
          uint64_t v88 = 3LL;
        }
        else {
          uint64_t v88 = 2LL;
        }
        LOWORD(v122) = 0;
        LODWORD(v115) = 2;
        _os_log_send_and_compose_impl( v88,  0LL,  &buf,  250LL,  &_mh_execute_header,  v87,  0LL,  "CacheDelete cleared sufficient space.",  &v122,  v115);
        v90 = v89;

        id v91 = sub_1000836CC();
        v92 = (void *)objc_claimAutoreleasedReturnValue(v91);
        _os_log_message_persist_impl(v90, 0LL, v92);

        if (v90 != &buf) {
          free(v90);
        }
      }

      else
      {
        __int128 v143 = 0uLL;
        memset(v144, 0, sizeof(v144));
        __int128 v141 = 0uLL;
        __int128 v142 = 0uLL;
        __int128 v139 = 0uLL;
        __int128 v140 = 0uLL;
        __int128 v137 = 0uLL;
        __int128 v138 = 0uLL;
        __int128 v135 = 0uLL;
        __int128 v136 = 0uLL;
        __int128 v133 = 0uLL;
        __int128 v134 = 0uLL;
        __int128 v131 = 0uLL;
        __int128 v132 = 0uLL;
        __int128 buf = 0uLL;
        id v49 = sub_1000836CC();
        id v50 = (os_log_s *)objc_claimAutoreleasedReturnValue(v49);
        if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT)) {
          uint64_t v51 = 3LL;
        }
        else {
          uint64_t v51 = 2LL;
        }
        int64_t v52 = *(void *)(a1 + 56) - (void)v40;
        int v122 = 134217984;
        int64_t v123 = v52;
        _os_log_send_and_compose_impl( v51,  0LL,  &buf,  250LL,  &_mh_execute_header,  v50,  0LL,  "Still need to clear %lld bytes.",  &v122);
        __int128 v54 = v53;

        id v55 = sub_1000836CC();
        __int128 v56 = (void *)objc_claimAutoreleasedReturnValue(v55);
        _os_log_message_persist_impl(v54, 0LL, v56);

        if (v54 != &buf) {
          free(v54);
        }
        id v57 = [WeakRetained _purgeOlderAppsToGetSpaceNeeded:*(void *)(a1 + 56)];
        __int128 v143 = 0u;
        memset(v144, 0, sizeof(v144));
        __int128 v141 = 0u;
        __int128 v142 = 0u;
        __int128 v139 = 0u;
        __int128 v140 = 0u;
        __int128 v137 = 0u;
        __int128 v138 = 0u;
        __int128 v135 = 0u;
        __int128 v136 = 0u;
        __int128 v133 = 0u;
        __int128 v134 = 0u;
        __int128 v131 = 0u;
        __int128 v132 = 0u;
        __int128 buf = 0u;
        id v58 = sub_1000836CC();
        __int128 v59 = (os_log_s *)objc_claimAutoreleasedReturnValue(v58);
        if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT)) {
          uint64_t v60 = 3LL;
        }
        else {
          uint64_t v60 = 2LL;
        }
        int v122 = 134217984;
        int64_t v123 = (int64_t)v57;
        _os_log_send_and_compose_impl( v60,  0LL,  &buf,  250LL,  &_mh_execute_header,  v59,  0LL,  "Purged %lld bytes of default apps.",  &v122);
        __int128 v62 = v61;

        id v63 = sub_1000836CC();
        __int128 v64 = (void *)objc_claimAutoreleasedReturnValue(v63);
        _os_log_message_persist_impl(v62, 0LL, v64);

        if (v62 != &buf) {
          free(v62);
        }
        id v65 = +[TVSDiskSpaceUtility mediaFreeSpace](&OBJC_CLASS___TVSDiskSpaceUtility, "mediaFreeSpace");
        if ((uint64_t)v65 >= *(void *)(a1 + 56))
        {
          __int128 v143 = 0u;
          memset(v144, 0, sizeof(v144));
          __int128 v141 = 0u;
          __int128 v142 = 0u;
          __int128 v139 = 0u;
          __int128 v140 = 0u;
          __int128 v137 = 0u;
          __int128 v138 = 0u;
          __int128 v135 = 0u;
          __int128 v136 = 0u;
          __int128 v133 = 0u;
          __int128 v134 = 0u;
          __int128 v131 = 0u;
          __int128 v132 = 0u;
          __int128 buf = 0u;
          id v93 = sub_1000836CC();
          v94 = (os_log_s *)objc_claimAutoreleasedReturnValue(v93);
          if (os_log_type_enabled(v94, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v95 = 3LL;
          }
          else {
            uint64_t v95 = 2LL;
          }
          int v122 = 134217984;
          int64_t v123 = (int64_t)v65;
          _os_log_send_and_compose_impl( v95,  0LL,  &buf,  250LL,  &_mh_execute_header,  v94,  0LL,  "CacheDelete+DefaultAppPurge cleared sufficient space. (now %lld free)",  &v122);
          v97 = v96;

          id v98 = sub_1000836CC();
          v99 = (void *)objc_claimAutoreleasedReturnValue(v98);
          _os_log_message_persist_impl(v97, 0LL, v99);

          if (v97 != &buf) {
            free(v97);
          }
        }

        else
        {
          id v66 = objc_msgSend(*(id *)(a1 + 32), "_purgeManuallySelectedAppsToGetSpaceNeeded:");
          __int128 v143 = 0u;
          memset(v144, 0, sizeof(v144));
          __int128 v141 = 0u;
          __int128 v142 = 0u;
          __int128 v139 = 0u;
          __int128 v140 = 0u;
          __int128 v137 = 0u;
          __int128 v138 = 0u;
          __int128 v135 = 0u;
          __int128 v136 = 0u;
          __int128 v133 = 0u;
          __int128 v134 = 0u;
          __int128 v131 = 0u;
          __int128 v132 = 0u;
          __int128 buf = 0u;
          id v67 = sub_1000836CC();
          v68 = (os_log_s *)objc_claimAutoreleasedReturnValue(v67);
          if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v69 = 3LL;
          }
          else {
            uint64_t v69 = 2LL;
          }
          int v122 = 134217984;
          int64_t v123 = (int64_t)v66;
          _os_log_send_and_compose_impl( v69,  0LL,  &buf,  250LL,  &_mh_execute_header,  v68,  0LL,  "Purged %lld bytes of manually selected apps.",  &v122);
          __int128 v71 = v70;

          id v72 = sub_1000836CC();
          __int128 v73 = (void *)objc_claimAutoreleasedReturnValue(v72);
          _os_log_message_persist_impl(v71, 0LL, v73);

          if (v71 != &buf) {
            free(v71);
          }
          id v74 = +[TVSDiskSpaceUtility mediaFreeSpace](&OBJC_CLASS___TVSDiskSpaceUtility, "mediaFreeSpace");
          if ((uint64_t)v74 >= *(void *)(a1 + 56))
          {
            __int128 v143 = 0u;
            memset(v144, 0, sizeof(v144));
            __int128 v141 = 0u;
            __int128 v142 = 0u;
            __int128 v139 = 0u;
            __int128 v140 = 0u;
            __int128 v137 = 0u;
            __int128 v138 = 0u;
            __int128 v135 = 0u;
            __int128 v136 = 0u;
            __int128 v133 = 0u;
            __int128 v134 = 0u;
            __int128 v131 = 0u;
            __int128 v132 = 0u;
            __int128 buf = 0u;
            id v100 = sub_1000836CC();
            v101 = (os_log_s *)objc_claimAutoreleasedReturnValue(v100);
            if (os_log_type_enabled(v101, OS_LOG_TYPE_DEFAULT)) {
              uint64_t v102 = 3LL;
            }
            else {
              uint64_t v102 = 2LL;
            }
            int v122 = 134217984;
            int64_t v123 = (int64_t)v74;
            _os_log_send_and_compose_impl( v102,  0LL,  &buf,  250LL,  &_mh_execute_header,  v101,  0LL,  "CacheDelete+DefaultAppPurge+ManualAppPurge cleared sufficient space. (now %lld free)",  &v122);
            v104 = v103;

            id v105 = sub_1000836CC();
            v106 = (void *)objc_claimAutoreleasedReturnValue(v105);
            _os_log_message_persist_impl(v104, 0LL, v106);

            if (v104 != &buf) {
              free(v104);
            }
          }

          else
          {
            __int128 v75 = +[TVSDiskSpaceUtility mediaFreeSpace](&OBJC_CLASS___TVSDiskSpaceUtility, "mediaFreeSpace");
            if ((uint64_t)v75 < *(void *)(a1 + 56))
            {
              __int128 v143 = 0uLL;
              memset(v144, 0, sizeof(v144));
              __int128 v141 = 0uLL;
              __int128 v142 = 0uLL;
              __int128 v139 = 0uLL;
              __int128 v140 = 0uLL;
              __int128 v137 = 0uLL;
              __int128 v138 = 0uLL;
              __int128 v135 = 0uLL;
              __int128 v136 = 0uLL;
              __int128 v133 = 0uLL;
              __int128 v134 = 0uLL;
              __int128 v131 = 0uLL;
              __int128 v132 = 0uLL;
              __int128 buf = 0uLL;
              id v76 = sub_1000836CC();
              __int128 v77 = (os_log_s *)objc_claimAutoreleasedReturnValue(v76);
              BOOL v78 = os_log_type_enabled(v77, OS_LOG_TYPE_ERROR);
              int64_t v79 = *(void *)(a1 + 56);
              if (v78) {
                uint64_t v80 = 3LL;
              }
              else {
                uint64_t v80 = 2LL;
              }
              int v122 = 134218240;
              int64_t v123 = v79;
              __int16 v124 = 2048;
              v125 = v75;
              LODWORD(v115) = 22;
              _os_log_send_and_compose_impl( v80,  0LL,  &buf,  250LL,  &_mh_execute_header,  v77,  16LL,  "Unable to clear required %lld bytes, only got %lld bytes. Failing update.",  &v122,  v115);
              __int128 v82 = v81;

              id v83 = sub_1000836CC();
              v84 = (void *)objc_claimAutoreleasedReturnValue(v83);
              _os_log_message_persist_impl(v82, 16LL, v84);

              if (v82 != &buf) {
                free(v82);
              }
              v85 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  9LL,  0LL));
              (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();

              goto LABEL_80;
            }

            __int128 v143 = 0uLL;
            memset(v144, 0, sizeof(v144));
            __int128 v141 = 0uLL;
            __int128 v142 = 0uLL;
            __int128 v139 = 0uLL;
            __int128 v140 = 0uLL;
            __int128 v137 = 0uLL;
            __int128 v138 = 0uLL;
            __int128 v135 = 0uLL;
            __int128 v136 = 0uLL;
            __int128 v133 = 0uLL;
            __int128 v134 = 0uLL;
            __int128 v131 = 0uLL;
            __int128 v132 = 0uLL;
            __int128 buf = 0uLL;
            id v107 = sub_1000836CC();
            v108 = (os_log_s *)objc_claimAutoreleasedReturnValue(v107);
            if (os_log_type_enabled(v108, OS_LOG_TYPE_DEFAULT)) {
              uint64_t v109 = 3LL;
            }
            else {
              uint64_t v109 = 2LL;
            }
            int v122 = 134217984;
            int64_t v123 = (int64_t)v75;
            _os_log_send_and_compose_impl( v109,  0LL,  &buf,  250LL,  &_mh_execute_header,  v108,  0LL,  "Successfully cleared sufficient space (now %lld free)",  &v122);
            v111 = v110;

            id v112 = sub_1000836CC();
            v113 = (void *)objc_claimAutoreleasedReturnValue(v112);
            _os_log_message_persist_impl(v111, 0LL, v113);

            if (v111 != &buf) {
              free(v111);
            }
          }
        }
      }
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
LABEL_80:

    _Block_object_dispose(v126, 8);
    _Block_object_dispose(v121, 8);
  }
}

void sub_10004CECC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

void sub_10004CF74(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:@"CACHE_DELETE_AMOUNT"]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v4 longLongValue];

  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:@"CACHE_DELETE_ERROR"]);
  if (v5)
  {
    uint64_t v6 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  9LL,  0LL));
    uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }

  memset(v21, 0, 250);
  id v9 = sub_1000836CC();
  BOOL v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v11 = 3LL;
  }
  else {
    uint64_t v11 = 2LL;
  }
  uint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
  int v17 = 134218242;
  uint64_t v18 = v12;
  __int16 v19 = 2114;
  id v20 = v5;
  _os_log_send_and_compose_impl( v11,  0LL,  v21,  250LL,  &_mh_execute_header,  v10,  0LL,  "CacheDelete request completed; purged:%lld error:%{public}@",
    &v17,
    22);
  id v14 = v13;

  id v15 = sub_1000836CC();
  BOOL v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  _os_log_message_persist_impl(v14, 0LL, v16);

  if (v14 != v21) {
    free(v14);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10004D6D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

void sub_10004D730(uint64_t a1, unsigned int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (v8)
  {
    __int128 v47 = 0u;
    memset(v48, 0, sizeof(v48));
    __int128 v45 = 0u;
    __int128 v46 = 0u;
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v34 = 0u;
    id v9 = sub_1000836CC();
    BOOL v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      uint64_t v11 = 3LL;
    }
    else {
      uint64_t v11 = 2LL;
    }
    int v30 = 67109378;
    unsigned int v31 = a2;
    __int16 v32 = 2114;
    id v33 = v8;
    _os_log_send_and_compose_impl( v11,  0LL,  &v34,  250LL,  &_mh_execute_header,  v10,  16LL,  "Request for default purgeable apps failed. Result: %d Error: %{public}@",  &v30,  18);
    id v13 = v12;

    id v14 = sub_1000836CC();
    id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    _os_log_message_persist_impl(v13, 16LL, v15);

    if (v13 != &v34)
    {
      BOOL v16 = v13;
LABEL_12:
      free(v16);
    }
  }

  else
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v7 purgeableSize];
    uint64_t v17 = objc_claimAutoreleasedReturnValue([v7 purgeableApps]);
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8LL);
    __int16 v19 = *(void **)(v18 + 40);
    *(void *)(v18 + 40) = v17;

    __int128 v47 = 0u;
    memset(v48, 0, sizeof(v48));
    __int128 v45 = 0u;
    __int128 v46 = 0u;
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v34 = 0u;
    id v20 = sub_1000836CC();
    uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v22 = 3LL;
    }
    else {
      uint64_t v22 = 2LL;
    }
    unsigned int v23 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count];
    id v24 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
    int v30 = 67109376;
    unsigned int v31 = v23;
    __int16 v32 = 2048;
    id v33 = v24;
    LODWORD(v29) = 18;
    _os_log_send_and_compose_impl( v22,  0LL,  &v34,  250LL,  &_mh_execute_header,  v21,  0LL,  "Found %d default purgeable apps totaling %lld bytes.",  &v30,  v29);
    id v26 = v25;

    id v27 = sub_1000836CC();
    int v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
    _os_log_message_persist_impl(v26, 0LL, v28);

    if (v26 != &v34)
    {
      BOOL v16 = v26;
      goto LABEL_12;
    }
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10004D9C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleID]);

  if (v4)
  {
    BOOL v5 = *(void **)(a1 + 32);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleID]);
    [v5 addObject:v6];
  }
}

BOOL sub_10004E010(id a1, PBSAppInfo *a2)
{
  id v2 = a2;
  BOOL v3 = -[PBSAppInfo isEnabled](v2, "isEnabled")
    && (-[PBSAppInfo isHidden](v2, "isHidden") & 1) == 0
    && (-[PBSAppInfo isPlaceholder](v2, "isPlaceholder") & 1) == 0
    && -[PBSAppInfo applicationType](v2, "applicationType") == (id)2;

  return v3;
}

void sub_10004E070(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v8 = 0LL;
  uint64_t v4 = -[LSApplicationRecord initWithBundleIdentifier:allowPlaceholder:error:]( objc_alloc(&OBJC_CLASS___LSApplicationRecord),  "initWithBundleIdentifier:allowPlaceholder:error:",  v3,  0LL,  &v8);
  id v5 = v8;
  if (v4 && [*(id *)(a1 + 32) _isAppACandidateForOffLoading:v4])
  {
    [*(id *)(a1 + 40) addObject:v4];
  }

  else
  {
    id v6 = sub_1000836CC();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100273BAC();
    }
  }
}

int64_t sub_10004E134(id a1, id a2, id a3)
{
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a3 diskUsage]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 staticUsage]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 diskUsage]);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 staticUsage]);
  id v9 = [v6 compare:v8];

  return (int64_t)v9;
}

LABEL_41:
      uint64_t v69 = +[TVSDiskSpaceUtility mediaFreeSpace](&OBJC_CLASS___TVSDiskSpaceUtility, "mediaFreeSpace");
      if ((uint64_t)v69 <= a4)
      {
        *(_OWORD *)((char *)v189 + 10) = 0u;
        if (v149 >= 0) {
          int64_t v79 = v149;
        }
        else {
          int64_t v79 = v149 + 3;
        }
        v188 = 0uLL;
        v189[0] = 0uLL;
        v186 = 0uLL;
        v187 = 0uLL;
        v184 = 0uLL;
        v185 = 0uLL;
        v182 = 0uLL;
        v183 = 0uLL;
        v180 = 0uLL;
        v181 = 0uLL;
        v178 = 0uLL;
        v179 = 0uLL;
        v176 = 0uLL;
        v177 = 0uLL;
        v175 = 0uLL;
        uint64_t v80 = sub_1000836CC();
        __int128 v81 = (os_log_s *)objc_claimAutoreleasedReturnValue(v80);
        __int128 v82 = v149 + (int)(v79 >> 2);
        id v83 = os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT);
        v165 = v145;
        if (v83) {
          v84 = 3LL;
        }
        else {
          v84 = 2LL;
        }
        v166 = v16;
        v167 = 2048;
        v168 = v69;
        v169 = 2048;
        v170 = a4;
        v171 = 2048;
        v149 += (int)(v79 >> 2);
        v172 = (char *)v82;
        LODWORD(v137) = 42;
        _os_log_send_and_compose_impl( v84,  0LL,  &v175,  250LL,  &_mh_execute_header,  v81,  0LL,  "Attempt [%ld]: Insufficient space available: %lld needed: %lld new size requested to purge: %lld.",  &v165,  v137,  v141,  v143);
        id v86 = v85;

        v87 = sub_1000836CC();
        uint64_t v88 = (void *)objc_claimAutoreleasedReturnValue(v87);
        _os_log_message_persist_impl(v86, 0LL, v88);

        if (v86 == &v175) {
          goto LABEL_56;
        }
        BOOL v78 = v86;
      }

      else
      {
        v188 = 0u;
        memset(v189, 0, 26);
        v186 = 0u;
        v187 = 0u;
        v184 = 0u;
        v185 = 0u;
        v182 = 0u;
        v183 = 0u;
        v180 = 0u;
        v181 = 0u;
        v178 = 0u;
        v179 = 0u;
        v176 = 0u;
        v177 = 0u;
        v175 = 0u;
        __int128 v70 = sub_1000836CC();
        __int128 v71 = (os_log_s *)objc_claimAutoreleasedReturnValue(v70);
        id v72 = os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT);
        v165 = 134218496;
        if (v72) {
          __int128 v73 = 3LL;
        }
        else {
          __int128 v73 = 2LL;
        }
        v166 = v16;
        v167 = 2048;
        v168 = v69;
        v169 = 2048;
        v170 = a4;
        LODWORD(v137) = 32;
        _os_log_send_and_compose_impl( v73,  0LL,  &v175,  250LL,  &_mh_execute_header,  v71,  0LL,  "Attempt [%ld]: Sufficient space available: %lld needed: %lld.",  &v165,  v137,  v141);
        __int128 v75 = v74;

        id v76 = sub_1000836CC();
        __int128 v77 = (void *)objc_claimAutoreleasedReturnValue(v76);
        _os_log_message_persist_impl(v75, 0LL, v77);

        if (v75 == &v175) {
          goto LABEL_56;
        }
        BOOL v78 = v75;
      }

      free(v78);
LABEL_56:

      if (++v16 == (char *)5 || (uint64_t)v69 > a4)
      {
        v90 = +[TVSDiskSpaceUtility mediaFreeSpace](&OBJC_CLASS___TVSDiskSpaceUtility, "mediaFreeSpace");
        v188 = 0u;
        memset(v189, 0, 26);
        v186 = 0u;
        v187 = 0u;
        v184 = 0u;
        v185 = 0u;
        v182 = 0u;
        v183 = 0u;
        v180 = 0u;
        v181 = 0u;
        v178 = 0u;
        v179 = 0u;
        v176 = 0u;
        v177 = 0u;
        v175 = 0u;
        id v91 = sub_1000836CC();
        v92 = (os_log_s *)objc_claimAutoreleasedReturnValue(v91);
        id v93 = v90 - v147;
        v94 = os_log_type_enabled(v92, OS_LOG_TYPE_DEFAULT);
        uint64_t v95 = (char *)v156[3];
        if (v94) {
          v96 = 3LL;
        }
        else {
          v96 = 2LL;
        }
        v165 = v145;
        v166 = v90;
        v167 = 2048;
        v168 = v147;
        v169 = 2048;
        v170 = v90 - v147;
        v171 = 2048;
        v172 = v95;
        LODWORD(v135) = 42;
        _os_log_send_and_compose_impl( v96,  0LL,  &v175,  250LL,  &_mh_execute_header,  v92,  0LL,  "Final space purged: (%lld - %lld = %lld) expected: %lld",  &v165,  v135,  v140,  v143);
        id v98 = v97;

        v99 = sub_1000836CC();
        id v100 = (void *)objc_claimAutoreleasedReturnValue(v99);
        _os_log_message_persist_impl(v98, 0LL, v100);

        if (v98 != &v175) {
          free(v98);
        }
        if (v93 >= v156[3])
        {
          v188 = 0uLL;
          memset(v189, 0, 26);
          v186 = 0uLL;
          v187 = 0uLL;
          v184 = 0uLL;
          v185 = 0uLL;
          v182 = 0uLL;
          v183 = 0uLL;
          v180 = 0uLL;
          v181 = 0uLL;
          v178 = 0uLL;
          v179 = 0uLL;
          v176 = 0uLL;
          v177 = 0uLL;
          v175 = 0uLL;
          v117 = sub_1000836CC();
          v118 = (os_log_s *)objc_claimAutoreleasedReturnValue(v117);
          v119 = os_log_type_enabled(v118, OS_LOG_TYPE_DEFAULT);
          v120 = (_BYTE *)v156[3];
          if (v119) {
            v121 = 3LL;
          }
          else {
            v121 = 2LL;
          }
          v165 = 134218496;
          v166 = (id)(v90 - v147);
          v167 = 2048;
          v168 = v120;
          v169 = 2048;
          v170 = (int64_t)v90;
          LODWORD(v13_Block_object_dispose(va, 8) = 32;
          _os_log_send_and_compose_impl( v121,  0LL,  &v175,  250LL,  &_mh_execute_header,  v118,  0LL,  "Final space cleared: %lld >= expected: %lld current unused: %lld",  &v165,  v138,  v142);
          id v107 = v122;

          int64_t v123 = sub_1000836CC();
          __int16 v124 = (void *)objc_claimAutoreleasedReturnValue(v123);
          _os_log_message_persist_impl(v107, 0LL, v124);
        }

        else
        {
          v188 = 0uLL;
          memset(v189, 0, 26);
          v186 = 0uLL;
          v187 = 0uLL;
          v184 = 0uLL;
          v185 = 0uLL;
          v182 = 0uLL;
          v183 = 0uLL;
          v180 = 0uLL;
          v181 = 0uLL;
          v178 = 0uLL;
          v179 = 0uLL;
          v176 = 0uLL;
          v177 = 0uLL;
          v175 = 0uLL;
          v101 = sub_1000836CC();
          uint64_t v102 = (os_log_s *)objc_claimAutoreleasedReturnValue(v101);
          v103 = os_log_type_enabled(v102, OS_LOG_TYPE_ERROR);
          v104 = (void *)v156[3];
          if (v103) {
            id v105 = 3LL;
          }
          else {
            id v105 = 2LL;
          }
          v165 = 134218240;
          v166 = v104;
          v167 = 2048;
          v168 = (_BYTE *)v93;
          LODWORD(v13_Block_object_dispose(va, 8) = 22;
          _os_log_send_and_compose_impl( v105,  0LL,  &v175,  250LL,  &_mh_execute_header,  v102,  16LL,  "App purge did not purge all promised space; expected: %lld purged: %lld",
            &v165,
            v138);
          id v107 = v106;

          v108 = sub_1000836CC();
          uint64_t v109 = (void *)objc_claimAutoreleasedReturnValue(v108);
          _os_log_message_persist_impl(v107, 16LL, v109);
        }

        if (v107 != &v175) {
          free(v107);
        }
        v125 = (void *)v160[5];
        if (v125)
        {
          *v144 = v125;
          v188 = 0u;
          memset(v189, 0, 26);
          v186 = 0u;
          v187 = 0u;
          v184 = 0u;
          v185 = 0u;
          v182 = 0u;
          v183 = 0u;
          v180 = 0u;
          v181 = 0u;
          v178 = 0u;
          v179 = 0u;
          v176 = 0u;
          v177 = 0u;
          v175 = 0u;
          v126 = sub_1000836CC();
          v127 = (os_log_s *)objc_claimAutoreleasedReturnValue(v126);
          if (os_log_type_enabled(v127, OS_LOG_TYPE_ERROR)) {
            v128 = 3LL;
          }
          else {
            v128 = 2LL;
          }
          id v129 = (void *)v160[5];
          v165 = 138543362;
          v166 = v129;
          LODWORD(v139) = 12;
          _os_log_send_and_compose_impl( v128,  0LL,  &v175,  250LL,  &_mh_execute_header,  v127,  16LL,  "Unable to clear sufficient space. Failed to purge apps: %{public}@",  &v165,  v139);
          __int128 v131 = v130;

          __int128 v132 = sub_1000836CC();
          __int128 v133 = (void *)objc_claimAutoreleasedReturnValue(v132);
          _os_log_message_persist_impl(v131, 16LL, v133);

          if (v131 != &v175) {
            free(v131);
          }
        }

        _Block_object_dispose(&v155, 8);
        _Block_object_dispose(&v159, 8);

        goto LABEL_89;
      }
    }
  }

  v188 = 0u;
  memset(v189, 0, 26);
  v186 = 0u;
  v187 = 0u;
  v184 = 0u;
  v185 = 0u;
  v182 = 0u;
  v183 = 0u;
  v180 = 0u;
  v181 = 0u;
  v178 = 0u;
  v179 = 0u;
  v176 = 0u;
  v177 = 0u;
  v175 = 0u;
  v110 = sub_1000836CC();
  v111 = (os_log_s *)objc_claimAutoreleasedReturnValue(v110);
  if (os_log_type_enabled(v111, OS_LOG_TYPE_DEFAULT)) {
    id v112 = 3LL;
  }
  else {
    id v112 = 2LL;
  }
  v165 = 134218496;
  v166 = [v148 count];
  v167 = 2048;
  v168 = v147;
  v169 = 2048;
  v170 = a4;
  _os_log_send_and_compose_impl( v112,  0LL,  &v175,  250LL,  &_mh_execute_header,  v111,  0LL,  "Asked to purge %lu apps but free space %lld >= currently unused space %lld. Skipping purge.",  &v165,  32,  v140);
  uint64_t v114 = v113;

  uint64_t v115 = sub_1000836CC();
  uint64_t v116 = (void *)objc_claimAutoreleasedReturnValue(v115);
  _os_log_message_persist_impl(v114, 0LL, v116);

  if (v114 != &v175) {
    free(v114);
  }
  id v93 = 0LL;
LABEL_89:

  return v93;
}

  __break(1u);
}

  __break(1u);
  return result;
}

  id result = swift_release(v8);
  *id v3 = v10;
  return result;
}

void sub_10004F188( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, char a39)
{
}

void sub_10004F230(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a4);
  if (!v7)
  {
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) += [v6 purgedSize];
    id v8 = +[TVSDiskSpaceUtility mediaFreeSpace](&OBJC_CLASS___TVSDiskSpaceUtility, "mediaFreeSpace");
    memset(v28, 0, 250);
    id v9 = sub_1000836CC();
    BOOL v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v11 = 3LL;
    }
    else {
      uint64_t v11 = 2LL;
    }
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v6 purgedApps]);
    id v13 = [v12 count];
    id v14 = [v6 purgedSize];
    uint64_t v15 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);
    int v20 = 134218752;
    id v21 = v13;
    __int16 v22 = 2048;
    id v23 = v14;
    __int16 v24 = 2048;
    uint64_t v25 = v15;
    __int16 v26 = 2048;
    id v27 = v8;
    _os_log_send_and_compose_impl( v11,  0LL,  v28,  250LL,  &_mh_execute_header,  v10,  0LL,  "Successfully purged %lu apps for a claimed %lld bytes total: %lld. (now %lld free)",  &v20,  42);
    uint64_t v17 = v16;

    id v18 = sub_1000836CC();
    __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    _os_log_message_persist_impl(v17, 0LL, v19);

    if (v17 != v28) {
      free(v17);
    }
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10004F5E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    memset(v13, 0, 250);
    id v4 = sub_1000836CC();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      uint64_t v6 = 3LL;
    }
    else {
      uint64_t v6 = 2LL;
    }
    int v11 = 138543362;
    id v12 = v3;
    _os_log_send_and_compose_impl( v6,  0LL,  v13,  250LL,  &_mh_execute_header,  v5,  16LL,  "Failed to restore purged apps [%{public}@]",  &v11,  12);
    id v8 = v7;

    id v9 = sub_1000836CC();
    BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    _os_log_message_persist_impl(v8, 16LL, v10);

    if (v8 != v13) {
      free(v8);
    }
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10004FA6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained machine]);
  [v2 postEvent:off_100469278 withContext:0 userInfo:0];
}

void sub_1000504C8(_Unwind_Exception *a1)
{
}

void sub_100050510(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = WeakRetained;
  if (WeakRetained)
  {
    if ((_DWORD)a2 == 1)
    {
      objc_msgSend(WeakRetained, "_queue_cancelRetryTimer");
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v7[2] discoveredDevices]);
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472LL;
      _DWORD v18[2] = sub_10005070C;
      v18[3] = &unk_1003D1F90;
      id v19 = v5;
      id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "bs_firstObjectPassingTest:", v18));

      [v7 _trackAnalyticsForDevice:v9];
    }

    else
    {
      [WeakRetained _reportAnalyticsForCompletedSession];
    }

    BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v7 remoteDisplayDiscoveryPeerIdentifier]);
    unsigned int v11 = [v7 remoteDisplayDiscoveryState];
    [v7 setRemoteDisplayDiscoveryState:a2 peerIdentifier:v5];
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 remoteDisplayDiscovery]);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 dedicatedDevice]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 persistentIdentifier]);

    unsigned __int8 v15 = [v10 isEqualToString:v14];
    if (!(_DWORD)a2 && v11 == 1 && (v15 & 1) == 0)
    {
      id v16 = sub_1000F77BC();
      uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 134218242;
        id v21 = v7;
        __int16 v22 = 2112;
        id v23 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[%p] Reconnect to dedicated camera after disconnect from different device: %@",  buf,  0x16u);
      }

      objc_msgSend(v7, "_queue_sendMessageIfNecessary");
    }
  }
}

id sub_10005070C(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 persistentIdentifier]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_10005074C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = sub_1000F77BC();
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 134218242;
    BOOL v10 = WeakRetained;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%p] dedicatedDeviceChanged: %@",  (uint8_t *)&v9,  0x16u);
  }

  id v7 = (void *)WeakRetained[3];
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 persistentIdentifier]);
  LODWORD(v7) = [v7 isEqualToString:v8];

  if ((_DWORD)v7) {
    *((_BYTE *)WeakRetained + 11) = 1;
  }
  objc_msgSend(WeakRetained, "_queue_sendMessageIfNecessary");
}

void sub_100050858(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remoteDisplayDiscovery]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 dedicatedDevice]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 persistentIdentifier]);

    int v9 = (void *)objc_claimAutoreleasedReturnValue([v3 persistentIdentifier]);
    LODWORD(v7) = [v8 isEqual:v9];

    if ((_DWORD)v7)
    {
      id v10 = sub_1000F77BC();
      __int16 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = 134217984;
        id v13 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%p] Dedicated device appeared, send message if necessary",  (uint8_t *)&v12,  0xCu);
      }

      objc_msgSend(v5, "_queue_sendMessageIfNecessary");
    }
  }
}

id sub_10005098C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_queue_updateRemoteDisplayDiscoveryStateSystemStatus");
}

id sub_100050B20(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_queue_activate");
}

id sub_100050B90(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 10LL) = 1;
  return objc_msgSend(*(id *)(a1 + 32), "_queue_requestDedicatedConnectionIfNecessary");
}

id sub_100050C0C(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 10LL) = 0;
  return objc_msgSend(*(id *)(a1 + 32), "_queue_cancelRetryTimer");
}

void *sub_100050C88(void *result)
{
  uint64_t v1 = result[4];
  int v2 = *((unsigned __int8 *)result + 40);
  if (*(unsigned __int8 *)(v1 + 9) != v2)
  {
    *(_BYTE *)(v1 + 9) = v2;
    id v3 = (_BYTE *)result[4];
    if (v3[9]) {
      return objc_msgSend(v3, "_queue_setRetryTime:", 15);
    }
    else {
      return objc_msgSend(v3, "_queue_cancelRetryTimer");
    }
  }

  return result;
}

uint64_t sub_100050D5C(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 9LL);
  return result;
}

void sub_100050E58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0LL;
}

void sub_1000510D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000510FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = sub_1000F77BC();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    id v7 = v6;
    if (v3)
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
        sub_100273F10((uint64_t)WeakRetained, (uint64_t)v3, v7);
      }

      [WeakRetained setRemoteDisplayDiscoveryState:0 peerIdentifier:0];
    }

    else
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v11 = 134217984;
        id v12 = WeakRetained;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[%p] RemoteDisplayDiscovery activated",  (uint8_t *)&v11,  0xCu);
      }

      id v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remoteDisplayDiscovery]);
      id v9 = [v8 currentState];
      id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 peerDeviceIdentifier]);
      [WeakRetained setRemoteDisplayDiscoveryState:v9 peerIdentifier:v10];
    }
  }
}

id sub_1000512D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setRemoteDisplayDiscoveryStateActive:*(unsigned __int8 *)(a1 + 40)];
}

void sub_100051688( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

id sub_1000516AC(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 persistentIdentifier]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_1000516EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = sub_1000F77BC();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    id v7 = v6;
    if (v3)
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        uint64_t v8 = *(void *)(a1 + 32);
        int v9 = 134218498;
        id v10 = WeakRetained;
        __int16 v11 = 2112;
        uint64_t v12 = v8;
        __int16 v13 = 2112;
        id v14 = v3;
        _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "[%p] RemoteDisplayDiscovery failed to request info from dedicatedDevice: %@ with error: %@",  (uint8_t *)&v9,  0x20u);
      }
    }

    else if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int v9 = 134217984;
      id v10 = WeakRetained;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "[%p] request to dedicated device complete",  (uint8_t *)&v9,  0xCu);
    }

    objc_msgSend(WeakRetained, "_queue_setRetryTime:", 15);
  }
}

id sub_100051B20(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100051C14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = sub_1000F77BC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 134217984;
    id v5 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[%p] Retry timer fired", (uint8_t *)&v4, 0xCu);
  }

  objc_msgSend(WeakRetained, "_queue_retryIfNecessary");
}

id sub_100052300(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = a1;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "hf_allCameraProfiles"));
  int v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSPredicate predicateWithFormat:]( &OBJC_CLASS___NSPredicate,  "predicateWithFormat:",  @"accessory.name LIKE[cd] %@",  v7));

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 filteredArrayUsingPredicate:v9]);
  if (v6) {
    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "hf_allCameraProfiles"));
  }
  else {
    __int16 v11 = &__NSArray0__struct;
  }
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "hf_allCameraProfiles"));
  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v11 arrayByAddingObjectsFromArray:v12]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v10 arrayByAddingObjectsFromArray:v13]);

  unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 firstObject]);
  return v15;
}

void sub_1000524F8()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue( +[TVSBluetoothRemoteUtilities connectedBluetoothRemote]( &OBJC_CLASS___TVSBluetoothRemoteUtilities,  "connectedBluetoothRemote"));
  if ([v0 supportsPushToTalk])
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([v0 name]);
    id v2 = [v1 copy];

    id v3 = sub_1000F6F4C();
    int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = v4;
    if (v2)
    {
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "Attempting to set HID report to stop audio streaming for connected bluetooth remote",  buf,  2u);
      }

      dispatch_assert_queue_V2(&_dispatch_main_q);
      id v6 = (dispatch_queue_s *)qword_100470130;
      if (!qword_100470130)
      {
        dispatch_queue_attr_t v7 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
        uint64_t v8 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v7);
        dispatch_queue_t v9 = dispatch_queue_create("com.apple.PineBoard.dictation.HID", v8);
        id v10 = (void *)qword_100470130;
        qword_100470130 = (uint64_t)v9;

        id v6 = (dispatch_queue_s *)qword_100470130;
      }

      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100052690;
      block[3] = &unk_1003CFF08;
      id v27 = (os_log_s *)v2;
      dispatch_async(v6, block);
      id v5 = v27;
    }

    else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      sub_100273F94(v5, v19, v20, v21, v22, v23, v24, v25);
    }

LABEL_14:
    goto LABEL_15;
  }

  if (v0)
  {
    id v11 = sub_1000F6F4C();
    id v2 = (id)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_DEBUG)) {
      sub_100273FC4((os_log_s *)v2, v12, v13, v14, v15, v16, v17, v18);
    }
    goto LABEL_14;
  }

void sub_100052690(uint64_t a1)
{
  id v1 = *(id *)(a1 + 32);
  dispatch_assert_queue_not_V2(&_dispatch_main_q);
  if (!v1)
  {
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"serialNumber != ((void *)0)"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100273FF4();
    }
    _bs_set_crash_log_message([v21 UTF8String]);
    __break(0);
    JUMPOUT(0x10005290CLL);
  }

  id v2 = sub_1000F6F4C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
    sub_10027415C(v3, v4, v5, v6, v7, v8, v9, v10);
  }

  v27[0] = @"SerialNumber";
  v27[1] = @"VendorID";
  v28[0] = v1;
  v28[1] = &off_1003FD758;
  v27[2] = @"DeviceUsagePairs";
  v24[0] = @"DeviceUsagePage";
  v24[1] = @"DeviceUsage";
  v25[0] = &off_1003FD770;
  v25[1] = &off_1003FD788;
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v25,  v24,  2LL));
  __int16 v26 = v11;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v26, 1LL));
  v28[2] = v12;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v28,  v27,  3LL));

  id v14 = v13;
  if (!v14)
  {
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"matching != ((void *)0)"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1002740A8();
    }
    _bs_set_crash_log_message([v22 UTF8String]);
    __break(0);
    JUMPOUT(0x100052968LL);
  }

  uint64_t v15 = v14;
  CFMutableDictionaryRef v16 = IOServiceMatching("IOHIDDevice");
  -[__CFDictionary addEntriesFromDictionary:](v16, "addEntriesFromDictionary:", v15);
  io_iterator_t existing = 0;
  if (!IOServiceGetMatchingServices(kIOMainPortDefault, v16, &existing) && existing)
  {
    io_object_t v17 = IOIteratorNext(existing);
    if (v17)
    {
      io_service_t v18 = v17;
      do
      {
        uint64_t v19 = IOHIDDeviceCreate(kCFAllocatorDefault, v18);
        if (v19)
        {
          uint64_t v20 = v19;
          if (!IOHIDDeviceOpen(v19, 0))
          {
            sub_100052970(0, v20);
            IOHIDDeviceClose(v20, 0);
          }

          CFRelease(v20);
        }

        IOObjectRelease(v18);
        io_service_t v18 = IOIteratorNext(existing);
      }

      while (v18);
    }

    IOObjectRelease(existing);
  }
}

void sub_100052970(int a1, IOHIDDeviceRef device)
{
  IOReturn v3 = IOHIDDeviceSetReport(device, kIOHIDReportTypeFeature, 152LL, byte_1002EC180, 2LL);
  id v4 = sub_1000F6F4C();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10027418C((uint64_t)device, v3, v6);
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 134218240;
    uint64_t v8 = 152LL;
    __int16 v9 = 2048;
    IOHIDDeviceRef v10 = device;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Successfully set HID report to stop audio streaming {reportID=0x%lx, device=%p}",  (uint8_t *)&v7,  0x16u);
  }
}

id sub_100052E64(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_initializeStore");
}

id sub_100052F28(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_writeArchive");
}

void sub_100052FD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = *(void **)(a1 + 32);
  id v7 = 0LL;
  unsigned __int8 v3 = objc_msgSend(v2, "_workQueue_addSuggestedUserProfile:error:", v1, &v7);
  id v4 = v7;
  if ((v3 & 1) == 0)
  {
    id v5 = sub_100083FF0();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10027421C();
    }
  }
}

void sub_1000530E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = *(void **)(a1 + 32);
  id v7 = 0LL;
  unsigned __int8 v3 = objc_msgSend(v2, "_workQueue_updateSuggestedUserProfile:error:", v1, &v7);
  id v4 = v7;
  if ((v3 & 1) == 0)
  {
    id v5 = sub_100083FF0();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10027429C();
    }
  }
}

void sub_100053200(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = *(void **)(a1 + 32);
  id v7 = 0LL;
  unsigned __int8 v3 = objc_msgSend(v2, "_workQueue_removeSuggestedUserProfileWithIdentifier:error:", v1, &v7);
  id v4 = v7;
  if ((v3 & 1) == 0)
  {
    id v5 = sub_100083FF0();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10027431C();
    }
  }
}

void sub_100053318(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = *(void **)(a1 + 32);
  id v7 = 0LL;
  unsigned __int8 v3 = objc_msgSend(v2, "_workQueue_updateSuggestedUserProfileSnapshot:error:", v1, &v7);
  id v4 = v7;
  if ((v3 & 1) == 0)
  {
    id v5 = sub_100083FF0();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1002743C4();
    }
  }
}

id sub_100053408(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_clearStore");
}

void sub_100053C14( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

id sub_100053C64()
{
  return [v0 code];
}

  ;
}

id sub_100053DF0(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100053E88(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100470138;
  qword_100470138 = (uint64_t)v1;
}

void sub_100053F4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  uint64_t v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  __int16 v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  IOHIDDeviceRef v10 = NSStringFromClass(v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  8LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = *(void **)(v13 + 24);
  *(void *)(v13 + 24) = v12;

  [*(id *)(*(void *)(a1 + 32) + 24) addObserver:*(void *)(a1 + 32) forKeyPath:@"hasActivePresentation" options:4 context:off_100469368];
  uint64_t v16 = objc_opt_self(&OBJC_CLASS___PBDefaultOpenAppTransitioner, v15);
  io_object_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  io_service_t v18 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v17]);

  [v18 addObserver:*(void *)(a1 + 32)];
  uint64_t v20 = objc_opt_self(&OBJC_CLASS___PBPictureInPictureManager, v19);
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v21]);

  [v22 addObserver:*(void *)(a1 + 32)];
  uint64_t v24 = objc_opt_self(&OBJC_CLASS___PBScreenSaverManager, v23);
  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
  __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v25]);

  [v26 addObserver:*(void *)(a1 + 32)];
  uint64_t v28 = objc_opt_self(&OBJC_CLASS___PBSceneManager, v27);
  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
  int v30 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v29]);

  unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue([v30 auxiliarySceneManager]);
  [v31 registerPresenter:*(void *)(a1 + 32) forActivityType:@"com.apple.appletv.airplay-scene"];
}

uint64_t sub_1000543E4(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0LL);
  }
  return result;
}

void sub_100054820(id a1)
{
  uint32_t v1 = notify_register_check(PBSAirPlayUIActiveChangedNotification, &dword_100469370);
  if (!notify_is_valid_token(dword_100469370))
  {
    id v2 = sub_1000F6664();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4[0] = 67109120;
      v4[1] = v1;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Failed to register global airplay ui mode state notification [%x]",  (uint8_t *)v4,  8u);
    }
  }

void sub_100054AE4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_100054B08(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100054B70;
  block[3] = &unk_1003D0110;
  id v2 = *(id *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
}

uint64_t sub_100054B70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_100054E94(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeObserver:*(void *)(a1 + 40)];
}

void sub_100054FB8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_100055040;
  void v7[3] = &unk_1003D0110;
  id v8 = v4;
  id v6 = v4;
  [v5 _dismissWithReason:@"Coordinated transition" animated:1 completion:v7];
}

uint64_t sub_100055040(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000552E0(_Unwind_Exception *a1)
{
}

void sub_1000552FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _presentAuxiliaryScene:*(void *)(a1 + 32)];
}

PBAirPlayContentPresentingViewController *sub_100055414(uint64_t a1)
{
  uint32_t v1 = -[PBApplicationSceneViewController initWithSceneHandle:layoutLevel:]( objc_alloc(&OBJC_CLASS___PBApplicationSceneViewController),  "initWithSceneHandle:layoutLevel:",  *(void *)(a1 + 32),  8LL);
  -[PBApplicationSceneViewController setPresentationMode:](v1, "setPresentationMode:", 3LL);
  uint64_t v2 = -[PBAirPlayContentPresentingViewController initWithChildViewController:]( objc_alloc(&OBJC_CLASS___PBAirPlayContentPresentingViewController),  "initWithChildViewController:",  v1);

  return v2;
}

id sub_100055CFC(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 16LL);
}

void sub_100056570( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100056590(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _notifyObservers];
}

id sub_100056BD4(uint64_t a1, void *a2)
{
  return [a2 loretoSuggestedUserProfileManagerDidUpdate:*(void *)(a1 + 32)];
}

UPUpdateCandidateProfileRequest *__cdecl sub_1000570D4(id a1, PBSSuggestedUserProfile *a2)
{
  uint64_t v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[PBSSuggestedUserProfile altDSID](v2, "altDSID"));
  if ([v3 length])
  {
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[UPCandidateProfilePredicate predicateForiCloudAltDSID:]( &OBJC_CLASS___UPCandidateProfilePredicate,  "predicateForiCloudAltDSID:",  v3));
    uint64_t v5 = -[UPUpdateCandidateProfileRequest initWithPredicate:]( objc_alloc(&OBJC_CLASS___UPUpdateCandidateProfileRequest),  "initWithPredicate:",  v4);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PBSSuggestedUserProfile altDSID](v2, "altDSID"));
    -[UPUpdateCandidateProfileRequest setICloudAltDSID:](v5, "setICloudAltDSID:", v6);

    -[UPUpdateCandidateProfileRequest setSuppressed:]( v5,  "setSuppressed:",  -[PBSSuggestedUserProfile suppressed](v2, "suppressed"));
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[PBSSuggestedUserProfile nameComponents](v2, "nameComponents"));
    -[UPUpdateCandidateProfileRequest setPersonNameComponents:](v5, "setPersonNameComponents:", v7);
  }

  else
  {
    id v8 = sub_100083FF0();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100274B60(v2, v4);
    }
    uint64_t v5 = 0LL;
  }

  return v5;
}

void sub_10005722C( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_10005749C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000574B8(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v11 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v13 = WeakRetained;
  if (v11
    && WeakRetained
    && (uint64_t v14 = objc_claimAutoreleasedReturnValue([WeakRetained _dataWithCachedFileURL:v11])) != 0)
  {
    uint64_t v15 = (void *)v14;
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGRect:](&OBJC_CLASS___NSValue, "valueWithCGRect:", a3, a4, a5, a6));
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

void sub_100057834(_Unwind_Exception *a1)
{
}

void sub_10005786C(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v11 = (id *)(a1 + 40);
  id v12 = a2;
  id WeakRetained = objc_loadWeakRetained(v11);
  objc_msgSend( WeakRetained,  "_notifyObserverWithUserIdentifier:imageFile:cropRect:",  *(void *)(a1 + 32),  v12,  a3,  a4,  a5,  a6);
}

void sub_1000579E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000579FC(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v11 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v13 = WeakRetained;
  if (v11
    && WeakRetained
    && (uint64_t v14 = objc_claimAutoreleasedReturnValue([WeakRetained _dataWithCachedFileURL:v11])) != 0)
  {
    uint64_t v15 = (void *)v14;
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGRect:](&OBJC_CLASS___NSValue, "valueWithCGRect:", a3, a4, a5, a6));
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

void sub_100057D34(_Unwind_Exception *a1)
{
}

void sub_100057D68(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v11 = (id *)(a1 + 40);
  id v12 = a2;
  id WeakRetained = objc_loadWeakRetained(v11);
  objc_msgSend( WeakRetained,  "_notifyObserverWithAltDSID:imageFile:cropRect:",  *(void *)(a1 + 32),  v12,  a3,  a4,  a5,  a6);
}

id sub_1000588AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) center];
}

id sub_1000588C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) scale];
}

id sub_1000588DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) cornerRadius];
}

CGAffineTransform *sub_100058A54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 scale];
  CGFloat v5 = v4;
  uint64_t result = (CGAffineTransform *)BSFloatIsOne(v3, v4);
  if (!(_DWORD)result) {
    return CGAffineTransformMakeScale((CGAffineTransform *)a2, v5, v5);
  }
  __int128 v7 = *(_OWORD *)&CGAffineTransformIdentity.c;
  *(_OWORD *)a2 = *(_OWORD *)&CGAffineTransformIdentity.a;
  *(_OWORD *)(a2 + 16) = v7;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&CGAffineTransformIdentity.tx;
  return result;
}

double sub_100058AB4( void *a1, int a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7, double a8, double a9)
{
  v10.origin.x = a3;
  v10.origin.y = a4;
  v10.size.width = a5;
  v10.size.height = a6;
  return sub_100058AF0(a1, &v10, a2, a7, a8, a9);
}

double sub_100058AF0(void *a1, CGRect *a2, int a3, double a4, double a5, double a6)
{
  id v9 = a1;
  sub_100058A54(v9, (uint64_t)&v16);
  CGRect v17 = *a2;
  CGAffineTransform v15 = v16;
  *a2 = CGRectApplyAffineTransform(v17, &v15);
  [v9 center];
  double v11 = v10;

  double v12 = 1.0 - v11;
  if (!a3) {
    double v12 = v11;
  }
  double v13 = floor(a6 * v12) + fmod(a2->size.width, 2.0) * 0.5;
  fmod(a2->size.height, 2.0);
  return v13;
}

double sub_100058BCC( void *a1, int a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7, double a8, double a9)
{
  v11.origin.x = a3;
  v11.origin.y = a4;
  v11.size.width = a5;
  v11.size.height = a6;
  double v9 = sub_100058AF0(a1, &v11, a2, a7, a8, a9);
  return v9 - v11.size.width * 0.5;
}

void sub_100058EB4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_100058EDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _layoutContextMenu]);

  return v2;
}

void sub_100059204( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_100059268(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _startPictureInPictureAction:v3];
}

void sub_1000592A8(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _expandSidebarAction:v3];
}

id sub_100059B30(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 48)) {
    double v3 = 1.0;
  }
  else {
    double v3 = 0.0;
  }
  [v2 setAlpha:v3];
  if (*(_BYTE *)(a1 + 48)) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.0;
  }
  return [*(id *)(a1 + 40) setAlpha:v4];
}

id sub_100059EB0(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100059F48(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100470150;
  qword_100470150 = (uint64_t)v1;
}

void sub_10005A0EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  __int128 v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  id v8 = objc_alloc(&OBJC_CLASS___PBPictureInPictureOverlayCoordinator);
  double v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  double v10 = NSStringFromClass(v9);
  CGRect v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  double v12 = -[PBPictureInPictureOverlayCoordinator initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  10LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void **)(v13 + 80);
  *(void *)(v13 + 80) = v12;

  CGAffineTransform v15 = (void *)objc_claimAutoreleasedReturnValue([v7 focusCoordinator]);
  [v15 addObserver:*(void *)(a1 + 32)];

  uint64_t v17 = objc_opt_self(&OBJC_CLASS___PBSystemGestureManager, v16);
  io_service_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v18]);

  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 mainWorkspace]);
  __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v21 handle]);

  uint64_t v22 = -[PBSplitViewController initWithPresentationHandler:systemGestureManager:workspace:]( objc_alloc(&OBJC_CLASS___PBSplitViewController),  "initWithPresentationHandler:systemGestureManager:workspace:",  v7,  v19,  v45);
  uint64_t v23 = *(void *)(a1 + 32);
  uint64_t v24 = *(void **)(v23 + 32);
  *(void *)(v23 + 32) = v22;

  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 32), "setDelegate:");
  uint64_t v26 = objc_opt_self(&OBJC_CLASS___PBSceneManager, v25);
  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
  uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v27]);

  [v28 addObserver:*(void *)(a1 + 32)];
  uint64_t v30 = objc_opt_self(&OBJC_CLASS___PBScreenSaverManager, v29);
  unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
  __int16 v32 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v31]);

  [v32 addObserver:*(void *)(a1 + 32)];
  uint64_t v34 = objc_opt_self(&OBJC_CLASS___PBSiriManager, v33);
  __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
  __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v35]);

  [v36 addObserver:*(void *)(a1 + 32)];
  uint64_t v38 = objc_opt_self(&OBJC_CLASS___PBBulletinManager, v37);
  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
  __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v39]);

  [v40 addObserver:*(void *)(a1 + 32)];
  uint64_t v42 = objc_opt_self(&OBJC_CLASS___PBControlCenterManager, v41);
  __int128 v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
  __int128 v44 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v43]);

  [v44 addObserver:*(void *)(a1 + 32)];
  [*(id *)(a1 + 32) _setupSystemGesturesWithManager:v19];
}

void sub_10005A7EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10005A808(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _dismissEditingControlsWithReason:@"PIP did hide" animationStyle:2];
  }

void sub_10005AC10(_Unwind_Exception *a1)
{
}

void sub_10005AC34(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v6 = *(void *)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10005ACD0;
  v8[3] = &unk_1003CFF30;
  id v9 = v4;
  id v7 = v4;
  [WeakRetained presentApplication:v6 completion:v8];
}

uint64_t sub_10005ACD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_10005AD64(id a1, PGPictureInPictureApplication *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PGPictureInPictureApplication bundleIdentifier](a2, "bundleIdentifier"));
}

void sub_10005B518(_Unwind_Exception *a1)
{
}

void sub_10005B534(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateMachine]);
  [v2 postEvent:@"Expand PiP"];
}

void sub_10005B60C(_Unwind_Exception *a1)
{
}

void sub_10005B628(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pipRootViewController]);
  [v2 movePictureInPicture];
}

void sub_10005BBF0(_Unwind_Exception *a1)
{
}

CFStringRef sub_10005BC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = a5;
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (!*((void *)WeakRetained + 8))
    {
      id v9 = -[PBPIPRootViewController initWithInitialQuadrant:]( objc_alloc(&OBJC_CLASS___PBPIPRootViewController),  "initWithInitialQuadrant:",  *((void *)WeakRetained + 12));
      -[PBPIPRootViewController setDelegate:](v9, "setDelegate:", v8);
      -[PBPIPRootViewController setControlsDelegate:](v9, "setControlsDelegate:", v8);
      -[PBPIPRootViewController setShouldShowControlsHintOnActivation:]( v9,  "setShouldShowControlsHintOnActivation:",  v8[11]);
      double v10 = (void *)objc_claimAutoreleasedReturnValue([v8 splitViewController]);
      if ([v10 isVisible])
      {
        CGRect v11 = (void *)objc_claimAutoreleasedReturnValue([v10 geometry]);
        -[PBPIPRootViewController setSplitViewGeometry:](v9, "setSplitViewGeometry:", v11);
      }

      double v12 = (void *)*((void *)v8 + 8);
      *((void *)v8 + _Block_object_dispose(va, 8) = v9;
      uint64_t v13 = v9;

      [v8 _present];
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[PBWindowManager sharedInstance](&OBJC_CLASS___PBWindowManager, "sharedInstance"));
      CGAffineTransform v15 = (void *)objc_claimAutoreleasedReturnValue([v14 pipDisplayLayoutElementHandle]);

      -[PBPIPRootViewController setDisplayLayoutElementHandle:](v13, "setDisplayLayoutElementHandle:", v15);
    }

    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"PIPViewController"]);
    uint64_t v17 = -[PBPIPContainerViewController initWithPictureInPictureViewController:]( objc_alloc(&OBJC_CLASS___PBPIPContainerViewController),  "initWithPictureInPictureViewController:",  v16);
    io_service_t v18 = (void *)objc_claimAutoreleasedReturnValue([v8 pipRootViewController]);
    [v18 addContainerViewController:v17];

    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 focusedSceneHandle]);

    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 uiClientSettings]);
    [v21 screenFocusedFrame];
    double v23 = v22;
    double v25 = v24;
    double v27 = v26;
    double v29 = v28;

    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v8 pipRootViewController]);
    objc_msgSend(v30, "adjustPositionForFocusedFrame:", v23, v25, v27, v29);
  }

  return @"Active";
}

__CFString *sub_10005BE60(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  uint64_t v13 = (__CFString *)objc_claimAutoreleasedReturnValue([v9 currentState]);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v15 = sub_100083780();
    uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      id v17 = WeakRetained[14];
      *(_DWORD *)__int128 buf = 138412290;
      id v22 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Active Picture in Picture interruptions: %@",  buf,  0xCu);
    }

    if ([WeakRetained[14] count])
    {
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472LL;
      v19[2] = sub_10005C024;
      v19[3] = &unk_1003D2380;
      objc_copyWeak(&v20, (id *)(a1 + 40));
      [WeakRetained getPictureInPicturePlayerPath:v19];
      [*(id *)(a1 + 32) _handleInterruptionsStarted];

      objc_destroyWeak(&v20);
      uint64_t v13 = @"Interrupted";
    }
  }

  return v13;
}

void sub_10005C004(_Unwind_Exception *a1)
{
}

void sub_10005C024(uint64_t a1, void *a2)
{
  id v3 = a2;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_10005C1CC;
  v15[3] = &unk_1003D1228;
  objc_copyWeak(&v16, (id *)(a1 + 32));
  id v4 = objc_retainBlock(v15);
  if (v3)
  {
    uint64_t v5 = &_dispatch_main_q;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_10005C224;
    void v12[3] = &unk_1003D2358;
    id v13 = v3;
    uint64_t v14 = v4;
    MRMediaRemoteGetPlaybackStateForPlayer(v13, &_dispatch_main_q, v12);
    id v6 = &v13;
  }

  else
  {
    id v7 = sub_100083780();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Interrupting Picture in Picture player without a known player path. PiP will not resume when interruption ends",  buf,  2u);
    }

    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_10005C308;
    v9[3] = &unk_1003D0110;
    id v10 = v4;
    BSDispatchMain(v9);
    id v6 = (id *)&v10;
  }

  objc_destroyWeak(&v16);
}

void sub_10005C1B4(_Unwind_Exception *a1)
{
}

void sub_10005C1CC(uint64_t a1, char a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained && [WeakRetained[14] count])
  {
    *((_BYTE *)v4 + 14) = a2;
    [v4[7] pictureInPictureInterruptionBegan];
    [v4 setHidden:1 animated:1];
  }
}

uint64_t sub_10005C224(uint64_t a1, int a2)
{
  id v4 = sub_100083780();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v8 = 138543874;
    uint64_t v9 = v6;
    __int16 v10 = 1024;
    int v11 = a2;
    __int16 v12 = 1024;
    BOOL v13 = a2 == 1;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Interrupting Picture in Picture player: %{public}@, playbackState: %d, shouldResume: %d",  (uint8_t *)&v8,  0x18u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

uint64_t sub_10005C308(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

__CFString *sub_10005C328(uint64_t a1, void *a2)
{
  id v3 = (__CFString *)objc_claimAutoreleasedReturnValue([a2 currentState]);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = sub_100083780();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = WeakRetained[14];
      int v9 = 138412290;
      id v10 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Active Picture in Picture interruptions: %@",  (uint8_t *)&v9,  0xCu);
    }

    if (![WeakRetained[14] count])
    {
      [WeakRetained _handleInterruptionsEnded];

      id v3 = @"Active";
    }
  }

  return v3;
}

CFStringRef sub_10005C420(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pipRootViewController]);
  [v2 stopPictureInPicture];

  return @"Active";
}

__CFString *sub_10005C464(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (__CFString *)objc_claimAutoreleasedReturnValue([v3 currentState]);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v6 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained[14] count] == (id)1
      && [v6[14] containsObject:@"Screen Saver Active"])
    {
      id v7 = sub_100083780();
      int v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136315394;
        __int16 v12 = "-[PBPictureInPictureManager _createStateMachine]_block_invoke_2";
        __int16 v13 = 2112;
        uint64_t v14 = @"Screen Saver Active";
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%s - Ending interruption in preparation for expanding PiP: %@",  buf,  0x16u);
      }

      [v6[14] removeObject:@"Screen Saver Active"];
      [v6 _handleInterruptionsEnded];
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472LL;
      v10[2] = sub_10005C5F4;
      v10[3] = &unk_1003CFF08;
      void v10[4] = v6;
      [v3 executeBlockAfterCurrentStateTransition:v10];

      id v4 = @"Active";
    }

    else
    {

      id v4 = @"Interrupted";
    }
  }

  return v4;
}

void sub_10005C5F4(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pipRootViewController]);
  [v1 stopPictureInPicture];
}

__CFString *sub_10005C624(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a5;
  id v8 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v10 = (__CFString *)objc_claimAutoreleasedReturnValue([v8 currentState]);

  if (WeakRetained)
  {
    int v11 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"PIPViewController"]);
    id v12 = WeakRetained[8];
    __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v11 contentContainer]);
    [v12 removeContainerViewController:v13];

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[8] containerViewControllers]);
    id v15 = [v14 count];

    if (!v15)
    {
      [WeakRetained[8] setDisplayLayoutElementHandle:0];
      [WeakRetained _dismiss];
      id v16 = WeakRetained[8];
      WeakRetained[8] = 0LL;

      id v17 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[4] geometry]);
      [v17 resetSafeAreaInsetsTop];

      id v10 = @"Inactive";
    }

    if ([*(id *)(*(void *)(a1 + 32) + 112) count])
    {
      [*(id *)(*(void *)(a1 + 32) + 112) removeAllObjects];
      io_service_t v18 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pictureInPictureController]);
      [v18 pictureInPictureInterruptionEnded];
    }

    [WeakRetained _runDeferredAutoPipIfRequired];
  }

  return v10;
}

void sub_10005C818(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a7;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([v10 isEqual:@"Inactive"]
    && [v11 isEqual:@"Active"])
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [WeakRetained setSessionStartDate:v14];

    id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [WeakRetained setCurrentQuadrantStartDate:v15];

    id v16 = (void *)objc_claimAutoreleasedReturnValue([v12 objectForKeyedSubscript:@"PIPViewController"]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 application]);
    io_service_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 bundleIdentifier]);

    sub_1000A232C(v18);
  }

  if ([v10 isEqual:@"Active"]
    && [v11 isEqual:@"Inactive"])
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained currentQuadrantStartDate]);
    [v19 timeIntervalSinceNow];
    double v21 = fabs(v20);

    sub_1000A2778((uint64_t)[*(id *)(a1 + 32) currentQuadrant], v21);
    id v22 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained sessionStartDate]);
    [v22 timeIntervalSinceNow];
    double v24 = fabs(v23);

    sub_1000A2414(v24);
    [WeakRetained setSessionStartDate:0];
    [WeakRetained setCurrentQuadrantStartDate:0];
    [WeakRetained setStashingEnabled:0];
  }

  [WeakRetained _notifyObserversPictureInPictureDidUpdateState];
}

void sub_10005CC80( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10005CC9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  else {
    [WeakRetained presentEditingControlsWithReason:@"User gesture"];
  }
}

void sub_10005D1F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10005D21C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    sub_1000A2A48();
  }

  else
  {
    id v6 = sub_100083780();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100274D60(a1, (uint64_t)v5, v7);
    }
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  int v9 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setStoppingFromSystemShell:0];
    [v9 _notifyObserversPictureInPictureDidUpdateState];
    [*(id *)(a1 + 32) _runDeferredAutoPipIfRequired];
  }
}

void sub_10005D4E8(_Unwind_Exception *a1)
{
}

void sub_10005D504(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pictureInPictureController]);
  [v3 cancelPictureInPictureForApplication:*(void *)(a1 + 32) sceneSessionPersistentIdentifier:0];

  [WeakRetained _notifyObserversDidCancelForApplication:*(void *)(a1 + 32)];
}

void sub_10005DCE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "pictureInPictureManager:didUpdateState:") & 1) != 0)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 currentState]);
    [v3 pictureInPictureManager:v4 didUpdateState:v5];
  }
}

void sub_10005DD9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "pictureInPictureManager:didSendPlaybackCommand:") & 1) != 0) {
    [v3 pictureInPictureManager:*(void *)(a1 + 32) didSendPlaybackCommand:*(void *)(a1 + 40)];
  }
}

void sub_10005DE58(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "pictureInPictureManager:didStopPictureInPictureForApplication:") & 1) != 0) {
    [v3 pictureInPictureManager:*(void *)(a1 + 32) didStopPictureInPictureForApplication:*(void *)(a1 + 40)];
  }
}

void sub_10005DF14(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "pictureInPictureManager:didCancelPictureInPictureForApplication:") & 1) != 0) {
    [v3 pictureInPictureManager:*(void *)(a1 + 32) didCancelPictureInPictureForApplication:*(void *)(a1 + 40)];
  }
}

void sub_10005E28C(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___BSMutableIntegerSet);
  [v1 addValue:2];
  [v1 addValue:11];
  [v1 addValue:10];
  id v2 = [v1 copy];
  id v3 = (void *)qword_100470160;
  qword_100470160 = (uint64_t)v2;
}

void sub_10005E348(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___BSMutableIntegerSet);
  [v1 addValue:2];
  id v2 = [v1 copy];
  id v3 = (void *)qword_100470170;
  qword_100470170 = (uint64_t)v2;
}

void sub_10005E588(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___BSMutableIntegerSet);
  [v1 addValue:12];
  [v1 addValue:19];
  [v1 addValue:15];
  [v1 addValue:7];
  [v1 addValue:11];
  [v1 addValue:6];
  [v1 addValue:13];
  id v2 = [v1 copy];
  id v3 = (void *)qword_100470180;
  qword_100470180 = (uint64_t)v2;
}

void sub_10005E7D4(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 11LL) = 0;
  if ([*(id *)(a1 + 32) isPresenting])
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pipRootViewController]);
    [v2 hideControlsHint];
  }

uint64_t sub_10005E86C(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 11LL) = 1;
  return result;
}

id sub_10005E8CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) pictureInPictureInterruptionBegan:@"Bulletin Focused"];
}

id sub_10005E93C(uint64_t a1)
{
  return [*(id *)(a1 + 32) pictureInPictureInterruptionEnded:@"Bulletin Focused"];
}

id sub_10005E9E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) pictureInPictureInterruptionBegan:@"Control Center Full Screen"];
}

id sub_10005EA54(uint64_t a1)
{
  return [*(id *)(a1 + 32) pictureInPictureInterruptionEnded:@"Control Center Full Screen"];
}

void sub_10005EBB8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10005EBDC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained dismissEditingControlsWithReason:@"Coordinated Transition"];
  v4[2](v4, 1LL);
}

void sub_10005ECB0(uint64_t a1, void *a2, void *a3)
{
  id v14 = a3;
  if (v14)
  {
    id v4 = sub_100083384();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_100274F84((uint64_t)v14, v5);
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  else
  {
    v23[0] = 0LL;
    v23[1] = v23;
    v23[2] = 0x3032000000LL;
    v23[3] = sub_10005EF18;
    v23[4] = sub_10005EF28;
    id v24 = 0LL;
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(global_queue);
    id v8 = dispatch_group_create();
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    id obj = a2;
    id v9 = [obj countByEnumeratingWithState:&v19 objects:v25 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v20;
      do
      {
        for (i = 0LL; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v20 != v10) {
            objc_enumerationMutation(obj);
          }
          uint64_t v12 = *(void *)(*((void *)&v19 + 1) + 8LL * (void)i);
          dispatch_group_enter(v8);
          v16[0] = _NSConcreteStackBlock;
          v16[1] = 3221225472LL;
          _DWORD v16[2] = sub_10005EF40;
          void v16[3] = &unk_1003D24D0;
          io_service_t v18 = v23;
          void v16[4] = v12;
          id v17 = v8;
          MRMediaRemoteGetPictureInPictureStatusForPlayer(v12, v7, v16);
        }

        id v9 = [obj countByEnumeratingWithState:&v19 objects:v25 count:16];
      }

      while (v9);
    }

    dispatch_group_wait(v8, 0xFFFFFFFFFFFFFFFFLL);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();

    _Block_object_dispose(v23, 8);
  }
}

void sub_10005EEEC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_10005EF18(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10005EF28(uint64_t a1)
{
}

void sub_10005EF40(uint64_t a1, int a2)
{
  if (a2) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), *(id *)(a1 + 32));
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10005F4DC( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

void sub_10005F6E8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_1000F7564();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = v7;
  if (v5 || !a2)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10027500C(a1, (uint64_t)v5, v8);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v10 = 134217984;
    uint64_t v11 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Set SIL on-time to %f minutes",  (uint8_t *)&v10,  0xCu);
  }
}

void sub_10005F90C(id a1)
{
  id v1 = objc_opt_new(&OBJC_CLASS___SSIndicatorLight);
  id v2 = (void *)qword_1004701A8;
  qword_1004701A8 = (uint64_t)v1;
}

void sub_10005FA8C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  unsigned int v3 = [v2 forceEnableSILOnTimeAccumulation];

  if (v3)
  {
    byte_1004699F8 = 1;
    id v4 = sub_1000F7564();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v26) = 0;
      id v6 = "Enabling SIL on-time accumulation via default.";
      id v7 = v5;
      uint32_t v8 = 2;
LABEL_19:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&v26, v8);
    }
  }

  else
  {
    byte_1004699F8 = 0;
    io_registry_entry_t v9 = IORegistryEntryFromPath(kIOMainPortDefault, "IODeviceTree:/product");
    if (v9)
    {
      io_object_t v10 = v9;
      CFTypeRef CFProperty = IORegistryEntryCreateCFProperty(v9, @"supports-sil-counter", kCFAllocatorDefault, 0);
      if (CFProperty)
      {
        uint64_t v12 = CFProperty;
        byte_1004699F8 = [*(id *)(a1 + 32) _BOOLeanFromData:CFProperty];
        CFRelease(v12);
      }

      else
      {
        id v22 = sub_1000F7564();
        double v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v26) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "SIL key not present, no on-time accumulation.",  (uint8_t *)&v26,  2u);
        }
      }

      IOObjectRelease(v10);
    }

    else
    {
      id v13 = sub_1000F7564();
      id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_1002751F0(v14, v15, v16, v17, v18, v19, v20, v21);
      }
    }

    id v24 = sub_1000F7564();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      if (byte_1004699F8) {
        double v25 = &stru_1003E2910;
      }
      else {
        double v25 = @" not";
      }
      int v26 = 138412290;
      double v27 = v25;
      id v6 = "SIL on-time accumulation is%@ enabled.";
      id v7 = v5;
      uint32_t v8 = 12;
      goto LABEL_19;
    }
  }
}

id sub_1000601A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _writeOnTimeToDefault];
}

id sub_100060314(uint64_t a1)
{
  return [*(id *)(a1 + 32) _persistOnTimeToPersistentStorage];
}

void sub_100060588(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (v1)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) serialisedState]);
    (*(void (**)(uint64_t, void *, void))(v1 + 16))(v1, v2, 0LL);
  }

void sub_1000607D0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  if (v7)
  {
    id v8 = sub_100083A50();
    io_registry_entry_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1002752A0(v7);
    }
  }

  else
  {
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSNumber);
    if ((objc_opt_isKindOfClass(v6, v10) & 1) != 0)
    {
      [v6 BOOLValue];
    }

    else
    {
      id v11 = sub_100083A50();
      uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100275220((uint64_t)v6);
      }
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  id v14 = (id)objc_opt_self(*(void *)(a1 + 32), v13);
}

void sub_100060A78(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  if (v7)
  {
    id v8 = sub_100083A50();
    io_registry_entry_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1002753A4(v7);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }

  else
  {
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSDictionary);
    if ((objc_opt_isKindOfClass(v6, v10) & 1) != 0)
    {
      id v11 = v6;
    }

    else
    {
      id v12 = sub_100083A50();
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100275324((uint64_t)v6);
      }

      id v11 = 0LL;
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
    id v15 = (id)objc_opt_self(*(void *)(a1 + 32), v14);
  }
}

void sub_100060E60(uint64_t a1)
{
}

id sub_100060E78(uint64_t a1)
{
  return +[PBSystemService notifyDefaultKioskAppPurgeTopShelfContentForApplicationIdentifiers:]( &OBJC_CLASS___PBSystemService,  "notifyDefaultKioskAppPurgeTopShelfContentForApplicationIdentifiers:",  *(void *)(a1 + 32));
}

  ;
}

void sub_100060ECC( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_100060FFC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBBulletinManager sharedInstance](&OBJC_CLASS___PBBulletinManager, "sharedInstance"));
  [v2 _deregisterBulletinPausedAssertion:*(void *)(a1 + 32)];
}

void sub_100061460(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _initMediaPlayer];
}

id sub_1000626E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setNeedsVolumeUpdateWithReason:@"volumeControlAvailableDidChange" silenceVolumeHUD:0];
}

id sub_100062854(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setNeedsVolumeUpdateWithReason:@"volumeValueDidChange" silenceVolumeHUD:*(unsigned __int8 *)(a1 + 40)];
}

id sub_100062A70(uint64_t a1)
{
  return +[PBDisplayManager reevaluateAtmosCapabilities](&OBJC_CLASS___PBDisplayManager, "reevaluateAtmosCapabilities");
}

id sub_100062C40(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 13LL) = 0;
  return [*(id *)(a1 + 32) _updateVolumeWithReason:*(void *)(a1 + 40) silenceVolumeHUD:*(unsigned __int8 *)(a1 + 48)];
}

BOOL sub_100063608(id a1, MPAVRoute *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  else {
    unsigned __int8 v5 = -[MPAVRoute isDeviceRoute](v4, "isDeviceRoute");
  }

  return v5;
}

BOOL sub_10006364C(id a1, MPAVRoute *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  else {
    unsigned __int8 v5 = -[MPAVRoute isDeviceRoute](v4, "isDeviceRoute");
  }

  return v5;
}

BOOL sub_100063794(id a1, MPAVRoute *a2, unint64_t a3, BOOL *a4)
{
  return -[MPAVRoute isAirPlayRoute](a2, "isAirPlayRoute", a3, a4);
}

BOOL sub_100063814(id a1, MPAVRoute *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  BOOL v5 = -[MPAVRoute routeSubtype](v4, "routeSubtype") == (id)11
    || -[MPAVRoute routeSubtype](v4, "routeSubtype") == (id)12
    || -[MPAVRoute routeSubtype](v4, "routeSubtype") == (id)21;

  return v5;
}

BOOL sub_1000638D8(id a1, MPAVRoute *a2, unint64_t a3, BOOL *a4)
{
  return -[MPAVRoute isHomeTheaterRoute](a2, "isHomeTheaterRoute", a3, a4);
}

void sub_100063E30( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

id sub_100063E54(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_queue_updateNotSupportedApplications");
}

void sub_100063E80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_queue_updateNotSupportedApplications");
}

void sub_100063EAC(uint64_t a1, uint64_t a2)
{
  id v3 = sub_100082574();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "App icon visibility preferences did change.",  buf,  2u);
  }

  dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100066630;
  block[3] = &unk_1003D0680;
  void block[4] = a2;
  dispatch_async(v6, block);
}

void sub_100064558( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28)
{
}

uint64_t sub_1000645A8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000645B8(uint64_t a1)
{
}

void sub_1000645D0(void *a1)
{
  *(_BYTE *)(*(void *)(a1[5] + 8LL) + 24LL) = *(_BYTE *)(a1[4] + 10LL);
  objc_storeStrong((id *)(*(void *)(a1[6] + 8LL) + 40LL), *(id *)(a1[4] + 40LL));
  objc_storeStrong((id *)(*(void *)(a1[7] + 8LL) + 40LL), *(id *)(a1[4] + 48LL));
}

uint64_t sub_1000646E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 8LL);
  if (*(_BYTE *)(v2 + 24))
  {
    *(_BYTE *)(v2 + 24) = 1;
  }

  else
  {
    id v3 = *(void **)(*(void *)(a1 + 32) + 40LL);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) tags]);
    BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v4));
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 intersectsSet:v5];
  }

  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL))
  {
    BOOL v6 = 1;
  }

  else if ([*(id *)(a1 + 40) type])
  {
    BOOL v6 = 0;
  }

  else
  {
    BOOL v6 = *(_BYTE *)(*(void *)(a1 + 32) + 8LL) == 0;
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v6;
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
  if (*(_BYTE *)(v7 + 24))
  {
    uint64_t result = 1LL;
  }

  else
  {
    uint64_t result = (uint64_t)[(id)objc_opt_class(*(void *)(a1 + 32)) _isApplicationHiddenWithPreference:*(void *)(a1 + 40)];
    uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
  }

  *(_BYTE *)(v7 + 24) = result;
  return result;
}

void sub_10006527C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_1000652B4(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v7 = a2;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([a3 itemID]);
  unsigned int v9 = [v8 isEqual:*(void *)(a1 + 32)];

  if (v9)
  {
    [*(id *)(a1 + 40) addObject:v7];
    *a4 = 1;
  }
}

void sub_100065330(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10006536C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 32) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000657B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setNeedsReload];
}

void sub_100065884(_Unwind_Exception *a1)
{
}

void sub_100065898(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained && [WeakRetained _queueUpdateCachedPreferences])
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100065928;
    block[3] = &unk_1003CFF08;
    void block[4] = v2;
    dispatch_async(v4, block);
  }
}

id sub_100065928(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setNeedsReload];
}

void sub_100065A2C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v2;
}

void sub_100065B04(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;
}

void sub_100065E80(id a1)
{
  v3[0] = @"com.apple.TVMovies";
  v3[1] = @"com.apple.TVShows";
  v3[2] = @"com.apple.TVAppStore";
  v3[3] = @"com.apple.facetime";
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v3, 4LL));
  id v2 = (void *)qword_1004701C0;
  qword_1004701C0 = v1;
}

void sub_100066054(id a1)
{
  uint64_t v1 = -[NSMutableSet initWithObjects:]( objc_alloc(&OBJC_CLASS___NSMutableSet),  "initWithObjects:",  @"com.apple.PreviewShell",  @"com.apple.TVSettings",  @"com.apple.TVPhotos",  @"com.apple.TVHomeSharing",  @"com.apple.dt.XcodePreviews",  0LL);
  if (MGGetProductType() == 33245053 || !MGGetBoolAnswer(@"s8TgWYc7BjtSNbtuycqauw"))
  {
    _os_feature_enabled_impl("TelephonyUtilities", "Laguna");
  }

  else
  {
    if (qword_100470208 != -1) {
      dispatch_once(&qword_100470208, &stru_1003D2760);
    }
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TVSInternationalization region](&OBJC_CLASS___TVSInternationalization, "region"));
    unsigned int v3 = [(id)qword_100470200 containsObject:v2];
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  unsigned int v5 = [v4 BOOLForKey:@"TVAppEnabledOverride"];

  if (v5) {
    -[NSMutableSet addObject:](v1, "addObject:", @"com.apple.TVWatchList");
  }
  id v6 = -[NSMutableSet copy](v1, "copy");
  id v7 = (void *)qword_1004701D0;
  qword_1004701D0 = (uint64_t)v6;
}

void sub_100066238(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  if (qword_100470208 != -1) {
    dispatch_once(&qword_100470208, &stru_1003D2760);
  }
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TVSInternationalization region](&OBJC_CLASS___TVSInternationalization, "region"));
  unsigned __int8 v3 = [(id)qword_100470200 containsObject:v2];

  if ((v3 & 1) != 0 || (_os_feature_enabled_impl("TelephonyUtilities", "Laguna") & 1) == 0) {
LABEL_7:
  }
    -[NSMutableSet addObject:](v1, "addObject:", @"com.apple.facetime");
  id v4 = -[NSMutableSet copy](v1, "copy");
  unsigned int v5 = (void *)qword_1004701E0;
  qword_1004701E0 = (uint64_t)v4;
}

void sub_100066370(id a1)
{
  uint64_t v1 = -[NSSet initWithObjects:]( objc_alloc(&OBJC_CLASS___NSSet),  "initWithObjects:",  @"com.apple.TVSettings",  0LL);
  id v2 = (void *)qword_1004701F0;
  qword_1004701F0 = (uint64_t)v1;
}

void sub_1000665B8(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", &off_1003FE5F0));
  id v2 = (void *)qword_100470200;
  qword_100470200 = v1;
}

void sub_1000665F0(id a1)
{
}

void sub_10006660C(id a1)
{
  byte_100470218 = MGGetBoolAnswer(@"CarrierInstallCapability");
}

id sub_100066630(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setNeedsReload];
}

void sub_10006668C(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___PBHintManager);
  id v2 = (void *)qword_100470228;
  qword_100470228 = (uint64_t)v1;

  unsigned __int8 v3 = (void *)qword_100470228;
  id v4 = objc_opt_new(&OBJC_CLASS___PBAVKitHintRecorder);
  [v3 registerHintRecorder:v4 forHint:1];
}

void sub_100066898( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000668B4(void *a1)
{
  if ((BSSettingFlagIsYes([*(id *)(a1[4] + 16) flagForSetting:a1[6]]) & 1) == 0)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 24) objectForKey:a1[6]]);
    [v2 noteHintShown:a1[6]];
    id v3 = (id)BSSettingFlagForBool([v2 metLimitForHint:a1[6]]);
    if (v3 != [*(id *)(a1[4] + 16) flagForSetting:a1[6]])
    {
      id v4 = [*(id *)(a1[4] + 16) mutableCopy];
      [v4 setFlag:v3 forSetting:a1[6]];
      id v5 = [v4 copy];
      uint64_t v6 = a1[4];
      id v7 = *(void **)(v6 + 16);
      *(void *)(v6 + 16) = v5;

      *(_BYTE *)(*(void *)(a1[5] + 8LL) + 24LL) = 1;
    }
  }

uint64_t sub_100066A40(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100066A50(uint64_t a1)
{
}

void sub_100066A68(uint64_t a1)
{
}

void sub_100066B24(uint64_t a1)
{
  id v2 = (uint64_t *)(a1 + 32);
  id v3 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  id v4 = (uint64_t *)(a1 + 48);
  [*(id *)(*(v4 - 1) + 24) setObject:v3 forKey:v5];
  id v6 = sub_100082FC4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
    sub_1002759E4(v2, v4, v7);
  }
}

id sub_100066CD0(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100066D68(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100470238;
  qword_100470238 = (uint64_t)v1;
}

void sub_100066FC4(_Unwind_Exception *a1)
{
}

id sub_100066FFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateDumpBuilder]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 build]);

  return v3;
}

void sub_100067050(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  id v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  unsigned int v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v10 = NSStringFromClass(v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  15LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void **)(v13 + 24);
  *(void *)(v13 + 24) = v12;
}

void sub_100067104(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleBackButton];
}

id *sub_1000677E0(id *result, char a2)
{
  if ((a2 & 1) == 0) {
    return (id *)[result[4] dismissOrShrinkCurrentBulletin];
  }
  return result;
}

LABEL_16:
}
}
}

    uint64_t v5 = _os_feature_enabled_impl("Accessibility", "HoverText");
    if (v4 == 1024 && (_DWORD)v5 != 0)
    {
      unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue(+[AXSettings sharedInstance](&OBJC_CLASS___AXSettings, "sharedInstance"));
      objc_msgSend(v9, "setHoverTextEnabled:", objc_msgSend(v9, "hoverTextEnabled") ^ 1);

      goto LABEL_59;
    }

    if (v4 == 2048)
    {
      id v8 = _AXSPhotosensitiveMitigationEnabled(v5, v6) == 0;
      _AXSPhotosensitiveMitigationSetEnabled(v8);
      goto LABEL_59;
    }

    int64_t v79 = (void *)objc_claimAutoreleasedReturnValue( +[_PBAXMenuAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS____PBAXMenuAlertController,  "alertControllerWithTitle:message:preferredStyle:",  0LL,  0LL,  1LL));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v79 view]);
    [v10 setAccessibilityIdentifier:@"AXMenu"];

    __int128 v75 = (void *)objc_claimAutoreleasedReturnValue(+[AXSettings sharedInstance](&OBJC_CLASS___AXSettings, "sharedInstance"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v75 tripleClickOrderedOptions]);
    if (![v11 count])
    {
      id v12 = objc_claimAutoreleasedReturnValue(-[PBAXFeatureManager _defaultTripleClickOptions](self, "_defaultTripleClickOptions"));

      id v11 = (void *)v12;
    }

    id v100 = 0u;
    v101 = 0u;
    id v98 = 0u;
    v99 = 0u;
    id obj = v11;
    uint64_t v13 = [obj countByEnumeratingWithState:&v98 objects:v104 count:16];
    uint64_t v14 = &OBJC_CLASS___TVSUIGradientView_ptr;
    if (!v13)
    {
LABEL_58:

      __int128 v70 = (void *)objc_claimAutoreleasedReturnValue([v14[18] actionWithTitle:0 style:1 handler:0]);
      [v79 addAction:v70];
      __int128 v71 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewController:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewController:",  v79));
      id v72 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
      uint64_t v102 = @"PBDialogOptionPresentForcedKey";
      v103 = &__kCFBooleanTrue;
      __int128 v73 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v103,  &v102,  1LL));
      [v72 presentDialogWithContext:v71 options:v73 completion:0];

      goto LABEL_59;
    }

    id v15 = v13;
    uint64_t v16 = *(void *)v99;
LABEL_31:
    uint64_t v17 = 0LL;
    while (1)
    {
      if (*(void *)v99 != v16) {
        objc_enumerationMutation(obj);
      }
      uint64_t v18 = *(void **)(*((void *)&v98 + 1) + 8 * v17);
      uint64_t v19 = [v18 intValue];
      if (v19 <= 127)
      {
        switch(v19)
        {
          case 1:
            objc_msgSend(v79, "setShouldSpeakItems:", objc_msgSend(v77, "voiceOverEnabled") ^ 1);
            uint64_t v20 = sub_1001C307C(@"AXMenuVoiceOverAction", 0LL);
            uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
            v96[0] = _NSConcreteStackBlock;
            v96[1] = 3221225472LL;
            v96[2] = sub_10019E908;
            v96[3] = &unk_1003DABA0;
            id v22 = v77;
            v97 = v22;
            double v23 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v21,  0LL,  v96));

            [v23 setAccessibilityIdentifier:@"AXMenuVoiceOverAction"];
            objc_msgSend(v23, "_setChecked:", objc_msgSend(v22, "voiceOverEnabled"));
            uint64_t v14 = &OBJC_CLASS___TVSUIGradientView_ptr;
            [v79 addAction:v23];

            id v24 = v97;
            goto LABEL_55;
          case 2:
            __int128 v40 = v14[18];
            uint64_t v41 = sub_1001C307C(@"AXMenuZoomAction", 0LL);
            uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue(v41);
            v94[0] = _NSConcreteStackBlock;
            v94[1] = 3221225472LL;
            v94[2] = sub_10019E938;
            v94[3] = &unk_1003DABA0;
            __int128 v43 = v77;
            uint64_t v95 = v43;
            __int128 v44 = (void *)objc_claimAutoreleasedReturnValue([v40 actionWithTitle:v42 style:0 handler:v94]);

            [v44 setAccessibilityIdentifier:@"AXMenuZoomAction"];
            objc_msgSend(v44, "_setChecked:", objc_msgSend(v43, "zoomEnabled"));
            [v79 addAction:v44];

            id v24 = v95;
            goto LABEL_55;
          case 3:
          case 5:
          case 6:
          case 7:
            goto LABEL_56;
          case 4:
            __int128 v45 = v14[18];
            __int128 v46 = sub_1001C307C(@"AXMenuClosedCaptionAction", 0LL);
            __int128 v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
            v92[0] = _NSConcreteStackBlock;
            v92[1] = 3221225472LL;
            v92[2] = sub_10019E968;
            v92[3] = &unk_1003DABA0;
            id v48 = v76;
            id v93 = v48;
            id v49 = (void *)objc_claimAutoreleasedReturnValue([v45 actionWithTitle:v47 style:0 handler:v92]);

            [v49 setAccessibilityIdentifier:@"AXMenuClosedCaptionAction"];
            objc_msgSend(v49, "_setChecked:", objc_msgSend(v48, "preferSDHOverRegularSubtitles"));
            [v79 addAction:v49];

            id v24 = v93;
            goto LABEL_55;
          case 8:
            id v50 = v14[18];
            uint64_t v51 = sub_1001C307C(@"AXMenuAudioDescriptionAction", 0LL);
            int64_t v52 = (void *)objc_claimAutoreleasedReturnValue(v51);
            v90[0] = _NSConcreteStackBlock;
            v90[1] = 3221225472LL;
            v90[2] = sub_10019E998;
            v90[3] = &unk_1003DABA0;
            __int128 v53 = v76;
            id v91 = v53;
            __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v50 actionWithTitle:v52 style:0 handler:v90]);

            [v54 setAccessibilityIdentifier:@"AXMenuAudioDescriptionAction"];
            objc_msgSend(v54, "_setChecked:", objc_msgSend(v53, "preferVideoDescriptions"));
            [v79 addAction:v54];

            id v24 = v91;
            goto LABEL_55;
          default:
            if (v19 != 32) {
              goto LABEL_56;
            }
            __int128 v35 = v14[18];
            __int128 v36 = sub_1001C307C(@"AXMenuSwitchControlAction", 0LL);
            uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
            v88[0] = _NSConcreteStackBlock;
            v88[1] = 3221225472LL;
            v88[2] = sub_10019E9C8;
            v88[3] = &unk_1003DABA0;
            uint64_t v38 = v77;
            v89 = v38;
            __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([v35 actionWithTitle:v37 style:0 handler:v88]);

            [v39 setAccessibilityIdentifier:@"AXMenuSwitchControlAction"];
            objc_msgSend(v39, "_setChecked:", objc_msgSend(v38, "switchControlEnabled"));
            [v79 addAction:v39];

            id v24 = v89;
            break;
        }

        goto LABEL_55;
      }

      if (v19 <= 511)
      {
        if (v19 == 128)
        {
          id v65 = v14[18];
          id v66 = sub_1001C307C(@"AXMenuDisplayFilterColorAdjustmentsAction", 0LL);
          id v67 = (void *)objc_claimAutoreleasedReturnValue(v66);
          v84[0] = _NSConcreteStackBlock;
          v84[1] = 3221225472LL;
          v84[2] = sub_10019EA48;
          v84[3] = &unk_1003DABA0;
          v68 = v77;
          v85 = v68;
          uint64_t v69 = (void *)objc_claimAutoreleasedReturnValue([v65 actionWithTitle:v67 style:0 handler:v84]);

          [v69 setAccessibilityIdentifier:@"AXMenuDisplayFilterColorAdjustmentsAction"];
          objc_msgSend(v69, "_setChecked:", objc_msgSend(v68, "displayFilterColorAdjustmentsEnabled"));
          [v79 addAction:v69];

          id v24 = v85;
          goto LABEL_55;
        }

        if (v19 == 256)
        {
          uint64_t v30 = v14[18];
          unsigned int v31 = sub_1001C307C(@"AXMenuDisplayFilterLightSensitivityAction", 0LL);
          __int16 v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
          v82[0] = _NSConcreteStackBlock;
          v82[1] = 3221225472LL;
          v82[2] = sub_10019EA78;
          v82[3] = &unk_1003DABA0;
          uint64_t v33 = v77;
          id v83 = v33;
          uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v30 actionWithTitle:v32 style:0 handler:v82]);

          [v34 setAccessibilityIdentifier:@"AXMenuDisplayFilterLightSensitivityAction"];
          objc_msgSend(v34, "_setChecked:", objc_msgSend(v33, "displayFilterLightSensitivityEnabled"));
          [v79 addAction:v34];

          id v24 = v83;
          goto LABEL_55;
        }
      }

      else
      {
        switch(v19)
        {
          case 512:
            id v55 = v14[18];
            __int128 v56 = sub_1001C307C(@"AXMenuDisplayFilterReduceWhitePointAction", 0LL);
            id v57 = (void *)objc_claimAutoreleasedReturnValue(v56);
            v80[0] = _NSConcreteStackBlock;
            v80[1] = 3221225472LL;
            v80[2] = sub_10019EAA8;
            v80[3] = &unk_1003DABA0;
            id v58 = v77;
            __int128 v81 = v58;
            __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v55 actionWithTitle:v57 style:0 handler:v80]);

            [v59 setAccessibilityIdentifier:@"AXMenuDisplayFilterReduceWhitePointAction"];
            objc_msgSend(v59, "_setChecked:", objc_msgSend(v58, "displayFilterReduceWhitePointEnabled"));
            [v79 addAction:v59];

            id v24 = v81;
            goto LABEL_55;
          case 1024:
            if (_os_feature_enabled_impl("Accessibility", "HoverText"))
            {
              uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue(+[AXSettings sharedInstance](&OBJC_CLASS___AXSettings, "sharedInstance"));
              __int128 v61 = v14[18];
              __int128 v62 = sub_1001C307C(@"AXMenuHoverTextAction", 0LL);
              id v63 = (void *)objc_claimAutoreleasedReturnValue(v62);
              v86[0] = _NSConcreteStackBlock;
              v86[1] = 3221225472LL;
              v86[2] = sub_10019E9F8;
              v86[3] = &unk_1003DABA0;
              v87 = v60;
              id v24 = v60;
              __int128 v64 = (void *)objc_claimAutoreleasedReturnValue([v61 actionWithTitle:v63 style:0 handler:v86]);

              uint64_t v14 = &OBJC_CLASS___TVSUIGradientView_ptr;
              [v64 setAccessibilityIdentifier:@"AXMenuHoverTextAction"];
              objc_msgSend(v64, "_setChecked:", objc_msgSend(v24, "hoverTextEnabled"));
              [v79 addAction:v64];

              goto LABEL_55;
            }

            break;
          case 2048:
            double v25 = v14[18];
            int v26 = sub_1001C307C(@"AXMenuPhotosensitiveMitigationAction", 0LL);
            double v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
            id v24 = (id)objc_claimAutoreleasedReturnValue([v25 actionWithTitle:v27 style:0 handler:&stru_1003DAFA8]);

            uint64_t v28 = [v24 setAccessibilityIdentifier:@"AXMenuPhotosensitiveMitigationAction"];
            objc_msgSend(v24, "_setChecked:", _AXSPhotosensitiveMitigationEnabled(v28, v29) != 0);
            [v79 addAction:v24];
LABEL_55:

            break;
        }
      }

        uint64_t v13 = v18;
        goto LABEL_17;
      }
    }
  }

  id v24 = objc_allocWithZone(v21);
  double v25 = a1;
  sub_10022A0A8(v25);
  double v27 = v26;

  return v27;
}

      uint64_t v14 = ++v11 < v12;
      v7 += 2;
      if (v13 == v11) {
        goto LABEL_69;
      }
    }
  }

id sub_1000685BC(uint64_t a1)
{
  return +[PBBulletinService applicationRetireBulletinViewController:]( &OBJC_CLASS___PBBulletinService,  "applicationRetireBulletinViewController:",  *(void *)(a1 + 40));
}

void sub_100068838(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[ITIdleTimerState sharedInstance](&OBJC_CLASS___ITIdleTimerState, "sharedInstance"));
  id v9 = 0LL;
  id v3 = [v2 newAssertionToDisableIdleTimerForReason:@"Interactive Bulletin" error:&v9];
  id v4 = v9;
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 72);
  *(void *)(v5 + 72) = v3;

  if (v4)
  {
    id v7 = sub_100082754();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100275E00();
    }
  }
}

void sub_100068A28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  else {
    [WeakRetained activateCurrentBulletin];
  }
}

void sub_100068C4C(void *a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "bulletinManager:willPresentBulletinViewController:withActivationActions:") & 1) != 0) {
    [v3 bulletinManager:a1[4] willPresentBulletinViewController:a1[5] withActivationActions:a1[6]];
  }
}

void sub_100068D10(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "bulletinManager:didDismissBulletinViewController:") & 1) != 0) {
    [v3 bulletinManager:*(void *)(a1 + 32) didDismissBulletinViewController:*(void *)(a1 + 40)];
  }
}

void sub_100068DD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "bulletinManager:didBeginFocusOnBulletinViewController:") & 1) != 0) {
    [v3 bulletinManager:*(void *)(a1 + 32) didBeginFocusOnBulletinViewController:*(void *)(a1 + 40)];
  }
}

void sub_100068E90(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "bulletinManager:didEndFocusOnBulletinViewController:") & 1) != 0) {
    [v3 bulletinManager:*(void *)(a1 + 32) didEndFocusOnBulletinViewController:*(void *)(a1 + 40)];
  }
}

void sub_100069018(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_10006953C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location)
{
}

void sub_100069594(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _optIn];
}

void sub_1000695C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _optOut];
}

BOOL sub_1000699CC(id a1, PBSAppInfo *a2)
{
  id v2 = a2;
  else {
    unsigned int v3 = -[PBSAppInfo isHidden](v2, "isHidden") ^ 1;
  }

  return v3;
}

void sub_100069AE0(_Unwind_Exception *a1)
{
}

void sub_100069AF4(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) appInfos]);
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;

  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) oldToNewUpdatedAppInfos]);
  id v6 = [v5 countByEnumeratingWithState:&v31 objects:v36 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v32;
    do
    {
      id v9 = 0LL;
      do
      {
        if (*(void *)v32 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void **)(*(void *)(a1 + 32) + 48LL);
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v31 + 1) + 8 * (void)v9) bundleIdentifier]);
        [v10 addObject:v11];

        id v9 = (char *)v9 + 1;
      }

      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v31 objects:v36 count:16];
    }

    while (v7);
  }

  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "addedAppInfos", 0));
  id v13 = [v12 countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v28;
    do
    {
      uint64_t v16 = 0LL;
      do
      {
        if (*(void *)v28 != v15) {
          objc_enumerationMutation(v12);
        }
        uint64_t v17 = *(void **)(*(void *)(a1 + 32) + 48LL);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v27 + 1) + 8 * (void)v16) bundleIdentifier]);
        [v17 addObject:v18];

        uint64_t v16 = (char *)v16 + 1;
      }

      while (v14 != v16);
      id v14 = [v12 countByEnumeratingWithState:&v27 objects:v35 count:16];
    }

    while (v14);
  }

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) oldToNewConfiguration]);
  id v20 = [v19 count];

  if (v20)
  {
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) oldToNewConfiguration]);
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 objectEnumerator]);
    double v23 = (void *)objc_claimAutoreleasedReturnValue([v22 allObjects]);
    uint64_t v24 = objc_claimAutoreleasedReturnValue([v23 firstObject]);

    uint64_t v25 = *(void *)(a1 + 32);
    int v26 = *(void **)(v25 + 56);
    *(void *)(v25 + 56) = v24;
  }

void sub_100069EE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  id v4 = *(void **)(v2 + 32);
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  v26[2] = sub_10006A128;
  v26[3] = &unk_1003D0B78;
  v26[4] = v2;
  id v27 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v26];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 40);
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472LL;
  void v24[2] = sub_10006A1A4;
  v24[3] = &unk_1003D0B78;
  void v24[4] = v5;
  id v25 = *(id *)(a1 + 48);
  [v6 enumerateKeysAndObjectsUsingBlock:v24];
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v7 = *(id *)(*(void *)(a1 + 32) + 48LL);
  id v8 = [v7 countByEnumeratingWithState:&v20 objects:v28 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v21;
    do
    {
      for (i = 0LL; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v21 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v20 + 1) + 8LL * (void)i);
        id v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "objectForKey:", v12, (void)v20));
        id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKey:v12]);
        [*(id *)(a1 + 56) setObject:v14 forKey:v13];
      }

      id v9 = [v7 countByEnumeratingWithState:&v20 objects:v28 count:16];
    }

    while (v9);
  }

  if (([*(id *)(*(void *)(a1 + 32) + 56) isEqual:*(void *)(*(void *)(a1 + 32) + 64)] & 1) == 0)
  {
    uint64_t v15 = *(void *)(a1 + 32);
    uint64_t v16 = *(void *)(v15 + 64);
    if (!v16) {
      uint64_t v16 = *(void *)(v15 + 56);
    }
    objc_msgSend(*(id *)(a1 + 64), "setObject:forKey:", *(void *)(*(void *)(a1 + 32) + 56), v16, (void)v20);
  }

  id v17 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 32), "copy", (void)v20);
  uint64_t v18 = *(void *)(a1 + 32);
  uint64_t v19 = *(void **)(v18 + 40);
  *(void *)(v18 + 40) = v17;

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 64LL), *(id *)(*(void *)(a1 + 32) + 56LL));
  [*(id *)(*(void *)(a1 + 32) + 48) removeAllObjects];
}

void sub_10006A128(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 40) objectForKey:v5]);
  if (!v7)
  {
    [*(id *)(a1 + 40) addObject:v6];
    [*(id *)(*(void *)(a1 + 32) + 48) removeObject:v5];
  }
}

void sub_10006A1A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKey:v5]);
  if (!v7)
  {
    [*(id *)(a1 + 40) addObject:v6];
    [*(id *)(*(void *)(a1 + 32) + 48) removeObject:v5];
  }
}

void sub_10006AB54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10006AB90(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    objc_sync_enter(v6);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    v13[2] = sub_10006ADB4;
    void v13[3] = &unk_1003D28B0;
    void v13[4] = v6;
    id v7 = objc_retainBlock(v13);
    if (v3)
    {
      id v8 = sub_100084518();
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100276170((uint64_t)v6, (uint64_t)v3, v9);
      }

      ((void (*)(void *, void, id))v7[2])(v7, 0LL, v3);
    }

    else
    {
      id v10 = sub_100084518();
      uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = *((void *)v6 + 3);
        *(_DWORD *)__int128 buf = 141558274;
        uint64_t v15 = 1752392040LL;
        __int16 v16 = 2112;
        uint64_t v17 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Finished updating persona application identifiers. {personaUniqueString=%{mask.hash}@}",  buf,  0x16u);
      }

      ((void (*)(void *, uint64_t, void))v7[2])(v7, 1LL, 0LL);
    }

    [v6 willChangeValueForKey:@"finished"];
    [v6 willChangeValueForKey:@"executing"];
    *((_BYTE *)v6 + _Block_object_dispose(va, 8) = 0;
    *((_BYTE *)v6 + 9) = 1;
    [v6 didChangeValueForKey:@"executing"];
    [v6 didChangeValueForKey:@"finished"];

    objc_sync_exit(v6);
  }
}

void sub_10006AD90(_Unwind_Exception *a1)
{
}

uint64_t sub_10006ADB4(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 32) + 40LL);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10006B1B8(_Unwind_Exception *a1)
{
}

uint64_t sub_10006B1DC(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 32) + 16LL);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10006B524( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10006B54C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handlePausedCompoundAssertionStateChange:v3];
}

id sub_10006BADC(uint64_t a1)
{
  return [*(id *)(a1 + 32) pictureInPictureAvoidanceController:*(void *)(a1 + 40) didReceiveHint:*(void *)(a1 + 48) withTransitionContext:*(void *)(a1 + 56)];
}

id sub_10006BBAC(uint64_t a1)
{
  return [*(id *)(a1 + 32) pictureInPictureAvoidanceController:*(void *)(a1 + 40) didReceiveHint:*(void *)(a1 + 48) withTransitionContext:0];
}

__CFString *sub_10006BC6C(unint64_t a1)
{
  if (a1 >= 0x3C) {
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"(%lu)", a1));
  }
  else {
    id v1 = off_1003D28F8[a1];
  }
  return v1;
}

__CFString *sub_10006BCC0(uint64_t a1)
{
  if (a1)
  {
    id v6 = _NSConcreteStackBlock;
    uint64_t v7 = 3221225472LL;
    id v8 = sub_10006BDF8;
    id v9 = &unk_1003D28D8;
    id v10 = -[NSMutableArray initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableArray), "initWithCapacity:", 1LL);
    uint64_t v11 = a1;
    uint64_t v2 = v10;
    id v3 = objc_retainBlock(&v6);
    ((void (*)(void ***, uint64_t, const __CFString *))v3[2])(v3, 1LL, @"Began");
    ((void (*)(void ***, uint64_t, const __CFString *))v3[2])(v3, 2LL, @"Changed");
    ((void (*)(void ***, uint64_t, const __CFString *))v3[2])(v3, 4LL, @"Ended");
    ((void (*)(void ***, uint64_t, const __CFString *))v3[2])(v3, 8LL, @"Cancelled");
    ((void (*)(void ***, uint64_t, const __CFString *))v3[2])(v3, 16LL, @"Failed");
    id v4 = (__CFString *)objc_claimAutoreleasedReturnValue( -[NSMutableArray componentsJoinedByString:]( v2,  "componentsJoinedByString:",  @", ",  v6,  v7,  v8,  v9));
  }

  else
  {
    id v4 = @"None";
  }

  return v4;
}

id *sub_10006BDF8(id *result, uint64_t a2)
{
  return result;
}

CFStringRef sub_10006BE1C()
{
  return @"com.apple.frontboard";
}

void sub_10006C008(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:PBSSystemHomeUIServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_10006C314(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSSystemHomeUIServiceConfigureConnection();
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_10006C3B4;
  v4[3] = &unk_1003D1048;
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 32);
  [v3 setInvalidationHandler:v4];
}

void sub_10006C3B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10008312C();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    int v8 = 138543874;
    uint64_t v9 = v6;
    __int16 v10 = 2048;
    uint64_t v11 = v7;
    __int16 v12 = 2112;
    id v13 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated {client=%{public}@, service_ptr=%p, connection=%@}",  (uint8_t *)&v8,  0x20u);
  }

  [*(id *)(a1 + 40) invalidate];
}

void sub_10006C6DC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10006C6F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10006C704(uint64_t a1)
{
}

void sub_10006C71C(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentStreamState]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10006CA24(uint64_t a1)
{
}

LABEL_12:
    BaseAttributes = BKSHIDEventGetBaseAttributes(a3);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(BaseAttributes);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 environment]);
    __int16 v16 = (void *)objc_claimAutoreleasedReturnValue( +[BKSHIDEventDeferringEnvironment keyboardFocusEnvironment]( &OBJC_CLASS___BKSHIDEventDeferringEnvironment,  "keyboardFocusEnvironment"));
    uint64_t v17 = [v15 isEqual:v16];

    if ((v17 & 1) != 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }

      goto LABEL_13;
    }

    -[PBDefaultOpenAppTransitioner handleFocusedAppRequestDeactivationFromFailure:]( self,  "handleFocusedAppRequestDeactivationFromFailure:",  1LL);
  }

    if (v4)
    {
      [*(id *)(*(void *)(a1 + 32) + 24) removeObject:v4];
      [*(id *)(*(void *)(a1 + 32) + 16) addOperation:v4];
    }
  }

  return v6;
}

    id v5 = sub_100082A9C();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100284114(v3, v6);
    }

    goto LABEL_15;
  }

  if ((v3 + 3) > 0x35 || ((1LL << (v3 + 3)) & 0x2000001000000FLL) == 0)
  {
    if (v3 == -100) {
      return 0x80000000;
    }
    goto LABEL_12;
  }

  return v3;
}
  }
}

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "ams_altDSID"));
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "pbd_localOverrideNameForItunesAltDSID:", v19));

  __int16 v16 = 0LL;
  uint64_t v18 = 1;
LABEL_13:
  if ([v3 hasActiveiTunesAccount])
  {
    if (v7)
    {
      __int128 v20 = (uint64_t)[v7 isActive];
      if (((v18 | v20 ^ 1) & 1) == 0)
      {
        __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "pbd_selectedHomeUserIdentifier"));
        __int128 v20 = (uint64_t)[v16 isEqual:v21];
      }
    }

    else
    {
      __int128 v20 = 0LL;
    }
  }

  else
  {
    __int128 v20 = 1LL;
  }

  __int128 v22 = objc_alloc_init(&OBJC_CLASS___UPAddProfileRequest);
  __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v3 iCloudAltDSID]);
  -[UPAddProfileRequest setICloudAltDSID:](v22, "setICloudAltDSID:", v23);

  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "ams_altDSID"));
  -[UPAddProfileRequest setITunesAltDSID:](v22, "setITunesAltDSID:", v24);

  id v25 = (void *)objc_claimAutoreleasedReturnValue([v3 gameCenterAltDSID]);
  -[UPAddProfileRequest setGameCenterAltDSID:](v22, "setGameCenterAltDSID:", v25);

  -[UPAddProfileRequest setPrimary:](v22, "setPrimary:", 1LL);
  -[UPAddProfileRequest setActive:](v22, "setActive:", v20);
  if (v17)
  {
    int v26 = (void *)objc_claimAutoreleasedReturnValue(+[UPSetting customNameSettingWithName:](&OBJC_CLASS___UPSetting, "customNameSettingWithName:", v17));
    id v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v26));
    -[UPAddProfileRequest setSettings:](v22, "setSettings:", v27);
  }

  return v22;
}
}

      uint64_t v19 = objc_claimAutoreleasedReturnValue([WeakRetained _launchCRDApp]);
      goto LABEL_13;
    }

    if ((v13 & 0xFFFFFFFFFFFFFFFDLL) == 1) {
      goto LABEL_12;
    }
  }

id sub_10006CBEC(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "_mainQueue_processPressType:sender:",  *(void *)(a1 + 48),  *(void *)(a1 + 40));
}

void sub_10006CF44( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10006CF68(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _receiveSupportedCommands:v6 error:v5];

  [WeakRetained satisfyMilestone:@"kPBMRGetSupportedCommandsMilestone"];
}

LABEL_6:
  return v5;
}

  -[NSMapTable removeObjectForKey:](self->_descriptorCache, "removeObjectForKey:", v7);
}

  if (!v3) {
    id v4 = 1;
  }
  if (!v4) {
    -[PBPictureInPictureOverlayCoordinator _dismiss](self, "_dismiss");
  }
}
}

        id v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
      }
    }

    uint64_t v18 = v13 + 1;
    if (v13 + 1 < v12)
    {
      uint64_t v17 = *(void *)(v90 + 8 * v18);
      if (v17) {
        goto LABEL_16;
      }
      uint64_t v18 = v13 + 2;
      if (v13 + 2 < v12)
      {
        uint64_t v17 = *(void *)(v90 + 8 * v18);
        if (!v17)
        {
          uint64_t v18 = v13 + 3;
          if (v13 + 3 < v12)
          {
            uint64_t v17 = *(void *)(v90 + 8 * v18);
            if (v17) {
              goto LABEL_16;
            }
            while (1)
            {
              id v13 = v18 + 1;
              if (__OFADD__(v18, 1LL)) {
                goto LABEL_52;
              }
              if (v13 >= v12) {
                break;
              }
              uint64_t v17 = *(void *)(v90 + 8 * v13);
              ++v18;
              if (v17) {
                goto LABEL_17;
              }
            }
          }

          goto LABEL_28;
        }

id sub_10006DE60(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
}

id sub_10006DE80(uint64_t a1)
{
  return [*(id *)(a1 + 32) isConnected];
}

id sub_10006DE98(uint64_t a1)
{
  return [*(id *)(a1 + 32) type];
}

id sub_10006DEB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) vendorIdentifier];
}

void sub_10006E38C(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) _init];
  uint64_t v2 = (void *)qword_100470248;
  qword_100470248 = (uint64_t)v1;
}

id sub_10006E550(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_activate");
}

void sub_10006E634( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10006E64C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10006E65C(uint64_t a1)
{
}

void sub_10006E674(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentPairedDevices]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10006E77C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10006E794(uint64_t a1)
{
  uint64_t v2 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentPairedDevices]);
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v2 _connectedDevicesFromDevices:v3]);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

BOOL sub_10006E8A0(id a1, PBBluetoothDevice *a2)
{
  return -[PBBluetoothDevice isConnected](a2, "isConnected");
}

void sub_10006EBCC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10006EBE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_workQueue_reloadDevices");
}

void sub_10006EFE4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

id sub_10006F018()
{
  if (qword_100470260 != -1) {
    dispatch_once(&qword_100470260, &stru_1003D2C60);
  }
  return (id)qword_100470258;
}

PBBluetoothDevice *__cdecl sub_10006F05C(id a1, CBPeripheral *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = -[PBBluetoothDevice initWithPeripheral:](objc_alloc(&OBJC_CLASS___PBBluetoothDevice), "initWithPeripheral:", v2);

  return v3;
}

void sub_10006F0A4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[BluetoothManager sharedInstance](&OBJC_CLASS___BluetoothManager, "sharedInstance"));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 pairedDevices]);

  uint64_t v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bs_map:", &stru_1003D2C40));
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

PBBluetoothDevice *__cdecl sub_10006F118(id a1, BluetoothDevice *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = -[PBBluetoothDevice initWithBluetoothDevice:]( objc_alloc(&OBJC_CLASS___PBBluetoothDevice),  "initWithBluetoothDevice:",  v2);

  return v3;
}

void sub_10006F160(uint64_t a1)
{
}

void sub_10006F290(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.BluetoothObserver", "");
  uint64_t v2 = (void *)qword_100470258;
  qword_100470258 = (uint64_t)v1;
}

void sub_10006F6B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10006F6D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showScreenshotCapturedIndication];
}

void sub_10006FD54(uint64_t a1, void *a2)
{
  id v3 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10006FE1C;
  v8[3] = &unk_1003D0070;
  void v8[4] = *(void *)(a1 + 32);
  id v4 = v3;
  id v9 = v4;
  uint64_t v5 = objc_retainBlock(v8);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(v6 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, void *))(v7 + 16))(v7, *(void *)(v6 + 16), v5);
  }
  else {
    ((void (*)(void *))v5[2])(v5);
  }
}

id sub_10006FE1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) satisfyMilestone:@"ViewController Removed"];
}

PBSSuggestedUserProfile *__cdecl sub_10006FF7C(id a1, UPCandidateProfile *a2)
{
  return (PBSSuggestedUserProfile *)(id)objc_claimAutoreleasedReturnValue( -[UPCandidateProfile pb_suggestedUserProfile]( a2,  "pb_suggestedUserProfile"));
}

uint64_t sub_100070534(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007058C(uint64_t a1)
{
}

uint64_t sub_100070710(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) view]);
  [v2 removeFromSuperview];

  [*(id *)(*(void *)(a1 + 32) + 24) removeFromParentViewController];
  [*(id *)(*(void *)(a1 + 32) + 24) endAppearanceTransition];
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100070780(uint64_t a1)
{
}

void sub_100070B54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100070B7C(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _failForTimeoutWithDescription:@"Default kiosk scene didn't get ready in time"];
  }

void sub_100071288( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

id sub_1000712D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) coalescedSet]);
  id v5 = [v4 containsObject:v3];

  if ((v5 & 1) == 0)
  {
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
    id v6 = [v3 type];
    uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
    uint64_t v8 = *(void *)(v7 + 24);
    if (!v6) {
      ++v8;
    }
    *(void *)(v7 + 24) = v8;
    id v9 = [v3 type];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8LL);
    uint64_t v11 = *(void *)(v10 + 24);
    if (v9 == (id)1) {
      ++v11;
    }
    *(void *)(v10 + 24) = v11;
    id v12 = [v3 type];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8LL);
    uint64_t v14 = *(void *)(v13 + 24);
    if (v12 == (id)2) {
      ++v14;
    }
    *(void *)(v13 + 24) = v14;
    id v15 = sub_100084608();
    __int16 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      int v18 = 138412290;
      id v19 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "Filtered out notification. {notification=%@}",  (uint8_t *)&v18,  0xCu);
    }
  }

  return v5;
}

void sub_1000715C4(id a1)
{
  os_log_t v1 = -[_PBAccountIdentifier initWithAccountType:altDSID:]( objc_alloc(&OBJC_CLASS____PBAccountIdentifier),  "initWithAccountType:altDSID:",  @"any",  @"all");
  uint64_t v2 = (void *)qword_100470268;
  qword_100470268 = (uint64_t)v1;
}

id sub_10007179C(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountType]);
}

id sub_1000717BC(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) altDSID]);
}

void sub_1000718B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:OverlayLayoutServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_100071AF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSOverlayLayoutConfigureConnection();
  [v3 setInterruptionHandler:&stru_1003D2DA0];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_100071C3C;
  v4[3] = &unk_1003D2DC8;
  id v5 = *(id *)(a1 + 32);
  [v3 setInvalidationHandler:v4];
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
}

void sub_100071B94(id a1, BSServiceConnectionContext *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_10008330C();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "OverlayLayoutServices connection interrupted. {connection=%@}",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_100071C3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10008330C();
  int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138412290;
    id v7 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "OverlayLayoutServices connection invalidated. {connection=%@}",  (uint8_t *)&v6,  0xCu);
  }

  [*(id *)(a1 + 32) invalidate];
}

void sub_100071E00(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:PBSSuggestedUserProfileManagerServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_100072044(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSSuggestedUserProfileManagerConfigureConnection();
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
  [v3 setInvalidationHandler:&stru_1003D2E10];
}

void sub_10007208C(id a1, BSServiceConnectionContext *a2)
{
  id v2 = sub_100083FF0();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "PBSuggestedUserProfileManagerServiceListener connection invalidated",  v4,  2u);
  }
}

id sub_10007219C(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100072234(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100470278;
  qword_100470278 = (uint64_t)v1;
}

void sub_100072AD0(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PBConferenceRoomDisplayManager sharedInstance]( &OBJC_CLASS___PBConferenceRoomDisplayManager,  "sharedInstance"));
    [v3 beginStopCRD];

    id v4 = *(void **)(a1 + 32);
    int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) focusedSceneHandle]);
    [v4 _deactivateSceneHandle:v5 options:*(void *)(a1 + 48) completion:&stru_1003D2E50];
  }

void sub_100072B40(id a1, BSProcessHandle *a2, NSError *a3)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PBConferenceRoomDisplayManager sharedInstance]( &OBJC_CLASS___PBConferenceRoomDisplayManager,  "sharedInstance",  a3));
  [v3 endStopCRD];
}

void sub_100072D64( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100072D90(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[PBSiriManager sharedInstance](&OBJC_CLASS___PBSiriManager, "sharedInstance"));
    [v8 showAssistantIfNecessaryAfterApplication:*(void *)(a1 + 32)];
  }

  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    (*(void (**)(uint64_t, id, id))(v9 + 16))(v9, v5, v6);
  }
}

void sub_1000730B0(id a1, PBSystemGestureActivationContext *a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  uint64_t v4 = PBAppLaunchOptionDeactivation;
  id v5 = &__kCFBooleanTrue;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));
  [v2 openKioskApplicationWithReason:@"Interrupted app launch" options:v3 completion:0];
}

id sub_100073F70(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_initializeUserProfileStore");
}

void sub_1000740D4(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) copy];
  id v7 = 0LL;
  unsigned __int8 v3 = objc_msgSend(v1, "_workQueue_addUserProfile:error:", v2, &v7);
  id v4 = v7;

  if ((v3 & 1) == 0)
  {
    id v5 = sub_100084680();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100276FB4(v4);
    }
  }
}

void sub_100074224(uint64_t a1)
{
  uint64_t v1 = a1 + 40;
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) copy];
  uint64_t v4 = *(void *)(v1 + 8);
  id v9 = 0LL;
  unsigned __int8 v5 = objc_msgSend(v2, "_workQueue_addUserProfile:knownHomeUserIdentifiers:error:", v3, v4, &v9);
  id v6 = v9;

  if ((v5 & 1) == 0)
  {
    id v7 = sub_100084680();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100276FB4(v6);
    }
  }
}

id sub_100074354(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_removeUserProfileWithIdentifier:", *(void *)(a1 + 40));
}

id sub_100074490(uint64_t a1)
{
  return  objc_msgSend( *(id *)(a1 + 32),  "_workQueue_updateUserProfileWithIdentifier:usingBlock:error:",  *(void *)(a1 + 40),  *(void *)(a1 + 48),  0);
}

void sub_1000745B8(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 16LL) = 1;
  id v2 = sub_100084770();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Performing batch updates...", buf, 2u);
  }

  id v4 = *(id *)(*(void *)(a1 + 32) + 72LL);
  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 40) objectForKeyedSubscript:v4]);
  id v6 = objc_alloc_init(&OBJC_CLASS____PBSUserProfileStoreBatchUpdater);
  -[_PBSUserProfileStoreBatchUpdater setUserProfileStore:](v6, "setUserProfileStore:", *(void *)(a1 + 32));
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  *(_BYTE *)(*(void *)(a1 + 32) + 16LL) = 0;
  objc_msgSend(*(id *)(a1 + 32), "_workQueue_takeSnapshot");
  if ((BSEqualStrings(*(void *)(*(void *)(a1 + 32) + 72LL), v4) & 1) == 0)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(a1 + 32) + 40) objectForKeyedSubscript:*(void *)(*(void *)(a1 + 32) + 72)]);
    id v8 = (id)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 40) objectForKeyedSubscript:v4]);
    if (!v8)
    {
      id v9 = [v5 mutableCopy];
      [v9 setSelected:0];
      id v8 = [v9 copy];
    }

    id v10 = sub_100084770();
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 72LL);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v21 = v12;
      __int16 v22 = 2114;
      id v23 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Selected user profile changed after batch updates.  selectedIdentifier=%{public}@, previousSelectedIdentifier=%{public}@}",  buf,  0x16u);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100074860;
    block[3] = &unk_1003D09B8;
    void block[4] = *(void *)(a1 + 32);
    id v18 = v7;
    id v19 = v8;
    id v13 = v8;
    id v14 = v7;
    dispatch_async(&_dispatch_main_q, block);
  }

  id v15 = sub_100084770();
  __int16 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Batch updates completed.", buf, 2u);
  }
}

void sub_100074860(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 24LL));
  [WeakRetained userProfileStore:a1[4] didChangeSelectedUserProfile:a1[5] previousSelectedUserProfile:a1[6]];
}

void sub_1000749A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1000749BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000749CC(uint64_t a1)
{
}

void sub_1000749E4(void *a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 48) objectForKeyedSubscript:a1[5]]);
  uint64_t v3 = *(void *)(a1[6] + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100074B5C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(a1 + 32),  "_workQueue_userProfileIdentifierForHomeUserIdentifier:inHomeIdentifier:homeOwnerIdentifier:",  *(void *)(a1 + 40),  *(void *)(a1 + 48),  *(void *)(a1 + 56)));
  if (v2)
  {
    uint64_t v3 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 40) objectForKeyedSubscript:v2]);
    uint64_t v4 = *(void *)(*(void *)(a1 + 64) + 8LL);
    unsigned __int8 v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;
  }
}

id sub_100074CFC(void *a1)
{
  return [*(id *)(a1[4] + 56) setObject:a1[6] forKeyedSubscript:a1[5]];
}

void sub_100074E08(void *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 56) objectForKeyedSubscript:a1[5]]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 updatedSessionWithUserProfilesSnapshot:*(void *)(a1[4] + 8)]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 userProfiles]);
  if ([v4 count])
  {
    unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue([v3 userIdentifiers]);
    unsigned int v6 = [v5 containsObject:a1[5]];

    if (v6)
    {
      objc_storeStrong((id *)(*(void *)(a1[6] + 8LL) + 40LL), v3);
      goto LABEL_9;
    }
  }

  else
  {
  }

  if (v2)
  {
    id v7 = sub_100084770();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = a1[5];
      int v10 = 138543874;
      uint64_t v11 = v9;
      __int16 v12 = 2112;
      id v13 = v2;
      __int16 v14 = 2112;
      id v15 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Last group recommendation session for user isn't valid anymore. {identifier=%{public}@, lastSession=%@, updatedSession=%@}",  (uint8_t *)&v10,  0x20u);
    }

    [*(id *)(a1[4] + 56) removeObjectForKey:a1[5]];
  }

id sub_100074FD0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_writeUserProfilesArchive");
}

void sub_100075250( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100075274(uint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  id v6 = a3;
  if (![v6 type])
  {
    uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 identifier]);
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8LL);
    uint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;
  }

  if ([v6 isSelected])
  {
    uint64_t v10 = objc_claimAutoreleasedReturnValue([v6 identifier]);
    uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8LL);
    __int16 v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;
  }

  uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  if (v13) {
    LOBYTE(v13) = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) != 0LL;
  }
  *a4 = v13;
}

LABEL_26:
    uint64_t v17 = 0;
    goto LABEL_27;
  }

  if (!a5) {
    goto LABEL_26;
  }
  uint64_t v13 = PBSUserProfileServiceErrorDomain;
  __int128 v34 = NSLocalizedDescriptionKey;
  __int128 v35 = @"This identifier is already in use by an existing user profile.";
  __int16 v14 = &v35;
  id v15 = &v34;
LABEL_4:
  __int16 v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v14,  v15,  1LL));
  uint64_t v17 = 0;
  *a5 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v13,  300LL,  v16));
LABEL_5:

LABEL_27:
  return v17;
}

  return v28;
}

      uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 _sharedInstance]);
      [v4 _incrementButtonEventCount:v3];

      return;
  }

    id v49 = sub_100083F78();
    id v50 = (os_log_s *)objc_claimAutoreleasedReturnValue(v49);
    if (os_log_type_enabled(v50, OS_LOG_TYPE_INFO))
    {
      uint64_t v51 = sub_1000BD564(v47);
      int64_t v52 = (void *)objc_claimAutoreleasedReturnValue(v51);
      *(_DWORD *)__int128 buf = 138543362;
      id v65 = v52;
      _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_INFO,  "loadSnapshotImageWithRequest choose snapshot: %{public}@",  buf,  0xCu);

      int v26 = v59;
    }

    id v48 = (void *)objc_claimAutoreleasedReturnValue([v47 imageForInterfaceOrientation:0]);
    [v47 purgeImage];
    if (objc_msgSend(v47, "pb_isTemplateImage"))
    {
      __int128 v53 = objc_claimAutoreleasedReturnValue([v48 imageWithRenderingMode:2]);

      id v48 = (void *)v53;
      int v26 = v59;
    }
  }

  else
  {
    id v48 = 0LL;
  }

  return v48;
}

LABEL_27:
    if (!v10) {
      goto LABEL_8;
    }
    __int128 v32 = FBSOpenApplicationErrorCreate(5LL, @"Kiosk app unavailable");
    __int16 v22 = (void *)objc_claimAutoreleasedReturnValue(v32);
    v10[2](v10, 0LL, v22);
LABEL_29:

    goto LABEL_8;
  }

  -[PBAppDelegate _handleKioskAppLaunchFailure](self, "_handleKioskAppLaunchFailure");
  if (v10)
  {
    id v15 = @"Kisok relaunch disabled";
LABEL_7:
    __int16 v16 = FBSOpenApplicationErrorCreate(5LL, v15);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    v10[2](v10, 0LL, v17);
LABEL_8:
  }

    *(_BYTE *)(*(void *)(a1 + 40) + 17LL) = 0;
LABEL_28:
    uint64_t v17 = v25;
    goto LABEL_29;
  }

  id v15 = [*(id *)(v12 + 40) _shouldPreferDolbyVisionLowLatency];
  if (v15) {
    __int16 v16 = 538423554LL;
  }
  else {
    __int16 v16 = 538423555LL;
  }
  *(_BYTE *)(*(void *)(v12 + 40) + 17LL) = v15;
  uint64_t v17 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id v18 = v25;
  id v19 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v18,  "countByEnumeratingWithState:objects:count:",  &v27,  v35,  16LL);
  if (v19)
  {
    __int128 v20 = v19;
    uint64_t v21 = *(void *)v28;
    do
    {
      for (j = 0LL; j != v20; j = (char *)j + 1)
      {
        if (*(void *)v28 != v21) {
          objc_enumerationMutation(v18);
        }
        id v23 = *(void **)(*((void *)&v27 + 1) + 8LL * (void)j);
        if (objc_msgSend(v23, "dynamicRange", v25) != (id)v16) {
          -[NSMutableArray addObject:](v17, "addObject:", v23);
        }
      }

      __int128 v20 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v18,  "countByEnumeratingWithState:objects:count:",  &v27,  v35,  16LL);
    }

    while (v20);
  }

LABEL_29:
  objc_msgSend(*(id *)(a1 + 40), "setFilteredUsingdPineBoardPolicy:", a2, v25);
  return v17;
}

        uint64_t v9 = (v19 - 1) & v19;
        uint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }

      uint64_t v21 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v17);
      __int16 v22 = *v21;
      id v23 = v21[1];
      Hasher.init(_seed:)(v34, *(void *)(v6 + 40));
      String.hash(into:)(v34, v22, v23);
      uint64_t result = Hasher._finalize()();
      uint64_t v24 = -1LL << *(_BYTE *)(v6 + 32);
      id v25 = result & ~v24;
      int v26 = v25 >> 6;
      if (((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        __int16 v14 = __clz(__rbit64((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        id v27 = 0;
        __int128 v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }

          __int128 v29 = v26 == v28;
          if (v26 == v28) {
            int v26 = 0LL;
          }
          v27 |= v29;
          __int128 v30 = *(void *)(v11 + 8 * v26);
        }

        while (v30 == -1);
        __int16 v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }

      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
      id v15 = (void *)(*(void *)(v6 + 48) + 16 * v14);
      *id v15 = v22;
      v15[1] = v23;
      ++*(void *)(v6 + 16);
    }
  }

  uint64_t result = swift_release(v3);
  void *v2 = v6;
  return result;
}

        uint64_t v10 = (v19 - 1) & v19;
        uint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }

      uint64_t v21 = *(void *)(*(void *)(v3 + 48) + 8 * v17);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
      __int16 v22 = -1LL << *(_BYTE *)(v6 + 32);
      id v23 = result & ~v22;
      uint64_t v24 = v23 >> 6;
      if (((-1LL << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        id v15 = __clz(__rbit64((-1LL << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        id v25 = 0;
        int v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }

          id v27 = v24 == v26;
          if (v24 == v26) {
            uint64_t v24 = 0LL;
          }
          v25 |= v27;
          __int128 v28 = *(void *)(v12 + 8 * v24);
        }

        while (v28 == -1);
        id v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }

      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }

  uint64_t result = swift_release(v3);
  void *v2 = v6;
  return result;
}

    uint64_t v10 = (v19 - 1) & v19;
    uint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_27:
    uint64_t v21 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v17);
    __int16 v22 = *v21;
    id v23 = v21[1];
    Hasher.init(_seed:)(v33, *(void *)(v6 + 40));
    swift_bridgeObjectRetain(v23);
    String.hash(into:)(v33, v22, v23);
    uint64_t result = Hasher._finalize()();
    uint64_t v24 = -1LL << *(_BYTE *)(v6 + 32);
    id v25 = result & ~v24;
    int v26 = v25 >> 6;
    if (((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      __int16 v14 = __clz(__rbit64((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      id v27 = 0;
      __int128 v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }

        __int128 v29 = v26 == v28;
        if (v26 == v28) {
          int v26 = 0LL;
        }
        v27 |= v29;
        __int128 v30 = *(void *)(v11 + 8 * v26);
      }

      while (v30 == -1);
      __int16 v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }

    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
    id v15 = (void *)(*(void *)(v6 + 48) + 16 * v14);
    *id v15 = v22;
    v15[1] = v23;
    ++*(void *)(v6 + 16);
  }

  __int128 v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_36:
    uint64_t result = swift_release_n(v3, 2LL);
    uint64_t v2 = v31;
    goto LABEL_38;
  }

  id v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    uint64_t v13 = v20;
    goto LABEL_26;
  }

  while (1)
  {
    uint64_t v13 = v20 + 1;
    if (__OFADD__(v20, 1LL)) {
      break;
    }
    if (v13 >= v32) {
      goto LABEL_36;
    }
    id v19 = *(void *)(v8 + 8 * v13);
    ++v20;
    if (v19) {
      goto LABEL_26;
    }
  }

LABEL_29:
  if (!self->_isPerformingBatchUpdates) {
    -[PBUserProfileStore _workQueue_takeSnapshot](self, "_workQueue_takeSnapshot");
  }
}

  return v19;
}
}

    uint64_t v17 = (v25 - 1) & v25;
    id v18 = __clz(__rbit64(v25)) + (v19 << 6);
    goto LABEL_30;
  }

  __break(1u);
}

void sub_100075BD0(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 24LL));
  [WeakRetained userProfileStore:a1[4] didChangeSelectedUserProfile:a1[5] previousSelectedUserProfile:a1[6]];
}

void sub_100075FF0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24LL));
  [WeakRetained userProfileStore:*(void *)(a1 + 32) didChangeSelectedUserProfile:0 previousSelectedUserProfile:*(void *)(a1 + 40)];
}

void sub_100076408(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24LL));
  [WeakRetained userProfileStore:*(void *)(a1 + 32) didUpdateiTunesForSelectedUserProfile:*(void *)(a1 + 40)];
}

void sub_1000769E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);

  if (v4)
  {
    unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
    uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSString);
    id v7 = v5;
    uint64_t v8 = v7;
    if (v6)
    {
      if ((objc_opt_isKindOfClass(v7, v6) & 1) != 0) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 0LL;
      }
    }

    else
    {
      uint64_t v9 = 0LL;
    }

    id v10 = v9;

    [v3 setICloudAltDSID:v10];
  }

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iTunesAltDSID]);

  if (v11)
  {
    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iTunesAltDSID]);
    uint64_t v13 = objc_opt_class(&OBJC_CLASS___NSString);
    id v14 = v12;
    id v15 = v14;
    if (v13)
    {
      if ((objc_opt_isKindOfClass(v14, v13) & 1) != 0) {
        __int16 v16 = v15;
      }
      else {
        __int16 v16 = 0LL;
      }
    }

    else
    {
      __int16 v16 = 0LL;
    }

    id v17 = v16;

    [v3 setITunesAltDSID:v17];
  }

  id v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) gameCenterAltDSID]);

  if (v18)
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) gameCenterAltDSID]);
    uint64_t v20 = objc_opt_class(&OBJC_CLASS___NSString);
    id v21 = v19;
    __int16 v22 = v21;
    if (v20)
    {
      if ((objc_opt_isKindOfClass(v21, v20) & 1) != 0) {
        id v23 = v22;
      }
      else {
        id v23 = 0LL;
      }
    }

    else
    {
      id v23 = 0LL;
    }

    id v24 = v23;

    [v3 setGameCenterAltDSID:v24];
  }

  id v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) homeUserIdentifier]);

  if (v25)
  {
    int v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) homeUserIdentifier]);
    uint64_t v27 = objc_opt_class(&OBJC_CLASS___NSUUID);
    id v28 = v26;
    __int128 v29 = v28;
    if (v27)
    {
      if ((objc_opt_isKindOfClass(v28, v27) & 1) != 0) {
        __int128 v30 = v29;
      }
      else {
        __int128 v30 = 0LL;
      }
    }

    else
    {
      __int128 v30 = 0LL;
    }

    id v31 = v30;

    [v3 setHomeUserIdentifier:v31];
  }

  __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) overrideName]);

  if (v32)
  {
    __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) overrideName]);
    uint64_t v34 = objc_opt_class(&OBJC_CLASS___NSString);
    id v35 = v33;
    __int128 v36 = v35;
    if (v34)
    {
      if ((objc_opt_isKindOfClass(v35, v34) & 1) != 0) {
        uint64_t v37 = v36;
      }
      else {
        uint64_t v37 = 0LL;
      }
    }

    else
    {
      uint64_t v37 = 0LL;
    }

    id v38 = v37;

    [v3 setOverrideName:v38];
  }

  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredLanguages]);

  if (v39)
  {
    __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredLanguages]);
    uint64_t v41 = objc_opt_class(&OBJC_CLASS___NSArray);
    id v42 = v40;
    __int128 v43 = v42;
    if (v41)
    {
      if ((objc_opt_isKindOfClass(v42, v41) & 1) != 0) {
        __int128 v44 = v43;
      }
      else {
        __int128 v44 = 0LL;
      }
    }

    else
    {
      __int128 v44 = 0LL;
    }

    id v45 = v44;

    [v3 setPreferredLanguages:v45];
  }

  __int128 v46 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredInputModes]);

  if (v46)
  {
    __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredInputModes]);
    uint64_t v48 = objc_opt_class(&OBJC_CLASS___NSArray);
    id v49 = v47;
    id v50 = v49;
    if (v48)
    {
      if ((objc_opt_isKindOfClass(v49, v48) & 1) != 0) {
        uint64_t v51 = v50;
      }
      else {
        uint64_t v51 = 0LL;
      }
    }

    else
    {
      uint64_t v51 = 0LL;
    }

    id v52 = v51;

    [v3 setPreferredInputModes:v52];
  }
}

void sub_100077154( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_100077180(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 homeUserIdentifier]);
  uint64_t v4 = BSEqualObjects(v2, v3);

  return v4;
}

void sub_1000771C4(void *a1, void *a2, void *a3, _BYTE *a4)
{
  id v8 = a2;
  id v9 = a3;
  id v10 = [[PBSScopedHomeUserIdentifier alloc] initWithHomeUniqueIdentifier:a1[4] userUniqueIdentifier:a1[5]];
  unsigned int v11 = [v9 containsObject:v10];

  if (v11)
  {
    objc_storeStrong((id *)(*(void *)(a1[6] + 8LL) + 40LL), a2);
    *a4 = 1;
  }
}

uint64_t sub_10007748C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 homeUserIdentifier]);
  if (BSEqualObjects(v4, *(void *)(a1 + 32)))
  {
    unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) identifier]);
    uint64_t v7 = BSEqualStrings(v5, v6) ^ 1;
  }

  else
  {
    uint64_t v7 = 0LL;
  }

  return v7;
}

void sub_100077F70( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100077F98(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _startIdleTimer];
}

void sub_1000780E4(_Unwind_Exception *a1)
{
}

void sub_100078108(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[PBSystemOverlayDismissalRequest dismissalRequestForSession:]( &OBJC_CLASS___PBMutableSystemOverlayDismissalRequest,  "dismissalRequestForSession:",  *(void *)(a1 + 32)));
  [v7 setAnimated:*(unsigned __int8 *)(a1 + 56)];
  uint64_t v15 = PBSViewServiceOptionsAnimateKey;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 56)));
  __int16 v16 = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v16,  &v15,  1LL));
  [v7 setClientOptions:v9];

  id v10 = *(void **)(*(void *)(a1 + 40) + 32LL);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10007829C;
  void v12[3] = &unk_1003D1660;
  objc_copyWeak(&v14, (id *)(a1 + 48));
  id v11 = v6;
  id v13 = v11;
  [v10 dismissWithRequest:v7 completion:v12];

  objc_destroyWeak(&v14);
}

void sub_100078280(_Unwind_Exception *a1)
{
}

void sub_10007829C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _invalidateIdleTimer];
    [v3 _invalidateTeachableMomentIdleTimer];
    uint64_t v4 = (void *)v3[6];
    v3[6] = 0LL;
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100078538(_Unwind_Exception *a1)
{
}

void sub_100078554(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000F6A9C();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    int v15 = 136315650;
    __int16 v16 = "-[PBSystemMenuServicePresenter prepareUIForSystemOverlayPresentationWithCompletion:]_block_invoke";
    __int16 v17 = 1024;
    BOOL v18 = v5 != 0LL;
    __int16 v19 = 2114;
    id v20 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%s - Requested the system menu view service successfully?: %d, error: %{public}@",  (uint8_t *)&v15,  0x1Cu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v10 = WeakRetained;
  if (v5 && WeakRetained)
  {
    [WeakRetained setRemoteViewController:v5];
    id v11 = objc_alloc(&OBJC_CLASS___PBControlCenterContentPresentingViewController);
    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v10 remoteViewController]);
    id v13 = -[PBViewServiceContentPresentingViewController initWithRemoteViewController:supportsInterruption:]( v11,  "initWithRemoteViewController:supportsInterruption:",  v12,  1LL);

    -[PBControlCenterContentPresentingViewController setDelegate:](v13, "setDelegate:", v10);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  else
  {
    uint64_t v14 = *(void *)(a1 + 32);
    if (v14) {
      (*(void (**)(uint64_t, void, id))(v14 + 16))(v14, 0LL, v6);
    }
  }
}

void sub_1000788F0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

uint64_t sub_10007891C(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained dismissSystemMenuAnimated:0];
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100078A6C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100078A88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissSystemMenuAnimated:1];
}

void sub_100078BC4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100078BE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showTeachableMomentOverlayIfNeeded];
}

void sub_100078E04( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100078E28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained requestTeachableMomentOverlayDismissal];
}

void sub_100078EF8(_Unwind_Exception *a1)
{
}

void sub_100078F14(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSNumber);
  id v6 = v4;
  id v7 = v6;
  if (v5)
  {
    if ((objc_opt_isKindOfClass(v6, v5) & 1) != 0) {
      id v8 = v7;
    }
    else {
      id v8 = 0LL;
    }
  }

  else
  {
    id v8 = 0LL;
  }

  id v9 = v8;

  unsigned int v10 = [v9 BOOLValue];
  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    [v11 setControlCenterTeachableMomentShouldSkip:1];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _invalidateDismissTeachableMomentGesture];
  }
}

void sub_10007A040( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_10007A2CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_10007A2F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 addScene:v6 forKey:a2];
  [*(id *)(*(void *)(a1 + 40) + 88) registerScene:v6];
}

void sub_10007A724(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend(v3, "pb_isRunningAndScheduled"))
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_10007A7CC;
    void v6[3] = &unk_1003D30C0;
    id v7 = *(id *)(a1 + 32);
    id v8 = *(id *)(a1 + 40);
    __int128 v4 = *(_OWORD *)(a1 + 64);
    __int128 v9 = *(_OWORD *)(a1 + 48);
    __int128 v10 = v4;
    __int128 v5 = *(_OWORD *)(a1 + 96);
    __int128 v11 = *(_OWORD *)(a1 + 80);
    __int128 v12 = v5;
    objc_msgSend(v3, "pb_updateSettings:", v6);
  }
}

void sub_10007A7CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v4 = *(void **)(a1 + 32);
  __int128 v5 = (void *)objc_claimAutoreleasedReturnValue([v3 displayIdentity]);
  LODWORD(v4) = [v4 isEqual:v5];

  if ((_DWORD)v4)
  {
    if (objc_msgSend(v3, "pb_isAppJailed"))
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue( +[FBDisplayManager pb_transformToAppJailConfigurationIfNeeded:]( &OBJC_CLASS___FBDisplayManager,  "pb_transformToAppJailConfigurationIfNeeded:",  *(void *)(a1 + 40)));
      [v3 setDisplayConfiguration:v6];
      double v7 = *(double *)(a1 + 56);
      double v8 = *(double *)(a1 + 64);
      double v9 = *(double *)(a1 + 72);
      double Width = CGRectGetWidth(*(CGRect *)(a1 + 80));
      objc_msgSend(v3, "setFrame:", (Width - CGRectGetWidth(*(CGRect *)(a1 + 48))) * 0.5, v7, v8, v9);
    }

    else
    {
      [v3 setDisplayConfiguration:*(void *)(a1 + 40)];
      objc_msgSend( v3,  "setFrame:",  *(double *)(a1 + 80),  *(double *)(a1 + 88),  *(double *)(a1 + 96),  *(double *)(a1 + 104));
    }
  }
}

void sub_10007A9C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10007AA64;
  v5[3] = &unk_1003D3110;
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = v3;
  id v4 = v3;
  objc_msgSend(v4, "pb_updateSettings:", v5);
}

void sub_10007AA64(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  __int128 v5 = (void *)objc_claimAutoreleasedReturnValue([v3 displayIdentity]);
  LODWORD(v4) = [v4 isEqual:v5];

  if ((_DWORD)v4)
  {
    [v3 setDisplayConfiguration:*(void *)(a1 + 40)];
  }

  else
  {
    id v6 = sub_1000F7A8C();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100277AC0(a1, v7);
    }
  }
}

id sub_10007AD34(uint64_t a1)
{
  id v2 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 96) withName:@"sceneFactory"];
  return  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 88) withName:@"sceneRegistry"];
}

void sub_10007AF1C(_Unwind_Exception *a1)
{
}

void sub_10007AF3C(id *a1)
{
  uint64_t v2 = (void (**)(void, void))objc_claimAutoreleasedReturnValue([a1[4] _completionBlock]);
  id WeakRetained = (id *)objc_loadWeakRetained(a1 + 6);
  if (!WeakRetained || [a1[4] layout] == (id)-1)
  {
    v2[2](v2, 0LL);
  }

  else
  {
    id v4 = [a1[4] layout];
    __int128 v5 = (void *)objc_claimAutoreleasedReturnValue([a1[5] geometry]);
    id v6 = sub_1000E3C90((uint64_t)v4, v5);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

    id v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[12] rootSceneHostingWindow]);
    if ([v8 setLayout:v7] && objc_msgSend(a1[4], "animated"))
    {
      double v9 = (void *)objc_claimAutoreleasedReturnValue([a1[4] animationSettings]);
      __int128 v10 = v9;
      if (v9)
      {
        id v11 = v9;
      }

      else
      {
        id v12 = [(id)objc_opt_class(a1[5]) _defaultAnimationSettings];
        id v11 = (id)objc_claimAutoreleasedReturnValue(v12);
      }

      id v13 = v11;

      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472LL;
      v14[2] = sub_10007B0C4;
      v14[3] = &unk_1003CFF08;
      id v15 = v8;
      +[BSUIAnimationFactory animateWithSettings:actions:completion:]( &OBJC_CLASS___BSUIAnimationFactory,  "animateWithSettings:actions:completion:",  v13,  v14,  v2);
    }

    else
    {
      v2[2](v2, 1LL);
    }
  }
}

id sub_10007B0C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_10007B124(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[BSSpringAnimationSettings settingsWithMass:stiffness:damping:]( &OBJC_CLASS___BSSpringAnimationSettings,  "settingsWithMass:stiffness:damping:",  1.0,  150.0,  30.0));
  uint64_t v2 = (void *)qword_100470288;
  qword_100470288 = v1;
}

PBWorkspaceSceneDescriptor *sub_10007B27C(double a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  __int128 v5 = (void *)objc_claimAutoreleasedReturnValue( +[PBWorkspaceWindowSceneSpecification definitionWithRole:]( &OBJC_CLASS___PBWorkspaceWindowSceneSpecification,  "definitionWithRole:",  v4));
  id v6 = -[PBWorkspaceSceneDescriptor initWithDefinition:role:level:]( objc_alloc(&OBJC_CLASS___PBWorkspaceSceneDescriptor),  "initWithDefinition:role:level:",  v5,  v4,  a1);

  return v6;
}

void sub_10007BBD4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8LL));
  id v3 = [v1 appendObject:WeakRetained withName:@"coordinateSpace"];
}

id sub_10007BE74()
{
  return -[PBSplitViewGeometry _init](objc_alloc(&OBJC_CLASS___PBSplitViewGeometry), "_init");
}

void sub_10007C20C(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___PBServiceProviderRegistry);
  uint64_t v2 = (void *)qword_100470298;
  qword_100470298 = (uint64_t)v1;
}

void sub_10007C33C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10007C35C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_10007C3FC;
  v4[3] = &unk_1003D31B8;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  [v3 setUpdateHandler:v4];
  objc_destroyWeak(&v5);
}

void sub_10007C3E8(_Unwind_Exception *a1)
{
}

void sub_10007C3FC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([a4 state]);
  unsigned int v8 = [v7 taskState];

  if (v8 == 1)
  {
    double v9 = (void *)objc_claimAutoreleasedReturnValue([v6 bundle]);
    __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
    {
      int v12 = 136315394;
      id v13 = "-[PBServiceProviderRegistry init]_block_invoke_2";
      __int16 v14 = 2114;
      id v15 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_INFO,  "%s - Clearing endpoints for terminated process: %{public}@",  (uint8_t *)&v12,  0x16u);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained clearEndpointsForIdentifier:v10];
  }
}

void sub_10007C7C8(_Unwind_Exception *a1)
{
}

void sub_10007C7E4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48)) {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  201LL,  0LL));
  }
  else {
    uint64_t v2 = 0LL;
  }
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      id v7 = 0LL;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8LL * (void)v7) + 16LL))(*(void *)(*((void *)&v8 + 1) + 8LL * (void)v7));
        id v7 = (char *)v7 + 1;
      }

      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v5);
  }
}

void sub_10007CBB4(_Unwind_Exception *a1)
{
}

void sub_10007CBE0(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  201LL,  0LL));
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      id v7 = 0LL;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8LL * (void)v7) + 16LL))(*(void *)(*((void *)&v8 + 1) + 8LL * (void)v7));
        id v7 = (char *)v7 + 1;
      }

      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v5);
  }
}

void sub_10007D038(_Unwind_Exception *a1)
{
}

void sub_10007D058(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = *(id *)(a1 + 32);
    objc_sync_enter(v7);
    [*(id *)(*(void *)(a1 + 32) + 16) removeObjectForKey:*(void *)(a1 + 40)];
    __int128 v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) objectForKeyedSubscript:*(void *)(a1 + 40)]);
    if (v8) {
      [*(id *)(*(void *)(a1 + 32) + 24) removeObjectForKey:*(void *)(a1 + 40)];
    }
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    __int128 v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10007D178;
    block[3] = &unk_1003CFF08;
    id v13 = v8;
    id v11 = v8;
    dispatch_async(v10, block);

    objc_sync_exit(v7);
  }
}

void sub_10007D160(_Unwind_Exception *a1)
{
}

void sub_10007D178(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  200LL,  0LL));
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      id v7 = 0LL;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8LL * (void)v7) + 16LL))(*(void *)(*((void *)&v8 + 1) + 8LL * (void)v7));
        id v7 = (char *)v7 + 1;
      }

      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v5);
  }
}

id sub_10007D364(id a1, PBServiceProviderRegistryKeyPair *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBServiceProviderRegistryKeyPair identifier](a2, "identifier"));
}

void sub_10007D384(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[RBSProcessPredicate predicateMatchingBundleIdentifiers:]( &OBJC_CLASS___RBSProcessPredicate,  "predicateMatchingBundleIdentifiers:",  v2));
  uint64_t v6 = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v6, 1LL));
  [v3 setPredicates:v5];
}

void sub_10007D668(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", @"CFBundleIconFile", 0LL));
  uint64_t v2 = (void *)qword_1004702A8;
  qword_1004702A8 = v1;
}

id sub_10007D7F8(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_10007D890()
{
  uint64_t v0 = objc_alloc_init(&OBJC_CLASS___PBWindowManager);
  uint64_t v1 = (void *)qword_1004702B8;
  qword_1004702B8 = (uint64_t)v0;
}

NSString *sub_10007DE90(void *a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = a1;
    id v5 = objc_alloc(&OBJC_CLASS___NSString);
    id v6 = (id)objc_claimAutoreleasedReturnValue([v4 identifier]);

    id v7 = -[NSString initWithFormat:](v5, "initWithFormat:", @"%@-%@", v6, v3);
  }

  else
  {
    id v6 = a1;
    id v7 = (NSString *)objc_claimAutoreleasedReturnValue([v6 identifier]);
  }

  __int128 v8 = v7;

  return v8;
}

void sub_10007E400( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10007E424(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  __int128 v8 = WeakRetained;
  if (WeakRetained)
  {
    __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _displayLayoutElementForOverlayLevel:*(void *)(a1 + 48)]);
    if (*(void *)(a1 + 32))
    {
      __int128 v10 = (void *)objc_claimAutoreleasedReturnValue( +[FBMainDisplayLayoutPublisher sharedInstance]( &OBJC_CLASS___FBMainDisplayLayoutPublisher,  "sharedInstance"));
      __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 transitionAssertionWithReason:@"Present overlay transition"]);

      uint64_t v12 = *(void *)(a1 + 32);
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472LL;
      v15[2] = sub_10007E574;
      v15[3] = &unk_1003D32D8;
      void v15[4] = v8;
      id v16 = v9;
      id v17 = v11;
      BOOL v18 = v6;
      id v13 = *(void (**)(uint64_t, id, void *))(v12 + 16);
      id v14 = v11;
      v13(v12, v5, v15);
    }

    else
    {
      [v8 _addDisplayLayoutElement:v9];
      v6[2](v6);
    }
  }
}

uint64_t sub_10007E574(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 56) + 16LL))();
}

void sub_10007E740( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10007E764(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    __int128 v8 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
    __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 sceneDeactivationManager]);
    [v9 removeAndRelinquishDeactivationAssertionsAtLevel:*(void *)(a1 + 56)];

    [*(id *)(a1 + 32) windowLevel];
    if (*(void *)(a1 + 40))
    {
      BOOL v11 = v10 > UIWindowLevelNormal;
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[FBMainDisplayLayoutPublisher sharedInstance]( &OBJC_CLASS___FBMainDisplayLayoutPublisher,  "sharedInstance"));
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 transitionAssertionWithReason:@"Dismiss overlay transition"]);

      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472LL;
      v20[2] = sub_10007E918;
      v20[3] = &unk_1003D3328;
      uint64_t v14 = *(void *)(a1 + 40);
      id v15 = *(id *)(a1 + 32);
      BOOL v26 = v11;
      id v21 = v15;
      id v22 = WeakRetained;
      uint64_t v25 = *(void *)(a1 + 56);
      id v23 = v13;
      id v24 = v6;
      id v16 = *(void (**)(uint64_t, id, void *))(v14 + 16);
      id v17 = v13;
      v16(v14, v5, v20);
    }

    else
    {
      [*(id *)(a1 + 32) setHidden:v10 > UIWindowLevelNormal];
      BOOL v18 = sub_10007E980(*(void *)(a1 + 56));
      __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      [WeakRetained _removeDisplayLayoutElementWithIdentifier:v19];

      v6[2](v6);
    }
  }
}

uint64_t sub_10007E918(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  id v3 = sub_10007E980(*(void *)(a1 + 64));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  [v2 _removeDisplayLayoutElementWithIdentifier:v4];

  [*(id *)(a1 + 48) invalidate];
  return (*(uint64_t (**)(void))(*(void *)(a1 + 56) + 16LL))();
}

CFStringRef sub_10007E980(unint64_t a1)
{
  if (a1 > 0x18) {
    return @"com.apple.pineboard.none";
  }
  else {
    return *(&off_1003D3428 + a1);
  }
}

void sub_10007EB98(_Unwind_Exception *a1)
{
}

void sub_10007EBB8(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (a2)
    {
      id v5 = sub_100084950();
      id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = *(void *)(a1 + 48);
        int v12 = 134217984;
        uint64_t v13 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Window hidden at level: %lu",  (uint8_t *)&v12,  0xCu);
      }

      [*(id *)(a1 + 32) setHidden:1];
      if (*(_BYTE *)(a1 + 56)) {
        [*(id *)(a1 + 32) setAlpha:1.0];
      }
      __int128 v8 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
      __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 sceneDeactivationManager]);
      [v9 relinquishDeactivationAssertionsAtLevel:*(void *)(a1 + 48)];
    }

    double v10 = sub_10007E980(*(void *)(a1 + 48));
    BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    [WeakRetained _removeDisplayLayoutElementWithIdentifier:v11];
  }
}

id sub_10007ECF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

uint64_t sub_10007ED0C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007EF4C(_Unwind_Exception *a1)
{
}

id sub_10007EF68(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

uint64_t sub_10007EF84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _addDisplayLayoutElement:*(void *)(a1 + 32)];

  [*(id *)(a1 + 40) invalidate];
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007F780(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = *(void **)(*(void *)(a1 + 32) + 56LL);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
  __int128 v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:v7]);

  if (v8)
  {
    __int128 v9 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) transitionAssertionWithReason:@"Updating for layout level change"]);
    [v8 invalidate];
    double v10 = *(void **)(*(void *)(a1 + 32) + 56LL);
    BOOL v11 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
    [v10 removeObjectForKey:v11];

    id v12 = [v5 copy];
    [v12 setHasKeyboardFocus:a3];
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) addElement:v12]);
    uint64_t v14 = *(void **)(*(void *)(a1 + 32) + 56LL);
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
    [v14 setObject:v13 forKey:v15];

    [v9 invalidate];
  }
}

void sub_1000803C4(uint64_t a1)
{
  if (+[TVSDevice runningAnInternalBuild](&OBJC_CLASS___TVSDevice, "runningAnInternalBuild"))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    [v2 addObserver:*(void *)(a1 + 32) forKeyPath:@"ShowUIDebug" options:4 context:&off_1003D3410];
    [v2 addObserver:*(void *)(a1 + 32) forKeyPath:@"ShowExternalControlDebug" options:4 context:&off_1003D3418];
    [v2 addObserver:*(void *)(a1 + 32) forKeyPath:@"ShowUILayoutDebug" options:4 context:&off_1003D3420];
  }

void sub_100080B78(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService updateDisplayManagerWithRequest:reply:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 updateDisplayManagerWithRequest:*(void *)(a1 + 32) reply:*(void *)(a1 + 40)];
}

void sub_100080CCC(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService sleepDisplayWithReply:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 sleepDisplayWithReply:*(void *)(a1 + 32)];
}

void sub_100080E20(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService wakeDisplayWithReply:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 wakeDisplayWithReply:*(void *)(a1 + 32)];
}

void sub_100080F9C(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService handleRegionChangeWithNewCountryCode:reply:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 handleRegionChangeWithNewCountryCode:*(void *)(a1 + 32) reply:*(void *)(a1 + 40)];
}

void sub_100081118(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService presentDisplayAssistantWithRequest:reply:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 presentDisplayAssistantWithRequest:*(void *)(a1 + 32) reply:*(void *)(a1 + 40)];
}

void sub_100081210(id a1)
{
  id v1 = sub_100082A9C();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315138;
    int v5 = "-[PBDisplayManagerService forgetDisplaysForDisplayAssistant]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v4, 0xCu);
  }

  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v3 forgetDisplaysForDisplayAssistant];
}

void sub_100081300(id a1)
{
  id v1 = sub_100082A9C();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315138;
    int v5 = "-[PBDisplayManagerService removeCableCheckHistory]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v4, 0xCu);
  }

  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v3 removeCableCheckHistory];
}

void sub_10008144C(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService displayAssistantDidStartForKind:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 displayAssistantDidStartForKind:*(void *)(a1 + 32)];
}

void sub_1000815C8(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService setAudioLatency:forKey:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 setAudioLatency:*(void *)(a1 + 32) forKey:*(void *)(a1 + 40)];
}

void sub_100081744(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService setColorCalibration:forKey:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 setColorCalibration:*(void *)(a1 + 32) forKey:*(void *)(a1 + 40)];
}

void sub_1000818C0(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService setColorCalibration:forKeys:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 setColorCalibration:*(void *)(a1 + 32) forKeys:*(void *)(a1 + 40)];
}

void sub_100081A14(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService setColorGains:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 setColorGains:*(void *)(a1 + 32)];
}

void sub_100081B68(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService displayAssistantDidCompleteForKind:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 displayAssistantDidCompleteForKind:*(void *)(a1 + 32) fromUserInteraction:1];
}

void sub_100081CAC(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService fetchCurrentDisplayStateWithReply:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 fetchCurrentDisplayStateWithReply:*(void *)(a1 + 32)];
}

void sub_100081DE4(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService enableModeSwitchingForDynamicRange:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 enableModeSwitchingForDynamicRange:*(unsigned __int8 *)(a1 + 32)];
}

void sub_100081F1C(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService enableModeSwitchingForFrameRate:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 enableModeSwitchingForFrameRate:*(unsigned __int8 *)(a1 + 32)];
}

void sub_100082054(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService enableQMSForFrameRateSwitching:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 enableQMSForFrameRateSwitching:*(unsigned __int8 *)(a1 + 32)];
}

void sub_10008218C(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService enableHDR10PlusMetadata:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 enableHDR10PlusMetadata:*(unsigned __int8 *)(a1 + 32)];
}

void sub_1000822C4(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService enableAtmos:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v4 enableAtmos:*(unsigned __int8 *)(a1 + 32)];
}

void sub_100082400(uint64_t a1)
{
  id v2 = sub_100082A9C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    id v6 = "-[PBDisplayManagerService updateSoftwareDisplaySize:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s", (uint8_t *)&v5, 0xCu);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  objc_msgSend(v4, "updateSoftwareDisplaySize:", *(double *)(a1 + 32), *(double *)(a1 + 40));
}

id sub_1000824FC()
{
  if (qword_1004702D8 != -1) {
    dispatch_once(&qword_1004702D8, &stru_1003D3550);
  }
  return (id)qword_1004702D0;
}

void sub_100082540(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.appDelegate", "");
  id v2 = (void *)qword_1004702D0;
  qword_1004702D0 = (uint64_t)v1;
}

id sub_100082574()
{
  if (qword_1004702E8 != -1) {
    dispatch_once(&qword_1004702E8, &stru_1003D3570);
  }
  return (id)qword_1004702E0;
}

void sub_1000825B8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.appInfo", "");
  id v2 = (void *)qword_1004702E0;
  qword_1004702E0 = (uint64_t)v1;
}

id sub_1000825EC()
{
  if (qword_1004702F8 != -1) {
    dispatch_once(&qword_1004702F8, &stru_1003D3590);
  }
  return (id)qword_1004702F0;
}

void sub_100082630(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.appManagement", "PBAppManagementLog");
  id v2 = (void *)qword_1004702F0;
  qword_1004702F0 = (uint64_t)v1;
}

id sub_100082664()
{
  if (qword_100470308 != -1) {
    dispatch_once(&qword_100470308, &stru_1003D35B0);
  }
  return (id)qword_100470300;
}

void sub_1000826A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.appSwitcher", "");
  id v2 = (void *)qword_100470300;
  qword_100470300 = (uint64_t)v1;
}

id sub_1000826DC()
{
  if (qword_100470318 != -1) {
    dispatch_once(&qword_100470318, &stru_1003D35D0);
  }
  return (id)qword_100470310;
}

void sub_100082720(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.appTesting", "");
  id v2 = (void *)qword_100470310;
  qword_100470310 = (uint64_t)v1;
}

id sub_100082754()
{
  if (qword_100470328 != -1) {
    dispatch_once(&qword_100470328, &stru_1003D35F0);
  }
  return (id)qword_100470320;
}

void sub_100082798(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.bulletin", "");
  id v2 = (void *)qword_100470320;
  qword_100470320 = (uint64_t)v1;
}

id sub_1000827CC()
{
  if (qword_100470338 != -1) {
    dispatch_once(&qword_100470338, &stru_1003D3610);
  }
  return (id)qword_100470330;
}

void sub_100082810(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.bulletin", "Manager");
  id v2 = (void *)qword_100470330;
  qword_100470330 = (uint64_t)v1;
}

id sub_100082844()
{
  if (qword_100470348 != -1) {
    dispatch_once(&qword_100470348, &stru_1003D3630);
  }
  return (id)qword_100470340;
}

void sub_100082888(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.captiveNetwork", "CaptiveNetworkService");
  id v2 = (void *)qword_100470340;
  qword_100470340 = (uint64_t)v1;
}

id sub_1000828BC()
{
  if (qword_100470358 != -1) {
    dispatch_once(&qword_100470358, &stru_1003D3650);
  }
  return (id)qword_100470350;
}

void sub_100082900(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.constantAudio", "Controller");
  id v2 = (void *)qword_100470350;
  qword_100470350 = (uint64_t)v1;
}

id sub_100082934()
{
  if (qword_100470368 != -1) {
    dispatch_once(&qword_100470368, &stru_1003D3670);
  }
  return (id)qword_100470360;
}

void sub_100082978(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.crd", "");
  id v2 = (void *)qword_100470360;
  qword_100470360 = (uint64_t)v1;
}

id sub_1000829AC()
{
  if (qword_100470378 != -1) {
    dispatch_once(&qword_100470378, &stru_1003D3690);
  }
  return (id)qword_100470370;
}

void sub_1000829F0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.dependencies", "Coordinator");
  id v2 = (void *)qword_100470370;
  qword_100470370 = (uint64_t)v1;
}

id sub_100082A24()
{
  if (qword_100470388 != -1) {
    dispatch_once(&qword_100470388, &stru_1003D36B0);
  }
  return (id)qword_100470380;
}

void sub_100082A68(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.dictation", "");
  id v2 = (void *)qword_100470380;
  qword_100470380 = (uint64_t)v1;
}

id sub_100082A9C()
{
  if (qword_100470398 != -1) {
    dispatch_once(&qword_100470398, &stru_1003D36D0);
  }
  return (id)qword_100470390;
}

void sub_100082AE0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.displayManager", "PBSDisplayManager");
  id v2 = (void *)qword_100470390;
  qword_100470390 = (uint64_t)v1;
}

id sub_100082B14()
{
  if (qword_1004703A8 != -1) {
    dispatch_once(&qword_1004703A8, &stru_1003D36F0);
  }
  return (id)qword_1004703A0;
}

void sub_100082B58(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.eARC", "");
  id v2 = (void *)qword_1004703A0;
  qword_1004703A0 = (uint64_t)v1;
}

id sub_100082B8C()
{
  if (qword_1004703B8 != -1) {
    dispatch_once(&qword_1004703B8, &stru_1003D3710);
  }
  return (id)qword_1004703B0;
}

void sub_100082BD0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.displayManager", "PBModeSwitchingManager");
  id v2 = (void *)qword_1004703B0;
  qword_1004703B0 = (uint64_t)v1;
}

id sub_100082C04()
{
  if (qword_1004703C8 != -1) {
    dispatch_once(&qword_1004703C8, &stru_1003D3730);
  }
  return (id)qword_1004703C0;
}

void sub_100082C48(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.event", "");
  id v2 = (void *)qword_1004703C0;
  qword_1004703C0 = (uint64_t)v1;
}

id sub_100082C7C()
{
  if (qword_1004703D8 != -1) {
    dispatch_once(&qword_1004703D8, &stru_1003D3750);
  }
  return (id)qword_1004703D0;
}

void sub_100082CC0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.externalControl", "");
  id v2 = (void *)qword_1004703D0;
  qword_1004703D0 = (uint64_t)v1;
}

id sub_100082CF4()
{
  if (qword_1004703E8 != -1) {
    dispatch_once(&qword_1004703E8, &stru_1003D3770);
  }
  return (id)qword_1004703E0;
}

void sub_100082D38(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.externalControl", "actions");
  id v2 = (void *)qword_1004703E0;
  qword_1004703E0 = (uint64_t)v1;
}

id sub_100082D6C()
{
  if (qword_1004703F8 != -1) {
    dispatch_once(&qword_1004703F8, &stru_1003D3790);
  }
  return (id)qword_1004703F0;
}

void sub_100082DB0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.externalControl", "events");
  id v2 = (void *)qword_1004703F0;
  qword_1004703F0 = (uint64_t)v1;
}

id sub_100082DE4()
{
  if (qword_100470408 != -1) {
    dispatch_once(&qword_100470408, &stru_1003D37B0);
  }
  return (id)qword_100470400;
}

void sub_100082E28(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.externalControl", "volume");
  id v2 = (void *)qword_100470400;
  qword_100470400 = (uint64_t)v1;
}

id sub_100082E5C()
{
  if (qword_100470418 != -1) {
    dispatch_once(&qword_100470418, &stru_1003D37D0);
  }
  return (id)qword_100470410;
}

void sub_100082EA0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.window", "FocusCoordinator");
  id v2 = (void *)qword_100470410;
  qword_100470410 = (uint64_t)v1;
}

id sub_100082ED4()
{
  if (qword_100470428 != -1) {
    dispatch_once(&qword_100470428, &stru_1003D37F0);
  }
  return (id)qword_100470420;
}

void sub_100082F18(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.scenes", "SetTopBoxIntentDispatcher");
  id v2 = (void *)qword_100470420;
  qword_100470420 = (uint64_t)v1;
}

id sub_100082F4C()
{
  if (qword_100470438 != -1) {
    dispatch_once(&qword_100470438, &stru_1003D3810);
  }
  return (id)qword_100470430;
}

void sub_100082F90(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.headphoneBannerManager", "HeadphoneBannerManager");
  id v2 = (void *)qword_100470430;
  qword_100470430 = (uint64_t)v1;
}

id sub_100082FC4()
{
  if (qword_100470448 != -1) {
    dispatch_once(&qword_100470448, &stru_1003D3830);
  }
  return (id)qword_100470440;
}

void sub_100083008(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.hints", "");
  id v2 = (void *)qword_100470440;
  qword_100470440 = (uint64_t)v1;
}

id sub_10008303C()
{
  if (qword_100470458 != -1) {
    dispatch_once(&qword_100470458, &stru_1003D3850);
  }
  return (id)qword_100470450;
}

void sub_100083080(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.homeUI", "Manager");
  id v2 = (void *)qword_100470450;
  qword_100470450 = (uint64_t)v1;
}

id sub_1000830B4()
{
  if (qword_100470468 != -1) {
    dispatch_once(&qword_100470468, &stru_1003D3870);
  }
  return (id)qword_100470460;
}

void sub_1000830F8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.homeUI", "ViewController");
  id v2 = (void *)qword_100470460;
  qword_100470460 = (uint64_t)v1;
}

id sub_10008312C()
{
  if (qword_100470478 != -1) {
    dispatch_once(&qword_100470478, &stru_1003D3890);
  }
  return (id)qword_100470470;
}

void sub_100083170(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.homeUI", "Service");
  id v2 = (void *)qword_100470470;
  qword_100470470 = (uint64_t)v1;
}

id sub_1000831A4()
{
  if (qword_100470488 != -1) {
    dispatch_once(&qword_100470488, &stru_1003D38B0);
  }
  return (id)qword_100470480;
}

void sub_1000831E8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.layout", "Coordinator");
  id v2 = (void *)qword_100470480;
  qword_100470480 = (uint64_t)v1;
}

id sub_10008321C()
{
  if (qword_100470498 != -1) {
    dispatch_once(&qword_100470498, &stru_1003D38D0);
  }
  return (id)qword_100470490;
}

void sub_100083260(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.layout", "ElementMap");
  id v2 = (void *)qword_100470490;
  qword_100470490 = (uint64_t)v1;
}

id sub_100083294()
{
  if (qword_1004704A8 != -1) {
    dispatch_once(&qword_1004704A8, &stru_1003D38F0);
  }
  return (id)qword_1004704A0;
}

void sub_1000832D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.layout", "Controller");
  id v2 = (void *)qword_1004704A0;
  qword_1004704A0 = (uint64_t)v1;
}

id sub_10008330C()
{
  if (qword_1004704B8 != -1) {
    dispatch_once(&qword_1004704B8, &stru_1003D3910);
  }
  return (id)qword_1004704B0;
}

void sub_100083350(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.layout", "Service");
  id v2 = (void *)qword_1004704B0;
  qword_1004704B0 = (uint64_t)v1;
}

id sub_100083384()
{
  if (qword_1004704C8 != -1) {
    dispatch_once(&qword_1004704C8, &stru_1003D3930);
  }
  return (id)qword_1004704C0;
}

void sub_1000833C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.mediaRemote", "");
  id v2 = (void *)qword_1004704C0;
  qword_1004704C0 = (uint64_t)v1;
}

id sub_1000833FC()
{
  if (qword_1004704D8 != -1) {
    dispatch_once(&qword_1004704D8, &stru_1003D3950);
  }
  return (id)qword_1004704D0;
}

void sub_100083440(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.mediaRemote", "CommandCenter");
  id v2 = (void *)qword_1004704D0;
  qword_1004704D0 = (uint64_t)v1;
}

id sub_100083474()
{
  if (qword_1004704E8 != -1) {
    dispatch_once(&qword_1004704E8, &stru_1003D3970);
  }
  return (id)qword_1004704E0;
}

void sub_1000834B8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.mediaRemote", "observer");
  id v2 = (void *)qword_1004704E0;
  qword_1004704E0 = (uint64_t)v1;
}

id sub_1000834EC()
{
  if (qword_1004704F8 != -1) {
    dispatch_once(&qword_1004704F8, &stru_1003D3990);
  }
  return (id)qword_1004704F0;
}

void sub_100083530(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.mediaRemote", "service");
  id v2 = (void *)qword_1004704F0;
  qword_1004704F0 = (uint64_t)v1;
}

id sub_100083564()
{
  if (qword_100470508 != -1) {
    dispatch_once(&qword_100470508, &stru_1003D39B0);
  }
  return (id)qword_100470500;
}

void sub_1000835A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.migration", "");
  id v2 = (void *)qword_100470500;
  qword_100470500 = (uint64_t)v1;
}

id sub_1000835DC()
{
  if (qword_100470518 != -1) {
    dispatch_once(&qword_100470518, &stru_1003D39D0);
  }
  return (id)qword_100470510;
}

void sub_100083620(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.preferences", "Service");
  id v2 = (void *)qword_100470510;
  qword_100470510 = (uint64_t)v1;
}

id sub_100083654()
{
  if (qword_100470528 != -1) {
    dispatch_once(&qword_100470528, &stru_1003D39F0);
  }
  return (id)qword_100470520;
}

void sub_100083698(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.restrictionService", "");
  id v2 = (void *)qword_100470520;
  qword_100470520 = (uint64_t)v1;
}

id sub_1000836CC()
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100083748;
  block[3] = &unk_1003D0680;
  void block[4] = 5242880LL;
  if (qword_100470538 != -1) {
    dispatch_once(&qword_100470538, block);
  }
  return (id)qword_100470530;
}

void sub_100083748(uint64_t a1)
{
  uint64_t persist = os_log_create_persist("com.apple.PineBoard.osUpdate", "PineBoard", *(void *)(a1 + 32));
  id v2 = (void *)qword_100470530;
  qword_100470530 = persist;
}

id sub_100083780()
{
  if (qword_100470548 != -1) {
    dispatch_once(&qword_100470548, &stru_1003D3A10);
  }
  return (id)qword_100470540;
}

void sub_1000837C4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.pip", "");
  id v2 = (void *)qword_100470540;
  qword_100470540 = (uint64_t)v1;
}

id sub_1000837F8()
{
  if (qword_100470558 != -1) {
    dispatch_once(&qword_100470558, &stru_1003D3A30);
  }
  return (id)qword_100470550;
}

void sub_10008383C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.pip", "Analytics");
  id v2 = (void *)qword_100470550;
  qword_100470550 = (uint64_t)v1;
}

id sub_100083870()
{
  if (qword_100470568 != -1) {
    dispatch_once(&qword_100470568, &stru_1003D3A50);
  }
  return (id)qword_100470560;
}

void sub_1000838B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.osUpdateProgress", "");
  id v2 = (void *)qword_100470560;
  qword_100470560 = (uint64_t)v1;
}

id sub_1000838E8()
{
  if (qword_100470578 != -1) {
    dispatch_once(&qword_100470578, &stru_1003D3A70);
  }
  return (id)qword_100470570;
}

void sub_10008392C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.powerManager", "");
  id v2 = (void *)qword_100470570;
  qword_100470570 = (uint64_t)v1;
}

id sub_100083960()
{
  if (qword_100470588 != -1) {
    dispatch_once(&qword_100470588, &stru_1003D3A90);
  }
  return (id)qword_100470580;
}

void sub_1000839A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard", "SleepWakeLifecycle");
  id v2 = (void *)qword_100470580;
  qword_100470580 = (uint64_t)v1;
}

id sub_1000839D8()
{
  if (qword_100470598 != -1) {
    dispatch_once(&qword_100470598, &stru_1003D3AB0);
  }
  return (id)qword_100470590;
}

void sub_100083A1C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.processManager", "");
  id v2 = (void *)qword_100470590;
  qword_100470590 = (uint64_t)v1;
}

id sub_100083A50()
{
  if (qword_1004705A8 != -1) {
    dispatch_once(&qword_1004705A8, &stru_1003D3AD0);
  }
  return (id)qword_1004705A0;
}

void sub_100083A94(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.profileService", "");
  id v2 = (void *)qword_1004705A0;
  qword_1004705A0 = (uint64_t)v1;
}

id sub_100083AC8()
{
  if (qword_1004705B8 != -1) {
    dispatch_once(&qword_1004705B8, &stru_1003D3AF0);
  }
  return (id)qword_1004705B0;
}

void sub_100083B0C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.ProgrammingGuide", "ProgrammingGuide");
  id v2 = (void *)qword_1004705B0;
  qword_1004705B0 = (uint64_t)v1;
}

id sub_100083B40()
{
  if (qword_1004705C8 != -1) {
    dispatch_once(&qword_1004705C8, &stru_1003D3B10);
  }
  return (id)qword_1004705C0;
}

void sub_100083B84(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.recognizeMyVoice", "Manager");
  id v2 = (void *)qword_1004705C0;
  qword_1004705C0 = (uint64_t)v1;
}

id sub_100083BB8()
{
  if (qword_1004705D8 != -1) {
    dispatch_once(&qword_1004705D8, &stru_1003D3B30);
  }
  return (id)qword_1004705D0;
}

void sub_100083BFC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.scenes", "layout");
  id v2 = (void *)qword_1004705D0;
  qword_1004705D0 = (uint64_t)v1;
}

id sub_100083C30()
{
  if (qword_1004705E8 != -1) {
    dispatch_once(&qword_1004705E8, &stru_1003D3B50);
  }
  return (id)qword_1004705E0;
}

void sub_100083C74(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.scenes", "sceneManager");
  id v2 = (void *)qword_1004705E0;
  qword_1004705E0 = (uint64_t)v1;
}

id sub_100083CA8()
{
  if (qword_1004705F8 != -1) {
    dispatch_once(&qword_1004705F8, &stru_1003D3B70);
  }
  return (id)qword_1004705F0;
}

void sub_100083CEC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.scenes", "openApp");
  id v2 = (void *)qword_1004705F0;
  qword_1004705F0 = (uint64_t)v1;
}

id sub_100083D20()
{
  if (qword_100470608 != -1) {
    dispatch_once(&qword_100470608, &stru_1003D3B90);
  }
  return (id)qword_100470600;
}

void sub_100083D64(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.screenSharing", "");
  id v2 = (void *)qword_100470600;
  qword_100470600 = (uint64_t)v1;
}

id sub_100083D98()
{
  if (qword_100470618 != -1) {
    dispatch_once(&qword_100470618, &stru_1003D3BB0);
  }
  return (id)qword_100470610;
}

void sub_100083DDC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.screenSaver", "");
  id v2 = (void *)qword_100470610;
  qword_100470610 = (uint64_t)v1;
}

id sub_100083E10()
{
  if (qword_100470628 != -1) {
    dispatch_once(&qword_100470628, &stru_1003D3BD0);
  }
  return (id)qword_100470620;
}

void sub_100083E54(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.singleApp", "");
  id v2 = (void *)qword_100470620;
  qword_100470620 = (uint64_t)v1;
}

id sub_100083E88()
{
  if (qword_100470638 != -1) {
    dispatch_once(&qword_100470638, &stru_1003D3BF0);
  }
  return (id)qword_100470630;
}

void sub_100083ECC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.siri", "");
  id v2 = (void *)qword_100470630;
  qword_100470630 = (uint64_t)v1;
}

id sub_100083F00()
{
  if (qword_100470648 != -1) {
    dispatch_once(&qword_100470648, &stru_1003D3C10);
  }
  return (id)qword_100470640;
}

void sub_100083F44(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard", "ScheduledSleep");
  id v2 = (void *)qword_100470640;
  qword_100470640 = (uint64_t)v1;
}

id sub_100083F78()
{
  if (qword_100470658 != -1) {
    dispatch_once(&qword_100470658, &stru_1003D3C30);
  }
  return (id)qword_100470650;
}

void sub_100083FBC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.snapshotService", "");
  id v2 = (void *)qword_100470650;
  qword_100470650 = (uint64_t)v1;
}

id sub_100083FF0()
{
  if (qword_100470668 != -1) {
    dispatch_once(&qword_100470668, &stru_1003D3C50);
  }
  return (id)qword_100470660;
}

void sub_100084034(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "SuggestedUserManager");
  id v2 = (void *)qword_100470660;
  qword_100470660 = (uint64_t)v1;
}

id sub_100084068()
{
  if (qword_100470678 != -1) {
    dispatch_once(&qword_100470678, &stru_1003D3C70);
  }
  return (id)qword_100470670;
}

void sub_1000840AC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard", "Activation");
  id v2 = (void *)qword_100470670;
  qword_100470670 = (uint64_t)v1;
}

id sub_1000840E0()
{
  if (qword_100470688 != -1) {
    dispatch_once(&qword_100470688, &stru_1003D3C90);
  }
  return (id)qword_100470680;
}

void sub_100084124(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.appearance", "PBSystemAppearance");
  id v2 = (void *)qword_100470680;
  qword_100470680 = (uint64_t)v1;
}

id sub_100084158()
{
  if (qword_100470698 != -1) {
    dispatch_once(&qword_100470698, &stru_1003D3CB0);
  }
  return (id)qword_100470690;
}

void sub_10008419C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.systemOverlay", "");
  id v2 = (void *)qword_100470690;
  qword_100470690 = (uint64_t)v1;
}

id sub_1000841D0()
{
  if (qword_1004706A8 != -1) {
    dispatch_once(&qword_1004706A8, &stru_1003D3CD0);
  }
  return (id)qword_1004706A0;
}

void sub_100084214(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.gestures", "Manager");
  id v2 = (void *)qword_1004706A0;
  qword_1004706A0 = (uint64_t)v1;
}

id sub_100084248()
{
  if (qword_1004706B8 != -1) {
    dispatch_once(&qword_1004706B8, &stru_1003D3CF0);
  }
  return (id)qword_1004706B0;
}

void sub_10008428C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.gestures", "Arbiter");
  id v2 = (void *)qword_1004706B0;
  qword_1004706B0 = (uint64_t)v1;
}

id sub_1000842C0()
{
  if (qword_1004706C8 != -1) {
    dispatch_once(&qword_1004706C8, &stru_1003D3D10);
  }
  return (id)qword_1004706C0;
}

void sub_100084304(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.systemService", "");
  id v2 = (void *)qword_1004706C0;
  qword_1004706C0 = (uint64_t)v1;
}

id sub_100084338()
{
  if (qword_1004706D8 != -1) {
    dispatch_once(&qword_1004706D8, &stru_1003D3D30);
  }
  return (id)qword_1004706D0;
}

void sub_10008437C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.systemStatus", "");
  id v2 = (void *)qword_1004706D0;
  qword_1004706D0 = (uint64_t)v1;
}

id sub_1000843B0()
{
  if (qword_1004706E8 != -1) {
    dispatch_once(&qword_1004706E8, &stru_1003D3D50);
  }
  return (id)qword_1004706E0;
}

void sub_1000843F4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.upsell", "Manager");
  id v2 = (void *)qword_1004706E0;
  qword_1004706E0 = (uint64_t)v1;
}

id sub_100084428()
{
  if (qword_1004706F8 != -1) {
    dispatch_once(&qword_1004706F8, &stru_1003D3D70);
  }
  return (id)qword_1004706F0;
}

void sub_10008446C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userNotifications", "");
  id v2 = (void *)qword_1004706F0;
  qword_1004706F0 = (uint64_t)v1;
}

id sub_1000844A0()
{
  if (qword_100470708 != -1) {
    dispatch_once(&qword_100470708, &stru_1003D3D90);
  }
  return (id)qword_100470700;
}

void sub_1000844E4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userPresentationService", "");
  id v2 = (void *)qword_100470700;
  qword_100470700 = (uint64_t)v1;
}

id sub_100084518()
{
  if (qword_100470718 != -1) {
    dispatch_once(&qword_100470718, &stru_1003D3DB0);
  }
  return (id)qword_100470710;
}

void sub_10008455C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "UserProfileApplicationManager");
  id v2 = (void *)qword_100470710;
  qword_100470710 = (uint64_t)v1;
}

id sub_100084590()
{
  if (qword_100470728 != -1) {
    dispatch_once(&qword_100470728, &stru_1003D3DD0);
  }
  return (id)qword_100470720;
}

void sub_1000845D4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "UserProfileArchive");
  id v2 = (void *)qword_100470720;
  qword_100470720 = (uint64_t)v1;
}

id sub_100084608()
{
  if (qword_100470738 != -1) {
    dispatch_once(&qword_100470738, &stru_1003D3DF0);
  }
  return (id)qword_100470730;
}

void sub_10008464C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "CoalescingQueue");
  id v2 = (void *)qword_100470730;
  qword_100470730 = (uint64_t)v1;
}

id sub_100084680()
{
  if (qword_100470748 != -1) {
    dispatch_once(&qword_100470748, &stru_1003D3E10);
  }
  return (id)qword_100470740;
}

void sub_1000846C4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "UserProfileManager");
  id v2 = (void *)qword_100470740;
  qword_100470740 = (uint64_t)v1;
}

id sub_1000846F8()
{
  if (qword_100470758 != -1) {
    dispatch_once(&qword_100470758, &stru_1003D3E30);
  }
  return (id)qword_100470750;
}

void sub_10008473C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "UserProfilePictureService");
  id v2 = (void *)qword_100470750;
  qword_100470750 = (uint64_t)v1;
}

id sub_100084770()
{
  if (qword_100470768 != -1) {
    dispatch_once(&qword_100470768, &stru_1003D3E50);
  }
  return (id)qword_100470760;
}

void sub_1000847B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "UserProfileStore");
  id v2 = (void *)qword_100470760;
  qword_100470760 = (uint64_t)v1;
}

id sub_1000847E8()
{
  if (qword_100470778 != -1) {
    dispatch_once(&qword_100470778, &stru_1003D3E70);
  }
  return (id)qword_100470770;
}

void sub_10008482C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.verificationOperation", "");
  id v2 = (void *)qword_100470770;
  qword_100470770 = (uint64_t)v1;
}

id sub_100084860()
{
  if (qword_100470788 != -1) {
    dispatch_once(&qword_100470788, &stru_1003D3E90);
  }
  return (id)qword_100470780;
}

void sub_1000848A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.videoSubscriberAccountService", "");
  id v2 = (void *)qword_100470780;
  qword_100470780 = (uint64_t)v1;
}

id sub_1000848D8()
{
  if (qword_100470798 != -1) {
    dispatch_once(&qword_100470798, &stru_1003D3EB0);
  }
  return (id)qword_100470790;
}

void sub_10008491C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.volumeControlService", "");
  id v2 = (void *)qword_100470790;
  qword_100470790 = (uint64_t)v1;
}

id sub_100084950()
{
  if (qword_1004707A8 != -1) {
    dispatch_once(&qword_1004707A8, &stru_1003D3ED0);
  }
  return (id)qword_1004707A0;
}

void sub_100084994(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.window", "PBWindowManager");
  id v2 = (void *)qword_1004707A0;
  qword_1004707A0 = (uint64_t)v1;
}

id sub_1000849C8()
{
  if (qword_1004707B8 != -1) {
    dispatch_once(&qword_1004707B8, &stru_1003D3EF0);
  }
  return (id)qword_1004707B0;
}

void sub_100084A0C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.window", "PBWindow");
  id v2 = (void *)qword_1004707B0;
  qword_1004707B0 = (uint64_t)v1;
}

id sub_100084A40(void *a1)
{
  if (a1)
  {
    id v1 = sub_1000F6ED4();
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

void sub_100084CB4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_100084CD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateDumpBuilder]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 build]);

  return v3;
}

__CFString *sub_100085754(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 4) {
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PBHIDEventDeliveryTarget(%ld)",  a1));
  }
  else {
    id v1 = off_1003D3F38[a1 + 1];
  }
  return v1;
}

__CFString *sub_1000858FC(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 4) {
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PBHIDEventDeliveryMode(%ld)",  a1));
  }
  else {
    id v1 = off_1003D3F58[a1 + 1];
  }
  return v1;
}

id sub_100085CEC(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 24LL);
  __int128 v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v6[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v6[1] = v3;
  v6[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v6];
  int v4 = *(void **)(*(void *)(a1 + 32) + 16LL);
  [*(id *)(a1 + 40) floatValue];
  objc_msgSend(v4, "setValue:");
  [*(id *)(*(void *)(a1 + 32) + 16) setNeedsLayout];
  return [*(id *)(*(void *)(a1 + 32) + 16) layoutIfNeeded];
}

id sub_100085EE0(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) controlCenterActive];
  [*(id *)(*(void *)(a1 + 32) + 24) _setContinuousCornerRadius:6.0];
  __int128 v3 = *(void **)(a1 + 32);
  int v4 = (void *)v3[3];
  int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 view]);
  [v5 frame];
  double v7 = 62.0;
  if (v2) {
    double v7 = 29.0;
  }
  double v8 = v6 - v7;
  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v9 frame];
  objc_msgSend(v4, "setFrame:", v8, (v10 + -230.0) * 0.5, 12.0, 230.0);

  BOOL v11 = *(void **)(*(void *)(a1 + 32) + 16LL);
  [*(id *)(a1 + 40) floatValue];
  objc_msgSend(v11, "setValue:");
  [*(id *)(*(void *)(a1 + 32) + 16) setGlyphScale:0.25];
  [*(id *)(*(void *)(a1 + 32) + 16) setGlyphVisible:0];
  [*(id *)(*(void *)(a1 + 32) + 24) setNeedsLayout];
  return [*(id *)(*(void *)(a1 + 32) + 24) layoutIfNeeded];
}

uint64_t sub_100086004(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_10008618C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) controlCenterActive];
  [*(id *)(*(void *)(a1 + 32) + 24) _setContinuousCornerRadius:6.0];
  __int128 v3 = *(void **)(a1 + 32);
  int v4 = (void *)v3[3];
  int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 view]);
  [v5 frame];
  double v7 = 62.0;
  if (v2) {
    double v7 = 29.0;
  }
  double v8 = v6 - v7;
  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v9 frame];
  objc_msgSend(v4, "setFrame:", v8, (v10 + -230.0) * 0.5, 12.0, 230.0);

  [*(id *)(*(void *)(a1 + 32) + 16) setGlyphScale:0.25];
  [*(id *)(*(void *)(a1 + 32) + 16) setGlyphVisible:0];
  [*(id *)(*(void *)(a1 + 32) + 24) setNeedsLayout];
  return [*(id *)(*(void *)(a1 + 32) + 24) layoutIfNeeded];
}

id sub_10008629C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) startIndeterminateAnimationWithDelay:*(unsigned __int8 *)(a1 + 48) headingUp:*(void *)(a1 + 40) completion:1.0];
}

id sub_10008637C(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateVolumeHUDWithLevel:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

id sub_1000864E0(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) controlCenterActive];
  [*(id *)(*(void *)(a1 + 32) + 24) _setContinuousCornerRadius:6.0];
  __int128 v3 = *(void **)(a1 + 32);
  int v4 = (void *)v3[3];
  int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 view]);
  [v5 frame];
  double v7 = 62.0;
  if (v2) {
    double v7 = 29.0;
  }
  double v8 = v6 - v7;
  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v9 frame];
  objc_msgSend(v4, "setFrame:", v8, (v10 + -230.0) * 0.5, 12.0, 230.0);

  BOOL v11 = *(void **)(*(void *)(a1 + 32) + 16LL);
  [*(id *)(a1 + 40) floatValue];
  objc_msgSend(v11, "setValue:");
  [*(id *)(*(void *)(a1 + 32) + 16) setGlyphScale:0.25];
  [*(id *)(*(void *)(a1 + 32) + 16) setGlyphVisible:0];
  [*(id *)(*(void *)(a1 + 32) + 24) setNeedsLayout];
  return [*(id *)(*(void *)(a1 + 32) + 24) layoutIfNeeded];
}

uint64_t sub_100086604(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_10008673C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) controlCenterActive];
  [*(id *)(*(void *)(a1 + 32) + 24) _setContinuousCornerRadius:6.0];
  __int128 v3 = *(void **)(a1 + 32);
  int v4 = (void *)v3[3];
  int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 view]);
  [v5 frame];
  double v7 = 59.6;
  if (v2) {
    double v7 = 26.6;
  }
  double v8 = v6 - v7;
  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v9 frame];
  objc_msgSend(v4, "setFrame:", v8, (*(double *)(a1 + 48) + v10 + -248.0) * 0.5, 9.6, 248.0);

  BOOL v11 = *(void **)(*(void *)(a1 + 32) + 16LL);
  [*(id *)(a1 + 40) floatValue];
  objc_msgSend(v11, "setValue:");
  [*(id *)(*(void *)(a1 + 32) + 16) setGlyphScale:0.25];
  [*(id *)(*(void *)(a1 + 32) + 16) setGlyphVisible:0];
  [*(id *)(*(void *)(a1 + 32) + 24) setNeedsLayout];
  return [*(id *)(*(void *)(a1 + 32) + 24) layoutIfNeeded];
}

id sub_1000869C4(uint64_t a1)
{
  else {
    double v2 = 50.0;
  }
  __int128 v3 = *(void **)(a1 + 32);
  int v4 = (void *)v3[3];
  int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 view]);
  [v5 frame];
  double v7 = v2 + v6;
  double v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v8 frame];
  double v10 = v9;
  [*(id *)(*(void *)(a1 + 32) + 24) frame];
  double v12 = (v10 - v11) * 0.5;
  [*(id *)(*(void *)(a1 + 32) + 24) frame];
  double v14 = v13;
  [*(id *)(*(void *)(a1 + 32) + 24) frame];
  objc_msgSend(v4, "setFrame:", v7, v12, v14);

  [*(id *)(*(void *)(a1 + 32) + 16) setNeedsLayout];
  return [*(id *)(*(void *)(a1 + 32) + 16) layoutIfNeeded];
}

uint64_t sub_100086AC8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16LL))(*(void *)(a1 + 32), a2 == 0);
}

void sub_1000877F4(void *a1, uint64_t a2)
{
  id v3 = a1;
  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSObject bs_secureDataFromObject:](&OBJC_CLASS___NSObject, "bs_secureDataFromObject:", a2));
  [v3 setObject:v4 forKey:@"com.apple.PineBoard.legacyGameUserProfileInfo"];
}

void sub_100087858(uint64_t a1)
{
  double v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue( [v2 localizedStringForKey:@"LegacyGameLaunchAlertTitle" value:&stru_1003E2910 table:@"Localizable-UserProfiles"]);
  int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localizedName]);
  int v5 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString localizedStringWithFormat:]( &OBJC_CLASS___NSString,  "localizedStringWithFormat:",  v3,  v4));

  if (!*(void *)(a1 + 40)) {
    goto LABEL_6;
  }
  id v6 = [[PBSUserProfileAccountInfo alloc] initWithUserProfile:*(void *)(a1 + 40)];
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 formattedShortName]);
  if (!v7)
  {

LABEL_6:
    double v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
    double v11 = (__CFString *)objc_claimAutoreleasedReturnValue( [v12 localizedStringForKey:@"LegacyGameLaunchAlertMessage" value:&stru_1003E2910 table:@"Localizable-UserProfiles"]);

    goto LABEL_7;
  }

  double v8 = (void *)v7;
  double v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  double v10 = (void *)objc_claimAutoreleasedReturnValue( [v9 localizedStringForKey:@"LegacyGameLaunchAlertMessageWithPrimaryName" value:&stru_1003E2910 table:@"Localizable-UserProfiles"]);
  double v11 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString localizedStringWithFormat:]( &OBJC_CLASS___NSString,  "localizedStringWithFormat:",  v10,  v8));

  if (!v11) {
    goto LABEL_6;
  }
LABEL_7:
  double v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  SInt32 v14 = CFUserNotificationDisplayAlert( 0.0,  0,  0,  0,  0,  v5,  v11,  (CFStringRef)[v13 localizedStringForKey:@"LegacyGameLaunchAlertDefaultButtonTitle" value:&stru_1003E2910 table:@"Localizable-UserProfiles"],  0,  0,  0);

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100087AA0;
  block[3] = &unk_1003D1CA8;
  objc_copyWeak(&v16, (id *)(a1 + 48));
  SInt32 v17 = v14;
  dispatch_async(&_dispatch_main_q, block);
  objc_destroyWeak(&v16);
}

void sub_100087AA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v3 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 40)));
    int v4 = (void *)WeakRetained[2];
    WeakRetained[2] = v3;

    [WeakRetained satisfyMilestone:@"UserNotification"];
  }
}

uint64_t sub_100088088()
{
  if (!notify_is_valid_token(dword_10046A7E0))
  {
    if (dword_10046A7E0 != -1)
    {
      id v0 = sub_100082B8C();
      id v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(v0);
      if (os_log_type_enabled(v1, OS_LOG_TYPE_FAULT)) {
        sub_100278654(v1, v2, v3, v4, v5, v6, v7, v8);
      }
    }

    uint64_t v9 = notify_register_check("com.apple.pineboard.display_mode_switch_active", &dword_10046A7E0);
    BOOL is_valid_token = notify_is_valid_token(dword_10046A7E0);
    id v11 = sub_100082B8C();
    double v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    double v13 = v12;
    if (is_valid_token)
    {
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 67109120;
        v21[1] = dword_10046A7E0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Mode switch token registered: %d",  (uint8_t *)v21,  8u);
      }
    }

    else if (os_log_type_enabled(v12, OS_LOG_TYPE_FAULT))
    {
      sub_1002785EC(v9, v13, v14, v15, v16, v17, v18, v19);
    }
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1004707C0);
  return dword_10046A7E0;
}

void sub_100088B4C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  [a2 frameRate];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
  [v2 addObject:v3];
}

void sub_100088C70(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) readUserSelectedDisplayMode]);
  id v6 = [v5 dynamicRange];
  uint64_t v7 = *(void *)(a1 + 48);
  if (v6 == (id)538423557 && v7 == 538423557)
  {
    id v10 = [v5 SDRColorMapping];
    [v3 doubleValue];
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[PBDisplayModePredicate predicatesWithPreferredSDRColorMapping:frameRate:]( &OBJC_CLASS___PBDisplayModePredicate,  "predicatesWithPreferredSDRColorMapping:frameRate:",  v10));
    -[NSMutableArray addObjectsFromArray:](v4, "addObjectsFromArray:", v9);
  }

  else
  {
    [v3 doubleValue];
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[PBDisplayModePredicate predicatWithDynamicRange:frameRate:]( &OBJC_CLASS___PBDisplayModePredicate,  "predicatWithDynamicRange:frameRate:",  v7));
    -[NSMutableArray addObject:](v4, "addObject:", v9);
  }

  [*(id *)(a1 + 40) addObjectsFromArray:v4];
}

void sub_100088E30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100088E48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100088E58(uint64_t a1)
{
}

void sub_100088E70(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _findDisplayModeFromPredicate:a2]);
  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), v6);
    *a4 = 1;
  }
}

BOOL sub_1000891E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) resolution];
  double v5 = v4;
  double v7 = v6;
  id v8 = [v3 resolution];
  if (!PBSDisplayResolutionEqualToResolution(v8, v5, v7, v9, v10)
    || ([*(id *)(a1 + 40) canHandleHighBandwidthModes] & 1) == 0
    && ([v3 isAboveBandwidthThreshold] & 1) != 0)
  {
    goto LABEL_17;
  }

  int v11 = *(unsigned __int8 *)(a1 + 57);
  if (*(_BYTE *)(a1 + 56))
  {
    [*(id *)(a1 + 48) frameRate];
    int refreshed = PBSDisplayRefreshRateEqualToRefreshRate([v3 refreshRate]);
    if (!v11)
    {
      if (refreshed)
      {
        double v13 = *(void **)(a1 + 32);
        goto LABEL_14;
      }

id sub_10008948C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  [v2 modeSwitchDuration];
  double v4 = v3;

  return [*(id *)(a1 + 32) performSelector:"_notifyDisplayModeChangeDidFinish" withObject:0 afterDelay:v4];
}

void sub_100089B3C( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

id sub_10008A540(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:0.25];
}

id sub_10008A568(uint64_t a1)
{
  id v1 = *(void **)(*(void *)(a1 + 32) + 32LL);
  __int128 v2 = *(_OWORD *)(a1 + 56);
  v4[0] = *(_OWORD *)(a1 + 40);
  v4[1] = v2;
  _DWORD v4[2] = *(_OWORD *)(a1 + 72);
  return [v1 setTransform:v4];
}

uint64_t sub_10008A5B0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10008A5D0(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  __int128 v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  double v3 = (void *)objc_claimAutoreleasedReturnValue([v2 indeterminateAnimationStartDelay]);
  [v3 floatValue];
  [v1 startAnimationAfterDelay:v4];
}

id sub_10008A7B0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:1.0];
}

uint64_t sub_10008A7D8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10008AA94(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithCategory:4];
  __int128 v2 = (void *)qword_1004707C8;
  qword_1004707C8 = (uint64_t)v1;
}

void sub_10008AB3C(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithCategory:5];
  __int128 v2 = (void *)qword_1004707D8;
  qword_1004707D8 = (uint64_t)v1;
}

void sub_10008ABE4(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithCategory:6];
  __int128 v2 = (void *)qword_1004707E8;
  qword_1004707E8 = (uint64_t)v1;
}

id sub_10008B238(uint64_t a1)
{
  return [*(id *)(a1 + 32) senderID];
}

id sub_10008B250(uint64_t a1)
{
  return [*(id *)(a1 + 32) category];
}

id sub_10008B268(uint64_t a1)
{
  return [*(id *)(a1 + 32) remoteType];
}

id sub_10008B280(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) settings]);
}

void sub_10008BCA4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10008BCD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _checkKeyboardState];
}

id sub_10008BF04(uint64_t a1)
{
  return [*(id *)(a1 + 40) layoutSubviews];
}

id sub_10008C04C(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "_updateOverlayInsets:animated:",  1,  *(double *)(a1 + 40),  *(double *)(a1 + 48),  *(double *)(a1 + 56),  *(double *)(a1 + 64));
}

id sub_10008C0D4(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "_updateFocusedFrame:animated:",  1,  *(double *)(a1 + 40),  *(double *)(a1 + 48),  *(double *)(a1 + 56),  *(double *)(a1 + 64));
}

id sub_10008D000(uint64_t a1, int a2)
{
  id v4 = sub_1000B464C(*(void **)(a1 + 32));
  double v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    v10[0] = 67109378;
    v10[1] = a2;
    __int16 v11 = 2114;
    uint64_t v12 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[PPT] Expectation fulfilled with status: %{BOOL}d {test=%{public}@}",  (uint8_t *)v10,  0x12u);
  }

  uint64_t v8 = *(void *)(a1 + 40);
  double v7 = *(void **)(a1 + 48);
  if (a2) {
    return [v7 finishedTest:v8];
  }
  else {
    return [v7 failedTest:v8 withFailure:@"GestureActivationTimedOut"];
  }
}

void sub_10008D0DC(uint64_t a1)
{
  __int128 v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_10008D168;
  _OWORD v4[3] = &unk_1003CFF08;
  id v5 = *(id *)(a1 + 64);
  [v2 evaluateCommands:v3 completion:v4];
}

id sub_10008D168(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

CFStringRef sub_10008D608(uint64_t a1)
{
  id v1 = @"RepeatingPress";
  __int128 v2 = @"Undefined";
  if (a1 == 6) {
    __int128 v2 = @"LongPress";
  }
  if (a1 != 10) {
    id v1 = v2;
  }
  if (a1 == 2) {
    return @"Press";
  }
  else {
    return v1;
  }
}

void sub_10008DEA0(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v6 = sub_1000848D8();
    double v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100278A7C();
    }

    if (*(void *)(a1 + 40)) {
      **(void **)(a1 + 40) = v5;
    }
  }
}

void sub_10008E01C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v6 = sub_1000848D8();
    double v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100278B10();
    }

    if (*(void *)(a1 + 40)) {
      **(void **)(a1 + 40) = v5;
    }
  }
}

void sub_10008E158(id a1)
{
  v3[0] = &off_1003FD920;
  v3[1] = &off_1003FD938;
  v4[0] = &off_1003FEA40;
  v4[1] = &off_1003FEA50;
  v3[2] = &off_1003FD950;
  v3[3] = &off_1003FD968;
  _DWORD v4[2] = &off_1003FEA60;
  _OWORD v4[3] = &off_1003FEA70;
  void v3[4] = &off_1003FD980;
  v3[5] = &off_1003FD998;
  void v4[4] = &off_1003FEA80;
  v4[5] = &off_1003FEA90;
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  6LL));
  __int128 v2 = off_10046A968;
  off_10046A968 = v1;
}

id sub_10008E3B0()
{
  if (qword_100470818 != -1) {
    dispatch_once(&qword_100470818, &stru_1003D4318);
  }
  return (id)qword_100470810;
}

void sub_10008E7C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10008E7E0(uint64_t a1)
{
  id v2 = sub_10008E3B0();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315138;
    id v6 = "-[PBProfileStoreSnapshotController initWithProfileStore:profileArchiveController:callinQueue:]_block_invoke";
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%s: Profile store has been updated. Will fetch the latest snapshot",  (uint8_t *)&v5,  0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleProfileStoreUpdate];
}

void sub_10008EDF4(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[UPSettingKey recommendationGroupConsentSettingKey]( &OBJC_CLASS___UPSettingKey,  "recommendationGroupConsentSettingKey"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[UPSettingKey recommendationGroupIdentitiesSettingKey]( &OBJC_CLASS___UPSettingKey,  "recommendationGroupIdentitiesSettingKey",  v1));
  v12[1] = v2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[UPSettingKey customNameSettingKey](&OBJC_CLASS___UPSettingKey, "customNameSettingKey"));
  v12[2] = v3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[UPSettingKey nameComponentsSettingKey](&OBJC_CLASS___UPSettingKey, "nameComponentsSettingKey"));
  void v12[3] = v4;
  int v5 = (void *)objc_claimAutoreleasedReturnValue(+[UPSettingKey lastActiveDateSettingKey](&OBJC_CLASS___UPSettingKey, "lastActiveDateSettingKey"));
  void v12[4] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[UPSettingKey preferredLanguagesSettingKey]( &OBJC_CLASS___UPSettingKey,  "preferredLanguagesSettingKey"));
  void v12[5] = v6;
  double v7 = (void *)objc_claimAutoreleasedReturnValue( +[UPSettingKey preferredInputModesSettingKey]( &OBJC_CLASS___UPSettingKey,  "preferredInputModesSettingKey"));
  v12[6] = v7;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v12, 7LL));
  double v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v8));

  uint64_t v10 = objc_claimAutoreleasedReturnValue(+[UPSettingRequest settingRequestsWithKeys:](&OBJC_CLASS___UPSettingRequest, "settingRequestsWithKeys:", v9));
  __int16 v11 = (void *)qword_100470808;
  qword_100470808 = v10;
}

UPAddProfileRequest *__cdecl sub_10008F718(id a1, PBSUserProfile *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_alloc(&OBJC_CLASS___UPAddProfileRequest);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile identifier](v2, "identifier"));
  int v5 = -[UPAddProfileRequest initWithSystemAppUserIdentifier:](v3, "initWithSystemAppUserIdentifier:", v4);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile iCloudAltDSID](v2, "iCloudAltDSID"));
  -[UPAddProfileRequest setICloudAltDSID:](v5, "setICloudAltDSID:", v6);

  double v7 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile iTunesAltDSID](v2, "iTunesAltDSID"));
  -[UPAddProfileRequest setITunesAltDSID:](v5, "setITunesAltDSID:", v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile gameCenterAltDSID](v2, "gameCenterAltDSID"));
  -[UPAddProfileRequest setGameCenterAltDSID:](v5, "setGameCenterAltDSID:", v8);

  double v9 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile personaUniqueString](v2, "personaUniqueString"));
  -[UPAddProfileRequest setPersonaUniqueIdentifier:](v5, "setPersonaUniqueIdentifier:", v9);

  -[UPAddProfileRequest setPrimary:](v5, "setPrimary:", -[PBSUserProfile type](v2, "type") == 0LL);
  -[UPAddProfileRequest setActive:](v5, "setActive:", -[PBSUserProfile isSelected](v2, "isSelected"));
  id v10 = +[UPSetting recommendationGroupConsentSettingWithConsent:]( &OBJC_CLASS___UPSetting,  "recommendationGroupConsentSettingWithConsent:",  sub_1000909C0((unint64_t)-[PBSUserProfile groupRecommendationsConsent]( v2,  "groupRecommendationsConsent")));
  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile preferredLanguages](v2, "preferredLanguages"));
  if (v12)
  {
    double v13 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile preferredLanguages](v2, "preferredLanguages"));
    id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSOrderedSet orderedSetWithArray:](&OBJC_CLASS___NSOrderedSet, "orderedSetWithArray:", v13));
  }

  else
  {
    id v14 = 0LL;
  }

  BOOL v15 = (void *)objc_claimAutoreleasedReturnValue( +[UPSetting preferredLanguagesSettingWithLanguages:]( &OBJC_CLASS___UPSetting,  "preferredLanguagesSettingWithLanguages:",  v14));
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile preferredInputModes](v2, "preferredInputModes"));
  if (v16)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile preferredInputModes](v2, "preferredInputModes"));
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSOrderedSet orderedSetWithArray:](&OBJC_CLASS___NSOrderedSet, "orderedSetWithArray:", v17));
  }

  else
  {
    uint64_t v18 = 0LL;
  }

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[UPSetting preferredInputModesSettingWithInputModes:]( &OBJC_CLASS___UPSetting,  "preferredInputModesSettingWithInputModes:",  v18));
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile overrideName](v2, "overrideName"));
  id v21 = (void *)objc_claimAutoreleasedReturnValue(+[UPSetting customNameSettingWithName:](&OBJC_CLASS___UPSetting, "customNameSettingWithName:", v20));

  v25[0] = v11;
  v25[1] = v15;
  void v25[2] = v19;
  v25[3] = v21;
  id v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v25, 4LL));
  id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v22));

  -[UPAddProfileRequest setSettings:](v5, "setSettings:", v23);
  return v5;
}

id sub_10008F9F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) systemAppUserIdentifier]);
  unsigned __int8 v5 = [v4 isEqualToString:v3];

  if ((v5 & 1) != 0) {
    id v6 = 0LL;
  }
  else {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:v3]);
  }

  return v6;
}

void sub_10008FF18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_calloutQueue_notifyObserverWithUpdate:", *(void *)(a1 + 32));
}

void sub_100090000(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_callinQueue_refreshSnapshotWithNotifyIfNeeded:", 1);
}

void sub_1000900A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "ProfileStoreSnapshotController");
  id v2 = (void *)qword_100470810;
  qword_100470810 = (uint64_t)v1;
}

void *sub_1000904DC(void *result)
{
  uint64_t v1 = result[4];
  if (*(void *)(v1 + 24))
  {
    id v2 = result;
    unint64_t v3 = 0LL;
    do
    {
      uint64_t result = [(id)v2[5] appendFloat:0 withName:*(double *)(*(void *)(v1 + 16) + 8 * v3++)];
      uint64_t v1 = v2[4];
    }

    while (v3 < *(void *)(v1 + 24));
  }

  return result;
}

void sub_1000905D0(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = sub_100173CB4();
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = sub_100173EC4(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  [v2 minusSet:v6];

  id v7 = sub_100173B64();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = sub_100173EC4(v8);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  [v2 unionSet:v10];

  id v11 = sub_100173D7C();
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  id v13 = sub_100173EC4(v12);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  [v2 unionSet:v14];
}

void sub_10009070C(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = sub_100173E3C(20LL);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  [v2 unionSet:v4];

  id v5 = sub_100173E3C(102LL);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  [v2 unionSet:v6];

  id v7 = sub_100173E3C(103LL);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  [v2 unionSet:v8];
}

void sub_100090820(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = sub_100173B64();
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = sub_100173EC4(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  [v2 minusSet:v6];

  id v7 = sub_100173CB4();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = sub_100173EC4(v8);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  [v2 unionSet:v10];
}

void sub_100090974(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 removeAllObjects];
  id v4 = sub_100173E3C(*(void *)(a1 + 32));
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  [v3 unionSet:v5];
}

unint64_t sub_1000909C0(unint64_t result)
{
  if (result >= 3) {
    return 0LL;
  }
  return result;
}

BOOL sub_1000909CC(uint64_t a1)
{
  return a1 == 0;
}

void sub_10009169C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

PBOverlayLayoutElement *sub_1000916BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = -[PBOverlayLayoutElement initWithElement:controller:]( objc_alloc(&OBJC_CLASS___PBOverlayLayoutElement),  "initWithElement:controller:",  v3,  *(void *)(a1 + 32));

  return v4;
}

id sub_100091714(id a1, PBOverlayLayoutElement *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBOverlayLayoutElement hint](a2, "hint"));
}

id sub_1000917DC(id a1, PBOverlayLayoutElement *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBOverlayLayoutElement hint](a2, "hint"));
}

void sub_100091914( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_100091BB4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_100091CA8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_100091D54(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 sharedHeadphoneBannerManager]);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100091DF8;
  v5[3] = &unk_1003D0048;
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  [v3 presentHeadphoneBannerWithRequest:v4 completion:v5];
}

void sub_100091DF8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
  (*(void (**)(uint64_t, void *, id))(v4 + 16))(v4, v6, v5);
}

void sub_100092DCC(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (!v2)
  {
    uint64_t v8 = (objc_class *)objc_opt_class(&OBJC_CLASS___PBRecognizeMyVoiceObserver);
    id v9 = NSStringFromClass(v8);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Value for '%@' was unexpectedly nil. Expected %@.",  @"(__bridge id)observer",  v10));

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100279598();
    }
LABEL_13:
    _bs_set_crash_log_message([v11 UTF8String]);
    __break(0);
    JUMPOUT(0x100092F18LL);
  }

  id v3 = v2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___PBRecognizeMyVoiceObserver);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) == 0)
  {
    uint64_t v12 = (objc_class *)[v3 classForCoder];
    if (!v12) {
      uint64_t v12 = (objc_class *)objc_opt_class(v3);
    }
    id v13 = NSStringFromClass(v12);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    BOOL v15 = (objc_class *)objc_opt_class(&OBJC_CLASS___PBRecognizeMyVoiceObserver);
    uint64_t v16 = NSStringFromClass(v15);
    id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Value for '%@' was of unexpected class %@. Expected %@.",  @"(__bridge id)observer",  v14,  v17));

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100279598();
    }
    goto LABEL_13;
  }

  id v5 = sub_100083B40();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
    sub_100279634(v6);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000949D8;
  block[3] = &unk_1003CFF08;
  id v19 = v3;
  id v7 = v19;
  dispatch_async(&_dispatch_main_q, block);
}

void sub_1000931F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _checkSelectedUserRMVStateIfBulletinQueued];
}

void sub_1000932F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _checkSelectedUserRMVStateIfBulletinQueued];
}

void sub_10009356C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_100083B40();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = v7;
  if (v5)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
      id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
      int v21 = 134219010;
      uint64_t v22 = a2;
      __int16 v23 = 2114;
      id v24 = v19;
      __int16 v25 = 2160;
      uint64_t v26 = 1752392040LL;
      __int16 v27 = 2112;
      id v28 = v20;
      __int16 v29 = 2114;
      id v30 = v5;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Failed to fetch user recognize my voice state. {state=%ld, userIdentifier=%{public}@, altDSID=%{mask.hash}@, error=%{public}@}",  (uint8_t *)&v21,  0x34u);
    }

LABEL_4:
    goto LABEL_9;
  }

  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
    int v21 = 134218754;
    uint64_t v22 = a2;
    __int16 v23 = 2114;
    id v24 = v9;
    __int16 v25 = 2160;
    uint64_t v26 = 1752392040LL;
    __int16 v27 = 2112;
    id v28 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Got user RMV state. {state=%ld, userIdentifier=%{public}@, altDSID=%{mask.hash}@}",  (uint8_t *)&v21,  0x2Au);
  }

  if (a2 == 1)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults pineBoardServicesUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "pineBoardServicesUserDefaults"));
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
    unsigned __int8 v13 = objc_msgSend(v11, "pbs_rmvShownToUserWithIdentifier:", v12);

    if ((v13 & 1) == 0)
    {
      id v14 = sub_100083B40();
      BOOL v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
        id v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
        int v21 = 134218754;
        uint64_t v22 = 1LL;
        __int16 v23 = 2114;
        id v24 = v16;
        __int16 v25 = 2160;
        uint64_t v26 = 1752392040LL;
        __int16 v27 = 2112;
        id v28 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Storing default to prevent upsell from being shown to user. {state=%ld, userIdentifier=%{public}@, altDSID=%{mask.hash}@}",  (uint8_t *)&v21,  0x2Au);
      }

      uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults pineBoardServicesUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "pineBoardServicesUserDefaults"));
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
      -[os_log_s pbs_setRMVShownToUserWithIdentifier:](v8, "pbs_setRMVShownToUserWithIdentifier:", v18);

      goto LABEL_4;
    }
  }

  id v9 = @"CustomName";
LABEL_15:

  return v9;
}

  id v11 = @"CustomName";
LABEL_14:

  return v11;
}

  id v11 = @"CustomName";
LABEL_20:

  return v11;
}

LABEL_14:
}

    unsigned __int8 v13 = 2LL;
    goto LABEL_15;
  }

  id v11 = [a1 _invalidateImagesWithDeveloperType:1];
  if (v10) {
    id v11 = [a1 _invalidateImagesWithDeveloperType:3];
  }
  sub_1000BC98C((uint64_t)v11, 1LL, 1LL);
  sub_1000BC98C(v12, 1LL, 2LL);
  unsigned __int8 v13 = 3LL;
  sub_1000BC98C(v14, 3LL, 1LL);
  sub_1000BC98C(v15, 3LL, 2LL);
LABEL_15:

  return v13;
}

    goto LABEL_15;
  }

  if (([v9 isEqualToString:@"_unknown_"] & 1) == 0)
  {
    BOOL v15 = (void *)objc_claimAutoreleasedReturnValue(-[PBDisplayManager memoryStore](self, "memoryStore"));
    uint64_t v12 = (NSMutableDictionary *)[v15 mutableCopy];

    -[NSMutableDictionary setObject:forKeyedSubscript:](v12, "setObject:forKeyedSubscript:", v8, v10);
    -[PBDisplayManager setMemoryStore:](self, "setMemoryStore:", v12);
    goto LABEL_14;
  }
}

    id v20 = (_PBSuspensionSnapshotView *)v6;
    if (!v20) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }

  if (a3 != 3) {
    goto LABEL_10;
  }
  uint64_t v8 = objc_opt_self(&OBJC_CLASS____PBScenePresentationView, v7);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  id v10 = objc_opt_isKindOfClass(v6, v9);

  if ((v10 & 1) != 0) {
    goto LABEL_14;
  }
  id v11 = objc_alloc(&OBJC_CLASS____PBScenePresentationView);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[PBSceneHandle clientProcessBundleIdentifier](self->_sceneHandle, "clientProcessBundleIdentifier"));
  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472LL;
  _DWORD v34[2] = sub_1001DA9A0;
  v34[3] = &unk_1003DC2C8;
  unsigned __int8 v13 = &v35;
  objc_copyWeak(&v35, &location);
  id v14 = -[_PBScenePresentationView initWithBundleIdentifier:scenePresentationViewProvider:]( v11,  "initWithBundleIdentifier:scenePresentationViewProvider:",  v12,  v34);
LABEL_17:
  id v20 = (_PBSuspensionSnapshotView *)v14;

  id v24 = v13;
LABEL_18:
  objc_destroyWeak(v24);
  if (v20)
  {
LABEL_19:
    -[PBApplicationSceneView bounds](self, "bounds", v27, v28, v29, v30);
    -[_PBSuspensionSnapshotView setFrame:](v20, "setFrame:");
    -[_PBSuspensionSnapshotView setAutoresizingMask:](v20, "setAutoresizingMask:", 18LL);
    -[PBApplicationSceneView _continuousCornerRadius](self, "_continuousCornerRadius");
    -[_PBWallpaperSceneView _setContinuousCornerRadius:](v20, "_setContinuousCornerRadius:");
    -[_PBWallpaperSceneView setWallpaperEnabled:](v20, "setWallpaperEnabled:", self->_wallpaperEnabled);
  }

  return v8;
}
}

          continue;
        }
      }

      id v6 = [v4 countByEnumeratingWithState:&v25 objects:v29 count:16];
    }

    while (v6);
  }

  -[NSMutableArray sortUsingComparator:](v23, "sortUsingComparator:", &stru_1003DCBE8);
  int v21 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray arrayByAddingObjectsFromArray:](v24, "arrayByAddingObjectsFromArray:", v23));

  return v21;
}

void sub_100093AF4(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _queueBulletinForUser:*(void *)(a1 + 32) type:*(void *)(a1 + 48)];

  id v4 = objc_loadWeakRetained(v2);
  [v4 _checkSelectedUserRMVStateIfBulletinQueued];
}

void sub_100094030(_Unwind_Exception *a1)
{
}

void sub_100094054(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v7 = sub_100083B40();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    id v9 = v8;
    if (v5)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
        id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
        *(_DWORD *)__int128 buf = 134219010;
        id v19 = a2;
        __int16 v20 = 2114;
        int v21 = v13;
        __int16 v22 = 2160;
        uint64_t v23 = 1752392040LL;
        __int16 v24 = 2112;
        __int16 v25 = v14;
        __int16 v26 = 2114;
        id v27 = v5;
        _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "Failed to fetch selected user recognize my voice state. {state=%ld, userIdentifier=%{public}@, altDSID=%{mask. hash}@, error=%{public}@}",  buf,  0x34u);
      }
    }

    else
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
        id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudAltDSID]);
        *(_DWORD *)__int128 buf = 134218754;
        id v19 = a2;
        __int16 v20 = 2114;
        int v21 = v10;
        __int16 v22 = 2160;
        uint64_t v23 = 1752392040LL;
        __int16 v24 = 2112;
        __int16 v25 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Got selected user RMV state. {state=%ld, userIdentifier=%{public}@, altDSID=%{mask.hash}@}",  buf,  0x2Au);
      }

      uint64_t v12 = (dispatch_queue_s *)WeakRetained[1];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000942A4;
      block[3] = &unk_1003D1CD0;
      objc_copyWeak(v17, (id *)(a1 + 40));
      v17[1] = a2;
      id v16 = *(id *)(a1 + 32);
      dispatch_async(v12, block);

      objc_destroyWeak(v17);
    }
  }
}

void sub_1000942A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    if (v4)
    {
      if (v4 == 1) {
        [WeakRetained _presentBulletinIfNeeded];
      }
    }

    else
    {
      id v5 = (void *)WeakRetained[5];
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
      [v5 removeObjectForKey:v6];
    }
  }
}

void sub_1000945D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location, uint64_t a22, char a23)
{
}

void sub_100094610(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 focusedSceneHandle]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 isDefaultKioskAppScene];
}

void sub_10009466C(id *a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v7 = sub_100083B40();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    id v9 = v8;
    if (v5 || (a2 & 1) == 0)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        id v13 = a1[4];
        *(_DWORD *)__int128 buf = 138543874;
        id v19 = v13;
        __int16 v20 = 1024;
        int v21 = a2;
        __int16 v22 = 2114;
        id v23 = v5;
        _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "Failed to present bulletin for user. {userIdentifier=%{public}@, presentedSuccessfully=%d, error=%{public}@",  buf,  0x1Cu);
      }

      uint64_t v12 = (dispatch_queue_s *)WeakRetained[1];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100094860;
      block[3] = &unk_1003D0378;
      objc_copyWeak(&v17, a1 + 6);
      id v15 = a1[5];
      id v16 = a1[4];
      dispatch_async(v12, block);

      objc_destroyWeak(&v17);
    }

    else
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        id v10 = a1[4];
        *(_DWORD *)__int128 buf = 138543362;
        id v19 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Bulletin presented successfully for user. {userIdentifier=%{public}@}",  buf,  0xCu);
      }

      id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
      objc_msgSend(v11, "pbs_setRMVBulletinShownToUserWithIdentifier:", a1[4]);
    }
  }
}

void sub_100094860(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[5] setObject:*(void *)(a1 + 32) forKey:*(void *)(a1 + 40)];
  }
}

id sub_1000949D8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleRMVSettingChangedNotification];
}

  ;
}

void sub_100094C90( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100094CB0(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = sub_100083CA8();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v7)
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleIdentifier]);
      *(_DWORD *)__int128 buf = 136315394;
      uint64_t v12 = "-[PBOpenAppRestrictionTransaction _begin]_block_invoke";
      __int16 v13 = 2114;
      id v14 = v8;
      id v9 = "%s - App '%{public}@' is restricted from launch";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v9, buf, 0x16u);
    }
  }

  else if (v7)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleIdentifier]);
    *(_DWORD *)__int128 buf = 136315394;
    uint64_t v12 = "-[PBOpenAppRestrictionTransaction _begin]_block_invoke";
    __int16 v13 = 2114;
    id v14 = v8;
    id v9 = "%s - App '%{public}@' is allowed to launch";
    goto LABEL_6;
  }

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_100094E24;
  v10[3] = &unk_1003D05A8;
  void v10[4] = WeakRetained;
  void v10[5] = a2;
  dispatch_async(&_dispatch_main_q, v10);
}

id sub_100094E24(uint64_t a1)
{
  return [*(id *)(a1 + 32) satisfyMilestone:@"ValidateRestriction"];
}

void sub_100095188( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_1000951AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _stateDump]);

  return v2;
}

void sub_1000953C4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000954A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000955AC(_Unwind_Exception *a1)
{
}

id sub_1000955C0(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = sub_1001662FC((unint64_t)[v2 state]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    id v6 = *(void **)(v5 + 16);
  }
  else {
    id v6 = 0LL;
  }
  if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v9 = *(void *)(a1 + 32);
    id v10 = v6;
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  v9));
    int v14 = 138544130;
    uint64_t v15 = v8;
    __int16 v16 = 2114;
    id v17 = v4;
    __int16 v18 = 2114;
    uint64_t v19 = v7;
    __int16 v20 = 2114;
    int v21 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Invoking action handler {handle=%{public}@, state=%{public}@, descriptor=%{public}@, recognizer=%{public}@}",  (uint8_t *)&v14,  0x2Au);
  }

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[_PBSystemGestureActivationContext contextWithGestureRecognizer:type:]( _PBSystemGestureActivationContext,  "contextWithGestureRecognizer:type:",  v2,  [*(id *)(a1 + 48) type]));

  return v12;
}

void sub_1000957E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

id sub_1000957F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    id v3 = *(void **)(v2 + 16);
  }
  else {
    id v3 = 0LL;
  }
  if (os_log_type_enabled((os_log_t)v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    id v6 = v3;
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  v4));
    int v9 = 138543618;
    uint64_t v10 = v5;
    __int16 v11 = 2114;
    uint64_t v12 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Invoking deferred action handler {handle=%{public}@, source=%{public}@}",  (uint8_t *)&v9,  0x16u);
  }

  return (id)objc_claimAutoreleasedReturnValue( +[_PBSystemGestureActivationContext indirectActivationContext]( &OBJC_CLASS____PBSystemGestureActivationContext,  "indirectActivationContext"));
}

void sub_10009598C(_Unwind_Exception *a1)
{
}

id sub_1000959A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    id v3 = *(os_log_s **)(v2 + 16);
  }
  else {
    id v3 = 0LL;
  }
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138543362;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Invoking action handler for cancellation {handle=%{public}@}",  (uint8_t *)&v6,  0xCu);
  }

  return (id)objc_claimAutoreleasedReturnValue( +[_PBSystemGestureActivationContext cancellationContext]( &OBJC_CLASS____PBSystemGestureActivationContext,  "cancellationContext"));
}

void sub_100095D4C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state)
{
}

id sub_100095D68(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeHandle:*(void *)(a1 + 40) forSystemGestureRecipe:*(void *)(a1 + 48) withReason:*(void *)(a1 + 56)];
}

id sub_100095F14(unint64_t a1)
{
  if (a1 >= 3) {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PBSystemGestureHandleState(%lu)",  a1));
  }
  else {
    uint64_t v1 = *(&off_1003D4548 + a1);
  }
  return v1;
}

void sub_1000965A8( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_100096714(id a1)
{
  id v1 = -[PBHomeMediaAccessControlManager _init](objc_alloc(&OBJC_CLASS___PBHomeMediaAccessControlManager), "_init");
  uint64_t v2 = (void *)qword_100470820;
  qword_100470820 = (uint64_t)v1;
}

LABEL_50:
  __int128 v56 = TVCSHomeLog(v12);
  id v57 = (os_log_s *)objc_claimAutoreleasedReturnValue(v56);
  if (os_log_type_enabled(v57, OS_LOG_TYPE_DEBUG)) {
    sub_10027991C(v7 != 0LL, v57);
  }

  [v3 _setHkAccessControlEnabled:v7 != 0];
  self->_updatingAirPlaySettings = 0;
}

          sub_100216C24(v3);
          return;
        }
      }
    }

LABEL_48:
}
}

void sub_10009731C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = TVCSHomeLog();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = @"Failed to update";
    if (!v3) {
      int v6 = @"Successfully updated";
    }
    int v7 = *(unsigned __int8 *)(a1 + 32);
    int v9 = 138412802;
    uint64_t v10 = v6;
    __int16 v11 = 2112;
    if (v7) {
      uint64_t v8 = @"YES";
    }
    else {
      uint64_t v8 = @"NO";
    }
    uint64_t v12 = v8;
    __int16 v13 = 2112;
    id v14 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "AP: %@ media p2p enabled: %@ (error: %@)",  (uint8_t *)&v9,  0x20u);
  }
}

void sub_100097418(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = TVCSHomeLog();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = @"Failed to update";
    if (!v3) {
      int v6 = @"Successfully updated";
    }
    unint64_t v7 = *(void *)(a1 + 32);
    if (v7 > 2) {
      uint64_t v8 = 0LL;
    }
    else {
      uint64_t v8 = off_1003D4650[v7];
    }
    int v9 = 138412802;
    uint64_t v10 = v6;
    __int16 v11 = 2112;
    uint64_t v12 = v8;
    __int16 v13 = 2112;
    id v14 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "AP: %@ minimum user privilege: %@ (error: %@)",  (uint8_t *)&v9,  0x20u);
  }
}

void sub_100097518(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = TVCSHomeLog();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = @"Failed to update";
    if (!v2) {
      uint64_t v5 = @"Successfully updated";
    }
    int v6 = 138412546;
    unint64_t v7 = v5;
    __int16 v8 = 2112;
    int v9 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "AP: %@ password (error: %@)",  (uint8_t *)&v6,  0x16u);
  }
}

void sub_1000975E4(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = TVCSHomeLog();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = @"Failed to remove";
    if (!v2) {
      uint64_t v5 = @"Successfully removed";
    }
    int v6 = 138412546;
    unint64_t v7 = v5;
    __int16 v8 = 2112;
    int v9 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "AP: %@ password (error: %@)",  (uint8_t *)&v6,  0x16u);
  }
}

id sub_1000977BC(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100097854(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100470830;
  qword_100470830 = (uint64_t)v1;
}

void sub_100097918(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  int v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  __int16 v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  int v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v10 = NSStringFromClass(v9);
  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  18LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = *(void **)(v13 + 8);
  *(void *)(v13 + _Block_object_dispose(va, 8) = v12;
}

void sub_100097C80(_Unwind_Exception *a1)
{
}

void sub_100097CCC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    __int16 v8 = (void *)*((void *)WeakRetained + 2);
    *((void *)WeakRetained + 2) = 0LL;
  }

  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(uint64_t, uint64_t, id))(v9 + 16))(v9, a2, v5);
  }
}

void sub_100097D38(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc(&OBJC_CLASS___PBSDisplayManagerUpdateRequest);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 displayMode]);
  int v6 = -[PBSDisplayManagerUpdateRequest initWithDisplayMode:reason:]( v4,  "initWithDisplayMode:reason:",  v5,  @"Default BSR initial mode");

  uint64_t v24 = PBSDisplayManagerUpdateRequestPassthroughKey;
  __int16 v25 = &__kCFBooleanTrue;
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v25,  &v24,  1LL));
  -[PBSDisplayManagerUpdateRequest setUserInfo:](v6, "setUserInfo:", v7);

  -[PBSDisplayManagerUpdateRequest setAllowCoalescing:](v6, "setAllowCoalescing:", 0LL);
  __int16 v8 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472LL;
  v22[2] = sub_100097FC0;
  v22[3] = &unk_1003D4698;
  objc_copyWeak(&v23, (id *)(a1 + 48));
  v22[4] = *(void *)(a1 + 40);
  [v8 updateDisplayManagerWithRequest:v6 reply:v22];

  uint64_t v9 = objc_alloc(&OBJC_CLASS___PBBlockSystemOverlayUIProvider);
  id v17 = _NSConcreteStackBlock;
  uint64_t v18 = 3221225472LL;
  uint64_t v19 = sub_100098090;
  __int16 v20 = &unk_1003D2108;
  id v10 = v3;
  id v21 = v10;
  __int16 v11 = -[PBBlockSystemOverlayUIProvider initWithBlock:](v9, "initWithBlock:", &v17);
  uint64_t v12 = objc_alloc_init(&OBJC_CLASS___PBMutableSystemOverlayPresentationRequest);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "displayMode", v17, v18, v19, v20));
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 encodedString]);
  -[PBMutableSystemOverlayPresentationRequest setIdentifier:](v12, "setIdentifier:", v14);

  -[PBMutableSystemOverlayPresentationRequest setAnimated:](v12, "setAnimated:", 0LL);
  -[PBMutableSystemOverlayPresentationRequest setProvider:](v12, "setProvider:", v11);
  uint64_t v15 = *(void **)(*(void *)(a1 + 32) + 8LL);
  id v16 = -[PBMutableSystemOverlayPresentationRequest copy](v12, "copy");
  [v15 presentWithRequest:v16 completion:0];

  objc_destroyWeak(&v23);
}

void sub_100097F9C(_Unwind_Exception *a1)
{
}

void sub_100097FC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    int v6 = WeakRetained;
    if (WeakRetained)
    {
      [*((id *)WeakRetained + 2) stop];
      unint64_t v7 = (void *)v6[2];
      v6[2] = 0LL;
    }

    id v8 = sub_100082A9C();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100279A44((uint64_t)v4, v9);
    }

    uint64_t v10 = *(void *)(a1 + 32);
    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 fallbackDisplayMode]);
    (*(void (**)(uint64_t, void, void *))(v10 + 16))(v10, 0LL, v12);
  }
}

PBContentPresentingViewController *sub_100098090(uint64_t a1)
{
  return  -[PBContentPresentingViewController initWithContentViewController:supportsInterruption:]( objc_alloc(&OBJC_CLASS___PBContentPresentingViewController),  "initWithContentViewController:supportsInterruption:",  *(void *)(a1 + 32),  0LL);
}

void sub_1000980C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 displayMode]);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  v11[2] = sub_1000981D0;
  v11[3] = &unk_1003D46E8;
  uint64_t v14 = *(void *)(a1 + 40);
  id v8 = v7;
  id v12 = v8;
  id v13 = *(id *)(a1 + 32);
  objc_copyWeak(&v15, (id *)(a1 + 56));
  [v6 setDismissBlock:v11];
  (*(void (**)(void, id, uint64_t, uint64_t))(*(void *)(a1 + 48) + 16LL))( *(void *)(a1 + 48),  v6,  v9,  v10);
  objc_destroyWeak(&v15);
}

void sub_1000981B8(_Unwind_Exception *a1)
{
}

void sub_1000981D0(uint64_t a1, uint64_t a2)
{
  if (a2 == 2)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) lastObject]);
    LODWORD(v3) = [v3 isEqual:v4];

    if ((_DWORD)v3)
    {
      uint64_t v5 = *(void *)(a1 + 48);
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
      unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 fallbackDisplayMode]);
      (*(void (**)(uint64_t, void, void *))(v5 + 16))(v5, 0LL, v7);
    }
  }

  else
  {
    (*(void (**)(void, BOOL, void))(*(void *)(a1 + 48) + 16LL))( *(void *)(a1 + 48),  a2 == 0,  *(void *)(a1 + 32));
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained dismiss];
}

void sub_100098294(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained dismiss];
}

id sub_1000984D4(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_10009856C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100470840;
  qword_100470840 = (uint64_t)v1;
}

void sub_1000986F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_10009871C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updatePresentationUsingAssertionState:v3];
}

void sub_10009875C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  id v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  uint64_t v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v10 = NSStringFromClass(v9);
  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  22LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void **)(v13 + 16);
  *(void *)(v13 + 16) = v12;

  uint64_t v16 = objc_opt_self(&OBJC_CLASS___PBDisplayManager, v15);
  id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v17]);

  [v18 addStateObserver:*(void *)(a1 + 32)];
  id v19 = [v3 instanceForClass:objc_opt_class(PBPowerManager)];
  __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

  [v20 addObserver:*(void *)(a1 + 32)];
}

PBContentPresentingContainmentViewController *sub_100098B14(uint64_t a1)
{
  id v1 = off_1003CE3D0;
  if (*(void *)(a1 + 32) != 1LL) {
    id v1 = off_1003CE3D8;
  }
  id v2 = objc_alloc_init(*v1);
  id v3 = -[PBContentPresentingContainmentViewController initWithChildViewController:allowsInteraction:expectsEventForwarding:]( objc_alloc(&OBJC_CLASS___PBContentPresentingContainmentViewController),  "initWithChildViewController:allowsInteraction:expectsEventForwarding:",  v2,  1LL,  0LL);

  return v3;
}

id sub_100098D00(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

void sub_100099298( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1000992D0(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _failForTimeoutWithDescription:@"Provider didn't return view controller in time"];
  }

void sub_100099308(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  dispatch_assert_queue_V2(&_dispatch_main_q);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained isWaitingForMilestone:@"fetchViewControllerMilestone"])
  {
    [WeakRetained[1] invalidate];
    if (!v6 || v7)
    {
      [WeakRetained _failWithReason:@"fetchViewControllerFailed" description:0 precipitatingError:v7];
    }

    else
    {
      objc_storeStrong(WeakRetained + 3, a2);
      [WeakRetained satisfyMilestone:@"fetchViewControllerMilestone"];
    }
  }
}

void sub_100099B0C(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 predictedEndDate]);
  [v3 timeIntervalSinceNow];
  uint64_t v5 = llround(v4);

  if ((unint64_t)(v5 - 1) > 0x13)
  {
    id v9 = sub_1000F7744();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
      sub_100279AF8(v5, v10);
    }

    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) packageView]);
    [v11 setState:@"Start"];

    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) packageView]);
    id v8 = +[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%d", 20LL);
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) packageView]);
    [v6 setState:@"Start"];

    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) packageView]);
    id v8 = +[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%ld", v5);
  }

  id v12 = (void *)objc_claimAutoreleasedReturnValue(v8);
  [v7 setState:v12];
}

void sub_10009A190(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a2 applicationInfo]);
  if (v6)
  {
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 applicationInfo]);

    if (v7) {
      [*(id *)(a1 + 32) addObject:v5];
    }
  }
}

void sub_10009A3AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v5 applicationInfo]);
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 applicationInfo]);

    if (!v9)
    {
      uint64_t v10 = *(void **)(a1 + 32);
      __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v5 bundleIdentifier]);
      [v10 addObject:v11];
    }
  }
}

void sub_10009A4E4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = objc_claimAutoreleasedReturnValue([a2 applicationInfo]);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 applicationInfo]);

    if (v8) {
      [*(id *)(a1 + 32) addObject:v5];
    }
  }
}

void sub_10009A5D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:ScheduledSleepServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_10009A7C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSScheduledSleepServiceConfigureConnection();
  [v3 setInterruptionHandler:&stru_1003D47F8];
  [v3 setInvalidationHandler:&stru_1003D4818];
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
}

void sub_10009A820(id a1, BSServiceConnectionContext *a2)
{
  id v2 = a2;
  id v3 = sub_100083F00();
  double v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    uint64_t v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "ScheduledSleepService connection interrupted. {connection=%@}",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_10009A8C8(id a1, BSServiceConnectionContext *a2)
{
  id v2 = a2;
  id v3 = sub_100083F00();
  double v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    uint64_t v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "ScheduledSleepService connection invalidated. {connection=%@}",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_10009B6A8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v2 setAlpha:*(double *)(a1 + 40)];
}

uint64_t sub_10009B6E0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

int64_t sub_10009BC58(id a1, PBOverlayLayoutSuggestion *a2, PBOverlayLayoutSuggestion *a3)
{
  return -[PBOverlayLayoutSuggestion compare:](a2, "compare:", a3);
}

void sub_10009BCE8(uint64_t a1)
{
  id v1 = objc_msgSend(objc_alloc(*(Class *)(a1 + 32)), "initWithOffset:", 0.0, 0.0);
  id v2 = (void *)qword_100470850;
  qword_100470850 = (uint64_t)v1;
}

id sub_10009BFC0(uint64_t a1)
{
  return [*(id *)(a1 + 32) offset];
}

double sub_10009BFD8(uint64_t a1)
{
  return v1;
}

void sub_10009C538(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend( *(id *)(a1 + 32),  "insertObject:atIndex:",  v4,  objc_msgSend( v3,  "indexOfObject:inSortedRange:options:usingComparator:",  v4,  0,  objc_msgSend(v3, "count"),  1024,  &stru_1003D4858));
}

void sub_10009C6A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10009C6C8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10009C6D8(uint64_t a1)
{
}

void sub_10009C6F0(uint64_t a1, void *a2)
{
  id v4 = a2;
  [v4 magnitude];
  uint64_t v6 = v5;
  [v4 magnitude];
  if (v7 < *(double *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = v6;
  }
}

id sub_10009C890(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_10009C928(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) _init];
  id v2 = (void *)qword_100470860;
  qword_100470860 = (uint64_t)v1;
}

id sub_10009C954(void *a1)
{
  if (a1)
  {
    id v1 = sub_1000F6F4C();
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

void sub_10009CBE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10009CC04(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___PBEventFilterController);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBSExternalControlSystem sharedSystem](&OBJC_CLASS___PBSExternalControlSystem, "sharedSystem"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[PBEARCConfigurator sharedInstance](&OBJC_CLASS___PBEARCConfigurator, "sharedInstance"));
  double v7 = -[PBEventFilterController initWithExternalControlSystem:eARCConfigurator:]( v4,  "initWithExternalControlSystem:eARCConfigurator:",  v5,  v6);
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(v8 + 32);
  *(void *)(v8 + 32) = v7;

  id v10 = [v3 instanceForClass:objc_opt_class(PBSystemGestureManager)];
  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  uint64_t v12 = objc_claimAutoreleasedReturnValue([v11 addObserver:*(void *)(a1 + 32)]);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void **)(v13 + 56);
  *(void *)(v13 + 56) = v12;
}

id sub_10009CCE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateDumpBuilder]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 build]);

  return v3;
}

void sub_10009CF28( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

id sub_10009CF4C(unint64_t a1)
{
  if (a1 >= 3) {
    id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PBHIDInterfaceMode(%ld)",  a1));
  }
  else {
    id v1 = *(&off_1003D48F0 + a1);
  }
  return v1;
}

id sub_10009D4A4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 64LL);
  id v3 = a2;
  id v4 = [v2 countForObject:v3];
  id v5 = [v3 integerValue];

  id v6 = sub_100166350((uint64_t)v5);
  double v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@ = %lu", v7, v4));

  return v8;
}

id sub_10009D7B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeObject:*(void *)(a1 + 40)];
}

id sub_10009D7D0(uint64_t a1)
{
  return [*(id *)(a1 + 32) addObject:*(void *)(a1 + 40)];
}

void sub_10009D9E4(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___PBWhatsNewService);
  id v2 = (void *)qword_100470870;
  qword_100470870 = (uint64_t)v1;
}

void sub_10009DC00( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10009DC20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _presentWhatsNewDialog];
}

void sub_10009DF70( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10009DF98(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained _isHeadBoardAppFocused])
  {
    [WeakRetained _presentWhatsNewDialog];
  }

  else if (WeakRetained)
  {
    id v2 = sub_1000F7A14();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "What's New cannot be shown. User is not on home screen. Will retry.",  v4,  2u);
    }

    WeakRetained[9] = 1;
  }
}

void sub_10009E1F8(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (v7 && a2)
  {
    id v9 = objc_alloc(&OBJC_CLASS___PBBlockSystemOverlayUIProvider);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    _DWORD v21[2] = sub_10009E3E8;
    v21[3] = &unk_1003D2108;
    __int16 v22 = (os_log_s *)v7;
    id v10 = -[PBBlockSystemOverlayUIProvider initWithBlock:](v9, "initWithBlock:", v21);
    __int16 v11 = -[PBDialogContext initWithIdentifier:provider:]( objc_alloc(&OBJC_CLASS___PBDialogContext),  "initWithIdentifier:provider:",  0LL,  v10);
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void **)(v12 + 48);
    *(void *)(v12 + 4_Block_object_dispose((const void *)(v7 - 64), 8) = v11;

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
    uint64_t v15 = *(void *)(*(void *)(a1 + 32) + 48LL);
    id v23 = @"PBDialogOptionPresentForcedKey";
    uint64_t v24 = &__kCFBooleanTrue;
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v24,  &v23,  1LL));
    [v14 presentDialogWithContext:v15 options:v16 completion:0];

    id v17 = v22;
  }

  else
  {
    *(_BYTE *)(*(void *)(a1 + 32) + 10LL) = 0;
    id v18 = sub_1000F7A14();
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    id v17 = v19;
    if (v8)
    {
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100279C7C((uint64_t)v8, v17);
      }
    }

    else if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int16 v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "No WN", v20, 2u);
    }
  }
}

PBContentPresentingContainmentViewController *sub_10009E3E8(uint64_t a1)
{
  return  -[PBContentPresentingContainmentViewController initWithChildViewController:allowsInteraction:expectsEventForwarding:]( objc_alloc(&OBJC_CLASS___PBContentPresentingContainmentViewController),  "initWithChildViewController:allowsInteraction:expectsEventForwarding:",  *(void *)(a1 + 32),  1LL,  1LL);
}

void sub_10009E424(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 48))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
    [v3 dismissDialogWithContext:*(void *)(*(void *)(a1 + 32) + 48) options:0 completion:0];

    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 48);
    *(void *)(v4 + 4_Block_object_dispose((const void *)(v7 - 64), 8) = 0LL;

    uint64_t v1 = *(void *)(a1 + 32);
  }

  *(_BYTE *)(v1 + 10) = 0;
}

void sub_10009E674(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:PBSVolumeControlServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_10009E90C(uint64_t a1, void *a2)
{
  id v3 = a2;
  +[PBSVolumeControlService setupConfiguration:](&OBJC_CLASS___PBSVolumeControlService, "setupConfiguration:", v3);
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_10009E9C4;
  _OWORD v4[3] = &unk_1003D1048;
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 32);
  [v3 setInvalidationHandler:v4];
}

void sub_10009E9C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000848D8();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    int v8 = 138543874;
    uint64_t v9 = v6;
    __int16 v10 = 2048;
    uint64_t v11 = v7;
    __int16 v12 = 2112;
    id v13 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated. {client=%{public}@, service_ptr=%p, connection=%@}",  (uint8_t *)&v8,  0x20u);
  }
}

uint64_t sub_10009F4C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(unsigned __int8 *)(a1 + 40));
  }
  return result;
}

void sub_1000A0020(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a2 semanticContext]);
  id v6 = [v5 count];

  if (!v6) {
    [*(id *)(a1 + 32) addIndex:a3];
  }
}

void sub_1000A0898(id *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 semanticContext]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "tvs_stringForKey:", TVSCSchemaDotOrgNameKey));
  int v8 = (void *)objc_claimAutoreleasedReturnValue([a1[4] objectForKey:v7]);

  if (v8)
  {
    [a1[5] addIndex:a3];
  }

  else
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
    __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([a1[6] objectForKey:v9]);

    if (v10) {
      [a1[5] addIndex:a3];
    }
  }
}

LABEL_28:
  __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v15 numberForKey:@"UITemplateLaunchImage"]);
  self->_hasTemplateLaunchImage = [v36 BOOLValue];

  self->_legacyContentPartnerApp = objc_msgSend(v91, "tvs_isLegacyApp");
  uint64_t v37 = [v91 supportsAlternateIconNames];
  if (v37)
  {
    id v21 = (id)objc_claimAutoreleasedReturnValue([v91 alternateIconName]);
    id v38 = [v21 copy];
  }

  else
  {
    id v38 = 0LL;
  }

  objc_storeStrong((id *)&self->_alternateIconName, v38);
  if (v37)
  {
  }

  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([v15 stringForKey:@"CFBundleIconFile"]);
  __int128 v40 = (NSString *)[v39 copy];
  iconFile = self->_iconFile;
  self->_iconFile = v40;

  id v42 = (void *)objc_claimAutoreleasedReturnValue([v91 iconsDictionary]);
  __int128 v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "bs_safeStringForKey:", @"CFBundlePrimaryIcon"));
  __int128 v44 = (NSString *)[v43 copy];
  primaryIconName = self->_primaryIconName;
  self->_primaryIconName = v44;

  __int128 v46 = (NSString *)objc_claimAutoreleasedReturnValue([v91 localizedName]);
  localizedName = self->_localizedName;
  self->_localizedName = v46;

  uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v91 sourceAppIdentifier]);
  self->_installedByMagellan = [v48 isEqual:@"com.apple.Magellan"];

  uint64_t v88 = (void *)objc_claimAutoreleasedReturnValue([v7 arrayForKey:@"com.apple.developer.icloud-services"]);
  self->_usingCloudKit = [v88 containsObject:@"CloudKit"];
  self->_supportsSharePlay = [v7 BOOLForKey:@"com.apple.developer.group-session"];
  id v49 = (void *)objc_claimAutoreleasedReturnValue([v15 numberForKey:UIAppSupportsHDRKey]);
  v87 = v49;
  if (v49) {
    id v50 = [v49 BOOLValue];
  }
  else {
    id v50 = 1;
  }
  self->_supportsHDR = v50;
  if (sub_1001C9E00())
  {
    uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue(-[PBApplicationInfo bundleIdentifier](self, "bundleIdentifier"));
    id v52 = [(id)objc_opt_class(self) _defaultAppsSupportingExtendedAspectRatios];
    __int128 v53 = (void *)objc_claimAutoreleasedReturnValue(v52);
    __int128 v54 = [v53 containsObject:v51];

    if (v54)
    {
      self->_supportsExtendedAspectRatiosForContentPlayback = 1;
    }

    else
    {
      id v55 = (void *)objc_claimAutoreleasedReturnValue([v15 numberForKey:@"AVSupportsExtendedAspectRatiosForContentPlayback"]);
      __int128 v56 = v55;
      if (v55) {
        LOBYTE(v55) = [v55 BOOLValue];
      }
      self->_supportsExtendedAspectRatiosForContentPlayback = (char)v55;
    }

    id v57 = [(id)objc_opt_class(self) _appsPinnedToFullDisplay];
    id v58 = (void *)objc_claimAutoreleasedReturnValue(v57);
    self->_pinnedToFullDisplay = [v58 containsObject:v51];
  }

  else
  {
    self->_supportsExtendedAspectRatiosForContentPlayback = 0;
    self->_pinnedToFullDisplay = 0;
  }

  self->_hasModeSwitchEntitlement = [v7 BOOLForKey:@"com.apple.appletv.pbs.native-mode-switching"];
  __int128 v59 = [v7 BOOLForKey:@"com.apple.private.tvos.supports-live-icon"];
  if (v59) {
    uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue([v15 stringForKey:@"HBUILiveIconName"]);
  }
  else {
    uint64_t v60 = 0LL;
  }
  objc_storeStrong((id *)&self->_liveIconName, v60);
  if (v59) {

  }
  self->_viewService = [v7 BOOLForKey:@"com.apple.UIKit.vends-view-services"];
  __int128 v61 = (void *)objc_claimAutoreleasedReturnValue([v91 itemID]);
  if ((([v61 isEqual:&off_1003FDA28] & 1) != 0
     || ![v91 originalInstallType])
    && (([v91 profileValidated] & 1) != 0
     || [v91 isAdHocCodeSigned]))
  {
    __int128 v62 = [v91 UPPValidated] ^ 1;
  }

  else
  {
    __int128 v62 = 0;
  }

  self->_xcodeApp = v62;

  self->_cloudDemoted = FBSInstallTypeIsCloudDemoted([v91 installType]);
  id v63 = (void *)objc_claimAutoreleasedReturnValue([v15 numberForKey:@"SupportsSharedQueue"]);
  self->_supportsSharedQueue = [v63 BOOLValue];

  __int128 v64 = (void *)objc_claimAutoreleasedReturnValue([v15 numberForKey:@"PBSupportsActiveRouteNowPlaying"]);
  self->_supportsActiveRouteNowPlaying = [v64 BOOLValue];

  id v65 = (void *)objc_claimAutoreleasedReturnValue([v7 numberForKey:@"com.apple.appletv.pbs.now-playing-view-service"]);
  id v66 = [v65 BOOLValue];
  if (v66) {
    id v67 = (void *)objc_claimAutoreleasedReturnValue([v15 stringForKey:@"TVNowPlayingServiceViewControllerName"]);
  }
  else {
    id v67 = 0LL;
  }
  objc_storeStrong((id *)&self->_nowPlayingViewControllerClassName, v67);
  if (v66) {

  }
  if (![v7 BOOLForKey:@"com.apple.private.tvos.top-shelf.full-screen-image"]
    || (v68 = (void *)objc_claimAutoreleasedReturnValue([v15 stringForKey:@"TVTopShelfFullScreenImage"])) == 0)
  {
    uint64_t v69 = (void *)objc_claimAutoreleasedReturnValue([v15 dictionaryForKey:@"TVTopShelfImage"]);
    __int128 v70 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "bs_safeStringForKey:", @"TVTopShelfPrimaryImageWide"));
    __int128 v71 = v70;
    if (v70) {
      id v72 = v70;
    }
    else {
      id v72 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "bs_safeStringForKey:", @"TVTopShelfPrimaryImage"));
    }
    v68 = v72;
  }

  __int128 v73 = (NSString *)[v68 copy];
  topShelfStaticImageName = self->_topShelfStaticImageName;
  self->_topShelfStaticImageName = v73;

  self->_arcadeApplication = [v91 isArcadeApp];
  self->_hasAllowIconVisibilityChangesEntitlement = [v7 BOOLForKey:@"com.apple.springboard.allowIconVisibilityChanges"];
  id v76 = objc_opt_self(&OBJC_CLASS___NSString, v75);
  __int128 v77 = (void *)objc_claimAutoreleasedReturnValue(v76);
  BOOL v78 = (void *)objc_claimAutoreleasedReturnValue([v7 arrayForKey:@"com.apple.developer.user-management" withValuesOfClass:v77]);

  self->_hasRunAsCurrentUserEntitlement = sub_1000A14A4((uint64_t)self, v78);
  int64_t v79 = (void *)objc_claimAutoreleasedReturnValue([v91 managedPersonas]);
  uint64_t v80 = (void *)objc_claimAutoreleasedReturnValue([v79 firstObject]);
  __int128 v81 = (NSString *)[v80 copy];
  managedApplicationPersona = self->_managedApplicationPersona;
  self->_managedApplicationPersona = v81;

  self->_gameCenterEnabled = [v91 isGameCenterEnabled];
  self->_hasGetCurrentUserEntitlement = [v78 containsObject:@"get-current-user"];
  self->_archerLinked = -[PBApplicationInfo builtOnOrAfterSDKVersion:]( self,  "builtOnOrAfterSDKVersion:",  @"14.0");
  id v83 = (void *)objc_claimAutoreleasedReturnValue([v91 activityTypes]);
  self->_supportsBrowsingChannelGuideUserActivityType = [v83 containsObject:TVUserActivityTypeBrowsingChannelGuide];

  self->_launchableDuringSetup = [v15 BOOLForKey:@"SBIsLaunchableDuringSetup"];
  v84 = (void *)objc_claimAutoreleasedReturnValue([v91 genreID]);
  v85 = (NSNumber *)[v84 copy];
  genreID = self->_genreID;
  self->_genreID = v85;

  self->_licensedToDevice = [v91 hasMIDBasedSINF];
}

  return v13;
}

  id v5 = v88;
  swift_release(a2);
  __int16 v29 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v5);
  while (v29)
  {
    v87 = v5 & 0xC000000000000001LL;
    id v30 = 4LL;
    while (1)
    {
      id v4 = v30 - 4;
      __int128 v33 = v87
      uint64_t v34 = v33;
      if (__OFADD__(v4, 1LL)) {
        break;
      }
      v90 = v30 - 3;
      __int128 v36 = *(void *)&v33[OBJC_IVAR___PBApplication_bundleIdentifier];
      id v35 = *(void *)&v33[OBJC_IVAR___PBApplication_bundleIdentifier + 8];
      swift_bridgeObjectRetain(v35);
      uint64_t v37 = v34;
      id v38 = v91;
      __int128 v39 = swift_isUniquelyReferenced_nonNull_native(*v91);
      v93[0] = *v38;
      id v5 = v93[0];
      *id v38 = 0x8000000000000000LL;
      id v4 = sub_10022C7E0(v36, v35);
      uint64_t v41 = *(void *)(v5 + 16);
      id v42 = (v40 & 1) == 0;
      __int128 v43 = v41 + v42;
      if (__OFADD__(v41, v42)) {
        goto LABEL_49;
      }
      __int128 v44 = v40;
      if (*(void *)(v5 + 24) >= v43)
      {
        if ((v39 & 1) != 0)
        {
          id v5 = v93[0];
          if ((v40 & 1) != 0) {
            goto LABEL_31;
          }
        }

        else
        {
          sub_10022E358();
          id v5 = v93[0];
          if ((v44 & 1) != 0) {
            goto LABEL_31;
          }
        }
      }

      else
      {
        sub_10022D25C(v43, v39);
        id v45 = sub_10022C7E0(v36, v35);
        if ((v44 & 1) != (v46 & 1)) {
          goto LABEL_100;
        }
        id v4 = v45;
        id v5 = v93[0];
        if ((v44 & 1) != 0)
        {
LABEL_31:
          id v31 = *(void *)(v5 + 56);
          __int128 v32 = 8 * v4;

          *(void *)(v31 + v32) = v37;
          goto LABEL_32;
        }
      }

      *(void *)(v5 + 8 * (v4 >> 6) + 64) |= 1LL << v4;
      __int128 v47 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v4);
      *__int128 v47 = v36;
      v47[1] = v35;
      *(void *)(*(void *)(v5 + 56) + 8 * v4) = v37;
      uint64_t v48 = *(void *)(v5 + 16);
      uint64_t v16 = __OFADD__(v48, 1LL);
      id v49 = v48 + 1;
      if (v16) {
        goto LABEL_51;
      }
      *(void *)(v5 + 16) = v49;
      swift_bridgeObjectRetain(v35);
LABEL_32:
      id v4 = *v91;
      *id v91 = v5;

      swift_bridgeObjectRelease(v35);
      swift_bridgeObjectRelease(v4);
      ++v30;
      id v5 = v88;
      if (v90 == v29) {
        goto LABEL_57;
      }
    }

    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    if (v5 < 0) {
      id v50 = v5;
    }
    else {
      id v50 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v5);
    __int16 v29 = _CocoaArrayWrapper.endIndex.getter(v50);
  }

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

uint64_t sub_1000A14A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    else {
      a1 = (uint64_t)[v4 containsObject:@"runs-as-current-user-with-user-independent-keychain"];
    }
  }

  return a1;
}

void sub_1000A1600(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 80);
  *(void *)(v3 + 80) = v2;
}

void sub_1000A17EC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleIdentifier]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[LSApplicationProxy applicationProxyForIdentifier:]( &OBJC_CLASS___LSApplicationProxy,  "applicationProxyForIdentifier:",  v2));

  if (v3)
  {
    uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 localizedName]);
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;
  }
}

void sub_1000A18BC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleIdentifier]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[LSApplicationProxy applicationProxyForIdentifier:]( &OBJC_CLASS___LSApplicationProxy,  "applicationProxyForIdentifier:",  v2));
  if (v4)
  {
    uint64_t v5 = objc_opt_self(&OBJC_CLASS___NSArray, v3);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    uint64_t v8 = objc_opt_self(&OBJC_CLASS___NSString, v7);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    __int16 v10 = (void *)objc_claimAutoreleasedReturnValue( [v4 entitlementValueForKey:@"com.apple.developer.user-management" ofClass:v6 valuesOfClass:v9]);

    *(_BYTE *)(*(void *)(a1 + 32) + 29LL) = sub_1000A14A4(*(void *)(a1 + 32), v10);
  }
}

void sub_1000A19D0(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  @"com.apple.developer.icloud-services",  @"com.apple.UIKit.vends-view-services",  @"com.apple.appletv.pbs.now-playing-view-service",  @"com.apple.private.tvos.top-shelf.full-screen-image",  @"com.apple.private.tvos.supports-live-icon",  @"com.apple.developer.group-session",  @"com.apple.appletv.pbs.native-mode-switching",  @"com.apple.springboard.allowIconVisibilityChanges",  @"com.apple.developer.user-management",  0LL));
  id v2 = (void *)qword_100470880;
  qword_100470880 = v1;
}

void sub_1000A1AA8(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  @"SupportsSharedQueue",  @"PBSupportsActiveRouteNowPlaying",  @"TVNowPlayingServiceViewControllerName",  @"SBIconVisibilitySetByAppPreference",  @"disabled",  @"CFBundleIconFile",  @"SBIconVisibilityDefaultVisible",  @"SBIconVisibilityDefaultVisibleInstallTypes",  @"SBIsLaunchableDuringSetup",  @"TVTopShelfImage",  @"TVTopShelfFullScreenImage",  @"HBUILiveIconName",  @"UILaunchImages",  @"UITemplateLaunchImage",  UIAppSupportsHDRKey,  @"AVSupportsExtendedAspectRatiosForContentPlayback",  0LL));
  id v2 = (void *)qword_100470890;
  qword_100470890 = v1;
}

void sub_1000A1BFC(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _appsPinnedToFullDisplay]);
  -[NSMutableSet unionSet:](v2, "unionSet:", v3);

  v15[0] = @"com.apple.TVWatchList";
  v15[1] = @"com.apple.TVAirPlay";
  v15[2] = @"com.apple.TVPhotos";
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v15, 3LL));
  -[NSMutableSet addObjectsFromArray:](v2, "addObjectsFromArray:", v4);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v13 = @"AdditionalAppsSupportingExtendedAspectRatios";
  uint64_t v14 = &__NSArray0__struct;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v14,  &v13,  1LL));
  [v5 registerDefaults:v6];

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 arrayForKey:@"AdditionalAppsSupportingExtendedAspectRatios"]);
  id v9 = objc_msgSend(v8, "bs_objectsOfClass:", objc_opt_class(NSString));
  __int16 v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  -[NSMutableSet addObjectsFromArray:](v2, "addObjectsFromArray:", v10);
  id v11 = -[NSMutableSet copy](v2, "copy");
  __int16 v12 = (void *)qword_1004708A0;
  qword_1004708A0 = (uint64_t)v11;
}

void sub_1000A1DFC(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  id v13 = @"com.apple.facetime";
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v13, 1LL));
  -[NSMutableSet addObjectsFromArray:](v1, "addObjectsFromArray:", v2);

  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v11 = @"AdditionalAppsPinnedToFullDisplay";
  __int16 v12 = &__NSArray0__struct;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v12,  &v11,  1LL));
  [v3 registerDefaults:v4];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 arrayForKey:@"AdditionalAppsPinnedToFullDisplay"]);
  id v7 = objc_msgSend(v6, "bs_objectsOfClass:", objc_opt_class(NSString));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  -[NSMutableSet addObjectsFromArray:](v1, "addObjectsFromArray:", v8);
  id v9 = -[NSMutableSet copy](v1, "copy");
  __int16 v10 = (void *)qword_1004708B0;
  qword_1004708B0 = (uint64_t)v9;
}

void sub_1000A22E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([@"com.apple.appletv.pip." stringByAppendingString:a1]);
  AnalyticsSendEvent(v4, v3);
}

void sub_1000A232C(void *a1)
{
  id v1 = a1;
  id v2 = sub_1000837F8();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__int128 buf = 138543362;
    id v8 = v1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Send PiP started event, bundleID: %{public}@",  buf,  0xCu);
  }

  uint64_t v5 = @"bundleID";
  id v6 = v1;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v6,  &v5,  1LL));
  sub_1000A22E0((uint64_t)@"started", v4);
}

void sub_1000A2414(double a1)
{
  id v2 = sub_1000837F8();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__int128 buf = 134217984;
    double v9 = a1;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Send PiP ended event, duration: %f", buf, 0xCu);
  }

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a1, @"duration"));
  id v7 = v4;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v7,  &v6,  1LL));
  sub_1000A22E0((uint64_t)@"ended", v5);
}

void sub_1000A251C()
{
  id v0 = sub_1000837F8();
  id v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Send PiP interrupted event", v2, 2u);
  }

  sub_1000A22E0((uint64_t)@"interrupted", 0LL);
}

void sub_1000A2590(void *a1)
{
  id v1 = a1;
  id v2 = sub_1000837F8();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__int128 buf = 138543362;
    id v8 = v1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Send PiP exited event, source: %{public}@",  buf,  0xCu);
  }

  uint64_t v5 = @"source";
  id v6 = v1;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v6,  &v5,  1LL));
  sub_1000A22E0((uint64_t)@"exited", v4);
}

void sub_1000A2678(uint64_t a1)
{
  id v2 = sub_1000837F8();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__int128 buf = 134217984;
    uint64_t v9 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Send PiP moved quadrants event, quadrant: %ld",  buf,  0xCu);
  }

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a1, @"quadrant"));
  id v7 = v4;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v7,  &v6,  1LL));
  sub_1000A22E0((uint64_t)@"moved-quadrants", v5);
}

void sub_1000A2778(uint64_t a1, double a2)
{
  id v4 = sub_1000837F8();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__int128 buf = 134218240;
    uint64_t v17 = a1;
    __int16 v18 = 2048;
    double v19 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "Send PiP quadrant subsession ended event, quadrant: %ld, duration: %f",  buf,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](&OBJC_CLASS___UIApplication, "sharedApplication"));
  id v7 = [v6 userInterfaceLayoutDirection];

  switch(a1)
  {
    case 0LL:
      id v8 = @"top-trailing";
      uint64_t v9 = @"top-leading";
      goto LABEL_9;
    case 1LL:
      id v8 = @"top-leading";
      uint64_t v9 = @"top-trailing";
      goto LABEL_9;
    case 2LL:
      id v8 = @"bottom-leading";
      uint64_t v9 = @"bottom-trailing";
      goto LABEL_9;
    case 3LL:
      id v8 = @"bottom-trailing";
      uint64_t v9 = @"bottom-leading";
LABEL_9:
      if (v7 == (id)1) {
        id v8 = (__CFString *)v9;
      }
      __int16 v10 = v8;
      break;
    default:
      __int16 v10 = 0LL;
      break;
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"quadrant.%@", v10));
  uint64_t v14 = @"duration";
  __int16 v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a2));
  uint64_t v15 = v12;
  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v15,  &v14,  1LL));
  sub_1000A22E0((uint64_t)v11, v13);
}

void sub_1000A2960()
{
  id v0 = sub_1000837F8();
  id v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Send PiP swapped event", v2, 2u);
  }

  sub_1000A22E0((uint64_t)@"swapped", 0LL);
}

void sub_1000A29D4()
{
  id v0 = sub_1000837F8();
  id v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Send PiP swapped across apps event", v2, 2u);
  }

  sub_1000A22E0((uint64_t)@"swapped-across-apps", 0LL);
}

void sub_1000A2A48()
{
  id v0 = sub_1000837F8();
  id v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Send PiP expanded to fullscreen event", v2, 2u);
  }

  sub_1000A22E0((uint64_t)@"expanded", 0LL);
}

void sub_1000A2ABC()
{
  id v0 = sub_1000837F8();
  id v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Send PiP Play/Pause button pressed event", v2, 2u);
  }

  sub_1000A22E0((uint64_t)@"toggle-play-pause", 0LL);
}

void sub_1000A2B30(double a1)
{
  id v2 = sub_1000837F8();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__int128 buf = 134217984;
    double v9 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Send PiP editing ended event, duration: %f",  buf,  0xCu);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a1, @"duration"));
  id v7 = v4;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v7,  &v6,  1LL));
  sub_1000A22E0((uint64_t)@"editing-ended", v5);
}

void sub_1000A2C38()
{
  id v0 = sub_1000837F8();
  id v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_INFO,  "Send PiP host application backgrounded event",  v2,  2u);
  }

  sub_1000A22E0((uint64_t)@"host-app-backgrounded", 0LL);
}

void sub_1000A2CAC()
{
  id v0 = sub_1000837F8();
  id v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_INFO,  "Send simultaneous video started during PiP event",  v2,  2u);
  }

  sub_1000A22E0((uint64_t)@"simultaneous-video-started", 0LL);
}

void sub_1000A2D64(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___PBDependencyCoordinator);
  id v2 = (void *)qword_1004708C0;
  qword_1004708C0 = (uint64_t)v1;
}

id sub_1000A3814(uint64_t a1)
{
  return [*(id *)(a1 + 32) _activate];
}

id sub_1000A38C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleGameAppInfoControllerUpdate:*(void *)(a1 + 40)];
}

id sub_1000A3A60()
{
  if (qword_1004708D8 != -1) {
    dispatch_once(&qword_1004708D8, &stru_1003D4AB8);
  }
  return (id)qword_1004708D0;
}

BOOL sub_1000A469C(id a1, PBBluetoothDevice *a2)
{
  return (id)-[PBBluetoothDevice type](a2, "type") == (id)4;
}

void sub_1000A46BC(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v6 = sub_1000A3A60();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10027A16C(a1, (uint64_t)v5, v7);
    }
  }
}

void sub_1000A47B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.largeGameInstallMonitor", "");
  id v2 = (void *)qword_1004708D0;
  qword_1004708D0 = (uint64_t)v1;
}

BOOL sub_1000A47E8(id a1, PBSAppInfo *a2)
{
  id v2 = a2;
  else {
    LOBYTE(v3) = 0;
  }

  return v3;
}

void sub_1000A4880(id a1)
{
  os_log_t v1 = objc_alloc(&OBJC_CLASS___PBAppIconCache);
  id v2 = -[PBAppIconCache initWithName:iconSize:]( v1,  "initWithName:iconSize:",  @"AppSwitcherIcons",  *(double *)&v4[2],  *(double *)&v4[3]);
  unsigned int v3 = (void *)qword_1004708E0;
  qword_1004708E0 = (uint64_t)v2;
}

void sub_1000A48E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
}

BOOL sub_1000A4BBC(id a1, PBSAppInfo *a2)
{
  return -[PBSAppInfo isPlaceholder](a2, "isPlaceholder") ^ 1;
}

uint64_t sub_1000A4CC0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000A4CD0(uint64_t a1)
{
}

void sub_1000A4CE8(double *a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)a1 + 4) + 32) appInfos]);
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKey:*((void *)a1 + 5)]);

  id v4 = (void *)objc_opt_class(*((void *)a1 + 4));
  uint64_t v5 = *((void *)a1 + 5);
  double v6 = a1[7];
  [v3 lastModifiedDate];
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 _cacheKeyForBundleIdentifier:v5 scale:v6 lastModifiedDate:v7]);
  double v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)a1 + 4) + 40) objectForKey:*((void *)a1 + 5)]);
  __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 cacheKeyForScale:a1[7]]);
  unsigned int v11 = [v10 isEqual:v8];

  if (v11)
  {
    __int16 v12 = objc_alloc(&OBJC_CLASS___UIImage);
    id v13 = objc_alloc(&OBJC_CLASS___NSData);
    id v14 = [(id)objc_opt_class(*((void *)a1 + 4)) _pathForCacheKey:v8 cacheDirectory:*(void *)(*((void *)a1 + 4) + 16)];
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    uint64_t v16 = -[NSData initWithContentsOfFile:](v13, "initWithContentsOfFile:", v15);
    uint64_t v17 = -[UIImage initWithData:](v12, "initWithData:", v16);
    uint64_t v18 = *(void *)(*((void *)a1 + 6) + 8LL);
    double v19 = *(void **)(v18 + 40);
    *(void *)(v18 + 40) = v17;
  }

  else
  {
    id v20 = [(id)objc_opt_class(*((void *)a1 + 4)) _placeholderIconImageForScale:a1[7]];
    uint64_t v21 = objc_claimAutoreleasedReturnValue(v20);
    uint64_t v22 = *(void *)(*((void *)a1 + 6) + 8LL);
    uint64_t v15 = *(void **)(v22 + 40);
    *(void *)(v22 + 40) = v21;
  }
}

void sub_1000A52AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_workQueue_removeApplicationIconsForAppInfo:", *(void *)(a1 + 32));
}

void sub_1000A52E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_workQueue_createApplicationIcon:preferExisting:", *(void *)(a1 + 32), 0);
}

void sub_1000A5318(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_workQueue_createApplicationIcon:preferExisting:", *(void *)(a1 + 32), 0);
}

void sub_1000A5818( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37)
{
}

id sub_1000A5838(void *a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 40) objectForKey:a1[5]]);
  uint64_t v3 = *(void *)(a1[7] + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return [*(id *)(a1[4] + 40) setObject:a1[6] forKey:a1[5]];
}

void sub_1000A5964( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000A597C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 40LL);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) bundleIdentifier]);
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v2 objectForKey:v3]);
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8LL);
  double v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  double v7 = *(void **)(a1 + 40);
  id v8 = *(void **)(*(void *)(a1 + 32) + 40LL);
  double v9 = (void *)objc_claimAutoreleasedReturnValue([v7 bundleIdentifier]);
  [v8 removeObjectForKey:v9];
}

void sub_1000A5E3C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, id location)
{
}

void sub_1000A5E60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  id v7 = *(id *)(*(void *)(a1 + 32) + 24LL);
  id v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      unsigned int v11 = 0LL;
      do
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        __int16 v12 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)v11);
        id v13 = (void *)objc_opt_class(*(void *)(a1 + 32));
        objc_msgSend(v12, "doubleValue", (void)v18);
        double v15 = v14;
        [v6 lastModifiedDate];
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v13 _cacheKeyForBundleIdentifier:v5 scale:v15 lastModifiedDate:v16]);
        [*(id *)(a1 + 40) addObject:v17];

        unsigned int v11 = (char *)v11 + 1;
      }

      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }

    while (v9);
  }
}

void sub_1000A5FCC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_workQueue_createApplicationIcon:preferExisting:", *(void *)(a1 + 32), 1);
}

id sub_1000A6D9C(id a1, PBAppInfo *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBAppInfo applicationInfo](a2, "applicationInfo"));
}

id sub_1000A7520(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1000A75B8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_1004708F0;
  qword_1004708F0 = (uint64_t)v1;
}

void sub_1000A76BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 instanceForClass:objc_opt_class(PBSystemGestureManager)];
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  [*(id *)(a1 + 32) _updateSystemGestureWithManager:v5];
}

void sub_1000A784C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSystemGestureManager sharedInstance](&OBJC_CLASS___PBSystemGestureManager, "sharedInstance"));
  [WeakRetained _updateSystemGestureWithManager:v2];
}

void sub_1000A7C48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000A7C68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained executeShortcut];
}

id sub_1000A7EAC(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 8LL);
}

id sub_1000A81FC(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1000A8294(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100470900;
  qword_100470900 = (uint64_t)v1;
}

void sub_1000A8418(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  id v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  id v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v10 = NSStringFromClass(v9);
  unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  __int16 v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  13LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  double v14 = *(void **)(v13 + 16);
  *(void *)(v13 + 16) = v12;

  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v16 = objc_opt_self(&OBJC_CLASS___PBSystemGestureManager, v15);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v17]);

  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472LL;
  v22[2] = sub_1000A85A8;
  v22[3] = &unk_1003D1020;
  objc_copyWeak(&v23, &location);
  id v19 = [v18 newHandleForSystemGesture:52 actionHandler:v22];
  uint64_t v20 = *(void *)(a1 + 32);
  __int128 v21 = *(void **)(v20 + 40);
  *(void *)(v20 + 40) = v19;

  objc_destroyWeak(&v23);
  objc_destroyWeak(&location);
}

void sub_1000A8584( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000A85A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissActiveDialog];
}

id sub_1000A85D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _registerSystemAppSettingsObservers];
}

uint64_t sub_1000A8B00(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0LL);
  }
  return result;
}

uint64_t sub_1000A8C5C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000A9504( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000A9528(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained overlayController]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 activeSession]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 identifier]);

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 identifiersToContexts]);
    unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKey:v9]);

    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 provider]);
    char v13 = objc_opt_respondsToSelector(v12, "providerIdentifier");

    if ((v13 & 1) != 0)
    {
      double v14 = (void *)objc_claimAutoreleasedReturnValue([v11 provider]);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 providerIdentifier]);
    }

    else
    {
      uint64_t v15 = 0LL;
    }

    if ([v15 isEqualToString:@"com.apple.TVPhotos_TVPhotosTopShelfViewServiceViewController"]
      && (uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v11 coordinatedTransitionToken]),
          v16,
          v16))
    {
      [v11 setCoordinatedTransitionToken:0];
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472LL;
      id v17[2] = sub_1000A96D8;
      void v17[3] = &unk_1003D0110;
      id v18 = v4;
      [v6 dismissActiveDialogAnimated:0 completion:v17];
    }

    else
    {
      (*((void (**)(id, uint64_t))v4 + 2))(v4, 1LL);
    }
  }

  else
  {
    (*((void (**)(id, uint64_t))v4 + 2))(v4, 1LL);
  }
}

uint64_t sub_1000A96D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

PBContentPresentingViewController *sub_1000A9C60(uint64_t a1)
{
  id v1 = (uint64_t *)(a1 + 32);
  id v2 = [*(id *)(a1 + 32) modalPresentationStyle];
  if (v2 == (id)3 || v2 == 0LL)
  {
    id v4 = sub_100084158();
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT)) {
      sub_10027A304(v1, v5);
    }

    id v6 = 0LL;
  }

  else
  {
    id v6 = -[PBContentPresentingViewController initWithContentViewController:supportsInterruption:]( objc_alloc(&OBJC_CLASS___PBContentPresentingViewController),  "initWithContentViewController:supportsInterruption:",  *v1,  1LL);
  }

  return v6;
}

void sub_1000AA07C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000AA098(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100084950();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = 136315650;
    double v14 = "-[_PBDialogManagerViewServiceUIProvider prepareUIForSystemOverlayPresentationWithCompletion:]_block_invoke";
    __int16 v15 = 1024;
    BOOL v16 = v5 != 0LL;
    __int16 v17 = 2114;
    id v18 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%s - Requested dialog view service successfully?: %d, error: %{public}@",  (uint8_t *)&v13,  0x1Cu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v10 = WeakRetained;
  if (v5 && WeakRetained)
  {
    unsigned int v11 = -[PBViewServiceContentPresentingViewController initWithRemoteViewController:supportsInterruption:]( objc_alloc(&OBJC_CLASS___PBViewServiceContentPresentingViewController),  "initWithRemoteViewController:supportsInterruption:",  v5,  1LL);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  else
  {
    uint64_t v12 = *(void *)(a1 + 32);
    if (v12) {
      (*(void (**)(uint64_t, void, id))(v12 + 16))(v12, 0LL, v6);
    }
  }
}

id sub_1000AA704(uint64_t a1)
{
  return [*(id *)(a1 + 32) _addAcceptsEventObserverForViewController:*(void *)(a1 + 40)];
}

id sub_1000AA750(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 48);
  *(void *)(v2 + 4_Block_object_dispose(va, 8) = 0LL;

  [*(id *)(a1 + 32) _updateState];
  return [*(id *)(a1 + 32) setShouldForwardHIDEvents:0];
}

id sub_1000AB124(id a1, UIPress *a2)
{
  return (id)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  -[UIPress type](a2, "type")));
}

void sub_1000AB2D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setState:2];
  [WeakRetained _cancelTimer];
}

void sub_1000AB458(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService _sharedInstance](&OBJC_CLASS___PBDataReportingService, "_sharedInstance"));
  [v1 _reportFrequentDataNow];

  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService _sharedInstance](&OBJC_CLASS___PBDataReportingService, "_sharedInstance"));
  [v2 _reportDailyDataNow];
}

id sub_1000AB5B8(uint64_t a1)
{
  v3[0] = @"action";
  v3[1] = @"source";
  uint64_t v1 = *(void *)(a1 + 40);
  v4[0] = *(void *)(a1 + 32);
  v4[1] = v1;
  return (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  2LL));
}

uint64_t sub_1000AB7CC(uint64_t a1)
{
  if (!a1) {
    return -1LL;
  }
  uint64_t IntegerValue = IOHIDEventGetIntegerValue(a1, 0x10000LL);
  IOHIDEventGetIntegerValue(a1, 65537LL);
  return IntegerValue;
}

id sub_1000ABEE8(uint64_t a1)
{
  v3[0] = @"source";
  v3[1] = @"value";
  uint64_t v1 = *(void *)(a1 + 40);
  v4[0] = *(void *)(a1 + 32);
  v4[1] = v1;
  return (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  2LL));
}

void sub_1000ABFAC(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___PBDataReportingService);
  uint64_t v2 = (void *)qword_100470950;
  qword_100470950 = (uint64_t)v1;
}

void sub_1000AC12C(id a1)
{
  uint64_t v1 = objc_autoreleasePoolPush();
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  id v3 = CFRunLoopTimerCreate( kCFAllocatorDefault,  Current + 1.0e10,  1.0e10,  0LL,  0LL,  (CFRunLoopTimerCallBack)nullsub_20,  0LL);
  id v4 = CFRunLoopGetCurrent();
  CFRunLoopAddTimer(v4, v3, kCFRunLoopDefaultMode);
  while (1)
    CFRunLoopRunInMode(kCFRunLoopDefaultMode, 1.0e10, 0);
}

void sub_1000AC1F8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.DataReportingService", "");
  uint64_t v2 = (void *)qword_100470960;
  qword_100470960 = (uint64_t)v1;
}

void sub_1000AC47C(id a1, NSNotification *a2)
{
}

void sub_1000AC528(id a1)
{
  os_log_t v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService serviceLog](&OBJC_CLASS___PBDataReportingService, "serviceLog"));
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 134218240;
    uint64_t v8 = 0x408C200000000000LL;
    __int16 v9 = 2048;
    uint64_t v10 = 0x40F4370000000000LL;
    _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEFAULT,  "Scheduling daily trigger task to start in %f secs, repeat in %f secs.",  (uint8_t *)&v7,  0x16u);
  }

  uint64_t v2 = -[TVSBackgroundTask initWithType:interval:delay:async:]( objc_alloc(&OBJC_CLASS___TVSBackgroundTask),  "initWithType:interval:delay:async:",  0LL,  0LL,  82800.0,  900.0);
  -[TVSBackgroundTask setPerformBlock:](v2, "setPerformBlock:", &stru_1003D4D38);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[TVSBackgroundTaskManager sharedInstance](&OBJC_CLASS___TVSBackgroundTaskManager, "sharedInstance"));
  [v3 registerBackgroundTask:v2];

  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService serviceLog](&OBJC_CLASS___PBDataReportingService, "serviceLog"));
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 134218240;
    uint64_t v8 = 0x408C200000000000LL;
    __int16 v9 = 2048;
    uint64_t v10 = 0x40C5180000000000LL;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Scheduling frequent trigger task to start in %f secs, repeat in %f secs.",  (uint8_t *)&v7,  0x16u);
  }

  id v5 = -[TVSBackgroundTask initWithType:interval:delay:async:]( objc_alloc(&OBJC_CLASS___TVSBackgroundTask),  "initWithType:interval:delay:async:",  0LL,  0LL,  10800.0,  900.0);
  -[TVSBackgroundTask setPerformBlock:](v5, "setPerformBlock:", &stru_1003D4D78);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[TVSBackgroundTaskManager sharedInstance](&OBJC_CLASS___TVSBackgroundTaskManager, "sharedInstance"));
  [v6 registerBackgroundTask:v5];
}

void sub_1000AC71C(id a1)
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService _sharedInstance](&OBJC_CLASS___PBDataReportingService, "_sharedInstance"));
  uint64_t v2 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v1 serialQueue]);
  dispatch_async(v2, &stru_1003D4D58);
}

void sub_1000AC768(id a1)
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService _sharedInstance](&OBJC_CLASS___PBDataReportingService, "_sharedInstance"));
  [v1 _reportDailyDataNow];
}

void sub_1000AC79C(id a1)
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService _sharedInstance](&OBJC_CLASS___PBDataReportingService, "_sharedInstance"));
  uint64_t v2 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v1 serialQueue]);
  dispatch_async(v2, &stru_1003D4D98);
}

void sub_1000AC7E8(id a1)
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService _sharedInstance](&OBJC_CLASS___PBDataReportingService, "_sharedInstance"));
  [v1 _reportFrequentDataNow];
}

void sub_1000AC910(id a1)
{
  os_log_t v1 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService serviceLog](&OBJC_CLASS___PBDataReportingService, "serviceLog"));
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Starting diagnostic logs kickoff.", buf, 2u);
  }

  uint64_t v2 = (void *)objc_opt_new(&OBJC_CLASS___OSASubmissionClient);
  [v2 submitWithOptions:0 resultsCallback:0];

  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService serviceLog](&OBJC_CLASS___PBDataReportingService, "serviceLog"));
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Completed diagnostic logs kickoff.", v4, 2u);
  }
}

void sub_1000AD1E8(id a1, NSDictionary *a2)
{
}

void sub_1000AD278(id a1)
{
  os_log_t v1 = (void *)qword_100470980;
  qword_100470980 = (uint64_t)@"DisplayModeBinding";
}

void sub_1000AD340(id a1, PBDataReportingService *a2)
{
}

void sub_1000AD3F4(id a1)
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v1 UUIDString]);
  id v3 = (void *)qword_100470988;
  qword_100470988 = v2;
}

void sub_1000AEE40(id a1, NSData *a2, NSURLResponse *a3, NSError *a4)
{
  id v5 = a3;
  id v6 = a4;
  int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService serviceLog](&OBJC_CLASS___PBDataReportingService, "serviceLog"));
  uint64_t v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10027A88C(v5, (uint64_t)v6, v8);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v9 = (void *)objc_claimAutoreleasedReturnValue(-[NSURLResponse URL](v5, "URL"));
    int v10 = 138412290;
    unsigned int v11 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Succeeded: Figaro reporting request: %@",  (uint8_t *)&v10,  0xCu);
  }
}

id sub_1000AF228(uint64_t a1)
{
  v4[1] = @"value";
  v5[0] = @"paireddevice";
  v4[0] = @"type";
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) totalDeviceCount]));
  v5[1] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return v2;
}

id sub_1000AF2E8(uint64_t a1)
{
  v4[1] = @"value";
  v5[0] = @"genericremote";
  v4[0] = @"type";
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) genericDeviceCount]));
  v5[1] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return v2;
}

id sub_1000AF3A8(uint64_t a1)
{
  v4[1] = @"value";
  v5[0] = @"siriremote";
  v4[0] = @"type";
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) remoteCount]));
  v5[1] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return v2;
}

id sub_1000AF468(uint64_t a1)
{
  v4[1] = @"value";
  v5[0] = @"keyboard";
  v4[0] = @"type";
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) keyboardCount]));
  v5[1] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return v2;
}

id sub_1000AF528(uint64_t a1)
{
  v4[1] = @"value";
  v5[0] = @"audiodevice";
  v4[0] = @"type";
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) audioDeviceCount]));
  v5[1] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return v2;
}

id sub_1000AF5E8(uint64_t a1)
{
  v4[1] = @"value";
  v5[0] = @"gamecontroller";
  v4[0] = @"type";
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) gameControllerCount]));
  v5[1] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return v2;
}

id sub_1000AF6A8(uint64_t a1)
{
  v4[1] = @"value";
  v5[0] = @"inertialsensortime";
  v4[0] = @"action";
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  v5[1] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return v2;
}

id sub_1000AF760(uint64_t a1)
{
  v4[1] = @"value";
  v5[0] = @"audiostreamtime";
  v4[0] = @"action";
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  v5[1] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return v2;
}

id sub_1000AF8C8(uint64_t a1)
{
  id v1 = [(id)objc_opt_class(*(void *)(a1 + 32)) _userAppsMetricsDictionary];
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

BOOL sub_1000AFED0(id a1, PBSAppInfo *a2)
{
  uint64_t v2 = a2;
  BOOL v3 = -[PBSAppInfo isEnabled](v2, "isEnabled")
    && (-[PBSAppInfo isHidden](v2, "isHidden") & 1) == 0
    && (-[PBSAppInfo isPlaceholder](v2, "isPlaceholder") & 1) == 0
    && -[PBSAppInfo applicationType](v2, "applicationType") == (id)2;

  return v3;
}

void sub_1000AFF30(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v7 = 0LL;
  id v4 = -[LSApplicationRecord initWithBundleIdentifier:allowPlaceholder:error:]( objc_alloc(&OBJC_CLASS___LSApplicationRecord),  "initWithBundleIdentifier:allowPlaceholder:error:",  v3,  0LL,  &v7);
  id v5 = v7;
  if (v4)
  {
    [*(id *)(a1 + 32) addObject:v4];
  }

  else
  {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService serviceLog](&OBJC_CLASS___PBDataReportingService, "serviceLog"));
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10027A924();
    }
  }
}

uint64_t sub_1000AFFEC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  id v8 = [(id)objc_opt_class(v5) _totalDiskUsageInBytesWithLSApplicationRecord:v7];

  id v9 = [(id)objc_opt_class(*(void *)(a1 + 32)) _totalDiskUsageInBytesWithLSApplicationRecord:v6];
  if (v8 >= v9) {
    uint64_t v10 = 0LL;
  }
  else {
    uint64_t v10 = -1LL;
  }
  if (v8 > v9) {
    return 1LL;
  }
  else {
    return v10;
  }
}

BOOL sub_1000B0064(id a1, LSApplicationRecord *a2)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](a2, "iTunesMetadata"));
  BOOL v3 = [v2 genreIdentifier] == (id)6014;

  return v3;
}

id sub_1000B03E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  objc_msgSend( (id)objc_opt_class(*(void *)(a1 + 32)),  "_roundDiskUsageInBytesToMB:",  objc_msgSend(*(id *)(a1 + 32), "_totalDiskUsageInBytesWithLSApplicationRecord:", a2)));
  return (id)objc_claimAutoreleasedReturnValue(v2);
}

id sub_1000B0928(uint64_t a1)
{
  v4[0] = @"button";
  v4[1] = @"source";
  v5[0] = @"allpercentage";
  v5[1] = @"siriremote";
  void v4[2] = @"value";
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  void v5[2] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  3LL));

  return v2;
}

id sub_1000B09F4(uint64_t a1)
{
  v4[0] = @"button";
  v4[1] = @"source";
  v5[0] = @"allpercentage";
  v5[1] = @"irremote";
  void v4[2] = @"value";
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  void v5[2] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  3LL));

  return v2;
}

id sub_1000B0AC0(uint64_t a1)
{
  v4[0] = @"button";
  v4[1] = @"source";
  v5[0] = @"allpercentage";
  v5[1] = @"cec";
  void v4[2] = @"value";
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  void v5[2] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  3LL));

  return v2;
}

id sub_1000B0B8C(uint64_t a1)
{
  v4[0] = @"button";
  v4[1] = @"source";
  v5[0] = @"allpercentage";
  v5[1] = @"keyboard";
  void v4[2] = @"value";
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  void v5[2] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  3LL));

  return v2;
}

id sub_1000B0C58(uint64_t a1)
{
  v4[0] = @"button";
  v4[1] = @"source";
  v5[0] = @"allpercentage";
  v5[1] = @"gamecontroller";
  void v4[2] = @"value";
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  void v5[2] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  3LL));

  return v2;
}

id sub_1000B0D24(uint64_t a1)
{
  v4[0] = @"button";
  v4[1] = @"source";
  v5[0] = @"allpercentage";
  v5[1] = @"remoteapp";
  void v4[2] = @"value";
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  void v5[2] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  3LL));

  return v2;
}

id sub_1000B0DF0(uint64_t a1)
{
  v4[0] = @"button";
  v4[1] = @"source";
  v5[0] = @"all";
  v5[1] = @"siriremote";
  void v4[2] = @"value";
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  void v5[2] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  3LL));

  return v2;
}

id sub_1000B0EBC(uint64_t a1)
{
  v4[0] = @"button";
  v4[1] = @"source";
  v5[0] = @"home";
  v5[1] = @"siriremote";
  void v4[2] = @"value";
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 32)));
  void v5[2] = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  3LL));

  return v2;
}

void sub_1000B1054(id a1, id a2, id a3, BOOL *a4)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_1000B10EC;
  void v7[3] = &unk_1003D4C58;
  id v8 = a2;
  id v9 = a3;
  id v5 = v9;
  id v6 = v8;
  AnalyticsSendEventLazy(@"com.apple.appletv.remote.button.presscount", v7);
}

id sub_1000B10EC(uint64_t a1)
{
  v3[0] = @"button";
  v3[1] = @"count";
  uint64_t v1 = *(void *)(a1 + 40);
  v4[0] = *(void *)(a1 + 32);
  v4[1] = v1;
  return (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  2LL));
}

NSDictionary *__cdecl sub_1000B14FC(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[TVPAudioVideoSettings sharedInstance](&OBJC_CLASS___TVPAudioVideoSettings, "sharedInstance"));
  id v2 = [v1 audioOutputFormat];
  uint64_t v3 = [v1 highQualityAudioEnabled];
  v8[0] = @"outputFormat";
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v2));
  v8[1] = @"quality";
  v9[0] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v3));
  v9[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v9,  v8,  2LL));

  return (NSDictionary *)v6;
}

id sub_1000B1668(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[CADisplay mainDisplay](&OBJC_CLASS___CADisplay, "mainDisplay"));
  [v3 nativeSize];
  double v5 = v4;
  double v7 = v6;

  uint64_t v8 = PBSCalculateAspectRatio((unint64_t)v5, (unint64_t)v7);
  v19[0] = @"persistentDisplayMode";
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [*(id *)(a1 + 32) persistentDisplayModeValue]));
  v20[0] = v9;
  v19[1] = @"persistentDisplayModeString";
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) persistentDisplayModeString]);
  v20[1] = v10;
  v19[2] = @"matchDynamicRange";
  unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v2 reportingValueForMatchDynamicRange]));
  v20[2] = v11;
  v19[3] = @"matchFrameRate";
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v2 reportingValueForMatchFrameRate]));
  v20[3] = v12;
  void v19[4] = @"discreteMediaRefreshRateMode";
  int v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v2 reportingValueForUseDiscreteMediaRefreshRate]));
  void v20[4] = v13;
  v19[5] = @"userSelectedDisplayModeAspectRatio";
  double v14 = (void *)objc_claimAutoreleasedReturnValue([v2 userSelectedDisplayMode]);
  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v14 aspectRatio]));
  v20[5] = v15;
  v19[6] = @"nativeDisplayAspectRatio";
  BOOL v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v8));
  v20[6] = v16;
  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v20,  v19,  7LL));

  return v17;
}

NSDictionary *__cdecl sub_1000B18DC(id a1)
{
  v10[0] = @"sleepTimeout";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  [v1 sleepTimeoutInSeconds];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", (uint64_t)v2));
  v11[0] = v3;
  v10[1] = @"appearanceStyle";
  double v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBSystemAppearanceManager sharedInstance](&OBJC_CLASS___PBSystemAppearanceManager, "sharedInstance"));
  double v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v4 reportingValueForCurrentSystemAppearance]));
  v11[1] = v5;
  _DWORD v10[2] = @"tvButtonBehavior";
  double v6 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
  double v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  objc_msgSend(v6, "pbs_watchListButtonBehaviorEnabled")));
  v11[2] = v7;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v11,  v10,  3LL));

  return (NSDictionary *)v8;
}

id sub_1000B1CF0(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

uint64_t sub_1000B1DD0(uint64_t a1)
{
  double v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[PBDataReportingService serviceLog](&OBJC_CLASS___PBDataReportingService, "serviceLog"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)double v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Caching CoreControl usage on willSleep.",  v4,  2u);
  }

  [*(id *)(a1 + 32) _cacheCoreControlUsageNow];
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000B2244(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_1000B22C8(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) _init];
  double v2 = (void *)qword_100470998;
  qword_100470998 = (uint64_t)v1;
}

void sub_1000B2474( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1000B24AC(uint64_t a1, void *a2)
{
  double v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unsigned int v5 = [v3 isSystemGestureCancellation];

  if (v5)
  {
  }

  else if ([WeakRetained _shouldPresentAppSwitcherForGestureActivation])
  {
    [WeakRetained presentAppSwitcherWithFocusedBundleIdentifier:0 completion:0];
  }

  else
  {
    id v6 = sub_1000F68BC();
    double v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Presentation disabled for gesture activation",  v8,  2u);
    }
  }
}

void sub_1000B2584(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissAppSwitcherToBundleIdentifier:0 completion:0];
}

void sub_1000B2C38(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = *(void **)(a1 + 32);
  id v7 = a2;
  [v6 begin];
  uint64_t v8 = *(void **)(a1 + 40);
  double v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  BOOL v16 = sub_1000B2D58;
  __int16 v17 = &unk_1003D5358;
  id v9 = v5;
  id v18 = v9;
  id v19 = *(id *)(a1 + 48);
  [v8 transitionToSwitcherWithCompletion:&v14];
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "viewIfLoaded", v14, v15, v16, v17));

  unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue([v10 window]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 windowScene]);

  if (v12)
  {
    int v13 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](&OBJC_CLASS___UIApplication, "sharedApplication"));
    [v13 _cancelAllEventsOfType:8 onEventRoutingScene:v12];
  }
}

uint64_t sub_1000B2D58(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  }
  return result;
}

void sub_1000B2F98(_Unwind_Exception *a1)
{
}

void sub_1000B2FBC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dataSource]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_1000B30C8;
  void v10[3] = &unk_1003D53A8;
  uint64_t v8 = *(void *)(a1 + 40);
  id v11 = *(id *)(a1 + 32);
  objc_copyWeak(&v14, (id *)(a1 + 56));
  id v9 = v6;
  id v12 = v9;
  id v13 = *(id *)(a1 + 48);
  [v7 handleLaunchRequestForItemWithIdentifier:v8 completion:v10];

  objc_destroyWeak(&v14);
}

void sub_1000B30B4(_Unwind_Exception *a1)
{
}

void sub_1000B30C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  [*(id *)(a1 + 32) invalidateSceneLayoutElements];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    id v9 = (void *)WeakRetained[3];
    WeakRetained[3] = 0LL;

    uint64_t v10 = (void *)*((void *)v8 + 4);
    *((void *)v8 + 4) = 0LL;

    *((_BYTE *)v8 + _Block_object_dispose(va, 8) = 0;
    [*((id *)v8 + 5) acquire];
    [*((id *)v8 + 6) relinquish];
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 currentApplicationSceneHandle]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 sceneIfExists]);

  if (([v5 isValid] & 1) == 0 && !v13)
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
    uint64_t v17 = PBAppLaunchOptionLaunchWithoutAnimation;
    id v18 = &__kCFBooleanTrue;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v18,  &v17,  1LL));
    [v14 openKioskApplicationWithReason:@"App died" options:v15 completion:0];
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  uint64_t v16 = *(void *)(a1 + 48);
  if (v16) {
    (*(void (**)(uint64_t, id, id))(v16 + 16))(v16, v5, v6);
  }
}

void sub_1000B3930(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000B3EA8;
  block[3] = &unk_1003D1718;
  void block[4] = a2;
  double v4 = @"Lockdown";
  uint64_t v5 = 0LL;
  id v2 = a2;
  dispatch_async(&_dispatch_main_q, block);
}

void sub_1000B39B0(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000B3FB4;
  block[3] = &unk_1003CFF08;
  void block[4] = a2;
  id v2 = a2;
  dispatch_async(&_dispatch_main_q, block);
}

void sub_1000B3A1C(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000B407C;
  block[3] = &unk_1003CFF08;
  void block[4] = a2;
  id v2 = a2;
  dispatch_async(&_dispatch_main_q, block);
}

void sub_1000B3A88(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000B40F4;
  block[3] = &unk_1003CFF08;
  void block[4] = a2;
  id v2 = a2;
  dispatch_async(&_dispatch_main_q, block);
}

uint64_t sub_1000B3E24(uint64_t result)
{
  if (result) {
    return *(void *)(result + 24);
  }
  return result;
}

void sub_1000B3E30(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 24), a2);
  }
}

void sub_1000B3EA8(uint64_t a1)
{
  id v2 = _os_activity_create( (void *)&_mh_execute_header,  "languageChangeObserver/languageDidChange",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v2, &v6);

  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    double v4 = *(os_log_s **)(v3 + 24);
  }
  else {
    double v4 = 0LL;
  }
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%{public}@ changed the language", buf, 0xCu);
  }

  [*(id *)(a1 + 32) languageDidChangeWithSource:*(void *)(a1 + 48)];
  os_activity_scope_leave(&v6);
}

void sub_1000B3F98( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000B3FB4(uint64_t a1)
{
  id v2 = _os_activity_create( (void *)&_mh_execute_header,  "languageChangeObserver/languageDidChange",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v2, &state);

  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    double v4 = *(os_log_s **)(v3 + 24);
  }
  else {
    double v4 = 0LL;
  }
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Buddy is ready for language change", v5, 2u);
  }

  [*(id *)(a1 + 32) languageDidChangeWithSource:1];
  os_activity_scope_leave(&state);
}

void sub_1000B4068( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1000B407C(uint64_t a1)
{
  id v2 = _os_activity_create( (void *)&_mh_execute_header,  "languageChangeObserver/localeDidChange",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v2, &v3);

  [*(id *)(a1 + 32) localeDidChange];
  os_activity_scope_leave(&v3);
}

void sub_1000B40E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000B40F4(uint64_t a1)
{
  id v2 = _os_activity_create( (void *)&_mh_execute_header,  "languageChangeObserver/regionWillChange",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v2, &v3);

  [*(id *)(a1 + 32) regionWillChange];
  os_activity_scope_leave(&v3);
}

void sub_1000B4158( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

id sub_1000B41D8(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1000B4270(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1004709A8;
  qword_1004709A8 = (uint64_t)v1;
}

void sub_1000B44C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_1000B44E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateDump]);

  return v2;
}

id sub_1000B4630(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) removeGestureRecognizer:a2];
}

id sub_1000B464C(void *a1)
{
  if (a1)
  {
    id v1 = sub_1000841D0();
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

void sub_1000B48B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000B4AC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([v3 allowedPressTypes]);
  unsigned int v5 = [v4 containsObject:*(void *)(a1 + 32)];

  if (v5)
  {
    objc_msgSend(v3, "pb_cancel");
    id v6 = sub_1000B464C(*(void **)(a1 + 40));
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 48);
      id v9 = sub_100166350(*(void *)(a1 + 56));
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      id v11 = (void *)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  v3));
      int v12 = 138543874;
      uint64_t v13 = v8;
      __int16 v14 = 2114;
      uint64_t v15 = v10;
      __int16 v16 = 2114;
      uint64_t v17 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Cancelling recognizer due to %{public}@ {pressType=%{public}@, recognizer=%{public}@}",  (uint8_t *)&v12,  0x20u);
    }
  }
}

void sub_1000B4E5C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000B4E7C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = (void *)*((void *)WeakRetained + 7);
    *((void *)WeakRetained + 7) = 0LL;
  }

  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v7, a2);
  }
}

void sub_1000B5E2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

id sub_1000B5F30(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _systemGestureRecipeForSystemGestureType:a2]);

  return v4;
}

void sub_1000B63C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1000B6404(id a1, UIGestureRecognizer *a2)
{
}

id sub_1000B656C(uint64_t a1, void *a2)
{
  return [a2 systemGestureManager:*(void *)(a1 + 32) didEnableGestureRecognizerWithAllowedPressTypes:*(void *)(a1 + 40)];
}

id sub_1000B6604(uint64_t a1, void *a2)
{
  return [a2 systemGestureManager:*(void *)(a1 + 32) didDisableGestureRecognizerWithAllowedPressTypes:*(void *)(a1 + 40)];
}

void sub_1000B6748(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

BOOL sub_1000B6754(_DWORD *a1, unint64_t a2)
{
  if ((*a1 & 0x80000000) != 0) {
    return 0LL;
  }
  unint64_t v2 = a1[1];
  if (v2 > 0x1B)
  {
    BOOL v3 = v2 >= a2;
    BOOL v4 = v2 == a2;
  }

  else
  {
    BOOL v3 = 1;
    BOOL v4 = 0;
  }

  return v4 || !v3;
}

id sub_1000B6778(void *a1, void *a2)
{
  id v3 = a1;
  if (qword_1004709C0 != -1) {
    dispatch_once(&qword_1004709C0, &stru_1003D5518);
  }
  id v10 = 0LL;
  id v4 = (id)qword_1004709B8;
  id v5 = [v4 authenticateAuditToken:v3 error:&v10];
  id v6 = v10;

  if ((v5 & 1) == 0)
  {
    id v7 = sub_100084428();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10027B188(v3, (uint64_t)v6, v8);
    }
  }

  if (a2) {
    *a2 = v6;
  }

  return v5;
}

void sub_1000B6860(int a1)
{
  unint64_t v2 = (char *)calloc(0x1CuLL, 1uLL);
  if (v2)
  {
    id v3 = (mach_msg_header_t *)v2;
    *(void *)unint64_t v2 = 0x1C00000012LL;
    *((_DWORD *)v2 + 2) = a1;
    *((_DWORD *)v2 + 3) = 0;
    *(void *)(v2 + 20) = 3LL;
    if (mach_msg((mach_msg_header_t *)v2, 1, 0x1Cu, 0, 0, 0, 0)) {
      mach_msg_destroy(v3);
    }
    free(v3);
  }

id sub_1000B68DC(uint64_t a1)
{
  id v1 = CFDataCreate(0LL, (const UInt8 *)(a1 + 28), *(unsigned int *)(a1 + 4) - 28LL);
  if (!v1) {
    goto LABEL_5;
  }
  unint64_t v2 = v1;
  id v3 = (void *)CFPropertyListCreateWithData(kCFAllocatorDefault, v1, 0LL, 0LL, 0LL);
  CFRelease(v2);
  if (v3)
  {
    CFTypeID v4 = CFGetTypeID(v3);
    if (v4 != CFDictionaryGetTypeID())
    {
      CFRelease(v3);
LABEL_5:
      id v3 = 0LL;
    }
  }

  return v3;
}

uint64_t sub_1000B696C(unsigned int a1)
{
  return (a1 >> 5) & 1;
}

unint64_t sub_1000B6974(int a1, char a2)
{
  return ((unint64_t)a1 >> (a2 + 16)) & 1;
}

id sub_1000B6988(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeNumberForKey:", kCFUserNotificationTokenKey));
  id v2 = [v1 intValue];

  return v2;
}

double sub_1000B69C8(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeNumberForKey:", kCFUserNotificationTimeoutKey));
  double v2 = (double)(int)[v1 intValue];

  return v2;
}

id sub_1000B6A10(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeStringForKey:", kCFUserNotificationAlertSourceKey));
}

id sub_1000B6A38(void *a1)
{
  return objc_msgSend(a1, "bs_BOOLForKey:", SBUserNotificationBehavesSuperModally);
}

id sub_1000B6A58(void *a1)
{
  return objc_msgSend(a1, "bs_BOOLForKey:", SBUserNotificationDontDismissOnUnlock);
}

id sub_1000B6A78(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeStringForKey:",  SBUserNotificationDefaultResponseLaunchBundleID));
}

id sub_1000B6AA0(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeStringForKey:", SBUserNotificationDefaultResponseLaunchURL));
  if (v1) {
    double v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v1));
  }
  else {
    double v2 = 0LL;
  }

  return v2;
}

id sub_1000B6B00(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeStringForKey:",  kCFUserNotificationLocalizationPathKey));
}

id sub_1000B6B28(void *a1)
{
  id v1 = a1;
  double v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "bs_safeURLForKey:", kCFUserNotificationIconURLKey));
  if (!v2)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "bs_safeStringForKey:", kCFUserNotificationIconPathKey));
    if (v3) {
      double v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", v3));
    }
    else {
      double v2 = 0LL;
    }
  }

  return v2;
}

id sub_1000B6BBC(void *a1)
{
  return objc_msgSend(a1, "bs_BOOLForKey:", kCFUserNotificationAlertTopMostKey);
}

id sub_1000B6BDC(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeNumberForKey:", SBUserNotificationDefaultButtonPresentationStyleKey));
  id v2 = [v1 integerValue];

  return v2;
}

id sub_1000B6C1C(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeNumberForKey:", SBUserNotificationAlternateButtonPresentationStyleKey));
  id v2 = [v1 integerValue];

  return v2;
}

id sub_1000B6C5C(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeNumberForKey:", SBUserNotificationOtherButtonPresentationStyleKey));
  id v2 = [v1 integerValue];

  return v2;
}

id sub_1000B6C9C(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeArrayForKey:", kCFUserNotificationKeyboardTypesKey));
}

id sub_1000B6CC4(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeNumberForKey:", SBUserNotificationDefaultButtonTag));
}

id sub_1000B6CEC(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeStringForKey:", SSUserNotificationKeyAccountName));
}

id sub_1000B6D14(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeNumberForKey:", SSUserNotificationKeyAttemptNumber));
  else {
    id v2 = [v1 unsignedIntegerValue];
  }

  return v2;
}

id sub_1000B6D6C(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeStringForKey:",  PBSCFUserNotificationTemplateTypeKey));
}

id sub_1000B6D94(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeStringForKey:",  PBSPSD2UserNotificationPINCodeTitleKey));
}

id sub_1000B6DBC(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeStringForKey:",  PBSPSD2UserNotificationPINCodeURLSubtitleKey));
}

id sub_1000B6DE4(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeStringForKey:",  PBSPSD2UserNotificationPINCodeURLKey));
}

id sub_1000B6E0C(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeStringForKey:",  PBSPSD2UserNotificationPINCodeSubtitleKey));
}

id sub_1000B6E34(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeStringForKey:", PBSPSD2UserNotificationPINCodeKey));
}

id sub_1000B6E5C(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeStringForKey:",  PBSPSD2UserNotificationQRCodeTitleKey));
}

id sub_1000B6E84(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeStringForKey:",  PBSPSD2UserNotificationQRCodeSubtitleKey));
}

id sub_1000B6EAC(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeStringForKey:", PBSPSD2UserNotificationQRCodeURLKey));
}

id sub_1000B6ED4(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeStringForKey:",  PBSPSD2UserNotificationDividerTextKey));
}

id sub_1000B6EFC(void *a1)
{
  return (id)objc_claimAutoreleasedReturnValue( objc_msgSend( a1,  "bs_safeDictionaryForKey:",  PBSUserNotificationWaitViewDictionaryKey));
}

id sub_1000B6F24(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeStringForKey:", kCFUserNotificationAlertHeaderKey));
  id v5 = v4;
  if (v3 && v4) {
    id v6 = (id)objc_claimAutoreleasedReturnValue([v3 localizedStringForKey:v4 value:0 table:0]);
  }
  else {
    id v6 = v4;
  }
  id v7 = v6;

  return v7;
}

id sub_1000B6FB0(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bs_safeStringForKey:", kCFUserNotificationAlertMessageKey));
  id v6 = v5;
  if (v4 && v5) {
    id v7 = (id)objc_claimAutoreleasedReturnValue([v4 localizedStringForKey:v5 value:0 table:0]);
  }
  else {
    id v7 = v5;
  }
  uint64_t v8 = v7;

  if (!v8)
  {
    id v9 = v4;
    id v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bs_safeArrayForKey:", kCFUserNotificationAlertMessageKey));
    id v11 = v9;
    int v12 = v11;
    if (v4 && v10)
    {
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472LL;
      v22[2] = sub_1000B772C;
      v22[3] = &unk_1003D5540;
      id v23 = v11;
      id v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "bs_mapNoNulls:", v22));
    }

    else
    {
      id v13 = v10;
    }

    if (v13)
    {
      id v14 = v12;
      id v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bs_safeStringForKey:", SBUserNotificationAlertMessageDelimiterKey));
      __int16 v16 = v15;
      if (v4 && v15) {
        uint64_t v17 = (__CFString *)objc_claimAutoreleasedReturnValue([v14 localizedStringForKey:v15 value:0 table:0]);
      }
      else {
        uint64_t v17 = (__CFString *)v15;
      }
      id v18 = v17;

      id v19 = @" ";
      if (v18) {
        id v19 = v18;
      }
      uint64_t v20 = v19;

      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v13 componentsJoinedByString:v20]);
    }

    else
    {
      uint64_t v8 = 0LL;
    }
  }

  return v8;
}

id sub_1000B71A0(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeStringForKey:", kCFUserNotificationDefaultButtonTitleKey));
  id v5 = v4;
  if (v3 && v4) {
    id v6 = (id)objc_claimAutoreleasedReturnValue([v3 localizedStringForKey:v4 value:0 table:0]);
  }
  else {
    id v6 = v4;
  }
  id v7 = v6;

  return v7;
}

id sub_1000B722C(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeStringForKey:", kCFUserNotificationAlternateButtonTitleKey));
  id v5 = v4;
  if (v3 && v4) {
    id v6 = (id)objc_claimAutoreleasedReturnValue([v3 localizedStringForKey:v4 value:0 table:0]);
  }
  else {
    id v6 = v4;
  }
  id v7 = v6;

  return v7;
}

id sub_1000B72B8(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeStringForKey:", kCFUserNotificationOtherButtonTitleKey));
  id v5 = v4;
  if (v3 && v4) {
    id v6 = (id)objc_claimAutoreleasedReturnValue([v3 localizedStringForKey:v4 value:0 table:0]);
  }
  else {
    id v6 = v4;
  }
  id v7 = v6;

  return v7;
}

id sub_1000B7344(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeArrayForKey:", kCFUserNotificationPopUpTitlesKey));
  id v5 = v3;
  id v6 = v5;
  if (v5 && v4)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_1000B772C;
    v9[3] = &unk_1003D5540;
    id v10 = v5;
    id v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bs_mapNoNulls:", v9));
  }

  else
  {
    id v7 = v4;
  }

  return v7;
}

id sub_1000B741C(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeArrayForKey:", kCFUserNotificationTextFieldTitlesKey));
  id v5 = v3;
  id v6 = v5;
  if (v5 && v4)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_1000B772C;
    v9[3] = &unk_1003D5540;
    id v10 = v5;
    id v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bs_mapNoNulls:", v9));
  }

  else
  {
    id v7 = v4;
  }

  return v7;
}

id sub_1000B74F4(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeArrayForKey:", kCFUserNotificationTextFieldValuesKey));
  id v5 = v3;
  id v6 = v5;
  if (v5 && v4)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_1000B772C;
    v9[3] = &unk_1003D5540;
    id v10 = v5;
    id v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bs_mapNoNulls:", v9));
  }

  else
  {
    id v7 = v4;
  }

  return v7;
}

id sub_1000B75CC(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bs_safeArrayForKey:", SBSUserNotificationButtonDefinitionsKey));
  if (v4)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_1000B7698;
    void v7[3] = &unk_1003D54F8;
    id v8 = v3;
    id v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bs_mapNoNulls:", v7));
  }

  else
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray array](&OBJC_CLASS___NSArray, "array"));
  }

  return v5;
}

PBCFUserNotificationButtonDefinition *sub_1000B7698(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = -[PBCFUserNotificationButtonDefinition initWithDictionary:localizationBundle:]( objc_alloc(&OBJC_CLASS___PBCFUserNotificationButtonDefinition),  "initWithDictionary:localizationBundle:",  v3,  *(void *)(a1 + 32));

  return v4;
}

void sub_1000B76F0(id a1)
{
  id v1 = -[FBServiceClientAuthenticator initWithEntitlement:additionalCredentials:]( objc_alloc(&OBJC_CLASS___FBServiceClientAuthenticator),  "initWithEntitlement:additionalCredentials:",  @"com.apple.springboard.CFUserNotification",  1LL);
  id v2 = (void *)qword_1004709B8;
  qword_1004709B8 = (uint64_t)v1;
}

id sub_1000B772C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSString);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0)
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = v3;
    id v7 = v6;
    if (v6 && v5) {
      id v8 = (id)objc_claimAutoreleasedReturnValue([v5 localizedStringForKey:v6 value:0 table:0]);
    }
    else {
      id v8 = v6;
    }
    id v9 = v8;
  }

  else
  {
    id v9 = 0LL;
  }

  return v9;
}

void sub_1000B783C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 mainWorkspace]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 geometry]);

  id v5 = [objc_alloc(*(Class *)(a1 + 32)) initWithWorkspaceGeometry:v4];
  id v6 = (void *)qword_1004709C8;
  qword_1004709C8 = (uint64_t)v5;
}

void sub_1000B7A84( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_1000B7AA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateDumpBuilder]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 build]);

  return v3;
}

void sub_1000B8168( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

id sub_1000B81A4(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 controller]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_1000B8720( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1000B88FC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000B8AA8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_1000B8AC0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000B8AD0(uint64_t a1)
{
}

void sub_1000B8AE8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (*(void *)(a1 + 32) && objc_msgSend(v5, "isEqual:"))
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 64) + 8LL);
    id v8 = v6;
    id v9 = *(os_activity_s **)(v7 + 40);
    *(void *)(v7 + 40) = v8;
  }

  else if ([*(id *)(a1 + 40) containsObject:v5])
  {
    id v9 = _os_activity_create( (void *)&_mh_execute_header,  "layoutAvoidance/coordinator/publish",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v9, &v18);
    id v10 = sub_1000831A4();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 48);
      id v13 = [v6 count];
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v5 resolvedName]);
      *(_DWORD *)__int128 buf = 134218498;
      uint64_t v20 = v12;
      __int16 v21 = 2048;
      id v22 = v13;
      __int16 v23 = 2114;
      id v24 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Notifying controller {coordinator=%p, updates.count=%lu, controller=%{public}@}",  buf,  0x20u);
    }

    [v5 coordinator:*(void *)(a1 + 48) didUpdateElements:v6 withTransitionContext:*(void *)(a1 + 56)];
    os_activity_scope_leave(&v18);
  }

  else
  {
    id v15 = sub_1000831A4();
    id v9 = (os_activity_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v16 = *(void *)(a1 + 48);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v5 resolvedName]);
      *(_DWORD *)__int128 buf = 134218498;
      uint64_t v20 = v16;
      __int16 v21 = 2114;
      id v22 = v17;
      __int16 v23 = 2114;
      id v24 = v6;
      _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "Encountered elements for unknown controller {coordinator=%p, controller=%{public}@, updates=%{public}@",  buf,  0x20u);
    }
  }
}

void sub_1000B8CFC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

BOOL sub_1000B9854(uint64_t a1, void *a2)
{
  id v3 = [a2 layoutLevel];
  return v3 == (id)-1LL || (uint64_t)v3 > *(void *)(a1 + 32);
}

id sub_1000BA9FC(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1000BAA94(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) _init];
  id v2 = (void *)qword_1004709D8;
  qword_1004709D8 = (uint64_t)v1;
}

void sub_1000BABAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBSystemGestureManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  [*(id *)(a1 + 32) _setupGesturesWithManager:v7];
  uint64_t v9 = objc_opt_self(&OBJC_CLASS___PBSceneManager, v8);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v10]);

  [v11 addObserver:*(void *)(a1 + 32)];
  uint64_t v13 = objc_opt_self(&OBJC_CLASS___PBSiriManager, v12);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v14]);

  [v15 addObserver:*(void *)(a1 + 32)];
}

void sub_1000BB670(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100082A24();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10027BD60(a1, v3, v6);
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    sub_10027BCF8(a1, v6, v7, v8, v9, v10, v11, v12);
  }
}

void sub_1000BBE6C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000BBE90(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = WeakRetained;
  v4[2](v4, 1LL);
}

void sub_1000BBFD0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000BC16C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000BC190(id a1, PBSystemGestureActivationContext *a2)
{
  id v2 = a2;
  id v3 = sub_1000841D0();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    sub_10027BE08(v4);
  }

  sub_1000524F8();
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[PBSMediaRemoteSiriContext contextWithSystemGestureActivationContext:]( &OBJC_CLASS___PBSMediaRemoteSiriContext,  "contextWithSystemGestureActivationContext:",  v2));

  [v5 setIsSourcePTTEligible:0];
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  [v6 activateDictationWithContext:v5];
}

void sub_1000BC228(id a1, PBSystemGestureActivationContext *a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PBSMediaRemoteSiriContext contextWithSystemGestureActivationContext:]( &OBJC_CLASS___PBSMediaRemoteSiriContext,  "contextWithSystemGestureActivationContext:",  v2));
  [v3 setIsSourcePTTEligible:0];
  id v4 = -[PBSystemGestureActivationContext state](v2, "state");

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  id v6 = v5;
  if (v4 == (id)1) {
    [v5 startDictationWithContext:v3];
  }
  else {
    [v5 stopDictationWithContext:v3];
  }
}

void sub_1000BC2B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained setDictationDeviceIdentifier:0];
  }
}

void sub_1000BC644( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

Class sub_1000BC774(uint64_t a1)
{
  id v4 = 0LL;
  if (!qword_1004709F0)
  {
    __int128 v5 = off_1003D5610;
    uint64_t v6 = 0LL;
    qword_1004709F0 = _sl_dlopen(&v5, &v4);
    id v2 = v4;
    if (!qword_1004709F0)
    {
      abort_report_np("%s", v4);
      goto LABEL_7;
    }

    if (v4) {
      goto LABEL_8;
    }
  }

  while (1)
  {
    Class result = objc_getClass("AFPreferences");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL)) {
      break;
    }
LABEL_7:
    id v2 = (char *)sub_10027BFB4();
LABEL_8:
    free(v2);
  }

  qword_1004709E8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_1000BC98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TVSUIWallpaper _wallpaperPathForVariant:userInterfaceStyle:]( &OBJC_CLASS___TVSUIWallpaper,  "_wallpaperPathForVariant:userInterfaceStyle:",  a2,  a3));
  if ([v3 length])
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    [v4 removeItemAtPath:v3 error:0];
  }
}

BOOL sub_1000BCB90(uint64_t a1, void *a2)
{
  return *(unsigned __int8 *)(a1 + 32) == [a2 developerType];
}

id sub_1000BCC2C(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1000BCCC4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1004709F8;
  qword_1004709F8 = (uint64_t)v1;
}

BOOL sub_1000BCE28(id a1, PBSAppInfo *a2)
{
  return -[PBSAppInfo isPlaceholder](a2, "isPlaceholder") ^ 1;
}

NSString *sub_1000BD564(void *a1)
{
  id v1 = a1;
  uint64_t v2 = XBApplicationSnapshotContentTypeDescription([v1 contentType]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = objc_alloc(&OBJC_CLASS___NSString);
  __int128 v5 = (void *)objc_claimAutoreleasedReturnValue([v1 groupID]);
  id v6 = [v1 userInterfaceStyle];
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v1 variantID]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v1 identifier]);
  uint64_t v9 = -[NSString initWithFormat:]( v4,  "initWithFormat:",  @"%p Group: %@ Type: %@ Interface: %lu Variant: %@ ID: %@ ",  v1,  v5,  v3,  v6,  v7,  v8);

  return v9;
}

void sub_1000BE0B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
}

uint64_t sub_1000BE13C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000BE14C(uint64_t a1)
{
}

void sub_1000BE164(uint64_t a1)
{
  uint64_t v2 = (UIImage *)*(id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v42 = (void *)objc_claimAutoreleasedReturnValue([v3 stringForKey:@"PBFixedWallpaperPath"]);

  if ([v42 length])
  {
    id v4 = -[UIImage initWithContentsOfFile:](objc_alloc(&OBJC_CLASS___UIImage), "initWithContentsOfFile:", v42);
    __int128 v5 = v4;
    if (!v4) {
      __int128 v5 = *(UIImage **)(a1 + 32);
    }
    id v6 = v5;

    uint64_t v2 = v6;
  }

  double v7 = CACurrentMediaTime();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](&OBJC_CLASS___UIScreen, "mainScreen"));
  [v8 scale];
  uint64_t v10 = v9;

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](&OBJC_CLASS___UIScreen, "mainScreen"));
  [v11 bounds];
  uint64_t v13 = v12;
  uint64_t v15 = v14;

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.5, 1.0));
  uint64_t v52 = 0LL;
  __int128 v53 = &v52;
  uint64_t v54 = 0x3032000000LL;
  id v55 = sub_1000BE13C;
  __int128 v56 = sub_1000BE14C;
  id v57 = 0LL;
  uint64_t v46 = 0LL;
  __int128 v47 = &v46;
  uint64_t v48 = 0x3032000000LL;
  id v49 = sub_1000BE13C;
  id v50 = sub_1000BE14C;
  id v51 = 0LL;
  v44[0] = _NSConcreteStackBlock;
  v44[1] = 3221225472LL;
  v44[2] = sub_1000BE5D4;
  v44[3] = &unk_1003D5670;
  v44[6] = v13;
  v44[7] = v15;
  v44[8] = v10;
  __int128 v45 = xmmword_1002EC560;
  v44[4] = &v52;
  v44[5] = &v46;
  uint64_t v17 = objc_retainBlock(v44);
  os_activity_scope_state_s v18 = v17;
  if (*(_BYTE *)(a1 + 72)) {
    ((void (*)(void *))v17[2])(v17);
  }
  else {
    dispatch_sync(&_dispatch_main_q, v17);
  }
  double v19 = TVSUIBlurRendererRadiusDefault;
  uint64_t v20 = objc_claimAutoreleasedReturnValue( objc_msgSend( (id)v53[5],  "_blurredImageWithImage:blurStyle:tintColor:filter:backgroundColor:customBlurRadius:",  v2,  4003,  0,  0,  v16,  TVSUIBlurRendererRadiusDefault,  v42));
  uint64_t v21 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v22 = *(void **)(v21 + 40);
  *(void *)(v21 + 40) = v20;

  uint64_t v23 = objc_claimAutoreleasedReturnValue( [(id)v53[5] _blurredImageWithImage:v2 blurStyle:4008 tintColor:0 filter:0 backgroundColor:v16 customBlurRadius:v19]);
  uint64_t v24 = *(void *)(*(void *)(a1 + 48) + 8LL);
  __int16 v25 = *(void **)(v24 + 40);
  *(void *)(v24 + 40) = v23;

  __int16 v26 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 0.4));
  id v27 = (void *)v47[5];
  uint64_t v28 = kCAFilterPlusD;
  __int16 v29 = (void *)objc_claimAutoreleasedReturnValue(+[CAFilter filterWithType:](&OBJC_CLASS___CAFilter, "filterWithType:", kCAFilterPlusD));
  uint64_t v30 = objc_claimAutoreleasedReturnValue( [v27 _blurredImageWithImage:v2 blurStyle:4003 tintColor:v26 filter:v29 backgroundColor:v16 customBlurRadius:v19]);
  uint64_t v31 = *(void *)(*(void *)(a1 + 56) + 8LL);
  __int128 v32 = *(void **)(v31 + 40);
  *(void *)(v31 + 40) = v30;

  __int128 v33 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 0.1));
  uint64_t v34 = (void *)v47[5];
  id v35 = (void *)objc_claimAutoreleasedReturnValue(+[CAFilter filterWithType:](&OBJC_CLASS___CAFilter, "filterWithType:", v28));
  uint64_t v36 = objc_claimAutoreleasedReturnValue( [v34 _blurredImageWithImage:v2 blurStyle:4008 tintColor:v33 filter:v35 backgroundColor:v16 customBlurRadius:v19]);
  uint64_t v37 = *(void *)(*(void *)(a1 + 64) + 8LL);
  id v38 = *(void **)(v37 + 40);
  *(void *)(v37 + 40) = v36;

  double v39 = CACurrentMediaTime();
  id v40 = sub_100083F78();
  uint64_t v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v40);
  if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 134217984;
    double v59 = v39 - v7;
    _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "WALLPAPER: Rendered in %f s", buf, 0xCu);
  }

  _Block_object_dispose(&v46, 8);
  _Block_object_dispose(&v52, 8);
}

void sub_1000BE598( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_1000BE5D4(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___TVSUIBlurRenderer);
  double v3 = *(double *)(a1 + 64);
  if (v3 <= 1.0) {
    double v4 = *(double *)(a1 + 64);
  }
  else {
    double v4 = v3 * 0.75;
  }
  __int128 v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a1 + 72)));
  v20[0] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a1 + 80)));
  v20[1] = v6;
  double v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v20, 2LL));
  id v8 = objc_msgSend(v2, "initWithSize:scale:effects:", v7, *(double *)(a1 + 48), *(double *)(a1 + 56), v4);
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8LL);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  id v11 = objc_alloc(&OBJC_CLASS___TVSUIBlurRenderer);
  double v12 = *(double *)(a1 + 64) * 0.5;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a1 + 72)));
  v19[0] = v13;
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a1 + 80)));
  v19[1] = v14;
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v19, 2LL));
  id v16 = objc_msgSend(v11, "initWithSize:scale:effects:", v15, *(double *)(a1 + 48), *(double *)(a1 + 56), v12);
  uint64_t v17 = *(void *)(*(void *)(a1 + 40) + 8LL);
  os_activity_scope_state_s v18 = *(void **)(v17 + 40);
  *(void *)(v17 + 40) = v16;
}

void sub_1000BE784(uint64_t a1)
{
}

id sub_1000BE7B4(uint64_t a1)
{
  return *(id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
}

void sub_1000BE7D4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8LL);
  if (*(_BYTE *)(v2 + 24)) {
    a2 = 1;
  }
  *(_BYTE *)(v2 + 24) = a2;
  if (*(_BYTE *)(a1 + 48)) {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

id sub_1000BE80C(uint64_t a1)
{
  return *(id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
}

void sub_1000BE82C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8LL);
  if (*(_BYTE *)(v2 + 24)) {
    a2 = 1;
  }
  *(_BYTE *)(v2 + 24) = a2;
  if (*(_BYTE *)(a1 + 48)) {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

uint64_t sub_1000BE864(uint64_t a1)
{
  if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL)) {
    +[TVSUIWallpaper _notifyWallpaperChange](&OBJC_CLASS___TVSUIWallpaper, "_notifyWallpaperChange");
  }
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1000BE8AC(uint64_t a1)
{
  return *(id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
}

id sub_1000BE8CC(uint64_t a1)
{
  return *(id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
}

id sub_1000BE8EC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1000BEA0C(uint64_t a1)
{
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  __int128 v46 = 0u;
  __int128 v47 = 0u;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) removedAppInfos]);
  id v3 = [v2 countByEnumeratingWithState:&v44 objects:v50 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v45;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v45 != v5) {
          objc_enumerationMutation(v2);
        }
        double v7 = *(void **)(a1 + 40);
        id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v44 + 1) + 8 * (void)i) applicationInfo]);
        [v7 _invalidateAllSnapshotsForApplicationInfo:v8];
      }

      id v4 = [v2 countByEnumeratingWithState:&v44 objects:v50 count:16];
    }

    while (v4);
  }

  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) addedAppInfos]);
  id v10 = [v9 countByEnumeratingWithState:&v40 objects:v49 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v41;
    do
    {
      for (j = 0LL; j != v11; j = (char *)j + 1)
      {
        if (*(void *)v41 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void **)(*((void *)&v40 + 1) + 8LL * (void)j);
        uint64_t v15 = *(void **)(a1 + 40);
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v14 applicationInfo]);
        [v15 _invalidateAllSnapshotsForApplicationInfo:v16];

        uint64_t v17 = objc_autoreleasePoolPush();
        os_activity_scope_state_s v18 = *(void **)(a1 + 40);
        double v19 = (void *)objc_claimAutoreleasedReturnValue([v14 applicationInfo]);
        [v18 _ingestDefaultLaunchImageForApplicationInfo:v19];

        objc_autoreleasePoolPop(v17);
      }

      id v11 = [v9 countByEnumeratingWithState:&v40 objects:v49 count:16];
    }

    while (v11);
  }

  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) oldToNewUpdatedAppInfos]);
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "keyEnumerator", 0));
  id v22 = [v21 countByEnumeratingWithState:&v36 objects:v48 count:16];
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = *(void *)v37;
    do
    {
      for (k = 0LL; k != v23; k = (char *)k + 1)
      {
        if (*(void *)v37 != v24) {
          objc_enumerationMutation(v21);
        }
        __int16 v26 = *(void **)(*((void *)&v36 + 1) + 8LL * (void)k);
        id v27 = (void *)objc_claimAutoreleasedReturnValue([v20 objectForKey:v26]);
        [v26 lastModifiedDate];
        double v29 = v28;
        [v27 lastModifiedDate];
        if (v29 != v30)
        {
          uint64_t v31 = *(void **)(a1 + 40);
          __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v26 applicationInfo]);
          [v31 _invalidateAllSnapshotsForApplicationInfo:v32];

          __int128 v33 = objc_autoreleasePoolPush();
          uint64_t v34 = *(void **)(a1 + 40);
          id v35 = (void *)objc_claimAutoreleasedReturnValue([v27 applicationInfo]);
          [v34 _ingestDefaultLaunchImageForApplicationInfo:v35];

          objc_autoreleasePoolPop(v33);
        }
      }

      id v23 = [v21 countByEnumeratingWithState:&v36 objects:v48 count:16];
    }

    while (v23);
  }
}

void sub_1000BF77C(_Unwind_Exception *a1)
{
}

void sub_1000BF7A4(uint64_t a1, int a2, int a3)
{
  id v6 = sub_100083F78();
  double v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = sub_1000BD564(*(void **)(a1 + 32));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    v19[0] = 67109634;
    v19[1] = a2;
    __int16 v20 = 1024;
    int v21 = a3;
    __int16 v22 = 2112;
    id v23 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Finished request for snapshot (didGenerate=%{BOOL}d, cancelled=%{BOOL}d) %@",  (uint8_t *)v19,  0x18u);
  }

  uint64_t v10 = *(void *)(a1 + 72);
  if (v10)
  {
    uint64_t v11 = 3LL;
    if (!a3) {
      uint64_t v11 = 4LL;
    }
    if (a2) {
      uint64_t v12 = 0LL;
    }
    else {
      uint64_t v12 = v11;
    }
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v10, v12);
  }

  if (a2)
  {
    if ([*(id *)(a1 + 40) count])
    {
      [*(id *)(a1 + 40) enumerateObjectsUsingBlock:&stru_1003D5778];
      [*(id *)(a1 + 48) deleteSnapshots:*(void *)(a1 + 40)];
    }

    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 48) createVariantForSnapshot:*(void *)(a1 + 32) withIdentifier:off_100469558]);
    if (v13)
    {
      objc_msgSend(v13, "setUserInterfaceStyle:", objc_msgSend(*(id *)(a1 + 32), "userInterfaceStyle"));
      objc_msgSend(v13, "pb_setIsTemplateImage:", objc_msgSend(*(id *)(a1 + 32), "pb_isTemplateImage"));
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[PBApplicationSnapshotPredicate predicate]( &OBJC_CLASS___PBApplicationSnapshotPredicate,  "predicate"));
      [v14 setContentTypeMask:1];
      objc_msgSend(v14, "setReferenceSize:", *(double *)(a1 + 104), *(double *)(a1 + 112));
      [v14 setUserInterfaceStyle:*(void *)(a1 + 120)];
      [v14 setName:0];
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", off_100469558));
      [v14 setExcludeVariants:v15];

      id v16 = -[PBSavedSnapshotDataProvider initWithSnapshotPredicate:sceneID:bundleIdentifier:scaleFactor:]( objc_alloc(&OBJC_CLASS___PBSavedSnapshotDataProvider),  "initWithSnapshotPredicate:sceneID:bundleIdentifier:scaleFactor:",  v14,  *(void *)(a1 + 56),  *(void *)(a1 + 64),  0.75);
      uint64_t v17 = -[_PBSnapshotSaveOperation initWithSnapshot:dataProvider:manifest:]( objc_alloc(&OBJC_CLASS____PBSnapshotSaveOperation),  "initWithSnapshot:dataProvider:manifest:",  v13,  v16,  *(void *)(a1 + 48));
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
      [WeakRetained _processImageOperation:v17];
    }
  }

void sub_1000BF9F0(id a1, XBApplicationSnapshot *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  id v5 = sub_100083F78();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    double v7 = sub_1000BD564(v4);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    int v9 = 138412290;
    uint64_t v10 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "DeleteSnapshot :%@", (uint8_t *)&v9, 0xCu);
  }
}

int64_t sub_1000BFBDC(id a1, NSNumber *a2, NSNumber *a3)
{
  return -[NSNumber compare:](a2, "compare:", a3);
}

int64_t sub_1000BFBF4(id a1, NSNumber *a2, NSNumber *a3)
{
  return -[NSNumber compare:](a2, "compare:", a3);
}

id sub_1000BFC0C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  [v5 doubleValue];
  double v8 = v7;
  [v6 doubleValue];
  double v10 = v9;
  int v11 = BSFloatEqualToFloat(*(double *)(a1 + 32), v8);
  int v12 = BSFloatEqualToFloat(*(double *)(a1 + 32), v10);
  if ((v11 & 1) != 0 || v12)
  {
    uint64_t v15 = -1LL;
    if (!v11) {
      uint64_t v15 = 1LL;
    }
    if (v11 != v12) {
      id v16 = (id)v15;
    }
    else {
      id v16 = 0LL;
    }
  }

  else
  {
    if (BSFloatGreaterThanFloat(v8, *(double *)(a1 + 32))
      && BSFloatGreaterThanFloat(v10, *(double *)(a1 + 32)))
    {
      uint64_t v13 = v5;
      id v14 = v6;
    }

    else
    {
      uint64_t v13 = v6;
      id v14 = v5;
    }

    id v16 = [v13 compare:v14];
  }

  return v16;
}

id sub_1000BFE4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _processPendingOperations];
}

id sub_1000BFEF0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) addObject:*(void *)(a1 + 40)];
}

void sub_1000BFF64(uint64_t a1)
{
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 24), "copy", 0);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      id v6 = 0LL;
      do
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        double v7 = *(void **)(*((void *)&v10 + 1) + 8LL * (void)v6);
        uint64_t v8 = objc_opt_class(&OBJC_CLASS____PBWallpaperSaveOperation);
        if ((objc_opt_isKindOfClass(v7, v8) & 1) != 0
          || (uint64_t v9 = objc_opt_class(&OBJC_CLASS____PBWallpaperGenerateOperation), (objc_opt_isKindOfClass(v7, v9) & 1) != 0))
        {
          [v7 cancel];
          [*(id *)(*(void *)(a1 + 32) + 24) removeObject:v7];
        }

        id v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v4);
  }
}

void sub_1000C012C(uint64_t a1)
{
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v2 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 24), "copy", 0);
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v13;
    do
    {
      id v6 = 0LL;
      do
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v2);
        }
        double v7 = *(void **)(*((void *)&v12 + 1) + 8LL * (void)v6);
        uint64_t v8 = objc_opt_class(&OBJC_CLASS____PBSnapshotSaveOperation);
        if ((objc_opt_isKindOfClass(v7, v8) & 1) != 0)
        {
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 snapshot]);
          __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 groupID]);
          unsigned int v11 = [v10 isEqual:*(void *)(a1 + 40)];

          if (v11)
          {
            [v7 cancel];
            [*(id *)(*(void *)(a1 + 32) + 24) removeObject:v7];
          }
        }

        id v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v4);
  }
}

void sub_1000C03B8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) operations]);
  id v3 = [v2 count];

  if (!v3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) firstObject]);
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    __int128 v12 = 0u;
    __int128 v13 = 0u;
    id v5 = *(id *)(*(void *)(a1 + 32) + 24LL);
    id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v13;
      while (2)
      {
        for (i = 0LL; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v13 != v8) {
            objc_enumerationMutation(v5);
          }
          __int128 v10 = *(void **)(*((void *)&v12 + 1) + 8LL * (void)i);
          if (objc_msgSend(v10, "shouldPerformASAP", (void)v12))
          {
            id v11 = v10;

            id v4 = v11;
            goto LABEL_12;
          }
        }

        id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
        if (v7) {
          continue;
        }
        break;
      }
    }

void sub_1000C167C(_Unwind_Exception *a1)
{
}

void sub_1000C16AC(uint64_t a1)
{
  id v2 = sub_100083F78();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = v3;
  os_signpost_id_t v5 = *(void *)(a1 + 56);
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
  {
    *(_WORD *)id v6 = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v4,  OS_SIGNPOST_EVENT,  v5,  "SaveSnapshot.generateImage.complete",  "",  v6,  2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

uint64_t sub_1000C1758(uint64_t a1)
{
  id v2 = sub_100083F78();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = v3;
  os_signpost_id_t v5 = *(void *)(a1 + 48);
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
  {
    *(_WORD *)uint64_t v8 = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v4,  OS_SIGNPOST_EVENT,  v5,  "SaveSnapshot.saveImage.complete",  "",  v8,  2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained purgeImage];

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000C1800(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) generationCompletion]);

  if (v2)
  {
    (*(void (**)(void))(*(void *)(*(void *)(a1 + 32) + 48LL) + 16LL))();
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 48);
    *(void *)(v3 + 4_Block_object_dispose((const void *)(v2 - 160), 8) = 0LL;
  }

void sub_1000C18E8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) generationCompletion]);

  if (v2)
  {
    (*(void (**)(void))(*(void *)(*(void *)(a1 + 32) + 48LL) + 16LL))();
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 48);
    *(void *)(v3 + 4_Block_object_dispose((const void *)(v2 - 160), 8) = 0LL;
  }

id sub_1000C1B00(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1000C1B98(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100470A08;
  qword_100470A08 = (uint64_t)v1;
}

void sub_1000C1C74(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 instanceForClass:objc_opt_class(PBPictureInPictureManager)];
  os_signpost_id_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  [v5 addObserver:*(void *)(a1 + 32)];
  uint64_t v7 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v6);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v8]);

  __int128 v10 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  id v11 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  __int128 v12 = NSStringFromClass(v11);
  __int128 v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  __int128 v14 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v10,  "initWithName:layoutLevel:presentationHandler:delegate:",  v13,  9LL,  v9,  *(void *)(a1 + 32));
  uint64_t v15 = *(void *)(a1 + 32);
  id v16 = *(void **)(v15 + 24);
  *(void *)(v15 + 24) = v14;

  [*(id *)(*(void *)(a1 + 32) + 24) addObserver:*(void *)(a1 + 32) forKeyPath:@"hasActivePresentation" options:4 context:&off_1003D5890];
}

void sub_1000C25D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000C25FC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  os_signpost_id_t v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = (void *)*((void *)WeakRetained + 2);
    *((void *)WeakRetained + 2) = 0LL;
  }

  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v7, a2);
  }
}

id sub_1000C27B8(uint64_t a1, void *a2)
{
  return [a2 homeUIManager:*(void *)(a1 + 32) streamStateDidUpdate:*(void *)(a1 + 40)];
}

void sub_1000C2890(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___FBSceneWorkspace);
  id v3 = NSStringFromClass(*(Class *)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  os_signpost_id_t v5 = -[FBSceneWorkspace initWithIdentifier:](v2, "initWithIdentifier:", v4);
  uint64_t v6 = (void *)qword_100470A18;
  qword_100470A18 = (uint64_t)v5;
}

void sub_1000C2BCC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000C2BF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v6 = WeakRetained;
  if (WeakRetained
    && [WeakRetained isPresenting]
    && (uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[PBPictureInPictureManager sharedInstance]( PBPictureInPictureManager,  "sharedInstance")),  v8 = (void *)objc_claimAutoreleasedReturnValue([v7 activePictureInPictureApplicationBundleIDs]),  v9 = objc_msgSend(v8, "containsObject:", @"com.apple.TVSystemHomeUIService"),  v8,  v7,  (v9 & 1) == 0))
  {
    [v6 _dismiss:v4];
  }

  else
  {
    v4[2](v4, 1LL);
  }
}

id sub_1000C2E10(void *a1)
{
  if (a1)
  {
    id v1 = sub_100084248();
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

__CFString *sub_1000C2ED4(uint64_t a1)
{
  if (a1)
  {
    if (a1 == 1) {
      id v1 = @"SetupAssistant";
    }
    else {
      id v1 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PBSystemGestureSelectionMode(%ld)",  a1));
    }
  }

  else
  {
    id v1 = @"Default";
  }

  return v1;
}

void sub_1000C3360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000C35D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000C3A10(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_1000C44A8(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v3 = @"PBLaunchSettingsWithMallocProbGuard";
  id v4 = &__kCFBooleanTrue;
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v4,  &v3,  1LL));
  [v1 registerDefaults:v2];
}

void sub_1000C48A4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) toSceneIdentity]);
  id v4 = [v2 appendObject:v3 withName:@"toSceneIdentity"];

  os_signpost_id_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) fromSceneIdentity]);
  id v7 = [v5 appendObject:v6 withName:@"fromSceneIdentity"];

  uint64_t v8 = *(void **)(a1 + 32);
  unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 48) dictionary]);
  [v8 appendDictionarySection:v9 withName:@"Options" skipIfEmpty:1];
}

id sub_1000C4AA8(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) toAppInfo]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 bundleIdentifier]);

  return v2;
}

id sub_1000C4AE8(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) openApplicationOptions]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 dictionary]);

  return v2;
}

void sub_1000C4E10(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___UIFetchContentInBackgroundActionResponse);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0) {
    os_signpost_id_t v5 = v3;
  }
  else {
    os_signpost_id_t v5 = 0LL;
  }
  id v6 = v5;
  unsigned int v7 = [v6 result];
  id v8 = sub_100083CA8();
  unsigned __int8 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    int v11 = 138543874;
    uint64_t v12 = v10;
    __int16 v13 = 1024;
    unsigned int v14 = v7;
    __int16 v15 = 2112;
    id v16 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ finished background fetch task; result: %d response: %@",
      (uint8_t *)&v11,
      0x1Cu);
  }
}

BOOL sub_1000C52E0(id a1, id a2)
{
  id v2 = a2;
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___UISActivityContinuationAction);
  id v4 = v2;
  os_signpost_id_t v5 = v4;
  if (v3)
  {
    if ((objc_opt_isKindOfClass(v4, v3) & 1) != 0) {
      id v6 = v5;
    }
    else {
      id v6 = 0LL;
    }
  }

  else
  {
    id v6 = 0LL;
  }

  id v7 = v6;

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 activityType]);
  LOBYTE(v7) = [v8 isEqualToString:NSUserActivityTypeBrowsingWeb];

  return (char)v7;
}

void sub_1000C5554(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", a2));
  (*(void (**)(uint64_t, void *, void))(v2 + 16))(v2, v3, 0LL);
}

void sub_1000C56CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", a2));
  (*(void (**)(uint64_t, void *, void))(v2 + 16))(v2, v3, 0LL);
}

void sub_1000C5814(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
  (*(void (**)(uint64_t, void *, void))(v2 + 16))(v2, v3, 0LL);
}

void sub_1000C5914(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
  (*(void (**)(uint64_t, void *, void))(v2 + 16))(v2, v3, 0LL);
}

void sub_1000C5A0C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_1000C5AB4;
  void v5[3] = &unk_1003CFF30;
  id v6 = *(id *)(a1 + 48);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 _getDefaultServiceRequestWithResultHandler:v5]);
  [v3 setPIN:*(void *)(a1 + 40)];
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PBRestrictionServiceRequestManager sharedManager]( &OBJC_CLASS___PBRestrictionServiceRequestManager,  "sharedManager"));
  [v4 validatePINWithRequest:v3];
}

void sub_1000C5AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
  (*(void (**)(uint64_t, void *, void))(v2 + 16))(v2, v3, 0LL);
}

void sub_1000C6EA8(uint64_t a1)
{
}

void sub_1000C6EC0(uint64_t a1)
{
}

uint64_t sub_1000C6ED8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setAnimating:0];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

void sub_1000C70CC(uint64_t a1)
{
}

void sub_1000C70E4(uint64_t a1)
{
}

uint64_t sub_1000C70FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setAnimating:0];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

void sub_1000C7458(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        if (*(_BYTE *)(a1 + 40)) {
          double v7 = 1.0;
        }
        else {
          double v7 = 0.0;
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * (void)i), "setAlpha:", v7, (void)v8);
      }

      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v4);
  }
}

uint64_t sub_1000C7560(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000C76F0(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 40))
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue( +[UIBlurEffect _effectWithStyle:invertAutomaticStyle:]( &OBJC_CLASS___UIBlurEffect,  "_effectWithStyle:invertAutomaticStyle:",  4005LL,  0LL));
    [v1 setEffect:v2];
  }

  else
  {
    [*(id *)(a1 + 32) setEffect:0];
  }

uint64_t sub_1000C7750(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000C7D94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21)
{
}

void sub_1000C7EA0(uint64_t a1)
{
}

id sub_1000C8180(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  __int128 v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  void v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v5];
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_1000C81D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_1000C81F0(uint64_t a1)
{
}

void sub_1000C8208(uint64_t a1)
{
}

uint64_t sub_1000C8220(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1000C8500(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  CGAffineTransformMakeScale(&v4, 0.33, 0.33);
  [v2 setTransform:&v4];
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_1000C8554(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

void sub_1000C8570(uint64_t a1)
{
}

void sub_1000C8588(uint64_t a1)
{
}

uint64_t sub_1000C85A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000C9320( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_1000C933C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = (uint64_t (**)(void, void))objc_claimAutoreleasedReturnValue([WeakRetained menuProvider]);

  if (v5)
  {
    uint64_t v6 = ((uint64_t (**)(void, id))v5)[2](v5, v3);
    double v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  }

  else
  {
    double v7 = 0LL;
  }

  return v7;
}

id sub_1000C99AC(uint64_t a1, uint64_t a2)
{
  if ((a2 & ~*(void *)(a1 + 40)) != 0) {
    id v2 = 0LL;
  }
  else {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:a2]);
  }
  return v2;
}

UIColor *__cdecl sub_1000C99E4(id a1, unint64_t a2)
{
  return 0LL;
}

BOOL sub_1000C9A40(id a1, UIPress *a2)
{
  return (id)-[UIPress type](a2, "type") == (id)4;
}

id sub_1000C9D64(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateContentViews];
}

void sub_1000CA96C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, id location)
{
}

void sub_1000CA988(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40)) {
    sub_1000CA9C4(*(void *)(a1 + 32));
  }
  sub_1000CAE04(*(void *)(a1 + 32));
  sub_1000CB0A0(*(void *)(a1 + 32));
}

void sub_1000CA9C4(uint64_t a1)
{
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    id v2 = sub_100084680();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Initializing user profile storage.",  (uint8_t *)buf,  2u);
    }

    CGAffineTransform v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    unsigned __int8 v5 = [v4 BOOLForKey:@"PerformedCreateUserProfilesMigration"];

    if ((v5 & 1) != 0)
    {
      uint64_t v6 = *(void **)(a1 + 56);
      v39[0] = _NSConcreteStackBlock;
      v39[1] = 3221225472LL;
      v39[2] = sub_1000DA080;
      v39[3] = &unk_1003D5D68;
      void v39[4] = a1;
      [v6 performBatchUpdatesUsingBlock:v39];
      [*(id *)(a1 + 56) save];
      double v7 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
      __int128 v8 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
      __int128 v9 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
      __int128 v37 = 0u;
      __int128 v38 = 0u;
      __int128 v36 = 0u;
      __int128 v35 = 0u;
      __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) snapshot]);
      __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 userProfiles]);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allValues]);

      id v13 = [v12 countByEnumeratingWithState:&v35 objects:v41 count:16];
      if (v13)
      {
        uint64_t v14 = *(void *)v36;
        do
        {
          for (i = 0LL; i != v13; i = (char *)i + 1)
          {
            if (*(void *)v36 != v14) {
              objc_enumerationMutation(v12);
            }
            id v16 = *(void **)(*((void *)&v35 + 1) + 8LL * (void)i);
            uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 iCloudAltDSID]);
            -[NSMutableSet bs_safeAddObject:](v7, "bs_safeAddObject:", v17);

            os_activity_scope_state_s v18 = (void *)objc_claimAutoreleasedReturnValue([v16 iTunesAltDSID]);
            -[NSMutableSet bs_safeAddObject:](v8, "bs_safeAddObject:", v18);

            double v19 = (void *)objc_claimAutoreleasedReturnValue([v16 gameCenterAltDSID]);
            -[NSMutableSet bs_safeAddObject:](v9, "bs_safeAddObject:", v19);
          }

          id v13 = [v12 countByEnumeratingWithState:&v35 objects:v41 count:16];
        }

        while (v13);
      }

      objc_initWeak(buf, *(id *)(a1 + 48));
      __int16 v20 = *(void **)(a1 + 48);
      v40[0] = ACAccountTypeIdentifierAppleAccount;
      v40[1] = ACAccountTypeIdentifieriTunesStore;
      v40[2] = ACAccountTypeIdentifierGameCenter;
      int v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v40, 3LL));
      v29[0] = _NSConcreteStackBlock;
      v29[1] = 3221225472LL;
      v29[2] = sub_1000DA9C4;
      v29[3] = &unk_1003D61E8;
      objc_copyWeak(&v33, buf);
      __int16 v22 = v7;
      double v30 = v22;
      id v23 = v8;
      uint64_t v31 = v23;
      uint64_t v24 = v9;
      __int128 v32 = v24;
      [v20 accountsWithAccountTypeIdentifiers:v21 completion:v29];

      objc_destroyWeak(&v33);
      objc_destroyWeak(buf);

      __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(+[UMUserManager sharedManager](&OBJC_CLASS___UMUserManager, "sharedManager"));
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472LL;
      v28[2] = sub_1000DAE48;
      void v28[3] = &unk_1003D6230;
      v28[4] = a1;
      [v25 fetchAllPersonasWithCompletionHandler:v28];
    }

    else
    {
      id v26 = sub_100084680();
      id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "The create user profiles migration needs to run.",  (uint8_t *)buf,  2u);
      }

      sub_1000D31E0(a1);
    }
  }

void sub_1000CADD8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, id location)
{
}

void sub_1000CAE04(uint64_t a1)
{
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    id v2 = sub_100084680();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v23) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Resetting group recommendations session.",  (uint8_t *)&v23,  2u);
    }

    CGAffineTransform v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) snapshot]);
    unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue([v4 selectedUserProfile]);
    id v6 = [v5 groupRecommendationsConsent];

    if (v6 == (id)1)
    {
      double v7 = (void *)objc_claimAutoreleasedReturnValue([v4 selectedUserProfileIdentifier]);
      __int128 v8 = (PBSGroupRecommendationsSession *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 56) lastGroupRecommendationSessionForUserWithIdentifier:v7]);
      if (!v8)
      {
        id v9 = sub_100084680();
        __int128 v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          int v23 = 138543362;
          uint64_t v24 = v7;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "No previous group recommendations found for selected user. {identifier=%{public}@}",  (uint8_t *)&v23,  0xCu);
        }

        __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v4 selectedUserProfileIdentifier]);
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v11));

        __int128 v8 = -[PBSGroupRecommendationsSession initWithUserIdentifiers:userProfilesSnapshot:]( objc_alloc(&OBJC_CLASS___PBSGroupRecommendationsSession),  "initWithUserIdentifiers:userProfilesSnapshot:",  v12,  v4);
      }

      id v13 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v8;

      sub_1000D2200((dispatch_queue_t *)a1);
    }

    else
    {
      id v14 = sub_100084680();
      __int16 v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v4 selectedUserProfileIdentifier]);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v4 selectedUserProfile]);
        id v18 = [v17 groupRecommendationsConsent];
        int v23 = 138543618;
        uint64_t v24 = v16;
        __int16 v25 = 2048;
        id v26 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Selected user hasn't opted-in group recommendations, the session will be empty. {identifier=%{public}@, consent=%ld}",  (uint8_t *)&v23,  0x16u);
      }

      double v19 = objc_alloc(&OBJC_CLASS___PBSGroupRecommendationsSession);
      __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](&OBJC_CLASS___NSSet, "set"));
      int v21 = -[PBSGroupRecommendationsSession initWithUserIdentifiers:userProfilesSnapshot:]( v19,  "initWithUserIdentifiers:userProfilesSnapshot:",  v20,  v4);
      __int16 v22 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v21;

      sub_1000D2200((dispatch_queue_t *)a1);
    }
  }

void sub_1000CB0A0(uint64_t a1)
{
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    unsigned int v3 = [v2 BOOLForKey:@"DisableActiveiTunesValidation"];

    if (v3)
    {
      id v4 = sub_100084680();
      unsigned __int8 v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "Skipping active iTunes account validation.",  buf,  2u);
      }
    }

    else
    {
      unsigned __int8 v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) selectedUserProfile]);
      if (v5)
      {
        id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "ams_activeiTunesAccount"));
        double v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ams_altDSID"));
        __int128 v8 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s iTunesAltDSID](v5, "iTunesAltDSID"));
        char v9 = BSEqualObjects(v7, v8);

        id v10 = sub_100084680();
        __int128 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
        uint64_t v12 = v11;
        if ((v9 & 1) != 0)
        {
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)id v13 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Active iTunes account matches the selected user.",  v13,  2u);
          }
        }

        else
        {
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_10027CE60();
          }

          sub_1000D9AC0(a1, v5, 0LL);
        }
      }
    }
  }

id sub_1000CB234(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = sub_1000CB270(WeakRetained);
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(v2);

  return v3;
}

NSMutableDictionary *sub_1000CB270(id *a1)
{
  if (!a1)
  {
    id v4 = 0LL;
    return v4;
  }

  id v2 = sub_100084680();
  unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Dumping all users state.", buf, 2u);
  }

  id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue([a1 userProfilesSnapshot]);
  uint64_t v6 = objc_claimAutoreleasedReturnValue([v5 primaryUserProfileIdentifier]);
  double v7 = (void *)v6;
  if (v6) {
    __int128 v8 = (const __CFString *)v6;
  }
  else {
    __int128 v8 = &stru_1003E2910;
  }
  -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", v8, @"primaryUser");

  uint64_t v9 = objc_claimAutoreleasedReturnValue([v5 selectedUserProfileIdentifier]);
  id v10 = (void *)v9;
  if (v9) {
    __int128 v11 = (const __CFString *)v9;
  }
  else {
    __int128 v11 = &stru_1003E2910;
  }
  -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", v11, @"selectedUser");

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v5 userProfiles]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 allValues]);
  v39[0] = _NSConcreteStackBlock;
  v39[1] = 3221225472LL;
  v39[2] = sub_1000DB208;
  v39[3] = &unk_1003D6258;
  void v39[4] = a1;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "bs_map:", v39));

  if (v14) {
    -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", v14, @"users");
  }
  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([v5 userProfiles]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 allValues]);
  uint64_t v17 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  id v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "bs_reduce:block:", v17, &stru_1003D6298));

  double v19 = (void *)objc_claimAutoreleasedReturnValue([v18 allValues]);
  __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "bs_compactMap:", &stru_1003D62D8));

  if ([v20 count]) {
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v4,  "setObject:forKeyedSubscript:",  v20,  @"usersSharingiTunes");
  }
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  int v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "ams_iTunesAccounts"));
  id v22 = [v21 countByEnumeratingWithState:&v35 objects:v41 count:16];
  if (v22)
  {
    id v23 = v22;
    __int128 v32 = v14;
    id v33 = v5;
    uint64_t v34 = v4;
    uint64_t v24 = 0LL;
    uint64_t v25 = *(void *)v36;
    do
    {
      for (i = 0LL; i != v23; i = (char *)i + 1)
      {
        if (*(void *)v36 != v25) {
          objc_enumerationMutation(v21);
        }
        id v27 = *(void **)(*((void *)&v35 + 1) + 8LL * (void)i);
        double v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "ams_altDSID"));
        if ((objc_msgSend(v27, "ams_isLocalAccount") & 1) == 0)
        {
          if (v28)
          {
            double v29 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKeyedSubscript:v28]);
            id v30 = [v29 count];

            if (!v30) {
              ++v24;
            }
          }
        }
      }

      id v23 = [v21 countByEnumeratingWithState:&v35 objects:v41 count:16];
    }

    while (v23);

    unsigned __int8 v5 = v33;
    id v4 = v34;
    id v14 = v32;
    if (v24 < 1) {
      goto LABEL_28;
    }
    int v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v24));
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v34,  "setObject:forKeyedSubscript:",  v21,  @"iTunesAccountsWithoutUserCount");
  }

LABEL_28:
  return v4;
}

void sub_1000CB81C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userProfilesSnapshot]);
  id v3 = [v1 appendObject:v2 withName:@"userProfiles"];
}

id sub_1000CB948(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) addObject:*(void *)(a1 + 40)];
}

void sub_1000CBA9C(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 72LL);
  id v3 = objc_retainBlock(*(id *)(a1 + 48));
  [v2 setObject:v3 forKey:*(void *)(a1 + 40)];
}

void sub_1000CBC20(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 80LL);
  id v3 = objc_retainBlock(*(id *)(a1 + 48));
  [v2 setObject:v3 forKey:*(void *)(a1 + 40)];
}

void sub_1000CBDA4(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 88LL);
  id v3 = objc_retainBlock(*(id *)(a1 + 48));
  [v2 setObject:v3 forKey:*(void *)(a1 + 40)];
}

id sub_1000CBE84(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 88) removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_1000CBF60(uint64_t a1)
{
  id v2 = sub_100084680();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v8 = 138412290;
    uint64_t v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Begin ignoring user profile account notifications. {reason=%@}",  (uint8_t *)&v8,  0xCu);
  }

  [*(id *)(*(void *)(a1 + 40) + 112) addObject:*(void *)(a1 + 32)];
  if (!*(void *)(*(void *)(a1 + 40) + 120LL))
  {
    unsigned __int8 v5 = objc_alloc_init(&OBJC_CLASS___PBAccountNotificationCoalescingQueue);
    uint64_t v6 = *(void *)(a1 + 40);
    double v7 = *(void **)(v6 + 120);
    *(void *)(v6 + 120) = v5;
  }

void sub_1000CC0C8(uint64_t a1)
{
}

void sub_1000CC0E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    id v4 = sub_100084680();
    unsigned __int8 v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "End ignoring user profile account notifications. {reason=%@}",  (uint8_t *)&v6,  0xCu);
    }

    [*(id *)(a1 + 112) removeObject:v3];
    if (![*(id *)(a1 + 112) count])
    {
      sub_1000D8600(a1);
      sub_1000CB0A0(a1);
    }
  }
}

id sub_1000CC700(id a1, PBAppInfo *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBAppInfo applicationInfo](a2, "applicationInfo"));
}

void sub_1000CC7BC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) snapshot]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 userProfiles]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v3 count];
}

uint64_t sub_1000CC8A8(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 104LL) != 0LL;
  return result;
}

void sub_1000CC994(uint64_t a1)
{
  id v2 = (char *)[*(id *)(*(void *)(a1 + 32) + 112) countForObject:*(void *)(a1 + 40)];
  if (v2)
  {
    id v3 = v2;
    do
    {
      sub_1000CC0E4(*(void *)(a1 + 32), *(void **)(a1 + 40));
      --v3;
    }

    while (v3);
  }

void sub_1000CCBF0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000CCC2C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000CCC3C(uint64_t a1)
{
}

void sub_1000CCC54(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v12 = a2;
  uint64_t v13 = *(double **)(*(void *)(a1 + 48) + 8LL);
  void v13[4] = a3;
  void v13[5] = a4;
  v13[6] = a5;
  v13[7] = a6;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000CCDFC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_1000CCE14(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(&OBJC_CLASS____PBLegacyUserProfileManagerBatchUpdater);
  -[_PBLegacyUserProfileManagerBatchUpdater setUpdater:](v4, "setUpdater:", v3);

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue(-[_PBLegacyUserProfileManagerBatchUpdater errors](v4, "errors"));
  uint64_t v6 = objc_claimAutoreleasedReturnValue([v5 anyObject]);
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  int v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

uint64_t sub_1000CCEA4(uint64_t a1)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) == 0LL);
}

id sub_1000CD028(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  if (!a1)
  {
    uint64_t v10 = 0LL;
    goto LABEL_8;
  }

  if (!a3)
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Don't ignore the entitlement validation error."));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_10027D1E8();
    }
    _bs_set_crash_log_message([v14 UTF8String]);
    __break(0);
    JUMPOUT(0x1000CD198LL);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[BSServiceConnection currentContext](&OBJC_CLASS___BSServiceConnection, "currentContext"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 remoteProcess]);

  if (v7 && (unsigned int v8 = [v7 pid], v8 != getpid()))
  {
    if (![v7 hasEntitlement:v5])
    {
      id v12 = sub_100084680();
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_10027D290();
      }

      uint64_t v10 = 0LL;
      *a3 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  102LL,  0LL));
      goto LABEL_7;
    }

    id v9 = v7;
  }

  else
  {
    id v9 = (id)objc_claimAutoreleasedReturnValue(+[BSProcessHandle processHandle](&OBJC_CLASS___BSProcessHandle, "processHandle"));
  }

  uint64_t v10 = v9;
LABEL_7:

LABEL_8:
  return v10;
}

void sub_1000CD1A4(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) snapshot]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

uint64_t sub_1000CD338(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000CD358(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) snapshot]);
  (*(void (**)(uint64_t, void *, void))(v1 + 16))(v1, v2, 0LL);
}

void sub_1000CD538(uint64_t a1)
{
}

uint64_t sub_1000CD6B0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000CD6D0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(*(void *)(a1 + 32) + 24LL),  0LL);
}

uint64_t sub_1000CD920(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000CD940(void **a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    sub_1000CDA58((uint64_t)WeakRetained, a1[4], a1[5], a1[6]);
  }

  else
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000CD9F8;
    block[3] = &unk_1003D0110;
    id v7 = a1[6];
    dispatch_async(v5, block);
  }
}

void sub_1000CD9F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  100LL,  0LL));
  (*(void (**)(uint64_t, void *, void *))(v1 + 16))(v1, &__kCFBooleanFalse, v2);
}

void sub_1000CDA58(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    if (!v9)
    {
      id v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"completionHandler != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027D418();
      }
      _bs_set_crash_log_message([v30 UTF8String]);
      __break(0);
      JUMPOUT(0x1000CDF20LL);
    }

    id v10 = sub_100084680();
    __int128 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Selecting user profile. {identifier=%{public}@}",  (uint8_t *)&buf,  0xCu);
    }

    if (*(_BYTE *)(a1 + 8))
    {
      id v12 = *(dispatch_queue_s **)(a1 + 40);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000D111C;
      block[3] = &unk_1003D0110;
      id v43 = v9;
      dispatch_async(v12, block);
      uint64_t v13 = v43;
    }

    else if (v7)
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) selectedUserProfile]);
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v14 identifier]);

      if (BSEqualStrings(v7, v13))
      {
        uint64_t v15 = *(dispatch_queue_s **)(a1 + 40);
        v38[0] = _NSConcreteStackBlock;
        v38[1] = 3221225472LL;
        v38[2] = sub_1000D1288;
        v38[3] = &unk_1003D0110;
        id v39 = v9;
        dispatch_async(v15, v38);
        sub_1000D12B0(a1, 2LL);
      }

      else
      {
        if (_os_feature_enabled_impl("PineBoard", "UserProfileLanguages"))
        {
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) snapshot]);
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 selectedUserProfile]);
          double v19 = (void *)objc_claimAutoreleasedReturnValue([v17 userProfileWithIdentifier:v7]);
          __int16 v20 = (void *)objc_claimAutoreleasedReturnValue([v18 preferredLanguages]);
          int v21 = (void *)objc_claimAutoreleasedReturnValue([v19 preferredLanguages]);
          int v31 = BSEqualArrays(v20, v21);

          int v22 = v31 ^ 1;
        }

        else
        {
          int v22 = 0;
        }

        *(void *)&__int128 buf = 0LL;
        *((void *)&buf + 1) = &buf;
        uint64_t v45 = 0x2020000000LL;
        char v46 = 0;
        id v23 = *(void **)(a1 + 56);
        v37[0] = _NSConcreteStackBlock;
        v37[1] = 3221225472LL;
        v37[2] = sub_1000D139C;
        v37[3] = &unk_1003D5B60;
        v37[4] = &buf;
        [v23 updateUserProfileWithIdentifier:v7 usingBlock:v37];
        if (*(_BYTE *)(*((void *)&buf + 1) + 24LL))
        {
          sub_1000D13D4(a1);
          sub_1000D146C(a1, v7, v13);
          uint64_t v24 = *(dispatch_queue_s **)(a1 + 40);
          v35[0] = _NSConcreteStackBlock;
          v35[1] = 3221225472LL;
          v35[2] = sub_1000D16B0;
          v35[3] = &unk_1003D0110;
          id v36 = v9;
          dispatch_async(v24, v35);
          if (v22)
          {
            dispatch_time_t v25 = dispatch_time(0LL, 2000000000LL);
            id v26 = *(dispatch_queue_s **)(a1 + 32);
            v34[0] = _NSConcreteStackBlock;
            v34[1] = 3221225472LL;
            _DWORD v34[2] = sub_1000D16D8;
            v34[3] = &unk_1003CFF08;
            v34[4] = a1;
            dispatch_after(v25, v26, v34);
          }

          else
          {
            sub_1000D12B0(a1, 1LL);
          }

          id v29 = objc_alloc_init(&OBJC_CLASS___TVCSUserProfilesAnalyticsUserSwitchEvent);
          [v29 setLastSystemWakeDate:*(void *)(a1 + 176)];
          [v29 setClientBundleIdentifier:v8];
          TVCSUserProfilesAnalyticsSendEvent(v29);

          double v28 = &v36;
        }

        else
        {
          id v27 = *(dispatch_queue_s **)(a1 + 40);
          v32[0] = _NSConcreteStackBlock;
          v32[1] = 3221225472LL;
          id v32[2] = sub_1000D16F4;
          v32[3] = &unk_1003D0110;
          double v28 = &v33;
          id v33 = v9;
          dispatch_async(v27, v32);
        }

        _Block_object_dispose(&buf, 8);
      }
    }

    else
    {
      uint64_t v16 = *(dispatch_queue_s **)(a1 + 40);
      v40[0] = _NSConcreteStackBlock;
      v40[1] = 3221225472LL;
      v40[2] = sub_1000D1228;
      void v40[3] = &unk_1003D0110;
      id v41 = v9;
      dispatch_async(v16, v40);
      uint64_t v13 = v41;
    }
  }
}

void sub_1000CDF28(_Unwind_Exception *a1)
{
}

void sub_1000CE12C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

BOOL sub_1000CE150(uint64_t a1)
{
  BOOL result = sub_1000CE18C(*(void *)(a1 + 40), (uint64_t)[*(id *)(a1 + 32) integerValue]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = result;
  return result;
}

BOOL sub_1000CE18C(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 0LL;
  }
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
  if (a2 == 1)
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) snapshot]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 userProfiles]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 allValues]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "bs_filter:", &stru_1003D5BA0));

    id v9 = [v4 count];
    BOOL v5 = v9 < (id)+[PBLegacyUserProfileManager _maxNumberOfGuestUsers]( &OBJC_CLASS___PBLegacyUserProfileManager,  "_maxNumberOfGuestUsers");
    goto LABEL_6;
  }

  if (a2) {
    return 0LL;
  }
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) primaryUserProfile]);
  BOOL v5 = v4 == 0LL;
LABEL_6:

  return v5;
}

uint64_t sub_1000CE460(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000CE480(void **a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    sub_1000CE590((uint64_t)WeakRetained, a1[4], a1[5]);
  }

  else
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    BOOL v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000CE534;
    block[3] = &unk_1003D0110;
    id v7 = a1[5];
    dispatch_async(v5, block);
  }
}

void sub_1000CE534(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  100LL,  0LL));
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0LL, v2);
}

void sub_1000CE590(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    if (!v6)
    {
      dispatch_time_t v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"completionHandler != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027D558();
      }
      _bs_set_crash_log_message([v25 UTF8String]);
      __break(0);
      JUMPOUT(0x1000CEA40LL);
    }

    id v7 = sub_100084680();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Creating user profile. {attributes=%@}",  (uint8_t *)&buf,  0xCu);
    }

    if (*(_BYTE *)(a1 + 8))
    {
      id v9 = *(dispatch_queue_s **)(a1 + 40);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000D1774;
      block[3] = &unk_1003D0110;
      id v42 = v6;
      dispatch_async(v9, block);
    }

    else if (sub_1000CE18C(a1, (uint64_t)[v5 type]))
    {
      if ((sub_1000D1810(a1, v5) & 1) != 0)
      {
        *(void *)&__int128 buf = 0LL;
        *((void *)&buf + 1) = &buf;
        uint64_t v46 = 0x3032000000LL;
        __int128 v47 = sub_1000CCC2C;
        uint64_t v48 = sub_1000CCC3C;
        id v49 = 0LL;
        uint64_t v34 = 0LL;
        v35[0] = &v34;
        v35[1] = 0x3032000000LL;
        v35[2] = sub_1000CCC2C;
        v35[3] = sub_1000CCC3C;
        id v36 = 0LL;
        id v10 = *(void **)(a1 + 56);
        v30[0] = _NSConcreteStackBlock;
        v30[1] = 3221225472LL;
        v30[2] = sub_1000D1BC8;
        v30[3] = &unk_1003D5BC8;
        p___int128 buf = &buf;
        id v31 = v5;
        id v33 = &v34;
        [v10 performBatchUpdatesUsingBlock:v30];
        if (*(void *)(*((void *)&buf + 1) + 40LL))
        {
          id v11 = sub_100084680();
          id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v13 = *(void *)(*((void *)&buf + 1) + 40LL);
            *(_DWORD *)id v43 = 138412290;
            uint64_t v44 = v13;
            _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Created user profile. {userProfile=%@}",  v43,  0xCu);
          }

          sub_1000D13D4(a1);
          [*(id *)(a1 + 16) prefetchProfilePictureForUserProfile:*(void *)(*((void *)&buf + 1) + 40)];
          uint64_t v14 = *(dispatch_queue_s **)(a1 + 40);
          v28[0] = _NSConcreteStackBlock;
          v28[1] = 3221225472LL;
          v28[2] = sub_1000D1C3C;
          void v28[3] = &unk_1003D07B8;
          uint64_t v15 = (id *)v29;
          v29[0] = v6;
          v29[1] = &buf;
          uint64_t v16 = v28;
        }

        else
        {
          id v23 = sub_100084680();
          uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_10027D604((uint64_t)&buf + 8, (uint64_t)v35, v24);
          }

          uint64_t v14 = *(dispatch_queue_s **)(a1 + 40);
          v26[0] = _NSConcreteStackBlock;
          v26[1] = 3221225472LL;
          v26[2] = sub_1000D1C68;
          v26[3] = &unk_1003D07B8;
          uint64_t v15 = (id *)v27;
          v27[0] = v6;
          v27[1] = &v34;
          uint64_t v16 = v26;
        }

        dispatch_async(v14, v16);

        _Block_object_dispose(&v34, 8);
        _Block_object_dispose(&buf, 8);
      }

      else
      {
        id v20 = sub_100084680();
        int v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_10027D68C(v5, v21);
        }

        int v22 = *(dispatch_queue_s **)(a1 + 40);
        v37[0] = _NSConcreteStackBlock;
        v37[1] = 3221225472LL;
        v37[2] = sub_1000D1B6C;
        v37[3] = &unk_1003D0110;
        id v38 = v6;
        dispatch_async(v22, v37);
      }
    }

    else
    {
      id v17 = sub_100084680();
      uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_10027D70C(v5, v18);
      }

      double v19 = *(dispatch_queue_s **)(a1 + 40);
      v39[0] = _NSConcreteStackBlock;
      v39[1] = 3221225472LL;
      v39[2] = sub_1000D17B4;
      v39[3] = &unk_1003D0110;
      id v40 = v6;
      dispatch_async(v19, v39);
    }
  }
}

void sub_1000CEA48( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30)
{
}

uint64_t sub_1000CECB0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000CECD0(void **a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    sub_1000CEDE4((uint64_t)WeakRetained, a1[4], a1[5], a1[6]);
  }

  else
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000CED88;
    block[3] = &unk_1003D0110;
    id v7 = a1[6];
    dispatch_async(v5, block);
  }
}

void sub_1000CED88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  100LL,  0LL));
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0LL, v2);
}

void sub_1000CEDE4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    if (!v9)
    {
      __int128 v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"completionHandler != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027D78C();
      }
      _bs_set_crash_log_message([v32 UTF8String]);
      __break(0);
      JUMPOUT(0x1000CF2C4LL);
    }

    id v10 = sub_100084680();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543618;
      *(void *)&uint8_t buf[4] = v7;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Updating user profile. {identifier=%{public}@, attributes=%@}",  buf,  0x16u);
    }

    if (*(_BYTE *)(a1 + 8))
    {
      id v12 = *(dispatch_queue_s **)(a1 + 40);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000D1D3C;
      block[3] = &unk_1003D0110;
      id v51 = v9;
      dispatch_async(v12, block);

      goto LABEL_23;
    }

    if ((sub_1000D1C94(a1, v8) & 1) != 0)
    {
      *(void *)__int128 buf = 0LL;
      *(void *)&uint8_t buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x3032000000LL;
      double v59 = sub_1000CCC2C;
      uint64_t v60 = sub_1000CCC3C;
      id v61 = 0LL;
      uint64_t v42 = 0LL;
      id v43 = &v42;
      uint64_t v44 = 0x3032000000LL;
      uint64_t v45 = sub_1000CCC2C;
      uint64_t v46 = sub_1000CCC3C;
      id v47 = 0LL;
      uint64_t v13 = *(void **)(a1 + 56);
      v37[0] = _NSConcreteStackBlock;
      v37[1] = 3221225472LL;
      v37[2] = sub_1000D1DD8;
      v37[3] = &unk_1003D5BF0;
      id v40 = buf;
      id v14 = v7;
      id v38 = v14;
      id v15 = v8;
      id v39 = v15;
      id v41 = &v42;
      [v13 performBatchUpdatesUsingBlock:v37];
      if (!*(void *)(*(void *)&buf[8] + 40LL))
      {
        id v23 = sub_100084680();
        uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        {
          uint64_t v30 = *(void *)(*(void *)&buf[8] + 40LL);
          uint64_t v31 = v43[5];
          *(_DWORD *)uint64_t v52 = 138543874;
          id v53 = v14;
          __int16 v54 = 2112;
          uint64_t v55 = v30;
          __int16 v56 = 2112;
          uint64_t v57 = v31;
          _os_log_error_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "Failed to update user profile. {identifier=%{public}@, attributes=%@, error=%@}",  v52,  0x20u);
        }

        dispatch_time_t v25 = *(dispatch_queue_s **)(a1 + 40);
        v33[0] = _NSConcreteStackBlock;
        v33[1] = 3221225472LL;
        v33[2] = sub_1000D1E78;
        v33[3] = &unk_1003D07B8;
        id v26 = (id *)v34;
        v34[0] = v9;
        v34[1] = &v42;
        id v27 = v33;
        goto LABEL_22;
      }

      id v16 = sub_100084680();
      id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v18 = *(void *)(*(void *)&buf[8] + 40LL);
        *(_DWORD *)uint64_t v52 = 138543618;
        id v53 = v14;
        __int16 v54 = 2112;
        uint64_t v55 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Updated user profile. {identifier=%{public}@, userProfile=%@}",  v52,  0x16u);
      }

      sub_1000D13D4(a1);
      double v19 = (void *)objc_claimAutoreleasedReturnValue([v15 iCloudAltDSID]);
      if (v19)
      {
      }

      else
      {
        double v28 = (void *)objc_claimAutoreleasedReturnValue([v15 iTunesAltDSID]);
        BOOL v29 = v28 == 0LL;

        if (v29)
        {
LABEL_21:
          dispatch_time_t v25 = *(dispatch_queue_s **)(a1 + 40);
          v35[0] = _NSConcreteStackBlock;
          v35[1] = 3221225472LL;
          v35[2] = sub_1000D1E4C;
          v35[3] = &unk_1003D07B8;
          id v26 = (id *)v36;
          v36[0] = v9;
          v36[1] = buf;
          id v27 = v35;
LABEL_22:
          dispatch_async(v25, v27);

          _Block_object_dispose(&v42, 8);
          _Block_object_dispose(buf, 8);

          goto LABEL_23;
        }
      }

      [*(id *)(a1 + 16) prefetchProfilePictureForUserProfile:*(void *)(*(void *)&buf[8] + 40)];
      goto LABEL_21;
    }

    id v20 = sub_100084680();
    int v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_10027D838();
    }

    int v22 = *(dispatch_queue_s **)(a1 + 40);
    v48[0] = _NSConcreteStackBlock;
    v48[1] = 3221225472LL;
    v48[2] = sub_1000D1D7C;
    v48[3] = &unk_1003D0110;
    id v49 = v9;
    dispatch_async(v22, v48);
  }

LABEL_23:
}
}
}

  return v10;
}

  uint64_t v34 = sub_1000836CC();
  __int128 v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEBUG)) {
    sub_100289848(&responseFlags, v35);
  }

  if (responseFlags == 1)
  {
    __int128 v37 = 1;
    goto LABEL_30;
  }

  if (responseFlags) {
    goto LABEL_28;
  }
  id v36 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
  __int128 v37 = 1;
  [v36 setShouldAutomaticallyApplyUpdates:1];

LABEL_30:
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10018F07C;
  block[3] = &unk_1003D4980;
  id v41 = a1[6];
  uint64_t v42 = v37;
  dispatch_async(&_dispatch_main_q, block);
}

          goto LABEL_34;
        }

        uint64_t v46 = sub_1001D3A8C();
        id v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
        if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s primaryProfile](v13, "primaryProfile"));
          id v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "pb_identityLogString"));
          id v51 = 138544130;
          uint64_t v52 = v49;
          id v53 = 2114;
          __int16 v54 = (uint64_t)v4;
          uint64_t v55 = 2160;
          __int16 v56 = 1752392040LL;
          uint64_t v57 = 2112;
          id v58 = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "Assigning added iTunes account to the primary user. {identity=%{public}@, accountIdentifier=%{public}@, iTun esAltDSID=%{mask.hash}@}",  (uint8_t *)&v51,  0x2Au);
        }

        uint64_t v45 = objc_claimAutoreleasedReturnValue(-[os_log_s primaryProfile](v13, "primaryProfile"));
      }

      id v50 = (void *)v45;
      -[PBProfileAccountsController _assignITunesAltDSID:toProfile:](self, "_assignITunesAltDSID:toProfile:", v9, v45);

      goto LABEL_34;
    }

    uint64_t v31 = sub_1001D3A8C();
    uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      sub_100290320(v30, v32, v33, v34, v35, v36, v37, v38);
    }
    goto LABEL_23;
  }

  id v15 = sub_1001D3A8C();
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    id v51 = 138543874;
    uint64_t v52 = v4;
    id v53 = 2160;
    __int16 v54 = 1752392040LL;
    uint64_t v55 = 2112;
    __int16 v56 = (uint64_t)v9;
    id v14 = "Skipping did add iTunes account notification, failed to find iTunes account. {accountIdentifier=%{public}@, iT"
          "unesAltDSID=%{mask.hash}@}";
    goto LABEL_10;
  }

    id v9 = (v15 - 1) & v15;
    uint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    id v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    double v19 = v17[1];
    Hasher.init(_seed:)(v32, v8[5]);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(v32, v18, v19);
    uint64_t result = Hasher._finalize()();
    id v20 = -1LL << *((_BYTE *)v8 + 32);
    int v21 = result & ~v20;
    int v22 = v21 >> 6;
    if (((-1LL << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      id v23 = __clz(__rbit64((-1LL << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v24 = 0;
      dispatch_time_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }

        id v26 = v22 == v25;
        if (v22 == v25) {
          int v22 = 0LL;
        }
        v24 |= v26;
        id v27 = *(void *)(v11 + 8 * v22);
      }

      while (v27 == -1);
      id v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }

    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v23;
    double v28 = (void *)(v8[6] + 16 * v23);
    *double v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1LL))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (!v5) {
      goto LABEL_36;
    }
  }

  id v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  id v15 = a1[v16];
  if (v15)
  {
    id v10 = v16;
    goto LABEL_23;
  }

  while (1)
  {
    id v10 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    id v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }

    id v10 = (v16 - 1) & v16;
    id v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = v9[5];
    double v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    id v20 = -1LL << *((_BYTE *)v9 + 32);
    int v21 = result & ~v20;
    int v22 = v21 >> 6;
    if (((-1LL << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      id v23 = __clz(__rbit64((-1LL << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v24 = 0;
      dispatch_time_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }

        id v26 = v22 == v25;
        if (v22 == v25) {
          int v22 = 0LL;
        }
        v24 |= v26;
        id v27 = *(void *)(v12 + 8 * v22);
      }

      while (v27 == -1);
      id v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }

    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1LL))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (!v5) {
      goto LABEL_36;
    }
  }

  id v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  id v16 = v29[v17];
  if (v16)
  {
    id v11 = v17;
    goto LABEL_23;
  }

  while (1)
  {
    id v11 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    id v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }

    id v7 = (v18 - 1) & v18;
    id v10 = __clz(__rbit64(v18)) + (v19 << 6);
    id v8 = v19;
  }

  id v20 = v8 + 5;
  if (v8 + 5 >= v34)
  {
LABEL_38:
    sub_100216C24(a1);
    return;
  }

  uint64_t v18 = *(void *)(v4 + 8 * v20);
  if (v18)
  {
    double v19 = v8 + 5;
    goto LABEL_23;
  }

  while (1)
  {
    double v19 = v20 + 1;
    if (__OFADD__(v20, 1LL)) {
      break;
    }
    if (v19 >= v34) {
      goto LABEL_38;
    }
    uint64_t v18 = *(void *)(v4 + 8 * v19);
    ++v20;
    if (v18) {
      goto LABEL_23;
    }
  }

      __break(1u);
      goto LABEL_24;
    }

    __break(1u);
    goto LABEL_23;
  }

  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }

  if (a4 < 0) {
    id v8 = a4;
  }
  else {
    id v8 = a4 & 0xFFFFFFFFFFFFFF8LL;
  }
  id v9 = __CocoaSet.element(at:)(a1, a2, v8);
  int v21 = v9;
  id v10 = sub_100225BDC(0LL, &qword_10046EF98, off_1003CD9E0);
  swift_unknownObjectRetain(v9);
  swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v10, 7LL);
  swift_unknownObjectRelease(v9);
}

    id v15 = (v25 - 1) & v25;
    int v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_24:
    id v27 = (uint64_t *)(*(void *)(v9 + 48) + 16 * v22);
    BOOL v29 = *v27;
    double v28 = v27[1];
    uint64_t v30 = *(void *)(v43 + 72);
    uint64_t v31 = *(void *)(v9 + 56) + v30 * v22;
    if ((v44 & 1) != 0)
    {
      sub_100225448(v31, (uint64_t)v8);
    }

    else
    {
      sub_10022311C(v31, (uint64_t)v8);
      swift_bridgeObjectRetain(v28);
    }

    Hasher.init(_seed:)(v45, *(void *)(v11 + 40));
    String.hash(into:)(v45, v29, v28);
    uint64_t result = Hasher._finalize()();
    __int128 v32 = -1LL << *(_BYTE *)(v11 + 32);
    id v33 = result & ~v32;
    uint64_t v34 = v33 >> 6;
    if (((-1LL << v33) & ~*(void *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      double v19 = __clz(__rbit64((-1LL << v33) & ~*(void *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      __int128 v35 = 0;
      id v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }

        __int128 v37 = v34 == v36;
        if (v34 == v36) {
          uint64_t v34 = 0LL;
        }
        v35 |= v37;
        id v38 = *(void *)(v16 + 8 * v34);
      }

      while (v38 == -1);
      double v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }

    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v19;
    id v20 = (void *)(*(void *)(v11 + 48) + 16 * v19);
    *id v20 = v29;
    v20[1] = v28;
    uint64_t result = sub_100225448((uint64_t)v8, *(void *)(v11 + 56) + v30 * v19);
    ++*(void *)(v11 + 16);
  }

  swift_release(v9);
  uint64_t v3 = v40;
  uint64_t v24 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  id v39 = 1LL << *(_BYTE *)(v9 + 32);
  if (v39 >= 64) {
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *uint64_t v24 = -1LL << v39;
  }
  *(void *)(v9 + 16) = 0LL;
LABEL_43:
  uint64_t result = swift_release(v9);
  *uint64_t v3 = v11;
  return result;
}

    id v14 = (v23 - 1) & v23;
    int v21 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    dispatch_time_t v25 = *(void *)(v8 + 56);
    id v26 = v8;
    id v27 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    BOOL v29 = *v27;
    double v28 = v27[1];
    uint64_t v30 = *(void *)(v6 + 72);
    uint64_t v31 = v25 + v30 * v21;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v45, v31, v46);
    }

    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v45, v31, v46);
      swift_bridgeObjectRetain(v28);
    }

    Hasher.init(_seed:)(v47, *(void *)(v10 + 40));
    String.hash(into:)(v47, v29, v28);
    uint64_t result = Hasher._finalize()();
    __int128 v32 = -1LL << *(_BYTE *)(v10 + 32);
    id v33 = result & ~v32;
    uint64_t v34 = v33 >> 6;
    if (((-1LL << v33) & ~*(void *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      uint64_t v18 = __clz(__rbit64((-1LL << v33) & ~*(void *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      __int128 v35 = 0;
      id v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }

        __int128 v37 = v34 == v36;
        if (v34 == v36) {
          uint64_t v34 = 0LL;
        }
        v35 |= v37;
        id v38 = *(void *)(v15 + 8 * v34);
      }

      while (v38 == -1);
      uint64_t v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }

    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v18;
    double v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    void *v19 = v29;
    v19[1] = v28;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))( *(void *)(v10 + 56) + v30 * v18,  v45,  v46);
    ++*(void *)(v10 + 16);
    id v8 = v26;
  }

  uint64_t v24 = v22 + 2;
  if (v24 < v42)
  {
    id v23 = v43[v24];
    if (!v23)
    {
      while (1)
      {
        id v17 = v24 + 1;
        if (__OFADD__(v24, 1LL)) {
          goto LABEL_43;
        }
        if (v17 >= v42) {
          goto LABEL_36;
        }
        id v23 = v43[v17];
        ++v24;
        if (v23) {
          goto LABEL_23;
        }
      }
    }

    id v17 = v24;
    goto LABEL_23;
  }

    mach_msg_destroy(&msg);
    return v12;
  }

  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

void sub_1000CF2CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

uint64_t sub_1000CF504(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000CF524(void **a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    sub_1000CF638((uint64_t)WeakRetained, a1[4], a1[5]);
  }

  else
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000CF5D8;
    block[3] = &unk_1003D0110;
    id v7 = a1[5];
    dispatch_async(v5, block);
  }
}

void sub_1000CF5D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  100LL,  0LL));
  (*(void (**)(uint64_t, void *, void *))(v1 + 16))(v1, &__kCFBooleanFalse, v2);
}

void sub_1000CF638(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    if (!v6)
    {
      id v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"completionHandler != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027D898();
      }
      _bs_set_crash_log_message([v15 UTF8String]);
      __break(0);
      JUMPOUT(0x1000CF92CLL);
    }

    id v7 = sub_100084680();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Removing user profile. {identifier=%{public}@}",  (uint8_t *)&buf,  0xCu);
    }

    if (*(_BYTE *)(a1 + 8))
    {
      id v9 = *(dispatch_queue_s **)(a1 + 40);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000D1EA4;
      block[3] = &unk_1003D0110;
      id v26 = v6;
      dispatch_async(v9, block);
    }

    else if (v5)
    {
      *(void *)&__int128 buf = 0LL;
      *((void *)&buf + 1) = &buf;
      uint64_t v28 = 0x2020000000LL;
      id v10 = *(void **)(a1 + 56);
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472LL;
      void v20[2] = sub_1000D1F48;
      v20[3] = &unk_1003D5C18;
      id v21 = v5;
      p___int128 buf = &buf;
      [v10 performBatchUpdatesUsingBlock:v20];
      if (*(_BYTE *)(*((void *)&buf + 1) + 24LL))
      {
        sub_1000D13D4(a1);
        id v11 = *(dispatch_queue_s **)(a1 + 40);
        v16[0] = _NSConcreteStackBlock;
        v16[1] = 3221225472LL;
        _DWORD v16[2] = sub_1000D202C;
        void v16[3] = &unk_1003D0110;
        id v12 = &v17;
        id v17 = v6;
        uint64_t v13 = v16;
      }

      else
      {
        id v11 = *(dispatch_queue_s **)(a1 + 40);
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3221225472LL;
        _DWORD v18[2] = sub_1000D1FCC;
        v18[3] = &unk_1003D0110;
        id v12 = &v19;
        id v19 = v6;
        uint64_t v13 = v18;
      }

      dispatch_async(v11, v13);

      _Block_object_dispose(&buf, 8);
    }

    else
    {
      id v14 = *(dispatch_queue_s **)(a1 + 40);
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472LL;
      v23[2] = sub_1000D1EE8;
      v23[3] = &unk_1003D0110;
      id v24 = v6;
      dispatch_async(v14, v23);
    }
  }
}

void sub_1000CF934(_Unwind_Exception *a1)
{
}

uint64_t sub_1000CFAFC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000CFB1C(void **a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    sub_1000CFC2C((uint64_t)WeakRetained, a1[4], a1[5]);
  }

  else
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000CFBD0;
    block[3] = &unk_1003D0110;
    id v7 = a1[5];
    dispatch_async(v5, block);
  }
}

void sub_1000CFBD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  100LL,  0LL));
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0LL, v2);
}

void sub_1000CFC2C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void (**)(void, void, void))v6;
  if (!a1) {
    goto LABEL_4;
  }
  if (v6)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    uint64_t v18 = 0LL;
    id v19 = &v18;
    uint64_t v20 = 0x3032000000LL;
    id v21 = sub_1000CCC2C;
    int v22 = sub_1000CCC3C;
    id v23 = 0LL;
    uint64_t v12 = 0LL;
    uint64_t v13 = &v12;
    uint64_t v14 = 0x3032000000LL;
    id v15 = sub_1000CCC2C;
    id v16 = sub_1000CCC3C;
    id v17 = 0LL;
    id v8 = *(dispatch_queue_s **)(a1 + 128);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000D2054;
    block[3] = &unk_1003D5C40;
    void block[4] = a1;
    void block[5] = &v18;
    block[6] = &v12;
    dispatch_sync(v8, block);
    id v9 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 56) userProfileIdentifierForHomeUserIdentifier:v5 inHomeIdentifier:v19[5] homeOwnerIdentifier:v13[5]]);
    ((void (**)(void, void *, void))v7)[2](v7, v9, 0LL);

    _Block_object_dispose(&v12, 8);
    _Block_object_dispose(&v18, 8);

LABEL_4:
    return;
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"completionHandler != nil"));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_10027D9AC();
  }
  _bs_set_crash_log_message([v10 UTF8String]);
  __break(0);
}

void sub_1000CFDD0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1000D0038(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000D0058(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    sub_1000D016C((uint64_t)WeakRetained, *(void *)(a1 + 56), *(void **)(a1 + 32), *(void **)(a1 + 40));
  }

  else
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000D0110;
    block[3] = &unk_1003D0110;
    id v7 = *(id *)(a1 + 40);
    dispatch_async(v5, block);
  }
}

void sub_1000D0110(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  100LL,  0LL));
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0LL, v2);
}

void sub_1000D016C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    if (!v8)
    {
      uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"completionHandler != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027DA58();
      }
      _bs_set_crash_log_message([v31 UTF8String]);
      __break(0);
      JUMPOUT(0x1000D0630LL);
    }

    id v9 = sub_100084680();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543618;
      *(void *)&uint8_t buf[4] = v7;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Updating user profile group recommendations consent. {identifier=%{public}@, consent=%ld}",  buf,  0x16u);
    }

    *(void *)__int128 buf = 0LL;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000LL;
    __int16 v56 = sub_1000CCC2C;
    uint64_t v57 = sub_1000CCC3C;
    id v58 = 0LL;
    uint64_t v43 = 0LL;
    uint64_t v44 = &v43;
    uint64_t v45 = 0x3032000000LL;
    uint64_t v46 = sub_1000CCC2C;
    id v47 = sub_1000CCC3C;
    id v48 = 0LL;
    id v11 = *(void **)(a1 + 56);
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472LL;
    v38[2] = sub_1000D2140;
    v38[3] = &unk_1003D5C88;
    id v40 = buf;
    id v12 = v7;
    id v41 = &v43;
    uint64_t v42 = a2;
    id v39 = v12;
    [v11 performBatchUpdatesUsingBlock:v38];
    if (*(void *)(*(void *)&buf[8] + 40LL))
    {
      id v13 = sub_100084680();
      uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v15 = *(void *)(*(void *)&buf[8] + 40LL);
        *(_DWORD *)id v49 = 138543874;
        id v50 = v12;
        __int16 v51 = 2048;
        uint64_t v52 = a2;
        __int16 v53 = 2112;
        uint64_t v54 = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Updated user profile group recommendations consent. {identifier=%{public}@, consent=%ld, userProfile=%@}",  v49,  0x20u);
      }

      sub_1000D13D4(a1);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) snapshot]);
      id v17 = v16;
      if (a2 == 1)
      {
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v16 selectedUserProfileIdentifier]);
        unsigned int v19 = [v12 isEqual:v18];

        if (v19)
        {
          id v20 = sub_100084680();
          id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)id v49 = 138543362;
            id v50 = v12;
            _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Adding current user to group session since they just opted-in. {identifier=%{public}@}",  v49,  0xCu);
          }

          int v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 24) userIdentifiers]);
          if (v22)
          {
            id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 24) userIdentifiers]);
            id v24 = (NSMutableSet *)[v23 mutableCopy];
          }

          else
          {
            id v24 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
          }

          -[NSMutableSet addObject:](v24, "addObject:", v12);
          uint64_t v28 = -[PBSGroupRecommendationsSession initWithUserIdentifiers:userProfilesSnapshot:]( objc_alloc(&OBJC_CLASS___PBSGroupRecommendationsSession),  "initWithUserIdentifiers:userProfilesSnapshot:",  v24,  v17);
          objc_storeStrong((id *)(a1 + 24), v28);
          sub_1000D2200((dispatch_queue_t *)a1);
        }
      }

      BOOL v29 = *(dispatch_queue_s **)(a1 + 40);
      v35[0] = _NSConcreteStackBlock;
      v35[1] = 3221225472LL;
      v35[2] = sub_1000D23D4;
      v35[3] = &unk_1003D07B8;
      id v36 = v8;
      __int128 v37 = buf;
      dispatch_async(v29, v35);
    }

    else
    {
      id v25 = sub_100084680();
      id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        uint64_t v30 = v44[5];
        *(_DWORD *)id v49 = 138543874;
        id v50 = v12;
        __int16 v51 = 2048;
        uint64_t v52 = a2;
        __int16 v53 = 2112;
        uint64_t v54 = v30;
        _os_log_error_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_ERROR,  "Failed to update the user profile group recommendations consent. {identifier=%{public}@, consent=%ld, error=%@}",  v49,  0x20u);
      }

      id v27 = *(dispatch_queue_s **)(a1 + 40);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000D2400;
      block[3] = &unk_1003D07B8;
      id v33 = v8;
      uint64_t v34 = &v43;
      dispatch_async(v27, block);
      id v17 = v33;
    }

    _Block_object_dispose(&v43, 8);
    _Block_object_dispose(buf, 8);
  }
}

void sub_1000D0638( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

uint64_t sub_1000D0888(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000D08A8(void **a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    sub_1000D09B8((uint64_t)WeakRetained, a1[4], a1[5]);
  }

  else
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000D095C;
    block[3] = &unk_1003D0110;
    id v7 = a1[5];
    dispatch_async(v5, block);
  }
}

void sub_1000D095C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  100LL,  0LL));
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0LL, v2);
}

void sub_1000D09B8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    if (!v6)
    {
      uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"completionHandler != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027DB04();
      }
      _bs_set_crash_log_message([v30 UTF8String]);
      __break(0);
      JUMPOUT(0x1000D0E10LL);
    }

    id v7 = sub_100084680();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v40 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Updating group recommendations session. {userIdentifiers=%{public}@}",  buf,  0xCu);
    }

    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472LL;
    void v36[2] = sub_1000D242C;
    v36[3] = &unk_1003D5CB0;
    v36[4] = a1;
    id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bs_filter:", v36));
    if ([v9 isEqual:v5])
    {
      id v10 = objc_alloc(&OBJC_CLASS___PBSGroupRecommendationsSession);
      id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) snapshot]);
      id v12 = -[PBSGroupRecommendationsSession initWithUserIdentifiers:userProfilesSnapshot:]( v10,  "initWithUserIdentifiers:userProfilesSnapshot:",  v5,  v11);

      if (-[PBSGroupRecommendationsSession isEqual:](v12, "isEqual:", *(void *)(a1 + 24)))
      {
        id v13 = sub_100084680();
        uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[PBSGroupRecommendationsSession userIdentifiers](v12, "userIdentifiers"));
          *(_DWORD *)__int128 buf = 138543362;
          id v40 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "New group recomendatons session is equal to the current session, observers won't be notified. {userIdentifiers=%{public}@}",  buf,  0xCu);
        }
      }

      else
      {
        id v23 = *(void **)(a1 + 56);
        id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 selectedUserProfile]);
        id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 identifier]);
        [v23 setLastGroupRecommendationsSession:v12 forUserWithIdentifier:v25];

        [*(id *)(a1 + 56) save];
        id v26 = sub_100084680();
        id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(-[PBSGroupRecommendationsSession userIdentifiers](v12, "userIdentifiers"));
          *(_DWORD *)__int128 buf = 138543362;
          id v40 = v28;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Updated group recommendations session. {userIdentifiers=%{public}@}",  buf,  0xCu);
        }

        objc_storeStrong((id *)(a1 + 24), v12);
        sub_1000D2200((dispatch_queue_t *)a1);
      }

      BOOL v29 = *(dispatch_queue_s **)(a1 + 40);
      v31[0] = _NSConcreteStackBlock;
      v31[1] = 3221225472LL;
      v31[2] = sub_1000D24CC;
      v31[3] = &unk_1003D2560;
      v31[4] = a1;
      id v32 = v6;
      dispatch_async(v29, v31);
      id v22 = v32;
    }

    else
    {
      id v12 = (PBSGroupRecommendationsSession *)[v5 mutableCopy];
      -[PBSGroupRecommendationsSession minusSet:](v12, "minusSet:", v9);
      id v16 = sub_100084770();
      id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_10027DBAC();
      }

      uint64_t v18 = PBSUserProfileServiceErrorDomain;
      NSErrorUserInfoKey v37 = NSDebugDescriptionErrorKey;
      id v38 = @"The set of users for group recommendations session is invalid.";
      unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v38,  &v37,  1LL));
      id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v18,  400LL,  v19));

      id v21 = *(dispatch_queue_s **)(a1 + 40);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000D24A8;
      block[3] = &unk_1003D2560;
      id v34 = v20;
      id v35 = v6;
      id v22 = v20;
      dispatch_async(v21, block);
    }
  }
}

void sub_1000D111C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = sub_1000D1160();
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  (*(void (**)(uint64_t, void *, void *))(v1 + 16))(v1, &__kCFBooleanFalse, v3);
}

id sub_1000D1160()
{
  uint64_t v0 = PBSUserProfileServiceErrorDomain;
  NSErrorUserInfoKey v4 = NSDebugDescriptionErrorKey;
  id v5 = @"The user profile service is performing a migration.";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v0,  103LL,  v1));

  return v2;
}

void sub_1000D1228(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  200LL,  0LL));
  (*(void (**)(uint64_t, void *, void *))(v1 + 16))(v1, &__kCFBooleanFalse, v2);
}

uint64_t sub_1000D1288(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000D12B0(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    NSErrorUserInfoKey v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) snapshot]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 selectedUserProfile]);
    if (v5)
    {
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472LL;
      v7[2] = sub_1000D3834;
      void v7[3] = &unk_1003D17A8;
      uint64_t v11 = a2;
      id v8 = v4;
      id v9 = v5;
      uint64_t v10 = a1;
      BOOL v12 = a2 == 0;
      id v6 = objc_retainBlock(v7);
      ((void (*)(void))v6[2])();
    }

    else
    {
      sub_1000D37D8(a1);
    }
  }

id sub_1000D139C(uint64_t a1, void *a2)
{
  id result = [a2 setSelected:1];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
  return result;
}

void sub_1000D13D4(uint64_t a1)
{
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    [*(id *)(a1 + 56) save];
    sub_1000D94F8((dispatch_queue_t *)a1);
    id v2 = *(void **)(a1 + 24);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) snapshot]);
    NSErrorUserInfoKey v4 = (void *)objc_claimAutoreleasedReturnValue([v2 updatedSessionWithUserProfilesSnapshot:v3]);

    if (([v4 isEqual:*(void *)(a1 + 24)] & 1) == 0)
    {
      objc_storeStrong((id *)(a1 + 24), v4);
      sub_1000D2200((dispatch_queue_t *)a1);
    }
  }

void sub_1000D146C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (a1)
  {
    id v17 = v6;
    id v8 = v5;
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    __int128 v26 = 0u;
    __int128 v27 = 0u;
    id v9 = *(id *)(a1 + 64);
    id v10 = [v9 countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v27;
      do
      {
        for (i = 0LL; i != v11; i = (char *)i + 1)
        {
          if (*(void *)v27 != v12) {
            objc_enumerationMutation(v9);
          }
          uint64_t v14 = *(void *)(*((void *)&v26 + 1) + 8LL * (void)i);
          if ((objc_opt_respondsToSelector( v14,  "userProfileManager:didSwitchToUserWithIdentifier:previousUserIdentifier:") & 1) != 0)
          {
            objc_initWeak(&location, (id)a1);
            uint64_t v15 = *(dispatch_queue_s **)(a1 + 40);
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472LL;
            block[2] = sub_1000D995C;
            block[3] = &unk_1003D03C8;
            objc_copyWeak(&v24, &location);
            void block[4] = v14;
            id v22 = v8;
            id v23 = v17;
            dispatch_async(v15, block);

            objc_destroyWeak(&v24);
            objc_destroyWeak(&location);
          }
        }

        id v11 = [v9 countByEnumeratingWithState:&v26 objects:v30 count:16];
      }

      while (v11);
    }

    id v16 = *(void **)(a1 + 88);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    _DWORD v18[2] = sub_1000D999C;
    v18[3] = &unk_1003D6158;
    void v18[4] = a1;
    id v5 = v8;
    id v19 = v8;
    id v7 = v17;
    id v20 = v17;
    [v16 enumerateKeysAndObjectsUsingBlock:v18];
  }
}

uint64_t sub_1000D16B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000D16D8(uint64_t a1)
{
}

void sub_1000D16F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  200LL,  0LL));
  (*(void (**)(uint64_t, void *, void *))(v1 + 16))(v1, &__kCFBooleanFalse, v2);
}

BOOL sub_1000D1754(id a1, PBSUserProfile *a2)
{
  return -[PBSUserProfile type](a2, "type") == (id)1;
}

void sub_1000D1774(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = sub_1000D1160();
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0LL, v3);
}

void sub_1000D17B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  104LL,  0LL));
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0LL, v2);
}

uint64_t sub_1000D1810(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!a1)
  {
    uint64_t v10 = 0LL;
    goto LABEL_18;
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
  id v4 = sub_100084680();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v30 = 138412290;
    id v31 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Validating create user attributes {attributes=%@}",  (uint8_t *)&v30,  0xCu);
  }

  uint64_t v6 = objc_claimAutoreleasedReturnValue([v3 preferredLanguages]);
  if (v6)
  {
    id v7 = (void *)v6;
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 preferredInputModes]);

    if (!v8)
    {
      id v21 = objc_alloc(&OBJC_CLASS___TVCSPreferredLanguagesManager);
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v3 preferredLanguages]);
      id v13 = [v21 initWithLanguages:v22 inputModes:0 updateFromPreferences:0];

      id v23 = (void *)objc_claimAutoreleasedReturnValue([v13 preferredInputModes]);
      id v24 = [v23 count];

      if (!v24)
      {
        id v29 = sub_100084680();
        id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_10027DC4C(v3, v17);
        }
        uint64_t v10 = 0LL;
        goto LABEL_17;
      }

      id v25 = (void *)objc_claimAutoreleasedReturnValue([v13 preferredLanguages]);
      [v3 setPreferredLanguages:v25];

      __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v13 preferredInputModeList]);
      [v3 setPreferredInputModes:v26];

      id v27 = sub_100084680();
      id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
LABEL_16:
        uint64_t v10 = 1LL;
LABEL_17:

        goto LABEL_18;
      }

      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v3 preferredLanguages]);
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v3 preferredInputModes]);
      int v30 = 138543618;
      id v31 = v18;
      __int16 v32 = 2114;
      id v33 = v19;
      id v20 = "Calculated new input modes from language list {inputModes=%{public}@, languages=%{public}@}";
LABEL_15:
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, v20, (uint8_t *)&v30, 0x16u);

      goto LABEL_16;
    }
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 preferredLanguages]);

  if (!v9)
  {
    id v11 = sub_100084680();
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_10027DC0C(v12);
    }

    id v13 = (id)objc_claimAutoreleasedReturnValue( +[TVCSPreferredLanguagesManager sharedInstance]( &OBJC_CLASS___TVCSPreferredLanguagesManager,  "sharedInstance"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 preferredLanguages]);
    [v3 setPreferredLanguages:v14];

    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v13 preferredInputModeList]);
    [v3 setPreferredInputModes:v15];

    id v16 = sub_100084680();
    id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_16;
    }
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v3 preferredLanguages]);
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v3 preferredInputModes]);
    int v30 = 138543618;
    id v31 = v18;
    __int16 v32 = 2114;
    id v33 = v19;
    id v20 = "Default input modes and languages {inputModes=%{public}@, languages=%{public}@}";
    goto LABEL_15;
  }

  uint64_t v10 = 1LL;
LABEL_18:

  return v10;
}

void sub_1000D1B6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  300LL,  0LL));
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0LL, v2);
}

void sub_1000D1BC8(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  uint64_t v4 = *(void *)(a1[6] + 8LL);
  id obj = *(id *)(v4 + 40);
  uint64_t v5 = objc_claimAutoreleasedReturnValue([a2 createUserProfileWithAttributes:v3 error:&obj]);
  objc_storeStrong((id *)(v4 + 40), obj);
  uint64_t v6 = *(void *)(a1[5] + 8LL);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

uint64_t sub_1000D1C3C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL),  0LL);
}

uint64_t sub_1000D1C68(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  0LL,  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
}

uint64_t sub_1000D1C94(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 preferredLanguages]);
    if (v4
      && (uint64_t v5 = (void *)v4,
          uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 preferredInputModes]),
          v6,
          v5,
          !v6))
    {
      id v7 = sub_100084680();
      id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_10027DCD0();
      }

      a1 = 0LL;
    }

    else
    {
      a1 = 1LL;
    }
  }

  return a1;
}

void sub_1000D1D3C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = sub_1000D1160();
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0LL, v3);
}

void sub_1000D1D7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  300LL,  0LL));
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0LL, v2);
}

void sub_1000D1DD8(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = *(void *)(a1[7] + 8LL);
  id obj = *(id *)(v5 + 40);
  uint64_t v6 = objc_claimAutoreleasedReturnValue([a2 updateUserProfileWithIdentifier:v3 attributes:v4 error:&obj]);
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(a1[6] + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

uint64_t sub_1000D1E4C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL),  0LL);
}

uint64_t sub_1000D1E78(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  0LL,  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
}

void sub_1000D1EA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = sub_1000D1160();
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  (*(void (**)(uint64_t, void *, void *))(v1 + 16))(v1, &__kCFBooleanFalse, v3);
}

void sub_1000D1EE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  200LL,  0LL));
  (*(void (**)(uint64_t, void *, void *))(v1 + 16))(v1, &__kCFBooleanFalse, v2);
}

void sub_1000D1F48(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 userProfiles]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:*(void *)(a1 + 32)]);

  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = v5 != 0LL;
  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL)) {
    [v3 removeUserProfileWithIdentifier:*(void *)(a1 + 32)];
  }
}

void sub_1000D1FCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSUserProfileServiceErrorDomain,  200LL,  0LL));
  (*(void (**)(uint64_t, void *, void *))(v1 + 16))(v1, &__kCFBooleanFalse, v2);
}

uint64_t sub_1000D202C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000D2054(uint64_t a1)
{
  id v2 = sub_1000D20F0(*(dispatch_queue_t **)(a1 + 32));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 uniqueIdentifier]);
  id v5 = [v4 copy];
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 owner]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 uniqueIdentifier]);
  id v10 = [v9 copy];
  uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v10;
}

id *sub_1000D20F0(dispatch_queue_t *a1)
{
  uint64_t v1 = (id *)a1;
  if (a1)
  {
    dispatch_assert_queue_V2(a1[16]);
    id v2 = (void *)objc_claimAutoreleasedReturnValue([v1[17] selfAccessory]);
    uint64_t v1 = (id *)objc_claimAutoreleasedReturnValue([v2 home]);
  }

  return v1;
}

void sub_1000D2140(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_1000D21E4;
  void v10[3] = &unk_1003D5C60;
  uint64_t v4 = a1[6];
  void v10[4] = a1[7];
  uint64_t v5 = *(void *)(v4 + 8);
  id obj = *(id *)(v5 + 40);
  v10[0] = _NSConcreteStackBlock;
  uint64_t v6 = objc_claimAutoreleasedReturnValue([a2 updateUserProfileWithIdentifier:v3 usingBlock:v10 error:&obj]);
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(a1[5] + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

id sub_1000D21E4(uint64_t a1, void *a2)
{
  return [a2 setGroupRecommendationsConsent:*(void *)(a1 + 32)];
}

dispatch_queue_t *sub_1000D2200(dispatch_queue_t *result)
{
  if (result)
  {
    uint64_t v1 = result;
    dispatch_assert_queue_V2(result[4]);
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    id v2 = v1[8];
    id v3 = -[dispatch_queue_s countByEnumeratingWithState:objects:count:]( v2,  "countByEnumeratingWithState:objects:count:",  &v14,  v18,  16LL);
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v15;
      do
      {
        for (i = 0LL; i != v4; i = (char *)i + 1)
        {
          if (*(void *)v15 != v5) {
            objc_enumerationMutation(v2);
          }
          uint64_t v7 = *(void *)(*((void *)&v14 + 1) + 8LL * (void)i);
          if ((objc_opt_respondsToSelector(v7, "userProfileManager:didUpdateGroupRecommendationsSession:") & 1) != 0)
          {
            objc_initWeak(&location, v1);
            id v8 = v1[5];
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472LL;
            block[2] = sub_1000D9800;
            block[3] = &unk_1003D0378;
            objc_copyWeak(&v12, &location);
            void block[4] = v7;
            void block[5] = v1;
            dispatch_async(v8, block);
            objc_destroyWeak(&v12);
            objc_destroyWeak(&location);
          }
        }

        id v4 = -[dispatch_queue_s countByEnumeratingWithState:objects:count:]( v2,  "countByEnumeratingWithState:objects:count:",  &v14,  v18,  16LL);
      }

      while (v4);
    }

    dispatch_queue_t v9 = v1[10];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    _DWORD v10[2] = sub_1000D9840;
    void v10[3] = &unk_1003D6130;
    void v10[4] = v1;
    return (dispatch_queue_t *)-[dispatch_queue_s enumerateKeysAndObjectsUsingBlock:]( v9,  "enumerateKeysAndObjectsUsingBlock:",  v10);
  }

  return result;
}

uint64_t sub_1000D23D4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL),  0LL);
}

uint64_t sub_1000D2400(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  0LL,  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
}

BOOL sub_1000D242C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 56LL);
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 snapshot]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 userProfileWithIdentifier:v3]);

  if (v5) {
    BOOL v6 = [v5 groupRecommendationsConsent] == (id)1;
  }
  else {
    BOOL v6 = 0LL;
  }

  return v6;
}

uint64_t sub_1000D24A8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  0LL,  *(void *)(a1 + 32));
}

uint64_t sub_1000D24CC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(*(void *)(a1 + 32) + 24LL),  0LL);
}

void sub_1000D2E40( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
}

void sub_1000D2EAC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = *(id *)(a1 + 32);
    objc_sync_enter(v7);
    id v8 = objc_alloc(&OBJC_CLASS___PBSUserProfile);
    dispatch_queue_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 UUIDString]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "ams_altDSID"));
    char v12 = *(_BYTE *)(a1 + 80);
    if (v12) {
      char v12 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL) == 0LL;
    }
    LOBYTE(v16) = v12;
    id v13 = -[PBSUserProfile initWithIdentifier:type:iCloudAltDSID:iTunesAltDSID:gameCenterAltDSID:personaUniqueString:homeUserIdentifier:selected:overrideName:]( v8,  "initWithIdentifier:type:iCloudAltDSID:iTunesAltDSID:gameCenterAltDSID:personaUniqueString:homeUserIdentifier :selected:overrideName:",  v10,  1LL,  0LL,  v11,  0LL,  v5,  *(void *)(a1 + 48),  v16,  *(void *)(a1 + 56));

    __int128 v14 = *(void **)(a1 + 32);
    __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile identifier](v13, "identifier"));
    [v14 setObject:v13 forKey:v15];

    objc_sync_exit(v7);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 64));
}

void sub_1000D3018(_Unwind_Exception *a1)
{
}

void sub_1000D302C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = *(id *)(a1 + 32);
    objc_sync_enter(v7);
    id v8 = objc_alloc(&OBJC_CLASS___PBSUserProfile);
    dispatch_queue_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 UUIDString]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "ams_altDSID"));
    char v12 = *(_BYTE *)(a1 + 72);
    if (v12) {
      char v12 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL) == 0LL;
    }
    LOBYTE(v16) = v12;
    id v13 = -[PBSUserProfile initWithIdentifier:type:iCloudAltDSID:iTunesAltDSID:gameCenterAltDSID:personaUniqueString:homeUserIdentifier:selected:overrideName:]( v8,  "initWithIdentifier:type:iCloudAltDSID:iTunesAltDSID:gameCenterAltDSID:personaUniqueString:homeUserIdentifier :selected:overrideName:",  v10,  1LL,  0LL,  v11,  0LL,  v5,  0LL,  v16,  *(void *)(a1 + 48));

    __int128 v14 = *(void **)(a1 + 32);
    __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile identifier](v13, "identifier"));
    [v14 setObject:v13 forKey:v15];

    objc_sync_exit(v7);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_1000D3194(_Unwind_Exception *a1)
{
}

void sub_1000D31A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) copy];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1000D31E0(uint64_t a1)
{
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    id v2 = sub_100084680();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    os_signpost_id_t v4 = os_signpost_id_generate(v3);

    id v5 = sub_100084680();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    id v7 = v6;
    if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
    {
      *(_WORD *)__int128 buf = 0;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_INTERVAL_BEGIN,  v4,  "create user profiles migration",  "",  buf,  2u);
    }

    id v8 = sub_100084680();
    dispatch_queue_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Performing create user profiles migration.",  buf,  2u);
    }

    *(_BYTE *)(a1 + _Block_object_dispose((const void *)(v31 - 176), 8) = 1;
    id v10 = -[PBCreateUserProfilesMigrationContext initWithAccountStore:]( objc_alloc(&OBJC_CLASS___PBCreateUserProfilesMigrationContext),  "initWithAccountStore:",  *(void *)(a1 + 48));
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    v11[2] = sub_1000D3338;
    void v11[3] = &unk_1003D5D90;
    void v11[4] = a1;
    v11[5] = v4;
    +[PBLegacyUserProfileManager _performCreateUserProfilesMigrationWithContext:completionHandler:]( &OBJC_CLASS___PBLegacyUserProfileManager,  "_performCreateUserProfilesMigrationWithContext:completionHandler:",  v10,  v11);
  }

void sub_1000D3338(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(*(void *)(a1 + 32) + 32LL));
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(dispatch_queue_s **)(v4 + 32);
  __int128 v15 = _NSConcreteStackBlock;
  uint64_t v16 = 3221225472LL;
  __int128 v17 = sub_1000D34E0;
  uint64_t v18 = &unk_1003CFEB8;
  uint64_t v19 = v4;
  id v6 = v3;
  id v20 = v6;
  dispatch_sync(v5, &v15);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults standardUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "standardUserDefaults",  v15,  v16,  v17,  v18,  v19));
  [v7 setBool:1 forKey:@"PerformedCreateUserProfilesMigration"];

  id v8 = sub_100084680();
  dispatch_queue_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    id v10 = [v6 count];
    *(_DWORD *)__int128 buf = 134217984;
    id v22 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Finished create user profiles migration. {userProfilesCount=%lu}",  buf,  0xCu);
  }

  id v11 = sub_100084680();
  char v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  id v13 = v12;
  os_signpost_id_t v14 = *(void *)(a1 + 40);
  if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    *(_WORD *)__int128 buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v13,  OS_SIGNPOST_INTERVAL_END,  v14,  "create user profiles migration",  "",  buf,  2u);
  }
}

void sub_1000D34E0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 40);
  id v3 = *(void **)(*(void *)(a1 + 32) + 56LL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_1000D3564;
  void v4[3] = &unk_1003D5D68;
  id v5 = v2;
  [v3 performBatchUpdatesUsingBlock:v4];
  *(_BYTE *)(*(void *)(a1 + 32) + 8LL) = 0;
  sub_1000D13D4(*(void *)(a1 + 32));
}

void sub_1000D3564(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 userProfiles]);
  if ([v4 count])
  {
    id v5 = sub_100084770();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10027DE88();
    }

    __int128 v28 = 0u;
    __int128 v29 = 0u;
    __int128 v26 = 0u;
    __int128 v27 = 0u;
    id v7 = v4;
    id v8 = [v7 countByEnumeratingWithState:&v26 objects:v31 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v27;
      do
      {
        for (i = 0LL; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v27 != v10) {
            objc_enumerationMutation(v7);
          }
          [v3 removeUserProfileWithIdentifier:*(void *)(*((void *)&v26 + 1) + 8 * (void)i)];
        }

        id v9 = [v7 countByEnumeratingWithState:&v26 objects:v31 count:16];
      }

      while (v9);
    }
  }

  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  char v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allValues", 0));
  id v13 = [v12 countByEnumeratingWithState:&v22 objects:v30 count:16];
  if (v13)
  {
    id v14 = v13;
    __int128 v15 = 0LL;
    uint64_t v16 = *(void *)v23;
    do
    {
      for (j = 0LL; j != v14; j = (char *)j + 1)
      {
        if (*(void *)v23 != v16) {
          objc_enumerationMutation(v12);
        }
        uint64_t v18 = *(void **)(*((void *)&v22 + 1) + 8LL * (void)j);
        if ([v18 isSelected])
        {
          uint64_t v19 = objc_claimAutoreleasedReturnValue([v18 identifier]);

          __int128 v15 = (void *)v19;
        }

        [v3 addUserProfile:v18];
      }

      id v14 = [v12 countByEnumeratingWithState:&v22 objects:v30 count:16];
    }

    while (v14);

    if (v15)
    {
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v3 selectedUserProfileIdentifier]);
      unsigned __int8 v21 = [v20 isEqualToString:v15];

      if ((v21 & 1) == 0) {
        [v3 updateUserProfileWithIdentifier:v15 usingBlock:&stru_1003D5D40];
      }
    }
  }

  else
  {

    __int128 v15 = 0LL;
  }
}

void sub_1000D37BC(id a1, PBSMutableUserProfile *a2)
{
}

void sub_1000D37D8(uint64_t a1)
{
  if (a1)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000D3FF4;
    block[3] = &unk_1003CFF08;
    void block[4] = a1;
    dispatch_async(&_dispatch_main_q, block);
  }

void sub_1000D3834(uint64_t a1)
{
  if (*(void *)(a1 + 56)) {
    goto LABEL_2;
  }
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userProfiles]);
  id v23 = [v22 count];

  __int128 v24 = *(void **)(a1 + 40);
  if (v23 == (id)1)
  {
  }

  else if (!sub_1000D3CA8((uint64_t)&OBJC_CLASS___PBLegacyUserProfileManager, v24))
  {
LABEL_13:
    sub_1000D37D8(*(void *)(a1 + 48));
    return;
  }

BOOL sub_1000D3BFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1, v4);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 dictionaryForKey:@"CountShowWelcomeBackBulletin"]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "bs_safeNumberForKey:", v7));
  id v9 = [v8 integerValue];

  return v9 != 0LL;
}

BOOL sub_1000D3CA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1, v4);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 dictionaryForKey:@"CountShowWelcomeBackBulletin"]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "bs_safeNumberForKey:", v7));
  id v9 = [v8 integerValue];

  return (double)(uint64_t)v9 <= 5.0;
}

void sub_1000D3D64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    [*(id *)(v1 + 168) invalidate];
    id v2 = *(void **)(v1 + 168);
    *(void *)(v1 + 16_Block_object_dispose((const void *)(v31 - 176), 8) = 0LL;
  }

uint64_t sub_1000D3D98(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return BSDispatchMain(*(void *)(result + 32));
  }
  return result;
}

void sub_1000D3DB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1, v4);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 dictionaryForKey:@"CountShowWelcomeBackBulletin"]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 dictionaryForKey:@"DidShowWelcomeBackBulletin"]);

  if (!v8) {
    goto LABEL_7;
  }
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  unsigned __int8 v10 = objc_msgSend(v8, "bs_BOOLForKey:", v9);

  id v11 = [v8 mutableCopy];
  char v12 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  [v11 removeObjectForKey:v12];

  id v13 = [v11 count];
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  __int128 v15 = v14;
  if (v13) {
    [v14 setObject:v11 forKey:@"DidShowWelcomeBackBulletin"];
  }
  else {
    [v14 removeObjectForKey:@"DidShowWelcomeBackBulletin"];
  }

  if ((v10 & 1) != 0)
  {
    uint64_t v16 = 1LL;
  }

  else
  {
LABEL_7:
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "bs_safeNumberForKey:", v17));
    uint64_t v16 = (uint64_t)[v18 integerValue];
  }

  if ((double)v16 <= 5.0)
  {
    uint64_t v19 = v16 + 1;
    id v20 = objc_msgSend(v6, "mutableCopy", (double)v16, 5.0);
    unsigned __int8 v21 = v20;
    if (v20) {
      id v22 = v20;
    }
    else {
      id v22 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    }
    id v23 = v22;

    __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v19));
    __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    [v23 setObject:v24 forKey:v25];

    __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    [v26 setObject:v23 forKey:@"CountShowWelcomeBackBulletin"];
  }
}

void sub_1000D3FF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    [*(id *)(v1 + 168) invalidate];
    id v2 = *(void **)(v1 + 168);
    *(void *)(v1 + 16_Block_object_dispose((const void *)(v31 - 176), 8) = 0LL;
  }

void sub_1000D4134(uint64_t a1)
{
  id v2 = (uint64_t *)(a1 + 32);
  id v3 = [*(id *)(*(void *)(a1 + 32) + 112) count];
  uint64_t v4 = *v2;
  if (v3)
  {
    id v5 = *(void **)(v4 + 120);
    if (!v5)
    {
      unsigned __int8 v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"_pendingUserProfileAccountNotifications != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027DEE8();
      }
      _bs_set_crash_log_message([v10 UTF8String]);
      __break(0);
      JUMPOUT(0x1000D4284LL);
    }

    [v5 addNotification:*(void *)(a1 + 40)];
    id v6 = sub_100084680();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 112LL);
      *(_DWORD *)__int128 buf = 138412546;
      uint64_t v12 = v9;
      __int16 v13 = 2112;
      uint64_t v14 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Ignoring user profile account notification request, notification queued. {reasons=%@, notification=%@}",  buf,  0x16u);
    }
  }

  else
  {
    sub_1000D428C(v4, *(void **)(a1 + 40));
  }

void sub_1000D428C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    id v4 = sub_100084680();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 138412290;
      id v16 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Handling user profile account notification. {notification=%@}",  (uint8_t *)&v15,  0xCu);
    }

    if ([v3 type] == (id)3)
    {
      sub_1000CB0A0(a1);
      goto LABEL_23;
    }

    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 accountTypeIdentifier]);
    unsigned int v7 = [v6 isEqualToString:ACAccountTypeIdentifierAppleAccount];

    if (v7)
    {
      if ([v3 type] != (id)2) {
        goto LABEL_23;
      }
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 altDSID]);
      sub_1000D4500(a1, v8);
LABEL_19:

      goto LABEL_23;
    }

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 accountTypeIdentifier]);
    unsigned int v10 = [v9 isEqualToString:ACAccountTypeIdentifierGameCenter];

    if (v10)
    {
      if ([v3 type] != (id)2) {
        goto LABEL_23;
      }
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 altDSID]);
      sub_1000D466C(a1, v8);
      goto LABEL_19;
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue([v3 accountTypeIdentifier]);
    unsigned int v12 = [v11 isEqualToString:ACAccountTypeIdentifieriTunesStore];

    if (v12)
    {
      if (![v3 type])
      {
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 accountIdentifier]);
        sub_1000D47D8(a1, v8);
        goto LABEL_19;
      }

      if ([v3 type] == (id)1)
      {
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 accountIdentifier]);
        sub_1000D4C8C(a1, v8);
        goto LABEL_19;
      }

      if ([v3 type] == (id)2)
      {
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 altDSID]);
        sub_1000D5088(a1, v8);
        goto LABEL_19;
      }
    }

    id v13 = sub_100084680();
    uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
      sub_10027DFD0();
    }
  }

void sub_1000D4500(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!a1) {
    goto LABEL_4;
  }
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
  if (v3)
  {
    id v4 = *(void **)(a1 + 56);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    v11[2] = sub_1000D5334;
    void v11[3] = &unk_1003D5E00;
    id v5 = v3;
    id v12 = v5;
    uint64_t v13 = a1;
    [v4 performBatchUpdatesUsingBlock:v11];
    id v6 = *(void **)(a1 + 152);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_1000D57FC;
    v9[3] = &unk_1003D5E28;
    id v10 = v5;
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "bs_filter:", v9));
    [*(id *)(a1 + 152) minusSet:v7];
    sub_1000D13D4(a1);

LABEL_4:
    return;
  }

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"iCloudAltDSID != nil"));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_10027E03C();
  }
  _bs_set_crash_log_message([v8 UTF8String]);
  __break(0);
}

void sub_1000D466C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!a1) {
    goto LABEL_4;
  }
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
  if (v3)
  {
    id v4 = *(void **)(a1 + 56);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    v11[2] = sub_1000D583C;
    void v11[3] = &unk_1003D5E00;
    id v5 = v3;
    id v12 = v5;
    uint64_t v13 = a1;
    [v4 performBatchUpdatesUsingBlock:v11];
    id v6 = *(void **)(a1 + 152);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_1000D5A48;
    v9[3] = &unk_1003D5E28;
    id v10 = v5;
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "bs_filter:", v9));
    [*(id *)(a1 + 152) minusSet:v7];
    sub_1000D13D4(a1);

LABEL_4:
    return;
  }

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"gameCenterAltDSID != nil"));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_10027E0E4();
  }
  _bs_set_crash_log_message([v8 UTF8String]);
  __break(0);
}

void sub_1000D47D8(uint64_t a1, void *a2)
{
  id v32 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    id v3 = sub_100084680();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543362;
      *(void *)&uint8_t buf[4] = v32;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Handling did add iTunes account notification. {accountIdentifier=%{public}@}",  buf,  0xCu);
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) accountWithIdentifier:v32]);
    uint64_t v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ams_altDSID"));
    unsigned int v7 = (void *)v6;
    if (v5) {
      BOOL v8 = v6 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    int v9 = v8;
    id v10 = sub_100084680();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    if (v9)
    {
      if (!v12)
      {
LABEL_29:

        goto LABEL_30;
      }

      *(_DWORD *)__int128 buf = 138543874;
      *(void *)&uint8_t buf[4] = v32;
      *(_WORD *)&buf[12] = 2160;
      *(void *)&buf[14] = 1752392040LL;
      *(_WORD *)&buf[22] = 2112;
      id v41 = v7;
      uint64_t v13 = "Skipping did add iTunes account notification. Failed to find iTunes account. {accountIdentifier=%{public}@, "
            "AltDSID=%{mask.hash}@}";
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v13, buf, 0x20u);
      goto LABEL_29;
    }

    if (v12)
    {
      *(_DWORD *)__int128 buf = 141558274;
      *(void *)&uint8_t buf[4] = 1752392040LL;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Found added iTunes account. {iTunesAltDSID=%{mask.hash}@}",  buf,  0x16u);
    }

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ams_homeUserIdentifiers"));
    if ([v14 count])
    {
    }

    else
    {
      __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ams_homeUserHiddenIdentifiers"));
      BOOL v25 = [v24 count] == 0;

      if (!v25)
      {
        id v26 = sub_100084680();
        id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
        if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_29;
        }
        *(_DWORD *)__int128 buf = 138543874;
        *(void *)&uint8_t buf[4] = v32;
        *(_WORD *)&buf[12] = 2160;
        *(void *)&buf[14] = 1752392040LL;
        *(_WORD *)&buf[22] = 2112;
        id v41 = v7;
        uint64_t v13 = "Skipping did add iTunes account notification, hidden account. {accountIdentifier=%{public}@, iTunesAltDSID=%{mask.hash}@}";
        goto LABEL_13;
      }
    }

    int v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    uint64_t v16 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) snapshot]);
    id v31 = (void *)objc_claimAutoreleasedReturnValue([v17 userProfiles]);

    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472LL;
    void v36[2] = sub_1000D5A88;
    v36[3] = &unk_1003D5DD8;
    id v18 = v7;
    id v37 = v18;
    id v11 = v15;
    id v38 = v11;
    id v30 = (id)v16;
    id v39 = v30;
    [v31 enumerateKeysAndObjectsUsingBlock:v36];
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ams_homeIdentifier"));
    LOBYTE(v16) = v19 == 0LL;

    if ((v16 & 1) != 0)
    {
      if (!-[os_log_s count](v11, "count"))
      {
        *(void *)__int128 buf = 0LL;
        *(void *)&uint8_t buf[8] = buf;
        *(void *)&uint8_t buf[16] = 0x2020000000LL;
        LOBYTE(v41) = 0;
        __int128 v27 = *(void **)(a1 + 56);
        v33[0] = _NSConcreteStackBlock;
        v33[1] = 3221225472LL;
        v33[2] = sub_1000D5C6C;
        v33[3] = &unk_1003D5C18;
        id v28 = v18;
        id v34 = v28;
        id v35 = buf;
        [v27 performBatchUpdatesUsingBlock:v33];
        if (*(_BYTE *)(*(void *)&buf[8] + 24LL)) {
          sub_1000D13D4(a1);
        }
        else {
          sub_1000D5F74(a1, v28, 0LL);
        }

        _Block_object_dispose(buf, 8);
      }
    }

    else
    {
      id v29 = -[os_log_s copy](v11, "copy");
      id v20 = [v30 copy];
      unsigned __int8 v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ams_homeUserIdentifiers"));
      id v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v21));
      id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](&OBJC_CLASS___NSSet, "set"));
      sub_1000D5B40(a1, v18, v29, v20, v22, v23);
    }

    goto LABEL_29;
  }

LABEL_30:
}

  id v31 = FBSOpenApplicationErrorCodeToString(v13);
  id v32 = objc_claimAutoreleasedReturnValue(v31);
  id v33 = (void *)v32;
  id v34 = &stru_1003E2910;
  if (v12) {
    id v34 = v12;
  }
  id v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"[PBD] Denying open-application request for reason: %@ (%@)",  v32,  v34));

  id v36 = sub_100083CA8();
  id v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
  if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 136315394;
    id v41 = "-[PBOpenAppTransition _canPerformAppLaunch:]";
    uint64_t v42 = 2114;
    uint64_t v43 = v35;
    _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "%s - %{public}@", buf, 0x16u);
  }

  id v38 = FBSOpenApplicationErrorCreate(v13, @"%@");
  *a3 = (id)objc_claimAutoreleasedReturnValue(v38);

  LOBYTE(a3) = 0;
LABEL_35:

  return (char)a3;
}
}

  +[NSDate timeIntervalSinceReferenceDate](&OBJC_CLASS___NSDate, "timeIntervalSinceReferenceDate", v66);
  id v49 = v48;
  id v50 = sub_1000839D8();
  __int16 v51 = (os_log_s *)objc_claimAutoreleasedReturnValue(v50);
  if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v52 = "";
    if (v24) {
      uint64_t v52 = " (repair initiated)";
    }
    *(_DWORD *)__int128 buf = 134218242;
    int64_t v79 = v49 - v15;
    uint64_t v80 = 2080;
    __int128 v81 = v52;
    _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "FairPlay check time %f seconds%s", buf, 0x16u);
  }

LABEL_39:
}

  __break(1u);
  return result;
}

  id result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

void sub_1000D4C6C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_1000D4C8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    id v4 = sub_100084680();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v39 = (uint64_t)v3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Handling did update iTunes account notification. {accountIdentifier=%{public}@}",  buf,  0xCu);
    }

    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) accountWithIdentifier:v3]);
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ams_altDSID"));
    id v8 = sub_100084680();
    int v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
    if (v6 && v7)
    {
      id v27 = v3;
      if (v10)
      {
        *(_DWORD *)__int128 buf = 141558274;
        uint64_t v39 = 1752392040LL;
        __int16 v40 = 2112;
        uint64_t v41 = (uint64_t)v7;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Found updated iTunes account. {iTunesAltDSID=%{mask.hash}@}",  buf,  0x16u);
      }

      id v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ams_homeUserIdentifiers"));
      BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v11));

      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
      int v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) snapshot]);
      int v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 userProfiles]);

      v34[0] = _NSConcreteStackBlock;
      v34[1] = 3221225472LL;
      void v34[2] = sub_1000D621C;
      v34[3] = &unk_1003D5DD8;
      id v26 = v7;
      id v35 = v26;
      id v36 = v13;
      id v16 = v14;
      id v37 = v16;
      id v24 = v13;
      -[os_log_s enumerateKeysAndObjectsUsingBlock:](v9, "enumerateKeysAndObjectsUsingBlock:", v34);
      v31[0] = _NSConcreteStackBlock;
      v31[1] = 3221225472LL;
      v31[2] = sub_1000D62D4;
      v31[3] = &unk_1003D5E70;
      id v32 = v16;
      id v33 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
      id v23 = v33;
      id v17 = v16;
      [v12 enumerateObjectsUsingBlock:v31];
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472LL;
      v28[2] = sub_1000D632C;
      void v28[3] = &unk_1003D5E98;
      id v29 = v12;
      id v30 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
      id v18 = v30;
      id v25 = v12;
      [v17 enumerateKeysAndObjectsUsingBlock:v28];
      id v19 = [v24 copy];
      id v20 = [v17 copy];
      id v21 = [v23 copy];
      id v22 = [v18 copy];
      sub_1000D5B40(a1, v26, v19, v20, v21, v22);

      id v3 = v27;
    }

    else if (v10)
    {
      *(_DWORD *)__int128 buf = 138543874;
      uint64_t v39 = (uint64_t)v3;
      __int16 v40 = 2160;
      uint64_t v41 = 1752392040LL;
      __int16 v42 = 2112;
      uint64_t v43 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Skipping did update iTunes account notification. Failed to find iTunes account. {accountIdentifier=%{public}@, A ltDSID=%{mask.hash}@}",  buf,  0x20u);
    }
  }
}

void sub_1000D5088(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    if (!v3)
    {
      id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"iTunesAltDSID != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027E18C();
      }
      _bs_set_crash_log_message([v17 UTF8String]);
      __break(0);
      JUMPOUT(0x1000D532CLL);
    }

    id v4 = sub_100084680();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 141558274;
      uint64_t v26 = 1752392040LL;
      __int16 v27 = 2112;
      id v28 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Handling did remove iTunes account notification. {iTunesAltDSID=%{mask.hash}@}",  buf,  0x16u);
    }

    uint64_t v6 = *(void **)(a1 + 56);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472LL;
    v22[2] = sub_1000D6370;
    v22[3] = &unk_1003D5E00;
    void v22[4] = a1;
    id v23 = v3;
    [v6 performBatchUpdatesUsingBlock:v22];
    unsigned int v7 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    id v8 = *(id *)(a1 + 152);
    id v9 = [v8 countByEnumeratingWithState:&v18 objects:v24 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v19;
      do
      {
        BOOL v12 = 0LL;
        do
        {
          if (*(void *)v19 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)v12);
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 iCloudAltDSID]);
          if (v14)
          {

LABEL_13:
            [v13 setITunesAltDSID:0];
            goto LABEL_14;
          }

          int v15 = (void *)objc_claimAutoreleasedReturnValue([v13 gameCenterAltDSID]);

          if (v15) {
            goto LABEL_13;
          }
          -[NSMutableSet addObject:](v7, "addObject:", v13);
LABEL_14:
          BOOL v12 = (char *)v12 + 1;
        }

        while (v10 != v12);
        id v16 = [v8 countByEnumeratingWithState:&v18 objects:v24 count:16];
        id v10 = v16;
      }

      while (v16);
    }

    [*(id *)(a1 + 152) minusSet:v7];
    sub_1000D13D4(a1);
  }
}

void sub_1000D5334(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 userProfiles]);
  id v5 = [v4 copy];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_1000D53EC;
  void v7[3] = &unk_1003D5DD8;
  id v8 = *(id *)(a1 + 32);
  id v9 = v3;
  uint64_t v10 = *(void *)(a1 + 40);
  id v6 = v3;
  [v5 enumerateKeysAndObjectsUsingBlock:v7];
}

void sub_1000D53EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 iCloudAltDSID]);
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 iCloudAltDSID]);
    int v10 = BSEqualStrings(v9, *(void *)(a1 + 32));

    if (v10)
    {
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 iTunesAltDSID]);
      if (v11)
      {

LABEL_6:
        [*(id *)(a1 + 40) updateUserProfileWithIdentifier:v5 usingBlock:&stru_1003D5DB0];
        goto LABEL_7;
      }

      BOOL v12 = (void *)objc_claimAutoreleasedReturnValue([v6 gameCenterAltDSID]);

      if (v12) {
        goto LABEL_6;
      }
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v6 personaUniqueString]);

      if (v13)
      {
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v6 personaUniqueString]);
        int v15 = [v6 isSelected];
        uint64_t v16 = *(void *)(a1 + 48);
        if (v16) {
          id v17 = *(void **)(v16 + 192);
        }
        else {
          id v17 = 0LL;
        }
        sub_1000D5540((uint64_t)&OBJC_CLASS___PBLegacyUserProfileManager, v14, v15, v17, 0LL);
      }

      [*(id *)(a1 + 40) removeUserProfileWithIdentifier:v5];
    }
  }

LABEL_7:
}
}

  return v6;
}
}

    __int128 v18 = -1LL;
    goto LABEL_8;
  }

    __int128 v19 = v8 + 1;
    if (__OFADD__(v8, 1LL))
    {
      __break(1u);
      goto LABEL_31;
    }

    if (v19 >= v27) {
      goto LABEL_29;
    }
    __int128 v20 = *(void *)(v26 + 8 * v19);
    ++v8;
    if (!v20)
    {
      id v8 = v19 + 1;
      if (v19 + 1 >= v27) {
        goto LABEL_29;
      }
      __int128 v20 = *(void *)(v26 + 8 * v8);
      if (!v20)
      {
        id v8 = v19 + 2;
        if (v19 + 2 >= v27) {
          goto LABEL_29;
        }
        __int128 v20 = *(void *)(v26 + 8 * v8);
        if (!v20)
        {
          id v8 = v19 + 3;
          if (v19 + 3 >= v27) {
            goto LABEL_29;
          }
          __int128 v20 = *(void *)(v26 + 8 * v8);
          if (!v20) {
            break;
          }
        }
      }
    }

void sub_1000D5524(id a1, PBSMutableUserProfile *a2)
{
}

void sub_1000D5540(uint64_t a1, void *a2, int a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a4;
  id v11 = a5;
  objc_opt_self(a1, v12);
  if (!v9)
  {
    __int16 v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"personaUniqueString != nil"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_10027E234();
    }
    _bs_set_crash_log_message([v27 UTF8String]);
    __break(0);
    JUMPOUT(0x1000D57F4LL);
  }

  id v13 = sub_100084680();
  uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
  os_signpost_id_t v15 = os_signpost_id_generate(v14);

  id v16 = sub_100084680();
  id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  __int128 v18 = v17;
  if (v15 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v17))
  {
    *(_WORD *)__int128 buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v18,  OS_SIGNPOST_INTERVAL_BEGIN,  v15,  "remove persona",  "",  buf,  2u);
  }

  id v19 = sub_100084680();
  __int128 v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 141558274;
    uint64_t v35 = 1752392040LL;
    __int16 v36 = 2112;
    id v37 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Removing persona. {personaUniqueString=%{mask.hash}@}",  buf,  0x16u);
  }

  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472LL;
  id v32[2] = sub_1000D8F28;
  v32[3] = &unk_1003D0048;
  id v33 = v11;
  id v21 = v11;
  id v22 = objc_retainBlock(v32);
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472LL;
  v28[2] = sub_1000D8F48;
  void v28[3] = &unk_1003D6090;
  id v23 = v9;
  id v29 = v23;
  id v30 = v22;
  os_signpost_id_t v31 = v15;
  id v24 = v22;
  id v25 = objc_retainBlock(v28);
  uint64_t v26 = v25;
  if (v10 && a3) {
    [v10 quitApplicationsRunningWithPersonaUniqueString:v23 completionHandler:v25];
  }
  else {
    ((void (*)(void *))v25[2])(v25);
  }
}

id sub_1000D57FC(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 iCloudAltDSID]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_1000D583C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 userProfiles]);
  id v5 = [v4 copy];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_1000D58F4;
  void v7[3] = &unk_1003D5DD8;
  id v8 = *(id *)(a1 + 32);
  id v9 = v3;
  uint64_t v10 = *(void *)(a1 + 40);
  id v6 = v3;
  [v5 enumerateKeysAndObjectsUsingBlock:v7];
}

void sub_1000D58F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 gameCenterAltDSID]);
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 gameCenterAltDSID]);
    int v10 = BSEqualStrings(v9, *(void *)(a1 + 32));

    if (v10)
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 iCloudAltDSID]);
      if (v11)
      {

LABEL_6:
        [*(id *)(a1 + 40) updateUserProfileWithIdentifier:v5 usingBlock:&stru_1003D5E48];
        goto LABEL_7;
      }

      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v6 iTunesAltDSID]);

      if (v12) {
        goto LABEL_6;
      }
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v6 personaUniqueString]);

      if (v13)
      {
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v6 personaUniqueString]);
        int v15 = [v6 isSelected];
        uint64_t v16 = *(void *)(a1 + 48);
        if (v16) {
          id v17 = *(void **)(v16 + 192);
        }
        else {
          id v17 = 0LL;
        }
        sub_1000D5540((uint64_t)&OBJC_CLASS___PBLegacyUserProfileManager, v14, v15, v17, 0LL);
      }

      [*(id *)(a1 + 40) removeUserProfileWithIdentifier:v5];
    }
  }

void sub_1000D5A2C(id a1, PBSMutableUserProfile *a2)
{
}

id sub_1000D5A48(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 gameCenterAltDSID]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_1000D5A88(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 iTunesAltDSID]);
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 iTunesAltDSID]);
    int v10 = BSEqualStrings(v9, *(void *)(a1 + 32));

    if (v10)
    {
      [*(id *)(a1 + 40) setObject:v6 forKey:v5];
      id v11 = *(void **)(a1 + 48);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v6 homeUserIdentifier]);
      objc_msgSend(v11, "bs_setSafeObject:forKey:", v6, v12);
    }
  }
}

void sub_1000D5B40(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    uint64_t v16 = *(void **)(a1 + 56);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    id v17[2] = sub_1000D70D0;
    void v17[3] = &unk_1003D5F08;
    void v17[4] = a1;
    id v18 = v11;
    id v19 = v12;
    id v20 = v13;
    id v21 = v14;
    id v22 = v15;
    [v16 performBatchUpdatesUsingBlock:v17];
    sub_1000D13D4(a1);
  }
}

void sub_1000D5C6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 userProfiles]);
  id v5 = [v4 count];

  if (v5)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 userProfiles]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 selectedUserProfileIdentifier]);
    id v8 = (PBSUserProfile *)objc_claimAutoreleasedReturnValue([v6 objectForKey:v7]);

    if (v8
      && (id v9 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile iTunesAltDSID](v8, "iTunesAltDSID")),
          v9,
          !v9))
    {
      id v17 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile identifier](v8, "identifier"));
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472LL;
      void v24[2] = sub_1000D5F3C;
      v24[3] = &unk_1003D2F80;
      id v25 = *(id *)(a1 + 32);
      [v3 updateUserProfileWithIdentifier:v17 usingBlock:v24];

      *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
      id v12 = v25;
    }

    else
    {
      int v10 = (void *)objc_claimAutoreleasedReturnValue([v3 userProfiles]);
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v3 primaryUserProfileIdentifier]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKey:v11]);

      if (v12)
      {
        id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 iTunesAltDSID]);
        if (v13)
        {
        }

        else
        {
          id v18 = *(void **)(a1 + 32);
          id v19 = (void *)objc_claimAutoreleasedReturnValue([v12 iCloudAltDSID]);
          LODWORD(v1_Block_object_dispose((const void *)(v31 - 176), 8) = [v18 isEqualToString:v19];

          if ((_DWORD)v18)
          {
            id v20 = (void *)objc_claimAutoreleasedReturnValue([v12 identifier]);
            v22[0] = _NSConcreteStackBlock;
            v22[1] = 3221225472LL;
            v22[2] = sub_1000D5F58;
            v22[3] = &unk_1003D2F80;
            id v23 = *(id *)(a1 + 32);
            [v3 updateUserProfileWithIdentifier:v20 usingBlock:v22];

            *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
          }
        }
      }
    }
  }

  else
  {
    id v14 = objc_alloc(&OBJC_CLASS___PBSUserProfile);
    id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 UUIDString]);
    LOBYTE(v21) = 1;
    id v8 = -[PBSUserProfile initWithIdentifier:type:iCloudAltDSID:iTunesAltDSID:gameCenterAltDSID:personaUniqueString:homeUserIdentifier:selected:overrideName:]( v14,  "initWithIdentifier:type:iCloudAltDSID:iTunesAltDSID:gameCenterAltDSID:personaUniqueString:homeUserIdentifier: selected:overrideName:",  v16,  0LL,  0LL,  *(void *)(a1 + 32),  0LL,  0LL,  0LL,  v21,  0LL);

    [v3 addUserProfile:v8];
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSUserProfilesAnalyticsAddUserEvent addUserEventWithActionType:userProfile:]( &OBJC_CLASS___TVCSUserProfilesAnalyticsAddUserEvent,  "addUserEventWithActionType:userProfile:",  3LL,  v8));
    TVCSUserProfilesAnalyticsSendEvent(v12);
  }
}

id sub_1000D5F3C(uint64_t a1, void *a2)
{
  return [a2 setITunesAltDSID:*(void *)(a1 + 32)];
}

id sub_1000D5F58(uint64_t a1, void *a2)
{
  return [a2 setITunesAltDSID:*(void *)(a1 + 32)];
}

void sub_1000D5F74(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    id v7 = sub_100084680();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 141558786;
      uint64_t v19 = 1752392040LL;
      __int16 v20 = 2112;
      id v21 = v5;
      __int16 v22 = 2160;
      uint64_t v23 = 1752392040LL;
      __int16 v24 = 2112;
      id v25 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Creating guest user profile for added or updated iTunes account. {iTunesAltDSID=%{mask.hash}@, homeUserIdentifie r=%{mask.hash}@}",  buf,  0x2Au);
    }

    id v9 = objc_alloc_init(&OBJC_CLASS___PBSCreateUserProfileAttributes);
    [v9 setType:1];
    [v9 setITunesAltDSID:v5];
    [v9 setHomeUserIdentifier:v6];
    if ([*(id *)(a1 + 152) containsObject:v9])
    {
      id v10 = sub_100084680();
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 141558786;
        uint64_t v19 = 1752392040LL;
        __int16 v20 = 2112;
        id v21 = v5;
        __int16 v22 = 2160;
        uint64_t v23 = 1752392040LL;
        __int16 v24 = 2112;
        id v25 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Skipping creating guest user profile. A previous notification is already creating this guest user profile. {iT unesAltDSID=%{mask.hash}@, homeUserIdentifier=%{mask.hash}@}",  buf,  0x2Au);
      }
    }

    else
    {
      [*(id *)(a1 + 152) addObject:v9];
      id v12 = sub_100084680();
      id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 141558786;
        uint64_t v19 = 1752392040LL;
        __int16 v20 = 2112;
        id v21 = v5;
        __int16 v22 = 2160;
        uint64_t v23 = 1752392040LL;
        __int16 v24 = 2112;
        id v25 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Creating new guest user profile persona. {iTunesAltDSID=%{mask.hash}@, homeUserIdentifier=%{mask.hash}@}",  buf,  0x2Au);
      }

      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472LL;
      v14[2] = sub_1000D87DC;
      v14[3] = &unk_1003D6018;
      void v14[4] = a1;
      id v15 = v9;
      id v16 = v5;
      id v17 = v6;
      +[PBLegacyUserProfileManager _createGuestPersonaWithCompletionHandler:]( &OBJC_CLASS___PBLegacyUserProfileManager,  "_createGuestPersonaWithCompletionHandler:",  v14);
    }
  }
}

void sub_1000D621C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 iTunesAltDSID]);
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 iTunesAltDSID]);
    int v10 = BSEqualStrings(v9, *(void *)(a1 + 32));

    if (v10)
    {
      [*(id *)(a1 + 40) setObject:v6 forKey:v5];
      id v11 = *(void **)(a1 + 48);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v6 homeUserIdentifier]);
      objc_msgSend(v11, "bs_setSafeObject:forKey:", v6, v12);
    }
  }
}

void sub_1000D62D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v3]);

  if (!v4) {
    [*(id *)(a1 + 40) addObject:v3];
  }
}

void sub_1000D632C(uint64_t a1, void *a2)
{
  id v3 = a2;
}

void sub_1000D6370(uint64_t a1, void *a2)
{
}

void sub_1000D6390(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (a1)
  {
    if (v6)
    {
      if (v5)
      {
        dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
        id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 userProfiles]);
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472LL;
        id v17[2] = sub_1000D65A4;
        void v17[3] = &unk_1003D5EC0;
        id v10 = v5;
        id v18 = v10;
        id v19 = v8;
        id v11 = v8;
        [v9 enumerateKeysAndObjectsUsingBlock:v17];
        v13[0] = _NSConcreteStackBlock;
        v13[1] = 3221225472LL;
        v13[2] = sub_1000D6634;
        void v13[3] = &unk_1003D5DD8;
        id v14 = v10;
        uint64_t v15 = a1;
        id v16 = v7;
        [v11 enumerateKeysAndObjectsUsingBlock:v13];

        goto LABEL_5;
      }

      id v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"iTunesAltDSID != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027E384();
      }
    }

    else
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"userProfileStoreBatchUpdater != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027E2DC();
      }
    }

    _bs_set_crash_log_message([v12 UTF8String]);
    __break(0);
    JUMPOUT(0x1000D653CLL);
  }

LABEL_5:
}

    -[PBRetailDemoModeObserver _configureForDemoMode:](self, "_configureForDemoMode:", v4);
    goto LABEL_6;
  }

  if (!v3)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "RetailDemoMode: Will disable",  v5,  2u);
    }

    id v4 = 0LL;
    goto LABEL_5;
  }

  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_10028F628((uint64_t)v3);
  }
LABEL_6:
}

  id v18 = 1LL;
LABEL_8:

  return v18;
}

  *a1 = v8;
  if ((a6 & 0x8000000000000000LL) != 0) {
    return 0LL;
  }
  else {
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
  }
}

        id v6 = (v6 + 1) & v7;
      }

      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0);
    }

    __int16 v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    id v21 = *v20;
    __int16 v22 = (-1LL << v3) - 1;
  }

  else
  {
    __int16 v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    __int16 v22 = *v20;
    id v21 = (-1LL << result) - 1;
  }

  *__int16 v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  __int16 v24 = __OFSUB__(v23, 1LL);
  id v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }

  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }

  return result;
}

void sub_1000D65A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 iTunesAltDSID]);
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 iTunesAltDSID]);
    int v10 = BSEqualStrings(v9, *(void *)(a1 + 32));

    if (v10) {
      [*(id *)(a1 + 40) setObject:v6 forKey:v5];
    }
  }
}

void sub_1000D6634(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v6 type] == (id)1
    && (uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 homeUserIdentifier]), v7, v7))
  {
    id v8 = sub_100084680();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543874;
      id v41 = v5;
      __int16 v42 = 2160;
      uint64_t v43 = 1752392040LL;
      __int16 v44 = 2112;
      uint64_t v45 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Removing home user profile. {userProfileIdentifier=%{public}@, iTunesAltDSID=%{mask.hash}@}",  buf,  0x20u);
    }

    id v11 = dispatch_group_create();
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v6 iCloudAltDSID]);

    if (v12)
    {
      dispatch_group_enter(v11);
      uint64_t v13 = *(void *)(a1 + 40);
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v6 iCloudAltDSID]);
      v38[0] = _NSConcreteStackBlock;
      v38[1] = 3221225472LL;
      v38[2] = sub_1000D69E4;
      v38[3] = &unk_1003D28B0;
      uint64_t v39 = v11;
      sub_1000D69FC(v13, v14, v38);
    }

    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v6 gameCenterAltDSID]);

    if (v15)
    {
      dispatch_group_enter(v11);
      uint64_t v16 = *(void *)(a1 + 40);
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v6 gameCenterAltDSID]);
      v36[0] = _NSConcreteStackBlock;
      v36[1] = 3221225472LL;
      void v36[2] = sub_1000D6CCC;
      v36[3] = &unk_1003D28B0;
      id v37 = v11;
      sub_1000D6CE4(v16, v17, v36);
    }

    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    id v19 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    id v30 = _NSConcreteStackBlock;
    uint64_t v31 = 3221225472LL;
    id v32 = sub_1000D7028;
    id v33 = &unk_1003CFEB8;
    id v20 = v6;
    uint64_t v21 = *(void *)(a1 + 40);
    id v34 = v20;
    uint64_t v35 = v21;
    dispatch_group_notify(v11, v19, &v30);

    __int16 v22 = *(void **)(a1 + 48);
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "identifier", v30, v31, v32, v33));
    [v22 removeUserProfileWithIdentifier:v23];

    id v24 = objc_alloc_init(&OBJC_CLASS___TVCSUserProfilesAnalyticsRemoveUserEvent);
    [v24 setActionType:1];
    objc_msgSend(v24, "setUserType:", objc_msgSend(v20, "type"));
    TVCSUserProfilesAnalyticsSendEvent(v24);
  }

  else
  {
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v6 iCloudAltDSID]);
    if (v25)
    {
    }

    else
    {
      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v6 gameCenterAltDSID]);

      if (!v26)
      {
        [*(id *)(a1 + 48) removeUserProfileWithIdentifier:v5];
        goto LABEL_16;
      }
    }

    id v27 = sub_100084680();
    id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v29 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543874;
      id v41 = v5;
      __int16 v42 = 2160;
      uint64_t v43 = 1752392040LL;
      __int16 v44 = 2112;
      uint64_t v45 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Removing iTunes account from user profile. {userProfileIdentifier=%{public}@, iTunesAltDSID=%{mask.hash}@}",  buf,  0x20u);
    }

    [*(id *)(a1 + 48) updateUserProfileWithIdentifier:v5 usingBlock:&stru_1003D5EE0];
  }

void sub_1000D69E4(uint64_t a1)
{
}

void sub_1000D69FC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    if (!v5)
    {
      id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"iCloudAltDSID != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027E42C();
      }
      _bs_set_crash_log_message([v20 UTF8String]);
      __break(0);
      JUMPOUT(0x1000D6CC4LL);
    }

    id v7 = sub_100084680();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    os_signpost_id_t v9 = os_signpost_id_generate(v8);

    id v10 = sub_100084680();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    id v12 = v11;
    if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v11))
    {
      *(_WORD *)__int128 buf = 0;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v12,  OS_SIGNPOST_INTERVAL_BEGIN,  v9,  "remove icloud account",  "",  buf,  2u);
    }

    id v13 = sub_100084680();
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 141558274;
      uint64_t v28 = 1752392040LL;
      __int16 v29 = 2112;
      id v30 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Removing iCloud account. {iCloudAltDSID=%{mask.hash}@}",  buf,  0x16u);
    }

    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472LL;
    void v25[2] = sub_1000D9178;
    v25[3] = &unk_1003D0048;
    id v26 = v6;
    uint64_t v15 = objc_retainBlock(v25);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "aa_appleAccountWithAltDSID:", v5));
    if (v16)
    {
      id v17 = *(void **)(a1 + 48);
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472LL;
      _DWORD v21[2] = sub_1000D9198;
      v21[3] = &unk_1003D60B8;
      id v22 = v5;
      uint64_t v23 = v15;
      os_signpost_id_t v24 = v9;
      [v17 removeAccount:v16 withCompletionHandler:v21];
    }

    else
    {
      id v18 = sub_100084680();
      id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_10027E4D4();
      }

      ((void (*)(void *, void, void))v15[2])(v15, 0LL, 0LL);
    }
  }
}

void sub_1000D6CCC(uint64_t a1)
{
}

void sub_1000D6CE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    if (!v5)
    {
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"gameCenterAltDSID != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027E538();
      }
      _bs_set_crash_log_message([v23 UTF8String]);
      __break(0);
      JUMPOUT(0x1000D7020LL);
    }

    id v7 = sub_100084680();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    os_signpost_id_t v9 = os_signpost_id_generate(v8);

    id v10 = sub_100084680();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    id v12 = v11;
    if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v11))
    {
      *(_WORD *)__int128 buf = 0;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v12,  OS_SIGNPOST_INTERVAL_BEGIN,  v9,  "remove game center account",  "",  buf,  2u);
    }

    id v13 = sub_100084680();
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 141558274;
      uint64_t v33 = 1752392040LL;
      __int16 v34 = 2112;
      id v35 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Removing Game Center account. {gameCenterAltDSID=%{mask.hash}@}",  buf,  0x16u);
    }

    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472LL;
    v30[2] = sub_1000D9318;
    v30[3] = &unk_1003D0048;
    id v31 = v6;
    uint64_t v15 = objc_retainBlock(v30);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 48) accountTypeWithAccountTypeIdentifier:ACAccountTypeIdentifierGameCenter]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) accountsWithAccountType:v16]);
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472LL;
    v28[2] = sub_1000D9338;
    void v28[3] = &unk_1003D60E0;
    id v18 = v5;
    id v29 = v18;
    id v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "bs_firstObjectPassingTest:", v28));

    if (v19)
    {
      id v20 = *(void **)(a1 + 48);
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472LL;
      void v24[2] = sub_1000D9378;
      v24[3] = &unk_1003D60B8;
      id v25 = v18;
      id v26 = v15;
      os_signpost_id_t v27 = v9;
      [v20 removeAccount:v19 withCompletionHandler:v24];
    }

    else
    {
      id v21 = sub_100084680();
      id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_10027E5E0();
      }

      ((void (*)(void *, void, void))v15[2])(v15, 0LL, 0LL);
    }
  }
}

void sub_1000D7028(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) personaUniqueString]);
  int v3 = [*(id *)(a1 + 32) isSelected];
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    id v5 = *(void **)(v4 + 192);
  }
  else {
    id v5 = 0LL;
  }
  sub_1000D5540((uint64_t)&OBJC_CLASS___PBLegacyUserProfileManager, v2, v3, v5, 0LL);
}

void sub_1000D7098(id a1, PBSMutableUserProfile *a2)
{
  id v2 = a2;
  -[PBSMutableUserProfile setITunesAltDSID:](v2, "setITunesAltDSID:", 0LL);
  -[PBSMutableUserProfile setHomeUserIdentifier:](v2, "setHomeUserIdentifier:", 0LL);
}

void sub_1000D70D0(uint64_t a1, void *a2)
{
}

void sub_1000D70F4(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13 = a2;
  id v14 = a3;
  id v30 = a4;
  id v31 = a5;
  id v15 = a6;
  id v16 = a7;
  if (a1)
  {
    id v17 = sub_100084680();
    id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 141558274;
      *(void *)&uint8_t buf[4] = 1752392040LL;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Handling did update iTunes account notification. {iTunesAltDSID=%{mask.hash}@}",  buf,  0x16u);
    }

    if ([v15 count] || objc_msgSend(v16, "count"))
    {
      *(void *)__int128 buf = 0LL;
      *(void *)&uint8_t buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x3032000000LL;
      uint64_t v54 = sub_1000CCC2C;
      uint64_t v55 = sub_1000CCC3C;
      id v56 = 0LL;
      v51[0] = 0LL;
      v51[1] = v51;
      v51[2] = 0x3032000000LL;
      v51[3] = sub_1000CCC2C;
      v51[4] = sub_1000CCC3C;
      id v52 = 0LL;
      id v19 = *(dispatch_queue_s **)(a1 + 128);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000D74EC;
      block[3] = &unk_1003D5F30;
      void block[4] = a1;
      id v49 = buf;
      id v50 = v51;
      id v20 = v14;
      id v48 = v20;
      dispatch_sync(v19, block);
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v13 userProfiles]);
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v13 primaryUserProfileIdentifier]);
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v21 objectForKey:v22]);

      v37[0] = _NSConcreteStackBlock;
      v37[1] = 3221225472LL;
      v37[2] = sub_1000D75C4;
      v37[3] = &unk_1003D5F80;
      id v24 = v20;
      id v38 = v24;
      uint64_t v45 = buf;
      id v25 = v23;
      id v39 = v25;
      id v26 = v13;
      id v40 = v26;
      uint64_t v46 = v51;
      id v41 = v30;
      id v27 = v31;
      id v42 = v27;
      id v43 = v15;
      uint64_t v44 = a1;
      [v43 enumerateObjectsUsingBlock:v37];
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472LL;
      id v32[2] = sub_1000D8294;
      v32[3] = &unk_1003D5FC8;
      id v33 = v27;
      id v34 = v24;
      id v35 = v26;
      uint64_t v36 = a1;
      [v16 enumerateObjectsUsingBlock:v32];

      _Block_object_dispose(v51, 8);
      _Block_object_dispose(buf, 8);
    }

    else
    {
      id v28 = sub_100084680();
      id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 141558274;
        *(void *)&uint8_t buf[4] = 1752392040LL;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Skipping did update iTunes account notification. No home users were added or removed. {iTunesAltDSID=%{mask.hash}@}",  buf,  0x16u);
      }
    }
  }
}

void sub_1000D74C0(_Unwind_Exception *a1)
{
}

void sub_1000D74EC(uint64_t a1)
{
  id v2 = sub_1000D20F0(*(dispatch_queue_t **)(a1 + 32));
  int v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 owner]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 uniqueIdentifier]);
  id v6 = [v5 copy];
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  os_signpost_id_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 uniqueIdentifier]);
  id v10 = [v9 copy];
  uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8LL);
  id v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v10;

  if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL))
  {
    id v13 = sub_100084680();
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_10027E644(a1, v14, v15);
    }
  }
}

void sub_1000D75C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100084680();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 141558786;
    uint64_t v90 = 1752392040LL;
    __int16 v91 = 2112;
    uint64_t v92 = v6;
    __int16 v93 = 2160;
    uint64_t v94 = 1752392040LL;
    __int16 v95 = 2112;
    uint64_t v96 = (uint64_t)v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Handling added home user identifier. {iTunesAltDSID=%{mask.hash}@, homeUserIdentifier=%{mask.hash}@}",  buf,  0x2Au);
  }

  if (BSEqualObjects(*(void *)(*(void *)(*(void *)(a1 + 88) + 8LL) + 40LL), v3))
  {
    id v7 = sub_100084680();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 141558786;
      uint64_t v90 = 1752392040LL;
      __int16 v91 = 2112;
      uint64_t v92 = v9;
      __int16 v93 = 2160;
      uint64_t v94 = 1752392040LL;
      __int16 v95 = 2112;
      uint64_t v96 = (uint64_t)v3;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Added home user identifier matches home owner identifier. Attempting to update the primary user profile. {iTunes AltDSID=%{mask.hash}@, homeUserIdentifier=%{mask.hash}@}",  buf,  0x2Au);
    }

    id v10 = *(void **)(a1 + 40);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 iTunesAltDSID]);

    id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) iTunesAltDSID]);
    int v13 = BSEqualStrings(v12, *(void *)(a1 + 32));

    if (v11) {
      int v14 = v13;
    }
    else {
      int v14 = 1;
    }
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) homeUserIdentifier]);

    id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) homeUserIdentifier]);
    int v17 = BSEqualObjects(v16, v3);

    if (v15) {
      int v18 = v17;
    }
    else {
      int v18 = 1;
    }
    id v19 = sub_100084680();
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);
    if (v10 && v14 && v18)
    {
      if (v21)
      {
        uint64_t v22 = *(void *)(a1 + 32);
        *(_DWORD *)__int128 buf = 141558786;
        uint64_t v90 = 1752392040LL;
        __int16 v91 = 2112;
        uint64_t v92 = v22;
        __int16 v93 = 2160;
        uint64_t v94 = 1752392040LL;
        __int16 v95 = 2112;
        uint64_t v96 = (uint64_t)v3;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Updating primary user profile with added home user identifier. {iTunesAltDSID=%{mask.hash}@, homeUserIdentifie r=%{mask.hash}@}",  buf,  0x2Au);
      }

      uint64_t v23 = *(void **)(a1 + 48);
      id v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) identifier]);
      v86[0] = _NSConcreteStackBlock;
      v86[1] = 3221225472LL;
      v86[2] = sub_1000D80D4;
      v86[3] = &unk_1003D5F58;
      id v87 = *(id *)(a1 + 32);
      id v88 = v3;
      [v23 updateUserProfileWithIdentifier:v24 usingBlock:v86];

      id v25 = v87;
      goto LABEL_51;
    }

    if (v21)
    {
      uint64_t v26 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 141560066;
      uint64_t v90 = 1752392040LL;
      __int16 v91 = 2112;
      uint64_t v92 = v26;
      __int16 v93 = 2160;
      uint64_t v94 = 1752392040LL;
      __int16 v95 = 2112;
      uint64_t v96 = (uint64_t)v3;
      __int16 v97 = 1024;
      *(_DWORD *)id v98 = v10 != 0LL;
      *(_WORD *)&v98[4] = 1024;
      *(_DWORD *)&v98[6] = v11 != 0LL;
      LOWORD(v99) = 1024;
      *(_DWORD *)((char *)&v99 + 2) = v13;
      HIWORD(v99) = 1024;
      *(_DWORD *)id v100 = v15 != 0LL;
      *(_WORD *)&v100[4] = 1024;
      *(_DWORD *)&v100[6] = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "The added home user identifier is not compatible with the primary user profile. {iTunesAltDSID=%{mask.hash}@, ho meUserIdentifier=%{mask.hash}@, primaryExists=%{BOOL}d, haveiTunes=%{BOOL}d, iTunesMatches=%{BOOL}d, haveHomeUse r=%{BOOL}d, homeUserMatches=%{BOOL}d}",  buf,  0x48u);
    }
  }

  id v25 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 48) userProfileIdentifierForHomeUserIdentifier:v3 inHomeIdentifier:*(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 40) homeOwnerIdentifier:*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40)]);
  if (v25)
  {
    id v27 = sub_100084680();
    id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v29 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138544386;
      uint64_t v90 = (uint64_t)v25;
      __int16 v91 = 2160;
      uint64_t v92 = 1752392040LL;
      __int16 v93 = 2112;
      uint64_t v94 = (uint64_t)v3;
      __int16 v95 = 2160;
      uint64_t v96 = 1752392040LL;
      __int16 v97 = 2112;
      *(void *)id v98 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Found existing user matching home user identifier, associating iTunes with it. {userIdentifier=%{public}@, homeU serIdentifier=%{mask.hash}@, iTunesAltDSID=%{mask.hash}@}",  buf,  0x34u);
    }

    id v30 = *(void **)(a1 + 48);
    v83[0] = _NSConcreteStackBlock;
    v83[1] = 3221225472LL;
    v83[2] = sub_1000D811C;
    v83[3] = &unk_1003D5F58;
    id v84 = *(id *)(a1 + 32);
    id v85 = v3;
    [v30 updateUserProfileWithIdentifier:v25 usingBlock:v83];

    goto LABEL_51;
  }

  id v31 = [*(id *)(a1 + 56) count];
  id v32 = [*(id *)(a1 + 64) count];
  id v33 = [*(id *)(a1 + 72) count];
  id v34 = sub_100084680();
  id v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
  BOOL v36 = os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT);
  if ((unint64_t)v31 > 1 || v32 || v33 != (id)1)
  {
    if (v36)
    {
      uint64_t v51 = *(void *)(a1 + 32);
      id v52 = [*(id *)(a1 + 56) count];
      id v53 = [*(id *)(a1 + 64) count];
      id v54 = [*(id *)(a1 + 72) count];
      *(_DWORD *)__int128 buf = 141559554;
      uint64_t v90 = 1752392040LL;
      __int16 v91 = 2112;
      uint64_t v92 = v51;
      __int16 v93 = 2160;
      uint64_t v94 = 1752392040LL;
      __int16 v95 = 2112;
      uint64_t v96 = (uint64_t)v3;
      __int16 v97 = 2048;
      *(void *)id v98 = v52;
      *(_WORD *)&v98[8] = 2048;
      uint64_t v99 = (uint64_t)v53;
      *(_WORD *)id v100 = 2048;
      *(void *)&v100[2] = v54;
      _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "iTunes account cannot be associated with existing user profile. {iTunesAltDSID=%{mask.hash}@, homeUserIdentifier =%{mask.hash}@, existingProfiles=%lu, existingHomeManagedProfiles=%lu, addedHomeUserIdentifiers=%lu}",  buf,  0x48u);
    }

    goto LABEL_48;
  }

  if (v36)
  {
    uint64_t v37 = *(void *)(a1 + 32);
    id v38 = [*(id *)(a1 + 56) count];
    id v39 = [*(id *)(a1 + 64) count];
    id v40 = [*(id *)(a1 + 72) count];
    *(_DWORD *)__int128 buf = 141559554;
    uint64_t v90 = 1752392040LL;
    __int16 v91 = 2112;
    uint64_t v92 = v37;
    __int16 v93 = 2160;
    uint64_t v94 = 1752392040LL;
    __int16 v95 = 2112;
    uint64_t v96 = (uint64_t)v3;
    __int16 v97 = 2048;
    *(void *)id v98 = v38;
    *(_WORD *)&v98[8] = 2048;
    uint64_t v99 = (uint64_t)v39;
    *(_WORD *)id v100 = 2048;
    *(void *)&v100[2] = v40;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "Attempting to associate iTunes account with existing user profile. {iTunesAltDSID=%{mask.hash}@, homeUserIdentifie r=%{mask.hash}@, existingProfiles=%lu, existingHomeManagedProfiles=%lu, addedHomeUserIdentifiers=%lu}",  buf,  0x48u);
  }

  id v41 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) userProfiles]);
  id v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 allValues]);

  v81[0] = _NSConcreteStackBlock;
  v81[1] = 3221225472LL;
  v81[2] = sub_1000D8164;
  v81[3] = &unk_1003D2FA8;
  id v82 = *(id *)(a1 + 32);
  id v42 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s bs_filter:](v35, "bs_filter:", v81));
  if (![v42 count])
  {
    v79[0] = _NSConcreteStackBlock;
    v79[1] = 3221225472LL;
    v79[2] = sub_1000D81A8;
    v79[3] = &unk_1003D2FA8;
    id v80 = *(id *)(a1 + 32);
    uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s bs_firstObjectPassingTest:](v35, "bs_firstObjectPassingTest:", v79));
    id v56 = v55;
    if (v55)
    {
      id v43 = v55;
      uint64_t v57 = @"iCloud";
    }

    else
    {
      v77[0] = _NSConcreteStackBlock;
      v77[1] = 3221225472LL;
      v77[2] = sub_1000D81EC;
      v77[3] = &unk_1003D2FA8;
      id v78 = *(id *)(a1 + 32);
      id v43 = (id)objc_claimAutoreleasedReturnValue(-[os_log_s bs_firstObjectPassingTest:](v35, "bs_firstObjectPassingTest:", v77));
      uint64_t v57 = @"GameCenter";
      if (v43) {
        id v58 = @"GameCenter";
      }
      else {
        id v58 = 0LL;
      }
      double v59 = v58;

      if (!v43) {
        goto LABEL_45;
      }
    }

    uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue([v43 iTunesAltDSID]);

    if (!v60)
    {
      id v64 = sub_100084680();
      id v65 = (os_log_s *)objc_claimAutoreleasedReturnValue(v64);
      if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
      {
        __int128 v71 = (void *)objc_claimAutoreleasedReturnValue([v43 identifier]);
        uint64_t v66 = *(void *)(a1 + 32);
        *(_DWORD *)__int128 buf = 138544642;
        uint64_t v90 = (uint64_t)v71;
        __int16 v91 = 2112;
        uint64_t v92 = (uint64_t)v57;
        __int16 v93 = 2160;
        uint64_t v94 = 1752392040LL;
        __int16 v95 = 2112;
        uint64_t v96 = v66;
        __int16 v97 = 2160;
        *(void *)id v98 = 1752392040LL;
        *(_WORD *)&v98[8] = 2112;
        uint64_t v99 = (uint64_t)v3;
        _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEFAULT,  "Found user with matching iCloud or Game Center AltDSID, associating iTunes and Home User with it. {identifier= %{public}@, matchedWith=%@, iTunesAltDSID=%{mask.hash}@, homeUserIdentifier=%{mask.hash}@}",  buf,  0x3Eu);
      }

      id v67 = *(void **)(a1 + 48);
      v68 = (void *)objc_claimAutoreleasedReturnValue([v43 identifier]);
      v74[0] = _NSConcreteStackBlock;
      v74[1] = 3221225472LL;
      v74[2] = sub_1000D8230;
      v74[3] = &unk_1003D5F58;
      id v75 = *(id *)(a1 + 32);
      id v76 = v3;
      [v67 updateUserProfileWithIdentifier:v68 usingBlock:v74];

      uint64_t v44 = v80;
      goto LABEL_58;
    }

LABEL_45:
    uint64_t v44 = v80;
LABEL_46:

    goto LABEL_47;
  }

  if ([v42 count] == (id)1)
  {
    id v43 = (id)objc_claimAutoreleasedReturnValue([v42 firstObject]);
    uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v43 identifier]);
    uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v43 homeUserIdentifier]);

    id v46 = sub_100084680();
    id v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
    BOOL v48 = os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT);
    if (v45)
    {
      if (v48)
      {
        id v49 = (void *)objc_claimAutoreleasedReturnValue([v43 homeUserIdentifier]);
        uint64_t v50 = *(void *)(a1 + 32);
        *(_DWORD *)__int128 buf = 138544898;
        uint64_t v90 = (uint64_t)v44;
        __int16 v91 = 2160;
        uint64_t v92 = 1752392040LL;
        __int16 v93 = 2112;
        uint64_t v94 = (uint64_t)v49;
        __int16 v95 = 2160;
        uint64_t v96 = 1752392040LL;
        __int16 v97 = 2112;
        *(void *)id v98 = v3;
        *(_WORD *)&v98[8] = 2160;
        uint64_t v99 = 1752392040LL;
        *(_WORD *)id v100 = 2112;
        *(void *)&v100[2] = v50;
        _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "The only existing user with this iTunes account is already associated with another home user identifier. {iden tifier=%{public}@, existingHomeUserIdentifier=%{mask.hash}@, addedHomeUserIdentifier=%{mask.hash}@, iTunesAltD SID=%{mask.hash}@}",  buf,  0x48u);
      }

      goto LABEL_46;
    }

    if (v48)
    {
      uint64_t v69 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138544386;
      uint64_t v90 = (uint64_t)v44;
      __int16 v91 = 2160;
      uint64_t v92 = 1752392040LL;
      __int16 v93 = 2112;
      uint64_t v94 = (uint64_t)v3;
      __int16 v95 = 2160;
      uint64_t v96 = 1752392040LL;
      __int16 v97 = 2112;
      *(void *)id v98 = v69;
      _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "Associating home user from the iTunes account with the only existing user using this iTunes account. {identifier =%{public}@, homeUserIdentifier=%{mask.hash}@, iTunesAltDSID=%{mask.hash}@}",  buf,  0x34u);
    }

    __int128 v70 = *(void **)(a1 + 48);
    v72[0] = _NSConcreteStackBlock;
    v72[1] = 3221225472LL;
    v72[2] = sub_1000D8278;
    v72[3] = &unk_1003D2F80;
    id v73 = v3;
    [v70 updateUserProfileWithIdentifier:v44 usingBlock:v72];

LABEL_58:
    goto LABEL_51;
  }

  _Block_object_dispose(buf, 8);
LABEL_46:
}

LABEL_47:
LABEL_48:
  id v61 = sub_100084680();
  __int128 v62 = (os_log_s *)objc_claimAutoreleasedReturnValue(v61);
  if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v63 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 141558786;
    uint64_t v90 = 1752392040LL;
    __int16 v91 = 2112;
    uint64_t v92 = v63;
    __int16 v93 = 2160;
    uint64_t v94 = 1752392040LL;
    __int16 v95 = 2112;
    uint64_t v96 = (uint64_t)v3;
    _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "Creating a new guest user profile for the added home user identifier. {iTunesAltDSID=%{mask.hash}@, homeUserIdenti fier=%{mask.hash}@}",  buf,  0x2Au);
  }

  sub_1000D5F74(*(void *)(a1 + 80), *(void **)(a1 + 32), v3);
LABEL_51:
}

  return v33;
}

void sub_1000D80D4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setITunesAltDSID:v3];
  [v4 setHomeUserIdentifier:*(void *)(a1 + 40)];
}

void sub_1000D811C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setITunesAltDSID:v3];
  [v4 setHomeUserIdentifier:*(void *)(a1 + 40)];
}

uint64_t sub_1000D8164(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 iTunesAltDSID]);
  uint64_t v4 = BSEqualObjects(v2, v3);

  return v4;
}

uint64_t sub_1000D81A8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 iCloudAltDSID]);
  uint64_t v4 = BSEqualObjects(v2, v3);

  return v4;
}

uint64_t sub_1000D81EC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 gameCenterAltDSID]);
  uint64_t v4 = BSEqualObjects(v2, v3);

  return v4;
}

void sub_1000D8230(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setITunesAltDSID:v3];
  [v4 setHomeUserIdentifier:*(void *)(a1 + 40)];
}

id sub_1000D8278(uint64_t a1, void *a2)
{
  return [a2 setHomeUserIdentifier:*(void *)(a1 + 32)];
}

void sub_1000D8294(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v3]);
  id v5 = sub_100084680();
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 40);
    int v28 = 141559042;
    uint64_t v29 = 1752392040LL;
    __int16 v30 = 2112;
    uint64_t v31 = v7;
    __int16 v32 = 2160;
    uint64_t v33 = 1752392040LL;
    __int16 v34 = 2112;
    id v35 = v3;
    __int16 v36 = 2112;
    uint64_t v37 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Handling removed home user identifier. {iTunesAltDSID=%{mask.hash}@, homeUserIdentifier=%{mask.hash}@, userProfile=%@}",  (uint8_t *)&v28,  0x34u);
  }

  id v8 = [v4 type];
  id v9 = sub_100084680();
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
  if (v8)
  {
    if (v11)
    {
      uint64_t v12 = *(void *)(a1 + 40);
      int v28 = 141559042;
      uint64_t v29 = 1752392040LL;
      __int16 v30 = 2112;
      uint64_t v31 = v12;
      __int16 v32 = 2160;
      uint64_t v33 = 1752392040LL;
      __int16 v34 = 2112;
      id v35 = v3;
      __int16 v36 = 2112;
      uint64_t v37 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Removing the guest user profile for the removed home user identifier. {iTunesAltDSID=%{mask.hash}@, homeUserIden tifier=%{mask.hash}@, userProfile=%@}",  (uint8_t *)&v28,  0x34u);
    }

    int v13 = (void *)objc_claimAutoreleasedReturnValue([v4 personaUniqueString]);
    int v14 = [v4 isSelected];
    uint64_t v15 = *(void *)(a1 + 56);
    if (v15) {
      id v16 = *(void **)(v15 + 192);
    }
    else {
      id v16 = 0LL;
    }
    sub_1000D5540((uint64_t)&OBJC_CLASS___PBLegacyUserProfileManager, v13, v14, v16, 0LL);

    int v17 = (void *)objc_claimAutoreleasedReturnValue([v4 iCloudAltDSID]);
    if (v17)
    {
      uint64_t v18 = *(void *)(a1 + 56);
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v4 iCloudAltDSID]);
      sub_1000D69FC(v18, v19, 0LL);
    }

    id v20 = (void *)objc_claimAutoreleasedReturnValue([v4 gameCenterAltDSID]);

    if (v20)
    {
      uint64_t v21 = *(void *)(a1 + 56);
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v4 gameCenterAltDSID]);
      sub_1000D6CE4(v21, v22, 0LL);
    }

    uint64_t v23 = *(void **)(a1 + 48);
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
    [v23 removeUserProfileWithIdentifier:v24];

    id v25 = objc_alloc_init(&OBJC_CLASS___TVCSUserProfilesAnalyticsRemoveUserEvent);
    [v25 setActionType:1];
    objc_msgSend(v25, "setUserType:", objc_msgSend(v4, "type"));
    TVCSUserProfilesAnalyticsSendEvent(v25);
  }

  else
  {
    if (v11)
    {
      uint64_t v26 = *(void *)(a1 + 40);
      int v28 = 141559042;
      uint64_t v29 = 1752392040LL;
      __int16 v30 = 2112;
      uint64_t v31 = v26;
      __int16 v32 = 2160;
      uint64_t v33 = 1752392040LL;
      __int16 v34 = 2112;
      id v35 = v3;
      __int16 v36 = 2112;
      uint64_t v37 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Removing home user information from the primary user profile. {iTunesAltDSID=%{mask.hash}@, homeUserIdentifier=% {mask.hash}@, userProfile=%@}",  (uint8_t *)&v28,  0x34u);
    }

    id v27 = *(void **)(a1 + 48);
    id v25 = (id)objc_claimAutoreleasedReturnValue([v4 identifier]);
    [v27 updateUserProfileWithIdentifier:v25 usingBlock:&stru_1003D5FA0];
  }
}

void sub_1000D85E4(id a1, PBSMutableUserProfile *a2)
{
}

void sub_1000D8600(uint64_t a1)
{
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
    uint64_t v2 = *(void **)(a1 + 120);
    if (!v2)
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"_pendingUserProfileAccountNotifications != nil"));
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10027E6C4();
      }
      _bs_set_crash_log_message([v12 UTF8String]);
      __break(0);
      JUMPOUT(0x1000D87D4LL);
    }

    id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 coalescedNotifications]);
    id v4 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = 0LL;

    id v5 = sub_100084680();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 134217984;
      id v19 = [v3 count];
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Processing pending user profile account notifications. {pendingCount=%ld}",  buf,  0xCu);
    }

    __int128 v15 = 0u;
    __int128 v16 = 0u;
    __int128 v13 = 0u;
    __int128 v14 = 0u;
    id v7 = v3;
    id v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v14;
      do
      {
        BOOL v11 = 0LL;
        do
        {
          if (*(void *)v14 != v10) {
            objc_enumerationMutation(v7);
          }
          sub_1000D428C(a1, *(void **)(*((void *)&v13 + 1) + 8LL * (void)v11));
          BOOL v11 = (char *)v11 + 1;
        }

        while (v9 != v11);
        id v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }

      while (v9);
    }
  }

void sub_1000D87DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(void **)(a1 + 40);
  id v9 = *(dispatch_queue_s **)(v7 + 32);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_1000D88C4;
  void v12[3] = &unk_1003D5FF0;
  void v12[4] = v7;
  id v13 = v8;
  id v14 = *(id *)(a1 + 48);
  id v15 = *(id *)(a1 + 56);
  id v16 = v5;
  id v17 = v6;
  id v10 = v6;
  id v11 = v5;
  dispatch_async(v9, v12);
}

void sub_1000D88C4(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 152) containsObject:*(void *)(a1 + 40)])
  {
    [*(id *)(*(void *)(a1 + 32) + 152) removeObject:*(void *)(a1 + 40)];
    uint64_t v2 = *(void *)(a1 + 64);
    id v3 = sub_100084680();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = v4;
    if (v2)
    {
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *(void *)(a1 + 48);
        uint64_t v7 = *(void *)(a1 + 56);
        uint64_t v8 = *(void *)(a1 + 64);
        *(_DWORD *)__int128 buf = 141559298;
        uint64_t v23 = 1752392040LL;
        __int16 v24 = 2112;
        uint64_t v25 = v6;
        __int16 v26 = 2160;
        uint64_t v27 = 1752392040LL;
        __int16 v28 = 2112;
        uint64_t v29 = v7;
        __int16 v30 = 2160;
        uint64_t v31 = 1752392040LL;
        __int16 v32 = 2112;
        uint64_t v33 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Finished creating persona for new guest user profile. {iTunesAltDSID=%{mask.hash}@, homeUserIdentifier=%{mask. hash}@, personaUniqueString=%{mask.hash}@}",  buf,  0x3Eu);
      }

      id v9 = objc_alloc(&OBJC_CLASS___PBSUserProfile);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 UUIDString]);
      LOBYTE(v21) = 0;
      id v5 = -[PBSUserProfile initWithIdentifier:type:iCloudAltDSID:iTunesAltDSID:gameCenterAltDSID:personaUniqueString:homeUserIdentifier:selected:overrideName:]( v9,  "initWithIdentifier:type:iCloudAltDSID:iTunesAltDSID:gameCenterAltDSID:personaUniqueString:homeUserIdentifie r:selected:overrideName:",  v11,  1LL,  0LL,  *(void *)(a1 + 48),  0LL,  *(void *)(a1 + 64),  *(void *)(a1 + 56),  v21,  0LL);

      [*(id *)(*(void *)(a1 + 32) + 56) addUserProfile:v5];
      sub_1000D13D4(*(void *)(a1 + 32));
      [*(id *)(*(void *)(a1 + 32) + 16) prefetchProfilePictureForUserProfile:v5];
      if (*(void *)(a1 + 56)) {
        uint64_t v12 = 2LL;
      }
      else {
        uint64_t v12 = 3LL;
      }
      id v13 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSUserProfilesAnalyticsAddUserEvent addUserEventWithActionType:userProfile:]( &OBJC_CLASS___TVCSUserProfilesAnalyticsAddUserEvent,  "addUserEventWithActionType:userProfile:",  v12,  v5));
      TVCSUserProfilesAnalyticsSendEvent(v13);
    }

    else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      sub_10027E76C((void *)a1, v5, v20);
    }
  }

  else
  {
    id v14 = sub_100084680();
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 48);
      uint64_t v17 = *(void *)(a1 + 56);
      *(_DWORD *)__int128 buf = 141558786;
      uint64_t v23 = 1752392040LL;
      __int16 v24 = 2112;
      uint64_t v25 = v16;
      __int16 v26 = 2160;
      uint64_t v27 = 1752392040LL;
      __int16 v28 = 2112;
      uint64_t v29 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Skipping creating guest user profile. Its pending user profile attributes got removed while creating its persona . {iTunesAltDSID=%{mask.hash}@, homeUserIdentifier=%{mask.hash}@}",  buf,  0x2Au);
    }

    uint64_t v18 = *(void *)(a1 + 32);
    if (v18) {
      id v19 = *(void **)(v18 + 192);
    }
    else {
      id v19 = 0LL;
    }
    sub_1000D5540((uint64_t)&OBJC_CLASS___PBLegacyUserProfileManager, *(void **)(a1 + 64), 0, v19, 0LL);
  }

void sub_1000D8D90(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "bs_safeStringForKey:", kUMUserPersonaUniqueStringKey));
  id v7 = sub_100084680();
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 141558274;
      uint64_t v16 = 1752392040LL;
      __int16 v17 = 2112;
      uint64_t v18 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Finished creating guest persona. {personaUniqueString=%{mask.hash}@}",  (uint8_t *)&v15,  0x16u);
    }

    id v10 = *(void (**)(void))(*(void *)(a1 + 32) + 16LL);
  }

  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10027E8B8();
    }

    id v10 = *(void (**)(void))(*(void *)(a1 + 32) + 16LL);
  }

  v10();
  id v11 = sub_100084680();
  uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  id v13 = v12;
  os_signpost_id_t v14 = *(void *)(a1 + 40);
  if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    LOWORD(v15) = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v13,  OS_SIGNPOST_INTERVAL_END,  v14,  "create guest persona",  "",  (uint8_t *)&v15,  2u);
  }
}

uint64_t sub_1000D8F28(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000D8F48(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[UMUserManager sharedManager](&OBJC_CLASS___UMUserManager, "sharedManager"));
  id v3 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000D8FFC;
  _OWORD v6[3] = &unk_1003D6068;
  id v7 = v3;
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  id v8 = v4;
  uint64_t v9 = v5;
  [v2 deleteUserPersonaWithPersonaUniqueString:v7 passcodeData:0 completionHandler:v6];
}

void sub_1000D8FFC(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100084680();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10027E918();
    }

    id v7 = *(void (**)(void))(a1[5] + 16LL);
  }

  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = a1[4];
      int v13 = 141558274;
      uint64_t v14 = 1752392040LL;
      __int16 v15 = 2112;
      uint64_t v16 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Finished removing persona. {personaUniqueString=%{mask.hash}@}",  (uint8_t *)&v13,  0x16u);
    }

    id v7 = *(void (**)(void))(a1[5] + 16LL);
  }

  v7();
  id v9 = sub_100084680();
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = v10;
  os_signpost_id_t v12 = a1[6];
  if (v12 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    LOWORD(v13) = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v11,  OS_SIGNPOST_INTERVAL_END,  v12,  "remove persona",  "",  (uint8_t *)&v13,  2u);
  }
}

uint64_t sub_1000D9178(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000D9198(void *a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_100084680();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = v7;
  if (a2)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = a1[4];
      int v15 = 141558274;
      uint64_t v16 = 1752392040LL;
      __int16 v17 = 2112;
      uint64_t v18 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Finished removing iCloud account. {iCloudAltDSID=%{mask.hash}@}",  (uint8_t *)&v15,  0x16u);
    }

    id v10 = *(void (**)(void))(a1[5] + 16LL);
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10027E97C();
    }

    id v10 = *(void (**)(void))(a1[5] + 16LL);
  }

  v10();
  id v11 = sub_100084680();
  os_signpost_id_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  int v13 = v12;
  os_signpost_id_t v14 = a1[6];
  if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    LOWORD(v15) = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v13,  OS_SIGNPOST_INTERVAL_END,  v14,  "remove icloud account",  "",  (uint8_t *)&v15,  2u);
  }
}

uint64_t sub_1000D9318(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000D9338(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "aa_altDSID"));
  uint64_t v4 = BSEqualStrings(v3, *(void *)(a1 + 32));

  return v4;
}

void sub_1000D9378(void *a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_100084680();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = v7;
  if (a2)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = a1[4];
      int v15 = 141558274;
      uint64_t v16 = 1752392040LL;
      __int16 v17 = 2112;
      uint64_t v18 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Finished removing Game Center account. {gameCenterAltDSID=%{mask.hash}@}",  (uint8_t *)&v15,  0x16u);
    }

    id v10 = *(void (**)(void))(a1[5] + 16LL);
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10027E9E0();
    }

    id v10 = *(void (**)(void))(a1[5] + 16LL);
  }

  v10();
  id v11 = sub_100084680();
  os_signpost_id_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  int v13 = v12;
  os_signpost_id_t v14 = a1[6];
  if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    LOWORD(v15) = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v13,  OS_SIGNPOST_INTERVAL_END,  v14,  "remove game center account",  "",  (uint8_t *)&v15,  2u);
  }
}

dispatch_queue_t *sub_1000D94F8(dispatch_queue_t *result)
{
  if (result)
  {
    uint64_t v1 = result;
    dispatch_assert_queue_V2(result[4]);
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    uint64_t v2 = v1[8];
    id v3 = -[dispatch_queue_s countByEnumeratingWithState:objects:count:]( v2,  "countByEnumeratingWithState:objects:count:",  &v14,  v18,  16LL);
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v15;
      do
      {
        for (i = 0LL; i != v4; i = (char *)i + 1)
        {
          if (*(void *)v15 != v5) {
            objc_enumerationMutation(v2);
          }
          uint64_t v7 = *(void *)(*((void *)&v14 + 1) + 8LL * (void)i);
          if ((objc_opt_respondsToSelector(v7, "userProfileManagerDidUpdate:") & 1) != 0)
          {
            objc_initWeak(&location, v1);
            uint64_t v8 = v1[5];
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472LL;
            block[2] = sub_1000D96CC;
            block[3] = &unk_1003D0378;
            objc_copyWeak(&v12, &location);
            void block[4] = v7;
            void block[5] = v1;
            dispatch_async(v8, block);
            objc_destroyWeak(&v12);
            objc_destroyWeak(&location);
          }
        }

        id v4 = -[dispatch_queue_s countByEnumeratingWithState:objects:count:]( v2,  "countByEnumeratingWithState:objects:count:",  &v14,  v18,  16LL);
      }

      while (v4);
    }

    dispatch_queue_t v9 = v1[9];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    _DWORD v10[2] = sub_1000D9704;
    void v10[3] = &unk_1003D6108;
    void v10[4] = v1;
    return (dispatch_queue_t *)-[dispatch_queue_s enumerateKeysAndObjectsUsingBlock:]( v9,  "enumerateKeysAndObjectsUsingBlock:",  v10);
  }

  return result;
}

void sub_1000D96CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained) {
    [*(id *)(a1 + 32) userProfileManagerDidUpdate:*(void *)(a1 + 40)];
  }
}

void sub_1000D9704(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v5 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 40LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000D97C0;
  block[3] = &unk_1003D0300;
  objc_copyWeak(&v9, &location);
  id v8 = v4;
  id v6 = v4;
  dispatch_async(v5, block);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void sub_1000D97C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

void sub_1000D9800(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained) {
    [*(id *)(a1 + 32) userProfileManager:WeakRetained didUpdateGroupRecommendationsSession:*(void *)(*(void *)(a1 + 40) + 24)];
  }
}

void sub_1000D9840(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v5 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 40LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000D98FC;
  block[3] = &unk_1003D0300;
  objc_copyWeak(&v9, &location);
  id v8 = v4;
  id v6 = v4;
  dispatch_async(v5, block);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void sub_1000D98FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained groupRecommendationsSession]);
    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
}

void sub_1000D995C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained) {
    [*(id *)(a1 + 32) userProfileManager:WeakRetained didSwitchToUserWithIdentifier:*(void *)(a1 + 40) previousUserIdentifier:*(void *)(a1 + 48)];
  }
}

void sub_1000D999C(id *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  objc_initWeak(&location, a1[4]);
  uint64_t v5 = (dispatch_queue_s *)*((void *)a1[4] + 5);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000D9A80;
  block[3] = &unk_1003D5AE8;
  objc_copyWeak(&v11, &location);
  id v10 = v4;
  id v8 = a1[5];
  id v9 = a1[6];
  id v6 = v4;
  dispatch_async(v5, block);

  objc_destroyWeak(&v11);
  objc_destroyWeak(&location);
}

void sub_1000D9A80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained) {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }
}

void sub_1000D9AC0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (a1)
  {
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472LL;
    v33[2] = sub_1000D9ED4;
    v33[3] = &unk_1003D0110;
    id v34 = v6;
    id v8 = objc_retainBlock(v33);
    id v9 = *(void **)(a1 + 48);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 iTunesAltDSID]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "ams_iTunesAccountWithAltDSID:", v10));

    if (v11)
    {
      id v12 = sub_100084680();
      int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
        __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v5 iTunesAltDSID]);
        __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v5 homeUserIdentifier]);
        *(_DWORD *)__int128 buf = 138413314;
        __int16 v36 = v14;
        __int16 v37 = 2160;
        uint64_t v38 = 1752392040LL;
        __int16 v39 = 2112;
        id v40 = v15;
        __int16 v41 = 2160;
        uint64_t v42 = 1752392040LL;
        __int16 v43 = 2112;
        uint64_t v44 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Saving iTunes account. {userProfileIdentifier=%@, iTunesAltDSID=%{mask.hash}@, homeUserIdentifier=%{mask.hash}@}",  buf,  0x34u);
      }

      [v11 setActive:1];
      __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v5 homeUserIdentifier]);
      objc_msgSend(v11, "pbd_setSelectedHomeUserIdentifier:", v17);

      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "ams_saveAccount:", v11));
      v29[0] = _NSConcreteStackBlock;
      v29[1] = 3221225472LL;
      void v29[2] = sub_1000D9FA4;
      v29[3] = &unk_1003D0110;
      id v19 = v8;
      id v30 = v19;
      [v18 addSuccessBlock:v29];
      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472LL;
      void v27[2] = sub_1000DA018;
      void v27[3] = &unk_1003D6180;
      __int16 v28 = v19;
      [v18 addErrorBlock:v27];
    }

    else
    {
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "ams_activeiTunesAccount"));
      id v20 = sub_100084680();
      uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
      uint64_t v22 = v21;
      if (v18)
      {
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
          __int16 v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "ams_altDSID"));
          *(_DWORD *)__int128 buf = 138543874;
          __int16 v36 = v23;
          __int16 v37 = 2160;
          uint64_t v38 = 1752392040LL;
          __int16 v39 = 2112;
          id v40 = v24;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "No iTunes account for the user profile, deactivating the active iTunes account. {userProfileIdentifier=%{pub lic}@, activeiTunesAltDSID=%{mask.hash}@}",  buf,  0x20u);
        }

        [v18 setActive:0];
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "ams_saveAccount:", v18));
        v31[0] = _NSConcreteStackBlock;
        v31[1] = 3221225472LL;
        v31[2] = sub_1000D9EF4;
        v31[3] = &unk_1003D0048;
        __int16 v32 = v8;
        [v25 addFinishBlock:v31];
      }

      else
      {
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
          *(_DWORD *)__int128 buf = 138543362;
          __int16 v36 = v26;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "No iTunes accounts, nothing to do. {userProfileIdentifier=%{public}@}",  buf,  0xCu);
        }

        ((void (*)(void *))v8[2])(v8);
      }
    }
  }
}

uint64_t sub_1000D9ED4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000D9EF4(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_100084680();
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = v7;
  if (a2)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v9 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Finished deactivating iTunes account.",  v9,  2u);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    sub_10027EA44();
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000D9FA4(uint64_t a1)
{
  id v2 = sub_100084680();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Finished saving iTunes account.", v5, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000DA018(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100084680();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
    sub_10027EAA4();
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000DA080(uint64_t a1, void *a2)
{
  id v73 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v73 userProfiles]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 allValues]);
  v85[0] = _NSConcreteStackBlock;
  v85[1] = 3221225472LL;
  v85[2] = sub_1000DA8A8;
  v85[3] = &unk_1003D2FA8;
  v85[4] = *(void *)(a1 + 32);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bs_filter:", v85));

  if ([v5 count])
  {
    if (_BSIsInternalInstall( "-[PBLegacyUserProfileManager _workQueue_initializeUserProfileStorage]_block_invoke",  v6))
    {
      id v7 = sub_100084680();
      id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_10027EB04();
      }
    }

    else
    {
      id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bs_map:", &stru_1003D61C0));
      id v9 = sub_100084680();
      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10027EB64();
      }
    }

    __int128 v83 = 0u;
    __int128 v84 = 0u;
    __int128 v81 = 0u;
    __int128 v82 = 0u;
    __int128 v71 = v5;
    id v11 = v5;
    id v12 = [v11 countByEnumeratingWithState:&v81 objects:v95 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v82;
      do
      {
        for (i = 0LL; i != v13; i = (char *)i + 1)
        {
          if (*(void *)v82 != v14) {
            objc_enumerationMutation(v11);
          }
          __int128 v16 = *(void **)(*((void *)&v81 + 1) + 8LL * (void)i);
          id v17 = sub_100084680();
          uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
          {
            id v19 = (void *)objc_claimAutoreleasedReturnValue([v16 identifier]);
            *(_DWORD *)__int128 buf = 138543362;
            uint64_t v88 = (uint64_t)v19;
            _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "Removing user in invalid state. {userIdentifier=%{public}@}",  buf,  0xCu);
          }

          id v20 = (void *)objc_claimAutoreleasedReturnValue([v16 identifier]);
          [v73 removeUserProfileWithIdentifier:v20];
        }

        id v13 = [v11 countByEnumeratingWithState:&v81 objects:v95 count:16];
      }

      while (v13);
    }

    id v5 = v71;
  }

  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v73 userProfiles]);
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v21 allValues]);

  id v23 = [v22 count];
  if (v23 > (id)+[PBLegacyUserProfileManager _maxNumberOfUsers]( &OBJC_CLASS___PBLegacyUserProfileManager,  "_maxNumberOfUsers"))
  {
    id v24 = sub_100084680();
    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "There are more users than the allowed maximum, pruning excess users...",  buf,  2u);
    }

    __int16 v26 = [v22 count];
    int64_t v27 = v26
        - (_BYTE *)+[PBLegacyUserProfileManager _maxNumberOfUsers]( &OBJC_CLASS___PBLegacyUserProfileManager,  "_maxNumberOfUsers");
    __int16 v28 = (void *)objc_claimAutoreleasedReturnValue( +[PBSUserProfilesSnapshot _mostRecentlySelectedSortDescriptors]( &OBJC_CLASS___PBSUserProfilesSnapshot,  "_mostRecentlySelectedSortDescriptors"));
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v22 sortedArrayUsingDescriptors:v28]);

    for (j = (char *)[v29 count] - 1; ; --j)
    {
      uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v29 objectAtIndexedSubscript:j]);
      if ([v31 type] == (id)1)
      {
        __int16 v32 = (void *)objc_claimAutoreleasedReturnValue([v31 homeUserIdentifier]);

        if (!v32)
        {
          id v33 = sub_100084680();
          id v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
          {
            id v35 = (void *)objc_claimAutoreleasedReturnValue([v31 identifier]);
            __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([v31 iCloudAltDSID]);
            *(_DWORD *)__int128 buf = 138544130;
            uint64_t v88 = (uint64_t)v35;
            __int16 v89 = 2160;
            uint64_t v90 = 1752392040LL;
            __int16 v91 = 2112;
            id v92 = v36;
            __int16 v93 = 2112;
            id v94 = v31;
            _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "Removing non-home guest user. {userIdentifier=%{public}@, iCloudAltDSID=%{mask.hash}@, userProfile=%@}",  buf,  0x2Au);
          }

          __int16 v37 = (void *)objc_claimAutoreleasedReturnValue([v31 identifier]);
          [v73 removeUserProfileWithIdentifier:v37];

          if (!--v27) {
            break;
          }
        }
      }
    }
  }

  uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v73 userProfiles]);
  uint64_t v39 = objc_claimAutoreleasedReturnValue([v73 primaryUserProfileIdentifier]);
  __int128 v70 = (void *)v39;
  if (!v39
    || (uint64_t v40 = v39, (v41 = (void *)objc_claimAutoreleasedReturnValue([v38 objectForKey:v39])) == 0))
  {
    id v45 = 0LL;
    uint64_t v69 = 0LL;
LABEL_37:
    id v52 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSPreferredLanguagesManager sharedInstance]( &OBJC_CLASS___TVCSPreferredLanguagesManager,  "sharedInstance"));
    id v53 = (void *)objc_claimAutoreleasedReturnValue([v52 preferredLanguages]);
    id v48 = [v53 copy];

    id v54 = (void *)objc_claimAutoreleasedReturnValue([v52 preferredInputModeList]);
    id v55 = [v54 copy];

    id v45 = v55;
    goto LABEL_40;
  }

  uint64_t v42 = v41;
  __int16 v43 = (void *)objc_claimAutoreleasedReturnValue([v41 preferredLanguages]);
  uint64_t v44 = objc_claimAutoreleasedReturnValue([v42 preferredInputModes]);
  id v45 = (id)v44;
  if (!v43 || v44)
  {
    id v48 = v43;
  }

  else
  {
    id v46 = [[TVCSPreferredLanguagesManager alloc] initWithLanguages:v43 inputModes:0 updateFromPreferences:0];
    id v47 = (void *)objc_claimAutoreleasedReturnValue([v46 preferredLanguages]);
    id v48 = [v47 copy];

    id v49 = (void *)objc_claimAutoreleasedReturnValue([v46 preferredInputModeList]);
    id v45 = [v49 copy];

    id v50 = sub_100084680();
    uint64_t v51 = (os_log_s *)objc_claimAutoreleasedReturnValue(v50);
    if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138544130;
      uint64_t v88 = v40;
      __int16 v89 = 2112;
      uint64_t v90 = (uint64_t)v42;
      __int16 v91 = 2114;
      id v92 = v48;
      __int16 v93 = 2114;
      id v94 = v45;
      _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "Primary user is missing input mode data. {identifier=%{public}@, primaryUser=%@, preferredLanguages=%{public}@, preferredInputModes=%{public}@}",  buf,  0x2Au);
    }
  }

  uint64_t v69 = v42;
  if (!v48) {
    goto LABEL_37;
  }
LABEL_40:
  __int128 v79 = 0u;
  __int128 v80 = 0u;
  __int128 v77 = 0u;
  __int128 v78 = 0u;
  id v72 = v38;
  id v56 = (void *)objc_claimAutoreleasedReturnValue([v38 allValues]);
  id v57 = [v56 countByEnumeratingWithState:&v77 objects:v86 count:16];
  if (v57)
  {
    id v58 = v57;
    uint64_t v59 = *(void *)v78;
    do
    {
      for (k = 0LL; k != v58; k = (char *)k + 1)
      {
        if (*(void *)v78 != v59) {
          objc_enumerationMutation(v56);
        }
        id v61 = *(void **)(*((void *)&v77 + 1) + 8LL * (void)k);
        uint64_t v62 = objc_claimAutoreleasedReturnValue([v61 preferredLanguages]);
        if (v62)
        {
          uint64_t v63 = (void *)v62;
          id v64 = (void *)objc_claimAutoreleasedReturnValue([v61 preferredInputModes]);

          if (v64) {
            continue;
          }
        }

        id v65 = sub_100084680();
        uint64_t v66 = (os_log_s *)objc_claimAutoreleasedReturnValue(v65);
        if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
        {
          id v67 = (void *)objc_claimAutoreleasedReturnValue([v61 identifier]);
          *(_DWORD *)__int128 buf = 138544130;
          uint64_t v88 = (uint64_t)v67;
          __int16 v89 = 2112;
          uint64_t v90 = (uint64_t)v61;
          __int16 v91 = 2114;
          id v92 = v48;
          __int16 v93 = 2114;
          id v94 = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEFAULT,  "User profile is missing language data, updating it. {userProfileIdentifier=%{public}@, userProfile=%@, newLa nguages=%{public}@, newInputModes=%{public}@}",  buf,  0x2Au);
        }

        v68 = (void *)objc_claimAutoreleasedReturnValue([v61 identifier]);
        v74[0] = _NSConcreteStackBlock;
        v74[1] = 3221225472LL;
        v74[2] = sub_1000DA97C;
        v74[3] = &unk_1003D5F58;
        id v75 = v48;
        id v76 = v45;
        [v73 updateUserProfileWithIdentifier:v68 usingBlock:v74];
      }

      id v58 = [v56 countByEnumeratingWithState:&v77 objects:v86 count:16];
    }

    while (v58);
  }
}

BOOL sub_1000DA8A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[PBSUserProfileAccountInfo alloc] initWithAccountStore:*(void *)(*(void *)(a1 + 32) + 48) userProfile:v3];

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 iCloudAccount]);
  if (v5)
  {
    BOOL v6 = 0LL;
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 iTunesAccount]);
    if (v7)
    {
      BOOL v6 = 0LL;
    }

    else
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 gameCenterAccount]);
      BOOL v6 = v8 == 0LL;
    }
  }

  return v6;
}

id sub_1000DA95C(id a1, PBSUserProfile *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBSUserProfile identifier](a2, "identifier"));
}

void sub_1000DA97C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setPreferredLanguages:v3];
  [v4 setPreferredInputModes:*(void *)(a1 + 40)];
}

void sub_1000DA9C4(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    uint64_t v29 = 0LL;
    id WeakRetained = objc_loadWeakRetained(a1 + 7);
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    id v30 = v5;
    id v8 = v5;
    id v9 = [v8 countByEnumeratingWithState:&v38 objects:v48 count:16];
    if (!v9) {
      goto LABEL_26;
    }
    id v10 = v9;
    uint64_t v11 = *(void *)v39;
    uint64_t v36 = ACAccountTypeIdentifierAppleAccount;
    uint64_t v35 = ACAccountTypeIdentifieriTunesStore;
    __int16 v32 = a1 + 6;
    uint64_t v33 = ACAccountTypeIdentifierGameCenter;
    uint64_t v31 = a1 + 5;
    id v12 = a1 + 4;
    while (1)
    {
      for (i = 0LL; i != v10; i = (char *)i + 1)
      {
        if (*(void *)v39 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v14 = *(void **)(*((void *)&v38 + 1) + 8LL * (void)i);
        if ((objc_msgSend(v14, "ams_isLocalOrSandboxAccount", v29) & 1) == 0)
        {
          __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "aa_altDSID"));
          __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v14 accountType]);
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 identifier]);

          unsigned __int8 v18 = [v17 isEqual:v36];
          id v19 = v12;
          if ((v18 & 1) == 0)
          {
            if ([v17 isEqual:v35])
            {
              id v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "ams_homeUserHiddenIdentifiers"));
              id v21 = [v20 count];

              id v19 = v31;
              if (!v21) {
                goto LABEL_15;
              }
LABEL_22:
              id v23 = 0LL;
LABEL_23:

              continue;
            }

            unsigned __int8 v22 = [v17 isEqual:v33];
            id v19 = v32;
            if ((v22 & 1) == 0)
            {
              id v26 = sub_100084680();
              int64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([v14 identifier]);
                *(_DWORD *)__int128 buf = 138543874;
                __int16 v43 = v28;
                __int16 v44 = 2114;
                id v45 = v17;
                __int16 v46 = 2112;
                id v47 = v14;
                _os_log_error_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "Unexpected account type identifier, ignoring account. {identifier=%{public}@, typeIdentifier=%{public}@, account=%@}",  buf,  0x20u);
              }

              goto LABEL_22;
            }
          }

void sub_1000DAD54(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  id v7 = sub_100084680();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v8;
  if ((a2 & 1) != 0)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v10 = 138543362;
      uint64_t v11 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Account removed successfully. {identifier=%{public}@}",  (uint8_t *)&v10,  0xCu);
    }
  }

  else if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    sub_10027EC24((uint64_t)v6, v5, v9);
  }
}

void sub_1000DAE48(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_100084680();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10027ED4C();
    }
  }

  else
  {
    uint64_t v38 = a1;
    id v39 = v5;
    __int128 v40 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
    __int128 v45 = 0u;
    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v48 = 0u;
    id v9 = v5;
    id v10 = [v9 countByEnumeratingWithState:&v45 objects:v50 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v46;
      do
      {
        for (i = 0LL; i != v11; i = (char *)i + 1)
        {
          if (*(void *)v46 != v12) {
            objc_enumerationMutation(v9);
          }
          uint64_t v14 = *(void **)(*((void *)&v45 + 1) + 8LL * (void)i);
          __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", kUMUserPersonaTypeKey, v38));
          uint64_t v16 = objc_opt_class(&OBJC_CLASS___NSNumber);
          id v17 = v15;
          unsigned __int8 v18 = v17;
          if (v16)
          {
            if ((objc_opt_isKindOfClass(v17, v16) & 1) != 0) {
              id v19 = v18;
            }
            else {
              id v19 = 0LL;
            }
          }

          else
          {
            id v19 = 0LL;
          }

          id v20 = v19;

          if (v20 && [v20 unsignedIntegerValue] == (id)6)
          {
            id v21 = (void *)objc_claimAutoreleasedReturnValue([v14 objectForKeyedSubscript:kUMUserPersonaUniqueStringKey]);
            uint64_t v22 = objc_opt_class(&OBJC_CLASS___NSString);
            id v23 = v21;
            id v24 = v23;
            if (v22)
            {
              if ((objc_opt_isKindOfClass(v23, v22) & 1) != 0) {
                uint64_t v25 = v24;
              }
              else {
                uint64_t v25 = 0LL;
              }
            }

            else
            {
              uint64_t v25 = 0LL;
            }

            id v26 = v25;

            if (v26) {
              -[NSMutableSet addObject:](v40, "addObject:", v26);
            }
          }
        }

        id v11 = [v9 countByEnumeratingWithState:&v45 objects:v50 count:16];
      }

      while (v11);
    }

    int64_t v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v38 + 32) userProfilesSnapshot]);
    __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([v27 userProfiles]);
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v28 allValues]);
    id v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "bs_compactMap:", &stru_1003D6208));

    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v30));
    -[NSMutableSet minusSet:](v40, "minusSet:", v31);

    if (-[NSMutableSet count](v40, "count"))
    {
      id v32 = sub_100084680();
      uint64_t v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
        sub_10027ECEC();
      }
    }

    __int128 v43 = 0u;
    __int128 v44 = 0u;
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    id v8 = v40;
    id v34 = -[os_log_s countByEnumeratingWithState:objects:count:]( v8,  "countByEnumeratingWithState:objects:count:",  &v41,  v49,  16LL);
    if (v34)
    {
      id v35 = v34;
      uint64_t v36 = *(void *)v42;
      do
      {
        for (j = 0LL; j != v35; j = (char *)j + 1)
        {
          if (*(void *)v42 != v36) {
            objc_enumerationMutation(v8);
          }
          sub_1000D5540( (uint64_t)&OBJC_CLASS___PBLegacyUserProfileManager,  *(void **)(*((void *)&v41 + 1) + 8LL * (void)j),  0,  0LL,  0LL);
        }

        id v35 = -[os_log_s countByEnumeratingWithState:objects:count:]( v8,  "countByEnumeratingWithState:objects:count:",  &v41,  v49,  16LL);
      }

      while (v35);
    }

    id v6 = 0LL;
    id v5 = v39;
  }
}

id sub_1000DB1E8(id a1, PBSUserProfile *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBSUserProfile personaUniqueString](a2, "personaUniqueString"));
}

id sub_1000DB208(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 type] == (id)1
    && (id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 iCloudAltDSID]), v4, v4))
  {
    id v5 = *(void **)(*(void *)(a1 + 32) + 48LL);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 iCloudAltDSID]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "aa_appleAccountWithAltDSID:", v6));
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 accountPropertyForKey:ACAccountPropertyPersonaIdentifier]);

    id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 personaUniqueString]);
    LODWORD(v6) = [v8 isEqual:v9];

    if ((_DWORD)v6)
    {
      uint64_t v10 = objc_claimAutoreleasedReturnValue([v3 personaUniqueString]);
    }

    else
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v3 personaUniqueString]);
      uint64_t v10 = objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ (account missing)",  v11));
    }

    uint64_t v25 = (void *)v10;
  }

  else
  {
    uint64_t v25 = 0LL;
  }

  v26[0] = @"identifier";
  id v24 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  v27[0] = v24;
  v26[1] = @"iCloud";
  id v23 = (void *)objc_claimAutoreleasedReturnValue([v3 iCloudAltDSID]);
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v23 != 0LL));
  v27[1] = v22;
  v26[2] = @"iTunes";
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v3 iTunesAltDSID]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v12 != 0LL));
  void v27[2] = v13;
  v26[3] = @"gameCenter";
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v3 gameCenterAltDSID]);
  __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v14 != 0LL));
  void v27[3] = v15;
  void v26[4] = @"isHomeUser";
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v3 homeUserIdentifier]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v16 != 0LL));
  void v27[4] = v17;
  void v26[5] = @"groupConsent";
  unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v3 groupRecommendationsConsent]));
  void v27[5] = v18;
  id v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v27,  v26,  6LL));
  id v20 = [v19 mutableCopy];

  if (v25) {
    [v20 setObject:v25 forKeyedSubscript:@"persona"];
  }

  return v20;
}

id sub_1000DB544(id a1, NSMutableDictionary *a2, PBSUserProfile *a3)
{
  id v4 = a2;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile iTunesAltDSID](v5, "iTunesAltDSID"));
  if (v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v4, "objectForKeyedSubscript:", v6));
    id v8 = v7;
    if (v7) {
      id v9 = v7;
    }
    else {
      id v9 = objc_opt_new(&OBJC_CLASS___NSMutableSet);
    }
    uint64_t v10 = v9;

    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[PBSUserProfile identifier](v5, "identifier"));
    -[NSMutableSet addObject:](v10, "addObject:", v11);

    -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", v10, v6);
  }

  return v4;
}

id sub_1000DB608(id a1, NSSet *a2)
{
  id v2 = a2;
  if (-[NSSet count](v2, "count") < 2) {
    id v3 = 0LL;
  }
  else {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(-[NSSet allObjects](v2, "allObjects"));
  }

  return v3;
}

void sub_1000DB934(_Unwind_Exception *a1)
{
}

void sub_1000DB958(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_100084680();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Automatic welcome back bulletin delay timer fired.",  buf,  2u);
    }

    [*((id *)WeakRetained + 12) invalidate];
    id v4 = (void *)*((void *)WeakRetained + 12);
    *((void *)WeakRetained + 12) = 0LL;

    id v5 = (dispatch_queue_s *)*((void *)WeakRetained + 4);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000DBA20;
    block[3] = &unk_1003CFF08;
    void block[4] = WeakRetained;
    dispatch_sync(v5, block);
  }
}

void sub_1000DBA20(uint64_t a1)
{
}

void sub_1000DBA3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 104);
  if (v3)
  {
    *(void *)(v2 + 104) = 0LL;
    id v4 = v3;

    [*(id *)(*(void *)(a1 + 32) + 160) dismissBulletin:v4];
    uint64_t v2 = *(void *)(a1 + 32);
  }

  sub_1000D37D8(v2);
}

void sub_1000DBB20(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 104) identifier]);
  int v4 = BSEqualStrings(v2, v3);

  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    id v6 = *(void **)(v5 + 104);
    *(void *)(v5 + 104) = 0LL;
  }

void sub_1000DBC00(uint64_t a1)
{
}

void sub_1000DBDAC(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_1000DBDFC(id a1)
{
  uint64_t v1 = -[NSMapTable initWithKeyOptions:valueOptions:capacity:]( objc_alloc(&OBJC_CLASS___NSMapTable),  "initWithKeyOptions:valueOptions:capacity:",  0LL,  0LL,  1LL);
  uint64_t v2 = (void *)qword_100470A30;
  qword_100470A30 = (uint64_t)v1;
}

void sub_1000DBE7C(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[NSMapTable strongToWeakObjectsMapTable](&OBJC_CLASS___NSMapTable, "strongToWeakObjectsMapTable"));
  uint64_t v2 = (void *)qword_100470A40;
  qword_100470A40 = v1;
}

void sub_1000DC4C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

BOOL sub_1000DC524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a1 + 32) == a3;
}

void sub_1000DC534(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bulletinToBannerAdapter]);
  [v2 invalidate];

  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v3 = *(id *)(a1 + 40);
  id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v10 + 1) + 8LL * (void)i);
        objc_msgSend(v8, "dismissViewServiceWithReason:completion:", 0, &stru_1003D6360, (void)v10);
        id v9 = (void *)objc_claimAutoreleasedReturnValue(+[PBBulletinManager sharedInstance](&OBJC_CLASS___PBBulletinManager, "sharedInstance"));
        [v9 dismissBulletinViewController:v8];
      }

      id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v5);
  }
}

void sub_1000DCF84(_Unwind_Exception *a1)
{
}

LABEL_31:
  __int128 v44 = v43;
  objc_sync_exit(v56);

LABEL_32:
  v68[0] = _NSConcreteStackBlock;
  v68[1] = 3221225472LL;
  v68[2] = sub_1000DD69C;
  v68[3] = &unk_1003D63B0;
  id v75 = v59;
  v68[4] = self;
  __int128 v46 = v66;
  uint64_t v69 = v46;
  id v74 = buf;
  __int128 v47 = v65;
  id v72 = v47;
  __int128 v48 = v63;
  __int128 v70 = v48;
  id v49 = v61;
  __int128 v71 = v49;
  id v76 = v60;
  id v73 = v64;
  id v50 = objc_retainBlock(v68);
  uint64_t v51 = v50;
  id v52 = v58 ^ 1;
  if (v42)
  {
    id v53 = v42;
    if (((v58 ^ 1) & 1) == 0) {
      goto LABEL_43;
    }
  }

  id v54 = v57 ^ 1;
  if (v42)
  {
    id v55 = v42;
    if (!v54) {
      goto LABEL_44;
    }
  }

  if (!v44) {
    LOBYTE(v54) = 1;
  }
  id v53 = v44;
  if ((v54 & 1) != 0)
  {
    if (!v44) {
      id v52 = 1;
    }
    id v55 = v44;
    if ((v52 & 1) != 0)
    {
      ((void (*)(void *))v50[2])(v50);
      goto LABEL_45;
    }

        __int128 v41 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
        [v41 languageDidChange];

        -[PBInternationalizationManager _languageDidChange](self, "_languageDidChange");
        goto LABEL_32;
      case 0LL:
        if ([v11 isSettingNewUser])
        {
LABEL_6:
          __int128 v13 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 currentApplicationSceneHandle]);

          __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 clientProcessBundleIdentifier]);
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[PBUserProfileApplicationManager sharedInstance]( &OBJC_CLASS___PBUserProfileApplicationManager,  "sharedInstance"));
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 updatingApplicationIdentifiers]);
          unsigned __int8 v18 = [v17 containsObject:v15];

          id v19 = sub_1000B3E24((uint64_t)v10);
          id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
          id v21 = os_log_type_enabled(v20, OS_LOG_TYPE_INFO);
          if (v18)
          {
            if (v21)
            {
              *(_WORD *)__int128 buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Language change during user switch with runs as current user app in foreground, app will relaunch after persona switching.",  buf,  2u);
            }

            uint64_t v22 = 0LL;
          }

          else
          {
            uint64_t v22 = v15;
            if (v21)
            {
              *(_DWORD *)__int128 buf = 138543362;
              id v50 = (unint64_t)v15;
              _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Language change during user switch: Queuing application %{public}@ to relaunch",  buf,  0xCu);
              uint64_t v22 = v15;
            }
          }

          id v23 = -[PBApplicationLanguageChangeTransaction initWithRelaunchBundleID:url:]( objc_alloc(&OBJC_CLASS___PBApplicationLanguageChangeTransaction),  "initWithRelaunchBundleID:url:",  v22,  0LL);
          if (v23) {
            goto LABEL_14;
          }
          goto LABEL_13;
        }

        if (sub_1001C9BFC())
        {
          id v24 = sub_1000B3E24((uint64_t)v10);
          id v23 = (PBApplicationLanguageChangeTransaction *)objc_claimAutoreleasedReturnValue(v24);
          if (os_log_type_enabled((os_log_t)v23, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)__int128 buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v23,  OS_LOG_TYPE_INFO,  "Ignoring language change while Buddy is running.",  buf,  2u);
          }

          goto LABEL_31;
        }

        break;
    }

    regionChangeTimestamp = self->_regionChangeTimestamp;
    id v26 = @"prefs:root=LANGUAGE";
    if (regionChangeTimestamp)
    {
      int64_t v27 = mach_absolute_time();
      __int16 v28 = BSTimeDifferenceFromMachTimeToMachTime(regionChangeTimestamp, v27);
      if (v28 > 1.0 || self->_regionChangeTimestamp == 0)
      {
        id v30 = 2LL;
      }

      else
      {
        id v26 = @"prefs:root=REGION";
        id v30 = 3LL;
      }
    }

    else
    {
      __int16 v28 = 0.0;
      id v30 = 2LL;
    }

    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v26));
    id v32 = sub_1000B3E24((uint64_t)v10);
    uint64_t v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
    {
      id v34 = self->_regionChangeTimestamp;
      *(_DWORD *)__int128 buf = 134218496;
      id v50 = v34;
      uint64_t v51 = 2048;
      id v52 = v28;
      id v53 = 2048;
      id v54 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_INFO,  "Executing application language change {regionChangeTimestamp=(%llu:%.1fs), relaunchURL=%p}",  buf,  0x20u);
    }

    self->_regionChangeTimestamp = 0LL;
    id v35 = -[PBApplicationLanguageChangeTransaction initWithRelaunchBundleID:url:]( objc_alloc(&OBJC_CLASS___PBApplicationLanguageChangeTransaction),  "initWithRelaunchBundleID:url:",  @"com.apple.TVSettings",  v31);
    -[PBApplicationLanguageChangeTransaction setLanguageChange:](v35, "setLanguageChange:", 1LL);
    -[PBApplicationLanguageChangeTransaction setLocaleChange:](v35, "setLocaleChange:", v7);
    uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(-[PBSceneManager shroudController](self->_sceneManager, "shroudController"));
    v47[0] = _NSConcreteStackBlock;
    v47[1] = 3221225472LL;
    v47[2] = sub_1001A2124;
    v47[3] = &unk_1003CFF08;
    id v23 = v35;
    __int128 v48 = v23;
    v45[0] = _NSConcreteStackBlock;
    v45[1] = 3221225472LL;
    v45[2] = sub_1001A213C;
    v45[3] = &unk_1003DB0F0;
    __int128 v46 = (id)objc_claimAutoreleasedReturnValue([v36 shroudApplicationsUsingPredicate:&stru_1003D7D10 style:v30 completion:v47]);
    __int16 v37 = v46;
    -[PBApplicationLanguageChangeTransaction registerBlockObserver:](v23, "registerBlockObserver:", v45);

    goto LABEL_29;
  }

  __break(1u);
  return result;
}

LABEL_44:
    -[PBBulletinService _handleApplicationDismissalForViewController:withReason:completion:]( self,  "_handleApplicationDismissalForViewController:withReason:completion:",  v55,  4LL,  v50,  v56);
  }

  else
  {
LABEL_43:
    -[PBBulletinService _updateVideoBulletinViewController:withBulletin:completion:]( self,  "_updateVideoBulletinViewController:withBulletin:completion:",  v53,  v46,  v47,  v56);
  }

void sub_1000DD624( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
}

uint64_t sub_1000DD674(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000DD684(uint64_t a1)
{
}

void sub_1000DD69C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 88)
    && (uint64_t v2 = *(void **)(a1 + 32),
        uint64_t v3 = *(void *)(a1 + 40),
        uint64_t v4 = *(void *)(*(void *)(a1 + 80) + 8LL),
        id v18 = *(id *)(v4 + 40),
        id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 _reserveTableSpaceForBulletin:v3 error:&v18]),
        objc_storeStrong((id *)(v4 + 40), v18),
        v5))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000DD7E4;
    block[3] = &unk_1003D6388;
    id v15 = *(id *)(a1 + 64);
    id v10 = *(id *)(a1 + 48);
    id v6 = *(id *)(a1 + 56);
    char v17 = *(_BYTE *)(a1 + 89);
    id v11 = v6;
    id v12 = v5;
    id v7 = *(void **)(a1 + 40);
    uint64_t v13 = *(void *)(a1 + 32);
    id v14 = v7;
    id v16 = *(id *)(a1 + 72);
    id v8 = v5;
    dispatch_async(&_dispatch_main_q, block);
  }

  else
  {
    [*(id *)(a1 + 32) _completeWithBulletin:*(void *)(a1 + 40) success:0 error:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) completion:*(void *)(a1 + 64)];
  }

void sub_1000DD7E4(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___PBBulletinInfo);
  -[PBBulletinInfo setClientPresentationCompletion:](v2, "setClientPresentationCompletion:", *(void *)(a1 + 72));
  -[PBBulletinInfo setViewControllerClassName:](v2, "setViewControllerClassName:", *(void *)(a1 + 32));
  -[PBBulletinInfo setServiceIdentifier:](v2, "setServiceIdentifier:", *(void *)(a1 + 40));
  -[PBBulletinInfo setInsertAtFrontOfQueue:](v2, "setInsertAtFrontOfQueue:", *(unsigned __int8 *)(a1 + 88));
  -[PBBulletinInfo setRequestID:](v2, "setRequestID:", *(void *)(a1 + 48));
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___PBBulletinService);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  objc_sync_enter(v4);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(a1 + 56),  "_bulletinForRequestID:",  objc_msgSend(*(id *)(a1 + 48), "unsignedIntegerValue")));
  [*(id *)(a1 + 56) _setBulletinInfo:0 forBulletin:*(void *)(a1 + 64)];
  [*(id *)(a1 + 56) _setBulletinInfo:v2 forBulletin:v5];
  id v6 = [(id)objc_opt_class(*(void *)(a1 + 56)) _bulletinServicesByBulletinIdentifier];
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) identifier]);
  [v7 setObject:v8 forKey:v9];

  objc_sync_exit(v4);
  [(id)objc_opt_class(*(void *)(a1 + 56)) _timeoutForBulletin:*(void *)(a1 + 64)];
  -[PBBulletinInfo setTimeoutInSeconds:](v2, "setTimeoutInSeconds:");
  id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) bulletinToBannerAdapter]);
  unsigned int v11 = [v10 isPresentableBulletin:*(void *)(a1 + 64)];
  uint64_t v12 = *(void *)(a1 + 64);
  if (v11)
  {
    [v10 presentBannerFromBulletin:v12];
  }

  else if ([v10 isForwardableBulletin:v12])
  {
    [v10 forwardBulletin:*(void *)(a1 + 64)];
  }

  else
  {
    uint64_t v13 = -[PBBulletinServiceUIProvider initWithBulletinInfo:service:]( objc_alloc(&OBJC_CLASS___PBBulletinServiceUIProvider),  "initWithBulletinInfo:service:",  v2,  *(void *)(a1 + 56));
    id v14 = (void *)objc_claimAutoreleasedReturnValue(+[PBBulletinManager sharedInstance](&OBJC_CLASS___PBBulletinManager, "sharedInstance"));
    [v14 presentBulletinWithUIProvider:v13 bulletinInfo:v2];
  }

  uint64_t v15 = *(void *)(a1 + 80);
  if (v15) {
    (*(void (**)(void))(v15 + 16))();
  }
}

void sub_1000DD9B8(_Unwind_Exception *a1)
{
}

id sub_1000DDA94(uint64_t a1)
{
  return  [*(id *)(a1 + 32) updateBulletin:*(void *)(a1 + 40) withMessage:*(void *)(a1 + 48) completionHandler:*(void *)(a1 + 56)];
}

uint64_t sub_1000DDDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(result + 16))( result,  *(void *)(a1 + 32),  a2,  a3);
  }
  return result;
}

uint64_t sub_1000DDDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(result + 16))( result,  *(void *)(a1 + 32),  a2,  a3);
  }
  return result;
}

uint64_t sub_1000DDE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(result + 16))( result,  *(void *)(a1 + 32),  a2,  a3);
  }
  return result;
}

void sub_1000DE0E4(_Unwind_Exception *a1)
{
}

uint64_t sub_1000DE104(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBBulletinManager sharedInstance](&OBJC_CLASS___PBBulletinManager, "sharedInstance"));
  [v2 updateBulletinViewControllerTimeout:*(void *)(a1 + 32) timeoutInSeconds:*(double *)(a1 + 48)];

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, 1LL, 0LL);
  }
  return result;
}

uint64_t sub_1000DE15C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1000DE1F4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_mainqueue_dismissBulletin:", *(void *)(a1 + 40));
}

void sub_1000DE450( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

id *sub_1000DE758(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] dismissBulletin:result[5]];
  }
  return result;
}

void sub_1000DE778(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBHomeUIManager sharedInstance](&OBJC_CLASS___PBHomeUIManager, "sharedInstance"));
  [v2 presentCameraWithContext:*(void *)(a1 + 32) withCompletion:*(void *)(a1 + 40)];
}

void sub_1000DE7B4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) interactionDelegateProxy]);
  [v2 bulletinService:*(void *)(a1 + 32) didReceiveBulletinResponse:*(void *)(a1 + 40)];
}

void sub_1000DE8DC(_Unwind_Exception *a1)
{
}

void sub_1000DE9F8(_Unwind_Exception *a1)
{
}

uint64_t sub_1000DEB3C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48),  *(void *)(a1 + 32));
}

void sub_1000DEB60(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateProxy]);
  [v2 bulletinService:*(void *)(a1 + 32) didDismissBulletin:*(void *)(a1 + 40) withReason:0];
}

void sub_1000DECE0(_Unwind_Exception *a1)
{
}

void sub_1000DECF4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateProxy]);
  [v2 bulletinService:*(void *)(a1 + 32) didDismissBulletin:*(void *)(a1 + 40) withReason:*(void *)(a1 + 48)];
}

void sub_1000DED30(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBBulletinManager sharedInstance](&OBJC_CLASS___PBBulletinManager, "sharedInstance"));
  [v2 dismissBulletinWithInfo:*(void *)(a1 + 32)];
}

void sub_1000DF014(_Unwind_Exception *a1)
{
}

uint64_t sub_1000DF030(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  if (v2)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000DF100;
    block[3] = &unk_1003D1718;
    void block[4] = a1[5];
    id v5 = v2;
    uint64_t v6 = a1[8];
    id v10 = v5;
    uint64_t v11 = v6;
    dispatch_async(v4, block);
  }

  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBBulletinManager sharedInstance](&OBJC_CLASS___PBBulletinManager, "sharedInstance"));
  [v7 dismissBulletinViewController:a1[6]];

  uint64_t result = a1[7];
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000DF100(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateProxy]);
  [v2 bulletinService:*(void *)(a1 + 32) didDismissBulletin:*(void *)(a1 + 40) withReason:*(void *)(a1 + 48)];
}

void sub_1000DF548(_Unwind_Exception *a1)
{
}

id sub_1000DF55C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBBulletinManager sharedInstance](&OBJC_CLASS___PBBulletinManager, "sharedInstance"));
  [v2 updateBulletinViewControllerTimeout:*(void *)(a1 + 32) timeoutInSeconds:*(double *)(a1 + 64)];

  return [*(id *)(a1 + 40) _completeWithBulletin:*(void *)(a1 + 48) success:1 error:0 completion:*(void *)(a1 + 56)];
}

void sub_1000DF7C0(_Unwind_Exception *a1)
{
}

void sub_1000DF86C(_Unwind_Exception *a1)
{
}

void sub_1000DFA0C(_Unwind_Exception *a1)
{
}

void sub_1000DFAC4(_Unwind_Exception *a1)
{
}

void sub_1000DFCD4(_Unwind_Exception *a1)
{
}

void sub_1000DFD7C(_Unwind_Exception *a1)
{
}

void sub_1000DFF34(_Unwind_Exception *a1)
{
}

void sub_1000E00C0(_Unwind_Exception *a1)
{
}

void sub_1000E0168(_Unwind_Exception *a1)
{
}

void sub_1000E0320(_Unwind_Exception *a1)
{
}

void sub_1000E03C4(_Unwind_Exception *a1)
{
}

void sub_1000E0554(_Unwind_Exception *a1)
{
}

void sub_1000E0874(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v5;
  if (!v7
    || (uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _bulletinForBulletinInfo:*(void *)(a1 + 40)]),
        BOOL v9 = v8 == 0LL,
        v8,
        v9))
  {
    if (v6)
    {
      NSErrorUserInfoKey v23 = NSUnderlyingErrorKey;
      id v24 = v6;
      id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v24,  &v23,  1LL));
    }

    else
    {
      id v16 = 0LL;
    }

    char v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  302LL,  v16));
    (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
  }

  else
  {
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___PBBulletinService);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    objc_sync_enter(v11);
    [(id)objc_opt_class(PBBulletinService) _setBulletinService:*(void *)(a1 + 32) forViewController:v7];
    uint64_t v12 = *(void **)(a1 + 32);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) requestID]);
    objc_msgSend(v12, "_setBulletin:forRequestID:", 0, objc_msgSend(v13, "unsignedIntegerValue"));

    [*(id *)(a1 + 32) _setViewController:0 forBulletin:*(void *)(a1 + 48)];
    [*(id *)(a1 + 32) _setViewController:v7 forBulletin:*(void *)(a1 + 48)];
    objc_sync_exit(v11);

    [v7 setDelegate:*(void *)(a1 + 32)];
    objc_initWeak(&location, v7);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    _DWORD v18[2] = sub_1000E0B70;
    v18[3] = &unk_1003D6428;
    objc_copyWeak(&v21, &location);
    id v19 = *(id *)(a1 + 32);
    id v20 = *(id *)(a1 + 40);
    [v7 setClientPresentationCompletion:v18];
    id v14 = -[PBContentPresentingContainmentViewController initWithChildViewController:allowsInteraction:expectsEventForwarding:]( objc_alloc(&OBJC_CLASS___PBBulletinContentPresentingViewController),  "initWithChildViewController:allowsInteraction:expectsEventForwarding:",  v7,  0LL,  1LL);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[PBBulletinManager sharedInstance](&OBJC_CLASS___PBBulletinManager, "sharedInstance"));
    [v15 _setAcceptsEventFocus:0 forViewController:v14];

    [*(id *)(a1 + 40) setBulletinViewController:v7];
    [*(id *)(a1 + 40) setContentPresentingViewController:v14];
    (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();

    objc_destroyWeak(&v21);
    objc_destroyWeak(&location);
  }
}

void sub_1000E0B38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000E0B70(id *a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] _bulletinForViewController:WeakRetained]);
  id v6 = a1[4];
  id v7 = (void *)objc_claimAutoreleasedReturnValue([a1[5] clientPresentationCompletion]);
  [v6 _completeWithBulletin:v5 success:a2 error:0 completion:v7];
}

unsigned __int8 sub_1000E0C38(id a1, unsigned int a2, __CFDictionary *a3)
{
  return MRMediaRemoteSendCommand(*(void *)&a2, a3);
}

id sub_1000E0CCC(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100470A58;
  qword_100470A58 = (uint64_t)v1;

  [(id)qword_100470A58 _enableSystemGestures];
  return [(id)qword_100470A58 _beginSystemObservations];
}

id sub_1000E0D0C(void *a1)
{
  if (a1)
  {
    id v1 = sub_1000833FC();
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

void sub_1000E1318(_Unwind_Exception *a1)
{
}

uint64_t sub_1000E1348(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_DWORD)result != 0;
  return result;
}

void sub_1000E138C(uint64_t a1)
{
  uint64_t v2 = *(os_log_s **)(a1 + 32);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_10027F0B0(v2, v3, v4, v5, v6, v7, v8, v9);
  }
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
}

uint64_t sub_1000E13D8(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = result;
  return result;
}

uint64_t sub_1000E1494(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 16))(a2, *(void *)(a1 + 32));
}

void sub_1000E15A8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = a2;
  uint64_t v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) playbackRate]);
  [v7 floatValue];
  float v9 = v8;

  if (BSFloatIsZero(v9))
  {
    v6[2](v6);
    id v10 = sub_1000E0D0C(*(void **)(a1 + 32));
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Sending play command because the current rate is zero",  buf,  2u);
    }

    [*(id *)(a1 + 32) playWithReason:@"ChangePlaybackRate"];
    goto LABEL_20;
  }

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) defaultPlaybackRate]);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) supportedPlaybackRates]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(+[PBMediaRemoteObserver sharedInstance](&OBJC_CLASS___PBMediaRemoteObserver, "sharedInstance"));
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 nowPlayingApplicationInfo]);
  unsigned int v16 = [v15 shouldIgnoreSupportedPlaybackRates];

  if (v16)
  {
    id v17 = sub_1000E0D0C(*(void **)(a1 + 32));
    id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG)) {
      sub_10027F18C(v18, v19, v20, v21, v22, v23, v24, v25);
    }

LABEL_10:
    uint64_t v13 = 0LL;
  }

  [v12 floatValue];
  if (BSFloatIsZero(v26))
  {
    float v27 = 1.0;
  }

  else
  {
    [v12 floatValue];
    float v27 = v28;
  }

  float v29 = (*(float (**)(float, float))(*(void *)(a1 + 40) + 16LL))(v9, v27);
  if (BSFloatEqualToFloat(v29, v27))
  {
    v6[2](v6);
    id v31 = sub_1000E0D0C(*(void **)(a1 + 32));
    id v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)__int128 buf = 134218240;
      double v38 = v9;
      __int16 v39 = 2048;
      double v40 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_INFO,  "Sending Play command instead of ChangePlaybackRate {currentRate=%.1f, defaultPlaybackRate=%.1f}",  buf,  0x16u);
    }

    [*(id *)(a1 + 32) playWithReason:@"ChangePlaybackRate"];
  }

  else
  {
    *(float *)&double v30 = v29;
    uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithFloat:]( &OBJC_CLASS___NSNumber,  "numberWithFloat:",  v30,  kMRMediaRemoteOptionPlaybackRate));
    uint64_t v36 = v33;
    id v34 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v36,  &v35,  1LL));

    v5[2](v5, v34);
  }

LABEL_20:
}

void sub_1000E1BF8(_Unwind_Exception *a1)
{
}

void sub_1000E1C18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateNowPlayingGestureState];
}

void sub_1000E1F04( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000E1F30(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBScreenSaverManager sharedInstance](&OBJC_CLASS___PBScreenSaverManager, "sharedInstance"));
  if ([v5 isPresenting])
  {
    unsigned int v6 = 1;
  }

  else
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBNowPlayingManager sharedInstance](&OBJC_CLASS___PBNowPlayingManager, "sharedInstance"));
    if ([v7 nowPlayingAppFocused])
    {
      if (WeakRetained) {
        float v8 = (void *)WeakRetained[4];
      }
      else {
        float v8 = 0LL;
      }
      unsigned int v6 = [v8 nowPlayingMediaTypeAudioOnly] ^ 1;
    }

    else
    {
      unsigned int v6 = 0;
    }
  }

  id v9 = [v3 state];
  id v10 = sub_1000E0D0C(WeakRetained);
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  int v12 = v9 == (id)1;
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    v13[0] = 67109376;
    v13[1] = v6;
    __int16 v14 = 1024;
    int v15 = v12;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Should pause on button down: %{BOOL}d {isButtonDown=%{BOOL}d}",  (uint8_t *)v13,  0xEu);
  }

  if (v6 == v12) {
    [WeakRetained pauseWithReason:@"UserGesture"];
  }
}

void sub_1000E2350( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E2470( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E2590( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E26B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E27D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E291C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

float sub_1000E293C(uint64_t a1, void *a2, float a3, float a4)
{
  id v7 = a2;
  id v10 = v7;
  if (v7)
  {
    *(float *)&double v8 = a3;
    [v7 previousPlaybackRateBefore:v8];
    float v12 = v11;
    id v13 = sub_1000E0D0C(*(void **)(a1 + 32));
    __int16 v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      int v21 = 134218754;
      double v22 = a3;
      __int16 v23 = 2048;
      double v24 = v12;
      __int16 v25 = 2048;
      double v26 = a4;
      __int16 v27 = 2114;
      float v28 = v10;
      int v15 = "Using client provided supported playback rates {current=%.1f, new=%.1f, default=%.1f, supported=%{public}@}";
      unsigned int v16 = v14;
      uint32_t v17 = 42;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v15, (uint8_t *)&v21, v17);
    }
  }

  else
  {
    *(float *)&double v8 = a3;
    *(float *)&double v9 = a4;
    +[TVPPlayer decreasePlaybackRateFromRate:rateUsedForPlayback:]( &OBJC_CLASS___TVPPlayer,  "decreasePlaybackRateFromRate:rateUsedForPlayback:",  v8,  v9);
    float v12 = v18;
    id v19 = sub_1000E0D0C(*(void **)(a1 + 32));
    __int16 v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      int v21 = 134218496;
      double v22 = a3;
      __int16 v23 = 2048;
      double v24 = v12;
      __int16 v25 = 2048;
      double v26 = a4;
      int v15 = "Using TVPlayback rates {current=%.1f, new=%.1f, default=%.1f}";
      unsigned int v16 = v14;
      uint32_t v17 = 32;
      goto LABEL_6;
    }
  }

  return v12;
}

void sub_1000E2BFC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

float sub_1000E2C1C(uint64_t a1, void *a2, float a3, float a4)
{
  id v7 = a2;
  id v10 = v7;
  if (v7)
  {
    *(float *)&double v8 = a3;
    [v7 nextPlaybackRateAfter:v8];
    float v12 = v11;
    id v13 = sub_1000E0D0C(*(void **)(a1 + 32));
    __int16 v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      int v21 = 134218754;
      double v22 = a3;
      __int16 v23 = 2048;
      double v24 = v12;
      __int16 v25 = 2048;
      double v26 = a4;
      __int16 v27 = 2114;
      float v28 = v10;
      int v15 = "Using client provided supported playback rates {current=%.1f, new=%.1f, default=%.1f, supported=%{public}@}";
      unsigned int v16 = v14;
      uint32_t v17 = 42;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v15, (uint8_t *)&v21, v17);
    }
  }

  else
  {
    *(float *)&double v8 = a3;
    *(float *)&double v9 = a4;
    +[TVPPlayer increasePlaybackRateFromRate:rateUsedForPlayback:]( &OBJC_CLASS___TVPPlayer,  "increasePlaybackRateFromRate:rateUsedForPlayback:",  v8,  v9);
    float v12 = v18;
    id v19 = sub_1000E0D0C(*(void **)(a1 + 32));
    __int16 v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      int v21 = 134218496;
      double v22 = a3;
      __int16 v23 = 2048;
      double v24 = v12;
      __int16 v25 = 2048;
      double v26 = a4;
      int v15 = "Using TVPlayback rates {current=%.1f, new=%.1f, default=%.1f}";
      unsigned int v16 = v14;
      uint32_t v17 = 32;
      goto LABEL_6;
    }
  }

  return v12;
}

void sub_1000E2ECC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E3008( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E3128( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E3248( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E3368( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E3488( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1000E38C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11, id *a12, id *a13, id *a14)
{
}

void sub_1000E3954()
{
}

void sub_1000E395C()
{
}

void sub_1000E3964()
{
}

void sub_1000E396C()
{
}

void sub_1000E3974()
{
}

void sub_1000E397C()
{
}

void sub_1000E3988()
{
}

id sub_1000E3990(uint64_t a1, void **a2)
{
  id v3 = *a2;
  if (!*a2)
  {
    id v5 = objc_msgSend(*(id *)(a1 + 32), "newHandleForSystemGesture:actionHandler:");
    unsigned int v6 = *a2;
    *a2 = v5;

    id v3 = *a2;
  }

  return [v3 acquire];
}

void sub_1000E39D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained playWithReason:@"UserGesture"];
}

void sub_1000E3A08(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained pauseWithReason:@"UserGesture"];
}

void sub_1000E3A3C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained stopWithReason:@"UserGesture"];
}

void sub_1000E3A70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained) {
    id WeakRetained = (void *)WeakRetained[4];
  }
  else {
    [v2 decreasePlaybackRateWithReason:@"UserGesture"];
  }
}

void sub_1000E3AC4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained) {
    id WeakRetained = (void *)WeakRetained[4];
  }
  else {
    [v2 increasePlaybackRateWithReason:@"UserGesture"];
  }
}

void sub_1000E3B18(uint64_t a1, void *a2)
{
  id v3 = [a2 state];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (v3 == (id)1) {
    [WeakRetained beginSeekingBackwardsWithReason:@"UserGesture"];
  }
  else {
    [WeakRetained endSeekingBackwardsWithReason:@"UserGesture"];
  }
}

void sub_1000E3B6C(uint64_t a1, void *a2)
{
  id v3 = [a2 state];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (v3 == (id)1) {
    [WeakRetained beginSeekingForwardsWithReason:@"UserGesture"];
  }
  else {
    [WeakRetained endSeekingForwardsWithReason:@"UserGesture"];
  }
}

void sub_1000E3BC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained previousTrackWithReason:@"UserGesture"];
}

void sub_1000E3BF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained nextTrackWithReason:@"UserGesture"];
}

void sub_1000E3C28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained skipBackwardsWithReason:@"UserGesture"];
}

void sub_1000E3C5C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained skipForwardsWithReason:@"UserGesture"];
}

id sub_1000E3C90(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == 1)
  {
    uint64_t v4 = objc_alloc_init(&OBJC_CLASS___PBMutableWorkspaceLayout);
    if (sub_1001C9E00())
    {
      [v3 fullDisplayBounds];
      CGFloat x = v24.origin.x;
      CGFloat y = v24.origin.y;
      CGFloat width = v24.size.width;
      CGFloat height = v24.size.height;
      double v9 = CGRectGetHeight(v24);
      if ((BSFloatIsZero(v9) & 1) != 0
        || (v25.origin.CGFloat x = x,
            v25.origin.CGFloat y = y,
            v25.size.CGFloat width = width,
            v25.size.CGFloat height = height,
            double v10 = CGRectGetWidth(v25),
            BSFloatIsZero(v10)))
      {
        CGFloat x = 0.0;
        CGFloat height = 1080.0;
        CGFloat width = 1920.0;
        CGFloat y = 0.0;
      }

      v26.origin.CGFloat x = x;
      v26.origin.CGFloat y = y;
      v26.size.CGFloat width = width;
      v26.size.CGFloat height = height;
      unint64_t v11 = (unint64_t)CGRectGetWidth(v26);
      v27.origin.CGFloat x = x;
      v27.origin.CGFloat y = y;
      v27.size.CGFloat width = width;
      v27.size.CGFloat height = height;
      CGFloat v12 = CGRectGetHeight(v27);
      LODWORD(v11) = PBSCalculateAspectRatio(v11, (unint64_t)v12) > 4;
      v28.origin.CGFloat x = x;
      v28.origin.CGFloat y = y;
      v28.size.CGFloat width = width;
      v28.size.CGFloat height = height;
      double v13 = dbl_1002EC630[v11] / CGRectGetHeight(v28);
      v29.origin.CGFloat x = x;
      v29.origin.CGFloat y = y;
      v29.size.CGFloat width = width;
      v29.size.CGFloat height = height;
      CGFloat v14 = CGRectGetWidth(v29);
      CGFloat v15 = (v14 * v13 * 0.5 + 20.0) / v14;
      unsigned int v16 = objc_alloc_init(&OBJC_CLASS___PBMutableWorkspaceLayoutAttributes);
      -[PBMutableWorkspaceLayoutAttributes setCenter:](v16, "setCenter:", v15, 0.5);
      uint32_t v17 = v16;
      double v18 = v13;
    }

    else
    {
      unsigned int v16 = objc_alloc_init(&OBJC_CLASS___PBMutableWorkspaceLayoutAttributes);
      -[PBMutableWorkspaceLayoutAttributes setCenter:](v16, "setCenter:", 0.389583333, 0.5);
      double v18 = 0.758333333;
      uint32_t v17 = v16;
    }

    -[PBMutableWorkspaceLayoutAttributes setScale:](v17, "setScale:", v18);
    -[PBMutableWorkspaceLayoutAttributes setCornerRadius:](v16, "setCornerRadius:", 24.0);
    -[PBMutableWorkspaceLayout setAttributes:forKey:](v4, "setAttributes:forKey:", v16, @"application");

    goto LABEL_11;
  }

  if (a1 != -1)
  {
    uint64_t v4 = objc_alloc_init(&OBJC_CLASS___PBMutableWorkspaceLayout);
LABEL_11:
    uint64_t v19 = sub_1000EDB0C(a1);
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
    -[PBMutableWorkspaceLayout setName:](v4, "setName:", v20);
    id v21 = -[PBMutableWorkspaceLayout copy](v4, "copy");

    return v21;
  }

  __int16 v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Unspecified is an invalid layout"));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_10027F26C((uint64_t)v23);
  }
  id result = (id) _bs_set_crash_log_message([v23 UTF8String]);
  __break(0);
  return result;
}

void sub_1000E3F7C(uint64_t a1)
{
  dispatch_queue_attr_t v2 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_UTILITY, 0);
  id v3 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v2);
  dispatch_queue_t v4 = dispatch_queue_create("com.apple.PineBoard.MediaRemoteClient", v3);
  id v5 = [objc_alloc(*(Class *)(a1 + 32)) initWithQueue:v4];
  unsigned int v6 = (void *)qword_100470A68;
  qword_100470A68 = (uint64_t)v5;
}

void sub_1000E4104(uint64_t a1, void *a2)
{
  if (a2) {
    id v3 = a2;
  }
  else {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSArray array](&OBJC_CLASS___NSArray, "array"));
  }
  dispatch_queue_t v4 = v3;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000E4220(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000E42F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, uint64_t, uint64_t))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32),  a2,  a3);
}

id sub_1000E43BC(void *a1)
{
  id v1 = a1;
  dispatch_queue_attr_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472LL;
  _DWORD v18[2] = sub_1000E4710;
  v18[3] = &unk_1003D65B8;
  id v3 = v1;
  id v19 = v3;
  sub_1000E468C(v2, 2LL, v18);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  _DWORD v16[2] = sub_1000E474C;
  void v16[3] = &unk_1003D65B8;
  id v4 = v3;
  id v17 = v4;
  sub_1000E468C(v2, 3LL, v16);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_1000E4788;
  v14[3] = &unk_1003D65B8;
  id v5 = v4;
  id v15 = v5;
  sub_1000E468C(v2, 5LL, v14);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_1000E47C4;
  void v12[3] = &unk_1003D65B8;
  id v6 = v5;
  id v13 = v6;
  sub_1000E468C(v2, 6LL, v12);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_1000E4800;
  void v10[3] = &unk_1003D65B8;
  id v11 = v6;
  id v7 = v6;
  sub_1000E468C(v2, 7LL, v10);

  id v8 = -[NSMutableSet copy](v2, "copy");
  return v8;
}

void sub_1000E468C(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBSystemGestureManager sharedInstance](&OBJC_CLASS___PBSystemGestureManager, "sharedInstance"));
  id v8 = [v7 newHandleForSystemGesture:a2 actionHandler:v5];

  [v6 addObject:v8];
  [v8 acquire];
}

void sub_1000E4710(uint64_t a1, void *a2)
{
  dispatch_queue_attr_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 gestureRecognizer]);
  [v2 handleACHomeLongPressEvent:v3];
}

void sub_1000E474C(uint64_t a1, void *a2)
{
  dispatch_queue_attr_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 gestureRecognizer]);
  [v2 handleACHomeSingleTapEvent:v3];
}

void sub_1000E4788(uint64_t a1, void *a2)
{
  dispatch_queue_attr_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 gestureRecognizer]);
  [v2 handleMenuLongPressEvent:v3];
}

void sub_1000E47C4(uint64_t a1, void *a2)
{
  dispatch_queue_attr_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 gestureRecognizer]);
  [v2 handleMenuSingleTapEvent:v3];
}

void sub_1000E4800(uint64_t a1, void *a2)
{
  dispatch_queue_attr_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 gestureRecognizer]);
  [v2 handleTVTapEvent:v3];
}

void sub_1000E59D4(_Unwind_Exception *a1)
{
}

id sub_1000E59F0(uint64_t a1)
{
  dispatch_queue_attr_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = v2[5];
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 _completionHandlerSentinelBlock]);
  uint64_t v5 = objc_claimAutoreleasedReturnValue( +[BSBlockSentinel sentinelWithQueue:signalHandler:]( &OBJC_CLASS___BSBlockSentinel,  "sentinelWithQueue:signalHandler:",  v3,  v4));
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 48);
  *(void *)(v6 + 4_Block_object_dispose((const void *)(v1 - 144), 8) = v5;

  id v8 = objc_alloc(&OBJC_CLASS___PBAppInfoController);
  double v9 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedAppInfoStore](&OBJC_CLASS___PineBoard, "sharedAppInfoStore"));
  double v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _personaEnabledApplicationsFilter]);
  id v11 = -[PBAppInfoController initWithInfoStore:filter:delegate:]( v8,  "initWithInfoStore:filter:delegate:",  v9,  v10,  0LL);
  uint64_t v12 = *(void *)(a1 + 32);
  id v13 = *(void **)(v12 + 56);
  *(void *)(v12 + 56) = v11;

  CGFloat v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_workQueue_updatingApplicationIdentifiers"));
  id v15 = [v14 count];

  if (!v15) {
    return [*(id *)(*(void *)(a1 + 32) + 48) signalWithContext:&__kCFBooleanTrue];
  }
  unsigned int v16 = objc_alloc(&OBJC_CLASS___BSWatchdog);
  id v17 = *(void **)(a1 + 32);
  uint64_t v18 = v17[5];
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v17 _watchdogBlock]);
  uint64_t v20 = -[BSWatchdog initWithTimeout:queue:completion:](v16, "initWithTimeout:queue:completion:", v18, v19, 10.0);
  uint64_t v21 = *(void *)(a1 + 32);
  double v22 = *(void **)(v21 + 64);
  *(void *)(v21 + 64) = v20;

  [*(id *)(*(void *)(a1 + 32) + 64) start];
  return objc_msgSend(*(id *)(*(void *)(a1 + 32) + 56), "setDelegate:");
}

void sub_1000E5C1C(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;
}

id sub_1000E5CE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___PBAppInfo);
  id v5 = v3;
  uint64_t v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  double v9 = (void *)objc_claimAutoreleasedReturnValue([v8 applicationInfo]);
  double v10 = (void *)objc_claimAutoreleasedReturnValue([v9 bundleIdentifier]);

  if (v10) {
    id v11 = [*(id *)(a1 + 32) containsObject:v10];
  }
  else {
    id v11 = 0LL;
  }

  return v11;
}

void sub_1000E5E70(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 24LL);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([a3 applicationInfo]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 managedApplicationPersona]);
  LOBYTE(v6) = BSEqualStrings(v6, v8);

  if ((v6 & 1) == 0) {
    [*(id *)(a1 + 40) addObject:v5];
  }
}

void sub_1000E5F98(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    dispatch_assert_queue_V2(*((dispatch_queue_t *)WeakRetained + 5));
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 context]);
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber);
    id v8 = v6;
    double v9 = v8;
    if (v7)
    {
      if ((objc_opt_isKindOfClass(v8, v7) & 1) != 0) {
        double v10 = v9;
      }
      else {
        double v10 = 0LL;
      }
    }

    else
    {
      double v10 = 0LL;
    }

    id v11 = v10;

    id v12 = [v11 BOOLValue];
    id v13 = sub_100084518();
    CGFloat v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    id v15 = v14;
    if ((_DWORD)v12)
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v16 = v5[3];
        uint64_t v17 = v5[2];
        int v20 = 141558530;
        uint64_t v21 = 1752392040LL;
        __int16 v22 = 2112;
        uint64_t v23 = v16;
        __int16 v24 = 2112;
        uint64_t v25 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Persona enabled applications updated successfully. {selectedPersonaUniqueString=%{mask.hash}@, personaEnabledA pplicationIdentifiers=%@}",  (uint8_t *)&v20,  0x20u);
      }
    }

    else if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      sub_10027F43C(v15);
    }

    uint64_t v18 = v5[4];
    if (v18) {
      (*(void (**)(uint64_t, id))(v18 + 16))(v18, v12);
    }
    id v19 = v5;
    objc_sync_enter(v19);
    [v19 willChangeValueForKey:@"finished"];
    [v19 willChangeValueForKey:@"executing"];
    v19[8] = 0;
    v19[9] = 1;
    [v19 didChangeValueForKey:@"executing"];
    [v19 didChangeValueForKey:@"finished"];
    objc_sync_exit(v19);
  }
}

void sub_1000E61B8(_Unwind_Exception *a1)
{
}

void sub_1000E6264(uint64_t a1, int a2)
{
  id WeakRetained = (dispatch_queue_t *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    dispatch_assert_queue_V2(WeakRetained[5]);
    dispatch_queue_t v5 = v4[6];
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a2 ^ 1u));
    -[dispatch_queue_s signalWithContext:](v5, "signalWithContext:", v6);

    -[dispatch_queue_s invalidate](v4[8], "invalidate");
  }
}

void sub_1000E6388(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_workQueue_updatingApplicationIdentifiers"));
    id v4 = [v3 count];

    if (!v4) {
      [v2[8] invalidate];
    }
  }
}

id sub_1000E6A6C(uint64_t a1)
{
  return [*(id *)(a1 + 40) setAlpha:*(double *)(a1 + 48)];
}

void sub_1000E6AA0(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_1000E6BAC;
    _OWORD v6[3] = &unk_1003D17D0;
    objc_copyWeak(&v7, &location);
    uint64_t v2 = objc_claimAutoreleasedReturnValue( +[NSTimer scheduledTimerWithTimeInterval:repeats:block:]( &OBJC_CLASS___NSTimer,  "scheduledTimerWithTimeInterval:repeats:block:",  0LL,  v6,  5.0));
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 24);
    *(void *)(v3 + 24) = v2;

    objc_destroyWeak(&v7);
    objc_destroyWeak(&location);
  }

  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8LL));
    [WeakRetained pipEditingHintViewControllerDidDismiss:*(void *)(a1 + 32)];
  }

void sub_1000E6B90( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000E6BAC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _fade:0 animated:1];
}

void sub_1000E73A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1000E73E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismissViewControllerWithAllowSleep:1];
}

void sub_1000E7414(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismissViewControllerWithAllowSleep:0];
}

void sub_1000E7618( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1000E7654(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismissViewControllerWithAllowSleep:1];
}

void sub_1000E7684(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismissViewControllerWithAllowSleep:0];
}

void sub_1000E78F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _countdownTimerFired];
}

void sub_1000E8024(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___UILongPressGestureRecognizer);
  qword_100470AA8 = -[UILongPressGestureRecognizer numberOfTapsRequired](v1, "numberOfTapsRequired");
  -[UILongPressGestureRecognizer minimumPressDuration](v1, "minimumPressDuration");
  qword_100470AB0 = v2;
}

BOOL sub_1000E85A8(id a1, FBScene *a2, FBSSceneSettings *a3)
{
  return v3 < sub_100103824(6LL);
}

void sub_1000E87D0(_Unwind_Exception *a1)
{
}

void sub_1000E8804(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  if (WeakRetained) {
    [WeakRetained[8] invalidate];
  }
}

void sub_1000E8858(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = sub_100083D98();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100270E90(v4);
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v6 = WeakRetained;
  if (WeakRetained)
  {
    id v7 = (void *)*((void *)WeakRetained + 8);
    *((void *)WeakRetained + _Block_object_dispose((const void *)(v1 - 144), 8) = 0LL;
  }
}

void sub_1000E88D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (v5 && WeakRetained)
  {
    double v9 = -[PBSceneHandle initWithScene:](objc_alloc(&OBJC_CLASS___PBSceneHandle), "initWithScene:", v5);
    double v10 = (void *)*((void *)v8 + 14);
    *((void *)v8 + 14) = v9;

    [*((id *)v8 + 8) start];
  }

  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

void sub_1000E8D2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 88);
  *(void *)(v3 + 8_Block_object_dispose((const void *)(v1 - 144), 8) = 0LL;
}

void sub_1000E8F7C(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_1000E8FEC;
  v3[3] = &unk_1003D08B8;
  id v4 = *(id *)(a1 + 32);
  [a2 addTransactionDidCompleteBlock:v3];
}

uint64_t sub_1000E8FEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000E9008(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 112) sceneIdentity]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 identifier]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 120) sceneWithIdentifier:v3]);
  if (v4)
  {
    id v5 = objc_alloc_init(&OBJC_CLASS___FBSSceneTransitionContext);
    id v6 = objc_alloc(&OBJC_CLASS___UIDestroySceneAction);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v3));
    id v8 = [v6 initWithPersistedIdentifiers:v7 preferredAnimationType:1 callbackQueue:0 completion:0];

    double v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v8));
    -[FBSSceneTransitionContext setActions:](v5, "setActions:", v9);

    [v4 deactivateWithTransitionContext:v5];
    [*(id *)(a1 + 40) relinquish];
    double v10 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 sceneDeactivationManager]);

    [v11 endTrackingScene:v4];
  }

  uint64_t v12 = *(void *)(a1 + 48);
  if (v12) {
    (*(void (**)(void))(v12 + 16))();
  }
}

void sub_1000E941C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000E9440(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained dismissContentAnimated:1 clientOptions:0 withCompletion:0];
  }

id sub_1000E963C(uint64_t a1, void *a2)
{
  return [a2 setUserInterfaceStyle:*(void *)(a1 + 32)];
}

void *sub_1000E9818(void *result, int a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)result[4];
    if (v3)
    {
      if ([v3 isActive])
      {
        id v4 = objc_alloc_init(&OBJC_CLASS___FBSSceneTransitionContext);
        id v5 = objc_alloc(&OBJC_CLASS___UIDestroySceneAction);
        id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v2[5]));
        id v7 = [v5 initWithPersistedIdentifiers:v6 preferredAnimationType:1 callbackQueue:0 completion:0];

        id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v7));
        -[FBSSceneTransitionContext setActions:](v4, "setActions:", v8);

        [(id)v2[4] deactivateWithTransitionContext:v4];
      }
    }

    return [(id)v2[6] contentPresentingDidDismissContent:v2[7]];
  }

  return result;
}

void sub_1000E9BC0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setIdentifier:v3];
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 128) specification]);
  [v4 setSpecification:v5];

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 128) clientIdentity]);
  [v4 setClientIdentity:v6];
}

void sub_1000E9C4C(uint64_t a1, void *a2)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000E9CC4;
  _OWORD v6[3] = &unk_1003D0D70;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v7 = v4;
  uint64_t v8 = v5;
  [a2 updateSettingsWithBlock:v6];
}

void sub_1000E9CC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___UIMutableApplicationSceneSettings);
  id v5 = v3;
  id v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  double v9 = (void *)objc_claimAutoreleasedReturnValue(+[FBDisplayManager mainConfiguration](&OBJC_CLASS___FBDisplayManager, "mainConfiguration"));
  [v8 setDisplayConfiguration:v9];
  [*(id *)(a1 + 32) bounds];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  if (sub_1001C9E00())
  {
    [*(id *)(a1 + 32) fullDisplayBounds];
    double v11 = v18;
    double v13 = v19;
    double v15 = v20;
    double v17 = v21;
  }

  objc_msgSend(v8, "setFrame:", v11, v13, v15, v17);
  [v8 setInterfaceOrientation:1];
  __int16 v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) traitCollection]);
  objc_msgSend(v8, "setUserInterfaceStyle:", objc_msgSend(v22, "userInterfaceStyle"));

  [v8 setLevel:sub_100103824(*(void *)(*(void *)(a1 + 40) + 136))];
  [v8 setForeground:1];
}

void sub_1000E9E20(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 24LL);
  id v5 = a2;
  objc_msgSend(a3, "pb_addAdditionalActions:", v4);
  [v5 setForeground:1];
}

uint64_t sub_1000E9E78(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if (a2) {
    uint64_t v4 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v4 = 0LL;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v3, v4);
}

void sub_1000E9F40(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___UIMutableApplicationSceneSettings);
  id v5 = v3;
  id v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  if (v8) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

void sub_1000EA33C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id location)
{
}

void sub_1000EA35C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_1000EA3FC;
  void v4[3] = &unk_1003D0A00;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  [v3 addTransactionWillBeginBlock:v4];
  objc_destroyWeak(&v5);
}

void sub_1000EA3E8(_Unwind_Exception *a1)
{
}

void sub_1000EA3FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained contentDelegate]);
  [v2 contentPresenting:WeakRetained willDismissContentWithResult:0 error:0];
}

void sub_1000EA444(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 96) error]);
    BOOL v4 = v3 == 0LL;
  }

  else
  {
    BOOL v4 = 0LL;
  }

  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    (*(void (**)(uint64_t, BOOL))(v5 + 16))(v5, v4);
  }
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 96);
  *(void *)(v6 + 96) = 0LL;

  if (v4)
  {
    uint64_t v8 = *(void *)(a1 + 32);
    double v9 = *(void **)(v8 + 80);
    *(void *)(v8 + 80) = 0LL;
  }

id sub_1000EABB8(uint64_t a1, void *a2)
{
  return [a2 addSystemGestureRecipe:*(void *)(a1 + 32)];
}

id sub_1000EAEC0(uint64_t a1, void *a2)
{
  return (id)objc_claimAutoreleasedReturnValue([a2 activateSystemGestureRecipe:*(void *)(a1 + 32)]);
}

id sub_1000EAF70(uint64_t a1, void *a2)
{
  return (id)objc_claimAutoreleasedReturnValue([a2 deactivateSystemGestureRecipe:*(void *)(a1 + 32)]);
}

id sub_1000EB094(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 removeSystemGestureRecipe:*(void *)(a1 + 32)]);
  uint64_t v8 = v7;
  if (*(_BYTE *)(a1 + 48) && ![v7 count])
  {
    [v5 setGestureRecognizer:0];
    [*(id *)(a1 + 40) _removeEntryForGestureRecognizerDescriptor:v6];
    double v9 = *(void **)(*(void *)(a1 + 40) + 16LL);
    double v10 = (void *)objc_claimAutoreleasedReturnValue([v8 gestureRecognizer]);
    [v9 removeObjectForKey:v10];
  }

  return v8;
}

id sub_1000EB314(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 gestureRecognizerDescriptor]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

id sub_1000EB444(id a1, PBSystemGestureTableEntry *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBSystemGestureTableEntry stateDump](a2, "stateDump"));
}

void sub_1000EB770(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  if (v3) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

void sub_1000EB888( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000EB8A4(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id result = [a2 isSystemGestureRecipeActive:*(void *)(a1 + 32)];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  *a4 = *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
  return result;
}

id sub_1000EBBD8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) removeObject:*(void *)(a1 + 40)];
}

id sub_1000EBC94(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) addObject:*(void *)(a1 + 40)];
}

id sub_1000EBD50(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) removeObject:*(void *)(a1 + 40)];
}

id sub_1000EBF24(id a1, PBSystemGestureRecipe *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBSystemGestureRecipe debugDescription](a2, "debugDescription"));
}

id sub_1000EBF44(id a1, PBSystemGestureRecipe *a2)
{
  return (id)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  a2));
}

id sub_1000ECA38()
{
  if (qword_100470AD0 != -1) {
    dispatch_once(&qword_100470AD0, &stru_1003D6970);
  }
  return (id)qword_100470AC8;
}

BOOL sub_1000ECA7C(id a1, FBScene *a2, FBSSceneSettings *a3)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[FBScene definition](a2, "definition", a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 specification]);
  uint64_t v6 = objc_opt_self(&OBJC_CLASS___UIApplicationSceneSpecification, v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  char isKindOfClass = objc_opt_isKindOfClass(v4, v7);

  return isKindOfClass & 1;
}

id sub_1000ECAEC()
{
  if (qword_100470AE0 != -1) {
    dispatch_once(&qword_100470AE0, &stru_1003D6990);
  }
  return (id)qword_100470AD8;
}

BOOL sub_1000ECB30(id a1, FBScene *a2, FBSSceneSettings *a3)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[FBScene definition](a2, "definition", a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 specification]);
  uint64_t v6 = objc_opt_self(&OBJC_CLASS___UIApplicationSceneSpecification, v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  char isKindOfClass = objc_opt_isKindOfClass(v4, v7);

  return isKindOfClass & 1;
}

void sub_1000ECD88(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 sceneDeactivationManager]);
  id v3 = [v2 newAssertionWithReason:11];
  id v4 = (void *)qword_100470AC8;
  qword_100470AC8 = (uint64_t)v3;
}

void sub_1000ECDE0(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 sceneDeactivationManager]);
  id v3 = [v2 newAssertionWithReason:10];
  id v4 = (void *)qword_100470AD8;
  qword_100470AD8 = (uint64_t)v3;
}

void sub_1000ED460(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___UITapGestureRecognizer);
  qword_100470AE8 = -[UITapGestureRecognizer numberOfTapsRequired](v1, "numberOfTapsRequired");
}

void sub_1000ED60C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10006BE1C();
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  [v3 setDomain:v5];

  [v3 setService:PBSUserProfileManagerServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

id sub_1000ED678()
{
  if (qword_100470B00 != -1) {
    dispatch_once(&qword_100470B00, &stru_1003D6A10);
  }
  return (id)qword_100470AF8;
}

void sub_1000ED928(id *a1, void *a2)
{
  id v3 = a2;
  PBSUserProfileManagerConfigureConnection();
  [v3 setInterfaceTarget:a1[4]];
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a1[4] queue]);
  [v3 setTargetQueue:v4];

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_1000EDA04;
  _OWORD v5[3] = &unk_1003D0EF0;
  id v6 = a1[5];
  id v7 = a1[6];
  id v8 = a1[4];
  [v3 setInvalidationHandler:v5];
}

id sub_1000EDA04(uint64_t a1)
{
  id v2 = sub_1000ED678();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    int v7 = 138543618;
    uint64_t v8 = v4;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated {client=%{public}@, connection=%@}",  (uint8_t *)&v7,  0x16u);
  }

  return [*(id *)(a1 + 48) invalidate];
}

void sub_1000EDAD8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "LoretoServiceListener");
  id v2 = (void *)qword_100470AF8;
  qword_100470AF8 = (uint64_t)v1;
}

CFStringRef sub_1000EDB0C(uint64_t a1)
{
  os_log_t v1 = @"Default";
  if (a1 == 1) {
    os_log_t v1 = @"SplitView";
  }
  if (a1 == -1) {
    return @"Unspecified";
  }
  else {
    return v1;
  }
}

const char *sub_1000EDB38(uint64_t a1)
{
  if (!a1) {
    return "NULL";
  }
  uint64_t IntegerValue = IOHIDEventGetIntegerValue(a1, 196608LL);
  uint64_t v3 = IOHIDEventGetIntegerValue(a1, 196609LL);
  if (v3 == 134 && IntegerValue == 1) {
    return "MENU";
  }
  if ((v3 & 0xFFFFFFFFFFFFFFDFLL) == 0x40 && IntegerValue == 12) {
    return "HOME";
  }
  if (v3 == 128 && IntegerValue == 12) {
    return "SELECT";
  }
  if (v3 == 4 && IntegerValue == 12) {
    return "MICROPHONE";
  }
  if (v3 == 205 && IntegerValue == 12) {
    return "PLAYPAUSE";
  }
  if (v3 == 233 && IntegerValue == 12) {
    return "VOLUMEUP";
  }
  if (v3 == 75 && IntegerValue == 7) {
    return "PAGEUP";
  }
  if (v3 == 78 && IntegerValue == 7) {
    return "PAGEDOWN";
  }
  if (v3 == 156 && IntegerValue == 12) {
    return "CHANNELINCREMENT";
  }
  if (v3 == 157 && IntegerValue == 12) {
    return "CHANNELDECREMENT";
  }
  if (v3 == 141 && IntegerValue == 12) {
    return "GUIDE";
  }
  if (v3 == 226 && IntegerValue == 12) {
    return "VOLUMEMUTE";
  }
  if (v3 == 180 && IntegerValue == 12) {
    return "REWIND";
  }
  if (v3 == 179 && IntegerValue == 12) {
    return "FASTFORWARD";
  }
  if (v3 == 48 && IntegerValue == 12) {
    return "POWER";
  }
  if (v3 == 234 && IntegerValue == 12) {
    return "VOLUMEDOWN";
  }
  if (v3 == 66 && IntegerValue == 12) {
    return "UP";
  }
  if (v3 == 67 && IntegerValue == 12) {
    return "DOWN";
  }
  if (v3 == 68 && IntegerValue == 12) {
    return "LEFT";
  }
  if (v3 == 69 && IntegerValue == 12) {
    return "RIGHT";
  }
  if (IntegerValue == 12 && v3 == 65) {
    return "PICK";
  }
  else {
    return "UNKNOWN";
  }
}

void sub_1000EDDD4(int a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    if (a1 == 1) {
      objc_msgSend(v3, "_setSILState_On:", @"MorseCode");
    }
  }

  else
  {
    objc_msgSend(v3, "_setSILState_Off:", @"MorseCode");
  }
}

void sub_1000EDE70(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___ATVHIDSystemClient);
  id v2 = (void *)qword_100470B08;
  qword_100470B08 = (uint64_t)v1;
}

id sub_1000EE02C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return [a2 _processHIDEvent:a4];
}

void sub_1000EEC30(id a1, BOOL a2, NSError *a3)
{
  uint64_t v4 = a3;
  if (a2)
  {
    +[PBSILOnTimeAccumulator noteSILOff](&OBJC_CLASS___PBSILOnTimeAccumulator, "noteSILOff");
  }

  else
  {
    id v5 = sub_1000838E8();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 138543362;
      uint64_t v8 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "setSILState_Off:Failed to set SIL state to OFF [%{public}@]",  (uint8_t *)&v7,  0xCu);
    }
  }
}

void sub_1000EEDDC(id a1, BOOL a2, NSError *a3)
{
  uint64_t v4 = a3;
  if (a2)
  {
    +[PBSILOnTimeAccumulator noteSILOn](&OBJC_CLASS___PBSILOnTimeAccumulator, "noteSILOn");
  }

  else
  {
    id v5 = sub_1000838E8();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 138543362;
      uint64_t v8 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "setSILState_On: Failed to set SIL state to ON [%{public}@]",  (uint8_t *)&v7,  0xCu);
    }
  }
}

id sub_1000EF01C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _delegateDidDismissViewController:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

id sub_1000EF0FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _delegateDidDismissViewController:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

id sub_1000F072C(id a1, PBSystemOverlayPresentationRequest *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBSystemOverlayPresentationRequest identifier](a2, "identifier"));
}

void sub_1000F0A3C(id a1)
{
  id v1 = sub_100084158();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Session hide complete", v3, 2u);
  }
}

id sub_1000F0B9C(uint64_t a1)
{
  id v2 = sub_100084158();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Session un-hide complete", v5, 2u);
  }

  return [*(id *)(a1 + 32) _checkPendingRequests];
}

void sub_1000F0F8C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  unsigned int v7 = [v5 isEqual:v6];

  if (v7) {
    [*(id *)(*(void *)(a1 + 40) + 64) removeObjectAtIndex:a3];
  }
}

void sub_1000F10C4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 session]);
  unsigned int v7 = *(void **)(a1 + 32);

  if (v6 == v7)
  {
    uint64_t v8 = (void (**)(void, void))objc_claimAutoreleasedReturnValue([v5 completion]);
    v8[2](v8, *(unsigned __int8 *)(a1 + 48));

    [*(id *)(*(void *)(a1 + 40) + 72) removeObjectAtIndex:a3];
  }
}

void sub_1000F1208(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 session]);
  unsigned int v7 = *(void **)(a1 + 32);

  if (v6 == v7)
  {
    uint64_t v8 = (void (**)(void, void))objc_claimAutoreleasedReturnValue([v5 completion]);
    v8[2](v8, *(unsigned __int8 *)(a1 + 48));

    [*(id *)(*(void *)(a1 + 40) + 80) removeObjectAtIndex:a3];
  }
}

void sub_1000F1594(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  unsigned int v7 = [v5 isEqual:v6];

  if (v7) {
    [*(id *)(*(void *)(a1 + 40) + 64) removeObjectAtIndex:a3];
  }
}

void sub_1000F1B98( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, id location)
{
}

void sub_1000F1BE0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v6 && (uint64_t v8 = *(os_log_s **)(a1 + 32), os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)))
  {
    sub_10027F950((uint64_t)WeakRetained, (uint64_t)v6, v8);
    if (!WeakRetained) {
      goto LABEL_8;
    }
  }

  else if (!WeakRetained)
  {
    goto LABEL_8;
  }

  __int16 v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  if (v6) {
    uint64_t v10 = 0LL;
  }
  else {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v5 designatedAppBundleIdentifier]);
  }
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  _DWORD v13[2] = sub_1000F1D14;
  void v13[3] = &unk_1003D1998;
  void v13[4] = WeakRetained;
  id v14 = v9;
  id v15 = v6;
  id v16 = v10;
  id v11 = v10;
  id v12 = v9;
  BSDispatchMain(v13);

LABEL_8:
}

void sub_1000F1D14(id *a1)
{
  id v2 = a1[6];
  if (v2)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 localizedFailureReason]);
    uint64_t v4 = v3;
    if (v3)
    {
      id v5 = v3;
    }

    else
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue([a1[6] localizedDescription]);
      unsigned int v7 = v6;
      if (v6) {
        id v8 = v6;
      }
      else {
        id v8 = (id)objc_claimAutoreleasedReturnValue([a1[6] domain]);
      }
      id v5 = v8;
    }

    [a1[4] failWithReason:v5];
  }

  else
  {
    objc_storeStrong((id *)a1[4] + 1, a1[7]);
    [a1[4] satisfyMilestone:@"InfoQuery"];
  }

void sub_1000F1DE0(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (([WeakRetained isComplete] & 1) == 0 && a2)
  {
    id v7 = 0LL;
    unsigned int v4 = [WeakRetained shouldWatchdog:&v7];
    id v5 = v7;
    if (v4)
    {
      [WeakRetained _failForTimeoutWithDescription:v5];
    }

    else
    {
      if (WeakRetained) {
        id v6 = (void *)WeakRetained[3];
      }
      else {
        id v6 = 0LL;
      }
      if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_DEBUG)) {
        sub_10027F9D4(v6, (uint64_t)WeakRetained);
      }
    }
  }
}

void sub_1000F209C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v4)
  {
    objc_initWeak(&location, v3);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_1000F2178;
    _OWORD v5[3] = &unk_1003D1660;
    objc_copyWeak(&v7, &location);
    id v6 = v4;
    [v3 setCompletionBlock:v5];

    objc_destroyWeak(&v7);
    objc_destroyWeak(&location);
  }
}

void sub_1000F215C(_Unwind_Exception *a1)
{
}

void sub_1000F2178(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if ((a2 & 1) != 0) {
    uint64_t v6 = objc_claimAutoreleasedReturnValue([WeakRetained bundleIdentifier]);
  }
  else {
    uint64_t v6 = objc_claimAutoreleasedReturnValue([WeakRetained previousBundleIdentifier]);
  }
  id v7 = (void *)v6;

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1000F2B14(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_1000F2E78(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) items]);
  id v37 = [obj countByEnumeratingWithState:&v51 objects:v58 count:16];
  if (v37)
  {
    uint64_t v35 = *(void *)v52;
    uint64_t v36 = v2;
    do
    {
      uint64_t v3 = 0LL;
      do
      {
        if (*(void *)v52 != v35) {
          objc_enumerationMutation(obj);
        }
        uint64_t v38 = v3;
        id v4 = *(void **)(*((void *)&v51 + 1) + 8 * v3);
        __int128 v47 = 0u;
        __int128 v48 = 0u;
        __int128 v49 = 0u;
        __int128 v50 = 0u;
        id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) removedAppInfos]);
        id v6 = [v5 countByEnumeratingWithState:&v47 objects:v57 count:16];
        if (v6)
        {
          id v7 = v6;
          uint64_t v8 = *(void *)v48;
          do
          {
            __int16 v9 = 0LL;
            do
            {
              if (*(void *)v48 != v8) {
                objc_enumerationMutation(v5);
              }
              uint64_t v10 = *(void **)(*((void *)&v47 + 1) + 8LL * (void)v9);
              id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
              id v12 = (void *)objc_claimAutoreleasedReturnValue([v10 bundleIdentifier]);
              unsigned int v13 = [v11 isEqual:v12];

              if (v13) {
                -[NSMutableArray addObject:](v2, "addObject:", v4);
              }
              __int16 v9 = (char *)v9 + 1;
            }

            while (v7 != v9);
            id v7 = [v5 countByEnumeratingWithState:&v47 objects:v57 count:16];
          }

          while (v7);
        }

        __int128 v45 = 0u;
        __int128 v46 = 0u;
        __int128 v43 = 0u;
        __int128 v44 = 0u;
        id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) addedAppInfos]);
        id v15 = [v14 countByEnumeratingWithState:&v43 objects:v56 count:16];
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = *(void *)v44;
          do
          {
            double v18 = 0LL;
            do
            {
              if (*(void *)v44 != v17) {
                objc_enumerationMutation(v14);
              }
              double v19 = *(void **)(*((void *)&v43 + 1) + 8LL * (void)v18);
              double v20 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
              double v21 = (void *)objc_claimAutoreleasedReturnValue([v19 bundleIdentifier]);
              unsigned int v22 = [v20 isEqual:v21];

              if (v22) {
                [v4 setAppInfo:v19];
              }
              double v18 = (char *)v18 + 1;
            }

            while (v16 != v18);
            id v16 = [v14 countByEnumeratingWithState:&v43 objects:v56 count:16];
          }

          while (v16);
        }

        __int128 v41 = 0u;
        __int128 v42 = 0u;
        __int128 v39 = 0u;
        __int128 v40 = 0u;
        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) oldToNewUpdatedAppInfos]);
        id v24 = [v23 countByEnumeratingWithState:&v39 objects:v55 count:16];
        if (v24)
        {
          id v25 = v24;
          uint64_t v26 = *(void *)v40;
          do
          {
            CGRect v27 = 0LL;
            do
            {
              if (*(void *)v40 != v26) {
                objc_enumerationMutation(v23);
              }
              uint64_t v28 = *(void *)(*((void *)&v39 + 1) + 8LL * (void)v27);
              CGRect v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) oldToNewUpdatedAppInfos]);
              double v30 = (void *)objc_claimAutoreleasedReturnValue([v29 objectForKey:v28]);

              id v31 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
              id v32 = (void *)objc_claimAutoreleasedReturnValue([v30 bundleIdentifier]);
              unsigned int v33 = [v31 isEqual:v32];

              if (v33) {
                [v4 setAppInfo:v30];
              }

              CGRect v27 = (char *)v27 + 1;
            }

            while (v25 != v27);
            id v25 = [v23 countByEnumeratingWithState:&v39 objects:v55 count:16];
          }

          while (v25);
        }

        uint64_t v3 = v38 + 1;
        uint64_t v2 = v36;
      }

      while ((id)(v38 + 1) != v37);
      id v37 = [obj countByEnumeratingWithState:&v51 objects:v58 count:16];
    }

    while (v37);
  }

  if (-[NSMutableArray count](v2, "count")) {
    [*(id *)(a1 + 32) _updateWithRemovedItems:v2];
  }
}

void sub_1000F3478(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v3]);
  if (v4)
  {
    id v5 = [*(id *)(a1 + 40) isEqual:v3];
    unsigned int v6 = [v3 isEqual:*(void *)(a1 + 48)];
    id v7 = objc_alloc(&OBJC_CLASS___PBAppSwitcherItem);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 bundleIdentifier]);
    __int16 v9 = -[PBAppSwitcherItem initWithType:bundleIdentifier:appInfo:dataSource:live:]( v7,  "initWithType:bundleIdentifier:appInfo:dataSource:live:",  v6,  v8,  v4,  *(void *)(a1 + 56),  v5);

    [*(id *)(a1 + 64) addObject:v9];
    if ((_DWORD)v5) {
      objc_storeStrong((id *)(*(void *)(a1 + 56) + 32LL), v9);
    }
    if (v6) {
      objc_storeStrong((id *)(*(void *)(a1 + 56) + 24LL), v9);
    }
  }
}

void sub_1000F37E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

BOOL sub_1000F3800(id a1, PBAppSwitcherItem *a2, unint64_t a3, BOOL *a4)
{
  return !-[PBAppSwitcherItem isPendingInsertion](a2, "isPendingInsertion", a3, a4);
}

void sub_1000F381C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if ([v5 isPendingDeletion])
  {
    unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSIndexPath indexPathForItem:inSection:]( &OBJC_CLASS___NSIndexPath,  "indexPathForItem:inSection:",  a3,  0LL));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PBAppSwitcherUpdate deleteUpdateWithItem:indexPath:]( &OBJC_CLASS___PBAppSwitcherUpdate,  "deleteUpdateWithItem:indexPath:",  v5,  v6));
    [*(id *)(a1 + 32) addObject:v7];
  }
}

BOOL sub_1000F38A4(id a1, PBAppSwitcherItem *a2, unint64_t a3, BOOL *a4)
{
  return !-[PBAppSwitcherItem isPendingDeletion](a2, "isPendingDeletion", a3, a4);
}

void sub_1000F38C0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if ([v5 isPendingInsertion])
  {
    unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSIndexPath indexPathForItem:inSection:]( &OBJC_CLASS___NSIndexPath,  "indexPathForItem:inSection:",  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) + a3,  0LL));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PBAppSwitcherUpdate insertUpdateWithItem:indexPath:]( &OBJC_CLASS___PBAppSwitcherUpdate,  "insertUpdateWithItem:indexPath:",  v5,  v6));
    [*(id *)(a1 + 32) addObject:v7];
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
  }
}

id sub_1000F3B70(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_1000F3E84(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.PineBoard.PBOSUpdateService.obliterate", 0LL);
  uint64_t v2 = (void *)qword_100470B18;
  qword_100470B18 = (uint64_t)v1;
}

void sub_1000F3EB4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48)) {
    sub_1001C97A0();
  }
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  uint64_t v29 = a1;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v33 objects:v39 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v34;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v34 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v33 + 1) + 8LL * (void)i);
        __int16 v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
        unsigned int v10 = [v9 fileExistsAtPath:v8];

        if (v10)
        {
          [v2 addObject:v8];
        }

        else
        {
          id v11 = sub_1000836CC();
          id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)__int128 buf = 138543362;
            uint64_t v38 = v8;
            _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "OBLIT: Not preserving invalid path %{public}@.",  buf,  0xCu);
          }
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v33 objects:v39 count:16];
    }

    while (v5);
  }

  uint64_t v13 = kObliterateDataPartition;
  uint64_t v14 = kObliterationTypeKey;
  id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
  uint64_t v16 = kDisplayProgressBarKey;
  id v17 = [v2 copy];
  double v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjectsAndKeys:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjectsAndKeys:",  v13,  v14,  v15,  v16,  v17,  kObliterationExclusionPathsKey,  0LL));

  double v19 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
  LODWORD(v15) = [v19 shouldSkipObliterate];

  if ((_DWORD)v15)
  {
    id v20 = sub_1000836CC();
    double v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "OBLIT: Skipped because default is set.",  buf,  2u);
    }

    int v22 = 16;
    uint64_t v23 = v29;
    goto LABEL_20;
  }

  int v22 = Mobile_Obliterate(v18);
  uint64_t v23 = v29;
  if (v22)
  {
LABEL_20:
    id v24 = sub_1000836CC();
    id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      sub_10027FAB8(v22, v25);
    }

    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  14LL,  0LL));
    goto LABEL_23;
  }

  id v27 = sub_1000836CC();
  uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
  if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "OBLIT: succeeded, about to reboot...", buf, 2u);
  }

  uint64_t v26 = 0LL;
LABEL_23:
  if (*(void *)(v23 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000F4284;
    block[3] = &unk_1003D2560;
    id v32 = *(id *)(v23 + 40);
    id v31 = v26;
    dispatch_async(&_dispatch_main_q, block);
  }
}

uint64_t sub_1000F4284(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1000F4380(id a1)
{
  dispatch_queue_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v1 reallyPerformOSSoftwareUpdateCheck];
}

void sub_1000F43D8(id a1)
{
  dispatch_queue_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v1 reallyPerformMDMOSSoftwareUpdateCheck];
}

void sub_1000F44A8(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 checkForOSUpdatesWithOptions:*(void *)(a1 + 32) response:*(void *)(a1 + 40)];
}

void sub_1000F4560(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 isOSSoftwareUpdateChecking:*(void *)(a1 + 32)];
}

void sub_1000F4618(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 startDownload:*(void *)(a1 + 32)];
}

void sub_1000F46D0(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 cancelDownload:*(void *)(a1 + 32)];
}

void sub_1000F4788(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 purgeDownload:*(void *)(a1 + 32)];
}

void sub_1000F4840(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 currentDownload:*(void *)(a1 + 32)];
}

void sub_1000F48D4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 setAssetDownloadIsDiscretionary:*(unsigned __int8 *)(a1 + 32)];
}

uint64_t sub_1000F498C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000F4A4C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 isUpdate:*(void *)(a1 + 32) readyForInstallation:*(void *)(a1 + 40)];
}

void sub_1000F4B4C(void *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 installUpdate:a1[4] withOptions:a1[5] withResult:a1[6]];
}

void sub_1000F4BB0(id a1)
{
  dispatch_queue_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v1 reallyPerformOSSoftwareRestore];
}

void sub_1000F4C60(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 isOSSoftwareUpdateRunning:*(void *)(a1 + 32)];
}

void sub_1000F4CC0(id a1)
{
  dispatch_queue_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v1 cancelOSSoftwareUpdate];
}

void sub_1000F4D70(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 purgeableAssetSpaceWithCompletion:*(void *)(a1 + 32)];
}

void sub_1000F4E28(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 purgeAssetsWithCompletion:*(void *)(a1 + 32)];
}

BOOL sub_1000F53F0(BOOL result, int a2)
{
  if (a2) {
    return +[PBBulletinService applicationDismissBulletinViewController:]( &OBJC_CLASS___PBBulletinService,  "applicationDismissBulletinViewController:",  *(void *)(result + 32));
  }
  return result;
}

void sub_1000F5924( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33)
{
}

uint64_t sub_1000F594C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000F595C(uint64_t a1)
{
}

void sub_1000F5974(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0LL;

  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG)) {
    sub_10027FB2C(a1, v4, v5, v6, v7, v8, v9, v10);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1000F59CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
  BOOL v3 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG);
  if (v2)
  {
    if (v3) {
      sub_10027FC0C(a1, v4, v5, v6, v7, v8, v9, v10);
    }
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  }

  else if (v3)
  {
    sub_10027FB9C(a1, v4, v5, v6, v7, v8, v9, v10);
  }

void sub_1000F5A34(uint64_t a1)
{
  dispatch_queue_t v1 = *(dispatch_source_s **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  if (v1) {
    dispatch_source_cancel(v1);
  }
}

void sub_1000F5A58(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000F5AC8;
    block[3] = &unk_1003D0110;
    id v2 = *(id *)(a1 + 32);
    dispatch_async(&_dispatch_main_q, block);
  }

uint64_t sub_1000F5AC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000F5DD4(_Unwind_Exception *a1)
{
}

id sub_1000F6664()
{
  if (qword_100470B30 != -1) {
    dispatch_once(&qword_100470B30, &stru_1003D6D28);
  }
  return (id)qword_100470B28;
}

void sub_1000F66A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.airPlay", "Manager");
  id v2 = (void *)qword_100470B28;
  qword_100470B28 = (uint64_t)v1;
}

id sub_1000F66DC()
{
  if (qword_100470B40 != -1) {
    dispatch_once(&qword_100470B40, &stru_1003D6D48);
  }
  return (id)qword_100470B38;
}

void sub_1000F6720(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.airPlay", "Process");
  id v2 = (void *)qword_100470B38;
  qword_100470B38 = (uint64_t)v1;
}

id sub_1000F6754()
{
  if (qword_100470B50 != -1) {
    dispatch_once(&qword_100470B50, &stru_1003D6D68);
  }
  return (id)qword_100470B48;
}

void sub_1000F6798(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.appDelegate", "LanguageChange");
  id v2 = (void *)qword_100470B48;
  qword_100470B48 = (uint64_t)v1;
}

id sub_1000F67CC()
{
  if (qword_100470B60 != -1) {
    dispatch_once(&qword_100470B60, &stru_1003D6D88);
  }
  return (id)qword_100470B58;
}

void sub_1000F6810(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.appIcon", "Cache");
  id v2 = (void *)qword_100470B58;
  qword_100470B58 = (uint64_t)v1;
}

id sub_1000F6844()
{
  if (qword_100470B70 != -1) {
    dispatch_once(&qword_100470B70, &stru_1003D6DA8);
  }
  return (id)qword_100470B68;
}

void sub_1000F6888(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard", "AppJail");
  id v2 = (void *)qword_100470B68;
  qword_100470B68 = (uint64_t)v1;
}

id sub_1000F68BC()
{
  if (qword_100470B80 != -1) {
    dispatch_once(&qword_100470B80, &stru_1003D6DC8);
  }
  return (id)qword_100470B78;
}

void sub_1000F6900(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.appSwitcher", "Manager");
  id v2 = (void *)qword_100470B78;
  qword_100470B78 = (uint64_t)v1;
}

id sub_1000F6934()
{
  if (qword_100470B90 != -1) {
    dispatch_once(&qword_100470B90, &stru_1003D6DE8);
  }
  return (id)qword_100470B88;
}

void sub_1000F6978(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.processManager", "RepairService");
  id v2 = (void *)qword_100470B88;
  qword_100470B88 = (uint64_t)v1;
}

id sub_1000F69AC()
{
  if (qword_100470BA0 != -1) {
    dispatch_once(&qword_100470BA0, &stru_1003D6E08);
  }
  return (id)qword_100470B98;
}

void sub_1000F69F0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.captions", "CaptionsOnMuteController");
  id v2 = (void *)qword_100470B98;
  qword_100470B98 = (uint64_t)v1;
}

id sub_1000F6A24()
{
  if (qword_100470BB0 != -1) {
    dispatch_once(&qword_100470BB0, &stru_1003D6E28);
  }
  return (id)qword_100470BA8;
}

void sub_1000F6A68(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.controlCenter", "Manager");
  id v2 = (void *)qword_100470BA8;
  qword_100470BA8 = (uint64_t)v1;
}

id sub_1000F6A9C()
{
  if (qword_100470BC0 != -1) {
    dispatch_once(&qword_100470BC0, &stru_1003D6E48);
  }
  return (id)qword_100470BB8;
}

void sub_1000F6AE0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.controlCenter", "SystemMenuService");
  id v2 = (void *)qword_100470BB8;
  qword_100470BB8 = (uint64_t)v1;
}

id sub_1000F6B14()
{
  if (qword_100470BD0 != -1) {
    dispatch_once(&qword_100470BD0, &stru_1003D6E68);
  }
  return (id)qword_100470BC8;
}

void sub_1000F6B58(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.controlCenter", "SystemUIService");
  id v2 = (void *)qword_100470BC8;
  qword_100470BC8 = (uint64_t)v1;
}

id sub_1000F6B8C()
{
  if (qword_100470BE0 != -1) {
    dispatch_once(&qword_100470BE0, &stru_1003D6E88);
  }
  return (id)qword_100470BD8;
}

void sub_1000F6BD0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.diagnostics", "Diagnostics");
  id v2 = (void *)qword_100470BD8;
  qword_100470BD8 = (uint64_t)v1;
}

id sub_1000F6C04()
{
  if (qword_100470BF0 != -1) {
    dispatch_once(&qword_100470BF0, &stru_1003D6EA8);
  }
  return (id)qword_100470BE8;
}

void sub_1000F6C48(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.diagnostics", "DiagnosticsUI");
  id v2 = (void *)qword_100470BE8;
  qword_100470BE8 = (uint64_t)v1;
}

id sub_1000F6C7C()
{
  if (qword_100470C00 != -1) {
    dispatch_once(&qword_100470C00, &stru_1003D6EC8);
  }
  return (id)qword_100470BF8;
}

void sub_1000F6CC0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.workspace", "DisplayTransformer");
  id v2 = (void *)qword_100470BF8;
  qword_100470BF8 = (uint64_t)v1;
}

id sub_1000F6CF4()
{
  if (qword_100470C10 != -1) {
    dispatch_once(&qword_100470C10, &stru_1003D6EE8);
  }
  return (id)qword_100470C08;
}

void sub_1000F6D38(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.distributedAssertion", "Assertion");
  id v2 = (void *)qword_100470C08;
  qword_100470C08 = (uint64_t)v1;
}

id sub_1000F6D6C()
{
  if (qword_100470C20 != -1) {
    dispatch_once(&qword_100470C20, &stru_1003D6F08);
  }
  return (id)qword_100470C18;
}

void sub_1000F6DB0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.distributedAssertion", "Service");
  id v2 = (void *)qword_100470C18;
  qword_100470C18 = (uint64_t)v1;
}

id sub_1000F6DE4()
{
  if (qword_100470C30 != -1) {
    dispatch_once(&qword_100470C30, &stru_1003D6F28);
  }
  return (id)qword_100470C28;
}

void sub_1000F6E28(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.event", "FilterController");
  id v2 = (void *)qword_100470C28;
  qword_100470C28 = (uint64_t)v1;
}

id sub_1000F6E5C()
{
  if (qword_100470C40 != -1) {
    dispatch_once(&qword_100470C40, &stru_1003D6F48);
  }
  return (id)qword_100470C38;
}

void sub_1000F6EA0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.event", "KeyCommands");
  id v2 = (void *)qword_100470C38;
  qword_100470C38 = (uint64_t)v1;
}

id sub_1000F6ED4()
{
  if (qword_100470C50 != -1) {
    dispatch_once(&qword_100470C50, &stru_1003D6F68);
  }
  return (id)qword_100470C48;
}

void sub_1000F6F18(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.event", "EventDelivery");
  id v2 = (void *)qword_100470C48;
  qword_100470C48 = (uint64_t)v1;
}

id sub_1000F6F4C()
{
  if (qword_100470C60 != -1) {
    dispatch_once(&qword_100470C60, &stru_1003D6F88);
  }
  return (id)qword_100470C58;
}

void sub_1000F6F90(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.event", "HID");
  id v2 = (void *)qword_100470C58;
  qword_100470C58 = (uint64_t)v1;
}

id sub_1000F6FC4()
{
  if (qword_100470C70 != -1) {
    dispatch_once(&qword_100470C70, &stru_1003D6FA8);
  }
  return (id)qword_100470C68;
}

void sub_1000F7008(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard", "HotBlack");
  id v2 = (void *)qword_100470C68;
  qword_100470C68 = (uint64_t)v1;
}

id sub_1000F703C()
{
  if (qword_100470C80 != -1) {
    dispatch_once(&qword_100470C80, &stru_1003D6FC8);
  }
  return (id)qword_100470C78;
}

void sub_1000F7080(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.event", "InternalShortcut");
  id v2 = (void *)qword_100470C78;
  qword_100470C78 = (uint64_t)v1;
}

id sub_1000F70B4()
{
  if (qword_100470C90 != -1) {
    dispatch_once(&qword_100470C90, &stru_1003D6FE8);
  }
  return (id)qword_100470C88;
}

void sub_1000F70F8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.processManager", "KeyboardPreference");
  id v2 = (void *)qword_100470C88;
  qword_100470C88 = (uint64_t)v1;
}

id sub_1000F712C()
{
  if (qword_100470CA0 != -1) {
    dispatch_once(&qword_100470CA0, &stru_1003D7008);
  }
  return (id)qword_100470C98;
}

void sub_1000F7170(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.managedDevice", "DemoMode");
  id v2 = (void *)qword_100470C98;
  qword_100470C98 = (uint64_t)v1;
}

id sub_1000F71A4()
{
  if (qword_100470CB0 != -1) {
    dispatch_once(&qword_100470CB0, &stru_1003D7028);
  }
  return (id)qword_100470CA8;
}

void sub_1000F71E8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.networkingController", "Controller");
  id v2 = (void *)qword_100470CA8;
  qword_100470CA8 = (uint64_t)v1;
}

id sub_1000F721C()
{
  if (qword_100470CC0 != -1) {
    dispatch_once(&qword_100470CC0, &stru_1003D7048);
  }
  return (id)qword_100470CB8;
}

void sub_1000F7260(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.nowPlaying", "Manager");
  id v2 = (void *)qword_100470CB8;
  qword_100470CB8 = (uint64_t)v1;
}

id sub_1000F7294()
{
  if (qword_100470CD0 != -1) {
    dispatch_once(&qword_100470CD0, &stru_1003D7068);
  }
  return (id)qword_100470CC8;
}

void sub_1000F72D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.overlayTransitions", "Coordinator");
  id v2 = (void *)qword_100470CC8;
  qword_100470CC8 = (uint64_t)v1;
}

id sub_1000F730C()
{
  if (qword_100470CE0 != -1) {
    dispatch_once(&qword_100470CE0, &stru_1003D7088);
  }
  return (id)qword_100470CD8;
}

void sub_1000F7350(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.pip", "Avoidance");
  id v2 = (void *)qword_100470CD8;
  qword_100470CD8 = (uint64_t)v1;
}

id sub_1000F7384()
{
  if (qword_100470CF0 != -1) {
    dispatch_once(&qword_100470CF0, &stru_1003D70A8);
  }
  return (id)qword_100470CE8;
}

void sub_1000F73C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.pip", "SplitView");
  id v2 = (void *)qword_100470CE8;
  qword_100470CE8 = (uint64_t)v1;
}

id sub_1000F73FC()
{
  if (qword_100470D00 != -1) {
    dispatch_once(&qword_100470D00, &stru_1003D70C8);
  }
  return (id)qword_100470CF8;
}

void sub_1000F7440(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.processManager", "PreventLaunchMonitor");
  id v2 = (void *)qword_100470CF8;
  qword_100470CF8 = (uint64_t)v1;
}

id sub_1000F7474()
{
  if (qword_100470D10 != -1) {
    dispatch_once(&qword_100470D10, &stru_1003D70E8);
  }
  return (id)qword_100470D08;
}

void sub_1000F74B8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.routingUI", "Manager");
  id v2 = (void *)qword_100470D08;
  qword_100470D08 = (uint64_t)v1;
}

id sub_1000F74EC()
{
  if (qword_100470D20 != -1) {
    dispatch_once(&qword_100470D20, &stru_1003D7108);
  }
  return (id)qword_100470D18;
}

void sub_1000F7530(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.scenes", "ShroudController");
  id v2 = (void *)qword_100470D18;
  qword_100470D18 = (uint64_t)v1;
}

id sub_1000F7564()
{
  if (qword_100470D30 != -1) {
    dispatch_once(&qword_100470D30, &stru_1003D7128);
  }
  return (id)qword_100470D28;
}

void sub_1000F75A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.SIL", "OnTimeAccumulator");
  id v2 = (void *)qword_100470D28;
  qword_100470D28 = (uint64_t)v1;
}

id sub_1000F75DC()
{
  if (qword_100470D40 != -1) {
    dispatch_once(&qword_100470D40, &stru_1003D7148);
  }
  return (id)qword_100470D38;
}

void sub_1000F7620(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.siri", "SAApplication");
  id v2 = (void *)qword_100470D38;
  qword_100470D38 = (uint64_t)v1;
}

id sub_1000F7654()
{
  if (qword_100470D50 != -1) {
    dispatch_once(&qword_100470D50, &stru_1003D7168);
  }
  return (id)qword_100470D48;
}

void sub_1000F7698(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.siri", "SAContextProvider");
  id v2 = (void *)qword_100470D48;
  qword_100470D48 = (uint64_t)v1;
}

id sub_1000F76CC()
{
  if (qword_100470D60 != -1) {
    dispatch_once(&qword_100470D60, &stru_1003D7188);
  }
  return (id)qword_100470D58;
}

void sub_1000F7710(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.siri", "SAManager");
  id v2 = (void *)qword_100470D58;
  qword_100470D58 = (uint64_t)v1;
}

id sub_1000F7744()
{
  if (qword_100470D70 != -1) {
    dispatch_once(&qword_100470D70, &stru_1003D71A8);
  }
  return (id)qword_100470D68;
}

void sub_1000F7788(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.scheduledSleep", "Manager");
  id v2 = (void *)qword_100470D68;
  qword_100470D68 = (uint64_t)v1;
}

id sub_1000F77BC()
{
  if (qword_100470D80 != -1) {
    dispatch_once(&qword_100470D80, &stru_1003D71C8);
  }
  return (id)qword_100470D78;
}

void sub_1000F7800(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.systemStatus", "Publisher");
  id v2 = (void *)qword_100470D78;
  qword_100470D78 = (uint64_t)v1;
}

id sub_1000F7834()
{
  if (qword_100470D90 != -1) {
    dispatch_once(&qword_100470D90, &stru_1003D71E8);
  }
  return (id)qword_100470D88;
}

void sub_1000F7878(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.systemUI", "Presenter");
  id v2 = (void *)qword_100470D88;
  qword_100470D88 = (uint64_t)v1;
}

id sub_1000F78AC()
{
  if (qword_100470DA0 != -1) {
    dispatch_once(&qword_100470DA0, &stru_1003D7208);
  }
  return (id)qword_100470D98;
}

void sub_1000F78F0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.bulletin", "BannerAdapter");
  id v2 = (void *)qword_100470D98;
  qword_100470D98 = (uint64_t)v1;
}

id sub_1000F7924()
{
  if (qword_100470DB0 != -1) {
    dispatch_once(&qword_100470DB0, &stru_1003D7228);
  }
  return (id)qword_100470DA8;
}

void sub_1000F7968(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.workspace", "FullDisplayManager");
  id v2 = (void *)qword_100470DA8;
  qword_100470DA8 = (uint64_t)v1;
}

id sub_1000F799C()
{
  if (qword_100470DC0 != -1) {
    dispatch_once(&qword_100470DC0, &stru_1003D7248);
  }
  return (id)qword_100470DB8;
}

void sub_1000F79E0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.volumeHUD", "VolumeHUDManager");
  id v2 = (void *)qword_100470DB8;
  qword_100470DB8 = (uint64_t)v1;
}

id sub_1000F7A14()
{
  if (qword_100470DD0 != -1) {
    dispatch_once(&qword_100470DD0, &stru_1003D7268);
  }
  return (id)qword_100470DC8;
}

void sub_1000F7A58(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.whatsNew", "WhatsNewService");
  id v2 = (void *)qword_100470DC8;
  qword_100470DC8 = (uint64_t)v1;
}

id sub_1000F7A8C()
{
  if (qword_100470DE0 != -1) {
    dispatch_once(&qword_100470DE0, &stru_1003D7288);
  }
  return (id)qword_100470DD8;
}

void sub_1000F7AD0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.workspace", "Workspace");
  id v2 = (void *)qword_100470DD8;
  qword_100470DD8 = (uint64_t)v1;
}

id sub_1000F7B04()
{
  if (qword_100470DF0 != -1) {
    dispatch_once(&qword_100470DF0, &stru_1003D72A8);
  }
  return (id)qword_100470DE8;
}

void sub_1000F7B48(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.workspace", "HostingWindow");
  id v2 = (void *)qword_100470DE8;
  qword_100470DE8 = (uint64_t)v1;
}

id sub_1000F7B7C()
{
  if (qword_100470E00 != -1) {
    dispatch_once(&qword_100470E00, &stru_1003D72C8);
  }
  return (id)qword_100470DF8;
}

void sub_1000F7BC0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.workspace", "SceneFactory");
  id v2 = (void *)qword_100470DF8;
  qword_100470DF8 = (uint64_t)v1;
}

id sub_1000F7BF4()
{
  if (qword_100470E10 != -1) {
    dispatch_once(&qword_100470E10, &stru_1003D72E8);
  }
  return (id)qword_100470E08;
}

void sub_1000F7C38(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.workspace", "SceneRegistry");
  id v2 = (void *)qword_100470E08;
  qword_100470E08 = (uint64_t)v1;
}

id sub_1000F7C6C()
{
  if (qword_100470E20 != -1) {
    dispatch_once(&qword_100470E20, &stru_1003D7308);
  }
  return (id)qword_100470E18;
}

void sub_1000F7CB0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.bulletin", "Transition");
  id v2 = (void *)qword_100470E18;
  qword_100470E18 = (uint64_t)v1;
}

id sub_1000F7CE4()
{
  if (qword_100470E30 != -1) {
    dispatch_once(&qword_100470E30, &stru_1003D7328);
  }
  return (id)qword_100470E28;
}

void sub_1000F7D28(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.controlCenter", "Transition");
  id v2 = (void *)qword_100470E28;
  qword_100470E28 = (uint64_t)v1;
}

id sub_1000F7D5C()
{
  if (qword_100470E40 != -1) {
    dispatch_once(&qword_100470E40, &stru_1003D7348);
  }
  return (id)qword_100470E38;
}

void sub_1000F7DA0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.dialog", "Transition");
  id v2 = (void *)qword_100470E38;
  qword_100470E38 = (uint64_t)v1;
}

id sub_1000F7DD4()
{
  if (qword_100470E50 != -1) {
    dispatch_once(&qword_100470E50, &stru_1003D7368);
  }
  return (id)qword_100470E48;
}

void sub_1000F7E18(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.screenSaver", "Transition");
  id v2 = (void *)qword_100470E48;
  qword_100470E48 = (uint64_t)v1;
}

id sub_1000F7E4C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = (objc_class *)objc_opt_class(v4);
  uint64_t v6 = NSStringFromClass(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@(%p)", v7, v4));

  objc_initWeak(&location, v4);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_1000F7F6C;
  void v12[3] = &unk_1003D04B8;
  objc_copyWeak(&v13, &location);
  uint64_t v9 = BSLogAddStateCaptureBlockForUserRequestsOnlyWithTitle(v3, v8, v12);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);

  return v10;
}

void sub_1000F7F50( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_1000F7F6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateDumpBuilder]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 build]);

  return v3;
}

void sub_1000F8514(uint64_t a1)
{
}

void sub_1000F8530(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    [v4 setObject:v3 forKeyedSubscript:v5];

    id v6 = sub_1000F9614((void *)a1, v3);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    uint64_t v8 = v7;
    if (v7)
    {
      [v7 addPresentableObserver:a1];
      uint64_t v9 = *(void *)(a1 + 24);
      id v24 = 0LL;
      unsigned __int8 v10 = [v8 postBannerWithBannerSource:v9 error:&v24];
      id v11 = v24;
      if ((v10 & 1) == 0)
      {
        id v12 = sub_1000F78AC();
        id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_10027FDFC();
        }

        uint64_t v14 = *(dispatch_queue_s **)(a1 + 16);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_1000F9CCC;
        block[3] = &unk_1003D1998;
        void block[4] = a1;
        id v21 = v3;
        id v22 = v11;
        id v23 = v8;
        dispatch_async(v14, block);
      }
    }

    else
    {
      id v15 = sub_1000F78AC();
      uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_10027FD70(v3, v16);
      }

      id v17 = *(dispatch_queue_s **)(a1 + 16);
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472LL;
      _DWORD v18[2] = sub_1000FA0EC;
      v18[3] = &unk_1003CFEB8;
      void v18[4] = a1;
      id v19 = v3;
      dispatch_async(v17, v18);
    }
  }
}

void sub_1000F87F0(uint64_t a1)
{
}

void sub_1000F8810(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
    if (sub_1000FA150(a1, v8))
    {
      id v10 = sub_1000F78AC();
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 identifier]);
        id v13 = (void *)objc_claimAutoreleasedReturnValue([v8 identifier]);
        *(_DWORD *)__int128 buf = 138543618;
        uint64_t v28 = v12;
        __int16 v29 = 2114;
        double v30 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Updating bulletin. {newBulletinIdentifier=%{public}@, oldBulletinIdentifier=%{public}@}",  buf,  0x16u);
      }

      sub_1000FA1C8(a1, v8);
      uint64_t v14 = *(void **)(a1 + 32);
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v7 identifier]);
      [v14 setObject:v7 forKeyedSubscript:v15];

      id v16 = sub_1000F9614((void *)a1, v7);
      id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      [v17 addPresentableObserver:a1];
      uint64_t v18 = *(void *)(a1 + 24);
      id v26 = 0LL;
      unsigned __int8 v19 = [v17 postBannerWithBannerSource:v18 error:&v26];
      id v20 = v26;
      if (v9)
      {
        id v21 = *(dispatch_queue_s **)(a1 + 16);
        v22[0] = _NSConcreteStackBlock;
        v22[1] = 3221225472LL;
        v22[2] = sub_1000FA314;
        v22[3] = &unk_1003D0020;
        id v24 = v9;
        unsigned __int8 v25 = v19;
        id v23 = v20;
        dispatch_async(v21, v22);
      }

      sub_1000FA338((dispatch_queue_t *)a1, v8, v7);
    }

    else
    {
      sub_1000F8530(a1, v7);
    }
  }
}

void sub_1000F8AD4(uint64_t a1)
{
}

void sub_1000F8AF0(dispatch_queue_t *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(a1[5]);
    if (sub_1000FA150((uint64_t)a1, v3))
    {
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 identifier]);
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[dispatch_queue_t bannerSource](a1, "bannerSource"));
      id v12 = 0LL;
      id v6 =  [v5 revokePresentableWithRequestIdentifier:v4 reason:@"PBBulletinToBannerAdapterDismissReasonForSystemEvent" animated:1 userInfo:0 error:&v12];
      id v7 = v12;

      id v8 = sub_1000F78AC();
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      id v10 = v9;
      if (v7)
      {
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_10027FE60();
        }
      }

      else if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138543362;
        uint64_t v14 = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Successfully revoked Banner '%{public}@'",  buf,  0xCu);
      }
    }

    else
    {
      id v11 = sub_1000F78AC();
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
        sub_10027FEC0(v3, v4);
      }
    }
  }
}

void sub_1000F8D18(uint64_t a1)
{
  os_log_t v1 = (void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bannerSource]);
  id v9 = 0LL;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( [v2 revokeAllPresentablesWithReason:@"PBBulletinToBannerAdapterDismissReasonInvalidated" userInfo:0 error:&v9]);
  id v4 = v9;

  if (!v3)
  {
    id v5 = sub_1000F78AC();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10027FF48(v1, (uint64_t)v4, v6);
    }
  }

  [*(id *)(*v1 + 24) invalidate];
  id v7 = *(void **)(*v1 + 24LL);
  *(void *)(*v1 + 24LL) = 0LL;

  id v8 = *(void **)(*v1 + 32LL);
  *(void *)(*v1 + 3+[PBDataReportingService incrementOccurrenceCountForAction:]( &OBJC_CLASS___PBDataReportingService,  "incrementOccurrenceCountForAction:", 2LL) = 0LL;
}

void sub_1000F8EFC(uint64_t a1)
{
}

void sub_1000F8F1C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
    v47[0] = _NSConcreteStackBlock;
    v47[1] = 3221225472LL;
    v47[2] = sub_1000FA4DC;
    v47[3] = &unk_1003D7390;
    v47[4] = a1;
    id v49 = v6;
    id v7 = v5;
    id v48 = v7;
    id v8 = objc_retainBlock(v47);
    if ([(id)a1 isForwardableBulletin:v7])
    {
      id v41 = 0LL;
      id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:]( &OBJC_CLASS___NSKeyedArchiver,  "archivedDataWithRootObject:requiringSecureCoding:error:",  v7,  1LL,  &v41));
      id v10 = v41;
      if (v9)
      {
        id v30 = v5;
        id v11 = sub_1000FA620(a1, v7);
        id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
        id v13 = [v12 mutableCopy];

        [v13 setObject:&off_1003FDB48 forKeyedSubscript:TVSPBannerPresentableKeyBannerType];
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v7 message]);
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 objectForKeyedSubscript:PBSSystemBulletinActivationActionKey]);
        id v16 = [v15 unsignedIntegerValue];

        if (v16) {
          [v13 setObject:&__kCFBooleanTrue forKeyedSubscript:TVSPBannerPresentableKeyHostedBannerWantsGestureForAction];
        }
        v38[0] = _NSConcreteStackBlock;
        v38[1] = 3221225472LL;
        v38[2] = sub_1000FA718;
        v38[3] = &unk_1003D73E0;
        void v38[4] = a1;
        id v39 = v7;
        __int128 v40 = v8;
        id v17 = (void *)objc_claimAutoreleasedReturnValue( +[BSActionResponder responderWithHandler:]( &OBJC_CLASS___BSActionResponder,  "responderWithHandler:",  v38));
        [v17 setQueue:*(void *)(a1 + 16)];
        id v18 = objc_alloc(&OBJC_CLASS___PBSystemUIServiceSendBulletinAction);
        unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 24) requesterIdentifier]);
        id v20 = [v18 initWithBulletinData:v9 presentableUserInfo:v13 requesterIdentifier:v19 responder:v17];

        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_1000FA918;
        block[3] = &unk_1003CFF08;
        id v37 = v20;
        id v21 = v20;
        dispatch_async(&_dispatch_main_q, block);

        id v5 = v30;
      }

      else
      {
        id v26 = sub_1000F78AC();
        id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
          sub_10027FFBC();
        }

        uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  300LL,  0LL));
        __int16 v29 = *(dispatch_queue_s **)(a1 + 16);
        v31[0] = _NSConcreteStackBlock;
        v31[1] = 3221225472LL;
        v31[2] = sub_1000FA96C;
        v31[3] = &unk_1003D73B8;
        __int128 v35 = v8;
        id v32 = v28;
        uint64_t v33 = a1;
        id v34 = v7;
        id v13 = v28;
        dispatch_async(v29, v31);
      }
    }

    else
    {
      id v22 = sub_1000F78AC();
      id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_10028001C();
      }

      id v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  303LL,  0LL));
      unsigned __int8 v25 = *(dispatch_queue_s **)(a1 + 16);
      v42[0] = _NSConcreteStackBlock;
      v42[1] = 3221225472LL;
      v42[2] = sub_1000FA538;
      v42[3] = &unk_1003D73B8;
      __int128 v46 = v8;
      id v43 = v24;
      uint64_t v44 = a1;
      id v45 = v7;
      id v10 = v24;
      dispatch_async(v25, v42);

      id v9 = v46;
    }
  }
}

void sub_1000F93C8(uint64_t a1)
{
}

void sub_1000F93E4(dispatch_queue_t *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(a1[2]);
    uint64_t v4 = objc_opt_class(&OBJC_CLASS___PBSBulletin);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 bulletinData]);
    id v16 = 0LL;
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:]( &OBJC_CLASS___NSKeyedUnarchiver,  "unarchivedObjectOfClass:fromData:error:",  v4,  v5,  &v16));
    id v7 = v16;

    id v8 = sub_1000F78AC();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    id v10 = v9;
    if (!v6)
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100280080(v3, (uint64_t)v7, v10);
      }

      goto LABEL_15;
    }

    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 identifier]);
      id v12 = [v3 state];
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v3 reason]);
      *(_DWORD *)__int128 buf = 138413058;
      id v18 = v6;
      __int16 v19 = 2114;
      id v20 = v11;
      __int16 v21 = 2048;
      id v22 = v12;
      __int16 v23 = 2114;
      id v24 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Processing bulletin observing action. {bulletin=%@, bulletinIdentifier=%{public}@, state=%ld, reason=%{public}@}",  buf,  0x2Au);
    }

    id v14 = [v3 state];
    if (v14 == (id)2)
    {
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v3 reason]);
      sub_1000FAC00(a1, v6, v15);
    }

    else
    {
      if (v14 != (id)1)
      {
        if (!v14) {
          sub_1000FA9C0(a1, v6);
        }
        goto LABEL_15;
      }

      id v15 = (void *)objc_claimAutoreleasedReturnValue([v3 reason]);
      sub_1000FAAA8(a1, v6, v15);
    }

    sub_1000FA58C((uint64_t)a1, v6);
LABEL_15:
  }
}

id sub_1000F9614(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (!a1)
  {
    id v14 = 0LL;
    goto LABEL_53;
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 message]);
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSSystemBulletinTitleKey]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSSystemBulletinMessageKey]);
  uint64_t v9 = objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSSystemBulletinFooterMessageKey]);
  uint64_t v10 = v9;
  if (v7) {
    BOOL v11 = 1;
  }
  else {
    BOOL v11 = v8 == 0LL;
  }
  id v65 = (void *)v9;
  if (v11)
  {
    if (!v7)
    {
      id v12 = sub_1000F78AC();
      id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100280290();
      }
      id v14 = 0LL;
      goto LABEL_52;
    }
  }

  else
  {
    id v15 = sub_1000F78AC();
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543618;
      id v75 = v5;
      __int16 v76 = 2112;
      __int128 v77 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Bulletin title was not set, using its message as title. {identifier=%{public}@, bulletin=%@}",  buf,  0x16u);
    }

    uint64_t v7 = (uint64_t)v8;
    id v8 = 0LL;
  }

  id v18 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSSystemBulletinActivationActionKey]);
  if (v10) {
    BOOL v19 = v18 == 0LL;
  }
  else {
    BOOL v19 = 1;
  }
  uint64_t v62 = v18;
  uint64_t v63 = (os_log_s *)v7;
  BOOL v20 = !v19 && [v18 unsignedIntegerValue] != 0;
  __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSSystemBulletinBannerTypeKey]);
  id v22 = [v21 integerValue];

  id v64 = v8;
  if (v22 == (id)1) {
    goto LABEL_27;
  }
  if (v22)
  {
    id v58 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"bannerType != TVSPBannerTypeUnspecified"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100280130();
    }
    _bs_set_crash_log_message([v58 UTF8String]);
    __break(0);
LABEL_61:
    JUMPOUT(0x1000F9C58LL);
  }

  uint64_t v23 = 1LL;
  if (v10 && v8)
  {
    id v24 = sub_1000F78AC();
    unsigned __int8 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543618;
      id v75 = v5;
      __int16 v76 = 2112;
      __int128 v77 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Overriding TVSPBannerType for PBSBulletin, bulletin style doesn't support 3 lines. {bulletinIdentifier=%{public} @, bulletinMessage=%@}",  buf,  0x16u);
    }

LABEL_27:
    uint64_t v23 = 2LL;
  }

  id v26 = objc_alloc(&OBJC_CLASS___TVSPBanner);
  id v27 = (void *)objc_claimAutoreleasedReturnValue([a1 bannerSource]);
  uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v27 requesterIdentifier]);
  id v14 = [v26 initWithBannerIdentifier:v5 requesterIdentifier:v28 title:v63 type:v23];

  [v14 setSubtitle:v64];
  if (v65 || v20)
  {
    id v30 = (void *)objc_claimAutoreleasedReturnValue([v14 requestIdentifier]);
    id v31 = sub_1000F78AC();
    id v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "Setting up banner actions", buf, 2u);
    }

    v70[0] = _NSConcreteStackBlock;
    v70[1] = 3221225472LL;
    v70[2] = sub_1000FAE08;
    v70[3] = &unk_1003D7408;
    BOOL v72 = v20;
    id v71 = v30;
    id v33 = v30;
    __int16 v29 = (void *)objc_claimAutoreleasedReturnValue(+[UIAction actionWithHandler:](&OBJC_CLASS___UIAction, "actionWithHandler:", v70));
    [v29 setTitle:v65];
  }

  else
  {
    __int16 v29 = 0LL;
  }

  uint64_t v59 = v29;
  [v14 setAction:v29];
  id v34 = sub_1000FAEB4((uint64_t)&OBJC_CLASS___PBBulletinToBannerAdapter, v4);
  __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
  [v14 setLeadingImage:v35];
  if (([v35 isSymbolImage] & 1) == 0)
  {
    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v14 configuration]);
    [v36 setLeadingImageTreatment:2];
  }

  id v37 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSWelcomeBackBulletinPersonNameComponentsKey]);
  uint64_t v38 = objc_opt_class(&OBJC_CLASS___NSPersonNameComponents);
  id v39 = v37;
  __int128 v40 = v39;
  if (v38)
  {
    if ((objc_opt_isKindOfClass(v39, v38) & 1) != 0) {
      id v41 = v40;
    }
    else {
      id v41 = 0LL;
    }
  }

  else
  {
    id v41 = 0LL;
  }

  id v61 = v5;
  id v42 = v41;

  if (v42)
  {
    id v43 = (void *)objc_claimAutoreleasedReturnValue([v14 configuration]);
    [v43 setPersonNameComponents:v42];
  }

  uint64_t v60 = v6;
  uint64_t v44 = v4;
  id v45 = sub_1000FA620((uint64_t)a1, v4);
  __int128 v66 = 0u;
  __int128 v67 = 0u;
  __int128 v68 = 0u;
  __int128 v69 = 0u;
  id v46 = (id)objc_claimAutoreleasedReturnValue(v45);
  id v47 = [v46 countByEnumeratingWithState:&v66 objects:v73 count:16];
  if (v47)
  {
    id v48 = v47;
    uint64_t v49 = *(void *)v67;
    do
    {
      for (i = 0LL; i != v48; i = (char *)i + 1)
      {
        if (*(void *)v67 != v49) {
          objc_enumerationMutation(v46);
        }
        uint64_t v51 = *(void *)(*((void *)&v66 + 1) + 8LL * (void)i);
        __int128 v52 = (void *)objc_claimAutoreleasedReturnValue([v46 objectForKeyedSubscript:v51]);
        [v14 setUserInfoValue:v52 forKey:v51];
      }

      id v48 = [v46 countByEnumeratingWithState:&v66 objects:v73 count:16];
    }

    while (v48);
  }

  __int128 v53 = (void *)objc_claimAutoreleasedReturnValue([v14 requestIdentifier]);
  uint64_t v4 = v44;
  __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v44 identifier]);
  unsigned __int8 v55 = [v53 isEqual:v54];

  if ((v55 & 1) == 0)
  {
    id v57 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[[banner requestIdentifier] isEqual:[bulletin identifier]]"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1002801E0();
    }
    _bs_set_crash_log_message([v57 UTF8String]);
    __break(0);
    goto LABEL_61;
  }

  id v6 = v60;
  id v5 = v61;
  id v13 = v63;
  id v8 = v64;
LABEL_52:

LABEL_53:
  return v14;
}

void sub_1000F9CCC(uint64_t a1)
{
}

void sub_1000F9D10(dispatch_queue_t *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  if (a1)
  {
    id v9 = sub_1000F78AC();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v11 = (void *)objc_claimAutoreleasedReturnValue([v7 identifier]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a3));
      int v17 = 138412802;
      id v18 = v11;
      __int16 v19 = 2112;
      BOOL v20 = v12;
      __int16 v21 = 2112;
      id v22 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Calling completion for Bulletin '%@' success: %@ error: %@",  (uint8_t *)&v17,  0x20u);
    }

    dispatch_assert_queue_V2(a1[2]);
    id v13 = (void *)objc_claimAutoreleasedReturnValue(-[dispatch_queue_t delegate](a1, "delegate"));
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 adapter:a1 bulletinInfoForBulletin:v7]);

    uint64_t v15 = objc_claimAutoreleasedReturnValue([v14 clientPresentationCompletion]);
    id v16 = (void *)v15;
    if (v15) {
      (*(void (**)(uint64_t, uint64_t, id))(v15 + 16))(v15, a3, v8);
    }
  }
}

void sub_1000F9E90(dispatch_queue_t *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1)
  {
    id v6 = sub_1000F78AC();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
      uint64_t v9 = PBSBulletinDismissalReasonDescription(a3);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      int v13 = 138412546;
      id v14 = v8;
      __int16 v15 = 2112;
      id v16 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Calling Delegate Dismiss on Bulletin '%@' with reason: '%@'",  (uint8_t *)&v13,  0x16u);
    }

    dispatch_assert_queue_V2(a1[2]);
    if (v5)
    {
      BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(-[dispatch_queue_t delegate](a1, "delegate"));
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 serviceDelegateForAdapter:a1]);
      [v12 bulletinService:v11 didDismissBulletin:v5 withReason:a3];
    }
  }
}

void sub_1000F9FCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = sub_1000F78AC();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 requestIdentifier]);
      *(_DWORD *)__int128 buf = 138412290;
      id v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Cleaning up Banner '%@'", buf, 0xCu);
    }

    dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a1 + 40));
    id v7 = *(dispatch_queue_s **)(a1 + 40);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    void v8[2] = sub_1000FAD48;
    v8[3] = &unk_1003CFEB8;
    id v9 = v3;
    uint64_t v10 = a1;
    dispatch_async(v7, v8);
  }
}

void sub_1000FA0EC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  300LL,  0LL));
  sub_1000F9D10(*(dispatch_queue_t **)(a1 + 32), *(void **)(a1 + 40), 0LL, v2);
  sub_1000F9E90(*(dispatch_queue_t **)(a1 + 32), *(void **)(a1 + 40), 0LL);
}

uint64_t sub_1000FA150(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if (a1)
  {
    id v3 = *(dispatch_queue_s **)(a1 + 40);
    id v4 = a2;
    dispatch_assert_queue_V2(v3);
    id v5 = *(void **)(v2 + 32);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);

    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:v6]);
    uint64_t v2 = v7 != 0LL;
  }

  return v2;
}

void sub_1000FA1C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = sub_1000F78AC();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
      *(_DWORD *)__int128 buf = 138412290;
      int v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Cleaning up Bulletin '%@'", buf, 0xCu);
    }

    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
    if (v3)
    {
      id v7 = *(void **)(a1 + 32);
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
      [v7 removeObjectForKey:v8];

      id v9 = *(dispatch_queue_s **)(a1 + 16);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472LL;
      _DWORD v10[2] = sub_1000FADD0;
      void v10[3] = &unk_1003CFEB8;
      void v10[4] = a1;
      id v11 = v3;
      dispatch_async(v9, v10);
    }
  }
}

uint64_t sub_1000FA314(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48),  *(void *)(a1 + 32));
}

void sub_1000FA338(dispatch_queue_t *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = sub_1000F78AC();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 identifier]);
      *(_DWORD *)__int128 buf = 138543618;
      __int16 v19 = v9;
      __int16 v20 = 2114;
      __int16 v21 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Dismissing outdated bulletin. {oldBulletinIdentifier=%{public}@, newBulletinIdentifier=%{public}@}",  buf,  0x16u);
    }

    dispatch_assert_queue_V2(a1[5]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[dispatch_queue_t bannerSource](a1, "bannerSource"));
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
    id v17 = 0LL;
    id v13 =  [v11 revokePresentableWithRequestIdentifier:v12 reason:@"PBBulletinToBannerAdapterDismissReasonOutdatedBulletin" animated:1 userInfo:0 error:&v17];
    id v14 = v17;

    if (v14)
    {
      id v15 = sub_1000F78AC();
      id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_1002802F4(v5, v6, v16);
      }
    }
  }
}

void sub_1000FA4DC(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1[4] + 16LL));
  uint64_t v6 = a1[6];
  if (v6) {
    (*(void (**)(uint64_t, void, uint64_t, id))(v6 + 16))(v6, a1[5], a2, v5);
  }
}

void sub_1000FA538(uint64_t a1)
{
}

void sub_1000FA58C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a1 + 40));
    id v4 = *(dispatch_queue_s **)(a1 + 40);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_1000FADB4;
    _OWORD v5[3] = &unk_1003CFEB8;
    void v5[4] = a1;
    id v6 = v3;
    dispatch_async(v4, v5);
  }
}

NSMutableDictionary *sub_1000FA620(uint64_t a1, void *a2)
{
  if (a1)
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a2 message]);
    id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:@"_PBBulletinInsertAtFrontOfQueueKey"]);
    unsigned int v5 = [v4 BOOLValue];

    if (v5) {
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v3,  "setObject:forKeyedSubscript:",  &__kCFBooleanTrue,  TVSPBannerPresentableKeyHighPriority);
    }
    uint64_t v6 = PBSSystemBulletinTimeoutKey;
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:PBSSystemBulletinTimeoutKey]);

    if (v7)
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v6]);
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v3,  "setObject:forKeyedSubscript:",  v8,  TVSPBannerPresentableKeyTimeout);
    }
  }

  else
  {
    id v3 = 0LL;
  }

  return v3;
}

void sub_1000FA718(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(*(void *)(a1 + 32) + 16LL));
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___PBSystemUIServiceSendBulletinActionResponse);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0)
  {
    id v5 = v3;
    id v6 = [v5 result];
    if (v6)
    {
      if (v6 == (id)1)
      {
        id v7 = sub_1000F78AC();
        id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          uint64_t v9 = *(void *)(a1 + 40);
          int v19 = 138412290;
          uint64_t v20 = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "Bulletin forwarded successfully. {bulletin=%@}",  (uint8_t *)&v19,  0xCu);
        }

        (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
      }
    }

    else
    {
      id v12 = sub_1000F78AC();
      id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_1002803A0(a1, v5, v13);
      }

      uint64_t v14 = *(void *)(a1 + 48);
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 error]);
      (*(void (**)(uint64_t, void, void *))(v14 + 16))(v14, 0LL, v15);

      id v16 = *(dispatch_queue_t **)(a1 + 32);
      id v17 = *(void **)(a1 + 40);
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v5 error]);
      sub_1000F9D10(v16, v17, 0LL, v18);

      sub_1000F9E90(*(dispatch_queue_t **)(a1 + 32), *(void **)(a1 + 40), 0LL);
      sub_1000FA58C(*(void *)(a1 + 32), *(void **)(a1 + 40));
    }
  }

  else
  {
    id v10 = sub_1000F78AC();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT)) {
      sub_10028043C((uint64_t)v3, a1, v11);
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }
}

void sub_1000FA918(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBControlCenterManager sharedInstance](&OBJC_CLASS___PBControlCenterManager, "sharedInstance"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 systemUIServicePresenter]);
  [v3 sendAction:*(void *)(a1 + 32)];
}

void sub_1000FA96C(uint64_t a1)
{
}

void sub_1000FA9C0(dispatch_queue_t *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = sub_1000F78AC();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
      int v7 = 138543362;
      id v8 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Calling bulletin completion. {bulletinIdentifier=%{public}@}",  (uint8_t *)&v7,  0xCu);
    }

    dispatch_assert_queue_V2(a1[2]);
    sub_1000F9D10(a1, v3, 1LL, 0LL);
  }
}

void sub_1000FAAA8(dispatch_queue_t *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = sub_1000F78AC();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
      int v11 = 138543618;
      id v12 = v9;
      __int16 v13 = 2114;
      id v14 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Calling delegate dismiss. {bulletinIdentifier=%{public}@, reason=%{public}@}",  (uint8_t *)&v11,  0x16u);
    }

    dispatch_assert_queue_V2(a1[2]);
    if ([v6 isEqual:@"TVSSBannerRevocationReasonTimeout"])
    {
      uint64_t v10 = 2LL;
    }

    else if ([v6 isEqual:@"TVSSBannerRevocationReasonPrimaryActionTriggered"])
    {
      uint64_t v10 = 1LL;
    }

    else if ([v6 isEqual:@"PBBulletinToBannerAdapterDismissReasonForSystemEvent"])
    {
      uint64_t v10 = 4LL;
    }

    else
    {
      uint64_t v10 = 3LL;
    }

    sub_1000F9E90(a1, v5, v10);
  }
}

void sub_1000FAC00(dispatch_queue_t *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = sub_1000F78AC();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
      int v11 = 138543618;
      id v12 = v9;
      __int16 v13 = 2114;
      id v14 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Calling bulletin completion and delegate dismiss. {bulletinIdentifier=%{public}@, reason=%{public}@}",  (uint8_t *)&v11,  0x16u);
    }

    dispatch_assert_queue_V2(a1[2]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  303LL,  0LL));
    sub_1000F9D10(a1, v5, 0LL, v10);
    sub_1000F9E90(a1, v5, 0LL);
  }
}

void sub_1000FAD48(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 40) + 32LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestIdentifier]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);

  sub_1000FA1C8(*(void *)(a1 + 40), v4);
}

void sub_1000FADB4(uint64_t a1)
{
}

void sub_1000FADD0(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v2 adapter:*(void *)(a1 + 32) cleanupForBulletin:*(void *)(a1 + 40)];
}

void sub_1000FAE08(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40))
  {
    id v2 = sub_1000F78AC();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Banner '%@' Action: Handling action in dismiss",  (uint8_t *)&v5,  0xCu);
    }
  }

id sub_1000FAEB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(a1, v4);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 message]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSSystemBulletinSymbolNameKey]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSSystemBulletinImageIDKey]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSSystemBulletinImageDataKey]);
  uint64_t v10 = objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSSystemBulletinImageURLKey]);
  uint64_t v11 = objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:PBSSystemBulletinImageURLPlaceholderKey]);
  id v12 = (void *)v11;
  if (v7)
  {
    __int16 v13 = v7;
  }

  else
  {
    if (v8)
    {
      id v15 = sub_1000FB9C0(v5, v8);
      uint64_t v14 = objc_claimAutoreleasedReturnValue(v15);
      goto LABEL_8;
    }

    if (v9)
    {
      uint64_t v14 = objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](&OBJC_CLASS___UIImage, "imageWithData:", v9));
      goto LABEL_8;
    }

    if (!(v10 | v11))
    {
      id v16 = 0LL;
      goto LABEL_9;
    }

    __int16 v13 = (void *)v11;
  }

  uint64_t v14 = objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](&OBJC_CLASS___UIImage, "_systemImageNamed:", v13));
LABEL_8:
  id v16 = (void *)v14;
LABEL_9:

  return v16;
}

void sub_1000FB24C(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 32LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) requestIdentifier]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);

  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(dispatch_queue_s **)(v5 + 16);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_1000FB2FC;
  v8[3] = &unk_1003CFEB8;
  void v8[4] = v5;
  id v9 = v4;
  id v7 = v4;
  dispatch_async(v6, v8);
}

void sub_1000FB2FC(uint64_t a1)
{
}

void sub_1000FB568(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 32LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) requestIdentifier]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);

  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(dispatch_queue_s **)(v5 + 16);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_1000FB640;
  v8[3] = &unk_1003D1998;
  void v8[4] = v5;
  id v9 = v4;
  id v10 = *(id *)(a1 + 48);
  id v11 = *(id *)(a1 + 40);
  id v7 = v4;
  dispatch_async(v6, v8);
}

void sub_1000FB640(uint64_t a1)
{
}

void sub_1000FB8B4(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 32LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) requestIdentifier]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);

  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(dispatch_queue_s **)(v5 + 16);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_1000FB98C;
  v8[3] = &unk_1003D1998;
  void v8[4] = v5;
  id v9 = v4;
  id v10 = *(id *)(a1 + 48);
  id v11 = *(id *)(a1 + 40);
  id v7 = v4;
  dispatch_async(v6, v8);
}

void sub_1000FB98C(uint64_t a1)
{
}

id sub_1000FB9C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1, v4);
  uint64_t v5 = PBSBulletinImageSymbolNameForImageID(v3);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  if (v6)
  {
    uint64_t v7 = objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](&OBJC_CLASS___UIImage, "_systemImageNamed:", v6));
  }

  else
  {
    if (BSEqualStrings(v3, PBSSystemBulletinImageIDRemoteExt1))
    {
      id v8 = @"PBSSystemBulletinImageID/remoteExt1";
    }

    else if (BSEqualStrings(v3, PBSSystemBulletinImageIDScreenSharing))
    {
      id v8 = @"PBSSystemBulletinImageID/screen-sharing";
    }

    else
    {
      if (!BSEqualStrings(v3, PBSSystemBulletinImageIDTapToRadar))
      {
        id v9 = 0LL;
        goto LABEL_11;
      }

      id v8 = @"PBSSystemBulletinImageID/ttr";
    }

    uint64_t v7 = objc_claimAutoreleasedReturnValue(+[UIImage imageNamed:](&OBJC_CLASS___UIImage, "imageNamed:", v8));
  }

  id v9 = (void *)v7;
LABEL_11:

  return v9;
}

void sub_1000FBDB0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](&OBJC_CLASS___LSApplicationWorkspace, "defaultWorkspace"));
  [v2 openSensitiveURL:*(void *)(a1 + 32) withOptions:0];
}

void sub_1000FBE98(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](&OBJC_CLASS___LSApplicationWorkspace, "defaultWorkspace"));
  [v2 openSensitiveURL:*(void *)(a1 + 32) withOptions:0];
}

void sub_1000FC574(uint64_t a1)
{
  id v2 = (UIApplicationSceneClientSettings *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) initialClientSettings]);
  if (!v2) {
    id v2 = objc_alloc_init(&OBJC_CLASS___UIApplicationSceneClientSettings);
  }
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[FBSceneManager sharedInstance](&OBJC_CLASS___FBSceneManager, "sharedInstance"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 sceneWithIdentifier:*(void *)(a1 + 40)]);

  if (v4)
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 clientProcess]);
    uint64_t v6 = *(void **)(a1 + 48);

    if (v5 == v6)
    {
      id v43 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) actions]);
      id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "bs_filter:", &stru_1003D7448));

      if (v8) {
        [v4 sendActions:v8];
      }
      id v44 = sub_100083C30();
      id v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
      if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v46 = *(void *)(a1 + 48);
        id v47 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
        *(_DWORD *)__int128 buf = 136315906;
        __int128 v53 = "-[PBAuxiliarySceneManager createdSceneForProcess:withOptions:completion:]_block_invoke_2";
        __int16 v54 = 2114;
        uint64_t v55 = v46;
        __int16 v56 = 2112;
        id v57 = v47;
        __int16 v58 = 2048;
        id v59 = [v8 count];
        _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "%s - process (%{public}@) requested existing auxiliary scene creation {scene.identifier=%@, continuityActions.count=%lu}",  buf,  0x2Au);
      }
    }

    else
    {

      id v7 = sub_100083C30();
      id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_ERROR)) {
        sub_1002807F8((uint64_t *)(a1 + 48), (uint64_t *)(a1 + 40), (os_log_t)v8);
      }
      uint64_t v4 = 0LL;
    }
  }

  else
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 mainWorkspace]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v10 geometry]);

    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[UIMutableApplicationSceneSettings settings]( &OBJC_CLASS___UIMutableApplicationSceneSettings,  "settings"));
    [v8 bounds];
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;
    if (sub_1001C9E00())
    {
      [v8 fullDisplayBounds];
      double v13 = v20;
      double v15 = v21;
      double v17 = v22;
      double v19 = v23;
    }

    objc_msgSend(v11, "setFrame:", v13, v15, v17, v19);
    [v11 setForeground:1];
    [v11 setLevel:sub_100103824(*(void *)(a1 + 88))];
    id v24 = (void *)objc_claimAutoreleasedReturnValue(+[FBDisplayManager mainConfiguration](&OBJC_CLASS___FBDisplayManager, "mainConfiguration"));
    [v11 setDisplayConfiguration:v24];

    [v11 setInterfaceOrientation:1];
    unsigned __int8 v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) bundleIdentifier]);
    id v26 = (void *)objc_claimAutoreleasedReturnValue( +[PBSystemAppearanceManager sharedInstance]( &OBJC_CLASS___PBSystemAppearanceManager,  "sharedInstance"));
    objc_msgSend( v11,  "setUserInterfaceStyle:",  objc_msgSend(v26, "effectiveUserInterfaceStyleForBundleIdentifier:", v25));

    id v27 = (void *)objc_claimAutoreleasedReturnValue(+[FBSceneManager sharedInstance](&OBJC_CLASS___FBSceneManager, "sharedInstance"));
    uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue( +[UIApplicationSceneSpecification specification]( &OBJC_CLASS___UIApplicationSceneSpecification,  "specification"));
    __int16 v29 = (void *)objc_claimAutoreleasedReturnValue( +[FBSMutableSceneParameters parametersForSpecification:]( &OBJC_CLASS___FBSMutableSceneParameters,  "parametersForSpecification:",  v28));

    [v29 setSettings:v11];
    uint64_t v51 = v2;
    [v29 setClientSettings:v2];
    id v30 = objc_alloc_init(&OBJC_CLASS___UIApplicationSceneTransitionContext);
    id v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) actions]);
    [v30 setActions:v31];

    [*(id *)(*(void *)(a1 + 64) + 16) setObject:*(void *)(a1 + 72) forKey:*(void *)(a1 + 40)];
    id v32 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
    id v33 = (void *)objc_claimAutoreleasedReturnValue([v32 sceneDeactivationManager]);
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 acquireQueueLockWithReason:@"PBAuxiliarySceneCreation"]);

    uint64_t v35 = *(void *)(a1 + 40);
    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) workspace]);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( [v27 createSceneWithIdentifier:v35 parameters:v29 clientProvider:v36 transitionContext:v30]);

    [v34 relinquish];
    id v37 = sub_100083C30();
    uint64_t v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
    {
      id v49 = v30;
      id v39 = v8;
      __int128 v40 = v25;
      uint64_t v41 = *(void *)(a1 + 48);
      __int128 v50 = v27;
      id v42 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
      *(_DWORD *)__int128 buf = 136315650;
      __int128 v53 = "-[PBAuxiliarySceneManager createdSceneForProcess:withOptions:completion:]_block_invoke";
      __int16 v54 = 2114;
      uint64_t v55 = v41;
      unsigned __int8 v25 = v40;
      id v8 = v39;
      id v30 = v49;
      __int16 v56 = 2114;
      id v57 = v42;
      _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "%s - process (%{public}@) requested auxiliary scene creation -> %{public}@",  buf,  0x20u);

      id v27 = v50;
    }

    id v2 = v51;
  }

  uint64_t v48 = *(void *)(a1 + 80);
  if (v48) {
    (*(void (**)(uint64_t, void *, void))(v48 + 16))(v48, v4, 0LL);
  }
}

BOOL sub_1000FCA98(id a1, BSAction *a2)
{
  return -[BSAction UIActionType](a2, "UIActionType") == (id)6;
}

void sub_1000FCF9C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
}

void sub_1000FCFBC(uint64_t a1)
{
}

void sub_1000FCFD4(uint64_t a1)
{
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v15;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v15 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v14 + 1) + 8LL * (void)i);
        id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "sceneWithIdentifier:", v7, (void)v14));

        if (v8)
        {
          id v9 = objc_alloc(&OBJC_CLASS___UIDestroySceneAction);
          id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v7));
          id v11 = [v9 initWithPersistedIdentifiers:v10 preferredAnimationType:1 callbackQueue:0 completion:0];

          double v12 = objc_alloc_init(&OBJC_CLASS___FBSSceneTransitionContext);
          double v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v11));
          -[FBSSceneTransitionContext setActions:](v12, "setActions:", v13);

          [*(id *)(a1 + 40) destroyScene:v7 withTransitionContext:v12];
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }

    while (v4);
  }
}

uint64_t sub_1000FD17C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000FD18C(uint64_t a1)
{
}

void sub_1000FD1A4(uint64_t a1, int a2)
{
  if (a2) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) invalidate];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = 0LL;
}

id sub_1000FD1F4(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) invalidate];
}

id sub_1000FD3A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentAuxiliaryScene:*(void *)(a1 + 40)];
}

id sub_1000FD530(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissAuxiliaryScene:*(void *)(a1 + 40) completion:&stru_1003D74B8];
}

void sub_1000FD8F0(id a1)
{
  id v1 = -[PBEARCConfigurator _init](objc_alloc(&OBJC_CLASS___PBEARCConfigurator), "_init");
  id v2 = (void *)qword_100470E58;
  qword_100470E58 = (uint64_t)v1;
}

void sub_1000FDB64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1000FDFE0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1000FE0BC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) addObject:*(void *)(a1 + 40)];
}

id sub_1000FE194(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) removeObject:*(void *)(a1 + 40)];
}

void sub_1000FE3AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000FE6EC(uint64_t a1)
{
  id v2 = _os_activity_create( (void *)&_mh_execute_header,  "eARCConfiguration/statusChanged",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v2, &state);

  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers", 0));
  id v4 = [v3 countByEnumeratingWithState:&v7 objects:v12 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0LL;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) eARCStatusChanged:*(void *)(a1 + 40)];
        uint64_t v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v3 countByEnumeratingWithState:&v7 objects:v12 count:16];
    }

    while (v4);
  }

  os_activity_scope_leave(&state);
}

void sub_1000FE818( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state)
{
}

void sub_1000FEC6C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000FECA8(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = objc_alloc(&OBJC_CLASS___NSError);
    uint64_t v4 = PBSDisplayManagerErrorDomain;
    NSErrorUserInfoKey v9 = NSLocalizedFailureReasonErrorKey;
    __int128 v10 = @"Timed out waiting for updated status";
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v10,  &v9,  1LL));
    uint64_t v6 = -[NSError initWithDomain:code:userInfo:](v3, "initWithDomain:code:userInfo:", v4, 832004LL, v5);

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    __int128 v8 = (void *)objc_claimAutoreleasedReturnValue(+[PBSEARCConfigurator sharedInstance](&OBJC_CLASS___PBSEARCConfigurator, "sharedInstance"));
    objc_msgSend(WeakRetained, "_stopAndCallCompletionWithStatus:error:", objc_msgSend(v8, "eARCStatus"), v6);
  }

void sub_1000FEE44(void *a1)
{
  uint64_t v2 = a1[5];
  id v3 = sub_100082B14();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (!v5) {
      goto LABEL_11;
    }
    uint64_t v6 = (const __CFString *)a1[5];
    if (!v6) {
      uint64_t v6 = @"(nil)";
    }
    int v15 = 138543362;
    __int128 v16 = v6;
    __int128 v7 = "Error on call to enable (e)ARC: %{public}@";
    __int128 v8 = v4;
    uint32_t v9 = 12;
  }

  else
  {
    if (!v5) {
      goto LABEL_11;
    }
    id v11 = (const __CFString *)a1[5];
    __int128 v10 = (const __CFString *)a1[6];
    if (!v11) {
      id v11 = @"(none)";
    }
    int v15 = 134218242;
    __int128 v16 = v10;
    __int16 v17 = 2114;
    double v18 = v11;
    __int128 v7 = "Completed request to toggle (e)ARC with status: %li, error: %{public}@";
    __int128 v8 = v4;
    uint32_t v9 = 22;
  }

  _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v7, (uint8_t *)&v15, v9);
LABEL_11:

  id v12 = objc_retainBlock(*(id *)(a1[4] + 8LL));
  uint64_t v13 = a1[4];
  __int128 v14 = *(void **)(v13 + 8);
  *(void *)(v13 + _Block_object_dispose(&a9, 8) = 0LL;

  if (v12) {
    (*((void (**)(id, void, void))v12 + 2))(v12, a1[6], a1[5]);
  }
}

Class sub_1000FF06C(uint64_t a1)
{
  Class result = objc_getClass("EARCSystemClient");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_100470E70 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    sub_100280B10();
    return (Class)sub_1000FF0C0();
  }

  return result;
}

uint64_t sub_1000FF0C0()
{
  id v3 = 0LL;
  if (!qword_100470E68)
  {
    __int128 v4 = off_1003D7600;
    uint64_t v5 = 0LL;
    qword_100470E68 = _sl_dlopen(&v4, &v3);
  }

  uint64_t v0 = qword_100470E68;
  id v1 = v3;
  if (!qword_100470E68)
  {
    id v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }

  if (v3) {
LABEL_7:
  }
    free(v1);
  return v0;
}

id sub_1000FF5C4(uint64_t a1)
{
  return  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 8) withName:@"definition"];
}

uint64_t sub_1000FF758(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1000FFB90(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSystemAppearanceManager sharedInstance](&OBJC_CLASS___PBSystemAppearanceManager, "sharedInstance"));
  id v3 = [v2 effectiveUserInterfaceStyleForBundleIdentifier:*(void *)(a1 + 32)];

  return [*(id *)(a1 + 40) setUserInterfaceStyle:v3];
}

void sub_1000FFE84(void *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  [v2 destroyScenesWithPersistentIdentifiers:a1[4] forProcess:a1[5] completion:a1[6]];
}

void sub_1000FFEC4(void *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 auxiliarySceneManager]);

  [v3 destroyScenesWithPersistentIdentifiers:a1[4] forProcess:a1[5] completion:a1[6]];
}

void sub_100100008(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___PBApplicationSupportServiceDelegate);
  uint64_t v2 = (void *)qword_100470E90;
  qword_100470E90 = (uint64_t)v1;
}

BOOL sub_100100290(id a1, MRCommandInfo *a2)
{
  return -[MRCommandInfo command](a2, "command") == 19;
}

void sub_100100404(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) _init];
  uint64_t v2 = (void *)qword_100470EA0;
  qword_100470EA0 = (uint64_t)v1;
}

void sub_1001004A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v4.receiver = *(id *)(a1 + 40);
  v4.super_class = (Class)&OBJC_METACLASS___PBSystemService;
  id v2 = objc_msgSendSuper2(&v4, "allocWithZone:", v1);
  id v3 = (void *)qword_100470EB0;
  qword_100470EB0 = (uint64_t)v2;
}

PBBasicService *__cdecl sub_100100700(id a1)
{
  return (PBBasicService *)objc_alloc_init(&OBJC_CLASS___PBVideoSubscriberAccountService);
}

void sub_10010086C(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _singleton]);
  [v1 _startServices];
}

void sub_1001009D8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) defaultKioskConnection]);
  [v2 defaultKioskAppPurgeTopShelfContentForApplicationIdentifiers:*(void *)(a1 + 40)];
}

id sub_100100B9C(uint64_t a1)
{
  return [*(id *)(a1 + 40) invalidate];
}

void sub_100100C4C(uint64_t a1)
{
  id v2 = -[PBSystemServiceConnection initWithConnection:]( objc_alloc(&OBJC_CLASS___PBSystemServiceConnection),  "initWithConnection:",  *(void *)(a1 + 32));
  [*(id *)(*(void *)(a1 + 40) + 24) addObject:v2];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[PBSystemServiceConnection clientBundleIdentifier](v2, "clientBundleIdentifier"));
  unsigned int v4 = [v3 isEqualToString:@"com.apple.HeadBoard"];

  if (v4) {
    [*(id *)(a1 + 40) setDefaultKioskConnection:v2];
  }
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_100100D90;
  void v10[3] = &unk_1003CFEB8;
  uint64_t v5 = *(void **)(a1 + 32);
  void v10[4] = *(void *)(a1 + 40);
  uint64_t v6 = v2;
  id v11 = v6;
  [v5 setInvalidationHandler:v10];
  -[PBSystemServiceConnection resume](v6, "resume");
  if (v4)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    __int128 v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100100DAC;
    block[3] = &unk_1003CFF08;
    void block[4] = *(void *)(a1 + 40);
    dispatch_async(v8, block);
  }
}

id sub_100100D90(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleInvalidationForConnection:*(void *)(a1 + 40)];
}

void sub_100100DAC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 postNotificationName:@"PBSystemServiceDidEstablishDefaultKioskConnectionNotification" object:*(void *)(a1 + 32)];
}

id sub_100101248(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___PBUserNotificationCenter);
  id v3 = (void *)qword_100470ED0;
  qword_100470ED0 = (uint64_t)v2;

  [(id)qword_100470ED0 setDelegate:*(void *)(a1 + 32)];
  unsigned int v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v5 = (void *)qword_100470EC8;
  qword_100470EC8 = (uint64_t)v4;

  [(id)qword_100470ED0 startUserNotificationCenter];
  return [(id)qword_100470ED0 initializeStoreErrorHandler];
}

void sub_100101388(uint64_t a1, _DWORD *a2, unint64_t a3)
{
  if (sub_1000B6754(a2, a3))
  {
    uint64_t v4 = a2[2];
    a2[2] = 0;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[BSAuditToken tokenFromMachMessage:](&OBJC_CLASS___BSAuditToken, "tokenFromMachMessage:", a2));
    id v56 = 0LL;
    unsigned __int8 v6 = sub_1000B6778(v5, &v56);
    id v7 = v56;
    __int128 v8 = 0LL;
    if ((v6 & 1) == 0)
    {
      id v9 = sub_100084428();
      __int128 v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
        sub_100280C70((uint64_t)v7, v10, v11, v12, v13, v14, v15, v16);
      }

      if ((+[TVSDevice runningAnInternalBuild](&OBJC_CLASS___TVSDevice, "runningAnInternalBuild") & 1) == 0)
      {
        sub_1000B6860(v4);
LABEL_27:

        goto LABEL_28;
      }

      v63[0] = kCFUserNotificationAlertHeaderKey;
      v63[1] = kCFUserNotificationAlertMessageKey;
      v64[0] = @"Process that requested CFUserNotification does not have the correct entitlement";
      __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v7 localizedDescription]);
      double v18 = (void *)objc_claimAutoreleasedReturnValue([v7 userInfo]);
      double v19 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKeyedSubscript:@"FBProcess"]);
      double v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ \n\n(presented by %@)",  v17,  v19));
      v64[1] = v20;
      __int128 v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v64,  v63,  2LL));
    }

    uint64_t v21 = a2[5];
    id v22 = sub_1000B68DC((uint64_t)a2);
    uint64_t v23 = objc_claimAutoreleasedReturnValue(v22);
    if (v23)
    {
      id v24 = (void *)v23;
      if (v8)
      {
        id v25 = v8;

        id v24 = v25;
      }

      id v26 = (void *)objc_claimAutoreleasedReturnValue( +[PBUserNotificationCenter sharedInstance]( &OBJC_CLASS___PBUserNotificationCenter,  "sharedInstance"));
      id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 delegate]);
      id v28 = [v26 cfUserNotificationForToken:sub_1000B6988(v24)];
      __int16 v29 = (PBCFUserNotification *)objc_claimAutoreleasedReturnValue(v28);
      id v30 = sub_100084428();
      id v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
      {
        id v55 = v7;
        id v32 = (void *)objc_claimAutoreleasedReturnValue(-[PBCFUserNotification notificationSource](v29, "notificationSource"));
        unsigned int v54 = v4;
        id v33 = (void *)objc_claimAutoreleasedReturnValue(-[PBCFUserNotification alertHeader](v29, "alertHeader"));
        __int128 v53 = v27;
        id v34 = (void *)objc_claimAutoreleasedReturnValue([v24 description]);
        *(_DWORD *)__int128 buf = 138543874;
        __int16 v58 = v32;
        __int16 v59 = 2114;
        uint64_t v60 = v33;
        __int16 v61 = 2112;
        uint64_t v62 = v34;
        _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "Received CFUserNotification. {source=%{public}@, alertHeader=%{public}@, notification=%@}",  buf,  0x20u);

        id v27 = v53;
        uint64_t v4 = v54;

        id v7 = v55;
      }

      if ((v21 & 8) != 0)
      {
        -[PBCFUserNotification cancel](v29, "cancel");
        [v27 userNotificationCenterDidCancelCFNotification:v29];
      }

      else
      {
        if ((v21 & 0x10) != 0 && v29)
        {
          -[PBCFUserNotification updateWithMessage:requestFlags:](v29, "updateWithMessage:requestFlags:", v24, v21);
        }

        else
        {
          __int128 v52 = -[PBCFUserNotification initWithMessage:replyPort:requestFlags:]( objc_alloc(&OBJC_CLASS___PBCFUserNotification),  "initWithMessage:replyPort:requestFlags:",  v24,  v4,  v21);

          [(id)qword_100470EC8 addObject:v52];
          __int16 v29 = v52;
        }

        [v27 userNotificationCenterDidReceiveCFNotification:v29];
      }
    }

    else
    {
      id v43 = sub_100084428();
      id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue(v43);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_100280C3C(v44, v45, v46, v47, v48, v49, v50, v51);
      }

      sub_1000B6860(v4);
    }

    goto LABEL_27;
  }

  id v35 = sub_100084428();
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v35);
  if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR)) {
    sub_100280CD8((os_log_s *)v5, v36, v37, v38, v39, v40, v41, v42);
  }
LABEL_28:
}

void sub_100101A60(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_100084428();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    __int128 v8 = (void *)objc_opt_class(*(void *)(a1 + 32));
    id v9 = v8;
    if ((_DWORD)a2) {
      __int128 v10 = @"started successfully";
    }
    else {
      __int128 v10 = @"failed to start";
    }
    id v11 = v8;
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v5 localizedDescription]);
    int v13 = 138412802;
    uint64_t v14 = v9;
    __int16 v15 = 2112;
    uint64_t v16 = v10;
    __int16 v17 = 2112;
    double v18 = v12;
    _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%@ %@ Error [%@]", (uint8_t *)&v13, 0x20u);
  }

  [*(id *)(a1 + 32) setConnected:a2];
}

id sub_100101BE8(uint64_t a1)
{
  id v2 = sub_100084428();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
    sub_100280D0C(a1, v3);
  }

  return [*(id *)(a1 + 32) setConnected:0];
}

void sub_1001020BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_1001020DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v3 = [WeakRetained success];

  uint64_t v4 = *(void **)(a1 + 32);
  if (v3) {
    return [v4 retry];
  }
  else {
    return [v4 performDefaultHandling];
  }
}

void sub_1001022D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_1001022F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v3 = [WeakRetained success];

  uint64_t v4 = *(void **)(a1 + 32);
  if (v3) {
    return [v4 retry];
  }
  else {
    return [v4 performDefaultHandling];
  }
}

void sub_1001024F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_100102514(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v3 = [WeakRetained success];

  uint64_t v4 = *(void **)(a1 + 32);
  if (v3) {
    return [v4 retry];
  }
  else {
    return [v4 performDefaultHandling];
  }
}

id sub_100102AD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    id v2 = *(void **)(v1 + 16);
  }
  else {
    id v2 = 0LL;
  }
  return v2;
}

BOOL sub_100102CF8(id a1, PBOpenApplicationRequest *a2)
{
  id v2 = a2;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(-[PBOpenApplicationRequest toAppInfo](v2, "toAppInfo"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(-[PBOpenApplicationRequest fromApplication](v2, "fromApplication"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PBOpenApplicationRequest sourceApplication](v2, "sourceApplication"));
  if (!v5)
  {
    char v10 = 0;
LABEL_15:

    return v10;
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 bundleIdentifier]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleIdentifier]);
  if (([v7 isEqual:v6] & 1) != 0
    || (__int128 v8 = (void *)objc_claimAutoreleasedReturnValue([v4 applicationInfo]),
        unsigned __int8 v9 = [v8 isViewService],
        v8,
        (v9 & 1) != 0))
  {
    char v10 = 0;
LABEL_14:

    goto LABEL_15;
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 bundleIdentifier]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 bundleIdentifier]);
  if ([v11 isEqual:v13])
  {
    unsigned __int8 v14 = -[PBOpenApplicationRequest enforceDeepLinking](v2, "enforceDeepLinking");

    if ((v14 & 1) == 0)
    {
LABEL_12:
      char v10 = 0;
LABEL_13:

      goto LABEL_14;
    }
  }

  else
  {
  }

  if (([v4 isKioskApplication] & 1) != 0
    || ([v5 isKioskApplication] & 1) != 0)
  {
    goto LABEL_12;
  }

  uint64_t v16 = @"com.apple.siri";
  if (([v6 isEqual:v16] & 1) != 0
    || ([v11 isEqual:v16] & 1) != 0)
  {
    char v10 = 0;
LABEL_25:

    goto LABEL_13;
  }

  __int16 v17 = @"com.apple.TVConferenceRoomDisplay";
  if (([v6 isEqual:v17] & 1) != 0
    || ([v11 isEqual:v17] & 1) != 0)
  {
    char v10 = 0;
LABEL_24:

    goto LABEL_25;
  }

  if (![v3 isPlaceholder])
  {
    double v18 = (void *)objc_claimAutoreleasedReturnValue([v4 appInfo]);
    unsigned __int8 v20 = [v18 isHidden];

    char v10 = v20 ^ 1;
    goto LABEL_24;
  }

  double v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Launch of a placeholder should not be happening"));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_100280FA8((uint64_t)v19);
  }
  BOOL result = _bs_set_crash_log_message([v19 UTF8String]);
  __break(0);
  return result;
}

void sub_10010311C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100103144(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _acquireDeactivationAssertionsAtLevel:*(void *)(a1 + 40)];
}

void sub_100103288( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1001032B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _relinquishDeactivationAssertionsAtLevel:*(void *)(a1 + 40)];
}

void sub_10010344C(_Unwind_Exception *a1)
{
}

void sub_100103474(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _addAndAcquireDeactivationAssertionsWithReasons:*(void *)(a1 + 40) atLevel:*(void *)(a1 + 48)];
}

void sub_1001035B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1001035E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _removeAndRelinquishDeactivationAssertionsAtLevel:*(void *)(a1 + 40)];
}

double sub_100103824(uint64_t a1)
{
  else {
    return dbl_1002EC700[a1 + 1];
  }
}

BOOL sub_100103854(uint64_t a1, uint64_t a2, void *a3)
{
  return v4 < *(double *)(a1 + 32);
}

void sub_100103AFC(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) newAssertionWithReason:a2];
  [*(id *)(a1 + 40) addObject:v3];
}

void sub_100104694(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  double v4 = a2;
  [v2 sendSubviewToBack:v3];
  v4[2](v4);
}

void sub_1001047D4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  double v4 = a2;
  [v2 bringSubviewToFront:v3];
  v4[2](v4);
}

id sub_100104C74(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100104D0C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100470EE0;
  qword_100470EE0 = (uint64_t)v1;
}

void sub_100104F08(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBScreenSaverManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  [v7 addObserver:*(void *)(a1 + 32)];
  uint64_t v9 = objc_opt_self(&OBJC_CLASS___PBPowerManager, v8);
  char v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v10]);

  [v11 addObserver:*(void *)(a1 + 32)];
}

void sub_1001050E0(_Unwind_Exception *a1)
{
}

void sub_100105104(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained toggleSystemAppearance];
}

LABEL_21:
  return v13;
}

    uint64_t v4 = -1LL;
    id v7 = 3LL;
    goto LABEL_22;
  }

  uint64_t v4 = -1LL;
  id v7 = 1LL;
LABEL_22:
  -[PBCFUserNotification _sendResponse:customButtonResponse:](self, "_sendResponse:customButtonResponse:", v7, v4);
}

  return 1;
}

  id v35 = v49;

  uint64_t v36 = v7;
  uint64_t v37 = fopen((const char *)[v36 UTF8String], "w");
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = v35 + 1;
    if (fprintf(v37, "%d", v39) < 1)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10028F220();
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 67109120;
      LODWORD(v51) = v39;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Incremented boot count to %d",  buf,  8u);
    }

    if (fclose(v38) && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_10028F1B0();
    }
  }

  else
  {
    uint64_t v40 = *__error();
    if ((_DWORD)v40)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10028F144(v40, v41, v42, v43, v44, v45, v46, v47);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "No boot count file. Creating new file.",  buf,  2u);
    }
  }
}

    __int16 v29 = 1;
    goto LABEL_20;
  }

  id v31 = sub_100083C30();
  double v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
    id v32 = 136315394;
    id v33 = "-[PBSceneManager _eventsCanBeDeferredToSceneHandle:]";
    id v34 = 2114;
    id v35 = v24;
    id v25 = "%s - Will not defer events to non UI scene %{public}@";
    goto LABEL_18;
  }
}

    id v25 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    id v26 = *v25;
    id v27 = (-1LL << v4) - 1;
  }

  else
  {
    id v25 = (uint64_t *)(v5 + 8 * (result >> 6));
    id v27 = *v25;
    id v26 = (-1LL << result) - 1;
  }

  *id v25 = v27 & v26;
  id v28 = *(void *)(a2 + 16);
  __int16 v29 = __OFSUB__(v28, 1LL);
  id v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }

  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }

  return result;
}

__CFString *sub_100105C54(uint64_t a1)
{
  else {
    id v1 = off_1003D7820[(int)a1];
  }
  return v1;
}

id sub_100105F80(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateAutomaticSystemAppearanceIfNeeded];
}

void sub_100106438(_Unwind_Exception *a1)
{
}

void sub_100106454(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateUserInterfaceStyleForScenesWithUserInterfaceStyle:*(void *)(a1 + 40)];
}

void sub_100106488(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 settings]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 clientProcess]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 state]);
  id v7 = [v6 taskState];

  else {
    uint64_t v8 = 0LL;
  }
  id v9 = v8;

  if (v7 == (id)2 && v9)
  {
    id v10 = sub_1000840E0();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
      sub_100281110(a1, v3);
    }

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_10010659C;
    void v12[3] = &unk_1003D77E0;
    void v12[4] = *(void *)(a1 + 32);
    [v3 updateSettingsWithBlock:v12];
  }
}

id sub_10010659C(uint64_t a1, void *a2)
{
  return [a2 setUserInterfaceStyle:*(void *)(a1 + 32)];
}

void sub_100106810( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_1001069F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) serviceIdentifier]);
  [v3 setService:v4];

  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_100106CA0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(*(void *)(a1 + 32) + 16LL);
  id v4 = a2;
  [v3 configureConnection:v4];
  [v4 setInterfaceTarget:*(void *)(a1 + 40)];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_100106D60;
  _OWORD v5[3] = &unk_1003D0EF0;
  void v5[4] = *(void *)(a1 + 32);
  id v6 = *(id *)(a1 + 48);
  id v7 = *(id *)(a1 + 40);
  [v4 setInvalidationHandler:v5];
}

void sub_100106D60(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) logGroup]);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    int v7 = 138543874;
    uint64_t v8 = v5;
    __int16 v9 = 2048;
    uint64_t v10 = v6;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated. {client=%{public}@, service_ptr=%p, connection=%@}",  (uint8_t *)&v7,  0x20u);
  }

  [*(id *)(a1 + 48) invalidate];
}

id sub_100106FAC(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100107044(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100470EF0;
  qword_100470EF0 = (uint64_t)v1;
}

void sub_100107108(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  uint64_t v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  __int16 v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v10 = NSStringFromClass(v9);
  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  19LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned __int8 v14 = *(void **)(v13 + 8);
  *(void *)(v13 + _Block_object_dispose(&a9, 8) = v12;
}

void sub_1001074D0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_100082A9C();
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v7)
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Failed to sleep for mode-switch sleep/wake cycle",  buf,  2u);
    }

    (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
  }

  else
  {
    if (v7)
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Sleep successful; updating preferences for desired mode.",
        buf,
        2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "pb_saveAsPreferred");
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _displayModeForDisplayID:*(void *)(a1 + 48)]);
    __int16 v9 = objc_alloc(&OBJC_CLASS___PBSDisplayMode);
    uint64_t v10 = *(void *)(a1 + 32);
    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](&OBJC_CLASS___NSSet, "set"));
    id v12 = -[PBSDisplayMode initWithCADisplayMode:usePineBoardPolicy:encodedPromotedModes:]( v9,  "initWithCADisplayMode:usePineBoardPolicy:encodedPromotedModes:",  v10,  1LL,  v11);

    [*(id *)(a1 + 40) _saveDisplayMode:v12 forDisplayID:*(void *)(a1 + 48)];
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) defaults]);
    [v13 synchronize];

    id v14 = sub_100082A9C();
    __int16 v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
      sub_100281350((id *)(a1 + 40), (void *)(a1 + 48), v15);
    }

    id v16 = sub_100082A9C();
    __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Stored mode preferences, attempting to wake the display.",  buf,  2u);
    }

    double v18 = *(void **)(a1 + 40);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472LL;
    void v24[2] = sub_10010773C;
    v24[3] = &unk_1003D7850;
    id v19 = *(id *)(a1 + 56);
    uint64_t v20 = *(void *)(a1 + 40);
    id v25 = v19;
    uint64_t v26 = v20;
    id v27 = v8;
    id v21 = *(id *)(a1 + 64);
    id v28 = v12;
    id v29 = v21;
    id v22 = v12;
    id v23 = v8;
    [v18 wakeDisplayWithReply:v24];
  }
}

void sub_10010773C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_100082A9C();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v12) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Failed to wake for mode-switch sleep/wake cycle; restoring prior settings",
        (uint8_t *)&v12,
        2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "pb_saveAsPreferred");
    [*(id *)(a1 + 40) setUserSelectedDisplayMode:*(void *)(a1 + 48)];
    (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
  }

  id v9 = sub_100082A9C();
  uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 56);
    int v12 = 138543362;
    uint64_t v13 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Display wake complete, we should now load mode %{public}@",  (uint8_t *)&v12,  0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
}

uint64_t sub_100107B80(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 key]);
  uint64_t v4 = BSEqualObjects(v2, v3);

  return v4;
}

id sub_100107F68(id a1, PBOverlayLayoutRectNode *a2)
{
  uint64_t v2 = NSStringFromCGRect(v4);
  return (id)objc_claimAutoreleasedReturnValue(v2);
}

void sub_100108260(uint64_t a1, void *a2, uint64_t a3)
{
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v13 = *(id *)(a1 + 32);
  id v14 = [v13 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v19;
    while (2)
    {
      for (i = 0LL; i != v15; i = (char *)i + 1)
      {
        if (*(void *)v19 != v16) {
          objc_enumerationMutation(v13);
        }
        if (objc_msgSend( *(id *)(*((void *)&v18 + 1) + 8 * (void)i),  "intersectsRect:",  v6,  v8,  v10,  v12,  (void)v18))
        {
          [*(id *)(a1 + 40) removeIndex:a3];
          goto LABEL_11;
        }
      }

      id v15 = [v13 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v15) {
        continue;
      }
      break;
    }
  }

id sub_100108984(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) key]);
}

BOOL sub_1001089A4(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v2[1];
  uint64_t v6 = v2[2];
  uint64_t v8 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v10 = v2[3];
  uint64_t v9 = v2[4];
  return v3 == v5 && v4 == v6 && v8 == v10 && v7 == v9;
}

BOOL sub_1001089D0(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  uint64_t v8 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v10 = v2[7];
  uint64_t v9 = v2[8];
  return v3 == v5 && v4 == v6 && v8 == v10 && v7 == v9;
}

id sub_100108FA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) bounds];
}

id sub_100108FBC(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) nodes]);
}

id sub_100109118(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1001091DC(id a1)
{
  id v1 = -[PBUserProfileManager _init](objc_alloc(&OBJC_CLASS___PBUserProfileManager), "_init");
  uint64_t v2 = (void *)qword_100470F00;
  qword_100470F00 = (uint64_t)v1;

  +[PBDependencyCoordinator registerInstance:dependencyBlock:]( &OBJC_CLASS___PBDependencyCoordinator,  "registerInstance:dependencyBlock:",  qword_100470F00,  &stru_1003D79B0);
}

void sub_10010922C(id a1, PBDependencyContext *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___PBPowerManager, v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[PBDependencyContext instanceForClass:](v2, "instanceForClass:", v5));

  uint64_t v8 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v7);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[PBDependencyContext instanceForClass:](v2, "instanceForClass:", v9));

  [(id)qword_100470F00 _initializeWithWindowManager:v10 powerManager:v6];
}

void sub_1001096FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "userProfileManagerDidUpdate:") & 1) != 0) {
    [v3 userProfileManagerDidUpdate:*(void *)(a1 + 32)];
  }
}

void sub_1001097BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "userProfileManager:didUpdateGroupRecommendationsSession:") & 1) != 0) {
    [v3 userProfileManager:*(void *)(a1 + 32) didUpdateGroupRecommendationsSession:*(void *)(a1 + 40)];
  }
}

void sub_1001098E8(void *a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "userProfileManager:didSwitchToUserWithIdentifier:previousUserIdentifier:") & 1) != 0) {
    [v3 userProfileManager:a1[4] didSwitchToUserWithIdentifier:a1[5] previousUserIdentifier:a1[6]];
  }
}

PBTVMainWorkspaceGeometry *sub_1001099AC()
{
  return objc_alloc_init(&OBJC_CLASS___PBTVMainWorkspaceGeometry);
}

id sub_100109B58()
{
  uint64_t v4 = 0LL;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000LL;
  uint64_t v0 = (void *)qword_100470F10;
  uint64_t v7 = qword_100470F10;
  if (!qword_100470F10)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    void v3[2] = sub_10010A4A0;
    v3[3] = &unk_1003D0790;
    void v3[4] = &v4;
    sub_10010A4A0((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }

  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100109BF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10010A154( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28)
{
}

void sub_10010A3D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

Class sub_10010A4A0(uint64_t a1)
{
  uint64_t v4 = 0LL;
  if (!qword_100470F18)
  {
    __int128 v5 = off_1003D7A48;
    uint64_t v6 = 0LL;
    qword_100470F18 = _sl_dlopen(&v5, &v4);
    uint64_t v2 = v4;
    if (!qword_100470F18)
    {
      abort_report_np("%s", v4);
      goto LABEL_7;
    }

    if (v4) {
      goto LABEL_8;
    }
  }

  while (1)
  {
    Class result = objc_getClass("AFContextManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (char *)sub_100281490();
LABEL_8:
    free(v2);
  }

  qword_100470F10 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_10010A594(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("SAScreenActionList");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_100470F20 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    sub_1002814B4();
    sub_10010A5E8();
  }

void sub_10010A5E8()
{
  id v1 = 0LL;
  if (!qword_100470F28)
  {
    __int128 v2 = off_1003D7A60;
    uint64_t v3 = 0LL;
    qword_100470F28 = _sl_dlopen(&v2, &v1);
  }

  uint64_t v0 = v1;
  if (!qword_100470F28)
  {
    uint64_t v0 = (char *)abort_report_np("%s", v1);
    goto LABEL_7;
  }

  if (v1) {
LABEL_7:
  }
    free(v0);
}

void sub_10010A694(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("SAScreenActionInfo");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_100470F30 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    sub_1002814D8();
    sub_10010A6E8();
  }

void sub_10010A91C(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0LL, 500000000LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10010A9A8;
  block[3] = &unk_1003CFF08;
  id v4 = *(id *)(a1 + 32);
  dispatch_after(v2, &_dispatch_main_q, block);
}

id sub_10010A9A8(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

id sub_10010AA20(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayBoundsManager sharedInstance](&OBJC_CLASS___PBDisplayBoundsManager, "sharedInstance"));
    __int128 v5 = v4;
    if (v4)
    {
      [v4 currentDisplayBounds];
    }

    else
    {
      memset(&v30, 0, sizeof(v30));
      __int128 v28 = 0u;
      __int128 v29 = 0u;
    }

    if (sub_10010AEB4((uint64_t)a1, v3, v30.origin.x, v30.origin.y, v30.size.width, v30.size.height))
    {
      id v6 = sub_1000F6C7C();
      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        [v3 bounds];
        uint64_t v8 = NSStringFromCGRect(v36);
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
        uint64_t v10 = NSStringFromCGRect(v30);
        double v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        *(_DWORD *)__int128 buf = 138412546;
        id v33 = v9;
        __int16 v34 = 2112;
        id v35 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Configuration required transforming for input bounds: %@, to full display bounds: %@",  buf,  0x16u);
      }

      id v12 = [[FBSDisplayConfigurationBuilder alloc] initWithConfiguration:v3];
      [v3 pixelSize];
      if (width == CGSizeZero.width && height == CGSizeZero.height)
      {
        double height = v30.size.height;
        double width = v30.size.width;
      }

      objc_msgSend( v12,  "setPixelSize:nativeBounds:bounds:",  width,  height,  *(_OWORD *)&v30.origin,  *(_OWORD *)&v30.size,  *(_OWORD *)&v30.origin,  *(_OWORD *)&v30.size);
      id v27 = 0LL;
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v12 buildConfigurationWithError:&v27]);
      id v16 = v27;
      if (v15)
      {
        __int16 v17 = (os_log_s *)v3;
        id v3 = v15;
      }

      else
      {
        id v18 = sub_1000F6C7C();
        __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_1002814FC((uint64_t)v16, v17, v19, v20, v21, v22, v23, v24);
        }
      }
    }

    id v31 = v3;
    id v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v31, 1LL));
    a1 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v25));
  }

  return a1;
}

id sub_10010ACB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    if (sub_10010AF64(a1, v3))
    {
      id v4 = sub_1000F6C7C();
      __int128 v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        [v3 bounds];
        id v6 = NSStringFromCGRect(v30);
        uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
        *(_DWORD *)__int128 buf = 138412290;
        __int128 v29 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Configuration required transforming for input bounds: %@",  buf,  0xCu);
      }

      id v8 = [[FBSDisplayConfigurationBuilder alloc] initWithConfiguration:v3];
      double v9 = *(double *)(a1 + 8);
      double v10 = *(double *)(a1 + 16);
      double v11 = *(double *)(a1 + 24);
      double v12 = *(double *)(a1 + 32);
      [v3 pixelSize];
      if (v13 == CGSizeZero.width && v14 == CGSizeZero.height)
      {
        double v14 = v12;
        double v13 = v11;
      }

      objc_msgSend( v8,  "setPixelSize:nativeBounds:bounds:",  v13,  v14,  v9,  v10,  v11,  v12,  *(void *)&v9,  *(void *)&v10,  *(void *)&v11,  *(void *)&v12);
      id v27 = 0LL;
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v8 buildConfigurationWithError:&v27]);
      id v16 = v27;
      if (v15)
      {
        __int16 v17 = (os_log_s *)v3;
        id v3 = v15;
      }

      else
      {
        id v18 = sub_1000F6C7C();
        __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_1002814FC((uint64_t)v16, v17, v19, v20, v21, v22, v23, v24);
        }
      }
    }

    id v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v3));
  }

  else
  {
    id v25 = 0LL;
  }

  return v25;
}

uint64_t sub_10010AEB4(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v9 = a2;
  double v10 = v9;
  if (a1)
  {
    if ([v9 isMainRootDisplay])
    {
      [v10 bounds];
      BOOL v13 = v11 == CGSizeZero.width && v12 == CGSizeZero.height;
      if (v13 || (double v14 = v12, v15 = fmod(v11, a5), !BSFloatIsZero(v15)))
      {
        a1 = 1LL;
      }

      else
      {
        double v16 = fmod(v14, a6);
        a1 = BSFloatIsZero(v16) ^ 1;
      }
    }

    else
    {
      a1 = 0LL;
    }
  }

  return a1;
}

uint64_t sub_10010AF64(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if ([v3 isMainRootDisplay])
    {
      [v4 bounds];
      BOOL v7 = v5 == CGSizeZero.width && v6 == CGSizeZero.height;
      if (v7
        || (double v8 = v6, v9 = *(double *)(a1 + 32), v10 = fmod(v5, *(double *)(a1 + 24)), !BSFloatIsZero(v10)))
      {
        a1 = 1LL;
      }

      else
      {
        double v11 = fmod(v8, v9);
        a1 = BSFloatIsZero(v11) ^ 1;
      }
    }

    else
    {
      a1 = 0LL;
    }
  }

  return a1;
}

void sub_10010B4A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10010B4E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10010B4F4(uint64_t a1)
{
}

id sub_10010B50C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_10010B570;
  v3[3] = &unk_1003D7A80;
  __int128 v4 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  return [v1 startWithCompletionBlock:v3];
}

void sub_10010B570(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL))
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100281564((uint64_t)v4);
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "MD action succeeded",  v5,  2u);
    }

    [*(id *)(a1 + 32) setSuccess:1];
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL));
}

void sub_10010B8B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_10010B8FC(uint64_t a1, void *a2)
{
  id v3 = [a2 gestureRecognizerType];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = objc_alloc_init(&OBJC_CLASS___PBTVGuideIntent);
  if (v3 == (id)6) {
    [WeakRetained dispatchIntentToSTB:v5];
  }
  else {
    [WeakRetained dispatchIntentToCurrentApplication:v5];
  }
}

void sub_10010B96C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  dispatch_time_t v2 = objc_alloc_init(&OBJC_CLASS___PBTVProviderIntent);
  [WeakRetained dispatchIntentToSTB:v2];
}

id sub_10010BA04(void *a1)
{
  if (a1)
  {
    id v1 = sub_100082ED4();
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

void sub_10010BBB4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_10010BC54( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_10010BEE8(_Unwind_Exception *a1)
{
}

void sub_10010BEFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = v4;
  if (v4)
  {
    double v6 = (void *)objc_claimAutoreleasedReturnValue([v4 sceneManager]);
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v6 currentApplicationSceneHandle]);

    if ([v7 isEqual:*(void *)(a1 + 40)])
    {
      if (v3)
      {
        [v5 _dispatchSTBIntent:*(void *)(a1 + 48) toSTBBundleIdentifier:v3];
      }

      else
      {
        [*(id *)(a1 + 48) dispatchDidFailSetTopBoxNotConfigured];
        id v11 = sub_100082ED4();
        uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v13) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "No set top box provider found, unable to dispatch intent.",  (uint8_t *)&v13,  2u);
        }
      }
    }

    else
    {
      id v8 = sub_100082ED4();
      double v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v10 = *(void *)(a1 + 40);
        int v13 = 138412546;
        uint64_t v14 = v10;
        __int16 v15 = 2112;
        uint64_t v16 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Focused scene has changed {previously=%@, now=%@}",  (uint8_t *)&v13,  0x16u);
      }
    }
  }
}

void sub_10010C734(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  double v6 = *(os_log_s **)(a1 + 32);
  if (a2)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 40);
      int v8 = 138412290;
      uint64_t v9 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Successfully activated application with user activity {bundle_id=%@}",  (uint8_t *)&v8,  0xCu);
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    sub_10028183C((uint64_t)v5, a1, v6);
  }
}

id sub_10010CEAC(void *a1)
{
  id v1 = a1;
  dispatch_time_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 domain]);
  if ([v2 isEqualToString:UPProfileStoreErrorDomain])
  {
    uint64_t v3 = PBSUserProfileServiceErrorForCodeAndUnderlyingError(100LL, v1);
    id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  }

  else
  {
    id v4 = v1;
  }

  id v5 = v4;

  return v5;
}

id sub_10010CF20(void *a1)
{
  id v1 = a1;
  if (qword_100470F40 != -1) {
    dispatch_once(&qword_100470F40, &stru_1003D7B28);
  }
  else {
    id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@-%@",  qword_100470F38,  v1));
  }
  uint64_t v3 = v2;

  return v3;
}

void sub_10010CFCC(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v1 bundleIdentifier]);
  uint64_t v3 = (void *)qword_100470F38;
  qword_100470F38 = v2;
}

id sub_10010D014(void *a1)
{
  id v1 = sub_10010CF20(a1);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[FBSSceneIdentity identityForIdentifier:]( &OBJC_CLASS___FBSSceneIdentity,  "identityForIdentifier:",  v2));

  return v3;
}

id sub_10010D2A4(uint64_t a1, int a2)
{
  if (a2)
  {
    [*(id *)(a1 + 32) beginStopCRD];
    [*(id *)(a1 + 32) endStopCRD];
  }

  else
  {
    [*(id *)(a1 + 40) failWithReason:@"User declined"];
  }

  return [*(id *)(a1 + 40) satisfyMilestone:@"MilestoneCRDRestrictionCheckComplete"];
}

int64_t sub_10010D3CC(id a1, PBPresentationElement *a2, PBPresentationElement *a3)
{
  id v4 = a3;
  id v5 = -[PBPresentationElement layoutLevel](a2, "layoutLevel");
  id v6 = -[PBPresentationElement layoutLevel](v4, "layoutLevel");

  else {
    return 1LL;
  }
}

void sub_10010D584(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) view]);
  [v5 bounds];
  objc_msgSend(v4, "setFrame:");

  v3[2](v3);
}

void sub_10010D994(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:PBSSuggestedUserProfileManagerServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

id sub_10010D9F8()
{
  if (qword_100470F50 != -1) {
    dispatch_once(&qword_100470F50, &stru_1003D7B88);
  }
  return (id)qword_100470F48;
}

void sub_10010DCB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSSuggestedUserProfileManagerConfigureConnection();
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
  [v3 setTargetQueue:*(void *)(*(void *)(a1 + 40) + 16)];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_10010DD74;
  void v4[3] = &unk_1003D0EF0;
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  id v7 = *(id *)(a1 + 32);
  [v3 setInvalidationHandler:v4];
}

id sub_10010DD74(uint64_t a1)
{
  id v2 = sub_10010D9F8();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    int v7 = 138543618;
    uint64_t v8 = v4;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated {client=%{public}@, connection=%@}",  (uint8_t *)&v7,  0x16u);
  }

  return [*(id *)(a1 + 48) invalidate];
}

void sub_10010DE6C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.suggestedUserProfiles", "LoretoServiceListener");
  id v2 = (void *)qword_100470F48;
  qword_100470F48 = (uint64_t)v1;
}

unint64_t sub_10010E130(id a1, PBSMigrationContext *a2, id *a3)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults", a3));
  if ([v3 BOOLForKey:@"HumeFamilyCarryConfigurationEnabled"])
  {
    [v3 setBool:0 forKey:@"HumeFamilyCarryConfigurationEnabled"];
    [v3 setBool:1 forKey:@"EnforceProvisioningOnSystemApps"];
    CFPreferencesSetAppValue(@"InitiateSessionURL", 0LL, @"com.apple.itunesstored");
  }

  else if (![v3 BOOLForKey:@"HumeDeveloperConfigurationEnabled"])
  {
    unint64_t v4 = 2LL;
    goto LABEL_8;
  }

  [v3 setBool:0 forKey:@"HumeDeveloperConfigurationEnabled"];
  [v3 setBool:1 forKey:@"EnforceProvisioningOnSystemApps"];
  CFPreferencesSetAppValue(@"InitiateSessionURL", 0LL, @"com.apple.itunesstored");
LABEL_6:
  unint64_t v4 = 3LL;
LABEL_8:

  return v4;
}

unint64_t sub_10010E22C(id a1, PBSMigrationContext *a2, id *a3)
{
  CFPropertyListRef v3 = CFPreferencesCopyAppValue(@"AutoAppUpdatesEnabled", kCFPreferencesCurrentApplication);
  CFPropertyListRef v4 = CFPreferencesCopyAppValue(@"AutoUpdatesEnabled", @"com.apple.itunesstored");
  uint64_t v5 = v4;
  if (v3) {
    BOOL v6 = v4 == 0LL;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    CFPreferencesSetAppValue(@"AutoAppUpdatesEnabled", 0LL, kCFPreferencesCurrentApplication);
    CFPreferencesSetAppValue(@"AutoUpdatesEnabled", v3, @"com.apple.itunesstored");
    unint64_t v7 = 3LL;
LABEL_10:
    CFRelease(v3);
    if (!v5) {
      return v7;
    }
    goto LABEL_7;
  }

  unint64_t v7 = 2LL;
  if (v3) {
    goto LABEL_10;
  }
  if (v4) {
LABEL_7:
  }
    CFRelease(v5);
  return v7;
}

unint64_t sub_10010E2E8(id a1, PBSMigrationContext *a2, id *a3)
{
  CFPropertyListRef v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSRestrictionsSettings sharedInstance](&OBJC_CLASS___PBSRestrictionsSettings, "sharedInstance", a3));
  unsigned __int8 v4 = [v3 restrictionsEnabled];

  if ((v4 & 1) != 0) {
    return 2LL;
  }
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue(+[PBSRestrictionsSettings sharedInstance](&OBJC_CLASS___PBSRestrictionsSettings, "sharedInstance"));
  [v6 resetRestrictionSettings];

  return 3LL;
}

unint64_t sub_10010E350(id a1, PBSMigrationContext *a2, id *a3)
{
  CFPropertyListRef v3 = -[NSUserDefaults initWithSuiteName:]( objc_alloc(&OBJC_CLASS___NSUserDefaults),  "initWithSuiteName:",  @"com.apple.tvhomesharingd");
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue(-[NSUserDefaults objectForKey:](v3, "objectForKey:", @"mediaServerDiscoveryMode"));
  if (v4)
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[NSUserDefaults stringForKey:](v3, "stringForKey:", @"accountName"));
    BOOL v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSUserDefaults stringForKey:](v3, "stringForKey:", @"groupID"));
    unint64_t v7 = -[NSUserDefaults initWithSuiteName:]( objc_alloc(&OBJC_CLASS___NSUserDefaults),  "initWithSuiteName:",  @"com.apple.TVHomeSharingKit");
    -[NSUserDefaults setObject:forKey:](v7, "setObject:forKey:", v4, @"MediaServerDiscoveryMode");
    -[NSUserDefaults setObject:forKey:](v7, "setObject:forKey:", v5, @"AccountName");
    -[NSUserDefaults setObject:forKey:](v7, "setObject:forKey:", v6, @"HomeSharingGroupIdentifier");
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    [v8 removePersistentDomainForName:@"com.apple.tvhomesharingd"];
  }

  __int16 v9 = -[NSUserDefaults initWithSuiteName:]( objc_alloc(&OBJC_CLASS___NSUserDefaults),  "initWithSuiteName:",  @"com.apple.TVHomeSharing");
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[NSUserDefaults objectForKey:](v9, "objectForKey:", @"Version"));

  if (v10)
  {
    -[NSUserDefaults removeObjectForKey:](v9, "removeObjectForKey:", @"Version");
    -[NSUserDefaults removeObjectForKey:](v9, "removeObjectForKey:", @"HomeVideos");
    -[NSUserDefaults removeObjectForKey:](v9, "removeObjectForKey:", @"iTunesU");
    -[NSUserDefaults removeObjectForKey:](v9, "removeObjectForKey:", @"Movies");
    -[NSUserDefaults removeObjectForKey:](v9, "removeObjectForKey:", @"Podcasts");
    -[NSUserDefaults removeObjectForKey:](v9, "removeObjectForKey:", @"ShowPlaylistsInAllMediaCategories");
    -[NSUserDefaults removeObjectForKey:](v9, "removeObjectForKey:", @"TVShows");
  }

  else if (!v4)
  {
    unint64_t v11 = 2LL;
    goto LABEL_7;
  }

  unint64_t v11 = 3LL;
LABEL_7:

  return v11;
}

unint64_t sub_10010E528(id a1, PBSMigrationContext *a2, id *a3)
{
  id v31 = a2;
  CFPropertyListRef v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 URLsForDirectory:13 inDomains:1]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 firstObject]);

  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue([v5 URLByAppendingPathComponent:@"com.apple.TVIdleScreen" isDirectory:1]);
  char v37 = 0;
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v6 path]);
  unsigned int v9 = [v7 fileExistsAtPath:v8 isDirectory:&v37];
  if (v37) {
    unsigned int v10 = v9;
  }
  else {
    unsigned int v10 = 0;
  }

  if (v10)
  {
    unint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v5 URLByAppendingPathComponent:@"com.apple.idleassetsd" isDirectory:1]);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 URLByAppendingPathComponent:@"Customer" isDirectory:1]);

    if (+[TVSDevice supportsUHDAndHDR](&OBJC_CLASS___TVSDevice, "supportsUHDAndHDR"))
    {
      v40[0] = v6;
      CGRect v30 = (void *)objc_claimAutoreleasedReturnValue([v12 URLByAppendingPathComponent:@"2KSDR"]);
      v41[0] = v30;
      __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:@"PurgeableVideos"]);
      v40[1] = v29;
      __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v12 URLByAppendingPathComponent:@"2KSDR"]);
      v41[1] = v28;
      id v27 = (void *)objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:@"1080HDR"]);
      v40[2] = v27;
      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v12 URLByAppendingPathComponent:@"2KHDR"]);
      v41[2] = v26;
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:@"1080HDR/PurgeableVideos"]);
      void v40[3] = v25;
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v12 URLByAppendingPathComponent:@"2KHDR"]);
      v41[3] = v24;
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:@"4KSDR"]);
      void v40[4] = v23;
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v12 URLByAppendingPathComponent:@"4KSDR"]);
      void v41[4] = v22;
      int v13 = (void *)objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:@"4KSDR/PurgeableVideos"]);
      v40[5] = v13;
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v12 URLByAppendingPathComponent:@"4KSDR"]);
      v41[5] = v14;
      __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:@"4KHDR"]);
      v40[6] = v15;
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v12 URLByAppendingPathComponent:@"4KHDR"]);
      v41[6] = v16;
      __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:@"4KHDR/PurgeableVideos"]);
      v40[7] = v17;
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v12 URLByAppendingPathComponent:@"4KHDR"]);
      v41[7] = v18;
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v41,  v40,  8LL));
    }

    else
    {
      v38[0] = v6;
      CGRect v30 = (void *)objc_claimAutoreleasedReturnValue([v12 URLByAppendingPathComponent:@"2KAVC"]);
      v39[0] = v30;
      __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:@"PurgeableVideos"]);
      v38[1] = v29;
      __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v12 URLByAppendingPathComponent:@"2KAVC"]);
      v39[1] = v28;
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v39,  v38,  2LL));
    }

    uint64_t v33 = 0LL;
    __int16 v34 = &v33;
    uint64_t v35 = 0x2020000000LL;
    char v36 = 1;
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472LL;
    id v32[2] = sub_10010EA58;
    v32[3] = &unk_1003D7C70;
    void v32[4] = &v33;
    [v19 enumerateKeysAndObjectsUsingBlock:v32];
    if (*((_BYTE *)v34 + 24)) {
      unint64_t v20 = 3LL;
    }
    else {
      unint64_t v20 = 1LL;
    }
    _Block_object_dispose(&v33, 8);
  }

  else
  {
    unint64_t v20 = 2LL;
  }

  return v20;
}

void sub_10010EA38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
}

void sub_10010EA58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v50 = 0LL;
  [v7 createDirectoryAtURL:v6 withIntermediateDirectories:1 attributes:0 error:&v50];
  id v8 = v50;

  if (v8)
  {
    id v9 = sub_100083564();
    unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100281C2C((uint64_t)v8, v10, v11, v12, v13, v14, v15, v16);
    }

    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 0;
  }

  else
  {
    __int16 v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSPredicate predicateWithFormat:]( &OBJC_CLASS___NSPredicate,  "predicateWithFormat:",  @"pathExtension='mov'"));
    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    id v49 = 0LL;
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( [v18 contentsOfDirectoryAtURL:v5 includingPropertiesForKeys:&__NSArray0__struct options:4 error:&v49]);
    id v20 = v49;
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v19 filteredArrayUsingPredicate:v17]);

    if (v20)
    {
      id v22 = sub_100083564();
      uint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100281BC4((uint64_t)v20, v23, v24, v25, v26, v27, v28, v29);
      }

      *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 0;
    }

    else
    {
      uint64_t v42 = v17;
      id v43 = v5;
      __int128 v47 = 0u;
      __int128 v48 = 0u;
      __int128 v45 = 0u;
      __int128 v46 = 0u;
      id v30 = v21;
      id v31 = [v30 countByEnumeratingWithState:&v45 objects:v53 count:16];
      if (v31)
      {
        id v32 = v31;
        uint64_t v33 = *(void *)v46;
        do
        {
          for (i = 0LL; i != v32; i = (char *)i + 1)
          {
            if (*(void *)v46 != v33) {
              objc_enumerationMutation(v30);
            }
            uint64_t v35 = *(void **)(*((void *)&v45 + 1) + 8LL * (void)i);
            char v36 = (void *)objc_claimAutoreleasedReturnValue([v35 lastPathComponent]);
            char v37 = (void *)objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:v36 isDirectory:0]);

            uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
            id v44 = 0LL;
            [v38 moveItemAtURL:v35 toURL:v37 error:&v44];
            id v39 = v44;

            if (v39)
            {
              id v40 = sub_100083564();
              uint64_t v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v40);
              if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)__int128 buf = 138543362;
                id v52 = v39;
                _os_log_error_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "TVIdleScreen Assets Migrator - Error moving asset: %{public}@",  buf,  0xCu);
              }
            }
          }

          id v32 = [v30 countByEnumeratingWithState:&v45 objects:v53 count:16];
        }

        while (v32);
      }

      id v8 = 0LL;
      id v5 = v43;
      id v20 = 0LL;
      __int16 v17 = v42;
    }
  }
}

unint64_t sub_10010ED94(id a1, PBSMigrationContext *a2, id *a3)
{
  CFPropertyListRef v3 = a2;
  if ((-[PBSMigrationContext isFreshInstall](v3, "isFreshInstall") & 1) != 0
    || !-[PBSMigrationContext isBuildUpdate](v3, "isBuildUpdate"))
  {
    goto LABEL_8;
  }

  if (-[PBSMigrationContext compareFromOSVersionWithOSVersion:]( v3,  "compareFromOSVersionWithOSVersion:",  @"15.4") == (id)-1LL)
  {
LABEL_7:
    id v6 = (id)objc_claimAutoreleasedReturnValue(+[PBSSiriSettings sharedInstance](&OBJC_CLASS___PBSSiriSettings, "sharedInstance"));
    [v6 setDataSharingOptInStatus:0 propagateToHomeAccessories:0 source:0 reason:@"Resetting status during software update settings migration"];
    unint64_t v13 = 3LL;
LABEL_11:

    goto LABEL_12;
  }

  id v4 = objc_alloc(&OBJC_CLASS___BSBuildVersion);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PBSMigrationContext fromBuild](v3, "fromBuild"));
  id v6 = [v4 initWithString:v5];

  id v7 = [[BSBuildVersion alloc] initWithString:@"19L5409"];
  id v8 = [v6 majorBuildNumber];
  if (v8 != [v7 majorBuildNumber])
  {
LABEL_10:

    unint64_t v13 = 2LL;
    goto LABEL_11;
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 majorBuildLetterString]);
  unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([v7 majorBuildLetterString]);
  if (![v9 isEqual:v10])
  {

    goto LABEL_10;
  }

  id v11 = [v6 minorBuildNumber];
  id v12 = [v7 minorBuildNumber];

  if (v11 == v12) {
    goto LABEL_7;
  }
LABEL_8:
  unint64_t v13 = 2LL;
LABEL_12:

  return v13;
}

unint64_t sub_10010EF18(id a1, PBSMigrationContext *a2, id *a3)
{
  CFPropertyListRef v3 = a2;
  if ((-[PBSMigrationContext isFreshInstall](v3, "isFreshInstall") & 1) != 0
    || !-[PBSMigrationContext isBuildUpdate](v3, "isBuildUpdate")
    || !_os_feature_enabled_impl("UIKit", "tv_multilingual_keyboards")
    || -[PBSMigrationContext compareFromOSVersionWithOSVersion:](v3, "compareFromOSVersionWithOSVersion:", @"16") != (id)-1LL)
  {
    unint64_t v4 = 2LL;
    goto LABEL_6;
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSPreferredLanguagesManager sharedInstance]( &OBJC_CLASS___TVCSPreferredLanguagesManager,  "sharedInstance"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 preferredLanguages]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 firstObject]);

  if ([v8 containsString:@"ja"])
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSPreferredLanguagesManager sharedInstance]( &OBJC_CLASS___TVCSPreferredLanguagesManager,  "sharedInstance"));
    uint64_t v19 = v8;
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v19, 1LL));
    id v11 = &off_1003FE758;
  }

  else
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSPreferredLanguagesManager sharedInstance]( &OBJC_CLASS___TVCSPreferredLanguagesManager,  "sharedInstance"));
    id v18 = v8;
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v18, 1LL));
    id v11 = &off_1003FE770;
  }

  [v9 setPreferredLanguages:v10 withVariants:v11];

LABEL_12:
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSPreferredLanguagesManager sharedInstance]( &OBJC_CLASS___TVCSPreferredLanguagesManager,  "sharedInstance"));
  unint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 preferredInputModes]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKey:v8]);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 firstObject]);

  if (v15
    && (UIKeyboardLayoutDefaultTypeForInputModeIsASCIICapable(v15) & 1) == 0
    && ([v8 isEqualToString:@"zh-Hant-HK"] & 1) == 0)
  {
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSPreferredLanguagesManager sharedInstance]( &OBJC_CLASS___TVCSPreferredLanguagesManager,  "sharedInstance"));
    [v16 addPreferredLanguage:@"en" withVariants:0];
  }

  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSPreferredLanguagesManager sharedInstance]( &OBJC_CLASS___TVCSPreferredLanguagesManager,  "sharedInstance"));
  [v17 applyPreferredLanguagesChanges];

  unint64_t v4 = 3LL;
LABEL_6:

  return v4;
}

id sub_10010F16C(unint64_t a1)
{
  if (a1 >= 4) {
    os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PBPresentationElementState(%lu)",  a1));
  }
  else {
    os_log_t v1 = *(&off_1003D7CD0 + a1);
  }
  return v1;
}

void sub_10010F3CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  unint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) serviceIdentifier]);
  [v3 setService:v4];

  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_10010F6A8(uint64_t a1, void *a2)
{
  id v3 = *(void **)(*(void *)(a1 + 32) + 16LL);
  id v4 = a2;
  [v3 configureConnection:v4];
  [v4 setInterfaceTarget:*(void *)(a1 + 40)];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_10010F768;
  _OWORD v5[3] = &unk_1003D0EF0;
  void v5[4] = *(void *)(a1 + 32);
  id v6 = *(id *)(a1 + 48);
  id v7 = *(id *)(a1 + 40);
  [v4 setInvalidationHandler:v5];
}

void sub_10010F768(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) logGroup]);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    int v7 = 138543874;
    uint64_t v8 = v5;
    __int16 v9 = 2048;
    uint64_t v10 = v6;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated. {client=%{public}@, service_ptr=%p, connection=%@}",  (uint8_t *)&v7,  0x20u);
  }

  [*(id *)(a1 + 48) invalidate];
}

BOOL sub_10010F954(id a1, NSString *a2)
{
  return 1;
}

__CFString *sub_10010F95C(unint64_t a1)
{
  if (a1 >= 4) {
    os_log_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PBSceneShroudStyle(%ld)",  a1));
  }
  else {
    os_log_t v1 = off_1003D7E38[a1];
  }
  return v1;
}

void sub_10010FC18(_Unwind_Exception *a1)
{
}

void sub_10010FC4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_mainQueue_handleStateChange");
}

void sub_10010FC78(uint64_t a1)
{
}

void sub_10010FC94(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_mainQueue_updateShroudGestureWithState:", v3);
}

void sub_10010FD40(id a1, PBSceneShroudAgent *a2, BSInvalidatable *a3, id a4, BOOL *a5)
{
}

id sub_10010FF28(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) containsObject:a2];
}

void sub_10011009C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1001102BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1001105C4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  uint64_t v7 = *(void *)(a1 + 40);
  id v8 = a2;
  __int16 v9 = (void *)objc_claimAutoreleasedReturnValue([v6 bundleID]);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, void *))(v7 + 16))(v7, v9);
  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  objc_msgSend(*(id *)(a1 + 32), "_mainQueue_updateAgent:withUserInfo:usingContext:animated:", v8, v6, v11, 1);
}

void sub_100110924( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_100110A18( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100110A30(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100110A40(uint64_t a1)
{
}

id sub_100110A58(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
  uint64_t v5 = v4;
  if (v3 && !v4)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    void v8[2] = sub_100110B0C;
    v8[3] = &unk_1003D7DF0;
    id v6 = *(void **)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 40);
    id v9 = v3;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "bs_firstObjectPassingTest:", v8));
  }

  return v5;
}

uint64_t sub_100110B0C(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v5 = objc_claimAutoreleasedReturnValue([v4 predicate]);
  if ((Block_layout *)v5 == &stru_1003D7D10) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
  }
  uint64_t v6 = (*(uint64_t (**)(uint64_t, void))(v5 + 16))(v5, *(void *)(a1 + 32));

  return v6;
}

id sub_100110E74(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

id sub_1001113D0(uint64_t a1)
{
  return [*(id *)(a1 + 32) layout];
}

id sub_1001113E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) animated];
}

id sub_100111400(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) animationSettings]);
}

id sub_100111530(uint64_t a1)
{
  return  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 32) withName:@"animationSettings"];
}

void sub_1001115D8(uint64_t a1)
{
  id v2 = _os_activity_create( (void *)&_mh_execute_header,  "workspace/transition/completion",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v2, &state);

  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v7 objects:v12 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0LL;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v3);
        }
        sub_100111728(*(void *)(*((void *)&v7 + 1) + 8LL * (void)v6));
        uint64_t v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v3 countByEnumeratingWithState:&v7 objects:v12 count:16];
    }

    while (v4);
  }

  os_activity_scope_leave(&state);
}

void sub_100111704( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state)
{
}

uint64_t sub_100111728(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

id sub_100112790(id a1, id a2)
{
  return (id)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  a2));
}

id sub_100112810(id a1, id a2)
{
  return (id)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  a2));
}

CFStringRef sub_10011288C(unint64_t a1)
{
  if (a1 > 2) {
    return @"Unknown";
  }
  else {
    return *(&off_1003D7F48 + a1);
  }
}

int64_t sub_1001128B0(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___UISystemInputViewController);
  id v2 = [v1 resolvedKeyboardStyle];

  return (int64_t)v2;
}

void sub_100112B78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100112BA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleTouchPadAvailabilityUpdate];
}

id sub_100112CEC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handlePreferredKeyboardUpdate];
}

id sub_1001135B8(id a1, id a2)
{
  return (id)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  a2));
}

id sub_100113BFC(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v2 containsObject:v3];

  return v4;
}

id sub_100113C40(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v2 containsObject:v3];

  return v4;
}

id sub_100113E1C(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

uint64_t sub_100114384(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
  if ((_DWORD)v4)
  {
    uint64_t v5 = *(void **)(a1 + 32);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    [v5 addObject:v6];
  }

  return v4;
}

uint64_t sub_1001143F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
  if ((_DWORD)v4)
  {
    uint64_t v5 = *(void **)(a1 + 32);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    [v5 addObject:v6];
  }

  return v4;
}

uint64_t sub_1001144D0(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = 0x7FFFFFFFFFFFFFFFLL;
  if ([v5 containsObject:v7])
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    v11[2] = sub_1001158D4;
    void v11[3] = &unk_1003D7F88;
    id v9 = v7;
    id v12 = v9;
    uint64_t v8 = (uint64_t)[v6 indexOfObjectPassingTest:v11];
    if (v8 != 0x7FFFFFFFFFFFFFFFLL) {
      [v6 removeObjectAtIndex:v8];
    }
    [v5 removeObject:v9];
  }

  return v8;
}

void sub_100114898(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  if (([*(id *)(*(void *)(a1 + 32) + 24) containsObject:v4] & 1) == 0)
  {
    id v5 = *(void **)(a1 + 40);
    [v3 repositionedPaddedFrame];
    objc_msgSend(v5, "addRect:forKey:", v4);
  }
}

void sub_100114904(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
  if (([*(id *)(*(void *)(a1 + 32) + 24) containsObject:v6] & 1) == 0)
  {
    [v5 paddedFrame];
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;
    double v14 = v13;
    [v5 stickiness];
    __int16 v17 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(a1 + 40),  "layoutSuggestionForFittingRect:withStickiness:",  v8,  v10,  v12,  v14,  v15,  v16));
    if (!v17)
    {
      [v5 unpaddedFrame];
      __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "layoutSuggestionForFittingRect:withStickiness:"));
    }

    [v5 offset];
    double v19 = v18;
    double v21 = v20;
    [v17 offset];
    double v23 = v22;
    double v25 = v24;
    if (!BSFloatEqualToFloat(v19, v22) || (BSFloatEqualToFloat(v21, v25) & 1) == 0)
    {
      objc_msgSend(v5, "setOffset:", v23, v25);
      [*(id *)(a1 + 48) addIndex:a3];
    }

    uint64_t v26 = *(void **)(a1 + 40);
    [v5 repositionedPaddedFrame];
    double v28 = v27;
    double v30 = v29;
    double v32 = v31;
    double v34 = v33;
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
    objc_msgSend(v26, "addRect:forKey:", v35, v28, v30, v32, v34);
  }
}

void sub_100114D60( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_100114D84(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  if ([*(id *)(a1 + 32) containsObject:v4])
  {
    [*(id *)(a1 + 32) removeObject:v4];
    id v5 = *(void **)(*(void *)(a1 + 40) + 48LL);
    [v3 paddedFrame];
    objc_msgSend(v5, "addRect:forKey:", v4);
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
  }
}

id sub_100114E0C(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [*(id *)(a1 + 32) containsObject:v3];
  if ((_DWORD)v4) {
    [*(id *)(a1 + 32) removeObject:v3];
  }

  return v4;
}

uint64_t sub_100115118(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  unsigned int v5 = [*(id *)(a1 + 32) containsObject:v4];
  int v6 = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16LL))();
  if ((v6 & 1) == 0)
  {
    [*(id *)(a1 + 40) addObject:v4];
  }

  return v5 ^ v6 ^ 1;
}

void sub_1001151BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  unsigned int v5 = [*(id *)(a1 + 32) containsObject:v4];
  unsigned int v6 = [*(id *)(a1 + 40) containsObject:v4];
  if (v5 && (v6 & 1) == 0)
  {
    double v7 = *(void **)(*(void *)(a1 + 48) + 48LL);
    [v3 paddedFrame];
    objc_msgSend(v7, "addRect:forKey:", v4);
LABEL_6:

    return;
  }

  if (((v5 | v6 ^ 1) & 1) == 0)
  {
    [*(id *)(*(void *)(a1 + 48) + 48) removeRectForKey:v4];
    goto LABEL_6;
  }

  double v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"IndexSet was incorrect"));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_100282A90(a1);
  }
  _bs_set_crash_log_message([v8 UTF8String]);
  __break(0);
}

void sub_1001153F0(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithUpdatedElements:0];
  id v2 = (void *)qword_100470F58;
  qword_100470F58 = (uint64_t)v1;
}

void sub_100115568(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  unsigned int v6 = *(void **)(a1 + 32);
  id v7 = [v5 copy];
  [v6 addObject:v7];

  double v8 = *(void **)(a1 + 40);
  double v9 = (void *)objc_claimAutoreleasedReturnValue([v5 controller]);
  double v10 = (NSMutableIndexSet *)objc_claimAutoreleasedReturnValue([v8 objectForKey:v9]);

  if (v10)
  {
    -[NSMutableIndexSet addIndex:](v10, "addIndex:", a3);
  }

  else
  {
    double v10 = -[NSMutableIndexSet initWithIndex:](objc_alloc(&OBJC_CLASS___NSMutableIndexSet), "initWithIndex:", a3);
    double v11 = *(void **)(a1 + 40);
    double v12 = (void *)objc_claimAutoreleasedReturnValue([v5 controller]);
    [v11 setObject:v10 forKey:v12];
  }
}

id sub_100115850(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

id sub_1001158D4(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

id sub_100115E04()
{
  if (qword_100470F70 != -1) {
    dispatch_once(&qword_100470F70, &stru_1003D80E8);
  }
  return (id)qword_100470F68;
}

id sub_100115E48(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) profileForIdentity:a2]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 systemAppUserIdentifier]);

  return v3;
}

BOOL sub_1001164F8(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) profileForIdentity:a2]);
  id v3 = v2;
  if (v2) {
    BOOL v4 = objc_msgSend(v2, "pb_recommendationGroupConsent") == (id)1;
  }
  else {
    BOOL v4 = 0LL;
  }

  return v4;
}

void sub_1001165D4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "ProfileRecommendationGroupsController");
  id v2 = (void *)qword_100470F68;
  qword_100470F68 = (uint64_t)v1;
}

void sub_100116718(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  if ((objc_opt_isKindOfClass(v6, v7) & 1) != 0)
  {
    uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSString);
    if ((objc_opt_isKindOfClass(v5, v8) & 1) != 0)
    {
      if (*(void *)(a1 + 40))
      {
        id v9 = [v6 mutableCopy];
        (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
      }
    }
  }
}

void sub_100116B34(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a3 objectForKeyedSubscript:@"TVSeenPluggedIn"]);
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber);
}

void sub_100117540(id a1, NSString *a2, NSMutableDictionary *a3, BOOL *a4)
{
  BOOL v4 = a3;
  -[NSMutableDictionary setObject:forKeyedSubscript:]( v4,  "setObject:forKeyedSubscript:",  &__kCFBooleanFalse,  @"TVSeenPluggedIn");
  -[NSMutableDictionary setObject:forKeyedSubscript:]( v4,  "setObject:forKeyedSubscript:",  &__kCFBooleanFalse,  @"TVCompletedDisplayAssistant");
  -[NSMutableDictionary setObject:forKeyedSubscript:]( v4,  "setObject:forKeyedSubscript:",  0LL,  @"TVSpecialVirtualMode");
}

void sub_100119098( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_1001190C4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001190D4(uint64_t a1)
{
}

id sub_1001190EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendNewCodeShowingDialogs:0 error:0];
}

uint64_t sub_10011910C(uint64_t a1, void *a2)
{
  id v3 = [a2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_1001194B8(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_10011989C(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100119F58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v3 = objc_alloc_init(&OBJC_CLASS___PBTextEntryViewController);
  -[PBTextEntryViewController setDefaultTitle:](v3, "setDefaultTitle:", *(void *)(a1 + 32));
  -[PBTextEntryViewController setDefaultMessage:](v3, "setDefaultMessage:", *(void *)(a1 + 40));
  -[PBTextEntryViewController addTextFieldWithInitialText:placeholder:keyboardType:]( v3,  "addTextFieldWithInitialText:placeholder:keyboardType:",  0LL,  0LL,  4LL);
  WeakRetained[12] = -[PBTextEntryViewController addButtonWithTitle:](v3, "addButtonWithTitle:", *(void *)(a1 + 48));
  WeakRetained[13] = -[PBTextEntryViewController addButtonWithTitle:](v3, "addButtonWithTitle:", *(void *)(a1 + 56));
  -[PBTextEntryViewController setDefaultButtonIndex:](v3, "setDefaultButtonIndex:", WeakRetained[12]);
  -[PBTextEntryViewController setDelegate:](v3, "setDelegate:", WeakRetained);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewController:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewController:",  v3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  [v5 presentDialogWithContext:v4 options:0 completion:0];
}

void sub_10011A118(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  *(void *)(a1 + 32),  *(void *)(a1 + 40),  1LL));
  id v3 = sub_1001C307C(@"ButtonOK", 0LL);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10011A238;
  v8[3] = &unk_1003D8228;
  id v9 = *(id *)(a1 + 48);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v4,  1LL,  v8));
  [v2 addAction:v5];

  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewController:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewController:",  v2));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  [v7 presentDialogWithContext:v6 options:0 completion:0];
}

uint64_t sub_10011A238(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_10011A560(id a1)
{
  return a1;
}

uint64_t sub_10011A56C(uint64_t a1)
{
  return objc_opt_class(a1);
}

void sub_10011A950(_Unwind_Exception *a1)
{
}

id sub_10011A974(uint64_t a1, void *a2)
{
  return objc_msgSend( *(id *)(*(void *)(a1 + 32) + 24),  "drawInRect:",  *(double *)(a1 + 40),  *(double *)(a1 + 48),  *(double *)(a1 + 56),  *(double *)(a1 + 64));
}

BOOL sub_10011AC5C(id a1, FBApplicationProcess *a2)
{
  return -[FBApplicationProcess isCurrentProcess](a2, "isCurrentProcess");
}

void sub_10011B55C(id a1, BSSimpleAssertion *a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  [v3 removeSceneDeferralTargetAssertion:v2];
}

void sub_10011B900(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
  (*(void (**)(uint64_t, void *, id))(v4 + 16))(v4, v6, v5);
}

void sub_10011BBE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) isCancelled])
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"PBUnavailableBundleListLoaderErrorDomain",  3LL,  0LL));
    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }

  else
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectAtIndexedSubscript:0]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue( [v4 objectForKeyedSubscript:@"PBAppProgrammingInfoKeyProvisionedAppIdentifiers"]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:@"PBAppProgrammingInfoKeyDisabledAppIdentifiers"]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 objectAtIndexedSubscript:1]);
    uint64_t v8 = -[PBUnavailableBundleList initWithProvisionedAdamIDs:disabledAdamIDs:mappingInfo:]( objc_alloc(&OBJC_CLASS___PBUnavailableBundleList),  "initWithProvisionedAdamIDs:disabledAdamIDs:mappingInfo:",  v5,  v6,  v7);
    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }
}

void sub_10011BD0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000825EC();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
    sub_100283350(v3);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10011BE3C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_10011BE58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v6)
  {
    id v8 = sub_1000825EC();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1002833D0(v6);
    }

    double v10 = (void *)objc_claimAutoreleasedReturnValue(+[AMSPromise promiseWithError:](&OBJC_CLASS___AMSPromise, "promiseWithError:", v6));
  }

  else
  {
    double v11 = (void *)objc_claimAutoreleasedReturnValue([v5 object]);
    id v18 = 0LL;
    double v12 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _santizeMappingInfo:v11 error:&v18]);
    id v13 = v18;
    double v14 = &__NSDictionary0__struct;
    if (v12) {
      double v14 = v12;
    }
    id v15 = v14;

    if (v13) {
      uint64_t v16 = objc_claimAutoreleasedReturnValue(+[AMSPromise promiseWithError:](&OBJC_CLASS___AMSPromise, "promiseWithError:", v13));
    }
    else {
      uint64_t v16 = objc_claimAutoreleasedReturnValue(+[AMSPromise promiseWithResult:](&OBJC_CLASS___AMSPromise, "promiseWithResult:", v15));
    }
    double v10 = (void *)v16;
  }

  return v10;
}

void sub_10011C290( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_10011C2AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v6)
  {
    id v8 = sub_1000825EC();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100283450(v6);
    }

    double v10 = (void *)objc_claimAutoreleasedReturnValue(+[AMSPromise promiseWithError:](&OBJC_CLASS___AMSPromise, "promiseWithError:", v6));
  }

  else
  {
    double v11 = (void *)objc_claimAutoreleasedReturnValue([v5 object]);
    id v18 = 0LL;
    double v12 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _santizeProgrammingInfo:v11 error:&v18]);
    id v13 = v18;
    double v14 = &__NSDictionary0__struct;
    if (v12) {
      double v14 = v12;
    }
    id v15 = v14;

    if (v13) {
      uint64_t v16 = objc_claimAutoreleasedReturnValue(+[AMSPromise promiseWithError:](&OBJC_CLASS___AMSPromise, "promiseWithError:", v13));
    }
    else {
      uint64_t v16 = objc_claimAutoreleasedReturnValue(+[AMSPromise promiseWithResult:](&OBJC_CLASS___AMSPromise, "promiseWithResult:", v15));
    }
    double v10 = (void *)v16;
  }

  return v10;
}

AMSPromise *__cdecl sub_10011C63C(id a1, AMSURLRequest *a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[AMSURLSession defaultSession](&OBJC_CLASS___AMSURLSession, "defaultSession"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 dataTaskPromiseWithRequest:v2]);

  return (AMSPromise *)v4;
}

void sub_10011C8A8(_Unwind_Exception *a1)
{
}

void sub_10011C930( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

id sub_10011C944()
{
  return [v0 code];
}

id sub_10011CF54()
{
  if (qword_100470F88 != -1) {
    dispatch_once(&qword_100470F88, &stru_1003D8388);
  }
  return (id)qword_100470F80;
}

void sub_10011D29C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.suggestedUserProfiles", "Client");
  id v2 = (void *)qword_100470F80;
  qword_100470F80 = (uint64_t)v1;
}

void sub_10011D438(uint64_t a1)
{
  os_log_t v1 = *(void **)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) excludeVariants]);
  id v3 = [v1 appendObject:v2 withName:@"excludeVariants" skipIfNil:1];
}

id sub_10011D5B0(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_10011D648()
{
  uint64_t v0 = objc_alloc_init(&OBJC_CLASS___PBFullDisplaySceneManager);
  os_log_t v1 = (void *)qword_100470F90;
  qword_100470F90 = (uint64_t)v0;
}

void sub_10011D85C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10011D880(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 instanceForClass:objc_opt_class(PBSceneManager)];
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  [v5 addObserver:*(void *)(a1 + 32)];
}

id sub_10011D8E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateDumpBuilder]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 build]);

  return v3;
}

void sub_10011DFD0(id a1, FBSMutableSceneSettings *a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 mainWorkspace]);

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 geometry]);
  [v5 bounds];
  CGFloat v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;

  double v14 = (void *)objc_claimAutoreleasedReturnValue([v4 geometry]);
  [v14 fullDisplayBounds];
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;

  double v23 = (void *)objc_claimAutoreleasedReturnValue(+[FBDisplayManager mainConfiguration](&OBJC_CLASS___FBDisplayManager, "mainConfiguration"));
  double v24 = (void *)objc_claimAutoreleasedReturnValue( +[FBDisplayManager pb_transformToAppJailConfigurationIfNeeded:]( &OBJC_CLASS___FBDisplayManager,  "pb_transformToAppJailConfigurationIfNeeded:",  v23));

  -[FBSMutableSceneSettings setDisplayConfiguration:](v2, "setDisplayConfiguration:", v24);
  -[FBSMutableSceneSettings setPb_isAppJailed:](v2, "setPb_isAppJailed:", 1LL);
  v26.origin.CGFloat x = v16;
  v26.origin.CGFloat y = v18;
  v26.size.double width = v20;
  v26.size.double height = v22;
  double Width = CGRectGetWidth(v26);
  v27.origin.CGFloat x = v7;
  v27.origin.CGFloat y = v9;
  v27.size.double width = v11;
  v27.size.double height = v13;
  -[FBSMutableSceneSettings setFrame:](v2, "setFrame:", (Width - CGRectGetWidth(v27)) * 0.5, v9, v11, v13);
}

void sub_10011E204(id a1, FBSMutableSceneSettings *a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[FBDisplayManager mainConfiguration](&OBJC_CLASS___FBDisplayManager, "mainConfiguration"));
  -[FBSMutableSceneSettings setDisplayConfiguration:](v2, "setDisplayConfiguration:", v3);

  -[FBSMutableSceneSettings setPb_isAppJailed:](v2, "setPb_isAppJailed:", 0LL);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 mainWorkspace]);

  double v6 = (void *)objc_claimAutoreleasedReturnValue([v5 geometry]);
  [v6 fullDisplayBounds];
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;

  -[FBSMutableSceneSettings setFrame:](v2, "setFrame:", v8, v10, v12, v14);
}

uint64_t sub_10011E720(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10011E834( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

uint64_t sub_10011E850(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setAcceptsEventFocus:0];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10011EC10(id a1)
{
  os_log_t v1 = objc_alloc_init(&OBJC_CLASS___PBOSUpdateAssetManager);
  id v2 = (void *)qword_100470FA0;
  qword_100470FA0 = (uint64_t)v1;
}

void sub_10011EE7C(_Unwind_Exception *a1)
{
}

void sub_10011EE90(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", 0LL));
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_10011EED8(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  double v25 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _queryForAssetPurge]);
  id v2 = [WeakRetained _performMetadataQuery:v25];
  int v3 = (int)v2;
  if (v2)
  {
    __int128 v46 = 0u;
    memset(v47, 0, sizeof(v47));
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v35 = 0u;
    memset(buf, 0, sizeof(buf));
    id v4 = sub_1000836CC();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      uint64_t v6 = 3LL;
    }
    else {
      uint64_t v6 = 2LL;
    }
    v33[0] = 67109120;
    v33[1] = v3;
    _os_log_send_and_compose_impl( v6,  0LL,  buf,  250LL,  &_mh_execute_header,  v5,  16LL,  "Asset catalog refresh failed [%d].",  v33);
    double v8 = v7;

    id v9 = sub_1000836CC();
    double v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    _os_log_message_persist_impl(v8, 16LL, v10);

    if (v8 != buf) {
      free(v8);
    }
    uint64_t v11 = 0LL;
  }

  else
  {
    id v12 = sub_1000836CC();
    double v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      double v14 = (void *)objc_claimAutoreleasedReturnValue([v25 results]);
      *(_DWORD *)__int128 buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = [v14 count];
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Found %d potential assets to purge.",  buf,  8u);
    }

    __int128 v31 = 0u;
    __int128 v32 = 0u;
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    double v15 = (void *)objc_claimAutoreleasedReturnValue([v25 results]);
    uint64_t v11 = 0LL;
    id v16 = [v15 countByEnumeratingWithState:&v29 objects:v48 count:16];
    if (v16)
    {
      uint64_t v17 = *(void *)v30;
      do
      {
        for (i = 0LL; i != v16; i = (char *)i + 1)
        {
          if (*(void *)v30 != v17) {
            objc_enumerationMutation(v15);
          }
          double v19 = *(void **)(*((void *)&v29 + 1) + 8LL * (void)i);
          if ([v19 state] == (id)2 || objc_msgSend(v19, "state") == (id)3)
          {
            id v20 = [WeakRetained _purgeableSizeFor:v19];
            id v21 = sub_1000836CC();
            CGFloat v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
            v11 += (uint64_t)v20;
            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)__int128 buf = 134218240;
              *(void *)&uint8_t buf[4] = v20;
              *(_WORD *)&buf[12] = 2048;
              *(void *)&buf[14] = v11;
              _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Adding asset size %lld (total: %lld).",  buf,  0x16u);
            }
          }
        }

        id v16 = [v15 countByEnumeratingWithState:&v29 objects:v48 count:16];
      }

      while (v16);
    }
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10011F280;
  block[3] = &unk_1003D8458;
  id v27 = a1[5];
  uint64_t v28 = v11;
  dispatch_async(&_dispatch_main_q, block);
  id v23 = WeakRetained;
  objc_sync_enter(v23);
  [a1[4] setProcessingSpaceRequest:0];
  objc_sync_exit(v23);
}

void sub_10011F264(_Unwind_Exception *a1)
{
}

void sub_10011F280(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", *(void *)(a1 + 40)));
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_10011F46C(_Unwind_Exception *a1)
{
}

void sub_10011F480(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", 0LL));
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_10011F4C8(id *a1)
{
  id v1 = sub_1000836CC();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Determining local assets to purge.", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _queryForAssetPurge]);
  id v4 = [WeakRetained _performMetadataQuery:v39];
  int v5 = (int)v4;
  if (v4)
  {
    __int128 v63 = 0u;
    memset(v64, 0, sizeof(v64));
    __int128 v61 = 0u;
    __int128 v62 = 0u;
    __int128 v59 = 0u;
    __int128 v60 = 0u;
    __int128 v57 = 0u;
    __int128 v58 = 0u;
    __int128 v55 = 0u;
    __int128 v56 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    __int128 v52 = 0u;
    memset(buf, 0, sizeof(buf));
    id v6 = sub_1000836CC();
    double v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      uint64_t v8 = 3LL;
    }
    else {
      uint64_t v8 = 2LL;
    }
    int v49 = 67109120;
    LODWORD(v50) = v5;
    _os_log_send_and_compose_impl( v8,  0LL,  buf,  250LL,  &_mh_execute_header,  v7,  16LL,  "Failed to refresh metadata during purge [%d].",  &v49);
    double v10 = v9;

    id v11 = sub_1000836CC();
    id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    _os_log_message_persist_impl(v10, 16LL, v12);

    if (v10 != buf) {
      free(v10);
    }
    uint64_t v13 = 0LL;
  }

  else
  {
    id v14 = sub_1000836CC();
    double v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v39 results]);
      unsigned int v17 = [v16 count];
      *(_DWORD *)__int128 buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Found %d potential assets to purge.",  buf,  8u);
    }

    __int128 v47 = 0u;
    __int128 v48 = 0u;
    __int128 v45 = 0u;
    __int128 v46 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([v39 results]);
    uint64_t v13 = 0LL;
    id v18 = [obj countByEnumeratingWithState:&v45 objects:v65 count:16];
    if (v18)
    {
      uint64_t v19 = *(void *)v46;
      do
      {
        for (i = 0LL; i != v18; i = (char *)i + 1)
        {
          if (*(void *)v46 != v19) {
            objc_enumerationMutation(obj);
          }
          id v21 = *(void **)(*((void *)&v45 + 1) + 8LL * (void)i);
          id v22 = [WeakRetained _purgeAsset:v21];
          id v23 = sub_1000836CC();
          double v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
          v13 += (uint64_t)v22;
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)__int128 buf = 134218240;
            *(void *)&uint8_t buf[4] = v22;
            *(_WORD *)&buf[12] = 2048;
            *(void *)&buf[14] = v13;
            _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Adding asset size %lld (total: %lld).",  buf,  0x16u);
          }

          double v25 = (void *)objc_claimAutoreleasedReturnValue([v21 assetType]);
          unsigned int v26 = [v25 isEqualToString:@"com.apple.MobileAsset.SoftwareUpdate"];

          if (v26)
          {
            uint64_t v44 = 0LL;
            if ((MSUPurgeSuspendedUpdate(&v44) & 1) != 0)
            {
              id v27 = sub_1000836CC();
              uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
              if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)__int128 buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Purged suspended MSU update.",  buf,  2u);
              }
            }

            else
            {
              __int128 v63 = 0u;
              memset(v64, 0, sizeof(v64));
              __int128 v61 = 0u;
              __int128 v62 = 0u;
              __int128 v59 = 0u;
              __int128 v60 = 0u;
              __int128 v57 = 0u;
              __int128 v58 = 0u;
              __int128 v55 = 0u;
              __int128 v56 = 0u;
              __int128 v53 = 0u;
              __int128 v54 = 0u;
              __int128 v52 = 0u;
              memset(buf, 0, sizeof(buf));
              id v29 = sub_1000836CC();
              __int128 v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
              if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
                uint64_t v31 = 3LL;
              }
              else {
                uint64_t v31 = 2LL;
              }
              int v49 = 138543362;
              uint64_t v50 = v44;
              LODWORD(v37) = 12;
              _os_log_send_and_compose_impl( v31,  0LL,  buf,  250LL,  &_mh_execute_header,  v30,  16LL,  "Failed to purge MSU suspended update [%{public}@].",  &v49,  v37);
              double v33 = v32;

              id v34 = sub_1000836CC();
              __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
              _os_log_message_persist_impl(v33, 16LL, v35);

              if (v33 != buf) {
                free(v33);
              }
            }
          }
        }

        id v18 = [obj countByEnumeratingWithState:&v45 objects:v65 count:16];
      }

      while (v18);
    }
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10011F9F8;
  block[3] = &unk_1003D8458;
  id v42 = a1[5];
  uint64_t v43 = v13;
  dispatch_async(&_dispatch_main_q, block);
  id v36 = WeakRetained;
  objc_sync_enter(v36);
  [a1[4] setProcessingAssetRequest:0];
  objc_sync_exit(v36);
}

void sub_10011F9DC(_Unwind_Exception *a1)
{
}

void sub_10011F9F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", *(void *)(a1 + 40)));
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_10011FB34(uint64_t a1)
{
  id v2 = sub_1000836CC();
  int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  int v5 = sub_10003D53C(*(void *)(a1 + 56));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  int v17 = 138543362;
  id v18 = v6;
  _os_log_send_and_compose_impl( v4,  0LL,  v19,  250LL,  &_mh_execute_header,  v3,  0LL,  "Determining asset for action %{public}@.",  &v17,  12);
  uint64_t v8 = v7;

  id v9 = sub_1000836CC();
  double v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  _os_log_message_persist_impl(v8, 0LL, v10);

  if (v8 != v19) {
    free(v8);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v12 = *(void *)(a1 + 32);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  _DWORD v13[2] = sub_10011FD44;
  void v13[3] = &unk_1003D8480;
  objc_copyWeak(v16, (id *)(a1 + 48));
  v16[1] = *(id *)(a1 + 56);
  id v14 = *(id *)(a1 + 32);
  id v15 = *(id *)(a1 + 40);
  [WeakRetained _refreshAssetCatalogUsingOptions:v12 withCompletion:v13];

  objc_destroyWeak(v16);
}

void sub_10011FD28(_Unwind_Exception *a1)
{
}

void sub_10011FD44(uint64_t a1, uint64_t a2)
{
  if (a2 != 14 && a2)
  {
    memset(v14, 0, 250);
    id v4 = sub_1000836CC();
    int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v6 = 3LL;
    }
    else {
      uint64_t v6 = 2LL;
    }
    v13[0] = 0;
    _os_log_send_and_compose_impl( v6,  0LL,  v14,  250LL,  &_mh_execute_header,  v5,  0LL,  "Asset catalog refresh error, returning no asset found.",  v13,  2);
    uint64_t v8 = v7;

    id v9 = sub_1000836CC();
    double v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    _os_log_message_persist_impl(v8, 0LL, v10);

    if (v8 != v14) {
      free(v8);
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10011FEDC;
    block[3] = &unk_1003D0110;
    id v12 = *(id *)(a1 + 40);
    dispatch_async(&_dispatch_main_q, block);
    id WeakRetained = v12;
  }

  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained _finishAssetForAction:*(void *)(a1 + 56) options:*(void *)(a1 + 32) withCompletion:*(void *)(a1 + 40)];
  }
}

uint64_t sub_10011FEDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10011FFF4(uint64_t a1)
{
  id v2 = sub_1000836CC();
  int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  uint64_t v5 = *(void *)(a1 + 32);
  if (v4) {
    uint64_t v6 = 3LL;
  }
  else {
    uint64_t v6 = 2LL;
  }
  int v12 = 138543362;
  uint64_t v13 = v5;
  _os_log_send_and_compose_impl( v6,  0LL,  v14,  250LL,  &_mh_execute_header,  v3,  0LL,  "Determining installed asset for update %{public}@.",  &v12,  12);
  uint64_t v8 = v7;

  id v9 = sub_1000836CC();
  double v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  _os_log_message_persist_impl(v8, 0LL, v10);

  if (v8 != v14) {
    free(v8);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _finishInstalledAssetForUpdate:*(void *)(a1 + 32) withCompletion:*(void *)(a1 + 40)];
}

void sub_100120918(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _queryForLocalAssetSearch]);
  if ([WeakRetained _performMetadataQuery:v3])
  {
    BOOL v4 = 0LL;
  }

  else
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _postedDateForQuery:v3]);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 results]);
    id v7 = [v6 mutableCopy];

    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithBlock:](&OBJC_CLASS___NSPredicate, "predicateWithBlock:", &stru_1003D8510));
    [v7 filterUsingPredicate:v8];

    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472LL;
    void v25[2] = sub_100120C0C;
    v25[3] = &unk_1003D8538;
    id v9 = WeakRetained;
    id v26 = v9;
    double v10 = (void *)objc_claimAutoreleasedReturnValue([v7 sortedArrayUsingComparator:v25]);
    if ((unint64_t)[v10 count] >= 2)
    {
      memset(v28, 0, 250);
      id v11 = sub_1000836CC();
      int v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        uint64_t v13 = 3LL;
      }
      else {
        uint64_t v13 = 2LL;
      }
      unsigned int v14 = [v10 count];
      v27[0] = 67109120;
      v27[1] = v14;
      _os_log_send_and_compose_impl( v13,  0LL,  v28,  250LL,  &_mh_execute_header,  v12,  16LL,  "Expected only one local asset, found %d.",  v27);
      id v16 = v15;

      id v17 = sub_1000836CC();
      id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
      _os_log_message_persist_impl(v16, 16LL, v18);

      if (v16 != v28) {
        free(v16);
      }
    }

    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v10 firstObject]);
    BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v9 descriptorForAsset:v19 withReleaseDate:v5]);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100120C2C;
  block[3] = &unk_1003D2560;
  id v20 = *(id *)(a1 + 32);
  id v23 = v4;
  id v24 = v20;
  id v21 = v4;
  dispatch_async(&_dispatch_main_q, block);
}

BOOL sub_100120BEC(id a1, id a2, NSDictionary *a3)
{
  return objc_msgSend(a2, "state", a3) == (id)2;
}

id sub_100120C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) _compareAsset:a2 withAsset:a3];
}

uint64_t sub_100120C2C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_100120D18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateScanOptions defaultOptions](&OBJC_CLASS___PBSOSUpdateScanOptions, "defaultOptions"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_100120DCC;
  _OWORD v5[3] = &unk_1003D8560;
  id v6 = WeakRetained;
  id v7 = *(id *)(a1 + 32);
  id v4 = WeakRetained;
  [v4 _refreshAssetCatalogUsingOptions:v3 withCompletion:v5];
}

void sub_100120DCC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _queryForAssetDownload]);
  if ([*(id *)(a1 + 32) _performMetadataQuery:v2])
  {
    __int128 v49 = 0u;
    memset(v50, 0, sizeof(v50));
    __int128 v47 = 0u;
    __int128 v48 = 0u;
    __int128 v45 = 0u;
    __int128 v46 = 0u;
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v36 = 0u;
    id v3 = sub_1000836CC();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      uint64_t v5 = 3LL;
    }
    else {
      uint64_t v5 = 2LL;
    }
    LOWORD(v34) = 0;
    _os_log_send_and_compose_impl( v5,  0LL,  &v36,  250LL,  &_mh_execute_header,  v4,  16LL,  "Failed to get asset query to determine posted date. Cannot compute update delay expiration.",  &v34,  2);
    id v7 = v6;

    id v8 = sub_1000836CC();
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    _os_log_message_persist_impl(v7, 16LL, v9);

    if (v7 != &v36) {
      free(v7);
    }
    double v10 = 0LL;
  }

  else
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateScanOptions defaultOptions](&OBJC_CLASS___PBSOSUpdateScanOptions, "defaultOptions"));
    if ([v11 MDMUseDelayPeriod])
    {
      int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 delayPeriod]);
      id v13 = [v12 integerValue];

      __int128 v49 = 0u;
      memset(v50, 0, sizeof(v50));
      __int128 v47 = 0u;
      __int128 v48 = 0u;
      __int128 v45 = 0u;
      __int128 v46 = 0u;
      __int128 v43 = 0u;
      __int128 v44 = 0u;
      __int128 v41 = 0u;
      __int128 v42 = 0u;
      __int128 v39 = 0u;
      __int128 v40 = 0u;
      __int128 v37 = 0u;
      __int128 v38 = 0u;
      __int128 v36 = 0u;
      id v14 = sub_1000836CC();
      id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v16 = 3LL;
      }
      else {
        uint64_t v16 = 2LL;
      }
      int v34 = 134217984;
      id v35 = v13;
      _os_log_send_and_compose_impl( v16,  0LL,  &v36,  250LL,  &_mh_execute_header,  v15,  0LL,  "OS updates are delayed by %ld days.",  &v34);
      id v18 = v17;

      id v19 = sub_1000836CC();
      id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
      _os_log_message_persist_impl(v18, 0LL, v20);

      if (v18 != &v36) {
        free(v18);
      }
      id v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _postedDateForQuery:v2]);
      double v10 = (void *)objc_claimAutoreleasedReturnValue([v21 dateByAddingTimeInterval:(double)(uint64_t)v13 * 86400.0]);
    }

    else
    {
      __int128 v49 = 0u;
      memset(v50, 0, sizeof(v50));
      __int128 v47 = 0u;
      __int128 v48 = 0u;
      __int128 v45 = 0u;
      __int128 v46 = 0u;
      __int128 v43 = 0u;
      __int128 v44 = 0u;
      __int128 v41 = 0u;
      __int128 v42 = 0u;
      __int128 v39 = 0u;
      __int128 v40 = 0u;
      __int128 v37 = 0u;
      __int128 v38 = 0u;
      __int128 v36 = 0u;
      id v22 = sub_1000836CC();
      id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v24 = 3LL;
      }
      else {
        uint64_t v24 = 2LL;
      }
      LOWORD(v34) = 0;
      _os_log_send_and_compose_impl( v24,  0LL,  &v36,  250LL,  &_mh_execute_header,  v23,  0LL,  "OS updates are not delayed.",  &v34,  2);
      id v26 = v25;

      id v27 = sub_1000836CC();
      uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
      _os_log_message_persist_impl(v26, 0LL, v28);

      if (v26 != &v36) {
        free(v26);
      }
      double v10 = 0LL;
    }
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100121180;
  block[3] = &unk_1003D2560;
  id v29 = *(id *)(a1 + 40);
  id v32 = v10;
  id v33 = v29;
  id v30 = v10;
  dispatch_async(&_dispatch_main_q, block);
}

uint64_t sub_100121180(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_100121D94( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,id location)
{
}

uint64_t sub_100121E64(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  0LL,  0LL,  *(void *)(a1 + 32));
}

id sub_100121E8C(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v6 = [WeakRetained _isAsset:v4 eligibleForAction:*(void *)(a1 + 40) delayingUpdates:*(unsigned __int8 *)(a1 + 48)];

  return v6;
}

uint64_t sub_100121EE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_100121F10(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v8 = [WeakRetained _compareAsset:v6 withAsset:v5];

  return v8;
}

uint64_t sub_100121F74(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(a1[6] + 16LL))(a1[6], a1[4], a1[5], 0LL);
}

uint64_t sub_100122698(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  0LL,  0LL,  *(void *)(a1 + 32));
}

uint64_t sub_1001226C0(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(a1[6] + 16LL))(a1[6], a1[4], a1[5], 0LL);
}

void sub_100122BC4(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v25 = a4;
  id v7 = sub_1000836CC();
  id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
    int v8 = 3;
  }
  else {
    int v8 = 2;
  }
  unsigned int v27 = v8;
  id v9 = sub_10003D53C(a2);
  double v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v23 = *(void *)(a1 + 80);
  uint64_t v24 = *(void *)(a1 + 88);
  if (*(_BYTE *)(a1 + 96)) {
    id v17 = @"y";
  }
  else {
    id v17 = @"n";
  }
  if (a3) {
    id v18 = @"✅";
  }
  else {
    id v18 = @"❌";
  }

  int v28 = 138546178;
  id v29 = v10;
  __int16 v30 = 2114;
  uint64_t v31 = v11;
  __int16 v32 = 2114;
  uint64_t v33 = v12;
  __int16 v34 = 2114;
  uint64_t v35 = v13;
  __int16 v36 = 2114;
  uint64_t v37 = v14;
  __int16 v38 = 2114;
  uint64_t v39 = v15;
  __int16 v40 = 2114;
  uint64_t v41 = v16;
  __int16 v42 = 2114;
  uint64_t v43 = v23;
  __int16 v44 = 2114;
  uint64_t v45 = v24;
  __int16 v46 = 2112;
  __int128 v47 = v17;
  __int16 v48 = 2112;
  __int128 v49 = v18;
  __int16 v50 = 2114;
  id v51 = v25;
  _os_log_send_and_compose_impl( v27,  0LL,  v52,  250LL,  &_mh_execute_header,  v26,  0LL,  "Action:%{public}@ Checking %{public}@/%{public}@/%{public}@ pre:%{public}@/%{public}@ -> %{public}@/%{public}@/%{pub lic}@ (delaying:%@) = %@ (%{public}@)",  &v28,  122);
  id v20 = v19;

  id v21 = sub_1000836CC();
  id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
  _os_log_message_persist_impl(v20, 0LL, v22);

  if (v20 != v52) {
    free(v20);
  }
}

void sub_100122DF0(id a1)
{
  int v1 = statfs("/System/", &v15);
  memset(v14, 0, 250);
  id v2 = sub_1000836CC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  id v5 = @"not ";
  if ((v15.f_flags & 1) == 0) {
    id v5 = &stru_1003E2910;
  }
  int v10 = 138412546;
  uint64_t v11 = v5;
  __int16 v12 = 1024;
  int v13 = v1;
  _os_log_send_and_compose_impl( v4,  0LL,  v14,  250LL,  &_mh_execute_header,  v3,  0LL,  "OS partition %@writable [fsResult:%d]",  &v10,  18);
  id v7 = v6;

  id v8 = sub_1000836CC();
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  _os_log_message_persist_impl(v7, 0LL, v9);

  if (v7 != v14) {
    free(v7);
  }
  byte_100470FB0 = (v1 | v15.f_flags & 1) == 0;
}

void sub_1001246D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, id location)
{
}

void sub_100124700(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v6 = *(id *)(a1 + 32);
    objc_sync_enter(v6);
    uint64_t v7 = *(void *)(a1 + 32);
    BOOL v8 = *(_BYTE *)(v7 + 10) == 0;
    *(_BYTE *)(v7 + 10) = 1;
    objc_sync_exit(v6);

    if (v8)
    {
      [WeakRetained _reportAssetCatalogDownloadWithResult:a2 forAttempt:1];
      if (!a2) {
        goto LABEL_15;
      }
      if (a2 == 18)
      {
        qword_100470FC0 = 0LL;
        (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
        goto LABEL_23;
      }

      if (a2 != 14)
      {
        __int128 v43 = 0u;
        memset(v44, 0, sizeof(v44));
        __int128 v41 = 0u;
        __int128 v42 = 0u;
        __int128 v39 = 0u;
        __int128 v40 = 0u;
        __int128 v37 = 0u;
        __int128 v38 = 0u;
        __int128 v35 = 0u;
        __int128 v36 = 0u;
        __int128 v34 = 0u;
        __int128 v32 = 0u;
        __int128 v33 = 0u;
        *(_OWORD *)__int128 buf = 0u;
        __int128 v31 = 0u;
        id v18 = sub_1000836CC();
        id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
          uint64_t v20 = 3LL;
        }
        else {
          uint64_t v20 = 2LL;
        }
        v29[0] = 0;
        _os_log_send_and_compose_impl( v20,  0LL,  buf,  250LL,  &_mh_execute_header,  v19,  0LL,  "Retrying asset catalog download...",  v29,  2);
        id v22 = v21;

        id v23 = sub_1000836CC();
        uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
        _os_log_message_persist_impl(v22, 0LL, v24);

        if (v22 != buf) {
          free(v22);
        }
        uint64_t v25 = *(void *)(a1 + 40);
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472LL;
        v26[2] = sub_100124A98;
        v26[3] = &unk_1003D8648;
        objc_copyWeak(v28, v4);
        id v27 = *(id *)(a1 + 48);
        v28[1] = *(id *)(a1 + 64);
        +[MAAsset startCatalogDownload:options:then:]( &OBJC_CLASS___MAAsset,  "startCatalogDownload:options:then:",  @"com.apple.MobileAsset.SoftwareUpdate",  v25,  v26);

        objc_destroyWeak(v28);
      }

      else
      {
LABEL_15:
        qword_100470FC0 = *(void *)(a1 + 64);
        (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
      }
    }

    else
    {
      id v9 = sub_1000836CC();
      int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Incorrectly called back a second time.",  buf,  2u);
      }
    }
  }

  else
  {
    __int128 v43 = 0u;
    memset(v44, 0, sizeof(v44));
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v34 = 0u;
    __int128 v32 = 0u;
    __int128 v33 = 0u;
    *(_OWORD *)__int128 buf = 0u;
    __int128 v31 = 0u;
    id v11 = sub_1000836CC();
    __int16 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      uint64_t v13 = 3LL;
    }
    else {
      uint64_t v13 = 2LL;
    }
    v29[0] = 0;
    _os_log_send_and_compose_impl( v13,  0LL,  buf,  250LL,  &_mh_execute_header,  v12,  16LL,  "Aborting asset catalog download - manager disappeared.",  v29,  2);
    statfs v15 = v14;

    id v16 = sub_1000836CC();
    id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    _os_log_message_persist_impl(v15, 16LL, v17);

    if (v15 != buf) {
      free(v15);
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }

void sub_100124A7C(_Unwind_Exception *a1)
{
}

void sub_100124A98(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _reportAssetCatalogDownloadWithResult:a2 forAttempt:2];
    if (a2 != 14 && a2) {
      qword_100470FC0 = 0LL;
    }
    else {
      qword_100470FC0 = *(void *)(a1 + 48);
    }
  }

  else
  {
    memset(v14, 0, 250);
    id v6 = sub_1000836CC();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      uint64_t v8 = 3LL;
    }
    else {
      uint64_t v8 = 2LL;
    }
    v13[0] = 0;
    _os_log_send_and_compose_impl( v8,  0LL,  v14,  250LL,  &_mh_execute_header,  v7,  16LL,  "Aborting asset catalog download - manager disappeared.",  v13,  2);
    int v10 = v9;

    id v11 = sub_1000836CC();
    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    _os_log_message_persist_impl(v10, 16LL, v12);

    if (v10 != v14) {
      free(v10);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100125A48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100125A64(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_1000F6C04();
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v11[0] = 67109378;
    v11[1] = a2;
    __int16 v12 = 2114;
    id v13 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Screenshot captured bulletin finished {success=%{BOOL}d, %{public}@}",  (uint8_t *)v11,  0x12u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = WeakRetained;
  if (WeakRetained)
  {
    int v10 = (void *)*((void *)WeakRetained + 4);
    *((void *)WeakRetained + 4) = 0LL;
  }
}

id sub_100125BC4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _didDismissBulletin:*(void *)(a1 + 40)];
}

id sub_10012637C(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 8LL);
}

id sub_100126C18(uint64_t a1)
{
  return [*(id *)(a1 + 32) unhide];
}

uint64_t sub_100126DD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100126FCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100127180(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1001271B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) signal];
}

id sub_1001271CC(uint64_t a1)
{
  return [*(id *)(a1 + 40) signal];
}

uint64_t sub_100127368(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100127388(uint64_t a1)
{
  return [*(id *)(a1 + 32) signal];
}

id sub_1001273A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) signal];
}

uint64_t sub_100127958(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100127EF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100127F18(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) readyDefaultKioskScene]);
    id v9 = (void *)WeakRetained[5];
    WeakRetained[5] = v8;

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    _DWORD v10[2] = sub_100127FF4;
    void v10[3] = &unk_1003D0110;
    id v11 = v6;
    [WeakRetained _prepareKioskAnimationInTransaction:v5 completion:v10];
  }

  else
  {
    (*((void (**)(id, void))v6 + 2))(v6, 0LL);
  }
}

uint64_t sub_100127FF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

BOOL sub_100128014(id a1, BSTransaction *a2)
{
  return 1;
}

void sub_100128368( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10012838C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___PBSPrepareKioskScreenSaverAnimationActionResponse);
    id v6 = v3;
    uint64_t v7 = v6;
    if (v5)
    {
      if ((objc_opt_isKindOfClass(v6, v5) & 1) != 0) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0LL;
      }
    }

    else
    {
      uint64_t v8 = 0LL;
    }

    id v9 = v8;

    unsigned int v10 = [v9 shouldAnimate];
    if (v10)
    {
      id v11 = objc_alloc_init(&OBJC_CLASS____PBScreenSaverToKioskDismissalAnimationTransaction);
      -[_PBScreenSaverToKioskDismissalAnimationTransaction setShouldApplyStartValues:]( v11,  "setShouldApplyStartValues:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 10LL));
      -[_PBScreenSaverToKioskDismissalAnimationTransaction setScreenSaverViewController:]( v11,  "setScreenSaverViewController:",  *((void *)WeakRetained + 2));
      -[_PBScreenSaverToKioskDismissalAnimationTransaction setAnimated:](v11, "setAnimated:", WeakRetained[8]);
      id v12 = *((id *)WeakRetained + 5);
      if (v11) {
        -[_PBScreenSaverToKioskDismissalAnimationTransaction setContext:](v11, "setContext:", v12);
      }
      else {

      }
      uint64_t v14 = *(void **)(a1 + 40);
    }

    else
    {
      id v13 = *(void **)(a1 + 40);
      id v11 = (_PBScreenSaverToKioskDismissalAnimationTransaction *)objc_claimAutoreleasedReturnValue( [WeakRetained _defaultAppAnimationTransaction]);
      uint64_t v14 = v13;
    }

    [v14 addChildTransaction:v11 withSchedulingPolicy:1];
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

id sub_1001287C0()
{
  if (qword_100470FD0 != -1) {
    dispatch_once(&qword_100470FD0, &stru_1003D8878);
  }
  return (id)qword_100470FC8;
}

id sub_100128804(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_100128D94(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = sub_100083D98();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = v4;
  if (!v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v9 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "Watchdog for dismissal transition timeout invalidated",  v9,  2u);
    }

    goto LABEL_9;
  }

  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Attempting to panic system for dismissal transition timeout",  buf,  2u);
  }

  int v6 = reboot_np(3072, "Panic for dismissal transition timeout");
  if (v6)
  {
    int v7 = v6;
    id v8 = sub_100083D98();
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_100283DD4(v7, v5);
    }
LABEL_9:
  }

id sub_100128E78(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

id sub_100128E90(uint64_t a1)
{
  int v1 = *(void **)(a1 + 32);
  [v1 bounds];
  return objc_msgSend(v1, "drawViewHierarchyInRect:afterScreenUpdates:", 0);
}

void sub_10012954C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, id a35)
{
}

id sub_100129594(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 32);
  __int128 v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v7[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v7[1] = v3;
  v7[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v7];
  uint64_t v4 = *(void **)(a1 + 40);
  CGAffineTransformMakeScale(&v6, 1.3, 1.3);
  return [v4 setTransform:&v6];
}

id sub_100129600(uint64_t a1)
{
  BOOL v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBWallpaperManager sharedInstance](&OBJC_CLASS___PBWallpaperManager, "sharedInstance"));
  [v2 presentWallpaperAnimated:0 completion:0];

  [*(id *)(a1 + 32) setAlpha:1.0];
  return [*(id *)(a1 + 40) setAlpha:1.0];
}

void sub_100129658(uint64_t a1)
{
  int v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) screenSaverViewController]);
  [v1 screenSaverTransitionUpdatedAcceptEvents:0];
}

void sub_10012968C(uint64_t a1)
{
  int v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) layer]);
  [v1 setMeshTransform:0];
}

void sub_1001296C0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v4 = sub_100083D98();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR)) {
      sub_100283E5C();
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 40));
    -[os_log_s satisfyMilestone:](WeakRetained, "satisfyMilestone:", @"Spring Animation Complete");
  }
}

void sub_100129730(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_100083D98();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR)) {
      sub_100283E88();
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 32));
    -[os_log_s satisfyMilestone:](WeakRetained, "satisfyMilestone:", @"Alpha Animation Complete");
  }
}

id sub_10012978C(uint64_t a1)
{
  return [*(id *)(a1 + 32) satisfyMilestone:@"Event consuming timer complete"];
}

void sub_100129C28(_Unwind_Exception *a1)
{
}

id sub_100129C58(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBWallpaperManager sharedInstance](&OBJC_CLASS___PBWallpaperManager, "sharedInstance"));
  [v2 presentWallpaperAnimated:0 completion:0];

  [*(id *)(a1 + 32) setAlpha:1.0];
  return [*(id *)(a1 + 40) setAlpha:1.0];
}

void sub_100129CB0(uint64_t a1)
{
  int v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) screenSaverViewController]);
  [v1 screenSaverTransitionUpdatedAcceptEvents:0];
}

void sub_100129CE4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_100083D98();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR)) {
      sub_100283EB4();
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 32));
    -[os_log_s satisfyMilestone:](WeakRetained, "satisfyMilestone:", @"Alpha Animation Complete");
  }
}

id sub_100129D40(uint64_t a1)
{
  return [*(id *)(a1 + 32) satisfyMilestone:@"Event consuming timer complete"];
}

void sub_10012A3D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, id location)
{
}

void sub_10012A454(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___PBSPerformKioskAnimationActionResponse);
  id v5 = v3;
  CGAffineTransform v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      int v7 = v6;
    }
    else {
      int v7 = 0LL;
    }
  }

  else
  {
    int v7 = 0LL;
  }

  id v8 = v7;

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 animationFence]);
  if (v9) {
    +[UIScene _synchronizeDrawingWithFence:](&OBJC_CLASS___UIScene, "_synchronizeDrawingWithFence:", v9);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained satisfyMilestone:@"Kiosk Animation Completed"];
}

id sub_10012A510(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[UIApplicationSceneTransitionContext transitionContext]( &OBJC_CLASS___UIApplicationSceneTransitionContext,  "transitionContext"));
  [v2 setAnimationFence:*(void *)(a1 + 32)];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", *(void *)(a1 + 40)));
  [v2 setActions:v3];

  return v2;
}

id sub_10012A578(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  CGAffineTransformMakeScale(&v7, 1.3, 1.3);
  [v2 setTransform:&v7];
  id v3 = *(void **)(a1 + 40);
  __int128 v4 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v6[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v6[1] = v4;
  v6[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  return [v3 setTransform:v6];
}

id sub_10012A5E4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBWallpaperManager sharedInstance](&OBJC_CLASS___PBWallpaperManager, "sharedInstance"));
  [v2 presentWallpaperAnimated:0 completion:0];

  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_10012A630(uint64_t a1)
{
  int v1 = *(void **)(a1 + 32);
  __int128 v2 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v4[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v4[1] = v2;
  void v4[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  return [v1 setTransform:v4];
}

void sub_10012A66C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_100083D98();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR)) {
      sub_100283EE0();
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 32));
    -[os_log_s satisfyMilestone:](WeakRetained, "satisfyMilestone:", @"Spring Animation Complete");
  }
}

void sub_10012A6C8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_100083D98();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR)) {
      sub_100283F0C();
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 32));
    -[os_log_s satisfyMilestone:](WeakRetained, "satisfyMilestone:", @"Alpha Animation Complete");
  }
}

void sub_10012A864(id a1)
{
  dispatch_queue_attr_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  id v2 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v1);
  dispatch_queue_t v3 = dispatch_queue_create("com.apple.PineBoard.PanicQueue", v2);
  __int128 v4 = (void *)qword_100470FC8;
  qword_100470FC8 = (uint64_t)v3;
}

void sub_10012AAC0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10012AAE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if ([v3 eventMask] == (id)1)
    {
      WeakRetained[8] = 1;
      [WeakRetained _notifyAttentionLost];
    }

    else
    {
      WeakRetained[8] = 0;
      [WeakRetained _notifyAttentionRegained];
    }
  }
}

id sub_10012AC80(uint64_t a1, void *a2)
{
  return [a2 attentionAwarenessMonitorDidLoseAttention:*(void *)(a1 + 32)];
}

id sub_10012ACF4(uint64_t a1, void *a2)
{
  return [a2 attentionAwarenessMonitorDidRegainAttention:*(void *)(a1 + 32)];
}

void sub_10012B2AC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
}

void sub_10012B550(uint64_t a1, uint64_t a2)
{
  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requiredPressTypesSet]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
  unsigned int v6 = [v4 containsObject:v5];

  if (v6)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 16LL));
    [WeakRetained cancelGestureRecognizersWithPressType:a2 forReason:@"SystemKeychordBegan"];
  }

void sub_10012C46C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10012C4A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _startBackgroundMonitoringAndIgnoreFirstPoll:*(_BYTE *)(a1 + 40) == 0];
}

void sub_10012CD68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
}

void sub_10012CDA8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48) && *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    id v2 = sub_100082A9C();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 136315138;
      unsigned int v6 = "-[PBDisplayManager(CableCheck) _startBackgroundMonitoringAndIgnoreFirstPoll:]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%s - Ignoring the first poll to avoid potential garbage from the TV",  (uint8_t *)&v5,  0xCu);
    }

    id WeakRetained = (id)objc_claimAutoreleasedReturnValue(+[CADisplay mainDisplay](&OBJC_CLASS___CADisplay, "mainDisplay"));
    [WeakRetained linkQuality];
  }

  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _processCurrentCableInfo];
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 0;
}

void sub_10012D314( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10012D338(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v4 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v6 = WeakRetained;
  if (WeakRetained)
  {
    id v7 = WeakRetained[4];
    uint64_t v8 = *(unsigned __int8 *)(a1 + 40);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[3] clientOptions]);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    _DWORD v10[2] = sub_10012D418;
    void v10[3] = &unk_1003D2560;
    void v10[4] = v6;
    id v11 = v4;
    [v7 presentContentAnimated:v8 clientOptions:v9 withCompletion:v10];
  }

  else
  {
    v4[2](v4);
  }
}

id sub_10012D418(uint64_t a1)
{
  return [*(id *)(a1 + 32) satisfyMilestone:@"PresentationAnimationComplete"];
}

void sub_10012D8C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10012D8E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10012D8F0(uint64_t a1)
{
}

uint64_t sub_10012D908(uint64_t a1, void *a2)
{
  id v3 = [a2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  int v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10012DB2C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_10012DB50(uint64_t a1)
{
  dispatch_queue_attr_t v1 = *(void **)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 selectedDevice]);
  [v1 _sendCodeToDevice:v2 error:0 showDialogs:0];
}

uint64_t sub_10012DB94(uint64_t a1, void *a2)
{
  id v3 = [a2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  int v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_10012E1B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10012E1D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10012E1F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10012E214(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10012E234(uint64_t a1, unint64_t a2)
{
  else {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectAtIndex:a2]);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

uint64_t sub_10012E708(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_10012EB2C(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10012F2FC(uint64_t a1)
{
  id val = (id)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  *(void *)(a1 + 32),  *(void *)(a1 + 40),  1LL));
  objc_initWeak(&location, val);
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  id v2 = *(id *)(a1 + 48);
  id v3 = [v2 countByEnumeratingWithState:&v22 objects:v27 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v23;
    do
    {
      int v5 = 0LL;
      do
      {
        if (*(void *)v23 != v4) {
          objc_enumerationMutation(v2);
        }
        uint64_t v6 = *(void *)(*((void *)&v22 + 1) + 8LL * (void)v5);
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472LL;
        id v17[2] = sub_10012F620;
        void v17[3] = &unk_1003D8968;
        objc_copyWeak(&v21, &location);
        id v20 = *(id *)(a1 + 56);
        id v18 = *(id *)(a1 + 48);
        uint64_t v19 = v6;
        id v7 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v6,  0LL,  v17));
        [val addAction:v7];

        objc_destroyWeak(&v21);
        int v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id v3 = [v2 countByEnumeratingWithState:&v22 objects:v27 count:16];
    }

    while (v3);
  }

  id v8 = sub_1001C307C(@"ButtonCancel", 0LL);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_10012F670;
  v14[3] = &unk_1003D8990;
  objc_copyWeak(&v16, &location);
  id v15 = *(id *)(a1 + 56);
  unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v9,  1LL,  v14));
  [val addAction:v10];

  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewController:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewController:",  val));
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  [v12 presentDialogWithContext:v11 options:0 completion:0];

  objc_destroyWeak(&v16);
  objc_destroyWeak(&location);
}

void sub_10012F5C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, id location)
{
}

void sub_10012F620(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained && *(void *)(a1 + 48))
  {
    [*(id *)(a1 + 32) indexOfObject:*(void *)(a1 + 40)];
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }
}

void sub_10012F670(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v3, 0x7FFFFFFFFFFFFFFFLL);
    }
  }
}

void sub_10012F80C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  uint64_t v3 = objc_alloc_init(&OBJC_CLASS___PBTextEntryViewController);
  -[PBTextEntryViewController setDefaultTitle:](v3, "setDefaultTitle:", *(void *)(a1 + 32));
  -[PBTextEntryViewController setDefaultMessage:](v3, "setDefaultMessage:", *(void *)(a1 + 40));
  -[PBTextEntryViewController addTextFieldWithInitialText:placeholder:keyboardType:]( v3,  "addTextFieldWithInitialText:placeholder:keyboardType:",  0LL,  0LL,  4LL);
  id v4 = -[PBTextEntryViewController addButtonWithTitle:](v3, "addButtonWithTitle:", *(void *)(a1 + 48));
  WeakRetained[12] = v4;
  -[PBTextEntryViewController setDefaultButtonIndex:](v3, "setDefaultButtonIndex:", v4);
  WeakRetained[13] = -[PBTextEntryViewController addButtonWithTitle:](v3, "addButtonWithTitle:", *(void *)(a1 + 56));
  -[PBTextEntryViewController setDelegate:](v3, "setDelegate:", WeakRetained);
  int v5 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewController:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewController:",  v3));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  [v6 presentDialogWithContext:v5 options:0 completion:0];
}

void sub_10012F9CC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  *(void *)(a1 + 32),  *(void *)(a1 + 40),  1LL));
  objc_initWeak(&location, v2);
  id v3 = sub_1001C307C(@"ButtonOK", 0LL);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10012FB4C;
  v8[3] = &unk_1003D8990;
  objc_copyWeak(&v10, &location);
  id v9 = *(id *)(a1 + 48);
  int v5 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v4,  1LL,  v8));
  [v2 addAction:v5];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewController:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewController:",  v2));
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  [v7 presentDialogWithContext:v6 options:0 completion:0];

  objc_destroyWeak(&v10);
  objc_destroyWeak(&location);
}

void sub_10012FB24( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10012FB4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3) {
      (*(void (**)(void))(v3 + 16))();
    }
  }
}

void sub_10012FFE4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100470FD8;
  qword_100470FD8 = (uint64_t)v1;
}

id sub_100130084(uint64_t a1, void *a2)
{
  return [a2 _updateActivationState];
}

void sub_1001307C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1001307E4(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _removeBundleID:*(void *)(a1 + 32)];

  uint64_t v10 = mach_absolute_time();
  double v11 = BSTimeDifferenceFromMachTimeToMachTime(*(void *)(a1 + 56), v10);
  id v12 = sub_1000F6934();
  id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (!v14) {
      goto LABEL_7;
    }
    uint64_t v15 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 134218498;
    double v23 = v11;
    __int16 v24 = 2114;
    uint64_t v25 = v15;
    __int16 v26 = 2114;
    id v27 = v7;
    id v16 = "Repair succeeded {duration=%2.3fs, bundleID=%{public}@}: %{public}@";
  }

  else
  {
    if (!v14) {
      goto LABEL_7;
    }
    uint64_t v17 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 134218498;
    double v23 = v11;
    __int16 v24 = 2114;
    uint64_t v25 = v17;
    __int16 v26 = 2114;
    id v27 = v8;
    id v16 = "Repair failed {duration=%2.3fs, bundleID=%{public}@}: %{public}@";
  }

  _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, v16, buf, 0x20u);
LABEL_7:

  if (*(void *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001309B0;
    block[3] = &unk_1003D0020;
    id v20 = *(id *)(a1 + 40);
    char v21 = a2;
    id v19 = v8;
    dispatch_async(&_dispatch_main_q, block);
  }
}

uint64_t sub_1001309B0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48),  *(void *)(a1 + 32));
}

BOOL sub_100130F30(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  int v5 = WeakRetained;
  if (WeakRetained) {
    uint64_t v6 = (void *)*((void *)WeakRetained + 3);
  }
  else {
    uint64_t v6 = 0LL;
  }
  id v7 = v6;

  return v7 == v3;
}

void sub_1001315D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, id location)
{
}

void sub_1001315F8(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  [v4 setIdentifier:v5];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBSUICompactSceneSpecification specification]( &OBJC_CLASS___PBSUICompactSceneSpecification,  "specification"));
  [v4 setSpecification:v6];

  [v4 setClientIdentity:*(void *)(*(void *)(a1 + 40) + 16)];
}

void sub_100131688(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDisplayConfiguration:*(void *)(a1 + 32)];
  [v3 setForeground:1];
  objc_msgSend(v3, "setFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  [v3 setInterfaceOrientation:1];
  [v3 setLevel:sub_100103824(5)];
  double v4 = *(double *)(a1 + 72);
  double v5 = *(double *)(a1 + 80);
  double v6 = *(double *)(a1 + 88);
  double v7 = *(double *)(a1 + 96);
  id v8 = v3;
  UIEdgeInsetsMax(1LL, v4, v5, v6, v7, 1.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, "setSafeAreaInsetsPortrait:");
  [v8 setUserInterfaceStyle:*(void *)(a1 + 104)];
}

void sub_100131750(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_1000F7384();
  double v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  id WeakRetained = v7;
  if (a2)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v16 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  WeakRetained,  OS_LOG_TYPE_INFO,  "Initial scene update completed successfully",  v16,  2u);
    }
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100284934((uint64_t)v5, WeakRetained, v9, v10, v11, v12, v13, v14);
    }

    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s delegate](WeakRetained, "delegate"));
    [v15 splitViewPresentationViewControllerRequestsDismissal:WeakRetained animated:0];
  }
}

uint64_t sub_100131934(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100131A70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  return [*(id *)(*(void *)(a1 + 32) + 24) invalidate];
}

id sub_100132208(uint64_t a1, void *a2)
{
  return [a2 setUserInterfaceStyle:*(void *)(a1 + 32)];
}

void sub_100132368(double *a1, void *a2)
{
  double v2 = a1[4];
  double v3 = a1[5];
  double v4 = a1[6];
  double v5 = a1[7];
  id v6 = a2;
  UIEdgeInsetsMax(1LL, v2, v3, v4, v5, 1.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, "setSafeAreaInsetsPortrait:");
}

void sub_100132440(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[FBSceneWorkspace workspaceWithIdentifier:]( &OBJC_CLASS___FBSceneWorkspace,  "workspaceWithIdentifier:",  @"SplitView"));
  double v2 = (void *)qword_100470FE8;
  qword_100470FE8 = v1;
}

id sub_100132A54(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_100132A70(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

id sub_100132C30(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_100132C4C(uint64_t a1)
{
  double v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) wallpaperView]);
  [v2 removeFromSuperview];

  return [*(id *)(a1 + 32) setWallpaperView:*(void *)(a1 + 40)];
}

void sub_100132F10(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v1 setAlpha:1.0];
}

uint64_t sub_100132F44(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100133068(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v1 setAlpha:0.0];
}

uint64_t sub_10013309C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100133580( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id location)
{
}

void sub_1001335BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    double v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[4] sceneHandle]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 clientProcessBundleIdentifier]);

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppSwitcherManager defaultManager](&OBJC_CLASS___PBAppSwitcherManager, "defaultManager"));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    _DWORD v10[2] = sub_1001336A0;
    void v10[3] = &unk_1003D8AB0;
    void v10[4] = v6;
    id v11 = v4;
    [v9 dismissAppSwitcherToBundleIdentifier:v8 completion:v10];
  }
}

uint64_t sub_1001336A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 40) + 16LL))(*(void *)(a1 + 40), a3 == 0);
}

id sub_1001336E4(void *a1, id *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  id result = a2[2];
  a1[2] = result;
  return result;
}

void sub_100133728(id *a1)
{
}

void sub_10013375C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained satisfyMilestone:@"PBAppSwitcherAppToAppAnimationMilestone"];
}

void sub_10013386C(_Unwind_Exception *a1)
{
}

void sub_100133880(id *a1, id *a2)
{
}

void sub_100133AA8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_100133AD8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  double v2 = WeakRetained;
  if (WeakRetained)
  {
    double v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[3] view]);
    [v3 setAlpha:0.0];
  }
}

void sub_100133B2C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained satisfyMilestone:@"PBAppSwitcherAppToAppAnimationChildMilestone"];
}

id sub_100133D50(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "_bannerQueue_postHeadphoneBannerWithRequest:completion:",  *(void *)(a1 + 40),  *(void *)(a1 + 48));
}

void sub_1001347B0(_Unwind_Exception *a1)
{
}

void sub_1001347CC(uint64_t a1, int a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained && a2)
  {
    id v5 = [[PBSystemUIServicePresentMenuOptions alloc] initWithPresentMenuReason:*(void *)(a1 + 48)];
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBSystemUIServicePresentMenuAction actionWithOptions:]( &OBJC_CLASS___PBSystemUIServicePresentMenuAction,  "actionWithOptions:",  v5));
    id v7 = objc_loadWeakRetained(WeakRetained + 12);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v6));
    [v7 sendActions:v8];

    if (*(void *)(a1 + 48) == 1LL)
    {
      [*(id *)(*(void *)(a1 + 32) + 56) invalidate];
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void **)(v9 + 56);
      *(void *)(v9 + 56) = 0LL;

      id v11 = WeakRetained[4];
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _currentUserID]);
      [v11 didAccessControlCenterForUserID:v12];
    }
  }
}

void sub_100134A50( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100134A74(uint64_t a1, uint64_t a2, void *a3)
{
  double v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained dismissSystemMenuAnimated:1];

  v4[2](v4, 1LL);
}

void sub_100135068( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

PBSystemUIServiceViewController *sub_100135090(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  double v3 = (void *)objc_claimAutoreleasedReturnValue([v2 mainWorkspace]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 handle]);

  id v5 = -[PBSystemUIServiceViewController initWithWorkspace:application:conduit:delegate:]( objc_alloc(&OBJC_CLASS___PBSystemUIServiceViewController),  "initWithWorkspace:application:conduit:delegate:",  v4,  *(void *)(a1 + 32),  *(void *)(*(void *)(a1 + 40) + 88LL));
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  id v7 = WeakRetained;
  if (WeakRetained) {
    objc_storeWeak(WeakRetained + 12, v5);
  }

  return v5;
}

void sub_1001354F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100135510(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _presentHintBulletinIfAppropriate];
}

uint64_t sub_1001356C8(unint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](&OBJC_CLASS___UIApplication, "sharedApplication"));
  id v3 = [v2 userInterfaceLayoutDirection];

  if (v3 == (id)1)
  {
    if (a1 >= 4) {
      return 1LL;
    }
    else {
      return qword_1002EC7B0[a1];
    }
  }

  else if (a1 < 3)
  {
    return a1 + 1;
  }

  else
  {
    return 0LL;
  }

uint64_t sub_10013573C()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](&OBJC_CLASS___UIApplication, "sharedApplication"));
  id v1 = [v0 userInterfaceLayoutDirection];

  if (v1 == (id)1) {
    return 2LL;
  }
  else {
    return 3LL;
  }
}

id sub_10013590C(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1001359A4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100470FF8;
  qword_100470FF8 = (uint64_t)v1;
}

void sub_100135AA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  id v7 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  id v8 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v9 = NSStringFromClass(v8);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v7,  "initWithName:layoutLevel:presentationHandler:delegate:",  v10,  3LL,  v39,  *(void *)(a1 + 32));
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void **)(v12 + 24);
  *(void *)(v12 + 24) = v11;

  [*(id *)(*(void *)(a1 + 32) + 24) addObserver:*(void *)(a1 + 32) forKeyPath:@"hasActivePresentation" options:5 context:off_10046C168];
  uint64_t v15 = objc_opt_self(&OBJC_CLASS___PBAirPlayManager, v14);
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v16]);

  [v17 addObserver:*(void *)(a1 + 32) forKeyPath:@"presenting" options:0 context:off_10046C170];
  uint64_t v19 = objc_opt_self(&OBJC_CLASS___PBSiriManager, v18);
  id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  char v21 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v20]);

  [v21 addObserver:*(void *)(a1 + 32) forKeyPath:@"presenting" options:0 context:off_10046C178];
  uint64_t v23 = objc_opt_self(&OBJC_CLASS___PBSceneManager, v22);
  __int16 v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v24]);

  [v25 addObserver:*(void *)(a1 + 32)];
  uint64_t v27 = objc_opt_self(&OBJC_CLASS___PBMediaRemoteObserver, v26);
  int v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
  id v29 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v28]);

  [v29 addObserver:*(void *)(a1 + 32) forKeyPath:@"nowPlayingProcessPID" options:0 context:off_10046C180];
  __int16 v30 = *(void **)(a1 + 32);
  uint64_t v32 = objc_opt_self(&OBJC_CLASS___PBAirPlayManager, v31);
  __int128 v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
  __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v33]);
  uint64_t v36 = objc_opt_self(&OBJC_CLASS___PBProcessManager, v35);
  __int128 v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
  __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v37]);

  [v30 _updateNowPlayingAppFocusedUsingMediaRemoteObserver:v29 siriManager:v21 airPlayManager:v34 sceneManager:v25 processManager:v38];
}

id sub_100136900(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_dismissWithCompletion:");
}

uint64_t sub_100136D78(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100136E8C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

uint64_t sub_100136EA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setAcceptsEventFocus:0];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1001372FC(id a1, BOOL a2, ASDPurchaseResponse *a3, NSError *a4)
{
  BOOL v5 = a2;
  id v6 = a3;
  id v7 = a4;
  id v8 = sub_100084860();
  uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (!v10) {
      goto LABEL_7;
    }
    *(_WORD *)__int128 buf = 0;
    id v11 = "installAppWithMetadata (service) finished with good result.";
  }

  else
  {
    if (!v10) {
      goto LABEL_7;
    }
    *(_WORD *)__int128 buf = 0;
    id v11 = "installAppWithMetadata (service) finished with bad result.";
  }

  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v11, buf, 2u);
LABEL_7:

  if (v6)
  {
    __int16 v48 = v7;
    id v12 = sub_100084860();
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138412290;
      id v64 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "installAppWithMetadata (service) got response %@",  buf,  0xCu);
    }

    __int128 v61 = 0u;
    __int128 v62 = 0u;
    __int128 v59 = 0u;
    __int128 v60 = 0u;
    __int128 v49 = v6;
    id obj = (id)objc_claimAutoreleasedReturnValue(-[ASDPurchaseResponse items](v6, "items"));
    id v52 = [obj countByEnumeratingWithState:&v59 objects:v68 count:16];
    if (v52)
    {
      uint64_t v51 = *(void *)v60;
      do
      {
        uint64_t v14 = 0LL;
        do
        {
          if (*(void *)v60 != v51) {
            objc_enumerationMutation(obj);
          }
          uint64_t v15 = *(void **)(*((void *)&v59 + 1) + 8 * v14);
          id v16 = sub_100084860();
          uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)__int128 buf = 138412290;
            id v64 = v15;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "installAppWithMetadata (service) response had item %@",  buf,  0xCu);
          }

          unsigned int v18 = [v15 success];
          id v19 = sub_100084860();
          id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
          BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);
          uint64_t v53 = v14;
          if (v18)
          {
            if (!v21) {
              goto LABEL_23;
            }
            *(_WORD *)__int128 buf = 0;
            uint64_t v22 = v20;
            uint64_t v23 = "installAppWithMetadata (service) response item was successful.";
          }

          else
          {
            if (!v21) {
              goto LABEL_23;
            }
            *(_WORD *)__int128 buf = 0;
            uint64_t v22 = v20;
            uint64_t v23 = "installAppWithMetadata (service) response item was *not* successful.";
          }

          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, v23, buf, 2u);
LABEL_23:

          __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v15 error]);
          if (v54)
          {
            id v24 = sub_100084860();
            uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)__int128 buf = 138412290;
              id v64 = v54;
              _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "installAppWithMetadata (service) response item had error %@",  buf,  0xCu);
            }
          }

          __int128 v57 = 0u;
          __int128 v58 = 0u;
          __int128 v55 = 0u;
          __int128 v56 = 0u;
          uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "results", v48));
          id v27 = [v26 countByEnumeratingWithState:&v55 objects:v67 count:16];
          if (v27)
          {
            id v28 = v27;
            uint64_t v29 = *(void *)v56;
            do
            {
              for (i = 0LL; i != v28; i = (char *)i + 1)
              {
                if (*(void *)v56 != v29) {
                  objc_enumerationMutation(v26);
                }
                uint64_t v31 = *(void **)(*((void *)&v55 + 1) + 8LL * (void)i);
                id v32 = sub_100084860();
                __int128 v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
                if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
                {
                  __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v31 persistentID]);
                  uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v31 bundleID]);
                  *(_DWORD *)__int128 buf = 138412546;
                  id v64 = v34;
                  __int16 v65 = 2112;
                  __int128 v66 = v35;
                  _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "installAppWithMetadata (service) response item has result for job %@ bundle ID %@",  buf,  0x16u);
                }

                id v36 = [v31 status];
                if (v36 == (id)2)
                {
                  id v42 = sub_100084860();
                  __int128 v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
                  if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)__int128 buf = 0;
                    __int128 v39 = v38;
                    __int128 v40 = "installAppWithMetadata (service) response item result has success status.";
                    goto LABEL_43;
                  }
                }

                else if (v36 == (id)1)
                {
                  id v41 = sub_100084860();
                  __int128 v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v41);
                  if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)__int128 buf = 0;
                    __int128 v39 = v38;
                    __int128 v40 = "installAppWithMetadata (service) response item result has failed status.";
                    goto LABEL_43;
                  }
                }

                else
                {
                  if (v36) {
                    goto LABEL_45;
                  }
                  id v37 = sub_100084860();
                  __int128 v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
                  if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)__int128 buf = 0;
                    __int128 v39 = v38;
                    __int128 v40 = "installAppWithMetadata (service) response item result has duplicate status.";
LABEL_43:
                    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, v40, buf, 2u);
                  }
                }

LABEL_45:
                __int128 v43 = (void *)objc_claimAutoreleasedReturnValue([v31 error]);
                if (v43)
                {
                  id v44 = sub_100084860();
                  uint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
                  if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)__int128 buf = 138412290;
                    id v64 = v54;
                    _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "installAppWithMetadata (service) response item had error %@",  buf,  0xCu);
                  }
                }
              }

              id v28 = [v26 countByEnumeratingWithState:&v55 objects:v67 count:16];
            }

            while (v28);
          }

          uint64_t v14 = v53 + 1;
        }

        while ((id)(v53 + 1) != v52);
        id v52 = [obj countByEnumeratingWithState:&v59 objects:v68 count:16];
      }

      while (v52);
    }

    id v7 = v48;
    id v6 = v49;
  }

  if (v7)
  {
    id v46 = sub_100084860();
    __int128 v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138412290;
      id v64 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "installAppWithMetadata (service) got error %@",  buf,  0xCu);
    }
  }
}

id sub_100137AA4(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v1 vendorName]);
  if (!v2) {
    goto LABEL_7;
  }
  id v3 = (void *)v2;
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v1 bundleIdentifier]);
  if (!v4)
  {

    goto LABEL_7;
  }

  BOOL v5 = (void *)v4;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v1 buyParameters]);

  if (!v6)
  {
LABEL_7:
    id v13 = sub_100084860();
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 138412290;
      id v16 = v1;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "installAppWithMetadata (service) didn't have vendorName, bundleID, or buyParams: %@",  (uint8_t *)&v15,  0xCu);
    }

    id v7 = 0LL;
    goto LABEL_10;
  }

  id v7 = objc_alloc_init(&OBJC_CLASS___ASDPurchase);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v1 vendorName]);
  [v7 setVendorName:v8];

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v1 bundleIdentifier]);
  [v7 setBundleID:v9];

  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v1 buyParameters]);
  [v7 setBuyParameters:v10];

  objc_msgSend(v7, "setIsDSIDLess:", objc_msgSend(v1, "isDSIDLess"));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v1 bagKey]);

  if (v11)
  {
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v1 bagKey]);
    [v7 setBagKey:v12];
LABEL_10:
  }

  return v7;
}

void sub_1001380BC(_Unwind_Exception *a1)
{
}

id sub_1001380FC(uint64_t a1, void *a2)
{
  ClipBoundingBoCGFloat x = CGContextGetClipBoundingBox((CGContextRef)[a2 CGContext]);
  return objc_msgSend( *(id *)(a1 + 32),  "drawInRect:",  ClipBoundingBox.origin.x,  ClipBoundingBox.origin.y,  ClipBoundingBox.size.width,  ClipBoundingBox.size.height);
}

id sub_1001382EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reportLatestIssueDataWithRemainingAttempts:*(void *)(a1 + 40) - 1];
}

void sub_100138618(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](&OBJC_CLASS___LSApplicationWorkspace, "defaultWorkspace"));
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = 0LL;
  [v2 openSensitiveURL:v3 withOptions:0 error:&v4];
}

LABEL_35:
      uint64_t v14 = (char *)v14 + 1;
    }

    while (v56 != v14);
    __int128 v33 = [v12 countByEnumeratingWithState:&v58 objects:v79 count:16];
    __int128 v56 = v33;
  }

  while (v33);
LABEL_45:

  if (v51)
  {
    __int128 v34 = v51;

    id v6 = v34;
    uint64_t v4 = v47;
    id v7 = v45;
    goto LABEL_52;
  }

  id v6 = v46;
  uint64_t v4 = v47;
  id v7 = v45;
LABEL_49:
  uint64_t v35 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
  if (v35) {
    sub_100285074(v35, v36, v37, v38, v39, v40, v41, v42);
  }
  __int128 v34 = 0LL;
LABEL_52:

LABEL_53:
  return v6;
}

void sub_100138E4C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_100138E64(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100138E74(uint64_t a1)
{
}

void sub_100138E8C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9 || [v8 statusCode] != (id)200)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1002852C8((uint64_t)v9, (uint64_t)v8, v20, v21, v22, v23, v24, v25);
    }
  }

  else if (*(_BYTE *)(a1 + 48))
  {
    BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    uint64_t v11 = *(void *)(a1 + 32);
    id v29 = 0LL;
    [v10 removeItemAtURL:v11 error:&v29];
    id v12 = v29;

    if (v12)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10028524C(a1 + 32, v13, v14, v15, v16, v17, v18, v19);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
    {
      uint64_t v28 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138412290;
      uint64_t v31 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_INFO,  "Successfully removed sysdiagnose at %@",  buf,  0xCu);
    }
  }

  uint64_t v26 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v27 = *(void **)(v26 + 40);
  *(void *)(v26 + 40) = 0LL;
}

float *sub_100139020(float *result, uint64_t a2, void *a3, float a4)
{
  *uint64_t result = a4;
  *a3 = a2;
  return result;
}

uint64_t sub_10013920C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100139228(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_100139298;
  v3[3] = &unk_1003D0E78;
  id v4 = *(id *)(a1 + 32);
  [a2 updateSettingsWithBlock:v3];
}

uint64_t sub_100139298(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_100139788(uint64_t a1, void *a2)
{
  return [a2 setEnabled:*(unsigned __int8 *)(a1 + 32)];
}

void sub_100139850(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIButton buttonWithType:](&OBJC_CLASS___UIButton, "buttonWithType:", 1LL));
  [v4 setTitle:v3 forState:0];

  [*(id *)(a1 + 32) addObject:v4];
}

id sub_10013B438(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_10013B49C(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___PBWallpaperManager);
  uint64_t v2 = (void *)qword_100471008;
  qword_100471008 = (uint64_t)v1;
}

void sub_10013B57C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  id v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  id v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  BOOL v10 = NSStringFromClass(v9);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  0LL,  v7,  0LL);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void **)(v13 + 8);
  *(void *)(v13 + _Block_object_dispose(va, 8) = v12;

  uint64_t v16 = objc_opt_self(&OBJC_CLASS___PBSnapshotService, v15);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v17]);

  [v18 setupWallpaper];
}

void sub_10013C218(id a1)
{
  if (!qword_100471020)
  {
    id v1 = sub_1000836CC();
    uint64_t v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "MON: Initializing legacy update monitor.",  v5,  2u);
    }

    id v3 = objc_alloc_init(&OBJC_CLASS___PBOSSoftwareUpdateMonitor);
    uint64_t v4 = (void *)qword_100471020;
    qword_100471020 = (uint64_t)v3;
  }

LABEL_46:
}

      uint64_t result = swift_bridgeObjectRelease(v49);
      uint64_t v5 = a3;
      uint64_t v4 = v72;
    }
  }

  __int128 v47 = v45 + 3;
  if (v47 >= v69) {
    goto LABEL_79;
  }
  id v46 = *(void *)(v66 + 8 * v47);
  if (v46)
  {
    __int128 v38 = v47;
    goto LABEL_62;
  }

  while (1)
  {
    __int128 v38 = v47 + 1;
    if (__OFADD__(v47, 1LL)) {
      break;
    }
    if (v38 >= v69) {
      goto LABEL_79;
    }
    id v46 = *(void *)(v66 + 8 * v38);
    ++v47;
    if (v46) {
      goto LABEL_62;
    }
  }

void sub_10013CDE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_10013CE04(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v9 = sub_1000836CC();
  BOOL v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained uuid]);
    uint64_t v13 = *(void *)(a1 + 64);
    *(_DWORD *)__int128 buf = 138544130;
    *(void *)&uint8_t buf[4] = v11;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v12;
    *(_WORD *)&buf[22] = 1024;
    *(_DWORD *)&_BYTE buf[24] = v13;
    *(_WORD *)&buf[28] = 2114;
    *(void *)&buf[30] = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "MON: Monitored stage %{public}@ for %{public}@ retryDelay: %ds [%{public}@]",  buf,  0x26u);
  }

  if (!v6 || v7 || !WeakRetained)
  {
    __int128 v60 = 0u;
    memset(v61, 0, sizeof(v61));
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    __int128 v56 = 0u;
    __int128 v57 = 0u;
    __int128 v54 = 0u;
    __int128 v55 = 0u;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    memset(buf, 0, sizeof(buf));
    id v16 = sub_1000836CC();
    uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      uint64_t v18 = 3LL;
    }
    else {
      uint64_t v18 = 2LL;
    }
    uint64_t v19 = *(void *)(a1 + 32);
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained uuid]);
    int v41 = 138544130;
    uint64_t v42 = v19;
    __int16 v43 = 2114;
    id v44 = v20;
    __int16 v45 = 2114;
    id v46 = v6;
    __int16 v47 = 2114;
    id v48 = v7;
    _os_log_send_and_compose_impl( v18,  0LL,  buf,  250LL,  &_mh_execute_header,  v17,  16LL,  "MON: Failed to note stage %{public}@ for UUID %{public}@ result: %{public}@ [%{public}@].",  &v41,  42);
    goto LABEL_19;
  }

  uint64_t v14 = (char *)[v6 statusCode];
  if (v14 == (char *)404 || (unint64_t)(v14 - 500) < 0x64)
  {
    if (*(void *)(a1 + 64) <= qword_10046C3F8)
    {
      id v29 = sub_1000836CC();
      __int16 v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v31 = *(void *)(a1 + 32);
        id v32 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained uuid]);
        int v33 = 2 * *(_DWORD *)(a1 + 64);
        *(_DWORD *)__int128 buf = 138543874;
        *(void *)&uint8_t buf[4] = v31;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v32;
        *(_WORD *)&buf[22] = 1024;
        *(_DWORD *)&_BYTE buf[24] = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "MON: Scheduling re-monitor of stage %{public}@ for %{public}@ in %ds",  buf,  0x1Cu);
      }

      dispatch_time_t v34 = dispatch_time(0LL, 1000000000LL * *(void *)(a1 + 64));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10013D2AC;
      block[3] = &unk_1003D1468;
      void block[4] = WeakRetained;
      id v38 = *(id *)(a1 + 32);
      id v35 = *(id *)(a1 + 48);
      uint64_t v36 = *(void *)(a1 + 64);
      id v39 = v35;
      uint64_t v40 = v36;
      dispatch_after(v34, &_dispatch_main_q, block);

      goto LABEL_29;
    }

    __int128 v60 = 0u;
    memset(v61, 0, sizeof(v61));
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    __int128 v56 = 0u;
    __int128 v57 = 0u;
    __int128 v54 = 0u;
    __int128 v55 = 0u;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    memset(buf, 0, sizeof(buf));
    id v22 = sub_1000836CC();
    uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      uint64_t v23 = 3LL;
    }
    else {
      uint64_t v23 = 2LL;
    }
    uint64_t v24 = *(void *)(a1 + 32);
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained uuid]);
    int v41 = 138544130;
    uint64_t v42 = v24;
    __int16 v43 = 2114;
    id v44 = v20;
    __int16 v45 = 2114;
    id v46 = v6;
    __int16 v47 = 2114;
    id v48 = 0LL;
    _os_log_send_and_compose_impl( v23,  0LL,  buf,  250LL,  &_mh_execute_header,  v17,  16LL,  "MON: Failed to note stage %{public}@ for UUID %{public}@ result: %{public}@ [%{public}@].",  &v41,  42);
LABEL_19:
    uint64_t v25 = v21;

    id v26 = sub_1000836CC();
    id v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
    _os_log_message_persist_impl(v25, 16LL, v27);

    if (v25 != buf) {
      free(v25);
    }
    goto LABEL_29;
  }

  if ([WeakRetained _isCancelStage:*(void *)(a1 + 32)])
  {
    uint64_t v15 = off_10046C3C0[0];
LABEL_23:
    uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) uuid]);
    [WeakRetained _noteStage:v15 forUUID:v28];

    goto LABEL_29;
  }

  if ([WeakRetained _isFailedStage:*(void *)(a1 + 32)])
  {
    uint64_t v15 = off_10046C3B8[0];
    goto LABEL_23;
  }

id sub_10013D2AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _issueRequestForStage:*(void *)(a1 + 40) withData:*(void *)(a1 + 48) retryDelay:2 * *(void *)(a1 + 56)];
}

void sub_10013DE34(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v17 = 0LL;
  uint64_t v6 = CacheDeleteCopyAvailableSpaceForVolume(@"/private/var", a2, &v17);
  id v7 = (void *)v6;
  id v8 = v17;
  if (v17) {
    BOOL v9 = 1;
  }
  else {
    BOOL v9 = v6 == 0;
  }
  if (v9)
  {
    memset(v22, 0, 250);
    id v10 = sub_1000836CC();
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      uint64_t v12 = 3LL;
    }
    else {
      uint64_t v12 = 2LL;
    }
    int v18 = 138543618;
    id v19 = v5;
    __int16 v20 = 2114;
    uint64_t v21 = v8;
    _os_log_send_and_compose_impl( v12,  0LL,  v22,  250LL,  &_mh_execute_header,  v11,  16LL,  "Failed to collect CacheDelete %{public}@ space [%{public}@]",  &v18,  22);
    uint64_t v14 = v13;

    id v15 = sub_1000836CC();
    id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    _os_log_message_persist_impl(v14, 16LL, v16);

    if (v14 != v22) {
      free(v14);
    }
  }

  else
  {
    [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:v5];
  }
}

void sub_10013EAF8(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 24LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) iconImage]);
  [v2 setImage:v3];

  uint64_t v4 = *(void **)(a1 + 40);
  id v5 = *(void **)(*(void *)(a1 + 32) + 24LL);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 displayName]);
  [v5 setTitle:v6];
}

id sub_10013EF28(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_10013F168(id a1)
{
  id v1 = -[FBSceneWorkspace initWithIdentifier:]( objc_alloc(&OBJC_CLASS___FBSceneWorkspace),  "initWithIdentifier:",  @"SystemUI");
  uint64_t v2 = (void *)qword_100471030;
  qword_100471030 = (uint64_t)v1;
}

void sub_10013F6A0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleIdentifier]);
  [v4 setIdentifier:v5];

  [v4 setClientIdentity:*(void *)(a1 + 32)];
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBSystemUIServiceSceneSpecification specification]( &OBJC_CLASS___PBSystemUIServiceSceneSpecification,  "specification"));
  [v4 setSpecification:v6];
}

void sub_10013F724(uint64_t a1, void *a2)
{
  id v5 = _NSConcreteStackBlock;
  uint64_t v6 = 3221225472LL;
  id v7 = sub_10013F7C4;
  id v8 = &unk_1003D0D70;
  id v9 = *(id *)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  id v4 = a2;
  [v4 updateSettingsWithBlock:&v5];
  objc_msgSend(v4, "updateClientSettingsWithBlock:", &stru_1003D8D10, v5, v6, v7, v8);
}

void sub_10013F7C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[FBDisplayManager mainConfiguration](&OBJC_CLASS___FBDisplayManager, "mainConfiguration"));
  [v3 setDisplayConfiguration:v4];

  [*(id *)(a1 + 32) bounds];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  if (sub_1001C9E00())
  {
    [*(id *)(a1 + 32) fullDisplayBounds];
    double v6 = v13;
    double v8 = v14;
    double v10 = v15;
    double v12 = v16;
  }

  objc_msgSend(v3, "setFrame:", v6, v8, v10, v12);
  [v3 setLevel:12.0];
  [v3 setForeground:1];
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) traitCollection]);
  objc_msgSend(v3, "setUserInterfaceStyle:", objc_msgSend(v17, "userInterfaceStyle"));
}

void sub_10013F8B4(id a1, FBSMutableSceneClientSettings *a2)
{
}

void sub_10013F988(id a1, NSString *a2, PBSystemGestureHandle *a3, BOOL *a4)
{
}

id sub_10013FBE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateSystemGestures];
}

void sub_10013FC90(id a1, FBSMutableSceneParameters *a2)
{
}

void sub_10013FCB0(id a1, FBSMutableSceneClientSettings *a2)
{
  uint64_t v2 = a2;
  -[FBSMutableSceneClientSettings setRequestsEventFocus:](v2, "setRequestsEventFocus:", 0LL);
  -[FBSMutableSceneClientSettings setExternalGestures:](v2, "setExternalGestures:", 0LL);
}

void sub_10013FE20(id a1, void *a2)
{
  *(_BYTE *)a2 = 1;
}

void sub_10013FE2C(id a1, void *a2)
{
  *((_BYTE *)a2 + 1) = 1;
}

void sub_10013FE38(id a1, void *a2)
{
  *((_BYTE *)a2 + 2) = 1;
}

void sub_100140218(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = a2;
  [v4 setUserInterfaceStyle:v3];
  [v4 setSystemState:*(void *)(a1 + 32)];
}

id sub_1001403A0(uint64_t a1, void *a2)
{
  return [a2 setSystemState:*(void *)(a1 + 32)];
}

id sub_1001404B4(uint64_t a1, void *a2)
{
  return [a2 setUserInterfaceStyle:*(void *)(a1 + 32)];
}

uint64_t sub_1001405B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001405D0(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_100140640;
  v3[3] = &unk_1003D0E78;
  id v4 = *(id *)(a1 + 32);
  [a2 updateSettingsWithBlock:v3];
}

uint64_t sub_100140640(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100140A68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, id a33)
{
}

void sub_100140AA4(uint64_t a1, void *a2)
{
  uint64_t v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _handleSystemGestureAction:v4 forExternalGesture:*(void *)(a1 + 32)];
}

void sub_100140AF4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  else {
    [v5 relinquish];
  }
}

void sub_100140CD8(id a1)
{
  v3[0] = PBSystemUIServiceGestureMenuSingleTap;
  v3[1] = PBSystemUIServiceGestureTVSingleTap;
  v4[0] = &off_1003FDC50;
  v4[1] = &off_1003FDC68;
  void v3[2] = PBSystemUIServiceGestureGameControllerHome;
  void v4[2] = &off_1003FDC80;
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL));
  uint64_t v2 = (void *)qword_100471040;
  qword_100471040 = v1;
}

void sub_100141048(_Unwind_Exception *a1)
{
}

void sub_100141064(uint64_t a1, uint64_t a2)
{
  if ([*(id *)(a1 + 32) canSendResponse])
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[BSActionResponse pb_systemUIServiceCameraHandoffActionResponseWithFinished:]( &OBJC_CLASS___BSActionResponse,  "pb_systemUIServiceCameraHandoffActionResponseWithFinished:",  a2));
    [*(id *)(a1 + 32) sendResponse:v4];
  }

  else
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PBSystemUIServiceDismissMenuOptions optionsWithAnimated:]( &OBJC_CLASS___PBSystemUIServiceDismissMenuOptions,  "optionsWithAnimated:",  0LL));
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[PBSystemUIServiceDismissMenuAction actionWithOptions:]( &OBJC_CLASS___PBSystemUIServiceDismissMenuAction,  "actionWithOptions:",  v4));
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    double v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v5));
    [WeakRetained sendActions:v7];
  }
}

id sub_100141CC0(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 8LL);
}

id sub_100141CDC(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 16LL);
}

id sub_100141CF8(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 24LL);
}

void sub_1001420CC(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  [v2 addObserver:*(void *)(a1 + 32)];
}

void sub_1001422B4(uint64_t a1)
{
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 32LL);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v9 + 1) + 8LL * (void)i);
        double v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 32), "objectForKey:", v7, (void)v9));
        if (v8) {
          [*(id *)(a1 + 40) addObject:v8];
        }
        [*(id *)(a1 + 32) _queueCallHandlersForRequest:v7 withReason:4 result:0 error:0];
      }

      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v4);
  }
}

void sub_1001423EC(uint64_t a1)
{
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v12;
    do
    {
      uint64_t v5 = 0LL;
      do
      {
        if (*(void *)v12 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = *(void *)(*((void *)&v11 + 1) + 8LL * (void)v5);
        id v7 = sub_1000844A0();
        double v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)__int128 v10 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "invalidate (service) dismissViewController",  v10,  2u);
        }

        __int128 v9 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
        [v9 dismissDialogWithContext:v6 options:0 completion:0];

        uint64_t v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }

    while (v3);
  }
}

void sub_100142B64( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, char a39)
{
}

uint64_t sub_100142BDC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  0LL,  0LL,  *(void *)(a1 + 32));
}

uint64_t sub_100142C04(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100142C14(uint64_t a1)
{
}

void sub_100142C2C(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _handleCreatedRemoteViewController:v4 forRequest:*(void *)(a1 + 32)];
}

void sub_100142C7C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKey:*(void *)(a1 + 40)]);

  if (v2)
  {
    uint64_t v3 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  401LL,  0LL));
    uint64_t v4 = *(void *)(*(void *)(a1 + 72) + 8LL);
    uint64_t v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;
  }

  else
  {
    [*(id *)(*(void *)(a1 + 32) + 32) setObject:*(void *)(a1 + 48) forKey:*(void *)(a1 + 40)];
    uint64_t v6 = *(void **)(*(void *)(a1 + 32) + 40LL);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100142D94;
    v9[3] = &unk_1003D8F90;
    id v10 = *(id *)(a1 + 56);
    id v7 = [v9 copy];
    id v8 = objc_retainBlock(v7);
    [v6 setObject:v8 forKey:*(void *)(a1 + 40)];

    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL), *(id *)(a1 + 48));
    uint64_t v5 = v10;
  }
}

void sub_100142D94(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = sub_1000844A0();
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 134217984;
    uint64_t v13 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "presentUI (service) completed with reason %lu",  (uint8_t *)&v12,  0xCu);
  }

  uint64_t v11 = *(void *)(a1 + 32);
  if (v11) {
    (*(void (**)(uint64_t, uint64_t, id, id))(v11 + 16))(v11, a2, v7, v8);
  }
}

uint64_t sub_100142E80(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  0LL,  0LL,  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
}

void sub_100142EB0(uint64_t a1)
{
  id v2 = sub_1000844A0();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138412290;
    uint64_t v12 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "presentUI (service) present dialog with request %@",  buf,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) options]);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_100143028;
  v8[3] = &unk_1003D8FE0;
  objc_copyWeak(&v10, (id *)(a1 + 48));
  id v9 = *(id *)(a1 + 32);
  [v5 presentDialogWithContext:v6 options:v7 completion:v8];

  objc_destroyWeak(&v10);
}

void sub_10014300C(_Unwind_Exception *a1)
{
}

void sub_100143028(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = v4;
  if (v4)
  {
    uint64_t v6 = PineBoardServicesErrorDomain;
    NSErrorUserInfoKey v14 = NSUnderlyingErrorKey;
    id v15 = v4;
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v15,  &v14,  1LL));
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v6,  402LL,  v7));

    id v9 = sub_1000844A0();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 138412290;
      uint64_t v13 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "presentUI (service) failed - presentation error: %@",  (uint8_t *)&v12,  0xCu);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _queueCallHandlersForRequest:*(void *)(a1 + 32) withReason:0 result:0 error:v8];
  }
}

void sub_100143364(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKey:*(void *)(a1 + 40)]);

  if (v2)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v3 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) objectForKey:*(void *)(a1 + 40)]);
      if (!v3)
      {
        uint64_t v3 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
        [*(id *)(*(void *)(a1 + 32) + 56) setObject:v3 forKey:*(void *)(a1 + 40)];
      }

      id v4 = -[_PBUserPresentationMessagePair initWithMessage:reply:]( objc_alloc(&OBJC_CLASS____PBUserPresentationMessagePair),  "initWithMessage:reply:",  *(void *)(a1 + 48),  *(void *)(a1 + 56));
      -[NSMutableArray addObject:](v3, "addObject:", v4);
    }

    [*(id *)(a1 + 32) _queueSendPendingMessagesForRequest:*(void *)(a1 + 40)];
  }

  else
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) = 1;
  }

void sub_10014342C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  403LL,  0LL));
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100143654( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

id sub_100143678(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKey:*(void *)(a1 + 40)]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return [*(id *)(a1 + 32) _queueCallHandlersForRequest:*(void *)(a1 + 40) withReason:3 result:0 error:0];
}

void sub_1001436CC(uint64_t a1)
{
  id v2 = sub_1000844A0();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
    sub_100286088(v3);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 options]);
  [v4 dismissDialogWithContext:v6 options:v7 completion:0];
}

void sub_100143B48(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[4] objectForKey:*(void *)(a1 + 32)]);

    if (v4)
    {
      [v3[6] setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 32)];
      [v3 _queueSendPendingMessagesForRequest:*(void *)(a1 + 32)];
    }
  }
}

void sub_100143CC8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    id v4 = WeakRetained[4];
    id v5 = [v4 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v16;
      while (2)
      {
        for (i = 0LL; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v16 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void *)(*((void *)&v15 + 1) + 8LL * (void)i);
          id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3[4], "objectForKey:", v9, (void)v15));
          uint64_t v11 = v10;
          if (v10 == *(void **)(a1 + 32))
          {
            uint64_t v12 = *(void *)(a1 + 56);
            uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) result]);
            NSErrorUserInfoKey v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) error]);
            [v3 _queueCallHandlersForRequest:v9 withReason:v12 result:v13 error:v14];

            goto LABEL_12;
          }
        }

        id v6 = [v4 countByEnumeratingWithState:&v15 objects:v19 count:16];
        if (v6) {
          continue;
        }
        break;
      }
    }

id sub_100143FEC(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_100144014(uint64_t a1)
{
}

void sub_10014402C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 64) objectForKey:*(void *)(a1 + 40)]);
  id v3 = objc_retainBlock(*(id *)(a1 + 48));
  unsigned int v4 = [v2 containsObject:v3];

  if (v4)
  {
    id v5 = objc_retainBlock(*(id *)(a1 + 48));
    uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8LL);
    uint64_t v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v8 = objc_retainBlock(*(id *)(a1 + 48));
    [v2 removeObject:v8];
  }

  if (![v2 count]) {
    [*(id *)(*(void *)(a1 + 32) + 64) removeObjectForKey:*(void *)(a1 + 40)];
  }
}

uint64_t sub_1001440DC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(*(void *)(*(void *)(a1 + 48) + 8LL)
                                                                               + 40LL)
                                                                   + 16LL))( *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL),  *(unsigned __int8 *)(a1 + 56),  *(void *)(a1 + 32),  *(void *)(a1 + 40));
}

void sub_1001443C4(_Unwind_Exception *a1)
{
}

void sub_1001443E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    id obj = *(id *)(a1 + 32);
    id v3 = [obj countByEnumeratingWithState:&v16 objects:v22 count:16];
    if (v3)
    {
      uint64_t v4 = *(void *)v17;
      do
      {
        for (i = 0LL; i != v3; i = (char *)i + 1)
        {
          if (*(void *)v17 != v4) {
            objc_enumerationMutation(obj);
          }
          uint64_t v6 = *(void **)(*((void *)&v16 + 1) + 8LL * (void)i);
          id v7 = sub_1000844A0();
          id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
          if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v9 = *(void *)(a1 + 40);
            *(_DWORD *)__int128 buf = 138412290;
            uint64_t v21 = v9;
            _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Sending pending message to %@",  buf,  0xCu);
          }

          objc_initWeak((id *)buf, WeakRetained);
          id v10 = *(void **)(a1 + 40);
          uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 message]);
          v13[0] = _NSConcreteStackBlock;
          v13[1] = 3221225472LL;
          _DWORD v13[2] = sub_100144624;
          void v13[3] = &unk_1003D90D0;
          objc_copyWeak(&v15, (id *)buf);
          void v13[4] = v6;
          id v14 = *(id *)(a1 + 48);
          [v10 messageViewServiceWithMessage:v11 reply:v13];

          objc_destroyWeak(&v15);
          objc_destroyWeak((id *)buf);
        }

        id v3 = [obj countByEnumeratingWithState:&v16 objects:v22 count:16];
      }

      while (v3);
    }
  }
}

void sub_1001445F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, id location)
{
}

void sub_100144624(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = (id *)(a1 + 48);
  id v8 = a4;
  id v9 = a3;
  id WeakRetained = objc_loadWeakRetained(v7);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) reply]);
  [WeakRetained _callMessageReply:v11 forRequest:*(void *)(a1 + 40) success:a2 result:v9 error:v8];
}

uint64_t sub_1001448D4(uint64_t a1)
{
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v20 objects:v25 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v21;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v21 != v5) {
          objc_enumerationMutation(v2);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v20 + 1) + 8LL * (void)i) + 16LL))();
      }

      id v4 = [v2 countByEnumeratingWithState:&v20 objects:v25 count:16];
    }

    while (v4);
  }

  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  id v7 = *(id *)(a1 + 40);
  id v8 = [v7 countByEnumeratingWithState:&v16 objects:v24 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v17;
    do
    {
      for (j = 0LL; j != v9; j = (char *)j + 1)
      {
        if (*(void *)v17 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void **)(*((void *)&v16 + 1) + 8LL * (void)j);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "reply", (void)v16));

        if (v13)
        {
          id v14 = (void (**)(void, void, void, void))objc_claimAutoreleasedReturnValue([v12 reply]);
          v14[2](v14, 0LL, 0LL, 0LL);
        }
      }

      id v9 = [v7 countByEnumeratingWithState:&v16 objects:v24 count:16];
    }

    while (v9);
  }

  uint64_t result = *(void *)(a1 + 64);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void, void))(result + 16))( result,  *(void *)(a1 + 72),  *(void *)(a1 + 48),  *(void *)(a1 + 56));
  }
  return result;
}

void sub_100144E30( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100144E4C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100084950();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = 136315650;
    id v15 = "-[_PBUserPresentationUIProvider prepareUIForSystemOverlayPresentationWithCompletion:]_block_invoke";
    __int16 v16 = 1024;
    BOOL v17 = v5 != 0LL;
    __int16 v18 = 2114;
    id v19 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%s - Requested dialog view service successfully?: %d, error: %{public}@",  (uint8_t *)&v14,  0x1Cu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v10 = WeakRetained;
  if (v5 && WeakRetained)
  {
    uint64_t v11 = -[PBViewServiceContentPresentingViewController initWithRemoteViewController:supportsInterruption:]( objc_alloc(&OBJC_CLASS___PBViewServiceContentPresentingViewController),  "initWithRemoteViewController:supportsInterruption:",  v5,  1LL);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 prepareHandler]);

    if (v12) {
      (*(void (**)(void))(v10[3] + 16LL))();
    }
  }

  else
  {
    uint64_t v13 = *(void *)(a1 + 32);
    if (v13) {
      (*(void (**)(uint64_t, void, id))(v13 + 16))(v13, 0LL, v6);
    }
  }
}

void sub_1001456E0(_Unwind_Exception *a1)
{
}

void sub_1001456FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    if (v3) {
      [WeakRetained[3] setObject:v3 forKey:*(void *)(a1 + 32)];
    }
    [v5 _startNextProfilePictureRequest];
  }
}

void sub_1001458B4(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___PBUpsellManager);
  uint64_t v2 = (void *)qword_100471050;
  qword_100471050 = (uint64_t)v1;
}

void sub_100145EA4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100145EC4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained _isHeadBoardAppFocused])
  {
    [WeakRetained _presentOdeonUpsellIfNeeded];
    [WeakRetained _presentRMVUpsellIfNeeded];
  }

  else if (WeakRetained)
  {
    id v2 = sub_1000843B0();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Attempted to present upsell but HeadBoard wasn't focused. Scheduling retry.",  v4,  2u);
    }

    [WeakRetained setRetryUpsell:1];
  }
}

void sub_10014664C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  uint64_t v5 = *(void *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_1001466F4;
  _OWORD v7[3] = &unk_1003CFF08;
  id v8 = v3;
  id v6 = v3;
  [v4 dismissDialogWithContext:v5 options:0 completion:v7];
}

void sub_1001466F4(uint64_t a1)
{
  uint64_t v2 = TVCSHomeLog(a1);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = *(void **)(a1 + 32);
    *(_DWORD *)__int128 buf = 138412290;
    id v52 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Speaker picker dismissed with selected speaker: %@",  buf,  0xCu);
  }

  uint64_t v5 = *(void **)(a1 + 32);
  if (v5)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 destinationIdentifier]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 localAccessory]);

    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 room]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 hmRoom]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 accessories]);

    __int128 v49 = 0u;
    __int128 v50 = 0u;
    __int128 v47 = 0u;
    __int128 v48 = 0u;
    id v12 = v11;
    id v13 = [v12 countByEnumeratingWithState:&v47 objects:v56 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v48;
LABEL_6:
      uint64_t v16 = 0LL;
      while (1)
      {
        if (*(void *)v48 != v15) {
          objc_enumerationMutation(v12);
        }
        BOOL v17 = *(void **)(*((void *)&v47 + 1) + 8 * v16);
        __int16 v18 = (void *)objc_claimAutoreleasedReturnValue([v17 uniqueIdentifier]);
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 UUIDString]);
        unsigned __int8 v20 = [v19 isEqualToString:v6];

        if ((v20 & 1) != 0) {
          break;
        }
        if (v14 == (id)++v16)
        {
          id v14 = [v12 countByEnumeratingWithState:&v47 objects:v56 count:16];
          if (v14) {
            goto LABEL_6;
          }
          goto LABEL_12;
        }
      }

      id v21 = v17;

      if (v21) {
        goto LABEL_25;
      }
    }

    else
    {
LABEL_12:
    }

    __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "home", v8));
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v23 hmHome]);
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v24 mediaSystems]);

    __int128 v45 = 0u;
    __int128 v46 = 0u;
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    id v26 = v25;
    id v27 = [v26 countByEnumeratingWithState:&v43 objects:v55 count:16];
    if (v27)
    {
      id v28 = v27;
      uint64_t v29 = *(void *)v44;
LABEL_16:
      uint64_t v30 = 0LL;
      while (1)
      {
        if (*(void *)v44 != v29) {
          objc_enumerationMutation(v26);
        }
        uint64_t v31 = *(void **)(*((void *)&v43 + 1) + 8 * v30);
        id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 uniqueIdentifier]);
        int v33 = (void *)objc_claimAutoreleasedReturnValue([v32 UUIDString]);
        unsigned __int8 v34 = [v33 isEqualToString:v6];

        if ((v34 & 1) != 0) {
          break;
        }
        if (v28 == (id)++v30)
        {
          id v28 = [v26 countByEnumeratingWithState:&v43 objects:v55 count:16];
          if (v28) {
            goto LABEL_16;
          }
          goto LABEL_22;
        }
      }

      id v21 = v31;

      id v8 = v40;
      if (!v21) {
        goto LABEL_28;
      }
LABEL_25:
      uint64_t v35 = TVCSHomeLog(v22);
      uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138412546;
        id v52 = v21;
        __int16 v53 = 2112;
        __int128 v54 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "Updating audio destination to %@ with routeUID %@",  buf,  0x16u);
      }

      id v37 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
      v41[0] = _NSConcreteStackBlock;
      v41[1] = 3221225472LL;
      v41[2] = sub_100146BEC;
      v41[3] = &unk_1003D28B0;
      id v42 = v21;
      id v38 = (os_log_s *)v21;
      [v37 updateLocalAccessoryAudioDestination:v38 forceUpdateWithUnavailableDestination:0 completionHandler:v41];
    }

    else
    {
LABEL_22:

      id v8 = v40;
LABEL_28:
      uint64_t v39 = TVCSHomeLog(v22);
      id v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "No media destination. Will not update audio destination.",  buf,  2u);
      }
    }
  }

  else
  {
    AnalyticsSendEventLazy(@"com.apple.appletv.odeon.setupskipped", &stru_1003D9160);
  }

NSDictionary *__cdecl sub_100146B38(id a1)
{
  uint64_t v5 = @"bundleID";
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 bundleIdentifier]);
  id v6 = v2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v6,  &v5,  1LL));

  return (NSDictionary *)v3;
}

void sub_100146BEC(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = TVCSHomeLog(v5);
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = v7;
  if (a2)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Successfully updated the audio destination to %@",  (uint8_t *)&v10,  0xCu);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    sub_100286400();
  }
}

void sub_100146CCC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = v4;
  if (v4)
  {
    uint64_t v6 = TVCSHomeLog(v4);
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100286460();
    }
  }

  else
  {
    id v7 = (os_log_s *)[*(id *)(a1 + 32) mutableCopy];
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    id v8 = *(id *)(a1 + 40);
    id v9 = [v8 countByEnumeratingWithState:&v19 objects:v25 count:16];
    if (v9)
    {
      id v11 = v9;
      uint64_t v12 = *(void *)v20;
      *(void *)&__int128 v10 = 138412290LL;
      __int128 v18 = v10;
      do
      {
        for (i = 0LL; i != v11; i = (char *)i + 1)
        {
          if (*(void *)v20 != v12) {
            objc_enumerationMutation(v8);
          }
          id v14 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(*((void *)&v19 + 1) + 8 * (void)i),  "destinationIdentifier",  v18,  (void)v19));
          uint64_t v15 = TVCSHomeLog(-[os_log_s addObject:](v7, "addObject:", v14));
          uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)__int128 buf = v18;
            uint64_t v24 = v14;
            _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Successfully presented Odeon upsell for audioDestinationIdentifier %@",  buf,  0xCu);
          }
        }

        id v11 = [v8 countByEnumeratingWithState:&v19 objects:v25 count:16];
      }

      while (v11);
    }

    BOOL v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    [v17 setOdeonPromptHistory:v7];
  }
}

void sub_10014715C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, id location)
{
}

void sub_100147190(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [WeakRetained _isManateeAvailable];
}

void sub_1001471CC(uint64_t a1, char a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1001471F0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v4 = WeakRetained;
  if (WeakRetained && *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _selectedUserProfile]);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 iCloudAltDSID]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
    id v8 = [[TVSUIRecognizeMyVoiceViewController alloc] initWithiCloudAltDSID:0];
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewController:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewController:",  v8));
    [v8 setCheckSystemLanguageSupported:0];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    id v16[2] = sub_1001473D8;
    void v16[3] = &unk_1003D9290;
    id v10 = v9;
    id v17 = v10;
    objc_copyWeak(&v20, v2);
    uint64_t v19 = *(void *)(a1 + 40);
    id v11 = v6;
    id v18 = v11;
    [v8 setCompletionHandler:v16];
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_1001477CC;
    v14[3] = &unk_1003D28B0;
    id v13 = v7;
    id v15 = v13;
    [v12 presentDialogWithContext:v10 options:0 completion:v14];

    objc_destroyWeak(&v20);
  }
}

void sub_1001473C0(_Unwind_Exception *a1)
{
}

void sub_1001473D8(uint64_t a1, char a2)
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  uint64_t v5 = *(void *)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_1001474C0;
  v8[3] = &unk_1003D9268;
  objc_copyWeak(&v10, (id *)(a1 + 56));
  char v11 = a2;
  __int128 v7 = *(_OWORD *)(a1 + 40);
  id v6 = (id)v7;
  __int128 v9 = v7;
  [v4 dismissDialogWithContext:v5 options:0 completion:v8];

  objc_destroyWeak(&v10);
}

void sub_1001474AC(_Unwind_Exception *a1)
{
}

void sub_1001474C0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained && *(_BYTE *)(a1 + 56))
  {
    if (*(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL))
    {
      id v4 = objc_alloc_init(&OBJC_CLASS___CPSSystemAuthenticationRequest);
      [v4 setService:4];
      [v4 setAppleAccountAltDSID:*(void *)(a1 + 32)];
      uint64_t v5 = -[CPSAuthenticationSession initWithRequest:]( objc_alloc(&OBJC_CLASS___CPSAuthenticationSession),  "initWithRequest:",  v4);
      id v8 = _NSConcreteStackBlock;
      uint64_t v9 = 3221225472LL;
      id v10 = sub_100147650;
      char v11 = &unk_1003D9220;
      objc_copyWeak(&v13, v2);
      id v12 = *(id *)(a1 + 32);
      -[CPSAuthenticationSession setSessionFinishedHandler:](v5, "setSessionFinishedHandler:", &v8);
      -[CPSAuthenticationSession setSessionFailedHandler:]( v5,  "setSessionFailedHandler:",  &stru_1003D9240,  v8,  v9,  v10,  v11);
      -[CPSAuthenticationSession start](v5, "start");

      objc_destroyWeak(&v13);
    }

    else
    {
      id v6 = sub_1000843B0();
      __int128 v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Manatee is not available, presenting settings repair flow",  buf,  2u);
      }

      [WeakRetained _presentRepairFlow];
    }
  }
}

void sub_100147638(_Unwind_Exception *a1)
{
}

void sub_100147650(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_1000843B0();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Recognize My Voice CompanionAuth session finished handler called",  v5,  2u);
    }

    [WeakRetained[5] setSiriRMVState:1 foriCloudAltDSID:*(void *)(a1 + 32) completion:&stru_1003D91F8];
  }
}

void sub_1001476EC(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_1000843B0();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1002864C0();
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Set Siri RMV state to enabled.", v6, 2u);
  }
}

void sub_10014777C(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_1000843B0();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_100286520();
  }
}

void sub_1001477CC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_1000843B0();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  __int128 v7 = v6;
  if (v4)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100286580();
    }
  }

  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Successfully presented RMV upsell screen",  v8,  2u);
    }

    __int128 v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults pineBoardServicesUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "pineBoardServicesUserDefaults"));
    -[os_log_s pbs_setRMVShownToUserWithIdentifier:](v7, "pbs_setRMVShownToUserWithIdentifier:", *(void *)(a1 + 32));
  }
}

void sub_100147CB4(_Unwind_Exception *a1)
{
}

void sub_100147CD4(uint64_t a1, uint64_t a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100147D78;
  block[3] = &unk_1003D92E0;
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = a2;
  id v4 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 48);
  id v5 = *(id *)(a1 + 40);
  dispatch_async(&_dispatch_main_q, block);
}

void sub_100147D78(uint64_t a1)
{
  if (*(void *)(a1 + 64) && *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL))
  {
    id v2 = sub_1000843B0();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 64);
      int v6 = 138543618;
      uint64_t v7 = v4;
      __int16 v8 = 2048;
      uint64_t v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Skipping RMV upsell because RMV is not off. {userIdentifier=%{public}@, state=%ld}",  (uint8_t *)&v6,  0x16u);
    }

    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 0;
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100147E68(uint64_t a1, char a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100147F10;
  block[3] = &unk_1003D9330;
  char v8 = a2;
  uint64_t v7 = *(void *)(a1 + 56);
  id v4 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 48);
  id v5 = *(id *)(a1 + 40);
  dispatch_async(&_dispatch_main_q, block);
}

void sub_100147F10(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 64) && *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL))
  {
    id v2 = sub_1000843B0();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Skipping RMV upsell because voice profile is not available. {userIdentifier=%{public}@}",  (uint8_t *)&v5,  0xCu);
    }

    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 0;
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100147FF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[TVSInternationalization systemLanguage](&OBJC_CLASS___TVSInternationalization, "systemLanguage"));
  unsigned __int8 v5 = [v3 containsObject:v4];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001480D8;
  block[3] = &unk_1003D9330;
  unsigned __int8 v11 = v5;
  uint64_t v10 = *(void *)(a1 + 56);
  id v7 = *(id *)(a1 + 32);
  id v9 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 40);
  dispatch_async(&_dispatch_main_q, block);
}

void sub_1001480D8(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 64) && *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL))
  {
    id v2 = sub_1000843B0();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Skipping RMV upsell because system language is not supported. {userIdentifier=%{public}@}",  (uint8_t *)&v5,  0xCu);
    }

    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 0;
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

uint64_t sub_1001481B8(uint64_t result)
{
  if (*(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL)) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16LL))();
  }
  return result;
}

void sub_1001482DC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](&OBJC_CLASS___LSApplicationWorkspace, "defaultWorkspace"));
  [v2 openSensitiveURL:*(void *)(a1 + 32) withOptions:0];
}

void sub_100148508(_Unwind_Exception *a1)
{
}

void sub_100148534(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = objc_loadWeakRetained(v1);
    objc_msgSend(v3, "_queue_notifyTipsKioskStateIsIdle:", 1);

    [WeakRetained[6] invalidate];
    id v4 = WeakRetained[6];
    WeakRetained[6] = 0LL;
  }
}

void sub_100148590(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_queue_notifyTipsKioskStateIsIdle:", 0);
}

void sub_1001485C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_queue_notifyTipsKioskStateIsIdle:", 0);
}

uint64_t sub_10014877C()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  unint64_t v1 = (unint64_t)[v0 eARCStatus];

  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBExternalControlSystem sharedSystem](&OBJC_CLASS___PBExternalControlSystem, "sharedSystem"));
  id v3 = [v2 tvPowerState];

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBExternalControlSystem sharedSystem](&OBJC_CLASS___PBExternalControlSystem, "sharedSystem"));
  unsigned int v5 = [v4 isActiveSource];

  if (v1 != 1 && (v1 & 0xFFFFFFFFFFFFFFFELL) != 2 || v3 == (id)3) {
    return 0LL;
  }
  else {
    return v5 ^ 1;
  }
}

void sub_10014891C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id sub_100148938(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _customerLogsStateDump]);

  return v2;
}

id sub_100148E20(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 isPrimary] & 1) != 0
    || (id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 iCloudAltDSID]), v4, !v4))
  {
    __int128 v23 = 0LL;
  }

  else
  {
    unsigned int v5 = *(void **)(a1 + 32);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 iCloudAltDSID]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "aa_appleAccountWithAltDSID:", v6));
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 accountPropertyForKey:ACAccountPropertyPersonaIdentifier]);

    id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 personaUniqueIdentifier]);
    LODWORD(v6) = [v8 isEqual:v9];

    if ((_DWORD)v6)
    {
      uint64_t v10 = objc_claimAutoreleasedReturnValue([v3 personaUniqueIdentifier]);
    }

    else
    {
      unsigned __int8 v11 = (void *)objc_claimAutoreleasedReturnValue([v3 personaUniqueIdentifier]);
      uint64_t v10 = objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ (account missing)",  v11));
    }

    __int128 v23 = (void *)v10;
  }

  v24[0] = @"identifier";
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "pb_identifier"));
  v25[0] = v22;
  v24[1] = @"iCloud";
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v3 iCloudAltDSID]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v12 != 0LL));
  v25[1] = v13;
  void v24[2] = @"iTunes";
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v3 iTunesAltDSID]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v14 != 0LL));
  void v25[2] = v15;
  v24[3] = @"gameCenter";
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v3 gameCenterAltDSID]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v16 != 0LL));
  v25[3] = v17;
  void v25[4] = &__kCFBooleanFalse;
  void v24[4] = @"isHomeUser";
  void v24[5] = @"groupConsent";
  id v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  objc_msgSend(v3, "pb_recommendationGroupConsent")));
  v25[5] = v18;
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v25,  v24,  6LL));
  id v20 = [v19 mutableCopy];

  if (v23) {
    [v20 setObject:v23 forKeyedSubscript:@"persona"];
  }

  return v20;
}

id sub_100149118(id a1, NSMutableDictionary *a2, UPProfile *a3)
{
  id v4 = a2;
  unsigned int v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[UPProfile iTunesAltDSID](v5, "iTunesAltDSID"));
  if (v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKey:](v4, "objectForKey:", v6));
    id v8 = v7;
    if (v7) {
      id v9 = v7;
    }
    else {
      id v9 = objc_opt_new(&OBJC_CLASS___NSMutableSet);
    }
    uint64_t v10 = v9;

    unsigned __int8 v11 = (void *)objc_claimAutoreleasedReturnValue(-[UPProfile pb_identifier](v5, "pb_identifier"));
    -[NSMutableSet addObject:](v10, "addObject:", v11);

    -[NSMutableDictionary setObject:forKey:](v4, "setObject:forKey:", v10, v6);
  }

  return v4;
}

id sub_1001491DC(id a1, NSSet *a2)
{
  id v2 = a2;
  if (-[NSSet count](v2, "count") < 2) {
    id v3 = 0LL;
  }
  else {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(-[NSSet allObjects](v2, "allObjects"));
  }

  return v3;
}

uint64_t sub_1001496FC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(unsigned __int8 *)(a1 + 40));
  }
  return result;
}

void sub_100149848(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Media Remote PIN Timed Out",  v3,  2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismissViewControllerWithValue:0];
}

void sub_100149AEC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  [v2 _deregisterDialogHiddenAssertion:*(void *)(a1 + 32)];
}

void sub_10014A1DC(_Unwind_Exception *a1)
{
}

void sub_10014A22C()
{
}

void sub_10014A234(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained(v4);
  unsigned int v7 = [v5 isEqualToString:@"canceled"];

  if (v7)
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
    id v9 = (void *)v8;
    if (v8 && (objc_opt_respondsToSelector(v8, "textEntryDidCancel:") & 1) != 0) {
      [v9 textEntryDidCancel:WeakRetained];
    }
  }
}

CFStringRef sub_10014A2C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  uint64_t v3 = WeakRetained[9];
  if (v3)
  {
    WeakRetained[9] = v3 - 1;
    objc_msgSend(WeakRetained, "_showTextEntryViewControllerForTextField:");
    id v4 = @"text field";
  }

  else
  {
    id v4 = @"canceled";
  }

  return v4;
}

CFStringRef sub_10014A324(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showTextEntryViewControllerForTextField:WeakRetained[9]];

  return @"text field";
}

CFStringRef sub_10014A364(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = [v5 tag];
  [WeakRetained _synchronizeEnteredValues];
  uint64_t v8 = objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  id v9 = (void *)v8;
  if (!v8)
  {
    if (v7 != (id)-1LL)
    {
      [WeakRetained _synchronizeEnteredValues];
      goto LABEL_10;
    }

void sub_10014A92C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIButton buttonWithType:](&OBJC_CLASS___UIButton, "buttonWithType:", 1LL));
  [v6 setTitle:v5 forState:0];

  [v6 setTag:a3];
  [*(id *)(a1 + 32) addObject:v6];
}

void sub_10014ADC0(id a1)
{
  v6[0] = NSFontAttributeName;
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[UIFont preferredFontForTextStyle:]( &OBJC_CLASS___UIFont,  "preferredFontForTextStyle:",  UIFontTextStyleTitle3));
  v7[0] = v1;
  v6[1] = NSForegroundColorAttributeName;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.9));
  v7[1] = v2;
  v6[2] = NSBackgroundColorAttributeName;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](&OBJC_CLASS___UIColor, "clearColor"));
  v7[2] = v3;
  uint64_t v4 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  3LL));
  id v5 = (void *)qword_100471060;
  qword_100471060 = v4;
}

void sub_10014AF1C(id a1)
{
  v6[0] = NSFontAttributeName;
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[UIFont preferredFontForTextStyle:]( &OBJC_CLASS___UIFont,  "preferredFontForTextStyle:",  UIFontTextStyleBody));
  v7[0] = v1;
  v6[1] = NSForegroundColorAttributeName;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 0.9));
  v7[1] = v2;
  v6[2] = NSBackgroundColorAttributeName;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](&OBJC_CLASS___UIColor, "clearColor"));
  v7[2] = v3;
  uint64_t v4 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  3LL));
  id v5 = (void *)qword_100471070;
  qword_100471070 = v4;
}

id sub_10014BA44(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "_scheduledSleepBannerQueue_dismissScheduledSleepCountdownBannerWithReason:",  @"PBScheduledSleepManagerDismissReasonSleep");
}

id sub_10014BABC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cancelScheduledSleepWithReason:@"User Switch"];
}

void sub_10014BB6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 48);
  if (v2 == *(void **)(a1 + 40))
  {
    *(void *)(v1 + 4_Block_object_dispose((const void *)(v1 - 160), 8) = 0LL;
  }

void sub_10014BCC8(_Unwind_Exception *a1)
{
}

void sub_10014BCF4(uint64_t a1)
{
  id v2 = sub_1000F7744();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained currentScheduledSleep]);
    [v5 duration];
    int v8 = 134217984;
    uint64_t v9 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%f second sleep timer fired - sleeping system",  (uint8_t *)&v8,  0xCu);
  }

  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBPowerManager sharedInstance](&OBJC_CLASS___PBPowerManager, "sharedInstance"));
  [v7 sleepSystemWithReason:8];
}

void sub_10014BDE0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = sub_1000F7744();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained currentScheduledSleep]);
    [v5 duration];
    *(_DWORD *)__int128 buf = 134217984;
    uint64_t v10 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Countdown for %f second sleep timer fired",  buf,  0xCu);
  }

  id v7 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 56LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10014BEF0;
  block[3] = &unk_1003CFF08;
  void block[4] = WeakRetained;
  dispatch_async(v7, block);
}

id sub_10014BEF0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_scheduledSleepBannerQueue_postScheduledSleepCountdownBanner");
}

id sub_10014C454(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v5[1] = @"duration";
  v6[0] = v1;
  v5[0] = @"source";
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 40)));
  v6[1] = v2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v6,  v5,  2LL));

  return v3;
}

id sub_10014C5D0(uint64_t a1)
{
  v7[0] = *(void *)(a1 + 32);
  v6[0] = @"cancelReason";
  v6[1] = @"duration";
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 40)));
  v7[1] = v2;
  void v6[2] = @"timeRemaining";
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 48)));
  v7[2] = v3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  3LL));

  return v4;
}

void sub_10014DB64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 56);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v2 + 88) displayName]);
  [v3 setTitle:v4];

  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 56);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v5 + 88) iconImage]);
  [v6 setImage:v7];
}

LABEL_55:
      self->_panningVerticallCGFloat y = v54;
      self->_panningHorizontallCGFloat y = v53;
      if (self->_panningVertically)
      {
LABEL_12:
        __int128 v22 = v16 - self->_initialDragLocation.y;
        stateMachine = self->_stateMachine;
        if (v22 > 0.0) {
          __int128 v22 = v22 / 6.0;
        }
        __int16 v65 = @"Swipe Offset";
        uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v22));
        __int128 v66 = v24;
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v66,  &v65,  1LL));
        -[TVSStateMachine postEvent:withContext:userInfo:]( stateMachine,  "postEvent:withContext:userInfo:",  @"Kill Gesture Update",  0LL,  v25);
      }

      else if (v53)
      {
LABEL_27:
        id v38 = v14 - self->_initialDragLocation.x;
        uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](&OBJC_CLASS___UIApplication, "sharedApplication"));
        uint64_t v40 = [v39 userInterfaceLayoutDirection];

        if (v40 == (id)1) {
          id v38 = -v38;
        }
        int v41 = (void *)objc_claimAutoreleasedReturnValue(-[PBAppSwitcherCollectionViewController collectionView](self, "collectionView"));
        [v41 _updateForReducedMotionPeek:v38];
      }

      return;
    case 3uLL:
      if (self->_panningVertically)
      {
        id v26 = v16 - self->_initialDragLocation.y;
        id v27 = v26 / 6.0;
        if (v26 <= 0.0) {
          id v27 = v16 - self->_initialDragLocation.y;
        }
        if (v26 >= -200.0 && (v26 >= -125.0 || v11 >= -1500.0))
        {
          id v42 = fabs(v27);
          __int128 v43 = v42 + v42;
          __int128 v51 = v42 <= 1.0;
          __int128 v44 = 2.0;
          if (!v51) {
            __int128 v44 = v43;
          }
          __int128 v61 = @"Swipe Velocity";
          __int128 v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v11 / v44));
          __int128 v62 = v45;
          id v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v62,  &v61,  1LL));

          uint64_t v36 = self->_stateMachine;
          id v37 = @"Kill Gesture Cancel";
        }

        else
        {
          id v28 = fabs(v27 + 1500.0);
          uint64_t v29 = v28 + v28;
          __int128 v51 = v28 <= 1.0;
          uint64_t v30 = 2.0;
          if (!v51) {
            uint64_t v30 = v29;
          }
          __int128 v63 = @"Swipe Velocity";
          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v11 / v30));
          id v64 = v31;
          id v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v64,  &v63,  1LL));

          int v33 = sub_100082664();
          unsigned __int8 v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
          {
            focusedItem = self->_focusedItem;
            *(_DWORD *)__int128 buf = 138412290;
            __int128 v68 = (const char *)focusedItem;
            _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "Swiped up, kill %@", buf, 0xCu);
          }

          uint64_t v36 = self->_stateMachine;
          id v37 = @"Kill Gesture Succeeded";
        }

        -[TVSStateMachine postEvent:withContext:userInfo:](v36, "postEvent:withContext:userInfo:", v37, 0LL, v32);

        self->_panningVerticallCGFloat y = 0;
        self->_initialDragLocation = CGPointZero;
      }

      if (self->_panningHorizontally)
      {
        v58[0] = _NSConcreteStackBlock;
        v58[1] = 3221225472LL;
        v58[2] = sub_10014E628;
        v58[3] = &unk_1003CFF08;
        v58[4] = self;
        +[UIView animateWithDuration:delay:options:animations:completion:]( &OBJC_CLASS___UIView,  "animateWithDuration:delay:options:animations:completion:",  6LL,  v58,  0LL,  0.3,  0.0);
        self->_panningHorizontallCGFloat y = 0;
        __int128 v21 = CGPointZero;
        goto LABEL_36;
      }

      return;
    case 4uLL:
    case 5uLL:
      if (self->_panningVertically)
      {
        id v18 = v16 - self->_initialDragLocation.y;
        if (v18 > 0.0) {
          id v18 = v18 / 6.0;
        }
        __int128 v59 = @"Swipe Velocity";
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  v11 / fmax(fabs(v18), 1.0)));
        __int128 v60 = v19;
        id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v60,  &v59,  1LL));

        -[TVSStateMachine postEvent:withContext:userInfo:]( self->_stateMachine,  "postEvent:withContext:userInfo:",  @"Kill Gesture Cancel",  0LL,  v20);
        self->_panningVerticallCGFloat y = 0;
        self->_initialDragLocation = CGPointZero;
      }

      if (self->_panningHorizontally)
      {
        self->_panningHorizontallCGFloat y = 0;
        __int128 v21 = CGPointZero;
LABEL_36:
        self->_initialDragLocation = v21;
      }

      return;
    default:
      return;
  }

void sub_10014E628(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) collectionView]);
  [v1 _updateForReducedMotionPeek:0.0];
}

void sub_10014F220( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11, id *a12, id *a13, id *a14, id *a15, id *a16, id *a17, id *a18, uint64_t a19, id *a20, id *a21, id *a22, id *a23, id *a24, id *a25, id *a26, id *a27)
{
}

CFStringRef sub_10014F40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = (id *)(a1 + 32);
  id v6 = a5;
  id WeakRetained = objc_loadWeakRetained(v5);
  AnalyticsSendEvent(@"com.apple.appletv.appswitcher.open", 0LL);
  int v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained collectionView]);
  [v8 setUserInteractionEnabled:0];

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:@"Completion Handler"]);
  [WeakRetained setPresentationCompletion:v9];

  [WeakRetained _showAppSwitcher];
  return @"Transitioning To Switcher";
}

CFStringRef sub_10014F4B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained collectionView]);
  [v2 _updateLastContentOffset];

  [WeakRetained setPeekEffectEnabled:1];
  [WeakRetained _setKillGestureRecognizersEnabled:1];
  [WeakRetained _servicePendingUpdatesWithAnimation:1];
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained collectionView]);
  [v3 setUserInteractionEnabled:1];

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained presentationCompletion]);
  if (v4)
  {
    uint64_t v5 = (void (**)(void, void))objc_claimAutoreleasedReturnValue([WeakRetained presentationCompletion]);
    v5[2](v5, 1LL);

    [WeakRetained setPresentationCompletion:0];
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained view]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 window]);
  [v7 setNeedsFocusUpdate];

  return @"Showing Switcher";
}

id sub_10014F5A8(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _activatePendingLaunchItem];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v5;
}

CFStringRef sub_10014F604(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_10014F6F8;
  void v15[3] = &unk_1003D0418;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v13 = v12;
  id v16 = v13;
  [v9 executeBlockAfterCurrentStateTransition:v15];

  objc_destroyWeak(&v17);
  return @"Showing Fullscreen";
}

void sub_10014F6E4(_Unwind_Exception *a1)
{
}

void sub_10014F6F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained launchCompletionHandler]);

  if (v3)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKeyedSubscript:@"AppSwitcherItem"]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[FBProcessManager sharedInstance](&OBJC_CLASS___FBProcessManager, "sharedInstance"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 processesForBundleIdentifier:v6]);
    int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 firstObject]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 handle]);

    if (v9)
    {
      id v10 = 0LL;
    }

    else
    {
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
      uint64_t v11 = FBSOpenApplicationErrorCreate(4LL, @"Cannot launch app switcher item %@, no process found");
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v11);
    }

    id v12 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "launchCompletionHandler", v13));
    ((void (**)(void, void *, void *))v12)[2](v12, v9, v10);

    [WeakRetained setLaunchCompletionHandler:0];
  }
}

CFStringRef sub_10014F848(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingLaunchItem]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained appSwitcherDataSource]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 items]);
  id v6 = [v5 indexOfObject:v3];

  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSIndexPath indexPathForItem:inSection:]( &OBJC_CLASS___NSIndexPath,  "indexPathForItem:inSection:",  v6,  0LL));
  int v8 = -[PBAppSwitcherFullFocusLayout initWithWorkspaceGeometry:]( objc_alloc(&OBJC_CLASS___PBAppSwitcherFullFocusLayout),  "initWithWorkspaceGeometry:",  *(void *)(a1 + 32));
  -[PBAppSwitcherFullFocusLayout setOriginIndexPath:](v8, "setOriginIndexPath:", v7);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained switcherAnimator]);
  [v9 pacedFractionComplete];
  double v11 = v10;

  if (v11 >= 50.0) {
    double v12 = 0.0;
  }
  else {
    double v12 = 0.2;
  }
  id v13 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained switcherAnimator]);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  id v16[2] = sub_10014F9BC;
  void v16[3] = &unk_1003CFEB8;
  void v16[4] = WeakRetained;
  id v17 = v8;
  id v14 = v8;
  [v13 addAnimations:v16 delayFactor:v12];

  return @"Reverting Switcher To App State";
}

void sub_10014F9BC(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) collectionView]);
  [v2 setCollectionViewLayout:*(void *)(a1 + 40)];
}

id sub_10014F9F4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _setKillGestureRecognizersEnabled:0];
  [WeakRetained setScrolling:1];
  [WeakRetained setPeekEffectEnabled:0];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v5;
}

id sub_10014FA6C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setScrolling:0];
  [WeakRetained _setKillGestureRecognizersEnabled:1];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v5;
}

id sub_10014FAD8(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setScrolling:0];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained collectionView]);
  [v5 _updateLastContentOffset];

  [WeakRetained setPeekEffectEnabled:1];
  [WeakRetained _setKillGestureRecognizersEnabled:1];
  [WeakRetained _servicePendingUpdatesWithAnimation:1];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v6;
}

__CFString *sub_10014FB74(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"AppSwitcherItem"]);

  uint64_t v11 = [WeakRetained _activateItem:v10] ^ 1;
  [WeakRetained _setKillGestureRecognizersEnabled:v11];
  if ((v11 & 1) != 0)
  {
    double v12 = (__CFString *)objc_claimAutoreleasedReturnValue([v7 currentState]);
  }

  else
  {
    AnalyticsSendEvent(@"com.apple.appletv.appswitcher.activateapp", 0LL);
    double v12 = @"Waiting for Launch";
  }

  return v12;
}

CFStringRef sub_10014FC38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _servicePendingUpdatesWithAnimation:1];

  return @"Showing Switcher";
}

id sub_10014FC70(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"AppSwitcherItem"]);
  [WeakRetained _setKillGestureRecognizersEnabled:0];
  [WeakRetained setPeekEffectEnabled:0];
  [WeakRetained setPendingLaunchItem:v10];
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"Completion Handler"]);

  [WeakRetained setLaunchCompletionHandler:v11];
  double v12 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained presentationCompletion]);

  if (v12)
  {
    id v13 = (void (**)(void, void))objc_claimAutoreleasedReturnValue([WeakRetained presentationCompletion]);
    v13[2](v13, 0LL);

    [WeakRetained setPresentationCompletion:0];
  }

  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  id v17[2] = sub_10014FDE0;
  void v17[3] = &unk_1003CFF08;
  id v18 = v7;
  id v14 = v7;
  [v14 executeBlockAfterCurrentStateTransition:v17];
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 currentState]);

  return v15;
}

id sub_10014FDE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) postEvent:@"Revert Switcher To App Event"];
}

CFStringRef sub_10014FE00(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"AppSwitcherItem"]);
  [WeakRetained _setKillGestureRecognizersEnabled:0];
  [WeakRetained setPeekEffectEnabled:0];
  [WeakRetained setPendingLaunchItem:v10];
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"Completion Handler"]);

  [WeakRetained setLaunchCompletionHandler:v11];
  double v12 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained collectionView]);
  [v12 setScrollEnabled:0];

  if ([WeakRetained isScrolling])
  {
    [WeakRetained setScrolling:0];
    [WeakRetained _prepareToLaunchItemImmediately:v10];
    id v13 = @"Interrupting Scroll To Launch Item";
  }

  else
  {
    unsigned int v14 = [WeakRetained _shouldScrollToItem:v10 scrollIfNeeded:0 forced:0];
    id v15 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained collectionView]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[UIFocusSystem focusSystemForEnvironment:]( &OBJC_CLASS___UIFocusSystem,  "focusSystemForEnvironment:",  v15));

    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 focusedItem]);
    if ((objc_opt_respondsToSelector(v17, "isDescendantOfView:") & 1) != 0) {
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v16 focusedItem]);
    }
    else {
      id v18 = 0LL;
    }

    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained view]);
    unsigned int v20 = [v18 isDescendantOfView:v19];

    if (!v14 || v20)
    {
      if ([WeakRetained _shouldScrollToItem:v10 scrollIfNeeded:1 forced:0])
      {
        id v13 = @"Scrolling to Item";
      }

      else
      {
        __int128 v21 = (__CFString *)objc_claimAutoreleasedReturnValue([v7 currentState]);
        [WeakRetained _launchItem:v10 shouldAnimateLayoutSwitch:v21 != @"Reverting Switcher To App State"];

        id v13 = @"Transitioning To Fullscreen";
      }
    }

    else
    {
      id v13 = @"Waiting for Focus Launch";
    }
  }

  return v13;
}

CFStringRef sub_10015003C(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_10015012C;
  void v15[3] = &unk_1003D0418;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v13 = v9;
  id v16 = v13;
  [v13 executeBlockAfterCurrentStateTransition:v15];

  objc_destroyWeak(&v17);
  return @"Waiting for Launch";
}

void sub_100150118(_Unwind_Exception *a1)
{
}

void sub_10015012C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = *(void **)(a1 + 32);
  v7[0] = @"AppSwitcherItem";
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingLaunchItem]);
  v7[1] = @"Completion Handler";
  v8[0] = v4;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained launchCompletionHandler]);
  v8[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v8,  v7,  2LL));
  [v3 postEvent:@"Launch App" withContext:0 userInfo:v6];
}

id sub_10015021C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = (id *)(a1 + 32);
  id v7 = a5;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"Completion Handler"]);
  [WeakRetained setLaunchCompletionHandler:v10];

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"AppSwitcherItem"]);
  [WeakRetained setPendingLaunchItem:v11];

  id v12 = (void *)objc_claimAutoreleasedReturnValue([v8 currentState]);
  return v12;
}

CFStringRef sub_1001502D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained focusedItem]);
  [WeakRetained _launchItem:v2 shouldAnimateLayoutSwitch:1];

  return @"Transitioning To Fullscreen";
}

CFStringRef sub_100150324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = (id *)(a1 + 32);
  id v6 = a5;
  id WeakRetained = objc_loadWeakRetained(v5);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"Swipe Offset"]);

  [v8 doubleValue];
  double v10 = v9;

  [WeakRetained setPeekEffectEnabled:0];
  [WeakRetained _updateKillSwipeWithOffset:v10];

  return @"Delete Gesture";
}

CFStringRef sub_1001503B4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"Swipe Velocity"]);

  [v10 doubleValue];
  double v12 = v11;

  [WeakRetained _setKillGestureRecognizersEnabled:0];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_1001504A4;
  void v15[3] = &unk_1003CFEE0;
  id v16 = v7;
  id v13 = v7;
  [WeakRetained _finishKillSwipeWithVelocity:v15 completion:v12];

  return @"Delete Gesture Completing";
}

id sub_1001504A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) postEvent:@"Kill Gesture Cancelled or Succeeded"];
}

CFStringRef sub_1001504C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"Swipe Velocity"]);

  [v10 doubleValue];
  double v12 = v11;

  [WeakRetained _setKillGestureRecognizersEnabled:0];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_1001505B4;
  void v15[3] = &unk_1003CFEE0;
  id v16 = v7;
  id v13 = v7;
  [WeakRetained _cancelKillSwipeWithVelocity:v15 completion:v12];

  return @"Delete Gesture Completing";
}

id sub_1001505B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) postEvent:@"Kill Gesture Cancelled or Succeeded"];
}

CFStringRef sub_1001505D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained collectionView]);
  [v2 _updateLastContentOffset];

  [WeakRetained setPeekEffectEnabled:1];
  [WeakRetained _setKillGestureRecognizersEnabled:1];
  [WeakRetained _servicePendingUpdatesWithAnimation:0];

  return @"Showing Switcher";
}

CFStringRef sub_10015063C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setPeekEffectEnabled:0];
  double v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"Should Animate Updates"]);
  if (v10)
  {
    double v11 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"Should Animate Updates"]);
    uint64_t v12 = (uint64_t)[v11 BOOLValue];
  }

  else
  {
    uint64_t v12 = 1LL;
  }

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_100150748;
  void v15[3] = &unk_1003CFEE0;
  id v16 = v7;
  id v13 = v7;
  [WeakRetained _handleCollectionViewUpdatesWithAnimation:v12 completion:v15];

  return @"Updating Collection View";
}

id sub_100150748(uint64_t a1)
{
  return [*(id *)(a1 + 32) postEvent:@"Collection View Update Complete"];
}

CFStringRef sub_100150768(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained collectionView]);
  [v2 _updateLastContentOffset];

  [WeakRetained setPeekEffectEnabled:1];
  [WeakRetained _servicePendingUpdatesWithAnimation:1];

  return @"Showing Switcher";
}

id sub_1001507C4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setPeekEffectEnabled:0];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v5;
}

id sub_100150824(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setPeekEffectEnabled:1];
  [WeakRetained setNeedsFocusUpdate];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v5;
}

void sub_100150BD4(_Unwind_Exception *a1)
{
}

void sub_100150C1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateMachine]);
  [v2 postEvent:@"Transition Switcher Complete"];
}

id sub_100150C60(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

uint64_t sub_100150C7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_100150CB4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained collectionView]);
  [v3 setCollectionViewLayout:*(void *)(a1 + 32) animated:1];
}

void sub_100150D04(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (a2)
  {
    id v6 = *(void (**)(void))(*(void *)(a1 + 32) + 16LL);
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateMachine]);
    id v8 = (__CFString *)objc_claimAutoreleasedReturnValue([v7 currentState]);

    if (v8 == @"Reverting Switcher To App State")
    {
      [v5 _activatePendingLaunchItem];
      goto LABEL_6;
    }

    id v6 = *(void (**)(void))(*(void *)(a1 + 32) + 16LL);
  }

  v6();
LABEL_6:
}

id sub_100150FB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = *(void *)(a1 + 40);
  id v3 = *(void **)(v2 + 24);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_100151010;
  _OWORD v5[3] = &unk_1003D0868;
  void v5[4] = v2;
  return [v3 handleActivationRequestForItem:v1 completion:v5];
}

void *sub_100151010(void *result, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return [*(id *)(result[4] + 32) postEvent:@"Activate Item Failed"];
  }
  return result;
}

void sub_100151478(_Unwind_Exception *a1)
{
}

void sub_100151498(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [*((id *)WeakRetained + 6) setUserInteractionEnabled:1];
    uint64_t v4 = (void *)v3[4];
    uint64_t v5 = *(void *)(a1 + 32);
    id v7 = @"AppSwitcherItem";
    uint64_t v8 = v5;
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v8,  &v7,  1LL));
    [v4 postEvent:@"Transition To Fullscreen Complete" withContext:0 userInfo:v6];
  }
}

id sub_100151570(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

uint64_t sub_10015158C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001515C4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) collectionView]);
  [v2 setCollectionViewLayout:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 56) completion:*(void *)(a1 + 48)];
}

void sub_100151814( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100151830(id *a1)
{
  id v3 = _NSConcreteStackBlock;
  uint64_t v4 = 3221225472LL;
  uint64_t v5 = sub_1001518FC;
  id v6 = &unk_1003D0300;
  objc_copyWeak(&v8, a1 + 6);
  id v7 = a1[5];
  +[CATransaction setCompletionBlock:](&OBJC_CLASS___CATransaction, "setCompletionBlock:", &v3);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "collectionView", v3, v4, v5, v6));
  [v2 layoutIfNeeded];

  objc_destroyWeak(&v8);
}

void sub_1001518E4(_Unwind_Exception *a1)
{
}

void sub_1001518FC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[6] setUserInteractionEnabled:1];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100151B40( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100151B5C(id *a1)
{
  id v3 = _NSConcreteStackBlock;
  uint64_t v4 = 3221225472LL;
  uint64_t v5 = sub_100151C28;
  id v6 = &unk_1003D0300;
  objc_copyWeak(&v8, a1 + 6);
  id v7 = a1[5];
  +[CATransaction setCompletionBlock:](&OBJC_CLASS___CATransaction, "setCompletionBlock:", &v3);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "collectionView", v3, v4, v5, v6));
  [v2 layoutIfNeeded];

  objc_destroyWeak(&v8);
}

void sub_100151C10(_Unwind_Exception *a1)
{
}

void sub_100151C28(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[6] setUserInteractionEnabled:1];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100151DA0(_Unwind_Exception *a1)
{
}

id sub_100151DC0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "__applyPendingUpdatesToCollectionView");
}

void sub_100151DD8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[6] setUserInteractionEnabled:1];
    [v3 setNeedsFocusUpdate];
    [v3 updateFocusIfNeeded];
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001521F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 type] == (id)1)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 fromIndexPath]);
    [v4 addObject:v5];
  }

  if (![v3 type])
  {
    id v6 = *(void **)(a1 + 40);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 toIndexPath]);
    [v6 addObject:v7];
  }
}

void sub_100152390(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 32LL);
  uint64_t v4 = @"Should Animate Updates";
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
  uint64_t v5 = v2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));
  [v1 postEvent:@"Collection View Update" withContext:0 userInfo:v3];
}

void sub_100152460(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)v2[4];
  v7[0] = @"AppSwitcherItem";
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 pendingLaunchItem]);
  v7[1] = @"Completion Handler";
  v8[0] = v4;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) launchCompletionHandler]);
  v8[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v8,  v7,  2LL));
  [v3 postEvent:@"Launch App" withContext:0 userInfo:v6];
}

void sub_1001542D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_10006BE1C();
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  [v3 setDomain:v5];

  [v3 setService:PBSUserProfileManagerServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_1001546FC(_Unwind_Exception *a1)
{
}

void sub_10015472C(id *a1, void *a2)
{
  id v3 = a2;
  PBSUserProfileManagerConfigureConnection();
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1[4] _serviceConfiguration]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 service]);
  [v3 setInterfaceTarget:v5];

  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 queue]);
  if (v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 queue]);
    [v3 setTargetQueue:v7];
  }

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_100154874;
  v8[3] = &unk_1003D95A8;
  objc_copyWeak(&v12, a1 + 7);
  id v9 = a1[5];
  id v10 = a1[4];
  id v11 = a1[6];
  [v3 setInvalidationHandler:v8];

  objc_destroyWeak(&v12);
}

void sub_100154860(_Unwind_Exception *a1)
{
}

void sub_100154874(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v5 = sub_100084680();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v10 = 138543618;
    uint64_t v11 = v7;
    __int16 v12 = 2112;
    id v13 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated. {client=%{public}@, connection=%@}",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 40) removeObserver:*(void *)(a1 + 48)];
  id v8 = *(void **)(a1 + 40);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) bundleIdentifier]);
  [v8 _removeAllIgnoringUserProfileAccountNotificationsWithReason:v9];

  if (WeakRetained)
  {
    os_unfair_lock_lock((os_unfair_lock_t)WeakRetained + 2);
    [*((id *)WeakRetained + 3) removeObject:*(void *)(a1 + 48)];
    os_unfair_lock_unlock((os_unfair_lock_t)WeakRetained + 2);
  }
}

id sub_10015499C(uint64_t a1)
{
  return [*(id *)(a1 + 32) userProfileManagerDidUpdate];
}

id sub_1001549B4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) userProfileManagerDidUpdateGroupRecommendationsSession:a2];
}

void sub_100154DAC(id a1)
{
  uint64_t v1 = -[PBAVSystemControllerCache initWithDataProviderInitializer:]( objc_alloc(&OBJC_CLASS___PBAVSystemControllerCache),  "initWithDataProviderInitializer:",  &stru_1003D9680);
  uint64_t v2 = (void *)qword_100471080;
  qword_100471080 = (uint64_t)v1;
}

PBAVSystemControllerDataProviding *__cdecl sub_100154DE4(id a1)
{
  return (PBAVSystemControllerDataProviding *)(id)objc_claimAutoreleasedReturnValue( +[AVSystemController sharedAVSystemController]( &OBJC_CLASS___AVSystemController,  "sharedAVSystemController"));
}

void sub_100154EA8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100154EC0(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 8LL);
  return result;
}

void sub_100154FA0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100154FBC(uint64_t a1)
{
  id v2 = sub_100155038();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received AVSystemController_ServerConnectionDiedNotification. Will try and rebuild cache.",  v5,  2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _rebuildCache];
}

id sub_100155038()
{
  if (qword_100471098 != -1) {
    dispatch_once(&qword_100471098, &stru_1003D96F0);
  }
  return (id)qword_100471090;
}

void sub_100155144(_Unwind_Exception *a1)
{
}

void sub_100155158(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained dataProvider]);

    if (v3 == v4)
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
      id v6 = sub_100155038();
      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
        id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userInfo]);
        int v10 = 138543874;
        uint64_t v11 = v5;
        __int16 v12 = 2048;
        id v13 = v8;
        __int16 v14 = 2112;
        id v15 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Notification '%{public}@' received from %p : %@",  (uint8_t *)&v10,  0x20u);
      }

      [WeakRetained _callUpdateHandlerForNotificationName:v5 notification:*(void *)(a1 + 32)];
    }
  }
}

void sub_1001553B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1001553D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    [v2 addObserver:WeakRetained selector:"_handleSystemControllerServerConnectionDied:" name:AVSystemController_ServerConnectionDiedNotification object:0];
    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained notificationNameToHandlerMap]);
    id v8 = _NSConcreteStackBlock;
    uint64_t v9 = 3221225472LL;
    int v10 = sub_10015553C;
    uint64_t v11 = &unk_1003D96A8;
    id v12 = v2;
    id v13 = WeakRetained;
    id v4 = v2;
    [v3 enumerateKeysAndObjectsUsingBlock:&v8];

    objc_msgSend(WeakRetained, "_rebuildCache", v8, v9, v10, v11);
    [WeakRetained setCacheInitialized:1];
    id v5 = sub_100155038();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v7 = [WeakRetained isAirplayDisplayActive];
      *(_DWORD *)__int128 buf = 67109120;
      unsigned int v15 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Finished initializing PBAVSystemControllerCache. Cache state: airplayDisplayActive=%{BOOL}d",  buf,  8u);
    }
  }
}

id sub_10015553C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObserver:*(void *)(a1 + 40) selector:"_handleSystemControllerMetadataDidChangeNotification:" name:a2 object:0];
}

void sub_1001557C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained && *(unsigned __int8 *)(*(void *)(a1 + 32) + 8LL) != *(unsigned __int8 *)(a1 + 48))
  {
    id v3 = sub_100155038();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = *(unsigned __int8 *)(a1 + 48);
      *(_DWORD *)__int128 buf = 67109120;
      int v10 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Updating airplayDisplayActive to %{BOOL}d",  buf,  8u);
    }

    [WeakRetained willChangeValueForKey:@"airplayDisplayActive"];
    id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained cacheDataAccessSerialQueue]);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_10015590C;
    void v7[3] = &unk_1003D2008;
    void v7[4] = WeakRetained;
    char v8 = *(_BYTE *)(a1 + 48);
    dispatch_sync(v6, v7);

    [WeakRetained didChangeValueForKey:@"airplayDisplayActive"];
  }
}

uint64_t sub_10015590C(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 8LL) = *(_BYTE *)(result + 40);
  return result;
}

void sub_100155A68(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.AVSystemControllerCache", "");
  id v2 = (void *)qword_100471090;
  qword_100471090 = (uint64_t)v1;
}

void sub_100155AE0(id a1)
{
  id v1 = -[PBProgrammingGuide _init](objc_alloc(&OBJC_CLASS___PBProgrammingGuide), "_init");
  id v2 = (void *)qword_1004710A0;
  qword_1004710A0 = (uint64_t)v1;
}

id sub_100155E84(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reload];
}

void sub_1001560A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1001560BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  char v8 = WeakRetained;
  if (v6)
  {
    id v9 = sub_100083AC8();
    int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100286894(v6, v10);
    }

    v8[24] = 0;
  }

  else
  {
    unsigned int v11 = [WeakRetained _processUpdatesWithBundleList:v5];
    v8[24] = 0;
    if (v11) {
      [v8 _notifyProgrammingGuideDidUpdate];
    }
  }
}

void sub_100156B9C(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 URLsForDirectory:14 inDomains:1]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 firstObject]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 URLByAppendingPathComponent:@"PineBoard"]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 URLByAppendingPathComponent:@"ProgrammingGuide"]);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  [v6 createDirectoryAtURL:v5 withIntermediateDirectories:1 attributes:0 error:0];

  uint64_t v7 = objc_claimAutoreleasedReturnValue([v5 URLByAppendingPathComponent:@"ProvisionedBundleIdentifiers.plist"]);
  char v8 = (void *)qword_1004710B0;
  qword_1004710B0 = v7;
}

void sub_100156CC4(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 URLsForDirectory:14 inDomains:1]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 firstObject]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 URLByAppendingPathComponent:@"PineBoard"]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 URLByAppendingPathComponent:@"ProgrammingGuide"]);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  [v6 createDirectoryAtURL:v5 withIntermediateDirectories:1 attributes:0 error:0];

  uint64_t v7 = objc_claimAutoreleasedReturnValue( [v5 URLByAppendingPathComponent:@"ApplicationIdentifiersByBundleIdentifiersMapping.plist"]);
  char v8 = (void *)qword_1004710C0;
  qword_1004710C0 = v7;
}

void sub_100156DEC(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 URLsForDirectory:14 inDomains:1]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 firstObject]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 URLByAppendingPathComponent:@"PineBoard"]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 URLByAppendingPathComponent:@"ProgrammingGuide"]);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  [v6 createDirectoryAtURL:v5 withIntermediateDirectories:1 attributes:0 error:0];

  uint64_t v7 = objc_claimAutoreleasedReturnValue([v5 URLByAppendingPathComponent:@"DisabledApplicationIdentifiers.plist"]);
  char v8 = (void *)qword_1004710D0;
  qword_1004710D0 = v7;
}

void sub_100157238(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:PBSUserProfileApplicationManagerServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_100157480(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSUserProfileApplicationManagerConfigureConnection();
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PBUserProfileApplicationManager sharedInstance]( &OBJC_CLASS___PBUserProfileApplicationManager,  "sharedInstance"));
  [v3 setInterfaceTarget:v4];

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_10015752C;
  _OWORD v5[3] = &unk_1003D2DC8;
  id v6 = *(id *)(a1 + 32);
  [v3 setInvalidationHandler:v5];
}

void sub_10015752C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100084680();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v7 = 138543618;
    uint64_t v8 = v6;
    __int16 v9 = 2112;
    id v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "User profile application connection invalidated. {client=%{public}@, connection=%@}",  (uint8_t *)&v7,  0x16u);
  }
}

int64_t sub_100157630(id a1, NSNumber *a2, NSNumber *a3)
{
  return -[NSNumber compare:](a2, "compare:", a3);
}

void sub_100157800( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100157818(uint64_t result, _BYTE *a2, float a3)
{
  if (*(float *)(result + 40) < a3)
  {
    *(float *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = a3;
    *a2 = 1;
  }

  return result;
}

void sub_1001578D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001578EC(uint64_t result, _BYTE *a2, float a3)
{
  if (*(float *)(result + 40) > a3)
  {
    *(float *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = a3;
    *a2 = 1;
  }

  return result;
}

uint64_t sub_10015799C(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_100157AF4(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) values]);
}

void sub_100157CC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (char *)[*(id *)(*(void *)(a1 + 32) + 8) count];
  id v5 = *(void **)(*(void *)(a1 + 32) + 8LL);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_100157D58;
  void v7[3] = &unk_1003D9838;
  id v8 = v3;
  __int16 v9 = v4 - 1;
  id v6 = v3;
  [v5 enumerateObjectsUsingBlock:v7];
}

id sub_100157D58(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  [a2 floatValue];
  double v7 = v6;
  if (v5 == a3) {
    id v8 = @"%.1f";
  }
  else {
    id v8 = @"%.1f, ";
  }
  return objc_msgSend(v4, "appendFormat:", v8, *(void *)&v7);
}

void sub_100157EA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:PBSCaptiveNetworkServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_100158124(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSCaptiveNetworkServiceConfigureConnection();
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_1001581C4;
  void v4[3] = &unk_1003D1048;
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 32);
  [v3 setInvalidationHandler:v4];
}

void sub_1001581C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100082844();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    int v8 = 138543874;
    uint64_t v9 = v6;
    __int16 v10 = 2048;
    uint64_t v11 = v7;
    __int16 v12 = 2112;
    id v13 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated. {client=%{public}@, service_ptr=%p, connection=%@}",  (uint8_t *)&v8,  0x20u);
  }
}

id sub_100158634(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1001586CC(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1004710E0;
  qword_1004710E0 = (uint64_t)v1;
}

void sub_100158790(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  int v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  uint64_t v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  __int16 v10 = NSStringFromClass(v9);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  __int16 v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  21LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  __int16 v14 = *(void **)(v13 + 8);
  *(void *)(v13 + _Block_object_dispose(va, 8) = v12;
}

PBContentPresentingContainmentViewController *sub_1001589C8(uint64_t a1)
{
  return  -[PBContentPresentingContainmentViewController initWithChildViewController:allowsInteraction:expectsEventForwarding:]( [PBContentPresentingContainmentViewController alloc],  "initWithChildViewController:allowsInteraction:expectsEventForwarding:",  *(void *)(a1 + 32),  1,  [*(id *)(a1 + 40) expectsEventForwarding]);
}

LABEL_24:
}

  swift_bridgeObjectRelease(a1);
  return 0LL;
}

        __break(1u);
        goto LABEL_25;
      }

id sub_1001597A0(void *a1)
{
  id v1 = a1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 identifier]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@-%p", v2, v1));

  return v3;
}

id sub_100159A84(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) scenePresenter]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 identifier]);

  return v2;
}

id sub_100159AC4(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sceneIdentifier]);
}

id sub_100159AE4(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutLevel];
}

void sub_100159DDC(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1004710F0;
  qword_1004710F0 = (uint64_t)v1;
}

void sub_100159F20(uint64_t a1, uint64_t a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10015BA94;
  block[3] = &unk_1003D0680;
  void block[4] = a2;
  dispatch_async(&_dispatch_main_q, block);
}

void sub_10015A0A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _volumeStateForSource:*(void *)(a1 + 48)]);
  uint64_t v4 = *(void **)(a1 + 32);
  if (v4)
  {
    [v4 floatValue];
    BOOL v6 = v5 == 0.0;
  }

  else
  {
    BOOL v6 = 0LL;
  }

  [v3 setMuted:v6];
  [v3 setTracksVolumeLevel:*(unsigned __int8 *)(a1 + 56)];
  [WeakRetained _updateMutedState];
}

void sub_10015A6B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11, id *a12, id *a13, id *a14)
{
}

CFStringRef sub_10015A784(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained isDisplayingCaptionsOnMute];
  if ((_DWORD)v2)
  {
    id v3 = sub_1000F69AC();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Initialized with captions previously displayed while in a muted state, hiding captions while we determine the correct state",  v7,  2u);
    }

    id v2 = [WeakRetained _hideCaptions];
  }

  else {
    float v5 = @"Disabled";
  }

  return v5;
}

id sub_10015A828(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained isDisplayingCaptionsOnMute])
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[_self isDisplayingCaptionsOnMute] == NO"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100286C44();
    }
    id result = (id) _bs_set_crash_log_message([v16 UTF8String]);
    __break(0);
  }

  else
  {
    __int16 v14 = (void *)objc_claimAutoreleasedReturnValue([v9 currentState]);

    return v14;
  }

  return result;
}

__CFString *sub_10015A928(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v14 = [WeakRetained isDisplayingCaptionsOnMute];
  if ((_DWORD)v14)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[_self isDisplayingCaptionsOnMute] == NO"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100286CEC();
    }
    id result = (__CFString *)_bs_set_crash_log_message([v17 UTF8String]);
    __break(0);
  }

  else
  {
    if (_AXSAutomaticSubtitlesShowWhenMuted(v14))
    {
      if ([WeakRetained isMuted])
      {
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3221225472LL;
        _DWORD v18[2] = sub_10015AA8C;
        v18[3] = &unk_1003CFF08;
        id v19 = v9;
        [v19 executeBlockAfterCurrentStateTransition:v18];
      }

      unsigned int v15 = @"Idle";
    }

    else
    {
      unsigned int v15 = (__CFString *)objc_claimAutoreleasedReturnValue([v9 currentState]);
    }

    return v15;
  }

  return result;
}

id sub_10015AA8C(uint64_t a1)
{
  return [*(id *)(a1 + 32) postEvent:@"Mute"];
}

CFStringRef sub_10015AAAC(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained isDisplayingCaptionsOnMute])
  {
    unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[_self isDisplayingCaptionsOnMute] == NO"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100286D94();
    }
    id result = (const __CFString *)_bs_set_crash_log_message([v15 UTF8String]);
    __break(0);
  }

  else
  {
    [WeakRetained _showCaptions];

    return @"DisplayingCaptions";
  }

  return result;
}

id sub_10015ABA4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained isDisplayingCaptionsOnMute])
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[_self isDisplayingCaptionsOnMute] == NO"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100286E3C();
    }
    id result = (id) _bs_set_crash_log_message([v16 UTF8String]);
    __break(0);
  }

  else
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 currentState]);

    return v14;
  }

  return result;
}

id sub_10015ACA4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained isDisplayingCaptionsOnMute])
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[_self isDisplayingCaptionsOnMute] == NO"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100286EE4();
    }
    id result = (id) _bs_set_crash_log_message([v16 UTF8String]);
    __break(0);
  }

  else
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 currentState]);

    return v14;
  }

  return result;
}

__CFString *sub_10015ADA4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v14 = [WeakRetained isDisplayingCaptionsOnMute];
  if ((_DWORD)v14)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[_self isDisplayingCaptionsOnMute] == NO"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100286F8C();
    }
    id result = (__CFString *)_bs_set_crash_log_message([v17 UTF8String]);
    __break(0);
  }

  else
  {
    else {
      unsigned int v15 = @"Disabled";
    }

    return v15;
  }

  return result;
}

id sub_10015AEB8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained isDisplayingCaptionsOnMute])
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 currentState]);

    return v14;
  }

  else
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[_self isDisplayingCaptionsOnMute]"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100287034();
    }
    id result = (id) _bs_set_crash_log_message([v16 UTF8String]);
    __break(0);
  }

  return result;
}

CFStringRef sub_10015AFB8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained isDisplayingCaptionsOnMute])
  {
    [WeakRetained _hideCaptions];

    return @"Idle";
  }

  else
  {
    unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[_self isDisplayingCaptionsOnMute]"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1002870DC();
    }
    id result = (const __CFString *)_bs_set_crash_log_message([v15 UTF8String]);
    __break(0);
  }

  return result;
}

id sub_10015B0B0(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained isDisplayingCaptionsOnMute])
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 currentState]);

    return v14;
  }

  else
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[_self isDisplayingCaptionsOnMute]"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100287184();
    }
    id result = (id) _bs_set_crash_log_message([v16 UTF8String]);
    __break(0);
  }

  return result;
}

__CFString *sub_10015B1B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (_AXSAutomaticSubtitlesShowWhenMuted(WeakRetained))
  {
    float v5 = (__CFString *)objc_claimAutoreleasedReturnValue([v3 currentState]);
  }

  else
  {
    [WeakRetained _hideCaptions];
    float v5 = @"Disabled";
  }

  return v5;
}

void sub_10015B41C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

void sub_10015B444(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = objc_opt_class(&OBJC_CLASS____PBVolumeState);
  id v6 = v4;
  uint64_t v7 = v6;
  if (v5)
  {
    if ((objc_opt_isKindOfClass(v6, v5) & 1) != 0) {
      int v8 = v7;
    }
    else {
      int v8 = 0LL;
    }
  }

  else
  {
    int v8 = 0LL;
  }

  id v9 = v8;

  if (v9 && [v9 tracksVolumeLevel])
  {
    unsigned int v10 = [v9 isMuted];
    uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8LL);
    if (v10 && *(_DWORD *)(v11 + 24) != 1) {
      int v12 = 2;
    }
    else {
      int v12 = 1;
    }
    *(_DWORD *)(v11 + 24) = v12;
  }
}

void sub_10015BA94(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v1 postEvent:@"ShowWhenMutedPrefUpdated"];
}

  ;
}

uint64_t sub_10015BAF4()
{
  return objc_opt_class(*(void *)(v0 + 32));
}

  ;
}

  ;
}

uint64_t sub_10015BB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 40) = a2;
  return *(void *)(a1 + 48);
}

  ;
}

  ;
}

id sub_10015BF1C(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_10015BFB4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100471100;
  qword_100471100 = (uint64_t)v1;
}

void sub_10015C078(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBDisplayManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(v8 + 16);
  *(void *)(v8 + 16) = v7;

  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "addStateObserver:");
  uint64_t v11 = objc_opt_self(&OBJC_CLASS___PBDialogManager, v10);
  int v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v12]);

  [v13 addObserver:*(void *)(a1 + 32)];
}

void sub_10015C340(_Unwind_Exception *a1)
{
}

void sub_10015C364(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _cleanupForDismissalWithError:*(void *)(a1 + 32)];
}

void sub_10015CAB4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10015CAD8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v6)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10028722C(WeakRetained, (uint64_t)v6);
      }
      uint64_t v8 = *(void *)(a1 + 40);
      if (v8)
      {
        id v9 = *(void (**)(void))(v8 + 16);
LABEL_9:
        v9();
      }
    }

    else
    {
      uint64_t v11 = objc_opt_class(&OBJC_CLASS___PBSimpleRemoteViewController);
      if ((objc_opt_isKindOfClass(v5, v11) & 1) != 0) {
        int v12 = v5;
      }
      else {
        int v12 = 0LL;
      }
      id v13 = v12;
      id v14 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewService:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewService:",  v13));
      unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained shownAssistantContext]);
      [v15 setDismissHandler:*(void *)(a1 + 40)];

      id v16 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained shownAssistantContext]);
      [v16 setPresentedController:v13];

      id v17 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained shownAssistantContext]);
      [v17 setDialogueContext:v14];

      id v18 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
      uint64_t v20 = objc_opt_self(&OBJC_CLASS___PBSDisplayAssistantPresentationRequest, v19);
      __int128 v21 = (objc_class *)objc_claimAutoreleasedReturnValue(v20);
      __int128 v22 = NSStringFromClass(v21);
      __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
      uint64_t v24 = *(void *)(a1 + 32);
      uint64_t v31 = v23;
      uint64_t v32 = v24;
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v32,  &v31,  1LL));
      [v18 presentDialogWithContext:v14 options:v25 completion:0];

      id v26 = sub_100082A9C();
      id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        id v28 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained shownAssistantContext]);
        int v29 = 138543362;
        uint64_t v30 = v28;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "DA service: presented with display context: %{public}@",  (uint8_t *)&v29,  0xCu);
      }
    }
  }

  else
  {
    uint64_t v10 = *(void *)(a1 + 40);
    if (v10)
    {
      id v9 = *(void (**)(void))(v10 + 16);
      goto LABEL_9;
    }
  }
}

void sub_10015D02C(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___PBSuggestedUserProfileStore);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBUserProfileManager sharedInstance](&OBJC_CLASS___PBUserProfileManager, "sharedInstance"));
  id v3 = -[PBSuggestedUserProfileManager initWithStore:userProfileManager:]( objc_alloc(&OBJC_CLASS___PBSuggestedUserProfileManager),  "initWithStore:userProfileManager:",  v1,  v2);
  uint64_t v4 = (void *)qword_100471110;
  qword_100471110 = (uint64_t)v3;
}

id sub_10015D160(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_loadFamilyCircleWithCompletionHandler:", *(void *)(a1 + 40));
}

id sub_10015D1E4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_loadFamilyCircle");
}

void sub_10015D3E8(_Unwind_Exception *a1)
{
}

void sub_10015D400(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 40) snapshot]);
    id v3 = *(void **)(a1 + 40);
    uint64_t v4 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    void v6[2] = sub_10015D4A4;
    void v6[3] = &unk_1003D2560;
    id v7 = v2;
    id v8 = v3;
    id v5 = v2;
    dispatch_async(v4, v6);
  }

uint64_t sub_10015D4A4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_10015D4C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_100083FF0();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1002872D0((uint64_t)v6, v8, v9, v10, v11, v12, v13, v14);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }

  else
  {
    uint64_t v15 = *(void *)(a1 + 32);
    id v16 = *(dispatch_queue_s **)(v15 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10015D5B4;
    block[3] = &unk_1003D2F08;
    void block[4] = v15;
    id v18 = v5;
    id v19 = *(id *)(a1 + 48);
    dispatch_async(v16, block);
  }
}

void sub_10015D5B4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) members]);
  objc_msgSend(v2, "_workQueue_processFamilyCircleMembers:completionHandler:", v3, *(void *)(a1 + 48));
}

void sub_10015D9CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
}

uint64_t sub_10015D9F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 altDSID]);

  if (v4)
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 altDSID]);
    LODWORD(v5) = [v5 containsObject:v6];

    if (!(_DWORD)v5)
    {
      uint64_t v12 = 1LL;
      goto LABEL_9;
    }

    id v7 = sub_100083FF0();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 altDSID]);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 appleID]);
      int v14 = 141558530;
      uint64_t v15 = 1752392040LL;
      __int16 v16 = 2112;
      id v17 = v9;
      __int16 v18 = 2112;
      id v19 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "FAFamilyMember altDSID conflicts with existing account altDSID, removing family member from suggested users. {al tDSID=%{mask.hash}@, appleID=%@}",  (uint8_t *)&v14,  0x20u);
    }
  }

  else
  {
    id v11 = sub_100083FF0();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100287338(v3, v8);
    }
  }

  uint64_t v12 = 0LL;
LABEL_9:

  return v12;
}

uint64_t sub_10015DB68(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10015DB78(uint64_t a1)
{
}

PBSSuggestedUserProfile *sub_10015DB90(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSPersonNameComponents);
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  id v7 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 firstName]);
  [v7 setGivenName:v8];

  uint64_t v9 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 lastName]);
  [v9 setFamilyName:v10];

  id v11 = objc_alloc(&OBJC_CLASS___PBSSuggestedUserProfile);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 UUIDString]);
  uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v3 altDSID]);
  __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([v3 dsid]);

  id v17 = -[PBSSuggestedUserProfile initWithIdentifier:personNameComponents:altDSID:suppressed:dsid:]( v11,  "initWithIdentifier:personNameComponents:altDSID:suppressed:dsid:",  v13,  v14,  v15,  0LL,  v16);
  return v17;
}

uint64_t sub_10015DCE0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

id sub_10015E1D4(id a1, PBSSuggestedUserProfile *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[PBSSuggestedUserProfile altDSID](a2, "altDSID"));
}

void sub_10015E3B0(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 40) snapshot]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_10015E448(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 56LL);
  if (!v2 || (id result = [v2 timeIntervalSinceNow], fabs(v4) > 60.0))
  {
    id v5 = sub_100083FF0();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
      sub_100287470(v6);
    }

    return objc_msgSend(*(id *)(a1 + 32), "_workQueue_loadFamilyCircle");
  }

  return result;
}

id sub_10015E55C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_clearSnapshot");
}

id sub_10015E600(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "_workQueue_updateSuppressedForSuggestedUserWithIdentifier:suppressed:",  *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48));
}

id sub_10015E6E8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) addObject:*(void *)(a1 + 40)];
}

id sub_10015E794(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) removeObject:*(void *)(a1 + 40)];
}

id sub_10015E988(uint64_t a1)
{
  return [*(id *)(a1 + 32) suggestedUserProfileManagerDidUpdate];
}

id sub_10015E9F8(uint64_t a1)
{
  id v2 = sub_100083FF0();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Did receive PBUserProfileManager update, suggested users will be refreshed.",  v5,  2u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "_workQueue_loadFamilyCircle");
}

Class sub_10015EB9C(uint64_t a1)
{
  double v4 = 0LL;
  if (!qword_100471128)
  {
    __int128 v5 = off_1003D9A20;
    uint64_t v6 = 0LL;
    qword_100471128 = _sl_dlopen(&v5, &v4);
    id v2 = v4;
    if (!qword_100471128)
    {
      abort_report_np("%s", v4);
      goto LABEL_7;
    }

    if (v4) {
      goto LABEL_8;
    }
  }

  while (1)
  {
    Class result = objc_getClass("FAFetchFamilyCircleRequest");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL)) {
      break;
    }
LABEL_7:
    id v2 = (char *)sub_1002874B0();
LABEL_8:
    free(v2);
  }

  qword_100471120 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_10015F108(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 isValid])
  {
    double v4 = (void *)objc_claimAutoreleasedReturnValue([v3 clientProcess]);
    unsigned __int8 v5 = [v4 isCurrentProcess];

    if ((v5 & 1) != 0)
    {
      uint64_t v6 = 1LL;
    }

    else
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
      id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) identifier]);
      uint64_t v6 = (uint64_t)[v7 isEqualToString:v8];
    }

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 settings]);
    unsigned int v10 = [v9 isForeground];

    if ((_DWORD)v6 != v10)
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue( +[FBUpdateSceneTransaction pb_updateSceneTransactionWithScene:foreground:]( &OBJC_CLASS___FBUpdateSceneTransaction,  "pb_updateSceneTransactionWithScene:foreground:",  v3,  v6));
      [*(id *)(a1 + 40) addSynchronizedTransaction:v11];
    }
  }
}

void sub_10015F574(void *a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 sharedScheduledSleepManager]);
  [v3 scheduledSleepRequestedByClient:a1[4] request:a1[5] completion:a1[6]];
}

void sub_10015F708(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 sharedScheduledSleepManager]);
  [v3 getAvailableScheduledSleepRequestsWithCompletion:*(void *)(a1 + 32)];
}

void sub_10015F898(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 sharedScheduledSleepManager]);
  [v3 getCurrentScheduledSleepWithCompletion:*(void *)(a1 + 32)];
}

void sub_10015FA30(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 sharedScheduledSleepManager]);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_10015FAD4;
  _OWORD v5[3] = &unk_1003D0048;
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  [v3 cancelScheduledSleepRequestFromClient:v4 completion:v5];
}

void sub_10015FAD4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    id v5 = a3;
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
    (*(void (**)(uint64_t, void *, id))(v3 + 16))(v3, v6, v5);
  }

void sub_10015FE78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10015FEA0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) readyDefaultKioskScene]);
    uint64_t v9 = (void *)WeakRetained[7];
    WeakRetained[7] = v8;

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    _DWORD v10[2] = sub_10015FF7C;
    void v10[3] = &unk_1003D0110;
    id v11 = v6;
    [WeakRetained _prepareKioskAnimationInTransaction:v5 completion:v10];
  }

  else
  {
    (*((void (**)(id, void))v6 + 2))(v6, 0LL);
  }
}

uint64_t sub_10015FF7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

BOOL sub_10015FF9C(id a1, BSTransaction *a2)
{
  return 1;
}

void sub_100160284( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1001602A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___PBSPrepareKioskScreenSaverAnimationActionResponse);
    id v6 = v3;
    id v7 = v6;
    if (v5)
    {
      if ((objc_opt_isKindOfClass(v6, v5) & 1) != 0) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0LL;
      }
    }

    else
    {
      uint64_t v8 = 0LL;
    }

    id v9 = v8;

    unsigned int v10 = [v9 shouldAnimate];
    if (v10)
    {
      id v11 = objc_alloc_init(&OBJC_CLASS____PBScreenSaverFromKioskPresentationAnimationTransaction);
      -[_PBScreenSaverFromKioskPresentationAnimationTransaction setScreenSaverViewController:]( v11,  "setScreenSaverViewController:",  *((void *)WeakRetained + 4));
      -[_PBScreenSaverFromKioskPresentationAnimationTransaction setAnimated:](v11, "setAnimated:", WeakRetained[24]);
      id v12 = *((id *)WeakRetained + 7);
      if (v11) {
        -[_PBScreenSaverFromKioskPresentationAnimationTransaction setContext:](v11, "setContext:", v12);
      }
      else {

      }
      uint64_t v14 = *(void **)(a1 + 32);
    }

    else
    {
      uint64_t v13 = *(void **)(a1 + 32);
      id v11 = (_PBScreenSaverFromKioskPresentationAnimationTransaction *)objc_claimAutoreleasedReturnValue( [WeakRetained _defaultAppAnimationTransaction]);
      uint64_t v14 = v13;
    }

    [v14 addChildTransaction:v11 withSchedulingPolicy:1];
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_10016095C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, id location)
{
}

id sub_10016099C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  __int128 v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v7[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v7[1] = v3;
  void v7[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v7];
  uint64_t v4 = *(void **)(a1 + 40);
  CGAffineTransformMakeScale(&v6, 0.7, 0.7);
  return [v4 setTransform:&v6];
}

id sub_100160A08(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

void sub_100160A24(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) layer]);
  [v2 setMeshTransform:0];
}

void sub_100160A68(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_100083D98();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  WeakRetained,  OS_LOG_TYPE_DEFAULT,  "_PBScreenSaverPresentationAnimationTransaction spring completed out of final position",  v4,  2u);
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 32));
    -[os_log_s satisfyMilestone:](WeakRetained, "satisfyMilestone:", @"Spring Animation Complete");
  }
}

void sub_100160AEC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_100083D98();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  WeakRetained,  OS_LOG_TYPE_DEFAULT,  "_PBScreenSaverPresentationAnimationTransaction alpha completed out of final position",  v4,  2u);
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 32));
    -[os_log_s satisfyMilestone:](WeakRetained, "satisfyMilestone:", @"Alpha Animation Complete");
  }
}

void sub_10016108C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_1001610B4(uint64_t a1)
{
  return [*(id *)(a1 + 40) setAlpha:0.0];
}

id sub_1001610E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHidden:1];
}

void sub_100161104(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_100083D98();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  WeakRetained,  OS_LOG_TYPE_DEFAULT,  "_PBScreenSaverReducedMotionPresentationAnimationTransaction alpha completed out of final position",  v4,  2u);
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 32));
    -[os_log_s satisfyMilestone:](WeakRetained, "satisfyMilestone:", @"Alpha Animation Complete");
  }
}

void sub_10016185C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, id location)
{
}

void sub_1001618D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___PBSPerformKioskAnimationActionResponse);
  id v5 = v3;
  CGAffineTransform v6 = v5;
  if (v4)
  {
    if ((objc_opt_isKindOfClass(v5, v4) & 1) != 0) {
      id v7 = v6;
    }
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  id v8 = v7;

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 animationFence]);
  if (v9) {
    +[UIScene _synchronizeDrawingWithFence:](&OBJC_CLASS___UIScene, "_synchronizeDrawingWithFence:", v9);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained satisfyMilestone:@"Kiosk Animation Completed"];
}

id sub_10016198C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[UIApplicationSceneTransitionContext transitionContext]( &OBJC_CLASS___UIApplicationSceneTransitionContext,  "transitionContext"));
  [v2 setAnimationFence:*(void *)(a1 + 32)];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", *(void *)(a1 + 40)));
  [v2 setActions:v3];

  return v2;
}

id sub_1001619F4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  __int128 v2 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v4[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v4[1] = v2;
  void v4[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  return [v1 setTransform:v4];
}

void sub_100161A30(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBWallpaperManager sharedInstance](&OBJC_CLASS___PBWallpaperManager, "sharedInstance"));
  [v1 dismissWallpaperAnimated:0 completion:0];
}

id sub_100161A6C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHidden:1];
}

void sub_100161A88(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_100083D98();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  WeakRetained,  OS_LOG_TYPE_DEFAULT,  "_PBScreenSaverFromKioskPresentationAnimationTransaction spring completed out of final position",  v4,  2u);
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 32));
    -[os_log_s satisfyMilestone:](WeakRetained, "satisfyMilestone:", @"Spring Animation Complete");
  }
}

void sub_100161B0C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_100083D98();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  WeakRetained,  OS_LOG_TYPE_DEFAULT,  "_PBScreenSaverFromKioskPresentationAnimationTransaction alpha completed out of final position",  v4,  2u);
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 32));
    -[os_log_s satisfyMilestone:](WeakRetained, "satisfyMilestone:", @"Alpha Animation Complete");
  }
}

RBSAssertion *__cdecl sub_100161D34(id a1, NSString *a2, RBSTarget *a3, NSArray *a4)
{
  CGAffineTransform v6 = a4;
  id v7 = a3;
  id v8 = a2;
  id v9 = -[RBSAssertion initWithExplanation:target:attributes:]( objc_alloc(&OBJC_CLASS___RBSAssertion),  "initWithExplanation:target:attributes:",  v8,  v7,  v6);

  return v9;
}

void sub_1001622E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100162314(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _stateDidChange:1];
}

id *sub_100162388(id *a1)
{
  if (a1) {
    a1 = (id *)objc_claimAutoreleasedReturnValue([a1[10] log]);
  }
  return a1;
}

id *sub_1001623AC(id *result, uint64_t a2)
{
  if (result) {
    return (id *)[result[10] setLog:a2];
  }
  return result;
}

uint64_t sub_100162484(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100162494(uint64_t a1)
{
}

void sub_1001624AC(uint64_t a1)
{
}

void sub_1001626F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = [*(id *)(a1 + 32) copy];
    uint64_t v4 = (void *)WeakRetained[2];
    WeakRetained[2] = v3;
  }
}

uint64_t sub_1001627CC(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 8LL);
  return result;
}

void sub_1001628E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained) {
    WeakRetained[8] = *(_BYTE *)(a1 + 40);
  }
}

void sub_1001629D4(uint64_t a1)
{
}

void sub_100162C18(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained) {
    objc_storeStrong(WeakRetained + 3, *(id *)(a1 + 32));
  }
}

void sub_100162E74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = objc_claimAutoreleasedReturnValue([*((id *)WeakRetained + 3) arrayByAddingObjectsFromArray:*(void *)(a1 + 32)]);
    id v5 = (void *)v3[3];
    void v3[3] = v4;
  }
}

void sub_1001631AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_queue_stateDidChange:", *(void *)(a1 + 40));
}

void sub_1001634A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

__CFString *sub_1001634C4(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 3) {
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"_PBProcessLaunchAgentStateChangeSource(%ld)",  a1));
  }
  else {
    uint64_t v1 = off_1003D9B28[a1 - 1];
  }
  return v1;
}

void sub_10016351C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _assertion:v6 didInvalidateWithError:v5];
}

void sub_1001636CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "_queue_assertion:didInvalidateWithError:", *(void *)(a1 + 32), *(void *)(a1 + 40));
}

void sub_10016421C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, id location)
{
}

void sub_10016424C(uint64_t a1)
{
}

void sub_100164264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_queue_registerService:", a4);
}

void sub_100164298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_queue_processEvent:", a5);
}

void sub_1001642CC(uint64_t a1)
{
  id v2 = IOHIDEventSystemClientCopyServices(*(IOHIDEventSystemClientRef *)(*(void *)(a1 + 32) + 40LL));
  if (v2)
  {
    id v3 = v2;
    if (CFArrayGetCount(v2) >= 1)
    {
      CFIndex v4 = 0LL;
      do
      {
        ValueAtIndeCGFloat x = CFArrayGetValueAtIndex(v3, v4);
        CFTypeRef v6 = CFRetain(ValueAtIndex);
        v8[0] = _NSConcreteStackBlock;
        v8[1] = 3221225472LL;
        void v8[2] = sub_1001643B0;
        v8[3] = &unk_1003D05A8;
        id v7 = *(dispatch_queue_s **)(a1 + 40);
        id v9 = *(id *)(a1 + 32);
        CFTypeRef v10 = v6;
        dispatch_async(v7, v8);

        ++v4;
      }

      while (v4 < CFArrayGetCount(v3));
    }

    CFRelease(v3);
  }

void sub_1001643B0(uint64_t a1)
{
}

void sub_100164948( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100164968(uint64_t a1, int a2, int a3, CFTypeRef cf)
{
  CFTypeRef v6 = *(dispatch_queue_s **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1001649FC;
  _OWORD v7[3] = &unk_1003D1D98;
  objc_copyWeak(v8, (id *)(a1 + 40));
  v8[1] = (id)cf;
  dispatch_async(v6, v7);
  objc_destroyWeak(v8);
}

void sub_1001649FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_queue_unregisterService:", *(void *)(a1 + 40));
  CFRelease(*(CFTypeRef *)(a1 + 40));
}

void sub_100164D20(uint64_t a1, void *a2)
{
  id v3 = a2;
  CFIndex v4 = sub_10006BE1C();
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  [v3 setDomain:v5];

  [v3 setService:PBSUserProfilePictureServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_100165090(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSUserProfilePictureServiceConfigureConnection();
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_100165130;
  _OWORD v4[3] = &unk_1003D1048;
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 32);
  [v3 setInvalidationHandler:v4];
}

void sub_100165130(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000846F8();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    int v8 = 138543874;
    uint64_t v9 = v6;
    __int16 v10 = 2048;
    uint64_t v11 = v7;
    __int16 v12 = 2112;
    id v13 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated. {client=%{public}@, service_ptr=%p, connection=%@}",  (uint8_t *)&v8,  0x20u);
  }
}

void sub_100165520( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100165538(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100165548(uint64_t a1)
{
}

uint64_t sub_100165560(uint64_t a1, void *a2)
{
  id v3 = [a2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_100165938(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100165CFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = objc_alloc_init(&OBJC_CLASS___PBTextEntryViewController);
  -[PBTextEntryViewController setDefaultTitle:](v3, "setDefaultTitle:", *(void *)(a1 + 32));
  -[PBTextEntryViewController setDefaultMessage:](v3, "setDefaultMessage:", *(void *)(a1 + 40));
  id v4 = sub_1001C307C(@"CVVPlaceholder", 0LL);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  -[PBTextEntryViewController addTextFieldWithInitialText:placeholder:keyboardType:]( v3,  "addTextFieldWithInitialText:placeholder:keyboardType:",  0LL,  v5,  4LL);

  id v6 = sub_1001C307C(@"ButtonSubmit", 0LL);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = -[PBTextEntryViewController addButtonWithTitle:](v3, "addButtonWithTitle:", v7);

  -[PBTextEntryViewController setDefaultButtonIndex:](v3, "setDefaultButtonIndex:", v8);
  -[PBTextEntryViewController setDelegate:](v3, "setDelegate:", WeakRetained);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewController:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewController:",  v3));
  __int16 v10 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  [v10 presentDialogWithContext:v9 options:0 completion:0];
}

void sub_100165ED4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertController alertControllerWithTitle:message:preferredStyle:]( &OBJC_CLASS___UIAlertController,  "alertControllerWithTitle:message:preferredStyle:",  *(void *)(a1 + 32),  *(void *)(a1 + 40),  1LL));
  objc_initWeak(&location, v2);
  id v3 = sub_1001C307C(@"ButtonOK", 0LL);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  id v8[2] = sub_100166054;
  v8[3] = &unk_1003D8990;
  objc_copyWeak(&v10, &location);
  id v9 = *(id *)(a1 + 48);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[UIAlertAction actionWithTitle:style:handler:]( &OBJC_CLASS___UIAlertAction,  "actionWithTitle:style:handler:",  v4,  1LL,  v8));
  [v2 addAction:v5];

  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewController:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewController:",  v2));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  [v7 presentDialogWithContext:v6 options:0 completion:0];

  objc_destroyWeak(&v10);
  objc_destroyWeak(&location);
}

void sub_10016602C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100166054(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3) {
      (*(void (**)(void))(v3 + 16))();
    }
  }
}

__CFString *sub_1001662FC(unint64_t a1)
{
  if (a1 >= 6) {
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"UIGestureRecognizerState(%ld)",  a1));
  }
  else {
    uint64_t v1 = off_1003D9BF8[a1];
  }
  return v1;
}

id sub_100166350(uint64_t a1)
{
  uint64_t v1 = sub_100166370(a1, 0);
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

__CFString *sub_100166370(uint64_t a1, int a2)
{
  if (a1 > 100)
  {
    switch(a1)
    {
      case 'e':
        uint64_t v3 = @"Home";
        break;
      case 'f':
        uint64_t v3 = @"VolumeUp";
        break;
      case 'g':
        uint64_t v3 = @"VolumeDown";
        break;
      case 'h':
        uint64_t v3 = @"Lock";
        break;
      default:
        if (a1 == 500)
        {
          uint64_t v3 = @"LaunchPad";
        }

        else if (a1 == 501)
        {
          uint64_t v3 = @"ExposeAll";
        }

        else
        {
LABEL_37:
          if (a2 == 1) {
            id v4 = +[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%ld", a1);
          }
          else {
            id v4 = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"UIPressType(%ld)",  a1);
          }
          uint64_t v3 = (__CFString *)objc_claimAutoreleasedReturnValue(v4);
        }

        break;
    }
  }

  else
  {
    uint64_t v3 = @"UpArrow";
    switch(a1)
    {
      case -1LL:
        uint64_t v3 = @"None";
        break;
      case 0LL:
        return v3;
      case 1LL:
        uint64_t v3 = @"DownArrow";
        break;
      case 2LL:
        uint64_t v3 = @"LeftArrow";
        break;
      case 3LL:
        uint64_t v3 = @"RightArrow";
        break;
      case 4LL:
        uint64_t v3 = @"Select";
        break;
      case 5LL:
        uint64_t v3 = @"Menu";
        break;
      case 6LL:
        uint64_t v3 = @"PlayPause";
        break;
      case 8LL:
        uint64_t v3 = @"Play";
        break;
      case 9LL:
        uint64_t v3 = @"Pause";
        break;
      case 10LL:
        uint64_t v3 = @"Stop";
        break;
      case 11LL:
        uint64_t v3 = @"Rewind";
        break;
      case 12LL:
        uint64_t v3 = @"FastForward";
        break;
      case 13LL:
        uint64_t v3 = @"NextTrack";
        break;
      case 14LL:
        uint64_t v3 = @"PreviousTrack";
        break;
      case 15LL:
        uint64_t v3 = @"SkipForwards";
        break;
      case 16LL:
        uint64_t v3 = @"SkipBackwards";
        break;
      case 17LL:
        uint64_t v3 = @"DataOnScreen";
        break;
      case 18LL:
        uint64_t v3 = @"Microphone";
        break;
      case 19LL:
        uint64_t v3 = @"Guide";
        break;
      case 20LL:
        uint64_t v3 = @"VolumeMute";
        break;
      case 21LL:
        uint64_t v3 = @"TVProvider";
        break;
      case 30LL:
        uint64_t v3 = @"PageUp";
        break;
      case 31LL:
        uint64_t v3 = @"PageDown";
        break;
      case 32LL:
        uint64_t v3 = @"TVRemoteOneTwoThree";
        break;
      case 33LL:
        uint64_t v3 = @"TVRemoteFourColors";
        break;
      default:
        goto LABEL_37;
    }
  }

  return v3;
}

__CFString *sub_1001665A0(void *a1)
{
  id v1 = a1;
  id v2 = [v1 count];
  if (v2)
  {
    if (v2 == (id)1)
    {
      uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v1 firstObject]);
      id v4 = sub_100166350((uint64_t)[v3 integerValue]);
      uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
    }

    else
    {
      uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "bs_map:", &stru_1003D9BD8));
      uint64_t v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "componentsJoinedByString:", @", "));
    }

    id v6 = (__CFString *)v5;
  }

  else
  {
    id v6 = @"(empty)";
  }

  return v6;
}

id sub_100166640(id a1, NSNumber *a2)
{
  id v2 = sub_100166370(-[NSNumber integerValue](a2, "integerValue"), 1);
  return (id)objc_claimAutoreleasedReturnValue(v2);
}

void sub_100166C74( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location)
{
}

void sub_100166CCC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _optIn];
}

void sub_100166CF8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _optOut];
}

void sub_10016707C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) satisfyMilestone:@"ViewController Added"];
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) parentViewController]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 view]);
  [v5 bounds];
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) view]);
  objc_msgSend(v14, "setFrame:", v7, v9, v11, v13);

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  _DWORD v19[2] = sub_1001671C8;
  v19[3] = &unk_1003D2560;
  id v15 = v3;
  void v19[4] = *(void *)(a1 + 32);
  id v20 = v15;
  __int16 v16 = objc_retainBlock(v19);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(v17 + 32);
  if (v18) {
    (*(void (**)(uint64_t, void, void *))(v18 + 16))(v18, *(void *)(v17 + 16), v16);
  }
  else {
    ((void (*)(void *))v16[2])(v16);
  }
}

id sub_1001671C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) satisfyMilestone:@"Presentation Animation Finished"];
}

void sub_100167AF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *location, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, id a24)
{
}

id sub_100167B14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _layoutContextMenu]);

  return v2;
}

void sub_100167BE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained && (WeakRetained[7] || WeakRetained[1]))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _moveControl]);
    [v3 updateAction:v2[1]];
    [v3 updateButton:v2[7]];
  }
}

void sub_100167E1C(uint64_t a1)
{
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  id v2 = *(id *)(a1 + 40);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      double v6 = 0LL;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * (void)v6), "setAlpha:", *(double *)(a1 + 48), (void)v7);
        double v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }

    while (v4);
  }
}

void sub_100167F24(uint64_t a1)
{
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v12;
    double v6 = (_OWORD *)(a1 + 40);
    do
    {
      __int128 v7 = 0LL;
      do
      {
        if (*(void *)v12 != v5) {
          objc_enumerationMutation(v2);
        }
        __int128 v8 = *(void **)(*((void *)&v11 + 1) + 8LL * (void)v7);
        __int128 v9 = v6[1];
        v10[0] = *v6;
        v10[1] = v9;
        _DWORD v10[2] = v6[2];
        [v8 setTransform:v10];
        __int128 v7 = (char *)v7 + 1;
      }

      while (v4 != v7);
      id v4 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }

    while (v4);
  }
}

void sub_1001683C4(uint64_t a1)
{
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(id *)(a1 + 40);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        __int128 v7 = *(void **)(*((void *)&v10 + 1) + 8LL * (void)i);
        __int128 v8 = *(_OWORD *)(a1 + 72);
        v9[0] = *(_OWORD *)(a1 + 56);
        v9[1] = v8;
        void v9[2] = *(_OWORD *)(a1 + 88);
        [v7 setTransform:v9];
        [v7 setAlpha:*(double *)(a1 + 48)];
      }

      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v4);
  }
}

void sub_100168778(uint64_t a1)
{
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(id *)(a1 + 40);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        __int128 v7 = *(void **)(*((void *)&v10 + 1) + 8LL * (void)i);
        __int128 v8 = *(_OWORD *)(a1 + 72);
        v9[0] = *(_OWORD *)(a1 + 56);
        v9[1] = v8;
        void v9[2] = *(_OWORD *)(a1 + 88);
        [v7 setTransform:v9];
        [v7 setAlpha:*(double *)(a1 + 48)];
      }

      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v4);
  }
}

uint64_t sub_1001688AC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100168CC8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100168CE4(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained movePictureInPictureButtonPressed:v3];
}

void sub_100168F78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id a21)
{
}

void sub_100168FBC(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained enterSplitViewButtonPressed:v3];
}

void sub_100168FFC(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained expandPictureInPictureButtonPressed:v3];
}

void sub_100169504(uint64_t a1)
{
  CFOptionFlags v6 = 0LL;
  SInt32 v2 = CFUserNotificationDisplayAlert( 0.0,  0LL,  0LL,  0LL,  0LL,  *(CFStringRef *)(a1 + 32),  *(CFStringRef *)(a1 + 40),  *(CFStringRef *)(a1 + 48),  *(CFStringRef *)(a1 + 56),  0LL,  &v6);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001695C4;
  block[3] = &unk_1003D1C80;
  objc_copyWeak(v4, (id *)(a1 + 64));
  SInt32 v5 = v2;
  v4[1] = (id)v6;
  dispatch_async(&_dispatch_main_q, block);
  objc_destroyWeak(v4);
}

void sub_1001695C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    if (!*(_DWORD *)(a1 + 48)
      && !*(void *)(a1 + 40)
      && [WeakRetained canRepairViaCurrentlyAvailableUpdate])
    {
      [v3 _performApplicationRepair];
    }

    [v3 satisfyMilestone:@"UserNotification"];
  }
}

void sub_100169938(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  id v7 = sub_100083CA8();
  __int128 v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    __int128 v10 = @"Failed";
    int v11 = 138543874;
    if (a2) {
      __int128 v10 = @"Success";
    }
    uint64_t v12 = v9;
    __int16 v13 = 2114;
    __int128 v14 = v10;
    __int16 v15 = 2114;
    id v16 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[Signature Repair] [%{public}@] Upgrade result: %{public}@ - error: %{public}@.",  (uint8_t *)&v11,  0x20u);
  }
}

uint64_t sub_100169BB8(double *a1, double *a2, double *a3)
{
  double v3 = *a1;
  double v4 = a1[1];
  double v5 = a2[1];
  BOOL v6 = *a2 > *a1 || v5 <= v4;
  if (v6 && ((double v7 = a2[2], v8 = a2[3], v7 <= v3) ? (v9 = v8 <= v4) : (v9 = 1), v9))
  {
    double v10 = v4 - v3;
    double v11 = v5 - *a2;
    double v12 = v8 - v7;
    if (v4 - v3 <= v11 || v10 <= v12)
    {
      if (v10 <= v11)
      {
        *a3 = v5 - v4;
        if (v10 <= v12)
        {
          a3[1] = a2[2] - *a1;
          return 2;
        }
      }

      else
      {
        *a3 = v7 - v3;
      }

      return 1;
    }

    else
    {
      return -1;
    }
  }

  else
  {
    char v15 = 0;
    *a3 = 0.0;
  }

  return v15;
}

unint64_t sub_100169C50(unint64_t result)
{
  if (result)
  {
    double v1 = *(double *)(result + 8);
    uint64_t result = *(double *)result < 1.0;
    if (v1 < 1.0) {
      result |= 2uLL;
    }
  }

  return result;
}

void sub_10016A230(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 1.0, 1.0));
  SInt32 v2 = (void *)qword_100471130;
  qword_100471130 = v1;
}

void sub_10016A538(uint64_t a1)
{
  double v3 = (id *)(a1 + 32);
  SInt32 v2 = *(id **)(a1 + 32);
  if (!v2[1]
    || (unsigned __int8 v4 = [v2[2] isEqualToString:@"scan"], v2 = (id *)*v3, (v4 & 1) == 0))
  {
    double v5 = (void *)objc_claimAutoreleasedReturnValue([v2 _successfulSUCDescriptor]);
    BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([*v3 delegate]);
    [v9 manager:*v3 scanRequestDidLocateUpdate:v5 error:0];

    if (([*((id *)*v3 + 2) isEqualToString:@"scan"] & 1) == 0
      && (([*((id *)*v3 + 3) performAutoDownloadAndPrepare] & 1) != 0
       || [*(id *)(a1 + 40) downloadWhenFound]))
    {
      [*v3 startDownload:v5];
    }

    goto LABEL_10;
  }

  double v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  SUControllerErrorDomain,  *((void *)*v3 + 1),  0LL));
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue([*v3 delegate]);
  char v7 = objc_opt_respondsToSelector(v6, "manager:scanRequestDidLocateUpdate:error:");

  if ((v7 & 1) != 0)
  {
    double v8 = (void *)objc_claimAutoreleasedReturnValue([*v3 delegate]);
    [v8 manager:*v3 scanRequestDidLocateUpdate:0 error:v5];

LABEL_10:
    return;
  }

  double v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Missing manager:scanRequestDidLocateUpdate:error: API"));
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_100288334();
  }
  _bs_set_crash_log_message([v10 UTF8String]);
  __break(0);
}

void sub_10016A840(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, v2, 0LL);
}

void sub_10016AAD8(_Unwind_Exception *a1)
{
}

uint64_t sub_10016AAF0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10016AB00(uint64_t a1)
{
}

void sub_10016AB18(uint64_t a1, double a2)
{
  LODWORD(a2) = 1050253722;
  double v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _SUCProgressWithFractionComplete:a2 timeRemaining:3.0]);
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setProgress:v3];
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v4 manager:*(void *)(a1 + 32) didChangeProgressOnDownload:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

void sub_10016AB94(uint64_t a1, double a2)
{
  LODWORD(a2) = 1058642330;
  double v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _SUCProgressWithFractionComplete:a2 timeRemaining:2.0]);
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setProgress:v3];
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v4 manager:*(void *)(a1 + 32) didChangeProgressOnDownload:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

void sub_10016AC10(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)"fff?";
  double v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _SUCProgressWithFractionComplete:a2 timeRemaining:1.0]);
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setProgress:v3];
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v4 manager:*(void *)(a1 + 32) didChangeProgressOnDownload:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

void sub_10016AC8C(uint64_t a1, double a2)
{
  unsigned __int8 v4 = (id *)(a1 + 32);
  double v3 = *(id **)(a1 + 32);
  if (!v3[1]
    || (v5 = [v3[2] isEqualToString:@"download"], double v3 = (id *)*v4, (v5 & 1) == 0))
  {
    LODWORD(a2) = 1.0;
    BOOL v6 = (void *)objc_claimAutoreleasedReturnValue([v3 _SUCProgressWithFractionComplete:a2 timeRemaining:0.0]);
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setProgress:v6];
    double v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    char v11 = objc_opt_respondsToSelector(v10, "manager:didFinishDownload:");

    double v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    __int16 v13 = v12;
    if ((v11 & 1) != 0)
    {
      [v12 manager:*(void *)(a1 + 32) didFinishDownload:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
    }

    else
    {
      char v14 = objc_opt_respondsToSelector( v12,  "manager:didFinishDownload:willProceedWithInstallation:waitingForAdmissionControl:");

      char v15 = (void *)objc_claimAutoreleasedReturnValue([*v4 delegate]);
      __int16 v13 = v15;
      if ((v14 & 1) != 0)
      {
        [v15 manager:*(void *)(a1 + 32) didFinishDownload:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) willProceedWithInstallation:0 waitingForAdmissionControl:0];
      }

      else
      {
        char v16 = objc_opt_respondsToSelector( v15,  "manager:didFinishDownload:willProceedWithInstallation:waitingForAdmissionControl:denialReasons:");

        if ((v16 & 1) == 0)
        {
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Missing didFinishDownload API"));
          if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            sub_10028849C();
          }
LABEL_22:
          _bs_set_crash_log_message([v17 UTF8String]);
          __break(0);
          JUMPOUT(0x10016AF3CLL);
        }

        __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
        [v13 manager:*(void *)(a1 + 32) didFinishDownload:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) willProceedWithInstallation:0 waitingForAdmissionControl:0 denialReasons:0];
      }
    }

    if (([*((id *)*v4 + 2) isEqualToString:@"download"] & 1) == 0
      && [*((id *)*v4 + 3) performAutoInstall])
    {
      [*(id *)(a1 + 32) installUpdate:*(void *)(a1 + 40)];
    }

    goto LABEL_15;
  }

  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  SUControllerErrorDomain,  *((void *)*v4 + 1),  0LL));
  char v7 = (void *)objc_claimAutoreleasedReturnValue([*v4 delegate]);
  char v8 = objc_opt_respondsToSelector(v7, "manager:didFailDownload:withError:");

  if ((v8 & 1) == 0)
  {
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Missing manager:didFailDownload:withError: API"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_100288548();
    }
    goto LABEL_22;
  }

  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v9 manager:*(void *)(a1 + 32) didFailDownload:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) withError:v6];

LABEL_15:
}

void sub_10016B250(_Unwind_Exception *a1)
{
}

void sub_10016B268(uint64_t a1, double a2)
{
  LODWORD(a2) = 1050253722;
  double v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _SUCProgressWithFractionComplete:a2 timeRemaining:3.0]);
  [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setProgress:v3];
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v4 manager:*(void *)(a1 + 32) didChangeProgressOnApply:*(void *)(a1 + 40) progress:v3];
}

void sub_10016B2E0(uint64_t a1, double a2)
{
  LODWORD(a2) = 1058642330;
  double v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _SUCProgressWithFractionComplete:a2 timeRemaining:2.0]);
  [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setProgress:v3];
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v4 manager:*(void *)(a1 + 32) didChangeProgressOnApply:*(void *)(a1 + 40) progress:v3];
}

void sub_10016B358(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)"fff?";
  double v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _SUCProgressWithFractionComplete:a2 timeRemaining:1.0]);
  [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setProgress:v3];
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v4 manager:*(void *)(a1 + 32) didChangeProgressOnApply:*(void *)(a1 + 40) progress:v3];
}

void sub_10016B3D0(uint64_t a1)
{
  double v3 = (id *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(void *)(v2 + 8))
  {
    char v8 = (void *)objc_claimAutoreleasedReturnValue([(id)v2 delegate]);
    char v9 = objc_opt_respondsToSelector(v8, "manager:didFinishInstallation:");

    if ((v9 & 1) != 0)
    {
      unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
      [v4 manager:*(void *)(a1 + 32) didFinishInstallation:*(void *)(a1 + 40)];
      goto LABEL_7;
    }

    double v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Missing didFinishInstallation API"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1002886B0();
    }
LABEL_14:
    _bs_set_crash_log_message([v10 UTF8String]);
    __break(0);
    JUMPOUT(0x10016B53CLL);
  }

  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  SUControllerErrorDomain,  *((void *)*v3 + 1),  0LL));
  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue([*v3 delegate]);
  char v6 = objc_opt_respondsToSelector(v5, "manager:didFailInstallation:withError:");

  if ((v6 & 1) == 0)
  {
    double v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Missing manager:didFailInstallation:withError: API"));
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_10028875C();
    }
    goto LABEL_14;
  }

  char v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v7 manager:*(void *)(a1 + 32) didFailInstallation:*(void *)(a1 + 40) withError:v4];

LABEL_7:
}

uint64_t sub_10016B62C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10016B850()
{
  return objc_opt_class(*v0);
}

  ;
}

void sub_10016C724( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, id *a10, id *a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
}

void sub_10016C78C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained defaultButtonPressed];
}

void sub_10016C7B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained alternateButtonPressed];
}

void sub_10016C7E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained otherButtonPressed];
}

id sub_10016C89C()
{
  if (qword_100471148 != -1) {
    dispatch_once(&qword_100471148, &stru_1003D9CF0);
  }
  return (id)qword_100471140;
}

void sub_10016D3A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard", "PBExternalLinkingViewController");
  uint64_t v2 = (void *)qword_100471140;
  qword_100471140 = (uint64_t)v1;
}

void sub_10016D474(id a1)
{
  id v1 = -[PBRestrictionServiceRequestManager _init]( objc_alloc(&OBJC_CLASS___PBRestrictionServiceRequestManager),  "_init");
  uint64_t v2 = (void *)qword_100471158;
  qword_100471158 = (uint64_t)v1;
}

void sub_10016D5D8(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v2 postEvent:@"Begin PIN Code Validation" withContext:*(void *)(a1 + 40)];
}

void sub_10016D694(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v2 postEvent:@"Begin Validating Restriction For Content Types" withContext:*(void *)(a1 + 40)];
}

void sub_10016D7B4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v2 postEvent:@"Begin Validating Restriction For Setting" withContext:*(void *)(a1 + 40)];
}

void sub_10016D870(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v2 postEvent:@"Check Restriction Setting" withContext:*(void *)(a1 + 40)];
}

void sub_10016D92C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v2 postEvent:@"Begin Authorizing Restrictions" withContext:*(void *)(a1 + 40)];
}

void sub_10016D9E8(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v2 postEvent:@"Cancel Restriction Authorization" withContext:*(void *)(a1 + 40)];
}

void sub_10016E04C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id *a9, id *location, id *a11, id *a12, id *a13, id *a14, id *a15, id *a16)
{
}

CFStringRef sub_10016E180(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  char v9 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    double v10 = v9;
    char v11 = (void *)objc_claimAutoreleasedReturnValue([a2 currentState]);
    int v15 = 138412546;
    id v16 = v7;
    __int16 v17 = 2112;
    uint64_t v18 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Received event %@ on State %@",  (uint8_t *)&v15,  0x16u);
  }

  id v12 = v8;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _validateRestrictionForContentTypesWithRequest:v12];

  return @"Validating Restriction for Content Types";
}

id sub_10016E2A8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  double v10 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    char v11 = v10;
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 currentState]);
    int v17 = 138412546;
    id v18 = v8;
    __int16 v19 = 2112;
    id v20 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Received event %@ on State %@",  (uint8_t *)&v17,  0x16u);
  }

  id v13 = v9;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _enqueueIncomingRequest:v13];

  int v15 = (void *)objc_claimAutoreleasedReturnValue([v7 currentState]);
  return v15;
}

CFStringRef sub_10016E3EC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    double v10 = v9;
    char v11 = (void *)objc_claimAutoreleasedReturnValue([a2 currentState]);
    int v15 = 138412546;
    id v16 = v7;
    __int16 v17 = 2112;
    id v18 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Received event %@ on State %@",  (uint8_t *)&v15,  0x16u);
  }

  id v12 = v8;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _validateRestrictionForSettingWithRequest:v12];

  return @"Validating Restriction for Setting";
}

id sub_10016E514(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  double v10 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    char v11 = v10;
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 currentState]);
    int v17 = 138412546;
    id v18 = v8;
    __int16 v19 = 2112;
    id v20 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Received event %@ on State %@",  (uint8_t *)&v17,  0x16u);
  }

  id v13 = v9;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _enqueueIncomingRequest:v13];

  int v15 = (void *)objc_claimAutoreleasedReturnValue([v7 currentState]);
  return v15;
}

CFStringRef sub_10016E658(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    double v10 = v9;
    char v11 = (void *)objc_claimAutoreleasedReturnValue([a2 currentState]);
    int v15 = 138412546;
    id v16 = v7;
    __int16 v17 = 2112;
    id v18 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Received event %@ on State %@",  (uint8_t *)&v15,  0x16u);
  }

  id v12 = v8;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _authorizeRestrictionsWithRequest:v12];

  return @"Authorizing Restrictions";
}

id sub_10016E780(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  double v10 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    char v11 = v10;
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 currentState]);
    int v17 = 138412546;
    id v18 = v8;
    __int16 v19 = 2112;
    id v20 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Received event %@ on State %@",  (uint8_t *)&v17,  0x16u);
  }

  id v13 = v9;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _enqueueIncomingRequest:v13];

  int v15 = (void *)objc_claimAutoreleasedReturnValue([v7 currentState]);
  return v15;
}

CFStringRef sub_10016E8C4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    double v10 = v9;
    char v11 = (void *)objc_claimAutoreleasedReturnValue([a2 currentState]);
    int v15 = 138412546;
    id v16 = v7;
    __int16 v17 = 2112;
    id v18 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Received event %@ on State %@",  (uint8_t *)&v15,  0x16u);
  }

  id v12 = v8;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _checkRestrictionSettingWithRequest:v12];

  return @"Checking Restriction Setting enabled or disabled";
}

CFStringRef sub_10016E9EC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    double v10 = v9;
    char v11 = (void *)objc_claimAutoreleasedReturnValue([a2 currentState]);
    int v15 = 138412546;
    id v16 = v7;
    __int16 v17 = 2112;
    id v18 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Received event %@ on State %@",  (uint8_t *)&v15,  0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v13 = v8;
  [WeakRetained setCurrentRequest:v13];
  [WeakRetained _validatePINWithRequest:v13 postCompletionEvent:1];

  return @"Validating PIN Code";
}

id sub_10016EB24(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    char v14 = v13;
    int v15 = (void *)objc_claimAutoreleasedReturnValue([v9 currentState]);
    *(_DWORD *)__int128 buf = 138412546;
    id v26 = v10;
    __int16 v27 = 2112;
    id v28 = v15;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Received event %@ on State %@", buf, 0x16u);
  }

  __int16 v19 = _NSConcreteStackBlock;
  uint64_t v20 = 3221225472LL;
  __int128 v21 = sub_10016ECE0;
  __int128 v22 = &unk_1003D9D78;
  id v16 = v11;
  id v23 = v16;
  objc_copyWeak(&v24, (id *)(a1 + 32));
  [v9 executeBlockAfterCurrentStateTransition:&v19];
  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "currentState", v19, v20, v21, v22));
  objc_destroyWeak(&v24);

  return v17;
}

void sub_10016ECC0(_Unwind_Exception *a1)
{
}

void sub_10016ECE0(uint64_t a1)
{
  id v1 = (id *)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v1);
  [WeakRetained _validatePINWithRequest:v2 postCompletionEvent:0];
}

__CFString *sub_10016ED28(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    char v14 = v13;
    int v15 = (void *)objc_claimAutoreleasedReturnValue([v9 currentState]);
    *(_DWORD *)__int128 buf = 138412546;
    id v30 = v10;
    __int16 v31 = 2112;
    uint64_t v32 = v15;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Received event %@ on State %@", buf, 0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v17 = v11;
  id v18 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained currentRequest]);
  __int16 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 token]);
  unsigned int v20 = [v17 isEqual:v19];

  if (v20)
  {
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472LL;
    id v28[2] = sub_10016EFAC;
    void v28[3] = &unk_1003CFF08;
    void v28[4] = WeakRetained;
    [v9 executeBlockAfterCurrentStateTransition:v28];
    __int128 v21 = @"Cancelling Restriction Authorization";
  }

  else
  {
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingTokenToRequestMapping]);
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 objectForKey:v17]);

    if (v23)
    {
      id v24 = (os_log_s *)qword_100471150;
      if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138412290;
        id v30 = v23;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Cancelling one of the pending requests %@ in the queue",  buf,  0xCu);
      }

      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingServiceRequestsQueue]);
      [v25 removeObject:v23];

      id v26 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingTokenToRequestMapping]);
      [v26 removeObjectForKey:v17];
    }

    __int128 v21 = (__CFString *)objc_claimAutoreleasedReturnValue([v9 currentState]);
  }

  return v21;
}

void sub_10016EFAC(uint64_t a1)
{
  id v2 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    double v3 = *(void **)(a1 + 32);
    unsigned __int8 v4 = v2;
    unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue([v3 currentRequest]);
    int v7 = 138412290;
    id v8 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "We need to cancel the current request %@",  (uint8_t *)&v7,  0xCu);
  }

  char v6 = (void *)objc_claimAutoreleasedReturnValue(+[PBRestrictionPINManager sharedInstance](&OBJC_CLASS___PBRestrictionPINManager, "sharedInstance"));
  [v6 dismiss];
}

CFStringRef sub_10016F088(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    char v14 = v13;
    int v15 = (void *)objc_claimAutoreleasedReturnValue([v9 currentState]);
    *(_DWORD *)__int128 buf = 138412546;
    id v24 = v10;
    __int16 v25 = 2112;
    id v26 = v15;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Received event %@ on State %@", buf, 0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [*(id *)(a1 + 32) setCurrentRequest:0];
  id v17 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _dequeueNextServiceRequest]);
  id v18 = v17;
  if (v17)
  {
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472LL;
    void v20[2] = sub_10016F234;
    v20[3] = &unk_1003CFEB8;
    id v21 = v17;
    id v22 = v9;
    [v22 executeBlockAfterCurrentStateTransition:v20];
  }

  return @"Idle";
}

id sub_10016F234(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) requestType];
  double v3 = @"Begin Authorizing Restrictions";
  if (v2 == (id)2) {
    double v3 = @"Check Restriction Setting";
  }
  if (v2 == (id)1) {
    unsigned __int8 v4 = @"Begin Validating Restriction For Content Types";
  }
  else {
    unsigned __int8 v4 = v3;
  }
  return [*(id *)(a1 + 40) postEvent:v4 withContext:*(void *)(a1 + 32)];
}

NSString *__cdecl sub_10016F288(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  char v6 = a3;
  int v7 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = v7;
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState"));
    int v11 = 138412546;
    id v12 = v6;
    __int16 v13 = 2112;
    char v14 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Received event %@ on State %@",  (uint8_t *)&v11,  0x16u);
  }

  return (NSString *)@"Idle";
}

NSString *__cdecl sub_10016F36C(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  char v6 = a3;
  int v7 = (void *)qword_100471150;
  if (os_log_type_enabled((os_log_t)qword_100471150, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = v7;
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState"));
    int v11 = 138412546;
    id v12 = v6;
    __int16 v13 = 2112;
    char v14 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Received event %@ on State %@",  (uint8_t *)&v11,  0x16u);
  }

  return (NSString *)@"Idle";
}

void sub_10016F5E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10016F608(uint64_t a1, uint64_t a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10016F760;
  block[3] = &unk_1003D9DE0;
  uint64_t v12 = a2;
  __int128 v9 = *(_OWORD *)(a1 + 48);
  id v4 = (id)v9;
  __int128 v11 = v9;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
  unint64_t v5 = (unint64_t)[*(id *)(a1 + 40) restrictionContentType];
  v13[0] = @"contentType";
  if (v5 > 5) {
    char v6 = @"?";
  }
  else {
    char v6 = off_1003D9E78[v5];
  }
  v14[0] = v6;
  v13[1] = @"success";
  int v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2 == 100));
  v14[1] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v14,  v13,  2LL));
  AnalyticsSendEvent(@"com.apple.appletv.restrictions.prompted", v8);
}

void sub_10016F760(uint64_t a1)
{
  uint64_t v2 = 3LL;
  if (*(void *)(a1 + 56) == 100LL) {
    uint64_t v2 = 0LL;
  }
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v2;
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(uint64_t, void))(v3 + 16))(v3, *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL));
  }
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v4 postEvent:@"Complete"];
}

void sub_10016FA04( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10016FA34(uint64_t a1, uint64_t a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10016FAC0;
  block[3] = &unk_1003D9DE0;
  uint64_t v7 = a2;
  __int128 v4 = *(_OWORD *)(a1 + 40);
  id v3 = (id)v4;
  __int128 v6 = v4;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
}

void sub_10016FAC0(uint64_t a1)
{
  uint64_t v2 = 3LL;
  if (*(void *)(a1 + 56) == 100LL) {
    uint64_t v2 = 0LL;
  }
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v2;
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(uint64_t, void))(v3 + 16))(v3, *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL));
  }
  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v4 postEvent:@"Complete"];
}

void sub_10016FC30(uint64_t a1, uint64_t a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10016FCB0;
  block[3] = &unk_1003D1718;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v7 = v4;
  uint64_t v8 = v5;
  uint64_t v9 = a2;
  dispatch_async(&_dispatch_main_q, block);
}

void sub_10016FCB0(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) resultHandler]);
  uint64_t v3 = (void *)v2;
  if (v2) {
    (*(void (**)(uint64_t, BOOL))(v2 + 16))(v2, *(void *)(a1 + 48) == 100LL);
  }
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) stateMachine]);
  [v4 postEvent:@"Complete"];
}

void sub_10016FDE4(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v1 postEvent:@"Complete"];
}

void sub_10016FF00(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v1 postEvent:@"Complete"];
}

void sub_1001707D4(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 != [*(id *)(a1 + 32) vpnConnected])
  {
    [*(id *)(a1 + 32) setVpnConnected:*(unsigned __int8 *)(a1 + 40)];
    uint64_t v3 = *(void **)(a1 + 32);
    if (v3[4])
    {
      objc_msgSend(*(id *)(a1 + 32), "_workQueue_notifyObserversVPNStatusChanged");
    }

    else
    {
      objc_initWeak(&location, v3);
      id v4 = *(void **)(a1 + 32);
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472LL;
      void v5[2] = sub_1001708B4;
      _OWORD v5[3] = &unk_1003D0890;
      objc_copyWeak(&v6, &location);
      objc_msgSend(v4, "_workQueue_setupConfigurationManagerWithCompletion:", v5);
      objc_destroyWeak(&v6);
      objc_destroyWeak(&location);
    }
  }

void sub_100170898(_Unwind_Exception *a1)
{
}

void sub_1001708B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_workQueue_notifyObserversVPNStatusChanged");
}

void sub_1001709EC(_Unwind_Exception *a1)
{
}

void sub_100170A0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_workQueue_loadConfigurationsWithCompletion:", 0);
}

uint64_t sub_100170A3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100170B14(_Unwind_Exception *a1)
{
}

void sub_100170B30(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_1000F71A4();
    id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR)) {
      sub_100288A24((uint64_t)v6, WeakRetained);
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 40));
    -[os_log_s _workQueue_updateCurrentConfiguration:](WeakRetained, "_workQueue_updateCurrentConfiguration:", v5);
  }

  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(void))(v9 + 16))();
  }
}

id sub_100170E58(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "_mainQueue_notifyObserversVPNStatusChanged:currentConfigurationName:",  *(unsigned __int8 *)(a1 + 48),  *(void *)(a1 + 40));
}

void sub_100170F38(_Unwind_Exception *a1)
{
}

void sub_100170F54(uint64_t a1, void *a2)
{
  uint64_t v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [v4 networkingController:WeakRetained didChangeVPNStatus:*(unsigned __int8 *)(a1 + 48) currentConfigurationName:*(void *)(a1 + 32)];
}

PBLoretoUserProfileManagerClientPermission *__cdecl sub_100171538( id a1, PBLoretoUserProfileManagerClientPermissionProviding *a2)
{
  return (PBLoretoUserProfileManagerClientPermission *)(id)objc_claimAutoreleasedReturnValue( -[PBLoretoUserProfileManagerClientPermissionProviding readUserProfiles]( a2,  "readUserProfiles"));
}

PBLoretoUserProfileManagerClientPermission *__cdecl sub_100171558( id a1, PBLoretoUserProfileManagerClientPermissionProviding *a2)
{
  return (PBLoretoUserProfileManagerClientPermission *)(id)objc_claimAutoreleasedReturnValue( -[PBLoretoUserProfileManagerClientPermissionProviding writeUserProfiles]( a2,  "writeUserProfiles"));
}

PBLoretoUserProfileManagerClientPermission *__cdecl sub_100171578( id a1, PBLoretoUserProfileManagerClientPermissionProviding *a2)
{
  return (PBLoretoUserProfileManagerClientPermission *)(id)objc_claimAutoreleasedReturnValue( -[PBLoretoUserProfileManagerClientPermissionProviding writeGroupRecommendationsConsent]( a2,  "writeGroupRecommendationsConsent"));
}

PBLoretoUserProfileManagerClientPermission *__cdecl sub_100171598( id a1, PBLoretoUserProfileManagerClientPermissionProviding *a2)
{
  return (PBLoretoUserProfileManagerClientPermission *)(id)objc_claimAutoreleasedReturnValue( -[PBLoretoUserProfileManagerClientPermissionProviding writeGroupRecommendationsSession]( a2,  "writeGroupRecommendationsSession"));
}

PBLoretoUserProfileManagerClientPermission *__cdecl sub_1001715B8( id a1, PBLoretoUserProfileManagerClientPermissionProviding *a2)
{
  return (PBLoretoUserProfileManagerClientPermission *)(id)objc_claimAutoreleasedReturnValue( -[PBLoretoUserProfileManagerClientPermissionProviding sendAccountNotifications]( a2,  "sendAccountNotifications"));
}

PBLoretoUserProfileManagerClientPermission *__cdecl sub_1001715D8( id a1, PBLoretoUserProfileManagerClientPermissionProviding *a2)
{
  return (PBLoretoUserProfileManagerClientPermission *)(id)objc_claimAutoreleasedReturnValue( -[PBLoretoUserProfileManagerClientPermissionProviding selectUserProfile]( a2,  "selectUserProfile"));
}

id sub_100171AFC(uint64_t a1)
{
  id v2 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 16) withName:@"readUserProfiles"];
  id v3 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 24) withName:@"writeUserProfiles"];
  id v4 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 32) withName:@"writeGroupRecommendationsConsent"];
  id v5 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 40) withName:@"writeGroupRecommendationsSession"];
  return  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 56) withName:@"sendAccountNotifications"];
}

void sub_100171EF8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v5)
  {
    uint64_t v8 = -[PBViewServiceContentPresentingViewController initWithRemoteViewController:supportsInterruption:]( objc_alloc(&OBJC_CLASS___PBViewServiceContentPresentingViewController),  "initWithRemoteViewController:supportsInterruption:",  v5,  1LL);
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9)
    {
LABEL_10:

      goto LABEL_11;
    }

    id v10 = *(void (**)(void))(v9 + 16);
LABEL_9:
    v10();
    goto LABEL_10;
  }

  if (*(void *)(a1 + 32))
  {
    if (v6) {
      __int128 v11 = (PBViewServiceContentPresentingViewController *)v6;
    }
    else {
      __int128 v11 = (PBViewServiceContentPresentingViewController *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  &stru_1003E2910,  0LL,  0LL));
    }
    uint64_t v8 = v11;
    id v10 = *(void (**)(void))(*(void *)(a1 + 32) + 16LL);
    goto LABEL_9;
  }

void sub_100172228(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBPictureInPictureManager sharedInstance](&OBJC_CLASS___PBPictureInPictureManager, "sharedInstance"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 fetchCurrentPictureInPictureState]);

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001722F4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBPictureInPictureManager sharedInstance](&OBJC_CLASS___PBPictureInPictureManager, "sharedInstance"));
  [v2 cancelPictureInPictureWithReason:@"User cancelled" sourceBundleID:*(void *)(*(void *)(a1 + 32) + 16) sourcePlayerInterface:*(void *)(a1 + 40)];
}

void sub_100172364(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBPictureInPictureManager sharedInstance](&OBJC_CLASS___PBPictureInPictureManager, "sharedInstance"));
  [v1 movePictureInPicture];
}

void sub_1001723D0(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBPictureInPictureManager sharedInstance](&OBJC_CLASS___PBPictureInPictureManager, "sharedInstance"));
  [v1 expandPictureInPicture];
}

BOOL sub_10017252C(id a1, PBSAppInfo *a2)
{
  id v2 = a2;
  else {
    LOBYTE(v3) = 0;
  }

  return v3;
}

BOOL sub_10017257C(id a1, PBSAppInfo *a2)
{
  id v2 = a2;
  if (-[PBSAppInfo isEnabled](v2, "isEnabled")
    && (-[PBSAppInfo isHidden](v2, "isHidden") & 1) == 0)
  {
    else {
      unsigned __int8 v3 = 1;
    }
  }

  else
  {
    unsigned __int8 v3 = 0;
  }

  return v3;
}

BOOL sub_1001725EC(id a1, PBSAppInfo *a2)
{
  id v2 = a2;
  else {
    LOBYTE(v3) = 0;
  }

  return v3;
}

uint64_t sub_100172890(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001728A0(uint64_t a1)
{
}

void sub_1001728B8(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 48) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1001729AC(uint64_t a1)
{
}

void sub_100172B3C(_Unwind_Exception *a1)
{
}

void sub_100172CF4(id *a1)
{
  id v2 = [*((id *)a1[4] + 6) mutableCopy];
  __int128 v55 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  id v3 = a1[5];
  id v4 = [v3 countByEnumeratingWithState:&v55 objects:v62 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v56;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v56 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v55 + 1) + 8LL * (void)i);
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 bundleIdentifier]);
        [v2 setObject:v8 forKey:v9];
      }

      id v5 = [v3 countByEnumeratingWithState:&v55 objects:v62 count:16];
    }

    while (v5);
  }

  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  id v10 = a1[6];
  id v11 = [v10 countByEnumeratingWithState:&v51 objects:v61 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v52;
    do
    {
      for (j = 0LL; j != v12; j = (char *)j + 1)
      {
        if (*(void *)v52 != v13) {
          objc_enumerationMutation(v10);
        }
        int v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v51 + 1) + 8 * (void)j) bundleIdentifier]);
        [v2 removeObjectForKey:v15];
      }

      id v12 = [v10 countByEnumeratingWithState:&v51 objects:v61 count:16];
    }

    while (v12);
  }

  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v47 = 0u;
  __int128 v48 = 0u;
  id v16 = (void *)objc_claimAutoreleasedReturnValue([a1[7] objectEnumerator]);
  id v17 = [v16 countByEnumeratingWithState:&v47 objects:v60 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v48;
    do
    {
      for (k = 0LL; k != v18; k = (char *)k + 1)
      {
        if (*(void *)v48 != v19) {
          objc_enumerationMutation(v16);
        }
        id v21 = *(void **)(*((void *)&v47 + 1) + 8LL * (void)k);
        id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 bundleIdentifier]);
        [v2 setObject:v21 forKey:v22];
      }

      id v18 = [v16 countByEnumeratingWithState:&v47 objects:v60 count:16];
    }

    while (v18);
  }

  id v23 = (void *)objc_claimAutoreleasedReturnValue([a1[4] _filteredAppInfoFromAppInfo:v2]);
  v45[0] = _NSConcreteStackBlock;
  v45[1] = 3221225472LL;
  v45[2] = sub_100173174;
  v45[3] = &unk_1003D0B78;
  v45[4] = a1[4];
  id v46 = a1[8];
  [v23 enumerateKeysAndObjectsUsingBlock:v45];
  id v24 = (void *)*((void *)a1[4] + 6);
  v42[0] = _NSConcreteStackBlock;
  v42[1] = 3221225472LL;
  v42[2] = sub_1001731D4;
  v42[3] = &unk_1003D0B78;
  id v25 = v23;
  id v43 = v25;
  id v44 = a1[9];
  [v24 enumerateKeysAndObjectsUsingBlock:v42];
  if ([a1[7] count])
  {
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    id v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "keyEnumerator", 0));
    id v27 = [v26 countByEnumeratingWithState:&v38 objects:v59 count:16];
    if (v27)
    {
      id v28 = v27;
      uint64_t v29 = *(void *)v39;
      do
      {
        for (m = 0LL; m != v28; m = (char *)m + 1)
        {
          if (*(void *)v39 != v29) {
            objc_enumerationMutation(v26);
          }
          uint64_t v31 = *(void *)(*((void *)&v38 + 1) + 8LL * (void)m);
          uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([a1[7] objectForKey:v31]);
          if (([a1[9] containsObject:v31] & 1) == 0
            && ([a1[8] containsObject:v32] & 1) == 0)
          {
            [a1[10] setObject:v32 forKey:v31];
          }
        }

        id v28 = [v26 countByEnumeratingWithState:&v38 objects:v59 count:16];
      }

      while (v28);
    }
  }

  objc_storeStrong((id *)a1[4] + 6, v23);
  if ([a1[11] count])
  {
    int v33 = (void *)objc_claimAutoreleasedReturnValue([a1[11] objectEnumerator]);
    unsigned __int8 v34 = (void *)objc_claimAutoreleasedReturnValue([v33 allObjects]);
    uint64_t v35 = objc_claimAutoreleasedReturnValue([v34 firstObject]);
    uint64_t v36 = a1[4];
    id v37 = (void *)v36[7];
    v36[7] = v35;
  }
}

void sub_100173174(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 48) objectForKey:a2]);
  if (!v6) {
    [*(id *)(a1 + 40) addObject:v5];
  }
}

void sub_1001731D4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:a2]);
  if (!v6) {
    [*(id *)(a1 + 40) addObject:v5];
  }
}

uint64_t sub_1001732C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 24LL) + 16LL))();
}

id sub_100173660(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

uint64_t sub_10017367C(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 32) + 32LL);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100173724(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) containerViewController]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 parentViewController]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 view]);

  [v4 layoutIfNeeded];
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) containerViewController]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 pictureInPictureViewController]);

  objc_msgSend( v6,  "updateHostedWindowSize:",  *(double *)(*(void *)(a1 + 32) + 40),  *(double *)(*(void *)(a1 + 32) + 48));
}

uint64_t sub_1001737C0(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 32) + 32LL);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100173A44(uint64_t a1)
{
  return [*(id *)(a1 + 40) setAlpha:0.0];
}

id sub_100173A78(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 32LL);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  return [*(id *)(a1 + 40) removeFromSuperview];
}

id sub_100173B64()
{
  if (qword_100471170 != -1) {
    dispatch_once(&qword_100471170, &stru_1003DA150);
  }
  return (id)qword_100471168;
}

void sub_100173BA8(id a1)
{
  void v4[8] = xmmword_1002EC9E8;
  v4[9] = unk_1002EC9F8;
  void v4[10] = xmmword_1002ECA08;
  void v4[4] = xmmword_1002EC9A8;
  v4[5] = unk_1002EC9B8;
  void v4[6] = xmmword_1002EC9C8;
  v4[7] = unk_1002EC9D8;
  v4[0] = xmmword_1002EC968;
  v4[1] = unk_1002EC978;
  id v4[2] = xmmword_1002EC988;
  _OWORD v4[3] = unk_1002EC998;
  uint64_t v5 = 103LL;
  id v1 = sub_100173C4C(23LL, (uint64_t *)v4);
  uint64_t v2 = objc_claimAutoreleasedReturnValue(v1);
  id v3 = (void *)qword_100471168;
  qword_100471168 = v2;
}

id sub_100173C4C(uint64_t a1, uint64_t *a2)
{
  for (id i = objc_alloc_init(&OBJC_CLASS___BSMutableIntegerSet); a1; --a1)
  {
    uint64_t v5 = *a2++;
    [i addValue:v5];
  }

  id v6 = [i copy];

  return v6;
}

id sub_100173CB4()
{
  if (qword_100471180 != -1) {
    dispatch_once(&qword_100471180, &stru_1003DA170);
  }
  return (id)qword_100471178;
}

void sub_100173CF8(id a1)
{
  v4[0] = xmmword_1002ECA20;
  v4[1] = unk_1002ECA30;
  id v4[2] = xmmword_1002ECA40;
  _OWORD v4[3] = unk_1002ECA50;
  uint64_t v5 = 33LL;
  id v1 = sub_100173C4C(9LL, (uint64_t *)v4);
  uint64_t v2 = objc_claimAutoreleasedReturnValue(v1);
  id v3 = (void *)qword_100471178;
  qword_100471178 = v2;
}

id sub_100173D7C()
{
  if (qword_100471190 != -1) {
    dispatch_once(&qword_100471190, &stru_1003DA190);
  }
  return (id)qword_100471188;
}

void sub_100173DC0(id a1)
{
  __int128 v4 = xmmword_1002ECA68;
  uint64_t v5 = 6LL;
  id v1 = sub_100173C4C(3LL, (uint64_t *)&v4);
  uint64_t v2 = objc_claimAutoreleasedReturnValue(v1);
  id v3 = (void *)qword_100471188;
  qword_100471188 = v2;
}

id sub_100173E3C(uint64_t a1)
{
  if (qword_1004711B0 != -1) {
    dispatch_once(&qword_1004711B0, &stru_1003DA1F8);
  }
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_1004711A8 objectForKey:a1]);
  id v3 = v2;
  if (v2) {
    id v4 = v2;
  }
  else {
    id v4 = (id)objc_claimAutoreleasedReturnValue(+[NSSet set](&OBJC_CLASS___NSSet, "set"));
  }
  uint64_t v5 = v4;

  return v5;
}

id sub_100173EC4(void *a1)
{
  id v1 = a1;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_100173F64;
  _OWORD v5[3] = &unk_1003DA1B8;
  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  uint64_t v2 = v6;
  [v1 enumerateWithBlock:v5];

  id v3 = -[NSMutableSet copy](v2, "copy");
  return v3;
}

void sub_100173F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = sub_100173E3C(a2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  [v2 unionSet:v4];
}

uint64_t sub_100173FA0(uint64_t a1, unsigned int a2)
{
  if (qword_1004711A0 != -1) {
    dispatch_once(&qword_1004711A0, &stru_1003DA1D8);
  }
  id v4 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_100471198 objectForKey:a2 | (unint64_t)(a1 << 32)]);
  uint64_t v5 = v4;
  if (v4) {
    uint64_t v6 = (uint64_t)[v4 integerValue];
  }
  else {
    uint64_t v6 = -1LL;
  }

  return v6;
}

void sub_100174024(id a1)
{
  id v1 = -[BSMutableIntegerMap initWithCapacity:]( objc_alloc(&OBJC_CLASS___BSMutableIntegerMap),  "initWithCapacity:",  49LL);
  for (uint64_t i = 0LL; i != 784; i += 16LL)
  {
    unint64_t v3 = *(unsigned int *)((char *)&unk_1002ECA80 + i + 12) | ((unint64_t)*(unsigned int *)((char *)&unk_1002ECA80
                                                                                                 + i
                                                                                                 + 8) << 32);
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  *(void *)((char *)&unk_1002ECA80 + i)));
    -[BSMutableIntegerMap setObject:forKey:](v1, "setObject:forKey:", v4, v3);
  }

  id v5 = -[BSMutableIntegerMap copy](v1, "copy");

  uint64_t v6 = (void *)qword_100471198;
  qword_100471198 = (uint64_t)v5;
}

void sub_1001740D4(id a1)
{
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_100174250;
  v14[3] = &unk_1003DA220;
  id v1 =  -[BSMutableIntegerMap initWithCapacity:]( objc_alloc(&OBJC_CLASS___BSMutableIntegerMap),  "initWithCapacity:",  49LL);
  int v15 = v1;
  uint64_t v2 = objc_retainBlock(v14);
  for (uint64_t i = 0LL; i != 784; i += 16LL)
  {
    uint64_t v4 = *(void *)((char *)&unk_1002ECA80 + i);
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[BKSHIDEventKeyboardDescriptor descriptorWithPage:usage:]( &OBJC_CLASS___BKSHIDEventKeyboardDescriptor,  "descriptorWithPage:usage:",  *(unsigned int *)((char *)&unk_1002ECA80 + i + 8),  *(unsigned int *)((char *)&unk_1002ECA80 + i + 12)));
    ((void (*)(void *, uint64_t, void *))v2[2])(v2, v4, v5);
  }

  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472LL;
  id v11 = sub_1001742DC;
  id v12 = &unk_1003DA248;
  uint64_t v13 = -[BSMutableIntegerMap initWithCapacity:]( objc_alloc(&OBJC_CLASS___BSMutableIntegerMap),  "initWithCapacity:",  -[BSMutableIntegerMap count](v1, "count"));
  uint64_t v6 = v13;
  -[BSMutableIntegerMap enumerateWithBlock:](v1, "enumerateWithBlock:", &v9);
  id v7 = -[BSMutableIntegerMap copy](v6, "copy", v9, v10, v11, v12);

  uint64_t v8 = (void *)qword_1004711A8;
  qword_1004711A8 = (uint64_t)v7;
}

void sub_100174250(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:a2]);
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 addObject:v6];
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](&OBJC_CLASS___NSMutableSet, "setWithObject:", v6));

    [*(id *)(a1 + 32) setObject:v8 forKey:a2];
  }
}

void sub_1001742DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = [a3 copy];
  [*(id *)(a1 + 32) setObject:v5 forKey:a2];
}

id sub_100174814(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sceneIdentity]);
}

void sub_100176284( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1001762B4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[6] view]);
    __int128 v4 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v12[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v12[1] = v4;
    v12[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    [v3 setTransform:v12];

    int v5 = *((unsigned __int8 *)v2 + 56);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v2[5] view]);
    if (v5)
    {
      CGFloat v7 = 0.7;
      uint64_t v8 = v11;
      uint64_t v9 = (CGAffineTransform *)v11;
    }

    else
    {
      CGFloat v7 = 1.3;
      uint64_t v8 = v10;
      uint64_t v9 = (CGAffineTransform *)v10;
    }

    CGAffineTransformMakeScale(v9, v7, v7);
    [v6 setTransform:v8];
  }
}

void sub_100176384(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained satisfyMilestone:@"PBDefaultScaleAnimationMilestone"];
}

void sub_100176548( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_100176578(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[5] view]);
    [v3 setAlpha:0.0];

    __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([v2[6] view]);
    [v4 setAlpha:1.0];
  }
}

void sub_1001765F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained satisfyMilestone:@"PBDefaultFadeAnimationMilestone"];
}

id sub_100176648(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(id *)a2;
  *(void *)(a1 + _Block_object_dispose(va, 8) = *(id *)(a2 + 8);
  id result = *(id *)(a2 + 16);
  *(void *)(a1 + 16) = result;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return result;
}

int64_t sub_100176A00(id a1, PBOverlayLayoutElement *a2, PBOverlayLayoutElement *a3)
{
  __int128 v4 = a3;
  -[PBOverlayLayoutElement stickiness](a2, "stickiness");
  double v6 = v5;
  double v8 = v7;
  -[PBOverlayLayoutElement stickiness](v4, "stickiness");
  double v10 = v9;
  double v12 = v11;

  if (v6 > v10) {
    return -1LL;
  }
  if (v6 < v10) {
    return 1LL;
  }
  if (v8 <= v12) {
    return v8 < v12;
  }
  else {
    return -1LL;
  }
}

id sub_100177194(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) controller]);
}

id sub_1001771B4(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
}

id sub_1001771D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) frame];
}

id sub_1001771EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) symmetricalMargin];
}

id sub_100177204(uint64_t a1)
{
  return [*(id *)(a1 + 32) stickiness];
}

double sub_10017721C(uint64_t a1)
{
  return v1;
}

id sub_100177238(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutLevel];
}

id sub_100177250(uint64_t a1)
{
  return [*(id *)(a1 + 32) offset];
}

double sub_100177268(uint64_t a1)
{
  return v1;
}

void sub_100177464(uint64_t a1)
{
  id v2 =  objc_msgSend( *(id *)(a1 + 32),  "appendRect:withName:",  @"frame",  *(double *)(*(void *)(a1 + 40) + 80),  *(double *)(*(void *)(a1 + 40) + 88),  *(double *)(*(void *)(a1 + 40) + 96),  *(double *)(*(void *)(a1 + 40) + 104));
  id v3 =  objc_msgSend( *(id *)(a1 + 32),  "appendSize:withName:",  @"symmetricalMargin",  *(double *)(*(void *)(a1 + 40) + 64),  *(double *)(*(void *)(a1 + 40) + 72));
  id v4 =  objc_msgSend( *(id *)(a1 + 32),  "appendPoint:withName:",  @"stickiness",  *(double *)(*(void *)(a1 + 40) + 32),  *(double *)(*(void *)(a1 + 40) + 40));
  id v5 =  objc_msgSend( *(id *)(a1 + 32),  "appendPoint:withName:",  @"offset",  *(double *)(*(void *)(a1 + 40) + 48),  *(double *)(*(void *)(a1 + 40) + 56));
  double v6 = *(void **)(a1 + 32);
  uint64_t v7 = sub_1001A3184(*(void *)(*(void *)(a1 + 40) + 24LL));
  double v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  [v6 appendString:v8 withName:@"layoutLevel"];
}

uint64_t sub_1001776C4(uint64_t a1)
{
  if (a1) {
    uint64_t SenderID = IOHIDEventGetSenderID(a1);
  }
  else {
    uint64_t SenderID = 0LL;
  }
  id v2 = sub_100082C04();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315394;
    double v6 = "IOHIDEventSenderID PBEventSenderIDFromEventRef(IOHIDEventRef _Nonnull)";
    __int16 v7 = 2048;
    uint64_t v8 = SenderID;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%s: calculated senderID 0x%llx for current event",  (uint8_t *)&v5,  0x16u);
  }

  return SenderID;
}

void sub_100178470( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1001784A0(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[3] view]);
    [v3 setAlpha:0.0];

    id v4 = (void *)objc_claimAutoreleasedReturnValue([v2[4] view]);
    [v4 setAlpha:1.0];
  }
}

void sub_100178518(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained satisfyMilestone:@"PBAppCrossFadeAnimationMilestone"];
}

void sub_100178990(_Unwind_Exception *a1)
{
}

void sub_1001789AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = objc_retainBlock(v3);
    double v6 = (void *)WeakRetained[2];
    WeakRetained[2] = v5;
  }

  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(void))(v7 + 16))();
  }
}

void sub_100179658( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100179674(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setAccessoryState:a2];
}

void sub_100179BBC(uint64_t a1)
{
  double v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](&OBJC_CLASS___UIColor, "colorWithWhite:alpha:", 0.0, 0.5));
  [v1 setBackgroundColor:v2];
}

void sub_100179C14(uint64_t a1)
{
  double v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](&OBJC_CLASS___UIColor, "clearColor"));
  [v1 setBackgroundColor:v2];
}

void sub_100179E20(_Unwind_Exception *a1)
{
}

void sub_100179E3C(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    [*(id *)(a1 + 32) updateConstraintsForPictureInPictureQuadrant:*(void *)(a1 + 48)];
    [*(id *)(a1 + 32) updateConstraintsForStashedState];
    [WeakRetained[12] setQuadrant:*(void *)(a1 + 48)];
    [WeakRetained _updateStashHintViewPositionalConstraintsForQuadrant:*(void *)(a1 + 48)];
    uint64_t v4 = *(void *)(a1 + 48);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_100179F38;
    _OWORD v5[3] = &unk_1003D1A50;
    objc_copyWeak(&v6, v2);
    char v7 = *(_BYTE *)(a1 + 56);
    [WeakRetained _performMoveContainerToQuadrant:v4 animated:0 completion:v5];
    objc_destroyWeak(&v6);
  }
}

void sub_100179F24(_Unwind_Exception *a1)
{
}

void sub_100179F38(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[12] setHidden:0 animated:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_10017A11C(_Unwind_Exception *a1)
{
}

void sub_10017A14C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained view]);
  [v2 layoutIfNeeded];
}

void sub_10017A188(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
    [v4 rootViewController:v3 didMovePictureInPictureToQuadrant:*(void *)(a1 + 48)];
  }

  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(void))(v5 + 16))();
  }
}

void sub_10017A750( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10017A770(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained view]);
  [v2 layoutIfNeeded];
}

id sub_10017A99C(uint64_t a1)
{
  double v1 = 0.0;
  if (!*(_BYTE *)(a1 + 40)) {
    double v1 = 1.0;
  }
  return [*(id *)(a1 + 32) setAlpha:v1];
}

uint64_t sub_10017A9CC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(unsigned __int8 *)(a1 + 48));
  }
  return result;
}

void sub_10017AD08(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pictureInPictureLayout]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 containerViewController]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 view]);
  [v4 setHidden:1];
}

void sub_10017AD8C(uint64_t a1)
{
  double v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v1 layoutIfNeeded];
}

uint64_t sub_10017ADBC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10017B4DC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10)
{
}

CFStringRef sub_10017B594(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v7 = a4;
  id v8 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v10 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _handlePrepareStartRequestWithLayout:v7 userInfo:v8];
    [v10 setPresentationState:1];
  }

  return @"Preparing Start";
}

CFStringRef sub_10017B60C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v7 = a4;
  id v8 = a5;
  id v9 = v7;
  double v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"Completion Handler"]);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v12 = WeakRetained;
  if (WeakRetained)
  {
    id v13 = [WeakRetained currentQuadrant];
    [v9 updateConstraintsForPictureInPictureQuadrant:v13];
    if ([v12 appearanceStyle] == (id)1) {
      [v12 nestContainerIntoSplitView];
    }
    id v14 = objc_msgSend(v8, "bs_BOOLForKey:", @"Isolated");
    int v15 = objc_alloc(&OBJC_CLASS___PBPIPStartStopAnimator);
    [v9 preferredPictureInPictureSize];
    double v17 = v16;
    double v19 = v18;
    [v12 cumulativePIPInsets];
    id v24 = -[PBPIPStartStopAnimator initWithContext:isolated:layout:targetSize:quadrant:pipInsets:]( v15,  "initWithContext:isolated:layout:targetSize:quadrant:pipInsets:",  0LL,  v14,  v9,  v13,  v17,  v19,  v20,  v21,  v22,  v23);
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472LL;
    v26[2] = sub_10017B7C8;
    v26[3] = &unk_1003D2F08;
    void v26[4] = v12;
    id v27 = v9;
    id v28 = v10;
    -[PBPIPStartStopAnimator setCompletionHandler:](v24, "setCompletionHandler:", v26);
    -[PBPIPStartStopAnimator startAnimation](v24, "startAnimation");
  }

  return @"Presented";
}

id sub_10017B7C8(uint64_t a1)
{
  uint64_t v2 = *(_BYTE **)(a1 + 32);
  if (v2[8] && ![v2 appearanceStyle])
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) containerViewController]);
    [v3 showControlsHint];
  }

  uint64_t v4 = *(void *)(a1 + 48);
  if (v4) {
    (*(void (**)(void))(v4 + 16))();
  }
  [*(id *)(a1 + 32) setPresentationState:2];
  return [*(id *)(a1 + 32) _updateDisplayLayoutElementBundleIDWithReason:@"PiP Start"];
}

NSString *__cdecl sub_10017B844(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  id v6 = a2;
  uint64_t v7 = objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKey:](a5, "objectForKey:", @"Completion Handler"));
  id v8 = (void *)v7;
  if (v7) {
    (*(void (**)(uint64_t))(v7 + 16))(v7);
  }
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](v6, "currentState"));

  return (NSString *)v9;
}

CFStringRef sub_10017B8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = (id *)(a1 + 32);
  id v6 = a5;
  id WeakRetained = objc_loadWeakRetained(v5);
  [WeakRetained _handlePrepareStopRequestWithUserInfo:v6];

  return @"Idle";
}

CFStringRef sub_10017B900(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v7 = a4;
  id v8 = a5;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"Completion Handler"]);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v11 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"Layer Frame Value"]);

  [v11 CGRectValue];
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;

  v50.origin.CGFloat x = CGRectNull.origin.x;
  v50.origin.CGFloat y = CGRectNull.origin.y;
  v50.size.double width = CGRectNull.size.width;
  v50.size.double height = CGRectNull.size.height;
  v48.origin.CGFloat x = v13;
  v48.origin.CGFloat y = v15;
  v48.size.double width = v17;
  v48.size.double height = v19;
  if (CGRectEqualToRect(v48, v50))
  {
    id v20 = sub_100083780();
    double v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Performing PiP stop animation for dismissal",  buf,  2u);
    }

    double v22 = (void *)objc_claimAutoreleasedReturnValue([v7 containerViewController]);
    double v23 = (PBPIPStartStopAnimator *)objc_claimAutoreleasedReturnValue([v22 view]);

    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472LL;
    v44[2] = sub_10017BC58;
    v44[3] = &unk_1003CFF08;
    __int128 v45 = v23;
    v42[0] = _NSConcreteStackBlock;
    v42[1] = 3221225472LL;
    v42[2] = sub_10017BCAC;
    v42[3] = &unk_1003CFF30;
    id v43 = v9;
    id v24 = v23;
    +[PGPictureInPictureViewController animateViewWithAnimationType:initialSpringVelocity:animations:completion:]( &OBJC_CLASS___PGPictureInPictureViewController,  "animateViewWithAnimationType:initialSpringVelocity:animations:completion:",  0LL,  v44,  v42,  0.0);

    id v25 = v45;
LABEL_9:

    goto LABEL_10;
  }

  if (WeakRetained)
  {
    id v26 = sub_100083780();
    id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      v49.origin.CGFloat x = v13;
      v49.origin.CGFloat y = v15;
      v49.size.double width = v17;
      v49.size.double height = v19;
      id v28 = NSStringFromCGRect(v49);
      uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
      *(_DWORD *)__int128 buf = 138412290;
      __int128 v47 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Performing PiP stop animation for restoring UI to frame: %@",  buf,  0xCu);
    }

    [v7 updateConstraintsFillingWorkspaceApplicationHostingView];
    id v30 = (void *)objc_claimAutoreleasedReturnValue([v7 containerViewController]);
    id v24 = (PBPIPStartStopAnimator *)objc_claimAutoreleasedReturnValue([v30 pictureInPictureViewController]);

    -[PBPIPStartStopAnimator showChrome:animated:](v24, "showChrome:animated:", 1LL, 0LL);
    uint64_t v31 = objc_alloc(&OBJC_CLASS___PBPIPStartStopAnimator);
    [v7 preferredFullscreenSize];
    double v33 = v32;
    double v35 = v34;
    id v36 = [WeakRetained currentQuadrant];
    [WeakRetained cumulativePIPInsets];
    id v25 = -[PBPIPStartStopAnimator initWithContext:isolated:layout:targetSize:quadrant:pipInsets:]( v31,  "initWithContext:isolated:layout:targetSize:quadrant:pipInsets:",  1LL,  0LL,  v7,  v36,  v33,  v35,  v37,  v38,  v39,  v40);
    -[PBPIPStartStopAnimator setCompletionHandler:](v25, "setCompletionHandler:", v9);
    -[PBPIPStartStopAnimator startAnimation](v25, "startAnimation");
    [WeakRetained setPresentationState:0];
    goto LABEL_9;
  }

id sub_10017BC58(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  CGAffineTransformMakeScale(&v4, 0.100000001, 0.100000001);
  return [v2 setTransform:&v4];
}

uint64_t sub_10017BCAC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

CFStringRef sub_10017BCCC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v7 = a4;
  id v8 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v10 = objc_alloc_init(&OBJC_CLASS____PBPIPSwapContext);
    double v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained avoidanceController]);
    double v12 = (void *)objc_claimAutoreleasedReturnValue([v11 pauseUpdatesForReason:@"Swap"]);

    -[_PBPIPSwapContext setAvoidancePausedAssertion:](v10, "setAvoidancePausedAssertion:", v12);
    [WeakRetained setSwapContext:v10];
    [WeakRetained _handlePrepareStartRequestWithLayout:v7 userInfo:v8];
  }

  return @"Preparing Swap";
}

id sub_10017BD98(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a2;
  id v9 = a4;
  id v10 = a5;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v12 = v9;
    CGFloat v13 = -[_PBPIPPresentationRequest initWithLayout:userInfo:]( objc_alloc(&OBJC_CLASS____PBPIPPresentationRequest),  "initWithLayout:userInfo:",  v12,  v10);

    [WeakRetained[20] setStartingRequest:v13];
    [WeakRetained stopPictureInPicture];
  }

  double v14 = (void *)objc_claimAutoreleasedReturnValue([v8 currentState]);

  return v14;
}

__CFString *sub_10017BE68(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a2;
  id v9 = a4;
  id v10 = a5;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v12 = WeakRetained;
  if (!WeakRetained) {
    goto LABEL_4;
  }
  uint64_t v13 = objc_claimAutoreleasedReturnValue([WeakRetained[20] startingRequest]);
  if (v13)
  {
    double v14 = (void *)v13;
    id v15 = v9;
    double v16 = -[_PBPIPPresentationRequest initWithLayout:userInfo:]( objc_alloc(&OBJC_CLASS____PBPIPPresentationRequest),  "initWithLayout:userInfo:",  v15,  v10);

    v22[0] = @"Swap Start Request";
    v22[1] = @"Swap Stop Request";
    v23[0] = v14;
    v23[1] = v16;
    CGFloat v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v23,  v22,  2LL));
    [v8 postEvent:@"Perform Swap" withContext:0 userInfo:v17];

LABEL_4:
    double v18 = (__CFString *)objc_claimAutoreleasedReturnValue([v8 currentState]);
    goto LABEL_8;
  }

  id v19 = sub_100083780();
  id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
    sub_100288D98(v20);
  }

  [v12 _handlePrepareStopRequestWithUserInfo:v10];
  double v18 = @"Idle";
LABEL_8:

  return v18;
}

CFStringRef sub_10017C00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = a5;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:@"Swap Start Request"]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:@"Swap Stop Request"]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 layout]);
    double v11 = (void *)objc_claimAutoreleasedReturnValue([v9 layout]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 containerViewController]);
    [v12 hideControlsHint];

    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    id v16[2] = sub_10017C1A0;
    void v16[3] = &unk_1003D09B8;
    CGFloat v17 = -[_PBPIPSwapAnimation initWithGoingToPIPLayout:goingFullScreenLayout:quadrant:currentPIPInsets:]( [_PBPIPSwapAnimation alloc],  "initWithGoingToPIPLayout:goingFullScreenLayout:quadrant:currentPIPInsets:",  v10,  v11,  [WeakRetained currentQuadrant],  60.0,  80.0,  60.0,  80.0);
    double v18 = WeakRetained;
    id v19 = v9;
    id v13 = v9;
    double v14 = v17;
    -[_PBPIPSwapAnimation animateAndHoldWithCompletion:](v14, "animateAndHoldWithCompletion:", v16);
    [WeakRetained[20] setSwapAnimation:v14];
  }

  return @"Performing Swap";
}

void sub_10017C1A0(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isSwappingBetweenApps])
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 160) startingRequest]);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 userInfo]);
    CGAffineTransform v4 = (void (**)(void))objc_claimAutoreleasedReturnValue([v3 objectForKey:@"Completion Handler"]);

    if (v4) {
      v4[2](v4);
    }
    sub_1000A29D4();
  }

  else
  {
    sub_1000A2960();
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) userInfo]);
  id v6 = (void (**)(void))objc_claimAutoreleasedReturnValue([v5 objectForKey:@"Completion Handler"]);

  if (v6) {
    v6[2](v6);
  }
}

CFStringRef sub_10017C270(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a2;
  id v9 = a4;
  id v10 = a5;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v12 = v9;
    id v13 = -[_PBPIPPresentationRequest initWithLayout:userInfo:]( objc_alloc(&OBJC_CLASS____PBPIPPresentationRequest),  "initWithLayout:userInfo:",  v12,  v10);

    [WeakRetained[20] setStoppingRequest:v13];
    double v14 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[20] startingRequest]);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    id v17[2] = sub_10017C3A0;
    void v17[3] = &unk_1003D09B8;
    void v17[4] = WeakRetained;
    id v18 = v14;
    id v19 = v10;
    id v15 = v14;
    [v8 executeBlockAfterCurrentStateTransition:v17];
  }

  return @"Presented";
}

void sub_10017C3A0(id *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*((id *)a1[4] + 20) swapAnimation]);
  unsigned __int8 v3 = [v2 isSwappingBetweenApps];

  if ((v3 & 1) == 0)
  {
    CGAffineTransform v4 = (void *)objc_claimAutoreleasedReturnValue([a1[5] userInfo]);
    uint64_t v5 = (void (**)(void))objc_claimAutoreleasedReturnValue([v4 objectForKey:@"Completion Handler"]);

    if (v5) {
      v5[2](v5);
    }
  }

  uint64_t v6 = objc_claimAutoreleasedReturnValue([a1[6] objectForKey:@"Completion Handler"]);
  id v7 = (void *)v6;
  if (v6) {
    (*(void (**)(uint64_t))(v6 + 16))(v6);
  }
  [a1[4] setSwapContext:0];
  [a1[4] _updateDisplayLayoutElementBundleIDWithReason:@"PiP Swap"];
}

NSString *__cdecl sub_10017C474(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState", a3, a4, a5));
}

__CFString *sub_10017C494(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  id v7 = (__CFString *)objc_claimAutoreleasedReturnValue([a2 currentState]);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = WeakRetained;
  if (WeakRetained)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[20] startingRequest]);
    double v11 = (void *)objc_claimAutoreleasedReturnValue([v10 userInfo]);
    id v12 = (void (**)(void))objc_claimAutoreleasedReturnValue([v11 objectForKey:@"Completion Handler"]);

    if (v12) {
      v12[2](v12);
    }
    [v9 setSwapContext:0];
    id v13 = v6;
    double v14 = (void *)objc_claimAutoreleasedReturnValue([v9 pictureInPictureLayout]);
    unsigned int v15 = [v13 isEqual:v14];

    if (v15) {
      uint64_t v16 = 0LL;
    }
    else {
      uint64_t v16 = 2LL;
    }
    if (v15) {
      id v7 = @"Idle";
    }
    else {
      id v7 = @"Presented";
    }
    [v9 setPresentationState:v16];
  }

  return v7;
}

void sub_10017C84C(_Unwind_Exception *a1)
{
}

void sub_10017C874(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:@"Completion Handler"]);
  unsigned __int8 v3 = (void *)v2;
  if (v2) {
    (*(void (**)(uint64_t))(v2 + 16))(v2);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setPresentationState:0];
}

void sub_10017D310(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_10017D3AC;
  _OWORD v4[3] = &unk_1003D2F08;
  unsigned __int8 v3 = *(void **)(a1 + 40);
  _OWORD v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  id v6 = *(id *)(a1 + 48);
  [v2 executeBlockAfterCurrentStateTransition:v4];
}

id sub_10017D3AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _containerViewController:*(void *)(a1 + 40) performStartAnimationInIsolation:1 completionHandler:*(void *)(a1 + 48)];
}

void sub_10017D50C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10017D598;
  block[3] = &unk_1003D2F08;
  uint64_t v2 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v4 = v2;
  id v5 = *(id *)(a1 + 48);
  dispatch_async(&_dispatch_main_q, block);
}

id sub_10017D598(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "containerViewController:performStopAnimationWithFinalLayerFrame:completionHandler:",  *(void *)(a1 + 40),  *(void *)(a1 + 48),  CGRectNull.origin.x,  CGRectNull.origin.y,  CGRectNull.size.width,  CGRectNull.size.height);
}

void sub_10017D8A4(uint64_t a1)
{
  double v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) view]);
  [v1 layoutIfNeeded];
}

id sub_10017DB2C(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

id sub_10017E2D8(uint64_t a1, void *a2)
{
  return [a2 setBundleIdentifier:*(void *)(a1 + 32)];
}

void sub_10017E36C(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[BSSpringAnimationSettings settingsWithMass:stiffness:damping:]( &OBJC_CLASS___BSSpringAnimationSettings,  "settingsWithMass:stiffness:damping:",  1.0,  150.0,  30.0));
  uint64_t v2 = (void *)qword_1004711B8;
  qword_1004711B8 = v1;
}

id sub_10017E7CC()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v1 = sub_10017E838();
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue([v2 path]);
  id v4 = [v0 fileExistsAtPath:v3];

  return v4;
}

id sub_10017E838()
{
  if (qword_1004711D0 != -1) {
    dispatch_once(&qword_1004711D0, &stru_1003DA418);
  }
  return (id)qword_1004711C8;
}

id sub_10017E87C(uint64_t a1)
{
  id v2 = sub_10017E838();
  unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PBUserProfilesArchive archiveWithContentsOfURL:options:error:]( &OBJC_CLASS___PBUserProfilesArchive,  "archiveWithContentsOfURL:options:error:",  v3,  0LL,  a1));

  return v4;
}

id sub_10017E8DC(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = sub_10017E838();
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = [v3 writeToURL:v5 options:1 error:a2];

  return v6;
}

id sub_10017E938(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v3 = sub_10017E838();
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = [v2 removeItemAtURL:v4 error:a1];

  return v5;
}

id sub_10017F2EC(uint64_t a1)
{
  id v2 =  [*(id *)(a1 + 32) appendInteger:*(void *)(*(void *)(a1 + 40) + 8) withName:@"version"];
  id v3 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 16) withName:@"userProfiles"];
  id v4 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 24) withName:@"homeUsersIdentifiers"];
  return  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 32) withName:@"groupRecommendationsSessions"];
}

void sub_10017F474(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 URLsForDirectory:14 inDomains:1]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 firstObject]);

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 bundleIdentifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 URLByAppendingPathComponent:v5 isDirectory:1]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  [v7 createDirectoryAtURL:v6 withIntermediateDirectories:1 attributes:0 error:0];

  uint64_t v8 = objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:@"UserProfiles.bin" isDirectory:0]);
  id v9 = (void *)qword_1004711C8;
  qword_1004711C8 = v8;
}

void sub_10017FEE0(_Unwind_Exception *a1)
{
}

void sub_10017FF10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_mainQueue_recalculateStateAndNotify");
}

id sub_10017FF3C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_queue_recalculateStateAndNotifyForced:", 1);
}

id sub_10017FF58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateDumpBuilder]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 build]);

  return v3;
}

__CFString *sub_100180358(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 5) {
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PBSEARCStatus(%ld)",  a1));
  }
  else {
    id v1 = off_1003DA460[a1 + 1];
  }
  return v1;
}

__CFString *sub_10018052C(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 4) {
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PBEventFilterMode(%ld)",  a1));
  }
  else {
    id v1 = off_1003DA488[a1 + 1];
  }
  return v1;
}

void sub_100180734( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10018074C(uint64_t result, int a2, uint64_t a3)
{
  if (a2) {
    *(void *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) |= a3;
  }
  return result;
}

void sub_100180828(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_queue_recalculateStateAndNotifyForced:", 0);
}

uint64_t sub_100180BE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100180C08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100180CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 16))(result, 1LL, a2, a3);
  }
  return result;
}

void sub_100180E28(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v2 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138412290;
    uint64_t v10 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "View service requested dismissal: %@ ",  buf,  0xCu);
  }

  uint64_t v3 = *(void **)(a1 + 32);
  if (v3[5])
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138412290;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "View service already dismissed, ignoring request: %@ ",  buf,  0xCu);
    }
  }

  else
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 delegate]);
    [v5 viewService:*(void *)(a1 + 32) willDismissWithResult:*(void *)(a1 + 40)];

    id v6 = *(void **)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    id v8[2] = sub_100180F8C;
    v8[3] = &unk_1003D28B0;
    void v8[4] = v6;
    [v6 _dismissViewServiceAnimated:1 withOptions:0 dismissalResult:v7 completion:v8];
  }

void sub_100180F8C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v2 viewServiceDidDismiss:*(void *)(a1 + 32)];
}

id sub_100181174(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(uint64_t, uint64_t, void))(v2 + 16))(v2, 1LL, 0LL);
  }
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100181218;
  block[3] = &unk_1003CFF08;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(v4, block);

  return [*(id *)(*(void *)(a1 + 32) + 40) invalidate];
}

id sub_100181218(uint64_t a1)
{
  return [*(id *)(a1 + 32) disconnect];
}

void sub_100181238(uint64_t a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472LL;
  v1[2] = sub_100181298;
  v1[3] = &unk_1003CFF08;
  id v2 = *(id *)(a1 + 32);
  BSDispatchMain(v1);
}

id sub_100181298(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_100181344(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSXPCInterface interfaceWithProtocol:]( &OBJC_CLASS___NSXPCInterface,  "interfaceWithProtocol:",  &OBJC_PROTOCOL___PBSViewServicePresenter));
  id v2 = (void *)qword_1004711D8;
  qword_1004711D8 = v1;

  v5[0] = objc_opt_class(&OBJC_CLASS___NSDictionary);
  v5[1] = objc_opt_class(&OBJC_CLASS___NSNumber);
  void v5[2] = objc_opt_class(&OBJC_CLASS___NSString);
  _OWORD v5[3] = objc_opt_class(&OBJC_CLASS___NSDate);
  void v5[4] = objc_opt_class(&OBJC_CLASS___NSData);
  void v5[5] = objc_opt_class(&OBJC_CLASS___NSArray);
  v5[6] = objc_opt_class(&OBJC_CLASS___NSError);
  v5[7] = objc_opt_class(&OBJC_CLASS___NSXPCListenerEndpoint);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v5, 8LL));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v3));

  [(id)qword_1004711D8 setClasses:v4 forSelector:"viewServiceBeginPresentationWithOptions:" argumentIndex:0 ofReply:0];
  [(id)qword_1004711D8 setClasses:v4 forSelector:"viewServiceBeginPresentationWithOptions:completion:" argumentIndex:0 ofReply:0];
  [(id)qword_1004711D8 setClasses:v4 forSelector:"viewServiceUpdatePresentationWithOptions:" argumentIndex:0 ofReply:0];
  [(id)qword_1004711D8 setClasses:v4 forSelector:"viewServiceHandleMessage:reply:" argumentIndex:0 ofReply:0];
  [(id)qword_1004711D8 setClasses:v4 forSelector:"viewServiceHandleMessage:reply:" argumentIndex:0 ofReply:1];
  [(id)qword_1004711D8 setClasses:v4 forSelector:"viewServiceEndPresentationWithOptions:completion:" argumentIndex:0 ofReply:0];
}

void sub_100181568(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSXPCInterface interfaceWithProtocol:]( &OBJC_CLASS___NSXPCInterface,  "interfaceWithProtocol:",  &OBJC_PROTOCOL___PBSViewServiceInterface));
  id v2 = (void *)qword_1004711E8;
  qword_1004711E8 = v1;

  uint64_t v3 = -[NSMutableSet initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableSet), "initWithCapacity:", 8LL);
  -[NSMutableSet addObject:](v3, "addObject:", objc_opt_class(&OBJC_CLASS___NSArray));
  -[NSMutableSet addObject:](v3, "addObject:", objc_opt_class(&OBJC_CLASS___NSDictionary));
  -[NSMutableSet addObject:](v3, "addObject:", objc_opt_class(&OBJC_CLASS___NSString));
  -[NSMutableSet addObject:](v3, "addObject:", objc_opt_class(&OBJC_CLASS___NSNumber));
  -[NSMutableSet addObject:](v3, "addObject:", objc_opt_class(&OBJC_CLASS___NSDate));
  -[NSMutableSet addObject:](v3, "addObject:", objc_opt_class(&OBJC_CLASS___NSData));
  -[NSMutableSet addObject:](v3, "addObject:", objc_opt_class(&OBJC_CLASS___NSError));
  -[NSMutableSet addObject:](v3, "addObject:", objc_opt_class(&OBJC_CLASS___NSXPCListenerEndpoint));
  -[NSMutableSet addObject:](v3, "addObject:", objc_opt_class(&OBJC_CLASS___PBSSystemMenuServiceStartCameraPiPResult));
  [(id)qword_1004711E8 setClasses:v3 forSelector:"dismissWithResult:" argumentIndex:0 ofReply:0];
}

void sub_100181C58( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11, id *a12, id *a13, id *a14)
{
}

CFStringRef sub_100181D18(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_100181E0C;
  void v15[3] = &unk_1003D0418;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v13 = v11;
  id v16 = v13;
  [v9 executeBlockAfterCurrentStateTransition:v15];

  objc_destroyWeak(&v17);
  return @"Preparing";
}

void sub_100181DF8(_Unwind_Exception *a1)
{
}

void sub_100181E0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  sub_100181E40((uint64_t)WeakRetained, *(void **)(a1 + 32));
}

void sub_100181E40(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_100182E50;
    _OWORD v5[3] = &unk_1003CFEB8;
    void v5[4] = a1;
    id v6 = v3;
    [WeakRetained splitViewStateMachine:a1 prepareWithContext:v6 completion:v5];
  }
}

CFStringRef sub_100181EE0(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_100181FD4;
  void v15[3] = &unk_1003D0418;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v13 = v11;
  id v16 = v13;
  [v9 executeBlockAfterCurrentStateTransition:v15];

  objc_destroyWeak(&v17);
  return @"Presenting";
}

void sub_100181FC0(_Unwind_Exception *a1)
{
}

void sub_100181FD4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  sub_100182008((uint64_t)WeakRetained, *(void **)(a1 + 32));
}

void sub_100182008(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_100182E7C;
    _OWORD v5[3] = &unk_1003CFEB8;
    void v5[4] = a1;
    id v6 = v3;
    [WeakRetained splitViewStateMachine:a1 presentWithContext:v6 completion:v5];
  }
}

NSString *__cdecl sub_1001820A8(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  id v8[2] = sub_100182128;
  v8[3] = &unk_1003CFF08;
  id v9 = a4;
  id v6 = v9;
  -[TVSStateMachine executeBlockAfterCurrentStateTransition:](a2, "executeBlockAfterCurrentStateTransition:", v8);

  return (NSString *)@"Presented";
}

id sub_100182128(uint64_t a1)
{
  return [*(id *)(a1 + 32) signalCompletion];
}

CFStringRef sub_100182140(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_100182234;
  void v15[3] = &unk_1003D0418;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v13 = v11;
  id v16 = v13;
  [v9 executeBlockAfterCurrentStateTransition:v15];

  objc_destroyWeak(&v17);
  return @"Dismissing";
}

void sub_100182220(_Unwind_Exception *a1)
{
}

void sub_100182234(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  sub_100182268((uint64_t)WeakRetained, *(void **)(a1 + 32));
}

void sub_100182268(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_100182EA8;
    _OWORD v5[3] = &unk_1003CFEB8;
    void v5[4] = a1;
    id v6 = v3;
    [WeakRetained splitViewStateMachine:a1 dismissWithContext:v6 completion:v5];
  }
}

CFStringRef sub_100182308(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_1001823FC;
  void v15[3] = &unk_1003D0418;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v13 = v11;
  id v16 = v13;
  [v9 executeBlockAfterCurrentStateTransition:v15];

  objc_destroyWeak(&v17);
  return @"Dismissing";
}

void sub_1001823E8(_Unwind_Exception *a1)
{
}

void sub_1001823FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  sub_100182268((uint64_t)WeakRetained, *(void **)(a1 + 32));
}

CFStringRef sub_100182430(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_100182524;
  void v15[3] = &unk_1003D0418;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v13 = v11;
  id v16 = v13;
  [v9 executeBlockAfterCurrentStateTransition:v15];

  objc_destroyWeak(&v17);
  return @"Invalidating";
}

void sub_100182510(_Unwind_Exception *a1)
{
}

void sub_100182524(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  sub_100182558((uint64_t)WeakRetained, *(void **)(a1 + 32));
}

void sub_100182558(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_100182F2C;
    _OWORD v5[3] = &unk_1003CFEB8;
    void v5[4] = a1;
    id v6 = v3;
    [WeakRetained splitViewStateMachine:a1 invalidateWithCompletion:v5];
  }
}

CFStringRef sub_1001825F4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001826D4;
  v14[3] = &unk_1003D0890;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  [v9 executeBlockAfterCurrentStateTransition:v14];
  objc_destroyWeak(&v15);

  return @"Hiding";
}

void sub_1001826C0(_Unwind_Exception *a1)
{
}

void sub_1001826D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_100182700((uint64_t)WeakRetained);
}

void sub_100182700(uint64_t a1)
{
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    void v3[2] = sub_100182ED4;
    void v3[3] = &unk_1003CFF08;
    void v3[4] = a1;
    [WeakRetained splitViewStateMachine:a1 hideWithCompletion:v3];
  }

NSString *__cdecl sub_100182774(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)@"Hidden";
}

CFStringRef sub_100182780(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_100182860;
  v14[3] = &unk_1003D0890;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  [v9 executeBlockAfterCurrentStateTransition:v14];
  objc_destroyWeak(&v15);

  return @"Unhiding";
}

void sub_10018284C(_Unwind_Exception *a1)
{
}

void sub_100182860(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_10018288C((uint64_t)WeakRetained);
}

void sub_10018288C(uint64_t a1)
{
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    void v3[2] = sub_100182F00;
    void v3[3] = &unk_1003CFF08;
    void v3[4] = a1;
    [WeakRetained splitViewStateMachine:a1 unhideWithCompletion:v3];
  }

CFStringRef sub_100182900(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001829E0;
  v14[3] = &unk_1003D0890;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  [v9 executeBlockAfterCurrentStateTransition:v14];
  objc_destroyWeak(&v15);

  return @"Unhiding";
}

void sub_1001829CC(_Unwind_Exception *a1)
{
}

void sub_1001829E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_10018288C((uint64_t)WeakRetained);
}

NSString *__cdecl sub_100182A0C(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)@"Presented";
}

CFStringRef sub_100182A18(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_100182AF8;
  v14[3] = &unk_1003D0890;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  [v9 executeBlockAfterCurrentStateTransition:v14];
  objc_destroyWeak(&v15);

  return @"Hiding";
}

void sub_100182AE4(_Unwind_Exception *a1)
{
}

void sub_100182AF8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_100182700((uint64_t)WeakRetained);
}

CFStringRef sub_100182B24(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_100182C18;
  void v15[3] = &unk_1003D0418;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v13 = v11;
  id v16 = v13;
  [v9 executeBlockAfterCurrentStateTransition:v15];

  objc_destroyWeak(&v17);
  return @"Dismissing";
}

void sub_100182C04(_Unwind_Exception *a1)
{
}

void sub_100182C18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  sub_100182268((uint64_t)WeakRetained, *(void **)(a1 + 32));
}

NSString *__cdecl sub_100182C4C(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  id v8[2] = sub_100182CCC;
  v8[3] = &unk_1003CFF08;
  id v9 = a4;
  id v6 = v9;
  -[TVSStateMachine executeBlockAfterCurrentStateTransition:](a2, "executeBlockAfterCurrentStateTransition:", v8);

  return (NSString *)@"Ready";
}

id sub_100182CCC(uint64_t a1)
{
  return [*(id *)(a1 + 32) signalCompletion];
}

void *sub_100182E50(void *result)
{
  uint64_t v1 = result[4];
  if (v1) {
    return [*(id *)(v1 + 16) postEvent:@"Prepared" withContext:result[5]];
  }
  return result;
}

void *sub_100182E7C(void *result)
{
  uint64_t v1 = result[4];
  if (v1) {
    return [*(id *)(v1 + 16) postEvent:@"Presented" withContext:result[5]];
  }
  return result;
}

void *sub_100182EA8(void *result)
{
  uint64_t v1 = result[4];
  if (v1) {
    return [*(id *)(v1 + 16) postEvent:@"Dismissed" withContext:result[5]];
  }
  return result;
}

void *sub_100182ED4(void *result)
{
  uint64_t v1 = result[4];
  if (v1) {
    return [*(id *)(v1 + 16) postEvent:@"Hidden" withContext:0];
  }
  return result;
}

void *sub_100182F00(void *result)
{
  uint64_t v1 = result[4];
  if (v1) {
    return [*(id *)(v1 + 16) postEvent:@"Presented" withContext:0];
  }
  return result;
}

void *sub_100182F2C(void *result)
{
  uint64_t v1 = result[4];
  if (v1) {
    return [*(id *)(v1 + 16) postEvent:@"Invalidated" withContext:result[5]];
  }
  return result;
}

void *sub_100182FF0(void *a1, char a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (a1)
  {
    v15.receiver = a1;
    v15.super_class = (Class)&OBJC_CLASS____PBSplitViewStateMachineTransitionContext;
    id v9 = objc_msgSendSuper2(&v15, "init");
    a1 = v9;
    if (v9)
    {
      *((_BYTE *)v9 + 16) = a2;
      objc_storeStrong((id *)v9 + 3, a4);
      if (v7)
      {
        v13[0] = _NSConcreteStackBlock;
        v13[1] = 3221225472LL;
        void v13[2] = sub_1001830E4;
        void v13[3] = &unk_1003D86E8;
        id v14 = v7;
        uint64_t v10 = objc_claimAutoreleasedReturnValue( +[BSBlockSentinel sentinelWithCompletion:]( &OBJC_CLASS___BSBlockSentinel,  "sentinelWithCompletion:",  v13));
        id v11 = (void *)a1[1];
        a1[1] = v10;
      }
    }
  }

  return a1;
}

void sub_1001830E4(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 context]);
  [v3 BOOLValue];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_10018336C(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100183404(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1004711F8;
  qword_1004711F8 = (uint64_t)v1;
}

void sub_1001834DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  id v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  id v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v10 = NSStringFromClass(v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  16LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = *(void **)(v13 + 16);
  *(void *)(v13 + 16) = v12;
}

_PBVolumeHUDContentPresentingViewController *sub_100183BF4(uint64_t a1)
{
  id v1 = -[PBContentPresentingContainmentViewController initWithChildViewController:allowsInteraction:expectsEventForwarding:]( objc_alloc(&OBJC_CLASS____PBVolumeHUDContentPresentingViewController),  "initWithChildViewController:allowsInteraction:expectsEventForwarding:",  *(void *)(a1 + 32),  0LL,  0LL);
  -[_PBVolumeHUDContentPresentingViewController setAcceptsEventFocus:](v1, "setAcceptsEventFocus:", 0LL);
  return v1;
}

void sub_100183DE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(_BYTE *)(v1 + 9))
  {
    *(_BYTE *)(v1 + 9) = 0;
  }

  else
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PBSystemOverlayDismissalRequest dismissalRequestForSession:]( &OBJC_CLASS___PBMutableSystemOverlayDismissalRequest,  "dismissalRequestForSession:",  *(void *)(a1 + 40)));
    [v3 setAnimated:0];
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void **)(v4 + 16);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    void v6[2] = sub_100183E80;
    void v6[3] = &unk_1003CFEE0;
    void v6[4] = v4;
    [v5 dismissWithRequest:v3 completion:v6];
  }

void sub_100183E80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = 0LL;

  *(_BYTE *)(*(void *)(a1 + 32) + 8LL) = 0;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v4 postEvent:@"DidDismiss"];
}

void sub_100183F58(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v1 postEvent:@"IndeterminateAnimationFinished"];
}

id sub_100184054(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissVolumeHUD];
}

NSString *__cdecl sub_100184760(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState", a3, a4, a5));
}

NSString *__cdecl sub_100184780(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState", a3, a4, a5));
}

NSString *__cdecl sub_1001847A0(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState", a3, a4, a5));
}

NSString *__cdecl sub_1001847C0(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState", a3, a4, a5));
}

NSString *__cdecl sub_1001847E0(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState", a3, a4, a5));
}

NSString *__cdecl sub_100184800(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState", a3, a4, a5));
}

NSString *__cdecl sub_100184820(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState", a3, a4, a5));
}

NSString *__cdecl sub_100184840(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState", a3, a4, a5));
}

NSString *__cdecl sub_100184860(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[TVSStateMachine currentState](a2, "currentState", a3, a4, a5));
}

NSString *__cdecl sub_100184880(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)@"Idle";
}

NSString *__cdecl sub_10018488C(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)@"Idle";
}

CFStringRef sub_100184898(uint64_t a1, uint64_t a2, const __CFString *a3)
{
  id v5 = sub_1000F799C();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredVolumeLevel]);
    int v16 = 138412290;
    id v17 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Button pressed, showing volume HUD with preferred level %@",  (uint8_t *)&v16,  0xCu);
  }

  id v8 = *(void **)(a1 + 32);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 preferredVolumeLevel]);
  [v8 showVolumeHUDWithImageName:@"hifispeaker.fill" level:v9];

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  LODWORD(v9) = [v10 alwaysShowIndeterminateOnButtonPress];

  id v11 = *(void **)(a1 + 32);
  if ((_DWORD)v9)
  {
    [v11 _startIndeterminateVolumePresentationTimerWithDuration:a3 == @"VolumeUpButtonPressed" headingUp:0.01];
  }

  else
  {
    BOOL v12 = a3 == @"VolumeUpButtonPressed";
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v11 preferredVolumeLevel]);
    double v14 = 0.1;
    if (v13) {
      double v14 = 0.5;
    }
    [v11 _startIndeterminateVolumePresentationTimerWithDuration:v12 headingUp:v14];
  }

  return @"WaitingForButtonRelease";
}

CFStringRef sub_100184A10(uint64_t a1)
{
  id v2 = sub_1000F799C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredVolumeLevel]);
    int v8 = 138412290;
    id v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Mute pressed, showing volume HUD with preferred level %@",  (uint8_t *)&v8,  0xCu);
  }

  id v5 = *(void **)(a1 + 32);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 preferredVolumeLevel]);
  [v5 showVolumeHUDWithImageName:@"hifispeaker.fill" level:v6];

  return @"WaitingForVolumeLevel";
}

__CFString *sub_100184B00(uint64_t a1, uint64_t a2, __CFString *a3)
{
  BOOL v5 = a3 == @"VolumeUpButtonPressed";
  if (a3 == @"VolumeUpButtonPressed") {
    id v6 = @"IndeterminateUp";
  }
  else {
    id v6 = @"IndeterminateDown";
  }
  [*(id *)(a1 + 32) showIndeterminateVolumeHUDHeadingUp:v5];
  return v6;
}

__CFString *sub_100184B64(uint64_t a1, uint64_t a2, __CFString *a3)
{
  if (a3 == @"VolumeUpButtonPressed") {
    uint64_t v4 = @"IndeterminateUp";
  }
  else {
    uint64_t v4 = @"IndeterminateDown";
  }
  return v4;
}

NSString *__cdecl sub_100184BB0(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)@"WaitingForVolumeLevel";
}

id sub_100184BBC(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  [v2 _startIndeterminateVolumeDismissalTimerWithDuration:0.5];
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v4;
}

CFStringRef sub_100184C08(uint64_t a1)
{
  id v2 = sub_1000F799C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredVolumeLevel]);
    int v8 = 138412290;
    id v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Preferred volume changed, showing volume HUD with preferred level %@",  (uint8_t *)&v8,  0xCu);
  }

  BOOL v5 = *(void **)(a1 + 32);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 preferredVolumeLevel]);
  [v5 showVolumeHUDWithImageName:@"hifispeaker.fill" level:v6];

  [*(id *)(a1 + 32) startDismissalTimer];
  return @"Idle";
}

id sub_100184D00(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  unsigned int v5 = [v4 alwaysUpdateVolumeLevel];

  if (v5)
  {
    id v6 = sub_1000F799C();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredVolumeLevel]);
      int v13 = 138412290;
      double v14 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Preferred volume changed during indeterminate animation, updating volume HUD with preferred level %@",  (uint8_t *)&v13,  0xCu);
    }

    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) volumeHUDViewController]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredVolumeLevel]);
    [v9 updateIndeterminateVolumeHUDWithLevel:v10 completion:0];
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v11;
}

__CFString *sub_100184E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = *(void **)(a1 + 32);
  id v7 = a5;
  [v6 cancelDismissalTimer];
  int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"HeadingUp"]);

  id v9 = [v8 BOOLValue];
  [*(id *)(a1 + 32) showIndeterminateVolumeHUDHeadingUp:v9];
  if ((_DWORD)v9) {
    uint64_t v10 = @"IndeterminateUp";
  }
  else {
    uint64_t v10 = @"IndeterminateDown";
  }
  return v10;
}

NSString *__cdecl sub_100184EC8(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)@"StoppingIndeterminateAnimation";
}

id sub_100184ED4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (__CFString *)objc_claimAutoreleasedReturnValue([v3 currentState]);
  BOOL v5 = v4 == @"IndeterminateUp";

  [*(id *)(a1 + 32) showIndeterminateVolumeHUDHeadingUp:v5];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);

  return v6;
}

NSString *__cdecl sub_100184F44(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  return (NSString *)@"StoppingIndeterminateAnimation";
}

CFStringRef sub_100184F50(uint64_t a1)
{
  id v2 = sub_1000F799C();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredVolumeLevel]);
    *(_DWORD *)__int128 buf = 138412290;
    uint64_t v10 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Animation finished, hiding indeterminate HUD with preferred level %@",  buf,  0xCu);
  }

  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) volumeHUDViewController]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredVolumeLevel]);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  id v8[2] = sub_100185080;
  v8[3] = &unk_1003CFF08;
  void v8[4] = *(void *)(a1 + 32);
  [v5 hideIndeterminateVolumeHUDWithLevel:v6 completion:v8];

  return @"Idle";
}

id sub_100185080(uint64_t a1)
{
  return [*(id *)(a1 + 32) startDismissalTimer];
}

void sub_10018517C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  BOOL v5 = @"HeadingUp";
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
  id v6 = v3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v6,  &v5,  1LL));
  [v2 postEvent:@"IndeterminatePresentationTimerFired" withContext:0 userInfo:v4];
}

void sub_100185358(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stateMachine]);
  [v1 postEvent:@"IndeterminateDismissalTimerFired"];
}

void sub_100186B70(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSIndexPath indexPathForItem:inSection:]( &OBJC_CLASS___NSIndexPath,  "indexPathForItem:inSection:",  a2,  0LL));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _attributesForIndexPath:v3 scrollProgress:*(void *)(*(void *)(a1 + 32) + 64) swipeOffset:0 swipeIndex:*(double *)(a1 + 48) allowMask:*(double *)(*(void *)(a1 + 32) + 72)]);
  [*(id *)(a1 + 40) addObject:v4];
}

void sub_100187008(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 updateAction];
  if (!v4)
  {
    BOOL v5 = *(void **)(*(void *)(a1 + 32) + 16LL);
    uint64_t v6 = objc_claimAutoreleasedReturnValue([v3 indexPathAfterUpdate]);
    goto LABEL_5;
  }

  if (v4 == (id)1)
  {
    BOOL v5 = *(void **)(*(void *)(a1 + 32) + 24LL);
    uint64_t v6 = objc_claimAutoreleasedReturnValue([v3 indexPathBeforeUpdate]);
LABEL_5:
    id v7 = (void *)v6;
    [v5 addObject:v6];
  }
}

void sub_100187098(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSIndexPath indexPathForItem:inSection:]( &OBJC_CLASS___NSIndexPath,  "indexPathForItem:inSection:",  *(void *)(*(void *)(a1 + 32) + 40LL) - 1LL,  0LL));
  unint64_t v7 = a3 + 1;
  if (v7 < (unint64_t)[*(id *)(*(void *)(a1 + 32) + 24) count])
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) objectAtIndexedSubscript:v7]);

    uint64_t v6 = (void *)v8;
  }

  id v9 = [v5 item];
  uint64_t v10 = -[NSIndexSet initWithIndexesInRange:]( [NSIndexSet alloc],  "initWithIndexesInRange:",  v9,  (_BYTE *)[v6 item] - v9 + 1);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  _DWORD v11[2] = sub_1001871C4;
  void v11[3] = &unk_1003DA838;
  void v11[4] = *(void *)(a1 + 32);
  v11[5] = v7;
  -[NSIndexSet enumerateIndexesUsingBlock:](v10, "enumerateIndexesUsingBlock:", v11);
}

void sub_1001871C4(uint64_t a1, uint64_t a2)
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSIndexPath indexPathForItem:inSection:]( &OBJC_CLASS___NSIndexPath,  "indexPathForItem:inSection:",  a2,  0LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSIndexPath indexPathForItem:inSection:]( &OBJC_CLASS___NSIndexPath,  "indexPathForItem:inSection:",  (a2 - *(void *)(a1 + 40)) & ~((a2 - *(void *)(a1 + 40)) >> 63),  0LL));
  [*(id *)(*(void *)(a1 + 32) + 32) setObject:v5 forKeyedSubscript:v4];
}

id sub_100187B3C(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_100187BA0(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___PBSoftwareUpdateService);
  id v2 = (void *)qword_100471208;
  qword_100471208 = (uint64_t)v1;
}

void sub_100187E94( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id location)
{
}

void sub_100187EBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  uint64_t v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  id v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v10 = NSStringFromClass(v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  BOOL v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  20LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  double v14 = *(void **)(v13 + 72);
  *(void *)(v13 + 72) = v12;

  if (OTAImplementationType() == 2)
  {
    +[PBOSUpdateSwitch setProcessDelegate:](&OBJC_CLASS___PBOSUpdateSwitch, "setProcessDelegate:", *(void *)(a1 + 32));
  }

  else
  {
    uint64_t v17 = objc_opt_self(&OBJC_CLASS___PBOSSoftwareUpdateProcess, v15);
    id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v18]);

    [v19 setDelegate:*(void *)(a1 + 32)];
  }

  uint64_t v20 = objc_opt_self(&OBJC_CLASS___PBPowerManager, v16);
  double v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  double v22 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v21]);

  [v22 addObserver:*(void *)(a1 + 32)];
}

void sub_10018800C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleOSUpdatePrefsDidChange];
}

void sub_1001880DC(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
  [v1 periodicCheckInterval];
  uint64_t v3 = v2;

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
  unsigned int v5 = [v4 shouldAutomaticallyApplyUpdates];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 lastCheckDate]);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
  [v8 sleepCheckDelay];
  uint64_t v10 = v9;

  memset(v27, 0, 250);
  id v11 = sub_1000836CC();
  BOOL v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v13 = 3LL;
  }
  else {
    uint64_t v13 = 2LL;
  }
  double v14 = @"no";
  int v19 = 134218754;
  __int16 v21 = 2048;
  uint64_t v20 = v3;
  uint64_t v22 = v10;
  __int16 v23 = 2112;
  if (v5) {
    double v14 = @"yes";
  }
  id v24 = v14;
  __int16 v25 = 2112;
  id v26 = v7;
  _os_log_send_and_compose_impl( v13,  0LL,  v27,  250LL,  &_mh_execute_header,  v12,  0LL,  "Starting OS update monitoring (period:%.2fs sleepDelay:%.2fs autoApply:%@ lastChecked:%@)",  COERCE_DOUBLE(134218754LL),  &v19,  42);
  uint64_t v16 = v15;

  id v17 = sub_1000836CC();
  id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  _os_log_message_persist_impl(v16, 0LL, v18);

  if (v16 != v27) {
    free(v16);
  }
  +[PBOSUpdateSwitch scheduleUpdateChecks:](&OBJC_CLASS___PBOSUpdateSwitch, "scheduleUpdateChecks:", 0LL);
}

void sub_1001887EC(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
  unsigned int v3 = [v2 shouldSkipMDMCommands];

  if (v3)
  {
    memset(v18, 0, 250);
    id v4 = sub_1000836CC();
    unsigned int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v6 = 3LL;
    }
    else {
      uint64_t v6 = 2LL;
    }
    v17[0] = 0;
    _os_log_send_and_compose_impl( v6,  0LL,  v18,  250LL,  &_mh_execute_header,  v5,  0LL,  "Skipped checkForOSUpdatesWithOptions - default set",  v17,  2);
    uint64_t v8 = v7;

    id v9 = sub_1000836CC();
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    _os_log_message_persist_impl(v8, 0LL, v10);

    if (v8 != v18) {
      free(v8);
    }
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  16LL,  0LL));
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }

  else
  {
    uint64_t v12 = *(void *)(a1 + 32);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    void v14[2] = sub_1001889D8;
    v14[3] = &unk_1003DA8B0;
    id v13 = *(id *)(a1 + 48);
    void v14[4] = *(void *)(a1 + 40);
    id v15 = v13;
    uint64_t v16 = *(void *)(a1 + 56);
    +[PBOSUpdateSwitch startAction:withOptions:completion:]( &OBJC_CLASS___PBOSUpdateSwitch,  "startAction:withOptions:completion:",  6LL,  v12,  v14);
    id v11 = v15;
  }
}

void sub_1001889D8(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) != 0)
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) osSoftwareUpdateCheckResponse]);

    unint64_t v7 = *(void **)(a1 + 32);
    if (v6)
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 osSoftwareUpdateCheckResponse]);
      id v9 = *(void **)(a1 + 40);

      if (v8 == v9)
      {
        id v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Invalid condition not satisfying: %@",  @"[self osSoftwareUpdateCheckResponse] != response"));
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          sub_100289638(a1, (void *)(a1 + 32));
        }
        _bs_set_crash_log_message([v18 UTF8String]);
        __break(0);
        JUMPOUT(0x100188C18LL);
      }

      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  5LL,  0LL));
      (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
    }

    else
    {
      [v7 setOsSoftwareUpdateCheckResponse:*(void *)(a1 + 40)];
    }
  }

  else
  {
    memset(v21, 0, 250);
    id v11 = sub_1000836CC();
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      uint64_t v13 = 3LL;
    }
    else {
      uint64_t v13 = 2LL;
    }
    int v19 = 138543362;
    id v20 = v5;
    _os_log_send_and_compose_impl( v13,  0LL,  v21,  250LL,  &_mh_execute_header,  v12,  16LL,  "Failed to start OS update check [%{public}@]",  &v19,  12);
    id v15 = v14;

    id v16 = sub_1000836CC();
    id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    _os_log_message_persist_impl(v15, 16LL, v17);

    if (v15 != v21) {
      free(v15);
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }
}

void sub_100189010(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5
    && (unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 progress]),
        unsigned int v8 = [v7 isDone],
        v7,
        v8))
  {
    id v9 = sub_1000836CC();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Not starting download, asset already downloaded.",  buf,  2u);
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PBSOSUpdateServiceErrorDomain,  15LL,  0LL));
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  else
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateScanOptions defaultOptions](&OBJC_CLASS___PBSOSUpdateScanOptions, "defaultOptions"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_100189178;
    _OWORD v12[3] = &unk_1003D0048;
    id v13 = *(id *)(a1 + 32);
    +[PBOSUpdateSwitch downloadOnlyWithOptions:completion:]( &OBJC_CLASS___PBOSUpdateSwitch,  "downloadOnlyWithOptions:completion:",  v11,  v12);
  }
}

void sub_100189178(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    memset(v15, 0, 250);
    id v6 = sub_1000836CC();
    unint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      uint64_t v8 = 3LL;
    }
    else {
      uint64_t v8 = 2LL;
    }
    int v13 = 138543362;
    id v14 = v5;
    _os_log_send_and_compose_impl( v8,  0LL,  v15,  250LL,  &_mh_execute_header,  v7,  16LL,  "Failed to start OS update download [%{public}@]",  &v13,  12);
    uint64_t v10 = v9;

    id v11 = sub_1000836CC();
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    _os_log_message_persist_impl(v10, 16LL, v12);

    if (v10 != v15) {
      free(v10);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100189780(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  0LL,  *(void *)(a1 + 32));
}

void sub_1001897A4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10018980C;
  block[3] = &unk_1003D0110;
  id v2 = *(id *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
}

uint64_t sub_10018980C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100189B64(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    __int128 v35 = 0uLL;
    memset(v36, 0, sizeof(v36));
    __int128 v33 = 0uLL;
    __int128 v34 = 0uLL;
    __int128 v31 = 0uLL;
    __int128 v32 = 0uLL;
    __int128 v29 = 0uLL;
    __int128 v30 = 0uLL;
    __int128 v27 = 0uLL;
    __int128 v28 = 0uLL;
    __int128 v25 = 0uLL;
    __int128 v26 = 0uLL;
    __int128 v23 = 0uLL;
    __int128 v24 = 0uLL;
    __int128 v22 = 0uLL;
    id v6 = sub_1000836CC();
    unint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v8 = 3LL;
    }
    else {
      uint64_t v8 = 2LL;
    }
    LOWORD(v20) = 0;
    _os_log_send_and_compose_impl( v8,  0LL,  &v22,  250LL,  &_mh_execute_header,  v7,  0LL,  "OS update install started.",  &v20,  2);
    uint64_t v10 = v9;

    id v11 = sub_1000836CC();
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    int v13 = v10;
    uint64_t v14 = 0LL;
  }

  else
  {
    __int128 v35 = 0uLL;
    memset(v36, 0, sizeof(v36));
    __int128 v33 = 0uLL;
    __int128 v34 = 0uLL;
    __int128 v31 = 0uLL;
    __int128 v32 = 0uLL;
    __int128 v29 = 0uLL;
    __int128 v30 = 0uLL;
    __int128 v27 = 0uLL;
    __int128 v28 = 0uLL;
    __int128 v25 = 0uLL;
    __int128 v26 = 0uLL;
    __int128 v23 = 0uLL;
    __int128 v24 = 0uLL;
    __int128 v22 = 0uLL;
    id v15 = sub_1000836CC();
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      uint64_t v17 = 3LL;
    }
    else {
      uint64_t v17 = 2LL;
    }
    int v20 = 138543362;
    id v21 = v5;
    _os_log_send_and_compose_impl( v17,  0LL,  &v22,  250LL,  &_mh_execute_header,  v16,  16LL,  "Failed to configure for OS install [%{public}@].",  &v20,  12);
    uint64_t v10 = v18;

    id v19 = sub_1000836CC();
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v19);
    int v13 = v10;
    uint64_t v14 = 16LL;
  }

  _os_log_message_persist_impl(v13, v14, v12);

  if (v10 != &v22) {
    free(v10);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10018AB10(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  objc_sync_enter(v2);
  memset(v11, 0, 250);
  id v3 = sub_1000836CC();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v5 = 3LL;
  }
  else {
    uint64_t v5 = 2LL;
  }
  v10[0] = 0;
  _os_log_send_and_compose_impl( v5,  0LL,  v11,  250LL,  &_mh_execute_header,  v4,  0LL,  "OS update check started: initial task",  v10,  2);
  unint64_t v7 = v6;

  id v8 = sub_1000836CC();
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  _os_log_message_persist_impl(v7, 0LL, v9);

  if (v7 != v11) {
    free(v7);
  }
  [*(id *)(a1 + 32) _startOSUpdateCheckForAction:3];
  objc_sync_exit(v2);
}

void sub_10018AC58(_Unwind_Exception *a1)
{
}

void sub_10018AC7C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  objc_sync_enter(v2);
  memset(v11, 0, 250);
  id v3 = sub_1000836CC();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v5 = 3LL;
  }
  else {
    uint64_t v5 = 2LL;
  }
  v10[0] = 0;
  _os_log_send_and_compose_impl( v5,  0LL,  v11,  250LL,  &_mh_execute_header,  v4,  0LL,  "OS update check started: periodic task",  v10,  2);
  unint64_t v7 = v6;

  id v8 = sub_1000836CC();
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  _os_log_message_persist_impl(v7, 0LL, v9);

  if (v7 != v11) {
    free(v7);
  }
  [*(id *)(a1 + 32) _startOSUpdateCheckForAction:3];
  objc_sync_exit(v2);
}

void sub_10018ADC4(_Unwind_Exception *a1)
{
}

void sub_10018BACC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10018BAF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (v3 && WeakRetained)
  {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
    unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 laterDate:v7]);

    id v9 = sub_1000836CC();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
    if (v8 == v7)
    {
      if (v11)
      {
        LOWORD(v15) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Not scheduling update delay expiration timer - expiration date has passed.",  (uint8_t *)&v15,  2u);
      }
    }

    else
    {
      if (v11)
      {
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v3 descriptionWithLocale:v6]);
        int v15 = 138543362;
        id v16 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Scheduling update delay expiration timer for %{public}@",  (uint8_t *)&v15,  0xCu);
      }

      uint64_t v10 = -[PCSimpleTimer initWithFireDate:serviceIdentifier:target:selector:userInfo:]( objc_alloc(&OBJC_CLASS___PCSimpleTimer),  "initWithFireDate:serviceIdentifier:target:selector:userInfo:",  v3,  @"AppleTV.SWU.CheckTimer.DelayedUpdateExpiration",  v5,  "_osUpdateDelayedUpdateExpirationTimerFired:",  0LL);
      [v5 setUpdateDelayExpirationTimer:v10];
      int v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop mainRunLoop](&OBJC_CLASS___NSRunLoop, "mainRunLoop"));
      -[os_log_s scheduleInRunLoop:](v10, "scheduleInRunLoop:", v13);
    }
  }

  else
  {
    id v14 = sub_1000836CC();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v15) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Not scheduling update delay expiration timer - not delaying updates.",  (uint8_t *)&v15,  2u);
    }
  }
}

void sub_10018D434(id a1, BOOL a2, NSError *a3)
{
  if (!a2)
  {
    memset(v13, 0, 250);
    id v3 = a3;
    id v4 = sub_1000836CC();
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      uint64_t v6 = 3LL;
    }
    else {
      uint64_t v6 = 2LL;
    }

    int v11 = 138543362;
    uint64_t v12 = v3;
    _os_log_send_and_compose_impl( v6,  0LL,  v13,  250LL,  &_mh_execute_header,  v5,  16LL,  "Failed to start OS update check [%{public}@]",  &v11,  12);
    id v8 = v7;

    id v9 = sub_1000836CC();
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    _os_log_message_persist_impl(v8, 16LL, v10);

    if (v8 != v13) {
      free(v8);
    }
  }

void sub_10018D69C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000836CC();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      int v10 = 138543362;
      id v11 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Found installed update %{public}@",  (uint8_t *)&v10,  0xCu);
    }

    id v7 = objc_alloc_init(&OBJC_CLASS___PBSOSUpdateDownload);
    [v7 setDescriptor:v3];
    uint64_t v5 = (os_log_s *)objc_alloc_init(&OBJC_CLASS___PBSOSUpdateOperationProgress);
    -[os_log_s setPhase:](v5, "setPhase:", &stru_1003E2910);
    LODWORD(v_Block_object_dispose(va, 8) = 1120403456;
    -[os_log_s setPercentComplete:](v5, "setPercentComplete:", v8);
    LODWORD(v9) = 1120403456;
    -[os_log_s setNormalizedPercentComplete:](v5, "setNormalizedPercentComplete:", v9);
    -[os_log_s setTimeRemaining:](v5, "setTimeRemaining:", 0.0);
    -[os_log_s setIsDone:](v5, "setIsDone:", 1LL);
    [v7 setProgress:v5];
  }

  else
  {
    if (v6)
    {
      LOWORD(v10) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "No installed update found.",  (uint8_t *)&v10,  2u);
    }

    id v7 = 0LL;
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10018DE10(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _versionForUpdate:*(void *)(a1 + 40)]);
  int v3 = *(unsigned __int8 *)(a1 + 48);
  id v4 = [v2 length];
  uint64_t v5 = @"OSUpdateConfirmNotReadyPrompt";
  if (!v4) {
    uint64_t v5 = @"OSUpdateConfirmNotReadyPromptNoVersion";
  }
  BOOL v6 = @"OSUpdateConfirmNotReadyButDownloadedPromptNoVersion";
  if (v4) {
    BOOL v6 = @"OSUpdateConfirmNotReadyButDownloadedPrompt";
  }
  if (v3) {
    uint64_t v5 = (__CFString *)v6;
  }
  id v7 = v5;
  id v8 = sub_1001C307C(v7, 0LL);
  double v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v9, v2));

  id v11 = @"OSUpdateConfirmNotReadyButDownloadedSubtext";
  uint64_t v12 = @"OSUpdateConfirmNotReadySubtextButDownloadedFR";
  if (!*(_BYTE *)(a1 + 48))
  {
    id v11 = @"OSUpdateConfirmNotReadySubtext";
    uint64_t v12 = @"OSUpdateConfirmNotReadySubtextFR";
  }

  if (*(_BYTE *)(a1 + 49)) {
    int v13 = (__CFString *)v12;
  }
  else {
    int v13 = (__CFString *)v11;
  }
  id v14 = v13;
  id v15 = sub_1001C307C(v14, 0LL);
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@\n\n%@",  v10,  v16));
  v31[0] = kCFUserNotificationAlertHeaderKey;
  id v18 = sub_1001C307C(@"OSUpdateConfirmTitle", 0LL);
  id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  v32[0] = v19;
  v32[1] = v17;
  v31[1] = kCFUserNotificationAlertMessageKey;
  v31[2] = kCFUserNotificationDefaultButtonTitleKey;
  if (*(_BYTE *)(a1 + 48)) {
    int v20 = @"OSUpdateConfirmYesButDownloadedMenuItem";
  }
  else {
    int v20 = @"OSUpdateConfirmYesMenuItem";
  }
  id v21 = sub_1001C307C(v20, 0LL);
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
  id v32[2] = v22;
  v31[3] = kCFUserNotificationAlternateButtonTitleKey;
  id v23 = sub_1001C307C(@"OSUpdateConfirmNoMenuItem", 0LL);
  __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  v32[3] = v24;
  __int128 v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v32,  v31,  4LL));

  SInt32 error = 0;
  __int128 v26 = CFUserNotificationCreate(0LL, 300.0, 1uLL, &error, v25);
  if (v26)
  {
    __int128 v27 = v26;
    CFOptionFlags responseFlags = 3LL;
    CFUserNotificationReceiveResponse(v26, 300.0, &responseFlags);
    if (responseFlags) {
      __int128 v28 = &stru_1003DA9B0;
    }
    else {
      __int128 v28 = &stru_1003DA990;
    }
    dispatch_async(&_dispatch_main_q, v28);
  }
}

void sub_10018E0DC(id a1)
{
}

void sub_10018E0F8(id a1)
{
}

void sub_10018E7CC(uint64_t a1, int a2)
{
  if (a2)
  {
    __int128 v46 = 0u;
    memset(v47, 0, sizeof(v47));
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v34 = 0u;
    __int128 v35 = 0u;
    *(_OWORD *)__int128 buf = 0u;
    id v3 = sub_1000836CC();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v5 = 3LL;
    }
    else {
      uint64_t v5 = 2LL;
    }
    v32[0] = 0;
    _os_log_send_and_compose_impl(v5, 0LL, buf, 250LL, &_mh_execute_header, v4, 0LL, "Continuing with apply.", v32, 2);
    id v7 = v6;

    id v8 = sub_1000836CC();
    double v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    _os_log_message_persist_impl(v7, 0LL, v9);

    if (v7 != buf) {
      free(v7);
    }
    if (*(_BYTE *)(a1 + 32))
    {
      id v10 = sub_1000836CC();
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Setting Restore obliterate flag.", buf, 2u);
      }

      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
      objc_msgSend(v12, "setPbs_shouldObliterateOnLaunch:", 1);

      +[TVSPreferences synchronizeAllDomains](&OBJC_CLASS___TVSPreferences, "synchronizeAllDomains");
      id v13 = sub_1000836CC();
      id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        id v15 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
        unsigned int v16 = objc_msgSend(v15, "pbs_shouldObliterateOnLaunch");
        *(_DWORD *)__int128 buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Checking Restore obliterate flag: %d",  buf,  8u);
      }
    }

    __int128 v46 = 0u;
    memset(v47, 0, sizeof(v47));
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v34 = 0u;
    __int128 v35 = 0u;
    *(_OWORD *)__int128 buf = 0u;
    id v17 = sub_1000836CC();
    id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v19 = 3LL;
    }
    else {
      uint64_t v19 = 2LL;
    }
    v32[0] = 0;
    LODWORD(v31) = 2;
    _os_log_send_and_compose_impl( v19,  0LL,  buf,  250LL,  &_mh_execute_header,  v18,  0LL,  "Calling resumeAfterDownload to apply.",  v32,  v31);
    id v21 = v20;

    id v22 = sub_1000836CC();
    id v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
    _os_log_message_persist_impl(v21, 0LL, v23);

    if (v21 != buf) {
      free(v21);
    }
    dispatch_async(&_dispatch_main_q, &stru_1003DA9F8);
  }

  else
  {
    __int128 v46 = 0u;
    memset(v47, 0, sizeof(v47));
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v34 = 0u;
    __int128 v35 = 0u;
    *(_OWORD *)__int128 buf = 0u;
    id v24 = sub_1000836CC();
    __int128 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v26 = 3LL;
    }
    else {
      uint64_t v26 = 2LL;
    }
    v32[0] = 0;
    _os_log_send_and_compose_impl( v26,  0LL,  buf,  250LL,  &_mh_execute_header,  v25,  0LL,  "Not continuing with apply; canceling.",
      v32,
      2);
    __int128 v28 = v27;

    id v29 = sub_1000836CC();
    __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
    _os_log_message_persist_impl(v28, 0LL, v30);

    if (v28 != buf) {
      free(v28);
    }
    +[PBOSUpdateSwitch cancelForReason:](&OBJC_CLASS___PBOSUpdateSwitch, "cancelForReason:", 1LL);
  }

void sub_10018EB64(id a1)
{
}

uint64_t sub_10018EB80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10018EB9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10018EC7C(id *a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([a1[4] objectForKey:PBSOSUpdateServiceKeyAvailableUpdate]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a1[5] _versionForUpdate:v2]);
  unsigned int v4 = objc_msgSend(a1[4], "tvs_BOOLForKey:defaultValue:", PBSOSUpdateServiceKeyIsAutoCheck, 0);
  unsigned int v5 = objc_msgSend(a1[4], "tvs_BOOLForKey:defaultValue:", PBSOSUpdateServiceKeyIsLargeUpdate, 0);
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue(+[PBSOSUpdateSettings sharedInstance](&OBJC_CLASS___PBSOSUpdateSettings, "sharedInstance"));
  unsigned int v7 = [v6 shouldAutomaticallyApplyUpdates];

  id v8 = [v3 length];
  double v9 = @"OSUpdateConfirmReadyPrompt";
  if (!v8) {
    double v9 = @"OSUpdateConfirmReadyPromptNoVersion";
  }
  id v10 = @"OSUpdateAutoConfirmReadyPromptNoVersion";
  if (v8) {
    id v10 = @"OSUpdateAutoConfirmReadyPrompt";
  }
  if (v4) {
    double v9 = (__CFString *)v10;
  }
  id v11 = v9;
  id v12 = sub_1001C307C(v11, 0LL);
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v13, v3));

  __int128 v39 = (void *)v2;
  id v15 = v11;
  if ((v7 & 1) != 0)
  {
    unsigned int v16 = &stru_1003E2910;
  }

  else
  {
    if (v5) {
      id v17 = @"OSUpdateConfirmReadySubtextFR";
    }
    else {
      id v17 = @"OSUpdateConfirmReadySubtext";
    }
    id v18 = sub_1001C307C(v17, 0LL);
    unsigned int v16 = (__CFString *)objc_claimAutoreleasedReturnValue(v18);
  }

  __int128 v38 = v14;
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v14 stringByAppendingString:v16]);
  int v20 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v21 = sub_1001C307C(@"OSUpdateConfirmTitle", 0LL);
  id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
  -[NSMutableDictionary setValue:forKey:](v20, "setValue:forKey:", v22, kCFUserNotificationAlertHeaderKey);

  -[NSMutableDictionary setValue:forKey:](v20, "setValue:forKey:", v19, kCFUserNotificationAlertMessageKey);
  id v23 = &kCFUserNotificationDefaultButtonTitleKey;
  if ((v7 & 1) != 0)
  {
    id v24 = &kCFUserNotificationAlternateButtonTitleKey;
  }

  else
  {
    id v25 = sub_1001C307C(@"OSUpdateConfirmInstallEnableAutoMenuItem", 0LL);
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    -[NSMutableDictionary setValue:forKey:](v20, "setValue:forKey:", v26, kCFUserNotificationDefaultButtonTitleKey);

    id v24 = &kCFUserNotificationOtherButtonTitleKey;
    id v23 = &kCFUserNotificationAlternateButtonTitleKey;
  }

  id v27 = sub_1001C307C(@"OSUpdateConfirmInstallYesMenuItem", 0LL);
  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
  -[NSMutableDictionary setValue:forKey:](v20, "setValue:forKey:", v28, *v23);

  id v29 = sub_1001C307C(@"OSUpdateConfirmInstallNoMenuItem", 0LL);
  __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
  -[NSMutableDictionary setValue:forKey:](v20, "setValue:forKey:", v30, *v24);

  SInt32 error = 0;
  uint64_t v31 = (const __CFDictionary *)-[NSMutableDictionary copy](v20, "copy");
  __int128 v32 = CFUserNotificationCreate(0LL, 0.0, 1uLL, &error, v31);

  if (!v32)
  {
LABEL_28:
    char v37 = 0;
    goto LABEL_30;
  }

  CFOptionFlags responseFlags = 3LL;
  CFUserNotificationReceiveResponse(v32, 0.0, &responseFlags);
  if (v7)
  {
    if (responseFlags == 1)
    {
      CFOptionFlags v33 = 2LL;
    }

    else
    {
      if (responseFlags) {
        goto LABEL_23;
      }
      CFOptionFlags v33 = 1LL;
    }

    CFOptionFlags responseFlags = v33;
  }

uint64_t sub_10018F07C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(unsigned __int8 *)(a1 + 40));
}

void sub_10018F1A4(uint64_t a1)
{
  id v2 = sub_1001C307C(@"OSUpdateFailedText", 0LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = sub_1001C307C(@"OSUpdateFailedServerProblemSubtext", 0LL);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = sub_1001C307C(@"OSUpdateFailedNeedToRestartSubtext", 0LL);
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  if (OTAImplementationType(v7, v8) == 2
    && +[TVSDevice runningAnInternalBuild](&OBJC_CLASS___TVSDevice, "runningAnInternalBuild"))
  {
    double v9 = (const __CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"[SE:%@]",  *(void *)(a1 + 32)));
  }

  else
  {
    double v9 = &stru_1003E2910;
  }

  __int128 v35 = v5;
  if ([*(id *)(a1 + 40) isEqualToString:PBSOSUpdateServiceErrorDomain])
  {
    switch((unint64_t)[*(id *)(a1 + 48) integerValue])
    {
      case 2uLL:
        id v10 = v5;
        id v11 = @"Update check failed.";
        id v12 = @"Cannot check for updates. Configuration error.";
        goto LABEL_25;
      case 4uLL:
        id v10 = v5;
        id v11 = @"Update check failed.";
        id v12 = @"Cannot check for updates right now. Try again later.";
        goto LABEL_25;
      case 5uLL:
      case 6uLL:
      case 7uLL:
        id v10 = v5;
        id v11 = @"Update check failed.";
        id v12 = @"Cannot check for updates because a previous operation is still in progress.";
        goto LABEL_25;
      case 8uLL:
        id v11 = v3;
        id v10 = v5;
        id v12 = @"The download stalled unexpectedly.";
        goto LABEL_25;
      case 9uLL:
        id v11 = v3;
        uint64_t v16 = *(void *)(a1 + 56);
        id v17 = @"There was insufficient space to download or apply the update.";
        goto LABEL_23;
      case 0xAuLL:
        id v11 = v3;
        id v10 = v5;
        id v12 = @"The asset file was not found.";
        goto LABEL_25;
      case 0xBuLL:
        id v11 = v3;
        uint64_t v16 = *(void *)(a1 + 56);
        id v17 = @"The preparation phase returned an error. Check the update log for more details. ";
        goto LABEL_23;
      case 0xCuLL:
        id v11 = v3;
        uint64_t v16 = *(void *)(a1 + 56);
        id v17 = @"The application phase returned an error. Check the update log for more details. ";
LABEL_23:
        id v12 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ %@",  v17,  v16));
        id v15 = v7;
        goto LABEL_24;
      case 0xDuLL:
        id v10 = v5;
        id v11 = @"Update check failed.";
        id v12 = @"Cannot check for update because model information is unavailable.";
        goto LABEL_25;
      default:
        id v11 = v3;
        id v12 = (__CFString *)*(id *)(a1 + 56);
        id v10 = 0LL;
        goto LABEL_25;
    }
  }

  if (![*(id *)(a1 + 40) isEqualToString:ASErrorDomain])
  {
    if ([*(id *)(a1 + 40) isEqualToString:kCFErrorDomainMobileSoftwareUpdate])
    {
      id v11 = v3;
      id v12 = (__CFString *)*(id *)(a1 + 56);
      id v13 = @"OSUpdateFailedNeedToRestartSubtext";
      goto LABEL_13;
    }

    if (![*(id *)(a1 + 40) isEqualToString:kCFErrorDomainPersonalization])
    {
      id v12 = 0LL;
      id v10 = 0LL;
      id v11 = 0LL;
      goto LABEL_25;
    }
  }

  id v11 = v3;
  id v12 = (__CFString *)*(id *)(a1 + 56);
  id v13 = @"OSUpdateFailedServerProblemSubtext";
LABEL_13:
  id v14 = sub_1001C307C(v13, 0LL);
  id v15 = (id)objc_claimAutoreleasedReturnValue(v14);
LABEL_24:
  id v10 = v15;
LABEL_25:
  id v34 = v7;
  if (+[TVSDevice runningAnInternalBuild](&OBJC_CLASS___TVSDevice, "runningAnInternalBuild"))
  {
    id v18 = v11;
    uint64_t v19 = v12;

    id v10 = v19;
  }

  else
  {
    id v18 = 0LL;
  }

  if (!-[__CFString length](v18, "length"))
  {
    int v20 = v3;

    id v18 = v20;
  }

  id v21 = v11;
  id v22 = v3;
  if (![v10 length])
  {
    id v23 = sub_1001C307C(@"OSUpdateFailedSubtext", 0LL);
    uint64_t v24 = objc_claimAutoreleasedReturnValue(v23);

    id v10 = (id)v24;
  }

  id v25 = (__CFString *)v9;
  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@\n\n%@ %@",  v18,  v10,  v9));
  v37[0] = kCFUserNotificationAlertHeaderKey;
  id v27 = sub_1001C307C(@"OSUpdateConfirmTitle", 0LL);
  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
  v38[0] = v28;
  v38[1] = v26;
  v37[1] = kCFUserNotificationAlertMessageKey;
  v37[2] = kCFUserNotificationDefaultButtonTitleKey;
  id v29 = sub_1001C307C(@"ButtonOK", 0LL);
  __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
  void v38[2] = v30;
  uint64_t v31 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v38,  v37,  3LL));

  SInt32 error = 0;
  __int128 v32 = CFUserNotificationCreate(0LL, 300.0, 1uLL, &error, v31);
  if (v32)
  {
    CFOptionFlags v33 = v32;
    CFUserNotificationReceiveResponse(v32, 300.0, 0LL);
  }
}

void sub_10018F6E0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32)) {
    uint64_t v1 = @"OSUpdateRestoreNoFullReplacementText";
  }
  else {
    uint64_t v1 = @"OSUpdateNoUpdatesText";
  }
  id v2 = sub_1001C307C(v1, 0LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v12[0] = kCFUserNotificationAlertHeaderKey;
  id v4 = sub_1001C307C(@"OSUpdateConfirmTitle", 0LL);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v13[0] = v5;
  v13[1] = v3;
  v12[1] = kCFUserNotificationAlertMessageKey;
  v12[2] = kCFUserNotificationDefaultButtonTitleKey;
  id v6 = sub_1001C307C(@"ButtonOK", 0LL);
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  void v13[2] = v7;
  uint64_t v8 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v12,  3LL));

  SInt32 error = 0;
  double v9 = CFUserNotificationCreate(0LL, 60.0, 1uLL, &error, v8);
  if (v9)
  {
    id v10 = v9;
    CFUserNotificationReceiveResponse(v9, 60.0, 0LL);
  }
}

void sub_10018F8E0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  [v2 stopAllActivityForOSUpdate];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if ([*(id *)(a1 + 32) isPresenting])
    {
      id v4 = sub_1000836CC();
      unsigned int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT)) {
        sub_1002898DC(v5);
      }
    }

    [WeakRetained _presentWithCompletion:0];
  }
}

PBContentPresentingContainmentViewController *sub_10018FA74(uint64_t a1)
{
  if (+[PBOSUpdateSwitch performsBackgroundApply](&OBJC_CLASS___PBOSUpdateSwitch, "performsBackgroundApply")) {
    id v2 = (objc_class *)&OBJC_CLASS___PBOSUpdateVerifyingViewController;
  }
  else {
    id v2 = (objc_class *)&OBJC_CLASS___TVSUIOSUpdateViewController;
  }
  id v3 = objc_alloc_init(v2);
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = *(void **)(v4 + 80);
  *(void *)(v4 + 80) = v3;

  return  -[PBContentPresentingContainmentViewController initWithChildViewController:allowsInteraction:expectsEventForwarding:]( objc_alloc(&OBJC_CLASS___PBContentPresentingContainmentViewController),  "initWithChildViewController:allowsInteraction:expectsEventForwarding:",  *(void *)(*(void *)(a1 + 32) + 80LL),  1LL,  0LL);
}

void sub_10018FBDC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10018FC00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)*((void *)WeakRetained + 10);
    *((void *)WeakRetained + 10) = 0LL;
  }
}

void sub_10018FF98(id a1)
{
}

void sub_100190494( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001904AC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001904BC(uint64_t a1)
{
}

id sub_1001904D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) appendFormat:@"%@: %@ ", a2, a3];
}

void sub_100191C4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tvs_numberForKey:", PBSOSUpdateServiceKeyProgressAmount));
    uint64_t v4 = (void *)WeakRetained[10];
    [v3 floatValue];
    objc_msgSend(v4, "setProgressPercent:");
  }
}

void sub_100191F10(uint64_t a1)
{
  unsigned __int8 v2 = objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  PBSOSUpdateServiceKeyDidSucceed,  0);
  unsigned int v3 = objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  PBSOSUpdateServiceKeyIsAutoCheck,  0);
  unsigned int v4 = objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  PBSOSUpdateServiceKeyIsManagedAction,  0);
  if ((v2 & 1) != 0)
  {
    if (!+[PBOSUpdateSwitch performsBackgroundApply](&OBJC_CLASS___PBOSUpdateSwitch, "performsBackgroundApply")) {
      return;
    }
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tvs_numberForKey:", PBSOSUpdateServiceKeyTriggerAction));
    id v6 = [v5 unsignedLongLongValue];
    if ((objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  PBSOSUpdateServiceKeyIsRestore,  0) & 1) != 0 || (v6 != (id)8 ? (BOOL v7 = v6 == (id)2) : (BOOL v7 = 1), v7))
    {
      __int128 v54 = 0u;
      memset(v55, 0, sizeof(v55));
      __int128 v52 = 0u;
      __int128 v53 = 0u;
      __int128 v50 = 0u;
      __int128 v51 = 0u;
      __int128 v48 = 0u;
      __int128 v49 = 0u;
      __int128 v46 = 0u;
      __int128 v47 = 0u;
      __int128 v44 = 0u;
      __int128 v45 = 0u;
      __int128 v42 = 0u;
      __int128 v43 = 0u;
      __int128 v41 = 0u;
      id v8 = sub_1000836CC();
      double v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v10 = 3LL;
      }
      else {
        uint64_t v10 = 2LL;
      }
      LOWORD(v39) = 0;
      _os_log_send_and_compose_impl( v10,  0LL,  &v41,  250LL,  &_mh_execute_header,  v9,  0LL,  "Rebooting to complete update...",  &v39,  2);
      id v12 = v11;

      id v13 = sub_1000836CC();
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      _os_log_message_persist_impl(v12, 0LL, v14);

      if (v12 != &v41) {
        free(v12);
      }
      id v15 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
      uint64_t v16 = v15;
      if (v4) {
        id v17 = @"osMDMUpdate";
      }
      else {
        id v17 = @"autoCheck";
      }
      [v15 rebootRequestedByClient:v17];
    }

    else
    {
      __int128 v54 = 0u;
      memset(v55, 0, sizeof(v55));
      __int128 v52 = 0u;
      __int128 v53 = 0u;
      __int128 v50 = 0u;
      __int128 v51 = 0u;
      __int128 v48 = 0u;
      __int128 v49 = 0u;
      __int128 v46 = 0u;
      __int128 v47 = 0u;
      __int128 v44 = 0u;
      __int128 v45 = 0u;
      __int128 v42 = 0u;
      __int128 v43 = 0u;
      __int128 v41 = 0u;
      id v31 = sub_1000836CC();
      __int128 v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v34 = 3LL;
      }
      else {
        uint64_t v34 = 2LL;
      }
      int v39 = 134217984;
      id v40 = v6;
      _os_log_send_and_compose_impl( v34,  0LL,  &v41,  250LL,  &_mh_execute_header,  v32,  0LL,  "Apply complete but not rebooting to install (trigger:%ld).",  &v39);
      __int128 v36 = v35;

      id v37 = sub_1000836CC();
      __int128 v38 = (void *)objc_claimAutoreleasedReturnValue(v37);
      _os_log_message_persist_impl(v36, 0LL, v38);

      if (v36 != &v41) {
        free(v36);
      }
      [*(id *)(a1 + 40) _dismiss];
    }
  }

  else
  {
    __int128 v54 = 0u;
    memset(v55, 0, sizeof(v55));
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v41 = 0u;
    id v18 = sub_1000836CC();
    uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v20 = 3LL;
    }
    else {
      uint64_t v20 = 2LL;
    }
    LOWORD(v39) = 0;
    _os_log_send_and_compose_impl( v20,  0LL,  &v41,  250LL,  &_mh_execute_header,  v19,  0LL,  "Clearing obliterate flag at apply fail.",  &v39,  2);
    id v22 = v21;

    id v23 = sub_1000836CC();
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
    _os_log_message_persist_impl(v22, 0LL, v24);

    if (v22 != &v41) {
      free(v22);
    }
    id v25 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
    objc_msgSend(v25, "setPbs_shouldObliterateOnLaunch:", 0);

    +[TVSPreferences synchronizeAllDomains](&OBJC_CLASS___TVSPreferences, "synchronizeAllDomains");
    [*(id *)(a1 + 40) _dismiss];
    +[PBSSystemStatus _setUpdatingOS:](&OBJC_CLASS___PBSSystemStatus, "_setUpdatingOS:", 0LL);
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
    [v26 resumeActivityAfterOSUpdate];

    notify_post("com.apple.PineBoard.osupdate.stop");
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tvs_numberForKey:", PBSOSUpdateServiceKeyDidFailErrorCode));
    uint64_t v27 = PBSOSUpdateServiceErrorDomain;
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tvs_stringForKey:", PBSOSUpdateServiceErrorDomain));
    if (((v3 | v4) & 1) == 0
      && ([v5 integerValue] != (id)3
       || ([v28 isEqualToString:v27] & 1) == 0))
    {
      id v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tvs_stringForKey:", PBSOSUpdateServiceKeyDidFailErrorString));
      __int128 v30 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(a1 + 32),  "tvs_numberForKey:",  PBSOSUpdateServiceKeyDidFailUnderlyingErrorCode));
      [*(id *)(a1 + 40) _showOSUpdateError:v5 inDomain:v28 description:v29 underlyingError:v30];
    }
  }
}

__CFString *sub_100193800()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](&OBJC_CLASS___UIApplication, "sharedApplication"));
  id v1 = [v0 userInterfaceLayoutDirection];

  unsigned __int8 v2 = @"rectangle.rightthird.inset.filled";
  if (v1 == (id)1) {
    unsigned __int8 v2 = @"rectangle.leftthird.inset.filled";
  }
  return v2;
}

void sub_100193A9C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  unsigned __int8 v2 = (void *)qword_100471218;
  qword_100471218 = (uint64_t)v1;
}

id sub_100193BB4(uint64_t a1)
{
  id v2 = sub_100083D20();
  unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting up initial screen sharing check.",  v5,  2u);
  }

  return [*(id *)(a1 + 32) _updateHUDStateForSessionID:*(void *)(*(void *)(a1 + 32) + 32)];
}

void *sub_100193D38(void *result)
{
  if (*(_DWORD *)(result[4] + 8LL) != -1)
  {
    id v1 = result;
    id v2 = sub_100083D20();
    unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unsigned int v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Paired devices changed.", v4, 2u);
    }

    return [(id)v1[4] _pairedDevicesChanged];
  }

  return result;
}

id sub_100194448(uint64_t a1)
{
  id v2 = sub_100083D20();
  unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Remote viewing session will be allowed.",  v5,  2u);
  }

  return [*(id *)(a1 + 32) _delayedScreenSharingBulletinRefresh];
}

void sub_1001944B8(uint64_t a1)
{
  id v1 = sub_100083D20();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v3 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Remote viewing session will be cancelled.",  v3,  2u);
  }
}

void sub_100194904(uint64_t a1, int a2)
{
  if (a2) {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 24LL), *(id *)(a1 + 40));
  }
}

id sub_1001949A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateHUDStateForSessionID:*(void *)(a1 + 40)];
}

void sub_100194D78(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  [*(id *)(a1 + 32) invalidate];
  if (a2)
  {
    id v6 = sub_100083D20();
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    if (!os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEFAULT))
    {
LABEL_6:

      goto LABEL_7;
    }

    int v15 = 136315138;
    uint64_t v16 = "-[PBScreenSharingObserver _pairedDevicesChanged]_block_invoke";
    id v8 = "%s External screen peer still paired. Ignoring.";
    goto LABEL_4;
  }

  if (!v5)
  {
    id v14 = sub_100083D20();
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(v14);
    if (!os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_6;
    }
    int v15 = 136315138;
    uint64_t v16 = "-[PBScreenSharingObserver _pairedDevicesChanged]_block_invoke";
    id v8 = "%s No error.  No peer.  Ignoring.";
LABEL_4:
    double v9 = (os_log_s *)v7;
    uint32_t v10 = 12;
LABEL_5:
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v15, v10);
    goto LABEL_6;
  }

  id v11 = [v5 code];
  id v12 = sub_100083D20();
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(v12);
  BOOL v13 = os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEFAULT);
  if (v11 != (id)-25300LL)
  {
    if (!v13) {
      goto LABEL_6;
    }
    int v15 = 136315650;
    uint64_t v16 = "-[PBScreenSharingObserver _pairedDevicesChanged]_block_invoke";
    __int16 v17 = 2112;
    id v18 = v5;
    __int16 v19 = 2048;
    id v20 = [v5 code];
    id v8 = "%s Unrecognized error occurred %@ (%ld).";
    double v9 = (os_log_s *)v7;
    uint32_t v10 = 32;
    goto LABEL_5;
  }

  if (v13)
  {
    int v15 = 136315138;
    uint64_t v16 = "-[PBScreenSharingObserver _pairedDevicesChanged]_block_invoke";
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v7,  OS_LOG_TYPE_DEFAULT,  "%s Mirroring peer's pairing was deleted.  Disabling mirroring.",  (uint8_t *)&v15,  0xCu);
  }

  [*(id *)(a1 + 40) _terminateScreenSharing];
LABEL_7:
}

id sub_100195390(id a1, id a2)
{
  return (id)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  a2));
}

id sub_100195624(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 8LL);
}

uint64_t sub_100195640(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 32) + 16LL);
}

void sub_100196380(id a1)
{
  id v1 = -[PBCriticalRemoteBatteryAlertManager _init]( objc_alloc(&OBJC_CLASS___PBCriticalRemoteBatteryAlertManager),  "_init");
  id v2 = (void *)qword_100471230;
  qword_100471230 = (uint64_t)v1;
}

void sub_1001966E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

id sub_100196708()
{
  if (qword_100471248 != -1) {
    dispatch_once(&qword_100471248, &stru_1003DAC58);
  }
  return (id)qword_100471240;
}

uint64_t sub_10019674C(uint64_t a1, int a2)
{
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBCriticalAlertManager sharedInstance](&OBJC_CLASS___PBCriticalAlertManager, "sharedInstance"));
  [v4 dismissAlertWithContext:*(void *)(a1 + 32)];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setCurrentAlertContext:0];

  id v6 = sub_100196708();
  BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v9[0] = 67109120;
    v9[1] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Critical remote battery alert has been dismissed. Calling completion. allowSleep=%{BOOL}d",  (uint8_t *)v9,  8u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001968DC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard", "CriticalRemoteBatteryAlertManager");
  id v2 = (void *)qword_100471240;
  qword_100471240 = (uint64_t)v1;
}

void sub_100196BC8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100196BE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleProfilePictureStoreUpdate];
}

id sub_100196DA4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_queue_invalidate");
}

void sub_100196F14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend( WeakRetained,  "_queue_startObservingUserWithIdentifier:completionHandler:",  *(void *)(a1 + 32),  *(void *)(a1 + 40));
}

void sub_100197000(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_queue_resumeObservingUsersWithIdentifiers:", *(void *)(a1 + 32));
}

void sub_1001970EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_queue_stopObservingUserWithIdentifier:", *(void *)(a1 + 32));
}

void sub_1001971F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend( WeakRetained,  "_queue_startObservingUserWithAltDSID:completionHandler:",  *(void *)(a1 + 32),  *(void *)(a1 + 40));
}

void sub_1001972E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_queue_resumeObservingUsersWithAltDSIDs:", *(void *)(a1 + 32));
}

void sub_1001973D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_queue_stopObservingUserWithAltDSID:", *(void *)(a1 + 32));
}

void sub_10019762C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1[6])
  {
    if (v5)
    {
      BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v5 imageData]);
      if (v7)
      {
        [v5 cropRect];
        id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGRect:](&OBJC_CLASS___NSValue, "valueWithCGRect:"));
      }

      else
      {
        id v8 = 0LL;
      }
    }

    else
    {
      id v8 = 0LL;
      BOOL v7 = 0LL;
    }

    id v9 = sub_1000846F8();
    uint32_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = a1[4];
      uint64_t v12 = a1[5];
      int v13 = 134218754;
      uint64_t v14 = v11;
      __int16 v15 = 2114;
      uint64_t v16 = v12;
      __int16 v17 = 2048;
      id v18 = v7;
      __int16 v19 = 2048;
      id v20 = [v7 length];
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Client(%p): Returning initial response for user. userIdentifier=%{public}@, imageData=%p, dataLength=%lu",  (uint8_t *)&v13,  0x2Au);
    }

    (*(void (**)(void))(a1[6] + 16LL))();
  }
}

BOOL sub_1001979E8(id a1, PBUserProfilePictureSource *a2, id a3)
{
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(-[PBUserProfilePictureSource altDSID](a2, "altDSID", a3));
  BOOL v4 = v3 != 0LL;

  return v4;
}

id sub_100197A1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = *(void **)(a1 + 32);
  BOOL v4 = (void *)(a1 + 32);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "_queue_profileIdentityForIdentifier:", v3));
  if (v6)
  {
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue( +[PBUserProfilePictureSource sourceForProfileIdentity:userIdentifier:]( &OBJC_CLASS___PBUserProfilePictureSource,  "sourceForProfileIdentity:userIdentifier:",  v6,  v3));
  }

  else
  {
    id v8 = sub_1000846F8();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_10028A110(v4, (uint64_t)v3, v9);
    }

    BOOL v7 = 0LL;
  }

  return v7;
}

void sub_100197CA8(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1[6])
  {
    if (v5)
    {
      BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v5 imageData]);
      if (v7)
      {
        [v5 cropRect];
        id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGRect:](&OBJC_CLASS___NSValue, "valueWithCGRect:"));
      }

      else
      {
        id v8 = 0LL;
      }
    }

    else
    {
      id v8 = 0LL;
      BOOL v7 = 0LL;
    }

    id v9 = sub_1000846F8();
    uint32_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = a1[4];
      uint64_t v12 = a1[5];
      int v13 = 134219010;
      uint64_t v14 = v11;
      __int16 v15 = 2160;
      uint64_t v16 = 1752392040LL;
      __int16 v17 = 2112;
      uint64_t v18 = v12;
      __int16 v19 = 2048;
      id v20 = v7;
      __int16 v21 = 2048;
      id v22 = [v7 length];
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Client(%p): Returning initial response for altDSID. altDSID=%{mask.hash}@, imageData=%p, dataLength=%lu",  (uint8_t *)&v13,  0x34u);
    }

    (*(void (**)(void))(a1[6] + 16LL))();
  }
}

BOOL sub_100198054(id a1, PBUserProfilePictureSource *a2, id a3)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[PBUserProfilePictureSource profileIdentity](a2, "profileIdentity", a3));
  BOOL v4 = v3 != 0LL;

  return v4;
}

PBUserProfilePictureSource *__cdecl sub_100198088(id a1, NSString *a2)
{
  return (PBUserProfilePictureSource *)(id)objc_claimAutoreleasedReturnValue( +[PBUserProfilePictureSource sourceForAltDSID:]( &OBJC_CLASS___PBUserProfilePictureSource,  "sourceForAltDSID:",  a2));
}

void sub_1001981F4(_Unwind_Exception *a1)
{
}

void sub_100198210(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000846F8();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id WeakRetained = v8;
  if (v5)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
      sub_10028A2C8(a1, (uint64_t)v5, WeakRetained);
    }

    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 56));
    -[os_log_s _handleProfilePictureResponse:forSource:]( WeakRetained,  "_handleProfilePictureResponse:forSource:",  v5,  *(void *)(a1 + 40));
  }

  else if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    sub_10028A244(a1);
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

void sub_1001984C4(_Unwind_Exception *a1)
{
}

void sub_1001984F8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained _notifyDelegateWithSource:*(void *)(a1 + 32) response:v5];
  }

  else
  {
    id v8 = sub_1000846F8();
    id WeakRetained = (id)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled((os_log_t)WeakRetained, OS_LOG_TYPE_ERROR)) {
      sub_10028A35C(a1);
    }
  }
}

BOOL sub_100198894(id a1, PBUserProfilePictureSource *a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSString);
  char isKindOfClass = objc_opt_isKindOfClass(v3, v4);

  return isKindOfClass & 1;
}

void sub_100198CE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
}

void sub_100198D1C(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = sub_1000846F8();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 context]);
    *(_DWORD *)__int128 buf = 134218498;
    int v13 = WeakRetained;
    __int16 v14 = 2048;
    id v15 = v4;
    __int16 v16 = 2114;
    __int16 v17 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Client(%p): Changes operation has finished. operation=%p, context=%{public}@",  buf,  0x20u);
  }

  if (WeakRetained && v4)
  {
    id v8 = (dispatch_queue_s *)WeakRetained[1];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    _DWORD v9[2] = sub_100198E8C;
    _OWORD v9[3] = &unk_1003D0418;
    objc_copyWeak(&v11, v2);
    id v10 = v4;
    dispatch_async(v8, v9);

    objc_destroyWeak(&v11);
  }
}

void sub_100198E8C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) responseBySource]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) context]);
  objc_msgSend(WeakRetained, "_queue_handleChangesOperationCompletionWithResponses:context:", v3, v4);
}

void sub_100199038(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v6 status];
  id v8 = sub_1000846F8();
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    int v12 = 134218498;
    uint64_t v13 = v10;
    __int16 v14 = 2114;
    uint64_t v15 = v11;
    __int16 v16 = 2112;
    id v17 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Client(%p): Processing profile picture response. context=%{public}@, response=%@",  (uint8_t *)&v12,  0x20u);
  }

  if (!v7)
  {
    objc_msgSend(*(id *)(a1 + 32), "_queue_updateCacheTagDictionaryWithProfilePictureResponse:forSource:", v6, v5);
    [*(id *)(a1 + 32) _notifyDelegateWithSource:v5 response:v6];
  }
}

void sub_1001996E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend( WeakRetained,  "_queue_updateCacheTagDictionaryWithProfilePictureResponse:forSource:",  *(void *)(a1 + 32),  *(void *)(a1 + 40));
}

void sub_1001997A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_queue_handleProfilePictureStoreUpdate");
}

void sub_1001998C0(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_100199B68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100199B88(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_100199C28;
  _OWORD v4[3] = &unk_1003D0A00;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v5);
}

void sub_100199C14(_Unwind_Exception *a1)
{
}

void sub_100199C28(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = v3;
    WeakRetained[5] = [v5 result];
    if ([v5 result] == (id)1) {
      [WeakRetained _addRestrictionDialogTransaction];
    }
    [WeakRetained satisfyMilestone:@"SignatureVerificationDialog"];
  }
}

void sub_100199D84(_Unwind_Exception *a1)
{
}

void sub_100199DA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_100199E4C;
  _OWORD v4[3] = &unk_1003DAE58;
  objc_copyWeak(&v5, (id *)(a1 + 40));
  void v4[4] = *(void *)(a1 + 32);
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v5);
}

void sub_100199E38(_Unwind_Exception *a1)
{
}

void sub_100199E4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = v3;
    uint64_t v6 = objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [v5 restrictionValue]));
    id v7 = (void *)WeakRetained[3];
    WeakRetained[3] = v6;

    if ([v5 restrictionValue])
    {
      [WeakRetained failWithReason:@"Denied"];
    }

    else
    {
      *(_BYTE *)(*(void *)(a1 + 32) + 8) = [v5 passwordWasRequested];
      [WeakRetained _addCRDRestrictionDialog];
    }

    [WeakRetained satisfyMilestone:@"RestrictionDialog"];
  }
}

void sub_100199FF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10019A014(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_10019A0B4;
  _OWORD v4[3] = &unk_1003D0A00;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v5);
}

void sub_10019A0A0(_Unwind_Exception *a1)
{
}

void sub_10019A0B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 legacyGameValue]);
    id v6 = [v5 copy];
    id v7 = (void *)WeakRetained[4];
    WeakRetained[4] = v6;

    [WeakRetained satisfyMilestone:@"LegacyGameDialog"];
  }
}

void sub_10019A224( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10019A244(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_10019A2E4;
  _OWORD v4[3] = &unk_1003D0A00;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v5);
}

void sub_10019A2D0(_Unwind_Exception *a1)
{
}

void sub_10019A2E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = v3;
    else {
      id v6 = &off_1003FDF20;
    }
    objc_storeStrong(WeakRetained + 3, v6);
    else {
      [WeakRetained _addLegacyGameDialogTransaction];
    }
    [WeakRetained satisfyMilestone:@"ConferenceRoomDisplayRestrictedDialog"];
  }
}

void sub_10019A828(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:PBSPreferencesServiceIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_10019AA44(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSPreferencesServiceConfigureConnection();
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_10019AAD0;
  _OWORD v4[3] = &unk_1003D2DC8;
  id v5 = *(id *)(a1 + 40);
  [v3 setInvalidationHandler:v4];
}

void sub_10019AAD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000835DC();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v7 = 138543618;
    uint64_t v8 = v6;
    __int16 v9 = 2112;
    id v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Connection invalidated {client=%{public}@, connection=%@}",  (uint8_t *)&v7,  0x16u);
  }
}

id sub_10019AD80(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_10019AE18(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100471250;
  qword_100471250 = (uint64_t)v1;
}

void sub_10019B0B8(_Unwind_Exception *a1)
{
}

void sub_10019B110(_Unwind_Exception *a1)
{
}

void sub_10019B168(_Unwind_Exception *a1)
{
}

void sub_10019B1C0(_Unwind_Exception *a1)
{
}

id sub_10019BAFC(uint64_t a1)
{
  uint64_t v2 = (unsigned __int8 *)(*(void *)(a1 + 32) + 24LL);
  do
    unsigned __int8 v3 = __ldaxr(v2);
  while (__stlxr(1u, v2));
  id v4 = sub_100083474();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if ((v3 & 1) != 0)
  {
    if (v6)
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Busy, trying _performMetadataUpdate again in 0.5s",  v8,  2u);
    }

    return [*(id *)(a1 + 32) performSelector:*(void *)(a1 + 40) withObject:0 afterDelay:0.5];
  }

  else
  {
    if (v6)
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Scheduling _performMetadataUpdate", buf, 2u);
    }

    return [*(id *)(a1 + 32) _performMetadataUpdate];
  }

void sub_10019BE18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10019BE44(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  unsigned __int8 v3 = _NSConcreteStackBlock;
  uint64_t v4 = 3221225472LL;
  id v5 = sub_10019BEF0;
  BOOL v6 = &unk_1003DAED0;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  int v8 = *(_DWORD *)(a1 + 48);
  [v2 registerBlockObserver:&v3];
  objc_msgSend(*(id *)(a1 + 32), "begin", v3, v4, v5, v6);
  objc_destroyWeak(&v7);
}

void sub_10019BED8(_Unwind_Exception *a1)
{
}

void sub_10019BEF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_10019BF98;
  _OWORD v4[3] = &unk_1003DAEA8;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  int v6 = *(_DWORD *)(a1 + 40);
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v5);
}

void sub_10019BF84(_Unwind_Exception *a1)
{
}

void sub_10019BF98(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100083474();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = (void *)objc_claimAutoreleasedReturnValue([v3 error]);
    *(_DWORD *)__int128 buf = 136315650;
    __int16 v21 = "-[PBMediaRemoteObserver _performMetadataUpdate]_block_invoke_3";
    __int16 v22 = 2048;
    id v23 = v3;
    __int16 v24 = 2112;
    id v25 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%s got PBMRMetadataUpdateTransaction(%p) result; SInt32 error = %@",
      buf,
      0x20u);
  }

  id v7 = v3;
  int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 nowPlayingInfo]);
  unsigned int v9 = [v7 playbackState];
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 nowPlayingPlayerPath]);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_10019C148;
  v14[3] = &unk_1003D9058;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  int v11 = *(_DWORD *)(a1 + 40);
  unsigned int v18 = v9;
  int v19 = v11;
  id v15 = v8;
  id v16 = v10;
  id v12 = v10;
  id v13 = v8;
  dispatch_async(&_dispatch_main_q, v14);

  objc_destroyWeak(&v17);
}

void sub_10019C148(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = (void *)*((void *)WeakRetained + 15);
    *((void *)WeakRetained + 15) = 0LL;

    v3[24] = 0;
    [v3 _updateWithNowPlayingInfoDictionary:*(void *)(a1 + 32) playbackState:*(unsigned int *)(a1 + 56) nowPlayingPID:*(unsigned int *)(a1 + 60) nowPlayingPlayerPath:*(void *)(a1 + 40)];
  }
}

void sub_10019C308( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

id sub_10019C31C(uint64_t a1)
{
  return [*(id *)(a1 + 32) interrupt];
}

void sub_10019C334(uint64_t a1)
{
  uint64_t v2 = -[PBMRSupportedPlaybackRatesTransaction initWithParentTransaction:]( objc_alloc(&OBJC_CLASS___PBMRSupportedPlaybackRatesTransaction),  "initWithParentTransaction:",  *(void *)(a1 + 32));
  id v3 = *(void **)(a1 + 32);
  id v5 = _NSConcreteStackBlock;
  uint64_t v6 = 3221225472LL;
  id v7 = sub_10019C404;
  int v8 = &unk_1003DAF48;
  id v4 = v2;
  unsigned int v9 = v4;
  objc_copyWeak(&v10, (id *)(a1 + 40));
  [v3 registerBlockObserver:&v5];
  objc_msgSend(*(id *)(a1 + 32), "begin", v5, v6, v7, v8);
  objc_destroyWeak(&v10);
}

void sub_10019C3EC(_Unwind_Exception *a1)
{
}

void sub_10019C404(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_10019C4B8;
  _OWORD v4[3] = &unk_1003DAF20;
  id v5 = *(id *)(a1 + 32);
  objc_copyWeak(&v6, (id *)(a1 + 40));
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v6);
}

void sub_10019C4A4(_Unwind_Exception *a1)
{
}

void sub_10019C4B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 isInterrupted] & 1) == 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) supportedPlaybackRateList]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 error]);

    if (v5)
    {
      id v6 = sub_100083474();
      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
        sub_10028A850((id *)(a1 + 32), v7);
      }
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10019C5D4;
    block[3] = &unk_1003D0378;
    objc_copyWeak(&v12, (id *)(a1 + 40));
    id v10 = v3;
    id v11 = v4;
    id v8 = v4;
    dispatch_async(&_dispatch_main_q, block);

    objc_destroyWeak(&v12);
  }
}

void sub_10019C5D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = (void *)*((void *)WeakRetained + 17);
    if (v4 == *(void **)(a1 + 32))
    {
      *((void *)WeakRetained + 17) = 0LL;

      [v3 _updateSupportedPlaybackRates:*(void *)(a1 + 40)];
    }
  }
}

void sub_10019C78C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

id sub_10019C7A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) interrupt];
}

void sub_10019C7B8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = _NSConcreteStackBlock;
  uint64_t v4 = 3221225472LL;
  id v5 = sub_10019C870;
  id v6 = &unk_1003DAF48;
  id v7 = v2;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  [v7 registerBlockObserver:&v3];
  objc_msgSend(*(id *)(a1 + 32), "begin", v3, v4, v5, v6);
  objc_destroyWeak(&v8);
}

void sub_10019C858(_Unwind_Exception *a1)
{
}

void sub_10019C870(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_10019C924;
  _OWORD v4[3] = &unk_1003DAF20;
  id v5 = *(id *)(a1 + 32);
  objc_copyWeak(&v6, (id *)(a1 + 40));
  [v3 addTransactionDidCompleteBlock:v4];
  objc_destroyWeak(&v6);
}

void sub_10019C910(_Unwind_Exception *a1)
{
}

void sub_10019C924(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 isInterrupted] & 1) == 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pictureInPicturePlayerPath]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10019C9F0;
    block[3] = &unk_1003D0378;
    objc_copyWeak(&v9, (id *)(a1 + 40));
    id v7 = v3;
    id v8 = v4;
    id v5 = v4;
    dispatch_async(&_dispatch_main_q, block);

    objc_destroyWeak(&v9);
  }
}

void sub_10019C9F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = (void *)*((void *)WeakRetained + 16);
    if (v4 == *(void **)(a1 + 32))
    {
      *((void *)WeakRetained + 16) = 0LL;

      [v3 _updatePictureInPictureStateWithActivePlayerPath:*(void *)(a1 + 40)];
    }
  }
}

void sub_10019D53C(_Unwind_Exception *a1)
{
}

void sub_10019D630(_Unwind_Exception *a1)
{
}

void sub_10019DAA4(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  TVPMediaTypeAudio,  TVPMediaTypeAudioBook,  TVPMediaTypeITunesRadio,  TVPMediaTypeITunesU,  TVPMediaTypeMusic,  TVPMediaTypePodcast,  0LL));
  uint64_t v2 = (void *)qword_100471260;
  qword_100471260 = v1;
}

void sub_10019DCE8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100471270;
  qword_100471270 = (uint64_t)v1;
}

LABEL_56:
      if (v15 == (id)++v17)
      {
        id v15 = [obj countByEnumeratingWithState:&v98 objects:v104 count:16];
        if (!v15) {
          goto LABEL_58;
        }
        goto LABEL_31;
      }
    }
  }

  return v4 != 0;
}

id sub_10019E908(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "setVoiceOverEnabled:",  objc_msgSend(*(id *)(a1 + 32), "voiceOverEnabled") ^ 1);
}

id sub_10019E938(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "setZoomEnabled:",  objc_msgSend(*(id *)(a1 + 32), "zoomEnabled") ^ 1);
}

id sub_10019E968(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "setPreferSDHOverRegularSubtitles:",  objc_msgSend(*(id *)(a1 + 32), "preferSDHOverRegularSubtitles") ^ 1);
}

id sub_10019E998(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "setPreferVideoDescriptions:",  objc_msgSend(*(id *)(a1 + 32), "preferVideoDescriptions") ^ 1);
}

id sub_10019E9C8(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "setSwitchControlEnabled:",  objc_msgSend(*(id *)(a1 + 32), "switchControlEnabled") ^ 1);
}

id sub_10019E9F8(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "setHoverTextEnabled:",  objc_msgSend(*(id *)(a1 + 32), "hoverTextEnabled") ^ 1);
}

void sub_10019EA28(id a1, UIAlertAction *a2)
{
  BOOL v2 = _AXSPhotosensitiveMitigationEnabled(a1, a2) == 0;
  _AXSPhotosensitiveMitigationSetEnabled(v2);
}

id sub_10019EA48(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "setDisplayFilterColorAdjustmentsEnabled:",  objc_msgSend(*(id *)(a1 + 32), "displayFilterColorAdjustmentsEnabled") ^ 1);
}

id sub_10019EA78(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "setDisplayFilterLightSensitivityEnabled:",  objc_msgSend(*(id *)(a1 + 32), "displayFilterLightSensitivityEnabled") ^ 1);
}

id sub_10019EAA8(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "setDisplayFilterReduceWhitePointEnabled:",  objc_msgSend(*(id *)(a1 + 32), "displayFilterReduceWhitePointEnabled") ^ 1);
}

void sub_10019EDAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

id sub_10019EDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v5 = (id *)(a1 + 32);
  id v6 = a5;
  id WeakRetained = objc_loadWeakRetained(v5);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"Configuration"]);

  if ([v8 configurationMode] == (id)2) {
    uint64_t v9 = objc_claimAutoreleasedReturnValue([WeakRetained _handleSetSingleAppConfiguration:v8]);
  }
  else {
    uint64_t v9 = objc_claimAutoreleasedReturnValue([WeakRetained _handleSetDefaultConfiguration:v8]);
  }
  id v10 = (void *)v9;

  return v10;
}

id sub_10019EE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = (id *)(a1 + 40);
  id v7 = a5;
  id WeakRetained = objc_loadWeakRetained(v6);
  [*(id *)(a1 + 32) _cancelPendingUpdates];
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"Configuration"]);

  if ([v9 configurationMode] == (id)2) {
    uint64_t v10 = objc_claimAutoreleasedReturnValue([WeakRetained _handleSetSingleAppConfiguration:v9]);
  }
  else {
    uint64_t v10 = objc_claimAutoreleasedReturnValue([WeakRetained _handleSetDefaultConfiguration:v9]);
  }
  id v11 = (void *)v10;

  return v11;
}

NSString *__cdecl sub_10019EF38(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKeyedSubscript:](a5, "objectForKeyedSubscript:", @"Configuration", a4));
  if ([v5 configurationMode] == (id)2) {
    id v6 = @"Single App";
  }
  else {
    id v6 = @"Default";
  }
  id v7 = v6;

  return v7;
}

void sub_10019F0D0(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = *(void **)(a1 + 32);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472LL;
    id v4[2] = sub_10019F15C;
    _OWORD v4[3] = &unk_1003CFEB8;
    id v5 = v3;
    id v6 = *(id *)(a1 + 40);
    [v5 executeBlockAfterCurrentStateTransition:v4];
  }

void sub_10019F15C(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 32);
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v4 = @"Configuration";
  uint64_t v5 = v1;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));
  [v2 postEvent:@"Update Complete" withContext:0 userInfo:v3];
}

void sub_10019F2EC(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = *(void **)(a1 + 32);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472LL;
    id v4[2] = sub_10019F378;
    _OWORD v4[3] = &unk_1003CFEB8;
    id v5 = v3;
    id v6 = *(id *)(a1 + 40);
    [v5 executeBlockAfterCurrentStateTransition:v4];
  }

void sub_10019F378(uint64_t a1)
{
  BOOL v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  [v2 setObject:0 forKey:@"PBAXSavedKioskConfigurationOptionsKey"];

  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v6 = @"Configuration";
  uint64_t v7 = v3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v7,  &v6,  1LL));
  [v4 postEvent:@"Update Complete" withContext:0 userInfo:v5];
}

uint64_t sub_10019FDA0(uint64_t a1)
{
  uint64_t v2 = objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  @"VoiceOverShortcutEnabled",  0);
  objc_msgSend(*(id *)(a1 + 32), "tvs_BOOLForKey:defaultValue:", @"InvertColorsShortcutEnabled", 0);
  if (objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  @"ClosedCaptionsShortcutEnabled",  0)) {
    v2 |= 4uLL;
  }
  if (objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  @"AudioDescriptionsShortcutEnabled",  0)) {
    v2 |= 8uLL;
  }
  if (objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  @"SwitchControlShortcutEnabled",  0)) {
    v2 |= 0x20uLL;
  }
  if (objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  @"PhotosensitiveMitigationShortcutEnabled",  0)) {
    v2 |= 0x800uLL;
  }
  if (_os_feature_enabled_impl("Accessibility", "HoverText")
    && objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  @"HoverTextShortcutEnabled",  0))
  {
    v2 |= 0x400uLL;
  }

  if (objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  @"ColorAdjustmentsShortcutEnabled",  0)) {
    v2 |= 0x80uLL;
  }
  if (objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  @"LightSensitivityShortcutEnabled",  0)) {
    v2 |= 0x100uLL;
  }
  if (objc_msgSend( *(id *)(a1 + 32),  "tvs_BOOLForKey:defaultValue:",  @"ReduceWhitePointShortcutEnabled",  0)) {
    v2 |= 0x200uLL;
  }
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v2));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 valueForKeyPath:@"accessibilityMenuOptions"]);
  if (v4 && ([v4 isEqual:v5] & 1) == 0)
  {
    [v3 setValue:v4 forKeyPath:@"accessibilityMenuOptions"];
    uint64_t v6 = 1LL;
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  return v6;
}

uint64_t sub_10019FFD4(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"VoiceOverEnabled"]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForKeyPath:@"voiceOverEnabled"]);
  if (v3 && ([v3 isEqual:v4] & 1) == 0)
  {
    [v2 setValue:v3 forKeyPath:@"voiceOverEnabled"];
    uint64_t v5 = 1LL;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  return v5;
}

uint64_t sub_1001A007C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"ZoomEnabled"]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForKeyPath:@"zoomEnabled"]);
  if (v3 && ([v3 isEqual:v4] & 1) == 0)
  {
    [v2 setValue:v3 forKeyPath:@"zoomEnabled"];
    uint64_t v5 = 1LL;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  return v5;
}

uint64_t sub_1001A0124(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"ClosedCaptionsEnabled"]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForKeyPath:@"preferSDHOverRegularSubtitles"]);
  if (v3 && ([v3 isEqual:v4] & 1) == 0)
  {
    [v2 setValue:v3 forKeyPath:@"preferSDHOverRegularSubtitles"];
    uint64_t v5 = 1LL;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  return v5;
}

uint64_t sub_1001A01CC(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"AudioDescriptionsEnabled"]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForKeyPath:@"preferVideoDescriptions"]);
  if (v3 && ([v3 isEqual:v4] & 1) == 0)
  {
    [v2 setValue:v3 forKeyPath:@"preferVideoDescriptions"];
    uint64_t v5 = 1LL;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  return v5;
}

uint64_t sub_1001A0274(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"SwitchControlEnabled"]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForKeyPath:@"switchControlEnabled"]);
  if (v3 && ([v3 isEqual:v4] & 1) == 0)
  {
    [v2 setValue:v3 forKeyPath:@"switchControlEnabled"];
    uint64_t v5 = 1LL;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  return v5;
}

uint64_t sub_1001A031C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"ColorAdjustmentsDisabled"]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForKeyPath:@"displayFilterColorAdjustmentsEnabled"]);
  if (v3 && ([v3 isEqual:v4] & 1) == 0)
  {
    [v2 setValue:v3 forKeyPath:@"displayFilterColorAdjustmentsEnabled"];
    uint64_t v5 = 1LL;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  return v5;
}

uint64_t sub_1001A03C4(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"LightSensitivityEnabled"]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForKeyPath:@"displayFilterLightSensitivityEnabled"]);
  if (v3 && ([v3 isEqual:v4] & 1) == 0)
  {
    [v2 setValue:v3 forKeyPath:@"displayFilterLightSensitivityEnabled"];
    uint64_t v5 = 1LL;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  return v5;
}

uint64_t sub_1001A046C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"ReduceWhitePointEnabled"]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForKeyPath:@"displayFilterReduceWhitePointEnabled"]);
  if (v3 && ([v3 isEqual:v4] & 1) == 0)
  {
    [v2 setValue:v3 forKeyPath:@"displayFilterReduceWhitePointEnabled"];
    uint64_t v5 = 1LL;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  return v5;
}

void sub_1001A0748( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1001A0764(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = a2;
  uint64_t v7 = objc_retainBlock(v6);
  [v5 removeObject:v7];

  LODWORD(v5) = v6[2](v6);
  if ((_DWORD)v5) {
    *a4 = 1;
  }
}

void sub_1001A07CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _servicePendingUpdates];
}

void sub_1001A12F8(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 userProfiles]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 primaryUserProfileIdentifier]);
  id v23 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:v4]);

  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id obj = v3;
  id v25 = [obj countByEnumeratingWithState:&v28 objects:v35 count:16];
  if (v25)
  {
    uint64_t v24 = *(void *)v29;
    do
    {
      uint64_t v5 = 0LL;
      do
      {
        if (*(void *)v29 != v24) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)v5);
        uint64_t v7 = TVCSLanguageLog();
        id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)__int128 buf = 138543362;
          uint64_t v34 = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "Updating region for user %{public}@",  buf,  0xCu);
        }

        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([obj objectForKey:v6]);
        id v10 = (id)objc_claimAutoreleasedReturnValue([v9 preferredLanguages]);
        id v11 = (id)objc_claimAutoreleasedReturnValue([v9 preferredInputModes]);
        if (!v10)
        {
          uint64_t v12 = TVCSLanguageLog();
          id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)__int128 buf = 138543362;
            uint64_t v34 = v6;
            _os_log_error_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "User %{public}@ has no stored languages",  buf,  0xCu);
          }

          __int16 v14 = (void *)objc_claimAutoreleasedReturnValue([v23 preferredLanguages]);
          if ([v14 count])
          {
            id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 firstObject]);
            __int128 v32 = v15;
            id v10 = (id)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v32, 1LL));
          }

          else
          {
            id v10 = *(id *)(a1 + 32);
            id v15 = v11;
            id v11 = *(id *)(a1 + 40);
          }
        }

        id v16 = [[TVCSPreferredLanguagesManager alloc] initWithLanguages:v10 inputModes:v11 updateFromPreferences:0];
        id v17 = objc_alloc_init(&OBJC_CLASS___PBSUpdateUserProfileAttributes);
        unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v2 selectedUserProfileIdentifier]);
        unsigned int v19 = [v6 isEqual:v18];

        if (v19)
        {
          id v20 = *(id *)(a1 + 48);

          id v16 = v20;
        }

        else
        {
          [v16 setRegion:*(void *)(a1 + 56) updateFirstLanguage:0];
        }

        __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([v16 preferredLanguages]);
        [v17 setPreferredLanguages:v21];

        __int16 v22 = (void *)objc_claimAutoreleasedReturnValue([v16 preferredInputModeList]);
        [v17 setPreferredInputModes:v22];

        [v2 updateUserProfileWithIdentifier:v6 attributes:v17];
        uint64_t v5 = (char *)v5 + 1;
      }

      while (v25 != v5);
      id v25 = [obj countByEnumeratingWithState:&v28 objects:v35 count:16];
    }

    while (v25);
  }
}

void sub_1001A1688(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = BSDispatchQueueAssertMain();
  if (v4)
  {
    uint64_t v6 = TVCSLanguageLog(v5);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10028AC94((uint64_t)v4, v7);
    }
  }

  +[NSLocale setLocaleAfterRegionChange:](&OBJC_CLASS___NSLocale, "setLocaleAfterRegionChange:", *(void *)(a1 + 32));
  if (*(_BYTE *)(a1 + 56))
  {
    [*(id *)(a1 + 40) applyInputModesChanges];
    [*(id *)(a1 + 40) applyPreferredLanguagesChanges];
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

void sub_1001A19F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

uint64_t sub_1001A1A18(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001A1A28(uint64_t a1)
{
}

void sub_1001A1A40(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 selectedUserProfileIdentifier]);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
  uint64_t v9 = TVCSLanguageLog(v8);
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_INFO);
  if (v7)
  {
    if (v11)
    {
      *(_WORD *)__int16 v14 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "Updating selected user profile with new language list",  v14,  2u);
    }

    id v10 = (os_log_s *)objc_alloc_init(&OBJC_CLASS___PBSUpdateUserProfileAttributes);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredLanguages]);
    -[os_log_s setPreferredLanguages:](v10, "setPreferredLanguages:", v12);

    id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) preferredInputModeList]);
    -[os_log_s setPreferredInputModes:](v10, "setPreferredInputModes:", v13);

    [v3 updateUserProfileWithIdentifier:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) attributes:v10];
  }

  else if (v11)
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "No selected user profile – language change will apply to system only",  buf,  2u);
  }
}

void sub_1001A1B84(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = BSDispatchQueueAssertMain();
  if (v4)
  {
    uint64_t v6 = TVCSLanguageLog(v5);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10028ADBC(a1, (uint64_t)v4, v7);
    }
  }

  [*(id *)(a1 + 32) applyInputModesChanges];
  [*(id *)(a1 + 32) applyPreferredLanguagesChanges];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

id sub_1001A2124(uint64_t a1)
{
  return [*(id *)(a1 + 32) begin];
}

void sub_1001A213C(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_1001A21AC;
  void v3[3] = &unk_1003DB0C8;
  id v4 = *(id *)(a1 + 32);
  [a2 addTransactionDidCompleteBlock:v3];
}

id sub_1001A21AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_1001A21C4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale autoupdatingCurrentLocale](&OBJC_CLASS___NSLocale, "autoupdatingCurrentLocale"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 countryCode]);
  [v1 handleRegionChangeWithNewCountryCode:v3 reply:0];
}

void sub_1001A296C(_Unwind_Exception *a1)
{
}

id sub_1001A2B14(void *a1)
{
  if (a1)
  {
    id v1 = sub_100082E5C();
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

void sub_1001A2C7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 16LL);
  if ((v1 & 0x8000000000000000LL) == 0)
  {
    do
    {
      id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKey:v1]);
      if (v3)
      {
        id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v1));
        uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 stringValue]);

        id v6 = [*(id *)(a1 + 40) appendObject:v3 withName:v5 skipIfNil:0];
      }
    }

    while (v1-- > 0);
  }

void sub_1001A30A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_1001A30DC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a3 object]);
  id v6 = [v5 state];
  if (v6 == (id)3)
  {
    uint64_t v7 = *(void *)(a1[5] + 8LL);
    if (*(void *)(v7 + 24) < a2) {
      *(void *)(v7 + 24) = a2;
    }
  }

  uint64_t v8 = *(void *)(a1[6] + 8LL);
  if (*(void *)(v8 + 24) < a2) {
    *(void *)(v8 + 24) = a2;
  }
  uint64_t v9 = (void *)a1[4];
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v6));
  [v9 setObject:v10 forKey:a2];
}

uint64_t sub_1001A3184(unint64_t a1)
{
  if (a1 > 0x16) {
    return 0LL;
  }
  else {
    return (uint64_t)*(&off_1003DB160 + a1);
  }
}

id sub_1001A31A4(uint64_t a1, void *a2)
{
  return [a2 presentationElementFocusCoordinator:*(void *)(a1 + 32) didUpdateToActiveLayoutLevel:*(void *)(*(void *)(a1 + 32) + 8) fromLevel:*(void *)(a1 + 40)];
}

id sub_1001A32F4(void *a1)
{
  id v1 = a1;
  if ([v1 interfaceElementCategory] == (id)3)
  {
    uint64_t v2 = objc_opt_class(&OBJC_CLASS___UIViewController);
    id v3 = v1;
    id v4 = v3;
    if (v2)
    {
      if ((objc_opt_isKindOfClass(v3, v2) & 1) != 0) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 0LL;
      }
    }

    else
    {
      uint64_t v5 = 0LL;
    }

    id v7 = v5;

    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 viewIfLoaded]);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 window]);

    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 rootViewController]);
    uint64_t v11 = objc_opt_class(&OBJC_CLASS___PBPresentationElementViewController);
    id v12 = v10;
    id v13 = v12;
    if (v11)
    {
      if ((objc_opt_isKindOfClass(v12, v11) & 1) != 0) {
        __int16 v14 = v13;
      }
      else {
        __int16 v14 = 0LL;
      }
    }

    else
    {
      __int16 v14 = 0LL;
    }

    id v6 = v14;
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

void sub_1001A39BC(id a1, NSNotification *a2)
{
}

void sub_1001A39EC(id a1, NSNotification *a2)
{
}

id sub_1001A3A94(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___TVPAudioRoutingController);
  id v3 = (void *)qword_100471280;
  qword_100471280 = (uint64_t)v2;

  return [(id)qword_100471280 addObserver:*(void *)(a1 + 32) forKeyPath:@"volumeControlAvailable" options:0 context:&off_10046CEB0];
}

void sub_1001A3E68(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSiriManager sharedInstance](&OBJC_CLASS___PBSiriManager, "sharedInstance"));
  [v2 prepareSiriWithContext:*(void *)(a1 + 32)];

  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  [v3 activateSiriWithContext:*(void *)(a1 + 32)];

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  [v4 stopSiriWithContext:*(void *)(a1 + 32)];
}

void sub_1001A40F8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSiriManager sharedInstance](&OBJC_CLASS___PBSiriManager, "sharedInstance"));
  [v2 prepareSiriWithContext:*(void *)(a1 + 32)];

  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  [v3 startSiriWithContext:*(void *)(a1 + 32)];
}

void sub_1001A42DC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  [v2 stopSiriWithContext:*(void *)(a1 + 32)];
}

void sub_1001A4508(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKeyedSubscript:PBSMediaRemoteServiceDialogOptionPINKey]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*v2 objectForKeyedSubscript:PBSMediaRemoteServiceDialogOptionTitleKey]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*v2 objectForKeyedSubscript:PBSMediaRemoteServiceDialogOptionMessageKey]);
  uint64_t v6 = objc_claimAutoreleasedReturnValue([*v2 objectForKeyedSubscript:PBSMediaRemoteServiceDialogOptionTimeoutKey]);
  id v7 = (void *)v6;
  uint64_t v8 = &off_1003FEB60;
  if (v6) {
    uint64_t v8 = (_UNKNOWN **)v6;
  }
  uint64_t v9 = v8;

  id v10 = -[PBPinDisplayViewController initWithNumberOfDigits:]( [PBPinDisplayViewController alloc],  "initWithNumberOfDigits:",  [v3 length]);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[PBPinDisplayViewController titleLabel](v10, "titleLabel"));
  [v11 setText:v4];

  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[PBPinDisplayViewController promptLabel](v10, "promptLabel"));
  [v12 setText:v5];

  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[PBPinDisplayViewController digitGroupView](v10, "digitGroupView"));
  [v13 setText:v3];

  [v9 doubleValue];
  -[PBPinDisplayViewController setTimeout:](v10, "setTimeout:");
  objc_initWeak(&location, *(id *)(a1 + 40));
  id v20 = _NSConcreteStackBlock;
  uint64_t v21 = 3221225472LL;
  __int16 v22 = sub_1001A487C;
  id v23 = &unk_1003D1838;
  objc_copyWeak(&v26, &location);
  id v24 = *(id *)(a1 + 48);
  id v25 = *(id *)(a1 + 64);
  -[PBPinDisplayViewController setDismissalCompletion:](v10, "setDismissalCompletion:", &v20);

  objc_destroyWeak(&v26);
  objc_destroyWeak(&location);
  v28[0] = @"PBDialogOptionPresentForcedKey";
  v28[1] = @"PBDialogOptionPresentWhileScreenSaverActiveKey";
  v29[0] = &__kCFBooleanTrue;
  v29[1] = &__kCFBooleanTrue;
  __int16 v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v29,  v28,  2LL));
  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[PBDialogContext contextWithViewController:]( &OBJC_CLASS___PBDialogContext,  "contextWithViewController:",  v10));
  id v16 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
  [v16 presentDialogWithContext:v15 options:v14 completion:0];

  id v17 = objc_alloc_init(&OBJC_CLASS___PBMediaRemoteServicePresentationInfo);
  -[PBMediaRemoteServicePresentationInfo setViewController:](v17, "setViewController:", v10);
  -[PBMediaRemoteServicePresentationInfo setDialogContext:](v17, "setDialogContext:", v15);
  [*(id *)(*(void *)(a1 + 40) + 16) setObject:v17 forKey:*(void *)(a1 + 48)];
  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[PBPowerManager sharedInstance](&OBJC_CLASS___PBPowerManager, "sharedInstance"));
  [v18 wakeSystemWithReason:133];

  unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"PIN dialog requested by %@",  *(void *)(a1 + 56),  v20,  v21,  v22,  v23));
  +[PBAttentionMonitor resetAttention:](&OBJC_CLASS___PBAttentionMonitor, "resetAttention:", v19);
}

void sub_1001A4858( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

uint64_t sub_1001A487C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained presentationInfoByToken]);
  [v5 removeObjectForKey:*(void *)(a1 + 32)];

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0LL);
  }
  return result;
}

void sub_1001A4B30(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) objectForKey:*(void *)(a1 + 40)]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 dialogContext]);
  if (v3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBDialogManager sharedInstance](&OBJC_CLASS___PBDialogManager, "sharedInstance"));
    [v4 dismissDialogWithContext:v3 options:0 completion:0];
  }

  [*(id *)(*(void *)(a1 + 32) + 16) removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_1001A4D3C(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  [v1 noteUserPresenceDetected];
}

void sub_1001A50C0(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100471290;
  qword_100471290 = (uint64_t)v1;
}

void sub_1001A5300(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = *(id *)(a1 + 32);
  if (v4)
  {
    __int128 v35 = 0uLL;
    memset(v36, 0, sizeof(v36));
    __int128 v33 = 0uLL;
    __int128 v34 = 0uLL;
    __int128 v31 = 0uLL;
    __int128 v32 = 0uLL;
    __int128 v29 = 0uLL;
    __int128 v30 = 0uLL;
    __int128 v27 = 0uLL;
    __int128 v28 = 0uLL;
    __int128 v25 = 0uLL;
    __int128 v26 = 0uLL;
    __int128 v23 = 0uLL;
    __int128 v24 = 0uLL;
    __int128 v22 = 0uLL;
    id v6 = sub_1000836CC();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      uint64_t v8 = 3LL;
    }
    else {
      uint64_t v8 = 2LL;
    }
    int v20 = 138543362;
    id v21 = v4;
    _os_log_send_and_compose_impl( v8,  0LL,  &v22,  250LL,  &_mh_execute_header,  v7,  16LL,  "Unable to disable SUController while running legacy [%{public}@].",  &v20,  12);
    id v10 = v9;

    id v11 = sub_1000836CC();
    id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    id v13 = v10;
    uint64_t v14 = 16LL;
  }

  else
  {
    __int128 v35 = 0uLL;
    memset(v36, 0, sizeof(v36));
    __int128 v33 = 0uLL;
    __int128 v34 = 0uLL;
    __int128 v31 = 0uLL;
    __int128 v32 = 0uLL;
    __int128 v29 = 0uLL;
    __int128 v30 = 0uLL;
    __int128 v27 = 0uLL;
    __int128 v28 = 0uLL;
    __int128 v25 = 0uLL;
    __int128 v26 = 0uLL;
    __int128 v23 = 0uLL;
    __int128 v24 = 0uLL;
    __int128 v22 = 0uLL;
    id v15 = sub_1000836CC();
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v17 = 3LL;
    }
    else {
      uint64_t v17 = 2LL;
    }
    LOWORD(v20) = 0;
    _os_log_send_and_compose_impl( v17,  0LL,  &v22,  250LL,  &_mh_execute_header,  v16,  0LL,  "Successfully disabled SUController while running legacy.",  &v20,  2);
    id v10 = v18;

    id v19 = sub_1000836CC();
    id v12 = (void *)objc_claimAutoreleasedReturnValue(v19);
    id v13 = v10;
    uint64_t v14 = 0LL;
  }

  _os_log_message_persist_impl(v13, v14, v12);

  if (v10 != &v22) {
    free(v10);
  }
}

id sub_1001A5A58(uint64_t a1)
{
  return [*(id *)(a1 + 32) setStartingUp:0];
}

void sub_1001A5AA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBOSSoftwareUpdateProcess, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  [*(id *)(a1 + 32) setUseNewProcess:0];
  [*(id *)(a1 + 32) setLegacyProcess:v7];
  [*(id *)(a1 + 32) setReadyForUse:1];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  [*(id *)(a1 + 32) setStartingUp:0];
}

void sub_1001A7E7C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_1001A7E9C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001A7EAC(uint64_t a1)
{
}

void sub_1001A7EC4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  if (a2)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([a2 getLocalFileUrl]);
    uint64_t v9 = v8;
    if (v8)
    {
      id v28 = 0LL;
      unsigned int v10 = [v8 checkResourceIsReachableAndReturnError:&v28];
      id v11 = v28;
      if (v10)
      {
        id v12 = sub_1000836CC();
        id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 138543362;
          *(void *)&uint8_t buf[4] = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Found asset ready to install at %{public}@.",  buf,  0xCu);
        }

LABEL_18:
        goto LABEL_19;
      }
    }

    else
    {
      id v11 = 0LL;
    }

    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL), v11);
    __int128 v46 = 0u;
    memset(v47, 0, sizeof(v47));
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    __int128 v39 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    *(_OWORD *)__int128 buf = 0u;
    __int128 v34 = 0u;
    id v21 = sub_1000836CC();
    __int128 v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      uint64_t v23 = 3LL;
    }
    else {
      uint64_t v23 = 2LL;
    }
    int v29 = 138543618;
    id v30 = v9;
    __int16 v31 = 2114;
    id v32 = v11;
    _os_log_send_and_compose_impl( v23,  0LL,  buf,  250LL,  &_mh_execute_header,  v22,  16LL,  "Failed readyForInstallation check because asset URL %{public}@ was not reachable [%{public}@].",  &v29,  22);
    __int128 v25 = v24;

    id v26 = sub_1000836CC();
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
    _os_log_message_persist_impl(v25, 16LL, v27);

    if (v25 != buf) {
      free(v25);
    }
    goto LABEL_18;
  }

  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL), a4);
  __int128 v46 = 0u;
  memset(v47, 0, sizeof(v47));
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  __int128 v39 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  *(_OWORD *)__int128 buf = 0u;
  __int128 v34 = 0u;
  id v14 = sub_1000836CC();
  id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
    uint64_t v16 = 3LL;
  }
  else {
    uint64_t v16 = 2LL;
  }
  int v29 = 138543362;
  id v30 = v7;
  _os_log_send_and_compose_impl( v16,  0LL,  buf,  250LL,  &_mh_execute_header,  v15,  16LL,  "Failed readyForInstallation check because asset was not found [%{public}@].",  &v29,  12);
  unsigned int v18 = v17;

  id v19 = sub_1000836CC();
  int v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  _os_log_message_persist_impl(v18, 16LL, v20);

  if (v18 != buf) {
    free(v18);
  }
LABEL_19:
}

void sub_1001A8650(uint64_t a1)
{
  id v2 = sub_1001A87A4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  v11[0] = 0;
  _os_log_send_and_compose_impl( v4,  0LL,  v12,  250LL,  &_mh_execute_header,  v3,  0LL,  "osUpdateProcessDidStartCheckWithData",  v11,  2);
  id v6 = v5;

  id v7 = sub_1001A87A4();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  _os_log_message_persist_impl(v6, 0LL, v8);

  if (v6 != v12) {
    free(v6);
  }
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);

  if (v9)
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    [v10 osUpdateProcessDidStartCheckWithData:*(void *)(a1 + 40)];
  }

id sub_1001A87A4()
{
  if (qword_1004712A8 != -1) {
    dispatch_once(&qword_1004712A8, &stru_1003DB318);
  }
  return (id)qword_1004712A0;
}

void sub_1001A88F8(uint64_t a1)
{
  id v2 = sub_1001A87A4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  v11[0] = 0;
  _os_log_send_and_compose_impl( v4,  0LL,  v12,  250LL,  &_mh_execute_header,  v3,  0LL,  "osUpdateProcessDidFinishCheckWithData",  v11,  2);
  id v6 = v5;

  id v7 = sub_1001A87A4();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  _os_log_message_persist_impl(v6, 0LL, v8);

  if (v6 != v12) {
    free(v6);
  }
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);

  if (v9)
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    [v10 osUpdateProcessDidFinishCheckWithData:*(void *)(a1 + 40)];
  }

void sub_1001A8B5C(uint64_t a1)
{
  id v2 = sub_1001A87A4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  v11[0] = 0;
  _os_log_send_and_compose_impl( v4,  0LL,  v12,  250LL,  &_mh_execute_header,  v3,  0LL,  "osUpdateProcessDidStartDownloadWithData",  v11,  2);
  id v6 = v5;

  id v7 = sub_1001A87A4();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  _os_log_message_persist_impl(v6, 0LL, v8);

  if (v6 != v12) {
    free(v6);
  }
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);

  if (v9)
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    [v10 osUpdateProcessDidStartDownloadWithData:*(void *)(a1 + 40)];
  }

void sub_1001A8DC0(uint64_t a1)
{
  id v2 = sub_1001A87A4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "osUpdateProcessDidUpdateDownloadProgressWithData",  v6,  2u);
  }

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if (v4)
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    [v5 osUpdateProcessDidUpdateDownloadProgressWithData:*(void *)(a1 + 40)];
  }

void sub_1001A8F6C(uint64_t a1)
{
  id v2 = sub_1001A87A4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  v11[0] = 0;
  _os_log_send_and_compose_impl( v4,  0LL,  v12,  250LL,  &_mh_execute_header,  v3,  0LL,  "osUpdateProcessDidFinishDownloadWithData",  v11,  2);
  id v6 = v5;

  id v7 = sub_1001A87A4();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  _os_log_message_persist_impl(v6, 0LL, v8);

  if (v6 != v12) {
    free(v6);
  }
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);

  if (v9)
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    [v10 osUpdateProcessDidFinishDownloadWithData:*(void *)(a1 + 40)];
  }

void sub_1001A91D0(uint64_t a1)
{
  id v2 = sub_1001A87A4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  v11[0] = 0;
  _os_log_send_and_compose_impl( v4,  0LL,  v12,  250LL,  &_mh_execute_header,  v3,  0LL,  "osUpdateProcessDidStartRedownloadWithData",  v11,  2);
  id v6 = v5;

  id v7 = sub_1001A87A4();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  _os_log_message_persist_impl(v6, 0LL, v8);

  if (v6 != v12) {
    free(v6);
  }
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);

  if (v9)
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    [v10 osUpdateProcessDidStartRedownloadWithData:*(void *)(a1 + 40)];
  }

void sub_1001A9434(uint64_t a1)
{
  id v2 = sub_1001A87A4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  v11[0] = 0;
  _os_log_send_and_compose_impl( v4,  0LL,  v12,  250LL,  &_mh_execute_header,  v3,  0LL,  "osUpdateProcessDidStartApplyWithData",  v11,  2);
  id v6 = v5;

  id v7 = sub_1001A87A4();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  _os_log_message_persist_impl(v6, 0LL, v8);

  if (v6 != v12) {
    free(v6);
  }
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);

  if (v9)
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    [v10 osUpdateProcessDidStartApplyWithData:*(void *)(a1 + 40)];
  }

void sub_1001A9698(uint64_t a1)
{
  id v2 = sub_1001A87A4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  v11[0] = 0;
  _os_log_send_and_compose_impl( v4,  0LL,  v12,  250LL,  &_mh_execute_header,  v3,  0LL,  "osUpdateProcessDidUpdateApplyProgressWithData",  v11,  2);
  id v6 = v5;

  id v7 = sub_1001A87A4();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  _os_log_message_persist_impl(v6, 0LL, v8);

  if (v6 != v12) {
    free(v6);
  }
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);

  if (v9)
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    [v10 osUpdateProcessDidUpdateApplyProgressWithData:*(void *)(a1 + 40)];
  }

void sub_1001A98FC(uint64_t a1)
{
  id v2 = sub_1001A87A4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = 3LL;
  }
  else {
    uint64_t v4 = 2LL;
  }
  v11[0] = 0;
  _os_log_send_and_compose_impl( v4,  0LL,  v12,  250LL,  &_mh_execute_header,  v3,  0LL,  "osUpdateProcessDidFinishApplyWithData",  v11,  2);
  id v6 = v5;

  id v7 = sub_1001A87A4();
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  _os_log_message_persist_impl(v6, 0LL, v8);

  if (v6 != v12) {
    free(v6);
  }
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);

  if (v9)
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    [v10 osUpdateProcessDidFinishApplyWithData:*(void *)(a1 + 40)];
  }

id sub_1001A9E24(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _sharedInstance]);
}

void sub_1001A9F30(id a1)
{
  uint64_t persist = os_log_create_persist("com.apple.PineBoard.osUpdate", "PBSOSSoftwareUpdateProcessDelegate", 5242880LL);
  id v2 = (void *)qword_1004712A0;
  qword_1004712A0 = persist;
}

void sub_1001AC07C(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplicationLibrary](&OBJC_CLASS___PineBoard, "sharedApplicationLibrary"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 allInstalledApplications]);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_1001AC10C;
  void v3[3] = &unk_1003DB360;
  uint64_t v4 = @"TVSystemMusicApp";
  [v2 enumerateObjectsUsingBlock:v3];
}

void sub_1001AC10C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6 = a2;
  if ([v6 isSystemApplication])
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 getInfoPlistValueUncached:*(void *)(a1 + 32)]);
    if ([v7 BOOLValue])
    {
      uint64_t v8 = objc_claimAutoreleasedReturnValue([v6 bundleIdentifier]);
      uint64_t v9 = (void *)qword_1004712B0;
      qword_1004712B0 = v8;

      *a4 = 1;
    }
  }
}

void sub_1001AC35C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _performMigrationWithCompletionQueue:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
}

void sub_1001AC618(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = *(void **)(a1 + 40);
  if (v6)
  {
    id v7 = *(dispatch_queue_s **)(a1 + 32);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001AC6BC;
    block[3] = &unk_1003D0020;
    id v10 = v6;
    char v11 = a2;
    id v9 = v5;
    dispatch_async(v7, block);
  }
}

uint64_t sub_1001AC6BC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48),  *(void *)(a1 + 32));
}

id sub_1001AC6E0()
{
  if (qword_1004712C8 != -1) {
    dispatch_once(&qword_1004712C8, &stru_1003DB3F8);
  }
  return (id)qword_1004712C0;
}

void sub_1001AC724(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___UPProfileStore);
  id v5 = objc_alloc_init(&OBJC_CLASS___UPUpdateProfileStoreRequest);
  [v5 setAddProfileRequests:v3];
  [v5 setOptions:4];
  id v20 = 0LL;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[UPProfileStore updateForRequest:error:](v4, "updateForRequest:error:", v5, &v20));
  id v7 = v20;
  uint64_t v8 = v7;
  if (v6)
  {
    id v9 = sub_1001AC6E0();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = [v3 count];
      *(_DWORD *)__int128 buf = 136315394;
      __int128 v22 = "-[PBProfileAccountsMigrator _performMigrationWithCompletionQueue:completion:]_block_invoke";
      __int16 v23 = 2048;
      uint64_t v24 = (uint64_t)v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%s: Finished create profiles from accounts migration. {profilesCount=%lu}",  buf,  0x16u);
    }
  }

  else
  {
    id v12 = sub_10010CEAC(v7);
    uint64_t v13 = objc_claimAutoreleasedReturnValue(v12);

    id v14 = sub_1001AC6E0();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136315394;
      __int128 v22 = "-[PBProfileAccountsMigrator _performMigrationWithCompletionQueue:completion:]_block_invoke";
      __int16 v23 = 2112;
      uint64_t v24 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%s: Failed to create profiles during accounts migration. {error=%@}",  buf,  0x16u);
    }

    uint64_t v8 = (void *)v13;
  }

  *(_BYTE *)(a1[4] + 16LL) = 0;
  id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  [v15 setBool:1 forKey:@"PerformedCreateUserProfilesMigration"];

  id v16 = sub_1001AC6E0();
  uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  unsigned int v18 = v17;
  os_signpost_id_t v19 = a1[6];
  if (v19 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v17))
  {
    *(_WORD *)__int128 buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v18,  OS_SIGNPOST_INTERVAL_END,  v19,  "Create profiles from accounts migration",  "",  buf,  2u);
  }

  (*(void (**)(void))(a1[5] + 16LL))();
}

void sub_1001AD06C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
}

uint64_t sub_1001AD0C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001AD0D0(uint64_t a1)
{
}

void sub_1001AD0E8(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 80)) {
    BOOL v3 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL) == 0LL;
  }
  else {
    BOOL v3 = 0LL;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = a2;
  id v6 = [(id)objc_opt_class(v4) _makeGuestAddProfileRequestWithAccount:*(void *)(a1 + 40) isActive:v3 personaUniqueString:v5 overrideName:*(void *)(a1 + 48)];
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  id v8 = sub_1001AC6E0();
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 136315394;
    id v11 = "-[PBProfileAccountsMigrator _queue_performMigrationWithContext:completion:]_block_invoke";
    __int16 v12 = 2112;
    uint64_t v13 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%s: Adding secondary profile add request. {request=%@}",  (uint8_t *)&v10,  0x16u);
  }

  objc_msgSend(*(id *)(a1 + 56), "bs_safeAddObject:", v7);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 64));
}

void sub_1001AD230(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 80)) {
    BOOL v3 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL) == 0LL;
  }
  else {
    BOOL v3 = 0LL;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = a2;
  id v6 = [(id)objc_opt_class(v4) _makeGuestAddProfileRequestWithAccount:*(void *)(a1 + 40) isActive:v3 personaUniqueString:v5 overrideName:*(void *)(a1 + 48)];
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  id v8 = sub_1001AC6E0();
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 136315394;
    id v11 = "-[PBProfileAccountsMigrator _queue_performMigrationWithContext:completion:]_block_invoke";
    __int16 v12 = 2112;
    uint64_t v13 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%s: Adding secondary profile add request. {request=%@}",  (uint8_t *)&v10,  0x16u);
  }

  objc_msgSend(*(id *)(a1 + 56), "bs_safeAddObject:", v7);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 64));
}

void sub_1001AD378(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) copy];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1001AD630( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_1001AD65C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "bs_safeStringForKey:", kUMUserPersonaUniqueStringKey));
  id v7 = sub_1001AC6E0();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136315650;
      __int128 v22 = "-[PBProfileAccountsMigrator _queue_createGuestPersonaWithCompletion:]_block_invoke";
      __int16 v23 = 2160;
      uint64_t v24 = 1752392040LL;
      __int16 v25 = 2112;
      id v26 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%s: Finished creating guest persona. {personaUniqueString=%{mask.hash}@}",  buf,  0x20u);
    }
  }

  else if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    sub_10028B9A8((uint64_t)v5, v9);
  }

  id v10 = sub_1001AC6E0();
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  __int16 v12 = v11;
  os_signpost_id_t v13 = *(void *)(a1 + 48);
  if (v13 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v11))
  {
    *(_WORD *)__int128 buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v12,  OS_SIGNPOST_INTERVAL_END,  v13,  "Create guest persona",  "",  buf,  2u);
  }

  id WeakRetained = (dispatch_queue_s **)objc_loadWeakRetained((id *)(a1 + 40));
  id v15 = WeakRetained;
  if (WeakRetained)
  {
    id v16 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001AD86C;
    block[3] = &unk_1003D85D8;
    id v20 = *(id *)(a1 + 32);
    id v18 = v6;
    id v19 = v5;
    dispatch_async(v16, block);
  }
}

uint64_t sub_1001AD86C(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16LL))(a1[6], a1[4], a1[5]);
}

void sub_1001ADD00(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "ProfileAccountsMigrator");
  id v2 = (void *)qword_1004712C0;
  qword_1004712C0 = (uint64_t)v1;
}

AXElement *__cdecl sub_1001AE02C(id a1)
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[AXElement systemWideElement](&OBJC_CLASS___AXElement, "systemWideElement"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 systemApplication]);

  return (AXElement *)v2;
}

void sub_1001AEEC8(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithCapacity:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithCapacity:",  20LL));
  id v2 = (void *)qword_1004712D0;
  qword_1004712D0 = v1;
}

void sub_1001AF004(_Unwind_Exception *a1)
{
}

void sub_1001AF0C0(_Unwind_Exception *a1)
{
}

void sub_1001AF1EC(_Unwind_Exception *a1)
{
}

void sub_1001AF258(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[PBDefaultOpenAppTransitioner sharedInstance]( &OBJC_CLASS___PBDefaultOpenAppTransitioner,  "sharedInstance"));
  [v1 handleFocusedAppRequestDeactivationFromFailure:0];
}

void sub_1001AF3A0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientBundleIdentifier]);
  [v2 sleepRequestedByClient:v3 forReason:*(void *)(a1 + 40)];
}

uint64_t sub_1001AF564(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientBundleIdentifier]);
  [v2 wakeRequestedByClient:v3 forReason:*(void *)(a1 + 40)];

  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

uint64_t sub_1001AF68C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001AF7D0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientBundleIdentifier]);
  [v2 relaunchRequestedByClient:v3];
}

void sub_1001AF914(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientBundleIdentifier]);
  [v2 rebootRequestedByClient:v3];
}

void sub_1001AFA68(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientBundleIdentifier]);
  [v2 client:v3 setSleepTimeout:*(double *)(a1 + 40)];
}

uint64_t sub_1001AFBE8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  [v2 sleepTimeoutInSeconds];
  double v4 = v3;

  return (*(uint64_t (**)(double))(*(void *)(a1 + 32) + 16LL))(v4);
}

void sub_1001AFEC8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  double v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientBundleIdentifier]);
  [v2 activateScreenSaverRequestedByClient:v3 forReason:*(void *)(a1 + 56) forPosterBundleID:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

void sub_1001B00C8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  double v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientBundleIdentifier]);
  [v2 deactivateScreenSaverRequestedByClient:v3];
}

void sub_1001B0210(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  [v2 setAirPlayActive:*(unsigned __int8 *)(a1 + 32)];
}

void sub_1001B0308(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[PBConferenceRoomDisplayManager sharedInstance]( &OBJC_CLASS___PBConferenceRoomDisplayManager,  "sharedInstance"));
  [v1 startCRDWithReason:2];
}

uint64_t sub_1001B0484(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBControlCenterManager sharedInstance](&OBJC_CLASS___PBControlCenterManager, "sharedInstance"));
  [v2 presentControlCenterForReason:7];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

void sub_1001B06D8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  [v2 presentNowPlayingWithOptions:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
}

void sub_1001B07FC(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBControlCenterManager sharedInstance](&OBJC_CLASS___PBControlCenterManager, "sharedInstance"));
  [v1 presentControlCenterForReason:4];
}

void sub_1001B091C(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBControlCenterManager sharedInstance](&OBJC_CLASS___PBControlCenterManager, "sharedInstance"));
  [v1 presentControlCenterForReason:5];
}

void sub_1001B0A3C(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBControlCenterManager sharedInstance](&OBJC_CLASS___PBControlCenterManager, "sharedInstance"));
  [v1 presentControlCenterForReason:8];
}

void sub_1001B0AC0(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBControlCenterManager sharedInstance](&OBJC_CLASS___PBControlCenterManager, "sharedInstance"));
  [v1 presentControlCenterForReason:7];
}

void sub_1001B0BE0(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBControlCenterManager sharedInstance](&OBJC_CLASS___PBControlCenterManager, "sharedInstance"));
  [v1 presentControlCenterForReason:9];
}

uint64_t sub_1001B0F00(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBCriticalAlertManager sharedInstance](&OBJC_CLASS___PBCriticalAlertManager, "sharedInstance"));
  double v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBCriticalAlertContext thermalContext](&OBJC_CLASS___PBCriticalAlertContext, "thermalContext"));
  [v2 presentAlertWithContext:v3];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

uint64_t sub_1001B1150(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBCriticalAlertManager sharedInstance](&OBJC_CLASS___PBCriticalAlertManager, "sharedInstance"));
  double v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBCriticalAlertContext thermalContext](&OBJC_CLASS___PBCriticalAlertContext, "thermalContext"));
  [v2 dismissAlertWithContext:v3];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

uint64_t sub_1001B13A0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBEventMaskingManager sharedInstance](&OBJC_CLASS___PBEventMaskingManager, "sharedInstance"));
  [v2 present];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

uint64_t sub_1001B15C8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBEventMaskingManager sharedInstance](&OBJC_CLASS___PBEventMaskingManager, "sharedInstance"));
  [v2 dismiss];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

void sub_1001B17F0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  unsigned __int8 v3 = [v2 isPresenting];

  if ((v3 & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4) {
      (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, 1LL);
    }
  }

  else
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    void v6[2] = sub_1001B18B8;
    void v6[3] = &unk_1003CFF30;
    id v7 = *(id *)(a1 + 32);
    [v5 _presentWithCompletion:v6];
  }

uint64_t sub_1001B18B8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

uint64_t sub_1001B1AB8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v2 _dismiss];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

void sub_1001B1FB8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSiriManager sharedInstance](&OBJC_CLASS___PBSiriManager, "sharedInstance"));
  [v2 setNextVoiceRecognitionAudioInputPaths:*(void *)(a1 + 32)];
}

void sub_1001B20FC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSiriManager sharedInstance](&OBJC_CLASS___PBSiriManager, "sharedInstance"));
  [v2 setNextAssistantRecognitionStrings:*(void *)(a1 + 32)];
}

void sub_1001B243C(uint64_t *a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSiriManager sharedInstance](&OBJC_CLASS___PBSiriManager, "sharedInstance"));
  unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue([v2 screenActionManager]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 currentScreenActionApplication]);

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 screenActionItemForIdentifier:a1[4]]);
  id v6 = sub_1000842C0();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = v7;
  if (v5)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = a1[5];
      int v15 = 138543362;
      uint64_t v16 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Will activate screen action: %{public}@ after Siri dismissal",  (uint8_t *)&v15,  0xCu);
    }

    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[PBSiriManager sharedInstance](&OBJC_CLASS___PBSiriManager, "sharedInstance"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 screenActionManager]);
    [v11 setDeferredScreenActionItem:v5];

    [v5 storeDeferredActionWithName:a1[5] parameters:a1[6]];
    __int16 v12 = 0LL;
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10028CAD8(a1 + 4, v8, v13);
    }

    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  PineBoardServicesErrorDomain,  100LL,  0LL));
  }

  uint64_t v14 = a1[7];
  if (v14) {
    (*(void (**)(uint64_t, BOOL, void *))(v14 + 16))(v14, v5 != 0LL, v12);
  }
}

void sub_1001B27A8(uint64_t a1)
{
  id v2 = sub_1000842C0();
  unsigned __int8 v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Menu button event requested by %@",  (uint8_t *)&v5,  0xCu);
  }

  sub_1000319D8(1LL, 134LL, 0LL, 3uLL);
}

uint64_t sub_1001B2A28(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSystemAppearanceManager sharedInstance](&OBJC_CLASS___PBSystemAppearanceManager, "sharedInstance"));
  [v2 systemAppearance];

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001B2C24(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSystemAppearanceManager sharedInstance](&OBJC_CLASS___PBSystemAppearanceManager, "sharedInstance"));
  [v2 setSystemAppearance:*(void *)(a1 + 32)];
}

void sub_1001B2D80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue([v2 kioskAppBundleIdentifier]);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v3);
}

void sub_1001B2EE4(uint64_t a1)
{
  id v2 = sub_1000842C0();
  unsigned __int8 v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientBundleIdentifier]);
    int v7 = 138543618;
    uint64_t v8 = v4;
    __int16 v9 = 2114;
    id v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Kiosk App BundleIdentifier changed to %{public}@ by %{public}@",  (uint8_t *)&v7,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  [v6 setKioskAppBundleIdentifier:*(void *)(a1 + 32)];
}

void sub_1001B30EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = sub_1002031D0();
  unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v3);
}

void sub_1001B32A0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v19;
    do
    {
      for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
        if ([v8 entityType] == (id)7) {
          [v2 addObject:v8];
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }

    while (v5);
  }

  id v9 = [[TVCSHomeKitCameraItemManager alloc] initWithDelegate:0];
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 reloadAndUpdateAllItemsFromSenderSelector:*(void *)(a1 + 48)]);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001B346C;
  v14[3] = &unk_1003DB588;
  id v15 = v9;
  id v16 = v2;
  id v17 = *(id *)(a1 + 40);
  id v11 = v2;
  id v12 = v9;
  id v13 = [v10 addCompletionBlock:v14];
}

void sub_1001B346C(id *a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "displayedItemsInSection:"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    __int128 v66 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
    __int128 v80 = 0u;
    __int128 v81 = 0u;
    __int128 v82 = 0u;
    __int128 v83 = 0u;
    id v5 = v3;
    id v6 = [v5 countByEnumeratingWithState:&v80 objects:v88 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v81;
      do
      {
        for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v81 != v8) {
            objc_enumerationMutation(v5);
          }
          id v10 = *(void **)(*((void *)&v80 + 1) + 8LL * (void)i);
          id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 homeKitObject]);
          id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 uniqueIdentifier]);
          [v4 setObject:v10 forKeyedSubscript:v12];
        }

        id v7 = [v5 countByEnumeratingWithState:&v80 objects:v88 count:16];
      }

      while (v7);
    }

    id v62 = v5;

    id v13 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 localAccessory]);
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 home]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 hmHome]);

    __int128 v78 = 0u;
    __int128 v79 = 0u;
    __int128 v76 = 0u;
    __int128 v77 = 0u;
    id obj = a1[5];
    id v68 = [obj countByEnumeratingWithState:&v76 objects:v87 count:16];
    if (v68)
    {
      uint64_t v67 = *(void *)v77;
      __int16 v65 = v16;
      do
      {
        for (j = 0LL; j != v68; j = (char *)j + 1)
        {
          if (*(void *)v77 != v67) {
            objc_enumerationMutation(obj);
          }
          __int128 v18 = *(void **)(*((void *)&v76 + 1) + 8LL * (void)j);
          __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 entityName]);
          __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 description]);
          __int128 v21 = v20;
          if (v20)
          {
            id v22 = v20;
          }

          else
          {
            __int16 v23 = (void *)objc_claimAutoreleasedReturnValue([v18 outerDeviceName]);
            id v22 = (id)objc_claimAutoreleasedReturnValue([v23 description]);
          }

          uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v18 room]);
          __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v24 description]);

          __int128 v74 = 0u;
          __int128 v75 = 0u;
          __int128 v72 = 0u;
          __int128 v73 = 0u;
          id v26 = (void *)objc_claimAutoreleasedReturnValue([v16 rooms]);
          id v27 = [v26 countByEnumeratingWithState:&v72 objects:v86 count:16];
          if (v27)
          {
            id v69 = v22;
            id v28 = v4;
            uint64_t v29 = *(void *)v73;
            while (2)
            {
              for (k = 0LL; k != v27; k = (char *)k + 1)
              {
                if (*(void *)v73 != v29) {
                  objc_enumerationMutation(v26);
                }
                __int16 v31 = *(void **)(*((void *)&v72 + 1) + 8LL * (void)k);
                id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 name]);
                unsigned int v33 = [v32 isEqualToString:v25];

                if (v33)
                {
                  id v27 = v31;
                  goto LABEL_27;
                }
              }

              id v27 = [v26 countByEnumeratingWithState:&v72 objects:v86 count:16];
              if (v27) {
                continue;
              }
              break;
            }

uint64_t sub_1001B3A98(uint64_t a1, int a2)
{
  id v4 = sub_1000842C0();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = v5;
  if (a2)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v16 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PineBoard Intent handler presented full screen camera successfully",  v16,  2u);
    }

    id v7 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL);
  }

  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10028CEC4(v6, v8, v9, v10, v11, v12, v13, v14);
    }

    id v7 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL);
  }

  return v7();
}

void sub_1001B3E30(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  [v2 activateSiriWithContext:*(void *)(a1 + 32)];
}

void sub_1001B4058(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  [v2 startSiriWithContext:*(void *)(a1 + 32)];
}

void sub_1001B4280(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  [v2 stopSiriWithContext:*(void *)(a1 + 32)];
}

void sub_1001B4474(uint64_t a1)
{
  id v2 = sub_1000842C0();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_10028D150(a1, v3, v4);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBAppDelegate sharedApplicationDelegate](&OBJC_CLASS___PBAppDelegate, "sharedApplicationDelegate"));
  uint64_t v7 = PBAppLaunchOptionDeactivation;
  uint64_t v8 = &__kCFBooleanTrue;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v8,  &v7,  1LL));
  [v5 openKioskApplicationWithReason:@"External client request" options:v6 completion:0];
}

uint64_t sub_1001B4A7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1001B4BCC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40)) {
    id result = +[PBExternalControlSystem pairAppleIRRemote](&OBJC_CLASS___PBExternalControlSystem, "pairAppleIRRemote");
  }
  else {
    id result = +[PBExternalControlSystem unpairAppleIRRemote]( &OBJC_CLASS___PBExternalControlSystem,  "unpairAppleIRRemote");
  }
  if (*(void *)(a1 + 32))
  {
    +[PBExternalControlSystem isAppleIRRemotePaired](&OBJC_CLASS___PBExternalControlSystem, "isAppleIRRemotePaired");
    return (id)(*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  return result;
}

void sub_1001B4D1C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[PBHardwareButtonAccessManager sharedInstance]( &OBJC_CLASS___PBHardwareButtonAccessManager,  "sharedInstance"));
  uint64_t v3 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientBundleIdentifier]);
  [v2 setExclusivePlayPauseButtonAccessEnabled:v3 forApp:v4];
}

void sub_1001B4E78(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[PBHardwareButtonAccessManager sharedInstance]( &OBJC_CLASS___PBHardwareButtonAccessManager,  "sharedInstance"));
  uint64_t v3 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientBundleIdentifier]);
  [v2 setVolumeButtonAccessEnabled:v3 forApp:v4];
}

void sub_1001B4FF4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBVolumeHUDManager sharedInstance](&OBJC_CLASS___PBVolumeHUDManager, "sharedInstance"));
  [v2 showVolumeHUDForRouteType:*(void *)(a1 + 40) withLevel:*(void *)(a1 + 32)];
}

void sub_1001B5160(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBVolumeHUDManager sharedInstance](&OBJC_CLASS___PBVolumeHUDManager, "sharedInstance"));
  [v2 showVolumeHUDWithImageName:*(void *)(a1 + 32) level:*(void *)(a1 + 40)];
}

void sub_1001B54DC(_Unwind_Exception *a1)
{
}

void sub_1001B5608(_Unwind_Exception *a1)
{
}

void sub_1001B5734(_Unwind_Exception *a1)
{
}

void sub_1001B5990(_Unwind_Exception *a1)
{
}

void sub_1001B5A38(_Unwind_Exception *a1)
{
}

void sub_1001B5B00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 focusedSceneHandle]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 uiClientSettings]);
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, [v4 containsSearchView]);
}

void sub_1001B5C24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 focusedSceneHandle]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 uiClientSettings]);
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, [v4 systemInputActive]);
}

void sub_1001B5E9C( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_1001B5EB0( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

id sub_1001B6020(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___UISApplicationStateService);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[FBSSerialQueue queueWithDispatchQueue:]( &OBJC_CLASS___FBSSerialQueue,  "queueWithDispatchQueue:",  *(void *)(*(void *)(a1 + 32) + 8LL)));
  uint64_t v4 = -[UISApplicationStateService initWithCalloutQueue:](v2, "initWithCalloutQueue:", v3);
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 48);
  *(void *)(v5 + 4_Block_object_dispose(va, 8) = v4;

  return objc_msgSend(*(id *)(*(void *)(a1 + 32) + 48), "setDelegate:");
}

uint64_t sub_1001B61D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001B61E4(uint64_t a1)
{
}

void sub_1001B61FC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) bundleIdentifier]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 _queueAppStateForBundleIdentifier:v3]);
  uint64_t v5 = objc_claimAutoreleasedReturnValue([v4 badgeValueWrapper]);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1001B6318(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) bundleIdentifier]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 _queueAppStateForBundleIdentifier:v3]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v4 isBadgeEnabled];
}

void sub_1001B6428(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) bundleIdentifier]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 _queueAppStateForBundleIdentifier:v3]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v4 isRecentlyUpdated];
}

void sub_1001B6538(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 16LL);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) bundleIdentifier]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v2 containsObject:v3];
}

void sub_1001B6664(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _queueAppStateForBundleIdentifier:*(void *)(a1 + 32)]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) badgeNumber]);
    uint64_t v6 = v5;
    if (v5) {
      id v7 = v5;
    }
    else {
      id v7 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) badgeString]);
    }
    uint64_t v8 = v7;

    [v4 setBadgeValue:v8];
  }
}

void sub_1001B67B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _queueAppStateForBundleIdentifier:*(void *)(a1 + 32)]);
    [v4 setBadgeEnabled:*(unsigned __int8 *)(a1 + 48)];
  }
}

void sub_1001B68CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _queueAppStateForBundleIdentifier:*(void *)(a1 + 32)]);
    [v4 setRecentlyUpdated:*(unsigned __int8 *)(a1 + 48)];
  }
}

void sub_1001B69F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_1001B6A0C(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 16) containsObject:*(void *)(a1 + 40)];
  if (*(unsigned __int8 *)(a1 + 56) != (_DWORD)result)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 16LL);
    if (*(_BYTE *)(a1 + 56)) {
      id result = [v4 addObject:v3];
    }
    else {
      id result = [v4 removeObject:v3];
    }
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
  }

  return result;
}

id sub_1001B6AE4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _queueDeleteStateForBundleIdentifier:*(void *)(a1 + 40)];
}

void sub_1001B6BC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    __int128 v12 = 0u;
    __int128 v13 = 0u;
    id v3 = *(id *)(a1 + 32);
    id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v13;
      do
      {
        for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v13 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = *(void **)(*((void *)&v12 + 1) + 8LL * (void)i);
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "sectionID", (void)v12));
          unint64_t v10 = ((unint64_t)[v8 pushSettings] >> 3) & 1;
          uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _queueAppStateForBundleIdentifier:v9]);
          [v11 setBadgeEnabled:v10];
        }

        id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }

      while (v5);
    }
  }
}

void sub_1001B6E50( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1001B6E6C(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateBadgeEnabledWithInfos:v3];
}

void sub_1001B6F98(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 postNotificationName:@"PBAppInfoStoreDynamicStateDidChangeNotification" object:*(void *)(a1 + 32) userInfo:0];
}

void sub_1001B77F4(id a1)
{
  uint64_t v1 = (void *)qword_1004712E8;
  qword_1004712E8 = (uint64_t)@"AccessibilityMenuOptionsBinding";
}

void sub_1001B78BC(id a1, PBAppDelegate *a2)
{
}

LABEL_71:
  v185 = &_dispatch_main_q;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001B8D1C;
  block[3] = &unk_1003D2008;
  void block[4] = self;
  v199 = v181;
  dispatch_async(&_dispatch_main_q, block);

  -[PBAppDelegate _setupWebinspector](self, "_setupWebinspector");
  [v6 registerForRemoteNotifications];
  +[AMSEphemeralDefaults setHARLoggingItemLimit:](&OBJC_CLASS___AMSEphemeralDefaults, "setHARLoggingItemLimit:", 25LL);
  v186 = sub_1000824FC();
  v187 = (os_log_s *)objc_claimAutoreleasedReturnValue(v186);
  if (os_log_type_enabled(v187, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v187,  OS_LOG_TYPE_DEFAULT,  "---- ======== The system app did finish launching ======== ----",  buf,  2u);
  }

  v190 = PBSBootLifecycleLog(v188, v189);
  v191 = (os_log_s *)objc_claimAutoreleasedReturnValue(v190);
  if (os_signpost_enabled(v191))
  {
    *(_WORD *)__int128 buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v191,  OS_SIGNPOST_INTERVAL_END,  0xEEEEB0B5B2B2EEEELL,  "Delegate didFinishLaunchingWithOptions",  "",  buf,  2u);
  }

  return 1;
}

void sub_1001B8B50(uint64_t a1)
{
  id v2 = sub_1000824FC();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "---- ======== The system app is checking for obliterate on boot ======== ----",  buf,  2u);
  }

  uint64_t v6 = PBSBootLifecycleLog(v4, v5);
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_signpost_enabled(v7))
  {
    *(_WORD *)id v16 = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_INTERVAL_BEGIN,  0xEEEEB0B5B2B2EEEELL,  "Check for obliterate on boot",  "",  v16,  2u);
  }

  if (OTAImplementationType(v8, v9) == 2) {
    restoreLastUpdateInfo();
  }
  else {
    +[PBOSSoftwareUpdateMonitor initializeMonitoring](&OBJC_CLASS___PBOSSoftwareUpdateMonitor, "initializeMonitoring");
  }
  [*(id *)(a1 + 32) _performObliterationOnBootIfNeeded];
  unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[PBSoftwareUpdateService sharedInstance](&OBJC_CLASS___PBSoftwareUpdateService, "sharedInstance"));
  [v10 startSoftwareUpdateMonitoring];

  uint64_t v13 = PBSBootLifecycleLog(v11, v12);
  __int128 v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
  if (os_signpost_enabled(v14))
  {
    *(_WORD *)__int128 v15 = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v14,  OS_SIGNPOST_INTERVAL_END,  0xEEEEB0B5B2B2EEEELL,  "Check for obliterate on boot",  "",  v15,  2u);
  }
}

id sub_1001B8CA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleStoreAccountChangedNotification];
}

void sub_1001B8CBC(id a1, NSNotification *a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBPowerManager sharedInstance](&OBJC_CLASS___PBPowerManager, "sharedInstance"));
  [v2 wakeSystemWithReason:129];
}

void sub_1001B8D1C(uint64_t a1)
{
  id v4 = sub_1000824FC();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "---- ======== The system app did start remaining launch setup ======== ----",  buf,  2u);
  }

  [*(id *)(a1 + 32) triggerThermalNotification];
  [*(id *)(a1 + 32) _startBulletinBoardServer];
  id v6 = +[PineBoard sharedAppInfoStore](&OBJC_CLASS___PineBoard, "sharedAppInfoStore");
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedAppInfoStore](&OBJC_CLASS___PineBoard, "sharedAppInfoStore"));
  uint64_t v8 = objc_claimAutoreleasedReturnValue([v7 appInfoControllerWithEnabledApps]);
  uint64_t v9 = *(void **)(*(void *)(a1 + 32) + 56LL);
  *(void *)(*(void *)(a1 + 32) + 56LL) = v8;

  [*(id *)(a1 + 32) _startURLBagMonitoring];
  if (_os_feature_enabled_impl("PineBoard", "PressToDictate"))
  {
    unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[PBDictationManager sharedInstance](&OBJC_CLASS___PBDictationManager, "sharedInstance"));
    [v10 setup];
  }

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[PBSiriManager sharedInstance](&OBJC_CLASS___PBSiriManager, "sharedInstance"));
  [v11 setup];

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[PBBluetoothObserver sharedInstance](&OBJC_CLASS___PBBluetoothObserver, "sharedInstance"));
  [v12 activate];

  +[PBDataReportingService startService](&OBJC_CLASS___PBDataReportingService, "startService");
  uint64_t v13 = objc_alloc_init(&OBJC_CLASS___PBLargeGameInstallMonitor);
  uint64_t v15 = a1 + 32;
  uint64_t v14 = *(void *)(a1 + 32);
  id v16 = *(void **)(v14 + 64);
  *(void *)(v14 + 64) = v13;

  [*(id *)(*(void *)(a1 + 32) + 64) activate];
  id v17 = (void *)objc_claimAutoreleasedReturnValue(+[PBMediaRemoteObserver sharedInstance](&OBJC_CLASS___PBMediaRemoteObserver, "sharedInstance"));
  [v17 setDelegate:*(void *)(a1 + 32)];

  __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(+[PBMediaRemoteObserver sharedInstance](&OBJC_CLASS___PBMediaRemoteObserver, "sharedInstance"));
  [v18 startObserving];

  [*(id *)(a1 + 32) _configureMediaRemoteCommandCenter];
  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(+[PBScreenSharingObserver sharedInstance](&OBJC_CLASS___PBScreenSharingObserver, "sharedInstance"));
  [v19 startObserving];

  __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(+[PBRetailDemoModeObserver sharedInstance](&OBJC_CLASS___PBRetailDemoModeObserver, "sharedInstance"));
  [v20 startObserving];

  __int128 v21 = -[PBBulletinService initWithRemoteConnection:]( objc_alloc(&OBJC_CLASS___PBBulletinService),  "initWithRemoteConnection:",  0LL);
  id v22 = *(void **)(*(void *)(a1 + 32) + 80LL);
  *(void *)(*(void *)v15 + 80LL) = v21;

  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 80), "setDelegate:");
  __int16 v23 = *(void **)(*(void *)(a1 + 32) + 104LL);
  *(void *)(*(void *)v15 + 104LL) = 0LL;

  [*(id *)(a1 + 32) _setupPowerOffSystemGestures];
  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[TVSBackgroundTaskManager sharedInstance](&OBJC_CLASS___TVSBackgroundTaskManager, "sharedInstance"));
  [v24 disableBackgroundTasksOfType:0];

  __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(+[TVSBackgroundTaskManager sharedInstance](&OBJC_CLASS___TVSBackgroundTaskManager, "sharedInstance"));
  [v25 disableBackgroundTasksOfType:1];

  objc_initWeak(&location, *(id *)(a1 + 32));
  if (sub_1001C9BFC())
  {
    id v26 = *(void **)(a1 + 32);
    v46[0] = _NSConcreteStackBlock;
    v46[1] = 3221225472LL;
    v46[2] = sub_1001B92D4;
    v46[3] = &unk_1003DB658;
    objc_copyWeak(&v47, &location);
    [v26 _launchPurpleBuddyWithCompletion:v46];
    objc_destroyWeak(&v47);
  }

  else
  {
    dispatch_time_t v27 = dispatch_time(0LL, 15000000000LL);
    dispatch_after(v27, &_dispatch_main_q, &stru_1003DB678);
    [*(id *)(a1 + 32) _startSteadyStateServices];
    id v28 = *(void **)(a1 + 32);
    if (*(_BYTE *)(a1 + 40))
    {
      [*(id *)(a1 + 32) _launchConferenceRoomDisplayAppWithReason:1];
      uint64_t v29 = *(void *)(a1 + 32);
      id v30 = *(void **)(v29 + 144);
      *(void *)(v29 + 144) = 0LL;
    }

    else
    {
      v44[0] = _NSConcreteStackBlock;
      v44[1] = 3221225472LL;
      v44[2] = sub_1001B9394;
      v44[3] = &unk_1003DB658;
      objc_copyWeak(&v45, &location);
      [v28 openKioskApplicationWithReason:@"PineBoard boot" options:0 completion:v44];
      objc_destroyWeak(&v45);
    }
  }

  dispatch_time_t v31 = dispatch_time(0LL, 3000000000LL);
  dispatch_after(v31, &_dispatch_main_q, &stru_1003DB698);
  notify_post((const char *)[@"com.apple.PineBoard.FinishedStartup" UTF8String]);
  id v32 = objc_alloc_init(&OBJC_CLASS___PBConstantAudioOutputController);
  uint64_t v33 = *(void *)(a1 + 32);
  id v34 = *(void **)(v33 + 72);
  *(void *)(v33 + 72) = v32;

  [*(id *)(*(void *)(a1 + 32) + 72) startControllingConstantAudioOutput:&stru_1003DB6B8];
  __int128 v35 = -[PBSystemGestureCompatibilityShim initWithAppDelegate:]( objc_alloc(&OBJC_CLASS___PBSystemGestureCompatibilityShim),  "initWithAppDelegate:",  *(void *)(a1 + 32));
  uint64_t v36 = *(void *)(a1 + 32);
  __int128 v37 = *(void **)(v36 + 120);
  *(void *)(v36 + 120) = v35;

  uint64_t v38 = mach_absolute_time();
  mach_timebase_info(&v43);
  LODWORD(v1) = v43.numer;
  LODWORD(v2) = v43.denom;
  id v39 = sub_1000824FC();
  __int128 v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
  if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "---- ======== The system app did finish remaining launch setup ======== ----",  buf,  2u);
  }

  id v41 = sub_1000824FC();
  __int128 v42 = (os_log_s *)objc_claimAutoreleasedReturnValue(v41);
  if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 134218240;
    uint64_t v50 = v38;
    __int16 v51 = 2048;
    double v52 = (double)v1 / (double)v2 / 1000000000.0 * (double)v38;
    _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "---- ======== (mach_absolute_time = %llu ticks, %.06f sec) ======== ----",  buf,  0x16u);
  }

  objc_destroyWeak(&location);
}

void sub_1001B9288( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1001B92D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)*((void *)WeakRetained + 18);
    *((void *)WeakRetained + 1_Block_object_dispose(va, 8) = 0LL;
  }
}

void sub_1001B9314(id a1)
{
  id v1 = sub_1000824FC();
  unint64_t v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "========== Since we have completed set up, wake up the photo sources caching daemon ===========",  v4,  2u);
  }

  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[PBScreenSaverManager sharedInstance](&OBJC_CLASS___PBScreenSaverManager, "sharedInstance"));
  [v3 fetchInitialPhotoAssets];
}

void sub_1001B9394(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)*((void *)WeakRetained + 18);
    *((void *)WeakRetained + 1_Block_object_dispose(va, 8) = 0LL;
  }
}

void sub_1001B93D4(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBHotBlackManager sharedInstance](&OBJC_CLASS___PBHotBlackManager, "sharedInstance"));
  [v1 dismiss];

  +[PBAttentionMonitor resetAttention:]( &OBJC_CLASS___PBAttentionMonitor,  "resetAttention:",  @"PBAppDelegate hot black dismiss");
}

void sub_1001B941C(id a1, BOOL a2, NSError *a3)
{
  id v4 = a3;
  if (!a2)
  {
    id v5 = sub_1000824FC();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10028D980((uint64_t)v4, v6);
    }
  }
}

void sub_1001B9D7C(id a1, BOOL a2)
{
  if (a2)
  {
    unint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[PBConferenceRoomDisplayManager sharedInstance]( &OBJC_CLASS___PBConferenceRoomDisplayManager,  "sharedInstance"));
    [v2 exitCRDApp];
  }

void sub_1001BA828( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1001BA84C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleMenuTripleTapEvent];
}

BOOL sub_1001BAB20(id a1, unsigned int a2, id *a3)
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBMediaRemoteObserver sharedInstance](&OBJC_CLASS___PBMediaRemoteObserver, "sharedInstance"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[PBProcessManager sharedInstance](&OBJC_CLASS___PBProcessManager, "sharedInstance"));
  id v7 = [v5 nowPlayingProcessPID];
  if ((int)v7 >= 1)
  {
    id v8 = v7;
    id v28 = a3;
    unsigned __int8 v9 = [v5 playing];
    if (a2 - 1 < 2) {
      unsigned __int8 v10 = v9;
    }
    else {
      unsigned __int8 v10 = 0;
    }
    unsigned __int8 v11 = [v5 nowPlayingMediaTypeAudioOnly];
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[PBWindowManager sharedInstance](&OBJC_CLASS___PBWindowManager, "sharedInstance"));
    unsigned __int8 v13 = [v12 isShowingBaseUIOnly];

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 currentApplicationSceneHandle]);

    id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 sceneIfExists]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 clientProcess]);
    unsigned int v18 = [v17 pid];

    if (v18 == (_DWORD)v8) {
      char v19 = v13;
    }
    else {
      char v19 = 0;
    }
    if ((v11 & 1) != 0) {
      char v19 = 1;
    }
    if ((v10 & 1) != 0) {
      char v20 = 1;
    }
    else {
      char v20 = v19;
    }
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(+[PBSiriManager sharedInstance](&OBJC_CLASS___PBSiriManager, "sharedInstance"));
    unsigned int v22 = [v21 isPresenting];

    unsigned int v23 = [v6 isSiriViewServicePID:v8];
    if ((v20 & 1) != 0 || (v22 & v23) != 0)
    {
    }

    else
    {
      unsigned __int8 v24 = [v6 isAirPlayViewServicePID:v8];

      if ((v24 & 1) == 0)
      {
        a3 = v28;
        __int16 v25 = (__CFString *)*v28;
        goto LABEL_18;
      }
    }

    BOOL v26 = 1;
    goto LABEL_22;
  }

  __int16 v25 = @"InvalidNowPlayingPID";
  *a3 = v25;
LABEL_18:
  BOOL v26 = 0;
  if (!v25) {
    *a3 = @"AppDelegateDenied";
  }
LABEL_22:

  return v26;
}

BOOL sub_1001BACF0(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBScreenSaverManager sharedInstance](&OBJC_CLASS___PBScreenSaverManager, "sharedInstance"));
  unsigned __int8 v2 = [v1 dismissScreenSaver];

  return v2;
}

void sub_1001BB3B4(id a1, BOOL a2)
{
  if (a2)
  {
    unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue( +[PBConferenceRoomDisplayManager sharedInstance]( &OBJC_CLASS___PBConferenceRoomDisplayManager,  "sharedInstance"));
    [v2 exitCRDApp];
  }

void sub_1001BBB74(id a1, NSNumber *a2, BOOL a3, NSError *a4)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001BBBEC;
  block[3] = &unk_1003CFF08;
  id v6 = a2;
  id v4 = v6;
  dispatch_async(&_dispatch_main_q, block);
}

void sub_1001BBBEC(uint64_t a1)
{
  double v1 = (double)(uint64_t)[*(id *)(a1 + 32) integerValue];
  unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBWhatsNewService sharedInstance](&OBJC_CLASS___PBWhatsNewService, "sharedInstance"));
  [v2 setCheckTimeInterval:v1];
}

void sub_1001BBCD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  void v6[2] = sub_1001BBD50;
  void v6[3] = &unk_1003CFEB8;
  uint64_t v4 = *(void *)(a1 + 32);
  id v7 = v3;
  uint64_t v8 = v4;
  id v5 = v3;
  dispatch_async(&_dispatch_main_q, v6);
}

void sub_1001BBD50(uint64_t a1)
{
  double v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBProgrammingGuide sharedInstance](&OBJC_CLASS___PBProgrammingGuide, "sharedInstance"));
  [v1 setNeedsReload];
}

void sub_1001BBECC(id a1)
{
  double v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBProgrammingGuide sharedInstance](&OBJC_CLASS___PBProgrammingGuide, "sharedInstance"));
  [v1 setNeedsReload];
}

void sub_1001BCAC4(id a1, BSProcessHandle *a2, NSError *a3)
{
  id v3 = sub_1000824FC();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "---- ======== The system app has finished launching the post-setup app ======== ----",  v6,  2u);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  [v5 startMonitoringCable];
}

BOOL sub_1001BD254(id a1, PBCFUserNotification *a2)
{
  unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue(-[PBCFUserNotification notificationSource](a2, "notificationSource"));
  if (([v2 isEqualToString:@"Setup"] & 1) != 0
    || ([v2 isEqualToString:@"itunesstored"] & 1) != 0)
  {
    unsigned __int8 v3 = 1;
  }

  else
  {
    unsigned __int8 v3 = [v2 isEqualToString:@"appleidsetupd"];
  }

  return v3;
}

uint64_t sub_1001BD2C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1001BD6BC(id a1, BOOL a2)
{
  if (a2)
  {
    unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSSiriSettings sharedInstance](&OBJC_CLASS___PBSSiriSettings, "sharedInstance"));
    [v2 setOfferedEnableAssistant:1];
  }

void sub_1001BD94C(id a1, BOOL a2)
{
  if (a2)
  {
    unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSSiriSettings sharedInstance](&OBJC_CLASS___PBSSiriSettings, "sharedInstance"));
    [v2 setOfferedEnableDictation:1];
  }

void sub_1001BDD18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1001BDD40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, a2);
  }
  id v5 = objc_loadWeakRetained(&to);
  [v5 setAwaitingSiriOptInOfferResponse:0];

  objc_destroyWeak(&to);
}

void sub_1001BDDA8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_1001BDE5C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001BDEB8;
  block[3] = &unk_1003CFF08;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(&_dispatch_main_q, block);
}

id sub_1001BDEB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleThermalNotification];
}

void sub_1001BE398(id a1)
{
  byte_10046D404 = notify_register_check("com.apple.PineBoard.thermalShutdownNotification", &dword_1004712F8) == 0;
}

void sub_1001BEB14( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1001BEB50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showPowerOffBulletin];
}

void sub_1001BEB7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _requestSleepForReason:PBSSleepReasonUserPower];
}

void sub_1001BF110(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_1001BF1A4;
  _OWORD v4[3] = &unk_1003CFEB8;
  id v5 = a2;
  id v6 = *(id *)(a1 + 32);
  id v3 = v5;
  dispatch_async(&_dispatch_main_q, v4);
}

void sub_1001BF1A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = sub_1000836CC();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10028DE88();
    }
  }

  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "RESTORE: obliterate proceeding during boot. Showing notification.",  buf,  2u);
    }

    SInt32 error = 0;
    CFUserNotificationRef v6 = CFUserNotificationCreate(0LL, 600.0, 1uLL, &error, *(CFDictionaryRef *)(a1 + 40));
    if (v6) {
  }
    }

void sub_1001BF450(id a1, NSArray *a2, NSError *a3)
{
  id v3 = a3;
  id v4 = sub_100082C04();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  CFUserNotificationRef v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10028DEB4();
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Successfully set enhanceDialogueLevel", v7, 2u);
  }
}

void sub_1001BF614(id a1, NSArray *a2, NSError *a3)
{
  id v3 = a3;
  id v4 = sub_100082C04();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  CFUserNotificationRef v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10028DF24();
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Successfully set enhanceDialog", v7, 2u);
  }
}

void sub_1001BF808(id a1, NSArray *a2, NSError *a3)
{
  id v3 = a3;
  id v4 = sub_100082C04();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  CFUserNotificationRef v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10028DF94();
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Successfully set lateNightMode", v7, 2u);
  }
}

id sub_1001C0A04(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1001C0A9C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100471300;
  qword_100471300 = (uint64_t)v1;
}

void sub_1001C0CF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_1001C0D34(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBPictureInPictureManager, v4);
  CFUserNotificationRef v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  uint64_t v9 = objc_opt_self(&OBJC_CLASS___PBSceneManager, v8);
  unsigned __int8 v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  unsigned __int8 v11 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v10]);

  uint64_t v13 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v12);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v14]);

  uint64_t v17 = objc_opt_self(&OBJC_CLASS___PBUserProfileManager, v16);
  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  uint64_t v19 = objc_claimAutoreleasedReturnValue([v3 instanceForClass:v18]);
  uint64_t v20 = *(void *)(a1 + 32);
  __int128 v21 = *(void **)(v20 + 64);
  *(void *)(v20 + 64) = v19;

  uint64_t v23 = objc_opt_self(&OBJC_CLASS___PBPowerManager, v22);
  unsigned __int8 v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  uint64_t v25 = objc_claimAutoreleasedReturnValue([v3 instanceForClass:v24]);
  uint64_t v26 = *(void *)(a1 + 32);
  dispatch_time_t v27 = *(void **)(v26 + 72);
  *(void *)(v26 + 72) = v25;

  uint64_t v29 = objc_opt_self(&OBJC_CLASS___PBSiriManager, v28);
  id v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
  dispatch_time_t v31 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v30]);

  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 64), "addObserver:");
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 72), "addObserver:");
  uint64_t v33 = objc_opt_self(&OBJC_CLASS___PBDictationManager, v32);
  id v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
  __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v34]);

  uint64_t v37 = objc_opt_self(&OBJC_CLASS___PBHomeUIManager, v36);
  uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(v37);
  id v39 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v38]);

  __int128 v40 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  id v41 = (void *)objc_claimAutoreleasedReturnValue([v40 sharedScheduledSleepManager]);

  __int128 v42 = -[PBSystemUIServicePresenter initWithPresentationHandler:sceneManager:pictureInPictureManager:systemHomeUIManager:dictationManager:siriManager:userProfileManager:scheduledSleepManager:]( objc_alloc(&OBJC_CLASS___PBSystemUIServicePresenter),  "initWithPresentationHandler:sceneManager:pictureInPictureManager:systemHomeUIManager:dictationManager:siriMana ger:userProfileManager:scheduledSleepManager:",  v15,  v11,  v7,  v39,  v35,  v31,  *(void *)(*(void *)(a1 + 32) + 64LL),  v41);
  uint64_t v43 = *(void *)(a1 + 32);
  unsigned int v44 = *(void **)(v43 + 16);
  *(void *)(v43 + 16) = v42;

  uint64_t v45 = objc_claimAutoreleasedReturnValue([v11 sceneDeactivationManager]);
  uint64_t v46 = *(void *)(a1 + 32);
  id v47 = *(void **)(v46 + 24);
  *(void *)(v46 + 24) = v45;
}

void sub_1001C0FB8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([(id)objc_opt_class(WeakRetained) isControlCenterEnabled])
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 gestureRecognizer]);
    CFUserNotificationRef v6 = (void *)objc_claimAutoreleasedReturnValue([v5 allowedPressTypes]);
    unsigned int v7 = [v6 containsObject:&off_1003FE130];

    if (v7)
    {
      uint64_t v8 = WeakRetained;
      uint64_t v9 = 2LL;
    }

    else
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[PBUserProfileManager sharedInstance](&OBJC_CLASS___PBUserProfileManager, "sharedInstance"));
      unsigned int v13 = [v12 _hasActiveUserBulletin];

      uint64_t v8 = WeakRetained;
      if (v13) {
        uint64_t v9 = 4LL;
      }
      else {
        uint64_t v9 = 1LL;
      }
    }

    [v8 presentControlCenterForReason:v9];
  }

  else
  {
    id v10 = sub_1000F6A24();
    unsigned __int8 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Control Center is disabled", v14, 2u);
    }
  }
}

void sub_1001C10D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissControlCenter];
}

BOOL sub_1001C1258(uint64_t a1, uint64_t a2, void *a3)
{
  return v4 < *(double *)(a1 + 32);
}

id sub_1001C168C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setFullScreenOverlayActive:", objc_msgSend(*(id *)(a1 + 40), "isActive"));
}

uint64_t sub_1001C1FA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1001C220C(void *a1, int a2)
{
  id v3 = [a1 _hidEvent];
  uint64_t v4 = (uint64_t)v3;
  if (v3)
  {
    uint64_t BaseAttributes = BKSHIDEventGetBaseAttributes(v3);
    CFUserNotificationRef v6 = (void *)objc_claimAutoreleasedReturnValue(BaseAttributes);
    unsigned int v7 = [v6 source];
    if (v7 == 9) {
      goto LABEL_7;
    }
    if (v7 != 4)
    {
      uint64_t v4 = 0LL;
      goto LABEL_9;
    }

    if (a2
      && (uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[PBHIDInterface sharedInstance](&OBJC_CLASS___PBHIDInterface, "sharedInstance")),
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 senderForEvent:v4]),
          v8,
          v9))
    {
      uint64_t v4 = (uint64_t)[v9 isMultiButtonMFIGamePad];
    }

    else
    {
LABEL_7:
      uint64_t v4 = 1LL;
    }

void sub_1001C2568( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1001C258C(uint64_t a1, const __CFArray *a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    [*(id *)(a1 + 32) _failWithMediaRemoteError:v5];
  }

  else
  {
    uint64_t v13 = a1;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    unsigned int v7 = dispatch_group_create();
    v18[0] = 0LL;
    v18[1] = v18;
    _DWORD v18[2] = 0x3032000000LL;
    v18[3] = sub_1001C277C;
    void v18[4] = sub_1001C278C;
    id v19 = 0LL;
    CFIndex Count = CFArrayGetCount(a2);
    if (Count >= 1)
    {
      for (CFIndex i = 0LL; i != Count; ++i)
      {
        ValueAtIndeCGFloat x = CFArrayGetValueAtIndex(a2, i);
        dispatch_group_enter(v7);
        unsigned __int8 v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained client]);
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472LL;
        v15[2] = sub_1001C27A4;
        void v15[3] = &unk_1003DB968;
        uint64_t v17 = v18;
        uint64_t v16 = v7;
        [v11 getPictureInPictureStatusForPlayer:ValueAtIndex completion:v15];
      }
    }

    uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(v13 + 32) queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001C27FC;
    block[3] = &unk_1003D5870;
    void block[4] = WeakRetained;
    void block[5] = v18;
    dispatch_group_notify(v7, v12, block);

    _Block_object_dispose(v18, 8);
    id v5 = 0LL;
  }
}

void sub_1001C2760( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
}

uint64_t sub_1001C277C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001C278C(uint64_t a1)
{
}

void sub_1001C27A4(uint64_t a1, void *a2, int a3)
{
  id v6 = a2;
  if (a3) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

id sub_1001C27FC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;

  return [*(id *)(a1 + 32) satisfyMilestone:@"kPBMRGetPictureInPicturePlayerMilestone"];
}

void sub_1001C2C58( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1001C2C80(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (([WeakRetained isComplete] & 1) == 0 && a2)
  {
    id v10 = 0LL;
    unsigned int v4 = [WeakRetained shouldWatchdog:&v10];
    id v5 = (const __CFString *)v10;
    id v6 = (__CFString *)v5;
    if (v4)
    {
      if (v5) {
        unsigned int v7 = v5;
      }
      else {
        unsigned int v7 = @"MediaRemote took too long to respond";
      }
      [WeakRetained _failForTimeoutWithDescription:v7];
    }

    else
    {
      id v8 = sub_100083474();
      uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
        sub_10028E004((uint64_t)WeakRetained, v9);
      }
    }
  }
}

id sub_1001C2EEC(void *a1)
{
  id v1 = a1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 localizations]);
  if ([v2 count])
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([v3 valueForKey:@"AppleLanguages"]);

    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSBundle preferredLocalizationsFromArray:forPreferences:]( &OBJC_CLASS___NSBundle,  "preferredLocalizationsFromArray:forPreferences:",  v2,  v4));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 firstObject]);
    if (v6
      && (uint64_t v7 = objc_claimAutoreleasedReturnValue([v1 pathForResource:v6 ofType:@"lproj"])) != 0)
    {
      id v8 = (void *)v7;
      id v9 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle bundleWithPath:](&OBJC_CLASS___NSBundle, "bundleWithPath:", v7));
    }

    else
    {
      id v9 = v1;
    }

    id v10 = v9;
  }

  else
  {
    id v10 = v1;
  }

  return v10;
}

id sub_1001C3008(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  id v7 = sub_1001C2EEC(a2);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "foundation_localizedStringForKey:value:table:", v6, 0, v5));

  return v9;
}

id sub_1001C307C(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  id v6 = sub_1001C3008(v4, v5, 0LL);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  return v7;
}

void sub_1001C30F4()
{
  if (qword_100471310 != -1) {
    dispatch_once(&qword_100471310, &stru_1003DB9B0);
  }
}

void sub_1001C312C(id a1)
{
  id v1 = (objc_class *)objc_opt_class(&OBJC_CLASS___NSBundle);
  InstanceMethod = class_getInstanceMethod(v1, "localizedStringForKey:value:table:");
  Implementation = method_getImplementation(InstanceMethod);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  _DWORD v9[2] = sub_1001C320C;
  _OWORD v9[3] = &unk_1003DB9D0;
  void v9[4] = Implementation;
  v9[5] = "localizedStringForKey:value:table:";
  id v4 = objc_retainBlock(v9);
  id v5 = imp_implementationWithBlock(v4);

  id v6 = (objc_class *)objc_opt_class(&OBJC_CLASS___NSBundle);
  class_replaceMethod(v6, "localizedStringForKey:value:table:", v5, 0LL);
  TypeEncoding = method_getTypeEncoding(InstanceMethod);
  id v8 = (objc_class *)objc_opt_class(&OBJC_CLASS___NSBundle);
  class_replaceMethod(v8, "foundation_localizedStringForKey:value:table:", Implementation, TypeEncoding);
}

id sub_1001C320C(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  id v11 = a3;
  id v12 = sub_1001C2EEC(a2);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  uint64_t v14 = (*(uint64_t (**)(void *, void, id, id, id))(a1 + 32))(v13, *(void *)(a1 + 40), v11, v10, v9);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = v10;
  }
  id v17 = v16;

  return v17;
}

void sub_1001C3E2C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = v5[10];
  id v7 = a2;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 _createSceneUsingDescriptor:a3 geometry:v6]);
  [*(id *)(a1 + 40) setObject:v8 forKey:v7];
  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) windowSceneForFBScene:v8]);
  [*(id *)(a1 + 48) setObject:v9 forKey:v7];
}

void sub_1001C4434( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1001C4458(id a1, id a2, FBScene *a3, BOOL *a4)
{
}

void sub_1001C4704(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  *(void *)(*(void *)(a1 + 40) + 8LL)));
  id v4 = [v2 appendObject:v3 withName:@"rootScene"];

  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 96LL);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 activeMultilinePrefix]);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  id v16[2] = sub_1001C489C;
  void v16[3] = &unk_1003DBA60;
  void v16[4] = *(void *)(a1 + 40);
  [v5 appendDictionarySection:v6 withName:@"scenes" multilinePrefix:v7 skipIfEmpty:0 objectTransformer:v16];

  id v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 104LL);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 activeMultilinePrefix]);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_1001C48F4;
  void v15[3] = &unk_1003DBA60;
  void v15[4] = *(void *)(a1 + 40);
  [v8 appendDictionarySection:v9 withName:@"windowScenes" multilinePrefix:v10 skipIfEmpty:0 objectTransformer:v15];

  id v11 = *(void **)(a1 + 32);
  uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 88LL);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v11 activeMultilinePrefix]);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001C494C;
  v14[3] = &unk_1003DBA60;
  void v14[4] = *(void *)(a1 + 40);
  [v11 appendDictionarySection:v12 withName:@"descriptors" multilinePrefix:v13 skipIfEmpty:0 objectTransformer:v14];
}

id sub_1001C489C(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 96) objectForKey:a2]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  v2));

  return v3;
}

id sub_1001C48F4(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 104) objectForKey:a2]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  v2));

  return v3;
}

id sub_1001C494C(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 88) objectForKey:a2]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[BSDescriptionBuilder succinctDescriptionForObject:]( &OBJC_CLASS___BSDescriptionBuilder,  "succinctDescriptionForObject:",  v2));

  return v3;
}

void sub_1001C4DD0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setDisplayConfiguration:v3];
  objc_msgSend(v4, "setFrame:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  [*(id *)(a1 + 40) level];
  objc_msgSend(v4, "setLevel:");
  [v4 setForeground:1];
  [v4 setInterfaceOrientation:1];
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 ignoreOcclusionReasons]);
  [v5 addObject:@"SystemApp"];

  [v4 setUserInterfaceStyle:*(void *)(a1 + 80)];
}

void sub_1001C4E70(id a1, FBSMutableSceneClientSettings *a2)
{
}

void sub_1001C5000(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDomain:@"com.apple.frontboard"];
  [v3 setService:PBSEARCConfiguratorIdentifier];
  [v3 setDelegate:*(void *)(a1 + 32)];
}

void sub_1001C5248(uint64_t a1, void *a2)
{
  id v3 = a2;
  PBSEARCConfigureConnection();
  [v3 setInterruptionHandler:&stru_1003DBAC8];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  id v4[2] = sub_1001C538C;
  _OWORD v4[3] = &unk_1003D2DC8;
  id v5 = *(id *)(a1 + 32);
  [v3 setInvalidationHandler:v4];
  [v3 setInterfaceTarget:*(void *)(a1 + 32)];
}

void sub_1001C52E4(id a1, BSServiceConnectionContext *a2)
{
  id v2 = a2;
  id v3 = sub_100082B14();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    uint64_t v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "PBSEARCConfigurator connection interrupted. {connection=%@}",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_1001C538C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100082B14();
  int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138412290;
    id v7 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "PBSEARCConfigurator connection invalidated. {connection=%@}",  (uint8_t *)&v6,  0xCu);
  }

  [*(id *)(a1 + 32) invalidate];
}

void sub_1001C5E14(id a1, unint64_t a2, NSSecureCoding *a3, NSError *a4)
{
  int v4 = a2;
  int v5 = a4;
  id v6 = sub_100082844();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(-[NSError localizedDescription](v5, "localizedDescription"));
    v9[0] = 67109378;
    v9[1] = v4;
    __int16 v10 = 2112;
    id v11 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "PBS UI dismissed: reason %d, error %@",  (uint8_t *)v9,  0x12u);
  }
}

void sub_1001C5F2C(id a1)
{
  id v1 = -[PBHomeAccessoryManager _init](objc_alloc(&OBJC_CLASS___PBHomeAccessoryManager), "_init");
  id v2 = (void *)qword_100471318;
  qword_100471318 = (uint64_t)v1;
}

void sub_1001C61A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1001C61E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained stateMachine]);
  [v2 postEvent:@"LockdownDeviceNameDidChange"];
}

CFStringRef sub_1001C6384(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 localAccessory]);

  uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 home]);
  if (!v4) {
    goto LABEL_4;
  }
  int v5 = (void *)v4;
  uint64_t v6 = objc_claimAutoreleasedReturnValue([v3 room]);
  if (!v6)
  {
    uint64_t v9 = @"CustomName";
LABEL_14:

    goto LABEL_15;
  }

  id v7 = (void *)v6;
  unsigned __int8 v8 = [(id)objc_opt_class(*(void *)(a1 + 32)) _isAccessoryInDefaultRoom:v3];

  if ((v8 & 1) == 0)
  {
    __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([v3 configuredName]);
    id v11 = [v10 length];

    if (v11)
    {
      int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 configuredName]);
      uint64_t v12 = TVCSHomeLog(v5);
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        int v18 = 136315394;
        id v19 = "-[PBHomeAccessoryManager _initializeStateMachine]_block_invoke";
        __int16 v20 = 2112;
        __int128 v21 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%s: Setting lockdown device name to %@.",  (uint8_t *)&v18,  0x16u);
      }

      uint64_t v9 = @"TrackingAccessory";
    }

    else
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v3 room]);
      int v5 = (void *)objc_claimAutoreleasedReturnValue([v14 name]);

      uint64_t v16 = TVCSHomeLog(v15);
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        int v18 = 136315394;
        id v19 = "-[PBHomeAccessoryManager _initializeStateMachine]_block_invoke";
        __int16 v20 = 2112;
        __int128 v21 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%s: Setting lockdown device name to %@.",  (uint8_t *)&v18,  0x16u);
      }

      uint64_t v9 = @"TrackingRoom";
    }

    +[TVCSLockdownUtilities setDeviceName:](&OBJC_CLASS___TVCSLockdownUtilities, "setDeviceName:", v5);
    goto LABEL_14;
  }

CFStringRef sub_1001C65A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
  int v5 = (void *)objc_claimAutoreleasedReturnValue([v4 localAccessory]);

  uint64_t v6 = objc_claimAutoreleasedReturnValue([v5 home]);
  if (!v6) {
    goto LABEL_4;
  }
  id v7 = (void *)v6;
  uint64_t v8 = objc_claimAutoreleasedReturnValue([v5 room]);
  if (!v8)
  {
    id v11 = @"CustomName";
LABEL_13:

    goto LABEL_14;
  }

  uint64_t v9 = (void *)v8;
  unsigned __int8 v10 = [(id)objc_opt_class(*(void *)(a1 + 32)) _isAccessoryInDefaultRoom:v5];

  if ((v10 & 1) == 0)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSLockdownUtilities deviceNameByRemovingBonjourSuffix]( &OBJC_CLASS___TVCSLockdownUtilities,  "deviceNameByRemovingBonjourSuffix"));
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v5 room]);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 name]);
    id v14 = [v7 caseInsensitiveCompare:v13];

    if (v14)
    {
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v5 configuredName]);
      id v16 = [v7 compare:v15 options:1];

      if (v16)
      {
        uint64_t v18 = TVCSHomeLog(v17);
        id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136315394;
          unsigned __int8 v24 = "-[PBHomeAccessoryManager _initializeStateMachine]_block_invoke";
          __int16 v25 = 2112;
          uint64_t v26 = v7;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "%s: Setting accessory name to %@.",  buf,  0x16u);
        }

        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472LL;
        _DWORD v21[2] = sub_1001C67D8;
        v21[3] = &unk_1003D1F08;
        id v22 = v3;
        [v5 setConfiguredName:v7 completionHandler:v21];
      }

      id v11 = @"TrackingAccessory";
    }

    else
    {
      id v11 = @"TrackingRoom";
    }

    goto LABEL_13;
  }

void sub_1001C67D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = TVCSHomeLog(v3);
  int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10028EEEC();
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 136315138;
    uint64_t v8 = "-[PBHomeAccessoryManager _initializeStateMachine]_block_invoke";
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%s: Updated accessory name.",  (uint8_t *)&v7,  0xCu);
  }

  [*(id *)(a1 + 32) postEvent:@"LocalAccessoryInfoDidUpdate"];
}

CFStringRef sub_1001C68C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
  int v5 = (void *)objc_claimAutoreleasedReturnValue([v4 localAccessory]);

  uint64_t v6 = objc_claimAutoreleasedReturnValue([v5 home]);
  if (!v6) {
    goto LABEL_4;
  }
  int v7 = (void *)v6;
  uint64_t v8 = objc_claimAutoreleasedReturnValue([v5 room]);
  if (!v8)
  {
    id v11 = @"CustomName";
LABEL_19:

    goto LABEL_20;
  }

  uint64_t v9 = (void *)v8;
  unsigned __int8 v10 = [(id)objc_opt_class(*(void *)(a1 + 32)) _isAccessoryInDefaultRoom:v5];

  if ((v10 & 1) == 0)
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v5 configuredName]);
    id v13 = [v12 length];

    if (v13)
    {
      int v7 = (void *)objc_claimAutoreleasedReturnValue([v5 configuredName]);
      uint64_t v14 = TVCSHomeLog(v7);
      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136315394;
        uint64_t v28 = "-[PBHomeAccessoryManager _initializeStateMachine]_block_invoke";
        __int16 v29 = 2112;
        id v30 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%s: Setting lockdown device name to %@.",  buf,  0x16u);
      }

      +[TVCSLockdownUtilities setDeviceName:](&OBJC_CLASS___TVCSLockdownUtilities, "setDeviceName:", v7);
      id v11 = @"TrackingAccessory";
    }

    else
    {
      int v7 = (void *)objc_claimAutoreleasedReturnValue( +[TVCSLockdownUtilities deviceNameByRemovingBonjourSuffix]( &OBJC_CLASS___TVCSLockdownUtilities,  "deviceNameByRemovingBonjourSuffix"));
      if (([(id)objc_opt_class(*(void *)(a1 + 32)) _isDeviceNameAppleTV:v7] & 1) != 0
        || (id v16 = [(id)objc_opt_class(*(void *)(a1 + 32)) _isDeviceName:v7 roomNameInAccessory:v5],
            (_DWORD)v16))
      {
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v5 room]);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 name]);

        uint64_t v20 = TVCSHomeLog(v19);
        __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136315394;
          uint64_t v28 = "-[PBHomeAccessoryManager _initializeStateMachine]_block_invoke";
          __int16 v29 = 2112;
          id v30 = v18;
          _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "%s: Setting lockdown device name to %@.",  buf,  0x16u);
        }

        +[TVCSLockdownUtilities setDeviceName:](&OBJC_CLASS___TVCSLockdownUtilities, "setDeviceName:", v18);
        id v11 = @"TrackingRoom";
      }

      else
      {
        uint64_t v22 = TVCSHomeLog(v16);
        uint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136315394;
          uint64_t v28 = "-[PBHomeAccessoryManager _initializeStateMachine]_block_invoke";
          __int16 v29 = 2112;
          id v30 = v7;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "%s: Setting accessory name to %@.",  buf,  0x16u);
        }

        v25[0] = _NSConcreteStackBlock;
        v25[1] = 3221225472LL;
        void v25[2] = sub_1001C6C04;
        v25[3] = &unk_1003D1F08;
        id v26 = v3;
        [v5 setConfiguredName:v7 completionHandler:v25];
        id v11 = @"TrackingAccessory";
        uint64_t v18 = v26;
      }
    }

    goto LABEL_19;
  }

void sub_1001C6C04(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = TVCSHomeLog(v3);
  int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10028EEEC();
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 136315138;
    uint64_t v8 = "-[PBHomeAccessoryManager _initializeStateMachine]_block_invoke";
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%s: Updated accessory name.",  (uint8_t *)&v7,  0xCu);
  }

  [*(id *)(a1 + 32) postEvent:@"LocalAccessoryInfoDidUpdate"];
}

id sub_1001C6F7C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 72) addObject:*(void *)(a1 + 40)];
}

id sub_1001C7024(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 72) removeObject:*(void *)(a1 + 40)];
}

BOOL sub_1001C73AC(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  int v5 = *(void **)(a1 + 32);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a2 name]);
  id v7 = [v5 caseInsensitiveCompare:v6];

  if (!v7) {
    *a4 = 1;
  }
  return v7 == 0LL;
}

BOOL sub_1001C740C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id v5 = [*(id *)(a1 + 32) caseInsensitiveCompare:a2];
  if (!v5) {
    *a4 = 1;
  }
  return v5 == 0LL;
}

void sub_1001C74C4(id a1)
{
  id v1 = -[NSRegularExpression initWithPattern:options:error:]( objc_alloc(&OBJC_CLASS___NSRegularExpression),  "initWithPattern:options:error:",  @"^Apple\\sTV$",  1LL,  0LL);
  id v2 = (void *)qword_100471330;
  qword_100471330 = (uint64_t)v1;
}

id sub_1001C77B0(uint64_t a1)
{
  v4[1] = @"value";
  v5[0] = @"secsuntilready";
  v4[0] = @"measure";
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 32)));
  v5[1] = v1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return v2;
}

void sub_1001C7BB8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = v5;
  if (a2)
  {
    [*(id *)(a1 + 32) _moveOrAddLocalAccessoryToRoomWithName:*(void *)(a1 + 40) inHome:a2];
  }

  else
  {
    uint64_t v7 = TVCSHomeLog(v5);
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10028EFD4();
    }

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _homeOnboardingStateMachine]);
    [v9 postEvent:@"OnboardingFailure"];
  }
}

BOOL sub_1001C7DB0(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a2 name]);
  id v7 = [v6 caseInsensitiveCompare:*(void *)(a1 + 32)];

  if (!v7) {
    *a4 = 1;
  }
  return v7 == 0LL;
}

void sub_1001C7E0C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = v5;
  if (a2)
  {
    [*(id *)(a1 + 32) _moveOrAddLocalAccessoryToRoom:a2 inHome:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v7 = TVCSHomeLog(v5);
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10028F040(a1, (uint64_t)v6, v8);
    }

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _homeOnboardingStateMachine]);
    [v9 postEvent:@"OnboardingFailure"];
  }
}

void sub_1001C7F48(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = TVCSHomeLog(v3);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10028F0D8();
    }

    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _homeOnboardingStateMachine]);
    [v7 postEvent:@"OnboardingFailure"];
  }

  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136315138;
      __int128 v21 = "-[PBHomeAccessoryManager _moveOrAddLocalAccessoryToRoom:inHome:]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%s: Configure local accessory complete.",  buf,  0xCu);
    }

    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _homeOnboardingStateMachine]);
    [v8 postEvent:@"OnboardingSuccess"];

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "pbs_buddySelectedHomeTheaterSpeakerIdentifier"));

    if (v7)
    {
      uint64_t v11 = TVCSHomeLog(v10);
      uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136315394;
        __int128 v21 = "-[PBHomeAccessoryManager _moveOrAddLocalAccessoryToRoom:inHome:]_block_invoke";
        __int16 v22 = 2112;
        uint64_t v23 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%s: Configure local accessory complete. Will try to update audio destination. speakerIdentifier=%@",  buf,  0x16u);
      }

      id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 odeonPromptHistory]);
      id v15 = [v14 mutableCopy];

      [v15 addObject:v7];
      id v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
      id v17 = [v15 copy];
      [v16 setOdeonPromptHistory:v17];

      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472LL;
      _DWORD v19[2] = sub_1001C81D4;
      v19[3] = &unk_1003D28B0;
      void v19[4] = *(void *)(a1 + 32);
      [v18 updateLocalAccessoryAudioDestinationUniqueIdentifier:v7 forceUpdateWithUnavailableDestination:1 completionHandler:v19];
    }
  }
}

void sub_1001C81D4(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = TVCSHomeLog(v5);
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 136315650;
    uint64_t v10 = "-[PBHomeAccessoryManager _moveOrAddLocalAccessoryToRoom:inHome:]_block_invoke";
    __int16 v11 = 1024;
    int v12 = a2;
    __int16 v13 = 2112;
    id v14 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%s: Update audio destination complete. success=%{BOOL}d, error=%@",  (uint8_t *)&v9,  0x1Cu);
  }

  uint64_t v8 = *(void **)(a1 + 32);
  if (a2) {
    [v8 _startBuddyHomeTheaterTimer];
  }
  else {
    [v8 _clearBuddySelectedHomeTheaterPreferences];
  }
}

void sub_1001C86B8(_Unwind_Exception *a1)
{
}

id sub_1001C8714(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pbs_buddySelectedRoomName"));
  if ([v2 length])
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
    id v4 = [v3 isDeviceNameModificationAllowed];
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

CFStringRef sub_1001C8794(uint64_t a1, void *a2)
{
  return @"Finished";
}

NSString *__cdecl sub_1001C87F8(id a1, TVSStateMachine *a2, NSString *a3, id a4, NSDictionary *a5)
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance", a3, a4, a5));
  [v5 startBrowsingForLocalAccessory];

  return (NSString *)@"Browsing";
}

CFStringRef sub_1001C8834(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TVCSHomeManager sharedInstance](&OBJC_CLASS___TVCSHomeManager, "sharedInstance"));
  [v2 stopBrowsingForLocalAccessory];

  activity_block[0] = _NSConcreteStackBlock;
  activity_block[1] = 3221225472LL;
  activity_block[2] = sub_1001C88E0;
  activity_block[3] = &unk_1003D0890;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  _os_activity_initiate( (void *)&_mh_execute_header,  "configure local accessory",  OS_ACTIVITY_FLAG_DEFAULT,  activity_block);
  objc_destroyWeak(&v5);
  return @"Onboarding";
}

void sub_1001C88E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _configureLocalAccessory];
}

CFStringRef sub_1001C890C(uint64_t a1)
{
  return @"Finished";
}

CFStringRef sub_1001C8930(uint64_t a1)
{
  return @"Idle";
}

__CFString *sub_1001C8950(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16LL))())
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v5 = [WeakRetained _homeConfigurationState];

    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore defaultStore](&OBJC_CLASS___ACAccountStore, "defaultStore"));
    uint64_t v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "aa_primaryAppleAccount"));
    uint64_t v8 = (void *)v7;
    if (v5 == (id)2)
    {
      int v9 = @"BeginBrowsing";
    }

    else
    {
      if (v5 != (id)3)
      {
        if (!v7)
        {
          objc_msgSend(*(id *)(a1 + 32), "pbs_setNeedsHomeKitAutoOnboarding:", 0);
          uint64_t v10 = @"Finished";
          goto LABEL_10;
        }

void sub_1001C8B34( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1001C8B50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    __int128 v10 = 0u;
    __int128 v11 = 0u;
    __int128 v8 = 0u;
    __int128 v9 = 0u;
    id v3 = *(id *)(*(void *)(a1 + 32) + 72LL);
    id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v9;
      do
      {
        uint64_t v7 = 0LL;
        do
        {
          if (*(void *)v9 != v6) {
            objc_enumerationMutation(v3);
          }
          objc_msgSend( *(id *)(*((void *)&v8 + 1) + 8 * (void)v7),  "homeAccessoryManager:didChangeOdeonConfigured:",  WeakRetained,  *(unsigned __int8 *)(a1 + 48),  (void)v8);
          uint64_t v7 = (char *)v7 + 1;
        }

        while (v5 != v7);
        id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
      }

      while (v5);
    }
  }
}

void sub_1001C8F14(void *a1)
{
  id v1 = a1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TVPAudioVideoSettings sharedInstance](&OBJC_CLASS___TVPAudioVideoSettings, "sharedInstance"));
  unsigned int v3 = [v2 transitionSoundEffectsEnabled];

  if (v3)
  {
    sub_1001C8F84(0x468u, v1);
  }

  else if (v1)
  {
    v1[2](v1);
  }
}

void sub_1001C8F84(SystemSoundID a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[PBPowerManager sharedInstance](&OBJC_CLASS___PBPowerManager, "sharedInstance"));
  id v5 = [v4 powerState];

  if (v5 == (id)1)
  {
    AudioServicesPlaySystemSoundWithCompletion(a1, v3);
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a1;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Ignoring request to play system sound [%u] as we are asleep",  (uint8_t *)v6,  8u);
  }
}

void sub_1001C906C(void *a1)
{
  id v1 = a1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TVPAudioVideoSettings sharedInstance](&OBJC_CLASS___TVPAudioVideoSettings, "sharedInstance"));
  unsigned int v3 = [v2 transitionSoundEffectsEnabled];

  if (v3)
  {
    sub_1001C8F84(0x469u, v1);
  }

  else if (v1)
  {
    v1[2](v1);
  }
}

void sub_1001C90DC(void *a1)
{
}

void sub_1001C90F8(void *a1)
{
}

void sub_1001C9114(void *a1)
{
  uint64_t v1 = qword_100471340;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&qword_100471340, &stru_1003DBCC8);
  }
  sub_1001C8F84(dword_100471348, v2);
}

void sub_1001C9170(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  id v2 = (const __CFURL *)objc_claimAutoreleasedReturnValue([v1 URLForResource:@"BOOP" withExtension:@"wav"]);

  AudioServicesCreateSystemSoundID(v2, (SystemSoundID *)&dword_100471348);
}

void sub_1001C91D0()
{
  uint64_t v0 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 firstObject]);
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([v2 stringByAppendingPathComponent:off_10046D7D0]);

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v48 = 0LL;
  unsigned __int8 v5 = [v4 createDirectoryAtPath:v3 withIntermediateDirectories:1 attributes:0 error:&v48];
  id v6 = v48;

  if ((v5 & 1) == 0 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_10028F330();
  }
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 stringByAppendingPathComponent:off_10046D7D8]);
  __int128 v8 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 firstObject]);
  __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 stringByAppendingPathComponent:off_10046D7D0]);

  int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 stringByAppendingPathComponent:off_10046D7D8]);
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 138543362;
    __int16 v51 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Reading boot count from %{public}@",  buf,  0xCu);
  }

  int v49 = 0;
  id v13 = v12;
  id v14 = fopen((const char *)[v13 UTF8String], "r");
  if (v14)
  {
    id v15 = v14;
    int v16 = fscanf(v14, "%d", &v49);
    if (fclose(v15) && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_10028F1B0();
    }
    if (v16 == 1)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_21;
      }
      *(_DWORD *)__int128 buf = 67109120;
      LODWORD(v51) = v49;
      id v17 = "Boot count:%d";
      uint32_t v18 = 8;
LABEL_20:
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, v17, buf, v18);
      goto LABEL_21;
    }

    BOOL v27 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
    if (v27) {
      sub_10028F2FC(v27, v28, v29, v30, v31, v32, v33, v34);
    }
  }

  else
  {
    uint64_t v19 = *__error();
    if (!(_DWORD)v19)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_21;
      }
      *(_WORD *)__int128 buf = 0;
      id v17 = "No boot count file. Clean boot.";
      uint32_t v18 = 2;
      goto LABEL_20;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_10028F290(v19, v20, v21, v22, v23, v24, v25, v26);
    }
  }

void sub_1001C9628()
{
  uint64_t v0 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 firstObject]);
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([v2 stringByAppendingPathComponent:off_10046D7D0]);

  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 stringByAppendingPathComponent:off_10046D7D8]);
  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  if ([v5 fileExistsAtPath:v4])
  {
    id v10 = 0LL;
    unsigned __int8 v6 = [v5 removeItemAtPath:v4 error:&v10];
    id v7 = v10;
    if ((v6 & 1) != 0)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Boot count file cleared.",  buf,  2u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_10028F398();
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 v8 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "Boot count file not present - already cleared.",  v8,  2u);
  }
}

void sub_1001C97A0()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
  unsigned int v1 = [v0 BOOLForKey:@"_ObliterateSkipAccountReset" defaultValue:0];

  id v2 = sub_1000836CC();
  unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v1)
  {
    if (v4)
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "OBLIT: Default found; skipping all account reset actions.",
        buf,
        2u);
    }

    unsigned __int8 v5 = dispatch_group_create();
  }

  else
  {
    if (v4)
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "OBLIT: Deregistering from IDS.", buf, 2u);
    }

    IDSHardDeregister(15LL);
    id v6 = sub_1000836CC();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "OBLIT: Unregistering all Apple Accounts.",  buf,  2u);
    }

    AKUnregisterAllAppleIDs(15LL);
    unsigned __int8 v5 = dispatch_group_create();
    id v8 = sub_1000836CC();
    __int128 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "OBLIT: Deleting all accounts.", buf, 2u);
    }

    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore defaultStore](&OBJC_CLASS___ACAccountStore, "defaultStore"));
    __int128 v34 = 0u;
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([v10 accounts]);
    id v11 = [obj countByEnumeratingWithState:&v34 objects:v42 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v35;
      do
      {
        for (CFIndex i = 0LL; i != v12; CFIndex i = (char *)i + 1)
        {
          if (*(void *)v35 != v13) {
            objc_enumerationMutation(obj);
          }
          uint64_t v15 = *(void *)(*((void *)&v34 + 1) + 8LL * (void)i);
          id v16 = sub_1000836CC();
          id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)__int128 buf = 134218242;
            uint64_t v39 = v15;
            __int16 v40 = 2112;
            uint64_t v41 = v15;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "OBLIT: Deleting account. {account_ptr=%p, account=%@}",  buf,  0x16u);
          }

          dispatch_group_enter(v5);
          v32[0] = _NSConcreteStackBlock;
          v32[1] = 3221225472LL;
          id v32[2] = sub_1001C9B8C;
          v32[3] = &unk_1003D4A98;
          void v32[4] = v15;
          uint64_t v33 = v5;
          [v10 removeAccount:v15 withCompletionHandler:v32];
        }

        id v12 = [obj countByEnumeratingWithState:&v34 objects:v42 count:16];
      }

      while (v12);
    }
  }

  dispatch_time_t v18 = dispatch_time(0LL, 120000000000LL);
  uint64_t v19 = dispatch_group_wait(v5, v18);
  if (v19 == 49)
  {
    id v22 = sub_1000836CC();
    uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_10028F460(v21, v23, v24, v25, v26, v27, v28, v29);
    }
  }

  else if (v19)
  {
    id v30 = sub_1000836CC();
    uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_10028F400();
    }
  }

  else
  {
    id v20 = sub_1000836CC();
    uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "OBLIT: Completed account reset actions.",  buf,  2u);
    }
  }
}

void sub_1001C9B8C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v6 = sub_1000836CC();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10028F490(a1, v5, v7);
    }
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

uint64_t sub_1001C9BFC()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[PBSystemActivationManager sharedInstance](&OBJC_CLASS___PBSystemActivationManager, "sharedInstance"));
  id v1 = [v0 activationState];

  LODWORD(result) = BYSetupAssistantNeedsToRun();
  if (v1 == (id)3) {
    return 0LL;
  }
  else {
    return result;
  }
}

uint64_t sub_1001C9C40()
{
  return BYSetupAssistantHasCompletedInitialRun();
}

double sub_1001C9C54()
{
  if (qword_100471358 != -1) {
    dispatch_once(&qword_100471358, &stru_1003DBCE8);
  }
  return *(double *)&qword_100471350;
}

void sub_1001C9C94(id a1)
{
  LODWORD(v1) = info.numer;
  LODWORD(v2) = info.denom;
  *(double *)&qword_100471350 = (double)v1 / (double)v2 / 1000000000.0;
}

id sub_1001C9CD8()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[MSDKManagedDevice sharedInstance](&OBJC_CLASS___MSDKManagedDevice, "sharedInstance"));
  id v6 = 0LL;
  id v1 = [v0 isContentFrozen:&v6];
  id v2 = v6;

  if (v2)
  {
    id v3 = sub_1000F712C();
    BOOL v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10028F568();
    }
  }

  return v1;
}

id sub_1001C9D6C()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[MSDKManagedDevice sharedInstance](&OBJC_CLASS___MSDKManagedDevice, "sharedInstance"));
  id v6 = 0LL;
  id v1 = [v0 isEnrolled:&v6];
  id v2 = v6;

  if (v2)
  {
    id v3 = sub_1000F712C();
    BOOL v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10028F5C8();
    }
  }

  return v1;
}

id sub_1001C9E00()
{
  id result = (id)_os_feature_enabled_impl("PineBoard", "Werewolf");
  if ((_DWORD)result) {
    return +[TVSDevice supportsUltrawide](&OBJC_CLASS___TVSDevice, "supportsUltrawide");
  }
  return result;
}

id sub_1001C9E34()
{
  id result = (id)_os_feature_enabled_impl("PineBoard", "Werewolf");
  if ((_DWORD)result)
  {
    id result = +[TVSDevice supportsUltrawide](&OBJC_CLASS___TVSDevice, "supportsUltrawide");
    if ((_DWORD)result)
    {
      id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
      [v1 softwareDisplaySize];
      double v3 = v2;
      double v5 = v4;

      return (id)(PBSDisplaySizeResolvesTo16x9(v3, v5) ^ 1);
    }
  }

  return result;
}

uint64_t sub_1001C9EB0()
{
  BOOL IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  if (_os_feature_enabled_impl("PineBoard", "Werewolf")
    && +[TVSDevice supportsUltrawide](&OBJC_CLASS___TVSDevice, "supportsUltrawide"))
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
    [v1 softwareDisplaySize];
    double v3 = v2;
    double v5 = v4;

    return IsReduceMotionEnabled | PBSDisplaySizeResolvesTo16x9(v3, v5) ^ 1;
  }

  return IsReduceMotionEnabled;
}

int *sub_1001C9F3C()
{
  return __error();
}

void sub_1001CABAC(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  double v2 = (void *)qword_100471360;
  qword_100471360 = (uint64_t)v1;
}

void sub_1001CB018(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PineBoard sharedApplication](&OBJC_CLASS___PineBoard, "sharedApplication"));
  double v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"));
  double v3 = (void *)objc_claimAutoreleasedReturnValue([v2 bundleIdentifier]);
  [v1 relaunchRequestedByClient:v3];
}

BOOL sub_1001CB1B0(id a1, PBSAppInfo *a2)
{
  double v2 = a2;
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___PBAppInfo);
  double v4 = v2;
  double v5 = v4;
  if (v3)
  {
    if ((objc_opt_isKindOfClass(v4, v3) & 1) != 0) {
      id v6 = v5;
    }
    else {
      id v6 = 0LL;
    }
  }

  else
  {
    id v6 = 0LL;
  }

  id v7 = v6;

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[PBSAppInfo applicationInfo](v7, "applicationInfo"));
  LOBYTE(v7) = [v8 hasRunAsCurrentUserEntitlement];

  return (char)v7;
}

void sub_1001CB3D4(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  uint64_t v3 = *(void *)(a1 + 32);
  double v4 = *(void **)(v3 + 64);
  *(void *)(v3 + 64) = v2;

  double v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) appInfos]);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_1001CB47C;
  void v6[3] = &unk_1003D4F20;
  id v7 = *(id *)(a1 + 32);
  [v5 enumerateKeysAndObjectsUsingBlock:v6];
}

id sub_1001CB47C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) addObject:a2];
}

void sub_1001CB5F8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_1001CB670;
  _OWORD v5[3] = &unk_1003CFEB8;
  id v3 = v2;
  uint64_t v4 = *(void *)(a1 + 40);
  id v6 = v3;
  uint64_t v7 = v4;
  [v3 appendBodySectionWithName:0 multilinePrefix:0 block:v5];
}

void sub_1001CB670(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 16) allObjects]);
  [v2 appendArraySection:v3 withName:@"updatingApplicationIdentifiers" skipIfEmpty:0];

  id v4 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 24) withName:@"updatingUserProfile"];
  id v5 =  [*(id *)(a1 + 32) appendObject:*(void *)(*(void *)(a1 + 40) + 56) withName:@"selectedUserProfile"];
  id v6 = *(void **)(a1 + 32);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 64) allObjects]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activeMultilinePrefix]);
  [v6 appendArraySection:v7 withName:@"personaEnabledApplicationIdentifiers" multilinePrefix:v8 skipIfEmpty:0];
}

uint64_t sub_1001CB804(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001CB814(uint64_t a1)
{
}

void sub_1001CB82C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 16) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1001CB928(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1001CBA50(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_1001CBAD0;
  void v3[3] = &unk_1003D0110;
  id v4 = *(id *)(a1 + 48);
  id v2 = objc_retainBlock(v3);
  objc_msgSend( *(id *)(a1 + 32),  "_workQueue_quitApplicationsRunningWithPersonaUniqueString:completionHandler:",  *(void *)(a1 + 40),  v2);
}

uint64_t sub_1001CBAD0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1001CBB78(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

id sub_1001CBED8()
{
  if (qword_100471388 != -1) {
    dispatch_once(&qword_100471388, &stru_1003DBEE8);
  }
  return (id)qword_100471380;
}

void sub_1001CC5D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
}

void sub_1001CC674(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    dispatch_assert_queue_not_V2(*((dispatch_queue_t *)WeakRetained + 4));
    id v4 = (dispatch_queue_s *)v3[4];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001CC770;
    block[3] = &unk_1003DBD50;
    void block[4] = v3;
    id v10 = *(id *)(a1 + 32);
    id v11 = *(id *)(a1 + 40);
    __int128 v5 = *(_OWORD *)(a1 + 64);
    __int128 v12 = *(_OWORD *)(a1 + 48);
    __int128 v13 = v5;
    dispatch_sync(v4, block);
    id v6 = sub_100084518();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Will begin updating applications.", v8, 2u);
    }
  }
}

void sub_1001CC770(uint64_t a1)
{
  id v2 = *(void **)(a1 + 40);
  id v3 = sub_1001CBED8();
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  LODWORD(v2) = [v2 containsObject:v4];

  __int128 v5 = *(void **)(a1 + 56);
  if ((_DWORD)v2)
  {
    uint64_t v6 = objc_claimAutoreleasedReturnValue( [v5 preventKioskRelaunchWithReason:@"UserProfileSwitch" forTerminatingApplications:&stru_1003DCEB0]);
    uint64_t v7 = *(void *)(*(void *)(a1 + 72) + 8LL);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    uint64_t v9 = objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 64) shroudApplicationsUsingPredicate:&stru_1003D7D10 style:1 completion:0]);
  }

  else
  {
    uint64_t v10 = objc_claimAutoreleasedReturnValue( [v5 preventKioskRelaunchForTerminatingBundleIDs:*(void *)(a1 + 40) reason:@"UserProfileSwitch"]);
    uint64_t v11 = *(void *)(*(void *)(a1 + 72) + 8LL);
    __int128 v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    uint64_t v9 = objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 64) shroudApplicationsWithBundleIDs:*(void *)(a1 + 40) style:1 completion:0]);
  }

  uint64_t v13 = *(void *)(*(void *)(a1 + 80) + 8LL);
  id v14 = *(void **)(v13 + 40);
  *(void *)(v13 + 40) = v9;
}

void sub_1001CC88C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = -[PBModifyPersonaApplicationIdentifiersOperation initWithPersonaUniqueString:applicationIdentifiers:]( objc_alloc(&OBJC_CLASS___PBModifyPersonaApplicationIdentifiersOperation),  "initWithPersonaUniqueString:applicationIdentifiers:",  v6,  v5);

  [*(id *)(*(void *)(a1 + 32) + 40) addOperation:v7];
}

void sub_1001CC90C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    dispatch_assert_queue_not_V2(*((dispatch_queue_t *)WeakRetained + 4));
    id v4 = (dispatch_queue_s *)v3[4];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001CC9D4;
    block[3] = &unk_1003D5C40;
    void block[4] = v3;
    __int128 v9 = *(_OWORD *)(a1 + 32);
    dispatch_sync(v4, block);
    id v5 = sub_100084518();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Did finish updating applications.", v7, 2u);
    }
  }
}

id sub_1001CC9D4(void *a1)
{
  *(_BYTE *)(a1[4] + 8LL) = 0;
  uint64_t v2 = a1[4];
  id v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0LL;

  uint64_t v4 = a1[4];
  id v5 = *(void **)(v4 + 24);
  *(void *)(v4 + 24) = 0LL;

  [*(id *)(*(void *)(a1[5] + 8) + 40) invalidate];
  return [*(id *)(*(void *)(a1[6] + 8) + 40) invalidate];
}

void sub_1001CCAF0(_Unwind_Exception *a1)
{
}

void sub_1001CCB0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = (void *)*((void *)WeakRetained + 6);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_1001CCBA0;
    _OWORD v5[3] = &unk_1003DBE68;
    void v5[4] = WeakRetained;
    id v6 = *(id *)(a1 + 32);
    [v4 enumerateObserversUsingBlock:v5];
  }
}

void sub_1001CCBA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "userProfileApplicationManager:willUpdateApplicationsWithIdentifiers:") & 1) != 0) {
    [v3 userProfileApplicationManager:*(void *)(a1 + 32) willUpdateApplicationsWithIdentifiers:*(void *)(a1 + 40)];
  }
}

void sub_1001CCC9C(_Unwind_Exception *a1)
{
}

void sub_1001CCCB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = (void *)*((void *)WeakRetained + 6);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_1001CCD4C;
    _OWORD v5[3] = &unk_1003DBE68;
    void v5[4] = WeakRetained;
    id v6 = *(id *)(a1 + 32);
    [v4 enumerateObserversUsingBlock:v5];
  }
}

void sub_1001CCD4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "userProfileApplicationManager:didUpdateApplicationsWithIdentifiers:") & 1) != 0) {
    [v3 userProfileApplicationManager:*(void *)(a1 + 32) didUpdateApplicationsWithIdentifiers:*(void *)(a1 + 40)];
  }
}

os_log_s *sub_1001CD024(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___LSApplicationIdentity);
  uint64_t v6 = *(void *)(a1 + 32);
  id v5 = (uint64_t *)(a1 + 32);
  id v17 = 0LL;
  id v7 = [v4 initWithBundleIdentifier:v3 allowPlaceholder:0 personaUniqueString:v6 error:&v17];
  id v8 = v17;
  if (v7)
  {
    __int128 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[RBSProcessIdentity identityForLSApplicationIdentity:]( &OBJC_CLASS___RBSProcessIdentity,  "identityForLSApplicationIdentity:",  v7));
    uint64_t v10 = v9;
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = v10;
    }

    else
    {
      id v13 = sub_100084518();
      id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_10028F81C((uint64_t)v3, v5, v14);
      }

      uint64_t v11 = 0LL;
    }
  }

  else
  {
    id v12 = sub_100084518();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v16 = *v5;
      *(_DWORD *)__int128 buf = 138413058;
      id v19 = v3;
      __int16 v20 = 2160;
      uint64_t v21 = 1752392040LL;
      __int16 v22 = 2112;
      uint64_t v23 = v16;
      __int16 v24 = 2114;
      id v25 = v8;
      _os_log_error_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "Failed to obtain application identity. {bundleIdentifier=%@, personaUniqueString=%{mask.hash}@, error=%{public}@}",  buf,  0x2Au);
    }

    uint64_t v11 = 0LL;
  }

  return v11;
}

uint64_t sub_1001CD1C4(uint64_t a1)
{
  id v2 = sub_100084518();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 141558274;
    uint64_t v7 = 1752392040LL;
    __int16 v8 = 2112;
    uint64_t v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Finished terminating applications running with persona. {personaUniqueString=%{mask.hash}@}",  (uint8_t *)&v6,  0x16u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

id sub_1001CD6D0(uint64_t a1)
{
  return [*(id *)(a1 + 32) applyInputModesChanges];
}

id sub_1001CD6E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) applyPreferredLanguagesChanges];
}

void sub_1001CD758(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  @"com.apple.Arcade",  @"com.apple.podcasts",  @"com.apple.TVAppStore",  @"com.apple.TVMovies",  @"com.apple.TVMusic",  @"com.apple.TVPhotos",  @"com.apple.TVShows",  @"com.apple.TVWatchList",  0LL));
  id v2 = (void *)qword_100471370;
  qword_100471370 = v1;
}

NSString *__cdecl sub_1001CD93C(id a1, PBAppInfo *a2)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(-[PBAppInfo bundleIdentifier](a2, "bundleIdentifier"));
}

void sub_1001CD95C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = sub_100084518();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "App info controller did update.", v5, 2u);
    }

    [WeakRetained[8] unionSet:*(void *)(a1 + 32)];
    [WeakRetained[8] minusSet:*(void *)(a1 + 40)];
    objc_msgSend( WeakRetained,  "_workQueue_didUpdatePersonaEnabledApplicationsWithAddedApplicationIdentifiers:removedApplicationIdentifiers:",  *(void *)(a1 + 32),  *(void *)(a1 + 40));
  }
}

void sub_1001CDABC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_100084518();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
      int v6 = 138543362;
      uint64_t v7 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Process new selected user called. {identifier=%{public}@}",  (uint8_t *)&v6,  0xCu);
    }

    objc_msgSend(WeakRetained, "_workQueue_setSelectedUserProfile:", *(void *)(a1 + 32));
  }
}

void sub_1001CDC4C(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"AnyApplication(%p.%p)",  sub_1001CBED8,  &qword_100471380));
  id v2 = (void *)qword_100471380;
  qword_100471380 = v1;
}

void sub_1001CE040( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

id sub_1001CE2EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) keyCode];
}

id sub_1001CE304(uint64_t a1)
{
  return [*(id *)(a1 + 32) modifiers];
}

id sub_1001CE468(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1001CE500(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100471390;
  qword_100471390 = (uint64_t)v1;
}

void sub_1001CE660(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBSceneManager, v4);
  int v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  __int16 v8 = (void *)objc_claimAutoreleasedReturnValue([v7 focusedSceneHandle]);
  uint64_t v9 = objc_claimAutoreleasedReturnValue([v8 clientProcessBundleIdentifier]);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void **)(v10 + 48);
  *(void *)(v10 + 4_Block_object_dispose(va, 8) = v9;

  [v7 addObserver:*(void *)(a1 + 32)];
}

id sub_1001CEC38(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48))
  {
    id v2 = *(os_log_s **)(*(void *)(a1 + 32) + 8LL);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v15 = 138412290;
      uint64_t v16 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Remove all for %@ (termination)",  (uint8_t *)&v15,  0xCu);
    }

    [*(id *)(*(void *)(a1 + 32) + 24) removeObject:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(a1 + 32) + 40) removeObject:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(a1 + 32) + 16) removeObject:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(a1 + 32) + 32) removeObject:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(a1 + 32) + 56) removeBundleIdentifier:*(void *)(a1 + 40)];
    return [*(id *)(a1 + 32) _updateAppButtonAccess];
  }

  if (*(_BYTE *)(a1 + 49) && !*(_BYTE *)(a1 + 50) || *(_BYTE *)(a1 + 51))
  {
    if ([*(id *)(*(void *)(a1 + 32) + 40) containsObject:*(void *)(a1 + 40)])
    {
      uint64_t v4 = *(os_log_s **)(*(void *)(a1 + 32) + 8LL);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v5 = *(void *)(a1 + 40);
        int v15 = 138412290;
        uint64_t v16 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Move Play/Pause override from suspended to active for %@",  (uint8_t *)&v15,  0xCu);
      }

      [*(id *)(*(void *)(a1 + 32) + 24) insertObject:*(void *)(a1 + 40) atIndex:0];
      [*(id *)(*(void *)(a1 + 32) + 40) removeObject:*(void *)(a1 + 40)];
    }

    if ([*(id *)(*(void *)(a1 + 32) + 32) containsObject:*(void *)(a1 + 40)])
    {
      int v6 = *(os_log_s **)(*(void *)(a1 + 32) + 8LL);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = *(void *)(a1 + 40);
        int v15 = 138412290;
        uint64_t v16 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Move Volume override from suspended to active for %@",  (uint8_t *)&v15,  0xCu);
      }

      [*(id *)(*(void *)(a1 + 32) + 16) insertObject:*(void *)(a1 + 40) atIndex:0];
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v9 = *(void **)(*(void *)(a1 + 32) + 32LL);
LABEL_24:
      [v9 removeObject:v8];
    }
  }

  else
  {
    if ([*(id *)(*(void *)(a1 + 32) + 24) containsObject:*(void *)(a1 + 40)])
    {
      uint64_t v10 = *(os_log_s **)(*(void *)(a1 + 32) + 8LL);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a1 + 40);
        int v15 = 138412290;
        uint64_t v16 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Move Play/Pause override from active to suspended for %@",  (uint8_t *)&v15,  0xCu);
      }

      [*(id *)(*(void *)(a1 + 32) + 40) addObject:*(void *)(a1 + 40)];
      [*(id *)(*(void *)(a1 + 32) + 24) removeObject:*(void *)(a1 + 40)];
    }

    if ([*(id *)(*(void *)(a1 + 32) + 16) containsObject:*(void *)(a1 + 40)])
    {
      id v12 = *(os_log_s **)(*(void *)(a1 + 32) + 8LL);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v13 = *(void *)(a1 + 40);
        int v15 = 138412290;
        uint64_t v16 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Move Volume override from active to suspended for %@",  (uint8_t *)&v15,  0xCu);
      }

      [*(id *)(*(void *)(a1 + 32) + 32) addObject:*(void *)(a1 + 40)];
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v9 = *(void **)(*(void *)(a1 + 32) + 16LL);
      goto LABEL_24;
    }
  }

  return [*(id *)(a1 + 32) _updateAppButtonAccess];
}

void sub_1001CF450( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1001CF478(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) readyDefaultKioskScene]);
    uint64_t v9 = (void *)WeakRetained[6];
    WeakRetained[6] = v8;

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    _DWORD v10[2] = sub_1001CF544;
    _OWORD v10[3] = &unk_1003D0110;
    id v11 = v6;
    [WeakRetained _prepareAnimationInTransaction:v5 completion:v10];
  }
}

uint64_t sub_1001CF544(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

BOOL sub_1001CF564(id a1, BSTransaction *a2)
{
  return 1;
}

void sub_1001CFAA0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
}

__n128 sub_1001CFAE0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(id *)a2;
  *(void *)(a1 + _Block_object_dispose(va, 8) = *(id *)(a2 + 8);
  *(void *)(a1 + 16) = *(id *)(a2 + 16);
  *(void *)(a1 + 24) = *(id *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 64);
  __n128 result = *(__n128 *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(__n128 *)(a1 + 4_Block_object_dispose(va, 8) = result;
  *(void *)(a1 + 64) = v4;
  return result;
}

void sub_1001CFB40(id *a1)
{
}

void sub_1001CFB7C(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = WeakRetained;
  if (WeakRetained && a2 && !*((void *)WeakRetained + 1))
  {
    id v6 = sub_100083CA8();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10028FB30(v7);
    }

    uint64_t v8 = *(void **)(a1 + 32);
    sub_1001CFAE0((uint64_t)v11, (uint64_t)v5 + 24);
    uint64_t v9 = sub_1001CFC40(v11);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    [v8 addChildTransaction:v10];

    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }
}

PBDefaultAppAnimationTransaction *sub_1001CFC40(id *a1)
{
  id v2 = -[PBDefaultAppAnimationTransaction initWithSceneLayoutViewController:fromViewController:toViewController:isResigning:]( objc_alloc(&OBJC_CLASS___PBDefaultAppAnimationTransaction),  "initWithSceneLayoutViewController:fromViewController:toViewController:isResigning:",  *a1,  a1[1],  a1[2],  *((_BYTE *)a1 + 33) == 0);
  sub_1001CFB40(a1);
  return v2;
}

void sub_1001CFC94(_Unwind_Exception *a1)
{
}

void sub_1001CFCA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = WeakRetained;
  if (WeakRetained && ([WeakRetained[2] hasFired] & 1) == 0)
  {
    uint64_t v6 = objc_opt_class(&OBJC_CLASS___PBSPrepareKioskApplicationAnimationActionResponse);
    id v7 = v3;
    uint64_t v8 = v7;
    if (v6)
    {
      if ((objc_opt_isKindOfClass(v7, v6) & 1) != 0) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 0LL;
      }
    }

    else
    {
      uint64_t v9 = 0LL;
    }

    id v10 = v9;

    [v10 applicationIconRect];
    if (CGRectIsEmpty(v27))
    {
      if (*((_BYTE *)v5 + 57))
      {
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v5[5] view]);
        [v11 setAlpha:1.0];
      }

      sub_1001CFAE0((uint64_t)v26, (uint64_t)(v5 + 3));
      id v12 = sub_1001CFC40(v26);
      uint64_t v13 = objc_claimAutoreleasedReturnValue(v12);
      id v14 = v5[1];
      v5[1] = (id)v13;

      id v15 = sub_100083CA8();
      uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "No frame received from the kiosk app, reverting to default animation",  buf,  2u);
      }
    }

    else
    {
      [v10 applicationIconRect];
      void v5[8] = v17;
      v5[9] = v18;
      v5[10] = v19;
      v5[11] = v20;
      uint64_t v21 = objc_alloc(&OBJC_CLASS____PBKioskAppAnimateTransaction);
      *(void *)&double v22 = sub_1001CFAE0((uint64_t)v24, (uint64_t)(v5 + 3)).n128_u64[0];
      if (v21)
      {
        uint64_t v23 = -[_PBKioskAppAnimateTransaction initWithAnimationContext:](v21, "initWithAnimationContext:", v24, v22);
      }

      else
      {
        sub_1001CFB40(v24);
        uint64_t v23 = 0LL;
      }

      uint64_t v16 = (os_log_s *)v5[1];
      v5[1] = v23;
    }

    [*(id *)(a1 + 32) addChildTransaction:v5[1]];
    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }
}

void sub_1001CFF80(_Unwind_Exception *a1)
{
}

__n128 sub_1001CFF94(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 32);
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 4_Block_object_dispose(va, 8) = v5;
  return result;
}

void sub_1001D05F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1001D061C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_1001D06B8;
  _OWORD v4[3] = &unk_1003D0890;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  BSDispatchMain(v4);
  objc_destroyWeak(&v5);
}

void sub_1001D06A4(_Unwind_Exception *a1)
{
}

void sub_1001D06B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained satisfyMilestone:@"PBKioskAppAnimateDefaultKioskMilestone"];
}

id sub_1001D06EC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[UIApplicationSceneTransitionContext transitionContext]( &OBJC_CLASS___UIApplicationSceneTransitionContext,  "transitionContext"));
  [v2 setAnimationFence:*(void *)(a1 + 32)];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", *(void *)(a1 + 40)));
  [v2 setActions:v3];

  return v2;
}

void sub_1001D0AA8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, id location, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, void *a38)
{
  _Unwind_Resume(a1);
}

void sub_1001D0AEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _animatingView]);
    id v5 = v4;
    if (*((_BYTE *)v3 + 65))
    {
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*((id *)v3 + 4) view]);
      id v7 = [v6 bounds];
      objc_msgSend(v5, "setCenter:", UIRectGetCenter(v7, v8, v9, v10, v11));
    }

    else
    {
      objc_msgSend( v4,  "setCenter:",  UIRectGetCenter(v4, *((double *)v3 + 9), *((double *)v3 + 10), *((double *)v3 + 11), *((double *)v3 + 12)));
    }

    if (*((_BYTE *)v3 + 65)) {
      id v12 = &CGAffineTransformIdentity;
    }
    else {
      id v12 = (const CGAffineTransform *)(a1 + 40);
    }
    __int128 v13 = *(_OWORD *)&v12->c;
    v17[0] = *(_OWORD *)&v12->a;
    v17[1] = v13;
    id v17[2] = *(_OWORD *)&v12->tx;
    [v5 setTransform:v17];
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v5 layer]);
    id v15 = v14;
    double v16 = 0.0;
    if (!*((_BYTE *)v3 + 65)) {
      double v16 = *(double *)(a1 + 88);
    }
    [v14 setCornerRadius:v16];
  }
}

void sub_1001D0BF8(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (!a2 && WeakRetained && WeakRetained[65])
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _animatingView]);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 layer]);
    [v6 setMasksToBounds:0];
  }

  [v4 satisfyMilestone:@"PBKioskAppScaleAnimationMilestone"];
}

void sub_1001D0E30( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1001D0E60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    if (WeakRetained[65]) {
      double v3 = 1.0;
    }
    else {
      double v3 = 0.0;
    }
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _animatingView]);
    [v4 setAlpha:v3];
  }
}

void sub_1001D0ED0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained satisfyMilestone:@"PBKioskAppFadeAnimationMilestone"];
}

BOOL sub_1001D1318(id a1, RBSProcessAssertionInfo *a2)
{
  id v2 = a2;
  BOOL v3 = -[RBSProcessAssertionInfo reason](v2, "reason") == (id)9
    && -[RBSProcessAssertionInfo type](v2, "type") == 3;

  return v3;
}

id sub_1001D184C(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleIdentifier]);
}

uint64_t sub_1001D186C(uint64_t a1)
{
  return (int)[*(id *)(a1 + 32) pid];
}

id sub_1001D1888(uint64_t a1)
{
  return [*(id *)(a1 + 32) isApplication];
}

id sub_1001D18A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) isForegroundVisible];
}

id sub_1001D18B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) isTerminated];
}

id sub_1001D18D0(uint64_t a1)
{
  return [*(id *)(a1 + 32) isViewService];
}

RBSProcessState *__cdecl sub_1001D1934(id a1, NSString *a2, id *a3)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[RBSProcessPredicate predicateMatchingBundleIdentifier:]( &OBJC_CLASS___RBSProcessPredicate,  "predicateMatchingBundleIdentifier:",  a2));
  id v5 = objc_claimAutoreleasedReturnValue( +[RBSProcessHandle handleForPredicate:error:]( &OBJC_CLASS___RBSProcessHandle, "handleForPredicate:error:", v4, 0LL));
  *a3 = v5;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 currentState]);

  return (RBSProcessState *)v6;
}

void sub_1001D1BCC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1001D1BE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[RBSProcessStateDescriptor descriptor](&OBJC_CLASS___RBSProcessStateDescriptor, "descriptor"));
  [v4 setValues:9];
  uint64_t v8 = FBSSceneVisibilityEndowmentNamespace;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v8, 1LL));
  [v4 setEndowmentNamespaces:v5];

  [v3 setStateDescriptor:v4];
  [v3 setServiceClass:33];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_1001D1D30;
  void v6[3] = &unk_1003D31B8;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  [v3 setUpdateHandler:v6];
  objc_destroyWeak(&v7);
}

void sub_1001D1D14(_Unwind_Exception *a1)
{
}

void sub_1001D1D30(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v9 = WeakRetained;
  if (WeakRetained)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001D1DF8;
    block[3] = &unk_1003D09B8;
    id v11 = WeakRetained;
    id v12 = v6;
    id v13 = v7;
    dispatch_async(&_dispatch_main_q, block);
  }
}

id sub_1001D1DF8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _process:*(void *)(a1 + 40) stateDidUpdate:*(void *)(a1 + 48)];
}

id sub_1001D2284(uint64_t a1, void *a2)
{
  return [a2 setPredicates:*(void *)(a1 + 32)];
}

BOOL sub_1001D2358(id a1, NSString *a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[RBSProcessPredicate predicateMatchingBundleIdentifier:]( &OBJC_CLASS___RBSProcessPredicate,  "predicateMatchingBundleIdentifier:",  a2));
  uint64_t v8 = 0LL;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[RBSProcessHandle handleForPredicate:error:]( &OBJC_CLASS___RBSProcessHandle,  "handleForPredicate:error:",  v2,  &v8));
  uint64_t v4 = v8;

  if (v4)
  {
    LOBYTE(v5) = 0;
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 currentState]);
    unsigned int v5 = [v6 isRunning] ^ 1;
  }

  return v5;
}

void sub_1001D260C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1001D262C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setEvents:2];
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[RBSProcessPredicate predicateMatchingProcessTypeApplication]( &OBJC_CLASS___RBSProcessPredicate,  "predicateMatchingProcessTypeApplication"));
  uint64_t v8 = v4;
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v8, 1LL));
  [v3 setPredicates:v5];

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_1001D2750;
  void v6[3] = &unk_1003DC020;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  [v3 setPreventLaunchUpdateHandle:v6];
  objc_destroyWeak(&v7);
}

void sub_1001D2734(_Unwind_Exception *a1)
{
}

void sub_1001D2750(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _handlePreventLaunchUpdate:v4];
}

id sub_1001D2894(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_main_handlePreventLaunchUpdate:", *(void *)(a1 + 40));
}

void sub_1001D3238( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, id location)
{
}

void sub_1001D329C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472LL;
  double v9 = sub_1001D3378;
  double v10 = &unk_1003D1D98;
  objc_copyWeak(v11, (id *)(a1 + 40));
  v11[1] = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[TVSUITextAlertButton buttonWithTitle:type:handler:]( &OBJC_CLASS___TVSUITextAlertButton,  "buttonWithTitle:type:handler:",  v5,  0LL,  &v7));
  objc_msgSend(*(id *)(a1 + 32), "addButton:", v6, v7, v8, v9, v10);

  objc_destroyWeak(v11);
}

void sub_1001D3360(_Unwind_Exception *a1)
{
}

void sub_1001D3378(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  [v3 userNotificationViewController:WeakRetained didSelectButtonIndex:*(void *)(a1 + 40)];
}

void sub_1001D33C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  objc_msgSend( v3,  "userNotificationViewController:didSelectButtonIndex:",  WeakRetained,  objc_msgSend(*(id *)(a1 + 32), "integerValue"));
}

id sub_1001D3A8C()
{
  if (qword_1004713A8 != -1) {
    dispatch_once(&qword_1004713A8, &stru_1003DC230);
  }
  return (id)qword_1004713A0;
}

UPAddProfileRequest *__cdecl sub_1001D5E2C(id a1, _PBProfileUpdateContext *a2)
{
  return (UPAddProfileRequest *)(id)objc_claimAutoreleasedReturnValue( -[_PBProfileUpdateContext addRequest]( a2,  "addRequest"));
}

UPUpdateProfileRequest *__cdecl sub_1001D5E4C(id a1, _PBProfileUpdateContext *a2)
{
  return (UPUpdateProfileRequest *)(id)objc_claimAutoreleasedReturnValue( -[_PBProfileUpdateContext updateRequest]( a2,  "updateRequest"));
}

UPRemoveProfileRequest *__cdecl sub_1001D5E6C(id a1, _PBProfileUpdateContext *a2)
{
  return (UPRemoveProfileRequest *)(id)objc_claimAutoreleasedReturnValue( -[_PBProfileUpdateContext removeRequest]( a2,  "removeRequest"));
}

NSString *__cdecl sub_1001D5E8C(id a1, _PBProfileUpdateContext *a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(-[_PBProfileUpdateContext profile](a2, "profile"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "pb_identityLogString"));

  return (NSString *)v3;
}

uint64_t sub_1001D6584(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1001D65A4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[UMUserManager sharedManager](&OBJC_CLASS___UMUserManager, "sharedManager"));
  id v3 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_1001D6658;
  void v6[3] = &unk_1003D6068;
  id v7 = v3;
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  id v8 = v4;
  uint64_t v9 = v5;
  [v2 deleteUserPersonaWithPersonaUniqueString:v7 passcodeData:0 completionHandler:v6];
}

void sub_1001D6658(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001D3A8C();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1002907FC((uint64_t)a1, (uint64_t)v3, v6);
    }

    id v7 = *(void (**)(void))(a1[5] + 16LL);
  }

  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = a1[4];
      int v13 = 136315650;
      id v14 = "-[PBProfileAccountsController _removePersonaWithPersonaUniqueIdentifier:isActiveProfile:completion:]_block_invoke_3";
      __int16 v15 = 2160;
      uint64_t v16 = 1752392040LL;
      __int16 v17 = 2112;
      uint64_t v18 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%s: Finished removing persona. {personaUniqueIdentifier=%{mask.hash}@}",  (uint8_t *)&v13,  0x20u);
    }

    id v7 = *(void (**)(void))(a1[5] + 16LL);
  }

  v7();
  id v9 = sub_1001D3A8C();
  double v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = v10;
  os_signpost_id_t v12 = a1[6];
  if (v12 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    LOWORD(v13) = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v11,  OS_SIGNPOST_INTERVAL_END,  v12,  "remove persona",  "",  (uint8_t *)&v13,  2u);
  }
}

void sub_1001D69E0(id a1)
{
  id v1 = sub_1001D3A8C();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = 136315138;
    id v4 = "-[PBProfileAccountsController _activateITunesAccountWithProfile:]_block_invoke";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%s: Finished saving iTunes account.",  (uint8_t *)&v3,  0xCu);
  }
}

void sub_1001D6A84(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = sub_1001D3A8C();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_1002908A8();
  }
}

void sub_1001D6C30(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  id v4 = a3;
  id v5 = sub_1001D3A8C();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 136315138;
      id v9 = "-[PBProfileAccountsController _deactivateCurrentlyActiveITunesAccount]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%s: Finished deactivating iTunes account.",  (uint8_t *)&v8,  0xCu);
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    sub_100290914();
  }
}

void sub_1001D7148( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_1001D7174(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    uint64_t v28 = 0LL;
    id WeakRetained = objc_loadWeakRetained(a1 + 7);
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    id v29 = v5;
    id obj = v5;
    id v8 = [obj countByEnumeratingWithState:&v37 objects:v47 count:16];
    if (!v8) {
      goto LABEL_26;
    }
    id v9 = v8;
    uint64_t v10 = *(void *)v38;
    uint64_t v11 = ACAccountTypeIdentifierAppleAccount;
    uint64_t v34 = ACAccountTypeIdentifieriTunesStore;
    uint64_t v31 = a1 + 6;
    uint64_t v32 = ACAccountTypeIdentifierGameCenter;
    id v30 = a1 + 5;
    os_signpost_id_t v12 = a1 + 4;
    while (1)
    {
      for (CFIndex i = 0LL; i != v9; CFIndex i = (char *)i + 1)
      {
        if (*(void *)v38 != v10) {
          objc_enumerationMutation(obj);
        }
        id v14 = *(void **)(*((void *)&v37 + 1) + 8LL * (void)i);
        if ((objc_msgSend(v14, "ams_isLocalOrSandboxAccount", v28) & 1) == 0)
        {
          __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "aa_altDSID"));
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v14 accountType]);
          __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 identifier]);

          unsigned __int8 v18 = [v17 isEqual:v11];
          id v19 = v12;
          if ((v18 & 1) == 0)
          {
            if ([v17 isEqual:v34])
            {
              __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "ams_homeUserAllIdentifiers"));
              id v21 = [v20 count];

              id v19 = v30;
              if (!v21) {
                goto LABEL_15;
              }
LABEL_22:
              id v23 = 0LL;
LABEL_23:

              continue;
            }

            unsigned __int8 v22 = [v17 isEqual:v32];
            id v19 = v31;
            if ((v22 & 1) == 0)
            {
              id v26 = sub_1001D3A8C();
              CGRect v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)__int128 buf = 136315650;
                uint64_t v42 = "-[PBProfileAccountsController _removeOrphanAccountsWithProfileStoreSnapshot:]_block_invoke";
                __int16 v43 = 2114;
                uint64_t v44 = v17;
                __int16 v45 = 2112;
                uint64_t v46 = v14;
                _os_log_error_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "%s: Unexpected account type identifier, ignoring account. {typeIdentifier=%{public}@, account=%@}",  buf,  0x20u);
              }

              goto LABEL_22;
            }
          }

void sub_1001D74F8(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  id v7 = sub_1001D3A8C();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v8;
  if ((a2 & 1) != 0)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v10 = 136315394;
      uint64_t v11 = "-[PBProfileAccountsController _removeOrphanAccountsWithProfileStoreSnapshot:]_block_invoke";
      __int16 v12 = 2114;
      int v13 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "%s: Account removed successfully. {identifier=%{public}@}",  (uint8_t *)&v10,  0x16u);
    }
  }

  else if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    sub_100290AE8((uint64_t)v6, v5, v9);
  }
}

void sub_1001D769C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_1001D3A8C();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100290C38();
    }
  }

  else
  {
    id v35 = v5;
    __int128 v36 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    id v9 = v5;
    id v10 = [v9 countByEnumeratingWithState:&v41 objects:v46 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v42;
      do
      {
        for (CFIndex i = 0LL; i != v11; CFIndex i = (char *)i + 1)
        {
          if (*(void *)v42 != v12) {
            objc_enumerationMutation(v9);
          }
          id v14 = *(void **)(*((void *)&v41 + 1) + 8LL * (void)i);
          __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 objectForKeyedSubscript:kUMUserPersonaTypeKey]);
          uint64_t v16 = objc_opt_class(&OBJC_CLASS___NSNumber);
          id v17 = v15;
          unsigned __int8 v18 = v17;
          if (v16)
          {
            if ((objc_opt_isKindOfClass(v17, v16) & 1) != 0) {
              id v19 = v18;
            }
            else {
              id v19 = 0LL;
            }
          }

          else
          {
            id v19 = 0LL;
          }

          id v20 = v19;

          if (v20 && [v20 unsignedIntegerValue] == (id)6)
          {
            id v21 = (void *)objc_claimAutoreleasedReturnValue([v14 objectForKeyedSubscript:kUMUserPersonaUniqueStringKey]);
            uint64_t v22 = objc_opt_class(&OBJC_CLASS___NSString);
            id v23 = v21;
            id v24 = v23;
            if (v22)
            {
              if ((objc_opt_isKindOfClass(v23, v22) & 1) != 0) {
                id v25 = v24;
              }
              else {
                id v25 = 0LL;
              }
            }

            else
            {
              id v25 = 0LL;
            }

            id v26 = v25;

            if (v26) {
              -[NSMutableSet addObject:](v36, "addObject:", v26);
            }
          }
        }

        id v11 = [v9 countByEnumeratingWithState:&v41 objects:v46 count:16];
      }

      while (v11);
    }

    CGRect v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) profiles]);
    uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "bs_compactMap:", &stru_1003DC1E8));

    -[NSMutableSet minusSet:](v36, "minusSet:", v28);
    if (-[NSMutableSet count](v36, "count"))
    {
      id v29 = sub_1001D3A8C();
      id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100290BCC();
      }
    }

    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    id v8 = v36;
    id v31 = -[os_log_s countByEnumeratingWithState:objects:count:]( v8,  "countByEnumeratingWithState:objects:count:",  &v37,  v45,  16LL);
    if (v31)
    {
      id v32 = v31;
      uint64_t v33 = *(void *)v38;
      do
      {
        for (j = 0LL; j != v32; j = (char *)j + 1)
        {
          if (*(void *)v38 != v33) {
            objc_enumerationMutation(v8);
          }
          [*(id *)(a1 + 40) _removePersonaWithPersonaUniqueIdentifier:*(void *)(*((void *)&v37 + 1) + 8 * (void)j) isActiveProfile:0 completion:0];
        }

        id v32 = -[os_log_s countByEnumeratingWithState:objects:count:]( v8,  "countByEnumeratingWithState:objects:count:",  &v37,  v45,  16LL);
      }

      while (v32);
    }

    id v6 = 0LL;
    id v5 = v35;
  }
}

id sub_1001D79F4(id a1, UPProfile *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[UPProfile personaUniqueIdentifier](a2, "personaUniqueIdentifier"));
}

void sub_1001D7A7C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.PineBoard.userProfiles", "AccountsController");
  id v2 = (void *)qword_1004713A0;
  qword_1004713A0 = (uint64_t)v1;
}

id sub_1001D7BA0(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1001D7C38(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1004713B0;
  qword_1004713B0 = (uint64_t)v1;
}

void sub_1001D7D20(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  id v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  id v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  id v10 = NSStringFromClass(v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  4LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = *(void **)(v13 + 32);
  *(void *)(v13 + 32) = v12;
}

uint64_t sub_1001D8114(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      id v6 = 0LL;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8LL * (void)v6) + 16LL))(*(void *)(*((void *)&v8 + 1) + 8LL * (void)v6));
        id v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v4);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1LL);
  }
  return result;
}

void sub_1001D82F8(_Unwind_Exception *a1)
{
}

void sub_1001D8314(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000F7474();
  __int128 v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = 136315650;
    id v14 = "-[PBRoutingUIManager prepareUIForSystemOverlayPresentationWithCompletion:]_block_invoke";
    __int16 v15 = 1024;
    BOOL v16 = v5 != 0LL;
    __int16 v17 = 2114;
    id v18 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%s - Requested the routing ui view service successfully?: %d, error: %{public}@",  (uint8_t *)&v13,  0x1Cu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  __int128 v10 = WeakRetained;
  if (v5 && WeakRetained)
  {
    __int128 v11 = -[PBViewServiceContentPresentingViewController initWithRemoteViewController:supportsInterruption:]( objc_alloc(&OBJC_CLASS___PBViewServiceContentPresentingViewController),  "initWithRemoteViewController:supportsInterruption:",  v5,  1LL);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  else
  {
    uint64_t v12 = *(void *)(a1 + 32);
    if (v12) {
      (*(void (**)(uint64_t, void, id))(v12 + 16))(v12, 0LL, v6);
    }
  }
}

id sub_1001D84DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) _dismissRoutingUIWithReason:@"Coordinated transition" completion:a3];
}

id sub_1001D8C78(uint64_t a1, void *a2)
{
  return [a2 setWallpaperEnabled:*(unsigned __int8 *)(a1 + 32)];
}

void sub_1001D8D64( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1001D8D80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained invalidateScenePresentation];
}

id sub_1001D9088(uint64_t a1)
{
  return [*(id *)(a1 + 32) _removeFullDisplayTransitionView];
}

void sub_1001D9754( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, id location)
{
}

void sub_1001D9778(uint64_t a1, int a2)
{
  id v4 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v6 = sub_1000849C8();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v8 = @"NO";
      if (a2) {
        __int128 v8 = @"YES";
      }
      *(_DWORD *)__int128 buf = 138412290;
      id v18 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Shroud presentation complete with success: %@",  buf,  0xCu);
    }

    __int128 v9 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
    __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 shroudController]);

    uint64_t v11 = objc_claimAutoreleasedReturnValue([v10 agentDidPresentShroud:WeakRetained]);
    uint64_t v12 = *(void *)(a1 + 32);
    int v13 = *(void **)(v12 + 96);
    *(void *)(v12 + 96) = v11;

    dispatch_time_t v14 = dispatch_time(0LL, 1500000000LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001D991C;
    block[3] = &unk_1003D0890;
    objc_copyWeak(&v16, v4);
    dispatch_after(v14, &_dispatch_main_q, block);
    objc_destroyWeak(&v16);
  }
}

void sub_1001D991C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_1000849C8();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Minimum shroud duration timer fired", v4, 2u);
    }

    WeakRetained[14] &= ~2uLL;
    [WeakRetained _removeShroudViewIfNeeded];
  }
}

void sub_1001D9A9C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1001D9AB8(uint64_t a1, int a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = sub_1000849C8();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 134217984;
    uint64_t v12 = (const __CFString *)WeakRetained;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "shroud dismissed - strongSelf: %p",  (uint8_t *)&v11,  0xCu);
  }

  if (WeakRetained)
  {
    id v6 = sub_1000849C8();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v8 = @"NO";
      if (a2) {
        __int128 v8 = @"YES";
      }
      int v11 = 138412290;
      uint64_t v12 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Remove shroud view completed with success: %@",  (uint8_t *)&v11,  0xCu);
    }

    [WeakRetained[12] invalidate];
    id v9 = WeakRetained[12];
    WeakRetained[12] = 0LL;

    [WeakRetained[13] removeFromSuperview];
    id v10 = WeakRetained[13];
    WeakRetained[13] = 0LL;

    [WeakRetained _relinquishShroudingDeactivationAssertion];
  }
}

id sub_1001D9D5C(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 clientProcess]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleIdentifier]);
  id v5 = [v4 isEqualToString:*(void *)(a1 + 32)];

  return v5;
}

void sub_1001DA1F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1001DA218(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  if (v1)
  {
    id v2 = v1;
    id v3 = sub_1000849C8();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Shroud action assertion invalidated", v5, 2u);
    }

    v2[14] &= ~1uLL;
    [v2 _removeShroudViewIfNeeded];
  }

void sub_1001DA444( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

uint64_t sub_1001DA460(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateFocusEligibility];

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1001DA5D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1001DA5E8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001DA5F8(uint64_t a1)
{
}

void sub_1001DA610(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _viewForPresentationMode:*(void *)(a1 + 48) withCurrentContentView:a2]);
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1001DA96C(_Unwind_Exception *a1)
{
}

id sub_1001DA9A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 scenePresenter]);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 presentationViewForElement:WeakRetained]);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  return v4;
}

id sub_1001DAA1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSceneManager sharedInstance](&OBJC_CLASS___PBSceneManager, "sharedInstance"));
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 scenePresenter]);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 snapshotPresentationViewForElement:WeakRetained]);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  return v4;
}

void sub_1001DAA98(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained[7] sceneIfExists]);

    if (v6)
    {
      id v7 = objc_loadWeakRetained(v5 + 8);
      [v7 applicationSceneView:v5 willLoadSnapshotWithRequest:v3];
    }

    else
    {
      [v3 setPreferLaunchImage:1];
    }
  }
}

id sub_1001DB3E4(uint64_t a1)
{
  return [*(id *)(a1 + 40) setAlpha:0.0];
}

id sub_1001DB418(uint64_t a1)
{
  return [*(id *)(a1 + 40) removeFromSuperview];
}

void sub_1001DBF48(id a1)
{
  id v1 = (void *)qword_1004713C8;
  qword_1004713C8 = (uint64_t)@"DisplayModeBinding";
}

void sub_1001DC010(id a1, PBExternalControlSystem *a2)
{
}

void sub_1001DC144(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBDisplayManager sharedInstance](&OBJC_CLASS___PBDisplayManager, "sharedInstance"));
  objc_msgSend( v1,  "tvs_bind:toObject:withKeyPath:options:",  @"DisplayModeBinding",  v2,  @"currentDisplayMode",  0);
}

void sub_1001DC90C(id a1, BOOL a2)
{
  if (a2) {
    +[PBDataReportingService incrementOccurrenceCountForAction:]( &OBJC_CLASS___PBDataReportingService,  "incrementOccurrenceCountForAction:",  5LL);
  }
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[PBSExternalControlFeature featureForType:]( &OBJC_CLASS___PBSExternalControlFeature,  "featureForType:",  1LL));
  uint64_t v3 = [v2 isConfiguredForUse] ^ 1;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[TVSPreferences sharedPineBoardServicesPreferences]( &OBJC_CLASS___TVSPreferences,  "sharedPineBoardServicesPreferences"));
  objc_msgSend(v4, "setPbs_shouldShowUnconfiguredVolumeButtonsAlert:", v3);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v5 postNotificationName:@"PBExternalControlPolicyDidUpdateNotification" object:0];
}

void sub_1001DC9AC(uint64_t a1)
{
  id v2 = sub_100082C7C();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "PROG: Retriggering remote programming attempt.",  v6,  2u);
  }

  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 externalControlSystem]);
  [v4 externalControlSystemDidUpdatePolicy:v5];
}

void sub_1001DD834(_Unwind_Exception *a1)
{
}

void sub_1001DD884(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _performToggleMuteOrShowUnconfiguredAlert];
}

void sub_1001DD8B0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v5 = [v3 state];

  [WeakRetained _performVolumeUpWithGestureRecognizerState:v5];
}

void sub_1001DD908(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v5 = [v3 state];

  [WeakRetained _performVolumeDownWithGestureRecognizerState:v5];
}

void sub_1001DD960(id a1, PBSystemGestureActivationContext *a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[PBSystemGestureManager sharedInstance](&OBJC_CLASS___PBSystemGestureManager, "sharedInstance"));
  [v2 cancelSystemGesture:32];

  id v3 = sub_100082CF4();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Handling active source remote event", v6, 2u);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBExternalControlSystem sharedSystem](&OBJC_CLASS___PBExternalControlSystem, "sharedSystem"));
  [v5 sendAction:9 withCompletion:0];
}

void sub_1001DE198(id a1, UIAlertAction *a2)
{
  dispatch_time_t v2 = dispatch_time(0LL, 2000000000LL);
  dispatch_after(v2, &_dispatch_main_q, &stru_1003DC418);
}

void sub_1001DE1CC(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[PBProcessManager sharedInstance](&OBJC_CLASS___PBProcessManager, "sharedInstance"));
  dispatch_time_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", @"prefs:root=VOLUME"));
  [v1 openApplication:@"com.apple.TVSettings" launchURL:v2 options:0 suspended:0 completion:0];
}

void sub_1001DE674( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
}

void sub_1001DE6B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained volumeController]);

  __int128 v8 = (void *)objc_claimAutoreleasedReturnValue(+[PBNowPlayingManager sharedInstance](&OBJC_CLASS___PBNowPlayingManager, "sharedInstance"));
  unsigned int v9 = [v8 nowPlayingAppFocused];

  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[PBNowPlayingManager sharedInstance](&OBJC_CLASS___PBNowPlayingManager, "sharedInstance"));
  unsigned int v11 = [v10 isPresenting];

  unsigned int v12 = [v7 odeonActiveForOutputContext:1];
  unsigned int v13 = [v7 volumeSupportedForOutputContext:1];
  id v14 = sub_100082DE4();
  __int16 v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
  {
    v23[0] = 67109888;
    v23[1] = v12;
    __int16 v24 = 1024;
    unsigned int v25 = v9;
    __int16 v26 = 1024;
    unsigned int v27 = v11;
    __int16 v28 = 1024;
    unsigned int v29 = v13;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "Volume behavior state change - isOdeon:%{BOOL}d nowPlayingFG:%{BOOL}d systemNPActive:%{BOOL}d supportsSysMusic:%{BOOL}d",  (uint8_t *)v23,  0x1Au);
  }

  if ([v5 isEqualToString:@"CEC/IR Mode"])
  {
    id v16 = [(id)objc_opt_class(*(void *)(a1 + 32)) sharedSystem];
    __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    id v18 = v17;
    uint64_t v19 = 0LL;
LABEL_11:
    [v17 setVolumeButtonBehavior:v19];

    goto LABEL_12;
  }

  if ([v5 isEqualToString:@"Core Audio (System Audio)"])
  {
    id v20 = [(id)objc_opt_class(*(void *)(a1 + 32)) sharedSystem];
    __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(v20);
    id v18 = v17;
    uint64_t v19 = 1LL;
    goto LABEL_11;
  }

  if ([v5 isEqualToString:@"System Music"])
  {
    id v21 = [(id)objc_opt_class(*(void *)(a1 + 32)) sharedSystem];
    __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(v21);
    id v18 = v17;
    uint64_t v19 = 2LL;
    goto LABEL_11;
  }

  if ([v5 isEqualToString:@"Custom"])
  {
    id v22 = [(id)objc_opt_class(*(void *)(a1 + 32)) sharedSystem];
    __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(v22);
    id v18 = v17;
    uint64_t v19 = 3LL;
    goto LABEL_11;
  }

__CFString *sub_1001DE8D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  dispatch_time_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained volumeController]);

  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PBHardwareButtonAccessManager sharedInstance]( &OBJC_CLASS___PBHardwareButtonAccessManager,  "sharedInstance"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 appWithVolumeButtonAccess]);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[PBNowPlayingManager sharedInstance](&OBJC_CLASS___PBNowPlayingManager, "sharedInstance"));
  unsigned int v6 = [v5 nowPlayingAppFocused];

  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[PBNowPlayingManager sharedInstance](&OBJC_CLASS___PBNowPlayingManager, "sharedInstance"));
  unsigned int v8 = [v7 isPresenting];

  unsigned int v9 = [v2 odeonActiveForOutputContext:1];
  unsigned int v10 = [v2 volumeSupportedForOutputContext:1];
  id v11 = sub_100082DE4();
  unsigned int v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
  {
    v19[0] = 67109888;
    v19[1] = v9;
    __int16 v20 = 1024;
    unsigned int v21 = v6;
    __int16 v22 = 1024;
    unsigned int v23 = v8;
    __int16 v24 = 1024;
    unsigned int v25 = v10;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Volume behavior updated - isOdeon:%{BOOL}d nowPlayingFG:%{BOOL}d systemNPActive:%{BOOL}d supportsSysMusic:%{BOOL}d",  (uint8_t *)v19,  0x1Au);
  }

  uint64_t v13 = (v9 | v6 | v8) & v10;
  if ((v13 & 1) != 0)
  {
    id v14 = 0LL;
    __int16 v15 = @"System Music";
  }

  else
  {
    id v14 = [v2 volumeSupportedForOutputContext:0];
    if ((_DWORD)v14) {
      __int16 v15 = @"Core Audio (System Audio)";
    }
    else {
      __int16 v15 = @"CEC/IR Mode";
    }
  }

  [v2 setVolumeNotificationsEnabled:v14 forOutputContext:0];
  [v2 setVolumeNotificationsEnabled:v13 forOutputContext:1];
  if (v4) {
    id v16 = @"Custom";
  }
  else {
    id v16 = (__CFString *)v15;
  }
  __int16 v17 = v16;

  return v17;
}

id sub_1001DEACC(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

id sub_1001DEAF4(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

id sub_1001DEB1C(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

id sub_1001DEB44(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

id sub_1001DEB6C(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

void sub_1001DED04(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___PBExternalControlSystem);
  dispatch_time_t v2 = (void *)qword_1004713D0;
  qword_1004713D0 = (uint64_t)v1;
}

void sub_1001E09E8(uint64_t a1)
{
  id WeakRetained = (double *)objc_loadWeakRetained((id *)(a1 + 32));
  dispatch_time_t v2 = WeakRetained;
  if (WeakRetained) {
    objc_msgSend( WeakRetained,  "_updateConstraintsForFocusedFrame:shouldDodge:",  objc_msgSend( WeakRetained,  "_shouldDodgeFocusedFrame:",  WeakRetained[35],  WeakRetained[36],  WeakRetained[37],  WeakRetained[38]),  WeakRetained[35],  WeakRetained[36],  WeakRetained[37],  WeakRetained[38]);
  }
  [v2 _cancelUpdateForDodgingFocusedFrame];
}

void sub_1001E13D0(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _parentView]);
  [v1 layoutIfNeeded];
}

uint64_t sub_1001E1400(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1001E14E4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1001E1500(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleKeyboardNotification];
}

id sub_1001E195C(id result, int a2)
{
  if (a2)
  {
    uint64_t v2 = *((void *)result + 4);
    v3.receiver = (id)*((void *)result + 5);
    v3.super_class = (Class)&OBJC_CLASS___PBControlCenterRemoteViewController;
    return objc_msgSendSuper2(&v3, "dismissWithResult:", v2);
  }

  return result;
}

id sub_1001E1D10(uint64_t a1)
{
  return (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sharedInstance]);
}

void sub_1001E1DA8(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) _init];
  uint64_t v2 = (void *)qword_1004713E0;
  qword_1004713E0 = (uint64_t)v1;
}

void sub_1001E1FDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___PBWindowManager, v4);
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v6]);

  unsigned int v8 = objc_alloc(&OBJC_CLASS___PBSystemOverlayController);
  unsigned int v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32));
  unsigned int v10 = NSStringFromClass(v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  unsigned int v12 = -[PBSystemOverlayController initWithName:layoutLevel:presentationHandler:delegate:]( v8,  "initWithName:layoutLevel:presentationHandler:delegate:",  v11,  11LL,  v7,  *(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = *(void **)(v13 + 56);
  *(void *)(v13 + 56) = v12;

  uint64_t v16 = objc_opt_self(&OBJC_CLASS___PBDefaultOpenAppTransitioner, v15);
  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v17]);

  [v18 addObserver:*(void *)(a1 + 32)];
  uint64_t v20 = objc_opt_self(&OBJC_CLASS___PBDictationManager, v19);
  unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  __int16 v22 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v21]);

  [v22 addObserver:*(void *)(a1 + 32)];
  uint64_t v24 = objc_opt_self(&OBJC_CLASS___PBPowerManager, v23);
  unsigned int v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
  __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v25]);

  [v26 addObserver:*(void *)(a1 + 32)];
  uint64_t v28 = objc_opt_self(&OBJC_CLASS___PBSystemGestureManager, v27);
  unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
  id v30 = (void *)objc_claimAutoreleasedReturnValue([v3 instanceForClass:v29]);

  [*(id *)(a1 + 32) _setupGesturesWithManager:v30];
}

id sub_1001E2190(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentSiriAccessibilityUI];
}

void sub_1001E24F0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001E2510(id a1)
{
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[SASPresentationConnectionListener listener](&OBJC_CLASS___SASPresentationConnectionListener, "listener"));
  uint64_t v2 = (void *)qword_1004713F0;
  qword_1004713F0 = v1;

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[SASSignalConnectionListener listener](&OBJC_CLASS___SASSignalConnectionListener, "listener"));
  uint64_t v4 = (void *)qword_1004713F8;
  qword_1004713F8 = v3;
}

LABEL_37:
  return v13;
}

BOOL sub_1001E3B10(uint64_t a1, uint64_t a2, void *a3)
{
  return v4 < *(double *)(a1 + 32);
}

void sub_1001E447C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_1001E44FC;
  _OWORD v4[3] = &unk_1003D6708;
  id v3 = *(id *)(a1 + 32);
  void v4[4] = WeakRetained;
  id v5 = v3;
  [WeakRetained _presentAssistantViewWithCompletion:v4];
}

id sub_1001E44FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(uint64_t, uint64_t, void))(v3 + 16))(v3, a2, 0LL);
  }
  return [*(id *)(a1 + 32) _cancelSiriActivation];
}

void sub_1001E46BC(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if ([a1[4] dismissalReason] == (id)21) {
    goto LABEL_2;
  }
  double v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained siriButtonDownAssertion]);
  if (v4)
  {
  }

  else
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained siriActivationAssertion]);

    if (!v5)
    {
LABEL_2:
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472LL;
      _DWORD v9[2] = sub_1001E4848;
      _OWORD v9[3] = &unk_1003CFF30;
      id v10 = a1[5];
      if (([WeakRetained _dismissAssistantViewWithCompletion:v9] & 1) == 0)
      {
        id v3 = a1[5];
        if (v3) {
          (*((void (**)(id, void, void))v3 + 2))(v3, 0LL, 0LL);
        }
      }

      goto LABEL_14;
    }
  }

  id v6 = sub_100083E88();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 136315138;
    unsigned int v12 = "-[PBSiriManager siriPresentation:requestsDismissalWithOptions:withHandler:]_block_invoke";
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%s: requestDismissal denied as new activation is in flight.",  buf,  0xCu);
  }

  id v8 = a1[5];
  if (v8) {
    (*((void (**)(id, void, void))v8 + 2))(v8, 0LL, 0LL);
  }
  [WeakRetained _cancelSiriActivation];
LABEL_14:
}

uint64_t sub_1001E4848(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0LL);
  }
  return result;
}

void sub_1001E4AB0(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v3 = [a1[4] punchoutStyle];
  if (v3 != (id)1)
  {
    double v4 = (void *)objc_claimAutoreleasedReturnValue([a1[4] bundleIdentifier]);
    [WeakRetained hideAssistantViewForApplication:v4];
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] bundleIdentifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a1[4] url]);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1001E4BB0;
  _OWORD v7[3] = &unk_1003D0048;
  id v8 = a1[5];
  [WeakRetained _launchApplicationWithBundleIdentifier:v5 withURL:v6 launchOverSiri:v3 != (id)1 completion:v7];
}

void sub_1001E4BB0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = sub_100083E88();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1002910CC((uint64_t)v4, v6);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001E50C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1001E54BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1001E54E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v6 = [WeakRetained dismissAssistant];

  v4[2](v4, v6);
}

void sub_1001E568C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1001E56B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained[15] invalidate];
  id v8 = WeakRetained[15];
  WeakRetained[15] = 0LL;

  [WeakRetained[16] invalidate];
  id v9 = WeakRetained[16];
  WeakRetained[16] = 0LL;

  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[PBSystemOverlayDismissalRequest dismissalRequestForSession:]( &OBJC_CLASS___PBMutableSystemOverlayDismissalRequest,  "dismissalRequestForSession:",  *(void *)(a1 + 32)));
  [v10 setAnimated:0];
  id v11 = *(void **)(*(void *)(a1 + 40) + 56LL);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1001E5804;
  void v13[3] = &unk_1003DC4D0;
  objc_copyWeak(&v16, (id *)(a1 + 56));
  id v14 = *(id *)(a1 + 48);
  id v12 = v6;
  id v15 = v12;
  [v11 dismissWithRequest:v10 completion:v13];

  objc_destroyWeak(&v16);
}

void sub_1001E57F0(_Unwind_Exception *a1)
{
}

void sub_1001E5804(uint64_t a1, uint64_t a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setVisibleState:0];
  [WeakRetained _cancelPreheating];
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v5, a2);
  }
  if (WeakRetained)
  {
    id v6 = WeakRetained[23];
    WeakRetained[23] = 0LL;

    id v7 = WeakRetained[24];
    WeakRetained[24] = 0LL;

    [WeakRetained[21] invalidate];
    id v8 = WeakRetained[21];
    WeakRetained[21] = 0LL;
  }

  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v9, a2);
  }
}